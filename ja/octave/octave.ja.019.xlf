<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="d8cb935bd696fba52ceb0acbe48e4e3aff3c8f73" translate="yes" xml:space="preserve">
          <source>The string is written to the file with no additional formatting. Use &lt;code&gt;fdisp&lt;/code&gt; instead to automatically append a newline character appropriate for the local machine.</source>
          <target state="translated">文字列は追加のフォーマットなしでファイルに書き込まれます。代わりに &lt;code&gt;fdisp&lt;/code&gt; を使用して、ローカルマシンに適した改行文字を自動的に追加します。</target>
        </trans-unit>
        <trans-unit id="fdcf603d8f4548f603e553134aaf223621f400f8" translate="yes" xml:space="preserve">
          <source>The string is written verbatim to the standard output. Use &lt;code&gt;disp&lt;/code&gt; to automatically append a newline character appropriate for the local machine.</source>
          <target state="translated">文字列はそのまま標準出力に書き込まれます。 &lt;code&gt;disp&lt;/code&gt; を使用して、ローカルマシンに適した改行文字を自動的に追加します。</target>
        </trans-unit>
        <trans-unit id="d81426525d2e27f04523b286cb21b46da40ddd01" translate="yes" xml:space="preserve">
          <source>The string must be in one of the following formats where a and b are real numbers and the complex unit is &lt;code&gt;'i'&lt;/code&gt; or &lt;code&gt;'j'&lt;/code&gt;:</source>
          <target state="translated">文字列は、aとbが実数で、複素数単位が &lt;code&gt;'i'&lt;/code&gt; または &lt;code&gt;'j'&lt;/code&gt; である次のいずれかの形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="f790ee92e81eb7bab3a0391efa2229a45beeb350" translate="yes" xml:space="preserve">
          <source>The string representation used by Octave is an array of characters, so internally the string &lt;code&gt;&quot;dddddddddd&quot;&lt;/code&gt; is actually a row vector of length 10 containing the value 100 in all places (100 is the ASCII code of &lt;code&gt;&quot;d&quot;&lt;/code&gt;). This lends itself to the obvious generalization to character matrices. Using a matrix of characters, it is possible to represent a collection of same-length strings in one variable. The convention used in Octave is that each row in a character matrix is a separate string, but letting each column represent a string is equally possible.</source>
          <target state="translated">Octaveが使用する文字列表現は文字の配列なので、内部的には文字列 &lt;code&gt;&quot;dddddddddd&quot;&lt;/code&gt; は実際には長さ10の行ベクトルであり、すべての場所に値100が含まれます（100は &lt;code&gt;&quot;d&quot;&lt;/code&gt; の ASCIIコードです）。これは、文字行列の明らかな一般化に役立ちます。文字の行列を使用すると、1つの変数で同じ長さの文字列のコレクションを表すことができます。Octaveで使用されている規則では、文字マトリックスの各行は個別の文字列ですが、各列に文字列を表すことも同様に可能です。</target>
        </trans-unit>
        <trans-unit id="b4dec5e13b2e4a9899d984ff77c21a0c66627fd9" translate="yes" xml:space="preserve">
          <source>The string to use for the help text of the function.</source>
          <target state="translated">関数のヘルプテキストに使用する文字列。</target>
        </trans-unit>
        <trans-unit id="1f0357cd0c45ef9a85aa49ea092e295d04833f3b" translate="yes" xml:space="preserve">
          <source>The structure &lt;var&gt;options&lt;/var&gt; can have the following field names. If a field name is not specified, the default value is used:</source>
          <target state="translated">構造 &lt;var&gt;options&lt;/var&gt; は、次のフィールド名を含めることができます。フィールド名が指定されていない場合、デフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="fce167b4f185646e4efdca9062bbc6c28bf4678b" translate="yes" xml:space="preserve">
          <source>The structure &lt;var&gt;s&lt;/var&gt; always contains these three fields:</source>
          <target state="translated">構造体 &lt;var&gt;s&lt;/var&gt; には常に次の3つのフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="f3a578d85e8680807a6c4fa79a365330fb9d53d9" translate="yes" xml:space="preserve">
          <source>The structure must contain the fields &lt;code&gt;&quot;handle&quot;&lt;/code&gt;, &lt;code&gt;&quot;type&quot;&lt;/code&gt;, &lt;code&gt;&quot;children&quot;&lt;/code&gt;, &lt;code&gt;&quot;properties&quot;&lt;/code&gt;, and &lt;code&gt;&quot;special&quot;&lt;/code&gt;.</source>
          <target state="translated">構造には、フィールド &lt;code&gt;&quot;handle&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;children&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;properties&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;special&quot;&lt;/code&gt; が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="071fec8f51538c9f8d58b707bcdfec79ee509004" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command.</source>
          <target state="translated">プロットに使用する &lt;var&gt;style&lt;/var&gt; は、 &lt;code&gt;plot&lt;/code&gt; コマンドと同じ形式のラインスタイルスタイルで定義できます。</target>
        </trans-unit>
        <trans-unit id="defc2f90616739c78331a0dc859d222b7d97e01e" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command. If a marker is specified then the markers are drawn at the origin of the vectors (which are the grid points defined by &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;). When a marker is specified, the arrowhead is not drawn. If the argument &lt;code&gt;&quot;filled&quot;&lt;/code&gt; is given then the markers are filled.</source>
          <target state="translated">プロットに使用する &lt;var&gt;style&lt;/var&gt; は、 &lt;code&gt;plot&lt;/code&gt; コマンドと同じ形式のラインスタイルスタイルで定義できます。マーカーが指定されている場合、マーカーはベクトル（ &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; で定義されるグリッドポイント）の原点に描画されます。マーカーを指定した場合、矢印は描画されません。引数 &lt;code&gt;&quot;filled&quot;&lt;/code&gt; を指定すると、マーカーが塗りつぶされます。</target>
        </trans-unit>
        <trans-unit id="46f2218573cc529b9daf8940f089ee62acbed084" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command. If a marker is specified then the markers are drawn at the origin of the vectors (which are the grid points defined by &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;). When a marker is specified, the arrowhead is not drawn. If the argument &lt;code&gt;&quot;filled&quot;&lt;/code&gt; is given then the markers are filled.</source>
          <target state="translated">プロットに使用する &lt;var&gt;style&lt;/var&gt; は、 &lt;code&gt;plot&lt;/code&gt; コマンドと同じ形式のラインスタイルスタイルで定義できます。マーカーが指定されている場合、マーカーはベクトル（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; によって定義されるグリッドポイント）の原点に描画されます。マーカーを指定した場合、矢印は描画されません。引数 &lt;code&gt;&quot;filled&quot;&lt;/code&gt; を指定すると、マーカーが塗りつぶされます。</target>
        </trans-unit>
        <trans-unit id="e69b5228ec98932f9c88fb08909411da5b171487" translate="yes" xml:space="preserve">
          <source>The subscript &lt;var&gt;idx&lt;/var&gt; must be a structure array with fields &amp;lsquo;</source>
          <target state="translated">添え字 &lt;var&gt;idx&lt;/var&gt; はフィールドを持つ構造体配列でなければなりません '</target>
        </trans-unit>
        <trans-unit id="ebd882cdae4a1432551f63e32dcdd850b276a307" translate="yes" xml:space="preserve">
          <source>The subscripts are defined by the index vector &lt;var&gt;subs&lt;/var&gt;. The dimension is specified by &lt;var&gt;dim&lt;/var&gt;. If not given, it defaults to the first non-singleton dimension. The length of &lt;var&gt;subs&lt;/var&gt; must be equal to &lt;code&gt;size (&lt;var&gt;vals&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">添え字は、インデックスベクトル &lt;var&gt;subs&lt;/var&gt; によって定義されます。次元は &lt;var&gt;dim&lt;/var&gt; で指定されます。指定しない場合は、デフォルトで最初の1でない次元になります。 &lt;var&gt;subs&lt;/var&gt; の長さは、 &lt;code&gt;size (&lt;var&gt;vals&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="2738d8f0358bba0414e17d3259943d1c961429a8" translate="yes" xml:space="preserve">
          <source>The subscripts are defined by the rows of the matrix &lt;var&gt;subs&lt;/var&gt; and the values by &lt;var&gt;vals&lt;/var&gt;. Each row of &lt;var&gt;subs&lt;/var&gt; corresponds to one of the values in &lt;var&gt;vals&lt;/var&gt;. If &lt;var&gt;vals&lt;/var&gt; is a scalar, it will be used for each of the row of &lt;var&gt;subs&lt;/var&gt;. If &lt;var&gt;subs&lt;/var&gt; is a cell array of vectors, all vectors must be of the same length, and the subscripts in the &lt;var&gt;k&lt;/var&gt;th vector must correspond to the &lt;var&gt;k&lt;/var&gt;th dimension of the result.</source>
          <target state="translated">添え字は、行列 &lt;var&gt;subs&lt;/var&gt; の行と &lt;var&gt;vals&lt;/var&gt; による値によって定義されます。 &lt;var&gt;subs&lt;/var&gt; の各行は、 &lt;var&gt;vals&lt;/var&gt; の値の1つに対応しています。 &lt;var&gt;vals&lt;/var&gt; がスカラーの場合、 &lt;var&gt;subs&lt;/var&gt; の各行に使用されます。場合 &lt;var&gt;subs&lt;/var&gt; ベクトルのセルアレイであり、すべてのベクトルは同じ長さでなければならず、そしてにおける添え字 &lt;var&gt;k&lt;/var&gt; ベクトル番目はに対応している必要があり &lt;var&gt;k&lt;/var&gt; 結果の目寸法。</target>
        </trans-unit>
        <trans-unit id="c1d7c9f091299f7d5240522941525c63dbcf791c" translate="yes" xml:space="preserve">
          <source>The supported property types are:</source>
          <target state="translated">サポートされているプロパティタイプは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b3759abd9097afb7f24aca1f4c09e62f3bd86ed6" translate="yes" xml:space="preserve">
          <source>The surface mesh is plotted using shaded rectangles. The vertices of the rectangles [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;] are typically the output of &lt;code&gt;meshgrid&lt;/code&gt;. over a 2-D rectangular region in the x-y plane. &lt;var&gt;z&lt;/var&gt; determines the height above the plane of each vertex. If only a single &lt;var&gt;z&lt;/var&gt; matrix is given, then it is plotted over the meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;. Thus, columns of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;x&lt;/var&gt; values and rows of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;y&lt;/var&gt; values.</source>
          <target state="translated">表面メッシュは陰影のある長方形を使用してプロットされます。長方形[ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ] の頂点は、通常 &lt;code&gt;meshgrid&lt;/code&gt; の出力です。 xy平面の2次元長方形領域上。 &lt;var&gt;z&lt;/var&gt; は、各頂点の平面からの高さを決定します。単一の &lt;var&gt;z&lt;/var&gt; 行列のみが指定されている場合、それはメッシュグリッド &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; 上にプロットされます。したがって、 &lt;var&gt;z&lt;/var&gt; の列は異なる &lt;var&gt;x&lt;/var&gt; 値に対応し、 &lt;var&gt;z&lt;/var&gt; の行は異なる &lt;var&gt;y&lt;/var&gt; 値に対応します。</target>
        </trans-unit>
        <trans-unit id="b46769f6b104ec8be6304814a4bfdace40f1cbda" translate="yes" xml:space="preserve">
          <source>The switch Statement</source>
          <target state="translated">スイッチステートメント</target>
        </trans-unit>
        <trans-unit id="a000ebc0540c2a1fa2d4f1bb6f8896b4ea004fb6" translate="yes" xml:space="preserve">
          <source>The symbol &lt;code&gt;~&lt;/code&gt; may be used as a placeholder in the list of lvalues, indicating that the corresponding return value should be ignored and not stored anywhere:</source>
          <target state="translated">記号 &lt;code&gt;~&lt;/code&gt; は、左辺値のリストのプレースホルダーとして使用できます。これは、対応する戻り値が無視され、どこにも格納されないことを示します。</target>
        </trans-unit>
        <trans-unit id="0455834c2f0ae49c31cadd564a4076068d7325a3" translate="yes" xml:space="preserve">
          <source>The symbol &lt;var&gt;ret-var&lt;/var&gt; is the name of the variable that will hold the value to be returned by the function. This variable must be defined before the end of the function body in order for the function to return a value.</source>
          <target state="translated">シンボル &lt;var&gt;ret-var&lt;/var&gt; は、関数によって返される値を保持する変数の名前です。関数が値を返すためには、この変数は関数本体の終わりの前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="e8d41ccd19673e226ad418333099b911b400fcc7" translate="yes" xml:space="preserve">
          <source>The system matrix acts like the conductivity &lt;code&gt;S&lt;/code&gt; in Ohm&amp;rsquo;s law &lt;code&gt;S * V = I&lt;/code&gt;. Based on the Dirichlet and Neumann boundary conditions, we are able to solve for the voltages at each vertex &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">システム行列は、オームの法則 &lt;code&gt;S * V = I&lt;/code&gt; の伝導率 &lt;code&gt;S&lt;/code&gt; のように機能します。ディリクレおよびノイマン境界条件に基づいて、各頂点 &lt;code&gt;V&lt;/code&gt; の電圧を解くことができます。</target>
        </trans-unit>
        <trans-unit id="b4340e678261da2ae0696ac57455b249900e4283" translate="yes" xml:space="preserve">
          <source>The tab width is specified by &lt;var&gt;tw&lt;/var&gt;, and defaults to eight.</source>
          <target state="translated">タブ幅は &lt;var&gt;tw&lt;/var&gt; で指定され、デフォルトは8です。</target>
        </trans-unit>
        <trans-unit id="fe71437fad332115a6795a9a5ce07c1b04e570dc" translate="yes" xml:space="preserve">
          <source>The table below lists all of the sparse functions of Octave. Note that the names of the specific sparse forms of the functions are typically the same as the general versions with a &lt;em&gt;sp&lt;/em&gt; prefix. In the table below, and in the rest of this article, the specific sparse versions of functions are used.</source>
          <target state="translated">次の表に、Octaveのすべてのスパース関数を示します。関数の特定のスパース形式の名前は、通常、&lt;em&gt;sp&lt;/em&gt;接頭辞が付いた一般的なバージョンと同じです。次の表とこの記事の残りの部分では、特定のスパースバージョンの関数が使用されています。</target>
        </trans-unit>
        <trans-unit id="c5ba6afc25060b21f2f5b95c9e6214c1e1081541" translate="yes" xml:space="preserve">
          <source>The table can be customized to display more or less information through the function &lt;code&gt;whos_line_format&lt;/code&gt;.</source>
          <target state="translated">テーブルは、 &lt;code&gt;whos_line_format&lt;/code&gt; 関数を使用して、多かれ少なかれ情報を表示するようにカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="a7c908f6d50f20d69b31bc367e1898f1fcf6316b" translate="yes" xml:space="preserve">
          <source>The text is defined by the string &lt;var&gt;s&lt;/var&gt;. If &lt;var&gt;s&lt;/var&gt; is a cell string organized as a row vector then each string of the cell array is written to a separate line. If &lt;var&gt;s&lt;/var&gt; is organized as a column vector then one string element of the cell array is placed for every mouse click.</source>
          <target state="translated">テキストは文字列 &lt;var&gt;s&lt;/var&gt; によって定義されます。 &lt;var&gt;s&lt;/var&gt; が行ベクトルとして編成されたセル文字列の場合、セル配列の各文字列は別々の行に書き込まれます。 &lt;var&gt;s&lt;/var&gt; が列ベクトルとして編成されている場合、セル配列の1つの文字列要素がマウスクリックごとに配置されます。</target>
        </trans-unit>
        <trans-unit id="4c2096c13db5d95e57700bc34ea49a53d15578d1" translate="yes" xml:space="preserve">
          <source>The text object string content.</source>
          <target state="translated">テキストオブジェクトの文字列の内容。</target>
        </trans-unit>
        <trans-unit id="e62ae6961e7bcaa29bfe5e8622f6c0cf9bfeae23" translate="yes" xml:space="preserve">
          <source>The text of the last error message</source>
          <target state="translated">最後のエラーメッセージのテキスト</target>
        </trans-unit>
        <trans-unit id="4c277092e5ffe5403c79898a8eede2c5a48eb0d0" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments &lt;var&gt;g&lt;/var&gt; and &lt;var&gt;h&lt;/var&gt; are function handles pointing to functions that compute the equality constraints and the inequality constraints, respectively. If the problem does not have equality (or inequality) constraints, then use an empty matrix ([]) for &lt;var&gt;g&lt;/var&gt; (or &lt;var&gt;h&lt;/var&gt;). When supplied, these equality and inequality constraint functions must accept one vector argument and return a vector.</source>
          <target state="translated">3番目と4番目の引数 &lt;var&gt;g&lt;/var&gt; と &lt;var&gt;h&lt;/var&gt; は、それぞれ等式制約と不等式制約を計算する関数を指す関数ハンドルです。問題に等式（または不等式）の制約がない場合は、 &lt;var&gt;g&lt;/var&gt; （または &lt;var&gt;h&lt;/var&gt; ）に空行列（[]）を使用します。指定された場合、これらの等式および不等式制約関数は1つのベクトル引数を受け入れ、ベクトルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="2b02349905a85d2446dd0f7de0c81ebb008dfdee" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments may also be 2-element cell arrays of function handles. The first element should point to the constraint function and the second should point to a function that computes the gradient of the constraint function:</source>
          <target state="translated">3 番目と 4 番目の引数は、関数ハンドルの 2 要素セル配列にすることもできます。最初の要素は制約関数を指し、2番目の要素は制約関数の勾配を計算する関数を指します。</target>
        </trans-unit>
        <trans-unit id="7195b4719f77b116da398a1a1c0edac3c80b38d3" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments to &lt;code&gt;dasrt&lt;/code&gt; specify the initial condition of the states and their derivatives, and the fourth argument specifies a vector of output times at which the solution is desired, including the time corresponding to the initial condition.</source>
          <target state="translated">&lt;code&gt;dasrt&lt;/code&gt; の3番目と4番目の引数は、状態とその導関数の初期条件を指定し、4番目の引数は、初期条件に対応する時間を含む、解が必要な出力時間のベクトルを指定します。</target>
        </trans-unit>
        <trans-unit id="d64fcb3e439188d55a4c16261d51085d7e637847" translate="yes" xml:space="preserve">
          <source>The third and most general form of the &lt;code&gt;if&lt;/code&gt; statement allows multiple decisions to be combined in a single statement. It looks like this:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; ステートメントの3番目で最も一般的な形式では、複数の決定を1つのステートメントに組み合わせることができます。次のようになります。</target>
        </trans-unit>
        <trans-unit id="24a4c0df0b808a20ba080137519e5a48feb220c0" translate="yes" xml:space="preserve">
          <source>The third argument is also optional and defines the plane of the rotation. If present, &lt;var&gt;plane&lt;/var&gt; is a two element vector containing two different valid dimensions of the matrix. When &lt;var&gt;plane&lt;/var&gt; is not given the first two non-singleton dimensions are used.</source>
          <target state="translated">3番目の引数もオプションであり、回転の平面を定義します。存在する場合、 &lt;var&gt;plane&lt;/var&gt; は、行列の2つの異なる有効な次元を含む2要素ベクトルです。 &lt;var&gt;plane&lt;/var&gt; が指定されていない場合は、最初の2つの非1次元が使用されます。</target>
        </trans-unit>
        <trans-unit id="a3316908c5ebe0362b237dbbb7104323e8f938db" translate="yes" xml:space="preserve">
          <source>The third calling form of &lt;code&gt;drawnow&lt;/code&gt; is for debugging and is undocumented.</source>
          <target state="translated">&lt;code&gt;drawnow&lt;/code&gt; の3番目の呼び出し形式はデバッグ用であり、文書化されていません。</target>
        </trans-unit>
        <trans-unit id="9fa92cab0022b515af585d0811574891a87808ec" translate="yes" xml:space="preserve">
          <source>The third form of the &lt;code&gt;fopen&lt;/code&gt; function returns information about the open file given its file id.</source>
          <target state="translated">&lt;code&gt;fopen&lt;/code&gt; 関数の3番目の形式は、ファイルIDを指定すると、開いているファイルに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="c1ff0c6d96d5595fa4e80c7081bddfed8b293c22" translate="yes" xml:space="preserve">
          <source>The third optional argument &lt;var&gt;opt&lt;/var&gt; controls the behavior of the dialog. See &lt;code&gt;msgbox&lt;/code&gt; for details.</source>
          <target state="translated">3番目のオプションの引数 &lt;var&gt;opt&lt;/var&gt; は、ダイアログの動作を制御します。詳細については、 &lt;code&gt;msgbox&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c1fba0c17d0f4cd869b5b4c57308b9c9a3af764" translate="yes" xml:space="preserve">
          <source>The third output &lt;var&gt;exitflag&lt;/var&gt; reports whether the algorithm succeeded and may take one of the following values:</source>
          <target state="translated">3番目の出力 &lt;var&gt;exitflag&lt;/var&gt; は、アルゴリズムが成功したかどうかを報告し、次のいずれかの値をとります。</target>
        </trans-unit>
        <trans-unit id="be21c86c3e0ec2732b9dc2176602d8ab26daa7cd" translate="yes" xml:space="preserve">
          <source>The third output &lt;var&gt;info&lt;/var&gt; reports whether the algorithm succeeded and may take one of the following values:</source>
          <target state="translated">3番目の出力 &lt;var&gt;info&lt;/var&gt; は、アルゴリズムが成功したかどうかを報告し、次のいずれかの値をとります。</target>
        </trans-unit>
        <trans-unit id="2555a24f899c28f99431108b5d78d1c31465b431" translate="yes" xml:space="preserve">
          <source>The third way to create structures is the &lt;code&gt;struct&lt;/code&gt; command. &lt;code&gt;struct&lt;/code&gt; takes pairs of arguments, where the first argument in the pair is the fieldname to include in the structure and the second is a scalar or cell array, representing the values to include in the structure or structure array. For example:</source>
          <target state="translated">構造を作成する3番目の方法は、 &lt;code&gt;struct&lt;/code&gt; コマンドです。 &lt;code&gt;struct&lt;/code&gt; は引数のペアを受け取ります。ペアの最初の引数は構造体に含めるフィールド名で、2番目の引数はスカラーまたはセル配列で、構造体または構造体配列に含める値を表します。例えば：</target>
        </trans-unit>
        <trans-unit id="bc1cbc3f7b94324fcf7e6b2faaf4b7f4f65ba95c" translate="yes" xml:space="preserve">
          <source>The time complexity of the expression &lt;em&gt;O(a*n^p)&lt;/em&gt;. This is a structure with fields &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">式&lt;em&gt;O（a * n ^ p）&lt;/em&gt;の時間の複雑さ。これはフィールド &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;p&lt;/code&gt; を持つ構造体です。</target>
        </trans-unit>
        <trans-unit id="b5836c6d66c24029e6fc162eda2f01323f9b84c9" translate="yes" xml:space="preserve">
          <source>The time.</source>
          <target state="translated">時間です。</target>
        </trans-unit>
        <trans-unit id="d28b1820c21d788bf541e792a7751315825c2dd1" translate="yes" xml:space="preserve">
          <source>The title of the image as defined by the Exif standard.</source>
          <target state="translated">Exif規格で定義されている画像のタイトル。</target>
        </trans-unit>
        <trans-unit id="8e01af0401babfdb6b6b103d569e910fb0203908" translate="yes" xml:space="preserve">
          <source>The tolerance &lt;var&gt;tol&lt;/var&gt; defaults to &lt;code&gt;sqrt (eps)&lt;/code&gt;.</source>
          <target state="translated">許容誤差 &lt;var&gt;tol&lt;/var&gt; のデフォルトは &lt;code&gt;sqrt (eps)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="020db12bc9cda5fe6b12ba4824100139d6dd62a5" translate="yes" xml:space="preserve">
          <source>The top level of the hierarchy and the parent of all figure objects. Use &lt;code&gt;groot&lt;/code&gt; to obtain the handle of the root graphics object.</source>
          <target state="translated">階層の最上位とすべてのFigureオブジェクトの親。ルートグラフィックスオブジェクトのハンドルを取得するには、 &lt;code&gt;groot&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c8f18f0280895cf4825cb560b5e8ff49d65953d7" translate="yes" xml:space="preserve">
          <source>The total number of elements in the matrix or array.</source>
          <target state="translated">行列または配列の要素の総数.</target>
        </trans-unit>
        <trans-unit id="1a1e2954fb0ea009bd827fbd1a514306af525918" translate="yes" xml:space="preserve">
          <source>The total number of returned values is the product of the number of elements returned for each index component. In the example above, the total is 2*1*1 = 2 elements.</source>
          <target state="translated">返された値の合計数は、各インデックス構成要素について返された要素数の積となります。上の例では、合計は2*1*1=2要素となります。</target>
        </trans-unit>
        <trans-unit id="a30001a043cdcb2e8ac959391732bb011f2011d6" translate="yes" xml:space="preserve">
          <source>The trust region radius became excessively small.</source>
          <target state="translated">トラスト領域の半径が小さくなりすぎた。</target>
        </trans-unit>
        <trans-unit id="26b9ec20825c14e84d161ea58253e1a371198ca0" translate="yes" xml:space="preserve">
          <source>The truth table for the xor operation is</source>
          <target state="translated">xor演算の真理値テーブルは</target>
        </trans-unit>
        <trans-unit id="2ce0b7af9a0d01674c5d28383bc77e0118acbfbd" translate="yes" xml:space="preserve">
          <source>The try Statement</source>
          <target state="translated">トライステートメント</target>
        </trans-unit>
        <trans-unit id="52aa7313cfb4bf1b0b6c3b71de70f4a2c2aa2794" translate="yes" xml:space="preserve">
          <source>The two basic reasons to use sparse matrices are to reduce the memory usage and to not have to do calculations on zero elements. The two are closely related in that the computation time on a sparse matrix operator or function is roughly linear with the number of nonzero elements.</source>
          <target state="translated">疎な行列を使用する2つの基本的な理由は,メモリ使用量を削減することと,ゼロ要素で計算を行う必要がないことです.この2つは,疎な行列演算子や関数の計算時間が,非ゼロ要素の数に応じてほぼ線形になるという点で,密接に関連しています.</target>
        </trans-unit>
        <trans-unit id="9618f4a4a63ba22192bb89074d7622fe30a7e308" translate="yes" xml:space="preserve">
          <source>The two definitions are related, for positive real values of &lt;var&gt;x&lt;/var&gt;, by &lt;code&gt;E_1&amp;nbsp;(-x)&amp;nbsp;=&amp;nbsp;-Ei&amp;nbsp;(x)&amp;nbsp;-&amp;nbsp;i*pi&lt;/code&gt;.</source>
          <target state="translated">2つの定義は、 &lt;var&gt;x&lt;/var&gt; の正の実数値に対して、 &lt;code&gt;E_1&amp;nbsp;(-x)&amp;nbsp;=&amp;nbsp;-Ei&amp;nbsp;(x)&amp;nbsp;-&amp;nbsp;i*pi&lt;/code&gt; によって関連付けられます。</target>
        </trans-unit>
        <trans-unit id="1560ec7416c3bc7b85993552ffc63904882e8eda" translate="yes" xml:space="preserve">
          <source>The type of machine you are using, and the operating system name and version number.</source>
          <target state="translated">使用しているマシンの種類と、OS名とバージョン番号です。</target>
        </trans-unit>
        <trans-unit id="ad725f8fbec700b46ff946709d82c735f805d4ca" translate="yes" xml:space="preserve">
          <source>The type of symmetry to check may be specified with the additional input &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; (default) for regular Hermitian or &lt;code&gt;&quot;skew&quot;&lt;/code&gt; for skew-Hermitian.</source>
          <target state="translated">チェックする対称のタイプは、通常のエルミートの場合は &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; （デフォルト）の追加入力で指定し、スキュー-エルミートの場合は &lt;code&gt;&quot;skew&quot;&lt;/code&gt; で指定できます。</target>
        </trans-unit>
        <trans-unit id="113dea0c1abc9393e2b92d3cb715124cf7063305" translate="yes" xml:space="preserve">
          <source>The type of symmetry to check may be specified with the additional input &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; (default) for regular symmetry or &lt;code&gt;&quot;skew&quot;&lt;/code&gt; for skew-symmetry.</source>
          <target state="translated">チェックする対称性のタイプは、通常の対称性の場合は &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; （デフォルト）の追加入力で指定し、傾斜対称性の場合は &lt;code&gt;&quot;skew&quot;&lt;/code&gt; で指定できます。</target>
        </trans-unit>
        <trans-unit id="5204ceff27386ae6ed6133ef36c034b0518a0cea" translate="yes" xml:space="preserve">
          <source>The type of uicontrol created is specified by the &lt;var&gt;style&lt;/var&gt; property. If no style property is provided, a push button will be created.</source>
          <target state="translated">作成されるuicontrolのタイプは、 &lt;var&gt;style&lt;/var&gt; プロパティで指定されます。スタイルプロパティが指定されていない場合、プッシュボタンが作成されます。</target>
        </trans-unit>
        <trans-unit id="f94f32e2aa2b76134f40165cc09d9e4f13e41d02" translate="yes" xml:space="preserve">
          <source>The types and values of the input parameters &lt;var&gt;t&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; depend on the input &lt;var&gt;flag&lt;/var&gt; that is of type string. Valid values of &lt;var&gt;flag&lt;/var&gt; are:</source>
          <target state="translated">入力パラメータ &lt;var&gt;t&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; のタイプと値は、文字列タイプの入力 &lt;var&gt;flag&lt;/var&gt; によって異なります。 &lt;var&gt;flag&lt;/var&gt; 有効な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8adbd269c331c77c96db37b97c6c4f211c8deae2" translate="yes" xml:space="preserve">
          <source>The typical way to extract a matrix or array from the input arguments of &lt;code&gt;DEFUN_DLD&lt;/code&gt; function is as follows</source>
          <target state="translated">&lt;code&gt;DEFUN_DLD&lt;/code&gt; 関数の入力引数から行列または配列を抽出する一般的な方法は次のとおりです</target>
        </trans-unit>
        <trans-unit id="f7f01dd63e93e2db097948ad9ee913627c8dd5d8" translate="yes" xml:space="preserve">
          <source>The ui* series of functions work best with the &lt;code&gt;qt&lt;/code&gt; graphics toolkit, although some functionality is available with the &lt;code&gt;fltk&lt;/code&gt; toolkit. There is no support for the &lt;code&gt;gnuplot&lt;/code&gt; toolkit.</source>
          <target state="translated">一部の機能は &lt;code&gt;fltk&lt;/code&gt; ツールキットで使用できますが、ui *シリーズの関数は &lt;code&gt;qt&lt;/code&gt; グラフィックツールキットで最適に動作します。 &lt;code&gt;gnuplot&lt;/code&gt; ツールキットはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="51e7c0cae6c48943a280e888819155962b0bd492" translate="yes" xml:space="preserve">
          <source>The underlying Fortran code should use the &lt;code&gt;XSTOPX&lt;/code&gt; function to replace the Fortran &lt;code&gt;STOP&lt;/code&gt; function. &lt;code&gt;XSTOPX&lt;/code&gt; uses the Octave exception handler to treat failing cases in the Fortran code explicitly. Note that Octave supplies its own replacement &lt;small&gt;BLAS&lt;/small&gt;&lt;code&gt;XERBLA&lt;/code&gt; function, which uses &lt;code&gt;XSTOPX&lt;/code&gt;.</source>
          <target state="translated">基礎となるFortranコードは、 &lt;code&gt;XSTOPX&lt;/code&gt; 関数を使用してFortran &lt;code&gt;STOP&lt;/code&gt; 関数を置き換える必要があります。 &lt;code&gt;XSTOPX&lt;/code&gt; はOctave例外ハンドラーを使用して、Fortranコードの失敗したケースを明示的に処理します。Octaveは独自の代替供給ことに注意してください&lt;small&gt;BLAS &lt;/small&gt; &lt;code&gt;XERBLA&lt;/code&gt; の使用機能、 &lt;code&gt;XSTOPX&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="7b88f6c3542660147f24745a70df859b574d5c9f" translate="yes" xml:space="preserve">
          <source>The unit used to compute the &lt;code&gt;paperposition&lt;/code&gt; property. For &lt;code&gt;paperunits&lt;/code&gt; set to &lt;code&gt;&quot;pixels&quot;&lt;/code&gt;, the conversion between physical units (ex: &lt;code&gt;&quot;inches&quot;&lt;/code&gt;) and &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; is dependent on the &lt;code&gt;screenpixelsperinch&lt;/code&gt; property of the root object.</source>
          <target state="translated">&lt;code&gt;paperposition&lt;/code&gt; プロパティの計算に使用される単位。 &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; に設定された &lt;code&gt;paperunits&lt;/code&gt; の場合、物理単位（例： &lt;code&gt;&quot;inches&quot;&lt;/code&gt; ）と &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; の間の変換は、ルートオブジェクトの &lt;code&gt;screenpixelsperinch&lt;/code&gt; プロパティに依存します。</target>
        </trans-unit>
        <trans-unit id="fadea35915740be5ea17b31b04b8311ea21f8c0c" translate="yes" xml:space="preserve">
          <source>The unit used to compute the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;outerposition&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;outerposition&lt;/code&gt; 位置のプロパティを計算するために使用される単位。</target>
        </trans-unit>
        <trans-unit id="60bcf22fd0ac0eed7dd0721b4a1b44c720fca343" translate="yes" xml:space="preserve">
          <source>The unscaled covariance matrix, formally equal to the inverse of &lt;var&gt;x&amp;rsquo;&lt;/var&gt;*&lt;var&gt;x&lt;/var&gt;, but computed in a way minimizing roundoff error propagation.</source>
          <target state="translated">スケーリングされていない共分散行列。形式的には &lt;var&gt;x&amp;rsquo;&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt; の逆行列に等しくなりますが、丸め誤差の伝播を最小限に抑える方法で計算されます。</target>
        </trans-unit>
        <trans-unit id="2c0b1d3083ad9ca2a7e0b82183bf71fb74340068" translate="yes" xml:space="preserve">
          <source>The unwind_protect Statement</source>
          <target state="translated">unwind_protect ステートメント</target>
        </trans-unit>
        <trans-unit id="76c55179bfcdb299275b3656e06ab94a12a99b03" translate="yes" xml:space="preserve">
          <source>The upper Cholesky factor &lt;var&gt;R&lt;/var&gt; is computed by using the upper triangular part of matrix &lt;var&gt;A&lt;/var&gt; and is defined by</source>
          <target state="translated">上位コレスキー因子 &lt;var&gt;R&lt;/var&gt; は、行列 &lt;var&gt;A&lt;/var&gt; の上三角部分を使用して計算され、次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="1890c9701c39eef1aa6b83be16efe7e9d38cd499" translate="yes" xml:space="preserve">
          <source>The use of the &lt;code&gt;maybe_compress&lt;/code&gt; function should be avoided if possible as it will slow the creation of the matrix.</source>
          <target state="translated">&lt;code&gt;maybe_compress&lt;/code&gt; 関数はマトリックスの作成を遅くするため、可能であれば使用を避けてください。</target>
        </trans-unit>
        <trans-unit id="486810d1bef8c37ffa8f90b03cb329153a311618" translate="yes" xml:space="preserve">
          <source>The user can directly create the sparse matrix within an oct-file.</source>
          <target state="translated">ユーザは,オクトファイル内で直接疎な行列を作成することができます.</target>
        </trans-unit>
        <trans-unit id="44ac378cb2a3bf5b9d40bd2c7fa0d9f1fa750b24" translate="yes" xml:space="preserve">
          <source>The user can force the type of the matrix with the &lt;code&gt;matrix_type&lt;/code&gt; function. This overcomes the cost of discovering the type of the matrix. However, it should be noted that identifying the type of the matrix incorrectly will lead to unpredictable results, and so &lt;code&gt;matrix_type&lt;/code&gt; should be used with care.</source>
          <target state="translated">ユーザーは、 &lt;code&gt;matrix_type&lt;/code&gt; 関数を使用してマトリックスのタイプを強制できます。これにより、マトリックスのタイプを発見するコストが克服されます。ただし、マトリックスのタイプを誤って識別すると、予測できない結果が生じることに注意してください。そのため、 &lt;code&gt;matrix_type&lt;/code&gt; の使用には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="933d42a738b2099466f4c26608378ca0e112f281" translate="yes" xml:space="preserve">
          <source>The user can select points on a plot with the &lt;code&gt;ginput&lt;/code&gt; function or select the position at which to place text on the plot with the &lt;code&gt;gtext&lt;/code&gt; function using the mouse.</source>
          <target state="translated">ユーザーは関数 &lt;code&gt;ginput&lt;/code&gt; を使用してプロット上の点を選択するか、マウスを使用して関数 &lt;code&gt;gtext&lt;/code&gt; を使用してプロット上のテキストを配置する位置を選択できます。</target>
        </trans-unit>
        <trans-unit id="133defcf2a8cc85d6e89379280e237838c74e0ae" translate="yes" xml:space="preserve">
          <source>The user name.</source>
          <target state="translated">ユーザー名です。</target>
        </trans-unit>
        <trans-unit id="ff955a1de3f03a21fca8ad8b7504d2f3da2a59f4" translate="yes" xml:space="preserve">
          <source>The username of the current user.</source>
          <target state="translated">現在のユーザーのユーザー名。</target>
        </trans-unit>
        <trans-unit id="b7f941f8364bdda7976f96778d1a2f6cd046401b" translate="yes" xml:space="preserve">
          <source>The uses of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; are further explained in &lt;a href=&quot;graphics-objects#XREFget&quot;&gt;get&lt;/a&gt;, &lt;a href=&quot;graphics-objects#XREFset&quot;&gt;set&lt;/a&gt;.</source>
          <target state="translated">用途 &lt;code&gt;get&lt;/code&gt; と &lt;code&gt;set&lt;/code&gt; さらにで説明されている&lt;a href=&quot;graphics-objects#XREFget&quot;&gt;のget&lt;/a&gt;、&lt;a href=&quot;graphics-objects#XREFset&quot;&gt;セット&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3879d4dd1203ae34ab58ae828a21583678af3718" translate="yes" xml:space="preserve">
          <source>The validity of this formula can easily be checked by expanding the binomial coefficients in both formulas as factorials. It can be derived more directly via the theory of Cauchy matrices. See J. W. Demmel,</source>
          <target state="translated">この式の妥当性は、両式の二項係数を階乗として展開することで簡単に確認できます。これは、コーキー行列の理論を介して、より直接的に導出することができる。J.W.Demmelを参照のこと。</target>
        </trans-unit>
        <trans-unit id="dfaa81e76c370c75c591c2d91156e8dc305309b0" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;n&lt;/var&gt; must be a real non-negative integer.</source>
          <target state="translated">値 &lt;var&gt;n&lt;/var&gt; は、実数の負でない整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="987eae05835fc50217ab9ec5a201d8873975cf0d" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;val&lt;/var&gt; may be modified to fit within the range of the new type.</source>
          <target state="translated">値 &lt;var&gt;val&lt;/var&gt; は、新しいタイプの範囲内に収まるように変更できます。</target>
        </trans-unit>
        <trans-unit id="217ed1d8201a3760885ef024ee2d49ba760c6d6c" translate="yes" xml:space="preserve">
          <source>The value for the &lt;code&gt;papersize&lt;/code&gt;, and &lt;code&gt;paperposition&lt;/code&gt; properties depends upon &lt;code&gt;paperorientation&lt;/code&gt;. The horizontal and vertical values for &lt;code&gt;papersize&lt;/code&gt; and &lt;code&gt;paperposition&lt;/code&gt; reverse order when &lt;code&gt;paperorientation&lt;/code&gt; is switched between &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; and &lt;code&gt;&quot;landscape&quot;&lt;/code&gt;.</source>
          <target state="translated">値は &lt;code&gt;papersize&lt;/code&gt; 、および &lt;code&gt;paperposition&lt;/code&gt; プロパティは依存 &lt;code&gt;paperorientation&lt;/code&gt; 。 &lt;code&gt;paperorientation&lt;/code&gt; が &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; と &lt;code&gt;&quot;landscape&quot;&lt;/code&gt; の間で切り替えられた場合、 &lt;code&gt;papersize&lt;/code&gt; と &lt;code&gt;paperposition&lt;/code&gt; の水平値と垂直値は逆の順序になります。</target>
        </trans-unit>
        <trans-unit id="ca30babe0da725344857665459f7bd6f3883e78c" translate="yes" xml:space="preserve">
          <source>The value must be &lt;code&gt;&quot;non-modal&quot;&lt;/code&gt;, &lt;code&gt;&quot;modal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. See above.</source>
          <target state="translated">値は &lt;code&gt;&quot;non-modal&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;modal&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;replace&quot;&lt;/code&gt; でなければなりません。上記を参照。</target>
        </trans-unit>
        <trans-unit id="f10c1cc5436e834c29308d925fbd8c9cf65a09b1" translate="yes" xml:space="preserve">
          <source>The value must be a single character and the default is &lt;code&gt;&quot; &quot;&lt;/code&gt; (a single space). For example:</source>
          <target state="translated">値は単一の文字でなければならず、デフォルトは &lt;code&gt;&quot; &quot;&lt;/code&gt; （単一のスペース）です。例えば：</target>
        </trans-unit>
        <trans-unit id="11865d873c7ce3cac98ac13067f50829858a6662" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;history_control&lt;/code&gt; is a colon-separated list of values controlling how commands are saved on the history list. If the list of values includes &lt;code&gt;ignorespace&lt;/code&gt;, lines which begin with a space character are not saved in the history list. A value of &lt;code&gt;ignoredups&lt;/code&gt; causes lines matching the previous history entry to not be saved. A value of &lt;code&gt;ignoreboth&lt;/code&gt; is shorthand for &lt;code&gt;ignorespace&lt;/code&gt; and &lt;code&gt;ignoredups&lt;/code&gt;. A value of &lt;code&gt;erasedups&lt;/code&gt; causes all previous lines matching the current line to be removed from the history list before that line is saved. Any value not in the above list is ignored. If &lt;code&gt;history_control&lt;/code&gt; is the empty string, all commands are saved on the history list, subject to the value of &lt;code&gt;history_save&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;history_control&lt;/code&gt; の値は、コマンドを履歴リストに保存する方法を制御する値をコロンで区切ったリストです。値のリストに &lt;code&gt;ignorespace&lt;/code&gt; が含まれている場合、スペース文字で始まる行は履歴リストに保存されません。 &lt;code&gt;ignoredups&lt;/code&gt; の値により、前の履歴エントリに一致する行が保存されなくなります。 &lt;code&gt;ignoreboth&lt;/code&gt; の値は、 &lt;code&gt;ignorespace&lt;/code&gt; および &lt;code&gt;ignoredups&lt;/code&gt; の省略形です。 &lt;code&gt;erasedups&lt;/code&gt; の値により、現在の行に一致する以前のすべての行が、その行が保存される前に履歴リストから削除されます。上記のリストにない値は無視されます。 &lt;code&gt;history_control&lt;/code&gt; の場合空の文字列です。すべてのコマンドは &lt;code&gt;history_save&lt;/code&gt; の値に従って履歴リストに保存されます。</target>
        </trans-unit>
        <trans-unit id="b70a6f050d3664cfcadad45b2d85f7af1a189ffc" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;nargin&lt;/code&gt; is not affected by using this declaration.</source>
          <target state="translated">&lt;code&gt;nargin&lt;/code&gt; の値は、この宣言を使用しても影響を受けません。</target>
        </trans-unit>
        <trans-unit id="b2560ed14f20c168583e3d5ee6a83cc5479a7fa9" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;octave_core_file_options&lt;/code&gt; should follow the same format as the options for the &lt;code&gt;save&lt;/code&gt; function. The default value is Octave&amp;rsquo;s binary format.</source>
          <target state="translated">&lt;code&gt;octave_core_file_options&lt;/code&gt; の値は、 &lt;code&gt;save&lt;/code&gt; 機能のオプションと同じ形式に従う必要があります。デフォルト値はOctaveのバイナリ形式です。</target>
        </trans-unit>
        <trans-unit id="6a0edac6314484525401f004fcf21d540e424949" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;c&lt;/var&gt; specifies the number of delimiters to prepend to each line of data.</source>
          <target state="translated">&lt;var&gt;c&lt;/var&gt; の値は、データの各行に付加する区切り文字の数を指定します。</target>
        </trans-unit>
        <trans-unit id="9d41cbdf4d04fb99498b993acc38ddf77a10e1e0" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;d&lt;/var&gt; is simply the mean of &lt;var&gt;dd&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;d&lt;/var&gt; の値は、単に &lt;var&gt;dd&lt;/var&gt; の平均です。</target>
        </trans-unit>
        <trans-unit id="e6a8eed2f72af66c2ea117d16634b3838d1c168c" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;mode&lt;/var&gt; is assumed to be returned from a call to &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; の値は、 &lt;code&gt;stat&lt;/code&gt; の呼び出しから返されると想定されています。</target>
        </trans-unit>
        <trans-unit id="fe5fcc19e2496658d8b7bf06a6fc3a1e59d190e4" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;nu&lt;/var&gt; is the dimension of the span of the Krylov subspace (based on &lt;var&gt;eps1&lt;/var&gt;).</source>
          <target state="translated">&lt;var&gt;nu&lt;/var&gt; の値は、クリロフ部分空間のスパンの次元です（ &lt;var&gt;eps1&lt;/var&gt; に基づく）。</target>
        </trans-unit>
        <trans-unit id="6badb163d678b9d7ea64016d920aeca40506cdc7" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;ok&lt;/var&gt; is 1 if the user closed the box with the OK button, otherwise it is 0 and &lt;var&gt;sel&lt;/var&gt; is empty.</source>
          <target state="translated">ユーザーが[OK]ボタンでボックスを閉じた場合、 &lt;var&gt;ok&lt;/var&gt; の値は1です。それ以外の場合、値は0で、 &lt;var&gt;sel&lt;/var&gt; は空です。</target>
        </trans-unit>
        <trans-unit id="6ddc82eb372ba285482f1959574e9340a3077262" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;path&lt;/var&gt; should be a colon-separated list of directories in the format described for &lt;code&gt;path&lt;/code&gt;. If no file is found, return an empty character string. For example:</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; の値は、パスで説明した形式の、コロンで区切られたディレクトリのリストである必要があり &lt;code&gt;path&lt;/code&gt; 。ファイルが見つからない場合は、空の文字列を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="6159679474a3cfb785e1a0e13e6aca3afa146eb0" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;r&lt;/var&gt; specifies the number of delimiter-only lines to add to the start of the file.</source>
          <target state="translated">&lt;var&gt;r&lt;/var&gt; の値は、ファイルの先頭に追加する区切り文字のみの行数を指定します。</target>
        </trans-unit>
        <trans-unit id="eaf379ba4831db17018b5da34d82fb0e8bbb64ec" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;u&lt;/var&gt; may be complex. The value of &lt;var&gt;m&lt;/var&gt; must be 0 &amp;le; &lt;var&gt;m&lt;/var&gt; &amp;le; 1.</source>
          <target state="translated">&lt;var&gt;u&lt;/var&gt; の値は複雑な場合があります。値 &lt;var&gt;m&lt;/var&gt; は 0&amp;le;でなければならない &lt;var&gt;m&lt;/var&gt; &amp;le;1。</target>
        </trans-unit>
        <trans-unit id="b27bd3d4a0750f7dc10fd97135cd75cffe28b4c1" translate="yes" xml:space="preserve">
          <source>The value of a persistent variable is kept in memory until it is explicitly cleared. Assuming that the implementation of &lt;code&gt;count_calls&lt;/code&gt; is saved on disk, we get the following behavior.</source>
          <target state="translated">永続変数の値は、明示的にクリアされるまでメモリに保持されます。 &lt;code&gt;count_calls&lt;/code&gt; の実装がディスクに保存されていると仮定すると、次の動作が得られます。</target>
        </trans-unit>
        <trans-unit id="1d13b3ab437a2f13ce5276ab7aca8f547dfc0dd6" translate="yes" xml:space="preserve">
          <source>The value of a polynomial represented by the vector &lt;var&gt;c&lt;/var&gt; can be evaluated at the point &lt;var&gt;x&lt;/var&gt; very easily, as the following example shows:</source>
          <target state="translated">ベクトル &lt;var&gt;c&lt;/var&gt; で表される多項式の値は、次の例に示すように、点 &lt;var&gt;x&lt;/var&gt; で非常に簡単に評価できます。</target>
        </trans-unit>
        <trans-unit id="b2cd93da190b89bfd6fce36f02d511cf8d7ebf4c" translate="yes" xml:space="preserve">
          <source>The value of individual keys can be set with &lt;code&gt;spparms (&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;. The default values can be restored with the special keyword &lt;code&gt;&quot;default&quot;&lt;/code&gt;. The special keyword &lt;code&gt;&quot;tight&quot;&lt;/code&gt; can be used to set the mmd solvers to attempt a sparser solution at the potential cost of longer running time.</source>
          <target state="translated">個々のキーの値は、 &lt;code&gt;spparms (&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; で設定できます。デフォルト値は、特別なキーワード &lt;code&gt;&quot;default&quot;&lt;/code&gt; を使用して復元できます。特別なキーワード &lt;code&gt;&quot;tight&quot;&lt;/code&gt; を使用すると、実行時間が長くなる可能性があるコストでスパースソリューションを試行するようにmmdソルバーを設定できます。</target>
        </trans-unit>
        <trans-unit id="e9888fbe6ea02af30ade4d41d63e06da6a98d504" translate="yes" xml:space="preserve">
          <source>The value of this property can then be retrieved as a string by a Java object or in Octave:</source>
          <target state="translated">このプロパティの値は,JavaオブジェクトまたはOctaveで文字列として取得することができます。</target>
        </trans-unit>
        <trans-unit id="39a8526875e22862a90371678f6218a0b89dabc4" translate="yes" xml:space="preserve">
          <source>The value returned in &lt;var&gt;info&lt;/var&gt; may be one of the following:</source>
          <target state="translated">&lt;var&gt;info&lt;/var&gt; で返される値は、次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="1fcd411f2d76bf5edaeac7ab5a3087121d53c600" translate="yes" xml:space="preserve">
          <source>The value where the base of the area plot is drawn.</source>
          <target state="translated">エリアプロットのベースが描画される値。</target>
        </trans-unit>
        <trans-unit id="03db772d1c03de14dd99076830558058d72fd555" translate="yes" xml:space="preserve">
          <source>The values &lt;var&gt;n&lt;/var&gt; for which the expression was calculated &lt;strong&gt;AND&lt;/strong&gt; the execution time was greater than zero.</source>
          <target state="translated">式が計算され、&lt;strong&gt;かつ&lt;/strong&gt;実行時間がゼロより大きい値 &lt;var&gt;n&lt;/var&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e95950eca2cf40f59b9cd37ebe0a3de539e19d5" translate="yes" xml:space="preserve">
          <source>The values &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;c&lt;/var&gt; can be derived by</source>
          <target state="translated">値 &lt;var&gt;y&lt;/var&gt; および &lt;var&gt;c&lt;/var&gt; は、</target>
        </trans-unit>
        <trans-unit id="2f48fc2552230b0460e5714873efe32f54fde993" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;c&lt;/var&gt; are scaled to span the range of the current colormap. Limits may be placed on the color axis by the command &lt;code&gt;caxis&lt;/code&gt;, or by setting the &lt;code&gt;clim&lt;/code&gt; property of the parent axis.</source>
          <target state="translated">&lt;var&gt;c&lt;/var&gt; の値は、現在のカラーマップの範囲に広がるようにスケーリングされます。制限は、コマンド &lt;code&gt;caxis&lt;/code&gt; によって、または親軸の &lt;code&gt;clim&lt;/code&gt; プロパティを設定することによって、色軸に設定できます。</target>
        </trans-unit>
        <trans-unit id="d784a318a0365ec6426f6a5480c3c888c0f74ee0" translate="yes" xml:space="preserve">
          <source>The values of the polynomial for each value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; の各値の多項式の値。</target>
        </trans-unit>
        <trans-unit id="a196ed89c6a9030351dfa64f851941d32e033084" translate="yes" xml:space="preserve">
          <source>The values of the vector field to plot.</source>
          <target state="translated">プロットするベクトルフィールドの値。</target>
        </trans-unit>
        <trans-unit id="712f143fe2ecc6f4e2bf349e09971d6a6dc633e4" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(1:2)&lt;/code&gt; defines the lower left-hand corner of the patch and &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(3:4)&lt;/code&gt; defines its width and height. By default, the value of &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;[0, 0, 1, 1]&lt;/code&gt;.</source>
          <target state="translated">変数 &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(1:2)&lt;/code&gt; はパッチの左下隅を定義し、 &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(3:4)&lt;/code&gt; はその幅と高さを定義します。デフォルトでは、 &lt;var&gt;pos&lt;/var&gt; の値は &lt;code&gt;[0, 0, 1, 1]&lt;/code&gt; 0、0、1、1 ]です。</target>
        </trans-unit>
        <trans-unit id="ee33085a7be59b0b90b275f89e41f6eef168e5a0" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;curv&lt;/var&gt; defines the curvature of the sides of the rectangle and may be a scalar or two-element vector with values between 0 and 1. A value of 0 represents no curvature of the side, whereas a value of 1 means that the side is entirely curved into the arc of a circle. If &lt;var&gt;curv&lt;/var&gt; is a two-element vector, then the first element is the curvature along the x-axis of the patch and the second along y-axis.</source>
          <target state="translated">変数 &lt;var&gt;curv&lt;/var&gt; は、長方形の辺の曲率を定義し、値が0から1のスカラーまたは2要素のベクトルになります。値0は辺の曲率がないことを表し、値1は辺が完全に円弧に湾曲しています。場合 &lt;var&gt;curv&lt;/var&gt; 2要素ベクトルであり、その後、最初の要素は、パッチ及びy軸に沿って第2のX軸に沿った曲率です。</target>
        </trans-unit>
        <trans-unit id="f5effbd7e360435b9761b8b011561ea91da0ce20" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;k&lt;/var&gt; is the constant of integration, which by default is set to zero.</source>
          <target state="translated">変数 &lt;var&gt;k&lt;/var&gt; は積分の定数で、デフォルトではゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="1cb40fca01bfb5bb2d6f518e21e509a6a1d40a74" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;rootkey&lt;/var&gt; must be a string with a valid root key identifier:</source>
          <target state="translated">変数 &lt;var&gt;rootkey&lt;/var&gt; は、有効なルートキー識別子を含む文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="c2e77dabc2f5b26fb9dd32b36133ada17755b089" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;s&lt;/var&gt; is accepted for compatibility but is ignored.</source>
          <target state="translated">変数 &lt;var&gt;s&lt;/var&gt; は互換性のために受け入れられますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="9479566f6af39dde47954d13fa03e6d7716e6906" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;success&lt;/var&gt; is 1 if the download was successful, otherwise it is 0 in which case &lt;var&gt;message&lt;/var&gt; contains an error message.</source>
          <target state="translated">変数 &lt;var&gt;success&lt;/var&gt; は、ダウンロードが成功した場合は1、それ以外の場合は0です。この場合、 &lt;var&gt;message&lt;/var&gt; にエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="20822c6dd4af2da5b5764b7a28bacde24c60932d" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;x&lt;/var&gt; must be a strictly monotonic vector (either increasing or decreasing) of length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">変数 &lt;var&gt;x&lt;/var&gt; は、長さが &lt;var&gt;n&lt;/var&gt; の厳密に単調なベクトル（増加または減少）でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f0c83ebe4a804185f26c2ec9bb975b44111c0f8a" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;x&lt;/var&gt; must be a vector of length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">変数 &lt;var&gt;x&lt;/var&gt; は、長さ &lt;var&gt;n&lt;/var&gt; のベクトルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="4bf6e16002f8115e7c1af465625ba03491c13ca0" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;y&lt;/var&gt; must be in the interval [0,1], while &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; must be real and strictly positive.</source>
          <target state="translated">変数 &lt;var&gt;y&lt;/var&gt; はながら、区間[0,1]内にある必要がありそして &lt;var&gt;b&lt;/var&gt; は実数と厳密に正でなければなりません。 &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="b1ee684f133e88648b3dc8d4fd362350327687a0" translate="yes" xml:space="preserve">
          <source>The variables &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; define the vertex pairs, and must therefore have the same shape. They can be either vectors or arrays. If they are arrays then the columns of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are treated separately and an area returned for each.</source>
          <target state="translated">変数 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; は頂点のペアを定義するため、同じ形状でなければなりません。それらは、ベクトルまたは配列のいずれかです。それらが配列の場合、 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; の列は別々に扱われ、それぞれの領域が返されます。</target>
        </trans-unit>
        <trans-unit id="f557fc738fa4e999bb41037f46ac3513ff27a24e" translate="yes" xml:space="preserve">
          <source>The variance is defined as</source>
          <target state="translated">分散は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="383f48dabdd5b59824f4c792f0f4fdaa2194bac1" translate="yes" xml:space="preserve">
          <source>The variant with no input and output argument is an alias for the function &lt;code&gt;OCTAVE_VERSION&lt;/code&gt; provided for compatibility.</source>
          <target state="translated">入出力引数のないバリアントは、互換性のために提供されている関数 &lt;code&gt;OCTAVE_VERSION&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="712b62bd841673aa2e7546d29f733a43a1bf9811" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;C&lt;/var&gt; specifies the color of each tetrahedron as an index into the current colormap. The default value is 1:m where m is the number of tetrahedrons; the indices are scaled to map to the full range of the colormap. If there are more tetrahedrons than colors in the colormap then the values in &lt;var&gt;C&lt;/var&gt; are cyclically repeated.</source>
          <target state="translated">ベクトル &lt;var&gt;C&lt;/var&gt; は、各四面体の色を現在のカラーマップへのインデックスとして指定します。デフォルト値は1：mです。mは四面体の数です。インデックスは、カラーマップの全範囲にマップするようにスケーリングされます。カラーマップの色よりも四面体が多い場合、 &lt;var&gt;C&lt;/var&gt; の値は周期的に繰り返されます。</target>
        </trans-unit>
        <trans-unit id="d82493b5b4a87c99d1dfed44a515f1a9231254cb" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;c&lt;/var&gt; specifies the autocovariances &lt;code&gt;[gamma_0, &amp;hellip;, gamma_t]&lt;/code&gt; from lag 0 to &lt;var&gt;t&lt;/var&gt;, &lt;var&gt;oldphi&lt;/var&gt; specifies the coefficients based on &lt;var&gt;c&lt;/var&gt;(&lt;var&gt;t&lt;/var&gt;-1) and &lt;var&gt;oldv&lt;/var&gt; specifies the corresponding error.</source>
          <target state="translated">ベクトル &lt;var&gt;c&lt;/var&gt; はラグ0から &lt;var&gt;t&lt;/var&gt; までの &lt;var&gt;oldphi&lt;/var&gt; 共分散 &lt;code&gt;[gamma_0, &amp;hellip;, gamma_t]&lt;/code&gt; を指定し、oldphiは &lt;var&gt;c&lt;/var&gt; （ &lt;var&gt;t&lt;/var&gt; -1）に基づいて係数を指定し、 &lt;var&gt;oldv&lt;/var&gt; は対応するエラーを指定します。</target>
        </trans-unit>
        <trans-unit id="ee45235748cdc5458fbe6de11cad0931bd45dc97" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;t&lt;/var&gt; provides an upper limit on the length of the integration. If the stopping condition is met, the vector &lt;var&gt;t_out&lt;/var&gt; will be shorter than &lt;var&gt;t&lt;/var&gt;, and the final element of &lt;var&gt;t_out&lt;/var&gt; will be the point at which the stopping condition was met, and may not correspond to any element of the vector &lt;var&gt;t&lt;/var&gt;.</source>
          <target state="translated">ベクトル &lt;var&gt;t&lt;/var&gt; は、積分の長さの上限を提供します。停止条件が満たされると、ベクトル &lt;var&gt;t_out&lt;/var&gt; は &lt;var&gt;t&lt;/var&gt; よりも短くなり、 &lt;var&gt;t_out&lt;/var&gt; の最後の要素は停止条件が満たされた点になり、ベクトル &lt;var&gt;t&lt;/var&gt; のどの要素にも対応しない場合があります。</target>
        </trans-unit>
        <trans-unit id="889e674a23e5a725c6b09cf10b575fef201732b9" translate="yes" xml:space="preserve">
          <source>The vector argument specifying limits is optional, and additional string arguments may be used to specify various axis properties.</source>
          <target state="translated">リ ミ ッ ト を指定するベ ク ト ル引数はオプシ ョ ナルであ り 、 さ ま ざ ま な軸プ ロ パテ ィ を指定す る ために追加の文字列引数を使用す る こ と がで き ます。</target>
        </trans-unit>
        <trans-unit id="77f0db12997d81f43c39f216670fef21b3112826" translate="yes" xml:space="preserve">
          <source>The vector specifies the coordinates (x0,y0) of the origin of the annotation object, its width, and its height. The width and height may be negative, depending on the orientation of the object.</source>
          <target state="translated">ベ ク ト ルは、 注釈オブジ ェ ク ト の原点の座標 (x0,y0)と 、 その幅 と 高 さ を指定 し ます。幅と高さは、オブジェクトの向きによっては負の値になることもあります。</target>
        </trans-unit>
        <trans-unit id="2402be7f90f4f452f0911fd8d544a02b9bb06d98" translate="yes" xml:space="preserve">
          <source>The version is first split into numeric and character portions and then the parts are padded to be the same length (i.e., &lt;code&gt;&quot;1.1&quot;&lt;/code&gt; would be padded to be &lt;code&gt;&quot;1.1.0&quot;&lt;/code&gt; when being compared with &lt;code&gt;&quot;1.1.1&quot;&lt;/code&gt;, and separately, the character parts of the strings are padded with nulls).</source>
          <target state="translated">バージョンは最初に数値部分と文字部分に分割され、次にパーツは同じ長さになるようにパディングされます（つまり、 &lt;code&gt;&quot;1.1&quot;&lt;/code&gt; は &lt;code&gt;&quot;1.1.1&quot;&lt;/code&gt; と比較すると &lt;code&gt;&quot;1.1.0&quot;&lt;/code&gt; になるようにパディングされ、個別に、文字列の文字部分にはnullが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="ee912b8cbf5cfa1d2a9396f359a036398ce4e546" translate="yes" xml:space="preserve">
          <source>The version of Octave. You can get this by noting the version number that is printed when Octave starts, or running it with the &amp;lsquo;</source>
          <target state="translated">Octaveのバージョン。これは、Octaveの起動時に出力されるバージョン番号に注意するか、「</target>
        </trans-unit>
        <trans-unit id="2fe743faeb5ea6c705519f07347da952639e73c3" translate="yes" xml:space="preserve">
          <source>The versions listed below are the versions used for testing. If newer versions of these packages are available, you should try to use them, although there may be some differences.</source>
          <target state="translated">以下のバージョンはテストに使用したものです。これらのパッケージの新しいバージョンが利用可能な場合は、多少の違いはあるかもしれませんが、それらを使ってみてください。</target>
        </trans-unit>
        <trans-unit id="43607882fc94097837d7475698a05ebd85e7c18f" translate="yes" xml:space="preserve">
          <source>The vertex normals &lt;var&gt;vn&lt;/var&gt; are calculated from the gradient of the 3-dimensional array &lt;var&gt;val&lt;/var&gt; (size: lxmxn) containing the data for an isosurface geometry. The normals point towards smaller values in &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">頂点法線 &lt;var&gt;vn&lt;/var&gt; は、等値面ジオメトリのデータを含む3次元配列 &lt;var&gt;val&lt;/var&gt; （サイズ：lxmxn）の勾配から計算されます。法線は &lt;var&gt;val&lt;/var&gt; の値が小さい方を指します。</target>
        </trans-unit>
        <trans-unit id="9415437c4fe5edb7588071c3a34c6acea36c5a6d" translate="yes" xml:space="preserve">
          <source>The waitbar is filled to fraction &lt;var&gt;frac&lt;/var&gt; which must be in the range [0, 1].</source>
          <target state="translated">ウエイトバーはフラクションに充填される &lt;var&gt;frac&lt;/var&gt; 範囲[0、1]でなければなりません。</target>
        </trans-unit>
        <trans-unit id="54b516272b5a69fa1a5ae89488462d7efa26b186" translate="yes" xml:space="preserve">
          <source>The warning for division by zero (and in fact all warnings) are disabled in the &lt;code&gt;unwinddemo&lt;/code&gt; function.</source>
          <target state="translated">ゼロ除算の警告（および実際にはすべての警告）は、 &lt;code&gt;unwinddemo&lt;/code&gt; 関数では無効になっています。</target>
        </trans-unit>
        <trans-unit id="6c247a07c2b56c5e11198047fefa4e7ecab63606" translate="yes" xml:space="preserve">
          <source>The warning id &lt;code&gt;Octave:language-extension&lt;/code&gt; can be enabled to warn about this usage. See &lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_ids&lt;/a&gt;.</source>
          <target state="translated">警告ID &lt;code&gt;Octave:language-extension&lt;/code&gt; を有効にして、この使用法について警告することができます。&lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_idsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f15f28629b8cabc6cf49c64afff2f08344750dd1" translate="yes" xml:space="preserve">
          <source>The warning message may have multiple lines separated by newline characters (&quot;\n&quot;), or it may be a cellstr array with one element for each line.</source>
          <target state="translated">警告メッセージは、改行文字(&quot;\n&quot;)で区切られた複数の行で構成されていてもよいし、各行に1つの要素を持つcellstr配列であってもよい。</target>
        </trans-unit>
        <trans-unit id="cec88cd9ae39731a1a3b954b4757f1cdffe38e2a" translate="yes" xml:space="preserve">
          <source>The way to use a function is with a &lt;em&gt;function call&lt;/em&gt; expression, which consists of the function name followed by a list of &lt;em&gt;arguments&lt;/em&gt; in parentheses. The arguments are expressions which give the raw materials for the calculation that the function will do. When there is more than one argument, they are separated by commas. If there are no arguments, you can omit the parentheses, but it is a good idea to include them anyway, to clearly indicate that a function call was intended. Here are some examples:</source>
          <target state="translated">関数を使用する方法は、&lt;em&gt;関数呼び出し&lt;/em&gt;式を使用することです。これは、関数名とそれに続く括弧内の&lt;em&gt;引数の&lt;/em&gt;リストで構成されます。引数は、関数が実行する計算の原材料を与える式です。引数が複数ある場合は、カンマで区切ります。引数がない場合は括弧を省略できますが、関数呼び出しが意図されたものであることを明確に示すために、とにかくそれらを含めることをお勧めします。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="efae1904c240d3de25a8d0d556af95aec2f4ef59" translate="yes" xml:space="preserve">
          <source>The while Statement</source>
          <target state="translated">while ステートメント</target>
        </trans-unit>
        <trans-unit id="9afdcc17b54a70ad06bc509d67eb44b6feb569b6" translate="yes" xml:space="preserve">
          <source>The width of the stem. (Default: 0.5)</source>
          <target state="translated">ステムの幅。(デフォルト:0.5)</target>
        </trans-unit>
        <trans-unit id="7738275b9740c237517aa877fb16b1edbcec8880" translate="yes" xml:space="preserve">
          <source>The wildcard characters &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; are replaced with wildcards that are appropriate for a regular expression. For example:</source>
          <target state="translated">ワイルドカード文字 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、および &lt;code&gt;?&lt;/code&gt; 正規表現に適したワイルドカードに置き換えられます。例えば：</target>
        </trans-unit>
        <trans-unit id="265fd67b21492e2d095e2bb4319bbe615bea860f" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ead8bdae2d358cccd162e33a04ad2d916e2bd474" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは、ソースデータがない要素を除外するために、配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f314a6a7b54e7bcd1af1dc02c75c80544787640" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d8edfa17fa6cd0ef76a40f0245157efbbdc18b8e" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0497d66c276c106cd4d9573279c3bbec9b00702c" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="85709db97ca1139b6a108fdc232abbf377595aba" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7aceb82057c8605a86d51975c7003662145976d5" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e50f690dc61725c755d31a70a70cd58169b757f1" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04704464256e45546a548e64c371098b04932848" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e356190dfcfa579c2322589c8ae00cbbf1292718" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">ソースデータがない要素を除外するために、ウィンドウは配列の最初と最後で切り捨てられます。たとえば、長さが3のウィンドウでは、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="337005695f34e07da0e6502d3472f7c1ee82ef4d" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b4b4c5f5cf8f378ce799132473024ac77f5defe" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf5ade5299c09cf8ab3fbc80ced530c325c85e66" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff4b7dff5c24acb56ff24fa4597036de3a7a7f01" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; であり、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4ff8e1a3e9c2eb9e3a8d7cd99632c6f10a23aef" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66d2fdbd7ebf1c2a4021180594127639c85e777e" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8551dc23b83c53cd9b791d61b399a1815bf01ffd" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、長さが3のウィンドウの場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbfdf87afb6362996f2a3e535b281ffab7eba709" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a996789faeaed440ba1759f0f22b8312d63b1d91" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 、および &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4723edde62a9609f9cbbada572562d13b9d8569" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは折り返され、欠落しているデータ要素はデータの反対側から取得されます。たとえば、ウィンドウの長さが3の場合、 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; と &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1af586283478033dc4945ae38514e333a7eb0acf" translate="yes" xml:space="preserve">
          <source>The window name, e.g., &lt;code&gt;&quot;triangle&quot;&lt;/code&gt; or &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; is used to search for a function called &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_lw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;triangle&quot;&lt;/code&gt; や &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; などのウィンドウ名は、 &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_lw&lt;/code&gt; という関数を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ed037e71c66dc1e9250e2872cf4553224c6e1541" translate="yes" xml:space="preserve">
          <source>The window name, e.g., &lt;code&gt;&quot;triangle&quot;&lt;/code&gt; or &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; is used to search for a function called &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_sw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;triangle&quot;&lt;/code&gt; や &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; などのウィンドウ名は、 &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_sw&lt;/code&gt; という関数を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8df05b212dee45c9da4c449f22ac9c05318e0f4f" translate="yes" xml:space="preserve">
          <source>The window names can be passed as strings or by the &lt;var&gt;win_type&lt;/var&gt; number.</source>
          <target state="translated">ウィンドウ名は、文字列として、または &lt;var&gt;win_type&lt;/var&gt; 番号で渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9f16206783ccac98dcbce0ceef34d6668855fedd" translate="yes" xml:space="preserve">
          <source>The window style of a figure. One of the following values:</source>
          <target state="translated">図のウィンドウスタイル。以下の値のいずれか。</target>
        </trans-unit>
        <trans-unit id="f453e84da2fec824ab9a7c84c3eecd535ce844cb" translate="yes" xml:space="preserve">
          <source>The wireframe mesh is plotted using rectangles. The vertices of the rectangles [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;] are typically the output of &lt;code&gt;meshgrid&lt;/code&gt;. over a 2-D rectangular region in the x-y plane. &lt;var&gt;z&lt;/var&gt; determines the height above the plane of each vertex. If only a single &lt;var&gt;z&lt;/var&gt; matrix is given, then it is plotted over the meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;. Thus, columns of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;x&lt;/var&gt; values and rows of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;y&lt;/var&gt; values.</source>
          <target state="translated">ワイヤーフレームメッシュは長方形を使用してプロットされます。長方形[ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ] の頂点は、通常 &lt;code&gt;meshgrid&lt;/code&gt; の出力です。 xy平面の2次元長方形領域上。 &lt;var&gt;z&lt;/var&gt; は、各頂点の平面からの高さを決定します。単一の &lt;var&gt;z&lt;/var&gt; 行列のみが指定されている場合、それはメッシュグリッド &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; 上にプロットされます。したがって、 &lt;var&gt;z&lt;/var&gt; の列は異なる &lt;var&gt;x&lt;/var&gt; 値に対応し、 &lt;var&gt;z&lt;/var&gt; の行は異なる &lt;var&gt;y&lt;/var&gt; 値に対応します。</target>
        </trans-unit>
        <trans-unit id="6eb3e560b2f2428aa15ebd70e05c4ef13ad26212" translate="yes" xml:space="preserve">
          <source>The word is parsed as a &quot;quoted string&quot;. If the first character of the string is a double quote (&quot;) then the string includes everything until a matching double quote&amp;mdash;including whitespace, delimiters, and end-of-line characters. If a pair of consecutive double quotes appears in the input, it is replaced in the output by a single double quote. For examples, the input &quot;He said &quot;&quot;Hello&quot;&quot;&quot; would return the value &amp;rsquo;He said &quot;Hello&quot;&amp;rsquo;.</source>
          <target state="translated">単語は「引用文字列」として解析されます。文字列の最初の文字が二重引用符（ &quot;）の場合、文字列には、一致する二重引用符までのすべて（空白、区切り文字、行末文字を含む）が含まれます。連続する二重引用符のペアが入力にある場合、たとえば、入力で「彼は「こんにちは」」と入力すると、「彼は「こんにちは」と言った」という値が返されます。</target>
        </trans-unit>
        <trans-unit id="12418b6549dfa5072acea0b8cd8ff6eff0f2d06c" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to double.</source>
          <target state="translated">単語は数値として解析され、二重に変換されます。</target>
        </trans-unit>
        <trans-unit id="48a6f0a0afa203e91666c86669c0894fc9514d94" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to int32.</source>
          <target state="translated">単語は数値として解析され、int32に変換されます。</target>
        </trans-unit>
        <trans-unit id="248f11b9fbaf3f2841cf281340efa1e45f9d1462" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to int8, int16, int32, or int64. If no size is specified then int32 is used.</source>
          <target state="translated">単語は数値として解析され、int8、int16、int32、またはint64に変換されます。サイズが指定されていない場合は、int32が使用されます。</target>
        </trans-unit>
        <trans-unit id="57c9c1f648f8cafd5c7545bddf01209fc988d236" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to single (float).</source>
          <target state="translated">単語は数値として解析され、シングル(float)に変換されます。</target>
        </trans-unit>
        <trans-unit id="1822f8a66c09e956db4acd6c8070f64003a36469" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to uint8, uint16, uint32, or uint64. If no size is specified then uint32 is used.</source>
          <target state="translated">単語は数値として解析され、uint8、uint16、uint32、またはuint64に変換されます。サイズが指定されていない場合は、uint32が使用されます。</target>
        </trans-unit>
        <trans-unit id="9e32f77b25ad8753b803b583bcea3d23a669ec5f" translate="yes" xml:space="preserve">
          <source>The word is parsed as a string ending at the last character before whitespace, an end-of-line, or a delimiter specified in the options.</source>
          <target state="translated">単語は、空白、行末、オプションで指定した区切り文字の前の最後の文字で終わる文字列として解析されます。</target>
        </trans-unit>
        <trans-unit id="4d8336ecaeb40aa1d5097dde96e918c38d144caa" translate="yes" xml:space="preserve">
          <source>The word is parsed as a string.</source>
          <target state="translated">単語は文字列として解析されます。</target>
        </trans-unit>
        <trans-unit id="f03e746dc661bb2b5e9b3b91f182ad2d52d18a58" translate="yes" xml:space="preserve">
          <source>The word is skipped.</source>
          <target state="translated">言葉を飛ばしています。</target>
        </trans-unit>
        <trans-unit id="244182dc5a0001a0185b5a8f89a7f141bd2a771f" translate="yes" xml:space="preserve">
          <source>The word specified by the remainder of the conversion specifier is skipped.</source>
          <target state="translated">変換指定子の残りで指定された単語はスキップされます。</target>
        </trans-unit>
        <trans-unit id="159f88833ab382c059b737b674ffba5cf22b3de6" translate="yes" xml:space="preserve">
          <source>The x and y coordinates of the original columns of the data passed to &lt;code&gt;area&lt;/code&gt; prior to the cumulative summation used in the &lt;code&gt;area&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;area&lt;/code&gt; 関数で使用される累積合計の前に &lt;code&gt;area&lt;/code&gt; に渡されるデータの元の列のx座標とy座標。</target>
        </trans-unit>
        <trans-unit id="3165940f41a372dc35f37ce09db96b33d64f03cd" translate="yes" xml:space="preserve">
          <source>The y value of the bars in the &lt;code&gt;hggroup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hggroup&lt;/code&gt; 内のバーのy値。</target>
        </trans-unit>
        <trans-unit id="7fa3f5982b1eeb1201392b26a374775b18f08b19" translate="yes" xml:space="preserve">
          <source>The y-value where the baseline is drawn. (Default: 0)</source>
          <target state="translated">ベース ラ イ ンが描かれる y 値。(デ フ ォル ト:0)</target>
        </trans-unit>
        <trans-unit id="1fc722af7b27264af3c41be85ee66321a6ee30c8" translate="yes" xml:space="preserve">
          <source>Then if the path to &lt;code&gt;func1&lt;/code&gt; is &lt;code&gt;&amp;lt;directory&amp;gt;/func1.m&lt;/code&gt;, and if &lt;code&gt;func2&lt;/code&gt; is found in the directory &lt;code&gt;&amp;lt;directory&amp;gt;/private/func2.m&lt;/code&gt;, then &lt;code&gt;func2&lt;/code&gt; is only available for use of the functions, like &lt;code&gt;func1&lt;/code&gt;, that are found in &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">その後のパス場合 &lt;code&gt;func1&lt;/code&gt; ある &lt;code&gt;&amp;lt;directory&amp;gt;/func1.m&lt;/code&gt; 、及び場合 &lt;code&gt;func2&lt;/code&gt; ディレクトリにある &lt;code&gt;&amp;lt;directory&amp;gt;/private/func2.m&lt;/code&gt; 、その後、 &lt;code&gt;func2&lt;/code&gt; 同様に、機能の使用のためにのみ利用可能である &lt;code&gt;func1&lt;/code&gt; 見出されます、中に &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f47cf9b5d978dd8923138721acc094642ae853b" translate="yes" xml:space="preserve">
          <source>Then the solution at the roots &lt;var&gt;r&lt;/var&gt; is</source>
          <target state="translated">次に、根 &lt;var&gt;r&lt;/var&gt; の解は</target>
        </trans-unit>
        <trans-unit id="18a7080fd8254086cc0399e5bba079cdf26729b6" translate="yes" xml:space="preserve">
          <source>Then, call &lt;code&gt;fsolve&lt;/code&gt; with a specified initial condition to find the roots of the system of equations. For example, given the function &lt;code&gt;f&lt;/code&gt; defined above,</source>
          <target state="translated">次に、指定された初期条件を指定して &lt;code&gt;fsolve&lt;/code&gt; を呼び出し、連立方程式の根を求めます。たとえば、上で定義された関数 &lt;code&gt;f&lt;/code&gt; を考えると、</target>
        </trans-unit>
        <trans-unit id="7a66d2465ae5277677f88bca5637f141af59f245" translate="yes" xml:space="preserve">
          <source>There are a couple of important considerations in the choice of function name. First, it must be a valid Octave function name and so must be a sequence of letters, digits, and underscores not starting with a digit. Second, as Octave uses the function name to define the filename it attempts to find the function in, the function name in the &lt;code&gt;DEFUN_DLD&lt;/code&gt; macro must match the filename of the oct-file. Therefore, the above function should be in a file</source>
          <target state="translated">関数名の選択には、いくつかの重要な考慮事項があります。まず、これは有効なOctave関数名でなければならず、数字で始まっていない一連の文字、数字、およびアンダースコアでなければなりません。次に、Octaveは関数名を使用して、関数を検索しようとするファイル名を定義するため、 &lt;code&gt;DEFUN_DLD&lt;/code&gt; マクロの関数名は、octファイルのファイル名と一致する必要があります。したがって、上記の関数はファイル内にある必要があります</target>
        </trans-unit>
        <trans-unit id="1645c497a7650d167e84dcf1ce0d1cc2ec3e6935" translate="yes" xml:space="preserve">
          <source>There are a few further points to note about this method of creating a sparse matrix. First, it is possible to create a sparse matrix with fewer elements than are actually inserted in the matrix. Therefore,</source>
          <target state="translated">疎な行列を作成するこの方法については,さらにいくつか注意すべき点があります.まず,実際に行列に挿入される要素数よりも少ない要素で疎な行列を作成することができます.そのため,以下のようになります.</target>
        </trans-unit>
        <trans-unit id="e1555dc02e713bdbf994aaa4e1d1d8f45cbda957" translate="yes" xml:space="preserve">
          <source>There are a number of basic class methods that can (and should) be defined to allow the contents of the classes to be queried and set. The most basic of these is the &lt;code&gt;disp&lt;/code&gt; method. The &lt;code&gt;disp&lt;/code&gt; method is used by Octave whenever a class should be displayed on the screen. Usually this is the result of an Octave expression that doesn&amp;rsquo;t end with a semicolon. If this method is not defined, then Octave won&amp;rsquo;t print anything when displaying the contents of a class which can be confusing.</source>
          <target state="translated">クラスのコンテンツを照会および設定できるように定義できる（および定義する必要がある）基本的なクラスメソッドがいくつかあります。これらの最も基本的なものは &lt;code&gt;disp&lt;/code&gt; メソッドです。 &lt;code&gt;disp&lt;/code&gt; クラスが画面に表示されるべきときはいつでもこの方法は、オクターブで使用されます。通常、これはセミコロンで終わらないOctave式の結果です。このメソッドが定義されていない場合、Octaveはクラスのコンテンツを表示するときに何も出力せず、混乱を招く可能性があります。</target>
        </trans-unit>
        <trans-unit id="b138b7c0cb096c3691596544f6284479965cf209" translate="yes" xml:space="preserve">
          <source>There are a number of functions available for checking to see if the elements of a matrix meet some condition, and for rearranging the elements of a matrix. For example, Octave can easily tell you if all the elements of a matrix are finite, or are less than some specified value. Octave can also rotate the elements, extract the upper- or lower-triangular parts, or sort the columns of a matrix.</source>
          <target state="translated">行列の要素がある条件を満たすかどうかを調べたり,行列の要素を並べ替えたりするために利用できる関数が多数あります.例えば,Octaveは,行列のすべての要素が有限であるかどうか,あるいは指定した値よりも小さいかどうかを簡単に教えてくれます。また,Octaveは,要素を回転させたり,上三角部分や下三角部分を抽出したり,行列の列を並べ替えたりすることもできます。</target>
        </trans-unit>
        <trans-unit id="07a7e8dda6f5d69563a2994a985d31cd75ef5c05" translate="yes" xml:space="preserve">
          <source>There are a number of functions that allow information concerning sparse matrices to be obtained. The most basic of these is &lt;em&gt;issparse&lt;/em&gt; that identifies whether a particular Octave object is in fact a sparse matrix.</source>
          <target state="translated">スパース行列に関する情報を取得できるようにするいくつかの関数があります。これらの最も基本的なものは、特定のOctaveオブジェクトが実際に疎行列であるかどうかを識別する&lt;em&gt;issparse&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="4d155015acb65f9e1995f6488ef38a076dbe648c" translate="yes" xml:space="preserve">
          <source>There are also conversions for printing an integer argument as an unsigned value in octal, decimal, or hexadecimal radix (&amp;lsquo;</source>
          <target state="translated">整数引数を8進数、10進数、または16進数の基数（ '</target>
        </trans-unit>
        <trans-unit id="5b706061abf63ef4a6694855e26a15528c3a46e6" translate="yes" xml:space="preserve">
          <source>There are also many ways in which a function could be given as input. It might be passed as one of</source>
          <target state="translated">また、関数が入力として与えられる方法はたくさんあります。以下のいずれかとして渡されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c482e22c95a4929da153c6824babf917ca75c0b7" translate="yes" xml:space="preserve">
          <source>There are also the functions &lt;code&gt;mxSetPr&lt;/code&gt;, etc., that perform the inverse, and set the data of an array to use the block of memory pointed to by the argument of &lt;code&gt;mxSetPr&lt;/code&gt;.</source>
          <target state="translated">逆を実行する関数 &lt;code&gt;mxSetPr&lt;/code&gt; などもあり、配列のデータを設定して &lt;code&gt;mxSetPr&lt;/code&gt; の引数が指すメモリブロックを使用します。</target>
        </trans-unit>
        <trans-unit id="d3b9c3a94df61326b2ce0e75cdaf70e3756c9c58" translate="yes" xml:space="preserve">
          <source>There are currently three options for plotting in Octave: the external program gnuplot, the internal graphics engine using OpenGL coupled with either FLTK or Qt widgets. Gnuplot is a command-driven interactive function plotting program.</source>
          <target state="translated">Octaveでの作図には,現在のところ3つのオプションがあります:外部プログラムのgnuplot,OpenGLを使用した内部グラフィックスエンジンとFLTKまたはQtウィジェットのいずれかを結合したものです。gnuplotはコマンド駆動型の対話型関数描画プログラムです。</target>
        </trans-unit>
        <trans-unit id="8928dbb2cae046213eb080dcc0d78e4447288119" translate="yes" xml:space="preserve">
          <source>There are many classes of mathematical problems which give rise to matrices, where a large number of the elements are zero. In this case it makes sense to have a special matrix type to handle this class of problems where only the nonzero elements of the matrix are stored. Not only does this reduce the amount of memory to store the matrix, but it also means that operations on this type of matrix can take advantage of the a priori knowledge of the positions of the nonzero elements to accelerate their calculations.</source>
          <target state="translated">数学的な問題の中には,多数の要素がゼロである行列を生成するクラスが数多く存在します.この場合,行列の非ゼロ要素のみが格納されるこのクラスの問題を扱うために,特別な行列型を持つことが理にかなっています.これは,行列を格納するためのメモリ量を削減するだけでなく,このタイプの行列に対する操作が,非ゼロ要素の位置の事前知識を利用して計算を高速化できることを意味します.</target>
        </trans-unit>
        <trans-unit id="0fc1040e188950da7dc34f76d66c0a14d4f8352b" translate="yes" xml:space="preserve">
          <source>There are many different formats for representing such data. Currently, only the two most popular, &lt;em&gt;linear encoding&lt;/em&gt; and &lt;em&gt;mu-law encoding&lt;/em&gt;, are supported by Octave. There is an excellent FAQ on audio formats by Guido van Rossum &lt;a href=&quot;mailto:guido@cwi.nl&quot;&gt;guido@cwi.nl&lt;/a&gt; which can be found at any FAQ ftp site, in particular in the directory</source>
          <target state="translated">そのようなデータを表すための多くの異なるフォーマットがあります。現在、Octaveでサポートされているのは、最も一般的な2つの&lt;em&gt;線形エンコーディング&lt;/em&gt;と&lt;em&gt;mu-lawエンコーディング&lt;/em&gt;のみです。Guido van Rossum &lt;a href=&quot;mailto:guido@cwi.nl&quot;&gt;guido@cwi.nl&lt;/a&gt;によるオーディオ形式に関する優れたFAQがあります。これは、FAQのftpサイト、特にディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="91b72cd6e53863779c1c8a43dd8950e080a2cd9d" translate="yes" xml:space="preserve">
          <source>There are many different means of storing sparse matrix data. What all of the methods have in common is that they attempt to reduce the complexity and storage given a priori knowledge of the particular class of problems that will be solved. A good summary of the available techniques for storing sparse matrix is given by Saad &lt;a href=&quot;#FOOT8&quot; name=&quot;DOCF8&quot;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt;. With full matrices, knowledge of the point of an element of the matrix within the matrix is implied by its position in the computers memory. However, this is not the case for sparse matrices, and so the positions of the nonzero elements of the matrix must equally be stored.</source>
          <target state="translated">スパースマトリックスデータを格納するには、さまざまな方法があります。すべての方法に共通するのは、解決される特定のクラスの問題について事前に知識が与えられている場合、複雑さとストレージを削減しようとすることです。スパース行列を保存するために利用できる手法の良い要約は、Saad &lt;a href=&quot;#FOOT8&quot; name=&quot;DOCF8&quot;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt;によって与えられます。完全な行列では、行列内の行列の要素の点の知識は、コンピューターのメモリ内の位置によって暗示されます。ただし、これはスパース行列の場合ではないため、行列のゼロ以外の要素の位置も同様に格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="824b3fbb5f8225fa6f2f70f5535f67ea4f163f11" translate="yes" xml:space="preserve">
          <source>There are many different variable types in Octave, but only ones created through &lt;code&gt;javaObject&lt;/code&gt; can use Java functions. Before using Java with an unknown object the type can be checked with &lt;code&gt;isjava&lt;/code&gt;.</source>
          <target state="translated">Octaveには多くの異なる変数型がありますが、java関数を使用して作成できるのは、 &lt;code&gt;javaObject&lt;/code&gt; を介して作成されたものだけです。不明なオブジェクトでJavaを使用する前に、型を &lt;code&gt;isjava&lt;/code&gt; で確認できます。</target>
        </trans-unit>
        <trans-unit id="bcbd373f86f2ee06e41efe99927f5c0b9d3c8b93" translate="yes" xml:space="preserve">
          <source>There are many functions that directly return sparse matrices. These include &lt;em&gt;speye&lt;/em&gt;, &lt;em&gt;sprand&lt;/em&gt;, &lt;em&gt;diag&lt;/em&gt;, etc.</source>
          <target state="translated">スパース行列を直接返す関数はたくさんあります。これらには、&lt;em&gt;speye&lt;/em&gt;、&lt;em&gt;sprand&lt;/em&gt;、&lt;em&gt;diag&lt;/em&gt;などが含まれます。</target>
        </trans-unit>
        <trans-unit id="2942de5de3cf5ff24e7ec57482acb77f6304d417" translate="yes" xml:space="preserve">
          <source>There are seven different things covered in this section.</source>
          <target state="translated">ここでは7つの異なるものが取り上げられています。</target>
        </trans-unit>
        <trans-unit id="edd888b06834fc2508cfbf2a9d41eb69e6b056d1" translate="yes" xml:space="preserve">
          <source>There are several basic functions to return specific sparse matrices. For example the sparse identity matrix, is a matrix that is often needed. It therefore has its own function to create it as &lt;code&gt;speye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;speye (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;)&lt;/code&gt;, which creates an &lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;n&lt;/var&gt; or &lt;var&gt;r&lt;/var&gt;-by-&lt;var&gt;c&lt;/var&gt; sparse identity matrix.</source>
          <target state="translated">特定のスパース行列を返すいくつかの基本的な関数があります。たとえば、疎行列は、しばしば必要とされる行列です。したがって、それはそれを &lt;code&gt;speye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; または &lt;code&gt;speye (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;)&lt;/code&gt; として作成する独自の関数を持ち、 &lt;var&gt;n&lt;/var&gt; 行 &lt;var&gt;n&lt;/var&gt; 列または &lt;var&gt;r&lt;/var&gt; 行 &lt;var&gt;c&lt;/var&gt; 列のスパース単位行列を作成します。</target>
        </trans-unit>
        <trans-unit id="46eb10a778bcc48fafd3816fbebfeee11b38b61e" translate="yes" xml:space="preserve">
          <source>There are several basic ways of constructing matrices or multi-dimensional arrays. Using the class &lt;code&gt;Matrix&lt;/code&gt; as an example one can</source>
          <target state="translated">行列または多次元配列を作成するには、いくつかの基本的な方法があります。クラス &lt;code&gt;Matrix&lt;/code&gt; を例として使用すると、</target>
        </trans-unit>
        <trans-unit id="7d0c70cc7f3e5e6fb5c02526ea8caa6d494fa58d" translate="yes" xml:space="preserve">
          <source>There are several functions within Octave that can be useful for the purposes of parameter checking. These include the methods of the &lt;code&gt;octave_value&lt;/code&gt; class like &lt;code&gt;is_real_matrix&lt;/code&gt;, &lt;code&gt;is_numeric_type&lt;/code&gt;, etc. (see</source>
          <target state="translated">Octaveには、パラメーターのチェックに役立ついくつかの関数があります。これらには、 &lt;code&gt;is_real_matrix&lt;/code&gt; 、 &lt;code&gt;is_numeric_type&lt;/code&gt; などの &lt;code&gt;octave_value&lt;/code&gt; クラスのメソッドが含まれます（</target>
        </trans-unit>
        <trans-unit id="410cf12f0d30c93339401cc3545818d844e3b9b4" translate="yes" xml:space="preserve">
          <source>There are several graphical means of finding out information about sparse matrices. The first is the &lt;em&gt;spy&lt;/em&gt; command, which displays the structure of the nonzero elements of the matrix. See &lt;a href=&quot;#fig_003aspmatrix&quot;&gt;Figure 22.1&lt;/a&gt;, for an example of the use of &lt;em&gt;spy&lt;/em&gt;. More advanced graphical information can be obtained with the &lt;em&gt;treeplot&lt;/em&gt;, &lt;em&gt;etreeplot&lt;/em&gt; and &lt;em&gt;gplot&lt;/em&gt; commands.</source>
          <target state="translated">スパース行列に関する情報を見つけるには、いくつかのグラフィカルな方法があります。1つ目は、&lt;em&gt;spy&lt;/em&gt;コマンドです。これは、行列の非ゼロ要素の構造を表示します。&lt;em&gt;spy&lt;/em&gt;の使用例については、&lt;a href=&quot;#fig_003aspmatrix&quot;&gt;図22.1を&lt;/a&gt;参照してください。より高度なグラフィック情報は、&lt;em&gt;treeplot&lt;/em&gt;、&lt;em&gt;etreeplot&lt;/em&gt;、および&lt;em&gt;gplot&lt;/em&gt;コマンドを&lt;em&gt;使用&lt;/em&gt;して取得できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae53f59d6869944d32d5828c8e09b275dc8a74a0" translate="yes" xml:space="preserve">
          <source>There are several means to create sparse matrix.</source>
          <target state="translated">疎な行列を作成する手段はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="0679add9d01f865d61f920d7e3021c4295068cd2" translate="yes" xml:space="preserve">
          <source>There are some important differences between the various interpolation methods. The &lt;code&gt;&quot;spline&quot;&lt;/code&gt; method enforces that both the first and second derivatives of the interpolated values have a continuous derivative, whereas the other methods do not. This means that the results of the &lt;code&gt;&quot;spline&quot;&lt;/code&gt; method are generally smoother. If the function to be interpolated is in fact smooth, then &lt;code&gt;&quot;spline&quot;&lt;/code&gt; will give excellent results. However, if the function to be evaluated is in some manner discontinuous, then &lt;code&gt;&quot;pchip&quot;&lt;/code&gt; interpolation might give better results.</source>
          <target state="translated">さまざまな補間方法にはいくつかの重要な違いがあります。 &lt;code&gt;&quot;spline&quot;&lt;/code&gt; 他の方法がないのに対し、補間値の一次および二次導関数の両方が、連続的な導関数を有するという方法強制。これは、 &lt;code&gt;&quot;spline&quot;&lt;/code&gt; 法の結果が一般的に滑らかであることを意味します。補間される関数が実際に滑らかである場合、 &lt;code&gt;&quot;spline&quot;&lt;/code&gt; は優れた結果を与えます。ただし、評価される関数が何らかの方法で不連続である場合、 &lt;code&gt;&quot;pchip&quot;&lt;/code&gt; 補間はより良い結果をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="91d560ddeec5a2587817ef2cd84c542f8ea882c0" translate="yes" xml:space="preserve">
          <source>There are three additional support functions that allow the user to find out where in the execution of a script Octave entered the debug mode, and to print the code in the script surrounding the point where Octave entered debug mode.</source>
          <target state="translated">ユーザは,スクリプトの実行中のどこでOctaveがデバッグモードに入ったかを知ることができ,また,Octaveがデバッグモードに入った点の周辺のスクリプト内のコードを表示することができる3つの追加のサポート関数があります。</target>
        </trans-unit>
        <trans-unit id="ce19aa7b04e3e500ecb3038050383ea6c918ad18" translate="yes" xml:space="preserve">
          <source>There are three calling forms of the function:</source>
          <target state="translated">関数には3つの呼び出し形式があります。</target>
        </trans-unit>
        <trans-unit id="687a16741963749084aeb2ccc09916562d74e4dd" translate="yes" xml:space="preserve">
          <source>There are three classes of sparse objects that are of interest to the user.</source>
          <target state="translated">ユーザーが興味を持つスパースオブジェクトには、3つのクラスがあります。</target>
        </trans-unit>
        <trans-unit id="eefaa87f3b5146a111dfb03cb6ffcdf3ee130faa" translate="yes" xml:space="preserve">
          <source>There are three files that are always available. Although these files can be accessed using their corresponding numeric file ids, you should always use the symbolic names given in the table below, since it will make your programs easier to understand.</source>
          <target state="translated">常に利用可能なファイルは3つあります。これらのファイルは対応する数字のファイルIDを使ってアクセスすることができますが、プログラムを理解しやすくするために、下の表で与えられたシンボリック名を常に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b8391bc5129634e3cc859ba23f17ea472d5602fa" translate="yes" xml:space="preserve">
          <source>There are three functions that modify the behavior of &lt;code&gt;save&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; の動作を変更する3つの関数があります。</target>
        </trans-unit>
        <trans-unit id="50ba6ca1444cd09db2ab6ced2e204a22e264da62" translate="yes" xml:space="preserve">
          <source>There are three multi-dimensional interpolation functions in Octave, with similar capabilities. Methods using Delaunay tessellation are described in &lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;Interpolation on Scattered Data&lt;/a&gt;.</source>
          <target state="translated">Octaveには、同様の機能を持つ3つの多次元補間関数があります。Delaunayテッセレーションを使用する方法については&lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;、散布データの&lt;/a&gt;内挿で説明しています。</target>
        </trans-unit>
        <trans-unit id="1a0627b1daf19be2819a9d6efc89075a3058c3ef" translate="yes" xml:space="preserve">
          <source>There are three ways to give the property names and values:</source>
          <target state="translated">プロパティ名と値の与え方は3つあります。</target>
        </trans-unit>
        <trans-unit id="9e14f29cff5fc2e3313b1e95dda6ce6fb872d605" translate="yes" xml:space="preserve">
          <source>There are times when it is useful to write code that contains assignments within the condition of a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; statement. For example, statements like</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; または &lt;code&gt;if&lt;/code&gt; ステートメントの条件内の割り当てを含むコードを記述すると便利な場合があります。たとえば、次のようなステートメント</target>
        </trans-unit>
        <trans-unit id="0dcfc4320981585f5b3ce4e6c05c601d0b1fdc5d" translate="yes" xml:space="preserve">
          <source>There are two basic means of interrupting the execution of an Octave script. These are breakpoints (see &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;Breakpoints&lt;/a&gt;), discussed in the next section, and interruption based on some condition.</source>
          <target state="translated">Octaveスクリプトの実行を中断するには、2つの基本的な方法があります。これらは、次のセクションで説明する&lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;ブレーク&lt;/a&gt;ポイント（ブレークポイントを参照）であり、いくつかの条件に基づく中断です。</target>
        </trans-unit>
        <trans-unit id="47bd155efcb3a1f9c8b1a57817bc82244931ec9c" translate="yes" xml:space="preserve">
          <source>There are two important things to know in this case. First, the number of input arguments to the user function is fixed, and in the above example is a single argument. Second, to avoid leaving the temporary function in the Octave symbol table it should be cleared after use. Also, by convention all internal function names begin and end with the character sequence &amp;lsquo;</source>
          <target state="translated">この場合、知っておくべき重要なことが2つあります。まず、ユーザー関数への入力引数の数は固定されており、上記の例では単一の引数です。次に、一時的な関数がOctaveシンボルテーブルに残されないようにするには、使用後にクリアする必要があります。また、慣例により、すべての内部関数名は文字シーケンス 'で始まり、終わります</target>
        </trans-unit>
        <trans-unit id="15658fe932976cfb0a3fc6f59ae14aa060162557" translate="yes" xml:space="preserve">
          <source>There are two intrinsically different types of &lt;code&gt;classdef&lt;/code&gt; classes, whose major difference is the behavior regarding variable assignment. The first type are &lt;b&gt;value classes&lt;/b&gt;:</source>
          <target state="translated">本質的に異なる2つのタイプの &lt;code&gt;classdef&lt;/code&gt; クラスがあり、その主な違いは変数の割り当てに関する動作です。最初のタイプは&lt;b&gt;値クラス&lt;/b&gt;です：</target>
        </trans-unit>
        <trans-unit id="d61fd6d7a7896d31872b471cce24825be9fd322a" translate="yes" xml:space="preserve">
          <source>There are two significant limitations on Fourier interpolation. First, the function signal is assumed to be periodic, and so non-periodic signals will be poorly represented at the edges. Second, both the signal and its interpolation are required to be sampled at equispaced points. An example of the use of &lt;code&gt;interpft&lt;/code&gt; is</source>
          <target state="translated">フーリエ補間には2つの重要な制限があります。最初に、関数信号は周期的であると想定されているため、非周期的信号はエッジで不十分に表現されます。次に、信号とその補間の両方が等間隔のポイントでサンプリングされる必要があります。 &lt;code&gt;interpft&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3965a46796224da3a2635d002810c63d9be8d804" translate="yes" xml:space="preserve">
          <source>There are two useful strategies for creating a sparse matrix. The first is to create three vectors representing the row index, column index, and data values, and from these create the matrix. The second alternative is to create a sparse matrix with the appropriate amount of space, and then fill in the values. Both techniques have their advantages and disadvantages.</source>
          <target state="translated">疎な行列を作成するには,2つの有効な方法があります.1つ目は,行インデックス,列インデックス,データ値を表す3つのベクトルを作成し,これらから行列を作成します.2つ目の方法は,適切な量の空間を持つ疎な行列を作成し,それらの値を埋めていくことです.どちらの手法にも長所と短所があります.</target>
        </trans-unit>
        <trans-unit id="e8225d3040eedccf36dba4859768df1cf6ea0e73" translate="yes" xml:space="preserve">
          <source>There is however one known case where this behavior of Octave&amp;rsquo;s sparse matrices will cause a problem. That is in the handling of the &lt;em&gt;diag&lt;/em&gt; function. Whether &lt;em&gt;diag&lt;/em&gt; returns a sparse or full matrix depending on the type of its input arguments. So</source>
          <target state="translated">ただし、Octaveのスパース行列のこの動作が問題を引き起こす既知のケースが1つあります。それは、&lt;em&gt;diag&lt;/em&gt;関数の処理です。&lt;em&gt;diag&lt;/em&gt;が入力引数のタイプに応じてスパース行列または完全行列を返すかどうか。そう</target>
        </trans-unit>
        <trans-unit id="84edc28bec2443f8e6d77afe10c4123b4b2daf35" translate="yes" xml:space="preserve">
          <source>There is no great harm in using &lt;code&gt;F77_XFCN&lt;/code&gt; in all cases, except that for Fortran code that is short running and executes a large number of times, there is potentially an overhead in doing so. However, if &lt;code&gt;F77_FCN&lt;/code&gt; is used with code that calls &lt;code&gt;XSTOP&lt;/code&gt;, Octave can generate a segmentation fault.</source>
          <target state="translated">すべてのケースで &lt;code&gt;F77_XFCN&lt;/code&gt; を使用しても大きな害はありません。ただし、短時間で実行され、何度も実行されるFortranコードの場合、オーバーヘッドが発生する可能性があります。ただし、 &lt;code&gt;F77_FCN&lt;/code&gt; を呼び出すコードで使用され &lt;code&gt;XSTOP&lt;/code&gt; を、Octaveはセグメンテーションフォールトを生成することができます。</target>
        </trans-unit>
        <trans-unit id="0a516eb3045062bca577c0035bd8321aac76dced" translate="yes" xml:space="preserve">
          <source>There is often a need to be able to call another Octave function from within an oct-file, and there are many examples of such within Octave itself. For example, the &lt;code&gt;quad&lt;/code&gt; function is an oct-file that calculates the definite integral by quadrature over a user-supplied function.</source>
          <target state="translated">多くの場合、octファイル内から別のOctave関数を呼び出せるようにする必要があり、Octave自体にもそのような多くの例があります。たとえば、 &lt;code&gt;quad&lt;/code&gt; 関数は、ユーザー指定の関数に対して求積法によって定積分を計算するoctファイルです。</target>
        </trans-unit>
        <trans-unit id="492b91c15b54939ff80441f6a984931f82eb8089" translate="yes" xml:space="preserve">
          <source>There is one built-in variable with a special meaning. The &lt;code&gt;ans&lt;/code&gt; variable always contains the result of the last computation, where the output wasn&amp;rsquo;t assigned to any variable. The code &lt;code&gt;a = cos (pi)&lt;/code&gt; will assign the value -1 to the variable &lt;code&gt;a&lt;/code&gt;, but will not change the value of &lt;code&gt;ans&lt;/code&gt;. However, the code &lt;code&gt;cos (pi)&lt;/code&gt; will set the value of &lt;code&gt;ans&lt;/code&gt; to -1.</source>
          <target state="translated">特別な意味を持つ組み込み変数が1つあります。 &lt;code&gt;ans&lt;/code&gt; 変数は常に出力を任意の変数に割り当てられていなかった最後の計算の結果が含まれています。コード &lt;code&gt;a = cos (pi)&lt;/code&gt; は、値-1を変数 &lt;code&gt;a&lt;/code&gt; に割り当てますが、 &lt;code&gt;ans&lt;/code&gt; の値は変更しません。ただし、コード &lt;code&gt;cos (pi)&lt;/code&gt; は &lt;code&gt;ans&lt;/code&gt; の値を-1に設定します。</target>
        </trans-unit>
        <trans-unit id="7594ce386124a8cc625777db8203b513bd8b4a86" translate="yes" xml:space="preserve">
          <source>There is still one additional problem with this function. What if it is called without an argument? Without additional error checking, Octave will probably print an error message that won&amp;rsquo;t really help you track down the source of the error. To allow you to catch errors like this, Octave provides each function with an automatic variable called &lt;code&gt;nargin&lt;/code&gt;. Each time a function is called, &lt;code&gt;nargin&lt;/code&gt; is automatically initialized to the number of arguments that have actually been passed to the function. For example, we might rewrite the &lt;code&gt;avg&lt;/code&gt; function like this:</source>
          <target state="translated">この関数には、まだ1つの追加の問題があります。引数なしで呼び出された場合はどうなりますか？追加のエラーチェックがなければ、Octaveはおそらくエラーメッセージを出力しますが、これは実際にはエラーの原因を追跡するのに役立ちません。このようなエラーをキャッチできるようにするために、Octaveは各関数に &lt;code&gt;nargin&lt;/code&gt; と呼ばれる自動変数を提供します。関数が呼び出される &lt;code&gt;nargin&lt;/code&gt; 、narginは関数に実際に渡された引数の数に自動的に初期化されます。たとえば、 &lt;code&gt;avg&lt;/code&gt; 関数を次のように書き換えます。</target>
        </trans-unit>
        <trans-unit id="466b74f976ca2c1251705226e1cc4c1c663ad583" translate="yes" xml:space="preserve">
          <source>Therefore, the test in &lt;code&gt;tsearch&lt;/code&gt; and &lt;code&gt;tsearchn&lt;/code&gt; essentially only needs to express each point in terms of the Barycentric coordinates of each of the simplices of the N-simplex and test the values of &lt;var&gt;beta&lt;/var&gt;. This is exactly the implementation used in &lt;code&gt;tsearchn&lt;/code&gt;. &lt;code&gt;tsearch&lt;/code&gt; is optimized for 2-dimensions and the Barycentric coordinates are not explicitly formed.</source>
          <target state="translated">したがって、 &lt;code&gt;tsearch&lt;/code&gt; と &lt;code&gt;tsearchn&lt;/code&gt; のテストでは、基本的に、各点をNシンプレックスの各シンプレックスの重心座標で表現し、 &lt;var&gt;beta&lt;/var&gt; の値をテストするだけで済みます。これは、まさに &lt;code&gt;tsearchn&lt;/code&gt; で使用される実装です。 &lt;code&gt;tsearch&lt;/code&gt; は2次元用に最適化されており、重心座標は明示的に形成されません。</target>
        </trans-unit>
        <trans-unit id="d2c3c26b6149fb034d92c53a1de76948132a8e40" translate="yes" xml:space="preserve">
          <source>Therefore, there is a certain density of nonzero elements of a matrix where it no longer makes sense to store it as a sparse matrix, but rather as a full matrix. For this reason operators and functions that have a high probability of returning a full matrix will always return one. For example adding a scalar constant to a sparse matrix will almost always make it a full matrix, and so the example,</source>
          <target state="translated">したがって,行列の非ゼロ要素には,もはや疎な行列としてではなく,完全な行列として保存することが意味をなさない密度があります.このため,完全な行列を返す確率が高い演算子や関数は,常に 1 つの行列を返すことになります.例えば,疎な行列にスカラー定数を追加すると,ほとんどの場合,正規の行列になります.</target>
        </trans-unit>
        <trans-unit id="331cf903e951701328f89f9230cad091eb6c976f" translate="yes" xml:space="preserve">
          <source>These are the basic two-dimensional matrix types of Octave. In addition there are a number of multi-dimensional array types including</source>
          <target state="translated">これらは,Octaveの基本的な2次元行列型です。さらに,以下を含む多数の多次元配列型があります。</target>
        </trans-unit>
        <trans-unit id="22cd5043bcfb95309cae4942d5bf63fb208c135b" translate="yes" xml:space="preserve">
          <source>These are the external build dependencies of the package and are not checked by the package manager. This is here as a hint to the distribution packager. They follow the same conventions as the &lt;code&gt;Depends&lt;/code&gt; keyword. Note that in general, packaging systems such as &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;deb&lt;/code&gt; autoprobe the install dependencies from the build dependencies, and therefore a &lt;code&gt;BuildRequires&lt;/code&gt; dependency usually removes the need for a &lt;code&gt;SystemRequirements&lt;/code&gt; dependency.</source>
          <target state="translated">これらはパッケージの外部ビルド依存関係であり、パッケージマネージャーによってチェックされません。これは、配布パッケージャへのヒントとしてここにあります。 &lt;code&gt;Depends&lt;/code&gt; キーワードと同じ規則に従います。一般に、 &lt;code&gt;rpm&lt;/code&gt; や &lt;code&gt;deb&lt;/code&gt; などのパッケージシステムでは、ビルドの依存関係からインストールの依存関係が自動プローブされるため、 &lt;code&gt;BuildRequires&lt;/code&gt; の依存関係では通常、 &lt;code&gt;SystemRequirements&lt;/code&gt; の依存関係が不要になります。</target>
        </trans-unit>
        <trans-unit id="516c1af866d51d2fdff4b0d6f94bfa815675f767" translate="yes" xml:space="preserve">
          <source>These are the external install dependencies of the package and are not checked by the package manager. This is here as a hint to the distribution packager. They follow the same conventions as the &lt;code&gt;Depends&lt;/code&gt; keyword.</source>
          <target state="translated">これらはパッケージの外部インストール依存関係であり、パッケージマネージャーによってチェックされません。これは、配布パッケージャへのヒントとしてここにあります。 &lt;code&gt;Depends&lt;/code&gt; キーワードと同じ規則に従います。</target>
        </trans-unit>
        <trans-unit id="76a2ee1f74b324a27d5cf79a2c29a6906b8dd1e5" translate="yes" xml:space="preserve">
          <source>These capabilities are used in a number of basic graphics objects. The &lt;code&gt;hggroup&lt;/code&gt; objects created by the functions of Octave contain one or more graphics object and are used to:</source>
          <target state="translated">これらの機能は、いくつかの基本的なグラフィックオブジェクトで使用されます。 &lt;code&gt;hggroup&lt;/code&gt; オクターブの機能によって作成されたオブジェクトは、一つ以上のグラフィックスオブジェクトとするために使用される含みます。</target>
        </trans-unit>
        <trans-unit id="77180f5e7b9500bc083a4f119de56fa8e271e19c" translate="yes" xml:space="preserve">
          <source>These codes may be used in conjunction with the { and } characters to limit the change to a part of the string. For example,</source>
          <target state="translated">これらのコードは、変更を文字列の一部に限定するために{や}文字と組み合わせて使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="98f074e49aad02fdf334b6d02cca69d88d572c30" translate="yes" xml:space="preserve">
          <source>These functions are rarely used in practice. One example is the &lt;code&gt;fail (&amp;lsquo;&lt;samp&gt;code&lt;/samp&gt;&amp;rsquo;, &amp;lsquo;&lt;samp&gt;pattern&lt;/samp&gt;&amp;rsquo;)&lt;/code&gt; function which evaluates &amp;lsquo;</source>
          <target state="translated">これらの関数が実際に使用されることはほとんどありません。1つの例は &lt;code&gt;fail (&amp;lsquo;&lt;samp&gt;code&lt;/samp&gt;&amp;rsquo;, &amp;lsquo;&lt;samp&gt;pattern&lt;/samp&gt;&amp;rsquo;)&lt;/code&gt; を評価する関数</target>
        </trans-unit>
        <trans-unit id="f6f242f2f73e40e468f04100d6a0ccceffa4a9f3" translate="yes" xml:space="preserve">
          <source>These functions do not implement a GUI element but are useful when developing programs that do. The functions &lt;code&gt;uiwait&lt;/code&gt;, &lt;code&gt;uiresume&lt;/code&gt;, and &lt;code&gt;waitfor&lt;/code&gt; are only available with the &lt;code&gt;qt&lt;/code&gt; or &lt;code&gt;fltk&lt;/code&gt; toolkits.</source>
          <target state="translated">これらの関数はGUI要素を実装していませんが、実装するプログラムを開発するときに役立ちます。関数 &lt;code&gt;uiwait&lt;/code&gt; 、 &lt;code&gt;uiresume&lt;/code&gt; 、および &lt;code&gt;waitfor&lt;/code&gt; は、 &lt;code&gt;qt&lt;/code&gt; または &lt;code&gt;fltk&lt;/code&gt; ツールキットでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="6d8019c6589e6cf4ca1496dd0d3d75fd9acce0e7" translate="yes" xml:space="preserve">
          <source>These lists of function calls make it fairly easy to trace the path your program took before the error occurred, and to correct the error before trying again.</source>
          <target state="translated">これらの関数呼び出しのリストを使用すると、エラーが発生する前にプログラムが取ったパスを追跡したり、再度試す前にエラーを修正したりすることがかなり簡単になります。</target>
        </trans-unit>
        <trans-unit id="89d5f1b227db73e91b393e0028b5569c63f68b74" translate="yes" xml:space="preserve">
          <source>These operators group right to left.</source>
          <target state="translated">これらの演算子は右から左にグループ化されます。</target>
        </trans-unit>
        <trans-unit id="a854e78a3e0d930cdd2b056ddef26cc233245776" translate="yes" xml:space="preserve">
          <source>These operators work on an element-by-element basis. For example, the expression</source>
          <target state="translated">これらの演算子は、要素ごとに動作します。例えば、式</target>
        </trans-unit>
        <trans-unit id="57ac34382fadfc67c830a52b20fd23a6b3b68189" translate="yes" xml:space="preserve">
          <source>These rotations are centered around the camera target (see &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt;). First the camera position is pitched up or down by rotating it &lt;var&gt;phi&lt;/var&gt; degrees around an axis orthogonal to both the viewing direction (specifically &lt;code&gt;camtarget() - campos()&lt;/code&gt;) and the camera &amp;ldquo;up vector&amp;rdquo; (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;). Example:</source>
          <target state="translated">これらの回転は、カメラターゲットを中心にしています（&lt;a href=&quot;#XREFcamtarget&quot;&gt;camtargetを&lt;/a&gt;参照）。最初に、カメラの位置は、表示方向（具体的には &lt;code&gt;camtarget() - campos()&lt;/code&gt; ）とカメラの「アップベクトル」（&lt;a href=&quot;#XREFcamup&quot;&gt;camupを&lt;/a&gt;参照）の両方に直交する軸を中心に &lt;var&gt;phi&lt;/var&gt; 度回転させることにより、上下に調整されます。例：</target>
        </trans-unit>
        <trans-unit id="60805c7b6bd0842c8bcdda9d4de849b0d534f7bd" translate="yes" xml:space="preserve">
          <source>These routines are highly optimized and many do not carry the overhead of being interpreted.</source>
          <target state="translated">これらのルーチンは高度に最適化されており、多くは解釈されることによるオーバーヘッドを持ちません。</target>
        </trans-unit>
        <trans-unit id="f3cd139378dd80fccd1ba3c76f09ba5eaafa810d" translate="yes" xml:space="preserve">
          <source>These types all share a number of basic methods and operators. Many bear a resemblance to functions that exist in the interpreter. A selection of useful methods include</source>
          <target state="translated">これらの型はすべて、多くの基本的なメソッドと演算子を共有しています。多くは、インタープリタに存在する関数に類似しています。便利なメソッドには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="ac1bb402d49b1a35ff04a2c063f40a0588aa5b17" translate="yes" xml:space="preserve">
          <source>These warnings are emitted if a (nearly) singular matrix is inverted. By default, the &lt;code&gt;Octave:nearly-singular-matrix&lt;/code&gt; and &lt;code&gt;Octave:singular-matrix&lt;/code&gt; warnings are enabled.</source>
          <target state="translated">これらの警告は、（ほぼ）特異行列が反転している場合に発生します。デフォルトでは、 &lt;code&gt;Octave:nearly-singular-matrix&lt;/code&gt; および &lt;code&gt;Octave:singular-matrix&lt;/code&gt; 警告が有効になっています。</target>
        </trans-unit>
        <trans-unit id="c78f8f82db1e4ddf507a02ca7de09b2ee880f9b9" translate="yes" xml:space="preserve">
          <source>This allows more rapid solutions of linear equations involving &lt;var&gt;A&lt;/var&gt; to be performed.</source>
          <target state="translated">これにより、 &lt;var&gt;A&lt;/var&gt; を含む線形方程式のより迅速な解を実行できます。</target>
        </trans-unit>
        <trans-unit id="114d33926dc55d70ed6fb4c5dffd47b70df2af5e" translate="yes" xml:space="preserve">
          <source>This allows the cost of determining the matrix type to be avoided. However, incorrectly defining the matrix type will result in incorrect results from solutions of linear equations, and so it is entirely the responsibility of the user to correctly identify the matrix type</source>
          <target state="translated">これにより,行列の型を決定するコストを回避することができます.しかし,行列の型を誤って定義すると,線形方程式の解から誤った結果が得られることになります.</target>
        </trans-unit>
        <trans-unit id="9032d9741099a355cfb52ff095d5eccc4587e6e9" translate="yes" xml:space="preserve">
          <source>This allows you to view one screenful at a time. Some pagers (such as &lt;code&gt;less&lt;/code&gt;&amp;mdash;see &lt;a href=&quot;installation#Installation&quot;&gt;Installation&lt;/a&gt;) are also capable of moving backward on the output.</source>
          <target state="translated">これにより、一度に1画面ずつ表示できます。（例えば、いくつかのページャ &lt;code&gt;less&lt;/code&gt; -see &lt;a href=&quot;installation#Installation&quot;&gt;インストール&lt;/a&gt;）も出力に後退可能です。</target>
        </trans-unit>
        <trans-unit id="ce3bdf687e04e1138c7ae08f9b74b69db8e7517b" translate="yes" xml:space="preserve">
          <source>This appendix will eventually contain a semi-formal description of Octave&amp;rsquo;s language.</source>
          <target state="translated">この付録には、最終的にOctaveの言語のセミフォーマルな記述が含まれます。</target>
        </trans-unit>
        <trans-unit id="40e2801127f754f45136424c94122dc01595e8cb" translate="yes" xml:space="preserve">
          <source>This applies to arrays (matrices), cell arrays, and structs indexed using &amp;lsquo;</source>
          <target state="translated">これは、配列（行列）、セル配列、および 'を使用してインデックス付けされた構造体に適用されます</target>
        </trans-unit>
        <trans-unit id="0b8547225adb0b322654638d6ce5a5b8542cc4cd" translate="yes" xml:space="preserve">
          <source>This behavior is consistent with the other logical functions. See &lt;a href=&quot;logical-values#Logical-Values&quot;&gt;Logical Values&lt;/a&gt;. The behavior differs from the C language function which returns nonzero if the sign bit is set.</source>
          <target state="translated">この動作は、他の論理関数と一致しています。&lt;a href=&quot;logical-values#Logical-Values&quot;&gt;論理値を&lt;/a&gt;参照してください。動作は、符号ビットが設定されている場合にゼロ以外を返すC言語関数とは異なります。</target>
        </trans-unit>
        <trans-unit id="a3e74c97a50c32e12f34831e8a63583aea04f1eb" translate="yes" xml:space="preserve">
          <source>This behavior is necessary for the boolean operators to work as described for matrix-valued operands.</source>
          <target state="translated">この動作は、ブーリアン演算子が行列値のオペランドで説明されているように動作するために必要です。</target>
        </trans-unit>
        <trans-unit id="8ffa8b0148502639eadd3acddb1fc5d60065929f" translate="yes" xml:space="preserve">
          <source>This behavior not only facilitates the most straightforward and efficient implementation of algorithms, but also preserves certain useful invariants, like:</source>
          <target state="translated">この動作は、アルゴリズムの最も簡単で効率的な実装を容易にするだけでなく、以下のような特定の有用な不変量を保持します。</target>
        </trans-unit>
        <trans-unit id="c37c09d162d5ffa4f1738f98cc1abcaa14fdd8e8" translate="yes" xml:space="preserve">
          <source>This can be accomplished with the following functions by</source>
          <target state="translated">これは、以下の機能で実現できます。</target>
        </trans-unit>
        <trans-unit id="404c1b065822b1654232a85e29ab366f7eb5d2e9" translate="yes" xml:space="preserve">
          <source>This can be computed exactly using</source>
          <target state="translated">これは次のようにして正確に計算できます。</target>
        </trans-unit>
        <trans-unit id="fdab6097b81d07628e46c33c3c9f51c5c1410461" translate="yes" xml:space="preserve">
          <source>This can be demonstrated by the code</source>
          <target state="translated">これはコード</target>
        </trans-unit>
        <trans-unit id="ec51b5a3283d6ddeea00a35b9ade8f2a2948ae80" translate="yes" xml:space="preserve">
          <source>This can be used by Octave packages to extend the image reading capabilities Octave, through use of the PKG_ADD and PKG_DEL commands.</source>
          <target state="translated">これは,OctaveパッケージがPKG_ADD及びPKG_DELコマンドを使用してOctaveの画像読取機能を拡張するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="f256c11b92144e23214d4f33ad7389498d135553" translate="yes" xml:space="preserve">
          <source>This can be used for all matrix and array types.</source>
          <target state="translated">これは,すべての行列および配列型に使用できます.</target>
        </trans-unit>
        <trans-unit id="b14bbaea156f1c5bd006b45fc83550693bb4100f" translate="yes" xml:space="preserve">
          <source>This can be used to generate many distributions:</source>
          <target state="translated">これを利用して、多くのディストリビューションを生成することができます。</target>
        </trans-unit>
        <trans-unit id="885fee0ae890bb804c4686fb2c6d30e9078052bc" translate="yes" xml:space="preserve">
          <source>This can be used to write somewhat more concise code. For example, it is possible write</source>
          <target state="translated">これを利用して、やや簡潔なコードを書くことができます。例えば、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="8fd66c1d53ba2ceb4d4f1de5f0b148ec8ecab1f3" translate="yes" xml:space="preserve">
          <source>This can be useful for packagers that may split the Octave installation into multiple sub-packages, for example, to provide a hint to users for how to install the missing components.</source>
          <target state="translated">これは,例えば,Octaveのインストールを複数のサブパッケージに分割することができるパッカ ーにとって有用であり,ユーザに不足しているコンポーネントをどのようにインストールするかの ヒントを提供することができます。</target>
        </trans-unit>
        <trans-unit id="287ae4e82e924e1ba767e0b529fcbe7176538188" translate="yes" xml:space="preserve">
          <source>This can be written in a clearer and more condensed form using the &lt;code&gt;+=&lt;/code&gt; operator</source>
          <target state="translated">これは、 &lt;code&gt;+=&lt;/code&gt; 演算子を使用して、より明確でより凝縮された形式で書くことができます</target>
        </trans-unit>
        <trans-unit id="e72eaea8571e4fa0d755737df12accfcc9681ebf" translate="yes" xml:space="preserve">
          <source>This can then be associated with an object either at the object&amp;rsquo;s creation, or later with the &lt;code&gt;set&lt;/code&gt; function. For example,</source>
          <target state="translated">これは、オブジェクトの作成時に、または後で関数 &lt;code&gt;set&lt;/code&gt; を使用して、オブジェクトに関連付けることができます。例えば、</target>
        </trans-unit>
        <trans-unit id="4935cbc1e2ef3c661f74a0215fa6666a3367e512" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that are available to allow you to get information about what is happening outside of Octave, while it is still running, and use this information in your program. For example, you can get information about environment variables, the current time, and even start other programs from the Octave prompt.</source>
          <target state="translated">この章では,Octaveがまだ実行中である間に,Octaveの外で何が起こっているかについての情報を得て,その 情報をプログラムで使用することを可能にするために利用できる関数について説明します。例えば,環境変数や現在の時刻に関する情報を得ることができ,さらにはOctaveプロンプトから他のプログラムを起動することもできます。</target>
        </trans-unit>
        <trans-unit id="3bc58e0d4ec5aadfefd10d5da01cf97d830bba70" translate="yes" xml:space="preserve">
          <source>This chapter describes the signal processing and fast Fourier transform functions available in Octave. Fast Fourier transforms are computed with the &lt;small&gt;FFTW&lt;/small&gt; or &lt;small&gt;FFTPACK&lt;/small&gt; libraries depending on how Octave is built.</source>
          <target state="translated">この章では、Octaveで利用できる信号処理と高速フーリエ変換関数について説明します。高速フーリエ変換は、Octaveの構築方法に応じて、&lt;small&gt;FFTW&lt;/small&gt;または&lt;small&gt;FFTPACK&lt;/small&gt;ライブラリを使用して計算されます。</target>
        </trans-unit>
        <trans-unit id="9694693adb5d638fb4cf3658a951a2cc7c4472ca" translate="yes" xml:space="preserve">
          <source>This chapter discusses the means of constructing a user class, how to query and set the properties of a class, and how to overload operators and functions. Throughout this chapter real code examples are given using a class designed for polynomials.</source>
          <target state="translated">この章では、ユーザクラスを構築する方法、クラスのプロパティを問い合わせて設定する方法、演算子や関数をオーバーロードする方法について説明します。この章では、多項式のために設計されたクラスを使用して、実際のコード例を示します。</target>
        </trans-unit>
        <trans-unit id="06310114a27e9e9841c8a855bb2a3d118572a348" translate="yes" xml:space="preserve">
          <source>This chapter discusses vectorization and other techniques for writing faster code.</source>
          <target state="translated">この章では、より高速なコードを書くためのベクトル化やその他のテクニックについて説明します。</target>
        </trans-unit>
        <trans-unit id="7ca6bd6b318f77496e33892f2c28ef84b9dbf6da" translate="yes" xml:space="preserve">
          <source>This chapter documents the linear algebra functions provided in Octave. Reference material for many of these functions may be found in Golub and Van Loan,</source>
          <target state="translated">この章では,Octaveで提供される線形代数関数を文書化します。これらの関数の多くについての参考資料は,GolubとVan Loanに掲載されています。</target>
        </trans-unit>
        <trans-unit id="7d525aa2dea5c949b943bc3772fe57aaaa0d30e1" translate="yes" xml:space="preserve">
          <source>This chapter explains some of Octave&amp;rsquo;s basic features, including how to start an Octave session, get help at the command prompt, edit the command line, and write Octave programs that can be executed as commands from your shell.</source>
          <target state="translated">この章では、Octaveセッションを開始する方法、コマンドプロンプトでヘルプを取得する方法、コマンドラインを編集する方法、シェルからコマンドとして実行できるOctaveプログラムを作成する方法など、Octaveの基本的な機能について説明します。</target>
        </trans-unit>
        <trans-unit id="f870b3b1cd9baf34cf54a90e4fb969929abdd9b1" translate="yes" xml:space="preserve">
          <source>This chapter illustrates user-defined classes and object oriented programming through a custom class designed for polynomials. This class was chosen for its simplicity which does not distract unnecessarily from the discussion of the programming features of Octave. Even so, a bit of background on the goals of the polynomial class is necessary before the syntax and techniques of Octave object oriented programming are introduced.</source>
          <target state="translated">この章では,多項式のために設計されたカスタムクラスを通して,ユーザ定義クラスと オブジェクト指向プログラミングを説明する。このクラスは,Octaveのプログラミング機能の議論から不必要に目をそらさない単純さのために選ばれました。それでも,Octaveオブジェクト指向プログラミングの構文と技術が導入される前に,多項式クラスの目標に関する少しの背景が必要である。</target>
        </trans-unit>
        <trans-unit id="6223d5152e7bd8810b922a69df306af3d062bb6c" translate="yes" xml:space="preserve">
          <source>This class is designed to allow easy parsing of function arguments. The class supports four types of arguments:</source>
          <target state="translated">このクラスは、関数の引数を簡単に解析できるように設計されています。このクラスは4種類の引数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="28b4bb88f5904d5f0303192b52d6e89deae84e1e" translate="yes" xml:space="preserve">
          <source>This code makes the repetitive structure of the problem more explicit, making the code easier to read, and hence maintain. Also, if the variable &lt;code&gt;X&lt;/code&gt; should change its name, only one line would need changing compared to one line per case when &lt;code&gt;if&lt;/code&gt; statements are used.</source>
          <target state="translated">このコードにより、問題の繰り返し構造がより明確になり、コードが読みやすくなり、保守が容易になります。また、変数 &lt;code&gt;X&lt;/code&gt; の名前を変更する必要がある場合、 &lt;code&gt;if&lt;/code&gt; ステートメントを使用する場合は、1行あたり1行を変更するのではなく、1行だけ変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="a8e22f90874a1bc576fc1dc09b9d917c9145109f" translate="yes" xml:space="preserve">
          <source>This code works by first evaluating the expression &lt;code&gt;3:10&lt;/code&gt;, to produce a range of values from 3 to 10 inclusive. Then the variable &lt;code&gt;i&lt;/code&gt; is assigned the first element of the range and the body of the loop is executed once. When the end of the loop body is reached, the next value in the range is assigned to the variable &lt;code&gt;i&lt;/code&gt;, and the loop body is executed again. This process continues until there are no more elements to assign.</source>
          <target state="translated">このコードは、最初に式 &lt;code&gt;3:10&lt;/code&gt; を評価して、3から10までの範囲の値の範囲を生成します。次に、変数 &lt;code&gt;i&lt;/code&gt; に範囲の最初の要素が割り当てられ、ループの本体が1回実行されます。ループ本体の終わりに到達すると、範囲内の次の値が変数 &lt;code&gt;i&lt;/code&gt; に割り当てられ、ループ本体が再度実行されます。このプロセスは、割り当てる要素がなくなるまで続きます。</target>
        </trans-unit>
        <trans-unit id="01ddb9d51a79b3eee57efcdbe2e6af77b1ab3d1e" translate="yes" xml:space="preserve">
          <source>This colormap gives a sepia tone when used on grayscale images.</source>
          <target state="translated">このカラーマップは、グレースケール画像に使用するとセピア調になります。</target>
        </trans-unit>
        <trans-unit id="35f79e5d7dcd2ee2e1e0c3cc83c15c90f925b763" translate="yes" xml:space="preserve">
          <source>This colormap varies from black to white going though blue, green, and red tones while maintaining a monotonically increasing perception of intensity. This is achieved by traversing a color cube from black to white through a helix, hence the name cubehelix, while taking into account the perceived brightness of each channel according to the NTSC specifications from 1953.</source>
          <target state="translated">このカラーマップは、単調に増加する強度の知覚を維持しながら、黒から白へと青、緑、赤の色調を経て変化します。これは、1953年のNTSC仕様に基づいて、各チャンネルの明るさを考慮に入れながら、黒から白までのカラーキューブを螺旋状にトラバースさせることで達成されています。</target>
        </trans-unit>
        <trans-unit id="8a77be10bf36a565bd9fc7ded86acc85d5471b79" translate="yes" xml:space="preserve">
          <source>This command fixes the camera&amp;rsquo;s viewing direction (&lt;code&gt;camtarget() - campos()&lt;/code&gt;), camera up vector (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;) and viewing angle (see &lt;a href=&quot;#XREFcamva&quot;&gt;camva&lt;/a&gt;). The camera target (see &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt;) and camera position (see &lt;a href=&quot;#XREFcampos&quot;&gt;campos&lt;/a&gt;) are changed.</source>
          <target state="translated">このコマンドは、カメラの視線方向（ &lt;code&gt;camtarget() - campos()&lt;/code&gt; ）、カメラアップベクトル（&lt;a href=&quot;#XREFcamup&quot;&gt;camupを&lt;/a&gt;参照）、および視角（&lt;a href=&quot;#XREFcamva&quot;&gt;camvaを&lt;/a&gt;参照）を修正します。カメラのターゲット（&lt;a href=&quot;#XREFcamtarget&quot;&gt;camtargetを&lt;/a&gt;参照）とカメラの位置（&lt;a href=&quot;#XREFcampos&quot;&gt;camposを&lt;/a&gt;参照）が変更されます。</target>
        </trans-unit>
        <trans-unit id="85c2ddd5459091af861d15b2542c6f75c5bebad3" translate="yes" xml:space="preserve">
          <source>This command only affects the display of numbers, but not how they are stored or computed. To change the internal representation from the default double use one of the conversion functions such as &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, etc.</source>
          <target state="translated">このコマンドは、数値の表示にのみ影響し、数値の格納方法や計算方法には影響しません。内部表現をデフォルトのdoubleから変更するには、 &lt;code&gt;single&lt;/code&gt; 、 &lt;code&gt;uint8&lt;/code&gt; 、 &lt;code&gt;int64&lt;/code&gt; などの変換関数のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="ef83f665a777e09c4d0332b38ffe2ab0696f6840" translate="yes" xml:space="preserve">
          <source>This command will plot &lt;code&gt;y&lt;/code&gt; with red circles, &lt;code&gt;y2&lt;/code&gt; with solid lines, &lt;code&gt;y3&lt;/code&gt; with solid magenta lines, and &lt;code&gt;y4&lt;/code&gt; with points displayed as &amp;lsquo;</source>
          <target state="translated">このコマンドは、 &lt;code&gt;y&lt;/code&gt; を赤い丸で、 &lt;code&gt;y2&lt;/code&gt; を実線で、 &lt;code&gt;y3&lt;/code&gt; をマゼンタの実線で、 &lt;code&gt;y4&lt;/code&gt; を点で表示し、 '</target>
        </trans-unit>
        <trans-unit id="b89fc65079ce5c365a410663a8cb27b013122a6f" translate="yes" xml:space="preserve">
          <source>This command will plot the data in the variable &lt;code&gt;b&lt;/code&gt;, with points displayed as &amp;lsquo;</source>
          <target state="translated">このコマンドは、変数 &lt;code&gt;b&lt;/code&gt; にデータをプロットします。ポイントは 'として表示されます。</target>
        </trans-unit>
        <trans-unit id="f9e0b2f4fb9e85bc0a24fb8b505fbdb26c5efcf6" translate="yes" xml:space="preserve">
          <source>This constructor can &lt;strong&gt;only&lt;/strong&gt; be used with matrix types.</source>
          <target state="translated">このコンストラクターは、マトリックス型で&lt;strong&gt;のみ&lt;/strong&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="e6ca34c6a6d73e0be34178d17a77b09b20fec1fd" translate="yes" xml:space="preserve">
          <source>This creates a 2-by-9 character matrix.</source>
          <target state="translated">これにより、2×9文字の行列が作成されます。</target>
        </trans-unit>
        <trans-unit id="b4c579a421dde4b1ff1d65d848faf52434d90927" translate="yes" xml:space="preserve">
          <source>This creates a N-by-2 matrix &lt;code&gt;nodes&lt;/code&gt; and a E-by-3 matrix &lt;code&gt;elems&lt;/code&gt; with values, which define finite element triangles:</source>
          <target state="translated">これは、N行2列の行列の作成 &lt;code&gt;nodes&lt;/code&gt; とE&amp;times;3行列 &lt;code&gt;elems&lt;/code&gt; 有限要素三角形を定義する値とを、。</target>
        </trans-unit>
        <trans-unit id="f6f80779c20357a3c006d8af99d3e93eed172ce5" translate="yes" xml:space="preserve">
          <source>This creates a sparse matrix with the same structure as &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;S&lt;/var&gt; と同じ構造のスパース行列が作成されます。</target>
        </trans-unit>
        <trans-unit id="368c29fa95f88ae6085ee0f8a616841ed0c224e6" translate="yes" xml:space="preserve">
          <source>This creates the same matrix as previously. Again, although not strictly necessary, it is significantly faster if the sparse matrix is created and the elements are added in column-major ordering. The reason for this is that when elements are inserted at the end of the current list of known elements then no element in the matrix needs to be moved to allow the new element to be inserted; Only the column indices need to be updated.</source>
          <target state="translated">これにより,先ほどと同じ行列が作成されます.繰り返しになりますが,厳密には必要ではありませんが,疎な行列が作成され,要素が列-メジャー順に追加されると,かなり高速になります.その理由は,現在の既知の要素リストの最後に要素が挿入された場合,新しい要素を挿入するために行列内の要素を移動させる必要がないからです.</target>
        </trans-unit>
        <trans-unit id="68a76a0355b8244c80d1f4f8994318433cf2289e" translate="yes" xml:space="preserve">
          <source>This document corresponds to Octave version 5.1.0.</source>
          <target state="translated">この文書はOctaveバージョン5.1.0に対応しています。</target>
        </trans-unit>
        <trans-unit id="0dba264891b29494dd04eb559595a8439c1ffe3a" translate="yes" xml:space="preserve">
          <source>This error message has several parts, and gives quite a bit of information to help you locate the source of the error. The messages are generated from the point of the innermost error, and provide a traceback of enclosing expressions and function calls.</source>
          <target state="translated">このエラーメッセージにはいくつかの部分があり、エラーの原因を特定するのに役立つ情報がかなり多く含まれています。これらのメッセージは、最も内側のエラーが発生したポイントから生成され、囲い込み式や関数呼び出しのトレースバックを提供します。</target>
        </trans-unit>
        <trans-unit id="e8025934018a52607bf3043b6efc0a3dbb3ed587" translate="yes" xml:space="preserve">
          <source>This example creates a variable &lt;code&gt;fib&lt;/code&gt; that contains the first ten elements of the Fibonacci sequence.</source>
          <target state="translated">この例では、フィボナッチ数列の最初の10要素を含む変数 &lt;code&gt;fib&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="24ec35f8bdb301c66d9e8a3c551cf69d6e3f0c72" translate="yes" xml:space="preserve">
          <source>This example demonstrates most of the features needed to link to an external Fortran function, including passing arrays and strings, as well as exception handling. Both the Fortran and C++ files need to be compiled in order for the example to work.</source>
          <target state="translated">この例では、配列や文字列の受け渡し、例外処理など、外部の Fortran 関数にリンクするために必要な機能のほとんどを示しています。この例を動作させるには、Fortran ファイルと C++ファイルの両方をコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="d8034d960b3a8d6b0a787be5990d26c53f95d716" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &amp;lsquo;</source>
          <target state="translated">この例では、「</target>
        </trans-unit>
        <trans-unit id="e34d37e3027e2f20d2b9bde7e69a748813c5c633" translate="yes" xml:space="preserve">
          <source>This example uses ILU as preconditioner for a random FEM-Matrix, which has a large condition number. Without &lt;var&gt;L&lt;/var&gt; and &lt;var&gt;U&lt;/var&gt; BICG would not converge.</source>
          <target state="translated">この例では、条件数が大きいランダムなFEM行列の前提条件としてILUを使用します。 &lt;var&gt;L&lt;/var&gt; と &lt;var&gt;U&lt;/var&gt; がなければBICGは収束しません。</target>
        </trans-unit>
        <trans-unit id="8861b43d9e0b36e78fe97958252da3e75b803943" translate="yes" xml:space="preserve">
          <source>This expression causes the variable &lt;var&gt;x&lt;/var&gt; to be decremented. The value of the expression is the &lt;em&gt;old&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">この式により、変数 &lt;var&gt;x&lt;/var&gt; がデクリメントされます。式の値は &lt;var&gt;x&lt;/var&gt; の&lt;em&gt;古い&lt;/em&gt;値です。</target>
        </trans-unit>
        <trans-unit id="905adfc818f95047998ed251dfccb30a8000fd8f" translate="yes" xml:space="preserve">
          <source>This expression causes the variable &lt;var&gt;x&lt;/var&gt; to be incremented. The value of the expression is the &lt;em&gt;old&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">この式により、変数 &lt;var&gt;x&lt;/var&gt; がインクリメントされます。式の値は &lt;var&gt;x&lt;/var&gt; の&lt;em&gt;古い&lt;/em&gt;値です。</target>
        </trans-unit>
        <trans-unit id="ac2dd45958c46ba44b43d4288d2be6ba1394d831" translate="yes" xml:space="preserve">
          <source>This expression decrements the variable &lt;var&gt;x&lt;/var&gt;. The value of the expression is the &lt;em&gt;new&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;. It is equivalent to the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; - 1&lt;/code&gt;.</source>
          <target state="translated">この式は、変数 &lt;var&gt;x&lt;/var&gt; をデクリメントします。式の値は &lt;var&gt;x&lt;/var&gt; の&lt;em&gt;新しい&lt;/em&gt;値です。これは、式 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; - 1&lt;/code&gt; = &lt;var&gt;x&lt;/var&gt; -1と同等です。</target>
        </trans-unit>
        <trans-unit id="4411c11bd8911487c2a8c91de5217c561d2269da" translate="yes" xml:space="preserve">
          <source>This expression increments the variable &lt;var&gt;x&lt;/var&gt;. The value of the expression is the &lt;em&gt;new&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;. It is equivalent to the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; + 1&lt;/code&gt;.</source>
          <target state="translated">この式は、変数 &lt;var&gt;x&lt;/var&gt; をインクリメントします。式の値は &lt;var&gt;x&lt;/var&gt; の&lt;em&gt;新しい&lt;/em&gt;値です。これは、式 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; + 1&lt;/code&gt; = &lt;var&gt;x&lt;/var&gt; + 1と同等です。</target>
        </trans-unit>
        <trans-unit id="d855e2588465e6a87fabb7c93db299a96a10dbd3" translate="yes" xml:space="preserve">
          <source>This file can be used to make changes to the default Octave environment for a particular project. Octave searches for this file in the current directory after it reads</source>
          <target state="translated">このファイルは,特定のプロジェクトのデフォルトのOctave環境を変更するために使用することができます。を読み込んだ後,Octaveはカレントディレクトリ内のこのファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="6fca94dcfb1a84b3188885421364803978a9a0e7" translate="yes" xml:space="preserve">
          <source>This file is used to make personal changes to the default Octave environment.</source>
          <target state="translated">このファイルは、デフォルトのOctave環境を個人的に変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5387b8274b29c3b4898ea2a5175adee99f0f1e14" translate="yes" xml:space="preserve">
          <source>This file is used to make personal changes to the default Octave environment. It is executed for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but</source>
          <target state="translated">このファイルは、デフォルトのOctave環境に個人的な変更を加えるために使用されます。これは、&lt;small&gt;MATLAB&lt;/small&gt;互換性のために実行されますが、</target>
        </trans-unit>
        <trans-unit id="0eba4c00e4a70470d102786523461a7aac2d462d" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;+&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;+&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="9061137764d54615d6b00791b1367a1a8771017f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;-&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この機能と &lt;code&gt;-&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; 等価です。</target>
        </trans-unit>
        <trans-unit id="c3a9212bac9f7f38d0343a51a92ffeab8a127a33" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent. If more arguments are given, the multiplication is applied cumulatively from left to right:</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。より多くの引数が指定された場合、乗算は左から右に累積的に適用されます。</target>
        </trans-unit>
        <trans-unit id="efe25524b3986ac4749449f1edde81f9aa972463" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;+&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;+&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="502ec151ce326acafbe295a62526a913d76dcccf" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="b72721c8e0e2af9938c55881abd1e83329d9251f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent. If more arguments are given, the multiplication is applied cumulatively from left to right:</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。より多くの引数が指定された場合、乗算は左から右に累積的に適用されます。</target>
        </trans-unit>
        <trans-unit id="47a128d1142a02dd25266bbaba1c7a38cbae851a" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;./&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;./&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="3c7c73d2fc97c9f3ff07417b16c6dd41ecd097f5" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="54c600f0e787b7ecb3bdaacab80d7904763c8376" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="c459916747246315e0f3ac5bb29b9745585ec08f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;/&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;/&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="9661eda327ed8f45b65de6c3fce16d7e93bd21a4" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="c86f55580b5b4ee4e9f0e68ce1b6379ddb593aef" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="0ba20393866ff4f18aa7c9ae264ba08ee0d49277" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;'&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;'&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="aac2aa22d8b348a1058a67b71f0cc9fb9a86e746" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;.'&lt;/code&gt; are equivalent.</source>
          <target state="translated">この関数と &lt;code&gt;&lt;var&gt;x&lt;/var&gt;.'&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="69576a5d7245b4ceff07f872710a90ac5b9ebdc8" translate="yes" xml:space="preserve">
          <source>This function assumes that versions &lt;var&gt;v1&lt;/var&gt; and &lt;var&gt;v2&lt;/var&gt; are arbitrarily long strings made of numeric and period characters possibly followed by an arbitrary string (e.g., &lt;code&gt;&quot;1.2.3&quot;&lt;/code&gt;, &lt;code&gt;&quot;0.3&quot;&lt;/code&gt;, &lt;code&gt;&quot;0.1.2+&quot;&lt;/code&gt;, or &lt;code&gt;&quot;1.2.3.4-test1&quot;&lt;/code&gt;).</source>
          <target state="translated">この関数は、バージョン &lt;var&gt;v1&lt;/var&gt; と &lt;var&gt;v2&lt;/var&gt; が、任意の文字列が後に続く可能性のある数字とピリオド文字で構成される任意の長い文字列であると想定しています（例： &lt;code&gt;&quot;1.2.3&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;0.3&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;0.1.2+&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;1.2.3.4-test1&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8f2fe5d9756a0b4efa0a5a37bae9dabd0261333f" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;eval&lt;/code&gt;, but any output or warning messages which would normally be written to the console are captured and returned in the string &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;eval&lt;/code&gt; のように動作しますが、通常コンソールに書き込まれる出力または警告メッセージはすべてキャプチャされ、文字列 &lt;var&gt;s&lt;/var&gt; に返されます。</target>
        </trans-unit>
        <trans-unit id="e130b7059bc26fcfdb5f1aec75a8a18446ebfe15" translate="yes" xml:space="preserve">
          <source>This function can be used, for example, to reduce the impact of noise in &lt;var&gt;data&lt;/var&gt; before calculating isosurfaces.</source>
          <target state="translated">この関数は、たとえば、等値面を計算 &lt;var&gt;data&lt;/var&gt; 前にデータのノイズの影響を減らすために使用できます。</target>
        </trans-unit>
        <trans-unit id="89389586442a798b213664a0be2956ff33bece7e" translate="yes" xml:space="preserve">
          <source>This function changes the ambient, diffuse, and specular strengths, as well as the specular exponent and specular color reflectance, of all &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects in the current axes. This can be used to simulate, to some extent, the reflectance properties of certain materials when used with &lt;code&gt;light&lt;/code&gt;.</source>
          <target state="translated">この関数は、現在のAxes のすべての &lt;code&gt;patch&lt;/code&gt; オブジェクトと &lt;code&gt;surface&lt;/code&gt; オブジェクトのアンビエント、ディフューズ、スペキュラーの強度、およびスペキュラー指数とスペキュラーカラーの反射率を変更します。これは、 &lt;code&gt;light&lt;/code&gt; 使用した場合に、特定の材料の反射特性をある程度シミュレートするために使用できます。</target>
        </trans-unit>
        <trans-unit id="485c01d8d415e14668fa53c075f8f1fb428028b0" translate="yes" xml:space="preserve">
          <source>This function does not support sparse matrices.</source>
          <target state="translated">この関数は,疎な行列をサポートしません.</target>
        </trans-unit>
        <trans-unit id="e82c42972d595cef53627a7913726034f0080796" translate="yes" xml:space="preserve">
          <source>This function is based on the &lt;small&gt;ARPACK&lt;/small&gt; package, written by R. Lehoucq, K. Maschhoff, D. Sorensen, and C. Yang. For more information see &lt;a href=&quot;http://www.caam.rice.edu/software/ARPACK/&quot;&gt;http://www.caam.rice.edu/software/ARPACK/&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;small&gt;R。Lehoucq&lt;/small&gt;、K。Maschhoff、D。Sorensen、およびC. Yangによって作成された&lt;small&gt;ARPACK&lt;/small&gt;パッケージに基づいています。詳細については、&lt;a href=&quot;http://www.caam.rice.edu/software/ARPACK/&quot;&gt;http：//www.caam.rice.edu/software/ARPACK/を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0d52082903ed87115fef9c4bd6acfa99774a1568" translate="yes" xml:space="preserve">
          <source>This function is called at the beginning of all high-level plotting functions. It is not normally required in user programs. &lt;code&gt;newplot&lt;/code&gt; queries the &lt;code&gt;&quot;NextPlot&quot;&lt;/code&gt; field of the current figure and axes to determine what to do.</source>
          <target state="translated">この関数は、すべての高レベルのプロット関数の最初に呼び出されます。通常、ユーザープログラムでは必要ありません。 &lt;code&gt;newplot&lt;/code&gt; は、現在のFigureとAxes の &lt;code&gt;&quot;NextPlot&quot;&lt;/code&gt; フィールドをクエリして、何をすべきかを決定します。</target>
        </trans-unit>
        <trans-unit id="8cadc07d5c458fb5398ca1957aaed4995b4f5986" translate="yes" xml:space="preserve">
          <source>This function is conceptually equivalent to computing</source>
          <target state="translated">この関数は、概念的には</target>
        </trans-unit>
        <trans-unit id="6a407a4acf44b51b7f06ab276d65b770d356d3c3" translate="yes" xml:space="preserve">
          <source>This function is equivalent to</source>
          <target state="translated">この関数は</target>
        </trans-unit>
        <trans-unit id="c9f2d8c132f1fb4272b67f2dd07a04e95c181cdb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;!=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;!=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="03e8142690b30ab8ee2375ae53bc04739d5b7bc1" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="965c566254024329ba6e560bba108135ecd0948d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="322a5ca85cd6cde4528bf410bd84e825764039da" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="b37704d0e472b913b67b1bf7986caec52e66aa22" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="a772fd74394d4ca009594cfac3633f0219c6a98f" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="bf7b55057628c26f0f7501f1f7891505c6acdfb8" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;arg (complex (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;arg (complex (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="44a9df5f4d2c8f1121ad8d9b7e12617e4c91198d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;printf&lt;/code&gt;, except that the output is written to the file descriptor &lt;var&gt;fid&lt;/var&gt; instead of &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">この関数は、出力が &lt;code&gt;stdout&lt;/code&gt; ではなくファイル記述子 &lt;var&gt;fid&lt;/var&gt; に書き込まれることを除いて、 &lt;code&gt;printf&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="cdb5a1519dbd62fdc2d8fb08ec1997e09cbf75ca" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;!&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は、演算子の構文と同等 &lt;code&gt;!&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bf6f1af0d2c495fa6f5299e4e6d860072308f5c" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;increment&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">この関数は、演算子構文 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; または &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;increment&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="60e32178600854dc3b6926a1d3f5877c45875e36" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;. If more than two arguments are given, the logical AND is applied cumulatively from left to right:</source>
          <target state="translated">この関数は、演算子構文 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。3つ以上の引数が指定された場合、論理ANDは左から右に累積的に適用されます。</target>
        </trans-unit>
        <trans-unit id="713a76dcc5dee8c8a56e5720658db27d81f1ae5d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;|&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;. If more than two arguments are given, the logical OR is applied cumulatively from left to right:</source>
          <target state="translated">この関数は、演算子構文 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;|&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と同等です。&amp;nbsp;y。3つ以上の引数が指定された場合、論理ORは左から右に累積的に適用されます。</target>
        </trans-unit>
        <trans-unit id="9d50d4ef6c9bbf5b3c82759706bb2ceeacdd89ec" translate="yes" xml:space="preserve">
          <source>This function is intended to facilitate manipulation of the output of functions such as &lt;code&gt;stemleaf&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;stemleaf&lt;/code&gt; などの関数の出力の操作を容易にすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="7a2b2cd29ce436f30e98be5253a0584e01836b04" translate="yes" xml:space="preserve">
          <source>This function is not recommended. Use &lt;code&gt;isfolder&lt;/code&gt; or &lt;code&gt;file_in_loadpath&lt;/code&gt; instead.</source>
          <target state="translated">この機能は推奨されません。代わりに &lt;code&gt;isfolder&lt;/code&gt; または &lt;code&gt;file_in_loadpath&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="da7aa68fdd24f94a542efe2b851233b3a9635c15" translate="yes" xml:space="preserve">
          <source>This function is not very flexible. For better control over the results, use &lt;code&gt;sprintf&lt;/code&gt; (see &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;).</source>
          <target state="translated">この機能はあまり柔軟ではありません。結果をよりよく制御するには、 &lt;code&gt;sprintf&lt;/code&gt; を使用します（「&lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;フォーマット済み出力&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="58588d93b1010db10c43468002c403be39551cd4" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use &lt;code&gt;strfind&lt;/code&gt; instead.</source>
          <target state="translated">この関数は廃止されました。代わりに &lt;code&gt;strfind&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ff343f03b63aa88810a00f38fa99f7f366c80f77" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use &lt;code&gt;textscan&lt;/code&gt; instead.</source>
          <target state="translated">この関数は廃止されました。代わりに &lt;code&gt;textscan&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="54d2f7e6b128e70a101098ff754f2c105cb9af17" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use an alternative such as &lt;code&gt;strncmp&lt;/code&gt; or &lt;code&gt;strcmp&lt;/code&gt; instead.</source>
          <target state="translated">この関数は廃止されました。代わりに &lt;code&gt;strncmp&lt;/code&gt; や &lt;code&gt;strcmp&lt;/code&gt; などの代替手段を使用してください。</target>
        </trans-unit>
        <trans-unit id="e816148b054fbd5a75979c7bd416badb069989c2" translate="yes" xml:space="preserve">
          <source>This function is patterned after the equivalent function in Perl.</source>
          <target state="translated">この関数は、Perl の同等の関数をパターン化したものです。</target>
        </trans-unit>
        <trans-unit id="e6e0e7f4113048cfa832c29901fb4c6f81a9857a" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility, but does nothing in Octave.</source>
          <target state="translated">この関数は互換性のために提供されていますが、Octaveでは何もしません。</target>
        </trans-unit>
        <trans-unit id="e56d60684d360d3041124f93c5154cbd8f11aec9" translate="yes" xml:space="preserve">
          <source>This function is provided for the benefit of programs like Emacs which might be controlling Octave and handling user input. The current command number is not incremented when this function is called. This is a feature, not a bug.</source>
          <target state="translated">この関数は,EmacsのようにOctaveを制御したり,ユーザ入力を処理したりするプログラムのために提供されます。この関数が呼び出されても、現在のコマンド番号はインクリメントされません。これは機能であってバグではありません。</target>
        </trans-unit>
        <trans-unit id="d0631c944331a1916eb41f0d1e7cea5c967d2720" translate="yes" xml:space="preserve">
          <source>This function is recursive because it calls itself directly. It eventually terminates because each time it calls itself, it uses an argument that is one less than was used for the previous call. Once the argument is no longer greater than zero, it does not call itself, and the recursion ends.</source>
          <target state="translated">この関数は自分自身を直接呼び出すので再帰的です。自身を呼び出すたびに、前回の呼び出しで使用した引数よりも 1 つ小さい引数を使用するため、最終的には終了します。引数がゼロよりも大きくなくなれば、自分自身を呼び出すことはなく、再帰的に終了します。</target>
        </trans-unit>
        <trans-unit id="8dfdacb5909f2bc8beb1855d10dc5886984707cb" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;get (h, &quot;children&quot;)&lt;/code&gt;, but also returns hidden objects (HandleVisibility = &lt;code&gt;&quot;off&quot;&lt;/code&gt;).</source>
          <target state="translated">この関数は &lt;code&gt;get (h, &quot;children&quot;)&lt;/code&gt; に似ていますが、非表示オブジェクトも返します（HandleVisibility = &lt;code&gt;&quot;off&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b8a9ca609d3326c85e3a29796d5209c75b7279d1" translate="yes" xml:space="preserve">
          <source>This function is the inverse of &lt;code&gt;mkpp&lt;/code&gt;: it extracts the inputs to &lt;code&gt;mkpp&lt;/code&gt; needed to create the piecewise polynomial structure &lt;var&gt;PP&lt;/var&gt;. The code below makes this relation explicit:</source>
          <target state="translated">この関数は &lt;code&gt;mkpp&lt;/code&gt; の逆です。区分的多項式構造 &lt;var&gt;PP&lt;/var&gt; を作成するために必要な &lt;code&gt;mkpp&lt;/code&gt; への入力を抽出します。以下のコードは、この関係を明示的にしています。</target>
        </trans-unit>
        <trans-unit id="6fcdb60ee55688c4ab79c14d90aa09757b781d1f" translate="yes" xml:space="preserve">
          <source>This function is useful for interactive programs. There is no limit to the number of options that may be passed in, but it may be confusing to present more than will fit easily on one screen.</source>
          <target state="translated">この関数は対話型プログラムに便利です。渡すオプションの数に制限はありませんが、1つの画面に収まりきらないほど多くのオプションを提示するのは混乱を招くかもしれません。</target>
        </trans-unit>
        <trans-unit id="100ba22a9f31e38ddf2db2e79f05fa086f3e5e61" translate="yes" xml:space="preserve">
          <source>This function is usually used as a prelude to interpolation.</source>
          <target state="translated">この関数は通常、補間の前奏曲として使用されます。</target>
        </trans-unit>
        <trans-unit id="c0557e6dba45b599e93144c9fdcd80cc14623877" translate="yes" xml:space="preserve">
          <source>This function just hands off the work to the normal Octave &lt;code&gt;polyval&lt;/code&gt; function. Another interesting example of an overloaded function for the polynomial class is the &lt;code&gt;plot&lt;/code&gt; function.</source>
          <target state="translated">この関数は、通常のOctave &lt;code&gt;polyval&lt;/code&gt; 関数に作業を渡すだけです。多項式クラスのオーバーロード関数のもう1つの興味深い例は、 &lt;code&gt;plot&lt;/code&gt; 関数です。</target>
        </trans-unit>
        <trans-unit id="2a1d60b3e05a8755795b9c8c8a26ac67db8e29bd" translate="yes" xml:space="preserve">
          <source>This function makes the current figure visible, and places it on top of of all other plot windows.</source>
          <target state="translated">この関数は、現在の図を可視化し、他のすべてのプロットウィンドウの上に配置します。</target>
        </trans-unit>
        <trans-unit id="0ec40d2305f984b9a498f843498f53c0c6e107ae" translate="yes" xml:space="preserve">
          <source>This function places caps at the open ends of isosurfaces.</source>
          <target state="translated">この関数は、等値面の開放端にキャップを配置します。</target>
        </trans-unit>
        <trans-unit id="6a3e36c8902085b1cf06c2d709abcfccee6d67f3" translate="yes" xml:space="preserve">
          <source>This function produces output like this</source>
          <target state="translated">この関数は以下のような出力を生成します。</target>
        </trans-unit>
        <trans-unit id="950a880010049a2c6e660dab28350d77ef591420" translate="yes" xml:space="preserve">
          <source>This function sends the alarm character &lt;code&gt;&quot;\a&quot;&lt;/code&gt; to the terminal. Depending on the user&amp;rsquo;s configuration this may produce an audible beep, a visual bell, or nothing at all.</source>
          <target state="translated">この関数は、アラーム文字 &lt;code&gt;&quot;\a&quot;&lt;/code&gt; を端末に送信します。ユーザーの設定によっては、ビープ音が鳴るか、ベルが鳴るか、まったく鳴らない場合があります。</target>
        </trans-unit>
        <trans-unit id="56f9771e861d52f00afe7fafae376f4882a4cfff" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFEXITED&lt;/code&gt; returned true.</source>
          <target state="translated">この関数は、 &lt;code&gt;WIFEXITED&lt;/code&gt; がtrueを返した場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="2f43bd1a913e366ca04f5a4a2d71345ccd02ede8" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSIGNALED&lt;/code&gt; returned true.</source>
          <target state="translated">この関数は、 &lt;code&gt;WIFSIGNALED&lt;/code&gt; がtrueを返した場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="1ab0b5bb018569a7408c5a764116dce9a98ee3c8" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSIGNALED&lt;/code&gt; returned true. The macro used to implement this function is not specified in POSIX.1-2001 and is not available on some Unix implementations (e.g., AIX, SunOS).</source>
          <target state="translated">この関数は、 &lt;code&gt;WIFSIGNALED&lt;/code&gt; がtrueを返した場合にのみ使用してください。この関数の実装に使用されるマクロはPOSIX.1-2001では指定されておらず、一部のUnix実装（AIX、SunOSなど）では使用できません。</target>
        </trans-unit>
        <trans-unit id="94d7cf3030bbf4b29b0484a5f051f6be1be10092" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSTOPPED&lt;/code&gt; returned true.</source>
          <target state="translated">この関数は、 &lt;code&gt;WIFSTOPPED&lt;/code&gt; がtrueを返した場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="312e56f7a2ff98fdfa316eaaaf45bf392ea92170" translate="yes" xml:space="preserve">
          <source>This function uses libcurl. Curl supports, among others, the HTTP, FTP, and FILE protocols. Username and password may be specified in the URL, for example:</source>
          <target state="translated">この関数は libcurl を使用します。Curl は、特に HTTP、FTP、FILE プロトコルをサポートしています。ユーザー名とパスワードはURLに指定することができます。</target>
        </trans-unit>
        <trans-unit id="d911d917acf58063348aa01b9d721a4f9bd4635c" translate="yes" xml:space="preserve">
          <source>This function uses libcurl. Curl supports, among others, the HTTP, FTP, and FILE protocols. Username and password may be specified in the URL. For example:</source>
          <target state="translated">この関数は libcurl を使用します。Curl は HTTP,FTP,FILE プロトコルをサポートしています。ユーザー名とパスワードは URL で指定することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="4936ed4237c54e8c291494e9cf986c1a4e043ffa" translate="yes" xml:space="preserve">
          <source>This gives:</source>
          <target state="translated">これが与えてくれます。</target>
        </trans-unit>
        <trans-unit id="0ed95294888156eff35bf9cdd540cb2bf6e36ad3" translate="yes" xml:space="preserve">
          <source>This has uses in matrix calculus where the underlying matrix is symmetric and it would be pointless to keep values above the main diagonal.</source>
          <target state="translated">これは、基礎となる行列が対称であり、主対角線より上の値を保持することは無意味であるような場合に、行列の微積分で使用されます。</target>
        </trans-unit>
        <trans-unit id="f199c2dc4d4e42d9d89e9c3a2a20b04edd3ea921" translate="yes" xml:space="preserve">
          <source>This implementation behaves in exactly the same way as the previous implementation of &lt;code&gt;count_calls&lt;/code&gt;.</source>
          <target state="translated">この実装は、以前の &lt;code&gt;count_calls&lt;/code&gt; の実装とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="e9bf15ef093ec055bd54d1f1bb0b29db3999eb25" translate="yes" xml:space="preserve">
          <source>This implementation handles any number of input arguments, but it&amp;rsquo;s also a very simple solution to the problem.</source>
          <target state="translated">この実装は任意の数の入力引数を処理しますが、問題の非常に単純な解決策でもあります。</target>
        </trans-unit>
        <trans-unit id="3cd1472bf6083e344aac915ac3a6e87e940d7163" translate="yes" xml:space="preserve">
          <source>This is a difficult test case used to evaluate eigenvalue algorithms.</source>
          <target state="translated">固有値アルゴリズムの評価に使われる難しいテストケースです。</target>
        </trans-unit>
        <trans-unit id="fdfc38c23b9ba1b809a2c472a36ae6aedc6e4b10" translate="yes" xml:space="preserve">
          <source>This is a fairly difficult integration (plot the function over the range of integration to see why).</source>
          <target state="translated">これはかなり難しい積分です(積分の範囲で関数をプロットして理由を確認してください)。</target>
        </trans-unit>
        <trans-unit id="902dce5711f992f5c5164bd3f49fa0c28129570c" translate="yes" xml:space="preserve">
          <source>This is a permutation such that the Cholesky factorization of &lt;code&gt;&lt;var&gt;S&lt;/var&gt; (&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; tends to be sparser than the Cholesky factorization of &lt;var&gt;S&lt;/var&gt; itself. &lt;code&gt;amd&lt;/code&gt; is typically faster than &lt;code&gt;symamd&lt;/code&gt; but serves a similar purpose.</source>
          <target state="translated">これは、 &lt;code&gt;&lt;var&gt;S&lt;/var&gt; (&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; のコレスキー分解が &lt;var&gt;S&lt;/var&gt; 自体のコレスキー分解よりもスパースになる傾向があるような順列です。 &lt;code&gt;amd&lt;/code&gt; は通常 &lt;code&gt;symamd&lt;/code&gt; より高速ですが、同様の目的を果たします。</target>
        </trans-unit>
        <trans-unit id="d5f8458c4e4012dee126a2b65d6f309a793b9ada" translate="yes" xml:space="preserve">
          <source>This is a required file containing information about the package. See &lt;a href=&quot;the-description-file#The-DESCRIPTION-File&quot;&gt;The DESCRIPTION File&lt;/a&gt;, for details on this file.</source>
          <target state="translated">これは、パッケージに関する情報を含む必須ファイルです。参照&lt;a href=&quot;the-description-file#The-DESCRIPTION-File&quot;&gt;記述ファイルを&lt;/a&gt;、このファイルの詳細については、。</target>
        </trans-unit>
        <trans-unit id="f6beec94d6433ed157df8ae45d1f1735528e3849" translate="yes" xml:space="preserve">
          <source>This is a required file containing the license of the package. No restrictions is made on the license in general. If however the package contains dynamically linked functions the license must be compatible with the GNU General Public License.</source>
          <target state="translated">パッケージのライセンスが入った必須ファイルです。一般的にはライセンスに制限はありません。しかし、パッケージに動的にリンクされた関数が含まれている場合、ライセンスは GNU General Public License と互換性がなければなりません。</target>
        </trans-unit>
        <trans-unit id="52d57dbf23250f58f48b480c2405d99a4f4166a1" translate="yes" xml:space="preserve">
          <source>This is a sufficient specification to begin writing the constructor for the polynomial class. All object oriented classes in Octave must be located in a directory that is the name of the class prepended with the &amp;lsquo;</source>
          <target state="translated">これは、多項式クラスのコンストラクターの作成を開始するのに十分な仕様です。Octaveのすべてのオブジェクト指向クラスは、先頭に「</target>
        </trans-unit>
        <trans-unit id="77f06266a1027636742f8afaf97830f05ff1f14b" translate="yes" xml:space="preserve">
          <source>This is also true of assignments to lists of values, so the following is a valid expression</source>
          <target state="translated">これは値のリストへの代入にも当てはまるので、次のような表現が有効です。</target>
        </trans-unit>
        <trans-unit id="538ed8bc43e28a6d55cffb1c0208a3d8f8c3bea4" translate="yes" xml:space="preserve">
          <source>This is am optional file describing instructions on how to cite the package for publication. It will be displayed verbatim by the function &lt;code&gt;citation&lt;/code&gt;.</source>
          <target state="translated">これは、パッケージを公開のために引用する方法についての説明が記載されたオプションのファイルです。関数 &lt;code&gt;citation&lt;/code&gt; によって逐語的に表示されます。</target>
        </trans-unit>
        <trans-unit id="847d391fe3beddb3aaedeb808d38f046cafc5506" translate="yes" xml:space="preserve">
          <source>This is an alias for the &lt;code&gt;isalpha&lt;/code&gt; function.</source>
          <target state="translated">これは &lt;code&gt;isalpha&lt;/code&gt; 関数のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="2520d264989a662ea106833745280031de8a83e2" translate="yes" xml:space="preserve">
          <source>This is an alias for the function &lt;code&gt;OCTAVE_HOME&lt;/code&gt; provided for compatibility.</source>
          <target state="translated">これは、互換性のために提供されている関数 &lt;code&gt;OCTAVE_HOME&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="3282d80bc0dfb1dd5535a8ca5a47c09c15574b81" translate="yes" xml:space="preserve">
          <source>This is an alternative method to specify &lt;var&gt;idx&lt;/var&gt;. When specifying it in this way, its value can also be the string &lt;code&gt;&quot;all&quot;&lt;/code&gt;.</source>
          <target state="translated">これは &lt;var&gt;idx&lt;/var&gt; を指定する代替方法です。この方法で指定する場合、その値は文字列 &lt;code&gt;&quot;all&quot;&lt;/code&gt; にすることもできます。</target>
        </trans-unit>
        <trans-unit id="0ecad9c53df7a67876faaa7a5d922e353da6830a" translate="yes" xml:space="preserve">
          <source>This is an optional file describing all the changes made to the package source files.</source>
          <target state="translated">これは、パッケージのソースファイルに加えられたすべての変更を記述するオプションのファイルです。</target>
        </trans-unit>
        <trans-unit id="c84f74ee9cfd0170075c80e8eabfab77189e15dc" translate="yes" xml:space="preserve">
          <source>This is an optional file describing all user-visible changes worth mentioning. As this file increases on size, old entries can be moved into</source>
          <target state="translated">これは、言及する価値のあるすべてのユーザーから見える変更を記述したオプションのファイルです。このファイルのサイズが大きくなるにつれて、古いエントリは</target>
        </trans-unit>
        <trans-unit id="826430352946b01b627a61764759f22ba1f33d67" translate="yes" xml:space="preserve">
          <source>This is an optional file describing old entries from the</source>
          <target state="translated">の古いエントリを記述するオプションのファイルです。</target>
        </trans-unit>
        <trans-unit id="12bf56c2abcf463dde94d6ed94c155d77dbf29ae" translate="yes" xml:space="preserve">
          <source>This is an optional file describing the functions provided by the package. If this file is not given then one with be created automatically from the functions in the package and the &lt;code&gt;Categories&lt;/code&gt; keyword in the</source>
          <target state="translated">これは、パッケージが提供する機能を説明するオプションのファイルです。このファイルは、パッケージ内の関数から自動的に作成されると1を与えられていない場合は &lt;code&gt;Categories&lt;/code&gt; 中のキーワード</target>
        </trans-unit>
        <trans-unit id="70c9330cb7f9cc5636b0cbebe0fdd5f378d653d9" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run after the installation of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">これは、パッケージのインストール後に実行されるオプションの関数です。この関数は、単一の引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e1accb88b1a443eda36a5cc6facc96a35ecd7124" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run prior to the installation of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">これは、パッケージのインストール前に実行されるオプションの関数です。のデータの後にフィールド名を持つ構造体を一つの引数としてこの関数が呼ばれます。</target>
        </trans-unit>
        <trans-unit id="4fd4089ef0ffa6598067b0d1145f7ee698b611ae" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run prior to the removal of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">これは、パッケージが削除される前に実行されるオプションの関数です。のデータの後にフィールド名を持つ構造体を一つの引数としてこの関数が呼ばれます。</target>
        </trans-unit>
        <trans-unit id="391800e5160cd1ce1c8fa8c22bc1d122ae33b5d8" translate="yes" xml:space="preserve">
          <source>This is cleaner and more memory efficient than using a dummy variable. The &lt;code&gt;nargout&lt;/code&gt; value for the right-hand side expression is not affected. If the assignment is used as an expression, the return value is a comma-separated list with the ignored values dropped.</source>
          <target state="translated">これは、ダミー変数を使用するよりもクリーンでメモリ効率が高くなります。右側の式の &lt;code&gt;nargout&lt;/code&gt; 値は影響を受けません。割り当てが式として使用される場合、戻り値は、無視された値が削除されたコンマ区切りのリストです。</target>
        </trans-unit>
        <trans-unit id="5814f2e01ed3bbc2e7ae923183b221c05580a6ab" translate="yes" xml:space="preserve">
          <source>This is conceptually equivalent to &lt;code&gt;inv (A) * b&lt;/code&gt;, but avoids computing the inverse of a matrix directly.</source>
          <target state="translated">これは概念的には &lt;code&gt;inv (A) * b&lt;/code&gt; と同等ですが、行列の逆行列を直接計算することは避けます。</target>
        </trans-unit>
        <trans-unit id="8c5c89b0912454ed85fcc78d9c40a247275d4a17" translate="yes" xml:space="preserve">
          <source>This is consistent with the ordering used by &lt;em&gt;max&lt;/em&gt;, &lt;em&gt;min&lt;/em&gt; and &lt;em&gt;sort&lt;/em&gt;, but is not consistent with &lt;small&gt;MATLAB&lt;/small&gt;, which only compares the real parts.</source>
          <target state="translated">これは、&lt;em&gt;max&lt;/em&gt;、&lt;em&gt;min&lt;/em&gt;、および&lt;em&gt;sort&lt;/em&gt;で使用される順序と一致し&lt;em&gt;ます&lt;/em&gt;が、実際の部分のみを比較する&lt;small&gt;MATLAB&lt;/small&gt;とは一致しません。</target>
        </trans-unit>
        <trans-unit id="e5fefbd13aaa4e19a3b034bb880ebcdb919420b9" translate="yes" xml:space="preserve">
          <source>This is defined as</source>
          <target state="translated">これは次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="57d7667ecc9371386935ac73cc49b470544fbed9" translate="yes" xml:space="preserve">
          <source>This is defined as, &lt;var&gt;theta&lt;/var&gt; = &lt;code&gt;atan2 (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, in radians.</source>
          <target state="translated">これは、ラジアン単位の &lt;var&gt;theta&lt;/var&gt; = &lt;code&gt;atan2 (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; として定義されます。</target>
        </trans-unit>
        <trans-unit id="64ad3c2cd6f4b5e2641bfc0bc092458ad97a0597" translate="yes" xml:space="preserve">
          <source>This is defined block by block as</source>
          <target state="translated">としてブロックごとに定義されています。</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="78f8d59bba718b21fc029b9a6984be15a644ce92" translate="yes" xml:space="preserve">
          <source>This is equivalent to (&lt;code&gt;isalpha (&lt;var&gt;s&lt;/var&gt;) | isdigit (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt;).</source>
          <target state="translated">これは（ &lt;code&gt;isalpha (&lt;var&gt;s&lt;/var&gt;) | isdigit (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="4399ca1de81bbc6e805f1b676f44110de2d70a4f" translate="yes" xml:space="preserve">
          <source>This is equivalent to (&lt;code&gt;islower (&lt;var&gt;s&lt;/var&gt;) | isupper (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt;).</source>
          <target state="translated">これは（ &lt;code&gt;islower (&lt;var&gt;s&lt;/var&gt;) | isupper (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="e06bf2b532df667906e9eb9b8c2ca8f960fe2fd3" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;, except that &lt;code&gt;realpow&lt;/code&gt; reports an error if any return value is complex.</source>
          <target state="translated">これは &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; と &lt;code&gt;realpow&lt;/code&gt; ですが、戻り値が複雑な場合にrealpowがエラーを報告する点が異なります。</target>
        </trans-unit>
        <trans-unit id="aca6bd432826f4ee785cd488ecdca027d13d8986" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;ctime (time ())&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;ctime (time ())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="463ea821d6b25208bd2d64388ded9ab655746372" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;mkoctfile --mex [options] file&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;mkoctfile --mex [options] file&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="3915ec730b64eb7324334c55ee083d59f80bbce3" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;sqrt (&lt;var&gt;x&lt;/var&gt;.^2 + &lt;var&gt;y&lt;/var&gt;.^2)&lt;/code&gt;, but is calculated in a manner that avoids overflows for large values of &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">これは &lt;code&gt;sqrt (&lt;var&gt;x&lt;/var&gt;.^2 + &lt;var&gt;y&lt;/var&gt;.^2)&lt;/code&gt; と同等ですが、 &lt;var&gt;x&lt;/var&gt; または &lt;var&gt;y&lt;/var&gt; の大きな値のオーバーフローを回避する方法で計算されます。</target>
        </trans-unit>
        <trans-unit id="e19d51f5c2d1a1ec72f794c0fe0edf943ba2c4d8" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;sum (conj (&lt;var&gt;X&lt;/var&gt;) .* &lt;var&gt;Y&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt;, but avoids forming a temporary array and is faster. When &lt;var&gt;X&lt;/var&gt; and &lt;var&gt;Y&lt;/var&gt; are column vectors, the result is equivalent to &lt;code&gt;&lt;var&gt;X&lt;/var&gt;' * &lt;var&gt;Y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;sum (conj (&lt;var&gt;X&lt;/var&gt;) .* &lt;var&gt;Y&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; と同等ですが、一時的な配列の形成を回避し、より高速です。ときに &lt;var&gt;X&lt;/var&gt; と &lt;var&gt;Y&lt;/var&gt; の列ベクトルで、その結果はと等価である &lt;code&gt;&lt;var&gt;X&lt;/var&gt;' * &lt;var&gt;Y&lt;/var&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90995851ac36a2b8648eb3ced1380e7572539384" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;code&gt;fscanf&lt;/code&gt; with &lt;var&gt;fid&lt;/var&gt; = &lt;code&gt;stdin&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;var&gt;fid&lt;/var&gt; = &lt;code&gt;stdin&lt;/code&gt; を指定して &lt;code&gt;fscanf&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="4a28c5d500d2ae7986a2210df59107bfd15fd69e" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards negative infinity. If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;floor (real (&lt;var&gt;x&lt;/var&gt;)) + floor (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="translated">これは、負の無限大に向かって丸めることと同じです。 &lt;var&gt;x&lt;/var&gt; が複素数の場合、 &lt;code&gt;floor (real (&lt;var&gt;x&lt;/var&gt;)) + floor (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="b17ef95948b73ac2ba2561576c02e4112fd4d8c9" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards positive infinity.</source>
          <target state="translated">これは、正の無限大に向かって丸めることに相当します。</target>
        </trans-unit>
        <trans-unit id="910889def20e09d983d17db9f230c48eacd45a44" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards zero. If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;fix (real (&lt;var&gt;x&lt;/var&gt;)) + fix (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="translated">これは、ゼロに向かって丸めることと同じです。 &lt;var&gt;x&lt;/var&gt; が複素数の場合、 &lt;code&gt;fix (real (&lt;var&gt;x&lt;/var&gt;)) + fix (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="86ca11ed808ba71955b6b702d42b5be523bec9f1" translate="yes" xml:space="preserve">
          <source>This is equivalent to the polynomial found by multiplying together all the common roots. Together with deconv, you can reduce a ratio of two polynomials.</source>
          <target state="translated">これは、すべての共通の根を掛け合わせて得られる多項式に相当します。deconvと一緒に、2つの多項式の比を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="7760e11dfd39f96a4705664ec9e9d140d6a38333" translate="yes" xml:space="preserve">
          <source>This is especially important for loops with &quot;cheap&quot; bodies. Often it suffices to vectorize just the innermost loop to get acceptable performance. A general rule of thumb is that the &quot;order&quot; of the vectorized body should be greater or equal to the &quot;order&quot; of the enclosing loop.</source>
          <target state="translated">これは「安い」ボディを持つループでは特に重要です。多くの場合、許容できる性能を得るためには、ループの一番内側だけをベクトル化すれば十分です。一般的な経験則としては、ベクトル化されたボディの「次数」は、それを囲むループの「次数」と同じかそれ以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8583958409847ec94b7f38558c384b6bab578d5a" translate="yes" xml:space="preserve">
          <source>This is given by</source>
          <target state="translated">これは次のように与えられます。</target>
        </trans-unit>
        <trans-unit id="2ca2d7b971aaaf4f270a39d529b10a7ca73916bd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;fscanf&lt;/code&gt;, except that the characters are taken from the string &lt;var&gt;string&lt;/var&gt; instead of from a stream.</source>
          <target state="translated">これは &lt;code&gt;fscanf&lt;/code&gt; に似ていますが、文字がストリームからではなく文字 &lt;var&gt;string&lt;/var&gt; から取得される点が異なります。</target>
        </trans-unit>
        <trans-unit id="b70b563899d45ada181a3ccae1a5f8bc46d7c232" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;printf&lt;/code&gt;, except that the output is returned as a string.</source>
          <target state="translated">これは、出力が文字列として返されることを除いて、 &lt;code&gt;printf&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="a6e81a14de059aefb36b3ad6707c89a3cbb869aa" translate="yes" xml:space="preserve">
          <source>This is most easily demonstrated by example. Suppose the programmer needs a FIR filter, i.e., a filter with a numerator polynomial but a denominator of 1. In traditional Octave programming this would be performed as follows.</source>
          <target state="translated">これは,例によって最も簡単に示すことができます。プログラマがFIRフィルタ、すなわち分子が多項式で分母が1のフィルタを必要としているとします。 従来のOctaveプログラミングでは,これは次のように実行されます。</target>
        </trans-unit>
        <trans-unit id="2681eae7cb935fdd23a554241797cb1f7b3d98b6" translate="yes" xml:space="preserve">
          <source>This is normally useful when doing object-oriented programming and there is a requirement to call one of Octave&amp;rsquo;s base functions rather than the overloaded one of a new class.</source>
          <target state="translated">これは通常、オブジェクト指向プログラミングを行うときに役立ちます。新しいクラスのオーバーロードされた関数ではなく、Octaveの基本関数の1つを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4c642a946a5ef20b9c56cdcfcd3abbff58c71153" translate="yes" xml:space="preserve">
          <source>This is not a practical example of the &lt;code&gt;continue&lt;/code&gt; statement, but it should give you a clear understanding of how it works. Normally, one would probably write the loop like this:</source>
          <target state="translated">これは、 &lt;code&gt;continue&lt;/code&gt; ステートメントの実際的な例ではありませんが、それがどのように機能するかを明確に理解できるはずです。通常、おそらく次のようにループを記述します。</target>
        </trans-unit>
        <trans-unit id="c8237ab5ad04922df4b3b733248c61ea2229a849" translate="yes" xml:space="preserve">
          <source>This is not the same as &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt;, because IEEE 754 floating point allows zero to be signed. The comparison &lt;code&gt;-0.0 &amp;lt; 0.0&lt;/code&gt; is false, but &lt;code&gt;signbit (-0.0)&lt;/code&gt; will return a nonzero value.</source>
          <target state="translated">IEEE 754浮動小数点ではゼロに符号を付けることができるため、これは &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt; と同じではありません。比較 &lt;code&gt;-0.0 &amp;lt; 0.0&lt;/code&gt; は偽ですが、 &lt;code&gt;signbit (-0.0)&lt;/code&gt; はゼロ以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="9bbbb13bd3f943450f4a13ecfbc59acced034840" translate="yes" xml:space="preserve">
          <source>This is one way to normalize columns of a matrix &lt;var&gt;X&lt;/var&gt; to unit norm:</source>
          <target state="translated">これは、行列 &lt;var&gt;X&lt;/var&gt; の列を単位ノルムに正規化する1つの方法です。</target>
        </trans-unit>
        <trans-unit id="5159c4fda56a596f883293c7e62f46536ff3e86c" translate="yes" xml:space="preserve">
          <source>This is only possible if the call was done using &lt;code&gt;WUNTRACED&lt;/code&gt; or when the child is being traced (see ptrace(2)).</source>
          <target state="translated">これは、呼び出しが &lt;code&gt;WUNTRACED&lt;/code&gt; を使用して行われた場合、または子がトレースされている場合にのみ可能です（ptrace（2）を参照）。</target>
        </trans-unit>
        <trans-unit id="ac5c53eadf685f560de5b22f92b00966ccaa21b0" translate="yes" xml:space="preserve">
          <source>This is related to the least squares solution of &lt;code&gt;&lt;var&gt;A&lt;/var&gt; \ &lt;var&gt;b&lt;/var&gt;&lt;/code&gt;, by</source>
          <target state="translated">これは、の最小二乗解に関連する &lt;code&gt;&lt;var&gt;A&lt;/var&gt; \ &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; によって、</target>
        </trans-unit>
        <trans-unit id="2ef9623dd5fcb1f13c1c2608fc898fefdf1091fb" translate="yes" xml:space="preserve">
          <source>This is the e-mail address to list after the name in the author field. By default it guesses &lt;code&gt;&amp;lt;$LOGNAME@$HOSTNAME&amp;gt;&lt;/code&gt;, and if &lt;code&gt;$HOSTNAME&lt;/code&gt; is not defined it uses &lt;code&gt;uname -n&lt;/code&gt;. You probably want to override this. Be sure to use the format &lt;code&gt;&lt;a href=&quot;mailto:user@host&quot;&gt;user@host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これは、著者フィールドの名前の後にリストする電子メールアドレスです。デフォルトでは &lt;code&gt;&amp;lt;$LOGNAME@$HOSTNAME&amp;gt;&lt;/code&gt; 推測し、 &lt;code&gt;$HOSTNAME&lt;/code&gt; が定義されていない場合は &lt;code&gt;uname -n&lt;/code&gt; を使用します。おそらくこれを上書きしたいでしょう。必ず &lt;code&gt;&lt;a href=&quot;mailto:user@host&quot;&gt;user@host&lt;/a&gt;&lt;/code&gt; という形式を使用してください。</target>
        </trans-unit>
        <trans-unit id="1e16b59e4bd6319aca01f3f1a7598c864a4a334c" translate="yes" xml:space="preserve">
          <source>This is the location of user local m-files. Be sure it is in your path. The default is</source>
          <target state="translated">これはユーザーローカルのm-filesの場所です。パス内にあることを確認してください。デフォルトは</target>
        </trans-unit>
        <trans-unit id="4860f9f14464f9d40dfc198a17cb16007b93fe54" translate="yes" xml:space="preserve">
          <source>This is the name to put after the &quot;## Author:&quot; field of new functions. By default it guesses from the &lt;code&gt;gecos&lt;/code&gt; field of the password database.</source>
          <target state="translated">これは、新しい関数の「## Author：」フィールドの後に付ける名前です。デフォルトでは、パスワードデータベースの &lt;code&gt;gecos&lt;/code&gt; フィールドから推測します。</target>
        </trans-unit>
        <trans-unit id="40513e3c57ee73e4bc7ea5bb85b4a6f917e6875b" translate="yes" xml:space="preserve">
          <source>This is the number of combinations of &lt;var&gt;n&lt;/var&gt; items taken in groups of size &lt;var&gt;k&lt;/var&gt;.</source>
          <target state="translated">これは、サイズ &lt;var&gt;k&lt;/var&gt; のグループで取得された &lt;var&gt;n&lt;/var&gt; 個のアイテムの組み合わせの数です。</target>
        </trans-unit>
        <trans-unit id="41a9d9c19d4a0d0397a5bece099769288b72ea2f" translate="yes" xml:space="preserve">
          <source>This is typically used for large matrices, where the cost of calculating &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt; is prohibitive and an approximation to the 2-norm is acceptable.</source>
          <target state="translated">これは通常、大きな行列に使用されます。この場合、 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt; を計算するコストは非常に高く、2ノルムへの近似は許​​容されます。</target>
        </trans-unit>
        <trans-unit id="2d708a1e34b9fae20e2e8dc26b1e77c8f8f94d40" translate="yes" xml:space="preserve">
          <source>This is useful for building a matrix incrementally by a sequence of indexed assignments. Subsequent indexed assignments after &lt;code&gt;spalloc&lt;/code&gt; will reuse the pre-allocated memory, provided they are of one of the simple forms</source>
          <target state="translated">これは、インデックス付きの割り当てのシーケンスによって増分的にマトリックスを構築するのに役立ちます。 &lt;code&gt;spalloc&lt;/code&gt; 後の後続のインデックス付き割り当ては、単純な形式のいずれかである場合、事前に割り当てられたメモリを再利用します</target>
        </trans-unit>
        <trans-unit id="57dcd591bd63accba00855fb5db3583a910f0104" translate="yes" xml:space="preserve">
          <source>This is useful for checking to that the number of output arguments supplied to a function is within an acceptable range.</source>
          <target state="translated">これは、関数に与えられる出力引数の数が許容範囲内にあるかどうかをチェックするのに便利です。</target>
        </trans-unit>
        <trans-unit id="d00fff40673009e7a584512281ef6b03924ecd38" translate="yes" xml:space="preserve">
          <source>This is useful for functions that do not accept array arguments. If the function does accept array arguments it is better to call the function directly.</source>
          <target state="translated">これは、配列引数を受け付けない関数に便利です。関数が配列の引数を受け付ける場合は、直接関数を呼び出した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="f2b166094f1268d8f4dd00beba0aca1a10482696" translate="yes" xml:space="preserve">
          <source>This is useful for implementing functions where arguments can either be scalars or of common size.</source>
          <target state="translated">これは、引数がスカラか共通のサイズのいずれかである関数を実装するのに便利です。</target>
        </trans-unit>
        <trans-unit id="dd37002f9ad750dd8755a9a0a0216da1a84ce4ed" translate="yes" xml:space="preserve">
          <source>This is useful to protect temporary changes to global variables from possible errors. For example, the following code will always restore the original value of the global variable &lt;code&gt;frobnosticate&lt;/code&gt; even if an error occurs in the first part of the &lt;code&gt;unwind_protect&lt;/code&gt; block.</source>
          <target state="translated">これは、グローバル変数への一時的な変更を起こり得るエラーから保護するのに役立ちます。たとえば、次のコードは、 &lt;code&gt;unwind_protect&lt;/code&gt; ブロックの最初の部分でエラーが発生した場合でも、常にグローバル変数 &lt;code&gt;frobnosticate&lt;/code&gt; の元の値を復元します。</target>
        </trans-unit>
        <trans-unit id="931728f491e43285a80d7eb161d43c1b74ce9d3b" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t merely easier to write; it is also internally much easier to optimize. Octave delegates this operation to an underlying implementation which, among other optimizations, may use special vector hardware instructions or could conceivably even perform the additions in parallel. In general, if the code is vectorized, the underlying implementation has more freedom about the assumptions it can make in order to achieve faster execution.</source>
          <target state="translated">これは単に書くのが簡単なだけではありません。内部での最適化もはるかに簡単です。Octaveは、この操作を、他の最適化の中でも特別なベクトルハードウェア命令を使用したり、追加を並行して実行したりする可能性のある基本的な実装に委譲します。一般に、コードがベクトル化されている場合、基礎となる実装では、より高速な実行を実現するために行うことができる仮定についてより多くの自由度があります。</target>
        </trans-unit>
        <trans-unit id="b9c188673f6794fa0d8938c6935f41599d09470e" translate="yes" xml:space="preserve">
          <source>This kind of code can however be very cumbersome to both write and maintain. To overcome this problem Octave supports the &lt;code&gt;switch&lt;/code&gt; statement. Using this statement, the above example becomes</source>
          <target state="translated">ただし、この種のコードは、作成と保守の両方が非常に面倒な場合があります。この問題を克服するために、Octaveは &lt;code&gt;switch&lt;/code&gt; ステートメントをサポートしています。このステートメントを使用すると、上記の例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="df9effc0619fb194648cb4137318e241924cb378" translate="yes" xml:space="preserve">
          <source>This linear transformation of &lt;var&gt;x&lt;/var&gt; improves the numerical stability of the fit.</source>
          <target state="translated">この &lt;var&gt;x&lt;/var&gt; の線形変換により、近似の数値的安定性が向上します。</target>
        </trans-unit>
        <trans-unit id="fe36d35ff625c5712b1f388de402aad57ff9c364" translate="yes" xml:space="preserve">
          <source>This manual provides comprehensive documentation on how to install, run, use, and extend GNU Octave. Additional chapters describe how to report bugs and help contribute code.</source>
          <target state="translated">このマニュアルでは,GNU Octaveのインストール,実行,使用,拡張の方法について包括的な文書を提供します。追加の章では,バグの報告方法やコードの貢献を助ける方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="4df057d216be9b11b191fc3f61bc96ed8fbe68d0" translate="yes" xml:space="preserve">
          <source>This matches a literal &amp;lsquo;</source>
          <target state="translated">これはリテラルと一致します '</target>
        </trans-unit>
        <trans-unit id="91a8024a2838aca58f702e884ebf87149c4d8884" translate="yes" xml:space="preserve">
          <source>This may be useful, for example, when using inline functions with numerical integration or optimization where a vector-valued function is expected.</source>
          <target state="translated">これは、例えば、数値積分や最適化でインライン関数を使用する際に、ベクトル値を持つ関数が期待される場合などに便利です。</target>
        </trans-unit>
        <trans-unit id="47bcbc9ade661d71a8aa437e3218b0e1fcb295a6" translate="yes" xml:space="preserve">
          <source>This may include either wildcard replacement or special character escaping.</source>
          <target state="translated">これには、ワイルドカードの置換または特殊文字のエスケープのいずれかが含まれます。</target>
        </trans-unit>
        <trans-unit id="fd969aaa3e2122735da57a2f88112183fcb66a9d" translate="yes" xml:space="preserve">
          <source>This means, for example, adding new objects to the scene will not retarget the camera:</source>
          <target state="translated">これは、例えば、シーンに新しいオブジェクトを追加しても、カメラのリターゲットにはならないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0466d142ab5a94a94ed1ffa6367ad2166f2b386b" translate="yes" xml:space="preserve">
          <source>This method is also called when an object appears as lvalue with cs-list indexing, i.e., &lt;code&gt;object{&amp;hellip;}&lt;/code&gt; or &lt;code&gt;object(&amp;hellip;).field&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、オブジェクトがcs-listインデックス付きの左辺値として表示される場合にも呼び出されます。つまり、 &lt;code&gt;object{&amp;hellip;}&lt;/code&gt; または &lt;code&gt;object(&amp;hellip;).field&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="20f7601e2f2d604a7db9d3fa1be3992815f39fa5" translate="yes" xml:space="preserve">
          <source>This method returns a pointer to the underlying data of the matrix or array so that it can be manipulated directly, either within Octave or by an external library.</source>
          <target state="translated">このメソッドは,Octave内でも外部ライブラリでも直接操作できるように,行列や配列の基礎となるデータへのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="c21ade32556b2bcbc8936ce6f1c9d3614362fb97" translate="yes" xml:space="preserve">
          <source>This of course assumes that the file &amp;lsquo;</source>
          <target state="translated">もちろん、これはファイルが</target>
        </trans-unit>
        <trans-unit id="07ccfdeddc514ddc4afc039110443b0e2f9e0fa1" translate="yes" xml:space="preserve">
          <source>This operation broadcasts the two matrices with permuted dimensions across each other during elementwise multiplication in order to obtain a larger 3-D array, and this array is then summed along the third dimension. A moment of thought will prove that this operation is simply the much faster ordinary matrix multiplication, &lt;code&gt;&lt;var&gt;c&lt;/var&gt; = &lt;var&gt;a&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt;;&lt;/code&gt;.</source>
          <target state="translated">この操作では、要素ごとの乗算中に次元が入れ替えられた2つの行列をブロードキャストして、より大きな3次元配列を取得し、この配列を3番目の次元に沿って合計します。考えてみると、この演算は通常の行列の乗算よりもはるかに高速であることがわかります &lt;code&gt;&lt;var&gt;c&lt;/var&gt; = &lt;var&gt;a&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt;;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92890cb4ff062d1984bd9e01f84a608d45f3393a" translate="yes" xml:space="preserve">
          <source>This option allows for truncation of intermediate floating point results in calculations. It is only necessary for certain platforms.</source>
          <target state="translated">このオプシ ョ ンでは、 中間浮動小数点の結果を計算で切り詰めることができます。これは、特定のプラットフォームでのみ必要です。</target>
        </trans-unit>
        <trans-unit id="53e23a978befb4936d6e391d300380ff9390479a" translate="yes" xml:space="preserve">
          <source>This option exists for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but has no effect. For maximum performance when reading multiple images from a single file, use the &lt;code&gt;&quot;Index&quot;&lt;/code&gt; option.</source>
          <target state="translated">このオプションは、&lt;small&gt;MATLAB&lt;/small&gt;互換性のために存在しますが、効果はありません。単一のファイルから複数の画像を読み取るときに最大のパフォーマンスを得るには、 &lt;code&gt;&quot;Index&quot;&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="e644feab9ff0894c365d73a8253872fc87042080" translate="yes" xml:space="preserve">
          <source>This option is accepted for backward compatibility but is ignored. Octave can now support multi-dimensional HDF data and automatically modifies variable names if they are invalid Octave identifiers.</source>
          <target state="translated">このオプションは下位互換性のために受け入れられますが,無視されます。Octaveは多次元HDFデータをサポートし,それらが無効なOctave識別子である場合に変数名を自動的に修正することができるようになりました。</target>
        </trans-unit>
        <trans-unit id="69e185983f7d5425a9d88bfd6cdaf4202b637592" translate="yes" xml:space="preserve">
          <source>This option is accepted for backward compatibility but is ignored. Octave now overwrites variables currently in memory with those of the same name found in the file.</source>
          <target state="translated">このオプションは下位互換性のために受け入れられますが、無視されます。Octaveは現在メモリ上の変数をファイル内の同じ名前の変数で上書きするようになりました。</target>
        </trans-unit>
        <trans-unit id="d88fbf7a9d970663b5f06747296769ec947efdfb" translate="yes" xml:space="preserve">
          <source>This option is present for compatibility but is ignored.</source>
          <target state="translated">このオプションは互換性のために存在しますが、無視されます。</target>
        </trans-unit>
        <trans-unit id="c598f6d597af0ece6ee5f781cde8ecae080243ff" translate="yes" xml:space="preserve">
          <source>This option is required by the &lt;code&gt;&quot;compute consistent initial condition&quot;&lt;/code&gt; and &lt;code&gt;&quot;exclude algebraic variables from error test&quot;&lt;/code&gt; options.</source>
          <target state="translated">このオプションは、 &lt;code&gt;&quot;compute consistent initial condition&quot;&lt;/code&gt; および &lt;code&gt;&quot;exclude algebraic variables from error test&quot;&lt;/code&gt; 」オプションで必要です。</target>
        </trans-unit>
        <trans-unit id="4b250ff69dc9d2fb715b6eedd8e3583420117c17" translate="yes" xml:space="preserve">
          <source>This option only affects PDF outputs, unless it is combined with</source>
          <target state="translated">このオプションは、PDF出力にのみ影響を与えます。</target>
        </trans-unit>
        <trans-unit id="8c8f086bac8d4edf68b8c45d3af8cf2d35445e8f" translate="yes" xml:space="preserve">
          <source>This option only has an effect if the &lt;code&gt;&quot;enforce inequality constraints&quot;&lt;/code&gt; option is nonzero.</source>
          <target state="translated">このオプションは、 &lt;code&gt;&quot;enforce inequality constraints&quot;&lt;/code&gt; オプションがゼロ以外の場合にのみ効果があります。</target>
        </trans-unit>
        <trans-unit id="a2ca295340b0d5086f31cabc79e412b0e857e059" translate="yes" xml:space="preserve">
          <source>This plot shows the contributions of each column value to the row sum. It is functionally similar to &lt;code&gt;plot (&lt;var&gt;x&lt;/var&gt;, cumsum (&lt;var&gt;y&lt;/var&gt;, 2))&lt;/code&gt;, except that the area under the curve is shaded.</source>
          <target state="translated">このプロットは、行の合計に対する各列の値の寄与を示しています。曲線の下の領域がシェーディングされていることを除いて、機能的には &lt;code&gt;plot (&lt;var&gt;x&lt;/var&gt;, cumsum (&lt;var&gt;y&lt;/var&gt;, 2))&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="6f31038bf004fced8eee2887d4b642b3036a10ed" translate="yes" xml:space="preserve">
          <source>This prevents long and confusing output from large deeply nested structures. The number of levels to print for nested structures may be set with the function &lt;code&gt;struct_levels_to_print&lt;/code&gt;, and the function &lt;code&gt;print_struct_array_contents&lt;/code&gt; may be used to enable printing of the contents of structure arrays.</source>
          <target state="translated">これにより、大きく深くネストされた構造からの長くて混乱する出力が防止されます。ネストされた構造体で出力するレベルの数は、関数 &lt;code&gt;struct_levels_to_print&lt;/code&gt; で設定でき、関数 &lt;code&gt;print_struct_array_contents&lt;/code&gt; を使用して、構造体配列の内容の出力を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="458a406d885108ae10c1a7952dcfc1fa9af06c81" translate="yes" xml:space="preserve">
          <source>This prints a table like:</source>
          <target state="translated">これはテーブルのようなものをプリントします。</target>
        </trans-unit>
        <trans-unit id="61c6a33772a2804b49b4494cce6bcdda72f1fb72" translate="yes" xml:space="preserve">
          <source>This property controls how results are calculated at the boundaries (endpoints) of the window. Possible values are:</source>
          <target state="translated">このプロパティは、ウィンドウの境界(端点)での結果の計算方法を制御します。使用可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fb1882bc9875a4b265f0e76a5e942cfd7e0879a0" translate="yes" xml:space="preserve">
          <source>This property controls the size of the head of the arrows in the quiver series. The default value is 0.2.</source>
          <target state="translated">このプロパティは、クイバーシリーズの矢の頭のサイズを制御します。デフォルト値は0.2です。</target>
        </trans-unit>
        <trans-unit id="90846bc55e5a9761aa2098305bb151bd6437bc66" translate="yes" xml:space="preserve">
          <source>This results in a sparse matrix with the same structure as &lt;var&gt;S&lt;/var&gt;. The function &lt;var&gt;f&lt;/var&gt; can be passed as a string, a function handle, or an inline function.</source>
          <target state="translated">これにより、 &lt;var&gt;S&lt;/var&gt; と同じ構造のスパース行列ができます。関数 &lt;var&gt;f&lt;/var&gt; は、文字列、関数ハンドル、またはインライン関数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1bd7630bf44e145b16f71092ecf074e49a8af201" translate="yes" xml:space="preserve">
          <source>This returns a column vector &lt;var&gt;v&lt;/var&gt; of length 625. Later, you can restore the random number generator to the state &lt;var&gt;v&lt;/var&gt; using the form</source>
          <target state="translated">これは、長さ625の列ベクトル &lt;var&gt;v&lt;/var&gt; を返します。後で、次の形式を使用して乱数ジェネレータを状態 &lt;var&gt;v&lt;/var&gt; に復元できます。</target>
        </trans-unit>
        <trans-unit id="8dd4de32dadb489fb89b1b0408759854aa9168a2" translate="yes" xml:space="preserve">
          <source>This rule can lead to some strange looking names, for example &lt;code&gt;defaultlinelinewidth&quot;&lt;/code&gt; specifies the default &lt;code&gt;linewidth&lt;/code&gt; property for &lt;code&gt;line&lt;/code&gt; objects.</source>
          <target state="translated">このルールは、奇妙に見える名前につながる可能性が &lt;code&gt;line&lt;/code&gt; ます。たとえば、 &lt;code&gt;defaultlinelinewidth&quot;&lt;/code&gt; は、ラインオブジェクトのデフォルトの &lt;code&gt;linewidth&lt;/code&gt; プロパティを指定します。</target>
        </trans-unit>
        <trans-unit id="d0f97049556217db3f98ca0e21b55c56ca605d26" translate="yes" xml:space="preserve">
          <source>This section contains a list of problems (and some apparent problems that don&amp;rsquo;t really mean anything is wrong) that may show up during installation of Octave.</source>
          <target state="translated">このセクションには、Octaveのインストール中に表示される可能性のある問題（および実際に何も問題がないことを意味しない明らかな問題）のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="ff89efc0f282d78b3f48a2260537983e9114ae8e" translate="yes" xml:space="preserve">
          <source>This section describes how to call &lt;code&gt;printf&lt;/code&gt; and related functions.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;printf&lt;/code&gt; および関連する関数を呼び出す方法について説明します。</target>
        </trans-unit>
        <trans-unit id="258e0da7ac4bea4439c457d5bec4ea8f71d2525c" translate="yes" xml:space="preserve">
          <source>This section describes known problems that affect users of Octave. Most of these are not Octave bugs per se&amp;mdash;if they were, we would fix them. But the result for a user may be like the result of a bug.</source>
          <target state="translated">このセクションでは、Octaveのユーザーに影響を与える既知の問題について説明します。これらのほとんどはOctaveのバグそのものではありません。もしそうであれば、私たちはそれらを修正します。しかし、ユーザーの結果はバグの結果のようになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6f82727987eb8cf7d8f10e24467a664f2cd97b25" translate="yes" xml:space="preserve">
          <source>This section describes miscellaneous conversions for &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;printf&lt;/code&gt; のその他の変換について説明します。</target>
        </trans-unit>
        <trans-unit id="6804f4290260c794db828ec722edf1fbf7d7a054" translate="yes" xml:space="preserve">
          <source>This section describes the &lt;code&gt;scanf&lt;/code&gt; conversions for reading numeric values.</source>
          <target state="translated">このセクションでは、数値を読み取るための &lt;code&gt;scanf&lt;/code&gt; 変換について説明します。</target>
        </trans-unit>
        <trans-unit id="8857b01c76f62d904d12ba835ed44a8e3a2d8090" translate="yes" xml:space="preserve">
          <source>This section describes the &lt;code&gt;scanf&lt;/code&gt; input conversions for reading string and character values: &amp;lsquo;</source>
          <target state="translated">このセクションでは、文字列と文字の値を読み取るための &lt;code&gt;scanf&lt;/code&gt; 入力変換について説明します。</target>
        </trans-unit>
        <trans-unit id="2a03049dfdebee5590b1c8ef36d09e2693d77e3f" translate="yes" xml:space="preserve">
          <source>This section describes the options for the &amp;lsquo;</source>
          <target state="translated">このセクションでは、「</target>
        </trans-unit>
        <trans-unit id="ddf2adf3abf91c5ab0851cd80159c11789438336" translate="yes" xml:space="preserve">
          <source>This section discusses the conversion specifications for floating-point numbers: the &amp;lsquo;</source>
          <target state="translated">このセクションでは、浮動小数点数の変換仕様について説明します。</target>
        </trans-unit>
        <trans-unit id="543a60f850a6c6ddc23fa3e11c03781fb662fe63" translate="yes" xml:space="preserve">
          <source>This section explains the notation conventions that are used in this manual. You may want to skip this section and refer back to it later.</source>
          <target state="translated">本項では、本マニュアルで使用されている表記法について説明します。このセクションは読み飛ばして、後で参照してください。</target>
        </trans-unit>
        <trans-unit id="da61a6b4f10c1fb183586f2f1f2b8827ac47ae81" translate="yes" xml:space="preserve">
          <source>This section lists the built-in functions that are aware of diagonal and permutation matrices on input, or can return them as output. Passed to other functions, these matrices will in general trigger an implicit conversion. (Of course, user-defined dynamically linked functions may also work with diagonal or permutation matrices).</source>
          <target state="translated">このセクションでは,入力で対角行列と順列行列を認識したり,それらを出力として返すことができる組込み関数をリストアップします.これらの行列が他の関数に渡されると,一般的に暗黙の変換が行われます(もちろん,ユーザー定義の動的リンク関数は,対角行列や順列行列でも動作します).もちろん,ユーザ定義の動的リンク関数は,対角行列や順列行列でも動作します).</target>
        </trans-unit>
        <trans-unit id="8aa9f714b23e897534ee34836d15f7592d21b6c9" translate="yes" xml:space="preserve">
          <source>This section provides details about the precise syntax of conversion specifications that can appear in a &lt;code&gt;printf&lt;/code&gt; template string.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;printf&lt;/code&gt; テンプレート文字列で使用できる変換仕様の正確な構文について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="127682d7c8dd74079602711374cee7c955c1d9c2" translate="yes" xml:space="preserve">
          <source>This shows a problem with character matrices. It simply isn&amp;rsquo;t possible to represent strings of different lengths. The solution is to use a cell array of strings, which is described in &lt;a href=&quot;cell-arrays-of-strings#Cell-Arrays-of-Strings&quot;&gt;Cell Arrays of Strings&lt;/a&gt;.</source>
          <target state="translated">これは、文字行列の問題を示しています。長さが異なる文字列を表すことは不可能です。溶液を、に記載されている文字列のセルアレイ、使用する&lt;a href=&quot;cell-arrays-of-strings#Cell-Arrays-of-Strings&quot;&gt;文字列のセル配列を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e3833a5fbdb4d270079e2d2e7c57bc0ed17fac8" translate="yes" xml:space="preserve">
          <source>This shows an important general concept about using arrays for indexing instead of looping over an index variable. See &lt;a href=&quot;index-expressions#Index-Expressions&quot;&gt;Index Expressions&lt;/a&gt;. Also use boolean indexing generously. If a condition needs to be tested, this condition can also be written as a boolean index. For instance, instead of</source>
          <target state="translated">これは、インデックス変数をループする代わりに、配列をインデックスに使用することに関する重要な一般概念を示しています。&lt;a href=&quot;index-expressions#Index-Expressions&quot;&gt;インデックス式を&lt;/a&gt;参照してください。また、ブールインデックスを十分に使用します。条件をテストする必要がある場合は、この条件をブールインデックスとして書き込むこともできます。たとえば、代わりに</target>
        </trans-unit>
        <trans-unit id="bbbb1fc366235468ec84d6f5c8603025fef89654" translate="yes" xml:space="preserve">
          <source>This shows that &lt;var&gt;A&lt;/var&gt; has 7,840 nonzeros, the complete LU factorization has 126,478 nonzeros, and the incomplete LU factorization, with 0 level of fill-in, has 7,840 nonzeros, the same amount as &lt;var&gt;A&lt;/var&gt;. Taken from: &lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/ilu.html&quot;&gt;http://www.mathworks.com/help/matlab/ref/ilu.html&lt;/a&gt;</source>
          <target state="translated">これは、 &lt;var&gt;A&lt;/var&gt; には7,840の非ゼロがあり、完全なLU分解には126,478の非ゼロがあり、フィルレベルが0の不完全なLU分解には7,840の非ゼロがあり、 &lt;var&gt;A&lt;/var&gt; と同じ量であることを示しています。引用元：&lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/ilu.html&quot;&gt;http&lt;/a&gt; : //www.mathworks.com/help/matlab/ref/ilu.html</target>
        </trans-unit>
        <trans-unit id="2a3e4a97557e9e50cd8e1b6807e5e87f34946598" translate="yes" xml:space="preserve">
          <source>This shows that most of the run time was spent executing the function &amp;lsquo;</source>
          <target state="translated">これは、実行時間のほとんどが関数の実行に費やされたことを示しています '</target>
        </trans-unit>
        <trans-unit id="d134bec285d423d2eaf361f33716b9046cd311d8" translate="yes" xml:space="preserve">
          <source>This space saving optimization may be disabled using the function &lt;em&gt;disable_range&lt;/em&gt;.</source>
          <target state="translated">このスペース節約最適化は、関数&lt;em&gt;disable_range&lt;/em&gt;を使用して無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="e449fea8b0332a86ca2c7f5a1c5c86c84b7bbafd" translate="yes" xml:space="preserve">
          <source>This specifies the number of bytes to use for the internal buffer. A modest speed improvement may be obtained by setting this to a large value when reading a large file, especially if the input contains long strings. The default is 4096, or a value dependent on &lt;var&gt;n&lt;/var&gt; if that is specified.</source>
          <target state="translated">これは、内部バッファに使用するバイト数を指定します。特に入力に長い文字列が含まれる場合、大きなファイルを読み取るときにこれを大きな値に設定すると、適度な速度の向上が得られる場合があります。デフォルトは4096、または指定されている場合は &lt;var&gt;n&lt;/var&gt; に依存する値です。</target>
        </trans-unit>
        <trans-unit id="f2ee14197f75644a7bc0dd9eabb7ca91f8f00faa" translate="yes" xml:space="preserve">
          <source>This string defines whether the light emanates from a light source at infinite distance (&lt;code&gt;&quot;infinite&quot;&lt;/code&gt;) or from a local point source (&lt;code&gt;&quot;local&quot;&lt;/code&gt;).</source>
          <target state="translated">この文字列は、ライトが無限の距離にある光源（ &lt;code&gt;&quot;infinite&quot;&lt;/code&gt; ）から発するか、ローカルの点光源（ &lt;code&gt;&quot;local&quot;&lt;/code&gt; ）から発するかを定義します。</target>
        </trans-unit>
        <trans-unit id="0d4f342b409fde8a717a08f9756c999456f8ddfd" translate="yes" xml:space="preserve">
          <source>This value determines whether the editor should be started in async mode (editor is started in the background and Octave continues) or sync mode (Octave waits until the editor exits). Set it to &lt;code&gt;&quot;sync&quot;&lt;/code&gt; to start the editor in sync mode. The default is &lt;code&gt;&quot;async&quot;&lt;/code&gt; (see &lt;a href=&quot;controlling-subprocesses#XREFsystem&quot;&gt;system&lt;/a&gt;).</source>
          <target state="translated">この値は、エディターを非同期モードで開始するか（エディターをバックグラウンドで開始し、Octaveを続行するか）、同期モード（オクターブはエディターが終了するまで待機する）かを決定します。 &lt;code&gt;&quot;sync&quot;&lt;/code&gt; に設定すると、エディターが同期モードで起動します。デフォルトは &lt;code&gt;&quot;async&quot;&lt;/code&gt; （&lt;a href=&quot;controlling-subprocesses#XREFsystem&quot;&gt;システムを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="bf0863240ad29017f670600f9736199a8c715501" translate="yes" xml:space="preserve">
          <source>This will also inhibit printing of the normal traceback message (you will only see the top-level error message).</source>
          <target state="translated">これにより、通常のトレースバックメッセージの印刷も禁止されます(トップレベルのエラーメッセージのみが表示されます)。</target>
        </trans-unit>
        <trans-unit id="bd99a47d2e6ea16983d010aada7f51914e3c3e27" translate="yes" xml:space="preserve">
          <source>This will be faster than using regexp in most cases.</source>
          <target state="translated">ほとんどの場合、正規表現を使用するよりも高速になります。</target>
        </trans-unit>
        <trans-unit id="9dd8223ba3d56417dc3cb7a954ba049f4911f0ee" translate="yes" xml:space="preserve">
          <source>This will be stored as three vectors &lt;var&gt;cidx&lt;/var&gt;, &lt;var&gt;ridx&lt;/var&gt; and &lt;var&gt;data&lt;/var&gt;, representing the column indexing, row indexing and data respectively. The contents of these three vectors for the above matrix will be</source>
          <target state="translated">これは、列のインデックス付け、行のインデックス付け、およびデータをそれぞれ表す3つのベクトル &lt;var&gt;cidx&lt;/var&gt; 、 &lt;var&gt;ridx&lt;/var&gt; 、および &lt;var&gt;data&lt;/var&gt; として格納されます。上記の行列のこれら3つのベクトルの内容は次のようになります。</target>
        </trans-unit>
        <trans-unit id="bf317a81f21337bfd0c167bbfeb4c03b065c1c99" translate="yes" xml:space="preserve">
          <source>This will create a file called</source>
          <target state="translated">というファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="a1580e8f082962c59618c6e86ec9f8f178bbda90" translate="yes" xml:space="preserve">
          <source>This will install a copy of Octave, its libraries, and its documentation in the destination directory. As distributed, Octave is installed in the following directories. In the table below, &lt;var&gt;prefix&lt;/var&gt; defaults to</source>
          <target state="translated">これにより、Octave、そのライブラリー、およびドキュメントのコピーが宛先ディレクトリーにインストールされます。配布されると、Octaveは次のディレクトリにインストールされます。以下の表では、 &lt;var&gt;prefix&lt;/var&gt; デフォルトで</target>
        </trans-unit>
        <trans-unit id="d82c31911b6d4e8b23da7918c939441a33b3b054" translate="yes" xml:space="preserve">
          <source>This will plot the cosine and sine functions and label them accordingly in the legend.</source>
          <target state="translated">これは余弦関数と正弦関数をプロットし、それに応じて凡例にラベルを付けます。</target>
        </trans-unit>
        <trans-unit id="a2f1b2df09a1c701cf2208a510768ccb52d2584b" translate="yes" xml:space="preserve">
          <source>This will produce an error about nonconformant arguments.</source>
          <target state="translated">これは、不適合な引数についてのエラーを生成します。</target>
        </trans-unit>
        <trans-unit id="3d3e5f93df7acf9454dc5b54fb252ac8a91f88c9" translate="yes" xml:space="preserve">
          <source>This workaround description will not appear when listing functions in the package with &lt;code&gt;pkg describe&lt;/code&gt; but they will be published in the HTML documentation online. Workaround descriptions can use any HTML markup, but keep in mind that it will be enclosed in a bold-italic environment. For the special case of:</source>
          <target state="translated">この回避策の説明は、 &lt;code&gt;pkg describe&lt;/code&gt; を使用してパッケージ内の関数を一覧表示するときには表示されませんが、オンラインのHTMLドキュメントで公開されます。回避策の説明では、任意のHTMLマークアップを使用できますが、ボールドイタリック環境で囲まれることに注意してください。特別な場合：</target>
        </trans-unit>
        <trans-unit id="3713b384bb63571b47b4994b96e381d043d5ce97" translate="yes" xml:space="preserve">
          <source>This works well as long as it is acceptable to have the name of the variable (or &amp;lsquo;</source>
          <target state="translated">これは、変数の名前（または '</target>
        </trans-unit>
        <trans-unit id="65323958d3048890f3132eab72c06aa910100d26" translate="yes" xml:space="preserve">
          <source>Three element range</source>
          <target state="translated">3つの要素の範囲</target>
        </trans-unit>
        <trans-unit id="5c7747c575f1d0ec8256555e20610d72fcff4c12" translate="yes" xml:space="preserve">
          <source>Three functions are available for setting and determining the position of the file pointer for a given file.</source>
          <target state="translated">与えられたファイルのファイルポインタの位置を設定したり、決定したりするための3つの関数があります。</target>
        </trans-unit>
        <trans-unit id="8e74c3c69d4583b7e238b4cddd79c2fc0732f13f" translate="yes" xml:space="preserve">
          <source>Three-Dimensional Plots</source>
          <target state="translated">三次元プロット</target>
        </trans-unit>
        <trans-unit id="d0a5925b4e675444eee06b4908ab7b4e2e44d2c5" translate="yes" xml:space="preserve">
          <source>Three-dimensional Function Plotting</source>
          <target state="translated">三次元関数プロット</target>
        </trans-unit>
        <trans-unit id="82ef08ad1ef7bedcca7aaac7ddddcf65a5b54d17" translate="yes" xml:space="preserve">
          <source>Three-dimensional Geometric Shapes</source>
          <target state="translated">三次元幾何学図形</target>
        </trans-unit>
        <trans-unit id="d015c41ade78cde491f126789680280edc24655e" translate="yes" xml:space="preserve">
          <source>Three-dimensional interpolation.</source>
          <target state="translated">三次元補間。</target>
        </trans-unit>
        <trans-unit id="3593ccd96f6c0fad4e362d18ac37226707f2ea46" translate="yes" xml:space="preserve">
          <source>Thu</source>
          <target state="translated">Thu</target>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="e38f4f305df35e4db9c55bb8ad4bf4dcecd25211" translate="yes" xml:space="preserve">
          <source>Thus,</source>
          <target state="translated">Thus,</target>
        </trans-unit>
        <trans-unit id="f87ff9412739e7b3ab09dcc61b0f2cb9cd69fc30" translate="yes" xml:space="preserve">
          <source>Thus, for example:</source>
          <target state="translated">したがって、例えば</target>
        </trans-unit>
        <trans-unit id="e849577fc0133c83af9390dce4d9680899cfe629" translate="yes" xml:space="preserve">
          <source>Tilde expansion is performed on each of the patterns before looking for matching filenames. For example:</source>
          <target state="translated">一致するファイル名を探す前に、それぞれのパターンに対してTilde展開が実行されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e3a19b8b3f0a50482bfe492d3ae8081ad87bf778" translate="yes" xml:space="preserve">
          <source>Time (in seconds) used for solving LP/MIP problem.</source>
          <target state="translated">LP/MIP問題の解決に使用した時間(秒)。</target>
        </trans-unit>
        <trans-unit id="4f3f471024a31d26e7d63d04fc03146892c87ab9" translate="yes" xml:space="preserve">
          <source>Time Series: Theory and Methods</source>
          <target state="translated">時系列。理論と方法</target>
        </trans-unit>
        <trans-unit id="b2529252de262a437d9f27bd7bda373dc8b2d105" translate="yes" xml:space="preserve">
          <source>Time fields:</source>
          <target state="translated">時間のフィールド。</target>
        </trans-unit>
        <trans-unit id="aa0948c6820022957d32ea97fd608e1a2fa0e6ce" translate="yes" xml:space="preserve">
          <source>Time in 1/100ths of a second (0 to 65535) which must expire before displaying the next image in an animated sequence.</source>
          <target state="translated">アニメーションシーケンスの次の画像を表示する前に期限切れとなる100分の1秒(0~65535)の時間。</target>
        </trans-unit>
        <trans-unit id="31f01ac2170a2f81355994cf10fc1444023c1d96" translate="yes" xml:space="preserve">
          <source>Time in seconds since 00:00:00, Jan 1, 1970 (a nonstandard extension).</source>
          <target state="translated">1970年1月1日00:00:00からの秒単位の時間(非標準の拡張子)。</target>
        </trans-unit>
        <trans-unit id="eebae61e2d116d63e897de6f6371b8c29e18b5ce" translate="yes" xml:space="preserve">
          <source>Time limit exhausted.</source>
          <target state="translated">制限時間を使い果たした。</target>
        </trans-unit>
        <trans-unit id="86e70eee03e968558f825f38301c680910164573" translate="yes" xml:space="preserve">
          <source>Time of last access in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">timeから返された時刻値と同じ形式の最後のアクセスの &lt;code&gt;time&lt;/code&gt; 。&lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;タイミングユーティリティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7fc8c21257764c7948111532cec7b25dfd35ec90" translate="yes" xml:space="preserve">
          <source>Time of last file status change in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">最後のファイルステータスの変更時刻は、 &lt;code&gt;time&lt;/code&gt; から返された時刻値と同じ形式です。&lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;タイミングユーティリティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d18f25183bb11e770b37d20545ea06945241c988" translate="yes" xml:space="preserve">
          <source>Time of last modification in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">timeから返された時刻値と同じ形式の最終変更 &lt;code&gt;time&lt;/code&gt; 。&lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;タイミングユーティリティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ce1f0f99aac0d33a876e6dae78dcd4225a32ab98" translate="yes" xml:space="preserve">
          <source>Time zone (EDT), or nothing if no time zone is determinable.</source>
          <target state="translated">タイムゾーン(EDT)、またはタイムゾーンが決定できない場合は何もありません。</target>
        </trans-unit>
        <trans-unit id="a0a4abcaa4a3ea9e90792df1a73c737deb94760c" translate="yes" xml:space="preserve">
          <source>Time zone.</source>
          <target state="translated">タイムゾーン。</target>
        </trans-unit>
        <trans-unit id="4995d29b8959a8e7f603c03cdeca33b68f8bba73" translate="yes" xml:space="preserve">
          <source>Time, 12-hour (hh:mm:ss [AP]M).</source>
          <target state="translated">時間、12時間(hh:mm:ss [AP]M)。</target>
        </trans-unit>
        <trans-unit id="8bbf83b25a01e3ac34616016ed10189e7aba10fa" translate="yes" xml:space="preserve">
          <source>Time, 24-hour (hh:mm).</source>
          <target state="translated">時間、24時間(hh:mm)。</target>
        </trans-unit>
        <trans-unit id="3a7adef133b797c4c0011b2961ada2fe4ba4284d" translate="yes" xml:space="preserve">
          <source>Time, 24-hour (hh:mm:ss).</source>
          <target state="translated">時間、24時間(hh:mm:ss)。</target>
        </trans-unit>
        <trans-unit id="b16c9424b0393814b0c439485c48a56cbb257469" translate="yes" xml:space="preserve">
          <source>Timestamp of file modification (string value).</source>
          <target state="translated">ファイル変更のタイムスタンプ(文字列値)。</target>
        </trans-unit>
        <trans-unit id="b31aea78b01ef0e41cd22fc3b109124771ecfeb5" translate="yes" xml:space="preserve">
          <source>Timestamp of file modification as serial date number (double).</source>
          <target state="translated">ファイル修正のタイムスタンプをシリアル日付番号(倍)で表示します。</target>
        </trans-unit>
        <trans-unit id="455760175aa175b98349ebdd215e186952f19536" translate="yes" xml:space="preserve">
          <source>Timing Utilities</source>
          <target state="translated">タイミングユーティリティ</target>
        </trans-unit>
        <trans-unit id="3a6e1ca1b04a63f5015ca1442a91a25156cabb18" translate="yes" xml:space="preserve">
          <source>Timing, however, is not the only information available from the profile. The attribute column shows us that &lt;code&gt;timesteps&lt;/code&gt; calls itself recursively. This may not be that remarkable in this example (since it&amp;rsquo;s clear anyway), but could be helpful in a more complex setting. As to the question of why is there a &amp;lsquo;</source>
          <target state="translated">ただし、プロファイルから取得できる情報はタイミングだけではありません。属性列は、 &lt;code&gt;timesteps&lt;/code&gt; がそれ自体を再帰的に呼び出すことを示しています。これはこの例ではそれほど目立たないかもしれませんが（とにかく明確であるため）、より複雑な設定では役立つ可能性があります。なぜあるのかについての質問については '</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bcc1ce99199ce8f64af33c739b5c52c06e462ebf" translate="yes" xml:space="preserve">
          <source>Title for the audio file.</source>
          <target state="translated">オーディオファイルのタイトルです。</target>
        </trans-unit>
        <trans-unit id="5b8631c25f1cfd154f4169b7231a6814b336e0e2" translate="yes" xml:space="preserve">
          <source>To a very good first approximation, the goal in vectorization is to write code that avoids loops and uses whole-array operations. As a trivial example, consider</source>
          <target state="translated">非常に良い最初の近似では、ベクトル化の目標は、ループを避け、配列全体の演算を使用するコードを書くことです。些細な例として</target>
        </trans-unit>
        <trans-unit id="01ea5104fe9cd9ded6f021374a8210a0c9494fc5" translate="yes" xml:space="preserve">
          <source>To access the elements of a cell array, it can be indexed with the { and } operators. Thus, the variable created in the previous example can be indexed like this:</source>
          <target state="translated">セル配列の要素にアクセスするには、{および}演算子を使ってインデックスを作成します。したがって、先ほどの例で作成した変数は、次のようにインデックス化することができます。</target>
        </trans-unit>
        <trans-unit id="a99b4248f083dbfa3b7cf325da157f9382205f18" translate="yes" xml:space="preserve">
          <source>To avoid degrading performance unnecessarily by checking the time stamps on functions that are not likely to change, Octave assumes that function files in the directory tree</source>
          <target state="translated">変更される可能性のない関数のタイムスタンプをチェックすることで不必要に性能を低下させないように,Octaveはディレクトリツリー内の関数ファイルを想定しています。</target>
        </trans-unit>
        <trans-unit id="3e19220939af9ea2a5a0cf5d0fc6e7a27b8495ef" translate="yes" xml:space="preserve">
          <source>To avoid segmentation faults causing Octave to abort, this function explicitly checks that there are sufficient arguments available before accessing these arguments. It then obtains two multi-dimensional arrays of type &lt;code&gt;NDArray&lt;/code&gt; and adds these together. Note that the &lt;code&gt;array_value&lt;/code&gt; method is called without using the &lt;code&gt;is_matrix_type&lt;/code&gt; method. If an error occurs when attempting to extract the value, Octave will print a message and throw an exception. The reason to prefer this coding structure is that the arguments might be a type which is not an &lt;code&gt;NDArray&lt;/code&gt;, but for which it would make sense to convert them to one. The &lt;code&gt;array_value&lt;/code&gt; method allows this conversion to be performed transparently when possible. If you need to catch errors like this, and perform some kind of cleanup or other operation, you can catch the &lt;code&gt;octave_execution_error&lt;/code&gt; exception.</source>
          <target state="translated">Octaveが異常終了する原因となるセグメンテーション違反を回避するために、この関数は、これらの引数にアクセスする前に、十分な引数があることを明示的にチェックします。次に、 &lt;code&gt;NDArray&lt;/code&gt; タイプの2つの多次元配列を取得し、これらを加算します。ことに注意してください &lt;code&gt;array_value&lt;/code&gt; 方法を使用しなくてもと呼ばれる &lt;code&gt;is_matrix_type&lt;/code&gt; の方法を。値を抽出しようとしたときにエラーが発生した場合、Octaveはメッセージを出力して例外をスローします。このコーディング構造を選択する理由は、引数が &lt;code&gt;NDArray&lt;/code&gt; ではないタイプである可能性があるためですが、そのためには、それらを1つに変換することが理にかなっています。 &lt;code&gt;array_value&lt;/code&gt; メソッドを使用すると、この変換を可能な限り透過的に実行できます。このようなエラーをキャッチし、何らかのクリーンアップやその他の操作を実行する必要がある場合は、 &lt;code&gt;octave_execution_error&lt;/code&gt; 例外をキャッチできます。</target>
        </trans-unit>
        <trans-unit id="fb627a7b9620b32c7cd5b554a1c1797211681da5" translate="yes" xml:space="preserve">
          <source>To be consistent with the Octave graphic handle classes, a class should also define the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods. The &lt;code&gt;get&lt;/code&gt; method accepts one or two arguments. The first argument is an object of the appropriate class. If no second argument is given then the method should return a structure with all the properties of the class. If the optional second argument is given it should be a property name and the specified property should be retrieved.</source>
          <target state="translated">Octaveグラフィックハンドルクラスと整合性を保つために、クラスは &lt;code&gt;get&lt;/code&gt; メソッドと &lt;code&gt;set&lt;/code&gt; メソッドも定義する必要があります。 &lt;code&gt;get&lt;/code&gt; メソッドは、1つのまたは2つの引数を受け入れます。最初の引数は適切なクラスのオブジェクトです。2番目の引数が指定されていない場合、メソッドはクラスのすべてのプロパティを含む構造を返す必要があります。オプションの2番目の引数を指定する場合は、プロパティ名で、指定したプロパティを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="8150c779e1199a8484f3a60ee81e1ba9652950f7" translate="yes" xml:space="preserve">
          <source>To be more clear, the approximation &lt;var&gt;x&lt;/var&gt; is computed at the iteration &lt;code&gt;(&lt;var&gt;iter(1)&lt;/var&gt; - 1) * &lt;var&gt;restart&lt;/var&gt; + &lt;var&gt;iter(2)&lt;/var&gt;&lt;/code&gt;. Since the output &lt;var&gt;x&lt;/var&gt; corresponds to the minimal preconditioned residual solution, the total number of iterations that the method performed is given by &lt;code&gt;length (resvec) - 1&lt;/code&gt;.</source>
          <target state="translated">より明確にするために、近似 &lt;var&gt;x&lt;/var&gt; は反復 &lt;code&gt;(&lt;var&gt;iter(1)&lt;/var&gt; - 1) * &lt;var&gt;restart&lt;/var&gt; + &lt;var&gt;iter(2)&lt;/var&gt;&lt;/code&gt; 計算されます。出力 &lt;var&gt;x&lt;/var&gt; は最小の前処理された残差解に対応するため、メソッドが実行した反復の合計数は &lt;code&gt;length (resvec) - 1&lt;/code&gt; 与えられます。</target>
        </trans-unit>
        <trans-unit id="4ee70055ea05297ef67b9cda4f7fddc4c866a0f9" translate="yes" xml:space="preserve">
          <source>To calculate for example the MD5 hash value of the string &lt;code&gt;&quot;abc&quot;&lt;/code&gt; the &lt;code&gt;hash&lt;/code&gt; function is called as follows:</source>
          <target state="translated">例えば、文字列のMD5ハッシュ値を計算するために、 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; &lt;code&gt;hash&lt;/code&gt; 関数は、次のように呼ばれました：</target>
        </trans-unit>
        <trans-unit id="b4e0f4b09d7ea0942a71e01a13f532ba2c901ccc" translate="yes" xml:space="preserve">
          <source>To call a method of an object the same structure indexing operator &amp;lsquo;</source>
          <target state="translated">オブジェクトのメソッドを同じ構造インデックス演算子を呼び出すには '</target>
        </trans-unit>
        <trans-unit id="f82993e1ff555800963f63a0a9c8a9a481b73f4f" translate="yes" xml:space="preserve">
          <source>To check whether a variable belongs to a user class, the &lt;code&gt;isobject&lt;/code&gt; and &lt;code&gt;isa&lt;/code&gt; functions can be used. For example:</source>
          <target state="translated">変数がユーザークラスに属しているかどうかを確認するには、 &lt;code&gt;isobject&lt;/code&gt; および &lt;code&gt;isa&lt;/code&gt; 関数を使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="49f7b828e5188337e322cf22041c6712962ac0d4" translate="yes" xml:space="preserve">
          <source>To clear the current figure, call the &lt;code&gt;clf&lt;/code&gt; function. To clear the current axis, call the &lt;code&gt;cla&lt;/code&gt; function. To bring the current figure to the top of the window stack, call the &lt;code&gt;shg&lt;/code&gt; function. To delete a graphics object, call &lt;code&gt;delete&lt;/code&gt; on its index. To close the figure window, call the &lt;code&gt;close&lt;/code&gt; function.</source>
          <target state="translated">現在のFigureをクリアするには、 &lt;code&gt;clf&lt;/code&gt; 関数を呼び出します。現在の軸をクリアするには、 &lt;code&gt;cla&lt;/code&gt; 関数を呼び出します。現在のFigureをウィンドウスタックの一番上に移動するには、関数 &lt;code&gt;shg&lt;/code&gt; を呼び出します。グラフィックスオブジェクトを削除 &lt;code&gt;delete&lt;/code&gt; には、そのインデックスに対してdeleteを呼び出します。Figureウィンドウを閉じるには、関数 &lt;code&gt;close&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5f7872e426359190e0e4f9d3d2f248875ba6acc8" translate="yes" xml:space="preserve">
          <source>To compile Octave, you will need a recent version of &lt;code&gt;g++&lt;/code&gt; or other ANSI C++ compiler. In addition, you will need a Fortran 77 compiler or &lt;code&gt;f2c&lt;/code&gt;. If you use &lt;code&gt;f2c&lt;/code&gt;, you will need a script like &lt;code&gt;fort77&lt;/code&gt; that works like a normal Fortran compiler by combining &lt;code&gt;f2c&lt;/code&gt; with your C compiler in a single script.</source>
          <target state="translated">Octaveをコンパイルするには、最新バージョンの &lt;code&gt;g++&lt;/code&gt; または他のANSI C ++コンパイラが必要です。さらに、Fortran 77コンパイラまたは &lt;code&gt;f2c&lt;/code&gt; が必要です。 &lt;code&gt;f2c&lt;/code&gt; を使用する場合、 &lt;code&gt;f2c&lt;/code&gt; とCコンパイラを1つのスクリプトで組み合わせることにより、通常のFortranコンパイラのように機能する &lt;code&gt;fort77&lt;/code&gt; のようなスクリプトが必要になります。</target>
        </trans-unit>
        <trans-unit id="6a2db47897bfaeb2a31f04ec5f535821cedb8557" translate="yes" xml:space="preserve">
          <source>To compute the matrix exponential, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">行列の指数を計算するには、&lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;線形代数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3b72f37efd9b7233b34d438e336cef3944ee8040" translate="yes" xml:space="preserve">
          <source>To compute the matrix logarithm, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">行列の対数を計算するには、&lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;線形代数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="08d99842644781a5b2b3fcd5c69b785245c0f4a9" translate="yes" xml:space="preserve">
          <source>To compute the matrix square root, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">行列の平方根を計算するには、&lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;線形代数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="daf3b6941424b6001fff695bc23b4325a956d174" translate="yes" xml:space="preserve">
          <source>To compute the pseudo-random sequence, &lt;code&gt;rand&lt;/code&gt; uses the Mersenne Twister with a period of &lt;em&gt;2^{19937}-1&lt;/em&gt; (See M. Matsumoto and T. Nishimura,</source>
          <target state="translated">擬似ランダムシーケンスを計算するために、 &lt;code&gt;rand&lt;/code&gt; は&lt;em&gt;2 ^ {19937} -1の&lt;/em&gt;周期のメルセンヌツイスターを使用します（M.松本とT.西村を参照、</target>
        </trans-unit>
        <trans-unit id="7b17fc55ec118d2056f643d8ffa7e17f844b4530" translate="yes" xml:space="preserve">
          <source>To control the grid lines for an individual axes use the &lt;code&gt;set&lt;/code&gt; function. For example:</source>
          <target state="translated">個々の軸のグリッド線を制御するには、関数 &lt;code&gt;set&lt;/code&gt; を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="99329f88f214841bf40ca0549e895d2c60e09e07" translate="yes" xml:space="preserve">
          <source>To convert back from a cellstr to a character array use &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">cellstrから文字配列に戻すには、 &lt;code&gt;char&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b6371a92b906eb6440ff363f1dd20af7f34103b7" translate="yes" xml:space="preserve">
          <source>To correct this behavior would mean that zero elements with a negative sign-bit would need to be stored in the matrix to ensure that their sign-bit was respected. This is not done at this time, for reasons of efficiency, and so the user is warned that calculations where the sign-bit of zero is important must not be done using sparse matrices.</source>
          <target state="translated">この動作を修正するには、負の符号ビットを持つゼロ要素を行列に格納して、その符号ビットが尊重されるようにする必要があります。これは,効率性の理由から現時点では行われていないので,ゼロの符号ビットが重要な計算は,疎な行列を用いて行ってはならないことが警告されています.</target>
        </trans-unit>
        <trans-unit id="ab4a3c7e0f6eec9d68a75fc7ab73a4672cf8278a" translate="yes" xml:space="preserve">
          <source>To create a bulleted list, type</source>
          <target state="translated">箇条書きリストを作成するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="e5cdbeac1c691a014ef0d0f6c146ec07441b687d" translate="yes" xml:space="preserve">
          <source>To create a constant matrix whose values are all the same use an expression such as</source>
          <target state="translated">値がすべて同じである定数行列を作成するには,次のような式を使用します.</target>
        </trans-unit>
        <trans-unit id="c28efdab5f7c4b4688fa7cec850f56788de71fc9" translate="yes" xml:space="preserve">
          <source>To create a numbered list, type</source>
          <target state="translated">番号付きリストを作成するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="4b6727688c2b2c73d8be20a80b9e80cab6266720" translate="yes" xml:space="preserve">
          <source>To define a condition on a property named &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, use the string &lt;code&gt;'\timeout'&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&quot;timeout&quot;&lt;/code&gt; という名前のプロパティに条件を定義するには、代わりに文字列 &lt;code&gt;'\timeout'&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="20426685284854f24c6689b6878e8926eee7acbb" translate="yes" xml:space="preserve">
          <source>To determine if two strings are identical it is necessary to use the &lt;code&gt;strcmp&lt;/code&gt; function. It compares complete strings and is case sensitive. &lt;code&gt;strncmp&lt;/code&gt; compares only the first &lt;code&gt;N&lt;/code&gt; characters (with &lt;code&gt;N&lt;/code&gt; given as a parameter). &lt;code&gt;strcmpi&lt;/code&gt; and &lt;code&gt;strncmpi&lt;/code&gt; are the corresponding functions for case-insensitive comparison.</source>
          <target state="translated">2つの文字列が同一かどうかを判断するには、関数 &lt;code&gt;strcmp&lt;/code&gt; を使用する必要があります。完全な文字列を比較し、大文字と小文字を区別します。 &lt;code&gt;strncmp&lt;/code&gt; は、最初の &lt;code&gt;N&lt;/code&gt; 文字のみを比較します（パラメーターとして &lt;code&gt;N&lt;/code&gt; を指定）。 &lt;code&gt;strcmpi&lt;/code&gt; と &lt;code&gt;strncmpi&lt;/code&gt; は、大文字と小文字を区別しない比較に対応する関数です。</target>
        </trans-unit>
        <trans-unit id="f4fd25e14496762d01914b4fedfba5364c64eae3" translate="yes" xml:space="preserve">
          <source>To determine whether a variable is a graphics object index, or an index to an axes or figure, use the functions &lt;code&gt;ishghandle&lt;/code&gt;, &lt;code&gt;isgraphics&lt;/code&gt;, &lt;code&gt;isaxes&lt;/code&gt;, and &lt;code&gt;isfigure&lt;/code&gt;.</source>
          <target state="translated">変数がグラフィックスオブジェクトインデックスか、AxesまたはFigureのインデックスかを判断するには、関数 &lt;code&gt;ishghandle&lt;/code&gt; 、 &lt;code&gt;isgraphics&lt;/code&gt; 、 &lt;code&gt;isaxes&lt;/code&gt; 、および &lt;code&gt;isfigure&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="bc60f7177f77a64d62a9da84a4de61716016217e" translate="yes" xml:space="preserve">
          <source>To display the solution of the previous example graphically, use the command</source>
          <target state="translated">前の例の解をグラフィカルに表示するには、コマンド</target>
        </trans-unit>
        <trans-unit id="b0bab3aeb671c84a4d01c3aa9737ca0e27b67c83" translate="yes" xml:space="preserve">
          <source>To display the value of a variable, simply type the name of the variable at the prompt. For example, to display the value stored in the matrix &lt;code&gt;B&lt;/code&gt;, type the command</source>
          <target state="translated">変数の値を表示するには、プロンプトで変数の名前を入力します。たとえば、行列 &lt;code&gt;B&lt;/code&gt; に格納されている値を表示するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="e35e4418e2f17214b67f1aacdd55280d40ca2ce5" translate="yes" xml:space="preserve">
          <source>To enable someone to investigate the bug, you should include all these things:</source>
          <target state="translated">誰かがバグを調査できるようにするためには、これらのことをすべて含めるべきです。</target>
        </trans-unit>
        <trans-unit id="27281b8c3aba75ee64c905ff62c9f6283cfcf3b1" translate="yes" xml:space="preserve">
          <source>To enforce both options 1 and 2.</source>
          <target state="translated">オプション1と2の両方を実施する。</target>
        </trans-unit>
        <trans-unit id="22345badaf6e32f490fd1c4935a2673d7b546dd2" translate="yes" xml:space="preserve">
          <source>To enforce constraint checking during the integration.</source>
          <target state="translated">統合時に制約チェックを強制する。</target>
        </trans-unit>
        <trans-unit id="018eaa1297a14319f8db3485e4816833d1586222" translate="yes" xml:space="preserve">
          <source>To exit Octave, type</source>
          <target state="translated">Octaveを終了するには</target>
        </trans-unit>
        <trans-unit id="84c09314545da3990f0a32852c19eea9d87a78bf" translate="yes" xml:space="preserve">
          <source>To facilitate smooth mixing with full matrices, backward compatibility, and compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, the diagonal and permutation matrices should allow any operation that works on full matrices, and will either treat it specially, or implicitly convert themselves to full matrices.</source>
          <target state="translated">完全な行列とのスムーズな混合、下位互換性、および&lt;small&gt;MATLAB&lt;/small&gt;との互換性を促進するために、対角行列と置換行列は、完全な行列で機能するすべての操作を許可し、特別に扱うか、暗黙的に完全な行列に変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="9e1aef56f7cbe1add671305b24384f0d93ad3a59" translate="yes" xml:space="preserve">
          <source>To find the solution of an overdetermined problem needs an estimate of the residual error &lt;var&gt;r&lt;/var&gt; and so it is more complex to formulate a minimum norm solution using the &lt;code&gt;spaugment&lt;/code&gt; function.</source>
          <target state="translated">過決定問題の解を見つけるには、残差 &lt;var&gt;r&lt;/var&gt; の推定が必要なので、 &lt;code&gt;spaugment&lt;/code&gt; 関数を使用して最小ノルム解を公式化するのはより複雑です。</target>
        </trans-unit>
        <trans-unit id="55daf9baa1dfa62fd975d56b72ef8b8611d37fc0" translate="yes" xml:space="preserve">
          <source>To function properly the package manager needs to keep some information about the installed packages. For per-user packages this information is by default stored in the file</source>
          <target state="translated">パッケージマネージャが正しく機能するためには、インストールされたパッケージに関する情報を保持しておく必要があります。ユーザ単位のパッケージの場合、この情報はデフォルトでは</target>
        </trans-unit>
        <trans-unit id="d28c1fa9a3c7e3ed0e982b4026dc0dd6611f610e" translate="yes" xml:space="preserve">
          <source>To get a wider-angle view, we could double the viewing angle. This will also set the mode to manual:</source>
          <target state="translated">より広い視野角を得るためには、視野角を2倍にすることができます。これでモードもマニュアルになります。</target>
        </trans-unit>
        <trans-unit id="a4b8a79990b63c894cf01d5980fb6d625d3a3269" translate="yes" xml:space="preserve">
          <source>To give another example for indexing cell arrays with &amp;lsquo;</source>
          <target state="translated">'を使用してセル配列にインデックスを付ける別の例を示すには</target>
        </trans-unit>
        <trans-unit id="f866715d6e17c0ebbf7594d63991aacbd9fda5b3" translate="yes" xml:space="preserve">
          <source>To have Octave read and compile these functions into an internal form, you need to make sure that the file is in Octave&amp;rsquo;s load path (accessible through the &lt;code&gt;path&lt;/code&gt; function), then simply type the base name of the file that contains the commands. (Octave uses the same rules to search for script files as it does to search for function files.)</source>
          <target state="translated">Octaveにこれらの関数を読み取って内部形式にコンパイルさせるには、ファイルがOctaveのロードパス（ &lt;code&gt;path&lt;/code&gt; 関数を介してアクセス可能）にあることを確認してから、コマンドを含むファイルのベース名を入力するだけです。 （オクターブは、関数ファイルを検索する場合と同じルールを使用してスクリプトファイルを検索します。）</target>
        </trans-unit>
        <trans-unit id="0b3b16fe30ad8e97cde247410f1894b56bf8296e" translate="yes" xml:space="preserve">
          <source>To have constraint checking only in the initial condition calculation.</source>
          <target state="translated">初期条件計算でのみ制約チェックを行うようにしました。</target>
        </trans-unit>
        <trans-unit id="1d2c3e2377b9c5d47b381d162672449aea714f0e" translate="yes" xml:space="preserve">
          <source>To identify whether a particular point represented by a vector &lt;var&gt;p&lt;/var&gt; falls within one of the simplices of an N-simplex, we can write the Cartesian coordinates of the point in a parametric form with respect to the N-simplex. This parametric form is called the Barycentric Coordinates of the point. If the points defining the N-simplex are given by &lt;var&gt;N&lt;/var&gt; + 1 vectors &lt;code&gt;&lt;var&gt;t&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;,:)&lt;/code&gt;, then the Barycentric coordinates defining the point &lt;var&gt;p&lt;/var&gt; are given by</source>
          <target state="translated">ベクトル &lt;var&gt;p&lt;/var&gt; で表される特定の点がNシンプレックスのシンプレックスの1つに含まれるかどうかを識別するために、Nシンプレックスに関してパラメトリック形式でその点のデカルト座標を書き込むことができます。このパラメトリック形式は、ポイントの重心座標と呼ばれます。Nシンプレックスを定義する点が &lt;var&gt;N&lt;/var&gt; + 1ベクトル &lt;code&gt;&lt;var&gt;t&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;,:)&lt;/code&gt; によって与えられる場合、点 &lt;var&gt;p&lt;/var&gt; を定義する重心座標は次のように与えられます。</target>
        </trans-unit>
        <trans-unit id="ba6e99d73af463ea61512d44464030e606ddea98" translate="yes" xml:space="preserve">
          <source>To include external graphics, e.g., a graphic called &amp;lsquo;</source>
          <target state="translated">外部グラフィック、たとえば「</target>
        </trans-unit>
        <trans-unit id="2a152a419b0153d2b7e3be32500477f6a774e0e7" translate="yes" xml:space="preserve">
          <source>To include the content of an external file, e.g., a file called &amp;lsquo;</source>
          <target state="translated">外部ファイルのコンテンツを含めるには、たとえば、「</target>
        </trans-unit>
        <trans-unit id="7216f59d79922aca5609cf533481b44216614df1" translate="yes" xml:space="preserve">
          <source>To inquire whether a particular method exists for a user class, the &lt;code&gt;ismethod&lt;/code&gt; function can be used.</source>
          <target state="translated">ユーザークラスに特定のメソッドが存在するかどうかを照会するには、 &lt;code&gt;ismethod&lt;/code&gt; 関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="53412e16a4ede43e4888ea940d9dc33be9887c9b" translate="yes" xml:space="preserve">
          <source>To insert printing characters (letters, digits, symbols, etc.), simply type the character. Octave will insert the character at the cursor and advance the cursor forward.</source>
          <target state="translated">印刷文字(文字、数字、記号など)を挿入するには、文字を入力するだけです。Octaveはカーソルの位置に文字を挿入し、カーソルを前進させます。</target>
        </trans-unit>
        <trans-unit id="322ed7c266fbe3f83fd522dd43c2a0dc348a5daa" translate="yes" xml:space="preserve">
          <source>To make the process easier, use the &lt;code&gt;assert&lt;/code&gt; function. For example, with &lt;code&gt;assert&lt;/code&gt; the previous test is reduced to:</source>
          <target state="translated">プロセスを簡単にするには、 &lt;code&gt;assert&lt;/code&gt; 関数を使用します。たとえば、 &lt;code&gt;assert&lt;/code&gt; を使用すると、前のテストは次のように削減されます。</target>
        </trans-unit>
        <trans-unit id="19e10d9f2a2f4445bdca31f7751c655e38fef5fd" translate="yes" xml:space="preserve">
          <source>To minimize the amount of code duplication between packages it is possible that one package depends on another one. If a package depends on another, it will check if that package is installed during installation. If it is not, an error will be reported and the package will not be installed. This behavior can be disabled by passing the</source>
          <target state="translated">パッケージ間のコードの重複を最小限にするために、あるパッケージが別のパッケージに依存している可能性があります。あるパッケージが他のパッケージに依存している場合、インストール中にそのパッケージがインストールされているかどうかをチェックします。インストールされていない場合はエラーが報告され、パッケージはインストールされません。この動作は</target>
        </trans-unit>
        <trans-unit id="a7e26d855bf964a10e32969dbd76e05897cffbf8" translate="yes" xml:space="preserve">
          <source>To multiply the two matrices &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, type the command</source>
          <target state="translated">2つの行列 &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;B&lt;/code&gt; を乗算するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="02d6afbce5dedc95d133307591112cffdbbb57d3" translate="yes" xml:space="preserve">
          <source>To obtain a single index for each matrix element, Octave pretends that the columns of a matrix form one long vector (like Fortran arrays are stored). For example:</source>
          <target state="translated">各行列要素に対して1つのインデックスを得るために,Octaveは行列の列が(Fortranの配列が格納されているように)1つの長いベクトルを形成しているかのように装います。例えば,以下のようになります。</target>
        </trans-unit>
        <trans-unit id="967c4339ef1767934e05f1f3b8ec60b550599290" translate="yes" xml:space="preserve">
          <source>To partially solve the problem Octave uses a special optimization for user-defined &lt;code&gt;subsasgn&lt;/code&gt; methods coded as m-files. When the method gets called as a result of the built-in assignment syntax (not a direct &lt;code&gt;subsasgn&lt;/code&gt; call as shown above), i.e., &lt;code&gt;x(1)&amp;nbsp;=&amp;nbsp;1&lt;/code&gt;, &lt;b&gt;AND&lt;/b&gt; if the &lt;code&gt;subsasgn&lt;/code&gt; method is declared with identical input and output arguments, as in the example above, then Octave will ignore the copy of &lt;code&gt;x&lt;/code&gt; inside the caller&amp;rsquo;s scope; therefore, any changes made to &lt;code&gt;x&lt;/code&gt; during the method execution will directly affect the caller&amp;rsquo;s copy as well. This allows, for instance, defining a polynomial class where modifying a single element takes constant time.</source>
          <target state="translated">Octaveは、問題を部分的に解決するために、mファイルとしてコード化されたユーザー定義の &lt;code&gt;subsasgn&lt;/code&gt; メソッドに特別な最適化を使用します。組み込み代入構文の結果としてメソッドが呼び出された場合（上記のような直接の &lt;code&gt;subsasgn&lt;/code&gt; 呼び出しではない）、つまり &lt;code&gt;x(1)&amp;nbsp;=&amp;nbsp;1&lt;/code&gt; 、&lt;b&gt;かつ&lt;/b&gt; &lt;code&gt;subsasgn&lt;/code&gt; メソッドが同じ入力引数と出力引数で宣言されている場合、次のようになります。上記の例では、Octaveは呼び出し元のスコープ内の &lt;code&gt;x&lt;/code&gt; のコピーを無視します。したがって、メソッドの実行中に &lt;code&gt;x&lt;/code&gt; に加えられた変更は、呼び出し元のコピーにも直接影響します。これにより、たとえば、単一の要素の変更に一定の時間がかかる多項式クラスを定義できます。</target>
        </trans-unit>
        <trans-unit id="69e67b694a9e184ebe1e265607bd929cd78de517" translate="yes" xml:space="preserve">
          <source>To plot multiple one- or two-argument groups, separate each group with an empty format string, as</source>
          <target state="translated">複数の1つまたは2つの引数グループをプロットするには、次のように、各グループを空の書式文字列で区切ってください。</target>
        </trans-unit>
        <trans-unit id="e4b40ffdfb7b1e4f734a0b147d1e22845ddf57fa" translate="yes" xml:space="preserve">
          <source>To post-increment a variable &lt;var&gt;x&lt;/var&gt;, you would write &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt;. This adds one to the variable &lt;var&gt;x&lt;/var&gt;, but returns the value that &lt;var&gt;x&lt;/var&gt; had prior to incrementing it. For example, if &lt;var&gt;x&lt;/var&gt; is equal to 2, the result of the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; is 2, and the new value of &lt;var&gt;x&lt;/var&gt; is 3.</source>
          <target state="translated">変数 &lt;var&gt;x&lt;/var&gt; をポストインクリメントするには、 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; と記述します。これにより、変数 &lt;var&gt;x&lt;/var&gt; に 1が追加されますが、 &lt;var&gt;x&lt;/var&gt; がインクリメントする前の値が返されます。たとえば、 &lt;var&gt;x&lt;/var&gt; が2と等しい場合、式 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; 結果は2であり、 &lt;var&gt;x&lt;/var&gt; の新しい値は3です。</target>
        </trans-unit>
        <trans-unit id="3ae53ddf16568d7175a57a7effbca387ebcbda11" translate="yes" xml:space="preserve">
          <source>To print a message along with ringing the bell, you might modify the &lt;code&gt;wakeup&lt;/code&gt; to look like this:</source>
          <target state="translated">ベルを鳴らしながらメッセージを印刷するには、 &lt;code&gt;wakeup&lt;/code&gt; を次のように変更します。</target>
        </trans-unit>
        <trans-unit id="cdf46235aefe7162f38fd162cc2ed9fe7cdc1e98" translate="yes" xml:space="preserve">
          <source>To publish this script file, type &lt;code&gt;publish (&quot;pub_example.m&quot;)&lt;/code&gt;.</source>
          <target state="translated">このスクリプトファイルを公開するには、 &lt;code&gt;publish (&quot;pub_example.m&quot;)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8b3accda122d29501fa6092dcacf176145045310" translate="yes" xml:space="preserve">
          <source>To query the current hold state use the &lt;code&gt;ishold&lt;/code&gt; function.</source>
          <target state="translated">現在の保持状態を照会するには、 &lt;code&gt;ishold&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="8683b14f43fbfc051f35bbeb9bf8a3ca8171ca0e" translate="yes" xml:space="preserve">
          <source>To quit debug mode and return directly to the prompt without executing any additional code use &lt;code&gt;dbquit&lt;/code&gt;.</source>
          <target state="translated">追加のコードを実行せずにデバッグモードを終了してプロンプトに直接戻るには、 &lt;code&gt;dbquit&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="956d7474c6a7ae0c4d6951679c81c325d71d1aa3" translate="yes" xml:space="preserve">
          <source>To read a line and discard the terminating newline see &lt;code&gt;fgetl&lt;/code&gt;.</source>
          <target state="translated">行を読み取って終了する改行を破棄するには、 &lt;code&gt;fgetl&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="0c7c245e8b204521695926ab939157f9d1e93eb1" translate="yes" xml:space="preserve">
          <source>To read a line and return the terminating newline see &lt;code&gt;fgets&lt;/code&gt;.</source>
          <target state="translated">行を読み取って終了改行を返すには、 &lt;code&gt;fgets&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="75f17fd0082590f5ee3dbb7b57cad47bebf2d79e" translate="yes" xml:space="preserve">
          <source>To read from a file it must be opened for reading using &lt;code&gt;fopen&lt;/code&gt;. Then a line can be read from the file using &lt;code&gt;fgetl&lt;/code&gt; as the following code illustrates</source>
          <target state="translated">ファイルから読み取るには、 &lt;code&gt;fopen&lt;/code&gt; を使用してファイルを開いて読み取る必要があります。次に、次のコードに示すように、 &lt;code&gt;fgetl&lt;/code&gt; を使用してファイルから行を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="5085c740bfbaf7440d1a890d895691fa9de58fb3" translate="yes" xml:space="preserve">
          <source>To remove a colorbar from a plot use any one of the following keywords for the &lt;var&gt;delete_option&lt;/var&gt;: &lt;code&gt;&quot;off&quot;&lt;/code&gt;, &lt;code&gt;&quot;delete&quot;&lt;/code&gt;, &lt;code&gt;&quot;hide&quot;&lt;/code&gt;.</source>
          <target state="translated">プロットからカラーバーを削除するには、 &lt;var&gt;delete_option&lt;/var&gt; に次のキーワードのいずれかを使用します： &lt;code&gt;&quot;off&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;delete&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;hide&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d743f79a41bb1db7c95c070a74d7b5e8aba74853" translate="yes" xml:space="preserve">
          <source>To remove a user-defined default setting, set the default property to the value &lt;code&gt;&quot;remove&quot;&lt;/code&gt;. For example,</source>
          <target state="translated">ユーザー定義のデフォルト設定を削除するには、デフォルトのプロパティを値 &lt;code&gt;&quot;remove&quot;&lt;/code&gt; に設定します。例えば、</target>
        </trans-unit>
        <trans-unit id="05512d2a4465299fffa947cc9ebcb7c5887b636d" translate="yes" xml:space="preserve">
          <source>To report a bug in Octave, submit a bug report to the Octave bug tracker &lt;a href=&quot;https://bugs.octave.org&quot;&gt;https://bugs.octave.org&lt;/a&gt;.</source>
          <target state="translated">Octaveのバグを報告するには、Octaveバグトラッカー&lt;a href=&quot;https://bugs.octave.org&quot;&gt;https://bugs.octave.orgに&lt;/a&gt;バグレポートを送信してください。</target>
        </trans-unit>
        <trans-unit id="17facb74e3cc5a2a2bbe9a7e548917415f3859b5" translate="yes" xml:space="preserve">
          <source>To save a plot once it has been displayed on the screen, use the print command. For example,</source>
          <target state="translated">プロットを画面に表示した後に保存するには、printコマンドを使用します。例えば</target>
        </trans-unit>
        <trans-unit id="816d1124469611895137e6bb82f1ef139eafc781" translate="yes" xml:space="preserve">
          <source>To save a plot, in one of several image formats such as PostScript or PNG, use the &lt;code&gt;print&lt;/code&gt; command.</source>
          <target state="translated">プロットをPostScriptやPNGなどのいくつかの画像形式のいずれかで保存するには、 &lt;code&gt;print&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="1fead3c3bbe617561dea73888cbbb85b773ea5ff" translate="yes" xml:space="preserve">
          <source>To see what functions can be called with an object use &lt;code&gt;methods&lt;/code&gt;. For example, using the previously created &lt;var&gt;dobj&lt;/var&gt;:</source>
          <target state="translated">オブジェクトで呼び出すことができる関数を確認するには、 &lt;code&gt;methods&lt;/code&gt; 使用します。たとえば、以前に作成した &lt;var&gt;dobj&lt;/var&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f8477c93422bf91b5d040582ce2e8c0f82f1bebb" translate="yes" xml:space="preserve">
          <source>To see what is new in the current release of Octave, use the &lt;code&gt;news&lt;/code&gt; function.</source>
          <target state="translated">Octaveの現在のリリースの新機能を確認するには、 &lt;code&gt;news&lt;/code&gt; 機能を使用してください。</target>
        </trans-unit>
        <trans-unit id="e1c39a78b256b693266f1f88230d33c2a06b1178" translate="yes" xml:space="preserve">
          <source>To see which packages are installed type</source>
          <target state="translated">どのパッケージがインストールされているかを確認するには</target>
        </trans-unit>
        <trans-unit id="2cc406ac437288e0ead36df62f635562ea38bc5f" translate="yes" xml:space="preserve">
          <source>To set a breakpoint immediately upon entering a function use line number 1, or omit the line number entirely and just give the function name. When setting the breakpoint Octave will ignore the leading comment block, and the breakpoint will be set on the first executable statement in the function. For example:</source>
          <target state="translated">関数に入った直後にブレークポイントを設定するには,行番号1を使用するか,あるいは行番号を完全に省略して関数名だけを与えてください。ブレークポイントを設定するとき,Octaveは先頭のコメントブロックを無視して,関数内の最初の実行可能な文に ブレークポイントを設定します。例えば,以下のようになります。</target>
        </trans-unit>
        <trans-unit id="f68ca937b3f957db6c96d0fadd4f286aa578829f" translate="yes" xml:space="preserve">
          <source>To set graphics object properties, use the set function. For example,</source>
          <target state="translated">グラフィックスオブジェクトのプロパティを設定するには、set関数を使用します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="aeea726cf84ea4add8c063071f42f1a60b8e426f" translate="yes" xml:space="preserve">
          <source>To test if an object is a cell array, use the &lt;code&gt;iscell&lt;/code&gt; function. For example:</source>
          <target state="translated">オブジェクトがセル配列かどうかをテストするには、 &lt;code&gt;iscell&lt;/code&gt; 関数を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="dfef518512cdb20c448529e8fef7b73a48983d9b" translate="yes" xml:space="preserve">
          <source>To test if an object is a string (i.e., a 1xN row vector of characters and not a character matrix) you can use the &lt;code&gt;ischar&lt;/code&gt; function in combination with the &lt;code&gt;isrow&lt;/code&gt; function as in the following example:</source>
          <target state="translated">テストへのオブジェクトは、使用できる文字列（すなわち、1xNの行の文字のベクトルではなく、文字の行列）である場合 &lt;code&gt;ischar&lt;/code&gt; と組み合わせて機能を &lt;code&gt;isrow&lt;/code&gt; 次の例のように機能：</target>
        </trans-unit>
        <trans-unit id="06f4bcabf8ff9efabc81e5fb11c2c5472459473e" translate="yes" xml:space="preserve">
          <source>To update a single package use &lt;code&gt;pkg install -forge&lt;/code&gt;</source>
          <target state="translated">単一のパッケージを更新するには、 &lt;code&gt;pkg install -forge&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="05a1df9ce61a15b9290c9fc8342992566656692a" translate="yes" xml:space="preserve">
          <source>To use Publishing Markup, start by typing &amp;lsquo;</source>
          <target state="translated">Publishing Markupを使用するには、まず「</target>
        </trans-unit>
        <trans-unit id="b03e81e2492e8986e936f40a219d6bd3d60a6515" translate="yes" xml:space="preserve">
          <source>To write preformatted code inside a section, indent the code by three spaces after &amp;lsquo;</source>
          <target state="translated">セクション内にフォーマット済みのコードを書き込むには、 'の後にコードを3つのスペースでインデントします</target>
        </trans-unit>
        <trans-unit id="2d6f87382ce9c4f2be73101dd357cd12d2ebdec7" translate="yes" xml:space="preserve">
          <source>To write preformatted text inside a section, indent the code by two spaces after &amp;lsquo;</source>
          <target state="translated">セクション内にフォーマット済みのテキストを書き込むには、 'の後に2つのスペースを入れてコードをインデントします</target>
        </trans-unit>
        <trans-unit id="782a926a7b6def185a7455ea882dfdbff074e7e9" translate="yes" xml:space="preserve">
          <source>Toggle between &lt;code&gt;&quot;hide&quot;&lt;/code&gt; and &lt;code&gt;&quot;show&quot;&lt;/code&gt;</source>
          <target state="translated">間の切り替え &lt;code&gt;&quot;hide&quot;&lt;/code&gt; と &lt;code&gt;&quot;show&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca6d7a4de5ed7544ab183fa5f74f64b1627ddd9" translate="yes" xml:space="preserve">
          <source>Toggle or set the &lt;code&gt;&quot;hold&quot;&lt;/code&gt; state of the plotting engine which determines whether new graphic objects are added to the plot or replace the existing objects.</source>
          <target state="translated">新しいグラフィックオブジェクトをプロットに追加するか、既存のオブジェクトを置き換えるかを決定するプロットエンジンの &lt;code&gt;&quot;hold&quot;&lt;/code&gt; 状態を切り替えまたは設定します。</target>
        </trans-unit>
        <trans-unit id="851dc22c2287326545098ec89826eb32e0af64de" translate="yes" xml:space="preserve">
          <source>Toggle the current hold state.</source>
          <target state="translated">現在のホールド状態をトグルします。</target>
        </trans-unit>
        <trans-unit id="fb33e88b3d8add0fdeb38bd281e1ad17bb760e0f" translate="yes" xml:space="preserve">
          <source>TolFun</source>
          <target state="translated">TolFun</target>
        </trans-unit>
        <trans-unit id="3e8b0b3d2764ec6fe08d04bf930a19bc81402b9a" translate="yes" xml:space="preserve">
          <source>TolX</source>
          <target state="translated">TolX</target>
        </trans-unit>
        <trans-unit id="4bf72a4dfd30c58593093805996071aab781547b" translate="yes" xml:space="preserve">
          <source>Tolerance used to compare the results of expression &lt;var&gt;f&lt;/var&gt; and expression &lt;var&gt;f2&lt;/var&gt;. If &lt;var&gt;tol&lt;/var&gt; is positive, the tolerance is an absolute one. If &lt;var&gt;tol&lt;/var&gt; is negative, the tolerance is a relative one. The default is &lt;code&gt;eps&lt;/code&gt;. If &lt;var&gt;tol&lt;/var&gt; is &lt;code&gt;Inf&lt;/code&gt;, then no comparison will be made.</source>
          <target state="translated">式 &lt;var&gt;f&lt;/var&gt; と式 &lt;var&gt;f2&lt;/var&gt; の結果を比較するために使用される許容誤差。場合 &lt;var&gt;tol&lt;/var&gt; 正で、公差は絶対的なものです。場合 &lt;var&gt;tol&lt;/var&gt; 負の場合、許容範囲は相対的です。デフォルトは &lt;code&gt;eps&lt;/code&gt; です。 &lt;var&gt;tol&lt;/var&gt; が &lt;code&gt;Inf&lt;/code&gt; の場合、比較は行われません。</target>
        </trans-unit>
        <trans-unit id="f7e6dd42d3873b28ac15971476acd8afd9bfa3cc" translate="yes" xml:space="preserve">
          <source>Tool for building software (&lt;a href=&quot;https://www.gnu.org/software/make&quot;&gt;https://www.gnu.org/software/make&lt;/a&gt;). Octave&amp;rsquo;s build system requires GNU Make. Other versions of Make will not work. Fortunately, GNU Make is highly portable and easy to install.</source>
          <target state="translated">ソフトウェアを構築するためのツール（&lt;a href=&quot;https://www.gnu.org/software/make&quot;&gt;https://www.gnu.org/software/make&lt;/a&gt;）。OctaveのビルドシステムにはGNU Makeが必要です。Makeの他のバージョンは機能しません。さいわい、GNU Makeは移植性が高く、インストールも簡単です。</target>
        </trans-unit>
        <trans-unit id="021a88183a84b1b9899c7dda4862aa097ba4f53f" translate="yes" xml:space="preserve">
          <source>Top center of the screen.</source>
          <target state="translated">画面中央上部。</target>
        </trans-unit>
        <trans-unit id="7a6e818e9e728e10f8d8422b38d5140630e8bf57" translate="yes" xml:space="preserve">
          <source>Top left of the screen.</source>
          <target state="translated">画面の左上。</target>
        </trans-unit>
        <trans-unit id="c33b724a700895efa54e8c073d666894609960ac" translate="yes" xml:space="preserve">
          <source>Top right of the screen.</source>
          <target state="translated">画面の右上。</target>
        </trans-unit>
        <trans-unit id="c2eee3cb2d0afa8c3b1ba022e1db77df29aa739f" translate="yes" xml:space="preserve">
          <source>TotalSamples</source>
          <target state="translated">TotalSamples</target>
        </trans-unit>
        <trans-unit id="985375d93146caa8bf0a799971285d3fee3bd9c0" translate="yes" xml:space="preserve">
          <source>Trailing singleton dimensions are ignored. When called with a single argument, or no argument, &lt;code&gt;size_equal&lt;/code&gt; returns true.</source>
          <target state="translated">後続のシングルトンディメンションは無視されます。単一の引数で、または引数なしで呼び出された場合、 &lt;code&gt;size_equal&lt;/code&gt; はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="73bb90c8db568738efd87e2d15f12bc0e3e06a59" translate="yes" xml:space="preserve">
          <source>Transform Cartesian coordinates to polar or cylindrical coordinates.</source>
          <target state="translated">直交座標を極座標や円筒座標に変換します。</target>
        </trans-unit>
        <trans-unit id="cb798949844baa1e880cdacf66b5e0ac9391b149" translate="yes" xml:space="preserve">
          <source>Transform Cartesian coordinates to spherical coordinates.</source>
          <target state="translated">直交座標を球面座標に変換します。</target>
        </trans-unit>
        <trans-unit id="5e3f940647ff7ac908ea6e31b7e04ab14cb6bcf9" translate="yes" xml:space="preserve">
          <source>Transform Groups</source>
          <target state="translated">トランスフォームグループ</target>
        </trans-unit>
        <trans-unit id="37e8f23f296bb5a6967ca279f5d97aa11248498d" translate="yes" xml:space="preserve">
          <source>Transform a colormap or image from HSV to RGB color space.</source>
          <target state="translated">カラーマップまたは画像を HSV から RGB 色空間に変換します。</target>
        </trans-unit>
        <trans-unit id="6b0c64543a08785d2ccf22f6aec8740358997ca0" translate="yes" xml:space="preserve">
          <source>Transform a colormap or image from RGB to HSV color space.</source>
          <target state="translated">カラーマップや画像をRGBからHSV色空間に変換します。</target>
        </trans-unit>
        <trans-unit id="d433bef3cfcf79c1466ba64b05b482c0df7c8747" translate="yes" xml:space="preserve">
          <source>Transform an image or colormap from red-green-blue (RGB) color space to a grayscale intensity image.</source>
          <target state="translated">画像またはカラーマップを赤緑青(RGB)色空間からグレースケールの強度画像に変換します。</target>
        </trans-unit>
        <trans-unit id="fe3bb8bbc59ab7a56f1037ac1aded6108aaa7f84" translate="yes" xml:space="preserve">
          <source>Transform polar or cylindrical coordinates to Cartesian coordinates.</source>
          <target state="translated">極座標や円筒座標を直交座標に変換します。</target>
        </trans-unit>
        <trans-unit id="e6f1b70c8c353a3361c81d63929dd38c046eef5c" translate="yes" xml:space="preserve">
          <source>Transform spherical coordinates to Cartesian coordinates.</source>
          <target state="translated">球体座標を直交座標に変換します。</target>
        </trans-unit>
        <trans-unit id="62dd106cf4c734fa50e4399a18930d15377ea584" translate="yes" xml:space="preserve">
          <source>Translate a string for use in a regular expression.</source>
          <target state="translated">正規表現で使用する文字列を翻訳します。</target>
        </trans-unit>
        <trans-unit id="03980bc3bccb3a8dcac5ae14d66c32f78a0b28c7" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;alim&lt;/code&gt; is unused.</source>
          <target state="translated">Axesオブジェクトの透明度はまだ実装されていません。 &lt;code&gt;alim&lt;/code&gt; は未使用です。</target>
        </trans-unit>
        <trans-unit id="8eb0059c6c53112f3ca2dbee367b914928b98ea1" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;gridalpha&lt;/code&gt; is unused.</source>
          <target state="translated">Axesオブジェクトの透明度はまだ実装されていません。 &lt;code&gt;gridalpha&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="0efe4e89fc7bba0bb1657f4ec6d3582896fa58e1" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;minorgridalpha&lt;/code&gt; is unused.</source>
          <target state="translated">Axesオブジェクトの透明度はまだ実装されていません。 &lt;code&gt;minorgridalpha&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="43e6a57e55a28b72286174f1f34617c4003d19d3" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for figure objects. &lt;code&gt;alphamap&lt;/code&gt; is unused.</source>
          <target state="translated">Figureオブジェクトの透明度はまだ実装されていません。 &lt;code&gt;alphamap&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="5625c719816061d79da45f3b0e010b39e0dff225" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for image objects. &lt;code&gt;alphadata&lt;/code&gt; is unused.</source>
          <target state="translated">画像オブジェクトの透明度はまだ実装されていません。 &lt;code&gt;alphadata&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="bf67f864341b16ca99016febfc01322338f64708" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for image objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">画像オブジェクトの透明度はまだ実装されていません。 &lt;code&gt;alphadatamapping&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="3377fc1557c160519ba79eb226992c1016a2a820" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">パッチオブジェクトの透過性はまだ実装されていません。 &lt;code&gt;alphadatamapping&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="d8fc611db8da702d0342f0b01e229e24d08276db" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;edgealpha&lt;/code&gt; is unused.</source>
          <target state="translated">パッチオブジェクトの透過性はまだ実装されていません。 &lt;code&gt;edgealpha&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="0c2637437fde178f67a4f27f4a420301bfcb4a39" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;facevertexalphadata&lt;/code&gt; is unused.</source>
          <target state="translated">パッチオブジェクトの透過性はまだ実装されていません。 &lt;code&gt;facevertexalphadata&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="4d18b4bbff06b1c99bd898b415a7a8bc57b08d62" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;alphadata&lt;/code&gt; is unused.</source>
          <target state="translated">透明度は、サーフェスオブジェクトにはまだ実装されていません。 &lt;code&gt;alphadata&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="f79b7f9657d75f5b6b575d6e9ef67a20d306478e" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">透明度は、サーフェスオブジェクトにはまだ実装されていません。 &lt;code&gt;alphadatamapping&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="b10d7cc4160e1c679a3e5251fc31b55a97d82b86" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;edgealpha&lt;/code&gt; is unused.</source>
          <target state="translated">透明度は、サーフェスオブジェクトにはまだ実装されていません。 &lt;code&gt;edgealpha&lt;/code&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="f3c1b72e3670f9ba3a8b60d508526cfeed5575f9" translate="yes" xml:space="preserve">
          <source>Transparency level of the faces of the patch object. Only double values are supported at present where a value of 0 means complete transparency and a value of 1 means solid faces without transparency. Setting the property to &lt;code&gt;&quot;flat&quot;&lt;/code&gt; or &lt;code&gt;&quot;interp&quot;&lt;/code&gt; causes the faces to not being rendered. Additionally, the faces are not sorted from back to front which might lead to unexpected results when rendering layered transparent faces.</source>
          <target state="translated">パッチオブジェクトの面の透明度レベル。現在サポートされているのはdouble値のみで、値0は完全な透明度を意味し、値1は透明度なしのソリッド面を意味します。プロパティを &lt;code&gt;&quot;flat&quot;&lt;/code&gt; または &lt;code&gt;&quot;interp&quot;&lt;/code&gt; に設定すると、面がレンダリングされなくなります。さらに、面は背面から前面に並べ替えられないため、レイヤー化された透明面をレンダリングするときに予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b109d14c772c6ab87d4489d96f23e580fc2e5eee" translate="yes" xml:space="preserve">
          <source>Transparency level of the faces of the surface object. Only double values are supported at present where a value of 0 means complete transparency and a value of 1 means solid faces without transparency. Setting the property to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;, &lt;code&gt;&quot;interp&quot;&lt;/code&gt; or &lt;code&gt;&quot;texturemap&quot;&lt;/code&gt; causes the faces to not being rendered. Additionally, the faces are not sorted from back to front which might lead to unexpected results when rendering layered transparent faces.</source>
          <target state="translated">サーフェスオブジェクトの面の透明度レベル。現在サポートされているのはdouble値のみで、値0は完全な透明度を意味し、値1は透明度なしのソリッド面を意味します。プロパティを &lt;code&gt;&quot;flat&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;interp&quot;&lt;/code&gt; または &lt;code&gt;&quot;texturemap&quot;&lt;/code&gt; に設定すると、面がレンダリングされなくなります。さらに、面は背面から前面に並べ替えられないため、レイヤー化された透明面をレンダリングするときに予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fa257429d8539a08df2ef78919507d4169cac2c8" translate="yes" xml:space="preserve">
          <source>Transpose</source>
          <target state="translated">Transpose</target>
        </trans-unit>
        <trans-unit id="5aac140fd36da4e5820d9b69c3d2eadc3ed127c5" translate="yes" xml:space="preserve">
          <source>Transpose.</source>
          <target state="translated">Transpose.</target>
        </trans-unit>
        <trans-unit id="c6f1bb9ad85fdf4c969e94ae6fd19f8e89a9a439" translate="yes" xml:space="preserve">
          <source>Treat a series of consecutive delimiters, without whitespace in between, as a single delimiter. Consecutive delimiter series need not be vertically &lt;code&gt;&quot;aligned&quot;&lt;/code&gt;.</source>
          <target state="translated">一連の連続する区切り文字を、間にスペースを入れずに、単一の区切り文字として扱います。連続する区切り文字シリーズは、垂直方向に &lt;code&gt;&quot;aligned&quot;&lt;/code&gt; する必要はありません。</target>
        </trans-unit>
        <trans-unit id="340f8a1eabb50f94aade40ea1c2d51db10294b4b" translate="yes" xml:space="preserve">
          <source>Treat single occurrences (surrounded by delimiters or whitespace) of the string(s) in &lt;var&gt;value&lt;/var&gt; as missing values.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 内の文字列の単一の出現（区切り文字または空白で囲まれている）を欠損値として扱います。</target>
        </trans-unit>
        <trans-unit id="65e79e90951a33ef74a7c0218c7a227712201c03" translate="yes" xml:space="preserve">
          <source>Triangular factor R from the QR decomposition.</source>
          <target state="translated">QR分解からの三角因子R。</target>
        </trans-unit>
        <trans-unit id="89225146f512abd9863323c7f96ee652306f95de" translate="yes" xml:space="preserve">
          <source>Trigonometry</source>
          <target state="translated">Trigonometry</target>
        </trans-unit>
        <trans-unit id="476a3279e92ac61227a751a7f22112e4f00a93d6" translate="yes" xml:space="preserve">
          <source>Trouble</source>
          <target state="translated">Trouble</target>
        </trans-unit>
        <trans-unit id="513425e03d675823b21a620a61823652c522f64d" translate="yes" xml:space="preserve">
          <source>True and false values are assigned a value of 0 and 1 respectively.</source>
          <target state="translated">真と偽の値にはそれぞれ0と1が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="e9814baf733d0337fce5dc37f10452eea9f57e66" translate="yes" xml:space="preserve">
          <source>True for characters that are alphabetic (letters).</source>
          <target state="translated">アルファベット(文字)の場合は真。</target>
        </trans-unit>
        <trans-unit id="88bc37774b0679094e58c0f04cb2b9e085dbef61" translate="yes" xml:space="preserve">
          <source>True for characters that are alphabetic or digits.</source>
          <target state="translated">アルファベットまたは数字の文字には真。</target>
        </trans-unit>
        <trans-unit id="754ead1293725d83a240f0cce5d5b111fc74812c" translate="yes" xml:space="preserve">
          <source>True for characters that are in the range of ASCII encoding.</source>
          <target state="translated">ASCIIエンコードの範囲内の文字に対しては真。</target>
        </trans-unit>
        <trans-unit id="3b9996ab2a5885f0988d412e6f4068ea4d1f50d7" translate="yes" xml:space="preserve">
          <source>True for control characters.</source>
          <target state="translated">制御文字には真。</target>
        </trans-unit>
        <trans-unit id="1ef7b4145ced15b3415a7d5c626c69f161ff77cf" translate="yes" xml:space="preserve">
          <source>True for decimal digits (0-9).</source>
          <target state="translated">10進数(0-9)の場合は真。</target>
        </trans-unit>
        <trans-unit id="765e00e38c1350f7cc90003c1cebf6e674d63502" translate="yes" xml:space="preserve">
          <source>True for hexadecimal digits (a-fA-F0-9).</source>
          <target state="translated">16進数(a-fA-F0-9)で真。</target>
        </trans-unit>
        <trans-unit id="195284cd3453c77eeddb923ea4f9813668f36865" translate="yes" xml:space="preserve">
          <source>True for lowercase letters.</source>
          <target state="translated">小文字の場合は真。</target>
        </trans-unit>
        <trans-unit id="e30d65db3ede6cb6ab591df74af6449ffc993a16" translate="yes" xml:space="preserve">
          <source>True for printing characters except space.</source>
          <target state="translated">スペース以外の文字を印刷する場合はTrue。</target>
        </trans-unit>
        <trans-unit id="35d72887027ba8e9841928cc7199cf30ee480385" translate="yes" xml:space="preserve">
          <source>True for printing characters including space.</source>
          <target state="translated">スペースを含む文字を印刷する場合は真。</target>
        </trans-unit>
        <trans-unit id="e2b45c0faa10e894b23b216c8f8ae1efba3fe891" translate="yes" xml:space="preserve">
          <source>True for punctuation characters (printing characters except space or letter or digit).</source>
          <target state="translated">句読点文字(スペースや文字・桁以外の文字を印刷する)の場合は真。</target>
        </trans-unit>
        <trans-unit id="16121af0eb6c5e5a29e455b188175495b8b7a429" translate="yes" xml:space="preserve">
          <source>True for uppercase letters.</source>
          <target state="translated">大文字の場合は真。</target>
        </trans-unit>
        <trans-unit id="89f99c6915ee6a7ed35c685fe0b1a0d2a23e76d7" translate="yes" xml:space="preserve">
          <source>True for whitespace characters (space, formfeed, newline, carriage return, tab, vertical tab).</source>
          <target state="translated">空白文字(スペース、フォームフィード、改行、キャリッジリターン、タブ、縦タブ)に対して真。</target>
        </trans-unit>
        <trans-unit id="6574a7b23d2506b69e0a196c0869b02f11b640b2" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a directory.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; がディレクトリであれば真。</target>
        </trans-unit>
        <trans-unit id="362c61fbb1eb2bf1168feb34f97296a6898358df" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a hidden file (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; が隠しファイルの場合は真（Windows）。</target>
        </trans-unit>
        <trans-unit id="a477aa3c04827360b7d61b405b7bab7ab905dfe3" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a system file (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; がシステムファイルの場合は真（Windows）。</target>
        </trans-unit>
        <trans-unit id="ae5184508c9e79234f15f2c785c5e6b3c4961c57" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is an archive (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; がアーカイブの場合は真（Windows）。</target>
        </trans-unit>
        <trans-unit id="4040a30e389464b000b73f86aa334ed994d5e421" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; と等しい場合は真。</target>
        </trans-unit>
        <trans-unit id="48019603bf1b6957588ab398ab832073c7831c9a" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is greater than &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; より大きい場合は真。</target>
        </trans-unit>
        <trans-unit id="0b48c57a409a55efbccb5833fc5f99c0614dfc96" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is greater than or equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; 以上の場合は真。</target>
        </trans-unit>
        <trans-unit id="5c691d4f0433fd593fe19f505ff9e37d46ccf6f7" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is less than &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; より小さい場合は真。</target>
        </trans-unit>
        <trans-unit id="95dfe10f0b556b8b28a9af2dd86c5651fdc5a338" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is less than or equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; 以下の場合は真。</target>
        </trans-unit>
        <trans-unit id="a8ef19b588be27e33f0ecf773475e0219f826569" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is not equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; が &lt;var&gt;y&lt;/var&gt; と等しくない場合は真。</target>
        </trans-unit>
        <trans-unit id="cb07b12b13498ac5927c2d36166704c1df3f3de1" translate="yes" xml:space="preserve">
          <source>True if name is a directory.</source>
          <target state="translated">名前がディレクトリであれば真。</target>
        </trans-unit>
        <trans-unit id="f56fdd2e459690b0714be72bfd0f84bf3c33d440" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has execute permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">ユーザー（グループ、他のユーザー）が &lt;var&gt;file&lt;/var&gt; の実行権限を持っている場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="5f96bf948a773513bff7cc39fdef990326aff975" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has read permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">ユーザー（グループ;他のユーザー）が &lt;var&gt;file&lt;/var&gt; の読み取り権限を持っている場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="c61c9a07e89854384ce7600c3212784a9f262228" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has write permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">ユーザー（グループ;他のユーザー）が &lt;var&gt;file&lt;/var&gt; に対する書き込み権限を持っている場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="e6fe70740b6c0b7c2135045faba80f6be500ede0" translate="yes" xml:space="preserve">
          <source>Truncate fractional portion of &lt;var&gt;x&lt;/var&gt; and return the integer portion.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; の小数部分を切り捨て、整数部分を返します。</target>
        </trans-unit>
        <trans-unit id="4bce8a252db3c52d9712f9d58ff45256a4781e7c" translate="yes" xml:space="preserve">
          <source>Truncate the character string &lt;var&gt;s&lt;/var&gt; to length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">文字列 &lt;var&gt;s&lt;/var&gt; を長さ &lt;var&gt;n&lt;/var&gt; に切り捨てます。</target>
        </trans-unit>
        <trans-unit id="a1c84009570e834bc385a529ddbbd3e7e7403540" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;demo humps&lt;/code&gt; to see a plot of the &lt;code&gt;humps&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;demo humps&lt;/code&gt; 試して、 &lt;code&gt;humps&lt;/code&gt; 関数のプロットを確認してください。</target>
        </trans-unit>
        <trans-unit id="720d8d86151cd903f03d39e74f04335c962274e2" translate="yes" xml:space="preserve">
          <source>Try to make your bug report self-contained. If we have to ask you for more information, it is best if you include all the previous information in your response, as well as the information that was missing.</source>
          <target state="translated">バグ報告は自己完結型にするようにしてください。もしもっと情報を求めなければならない場合は、それまでの情報と不足していた情報をすべて含めて回答するのが最善です。</target>
        </trans-unit>
        <trans-unit id="529541bb390c76152e313351d89de3cd30a1c4bd" translate="yes" xml:space="preserve">
          <source>Tue</source>
          <target state="translated">Tue</target>
        </trans-unit>
        <trans-unit id="42e43b612a5dfae57ddf5929f0fb945ae83cbf61" translate="yes" xml:space="preserve">
          <source>Tuesday</source>
          <target state="translated">Tuesday</target>
        </trans-unit>
        <trans-unit id="26da77a3b5d6276683e184048e1d3bb94557d77e" translate="yes" xml:space="preserve">
          <source>Turn off linking</source>
          <target state="translated">リンクをオフにする</target>
        </trans-unit>
        <trans-unit id="e02fb26e189ff5304b60504b8fa86dfec64deea2" translate="yes" xml:space="preserve">
          <source>Turn on verbose output.</source>
          <target state="translated">冗長出力をオンにします。</target>
        </trans-unit>
        <trans-unit id="b8639bbd522580f1f3da1eae390925659141fb86" translate="yes" xml:space="preserve">
          <source>Turn output pagination on or off.</source>
          <target state="translated">出力のページネーションをオンまたはオフにします。</target>
        </trans-unit>
        <trans-unit id="5bcc224aee2cb21fbac23a180b7fa6d6741a2868" translate="yes" xml:space="preserve">
          <source>Turn tick labels off for all axes.</source>
          <target state="translated">すべての軸の目盛りラベルをオフにします。</target>
        </trans-unit>
        <trans-unit id="b8e9407e307969ed38aaf00fe6663f9e11cde214" translate="yes" xml:space="preserve">
          <source>Turn tick labels on for all axes, or turn them on for the specified axes and off for the remainder.</source>
          <target state="translated">目盛りラベルをすべての軸でオンにするか、指定した軸でオンにして残りの軸でオフにします。</target>
        </trans-unit>
        <trans-unit id="578be54e22aaba9aaf2ef686c2f9442a992995cd" translate="yes" xml:space="preserve">
          <source>Turn tick marks on for all axes, or turn them on for the specified axes and off for the remainder.</source>
          <target state="translated">すべての軸で目盛りをオンにするか、指定された軸でオンにして残りの軸でオフにします。</target>
        </trans-unit>
        <trans-unit id="37900a5dd13430b19eed55c998696c2face16a2f" translate="yes" xml:space="preserve">
          <source>Turn warnings identified by &lt;var&gt;id&lt;/var&gt; into errors and optionally return their previous state &lt;var&gt;stout&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;id&lt;/var&gt; で識別された警告をエラーに変換し、オプションで以前の状態 &lt;var&gt;stout&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9b0e89b43c695591eb4d828f81a3d74510c7f6df" translate="yes" xml:space="preserve">
          <source>Two different &lt;var&gt;style&lt;/var&gt;s are available for displaying the &lt;var&gt;cmap&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;cmap&lt;/var&gt; を表示するために、2つの異なる &lt;var&gt;style&lt;/var&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="5a6abc063d19a6ae560ab051ead276b24ebf2870" translate="yes" xml:space="preserve">
          <source>Two element range</source>
          <target state="translated">2つの要素の範囲</target>
        </trans-unit>
        <trans-unit id="9e2df59fae088f606b5b80ba9dea5ba90e049511" translate="yes" xml:space="preserve">
          <source>Two permutation matrices can be multiplied or divided (if their sizes match), performing a composition of permutations. Also a permutation matrix can be indexed by a permutation vector (or two vectors), giving again a permutation matrix. Any other operations do not generally yield a permutation matrix and will thus trigger the implicit conversion.</source>
          <target state="translated">2つの並べ替え行列を乗算または分割(サイズが一致する場合)して、並べ替えの合成を行うことができます。また,順列行列は順列ベクトル(または2つのベクトル)によってインデックス化され,再び順列行列を得ることができます.その他の操作は,一般的に順列行列を生成しないため,暗黙の変換が行われます.</target>
        </trans-unit>
        <trans-unit id="2c7d7d1d216a7c5ada3740cac522d8a85f742c56" translate="yes" xml:space="preserve">
          <source>Two-Dimensional Plots</source>
          <target state="translated">二次元プロット</target>
        </trans-unit>
        <trans-unit id="b36dc04d70113568275e2e03d274fe32d8dc2552" translate="yes" xml:space="preserve">
          <source>Two-digit year</source>
          <target state="translated">二桁の年</target>
        </trans-unit>
        <trans-unit id="f4bb9b2a28a8551bb1e1fd6ef195ff40e88c5225" translate="yes" xml:space="preserve">
          <source>Two-dimensional Function Plotting</source>
          <target state="translated">二次元関数プロット</target>
        </trans-unit>
        <trans-unit id="e79a3b187e1931882e00955f72a4645fecbbabea" translate="yes" xml:space="preserve">
          <source>Two-dimensional Geometric Shapes</source>
          <target state="translated">二次元幾何学図形</target>
        </trans-unit>
        <trans-unit id="d2b642896980c2e36603d2bb0955bcc4bad32308" translate="yes" xml:space="preserve">
          <source>Two-dimensional interpolation.</source>
          <target state="translated">二次元補間。</target>
        </trans-unit>
        <trans-unit id="fdcb67de975c894f0cdda0662d3bde38721b92fc" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[2Dlen 3Dlen]&lt;/code&gt; specifying the length of the tickmarks relative to the longest visible axis.</source>
          <target state="translated">目に見える最も長い軸を基準にした &lt;code&gt;[2Dlen 3Dlen]&lt;/code&gt; の長さを指定する2要素ベクトル[2Dlen 3Dlen]。</target>
        </trans-unit>
        <trans-unit id="cb137eb6380c82f86e625ebeaee7595c879942b5" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[azimuth elevation]&lt;/code&gt; specifying the viewpoint for three-dimensional plots</source>
          <target state="translated">3次元プロットの視点を指定する2要素ベクトル &lt;code&gt;[azimuth elevation]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02f30c43b9c2dc2e2a75efeebc1d714e4f4bac98" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[xfirst xlast]&lt;/code&gt; specifying the x coordinates of the centers of the first and last columns of the image.</source>
          <target state="translated">画像の最初と最後の列の中心のx座標を指定する2要素ベクトル &lt;code&gt;[xfirst xlast]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="527f40f75707ed523f358c7e30a64e37ff733101" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[xmin xmax]&lt;/code&gt; specifying the limits for the x-axis. Setting &lt;code&gt;xlim&lt;/code&gt; also forces the &lt;code&gt;xlimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFxlim&quot;&gt;xlim function&lt;/a&gt;.</source>
          <target state="translated">x軸の範囲を指定する2要素ベクトル &lt;code&gt;[xmin xmax]&lt;/code&gt; 。 &lt;code&gt;xlim&lt;/code&gt; を設定すると、 &lt;code&gt;xlimmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。&lt;a href=&quot;axis-configuration#XREFxlim&quot;&gt;xlim関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8f030a454788025bc9a365072ff3e068167655b7" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[yfirst ylast]&lt;/code&gt; specifying the y coordinates of the centers of the first and last rows of the image.</source>
          <target state="translated">画像の最初と最後の行の中心のy座標を指定する2要素ベクトル &lt;code&gt;[yfirst ylast]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef6d7668ef9eb14a983f03ed252c5aa8b5d22940" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[ymin ymax]&lt;/code&gt; specifying the limits for the y-axis. Setting &lt;code&gt;ylim&lt;/code&gt; also forces the &lt;code&gt;ylimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFylim&quot;&gt;ylim function&lt;/a&gt;.</source>
          <target state="translated">y軸の範囲を指定する2要素ベクトル &lt;code&gt;[ymin ymax]&lt;/code&gt; 。 &lt;code&gt;ylim&lt;/code&gt; を設定すると、 &lt;code&gt;ylimmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。&lt;a href=&quot;axis-configuration#XREFylim&quot;&gt;ylim関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8a15479a5f1f50599fa910cbfaec50ac567e7679" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[zmin zmaz]&lt;/code&gt; specifying the limits for the z-axis. Setting &lt;code&gt;zlim&lt;/code&gt; also forces the &lt;code&gt;zlimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFzlim&quot;&gt;zlim function&lt;/a&gt;.</source>
          <target state="translated">z軸の範囲を指定する2要素ベクトル &lt;code&gt;[zmin zmaz]&lt;/code&gt; 。 &lt;code&gt;zlim&lt;/code&gt; を設定すると、 &lt;code&gt;zlimmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。&lt;a href=&quot;axis-configuration#XREFzlim&quot;&gt;zlim関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="e505d82596690256605fb5ee75e0ac61c0cc9de2" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;demo tetramesh&lt;/code&gt; to see examples on using &lt;code&gt;tetramesh&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;demo tetramesh&lt;/code&gt; 使って上の例を参照する &lt;code&gt;tetramesh&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b42d081b224ffaca6767c757779426eeaeb3323" translate="yes" xml:space="preserve">
          <source>Type of factorization.</source>
          <target state="translated">因数分解の種類。</target>
        </trans-unit>
        <trans-unit id="339ff9d749a6625fac574198f87913d71eedb702" translate="yes" xml:space="preserve">
          <source>Type of the function.</source>
          <target state="translated">機能の種類。</target>
        </trans-unit>
        <trans-unit id="0c6bad9ffc74961e0a71f96d77fb9e12fb47f331" translate="yes" xml:space="preserve">
          <source>Typecast a hexadecimal character array or cell array of strings to an array of numbers.</source>
          <target state="translated">16進数の文字配列や文字列のセル配列を数値の配列に型キャストします。</target>
        </trans-unit>
        <trans-unit id="0d5826d4a0483e959dfbc05bebcd563ad3fd2259" translate="yes" xml:space="preserve">
          <source>TypicalX</source>
          <target state="translated">TypicalX</target>
        </trans-unit>
        <trans-unit id="20111781c8f81f71d9e54b22fab8055128111833" translate="yes" xml:space="preserve">
          <source>Typically only the magnitude data &lt;var&gt;y&lt;/var&gt; is present in which case &lt;var&gt;x&lt;/var&gt; is taken to be the range &lt;code&gt;1 : length (&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;x&lt;/var&gt; is given it may be a string array, a cell array of strings, or a numerical vector.</source>
          <target state="translated">通常、マグニチュードデータ &lt;var&gt;y&lt;/var&gt; のみが存在します。この場合、 &lt;var&gt;x&lt;/var&gt; は範囲 &lt;code&gt;1 : length (&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; と見なされます。場合 &lt;var&gt;x&lt;/var&gt; が与えられ、それは、文字配列、文字列のセル配列、または数値ベクトルであってもよいです。</target>
        </trans-unit>
        <trans-unit id="8d94d680baf9c48041367a9822f6e804902b8773" translate="yes" xml:space="preserve">
          <source>Typing in a function at the command prompt.</source>
          <target state="translated">コマンドプロンプトで関数を入力します。</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="85ef7b3eed88b2f45d813168d5ef3c1597e87ad6" translate="yes" xml:space="preserve">
          <source>UHESS</source>
          <target state="translated">UHESS</target>
        </trans-unit>
        <trans-unit id="828b5505ff4402471cfbb7fe32a6613ec912c004" translate="yes" xml:space="preserve">
          <source>UI Elements</source>
          <target state="translated">UI要素</target>
        </trans-unit>
        <trans-unit id="1726b1b17e8f6d8ddea9cfc4af226dd6b4e3233a" translate="yes" xml:space="preserve">
          <source>URL Manipulation</source>
          <target state="translated">URL操作</target>
        </trans-unit>
        <trans-unit id="a7439191c89664de7a10466c332328c275669705" translate="yes" xml:space="preserve">
          <source>UT</source>
          <target state="translated">UT</target>
        </trans-unit>
        <trans-unit id="fac2ff66572220e192befaa230c070ee0bbb4720" translate="yes" xml:space="preserve">
          <source>Uibuttongroup Properties</source>
          <target state="translated">ウイバトングループの物件情報</target>
        </trans-unit>
        <trans-unit id="9546f3bf223bafac33c155ec0b7f04ff27d98627" translate="yes" xml:space="preserve">
          <source>Uicontextmenu Properties</source>
          <target state="translated">Uicontextmenuプロパティ</target>
        </trans-unit>
        <trans-unit id="2c4f441186f82c356a04f87f995210c8104dbdb2" translate="yes" xml:space="preserve">
          <source>Uicontextmenu properties are documented at &lt;a href=&quot;uicontextmenu-properties#Uicontextmenu-Properties&quot;&gt;Uicontextmenu Properties&lt;/a&gt;.</source>
          <target state="translated">Uicontextmenuのプロパティは、&lt;a href=&quot;uicontextmenu-properties#Uicontextmenu-Properties&quot;&gt;Uicontextmenuのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="093bab7c3746dcd0de92f6769cd0e092854e9520" translate="yes" xml:space="preserve">
          <source>Uicontrol Properties</source>
          <target state="translated">Uicontrolプロパティ</target>
        </trans-unit>
        <trans-unit id="8a6d49bea4230f99be4cd116e7030509e4fae408" translate="yes" xml:space="preserve">
          <source>Uimenu Properties</source>
          <target state="translated">ウイメヌ物件</target>
        </trans-unit>
        <trans-unit id="316cf62a863e6622de4d6644c1c5aaf270b5071c" translate="yes" xml:space="preserve">
          <source>Uipanel Properties</source>
          <target state="translated">ウイパネルの物件</target>
        </trans-unit>
        <trans-unit id="7322c2a424766118f5a3ee0e87f99d4e60a371b9" translate="yes" xml:space="preserve">
          <source>Uipanel properties are documented at &lt;a href=&quot;uipanel-properties#Uipanel-Properties&quot;&gt;Uipanel Properties&lt;/a&gt;.</source>
          <target state="translated">Uipanelのプロパティは、&lt;a href=&quot;uipanel-properties#Uipanel-Properties&quot;&gt;Uipanelのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="93d29997f57b94cd7daa0a1f1a6783168635b6a7" translate="yes" xml:space="preserve">
          <source>Uipushtool Properties</source>
          <target state="translated">ユイプシュトゥールの物件情報</target>
        </trans-unit>
        <trans-unit id="87f4432ed30de2250b830d86d67ce07811081f9f" translate="yes" xml:space="preserve">
          <source>Uipushtool properties are documented at &lt;a href=&quot;uipushtool-properties#Uipushtool-Properties&quot;&gt;Uipushtool Properties&lt;/a&gt;.</source>
          <target state="translated">Uipushtoolのプロパティは、&lt;a href=&quot;uipushtool-properties#Uipushtool-Properties&quot;&gt;Uipushtoolのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="f1257b4dc5403661c5a839fe358738f7630c41ed" translate="yes" xml:space="preserve">
          <source>Uitable Properties</source>
          <target state="translated">可処分所得の物件</target>
        </trans-unit>
        <trans-unit id="4017aac152db9643d92b0f41138fdb73a25e436a" translate="yes" xml:space="preserve">
          <source>Uitoggletool Properties</source>
          <target state="translated">ウイトーグルツールのプロパティ</target>
        </trans-unit>
        <trans-unit id="d0f5e9b710586ca45e0a4822dee412100f3f5eb8" translate="yes" xml:space="preserve">
          <source>Uitoggletool properties are documented at &lt;a href=&quot;uitoggletool-properties#Uitoggletool-Properties&quot;&gt;Uitoggletool Properties&lt;/a&gt;.</source>
          <target state="translated">Uitoggletoolのプロパティは、&lt;a href=&quot;uitoggletool-properties#Uitoggletool-Properties&quot;&gt;Uitoggletoolのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="918659e41c78a7fa55ad1176dab48339fded69c2" translate="yes" xml:space="preserve">
          <source>Uitoolbar Properties</source>
          <target state="translated">ウイトールバーの物件情報</target>
        </trans-unit>
        <trans-unit id="d6cd9102e9400a50f6d9222f0b8e78dbdc58e9d0" translate="yes" xml:space="preserve">
          <source>Uitoolbar properties are documented at &lt;a href=&quot;uitoolbar-properties#Uitoolbar-Properties&quot;&gt;Uitoolbar Properties&lt;/a&gt;.</source>
          <target state="translated">Uitoolbarのプロパティは、&lt;a href=&quot;uitoolbar-properties#Uitoolbar-Properties&quot;&gt;Uitoolbarのプロパティに&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="967e229462f186ba40b09901daf0c8b11dc42d86" translate="yes" xml:space="preserve">
          <source>Unary addition</source>
          <target state="translated">単項加算</target>
        </trans-unit>
        <trans-unit id="7764c45e364f87d6b4cbbd353a8db14125b6ae0a" translate="yes" xml:space="preserve">
          <source>Unary plus. This operator has no effect on the operand.</source>
          <target state="translated">単項プラス。この演算子はオペランドに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="394608ecc0b81513d7ec644fcd3a5bb32e2fc685" translate="yes" xml:space="preserve">
          <source>Unary subtraction</source>
          <target state="translated">単項減算</target>
        </trans-unit>
        <trans-unit id="7053c3c9630696c02fef74f3fb0fea9e0aa3856c" translate="yes" xml:space="preserve">
          <source>Under the null, LM approximately has a chisquare distribution with &lt;var&gt;p&lt;/var&gt; degrees of freedom and &lt;var&gt;pval&lt;/var&gt; is the &lt;em&gt;p&lt;/em&gt;-value (1 minus the CDF of this distribution at LM) of the test.</source>
          <target state="translated">nullの下では、LMはおおよそ &lt;var&gt;p&lt;/var&gt; 自由度のカイ二乗分布を持ち、 &lt;var&gt;pval&lt;/var&gt; は検定の&lt;em&gt;p&lt;/em&gt;値（1からLMでのこの分布のCDFを引いたもの）です。</target>
        </trans-unit>
        <trans-unit id="af4b3f21c25f80c43bdb2f7aba91d185863d8751" translate="yes" xml:space="preserve">
          <source>Undo all changes made to this line. This is like typing the &amp;lsquo;undo&amp;rsquo; command enough times to get back to the beginning.</source>
          <target state="translated">この行に加えられたすべての変更を元に戻します。これは、最初に戻るために 'undo'コマンドを何度も入力するようなものです。</target>
        </trans-unit>
        <trans-unit id="3473f776025ef87402164587c0c6d527a9bf6c29" translate="yes" xml:space="preserve">
          <source>Undo the action of the &lt;code&gt;fftshift&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;fftshift&lt;/code&gt; 関数のアクションを元に戻します。</target>
        </trans-unit>
        <trans-unit id="1b9ad1e6d2255ad844f522eaf9aae703b9ae00ae" translate="yes" xml:space="preserve">
          <source>Undo the last action. You can undo all the way back to an empty line.</source>
          <target state="translated">最後の操作を元に戻します。空行に戻るまで全て元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="c5305cf0fc7c1c3a7538f85014bb0870bf475309" translate="yes" xml:space="preserve">
          <source>Undocumented output</source>
          <target state="translated">文書化されていない出力</target>
        </trans-unit>
        <trans-unit id="bd1cd578f352b9fb0ada8bdc1cb83a4ff6ab7c50" translate="yes" xml:space="preserve">
          <source>Undocumented.</source>
          <target state="translated">Undocumented.</target>
        </trans-unit>
        <trans-unit id="eac6722ddd55a8b7172d57779e8d8370c018d66b" translate="yes" xml:space="preserve">
          <source>Uniform Distribution</source>
          <target state="translated">一様分布</target>
        </trans-unit>
        <trans-unit id="d4fe6de72881468e19ecbcccb86833501bd8312c" translate="yes" xml:space="preserve">
          <source>Uniform Distribution (integers)</source>
          <target state="translated">一様分布</target>
        </trans-unit>
        <trans-unit id="8dfbfa51f9a9b3175fe5101b0d9f46b7d475fe1d" translate="yes" xml:space="preserve">
          <source>Uninstall named packages. For example,</source>
          <target state="translated">名前のついたパッケージをアンインストールします。例えば</target>
        </trans-unit>
        <trans-unit id="4c0b8e3c14bad2ddacb97a98e18c0761fe529fbe" translate="yes" xml:space="preserve">
          <source>Units of image resolution. Value is &lt;code&gt;&quot;Inch&quot;&lt;/code&gt;, &lt;code&gt;&quot;Centimeter&quot;&lt;/code&gt;, or &lt;code&gt;&quot;undefined&quot;&lt;/code&gt;.</source>
          <target state="translated">画像解像度の単位。値は、 &lt;code&gt;&quot;Inch&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Centimeter&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;undefined&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="09e102ac95dfb09396aca55c8a19a1429069b35b" translate="yes" xml:space="preserve">
          <source>Units used to interpret the &lt;code&gt;&quot;fontsize&quot;&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;&quot;fontsize&quot;&lt;/code&gt; プロパティの解釈に使用される単位。</target>
        </trans-unit>
        <trans-unit id="f8ab200f3e7bbc4e90c1f09194af6521d544a66b" translate="yes" xml:space="preserve">
          <source>Units used to interpret the &lt;code&gt;&quot;position&quot;&lt;/code&gt;, &lt;code&gt;&quot;outerposition&quot;&lt;/code&gt;, and &lt;code&gt;&quot;tightinset&quot;&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;&quot;position&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;outerposition&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;tightinset&quot;&lt;/code&gt; プロパティの解釈に使用される単位。</target>
        </trans-unit>
        <trans-unit id="d7c231f4aa55861e6bc06aed776ddfe9f50c48ee" translate="yes" xml:space="preserve">
          <source>Univariate Discrete Distribution</source>
          <target state="translated">単変量離散分布</target>
        </trans-unit>
        <trans-unit id="8ee79a99ca6a8cf3d3cdc01a21d8c20609777099" translate="yes" xml:space="preserve">
          <source>Unix-style man pages describing Octave.</source>
          <target state="translated">Octaveを記述したUnixスタイルの manページ。</target>
        </trans-unit>
        <trans-unit id="e310cc73c863ad310b27c72c0bd1c8824a10ac9f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, all of the functions described in this chapter will work for real and complex scalar, vector, or matrix arguments. Functions described as &lt;em&gt;mapping functions&lt;/em&gt; apply the given operation individually to each element when given a matrix argument. For example:</source>
          <target state="translated">特に明記しない限り、この章で説明するすべての関数は、実数および複素数のスカラー、ベクトル、行列の引数に対して機能します。&lt;em&gt;マッピング関数&lt;/em&gt;として説明されている関数は、行列の引数が与えられると、与えられた演算を各要素に個別に適用します。例えば：</target>
        </trans-unit>
        <trans-unit id="3db2d6fe1c66e3f832e7f6d83935a5e5efc72b20" translate="yes" xml:space="preserve">
          <source>Unless you specify &amp;lsquo;</source>
          <target state="translated">指定しない限り '</target>
        </trans-unit>
        <trans-unit id="3c47b0525cbcfd17ac07b7554aaeb8a0a5befd4d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;var&gt;x&lt;/var&gt;^(1/3)&lt;/code&gt;, the result will be negative if &lt;var&gt;x&lt;/var&gt; is negative.</source>
          <target state="translated">異なり &lt;code&gt;&lt;var&gt;x&lt;/var&gt;^(1/3)&lt;/code&gt; 場合、結果は負となり &lt;var&gt;x&lt;/var&gt; 負です。</target>
        </trans-unit>
        <trans-unit id="ef3ac4eedc59d0967f44a2d80f2e700fc832ab93" translate="yes" xml:space="preserve">
          <source>Unlike a function file, a script file must &lt;em&gt;not&lt;/em&gt; begin with the keyword &lt;code&gt;function&lt;/code&gt;. If it does, Octave will assume that it is a function file, and that it defines a single function that should be evaluated as soon as it is defined.</source>
          <target state="translated">関数ファイルとは異なり、スクリプトファイルはキーワード &lt;code&gt;function&lt;/code&gt; で始めることはできませ&lt;em&gt;ん&lt;/em&gt;。その場合、Octaveはそれを関数ファイルであると想定し、定義されたらすぐに評価する必要のある単一の関数を定義します。</target>
        </trans-unit>
        <trans-unit id="9e2ba5b2336e48d35ba1078813b639f84df67276" translate="yes" xml:space="preserve">
          <source>Unlike many other computer languages, Octave allows you to define functions that return more than one value. The syntax for defining functions that return multiple values is</source>
          <target state="translated">他の多くのコンピュータ言語とは異なり,Octaveでは複数の値を返す関数を定義することができます。複数の値を返す関数を定義するための構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3411b45c32c798e6cd4acefc08313818d4e0c229" translate="yes" xml:space="preserve">
          <source>Unlike most languages, functions in Octave may return multiple values. For example, the following statement</source>
          <target state="translated">ほとんどの言語とは異なり,Octaveの関数は複数の値を返すことができます。例えば,次の文</target>
        </trans-unit>
        <trans-unit id="62b7d3cb889c3cf3d2102a8aa0fda113b72cb989" translate="yes" xml:space="preserve">
          <source>Unlike most programming languages, complex numeric constants are denoted as the sum of real and imaginary parts. The imaginary part is denoted by a real-valued numeric constant followed immediately by a complex value indicator (&amp;lsquo;</source>
          <target state="translated">ほとんどのプログラミング言語とは異なり、複雑な数値定数は、実数部と虚数部の合計として表されます。虚数部は、実数値の定数とそれに続く複素数値インジケータ（ '</target>
        </trans-unit>
        <trans-unit id="349c3d3b08b4bb0edf7d468ffbe18cbd9c9311bc" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;return&lt;/code&gt; statement in C, Octave&amp;rsquo;s &lt;code&gt;return&lt;/code&gt; statement cannot be used to return a value from a function. Instead, you must assign values to the list of return variables that are part of the &lt;code&gt;function&lt;/code&gt; statement. The &lt;code&gt;return&lt;/code&gt; statement simply makes it easier to exit a function from a deeply nested loop or conditional statement.</source>
          <target state="translated">C の &lt;code&gt;return&lt;/code&gt; ステートメントとは異なり、Octaveの &lt;code&gt;return&lt;/code&gt; ステートメントは、関数から値を返すために使用することはできません。代わりに、 &lt;code&gt;function&lt;/code&gt; ステートメントの一部である戻り変数のリストに値を割り当てる必要があります。 &lt;code&gt;return&lt;/code&gt; ステートメントは、単にそれが簡単に深くネストされたループや条件文から機能を終了することができます。</target>
        </trans-unit>
        <trans-unit id="2f9e72a9cdb83ef4389c77765004e9406894f647" translate="yes" xml:space="preserve">
          <source>Unlike the C library function, which requires you to provide a suitably sized string as an argument, Octave&amp;rsquo;s &lt;code&gt;sprintf&lt;/code&gt; function returns the string, automatically sized to hold all of the items converted.</source>
          <target state="translated">適切なサイズの文字列を引数として提供する必要があるCライブラリ関数とは異なり、Octaveの &lt;code&gt;sprintf&lt;/code&gt; 関数は、変換されたすべてのアイテムを保持するために自動的にサイズ調整された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="12409e65640a45620469ad87f2a31c339cb8b8cc" translate="yes" xml:space="preserve">
          <source>Unlock the named function &lt;var&gt;fcn&lt;/var&gt; so that it may be removed from memory with &lt;code&gt;clear&lt;/code&gt;.</source>
          <target state="translated">名前付き関数 &lt;var&gt;fcn&lt;/var&gt; のロックを解除して、 &lt;code&gt;clear&lt;/code&gt; でメモリから削除できるようにします。</target>
        </trans-unit>
        <trans-unit id="ca2353864432721ac043aecd2f43c7b16e3d11fd" translate="yes" xml:space="preserve">
          <source>Unpack the TAR archive &lt;var&gt;tarfile&lt;/var&gt;.</source>
          <target state="translated">TARアーカイブ &lt;var&gt;tarfile&lt;/var&gt; を解凍します。</target>
        </trans-unit>
        <trans-unit id="ac87271628c4b6361d26f0bfbf90c02570f632fc" translate="yes" xml:space="preserve">
          <source>Unpack the ZIP archive &lt;var&gt;zipfile&lt;/var&gt;.</source>
          <target state="translated">ZIPアーカイブ &lt;var&gt;zipfile&lt;/var&gt; を解凍します。</target>
        </trans-unit>
        <trans-unit id="6ce3c5c4d04d3ca618755eff7332594df8bd6dad" translate="yes" xml:space="preserve">
          <source>Unpack the archive &lt;var&gt;file&lt;/var&gt; based on its extension to the directory &lt;var&gt;dir&lt;/var&gt;.</source>
          <target state="translated">ディレクトリ &lt;var&gt;dir&lt;/var&gt; の拡張子に基づいてアーカイブ &lt;var&gt;file&lt;/var&gt; を解凍します。</target>
        </trans-unit>
        <trans-unit id="ed8516f26bf4a4add88a8854d7689a150a246054" translate="yes" xml:space="preserve">
          <source>Unpack the bzip2 archive &lt;var&gt;bzfile&lt;/var&gt;.</source>
          <target state="translated">bzip2アーカイブ &lt;var&gt;bzfile&lt;/var&gt; を解凍します。</target>
        </trans-unit>
        <trans-unit id="c2f2b471b5ca598dcacbb3072da527dd4a20a83e" translate="yes" xml:space="preserve">
          <source>Unpack the gzip archive &lt;var&gt;gzfile&lt;/var&gt;.</source>
          <target state="translated">gzipアーカイブ &lt;var&gt;gzfile&lt;/var&gt; を解凍します。</target>
        </trans-unit>
        <trans-unit id="c1ac088b8a7a60a97ae6c77f21b7d317ce3a2df8" translate="yes" xml:space="preserve">
          <source>Unshared data size.</source>
          <target state="translated">共有されていないデータサイズ。</target>
        </trans-unit>
        <trans-unit id="29488daa32604b9aa3d0697ff060d2f63e1a0816" translate="yes" xml:space="preserve">
          <source>Unshared stack size.</source>
          <target state="translated">共有されていないスタックサイズ。</target>
        </trans-unit>
        <trans-unit id="e84f9be33a662e14f95dbc34ac24c539487ae713" translate="yes" xml:space="preserve">
          <source>Unsurprisingly, &lt;code&gt;bar&lt;/code&gt; is also recursive. It has been called 13,529 times in the course of recursively calculating the Fibonacci number in a suboptimal way, and most of the time was spent in &lt;code&gt;bar&lt;/code&gt; itself.</source>
          <target state="translated">当然のことながら、 &lt;code&gt;bar&lt;/code&gt; も再帰的です。これは、次善の方法でフィボナッチ数を再帰的に計算する過程で13,529回呼び出され、ほとんどの時間は &lt;code&gt;bar&lt;/code&gt; 自体に費やされました。</target>
        </trans-unit>
        <trans-unit id="e9774e1d95d7f365ea8f27cb1ead81eb915de4d3" translate="yes" xml:space="preserve">
          <source>Unwrap radian phases by adding or subtracting multiples of 2*pi as appropriate to remove jumps greater than &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="translated">2 * piの倍数を適宜加算または減算してラジアンフェーズをアンラップし、 &lt;var&gt;tol&lt;/var&gt; より大きいジャンプを削除します。</target>
        </trans-unit>
        <trans-unit id="bd14ddc042bb3f7c865b6d0b09619ab201c06cb8" translate="yes" xml:space="preserve">
          <source>Unwrap will work along the dimension &lt;var&gt;dim&lt;/var&gt;. If &lt;var&gt;dim&lt;/var&gt; is unspecified it defaults to the first non-singleton dimension.</source>
          <target state="translated">Unwrapは、 &lt;var&gt;dim&lt;/var&gt; 次元で機能します。場合 &lt;var&gt;dim&lt;/var&gt; 最初の非シングルトン次元に指定されていない、それはデフォルトです。</target>
        </trans-unit>
        <trans-unit id="6bab2c594f05fdf90c82b1eba8de8f002b201812" translate="yes" xml:space="preserve">
          <source>Up to eight light objects are supported per axes. (Implementation dependent)</source>
          <target state="translated">1軸あたり最大8個のライトオブジェクトをサポートしています。(実装に依存)</target>
        </trans-unit>
        <trans-unit id="0e8ccf0e38b27b3a4d19962dd10be4866e218db4" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a range of columns to shift in the original factored matrix.</source>
          <target state="translated">元のファクト付き行列でシフトする列の範囲を与えられたコレスキー因数分解を更新します.</target>
        </trans-unit>
        <trans-unit id="7299a988235f1f5e8c1ffbad3eabfd1e61b47055" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a row or column to delete from the original factored matrix.</source>
          <target state="translated">行または列が与えられたコレスキー因数分解を更新して,元の因数分解行列から削除します.</target>
        </trans-unit>
        <trans-unit id="eb6a155b1d377e5037a6234f3325adda3199c71d" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a row or column to insert in the original factored matrix.</source>
          <target state="translated">行または列が与えられたコレスキー因数分解を更新して,元の因数分解行列に挿入します.</target>
        </trans-unit>
        <trans-unit id="08036a5e3748177caac1c6a8f416d6b1fb40a89a" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a range of columns to shift in the original factored matrix.</source>
          <target state="translated">元のファクト付き行列でシフトする列の範囲を指定して,QR 因数分解を更新します.</target>
        </trans-unit>
        <trans-unit id="51d6381da907b1796cbd300743d5aa77b23f9e2e" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a row or column to delete from the original factored matrix.</source>
          <target state="translated">行または列が与えられたQR因数分解を更新して,元の因数分解行列から削除します.</target>
        </trans-unit>
        <trans-unit id="8ecac67f9f02117bbdaa4b3232cd6bd6349283fc" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a row or column to insert in the original factored matrix.</source>
          <target state="translated">行または列が与えられたQR因数分解を更新して,元の因数分解行列に挿入します.</target>
        </trans-unit>
        <trans-unit id="b5e58760960195e06e1f6c05b8a2838232aeb395" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given update vectors or matrices.</source>
          <target state="translated">更新ベクトルや行列を与えられたQR因数分解を更新します。</target>
        </trans-unit>
        <trans-unit id="1772adc8be64c620cfd9f42c036cd02e2abd6bfa" translate="yes" xml:space="preserve">
          <source>Update figure windows and their children.</source>
          <target state="translated">フィギュアのウィンドウとその子分を更新します。</target>
        </trans-unit>
        <trans-unit id="58842c43cfdcb35b43ddcc05ea601a2c01111e89" translate="yes" xml:space="preserve">
          <source>Update or downdate a Cholesky factorization.</source>
          <target state="translated">コレスキー因数分解の更新やダウンデイトを行います。</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="5e876c69c2e6d3aeb7ca0cd98f1eb7a92aa613f7" translate="yes" xml:space="preserve">
          <source>Upload local files</source>
          <target state="translated">ローカルファイルのアップロード</target>
        </trans-unit>
        <trans-unit id="ded728b3d7aaa54017e04f25067f5a6e5371a444" translate="yes" xml:space="preserve">
          <source>Upload the local file &lt;var&gt;file&lt;/var&gt; into the current remote directory on the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="translated">ローカルファイルのアップロード &lt;var&gt;file&lt;/var&gt; FTP接続の現在のリモートディレクトリに &lt;var&gt;f&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="20ff0f8102bd5b7728c35f95d8528d7f64f56769" translate="yes" xml:space="preserve">
          <source>Upper limit of the objective function. If the objective function reaches this limit and continues increasing, the solver stops the search. This parameter is used in the dual simplex only.</source>
          <target state="translated">目的関数の上限。目的関数がこの上限に達し、増加し続ける場合、ソルバーは探索を停止します。このパラメータはデュアルシンプレックスでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="299dc50bce7a3af9d50b415a5a9dd86c7c7ee8c2" translate="yes" xml:space="preserve">
          <source>Upper triangular. If the optional third argument &lt;var&gt;perm&lt;/var&gt; is given, the matrix is assumed to be a permuted upper triangular with the permutations defined by the vector &lt;var&gt;perm&lt;/var&gt;.</source>
          <target state="translated">上三角。オプションの3番目の引数 &lt;var&gt;perm&lt;/var&gt; が指定された場合、行列は、ベクトル &lt;var&gt;perm&lt;/var&gt; で定義された順列を持つ上三角行列の順列であると見なされます。</target>
        </trans-unit>
        <trans-unit id="fc549ac546843e2b778358de1dd573e1fbad283c" translate="yes" xml:space="preserve">
          <source>Uppercase the character following the cursor (or the beginning of the next word if the cursor is between words), moving the cursor to the end of the word.</source>
          <target state="translated">カーソルに続く文字(カーソルが単語間にある場合は次の単語の先頭)を大文字にして、カーソルを単語の最後まで移動します。</target>
        </trans-unit>
        <trans-unit id="a505a6766696bfb23ae8d5feabd44804068b29f9" translate="yes" xml:space="preserve">
          <source>Uppercase the characters following the cursor to the end of the current (or following) word, moving the cursor to the end of the word.</source>
          <target state="translated">カーソルに続く文字を大文字にして、現在の(またはそれに続く)単語の最後までカーソルを移動させます。</target>
        </trans-unit>
        <trans-unit id="b6dffb93f99547ed517fd76301b35202f33b1f1c" translate="yes" xml:space="preserve">
          <source>Use &amp;lsquo;</source>
          <target state="translated">使用する '</target>
        </trans-unit>
        <trans-unit id="736fe455c57cf4505349772d4b05307037a88b41" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;char&amp;gt; as the path separation character. This option can help when running Octave on non-Unix systems.</source>
          <target state="translated">パス区切り文字として&amp;lt;char&amp;gt;を使用します。このオプションは、Unix以外のシステムでOctaveを実行するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c28ce88c41a4ad0639b3a842a341fd945201b9f9" translate="yes" xml:space="preserve">
          <source>Use 12-hour time format</source>
          <target state="translated">12時間の時間形式を使用します。</target>
        </trans-unit>
        <trans-unit id="8e0c432beb071041971dc552dc0387cf5c793e09" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cellfun&lt;/code&gt; intelligently. The &lt;code&gt;cellfun&lt;/code&gt; function is a useful tool for avoiding loops. It is often used with anonymous function handles; however, calling an anonymous function involves an overhead quite comparable to the overhead of an m-file function. Passing a handle to a built-in function is faster, because the interpreter is not involved in the internal loop. For example:</source>
          <target state="translated">&lt;code&gt;cellfun&lt;/code&gt; をインテリジェントに使用します。 &lt;code&gt;cellfun&lt;/code&gt; 関数は、ループを回避するための便利なツールです。多くの場合、無名関数ハンドルと共に使用されます。ただし、無名関数の呼び出しには、mファイル関数のオーバーヘッドに相当するオーバーヘッドが伴います。インタープリターは内部ループに関与しないため、組み込み関数にハンドルを渡す方が高速です。例えば：</target>
        </trans-unit>
        <trans-unit id="55307d71a1e63a2ae0e7a218248227ee090f6bb1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; when appropriate. If you are calling lots of functions, and none of them will need to change during your run, set the variable &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; to &lt;code&gt;&quot;all&quot;&lt;/code&gt;. This will stop Octave from checking the time stamp of a function file to see if it has been updated while the program is being run.</source>
          <target state="translated">&lt;code&gt;ignore_function_time_stamp&lt;/code&gt; に応じて、ignore_function_time_stampを使用してください。多くの関数を呼び出しており、実行中にそれらを変更する必要がない場合は、変数 &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; を &lt;code&gt;&quot;all&quot;&lt;/code&gt; に設定します。これにより、Octaveが関数ファイルのタイムスタンプをチェックして、プログラムの実行中に更新されたかどうかを確認できなくなります。</target>
        </trans-unit>
        <trans-unit id="1c68bdd835376d383faf2bb558f097da51846472" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;fontname&lt;/var&gt; and/or &lt;var&gt;fontsize&lt;/var&gt; for all text. &lt;var&gt;fontname&lt;/var&gt; is ignored for some devices: dxf, fig, hpgl, etc.</source>
          <target state="translated">使用 &lt;var&gt;fontname&lt;/var&gt; 、および/または &lt;var&gt;fontsize&lt;/var&gt; すべてのテキストに。一部のデバイスでは &lt;var&gt;fontname&lt;/var&gt; が無視されます：dxf、fig、hpglなど。</target>
        </trans-unit>
        <trans-unit id="92c57054a3e8eec2ade6b1f833e028c02eefa2fd" translate="yes" xml:space="preserve">
          <source>Use BDF formulas in implicit multistep methods. &lt;em&gt;Note&lt;/em&gt;: This option is not yet implemented.</source>
          <target state="translated">暗黙的なマルチステップメソッドでBDF式を使用します。&lt;em&gt;注&lt;/em&gt;：このオプションはまだ実装されていません。</target>
        </trans-unit>
        <trans-unit id="67b713d028d90dfff729d7977c923a40822309ed" translate="yes" xml:space="preserve">
          <source>Use built-in and library functions if possible. Built-in and compiled functions are very fast. Even with an m-file library function, chances are good that it is already optimized, or will be optimized more in a future release.</source>
          <target state="translated">可能であれば、組み込み関数やライブラリ関数を使用してください。組み込み関数やコンパイルされた関数は非常に高速です。m-file ライブラリ関数であっても、すでに最適化されているか、将来のリリースでさらに最適化される可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="6292cfacecdbf80fb8b4056e20e161c2c317ffd1" translate="yes" xml:space="preserve">
          <source>Use dash-dotted lines.</source>
          <target state="translated">ダッシュ点線を使用します。</target>
        </trans-unit>
        <trans-unit id="b752d092671139b4ba8981cae8852ab031f6d43a" translate="yes" xml:space="preserve">
          <source>Use dashed lines.</source>
          <target state="translated">破線を使用します。</target>
        </trans-unit>
        <trans-unit id="875439e1b36a8e50b811dae2b6c94f25a359c083" translate="yes" xml:space="preserve">
          <source>Use dotted lines.</source>
          <target state="translated">点線を使用します。</target>
        </trans-unit>
        <trans-unit id="b7ad63f1318b93e8495d1a93a29689dc00dcfae9" translate="yes" xml:space="preserve">
          <source>Use either &lt;code&gt;dbcont&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt; to leave the debug mode and continue the normal execution of the script.</source>
          <target state="translated">&lt;code&gt;dbcont&lt;/code&gt; または &lt;code&gt;return&lt;/code&gt; を使用して、デバッグモードを終了し、スクリプトの通常の実行を続行します。</target>
        </trans-unit>
        <trans-unit id="b0f892d0c034533d2319a8e4b07159cb1d60b657" translate="yes" xml:space="preserve">
          <source>Use elementwise vector operators whenever possible to avoid looping (operators like &lt;code&gt;.*&lt;/code&gt; and &lt;code&gt;.^&lt;/code&gt;). See &lt;a href=&quot;arithmetic-ops#Arithmetic-Ops&quot;&gt;Arithmetic Ops&lt;/a&gt;. For simple inline functions, the &lt;code&gt;vectorize&lt;/code&gt; function can do this automatically.</source>
          <target state="translated">ループを回避するために、可能な限り要素ごとのベクトル演算子（ &lt;code&gt;.*&lt;/code&gt; や &lt;code&gt;.^&lt;/code&gt; などの演算子）を使用してください。&lt;a href=&quot;arithmetic-ops#Arithmetic-Ops&quot;&gt;Arithmetic Opsを&lt;/a&gt;参照してください。単純なインライン関数の場合、 &lt;code&gt;vectorize&lt;/code&gt; 関数はこれを自動的に実行できます。</target>
        </trans-unit>
        <trans-unit id="2d86872e8bf273036285506f87ffa89511d3480b" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;interpreter&lt;/code&gt; Property</source>
          <target state="translated">&lt;code&gt;interpreter&lt;/code&gt; プロパティの使用</target>
        </trans-unit>
        <trans-unit id="703f7c7517134044bdeba6e79c432006631bb36a" translate="yes" xml:space="preserve">
          <source>Use of the interpreter Property</source>
          <target state="translated">インタープリタの使用状況 プロパティ</target>
        </trans-unit>
        <trans-unit id="35881ff96b5615dfa69ec9c777caae34d0816ca2" translate="yes" xml:space="preserve">
          <source>Use only the lower triangle of &lt;var&gt;A&lt;/var&gt; and return a lower triangular factor &lt;var&gt;L&lt;/var&gt; such that &lt;code&gt;L*L'&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; の下三角のみを使用し、 &lt;code&gt;L*L'&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; に近似するような下三角係数 &lt;var&gt;L&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="01501f0804f399ffb27c9eacda862a2d76ab7ef8" translate="yes" xml:space="preserve">
          <source>Use only the upper triangle of &lt;var&gt;A&lt;/var&gt; and return an upper triangular factor &lt;var&gt;U&lt;/var&gt; such that &lt;code&gt;U'*U&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; の上三角のみを使用し、 &lt;code&gt;U'*U&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; に近似するような上三角因子 &lt;var&gt;U&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f55e280c0cc2779eacb42d9d9071e0ed7f403d5e" translate="yes" xml:space="preserve">
          <source>Use smoothing techniques to reduce the appearance of jagged lines.</source>
          <target state="translated">スムージングテクニックを使用して、ギザギザしたラインを目立たなくすることができます。</target>
        </trans-unit>
        <trans-unit id="7f56bf664f41841f0780b77777bfbee0360ea999" translate="yes" xml:space="preserve">
          <source>Use solid lines (default).</source>
          <target state="translated">実線を使用します(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="a93c12f2901fee8a3910889bd9c00614689808bc" translate="yes" xml:space="preserve">
          <source>Use stiff backward differentiation formula (BDF) method. If a function to compute the Jacobian is not supplied, &lt;code&gt;lsode&lt;/code&gt; will compute a finite difference approximation of the Jacobian matrix.</source>
          <target state="translated">硬い後方微分式（BDF）メソッドを使用します。ヤコビアンを計算する関数が指定されていない場合、 &lt;code&gt;lsode&lt;/code&gt; はヤコビ行列の有限差分近似を計算します。</target>
        </trans-unit>
        <trans-unit id="6985f86b2c8e56e8983df6db4607d6b96d4ce8ec" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;string&quot;&lt;/code&gt; property to change the text string. The line and the arrowhead can be customized as for arrow annotations, and the text can be customized using the same properties as &lt;code&gt;text&lt;/code&gt; graphics objects. Note, however, that some text property names are prefixed with &quot;text&quot; to distinguish them from arrow properties: &lt;code&gt;&quot;textbackgroundcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textedgecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textlinewidth&quot;&lt;/code&gt;, &lt;code&gt;&quot;textmargin&quot;&lt;/code&gt;, &lt;code&gt;&quot;textrotation&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;string&quot;&lt;/code&gt; プロパティを使用して、テキスト文字列を変更します。線と矢印は矢印注釈と同様にカスタマイズでき、テキストは &lt;code&gt;text&lt;/code&gt; グラフィックスオブジェクトと同じプロパティを使用してカスタマイズできます。ただし、矢印のプロパティと区別するために、一部のテキストプロパティ名の前に「text」が付いていることに注意してください。 &lt;code&gt;&quot;textbackgroundcolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;textcolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;textedgecolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;textlinewidth&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;textmargin&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;textrotation&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c7d002a0d0213202785ce53dc1aeabeec1236f8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;string&quot;&lt;/code&gt; property to change the text string. You may use &lt;code&gt;&quot;backgroundcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;linestyle&quot;&lt;/code&gt;, and &lt;code&gt;&quot;linewidth&quot;&lt;/code&gt; properties to customize the box background color and edge appearance. A limited set of &lt;code&gt;text&lt;/code&gt; objects properties are also available; Besides &lt;code&gt;&quot;font&amp;hellip;&quot;&lt;/code&gt; properties, you may also use &lt;code&gt;&quot;horizontalalignment&quot;&lt;/code&gt; and &lt;code&gt;&quot;verticalalignment&quot;&lt;/code&gt; to position the text inside the box.</source>
          <target state="translated">&lt;code&gt;&quot;string&quot;&lt;/code&gt; プロパティを使用して、テキスト文字列を変更します。あなたは使用することができ &lt;code&gt;&quot;backgroundcolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;linestyle&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;linewidth&quot;&lt;/code&gt; ボックスの背景色とエッジの外観をカスタマイズするためのプロパティを。限られた &lt;code&gt;text&lt;/code&gt; オブジェクトプロパティのセットも使用できます。 &lt;code&gt;&quot;font&amp;hellip;&quot;&lt;/code&gt; プロパティの他に、 &lt;code&gt;&quot;horizontalalignment&quot;&lt;/code&gt; と &lt;code&gt;&quot;verticalalignment&quot;&lt;/code&gt; を使用して、テキストをボックス内に配置することもできます。</target>
        </trans-unit>
        <trans-unit id="6a1df931d3a7fcda3eb6c9a88c55cd660b2924fa" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fftw&lt;/code&gt; function to generate and save wisdom. Using the utilities provided together with the &lt;small&gt;FFTW&lt;/small&gt; libraries (&lt;code&gt;fftw-wisdom&lt;/code&gt; on Unix systems), you can even add wisdom generated by Octave to the system-wide wisdom file.</source>
          <target state="translated">&lt;code&gt;fftw&lt;/code&gt; 関数を使用して、知恵を生成して保存します。&lt;small&gt;FFTW&lt;/small&gt;ライブラリと共に提供されるユーティリティ（UNIXシステムでは &lt;code&gt;fftw-wisdom&lt;/code&gt; ）を使用して、Octaveによって生成された知恵をシステム全体のwisdomファイルに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="178dc4171548dffa72bfecec2b4c233482bc1963" translate="yes" xml:space="preserve">
          <source>Use the Cholesky factorization of B. (default if &lt;var&gt;A&lt;/var&gt; is symmetric (Hermitian) and &lt;var&gt;B&lt;/var&gt; is symmetric (Hermitian) positive definite)</source>
          <target state="translated">Bのコレスキー分解を使用します（ &lt;var&gt;A&lt;/var&gt; が対称（エルミート）で、 &lt;var&gt;B&lt;/var&gt; が対称（エルミート）正定の場合のデフォルト）</target>
        </trans-unit>
        <trans-unit id="93864ea3e0ee1e46cc7071f091379cfc332dcbaa" translate="yes" xml:space="preserve">
          <source>Use the QZ algorithm. (used whenever &lt;var&gt;A&lt;/var&gt; or &lt;var&gt;B&lt;/var&gt; are not symmetric)</source>
          <target state="translated">QZアルゴリズムを使用します。（ &lt;var&gt;A&lt;/var&gt; または &lt;var&gt;B&lt;/var&gt; が対称でない場合は常に使用されます）</target>
        </trans-unit>
        <trans-unit id="a86311111875c92d698b87d50b4813d957478609" translate="yes" xml:space="preserve">
          <source>Use the gzip algorithm to compress the file. This works on files that are compressed with gzip outside of Octave, and gzip can also be used to convert the files for backward compatibility. This option is only available if Octave was built with a link to the zlib libraries.</source>
          <target state="translated">gzipアルゴリズムを使用してファイルを圧縮します。これは,Octaveの外部でgzipで圧縮されたファイルで動作し,後方互換性のためにファイルを変換するためにgzipを使用することもできます。このオプションは,Octaveがzlibライブラリへのリンクで構築されている場合にのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="632af614e02b09419ed5d35d423919206dc56633" translate="yes" xml:space="preserve">
          <source>Use the included &lt;small&gt;FFTPACK&lt;/small&gt; library for computing Fast Fourier Transforms instead of the &lt;small&gt;FFTW3&lt;/small&gt; library when operating on single precision (float) values.</source>
          <target state="translated">単精度（float）値を操作する場合は、&lt;small&gt;FFTW3&lt;/small&gt;ライブラリの代わりに、付属の&lt;small&gt;FFTPACK&lt;/small&gt;ライブラリを使用して高速フーリエ変換を計算します。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d6b2b3a74049e2f751314235dd5d9ae4ee1f2125" translate="yes" xml:space="preserve">
          <source>Use the included &lt;small&gt;FFTPACK&lt;/small&gt; library for computing Fast Fourier Transforms instead of the &lt;small&gt;FFTW3&lt;/small&gt; library.</source>
          <target state="translated">&lt;small&gt;FFTW3&lt;/small&gt;ライブラリの代わりに、付属の&lt;small&gt;FFTPACK&lt;/small&gt;ライブラリを使用して高速フーリエ変換を計算します。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0d778f859aa1dcf54d516b4601d4b26369c2a9ba" translate="yes" xml:space="preserve">
          <source>Use the package name &lt;var&gt;package&lt;/var&gt; or Octave to limit the listing to a desired component.</source>
          <target state="translated">リストを目的のコンポーネントに限定するには、パッケージ名 &lt;var&gt;package&lt;/var&gt; またはOctaveを使用します。</target>
        </trans-unit>
        <trans-unit id="70a508011f23aea1812880f8e8641bb6e191209b" translate="yes" xml:space="preserve">
          <source>Use the readline library to provide for editing of the command line in terminal environments. This option is on by default.</source>
          <target state="translated">ターミナル環境でコマンドラインの編集を行うために、リードラインライブラリを使用します。このオプションはデフォルトでオンになっています。</target>
        </trans-unit>
        <trans-unit id="c495bb1d30025d586f2668e5c40798af79ed4966" translate="yes" xml:space="preserve">
          <source>Use two-phase dual simplex, and if it fails, switch to the primal simplex.</source>
          <target state="translated">二相デュアルシンプレックスを使用し、失敗したらプライマルシンプレックスに切り替えます。</target>
        </trans-unit>
        <trans-unit id="2c29bc6a8ba0b2a91a060e281bfe792739acaf46" translate="yes" xml:space="preserve">
          <source>Use two-phase dual simplex.</source>
          <target state="translated">二相デュアルシンプレックスを使用します。</target>
        </trans-unit>
        <trans-unit id="c9cb612bd88dbdf40ce89107f7f9c496dfb08419" translate="yes" xml:space="preserve">
          <source>Use two-phase primal simplex.</source>
          <target state="translated">二相プリマルシンプレックスを使用します。</target>
        </trans-unit>
        <trans-unit id="964c605b1ab0c74f15e9696e137d26bda2ff59c6" translate="yes" xml:space="preserve">
          <source>User ID of file&amp;rsquo;s owner.</source>
          <target state="translated">ファイルの所有者のユーザーID。</target>
        </trans-unit>
        <trans-unit id="d869866a4817bc95e7dcc7e27def41c48093b72d" translate="yes" xml:space="preserve">
          <source>User-Defined Preferences</source>
          <target state="translated">ユーザー定義の環境設定</target>
        </trans-unit>
        <trans-unit id="6cd3be909847beb0291e90fccf60c063936659cd" translate="yes" xml:space="preserve">
          <source>User-defined Data Types</source>
          <target state="translated">ユーザー定義データ型</target>
        </trans-unit>
        <trans-unit id="3f0380965c08a38688a7ccb1db3f37c3f5a6f4ae" translate="yes" xml:space="preserve">
          <source>User-defined data to associate with the graphics object.</source>
          <target state="translated">グラフィックスオブジェクトに関連付けるユーザー定義のデータ。</target>
        </trans-unit>
        <trans-unit id="d9b869e2d0fc8a470e332e1be4a28818cf0bde2f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;java-interface-functions#XREFisjava&quot;&gt;isjava&lt;/a&gt;, it is possible to check whether a variable is a Java object and its class can be determined as well. In addition to the previous example:</source>
          <target state="translated">&lt;a href=&quot;java-interface-functions#XREFisjava&quot;&gt;isjava&lt;/a&gt;を使用すると、変数がJavaオブジェクトであるかどうかを確認でき、そのクラスも決定できます。前の例に加えて：</target>
        </trans-unit>
        <trans-unit id="705ae1d21f8a9ae183e4e9eefc6de0735ba279f2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;dbstep in&lt;/code&gt; will cause execution of the next line to step into any m-files defined on the next line.</source>
          <target state="translated">&lt;code&gt;dbstep in&lt;/code&gt; を使用すると、次の行が実行され、次の行で定義されているmファイルにステップインします。</target>
        </trans-unit>
        <trans-unit id="15fc4f456dbd053da29e28c4d7bbf241fe2f9455" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;dbstep out&lt;/code&gt; will cause execution to continue until the current function returns.</source>
          <target state="translated">&lt;code&gt;dbstep out&lt;/code&gt; を使用すると、現在の関数が戻るまで実行が続行されます。</target>
        </trans-unit>
        <trans-unit id="c673b98e7a78bc34931556e31f2790d58e0a2deb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;publish (&lt;var&gt;file&lt;/var&gt;, &lt;var&gt;output_format&lt;/var&gt;)&lt;/code&gt; is equivalent to the function call using a structure</source>
          <target state="translated">使用して &lt;code&gt;publish (&lt;var&gt;file&lt;/var&gt;, &lt;var&gt;output_format&lt;/var&gt;)&lt;/code&gt; 構造を使用して関数呼び出しと同等です</target>
        </trans-unit>
        <trans-unit id="a066825bfc4237b320cee2f4d8f802040fb3f699" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;quadgk&lt;/code&gt; in the example below, a double integration can be performed. (Note that any of the 1-D quadrature functions can be used in this fashion except for &lt;code&gt;quad&lt;/code&gt; since it is written in Fortran and cannot be called recursively.)</source>
          <target state="translated">以下の例で &lt;code&gt;quadgk&lt;/code&gt; を使用すると、二重積分を実行できます。（ &lt;code&gt;quad&lt;/code&gt; を除いて、1-D求積関数はFortranで記述されており、再帰的に呼び出すことができないため、この方法で使用できます。）</target>
        </trans-unit>
        <trans-unit id="af984b2184e30a490dcce136c877ecd629f46590" translate="yes" xml:space="preserve">
          <source>Using Packages</source>
          <target state="translated">パッケージの使用</target>
        </trans-unit>
        <trans-unit id="37063b833ff56f48219796db374c71a9fbaa347f" translate="yes" xml:space="preserve">
          <source>Using Publishing Markup in Script Files</source>
          <target state="translated">スクリプトファイルでのパブリッシングマークアップの使用</target>
        </trans-unit>
        <trans-unit id="58b26d26e0baec90054be9d5c0e8f0944aceeb13" translate="yes" xml:space="preserve">
          <source>Using Sparse Matrices</source>
          <target state="translated">疎行列の使用</target>
        </trans-unit>
        <trans-unit id="45b7be92ae1423421a9275acb2b98fa65e0e4187" translate="yes" xml:space="preserve">
          <source>Using Sparse Matrices in Oct-Files</source>
          <target state="translated">Oct-Fileでのスパース行列の使用法</target>
        </trans-unit>
        <trans-unit id="1aa46225eba8ca89d2ffb1f5134dcb2dd69ec707" translate="yes" xml:space="preserve">
          <source>Using a first order FEM, we approximate the electrical conductivity distribution in Omega as constant on each simplex (represented by the vector &lt;code&gt;conductivity&lt;/code&gt;). Based on the finite element geometry, we first calculate a system (or stiffness) matrix for each simplex (represented as 3-by-3 elements on the diagonal of the element-wise system matrix &lt;code&gt;SE&lt;/code&gt;). Based on &lt;code&gt;SE&lt;/code&gt; and a N-by-DE connectivity matrix &lt;code&gt;C&lt;/code&gt;, representing the connections between simplices and vertices, the global connectivity matrix &lt;code&gt;S&lt;/code&gt; is calculated.</source>
          <target state="translated">1次FEMを使用して、オメガの導電率分布を各シンプレックスの定数として概算します（ベクトル &lt;code&gt;conductivity&lt;/code&gt; 表されます）。有限要素ジオメトリに基づいて、最初に各シンプレックスのシステム（または剛性）行列を計算します（要素ごとのシステム行列 &lt;code&gt;SE&lt;/code&gt; の対角線上の3行3列の要素として表されます）。 &lt;code&gt;SE&lt;/code&gt; と、シンプレックスと頂点の間の接続を表すN行DE列の接続行列 &lt;code&gt;C&lt;/code&gt; に基づいて、グローバル接続行列 &lt;code&gt;S&lt;/code&gt; が計算されます。</target>
        </trans-unit>
        <trans-unit id="87ff81b8fa01ff5cc9f640ba773dfd125a8f1938" translate="yes" xml:space="preserve">
          <source>Using classes to build new classes is supported by Octave through the use of both inheritance and aggregation.</source>
          <target state="translated">新しいクラスを構築するためにクラスを使用することは,継承と集約の両方を使用してOctaveでサポートされています。</target>
        </trans-unit>
        <trans-unit id="8d8daf2571ad5958a7ce76ca8eb0cbecd9d73a8c" translate="yes" xml:space="preserve">
          <source>Using just one number, such as the mean, to represent an entire data set may not give an accurate picture of the data. One way to characterize the fit is to measure the dispersion of the data. Octave provides several functions for measuring dispersion.</source>
          <target state="translated">データセット全体を表すために平均値のような1つの数値だけを使用しても、データの正確な画像が得られない場合があります。適合を特徴づける1つの方法は,データの分散を測定することです。Octaveは分散を測定するためのいくつかの関数を提供しています。</target>
        </trans-unit>
        <trans-unit id="34625b6ffe5d09779c6241c85c135333070330d4" translate="yes" xml:space="preserve">
          <source>Using the &amp;lsquo;</source>
          <target state="translated">「を使用して</target>
        </trans-unit>
        <trans-unit id="3b403dfed4b3fbb780df3846b4ba5f498805f6ca" translate="yes" xml:space="preserve">
          <source>Using zero as an increment in the colon notation, as &lt;code&gt;1:0:1&lt;/code&gt; is not allowed, because a division by zero would occur in determining the number of range elements. However, ranges with zero increment (i.e., all elements equal) are useful, especially in indexing, and Octave allows them to be constructed using the built-in function &lt;code&gt;ones&lt;/code&gt;. Note that because a range must be a row vector, &lt;code&gt;ones (1, 10)&lt;/code&gt; produces a range, while &lt;code&gt;ones (10, 1)&lt;/code&gt; does not.</source>
          <target state="translated">範囲要素の数を決定する際にゼロによる除算が発生するため、 &lt;code&gt;1:0:1&lt;/code&gt; のように、コロン表記の増分としてゼロを使用することはできません。ただし、増分が0の範囲（つまり、すべての要素が等しい）は、特にインデックス作成に役立ちます。Octaveでは、組み込み関数 &lt;code&gt;ones&lt;/code&gt; を使用して範囲を構築できます。範囲は、行ベクトルでなければならないので、そのノート &lt;code&gt;ones (1, 10)&lt;/code&gt; の範囲を生成し、一方 &lt;code&gt;ones (10, 1)&lt;/code&gt; ありません。</target>
        </trans-unit>
        <trans-unit id="395cb7ac7348436581ca3432b9d29a2880c5e083" translate="yes" xml:space="preserve">
          <source>Usually Octave will manage the memory, but sometimes it can be practical to remove variables from memory manually. This is usually needed when working with large variables that fill a substantial part of the memory. On a computer that uses the IEEE floating point format, the following program allocates a matrix that requires around 128 MB memory.</source>
          <target state="translated">通常,Octaveはメモリを管理しますが,時には手動でメモリから変数を削除することが実用的な場合もあります。これは,通常,メモリのかなりの部分を埋める大きな変数を扱う場合に必要です。IEEE浮動小数点フォーマットを使用するコンピュータでは,以下のプログラムは,約128 MBのメモリを必要とする行列を割り当てます。</target>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="translated">ユーティリティ機能</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="6a5d2de0b79911d1458325b1a51447cf1d0db2b4" translate="yes" xml:space="preserve">
          <source>Valid &lt;var&gt;key&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; pairs are:</source>
          <target state="translated">有効な &lt;var&gt;key&lt;/var&gt; と &lt;var&gt;value&lt;/var&gt; ペアは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="13182ff3e08aab3361f693667e8dcb74887661ed" translate="yes" xml:space="preserve">
          <source>Valid annotation types and their specific properties are described below:</source>
          <target state="translated">有効な注釈タイプとその特定のプロパティを以下に説明します。</target>
        </trans-unit>
        <trans-unit id="7d1f4870038d7cf81ccd51d08da1417f970ff2b2" translate="yes" xml:space="preserve">
          <source>Valid argument name, but ignored. Left for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">引数名は有効ですが、無視されました。&lt;small&gt;MATLAB&lt;/small&gt;との互換性のために残されています。</target>
        </trans-unit>
        <trans-unit id="3171e3b93408d08fcdaca0fd893752b2e6b77e3d" translate="yes" xml:space="preserve">
          <source>Valid arguments for &lt;var&gt;type&lt;/var&gt; are</source>
          <target state="translated">&lt;var&gt;type&lt;/var&gt; 有効な引数は</target>
        </trans-unit>
        <trans-unit id="7551da498d0ef060fe8d63ef855ebf37b74ac651" translate="yes" xml:space="preserve">
          <source>Valid filetype extensions:</source>
          <target state="translated">有効なファイルタイプ拡張子。</target>
        </trans-unit>
        <trans-unit id="3b089b3e5e3d6bc5af0a709991d48fb144d30543" translate="yes" xml:space="preserve">
          <source>Valid formats for floating point numbers are listed in the following table.</source>
          <target state="translated">浮動小数点数の有効なフォーマットを以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="c480965357466d29d7070e0a855321899877d8a8" translate="yes" xml:space="preserve">
          <source>Valid indices are either positive integers (although possibly of real data type), or logical arrays.</source>
          <target state="translated">有効なインデックスは、正の整数(実データ型の可能性もありますが)か論理配列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="123ee2fdc2efc6c40bcd8dcd85325f7aa9fb54a9" translate="yes" xml:space="preserve">
          <source>Valid options are:</source>
          <target state="translated">有効なオプションは</target>
        </trans-unit>
        <trans-unit id="4c15f10cc48f2360e7750c09307868d78d11667a" translate="yes" xml:space="preserve">
          <source>Valid options for &lt;code&gt;load&lt;/code&gt; are listed in the following table.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 有効なオプションを次の表に示します。</target>
        </trans-unit>
        <trans-unit id="a650167421f09e9606b04e7b9aafe05d8b9092f5" translate="yes" xml:space="preserve">
          <source>Valid options for the &lt;code&gt;save&lt;/code&gt; command are listed in the following table. Options that modify the output format override the format specified by &lt;code&gt;save_default_options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; コマンドの有効なオプションを次の表に示します。出力形式を変更するオプションは、 &lt;code&gt;save_default_options&lt;/code&gt; で指定された形式をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="7036f227274f2da9fc72b35ee54b3299893b720d" translate="yes" xml:space="preserve">
          <source>Valid parameters are:</source>
          <target state="translated">有効なパラメータは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="59b95219725d48889242f1a8136ebe784276218c" translate="yes" xml:space="preserve">
          <source>Valid pattern syntax is the same as described for the &lt;code&gt;clear&lt;/code&gt; command. If no patterns are supplied, all variables are listed.</source>
          <target state="translated">有効なパターン構文は、 &lt;code&gt;clear&lt;/code&gt; コマンドで説明したものと同じです。パターンが指定されていない場合、すべての変数がリストされます。</target>
        </trans-unit>
        <trans-unit id="cb1d545cc82828c7c0bdc2b86a77aabaccb9096f" translate="yes" xml:space="preserve">
          <source>Valid styles for uicontrol are:</source>
          <target state="translated">uicontrolで有効なスタイルは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="ecba74e32beb8c420920d690734ab1699a9bbfb3" translate="yes" xml:space="preserve">
          <source>Valid values for &lt;var&gt;orientation&lt;/var&gt; are &lt;code&gt;&quot;portrait&quot;&lt;/code&gt;, &lt;code&gt;&quot;landscape&quot;&lt;/code&gt;, and &lt;code&gt;&quot;tall&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;orientation&lt;/var&gt; 有効な値は、 &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;landscape&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;tall&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="560315ec81e0dafe8e9d36882afad9b1c1048c4a" translate="yes" xml:space="preserve">
          <source>Value Classes vs. Handle Classes</source>
          <target state="translated">値クラスとハンドルクラス</target>
        </trans-unit>
        <trans-unit id="fea2433a27294f172e09384e561fc5b5ac92fbc3" translate="yes" xml:space="preserve">
          <source>Value is a 1x8 Matrix with the x,y chromaticity values for white, red, green, and blue points, in that order.</source>
          <target state="translated">値は、白点、赤点、緑点、青点のx,y色度の値を持つ1x8マトリクスで、この順番になります。</target>
        </trans-unit>
        <trans-unit id="de122bdfe0a3137e2639218255d65d9f606c4c66" translate="yes" xml:space="preserve">
          <source>Value is a diagonal matrix.</source>
          <target state="translated">値は対角行列です。</target>
        </trans-unit>
        <trans-unit id="ea0616b80a505ea5580d50478724758cdfd953c3" translate="yes" xml:space="preserve">
          <source>Value to return for empty numeric values in non-whitespace delimited data. The default is NaN. When the data type does not support NaN (int32 for example), then default is zero.</source>
          <target state="translated">非空白で区切られたデータの空の数値に対して返す値。デフォルトはNaNです。データ型がNaNをサポートしていない場合(例えばint32)、デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="b0baf0efd1ba53cf2cd047ef828d0775507afef6" translate="yes" xml:space="preserve">
          <source>Value to return for empty numeric values in non-whitespace delimited data. The default is NaN. When the data type does not support NaN (int32 for example), then the default is zero.</source>
          <target state="translated">非空白で区切られたデータの空の数値に対して返す値。デフォルトはNaNです。データ型がNaNをサポートしていない場合(例えばint32)、デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="3caee89e422d8b14349dfd91179d68f5bf83f941" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single column.</source>
          <target state="translated">値は1列に配置されています。</target>
        </trans-unit>
        <trans-unit id="6b05271f29360283ea57832481b5d2414e24da34" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single row.</source>
          <target state="translated">値が一列に並んでいます。</target>
        </trans-unit>
        <trans-unit id="bea8d5e308edcad1aa41d1eaa8c1da30651c7a09" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single vector (column or vector).</source>
          <target state="translated">値は単一のベクトル(列またはベクトル)に配置されています。</target>
        </trans-unit>
        <trans-unit id="7abecc70ce621891ed365aa4fe0e0c15db5a2f6d" translate="yes" xml:space="preserve">
          <source>Values are cast to double.</source>
          <target state="translated">値はダブルキャストされます。</target>
        </trans-unit>
        <trans-unit id="7335ad719780d655a19cae00aef676f04b1b897b" translate="yes" xml:space="preserve">
          <source>Variable in local scope</source>
          <target state="translated">ローカルスコープ内の変数</target>
        </trans-unit>
        <trans-unit id="aa7ff342d87790ec00ab223d9572f4bf32f49c70" translate="yes" xml:space="preserve">
          <source>Variable inheritance leads to a problem for &lt;code&gt;eval&lt;/code&gt; and scripts. If a new variable is created in a parent function, it is not clear what should happen in nested child functions. For example, consider a parent function &lt;code&gt;foo&lt;/code&gt; with a nested child function &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">変数の継承は &lt;code&gt;eval&lt;/code&gt; とスクリプトの問題につながります。親関数で新しい変数が作成された場合、ネストされた子関数で何が起こるかは明確ではありません。たとえば、ネストされた子関数 &lt;code&gt;bar&lt;/code&gt; を持つ親関数 &lt;code&gt;foo&lt;/code&gt; を考えます。</target>
        </trans-unit>
        <trans-unit id="39232a9bb6d29d0ddc4ece303bfd34215b99c76f" translate="yes" xml:space="preserve">
          <source>Variable is either 6 or 7</source>
          <target state="translated">変数は6または7のいずれか</target>
        </trans-unit>
        <trans-unit id="4f921c45e3d6f1dfe800d0b286b0c3e665d98ac8" translate="yes" xml:space="preserve">
          <source>Variable of complex type.</source>
          <target state="translated">複合型の変数。</target>
        </trans-unit>
        <trans-unit id="4b64410ac0390ce8fe1c8c3fe239ab494e8ce014" translate="yes" xml:space="preserve">
          <source>Variable with global scope.</source>
          <target state="translated">グローバルスコープを持つ変数。</target>
        </trans-unit>
        <trans-unit id="dc1a40fb65a9f98813fbe2e15dddb14ad8d21fc5" translate="yes" xml:space="preserve">
          <source>Variable-length Argument Lists</source>
          <target state="translated">可変長引数リスト</target>
        </trans-unit>
        <trans-unit id="ec54138d6ad78a448eaa5e53cb1c539e6baf44a9" translate="yes" xml:space="preserve">
          <source>Variable-length Return Lists</source>
          <target state="translated">可変長のリターンリスト</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="a6572dd5d3ba28ab74d38e34c8b53b8587adb9e8" translate="yes" xml:space="preserve">
          <source>Variables in Octave do not have fixed types, so it is possible to first store a numeric value in a variable and then to later use the same name to hold a string value in the same program. Variables may not be used before they have been given a value. Doing so results in an error.</source>
          <target state="translated">Octaveの変数は固定型を持っていないので,最初に数値を変数に格納し,その後,同じプログラムの中で同じ名前を使って文字列の値を保持することが可能です。変数は値が与えられる前に使用することはできません。これを行うとエラーになります。</target>
        </trans-unit>
        <trans-unit id="8d531727f10a370fe03501ccab4d5a456f1c2e5b" translate="yes" xml:space="preserve">
          <source>Variables let you give names to values and refer to them later. You have already seen variables in many of the examples. The name of a variable must be a sequence of letters, digits and underscores, but it may not begin with a digit. Octave does not enforce a limit on the length of variable names, but it is seldom useful to have variables with names longer than about 30 characters. The following are all valid variable names</source>
          <target state="translated">変数を使用すると、値に名前を付けて後で参照することができます。すでに多くの例で変数を見たことがあるでしょう。変数の名前は、文字、数字、アンダースコアの連続でなければなりませんが、数字で始まってはいけません。Octaveは変数名の長さに制限を課していませんが、約30文字より長い名前の変数を持つことはめったにありません。以下にすべての有効な変数名を示します。</target>
        </trans-unit>
        <trans-unit id="1acba110170dc557bfef24339e229d77929d8eb3" translate="yes" xml:space="preserve">
          <source>Variables used in the body of a function are local to the function. Variables named in &lt;var&gt;arg-list&lt;/var&gt; and &lt;var&gt;ret-var&lt;/var&gt; are also local to the function. See &lt;a href=&quot;global-variables#Global-Variables&quot;&gt;Global Variables&lt;/a&gt;, for information about how to access global variables inside a function.</source>
          <target state="translated">関数の本体で使用される変数は、関数に対してローカルです。 &lt;var&gt;arg-list&lt;/var&gt; と &lt;var&gt;ret-var&lt;/var&gt; で指定された変数も関数に対してローカルです。関数内のグローバル変数にアクセスする方法については、&lt;a href=&quot;global-variables#Global-Variables&quot;&gt;グローバル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="44957886e63e8fb6234dceff776611e3b84a79d9" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[X0 Y0 Z0]&lt;/code&gt; where X0, Y0 and Z0 indicate the position of the text anchor as defined by &lt;code&gt;verticalalignment&lt;/code&gt; and &lt;code&gt;horizontalalignment&lt;/code&gt;.</source>
          <target state="translated">ベクトル &lt;code&gt;[X0 Y0 Z0]&lt;/code&gt; ここで、X0、Y0、およびZ0は、 &lt;code&gt;verticalalignment&lt;/code&gt; および &lt;code&gt;horizontalalignment&lt;/code&gt; 定義されたテキストアンカーの位置を示します。</target>
        </trans-unit>
        <trans-unit id="97f54acbd6e7286e089af944589f3dec2394d6f3" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[left bottom width height]&lt;/code&gt; defining the position and size of the figure (in &lt;code&gt;paperunits&lt;/code&gt; units) on the printed page. The position &lt;code&gt;[left bottom]&lt;/code&gt; defines the lower left corner of the figure on the page, and the size is defined by &lt;code&gt;[width height]&lt;/code&gt;. For output formats not implicitly rendered on paper, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; define the size of the image and the position information is ignored. Setting &lt;code&gt;paperposition&lt;/code&gt; also forces the &lt;code&gt;paperpositionmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">印刷されたページ上の図の位置とサイズを定義するベクトル &lt;code&gt;[left bottom width height]&lt;/code&gt; （ &lt;code&gt;paperunits&lt;/code&gt; 単位）。位置 &lt;code&gt;[left bottom]&lt;/code&gt; はページ上の図の左下隅を定義し、サイズは &lt;code&gt;[width height]&lt;/code&gt; によって定義されます。暗黙的に紙にレンダリングされない出力フォーマットの場合、 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; はイメージのサイズを定義し、位置情報は無視されます。 &lt;code&gt;paperposition&lt;/code&gt; を設定すると、 &lt;code&gt;paperpositionmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="2aa1d9038ff8a2dab6e94ca0b40bf554d7acbe74" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[width height]&lt;/code&gt; defining the size of the paper for printing. Setting the &lt;code&gt;papersize&lt;/code&gt; property to a value, not associated with one of the defined &lt;code&gt;papertypes&lt;/code&gt; and consistent with the setting for &lt;code&gt;paperorientation&lt;/code&gt;, forces the &lt;code&gt;papertype&lt;/code&gt; property to the value &lt;code&gt;&quot;&amp;lt;custom&amp;gt;&quot;&lt;/code&gt;. If &lt;code&gt;papersize&lt;/code&gt; is set to a value associated with a supported &lt;code&gt;papertype&lt;/code&gt; and consistent with the &lt;code&gt;paperorientation&lt;/code&gt;, the &lt;code&gt;papertype&lt;/code&gt; value is modified to the associated value.</source>
          <target state="translated">印刷する用紙のサイズを定義するベクトル &lt;code&gt;[width height]&lt;/code&gt; 。定義された &lt;code&gt;papertypes&lt;/code&gt; 1つに関連付けられておらず、 &lt;code&gt;paperorientation&lt;/code&gt; の設定と一致しない値に &lt;code&gt;papersize&lt;/code&gt; プロパティを設定すると、papertypeプロパティは &lt;code&gt;papertype&lt;/code&gt; 的に値 &lt;code&gt;&quot;&amp;lt;custom&amp;gt;&quot;&lt;/code&gt; になります。場合 &lt;code&gt;papersize&lt;/code&gt; サポートされているに関連付けられた値に設定されている &lt;code&gt;papertype&lt;/code&gt; とと一致 &lt;code&gt;paperorientation&lt;/code&gt; 、 &lt;code&gt;papertype&lt;/code&gt; 値は、関連する値に変更されます。</target>
        </trans-unit>
        <trans-unit id="67699038122522bc2797537c29ca192d7af648ab" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[x0 y0 width height]&lt;/code&gt; indicating the size and location of the text string.</source>
          <target state="translated">テキスト文字列のサイズと位置を示すベクトル &lt;code&gt;[x0 y0 width height]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c53abc884f54defa3ea68e7e4522b307846ca54a" translate="yes" xml:space="preserve">
          <source>Vector Formats</source>
          <target state="translated">ベクター形式</target>
        </trans-unit>
        <trans-unit id="0ad23280346c75fb000d733c0d2ee44f5a061494" translate="yes" xml:space="preserve">
          <source>Vector of the x-locations of the constraints.</source>
          <target state="translated">制約のx位置のベクトル。</target>
        </trans-unit>
        <trans-unit id="fe571c6e6beb571f8c03c757ff0aa2d3e93d7c04" translate="yes" xml:space="preserve">
          <source>Vector of x data to be plotted.</source>
          <target state="translated">プロットするxデータのベクトル。</target>
        </trans-unit>
        <trans-unit id="897e5b459141a66fb93741f122af3945d7a86aeb" translate="yes" xml:space="preserve">
          <source>Vector of y data to be plotted.</source>
          <target state="translated">プロットする y データのベクトル。</target>
        </trans-unit>
        <trans-unit id="fa4cb8c084fa4f18a1fb16f8ff06d0277fea0a62" translate="yes" xml:space="preserve">
          <source>Vector of z data to be plotted.</source>
          <target state="translated">プロットされる z データのベクトル。</target>
        </trans-unit>
        <trans-unit id="b364f229fad911735ff66df179b4739ee434117d" translate="yes" xml:space="preserve">
          <source>Vectorization and Faster Code Execution</source>
          <target state="translated">ベクタライズとコード実行の高速化</target>
        </trans-unit>
        <trans-unit id="30e078f2b8dd5d172495b6d91ae09398ccb51d5c" translate="yes" xml:space="preserve">
          <source>Vectorization is a programming technique that uses vector operations instead of element-by-element loop-based operations. Besides frequently producing more succinct Octave code, vectorization also allows for better optimization in the subsequent implementation. The optimizations may occur either in Octave&amp;rsquo;s own Fortran, C, or C++ internal implementation, or even at a lower level depending on the compiler and external numerical libraries used to build Octave. The ultimate goal is to make use of your hardware&amp;rsquo;s vector instructions if possible or to perform other optimizations in software.</source>
          <target state="translated">ベクトル化は、要素ごとのループベースの演算ではなく、ベクトル演算を使用するプログラミング手法です。より簡潔なOctaveコードを頻繁に生成することに加えて、ベクトル化により、後続の実装での最適化が向上します。Octave独自のFortran、C、またはC ++内部実装、またはOctaveのビルドに使用されるコンパイラーおよび外部数値ライブラリーに応じてより低いレベルでさえ、最適化が発生する可能性があります。最終的な目標は、可能であればハードウェアのベクトル命令を利用するか、ソフトウェアで他の最適化を実行することです。</target>
        </trans-unit>
        <trans-unit id="d695d1236e1c651e8339eaef4a93939bcc52add0" translate="yes" xml:space="preserve">
          <source>Vectorization is not a concept unique to Octave, but it is particularly important because Octave is a matrix-oriented language. Vectorized Octave code will see a dramatic speed up (10X&amp;ndash;100X) in most cases.</source>
          <target state="translated">ベクトル化はOctaveに固有の概念ではありませんが、Octaveは行列指向の言語であるため、特に重要です。ベクトル化されたOctaveコードは、ほとんどの場合、劇的なスピードアップ（10X〜100X）を示します。</target>
        </trans-unit>
        <trans-unit id="eb0af7e607a41324c9b4fb8ff3889109f3420c49" translate="yes" xml:space="preserve">
          <source>Vectorization is the preferred technique for eliminating loops and speeding up code. Nevertheless, it is not always possible to replace every loop. In such situations it may be worth trying Octave&amp;rsquo;s &lt;strong&gt;experimental&lt;/strong&gt; Just-In-Time (JIT) compiler.</source>
          <target state="translated">ベクトル化は、ループを排除してコードを高速化するための推奨手法です。それにもかかわらず、すべてのループを交換することが常に可能であるとは限りません。そのような状況では、Octaveの&lt;strong&gt;実験的な&lt;/strong&gt; Just-In-Time（JIT）コンパイラを試す価値があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="cfc0de63a87d87b4d6a24bb59c00ffe547bc8062" translate="yes" xml:space="preserve">
          <source>Vectorized arithmetic</source>
          <target state="translated">ベクトル化された演算</target>
        </trans-unit>
        <trans-unit id="906c0839a0ca512e1dfed0330564f49decf915ef" translate="yes" xml:space="preserve">
          <source>Vectors and matrices are the basic building blocks for numerical analysis. To create a new matrix and store it in a variable so that you can refer to it later, type the command</source>
          <target state="translated">ベクトルと行列は,数値解析の基本的な構成要素です.新しい行列を作成して変数に格納し、後で参照できるようにするには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="8b7269fd52b69344cd4968a81696c09d1777f236" translate="yes" xml:space="preserve">
          <source>Verify that &lt;var&gt;str&lt;/var&gt; is an element, or substring of an element, in &lt;var&gt;strarray&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;str&lt;/var&gt; が &lt;var&gt;strarray&lt;/var&gt; の要素または要素の部分文字列であることを確認します。</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="f28423aaef9c47032fe0ca2dabfc79f89b9a394e" translate="yes" xml:space="preserve">
          <source>Version of the package.</source>
          <target state="translated">パッケージのバージョン。</target>
        </trans-unit>
        <trans-unit id="c7b9f12a190027c01c17052262e20d68fec7db28" translate="yes" xml:space="preserve">
          <source>Version of the package. A package version must be 3 numbers separated by dots.</source>
          <target state="translated">パッケージのバージョン。パッケージのバージョンは、ドットで区切られた3つの数字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0e5bd7fc6a6706c0cd191404a654c5b501da8680" translate="yes" xml:space="preserve">
          <source>Vertex normals are used for lighting the edges or faces if the &lt;code&gt;edgelighting&lt;/code&gt; or &lt;code&gt;facelighting&lt;/code&gt; properties are set to &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;. Setting &lt;code&gt;vertexnormals&lt;/code&gt; also forces the &lt;code&gt;vertexnormalsmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;</source>
          <target state="translated">頂点法線は、 &lt;code&gt;facelighting&lt;/code&gt; またはfacelightingプロパティが &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; gouraud &quot;に設定されている場合、 &lt;code&gt;edgelighting&lt;/code&gt; または面のライティングに使用されます。 &lt;code&gt;vertexnormals&lt;/code&gt; を設定すると、 &lt;code&gt;vertexnormalsmode&lt;/code&gt; プロパティも強制的に &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 設定されます</target>
        </trans-unit>
        <trans-unit id="56b84d353d030d76594610924975f8ee4b318fcd" translate="yes" xml:space="preserve">
          <source>Vertical concatenation</source>
          <target state="translated">垂直連結</target>
        </trans-unit>
        <trans-unit id="679fc22f6747c468b572db6cb37e1452c05bfa2d" translate="yes" xml:space="preserve">
          <source>Via &lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt; one may create all kinds of Java objects but arrays. The latter are created through &lt;a href=&quot;java-interface-functions#XREFjavaArray&quot;&gt;javaArray&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObjectを&lt;/a&gt;介して、配列以外のすべての種類のJavaオブジェクトを作成できます。後者は&lt;a href=&quot;java-interface-functions#XREFjavaArray&quot;&gt;javaArray&lt;/a&gt;を通じて作成されます。</target>
        </trans-unit>
        <trans-unit id="e081ddeebc0690e5ed15d32123395a1da2626bfd" translate="yes" xml:space="preserve">
          <source>Voronoi Diagrams</source>
          <target state="translated">ボロノイ図鑑</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="140917b714ce92e12d625053d6439ef7f783033e" translate="yes" xml:space="preserve">
          <source>W. Gautschi,</source>
          <target state="translated">W.ガウッチー</target>
        </trans-unit>
        <trans-unit id="8104eece38fcafda62ae9771ed3a38d5235875ca" translate="yes" xml:space="preserve">
          <source>W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery,</source>
          <target state="translated">W.H.プレス、S.A.テイコルスキー、W.T.ベッターリング、B.P.フラナリー。</target>
        </trans-unit>
        <trans-unit id="e1bd81fd4e7add04c8589e9082d43b35cc08cbfe" translate="yes" xml:space="preserve">
          <source>W.H. Press, et al.,</source>
          <target state="translated">W.H.プレス、他...</target>
        </trans-unit>
        <trans-unit id="e1de3c1bc26c3633d304b416268f343189478036" translate="yes" xml:space="preserve">
          <source>WAV file</source>
          <target state="translated">WAVファイル</target>
        </trans-unit>
        <trans-unit id="064d699833935c584387ceca7de7f7ccdbec1825" translate="yes" xml:space="preserve">
          <source>WCONTINUE</source>
          <target state="translated">WCONTINUE</target>
        </trans-unit>
        <trans-unit id="076b297a10e9e8ac4bd3118b5753a370ada58faf" translate="yes" xml:space="preserve">
          <source>WCONTINUE ()</source>
          <target state="translated">WCONTINUE ()</target>
        </trans-unit>
        <trans-unit id="c29ccc7ab63074d02e790522a29d34b4c915cf86" translate="yes" xml:space="preserve">
          <source>WCOREDUMP</source>
          <target state="translated">WCOREDUMP</target>
        </trans-unit>
        <trans-unit id="fde9ddb1c6ad423eadc29a88cd1e19ebd6d9b9eb" translate="yes" xml:space="preserve">
          <source>WCOREDUMP (status)</source>
          <target state="translated">ワールドワイドダンプ(状態)</target>
        </trans-unit>
        <trans-unit id="2bf1b97f2fc5265d0f7b0dd544056c7b69c3408a" translate="yes" xml:space="preserve">
          <source>WEXITSTATUS</source>
          <target state="translated">WEXITSTATUS</target>
        </trans-unit>
        <trans-unit id="2b200a6a1fb94ab463527efea9a6730322fb6a43" translate="yes" xml:space="preserve">
          <source>WEXITSTATUS (status)</source>
          <target state="translated">WEXITSTATUS</target>
        </trans-unit>
        <trans-unit id="cb30a8ff398e22c99931f32ecedf848a74b0149b" translate="yes" xml:space="preserve">
          <source>WIFCONTINUED</source>
          <target state="translated">WIFCONTINUED</target>
        </trans-unit>
        <trans-unit id="1302bcfb606a59a19245c066605aa0cc267f9579" translate="yes" xml:space="preserve">
          <source>WIFCONTINUED (status)</source>
          <target state="translated">ワイフコンティニュー中</target>
        </trans-unit>
        <trans-unit id="43044f54881faf0daf8e7ae1041687abfeebf5cb" translate="yes" xml:space="preserve">
          <source>WIFEXITED</source>
          <target state="translated">WIFEXITED</target>
        </trans-unit>
        <trans-unit id="c3b70e377fbf9ce88eb16148aed6d6f6a04062a1" translate="yes" xml:space="preserve">
          <source>WIFEXITED (status)</source>
          <target state="translated">ワイファイエグゼキューテッド</target>
        </trans-unit>
        <trans-unit id="b38ae0ecf527f08e52210be925bf7bff13828dda" translate="yes" xml:space="preserve">
          <source>WIFSIGNALED</source>
          <target state="translated">WIFSIGNALED</target>
        </trans-unit>
        <trans-unit id="9e27a2a79367ed2139ec8712afcd5d01b5f2446d" translate="yes" xml:space="preserve">
          <source>WIFSIGNALED (status)</source>
          <target state="translated">ワイフシグナライズド</target>
        </trans-unit>
        <trans-unit id="831f27b69c3adbdd25e1ac1a506c0b83abecbf5a" translate="yes" xml:space="preserve">
          <source>WIFSTOPPED</source>
          <target state="translated">WIFSTOPPED</target>
        </trans-unit>
        <trans-unit id="7423ab81504b5f4611464b67ad44073f196add4c" translate="yes" xml:space="preserve">
          <source>WIFSTOPPED (status)</source>
          <target state="translated">ワイフストップ</target>
        </trans-unit>
        <trans-unit id="2e31950e28a56c4fe6e7025b187b2fd4fefe4871" translate="yes" xml:space="preserve">
          <source>WINDOWS</source>
          <target state="translated">WINDOWS</target>
        </trans-unit>
        <trans-unit id="24c16f3291fd5a896a52fda5bcd7de9db4347df5" translate="yes" xml:space="preserve">
          <source>WNOHANG</source>
          <target state="translated">WNOHANG</target>
        </trans-unit>
        <trans-unit id="b09a74f262b47843101d1ab0729eff20f8aa8aae" translate="yes" xml:space="preserve">
          <source>WNOHANG ()</source>
          <target state="translated">ウーノハン()</target>
        </trans-unit>
        <trans-unit id="afd661bac1a8453aa3fae2861aaefbd7cafed675" translate="yes" xml:space="preserve">
          <source>WSTOPSIG</source>
          <target state="translated">WSTOPSIG</target>
        </trans-unit>
        <trans-unit id="a72d916fcdbfad9c081cb6dbe6baee55ab64a905" translate="yes" xml:space="preserve">
          <source>WSTOPSIG (status)</source>
          <target state="translated">WSTOPSIG</target>
        </trans-unit>
        <trans-unit id="62f4cb0ba7a925a5af714a1b21832001dffc25f5" translate="yes" xml:space="preserve">
          <source>WTERMSIG</source>
          <target state="translated">WTERMSIG</target>
        </trans-unit>
        <trans-unit id="000db3610bd3c8f4fcec8cbac8a287cecacbd71e" translate="yes" xml:space="preserve">
          <source>WTERMSIG (status)</source>
          <target state="translated">WTERMSIG</target>
        </trans-unit>
        <trans-unit id="030716508efb8b454e7fc70f999cc9c2690237e9" translate="yes" xml:space="preserve">
          <source>WUNTRACED</source>
          <target state="translated">WUNTRACED</target>
        </trans-unit>
        <trans-unit id="28435378a70e9f5ca97472f94b7f1db01d443bc1" translate="yes" xml:space="preserve">
          <source>WUNTRACED ()</source>
          <target state="translated">ウントラックド()</target>
        </trans-unit>
        <trans-unit id="468ea8df2e1056b92e0bd8fa3299f565f90f97ee" translate="yes" xml:space="preserve">
          <source>Wait for any child process whose process group ID is equal to that of the Octave interpreter process.</source>
          <target state="translated">プロセスグループIDがOctaveインタプリタプロセスのそれと同じである子プロセスを待ちます。</target>
        </trans-unit>
        <trans-unit id="fbcec1b99dd4daf7031c5c0382bdd8238a2aeca1" translate="yes" xml:space="preserve">
          <source>Wait for any child process.</source>
          <target state="translated">任意の子プロセスを待ちます。</target>
        </trans-unit>
        <trans-unit id="a2a355abfe2c1aec648ce2d33f2cb0cc05a74e9d" translate="yes" xml:space="preserve">
          <source>Wait for mouse click or key press over the current figure window.</source>
          <target state="translated">現在の図形ウィンドウの上でマウスをクリックするか、キーを押してください。</target>
        </trans-unit>
        <trans-unit id="452c7be077c586f18264a112ddb602c32810761f" translate="yes" xml:space="preserve">
          <source>Wait for process &lt;var&gt;pid&lt;/var&gt; to terminate.</source>
          <target state="translated">プロセス &lt;var&gt;pid&lt;/var&gt; が終了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="20b3952e5cee3e6ed958189dad26aa203a5decaa" translate="yes" xml:space="preserve">
          <source>Wait for termination of the child process with ID &lt;var&gt;pid&lt;/var&gt;.</source>
          <target state="translated">ID &lt;var&gt;pid&lt;/var&gt; の子プロセスの終了を待ちます。</target>
        </trans-unit>
        <trans-unit id="f605571af26352c56568bf4d89ad06344637c184" translate="yes" xml:space="preserve">
          <source>Wait for writes to complete.</source>
          <target state="translated">書き込みが完了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="49e115bb0fe7992e795f1a87645453a4c80623cb" translate="yes" xml:space="preserve">
          <source>Wait until signal is received or a child process exits (this is the default if the &lt;var&gt;options&lt;/var&gt; argument is missing).</source>
          <target state="translated">シグナルが受信されるか、子プロセスが終了するまで待機します（これは、 &lt;var&gt;options&lt;/var&gt; 引数がない場合のデフォルトです）。</target>
        </trans-unit>
        <trans-unit id="ee5ef2a91787b6f6be7393f1015ba70adf5fb44a" translate="yes" xml:space="preserve">
          <source>We can check for the existence of the &lt;code&gt;roots&lt;/code&gt;-method by calling:</source>
          <target state="translated">次の呼び出しにより、 &lt;code&gt;roots&lt;/code&gt; メソッドの存在を確認できます。</target>
        </trans-unit>
        <trans-unit id="79c09bc369800f63ffc52df2e701ffa415aee783" translate="yes" xml:space="preserve">
          <source>We can reset it to be automatic:</source>
          <target state="translated">自動にリセットすればいいんだよ</target>
        </trans-unit>
        <trans-unit id="e30a7250e6458d65ee5a93c590faaa9a3039071e" translate="yes" xml:space="preserve">
          <source>We can set it back to automatic:</source>
          <target state="translated">自動に戻せばいいんです。</target>
        </trans-unit>
        <trans-unit id="e53261564d68c5bd5857f91f39aa8b3e0d84e757" translate="yes" xml:space="preserve">
          <source>We can then move the camera further up the z-axis:</source>
          <target state="translated">そして、カメラをさらにz軸上に移動させることができます。</target>
        </trans-unit>
        <trans-unit id="53cb3235557fd8a287032b9d976a495bf11a5ab7" translate="yes" xml:space="preserve">
          <source>We can turn the camera to point at a new target:</source>
          <target state="translated">カメラを回して新しいターゲットを指し示すことができます。</target>
        </trans-unit>
        <trans-unit id="642a3b9920da70082a9f192e94403b16c854e10f" translate="yes" xml:space="preserve">
          <source>We only know it is the binary multiplication operator, but fortunately this operator appears only at one place in the code and thus we know which occurrence takes so much time. If there were multiple places, we would have to use the hierarchical profile to find out the exact place which uses up the time which is not covered in this example.</source>
          <target state="translated">我々はそれが二進法の乗算演算子であることを知っているだけですが、幸いにもこの演算子はコード内の一箇所にしか現れないので、どの箇所で時間がかかっているのかがわかります。もし複数の場所がある場合は、この例では取り上げていない時間を消費する正確な場所を見つけるために、階層プロファイルを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="23408b19b29e8e8495bb4b68733ada5f85fc2fd6" translate="yes" xml:space="preserve">
          <source>Wed</source>
          <target state="translated">Wed</target>
        </trans-unit>
        <trans-unit id="5656b9b79b0316fc611a9c30d2ffac25228b8371" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="translated">Wednesday</target>
        </trans-unit>
        <trans-unit id="c6edc7e26dc1a7f5b6823df1eddaac3ce4524caa" translate="yes" xml:space="preserve">
          <source>Week number of year with Monday as first day of week (00-53).</source>
          <target state="translated">月曜日を週の最初の日とする年の週番号(00~53</target>
        </trans-unit>
        <trans-unit id="70f74d2223f1c342ef962202c70c0da63c220737" translate="yes" xml:space="preserve">
          <source>Week number of year with Sunday as first day of week (00-53).</source>
          <target state="translated">日曜日を週の最初の日とする年の週番号(00~53</target>
        </trans-unit>
        <trans-unit id="ee45cb5a8bcaa82a716eb53485973b59915e1d52" translate="yes" xml:space="preserve">
          <source>What are the possible pairs?</source>
          <target state="translated">可能性のあるペアは?</target>
        </trans-unit>
        <trans-unit id="e2ce0061fb83880468b9b4664309a8b5d786eef1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = 1&lt;/code&gt;, return the pseudo-lower triangular Cholesky factor of the Pascal matrix (The sign of some columns may be negative). This matrix is its own inverse, that is &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 1) ^ 2 == eye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;t&lt;/var&gt; = 1&lt;/code&gt; 場合、パスカル行列の疑似下三角コレスキー因子を返します（一部の列の符号が負になる場合があります）。この行列は、それ自体が逆、つまり &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 1) ^ 2 == eye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="de737b1bfe2b6c4124dd61165620e44b451901b1" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; are the coefficient vectors of two polynomials, the convolution represents the coefficient vector of the product polynomial.</source>
          <target state="translated">場合と &lt;var&gt;b&lt;/var&gt; は 2つの多項式の係数ベクトルであり、畳み込み積多項式の係数ベクトルを表します。 &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4995c075b5e02832b91c4fb30e2511a97e8d3ca6" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;coorsys&lt;/var&gt; is set to &lt;code&gt;&quot;camera&quot;&lt;/code&gt;, the camera is moved left or right by rotating it around an axis parallel to the camera up vector (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;). The input &lt;var&gt;dir&lt;/var&gt; should not be specified in this case. Example:</source>
          <target state="translated">&lt;var&gt;coorsys&lt;/var&gt; が &lt;code&gt;&quot;camera&quot;&lt;/code&gt; に設定されている場合、カメラは、カメラの上向きベクトル（&lt;a href=&quot;#XREFcamup&quot;&gt;camupを&lt;/a&gt;参照）に平行な軸を中心に回転することにより、左または右に移動します。この場合、入力 &lt;var&gt;dir&lt;/var&gt; を指定しないでください。例：</target>
        </trans-unit>
        <trans-unit id="fd3f6f263f14ef3b22f57692477e108fc9df95b0" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;file&lt;/var&gt; is already an absolute name, the name is checked against the file system instead of Octave&amp;rsquo;s loadpath. In this case, if &lt;var&gt;file&lt;/var&gt; exists it will be returned in &lt;var&gt;fname&lt;/var&gt;, otherwise an empty string is returned.</source>
          <target state="translated">ときに &lt;var&gt;file&lt;/var&gt; すでに絶対的な名前で、名前ではなく、OctaveのLOADPATHのファイルシステムに対してチェックされます。この場合、 &lt;var&gt;file&lt;/var&gt; が存在する場合は &lt;var&gt;fname&lt;/var&gt; に返され、存在しない場合は空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="2b9e49aba6e37fdfe93d1a16912c975867862b7c" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;filename&lt;/var&gt; does not have an extension the default filename extension</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; がない場合、デフォルトのファイル名拡張子</target>
        </trans-unit>
        <trans-unit id="3b0bbce7bdb120458ad715afda62bec7454df6fe" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;m&lt;/var&gt; is the polynomial order &lt;var&gt;coefs&lt;/var&gt; must be of size: &lt;var&gt;ni&lt;/var&gt;-by-(&lt;var&gt;m&lt;/var&gt; + 1).</source>
          <target state="translated">&lt;var&gt;m&lt;/var&gt; が多項式次数の場合、 &lt;var&gt;coefs&lt;/var&gt; は次のサイズでなければなりません： &lt;var&gt;ni&lt;/var&gt; -by-（ &lt;var&gt;m&lt;/var&gt; + 1）。</target>
        </trans-unit>
        <trans-unit id="694e49f1fd6c72fceedb93678a43e079cbc74cb5" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;method&lt;/var&gt; is &lt;code&gt;&quot;gaussian&quot;&lt;/code&gt;, &lt;var&gt;std_dev&lt;/var&gt; defines the standard deviation of the trivariate normal distribution function. &lt;var&gt;std_dev&lt;/var&gt; is either a vector of 3 elements representing the standard deviation of the Gaussian convolution kernel in x-, y- and z-directions or a scalar, in which case the same value is used in all three dimensions. The default value is 0.65.</source>
          <target state="translated">ときに &lt;var&gt;method&lt;/var&gt; ある &lt;code&gt;&quot;gaussian&quot;&lt;/code&gt; 、 &lt;var&gt;std_dev&lt;/var&gt; は変量正規分布関数の標準偏差を規定します。 &lt;var&gt;std_dev&lt;/var&gt; は、x、y、z方向のガウス畳み込みカーネルの標準偏差を表す3つの要素のベクトル、またはスカラーのいずれかです。この場合、3つの次元すべてで同じ値が使用されます。デフォルト値は0.65です。</target>
        </trans-unit>
        <trans-unit id="6ecc1bc6c135afabcc544fed0475ca8f5b9ab546" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;mode&lt;/var&gt; is unspecified return the Cholesky factorization for &lt;var&gt;R&lt;/var&gt;. If &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; or &lt;code&gt;&quot;L&quot;&lt;/code&gt; then return the conjugate transpose &lt;code&gt;&lt;var&gt;R&lt;/var&gt;'&lt;/code&gt; which is a lower triangular factor. The conjugate transpose version is faster and uses less memory, but still returns the same values for all other outputs: &lt;var&gt;count&lt;/var&gt;, &lt;var&gt;h&lt;/var&gt;, &lt;var&gt;parent&lt;/var&gt;, and &lt;var&gt;post&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; が指定されていない場合、 &lt;var&gt;R&lt;/var&gt; のコレスキー分解を返します。場合 &lt;var&gt;mode&lt;/var&gt; である &lt;code&gt;&quot;lower&quot;&lt;/code&gt; または &lt;code&gt;&quot;L&quot;&lt;/code&gt; 、次いで共役転置戻り &lt;code&gt;&lt;var&gt;R&lt;/var&gt;'&lt;/code&gt; 下三角因子です。共役転置バージョンはより高速でメモリ使用量が少ないですが、他のすべての出力に対して同じ値を返します： &lt;var&gt;count&lt;/var&gt; 、 &lt;var&gt;h&lt;/var&gt; 、 &lt;var&gt;parent&lt;/var&gt; 、および &lt;var&gt;post&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7488d9a9c93bc51549fe8079d976e327325bc29a" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;mu&lt;/var&gt; is present, evaluate the polynomial for (&lt;var&gt;x&lt;/var&gt;-&lt;var&gt;mu&lt;/var&gt;(1))/&lt;var&gt;mu&lt;/var&gt;(2).</source>
          <target state="translated">&lt;var&gt;mu&lt;/var&gt; が存在する場合、（ &lt;var&gt;x&lt;/var&gt; - &lt;var&gt;mu&lt;/var&gt; （1））/ &lt;var&gt;mu&lt;/var&gt; （2）の多項式を評価します。</target>
        </trans-unit>
        <trans-unit id="26ecedb3043c4886e7200e0345222f9f5de26946" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;n&lt;/var&gt; is positive, the dimensions of &lt;var&gt;x&lt;/var&gt; are shifted to the left, with the leading dimensions circulated to the end. If &lt;var&gt;n&lt;/var&gt; is negative, then the dimensions of &lt;var&gt;x&lt;/var&gt; are shifted to the right, with &lt;var&gt;n&lt;/var&gt; leading singleton dimensions added.</source>
          <target state="translated">場合 &lt;var&gt;n&lt;/var&gt; は正であり、寸法 &lt;var&gt;x&lt;/var&gt; 主要寸法は端に循環して、左にシフトされます。 &lt;var&gt;n&lt;/var&gt; が負の場合、 &lt;var&gt;x&lt;/var&gt; の次元は右にシフトされ、 &lt;var&gt;n&lt;/var&gt; 個の先行シングルトン次元が追加されます。</target>
        </trans-unit>
        <trans-unit id="d14006ef50698960879a2803ad8dd919f78fab02" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a class object defined with a class constructor, then &lt;code&gt;subsindex&lt;/code&gt; is the overloading method that allows the conversion of this class object to a valid indexing vector. It is important to note that &lt;code&gt;subsindex&lt;/code&gt; must return a zero-based real integer vector of the class &lt;code&gt;&quot;double&quot;&lt;/code&gt;. For example, if the class constructor were</source>
          <target state="translated">場合 &lt;var&gt;obj&lt;/var&gt; がクラスコンストラクタで定義されたクラスオブジェクトは、その後 &lt;code&gt;subsindex&lt;/code&gt; 有効割出しベクトルに、このクラスのオブジェクトの変換を可能にするオーバーロードする方法です。 &lt;code&gt;subsindex&lt;/code&gt; は、クラス &lt;code&gt;&quot;double&quot;&lt;/code&gt; のゼロベースの実整数ベクトルを返す必要があることに注意することが重要です。たとえば、クラスコンストラクタが</target>
        </trans-unit>
        <trans-unit id="4567fb823ae76170233ac040de870155c18eb478" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a regular Java object, structure-like indexing can be used as a shortcut syntax. For instance, the following two statements are equivalent</source>
          <target state="translated">とき &lt;var&gt;obj&lt;/var&gt; が通常のJavaオブジェクトである、構造のようなインデックスは、ショートカット構文として使用することができます。たとえば、次の2つのステートメントは同等です</target>
        </trans-unit>
        <trans-unit id="f64e190e2c1a7c030df19bb530c4129cb6ee59d7" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a regular Java object, structure-like indexing can be used as a shortcut syntax. For instance, the two following statements are equivalent</source>
          <target state="translated">とき &lt;var&gt;obj&lt;/var&gt; が通常のJavaオブジェクトである、構造のようなインデックスは、ショートカット構文として使用することができます。たとえば、次の2つのステートメントは同等です</target>
        </trans-unit>
        <trans-unit id="c9ef636cdcb53552b8c8c4e3e8dbe072ad50d26f" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;str&lt;/var&gt; is a character string to be tested, and &lt;var&gt;strarray&lt;/var&gt; is a cellstr of valid values, then &lt;var&gt;validstr&lt;/var&gt; will be the validated form of &lt;var&gt;str&lt;/var&gt; where validation is defined as &lt;var&gt;str&lt;/var&gt; being a member or substring of &lt;var&gt;validstr&lt;/var&gt;. This is useful for both verifying and expanding short options, such as &lt;code&gt;&quot;r&quot;&lt;/code&gt;, to their longer forms, such as &lt;code&gt;&quot;red&quot;&lt;/code&gt;. If &lt;var&gt;str&lt;/var&gt; is a substring of &lt;var&gt;validstr&lt;/var&gt;, and there are multiple matches, the shortest match will be returned if all matches are substrings of each other. Otherwise, an error will be raised because the expansion of &lt;var&gt;str&lt;/var&gt; is ambiguous. All comparisons are case insensitive.</source>
          <target state="translated">場合 &lt;var&gt;str&lt;/var&gt; が試験される文字列であり、 &lt;var&gt;strarray&lt;/var&gt; 有効な値のcellstrであり、次いで &lt;var&gt;validstr&lt;/var&gt; の検証形態あろう &lt;var&gt;str&lt;/var&gt; 検証は次のように定義されている &lt;var&gt;str&lt;/var&gt; がメンバーであるか、のサブ &lt;var&gt;validstr&lt;/var&gt; 。これは、 &lt;code&gt;&quot;r&quot;&lt;/code&gt; などの短いオプションを確認して、 &lt;code&gt;&quot;red&quot;&lt;/code&gt; などの長い形式に拡張する場合に便利です。場合 &lt;var&gt;str&lt;/var&gt; がのサブで &lt;var&gt;validstr&lt;/var&gt; 、および複数の一致があるすべてのマッチが互いの部分文字列であれば、最短マッチが返されます。そうでない場合、 &lt;var&gt;str&lt;/var&gt; の展開によりエラーが発生します。あいまいです。すべての比較では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="4f1fcac4821a81cc2e9378f58ccfb6fa8bf664ca" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;x&lt;/var&gt; is a vector, the function counts the number of elements of &lt;var&gt;x&lt;/var&gt; that fall in the histogram bins defined by &lt;var&gt;edges&lt;/var&gt;. This must be a vector of monotonically increasing values that define the edges of the histogram bins. &lt;code&gt;&lt;var&gt;n&lt;/var&gt;(k)&lt;/code&gt; contains the number of elements in &lt;var&gt;x&lt;/var&gt; for which &lt;code&gt;&lt;var&gt;edges&lt;/var&gt;(k) &amp;lt;= &lt;var&gt;x&lt;/var&gt; &amp;lt; &lt;var&gt;edges&lt;/var&gt;(k+1)&lt;/code&gt;. The final element of &lt;var&gt;n&lt;/var&gt; contains the number of elements of &lt;var&gt;x&lt;/var&gt; exactly equal to the last element of &lt;var&gt;edges&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;x&lt;/var&gt; ベクトルであり、関数は、要素数カウント &lt;var&gt;x&lt;/var&gt; によって定義されたヒストグラムビンに入る &lt;var&gt;edges&lt;/var&gt; 。これは、ヒストグラムのビンのエッジを定義する単調に増加する値のベクトルでなければなりません。 &lt;code&gt;&lt;var&gt;n&lt;/var&gt;(k)&lt;/code&gt; の要素の数含ま &lt;var&gt;x&lt;/var&gt; れる &lt;code&gt;&lt;var&gt;edges&lt;/var&gt;(k) &amp;lt;= &lt;var&gt;x&lt;/var&gt; &amp;lt; &lt;var&gt;edges&lt;/var&gt;(k+1)&lt;/code&gt; 。最終要素 &lt;var&gt;n&lt;/var&gt; の要素の数含ま &lt;var&gt;x&lt;/var&gt; が正確の最後の要素に等しい &lt;var&gt;edges&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="61b6b915264e56a8aa3a5fdaf1395b5cabe4ff08" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;x&lt;/var&gt; is an &lt;em&gt;N&lt;/em&gt;-dimensional array, the computation is carried out along dimension &lt;var&gt;dim&lt;/var&gt;. If not specified &lt;var&gt;dim&lt;/var&gt; defaults to the first non-singleton dimension.</source>
          <target state="translated">場合 &lt;var&gt;x&lt;/var&gt; である&lt;em&gt;N&lt;/em&gt;次元アレイ、計算は、ディメンションに沿って行われる &lt;var&gt;dim&lt;/var&gt; 。指定しない場合、 &lt;var&gt;dim&lt;/var&gt; はデフォルトで最初の1でない次元になります。</target>
        </trans-unit>
        <trans-unit id="c79138aad94ef5bf99510e193da45bcf0b2f6e6c" translate="yes" xml:space="preserve">
          <source>When Ghostscript output is sent to a printer the size is determined by the figure&amp;rsquo;s &lt;code&gt;&quot;papersize&quot;&lt;/code&gt; property. When the output is sent to a file the size is determined by the plot box defined by the figure&amp;rsquo;s &lt;code&gt;&quot;paperposition&quot;&lt;/code&gt; property.</source>
          <target state="translated">Ghostscript出力がプリンターに送信されるとき、サイズは図の &lt;code&gt;&quot;papersize&quot;&lt;/code&gt; プロパティによって決定されます。出力がファイルに送信されるとき、サイズは、Figureの &lt;code&gt;&quot;paperposition&quot;&lt;/code&gt; プロパティで定義されたプロットボックスによって決定されます。</target>
        </trans-unit>
        <trans-unit id="e5e70b5d527754991a7b4c09d7ec4c32805d272e" translate="yes" xml:space="preserve">
          <source>When Octave defines a function from a function file, it saves the full name of the file it read and the time stamp on the file. If the time stamp on the file changes, Octave may reload the file. When Octave is running interactively, time stamp checking normally happens at most once each time Octave prints the prompt. Searching for new function definitions also occurs if the current working directory changes.</source>
          <target state="translated">Octaveが関数ファイルから関数を定義するとき,Octaveは,読み込んだファイルのフルネームとファイル上のタイムスタンプを保存します。ファイル上のタイムスタンプが変更された場合,Octaveはファイルをリロードすることができます。Octaveが対話的に実行されているとき,タイムスタンプのチェックは,通常,Octaveがプロ ンプトを表示するたびに最大でも1回行われます。新しい関数定義の検索は,現在の作業ディレクトリが変更された場合にも行われます。</target>
        </trans-unit>
        <trans-unit id="52ec4b8ffaa4ca3fafb4c2891c8b6ac8cd603ab1" translate="yes" xml:space="preserve">
          <source>When Octave encounters an identifier that is undefined, it first looks for variables or functions that are already compiled and currently listed in its symbol table. If it fails to find a definition there, it searches a list of directories (the &lt;em&gt;path&lt;/em&gt;) for files ending in</source>
          <target state="translated">Octaveが未定義の識別子に遭遇すると、まずコンパイル済みで現在そのシンボルテーブルにリストされている変数または関数を探します。そこで定義が見つからなかった場合は、ディレクトリのリスト（&lt;em&gt;パス&lt;/em&gt;）で終わるファイルを検索します</target>
        </trans-unit>
        <trans-unit id="4c520daa9f795df05e8b6c6f9770633544ec7321" translate="yes" xml:space="preserve">
          <source>When Octave encounters the keyword &lt;code&gt;return&lt;/code&gt; inside a function or script, it returns control to the caller immediately. At the top level, the return statement is ignored. A &lt;code&gt;return&lt;/code&gt; statement is assumed at the end of every function definition.</source>
          <target state="translated">Octaveが関数またはスクリプト内でキーワード &lt;code&gt;return&lt;/code&gt; を検出すると、すぐに制御を呼び出し元に返します。トップレベルでは、returnステートメントは無視されます。 &lt;code&gt;return&lt;/code&gt; 文は、すべての関数定義の終わりに想定しています。</target>
        </trans-unit>
        <trans-unit id="c7900268707201e3cdd5a5c57165b76abb483872" translate="yes" xml:space="preserve">
          <source>When Octave is used interactively, stdin is filtered through the command line editing functions.</source>
          <target state="translated">Octaveを対話的に使用する場合、stdinはコマンドライン編集機能でフィルタリングされます。</target>
        </trans-unit>
        <trans-unit id="baa175ac51214c83f1dcb0d708aeb733664bdb6e" translate="yes" xml:space="preserve">
          <source>When Octave parses a matrix expression, it examines the elements of the list to determine whether they are all constants. If they are, it replaces the list with a single matrix constant.</source>
          <target state="translated">Octaveが行列式を解析するとき,リストの要素を調べて,それらがすべて定数であるかどうかを判断します。もしそうであれば,リストを単一の行列定数に置き換えます。</target>
        </trans-unit>
        <trans-unit id="7c9f706844a8f031dd2fc78d4d1114f517a2bd23" translate="yes" xml:space="preserve">
          <source>When Octave parses a range expression, it examines the elements of the expression to determine whether they are all constants. If they are, it replaces the range expression with a single range constant.</source>
          <target state="translated">Octaveが範囲式を解析するとき、それは式の要素を調べて、それらがすべて定数であるかどうかを判断します。もしそうであれば、それは範囲式を単一の範囲定数に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4e0224789b6c270f9b4e588e3465fcdb57c391b8" translate="yes" xml:space="preserve">
          <source>When Octave starts, it looks for commands to execute from the files in the following list. These files may contain any valid Octave commands, including function definitions.</source>
          <target state="translated">Octaveが起動すると,以下のリストにあるファイルから実行するコマンドを探します。これらのファイルには,関数定義を含む有効なOctaveコマンドが含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e96f3b7349824078503e874ace920f192463a21" translate="yes" xml:space="preserve">
          <source>When a &lt;em&gt;matching failure&lt;/em&gt; occurs, &lt;code&gt;scanf&lt;/code&gt; returns immediately, leaving the first non-matching character as the next character to be read from the stream, and &lt;code&gt;scanf&lt;/code&gt; returns all the items that were successfully converted.</source>
          <target state="translated">場合&lt;em&gt;整合不良が&lt;/em&gt;発生 &lt;code&gt;scanf&lt;/code&gt; ストリームから読み出される次の文字、及び、第1の非マッチング文字を残し、すぐに戻る &lt;code&gt;scanf&lt;/code&gt; 戻り正常に変換されたすべてのアイテム。</target>
        </trans-unit>
        <trans-unit id="da49fdf676149f6aed230750772287e9985419b3" translate="yes" xml:space="preserve">
          <source>When a colon is used in the special case of 1-D indexing the result is always a column vector. Creating column vectors with a colon index is a very frequently encountered code idiom and is faster and generally clearer than calling &lt;code&gt;reshape&lt;/code&gt; for this case.</source>
          <target state="translated">1次元インデックスの特別な場合にコロンを使用すると、結果は常に列ベクトルになります。コロンインデックスを使用して列ベクトルを作成することは、非常に頻繁に発生するコードイディオムであり、この場合に &lt;code&gt;reshape&lt;/code&gt; を呼び出すよりも速く、一般的に明確です。</target>
        </trans-unit>
        <trans-unit id="99ca90ea19dc3cda312567b4253b71262f867fde" translate="yes" xml:space="preserve">
          <source>When a file is re-parsed, such as when it is modified outside the GUI, all breakpoints within the file are cleared.</source>
          <target state="translated">GUI外でファイルが変更された場合など、ファイルがリパーズされると、ファイル内のすべてのブレークポイントがクリアされます。</target>
        </trans-unit>
        <trans-unit id="847a89195b78ad6eb45989f810811c217341b094" translate="yes" xml:space="preserve">
          <source>When a function is called, Octave searches a list of directories for a file that contains the function declaration. This list of directories is known as the load path. By default the load path contains a list of directories distributed with Octave plus the current working directory. To see your current load path call the &lt;code&gt;path&lt;/code&gt; function without any input or output arguments.</source>
          <target state="translated">関数が呼び出されると、Octaveは関数宣言を含むファイルをディレクトリのリストから検索します。このディレクトリのリストは、ロードパスと呼ばれます。デフォルトでは、ロードパスには、Octaveで配布されているディレクトリと現在の作業ディレクトリのリストが含まれています。現在のロードパスを表示するには、入力引数または出力引数なしで &lt;code&gt;path&lt;/code&gt; 関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4f045d0b3d7eb731dd6846eb395ba5c8f430a0ca" translate="yes" xml:space="preserve">
          <source>When a light object is present in an axes object, and the properties &lt;code&gt;&quot;EdgeLighting&quot;&lt;/code&gt; or &lt;code&gt;&quot;FaceLighting&quot;&lt;/code&gt; of a &lt;code&gt;patch&lt;/code&gt; or &lt;code&gt;surface&lt;/code&gt; object are set to a value other than &lt;code&gt;&quot;none&quot;&lt;/code&gt;, these objects are drawn with lighting effects. Supported values for Lighting properties are &lt;code&gt;&quot;none&quot;&lt;/code&gt; (no lighting effects), &lt;code&gt;&quot;flat&quot;&lt;/code&gt; (faceted look of the objects), and &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; (linear interpolation of the lighting effects between the vertices). If the lighting mode is set to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;, the &lt;code&gt;&quot;FaceNormals&quot;&lt;/code&gt; property is used for lighting. For &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;, the &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; property is used.</source>
          <target state="translated">ライトオブジェクトがAxesオブジェクトに存在し、 &lt;code&gt;patch&lt;/code&gt; または &lt;code&gt;surface&lt;/code&gt; オブジェクトのプロパティ &lt;code&gt;&quot;EdgeLighting&quot;&lt;/code&gt; または &lt;code&gt;&quot;FaceLighting&quot;&lt;/code&gt; が &lt;code&gt;&quot;none&quot;&lt;/code&gt; 以外の値に設定されている場合、これらのオブジェクトは照明効果で描画されます。 Lightingプロパティでサポートされている値は、 &lt;code&gt;&quot;none&quot;&lt;/code&gt; （照明効果なし）、 &lt;code&gt;&quot;flat&quot;&lt;/code&gt; （オブジェクトのファセットルック）、および &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; （頂点間の照明効果の線形補間）です。照明モードが &lt;code&gt;&quot;flat&quot;&lt;/code&gt; に設定されている場合、照明には &lt;code&gt;&quot;FaceNormals&quot;&lt;/code&gt; プロパティが使用されます。 &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; プロパティが使用されます。</target>
        </trans-unit>
        <trans-unit id="3b89d458e581074fb64619088ee0b2a2dc4efab5" translate="yes" xml:space="preserve">
          <source>When a second output argument is requested an index matrix is also returned. The &lt;var&gt;idx&lt;/var&gt; matrix has the same size as &lt;var&gt;x&lt;/var&gt;. Each element of &lt;var&gt;idx&lt;/var&gt; contains the index of the histogram bin in which the corresponding element of &lt;var&gt;x&lt;/var&gt; was counted.</source>
          <target state="translated">2番目の出力引数が要求されると、インデックス行列も返されます。 &lt;var&gt;idx&lt;/var&gt; マトリックスと同じサイズを有する &lt;var&gt;x&lt;/var&gt; 。 &lt;var&gt;idx&lt;/var&gt; の各要素には、 &lt;var&gt;x&lt;/var&gt; の対応する要素がカウントされたヒストグラムビンのインデックスが含まれています。</target>
        </trans-unit>
        <trans-unit id="3a0ced3835eb9e85e77a6614ba80c927315d2723" translate="yes" xml:space="preserve">
          <source>When a test fails, you will see something like:</source>
          <target state="translated">テストに失敗すると、こんな感じのものが出てきます。</target>
        </trans-unit>
        <trans-unit id="89801f7a126b1478d4820e2e71f4e68d005c8fdf" translate="yes" xml:space="preserve">
          <source>When adding a scalar to a range, subtracting a scalar from it (or subtracting a range from a scalar) and multiplying by scalar, Octave will attempt to avoid unpacking the range and keep the result as a range, too, if it can determine that it is safe to do so. For instance, doing</source>
          <target state="translated">スカラを範囲に追加するとき,スカラからスカラを引き算するとき(またはスカラから範囲を引き算するとき),スカラで乗算するとき,Octaveは範囲を展開しないようにして,結果も範囲として保持しようとしますが,そうしても安全であると 判断できれば,その結果も範囲として保持します。例えば,以下のようにして</target>
        </trans-unit>
        <trans-unit id="fcce64ef5e4993e4795757b8304569a85a8b6b34" translate="yes" xml:space="preserve">
          <source>When an error has been handled it is possible to raise it again. This can be useful when an error needs to be detected, but the program should still abort. This is possible using the &lt;code&gt;rethrow&lt;/code&gt; function. The previous example can now be changed to count the number of errors related to the &amp;lsquo;</source>
          <target state="translated">エラーが処理されたら、再度発生させることができます。これは、エラーを検出する必要がある場合に役立ちますが、プログラムは引き続き異常終了します。これは、 &lt;code&gt;rethrow&lt;/code&gt; 機能を使用して可能です。前の例を変更して、 'に関連するエラーの数をカウントできます。</target>
        </trans-unit>
        <trans-unit id="859fa22eb96df5664bbd8a907389e5c7f95a2470" translate="yes" xml:space="preserve">
          <source>When an error occurs, it can be detected and handled using the &lt;code&gt;try&lt;/code&gt; statement as described in &lt;a href=&quot;the-try-statement#The-try-Statement&quot;&gt;The try Statement&lt;/a&gt;. As an example, the following piece of code counts the number of errors that occurs during a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">エラーが発生した場合、それを検出して使用して処理することができ &lt;code&gt;try&lt;/code&gt; で説明したように文を&lt;a href=&quot;the-try-statement#The-try-Statement&quot;&gt;try文&lt;/a&gt;。例として、次のコードは、 &lt;code&gt;for&lt;/code&gt; ループ中に発生するエラーの数をカウントします。</target>
        </trans-unit>
        <trans-unit id="c59e5a4f88ba50e51b0b56eb5d9e33f7a7c17b69" translate="yes" xml:space="preserve">
          <source>When applied to an array (possibly multi-dimensional) with &lt;var&gt;n&lt;/var&gt; columns, &lt;var&gt;fcn&lt;/var&gt; may return a result in either of two formats: Format 1) an array of size 1-by-&lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;dim3&lt;/var&gt;-by-&amp;hellip;-by-&lt;var&gt;dimN&lt;/var&gt;. This is the typical output format from Octave core functions. Type &lt;code&gt;demo (&quot;movfun&quot;, 5)&lt;/code&gt; for an example of this use case. Format 2) a row vector of length &lt;code&gt;&lt;var&gt;n&lt;/var&gt; * &lt;var&gt;numel_higher_dims&lt;/var&gt;&lt;/code&gt; where &lt;var&gt;numel_higher_dims&lt;/var&gt; is &lt;code&gt;prod&amp;nbsp;(size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)(3:end))&lt;/code&gt;. The output of &lt;var&gt;fcn&lt;/var&gt; for the i-th input column must be found in the output at indices &lt;code&gt;i:&lt;var&gt;n&lt;/var&gt;:(&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;numel_higher_dims&lt;/var&gt;)&lt;/code&gt;. This format is useful when concatenating functions into arrays, or when using &lt;code&gt;nthargout&lt;/code&gt;. Type &lt;code&gt;demo (&quot;movfun&quot;, 6)&lt;/code&gt; for an example of this case.</source>
          <target state="translated">配列（おそらく多次元）に適用した場合に &lt;var&gt;n&lt;/var&gt; 列、 &lt;var&gt;fcn&lt;/var&gt; フォーマット1）サイズ1バイのアレイの2つのいずれかの形式で結果を返すことがあり &lt;var&gt;n&lt;/var&gt; 行列 &lt;var&gt;dim3&lt;/var&gt; 行列...行列 &lt;var&gt;dimN&lt;/var&gt; 。これはOctaveコア関数からの典型的な出力フォーマットです。型 &lt;code&gt;demo (&quot;movfun&quot;, 5)&lt;/code&gt; このユースケースの例について。形式2）長さ &lt;code&gt;&lt;var&gt;n&lt;/var&gt; * &lt;var&gt;numel_higher_dims&lt;/var&gt;&lt;/code&gt; 行ベクトル。ここで、 &lt;var&gt;numel_higher_dims&lt;/var&gt; は &lt;code&gt;prod&amp;nbsp;(size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)(3:end))&lt;/code&gt; です。出力 &lt;var&gt;fcn&lt;/var&gt; i番目の入力列のは、インデックスに出力中に見出されなければならない &lt;code&gt;i:&lt;var&gt;n&lt;/var&gt;:(&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;numel_higher_dims&lt;/var&gt;)&lt;/code&gt; 。この形式は、関数を配列に連結する場合、または &lt;code&gt;nthargout&lt;/code&gt; を使用する場合に役立ちます。型 &lt;code&gt;demo (&quot;movfun&quot;, 6)&lt;/code&gt; この場合の例について。</target>
        </trans-unit>
        <trans-unit id="824638cd2a745728fa51a300c39faf125f21b35f" translate="yes" xml:space="preserve">
          <source>When called from a class constructor, mark the object currently constructed as having a higher precedence than &lt;var&gt;class_name&lt;/var&gt;.</source>
          <target state="translated">クラスコンストラクターから呼び出された場合、現在構築されているオブジェクトに &lt;var&gt;class_name&lt;/var&gt; よりも高い優先順位を設定します。</target>
        </trans-unit>
        <trans-unit id="039a7dd9eb9ffffd64e5c4c034f79ee9f16f87d0" translate="yes" xml:space="preserve">
          <source>When called from a class constructor, mark the object currently constructed as having a lower precedence than &lt;var&gt;class_name&lt;/var&gt;.</source>
          <target state="translated">クラスコンストラクターから呼び出された場合、現在構築されているオブジェクトの優先順位を &lt;var&gt;class_name&lt;/var&gt; よりも低く設定します。</target>
        </trans-unit>
        <trans-unit id="5c2a1679f85b4d75684ac4fc31eabdd3d1631dd6" translate="yes" xml:space="preserve">
          <source>When called from an m-file function, the error is prefixed with the name of the caller function.</source>
          <target state="translated">m-file 関数から呼び出された場合、エラーの先頭には呼び出し元の関数名が付けられます。</target>
        </trans-unit>
        <trans-unit id="96a0116fd9380c88cb0ba8c36cf13ad9b13623fa" translate="yes" xml:space="preserve">
          <source>When called from inside a function with the &lt;code&gt;&quot;local&quot;&lt;/code&gt; option, the variable is changed locally for the function and any subroutines it calls. The original variable value is restored when exiting the function.</source>
          <target state="translated">&lt;code&gt;&quot;local&quot;&lt;/code&gt; オプションを使用して関数内から呼び出されると、変数は、関数および関数が呼び出すすべてのサブルーチンに対してローカルに変更されます。関数を終了すると、元の変数値が復元されます。</target>
        </trans-unit>
        <trans-unit id="9c17b861f4d3587e1da85197e81e2b1159332e7b" translate="yes" xml:space="preserve">
          <source>When called this function returns values like this</source>
          <target state="translated">この関数を呼び出すと、以下のような値が返されます。</target>
        </trans-unit>
        <trans-unit id="2d914b672c64d0b023edc1d1407d6e96642eab89" translate="yes" xml:space="preserve">
          <source>When called with &lt;code&gt;&quot;KeyType&quot;&lt;/code&gt; and &lt;code&gt;&quot;ValueType&quot;&lt;/code&gt; arguments, create an empty map with the specified types. The inputs &lt;var&gt;kt&lt;/var&gt; and &lt;var&gt;vt&lt;/var&gt; are the types for the keys and values of the map respectively. Allowed values for &lt;var&gt;kt&lt;/var&gt; are &lt;code&gt;&quot;char&quot;&lt;/code&gt;, &lt;code&gt;&quot;double&quot;&lt;/code&gt;, &lt;code&gt;&quot;single&quot;&lt;/code&gt;, &lt;code&gt;&quot;int32&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint32&quot;&lt;/code&gt;, &lt;code&gt;&quot;int64&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint64&quot;&lt;/code&gt;. Allowed values for &lt;var&gt;vt&lt;/var&gt; are &lt;code&gt;&quot;any&quot;&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, &lt;code&gt;&quot;double&quot;&lt;/code&gt;, &lt;code&gt;&quot;single&quot;&lt;/code&gt;, &lt;code&gt;&quot;int32&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint32&quot;&lt;/code&gt;, &lt;code&gt;&quot;int64&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint64&quot;&lt;/code&gt;, &lt;code&gt;&quot;logical&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;KeyType&quot;&lt;/code&gt; および &lt;code&gt;&quot;ValueType&quot;&lt;/code&gt; 引数で呼び出されると、指定されたタイプで空のマップを作成します。入力 &lt;var&gt;kt&lt;/var&gt; と &lt;var&gt;vt&lt;/var&gt; は、それぞれマップのキーと値のタイプです。 &lt;var&gt;kt&lt;/var&gt; に使用できる値は、 &lt;code&gt;&quot;char&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;double&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;single&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;int32&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;uint32&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;int64&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;uint64&quot;&lt;/code&gt; です。 &lt;var&gt;vt&lt;/var&gt; に使用できる値は &lt;code&gt;&quot;any&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;char&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;double&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;single&quot;&lt;/code&gt; です、 &lt;code&gt;&quot;int32&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;uint32&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;int64&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;uint64&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;logical&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e0e3a11e352213adb3532928a8e434f165ac739" translate="yes" xml:space="preserve">
          <source>When called with a character string &lt;var&gt;name&lt;/var&gt;, return the numeric value of errno which corresponds to the specified error code. If &lt;var&gt;name&lt;/var&gt; is not a recognized error code then -1 is returned.</source>
          <target state="translated">文字列 &lt;var&gt;name&lt;/var&gt; で呼び出された場合、指定されたエラーコードに対応するerrnoの数値を返します。 &lt;var&gt;name&lt;/var&gt; が認識されたエラーコードでない場合、-1が返されます。</target>
        </trans-unit>
        <trans-unit id="5bfea2121297bd44aeb812ca1127ccf61ad46c4f" translate="yes" xml:space="preserve">
          <source>When called with a complex-valued argument, the function &lt;code&gt;f&lt;/code&gt; returns the data structure containing the real and imaginary parts of the original function argument.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; は、複素数値の引数で呼び出されると、元の関数の引数の実数部と虚数部を含むデータ構造を返します。</target>
        </trans-unit>
        <trans-unit id="edbf4e93968442f70206d0de673d69ae64a06572" translate="yes" xml:space="preserve">
          <source>When called with a list of parameter/value pairs, return an options structure with only the named parameters initialized.</source>
          <target state="translated">パラメータと値のペアのリストを指定して呼ばれた場合、名前のついたパラメータのみを初期化したオプション構造体を返します。</target>
        </trans-unit>
        <trans-unit id="0e14d8b4461d46b6d55b9662b41e8e1a76d1d7df" translate="yes" xml:space="preserve">
          <source>When called with a numeric input &lt;var&gt;val&lt;/var&gt;, set the current value of errno to the specified value. The previous value of errno is returned as &lt;var&gt;err&lt;/var&gt;.</source>
          <target state="translated">数値入力 &lt;var&gt;val&lt;/var&gt; で呼び出された場合、errnoの現在の値を指定された値に設定します。errnoの以前の値が &lt;var&gt;err&lt;/var&gt; として返されます。</target>
        </trans-unit>
        <trans-unit id="62cba9190ba370e806424f801982f0fe0a6cbf9d" translate="yes" xml:space="preserve">
          <source>When called with a second output argument, return the handle of the figure containing the object whose callback is currently executing. If no callback is executing the second output is also set to the empty matrix.</source>
          <target state="translated">2 番目の出力引数を指定して呼び出された場合、コールバックが現在実行中のオブジェクトを含む図形のハンドルを返します。コールバックが実行されていない場合は、2番目の出力も空の行列に設定されます。</target>
        </trans-unit>
        <trans-unit id="7844c88f0ba438fd5924714a1164282cad9c4fba" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;h&lt;/var&gt; which is a handle to an existing uibuttongroup object, switch the focus to the specified uibuttongroup. This functionality is not currently implemented.</source>
          <target state="translated">既存のuibuttongroupオブジェクトへのハンドルである単一の引数 &lt;var&gt;h&lt;/var&gt; で呼び出されると、フォーカスを指定されたuibuttongroupに切り替えます。この機能は現在実装されていません。</target>
        </trans-unit>
        <trans-unit id="f3a552c9f39f9927a6b71b217f4fb0c29db4b163" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;h&lt;/var&gt; which is a handle to an existing uicontrol object, switch the keyboard focus to the specified uicontrol. As a result, the uicontrol object will receive keyboard events that can be processed using the &lt;code&gt;&quot;keypressfcn&quot;&lt;/code&gt; callback.</source>
          <target state="translated">既存のuicontrolオブジェクトへのハンドルである単一の引数 &lt;var&gt;h&lt;/var&gt; で呼び出されると、キーボードフォーカスを指定されたuicontrolに切り替えます。その結果、uicontrolオブジェクトは、 &lt;code&gt;&quot;keypressfcn&quot;&lt;/code&gt; コールバックを使用して処理できるキーボードイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="63b8ce3e0181a98a42c07267817da95c9fe9b529" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;x&lt;/var&gt; this is equivalent to</source>
          <target state="translated">単一の引数 &lt;var&gt;x&lt;/var&gt; で呼び出された場合、これは次と同等です。</target>
        </trans-unit>
        <trans-unit id="b82cbbab95e9006e69472b0f62b9c34d0913a47c" translate="yes" xml:space="preserve">
          <source>When called with a single argument, return a square matrix with the dimension specified.</source>
          <target state="translated">単一の引数で呼び出された場合,指定された次元の正方行列を返します.</target>
        </trans-unit>
        <trans-unit id="6f6988cfd88535d9cdec6191dbfec261b7174068" translate="yes" xml:space="preserve">
          <source>When called with a single input &lt;var&gt;name&lt;/var&gt; set the default graphics toolkit to &lt;var&gt;name&lt;/var&gt;. If the toolkit is not already loaded, it is initialized by calling the function &lt;code&gt;__init_&lt;var&gt;name&lt;/var&gt;__&lt;/code&gt;. If the first input is a list of figure handles, &lt;var&gt;hlist&lt;/var&gt;, then the graphics toolkit is set to &lt;var&gt;name&lt;/var&gt; for these figures only.</source>
          <target state="translated">単一の入力 &lt;var&gt;name&lt;/var&gt; 呼び出される場合、デフォルトのグラフィックツールキットを &lt;var&gt;name&lt;/var&gt; に設定します。ツールキットがまだロードされていない場合は、関数 &lt;code&gt;__init_&lt;var&gt;name&lt;/var&gt;__&lt;/code&gt; 呼び出すことによって初期化されます。最初の入力がFigureハンドルのリスト &lt;var&gt;hlist&lt;/var&gt; である場合、グラフィックツールキットはこれらのFigure のみに &lt;var&gt;name&lt;/var&gt; を付けるように設定されます。</target>
        </trans-unit>
        <trans-unit id="196b200950ccf8fceca4cd270194995b78d12736" translate="yes" xml:space="preserve">
          <source>When called with a single input the current waitbar, if it exists, is updated to the new value &lt;var&gt;frac&lt;/var&gt;. If there are multiple outstanding waitbars they can be updated individually by passing the handle &lt;var&gt;h&lt;/var&gt; of the specific waitbar to modify.</source>
          <target state="translated">単一の入力で呼び出されると、現在のウェイトバーが存在する場合は、それが新しい値 &lt;var&gt;frac&lt;/var&gt; に更新されます。複数の未処理のウェイトバーがある場合、変更する特定のウェイトバーのハンドル &lt;var&gt;h&lt;/var&gt; を渡すことにより、それらを個別に更新できます。</target>
        </trans-unit>
        <trans-unit id="6a9bd05b3be9e5cac31684e9c6dc122df02eeb69" translate="yes" xml:space="preserve">
          <source>When called with a single output argument &lt;code&gt;isosurface&lt;/code&gt; returns a structure array &lt;var&gt;fv&lt;/var&gt; that contains the fields &lt;var&gt;faces&lt;/var&gt; and &lt;var&gt;vertices&lt;/var&gt; computed at the points &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; where &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt;. The output &lt;var&gt;fv&lt;/var&gt; can be used directly as input to the &lt;code&gt;patch&lt;/code&gt; function.</source>
          <target state="translated">単一の出力引数で呼び出されると、 &lt;code&gt;isosurface&lt;/code&gt; は、点 &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;z&lt;/var&gt; ] = meshgrid（1：l、1：m、1：n）で計算された &lt;var&gt;faces&lt;/var&gt; と &lt;var&gt;vertices&lt;/var&gt; のフィールドを含む構造体配列 &lt;var&gt;fv&lt;/var&gt; を返します。ここで、 &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;v&lt;/var&gt; ）。出力 &lt;var&gt;fv&lt;/var&gt; は、 &lt;code&gt;patch&lt;/code&gt; 関数への入力として直接使用できます。</target>
        </trans-unit>
        <trans-unit id="53fa03358bb6263852d175fd396a7d5d0eba9215" translate="yes" xml:space="preserve">
          <source>When called with a single output argument, &lt;code&gt;isocaps&lt;/code&gt; returns a structure array &lt;var&gt;fvc&lt;/var&gt; with the fields: &lt;code&gt;faces&lt;/code&gt;, &lt;code&gt;vertices&lt;/code&gt;, and &lt;code&gt;facevertexcdata&lt;/code&gt;. The results are computed at the points &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; where &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt;. The output &lt;var&gt;fvc&lt;/var&gt; can be used directly as input to the &lt;code&gt;patch&lt;/code&gt; function.</source>
          <target state="translated">単一の出力引数を使用して呼び出された場合、 &lt;code&gt;isocaps&lt;/code&gt; 構造アレイ戻り &lt;var&gt;fvc&lt;/var&gt; ：フィールドを持つ &lt;code&gt;faces&lt;/code&gt; 、 &lt;code&gt;vertices&lt;/code&gt; 、および &lt;code&gt;facevertexcdata&lt;/code&gt; 。結果は、ポイント &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; で計算されます。ここで、 &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; です。出力 &lt;var&gt;fvc&lt;/var&gt; は、 &lt;code&gt;patch&lt;/code&gt; 関数への入力として直接使用できます。</target>
        </trans-unit>
        <trans-unit id="6f978f0a6bde183600f1928fa08d2c756d463324" translate="yes" xml:space="preserve">
          <source>When called with a single size argument, return a square matrix with the dimension specified. When called with more than one scalar argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions. The size may also be specified with a vector of dimensions &lt;var&gt;sz&lt;/var&gt;.</source>
          <target state="translated">単一のサイズ引数を指定して呼び出されると、指定された次元を持つ正方行列を返します。複数のスカラー引数を指定して呼び出される場合、最初の2つの引数は行と列の数として解釈され、それ以降の引数は追加の行列の次元を指定します。サイズは、次元 &lt;var&gt;sz&lt;/var&gt; のベクトルで指定することもできます。</target>
        </trans-unit>
        <trans-unit id="c7107e3eb99b5b158c13498594476ab20c9500c3" translate="yes" xml:space="preserve">
          <source>When called with a single vector argument, produce a pie chart of the elements in &lt;var&gt;x&lt;/var&gt;. The size of the ith slice is the percentage that the element &lt;var&gt;x&lt;/var&gt;i represents of the total sum of &lt;var&gt;x&lt;/var&gt;: &lt;code&gt;pct = &lt;var&gt;x&lt;/var&gt;(i) / sum (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">単一のベクトル引数で呼び出されると、 &lt;var&gt;x&lt;/var&gt; の要素の円グラフを生成します。i番目のスライスのサイズは、要素 &lt;var&gt;x&lt;/var&gt; iが &lt;var&gt;x&lt;/var&gt; の合計の合計を表すパーセンテージです： &lt;code&gt;pct = &lt;var&gt;x&lt;/var&gt;(i) / sum (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6617d16dfc00ea47813d28158662ed96c170ffc8" translate="yes" xml:space="preserve">
          <source>When called with a string, the aforementioned properties are set according to the values in the following table:</source>
          <target state="translated">文字列を指定して呼び出された場合は、以下の表の値に応じて前述のプロパティが設定されます。</target>
        </trans-unit>
        <trans-unit id="d690c22db89da0b74129cbd0b6958bf0614ae0eb" translate="yes" xml:space="preserve">
          <source>When called with a third input argument, &lt;code&gt;pchip&lt;/code&gt; evaluates the pchip polynomial at the points &lt;var&gt;xi&lt;/var&gt;. The third calling form is equivalent to &lt;code&gt;ppval (pchip (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">3番目の入力引数を指定して呼び出されると、 &lt;code&gt;pchip&lt;/code&gt; は点 &lt;var&gt;xi&lt;/var&gt; でpchip多項式を評価します。3番目の呼び出し形式は &lt;code&gt;ppval (pchip (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="c9f7d1797c7b845b0a05013676bcd62443e2eca7" translate="yes" xml:space="preserve">
          <source>When called with a third input argument, &lt;code&gt;spline&lt;/code&gt; evaluates the spline at the points &lt;var&gt;xi&lt;/var&gt;. The third calling form &lt;code&gt;spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; is equivalent to &lt;code&gt;ppval (spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">3番目の入力引数を指定して呼び出されると、splineは点 &lt;var&gt;xi&lt;/var&gt; で &lt;code&gt;spline&lt;/code&gt; 評価します。3番目の呼び出し形式 &lt;code&gt;spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; 、 &lt;var&gt;xi&lt;/var&gt; ）は、 &lt;code&gt;ppval (spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）、 &lt;var&gt;xi&lt;/var&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="5912c7a13039c8d7d84632b0ae09bb7d8ad47702" translate="yes" xml:space="preserve">
          <source>When called with a vector of three elements, the ambient, diffuse, and specular strengths of all &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects in the current axes are updated. An optional fourth vector element updates the specular exponent, and an optional fifth vector element updates the specular color reflectance.</source>
          <target state="translated">3つの要素のベクトルで呼び出されると、現在の軸のすべての &lt;code&gt;patch&lt;/code&gt; オブジェクトと &lt;code&gt;surface&lt;/code&gt; オブジェクトのアンビエント、ディフューズ、スペキュラーの強度が更新されます。オプションの4番目のベクトル要素は鏡面指数を更新し、オプションの5番目のベクトル要素は鏡面反射率を更新します。</target>
        </trans-unit>
        <trans-unit id="0571e1e72364c30079cc11ecea5bcc5aca254db1" translate="yes" xml:space="preserve">
          <source>When called with an optional third argument the order of colors in the new colormap is defined by &lt;var&gt;index&lt;/var&gt;.</source>
          <target state="translated">オプションの3番目の引数を指定して呼び出すと、新しいカラーマップの色の順序は &lt;var&gt;index&lt;/var&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="f6106003e90857a731661b66bf2a42e53b8d2426" translate="yes" xml:space="preserve">
          <source>When called with an output argument, return a vector of structures describing Octave and each installed package. The structure includes the following fields.</source>
          <target state="translated">出力引数で呼び出された場合,Octaveと各インストールされたパッケージを記述した構造体のベクトルを返します。構造体には,以下のフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="b12f91c889dc385b75571e85ec5067e3eb1ba4bc" translate="yes" xml:space="preserve">
          <source>When called with argument &lt;code&gt;&quot;mode&quot;&lt;/code&gt;, &lt;code&gt;xticklabels&lt;/code&gt; returns the current value of the axes property &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt;. This property can be changed by calling &lt;code&gt;xticklabels&lt;/code&gt; with either &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (algorithm determines tick labels) or &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (tick labels remain fixed). Note: Specifying xticklabel values will also set the &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; and &lt;code&gt;&quot;xticks&quot;&lt;/code&gt; properties to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;&quot;mode&quot;&lt;/code&gt; を指定して呼び出すと、 &lt;code&gt;xticklabels&lt;/code&gt; はAxesプロパティ &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; の現在の値を返します。このプロパティは、 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; （アルゴリズムによって目盛りラベルが決定される）または &lt;code&gt;&quot;manual&quot;&lt;/code&gt; （目盛りラベルは固定されたまま）で &lt;code&gt;xticklabels&lt;/code&gt; を呼び出すことによって変更できます。注：xticklabel値を指定すると、 &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; および &lt;code&gt;&quot;xticks&quot;&lt;/code&gt; プロパティも &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="1543ee478100234577c8472a5902511002d06b8f" translate="yes" xml:space="preserve">
          <source>When called with argument &lt;code&gt;&quot;mode&quot;&lt;/code&gt;, &lt;code&gt;xticks&lt;/code&gt; returns the current value of the axes property &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt;. This property can be changed by calling &lt;code&gt;xticks&lt;/code&gt; with either &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (algorithm determines tick positions) or &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (tick values remain fixed regardless of axes resizing or rotation). Note: Specifying xtick values will also set the property &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;&quot;mode&quot;&lt;/code&gt; を指定して呼び出すと、 &lt;code&gt;xticks&lt;/code&gt; はAxesプロパティ &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; の現在の値を返します。このプロパティは、 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; （アルゴリズムによって目盛りの位置が決まる）または &lt;code&gt;&quot;manual&quot;&lt;/code&gt; （軸のサイズ変更や回転に関係なく目盛りの値が固定されたまま）で &lt;code&gt;xticks&lt;/code&gt; を呼び出すことによって変更できます。注：xtick値を指定すると、プロパティ &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; が &lt;code&gt;&quot;manual&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="ec208446d249f8b8a00c1b178efc0411bed34153" translate="yes" xml:space="preserve">
          <source>When called with just a single output argument &lt;var&gt;success&lt;/var&gt;, &lt;code&gt;test&lt;/code&gt; returns true if all of the tests were successful. If called with more than one output argument then the number of successful tests (&lt;var&gt;n&lt;/var&gt;), the total number of tests in the file (&lt;var&gt;nmax&lt;/var&gt;), the number of xtest failures (&lt;var&gt;nxfail&lt;/var&gt;), the number of tests failed due known bugs (&lt;var&gt;nbug&lt;/var&gt;), the number of tests skipped due to missing features (&lt;var&gt;nskip&lt;/var&gt;), the number of tests skipped due to run-time conditions (&lt;var&gt;nrtskip&lt;/var&gt;), and the number of regressions (&lt;var&gt;nregression&lt;/var&gt;) are returned.</source>
          <target state="translated">単一の出力引数 &lt;var&gt;success&lt;/var&gt; だけで呼び出された場合、すべてのテストが成功した場合、 &lt;code&gt;test&lt;/code&gt; はtrueを返します。複数の出力引数を指定して呼び出された場合、成功したテストの数（ &lt;var&gt;n&lt;/var&gt; ）、ファイル内のテストの総数（ &lt;var&gt;nmax&lt;/var&gt; ）、xtestの失敗数（ &lt;var&gt;nxfail&lt;/var&gt; ）、既知のバグにより失敗したテストの数（ &lt;var&gt;nbug&lt;/var&gt; ） 、欠落した機能が原因でスキップされたテストの数（ &lt;var&gt;nskip&lt;/var&gt; ）、ランタイム条件が原因でスキップされたテストの数（ &lt;var&gt;nrtskip&lt;/var&gt; ）、および回帰の数（ &lt;var&gt;nregression&lt;/var&gt; ）が返されます。</target>
        </trans-unit>
        <trans-unit id="58d8def1603dc8cebe37a653914f28a8493adda2" translate="yes" xml:space="preserve">
          <source>When called with more than one argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions. The optional argument &lt;var&gt;class&lt;/var&gt; specifies the return type and may be either &lt;code&gt;&quot;double&quot;&lt;/code&gt; or &lt;code&gt;&quot;single&quot;&lt;/code&gt;.</source>
          <target state="translated">複数の引数で呼び出された場合、最初の2つの引数は行と列の数として解釈され、それ以降の引数は追加の行列の次元を指定します。オプションの引数 &lt;var&gt;class&lt;/var&gt; は戻り値の型を指定し、 &lt;code&gt;&quot;double&quot;&lt;/code&gt; または &lt;code&gt;&quot;single&quot;&lt;/code&gt; のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="0b7967a7b99e6fe25e27b9568a376336b12bd6d3" translate="yes" xml:space="preserve">
          <source>When called with more than one scalar argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions.</source>
          <target state="translated">複数のスカラ引数を指定して呼ばれた場合,最初の2つの引数は行と列の数として扱われ,それ以上の引数は追加の行列の次元を指定します.</target>
        </trans-unit>
        <trans-unit id="27c8c8897b326272181e0f10c49e41641ede726a" translate="yes" xml:space="preserve">
          <source>When called with no argument the hidden line removal state is toggled.</source>
          <target state="translated">引数なしで呼び出された場合は、隠し線の除去状態がトグルされます。</target>
        </trans-unit>
        <trans-unit id="a1363c6dafefb968186423c28e913a77b16c7949" translate="yes" xml:space="preserve">
          <source>When called with no arguments in debugging mode, display the script file currently being debugged.</source>
          <target state="translated">デバッグモードで引数なしで呼び出された場合、デバッグ中のスクリプトファイルを表示します。</target>
        </trans-unit>
        <trans-unit id="defb9134f86f75925317687f0beb96c27163f857" translate="yes" xml:space="preserve">
          <source>When called with no arguments, &lt;code&gt;clearvars&lt;/code&gt; deletes all local variables.</source>
          <target state="translated">引数なしで呼び出されると、 &lt;code&gt;clearvars&lt;/code&gt; はすべてのローカル変数を削除します。</target>
        </trans-unit>
        <trans-unit id="2e2a2e6dc93d3488539ba440cf12f4f0d7471de1" translate="yes" xml:space="preserve">
          <source>When called with no arguments, a light object is added to the current plot and is placed slightly above and to the right of the camera&amp;rsquo;s current position: this is equivalent to &lt;code&gt;camlight right&lt;/code&gt;. The commands &lt;code&gt;camlight left&lt;/code&gt; and &lt;code&gt;camlight headlight&lt;/code&gt; behave similarly with the placement being either left of the camera position or centered on the camera position.</source>
          <target state="translated">引数なしで呼び出されると、lightオブジェクトが現在のプロットに追加され、カメラの現在位置の少し上と右に配置されます。これは &lt;code&gt;camlight right&lt;/code&gt; と同等です。 &lt;code&gt;camlight left&lt;/code&gt; コマンドと &lt;code&gt;camlight headlight&lt;/code&gt; コマンドは、カメラ位置の左側またはカメラ位置の中央に配置された場合と同様に動作します。</target>
        </trans-unit>
        <trans-unit id="ada31907fdf98e527ec4009238d62d2981120809" translate="yes" xml:space="preserve">
          <source>When called with no arguments, close the current figure. This is equivalent to &lt;code&gt;close (gcf)&lt;/code&gt;. If the input &lt;var&gt;h&lt;/var&gt; is a graphic handle, or vector of graphics handles, then close each figure in &lt;var&gt;h&lt;/var&gt;. The figure to close may also be specified by name &lt;var&gt;figname&lt;/var&gt; which is matched against the &lt;code&gt;&quot;Name&quot;&lt;/code&gt; property of all figures.</source>
          <target state="translated">引数なしで呼び出された場合、現在のFigureを閉じます。これは &lt;code&gt;close (gcf)&lt;/code&gt; と同じです。入力された場合 &lt;var&gt;h&lt;/var&gt; はグラフィックハンドル、又はグラフィックハンドルのベクトルであり、その後に各図形を閉じ &lt;var&gt;h&lt;/var&gt; 。閉じる図形は、すべての図形の &lt;code&gt;&quot;Name&quot;&lt;/code&gt; プロパティと照合される名前 &lt;var&gt;figname&lt;/var&gt; で指定することもできます。</target>
        </trans-unit>
        <trans-unit id="9ee97b13a0c53d178aae93f61429c363272e5d5e" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &amp;lsquo;</source>
          <target state="translated">引数なしで呼び出された場合、値が 'のスカラーを返します</target>
        </trans-unit>
        <trans-unit id="67e5d5585b35896e308f0362bbe0ed87cd7b7cfa" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;eps (1.0)&lt;/code&gt;.</source>
          <target state="translated">引数なしで呼び出されると、値 &lt;code&gt;eps (1.0)&lt;/code&gt; スカラーを返します。</target>
        </trans-unit>
        <trans-unit id="6b1d3209fc138f0a15331e0127085378e20d0f98" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;realmax (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt;.</source>
          <target state="translated">引数なしで呼び出されると、値 &lt;code&gt;realmax (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt; 持つスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="9eccb9d1dece6f0bee8a8e059fec4080954757f8" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;realmin (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt;.</source>
          <target state="translated">引数なしで呼び出されると、値 &lt;code&gt;realmin (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt; 持つスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="790dbfd1008015554eb09d1ba9dc1ce49a4e2cfe" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">引数なしで呼び出されると、値&lt;em&gt;eの&lt;/em&gt;スカラーを返します。</target>
        </trans-unit>
        <trans-unit id="53c42adc9631c6b59e9912d3acf278930762ee7f" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">引数なしで呼び出されると、値が&lt;em&gt;iの&lt;/em&gt;スカラーを返します。</target>
        </trans-unit>
        <trans-unit id="8403587fed92e1d80a9619e52261d742a9f843f6" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value of pi.</source>
          <target state="translated">引数なしで呼び出された場合、πの値を持つスカラを返します。</target>
        </trans-unit>
        <trans-unit id="f8ae78521b95f284039298bd86b1652455cb1d7c" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return the current print orientation.</source>
          <target state="translated">引数なしで呼び出された場合は、現在の印刷の向きを返します。</target>
        </trans-unit>
        <trans-unit id="c6bbd68342dead75b74b7683e0ab6b66eb131cf4" translate="yes" xml:space="preserve">
          <source>When called with no arguments, the names of all available options and their current values are displayed.</source>
          <target state="translated">引数なしで呼び出された場合、利用可能なすべてのオプションの名前とその現在の値が表示されます。</target>
        </trans-unit>
        <trans-unit id="68c3679768318677d3528dc001462951b48b2cf2" translate="yes" xml:space="preserve">
          <source>When called with no extra input arguments, it returns the Octave license, otherwise the first input defines the operation mode and must be one of the following strings: &lt;code&gt;inuse&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;checkout&lt;/code&gt;. The optional &lt;var&gt;feature&lt;/var&gt; argument can either be &lt;code&gt;&quot;octave&quot;&lt;/code&gt; (core), or an Octave package.</source>
          <target state="translated">追加の入力引数なしで呼び出されると、Octaveライセンスを返します。それ以外の場合、最初の入力は操作モードを定義し、次の文字列のいずれかでなければなりません： &lt;code&gt;inuse&lt;/code&gt; 、 &lt;code&gt;test&lt;/code&gt; 、および &lt;code&gt;checkout&lt;/code&gt; 。オプションの &lt;var&gt;feature&lt;/var&gt; 引数は、 &lt;code&gt;&quot;octave&quot;&lt;/code&gt; （コア）またはオクターブパッケージのいずれかです。</target>
        </trans-unit>
        <trans-unit id="1046ed4c0ab71423c2c66a0d04c8b4e47abe3f41" translate="yes" xml:space="preserve">
          <source>When called with no input argument and one output argument, return a new ODE options structure that contains all possible fields initialized to their default values. If no output argument is requested, display a list of the common ODE solver options along with their default value.</source>
          <target state="translated">入力引数と出力引数がない状態で呼び出された場合、デフォルト値に初期化されたすべての可能なフィールドを含む新しい ODE オプション構造体を返します。出力引数が要求されなかった場合、一般的なODEソルバーオプションのリストをデフォルト値と共に表示します。</target>
        </trans-unit>
        <trans-unit id="5b8babe9cd4a499630a96f7080d453d7852ecd7b" translate="yes" xml:space="preserve">
          <source>When called with no input arguments a default map is created with strings as the key type and &lt;code&gt;&quot;any&quot;&lt;/code&gt; as the value type.</source>
          <target state="translated">入力引数なしで呼び出されると、デフォルトのマップが作成されます。キータイプは文字列で、値タイプは &lt;code&gt;&quot;any&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="038c50cb5ee80f5e177a1157dfd51547500463c9" translate="yes" xml:space="preserve">
          <source>When called with no input arguments the &lt;code&gt;print_usage&lt;/code&gt; function displays the usage message of the currently executing function.</source>
          <target state="translated">入力引数なしで呼び出されると、 &lt;code&gt;print_usage&lt;/code&gt; 関数は現在実行中の関数の使用法メッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="6d0c3de4496e5bdcfffd98edaaba1068b52856d9" translate="yes" xml:space="preserve">
          <source>When called with no input or output arguments, print the list of all functions with breakpoints and the line numbers where those breakpoints are set.</source>
          <target state="translated">入出力引数を持たずに呼び出された場合、ブレークポイントを持つすべての関数のリストと、それらのブレークポイントが設定されている行番号を表示します。</target>
        </trans-unit>
        <trans-unit id="c5a2532a39d5863238c58042658f24ca1694fda0" translate="yes" xml:space="preserve">
          <source>When called with no inputs, return the current value of errno.</source>
          <target state="translated">入力がない状態で呼び出された場合、 errno の現在の値を返します。</target>
        </trans-unit>
        <trans-unit id="3c0809b24158073b6eb69b2444d61369643686cf" translate="yes" xml:space="preserve">
          <source>When called with no output argument, or the &lt;code&gt;&quot;-echo&quot;&lt;/code&gt; argument is given, then &lt;var&gt;text&lt;/var&gt; is also sent to standard output.</source>
          <target state="translated">出力引数なしで呼び出された場合、または &lt;code&gt;&quot;-echo&quot;&lt;/code&gt; 引数が指定された場合、 &lt;var&gt;text&lt;/var&gt; も標準出力に送信されます。</target>
        </trans-unit>
        <trans-unit id="4f5e1bfbb63747ecbdd45c801f9d2e18c2c0113e" translate="yes" xml:space="preserve">
          <source>When called with no output arguments, &lt;code&gt;lookfor&lt;/code&gt; prints the list of matching functions to the terminal. Otherwise, the output argument &lt;var&gt;fcns&lt;/var&gt; contains the function names and &lt;var&gt;help1str&lt;/var&gt; contains the first sentence from the help string of each function.</source>
          <target state="translated">出力引数なしで呼び出されると、 &lt;code&gt;lookfor&lt;/code&gt; は一致する関数のリストを端末に出力します。それ以外の場合、出力引数 &lt;var&gt;fcns&lt;/var&gt; には関数名が含まれ、 &lt;var&gt;help1str&lt;/var&gt; には各関数のヘルプ文字列の最初の文が含まれます。</target>
        </trans-unit>
        <trans-unit id="0c229f92e8bcab895e90b1d9478e717228759365" translate="yes" xml:space="preserve">
          <source>When called with no output arguments, &lt;code&gt;methods&lt;/code&gt; prints the list of method names to the screen. Otherwise, the output argument &lt;var&gt;mtds&lt;/var&gt; contains the list in a cell array of strings.</source>
          <target state="translated">&lt;code&gt;methods&lt;/code&gt; は、出力引数なしで呼び出されると、メソッド名のリストを画面に出力します。それ以外の場合、出力引数 &lt;var&gt;mtds&lt;/var&gt; には文字列のセル配列のリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="2d0f0cbf1c2e5c2ba41d40bcbd031320e12aa44d" translate="yes" xml:space="preserve">
          <source>When called with no outputs the periodogram is immediately plotted in the current figure window.</source>
          <target state="translated">出力がない状態で呼び出されると、ピリオドグラムは直ちに現在の図形ウィンドウにプロットされます。</target>
        </trans-unit>
        <trans-unit id="40c37fe4d1f4eb5f2c40666a593fdbde3f6f98c5" translate="yes" xml:space="preserve">
          <source>When called with one of the modes &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt; the state is set accordingly.</source>
          <target state="translated">&lt;code&gt;&quot;on&quot;&lt;/code&gt; または &lt;code&gt;&quot;off&quot;&lt;/code&gt; のモードのいずれかで呼び出されると、それに応じて状態が設定されます。</target>
        </trans-unit>
        <trans-unit id="801cb8b8eb0a80525e372c0d33f75a965ce381ce" translate="yes" xml:space="preserve">
          <source>When called with one output and no inputs, return an options structure with all valid option parameters initialized to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">1つの出力で入力なしで呼び出されると、すべての有効なオプションパラメーターが &lt;code&gt;[]&lt;/code&gt; に初期化されたオプション構造体を返します。</target>
        </trans-unit>
        <trans-unit id="4a0423ee323d4b89a177010dfd6e35bec40ae839" translate="yes" xml:space="preserve">
          <source>When called with one output argument, return a string containing a continued fraction expansion (multiple terms).</source>
          <target state="translated">1つの出力引数で呼び出された場合、継続的な分数展開(複数項)を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="7d5602fdad04b15911922e484f855824d3ae8c32" translate="yes" xml:space="preserve">
          <source>When called with one output only elliptic integrals of the first kind are returned.</source>
          <target state="translated">1つの出力で呼び出された場合、最初の種類の楕円積分のみが返されます。</target>
        </trans-unit>
        <trans-unit id="9a4a8be83eba5e6e8172f63fc9a17991eab3acc9" translate="yes" xml:space="preserve">
          <source>When called with only two arguments, &lt;code&gt;cmpermute&lt;/code&gt; randomly rearranges the colormap &lt;var&gt;map&lt;/var&gt; and returns a new colormap &lt;var&gt;newmap&lt;/var&gt;. It also returns the indexed image &lt;var&gt;Y&lt;/var&gt; which is the equivalent of the original input image &lt;var&gt;X&lt;/var&gt; when displayed using &lt;var&gt;newmap&lt;/var&gt;.</source>
          <target state="translated">2つの引数のみで呼び出されると、 &lt;code&gt;cmpermute&lt;/code&gt; はランダムにカラーマップ &lt;var&gt;map&lt;/var&gt; を再配置し、新しいカラーマップ &lt;var&gt;newmap&lt;/var&gt; を返します。また、 &lt;var&gt;newmap&lt;/var&gt; を使用して表示した場合、元の入力画像 &lt;var&gt;X&lt;/var&gt; と同等のインデックス付き画像 &lt;var&gt;Y&lt;/var&gt; も返します。</target>
        </trans-unit>
        <trans-unit id="de134f154d591d57d0d5c8f4e905cefde039f211" translate="yes" xml:space="preserve">
          <source>When called with output arguments, return the data for the function evaluated over the meshgrid. This can subsequently be plotted with &lt;code&gt;surf (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">出力引数を指定して呼び出された場合、meshgridで評価された関数のデータを返します。その後、これを &lt;code&gt;surf (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; でプロットできます。</target>
        </trans-unit>
        <trans-unit id="0b7723bf9e0b7fe31676258acb6f558e5b6b83bc" translate="yes" xml:space="preserve">
          <source>When called with output arguments, the examples are returned in the form of a string &lt;var&gt;s&lt;/var&gt;, with &lt;var&gt;idx&lt;/var&gt; indicating the ending position of the various examples.</source>
          <target state="translated">出力引数で呼び出された場合、実施例では、文字列の形式で返される &lt;var&gt;s&lt;/var&gt; と、 &lt;var&gt;idx&lt;/var&gt; 種々の例の終了位置を示します。</target>
        </trans-unit>
        <trans-unit id="3f75551ed0ec52d20e8ccc65f9ef6b65e61cb567" translate="yes" xml:space="preserve">
          <source>When called with the &lt;code&gt;&quot;warning&quot;&lt;/code&gt; option &lt;code&gt;fail&lt;/code&gt; will produce an error if executing the code produces no warning.</source>
          <target state="translated">で呼び出された場合 &lt;code&gt;&quot;warning&quot;&lt;/code&gt; オプション &lt;code&gt;fail&lt;/code&gt; コードを実行すると、警告を生成しない場合は、エラーが生成されます。</target>
        </trans-unit>
        <trans-unit id="bf6d49a0d08ec7dbf2f9641f794f790234bb2d09" translate="yes" xml:space="preserve">
          <source>When called with the name of a function, list that script file with line numbers.</source>
          <target state="translated">関数名を指定して呼び出された場合、そのスクリプトファイルの行番号をリストアップします。</target>
        </trans-unit>
        <trans-unit id="108489bab7c0283a92553b349ad16454f35da5ea" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;daspk_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">2つの引数を指定して呼び出されると、 &lt;code&gt;daspk_options&lt;/code&gt; はオプション &lt;var&gt;opt&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0d575a4047d1f6fd1a15bb0a822be02cbfc8ede4" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;dasrt_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">2つの引数を指定して呼び出されると、 &lt;code&gt;dasrt_options&lt;/code&gt; はオプション &lt;var&gt;opt&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="c180fba300e0412405277d7a041d3981a479c65c" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;dassl_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">2つの引数を指定して呼び出されると、 &lt;code&gt;dassl_options&lt;/code&gt; はオプション &lt;var&gt;opt&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="6cdd317d616c3c6e2e52de90cc18b823a8fe3eeb" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;lsode_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">2つの引数を指定して呼び出されると、 &lt;code&gt;lsode_options&lt;/code&gt; はオプション &lt;var&gt;opt&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4e581c84e05fb0619029d7b17b606052a2365ca1" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;quad_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">2つの引数を指定して呼び出すと、 &lt;code&gt;quad_options&lt;/code&gt; はオプション &lt;var&gt;opt&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="ca8bd71d2d4e1bf36ca82c18bdeaecac9c084cde" translate="yes" xml:space="preserve">
          <source>When called with two arguments, return the piecewise polynomial &lt;var&gt;pp&lt;/var&gt; that may be used with &lt;code&gt;ppval&lt;/code&gt; to evaluate the polynomial at specific points.</source>
          <target state="translated">2つの引数を指定して &lt;code&gt;ppval&lt;/code&gt; れた場合、特定の点で多項式を評価するためにppvalで使用できる区分的多項式 &lt;var&gt;pp&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="851e4e7cb65856707fbbac1b46eeed3c6b093c1a" translate="yes" xml:space="preserve">
          <source>When called with two input ODE options structures &lt;var&gt;oldstruct&lt;/var&gt; and &lt;var&gt;newstruct&lt;/var&gt; overwrite all values from the structure &lt;var&gt;oldstruct&lt;/var&gt; with new values from the structure &lt;var&gt;newstruct&lt;/var&gt;. Empty values in &lt;var&gt;newstruct&lt;/var&gt; will not overwrite values in &lt;var&gt;oldstruct&lt;/var&gt;.</source>
          <target state="translated">二つの入力ODEオプション構造と呼ばれた場合 &lt;var&gt;oldstruct&lt;/var&gt; と &lt;var&gt;newstruct&lt;/var&gt; 上書き構造から全ての値 &lt;var&gt;oldstruct&lt;/var&gt; 構造から新しい値で &lt;var&gt;newstruct&lt;/var&gt; 。中に空の値 &lt;var&gt;newstruct&lt;/var&gt; でなりません上書き値 &lt;var&gt;oldstruct&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="461821e048c20c8bf9f0e07f52f20887f1932070" translate="yes" xml:space="preserve">
          <source>When called with two or three output arguments and a sparse input matrix, &lt;code&gt;lu&lt;/code&gt; does not attempt to perform sparsity preserving column permutations. Called with a fourth output argument, the sparsity preserving column transformation &lt;var&gt;Q&lt;/var&gt; is returned, such that &lt;code&gt;&lt;var&gt;P&lt;/var&gt; * &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;Q&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt;. This is the &lt;strong&gt;preferred&lt;/strong&gt; way to call &lt;code&gt;lu&lt;/code&gt; with sparse input matrices.</source>
          <target state="translated">2つまたは3つの出力引数とスパース入力行列を指定して呼び出された場合、 &lt;code&gt;lu&lt;/code&gt; はスパース性を維持する列の置換を実行しようとしません。4番目の出力引数を指定して呼び出すと、スパース性を維持する列変換 &lt;var&gt;Q&lt;/var&gt; が返されます。たとえば、 &lt;code&gt;&lt;var&gt;P&lt;/var&gt; * &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;Q&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt; ます。これは、スパース入力行列で &lt;code&gt;lu&lt;/code&gt; を呼び出すための&lt;strong&gt;推奨される&lt;/strong&gt;方法です。</target>
        </trans-unit>
        <trans-unit id="2355dbace9ea2a76c3d61c4fbbe0b59cc3e3b2f2" translate="yes" xml:space="preserve">
          <source>When called with two output arguments, [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;], &lt;var&gt;x&lt;/var&gt; will contain the input values, and &lt;var&gt;y&lt;/var&gt; will contain the output from &lt;code&gt;humps&lt;/code&gt;.</source>
          <target state="translated">2つの出力引数[ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ]を指定して呼び出すと、 &lt;var&gt;x&lt;/var&gt; には入力値が含まれ、 &lt;var&gt;y&lt;/var&gt; には &lt;code&gt;humps&lt;/code&gt; からの出力が含まれます。</target>
        </trans-unit>
        <trans-unit id="288c13363c859382a9729a7dbadf247ccd305a68" translate="yes" xml:space="preserve">
          <source>When called with two output arguments, return numeric matrices for the numerator and denominator of a fractional representation of &lt;var&gt;x&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;n&lt;/var&gt; ./ &lt;var&gt;d&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">2つの出力引数を指定して呼び出されると、 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;n&lt;/var&gt; ./ &lt;var&gt;d&lt;/var&gt;&lt;/code&gt; = &lt;var&gt;n&lt;/var&gt; ./ &lt;var&gt;d&lt;/var&gt; のような &lt;var&gt;x&lt;/var&gt; の分数表現の分子と分母の数値行列を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
