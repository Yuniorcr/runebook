<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="bb705b8ab898a2c70ca988271ef3e1eae5061fd2" translate="yes" xml:space="preserve">
          <source>Fork can return one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d500fd4e6336446b62c8f86091ec6d489fd68d5" translate="yes" xml:space="preserve">
          <source>Form a block matrix of size &lt;var&gt;m&lt;/var&gt; by &lt;var&gt;n&lt;/var&gt;, with a copy of matrix &lt;var&gt;A&lt;/var&gt; as each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7194b26da128a5c2f554dffa58a0836a97a981" translate="yes" xml:space="preserve">
          <source>Form the Kronecker product of two or more matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066eaee811ed2b680e57026d7a850ab2ee216724" translate="yes" xml:space="preserve">
          <source>Formal parameter (function argument).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="50b699e57e33d9a54cc0e9e521dc7e9274da31f9" translate="yes" xml:space="preserve">
          <source>Format a figure for printing and either save it to a file, send it to a printer, or return an RGB image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b894109e01cbeeaefb83d5eea27e08c0609b55" translate="yes" xml:space="preserve">
          <source>Format arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9151cf0df95ff2f005ffb2dbfff11e476773720" translate="yes" xml:space="preserve">
          <source>Format of Descriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e4df20dff409b31ea6f4c87fa441d582ab5d47" translate="yes" xml:space="preserve">
          <source>Format real, complex, and logical matrices as strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a511932159a2317deb13d50eb911070cf635bdc4" translate="yes" xml:space="preserve">
          <source>Format the given date/time according to the format &lt;var&gt;f&lt;/var&gt; and return the result in &lt;var&gt;str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727d06c68874f136f3a19dee36d75019f8a44353" translate="yes" xml:space="preserve">
          <source>Format the optional arguments under the control of the template string &lt;var&gt;template&lt;/var&gt; using the same rules as the &lt;code&gt;printf&lt;/code&gt; family of functions (see &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;) and print the resulting message on the &lt;code&gt;stderr&lt;/code&gt; stream. The message is prefixed by the character string &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f1b6d861dec36076e349d31e029c614617f194" translate="yes" xml:space="preserve">
          <source>Format the time structure &lt;var&gt;tm_struct&lt;/var&gt; in a flexible way using the format string &lt;var&gt;fmt&lt;/var&gt; that contains &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80a71b1d37923b6088bb483ae8ceaa343389a08" translate="yes" xml:space="preserve">
          <source>Formatted Input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb78b125473cbdf7c20e093d2fe3362a7126a9a" translate="yes" xml:space="preserve">
          <source>Formatted Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d93e14cc9419abbb61b92dce6ed000198078ea" translate="yes" xml:space="preserve">
          <source>Formatted data from can be read from, or written to, text files as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6678225f59e5ac59ba245837db3f3ec97b5824fc" translate="yes" xml:space="preserve">
          <source>Fourier interpolation, is a resampling technique where a signal is converted to the frequency domain, padded with zeros and then reconverted to the time domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a412f2d17011e182168c5c789d9633e22203ec" translate="yes" xml:space="preserve">
          <source>Fourier interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50206e83f8a92e3dfec282b5db50b4fb82528f0b" translate="yes" xml:space="preserve">
          <source>Fraction of axes limits to zoom for each wheel movement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8107e2155cccf9f31104574427da3578e652b78" translate="yes" xml:space="preserve">
          <source>Free Software is needed for Free Science</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40293b3e02253eb68cf357321931bc1ef5ef5c88" translate="yes" xml:space="preserve">
          <source>FreeType</source>
          <target state="translated">FreeType</target>
        </trans-unit>
        <trans-unit id="bbd6e32ee1326237814b697269b4368033d50d2f" translate="yes" xml:space="preserve">
          <source>Fri</source>
          <target state="translated">Fri</target>
        </trans-unit>
        <trans-unit id="d166e844a3f3f87149cc4f866eb998e9a751c72a" translate="yes" xml:space="preserve">
          <source>Friday</source>
          <target state="translated">Friday</target>
        </trans-unit>
        <trans-unit id="8af9234684b665860e62728592dc6504599451e7" translate="yes" xml:space="preserve">
          <source>Frobenius norm of &lt;var&gt;A&lt;/var&gt;, &lt;code&gt;sqrt (sum (diag (&lt;var&gt;A&lt;/var&gt;' * &lt;var&gt;A&lt;/var&gt;)))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12417b561f7df6984b2b9f6814aab163c64edb2" translate="yes" xml:space="preserve">
          <source>Frobenius norm of &lt;var&gt;A&lt;/var&gt;, &lt;code&gt;sqrt (sumsq (abs (A)))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d23c53d84b9924ed9452f4bee464a1b3fba459f" translate="yes" xml:space="preserve">
          <source>From a user binary program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86c7074fa10260d3d9ae0cadb6b7bff099b2b69" translate="yes" xml:space="preserve">
          <source>Full month name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00daadbef5a60c585afedbbc1e3313c955a4b069" translate="yes" xml:space="preserve">
          <source>Full name of &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139dfd29ac5832efe617e771eed7cbcfc7763e7a" translate="yes" xml:space="preserve">
          <source>Full output (includes informational messages).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6006147180eb2dc5c78825e80820e6bf917c219c" translate="yes" xml:space="preserve">
          <source>Full path to directory &lt;var&gt;dir&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71cf0e2635fc645bed77806c8ce41c68a47e2e6" translate="yes" xml:space="preserve">
          <source>Full weekday name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dade099ceffa26f685ee7b290b0fc5be4a0e878" translate="yes" xml:space="preserve">
          <source>Full year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c1a1cff35140cfb6f86d5fd8c5dc86ec628e87" translate="yes" xml:space="preserve">
          <source>FunValCheck</source>
          <target state="translated">FunValCheck</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="5f7a4212127dec3b54accbdf59f34f2fd55de3a2" translate="yes" xml:space="preserve">
          <source>Function Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464c7ff99f19a8b9f5907a26d3f771672d8b6013" translate="yes" xml:space="preserve">
          <source>Function Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef5e620b49c88e2abce45dcdbddb8770264705f" translate="yes" xml:space="preserve">
          <source>Function Handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415b451813744f9b33a4037a5c97f6ee6fa51546" translate="yes" xml:space="preserve">
          <source>Function Handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3a6ec766ba338eb4f9387d1b293510da0bf4ae" translate="yes" xml:space="preserve">
          <source>Function Handles Anonymous Functions Inline Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b65dbde0dc28101ece57822c5216ed14c7e56f7" translate="yes" xml:space="preserve">
          <source>Function Handles, Anonymous Functions, Inline Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ec7604326dea76b8e89b9d6e7d98debb6b11f5" translate="yes" xml:space="preserve">
          <source>Function Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8c65d0944c2114ab77115f0f52edf113b1fe4" translate="yes" xml:space="preserve">
          <source>Function Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84101354a0a57697de0f255638b9cba689a57826" translate="yes" xml:space="preserve">
          <source>Function Overloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efabbb6bc1f29e8f6cbf928201364bd34d846eb8" translate="yes" xml:space="preserve">
          <source>Function Precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84bfac165f6331fdd8c2ed443130c83764dfea7" translate="yes" xml:space="preserve">
          <source>Function files distributed with Octave. This includes the Octave version, so that multiple versions of Octave may be installed at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe99b1f8bf6546fe2f5385151a90a05a6964e894" translate="yes" xml:space="preserve">
          <source>Function handles are used to call other functions indirectly, or to pass a function as an argument to another function like &lt;code&gt;quad&lt;/code&gt; or &lt;code&gt;fsolve&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee02fd2d6896fd4604df556e5b04c31e37741e2" translate="yes" xml:space="preserve">
          <source>Function name as a string variable. When already in debug mode this argument can be omitted and the current function will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ff0aa157af240be47f2b3e4dca509661c22c92" translate="yes" xml:space="preserve">
          <source>Function return lists can include structure elements, and they may be indexed like any other variable. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7279dbd65b55cad0a06d27b08ea9f7f962f41d1" translate="yes" xml:space="preserve">
          <source>Function that is executed when a figure is deleted. See &lt;a href=&quot;manipulation-of-plot-windows#XREFclosereq&quot;&gt;closereq function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdb0f77a0285b7b82ba4e1361ee82f63abc1e02" translate="yes" xml:space="preserve">
          <source>Function that is executed when a key is pressed and the figure has focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544d8f4cfefaa0bad34569e65419211b7c8df25c" translate="yes" xml:space="preserve">
          <source>Function that is executed when a key is released and the figure has focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e077f659ca990abe51d35acfaaf9ecdf4e33e8ca" translate="yes" xml:space="preserve">
          <source>Function to monitor the state during the simulation. For the form of the function to use see &lt;code&gt;odeplot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="7eb12e21af8ad7042e0c77bc8527b10f4f365a3d" translate="yes" xml:space="preserve">
          <source>Functions That Are Aware of These Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b641bbc447b528fed43ea513d3d58705f73f4f58" translate="yes" xml:space="preserve">
          <source>Functions and Scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133b6c8b145057ad1f51ae2defd32edaf31ae5e2" translate="yes" xml:space="preserve">
          <source>Functions and commands are described in this manual in a uniform format. The first line of a description contains the name of the item followed by its arguments, if any. If there are multiple ways to invoke the function then each allowable form is listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95554dfd27eebacfb30fc269c58c53e6c3da4195" translate="yes" xml:space="preserve">
          <source>Functions can be overloaded to work with different input arguments. For example, the operator &amp;rsquo;+&amp;rsquo; has been overloaded in Octave to work with single, double, uint8, int32, and many other arguments. The preferred way to overload functions is through classes and object oriented programming (see &lt;a href=&quot;function-overloading#Function-Overloading&quot;&gt;Function Overloading&lt;/a&gt;). Occasionally, however, one needs to undo user overloading and call the default function associated with a specific type. The &lt;code&gt;builtin&lt;/code&gt; function exists for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f92d2a8f1b0eb04de69102160ea78c86ded0b5" translate="yes" xml:space="preserve">
          <source>Functions can return structures. For example, the following function separates the real and complex parts of a matrix and stores them in two elements of the same structure variable &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66277f3523ea1bcec7d11df5afb980a40976902" translate="yes" xml:space="preserve">
          <source>Functions for GUI elements like dialog, message box, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c292b838cb6a4485ef30efbaa8a5b3c2646bf66c" translate="yes" xml:space="preserve">
          <source>Functions for Octave&amp;rsquo;s built-in help system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e27aba1317292a652c500bd013df5b03a347ed" translate="yes" xml:space="preserve">
          <source>Functions for creating and manipulating sets of unique values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc40f448be7aa1a46d3de14fd8f10143f2ba7ef" translate="yes" xml:space="preserve">
          <source>Functions for displaying and printing two- and three-dimensional graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27678c6d0c048cebff8cc496dbc291fc03f48ae" translate="yes" xml:space="preserve">
          <source>Functions for handling sparse matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37607b728d04d6738573f888d22cb1a39766f6fc" translate="yes" xml:space="preserve">
          <source>Functions for linear algebra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9af2bffa3229728a8c8c65aa48b733a8cac719" translate="yes" xml:space="preserve">
          <source>Functions for manipulating polynomials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5dbfd8286eac22d6dbb188d248e53c5456bed7" translate="yes" xml:space="preserve">
          <source>Functions for performing unit tests on other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf50c4104a6c38661c9fba6bc3ca987be667d757" translate="yes" xml:space="preserve">
          <source>Functions for playing and recording sounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524e1ce1a4c4d4ac466187cddf5e29dd367927d3" translate="yes" xml:space="preserve">
          <source>Functions for signal processing applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a961b31a1681aa7e1b4550095e23bd63cdfd607" translate="yes" xml:space="preserve">
          <source>Functions implementing user-defined preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34a9c2905fd9bbf02ef5a5ed2e7b6f0a000566c" translate="yes" xml:space="preserve">
          <source>Functions may take advantage of ignored outputs to reduce the number of calculations performed. To do so, use the &lt;code&gt;isargout&lt;/code&gt; function to query whether the output argument is wanted. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630c503450c3a575ac13f909ad2a89b42ff0952" translate="yes" xml:space="preserve">
          <source>Functions of Multiple Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10b79d3765a6aace4252641cee5d77eb452f76b" translate="yes" xml:space="preserve">
          <source>Functions of One Variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b4d38b9cdf605f32418678041d58e4ea36dbc5" translate="yes" xml:space="preserve">
          <source>Functions of a Matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25aaa8f3293cefb84eff921d12139ea3b5e98f5d" translate="yes" xml:space="preserve">
          <source>Functions related to Delaunay triangulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73f72e04139c2dd30a1256ae1a324afaa066806" translate="yes" xml:space="preserve">
          <source>Functions related to minimization, optimization, and root finding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53129ca981e96cf9ec1c48f4dc5646f8816bd59" translate="yes" xml:space="preserve">
          <source>Functions related to the Java integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed018f1003f6d9cf44094bd1dc238129d98d4bc" translate="yes" xml:space="preserve">
          <source>Functions related to time and date processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2995a71ae97c7ed178587bdb47108374a751f9ee" translate="yes" xml:space="preserve">
          <source>Functions that are of particular interest for overloading are the class conversion functions such as &lt;code&gt;double&lt;/code&gt;. Overloading these functions allows the &lt;code&gt;cast&lt;/code&gt; function to work with a user class. It can also aid in the use of a class object with methods and functions from other classes since the object can be transformed to the requisite input form for the new function. An example &lt;code&gt;double&lt;/code&gt; function for the polynomial class might look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079946b804865d9ced9aa61c50fb7e6b3f79843c" translate="yes" xml:space="preserve">
          <source>Functions that create special matrix forms such as Hilbert or Vandermonde matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2e09e6b72bd73fab760ad7eccd55025b7935a8" translate="yes" xml:space="preserve">
          <source>Functions that don&amp;rsquo;t really belong anywhere else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35996198d0f1eed6fb1ed20bdf5e9be416dca28b" translate="yes" xml:space="preserve">
          <source>Functions to manage the directory path Octave uses to find functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899a0af7aa636595624bcfedd7560166433e778c" translate="yes" xml:space="preserve">
          <source>Functions to solve ordinary differential equations (ODEs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db56f3c6c5d5df2122fa5fe8d15c2cd94ca5dd9" translate="yes" xml:space="preserve">
          <source>Further arguments can be provided in the form of &lt;var&gt;prop&lt;/var&gt;/&lt;var&gt;val&lt;/var&gt; pairs to customize the annotation appearance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad821b8766383dc51f954a93f3bc66c9befb7ac" translate="yes" xml:space="preserve">
          <source>Furthermore, cell elements (accessed by &lt;code&gt;{}&lt;/code&gt;) can be passed directly to a function. The list of elements from the cell array will be passed as an argument list to a given function as if it is called with the elements as individual arguments. The two calls to &lt;code&gt;printf&lt;/code&gt; in the following example are identical but the latter is simpler and can handle cell arrays of an arbitrary size:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae4687dd5f14a4c42fcaac2bb0958b170161a0b" translate="yes" xml:space="preserve">
          <source>Furthermore, the structure array can return a comma separated list of field values (see &lt;a href=&quot;comma-separated-lists#Comma-Separated-Lists&quot;&gt;Comma Separated Lists&lt;/a&gt;), if indexed by one of its own field names. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="f4e86c26db94e29aa3f587e8d147fb580acd5357" translate="yes" xml:space="preserve">
          <source>G = givens (x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed92e94dcf3ba77933b40858e40087ea88a3dc6" translate="yes" xml:space="preserve">
          <source>GET and POST requests can be specified by &lt;var&gt;method&lt;/var&gt; and &lt;var&gt;param&lt;/var&gt;. The parameter &lt;var&gt;method&lt;/var&gt; is either &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d092a779172291b5215aa095390a5b11659128a4" translate="yes" xml:space="preserve">
          <source>GIF image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd886e4d5b189b7b8ced00f90d9c4f7db17b8452" translate="yes" xml:space="preserve">
          <source>GLPK</source>
          <target state="translated">GLPK</target>
        </trans-unit>
        <trans-unit id="77b076db73421d5a4fe7be41b5fe89487e174adb" translate="yes" xml:space="preserve">
          <source>GNU General Public License (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0661715fbdc25a594403da0f2eeb383ba0a4a63b" translate="yes" xml:space="preserve">
          <source>GNU Linear Programming Kit (&lt;a href=&quot;https://www.gnu.org/software/glpk&quot;&gt;https://www.gnu.org/software/glpk&lt;/a&gt;). GPLK is required for the function &lt;code&gt;glpk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a5c2b5092a24b91da184d958185f8c8bf5299d" translate="yes" xml:space="preserve">
          <source>GNU Make</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48168ed09d2b3acadc74b32cec066b033d2f1f22" translate="yes" xml:space="preserve">
          <source>GNU Make, &lt;code&gt;gcc&lt;/code&gt; (and &lt;code&gt;libstdc++&lt;/code&gt;), &lt;code&gt;gnuplot&lt;/code&gt;, &lt;code&gt;bison&lt;/code&gt;, &lt;code&gt;flex&lt;/code&gt;, and Texinfo are all available from many anonymous ftp archives. The primary site is &lt;a href=&quot;ftp.gnu.org&quot;&gt;ftp.gnu.org&lt;/a&gt;, but it is often very busy. A list of sites that mirror the software on &lt;a href=&quot;ftp.gnu.org&quot;&gt;ftp.gnu.org&lt;/a&gt; is available by anonymous ftp from &lt;a href=&quot;ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP&quot;&gt;ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e5fb6b9e40a415ea042994f4fee17c19726770" translate="yes" xml:space="preserve">
          <source>GNU Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7041ba1847f077bccd6209c0efff8d962ebe9c8f" translate="yes" xml:space="preserve">
          <source>GNU Octave is a high-level language primarily intended for numerical computations. It is typically used for such problems as solving linear and nonlinear equations, numerical linear algebra, statistical analysis, and for performing other numerical experiments. It may also be used as a batch-oriented language for automated data processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb25b3eb97c3b0192ca46feb0182a1f922d8b28a" translate="yes" xml:space="preserve">
          <source>GNU Octave is free software distributed under the GNU General Public License (GPL), and a license manager makes no sense. This function is provided only for &lt;small&gt;MATLAB&lt;/small&gt; compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0f82056e443803413f871f7e3deb487323f975" translate="yes" xml:space="preserve">
          <source>GNU Octave is freely redistributable software. You may redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation. The GPL is included in this manual, see &lt;a href=&quot;https://octave.org/doc/interpreter/Copying.html#Copying&quot;&gt;Copying&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fcb07bea636f9b76b20250f924de11070b3bb9" translate="yes" xml:space="preserve">
          <source>GNU Readline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d0a03d6b634079501d388e037f27ccf4e12d02" translate="yes" xml:space="preserve">
          <source>GNU Readline Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af1014f97320db5de7573cc1bc8337c9dddcda3" translate="yes" xml:space="preserve">
          <source>GPSInfo</source>
          <target state="translated">GPSInfo</target>
        </trans-unit>
        <trans-unit id="8341c6e551da5cc291da202b7b171e448d50baea" translate="yes" xml:space="preserve">
          <source>GUI Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14c092f3f0abacd62765a68a147b16585f7f0b8" translate="yes" xml:space="preserve">
          <source>GUI Utility Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb84e52319f9c1aeea15cb3aa8590029bd0d28" translate="yes" xml:space="preserve">
          <source>GUI and utility libraries (&lt;a href=&quot;https://www.qt.io&quot;&gt;https://www.qt.io&lt;/a&gt;). Qt is required for building the GUI. It is a large framework, but the only components required are the GUI, core, and network modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba508b12182b68f501d6af46c4f03f8fc5d2473" translate="yes" xml:space="preserve">
          <source>Gamma</source>
          <target state="translated">Gamma</target>
        </trans-unit>
        <trans-unit id="108f0e616e2bdc5765b9184d9a25cbd941a39677" translate="yes" xml:space="preserve">
          <source>Gamma Distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb08333c00fe6cf71d8034cd302c5e74f61f618" translate="yes" xml:space="preserve">
          <source>Gamma level of the image. The same color image displayed on two different workstations may look different due to differences in the display monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d393499a1e61d62ab6f53a02630001c6b899ab9" translate="yes" xml:space="preserve">
          <source>Generalized eigenvalue problem balancing uses Ward&amp;rsquo;s algorithm (SIAM Journal on Scientific and Statistical Computing, 1981).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a936cd39203b9099b09b1b00b68c65a6dac6f42e" translate="yes" xml:space="preserve">
          <source>Generalized least squares (GLS) model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafed3c6b21c27e7bac7ee570ff5dbafaaffa01f" translate="yes" xml:space="preserve">
          <source>Generally, to test if something works, you want to assert that it produces a correct value. A real test might look something like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a50abf2d2a384ec7a448185b34e3bbefbf5417" translate="yes" xml:space="preserve">
          <source>Generate a LaTeX file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dbc79d3a14492ba05cafceaeffb777c105ce77" translate="yes" xml:space="preserve">
          <source>Generate a LaTeX file using PGF/TikZ format. The OpenGL-based toolkits create a PGF file while Gnuplot creates a TikZ file. The &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2373bb43dec00c2c3a5cc646b66c743d1e7bd5b" translate="yes" xml:space="preserve">
          <source>Generate a regular mesh from irregular data using interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b999fc6763540e3a0022c91966dcf0dd05a9d5f5" translate="yes" xml:space="preserve">
          <source>Generate a report from the Octave script file &lt;var&gt;file&lt;/var&gt; in one of several output formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d549264bc9989da2d9c9147e29c473cfc0fd845e" translate="yes" xml:space="preserve">
          <source>Generate a sparse matrix with normally distributed random values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4957c8e59497b88bee872bc100c352599630031" translate="yes" xml:space="preserve">
          <source>Generate a sparse matrix with uniformly distributed random values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b02f9dc38ba20067ea84a913d847e16e90f525" translate="yes" xml:space="preserve">
          <source>Generate a symmetric random sparse matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d26e16e2b4156884c4fedb512975d74ad416f84" translate="yes" xml:space="preserve">
          <source>Generate all permutations of vector &lt;var&gt;v&lt;/var&gt; with one row per permutation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49fd36b0c05fd0d28b82d66921a289af85747bb" translate="yes" xml:space="preserve">
          <source>Generate an error message if the number of arguments in the calling function is outside the range &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt;. Otherwise, do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4828814bc095fd6e7ec75e08d07aa891c9c54f9d" translate="yes" xml:space="preserve">
          <source>Generate dependency files (.d) for C and C++ source files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0c576c263d7eb8592c05d18cd3db8a7f54a37b" translate="yes" xml:space="preserve">
          <source>Generate documentation cache for all functions in &lt;var&gt;directory&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f611a9124300e6ff937ecfe18dced439c25f1cef" translate="yes" xml:space="preserve">
          <source>Generate indices to slice a vector of length &lt;var&gt;N&lt;/var&gt; in to windows of length &lt;var&gt;wlen&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f063b91738b20ec048e6453ff8eb42b7b39215" translate="yes" xml:space="preserve">
          <source>Generate output with Cairo renderer. The devices &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5490639cef0eb9318fb2cc8e15eb47e0b49e2057" translate="yes" xml:space="preserve">
          <source>Generate possible completions given &lt;var&gt;hint&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04132c6cf071705c3cc5d22b4d4b5d34a4fff50" translate="yes" xml:space="preserve">
          <source>Generate sparse matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef1401ad9879006716433f0a14843efc2fd9770" translate="yes" xml:space="preserve">
          <source>Geometric mean scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1226717c2fc305626512b0a1ae618fddfee0b9" translate="yes" xml:space="preserve">
          <source>Geometry</source>
          <target state="translated">Geometry</target>
        </trans-unit>
        <trans-unit id="d787fe2e3de09d7f5b74f04ec1ee51d8d300e94d" translate="yes" xml:space="preserve">
          <source>Get a list of value names at the key &lt;code&gt;'HKCU\Environment'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c89fa89a9ba047c02999dfe21e87d6d837c591" translate="yes" xml:space="preserve">
          <source>Get license information for Octave and Octave packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea60801cccefb6ae08c23337753c305b28d2e06" translate="yes" xml:space="preserve">
          <source>Get or set the remote directory on the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b00d7e971bb4185d6eb587e316d8e6a8429873" translate="yes" xml:space="preserve">
          <source>Get the value of the field &lt;var&gt;name&lt;/var&gt; of the Java object &lt;var&gt;obj&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5480d200025cc8193cf06d1bf30a6b682948a8c0" translate="yes" xml:space="preserve">
          <source>Get the value of the field named &lt;var&gt;field&lt;/var&gt; from a structure or nested structure &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6f71d622215723fa16217cbf10abbb0f702593" translate="yes" xml:space="preserve">
          <source>Get version information for Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0f73ca6aa746ede1e77153dd3bf5bb16e841ab" translate="yes" xml:space="preserve">
          <source>Getting Help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dd904502958ffe109c8d918b1214517a1e6f7f" translate="yes" xml:space="preserve">
          <source>Getting Started with Mex-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e10f1cb82806b7ce2314dedbd380ce06c111db" translate="yes" xml:space="preserve">
          <source>Getting Started with Oct-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5964ff65ba923bf402f9ac4e3d255669255d6596" translate="yes" xml:space="preserve">
          <source>Getting the &lt;code&gt;&quot;default&quot;&lt;/code&gt; property of an object returns a list of user-defined defaults set for the object. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a5a0e88b1ee9a766db07652cbef749b4962998" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return the exit status of the child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6216d2e3dbeb47686d92c1c9eea6f58db9861cef" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return the number of the signal that caused the child process to terminate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1537c3439db218b79ccac5f806499e82a91e0e5" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return the number of the signal which caused the child to stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe32b5326882876f66648a109ba4a0592f34bbe" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return true if the child process was resumed by delivery of &lt;code&gt;SIGCONT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bab6766987298827c23b4ce3ae4af1053670a9" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return true if the child process was stopped by delivery of a signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9177fa49f9d51335bc07e6efe96ab104de69e056" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return true if the child process was terminated by a signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e2d7910b1ce5c1a35382228bb07df9b6276a52" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return true if the child produced a core dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f5120ab8dd62d72e75dddfae89684fc4967b67" translate="yes" xml:space="preserve">
          <source>Given &lt;var&gt;status&lt;/var&gt; from a call to &lt;code&gt;waitpid&lt;/code&gt;, return true if the child terminated normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51117e39aed3090fc13b1cc440c92811a3f7b06" translate="yes" xml:space="preserve">
          <source>Given Y&amp;rsquo;, calculate Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f53a0744e8cc2694f496b80c9a2705e8015847" translate="yes" xml:space="preserve">
          <source>Given Y_d, calculate Y_a and Y&amp;rsquo;_d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82302ac4c4a16e4c31d9ee34271ef6c1019d5834" translate="yes" xml:space="preserve">
          <source>Given a Cholesky factorization of a real symmetric or complex Hermitian positive definite matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;R&lt;/var&gt;&amp;rsquo;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;R&lt;/var&gt; upper triangular, return the Cholesky factorization of &lt;var&gt;A1&lt;/var&gt;, where A1(p,p) = A, A1(:,j) = A1(j,:)&amp;rsquo; = u and p = [1:j-1,j+1:n+1]. u(j) should be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0849baa1ba405fdc5e732a1feffda003a543fbb0" translate="yes" xml:space="preserve">
          <source>Given a Cholesky factorization of a real symmetric or complex Hermitian positive definite matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;R&lt;/var&gt;&amp;rsquo;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;R&lt;/var&gt; upper triangular, return the Cholesky factorization of &lt;var&gt;A&lt;/var&gt;(p,p), where p is the permutation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be36d96ac616a59780cc10505df9c653e5b6975" translate="yes" xml:space="preserve">
          <source>Given a Cholesky factorization of a real symmetric or complex Hermitian positive definite matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;R&lt;/var&gt;&amp;rsquo;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;R&lt;/var&gt; upper triangular, return the Cholesky factorization of A(p,p), where p = [1:j-1,j+1:n+1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561041ac8cc2b809870e995aac9f0f286d521d06" translate="yes" xml:space="preserve">
          <source>Given a QR factorization of a real or complex matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;Q&lt;/var&gt;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;Q&lt;/var&gt; unitary and &lt;var&gt;R&lt;/var&gt; upper trapezoidal, return the QR factorization of &lt;var&gt;A&lt;/var&gt; + &lt;var&gt;u&lt;/var&gt;*&lt;var&gt;v&lt;/var&gt;&amp;rsquo;, where &lt;var&gt;u&lt;/var&gt; and &lt;var&gt;v&lt;/var&gt; are column vectors (rank-1 update) or matrices with equal number of columns (rank-k update). Notice that the latter case is done as a sequence of rank-1 updates; thus, for k large enough, it will be both faster and more accurate to recompute the factorization from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2a311590f87eeab3c147f3ad18de53b37b9db3" translate="yes" xml:space="preserve">
          <source>Given a QR factorization of a real or complex matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;Q&lt;/var&gt;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;Q&lt;/var&gt; unitary and &lt;var&gt;R&lt;/var&gt; upper trapezoidal, return the QR factorization of &lt;var&gt;A&lt;/var&gt;(:,p), where p is the permutation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55153a6ebb28b812143f4e1ec01aef8ad234584d" translate="yes" xml:space="preserve">
          <source>Given a QR factorization of a real or complex matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;Q&lt;/var&gt;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;Q&lt;/var&gt; unitary and &lt;var&gt;R&lt;/var&gt; upper trapezoidal, return the QR factorization of [A(:,1:j-1) x A(:,j:n)], where &lt;var&gt;u&lt;/var&gt; is a column vector to be inserted into &lt;var&gt;A&lt;/var&gt; (if &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;col&quot;&lt;/code&gt;), or the QR factorization of [A(1:j-1,:);x;A(:,j:n)], where &lt;var&gt;x&lt;/var&gt; is a row vector to be inserted into &lt;var&gt;A&lt;/var&gt; (if &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;row&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c7e9e480fcebc7077734c4377271fc64e7b5b0" translate="yes" xml:space="preserve">
          <source>Given a QR factorization of a real or complex matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;Q&lt;/var&gt;*&lt;var&gt;R&lt;/var&gt;, &lt;var&gt;Q&lt;/var&gt; unitary and &lt;var&gt;R&lt;/var&gt; upper trapezoidal, return the QR factorization of [A(:,1:j-1), U, A(:,j:n)], where &lt;var&gt;u&lt;/var&gt; is a column vector to be inserted into &lt;var&gt;A&lt;/var&gt; (if &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;col&quot;&lt;/code&gt;), or the QR factorization of [A(1:j-1,:);X;A(:,j:n)], where &lt;var&gt;x&lt;/var&gt; is a row &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;row&quot;&lt;/code&gt;). The default value of &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;col&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac237530d7a7706ee92abff6339bca69f368dc30" translate="yes" xml:space="preserve">
          <source>Given a cell array of matrices &lt;var&gt;x&lt;/var&gt;, this function computes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a53a9ba6d549220e98d94ef44f689dc9684965" translate="yes" xml:space="preserve">
          <source>Given a matrix argument, instead of a vector, &lt;code&gt;diag&lt;/code&gt; extracts the &lt;var&gt;k&lt;/var&gt;-th diagonal of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d210bb57ad7fbc1c061bf43f239a2c92dc450e21" translate="yes" xml:space="preserve">
          <source>Given a numeric argument greater than zero, zoom by the given factor. If the zoom factor is greater than one, zoom in on the plot. If the factor is less than one, zoom out. If the zoom factor is a two- or three-element vector, then the elements specify the zoom factors for the x, y, and z axes respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b782713bd3c06d17107bc4d262594dff03554a" translate="yes" xml:space="preserve">
          <source>Given a patch handle as the first input argument and no output parameters, perform the shrinking of the patch faces in place and redraw the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6588722acb962cfe0b9623cc56cb7b7875391b5c" translate="yes" xml:space="preserve">
          <source>Given a sampling rate, bits per sample, and number of channels for an input or output device, return the ID of the first device that supports playback or recording using the specified parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba91d3cad7344a8f139d2a99bf89a14d26304fbc" translate="yes" xml:space="preserve">
          <source>Given a single argument &lt;var&gt;x&lt;/var&gt;, return the distance between &lt;var&gt;x&lt;/var&gt; and the next largest value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c12ce8c1f37c1b69448cefeb8ad2411a20dcb1b" translate="yes" xml:space="preserve">
          <source>Given a single dimensional argument, &lt;var&gt;rowdim&lt;/var&gt;, the output is divided into rows as specified. All other dimensions are not divided and thus all columns (dim 2), pages (dim 3), etc. appear in each output element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fd3cd8ae959060c036ebaf6b1c590639ee7e5e" translate="yes" xml:space="preserve">
          <source>Given a string matrix, &lt;code&gt;hex2num&lt;/code&gt; treats each row as a separate number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b5a21d110fc1a1a28437879d6a34c26fe7ce83" translate="yes" xml:space="preserve">
          <source>Given a third return argument &lt;var&gt;flag&lt;/var&gt;, &lt;code&gt;eigs&lt;/code&gt; returns the status of the convergence. If &lt;var&gt;flag&lt;/var&gt; is 0 then all eigenvalues have converged. Any other value indicates a failure to converge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb64fa8bcd448b4205bcb0623ea98ede5f6b779" translate="yes" xml:space="preserve">
          <source>Given a time series (vector) &lt;var&gt;y&lt;/var&gt;, return a matrix with ones in the first column and the first &lt;var&gt;k&lt;/var&gt; lagged values of &lt;var&gt;y&lt;/var&gt; in the other columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e417ff3e7735280ccbbcf3952aacc32d1546e79f" translate="yes" xml:space="preserve">
          <source>Given a value returned from &lt;code&gt;time&lt;/code&gt;, or any non-negative integer, return a time structure corresponding to UTC (Coordinated Universal Time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a714b9aeffc36e5ef93eb5ce93fe7ec4c1d60e3" translate="yes" xml:space="preserve">
          <source>Given a value returned from &lt;code&gt;time&lt;/code&gt;, or any non-negative integer, return a time structure corresponding to the local time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb0df42be3a14d9ffa1de4d1ca222311546c371" translate="yes" xml:space="preserve">
          <source>Given an &lt;var&gt;n&lt;/var&gt;x&lt;var&gt;n&lt;/var&gt; matrix polynomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b4a931a084e8c39794842527cb0e97700cca72" translate="yes" xml:space="preserve">
          <source>Given an LU factorization of a real or complex matrix &lt;var&gt;A&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt;*&lt;var&gt;U&lt;/var&gt;, &lt;var&gt;L&lt;/var&gt; lower unit trapezoidal and &lt;var&gt;U&lt;/var&gt; upper trapezoidal, return the LU factorization of &lt;var&gt;A&lt;/var&gt; + &lt;var&gt;x&lt;/var&gt;*&lt;var&gt;y&lt;/var&gt;.&amp;rsquo;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are column vectors (rank-1 update) or matrices with equal number of columns (rank-k update).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761d23841728a3045634f215e6293a6ca091b852" translate="yes" xml:space="preserve">
          <source>Given an array &lt;var&gt;x&lt;/var&gt;, this function produces a cell array of slices from the array determined by the index vectors &lt;var&gt;lb&lt;/var&gt;, &lt;var&gt;ub&lt;/var&gt;, for lower and upper bounds, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40dd896838533bd3188cc551980dab5900bcc8e" translate="yes" xml:space="preserve">
          <source>Given an array of pattern strings (as a char array or a cell array) in &lt;var&gt;pattern&lt;/var&gt;, return a cell array of filenames that match any of them, or an empty cell array if no patterns match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b24dd54e3260d122c1d4a0838bcaaee549f963" translate="yes" xml:space="preserve">
          <source>Given an upper triangular matrix &lt;var&gt;R&lt;/var&gt; and a column vector &lt;var&gt;u&lt;/var&gt;, attempt to determine another upper triangular matrix &lt;var&gt;R1&lt;/var&gt; such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e98ccc1397b419ff70ebce96588b1ee529188f5" translate="yes" xml:space="preserve">
          <source>Given n vectors &lt;var&gt;x1&lt;/var&gt;, &amp;hellip;, &lt;var&gt;x&lt;/var&gt;n, &lt;code&gt;ndgrid&lt;/code&gt; returns n arrays of dimension n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a059f5ef251c164b1dadab9016182d9303b1ed90" translate="yes" xml:space="preserve">
          <source>Given one argument, return the value of the option &lt;var&gt;opt&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e8b955af49ae67c1a675994b82e537f8d4e75c" translate="yes" xml:space="preserve">
          <source>Given one input struct &lt;var&gt;s1&lt;/var&gt;, arrange field names alphabetically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6b9847ab335f510332f46c54fd1eb46c94a25f" translate="yes" xml:space="preserve">
          <source>Given optional argument start, begin playing at &lt;var&gt;start&lt;/var&gt; samples in the recording. Given a two-element vector &lt;var&gt;limits&lt;/var&gt;, begin and end playing at the number of samples specified by the elements of the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce933d5d318af92b819e3eb2dc734d1eded844f" translate="yes" xml:space="preserve">
          <source>Given the argument &lt;code&gt;&quot;fullpath&quot;&lt;/code&gt;, include the directory part of the filename, but not the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff574e7e693f7c81e18820e96db9051f3fd69f3e" translate="yes" xml:space="preserve">
          <source>Given the argument &lt;code&gt;&quot;fullpathext&quot;&lt;/code&gt;, include the directory part of the filename and the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d964f9152dee6c034e88cb97d335edd58a343e24" translate="yes" xml:space="preserve">
          <source>Given the arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; that have a matching number of rows, &lt;code&gt;plotmatrix&lt;/code&gt; plots a set of axes corresponding to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0d573eb581bf07921af78d245d9c5a04f02c97" translate="yes" xml:space="preserve">
          <source>Given the initial condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63a723ca12249081e505e609f638ed9932df1e2" translate="yes" xml:space="preserve">
          <source>Given the integer index vectors &lt;var&gt;i&lt;/var&gt; and &lt;var&gt;j&lt;/var&gt;, and a 1-by-&lt;code&gt;nnz&lt;/code&gt; vector of real or complex values &lt;var&gt;sv&lt;/var&gt;, construct the sparse matrix &lt;code&gt;S(&lt;var&gt;i&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;),&lt;var&gt;j&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)) = &lt;var&gt;sv&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)&lt;/code&gt; with overall dimensions &lt;var&gt;m&lt;/var&gt; and &lt;var&gt;n&lt;/var&gt;. If any of &lt;var&gt;sv&lt;/var&gt;, &lt;var&gt;i&lt;/var&gt; or &lt;var&gt;j&lt;/var&gt; are scalars, they are expanded to have a common size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e57d4816d92fdd77bee1ea86786c4ea1260f96" translate="yes" xml:space="preserve">
          <source>Given the numerous different ways that Octave can define a function, it is possible and even likely that multiple versions of a function, might be defined within a particular scope. The precedence of which function will be used within a particular scope is given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d4404567a3822cc2f2d3f02968be9eee348165" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt;, set the interactive pan mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420b3dbb51236515ac8f23953212f80d4a0b53b4" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt;, set the interactive rotate mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7173e6fdda44be71a7590e4a3a83e3702c674b03" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt;, set the interactive zoom mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996f3ce77a7e05cc159c2fa667b7991521c84910" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;out&quot;&lt;/code&gt;, zoom to the initial zoom setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab51f0f0aaeefa1ac39b88e85965fecf58da9d9a" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;reset&quot;&lt;/code&gt;, store the current zoom setting so that &lt;code&gt;zoom out&lt;/code&gt; will return to this zoom level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b61a33932c0181fb67b66598fae763faf085c6" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;xon&quot;&lt;/code&gt; or &lt;code&gt;&quot;yon&quot;&lt;/code&gt;, enable pan mode for the x or y axis only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a6bb3c24eeaed69ef91df08daecd29d4ada949" translate="yes" xml:space="preserve">
          <source>Given the option &lt;code&gt;&quot;xon&quot;&lt;/code&gt; or &lt;code&gt;&quot;yon&quot;&lt;/code&gt;, enable zoom mode for the x or y-axis only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafc8996921e277e2b69e686dfc07bb428f7e373" translate="yes" xml:space="preserve">
          <source>Given the optional argument &lt;var&gt;datatype&lt;/var&gt;, convert the recorded data to the specified type, which may be one of &lt;code&gt;&quot;double&quot;&lt;/code&gt;, &lt;code&gt;&quot;single&quot;&lt;/code&gt;, &lt;code&gt;&quot;int16&quot;&lt;/code&gt;, &lt;code&gt;&quot;int8&quot;&lt;/code&gt; or &lt;code&gt;&quot;uint8&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd0e64c406d58857809bbcfa38051989a7a6d1" translate="yes" xml:space="preserve">
          <source>Given the optional argument &lt;var&gt;length&lt;/var&gt;, record for &lt;var&gt;length&lt;/var&gt; seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f31d4abba32c8cc16032e7dbd4dab5379b7aed" translate="yes" xml:space="preserve">
          <source>Given the optional third argument, &lt;var&gt;n&lt;/var&gt;, &lt;code&gt;fftfilt&lt;/code&gt; uses the overlap-add method to filter &lt;var&gt;x&lt;/var&gt; with &lt;var&gt;b&lt;/var&gt; using an N-point FFT. The FFT size must be an even power of 2 and must be greater than or equal to the length of &lt;var&gt;b&lt;/var&gt;. If the specified &lt;var&gt;n&lt;/var&gt; does not meet these criteria, it is automatically adjusted to the nearest value that does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17beb5ea3dec4b4d2cc08a3eb1f84645dcfdcb80" translate="yes" xml:space="preserve">
          <source>Given the parameter &lt;code&gt;&quot;ErrorHandler&quot;&lt;/code&gt;, &lt;var&gt;errfunc&lt;/var&gt; defines a function to call in case &lt;var&gt;func&lt;/var&gt; generates an error. The form of the function is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14676503f4739244a12ffbfb4e55b521b7bc0995" translate="yes" xml:space="preserve">
          <source>Given the parameter &lt;code&gt;&quot;ErrorHandler&quot;&lt;/code&gt;, then &lt;var&gt;errfunc&lt;/var&gt; defines a function to call in case &lt;var&gt;func&lt;/var&gt; generates an error. The form of the function is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d45ca8cadd016639d6c6ffd8fc4cb03eb947fa" translate="yes" xml:space="preserve">
          <source>Given the single argument &lt;code&gt;--list&lt;/code&gt;, list all operators, keywords, built-in functions, and loadable functions available in the current session of Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca547016e7f8b21f22b4b46cec0f790dfd0d8e4" translate="yes" xml:space="preserve">
          <source>Given the single argument &lt;code&gt;.&lt;/code&gt;, list all operators available in the current session of Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b173e06e06d85e58112b0357eaf4ed935a1f3227" translate="yes" xml:space="preserve">
          <source>Given the string argument &lt;code&gt;&quot;vector&quot;&lt;/code&gt;, &lt;code&gt;lu&lt;/code&gt; returns the values of &lt;var&gt;P&lt;/var&gt; and &lt;var&gt;Q&lt;/var&gt; as vector values, such that for full matrix, &lt;code&gt;&lt;var&gt;A&lt;/var&gt;(&lt;var&gt;P&lt;/var&gt;,:) = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;R&lt;/var&gt;(&lt;var&gt;P&lt;/var&gt;,:)
* &lt;var&gt;A&lt;/var&gt;(:,&lt;var&gt;Q&lt;/var&gt;) = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10b86a41d728cbc697edfe86d5fd816d72514e4" translate="yes" xml:space="preserve">
          <source>Given three arguments, &lt;code&gt;glpk&lt;/code&gt; solves the following standard LP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a00a38784520387348d60f0b4bfec546a054962" translate="yes" xml:space="preserve">
          <source>Given vectors of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; coordinates, return matrices &lt;var&gt;xx&lt;/var&gt; and &lt;var&gt;yy&lt;/var&gt; corresponding to a full 2-D grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8935667f1b11a9937fca218b2a9bae7652df080b" translate="yes" xml:space="preserve">
          <source>Global variables allow variables in the global scope to be accessed. Global variables can be accessed within oct-files by using the support functions &lt;code&gt;get_global_value&lt;/code&gt; and &lt;code&gt;set_global_value&lt;/code&gt;. &lt;code&gt;get_global_value&lt;/code&gt; takes two arguments, the first is a string representing the variable name to obtain. The second argument is a boolean argument specifying what to do if no global variable of the desired name is found. An example of the use of these two functions is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3705fc850011238e05992dbb50fb2bf3817a88" translate="yes" xml:space="preserve">
          <source>Globally visible functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada67af2e8a588ad38386bb069bb49f6feba889d" translate="yes" xml:space="preserve">
          <source>Go to interactive mode after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19008b97ffcba027cd95aa71821da5f0f54f3e91" translate="yes" xml:space="preserve">
          <source>Grab the code from a report created by the &lt;code&gt;publish&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21d005b1e97457710185e2ae5e12ecf275db4b0" translate="yes" xml:space="preserve">
          <source>GradObj</source>
          <target state="translated">GradObj</target>
        </trans-unit>
        <trans-unit id="e0b948dcb30e507e890f522e830a98707754230a" translate="yes" xml:space="preserve">
          <source>Grammar and Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32dcab7c503d9c1178d2315b3610b806be1499c" translate="yes" xml:space="preserve">
          <source>Graph Theory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd33ef7a7c4fbd432f0d089102618d39ab4c1ee7" translate="yes" xml:space="preserve">
          <source>Graphic Properties: The full list of properties is documented at &lt;a href=&quot;image-properties#Image-Properties&quot;&gt;Image Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf141aa57c5b7342a3dcbb1dc0425d740e9ffa" translate="yes" xml:space="preserve">
          <source>Graphics Data Structures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53cf0a14c074171b8d6e7e795ca22cfda417580" translate="yes" xml:space="preserve">
          <source>Graphics Object Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059f78c243de4f4a9eeaa15ef8e5026d19bebb0d" translate="yes" xml:space="preserve">
          <source>Graphics Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84cb433b0582c90117d7b909425d06a609f4b48" translate="yes" xml:space="preserve">
          <source>Graphics Properties Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af12338cbbb8d185771380cc4e3c54c448daca3" translate="yes" xml:space="preserve">
          <source>Graphics Toolkits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f534827312115b9ca99d8f817f589b780c5e01" translate="yes" xml:space="preserve">
          <source>Graphics handle of the current figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fbaa21984feb2c3f35785aaf01daa383c48d98" translate="yes" xml:space="preserve">
          <source>Graphics handle of the current object whose callback is executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6613f322a41a4e5811198ca2bc58365742131009" translate="yes" xml:space="preserve">
          <source>Graphics handle of the title text object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0a48368692650b3834e96f807a686286380cb0" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this axes object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df2e5baeb0ee1aeb90e01c4a7d879ce21dee714" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this figure object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24169249a22775d5759b9273150132a35a52e3ac" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this image object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13c0f484877a350e359b87dd814bd6e11f7ad73" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this light object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7f60784ecbe1a36c0c55ae703076cd347ee9db" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this line object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6bf64e1e1ef2d5818e26203207ad275c7c2ef4" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this patch object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72106c3509e54fbc6230bd7ac1119a2e314801c1" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this surface object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcf01c913222f4a5082a418e073d813a21a6568" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this text object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e5004179d6c43cfcc7c3da6522e3bfb294afca" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uibuttongroup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b3931fd1ea178011a21b2ce427812c2143e27a" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uicontextmenu object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3b42fe4c31683d4a40e3c08d105d5ec202484d" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uicontrol object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d880f5be67cd14963a9ec50bee442f62d6ed000d" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uimenu object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff093d24e89a0a94b11fdd79a61f8137884b96da" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uipanel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96a1bb13998d81ba43b14f07cff2950d489a762" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uipushtool object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f878cdd03c504b08263f17e51200ead0643e020" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uitable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231c4c27830ec4e4dd1b8efbbac50d12c9482d2b" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uitoggletool object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03b6c6cf366f84bb7b3c8590a9877a9c3c27098" translate="yes" xml:space="preserve">
          <source>Graphics handle of the uicontextmenu object that is currently associated to this uitoolbar object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579f5fe8da056dbe65d5cc720b166b5292b4f003" translate="yes" xml:space="preserve">
          <source>Graphics handle of the x label text object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f72a1f40146eb30e53edd542c3bf4a89cd0957" translate="yes" xml:space="preserve">
          <source>Graphics handle of the y label text object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e5c629e88d3f1fd9e61abeb10c731baab396fe" translate="yes" xml:space="preserve">
          <source>Graphics handle of the z label text object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61536c286217af0468305e4396c8b0f36c468061" translate="yes" xml:space="preserve">
          <source>Graphics handles may be distinguished from function handles (see &lt;a href=&quot;function-handles#Function-Handles&quot;&gt;Function Handles&lt;/a&gt;) by means of the function &lt;code&gt;ishghandle&lt;/code&gt;. &lt;code&gt;ishghandle&lt;/code&gt; returns true if its argument is a handle of a graphics object. In addition, a figure or axes object may be tested using &lt;code&gt;isfigure&lt;/code&gt; or &lt;code&gt;isaxes&lt;/code&gt; respectively. To test for a specific type of graphics handle, such as a patch or line object, use &lt;code&gt;isgraphics&lt;/code&gt;. The more specific test functions return true only if the argument is both a graphics handle and of the correct type (figure, axes, specified object type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0a4545f79222e744494d0d55f3f54fa89aa3b6" translate="yes" xml:space="preserve">
          <source>Graphics handles of the axes&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a929b798456d40c333972b6dfc560ab67f916a9" translate="yes" xml:space="preserve">
          <source>Graphics handles of the figure&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f429f23891870f815bfda94d913baa43ea78c8e" translate="yes" xml:space="preserve">
          <source>Graphics handles of the root&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bf944775c00729e8da723d0a7d64d7104f3c7e" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uibuttongroup&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8350ba888bb633ece3b91e8b8081504c671ac642" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uicontextmenu&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faae003d2c8ae47e7521c4895b9c6cf8039fd152" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uicontrol&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b28369327d4d028e7b78cac4a68a631ff34ad9b" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uimenu&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de25968a80a884329022132f42cd11e703f3e7ea" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uipanel&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d762c28a7b54fcc24cf4f407d28f1953f094aec7" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uipushtool&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c9ebe9cc3cde25ed4d807d8e6536179228756e" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uitable&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4192380d1f3d12cac4612d7099f150d49621dbe3" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uitoggletool&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0394ad54230f090602f22c6e56ba6c8a4bfc275d" translate="yes" xml:space="preserve">
          <source>Graphics handles of the uitoolbar&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e481d55f69803ee928e8b4a34f749fdcc102430" translate="yes" xml:space="preserve">
          <source>Graphics handles to the plot objects which were used in making the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b67703f5796761f11ca6234af0579b014c802e" translate="yes" xml:space="preserve">
          <source>Graphics handles to the text, patch, and line objects which form the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1e90396a926d99d665ac8233599d7a178593e3" translate="yes" xml:space="preserve">
          <source>Graphics objects that may be rotated are lines, surfaces, patches, and images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70f57257c71661bcad5030266f2828969ddb843" translate="yes" xml:space="preserve">
          <source>GraphicsMagick++</source>
          <target state="translated">GraphicsMagick++</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff32d8a47c291b14ec9a34501679be803ec8949" translate="yes" xml:space="preserve">
          <source>Greater than or equal to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05057d3eda775fe15e675e76dfc4f98ff6320cb" translate="yes" xml:space="preserve">
          <source>Greater than zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48f61736af94a00bb8e0a523c7003bdeaa59359" translate="yes" xml:space="preserve">
          <source>Greek Lowercase Letters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739a1bd143d2a0faada0149cef549758affe4917" translate="yes" xml:space="preserve">
          <source>Greek Uppercase Letters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933bf21afdd55a0d2283845fed0e7bbdd1f5db49" translate="yes" xml:space="preserve">
          <source>Green</source>
          <target state="translated">Green</target>
        </trans-unit>
        <trans-unit id="6e20968959a038bd070f18513cb55a26e98eb9df" translate="yes" xml:space="preserve">
          <source>Group Database Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251e806b0876ba9f2c99ed8635affb46911e5828" translate="yes" xml:space="preserve">
          <source>Group ID of file&amp;rsquo;s group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a5b008898f9c43a27c8cd7e20dd2bcb8652364" translate="yes" xml:space="preserve">
          <source>Grouping operator. The first form, parentheses only, also creates a token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="8ade15228ba8570eb1779c280e8fc4dbac16c61f" translate="yes" xml:space="preserve">
          <source>H = besselh (alpha, k, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91adf89829baba05a6cd61b5a90761613a640639" translate="yes" xml:space="preserve">
          <source>H = besselh (alpha, k, x, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c598aa87677797b7a3a64d7c1220032b187c69d" translate="yes" xml:space="preserve">
          <source>H = besselh (alpha, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b56c9a76866dae6ca92e385cb4fc8e65527b512" translate="yes" xml:space="preserve">
          <source>H = convhull (&amp;hellip;, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdf1d73751d656c8ec01fa78d9ec07a7b707496" translate="yes" xml:space="preserve">
          <source>H = convhull (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d314ad75b4df92d31a59eb6eeedc94eea2fe6f" translate="yes" xml:space="preserve">
          <source>H = convhull (x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882b3cb19c5167430266bae6db36246059588986" translate="yes" xml:space="preserve">
          <source>H = convhull (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4adbe1dae3fdac918c652d91d8c57de7d2a9cf0" translate="yes" xml:space="preserve">
          <source>H = hess (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c69927ba03881aed9484539ead5726f3b9b859" translate="yes" xml:space="preserve">
          <source>HAVE_XXX</source>
          <target state="translated">HAVE_XXX</target>
        </trans-unit>
        <trans-unit id="7c1d0e621e0ca09058706d36a425fc4578904765" translate="yes" xml:space="preserve">
          <source>HDF5</source>
          <target state="translated">HDF5</target>
        </trans-unit>
        <trans-unit id="fc5d4b9117ba9e87388174aee4f4970bdfe8d066" translate="yes" xml:space="preserve">
          <source>HH</source>
          <target state="translated">HH</target>
        </trans-unit>
        <trans-unit id="a4c7ee9ba5c961273e153da9b6004699add74ac0" translate="yes" xml:space="preserve">
          <source>HH:MM</source>
          <target state="translated">HH:MM</target>
        </trans-unit>
        <trans-unit id="363dab71a3d5862de08f9dccacaafcd0b80ebb96" translate="yes" xml:space="preserve">
          <source>HH:MM PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a05a9c514dbbe7b13aeee7ffbbac9804dba7f74" translate="yes" xml:space="preserve">
          <source>HH:MM:SS</source>
          <target state="translated">HH:MM:SS</target>
        </trans-unit>
        <trans-unit id="fc91e46ced0795562bae19b80577cbc5971b3c54" translate="yes" xml:space="preserve">
          <source>HH:MM:SS PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e344f6f2e2af11e1345c6127bed08576e7b79a9f" translate="yes" xml:space="preserve">
          <source>HKCR</source>
          <target state="translated">HKCR</target>
        </trans-unit>
        <trans-unit id="777a26de89170c1444581065770d22f3dd96d3be" translate="yes" xml:space="preserve">
          <source>HKCU</source>
          <target state="translated">HKCU</target>
        </trans-unit>
        <trans-unit id="b68f68008aa2a62a8f8508fe3d4bf62f81fcaa1f" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT</source>
          <target state="translated">HKEY_CLASSES_ROOT</target>
        </trans-unit>
        <trans-unit id="4a4a7fa5213b95631a285df85e57f30129259f71" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_CONFIG</source>
          <target state="translated">HKEY_CURRENT_CONFIG</target>
        </trans-unit>
        <trans-unit id="96f25099303fcd1db4e160eff921ffb793c150f2" translate="yes" xml:space="preserve">
          <source>HKEY_CURRENT_USER</source>
          <target state="translated">HKEY_CURRENT_USER</target>
        </trans-unit>
        <trans-unit id="bec9574c1454e751aa663466765b0866e7160435" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL_MACHINE</source>
          <target state="translated">HKEY_LOCAL_MACHINE</target>
        </trans-unit>
        <trans-unit id="639f03a5ea0eb59947cef85e186f44efda8c0580" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\JRE</source>
          <target state="translated">HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\JRE</target>
        </trans-unit>
        <trans-unit id="43128277f6ce00625cde2b33e132f8bcb9dd7a0d" translate="yes" xml:space="preserve">
          <source>HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b563355b3cf211144efac72d6a6862a4720cbbed" translate="yes" xml:space="preserve">
          <source>HKEY_PERFORMANCE_DATA</source>
          <target state="translated">HKEY_PERFORMANCE_DATA</target>
        </trans-unit>
        <trans-unit id="a3d9f20df1da3fc23d5dbb7d335d981e802e0668" translate="yes" xml:space="preserve">
          <source>HKEY_USERS</source>
          <target state="translated">HKEY_USERS</target>
        </trans-unit>
        <trans-unit id="7cb9cc728add2ff1bdee61a3fc23b40563904425" translate="yes" xml:space="preserve">
          <source>HKLM</source>
          <target state="translated">HKLM</target>
        </trans-unit>
        <trans-unit id="ad65ec0a487abf7510fac6d6b7e522c6039e71c9" translate="yes" xml:space="preserve">
          <source>HKU</source>
          <target state="translated">HKU</target>
        </trans-unit>
        <trans-unit id="102e38a619ad7841fd5efe7373f6f6f2115199f7" translate="yes" xml:space="preserve">
          <source>HP LaserJet IIP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabea717a887b8298366e0d32208623609dca8fe" translate="yes" xml:space="preserve">
          <source>HP plotter language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7117c05ab7ab7d8103f009e9058a2f5e35deb3" translate="yes" xml:space="preserve">
          <source>HTML Markup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cd0ace196eebd77332a3c0e2c90d68bb6194c9" translate="yes" xml:space="preserve">
          <source>Hamming norm&amp;mdash;the number of nonzero elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3538b280ee5fc44efd4495b3a72228b639ee3d9" translate="yes" xml:space="preserve">
          <source>Handbook of Continued Fractions for Special Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a85a0060a57a2abb2ca696cafb30b3e72e84dbe" translate="yes" xml:space="preserve">
          <source>Handbook of Mathematical Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aac2b192d6bbaa292a303b28540181121332cb" translate="yes" xml:space="preserve">
          <source>Handbook of mathematical functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6681da8fdbe6e79d0e9b01cbaaa8a7bf0a6bffb" translate="yes" xml:space="preserve">
          <source>Handle of the parent graphics object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee00ae5908d52fea747f87b11e5b7c990a67289e" translate="yes" xml:space="preserve">
          <source>Handle to the graphics object of the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48c14b11175da40c1ef31cb44e9a94be8b0a2f5" translate="yes" xml:space="preserve">
          <source>Handles oscillatory functions and infinite bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab84502bf3306a16afe63078ef3b824e4ccf7fac" translate="yes" xml:space="preserve">
          <source>Handles oscillatory functions, singularities, and infinite bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2d67fd740d7ec7df3d8674c33679652ab92712" translate="yes" xml:space="preserve">
          <source>Handling Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1a4ebc097ee588910f28fb2478a7666dcf8bb" translate="yes" xml:space="preserve">
          <source>Handling Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac0a1f8319e1d527732c7d293243466615d0772" translate="yes" xml:space="preserve">
          <source>Hardware vs. Software Rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3903a70ba3c2e71ef58a06a198bf01db5369fe88" translate="yes" xml:space="preserve">
          <source>Harris&amp;rsquo; two-pass ratio test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc22f3729a87d00c308b4c9dba23c9717d81bc5" translate="yes" xml:space="preserve">
          <source>Has exactly as many columns as the next value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7da3ab6b497861989b922a0d6582eb4c31ca7d8" translate="yes" xml:space="preserve">
          <source>Has exactly as many dimensions as the next value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b4c5e966b7eb58f6b4e7329b24926af8e5aeb1" translate="yes" xml:space="preserve">
          <source>Has exactly as many elements as the next value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938e657f90c2d5fc687f7ddb23c2660e4165c8f8" translate="yes" xml:space="preserve">
          <source>Has exactly as many rows as the next value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0af202a3fe7e7514aeb8d6727e49f50705a147" translate="yes" xml:space="preserve">
          <source>Has no more than 3 dimensions. A 2-dimensional matrix is a 3-D matrix whose 3rd dimension is of length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461629db972167b8f4c1f8c130db9885c4944304" translate="yes" xml:space="preserve">
          <source>Hashing Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8874fa2f1c35b3a181006a7c21e7dc3f3cc8626" translate="yes" xml:space="preserve">
          <source>Having done so, the camera target &lt;var&gt;mode&lt;/var&gt; is manual:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952686e9f221ba8c8ab2c694d32bc011786ac88f" translate="yes" xml:space="preserve">
          <source>Having made that change, the camera position &lt;var&gt;mode&lt;/var&gt; is now manual:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f608b4935ead643d43b2642dc4ec863d170aa1d" translate="yes" xml:space="preserve">
          <source>Height</source>
          <target state="translated">Height</target>
        </trans-unit>
        <trans-unit id="9c956aa3cb01028f11379c06f1bc5d1ef75be617" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&quot;displayname&quot;&lt;/code&gt; is the label to use for the plot legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3e9c6179fc38ae7f739bdfd55d18a18cd27e2a" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;body&lt;/var&gt; is a statement or list of statements that we call the &lt;em&gt;body&lt;/em&gt; of the loop, and &lt;var&gt;condition&lt;/var&gt; is an expression that controls how long the loop keeps running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2009a9bd2004ea16ad46ecb14da6db7d0b40a7" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;sa&lt;/var&gt; is a structure array whose field at elements 1 and 2 is in turn another structure array whose third element is a simple scalar structure. The terminal scalar structure has a field which contains a matrix value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5da2c1f21651299a142e3177126332fbbe0b990" translate="yes" xml:space="preserve">
          <source>Here are descriptions of the three element-by-element boolean operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef458c50c086a17f2924e99e4ad86f6ee3c6d11" translate="yes" xml:space="preserve">
          <source>Here are some examples of using data structures in Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4579d7fc4879359e02c230f2f7ed8befa8e6a0" translate="yes" xml:space="preserve">
          <source>Here are some other ways of improving the execution speed of Octave programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e394298fea21c7b6c8f349cf7342f29f47f3be" translate="yes" xml:space="preserve">
          <source>Here are some plot examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390dce5423c6c140edb3867b9afdd22301c4574" translate="yes" xml:space="preserve">
          <source>Here are some things that are not necessary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75202111302cdf99fcf6325d519a115be49a7e97" translate="yes" xml:space="preserve">
          <source>Here are the commands for simple browsing and searching the history list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b4a2cb6fc111cae52818e6ce49bf5737f39efb" translate="yes" xml:space="preserve">
          <source>Here is a complete list of the command line options that Octave accepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a62b3887d5a1953d69b473c527423dff9a1f02" translate="yes" xml:space="preserve">
          <source>Here is a description of an imaginary function &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e550900c5979d95cf3006a804fcccef6026b72d9" translate="yes" xml:space="preserve">
          <source>Here is a list of all the increment and decrement expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b188f273d59f2a65affc969979728655f838c5b2" translate="yes" xml:space="preserve">
          <source>Here is a summary of the configure options that are most frequently used when building Octave:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83b0a7d250d0e06a4f357d562cb4b7b478a8f04" translate="yes" xml:space="preserve">
          <source>Here is a table of all the escape sequences used in Octave (within double quoted strings). They are the same as those used in the C programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81607290078a2261d38aff9632ec8488b80e76c5" translate="yes" xml:space="preserve">
          <source>Here is a table of the operators in Octave, in order of decreasing precedence. Unless noted, all operators group left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf34c5f1d86d0f99f7335cd0bbddd7fc472313a8" translate="yes" xml:space="preserve">
          <source>Here is a table summarizing what all the different conversions do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4e5ff1c073ace01f137fe7b0c3f6629726129f" translate="yes" xml:space="preserve">
          <source>Here is a table that summarizes the various conversion specifications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93daade72c0d065aee12174b34447d59daf657a" translate="yes" xml:space="preserve">
          <source>Here is an example of a function that checks to see if any elements of a vector are nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594fd70f46f146692c8a659ae124723d44ea21f4" translate="yes" xml:space="preserve">
          <source>Here is an example of a function that returns two values, the maximum element of a vector and the index of its first occurrence in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa84a7dfe34a5aab672856810ce45ffea94434cc" translate="yes" xml:space="preserve">
          <source>Here is an example of solving a set of three differential equations using &lt;code&gt;lsode&lt;/code&gt;. Given the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27caca6c57881b8538e204953f391af160f4c4ac" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;colloc&lt;/code&gt; to generate weight matrices for solving the second order differential equation &lt;var&gt;u&lt;/var&gt;&amp;rsquo; - &lt;var&gt;alpha&lt;/var&gt; * &lt;var&gt;u&lt;/var&gt;&amp;rdquo; = 0 with the boundary conditions &lt;var&gt;u&lt;/var&gt;(0) = 0 and &lt;var&gt;u&lt;/var&gt;(1) = 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95191fbc3b64c3a2b40d93c93b100b01ea06310d" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;quad&lt;/code&gt; to integrate the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cf85984763aa6e86af6dcca6e9694fe907c1ea" translate="yes" xml:space="preserve">
          <source>Here is an example of using these functions to reproduce the command line which invoked Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733699a73fc6ff7e6cfaaa361fb89de6a189676d" translate="yes" xml:space="preserve">
          <source>Here is another example, using this comma separated list on the left-hand side of an assignment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f34f7623bf8dfcdef1b4196b6d474d92084bfdd" translate="yes" xml:space="preserve">
          <source>Here is another program equivalent to the previous one. It illustrates how the &lt;var&gt;condition&lt;/var&gt; of a &lt;code&gt;while&lt;/code&gt; statement could just as well be replaced with a &lt;code&gt;break&lt;/code&gt; inside an &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf00be55adf0eb5ff38d028f70ddf95e8082dc8" translate="yes" xml:space="preserve">
          <source>Here is the list of commands for killing text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de44d19fc32f182b447d85520252251a4865455" translate="yes" xml:space="preserve">
          <source>Here the body of the loop contains two statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9090984a1bf603c9df792f0166192cc8c9423c7" translate="yes" xml:space="preserve">
          <source>Here the light is first pitched upwards (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;) from the camera position (see &lt;a href=&quot;#XREFcampos&quot;&gt;campos&lt;/a&gt;) by 30 degrees. It is then yawed by 45 degrees to the right. Both rotations are centered around the camera target (see &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab2948cf6c60a2a0360cfd87be1c5cbd1dd07af" translate="yes" xml:space="preserve">
          <source>Here the vectors of size &lt;code&gt;[1 3]&lt;/code&gt; and &lt;code&gt;[3 1]&lt;/code&gt; both get broadcast into matrices of size &lt;code&gt;[3 3]&lt;/code&gt; before ordinary matrix subtraction takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391b03a285b937282be227206fe7a28066b88c10" translate="yes" xml:space="preserve">
          <source>Here we see the information from the table again, but have additional fields &lt;code&gt;Parents&lt;/code&gt; and &lt;code&gt;Children&lt;/code&gt;. Those are both arrays, which contain the indices of functions which have directly called the function in question (which is entry 7, &lt;code&gt;expm&lt;/code&gt;, in this case) or been called by it (no functions). Hence, the backslash operator has been used internally by &lt;code&gt;expm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5919601a266db7970e4ab9ac94e1cd4cd419ff0" translate="yes" xml:space="preserve">
          <source>Here, &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99face37aedb99d9bb4ecbf59509c9269e923102" translate="yes" xml:space="preserve">
          <source>Here, each &lt;var&gt;property&lt;/var&gt; is a string containing the property name, each &lt;var&gt;value&lt;/var&gt; is a value of the appropriate type for the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057f7f68e281f08c4d66910aa8f1a192819a816c" translate="yes" xml:space="preserve">
          <source>Here, the field names of &lt;var&gt;pv&lt;/var&gt; represent the property names, and the field values give the property values. In contrast to the previous case, all elements of &lt;var&gt;pv&lt;/var&gt; will be set in all handles in &lt;var&gt;h&lt;/var&gt; independent of the dimensions of &lt;var&gt;pv&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6485dd3d1277b2b4b4c571b82be7624eb5fb3c" translate="yes" xml:space="preserve">
          <source>Here, the scalar &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6be87e23410ba1299d583af942620224fa5e07a" translate="yes" xml:space="preserve">
          <source>Heuristic by Driebeck and Tomlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adbe3c04f7800a74ad52fd0611d3ab5efa26ba2" translate="yes" xml:space="preserve">
          <source>Hidden Line Removal determines what graphic objects behind a mesh plot are visible. The default is for the mesh to be opaque and lines behind the mesh are not visible. If hidden line removal is turned off then objects behind the mesh can be seen through the faces (openings) of the mesh, although the mesh grid lines are still opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069726a914c860fafc98a8b580837dde26a3de42" translate="yes" xml:space="preserve">
          <source>Hide legend on the plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235c69f5294b6f3dce75ccb26d0b23e7df1e749f" translate="yes" xml:space="preserve">
          <source>Hide the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c2c3628ea3b906791e6bf414c1fc10778b0214" translate="yes" xml:space="preserve">
          <source>Hide the box around legend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b522f02c38ef032b63cb82d3376d18dcb53dd4c" translate="yes" xml:space="preserve">
          <source>High-Level Plotting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa71a276ca8c8def5d0bccf9424c875594f4e96" translate="yes" xml:space="preserve">
          <source>Hilbert matrices are close to being singular which make them difficult to invert with numerical routines. Comparing the condition number of a random matrix 5x5 matrix with that of a Hilbert matrix of order 5 reveals just how difficult the problem is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9227deee57573f9ecdde2c8c5378b847a0631b" translate="yes" xml:space="preserve">
          <source>Horizontal concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3800d8979d5c4994fb95de12055144d21e0ba7d" translate="yes" xml:space="preserve">
          <source>Hour (0-23).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428eeabe37773c44ca6e0758ca26240687b8407a" translate="yes" xml:space="preserve">
          <source>Hour (00-23).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9185f6657738c059f1498a67e1fd8251cff403d9" translate="yes" xml:space="preserve">
          <source>Hour (01-12).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80fac494e507d18ac78404733fe4037b986f8a6" translate="yes" xml:space="preserve">
          <source>Hour (1-12).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff77bd09f9fdf2585e6b0f87028d1277754ed15c" translate="yes" xml:space="preserve">
          <source>Hour of day, padded with zeros,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6548dcdbd2ba9b7fc63553f69978cdfac3533fdd" translate="yes" xml:space="preserve">
          <source>Hours since midnight (0-23).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac047e20d24c44c9f768b1d8e88e217ce35d695b" translate="yes" xml:space="preserve">
          <source>How Octave Reports Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b747f7a748fd877cc2825979ca9ff1515b35486d" translate="yes" xml:space="preserve">
          <source>How To Get Help with Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41af3e0d6abdd256d8f149e903babd8111fc5e79" translate="yes" xml:space="preserve">
          <source>How You Can Contribute to Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7591eb3c9a7c251cdfa835996db4da8134c47f" translate="yes" xml:space="preserve">
          <source>How many ways can three items be grouped into pairs?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078dcd790d975e5bf3e7109dc68e6333bff7781a" translate="yes" xml:space="preserve">
          <source>How to Distinguish Between Octave and Matlab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd0eaf82c79b6b7ab8a04d6679652bfbb01c424" translate="yes" xml:space="preserve">
          <source>How to report a bug effectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6094f2ee43f81ee7f76a3f5eb53193dde46d06" translate="yes" xml:space="preserve">
          <source>How to send a patch for Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0755cf11dfa60839a9c3ffe5ca37d3be9a15bd" translate="yes" xml:space="preserve">
          <source>How to use Java from within Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fa4a235177ef37622f4ba55fd7dc302dd35b19" translate="yes" xml:space="preserve">
          <source>However, a slightly different choice of data points can change the result significantly. The same integration, with the same number of points, but spaced differently produces a more accurate answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55fc31b6555066609b3d449e2d8890a39539add" translate="yes" xml:space="preserve">
          <source>However, conversions are currently only supported for &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c71aaef7e302064fcb728a2295cf000f4c7032" translate="yes" xml:space="preserve">
          <source>However, if the number of indexing components exceeds the number of dimensions (&lt;code&gt;M&amp;nbsp;&amp;gt;&amp;nbsp;nd&lt;/code&gt;) then the excess components must all be singletons (&lt;code&gt;1&lt;/code&gt;). Moreover, if &lt;code&gt;M&amp;nbsp;&amp;lt;&amp;nbsp;nd&lt;/code&gt;, the behavior is equivalent to reshaping the input object so as to merge the trailing &lt;code&gt;nd&amp;nbsp;-&amp;nbsp;M&lt;/code&gt; dimensions into the last index dimension &lt;code&gt;M&lt;/code&gt;. Thus, the result will have the dimensionality of the index expression, and not the original object. This is the case whenever dimensionality of the index is greater than one (&lt;code&gt;M&amp;nbsp;&amp;gt;&amp;nbsp;1&lt;/code&gt;), so that the special rules for linear indexing are not applied. This is easiest to understand with an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d347c236644ec280fdd3a6cb5a6f0011a287c6f5" translate="yes" xml:space="preserve">
          <source>However, in this case the raw source code will need to be on the load path and the user will have to remember to type &lt;code&gt;test (&quot;funcname.cc&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b74690731d8974e92089cdea830a590f065772d" translate="yes" xml:space="preserve">
          <source>However, it should be noted that querying the seed will not cause &lt;code&gt;rand&lt;/code&gt; to use the old generators, only setting the seed will. To cause &lt;code&gt;rand&lt;/code&gt; to once again use the new generators, the keyword &lt;code&gt;&quot;state&quot;&lt;/code&gt; should be used to reset the state of the &lt;code&gt;rand&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e487a1dd3145a4bef90eb0b9e9fa2757ae84c4e" translate="yes" xml:space="preserve">
          <source>However, names like &lt;code&gt;__foo_bar_baz__&lt;/code&gt; that begin and end with two underscores are understood to be reserved for internal use by Octave. You should not use them in code you write, except to access Octave&amp;rsquo;s documented internal variables and built-in symbolic constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397c21351f8ae5f1b9c9c87086b88e0a67987042" translate="yes" xml:space="preserve">
          <source>However, simplification is not vital; if you don&amp;rsquo;t want to do this, report the bug anyway and send the entire test case you used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0c1a3059084e7abc2bdd6d3507966bc260f4ee" translate="yes" xml:space="preserve">
          <source>However, the Taylor series is &lt;em&gt;not&lt;/em&gt; the way to compute the matrix exponential; see Moler and Van Loan,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c04922b8908127dd884a2404744a3c9a2a0270" translate="yes" xml:space="preserve">
          <source>However, there is at least one well known operating system that doesn&amp;rsquo;t support symbolic links. Making copies of the original file for each of the functions is undesirable as it increases the amount of disk space used by Octave. Instead Octave supplies the &lt;code&gt;autoload&lt;/code&gt; function, that permits the user to define in which file a certain function will be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82136e344fb90432cc2d602f81f218b71487d86a" translate="yes" xml:space="preserve">
          <source>Hybrid pseudocost heuristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4db592864c959c78d12cae00e7cb50c417e9c92" translate="yes" xml:space="preserve">
          <source>Hyndman and Fan (1996) recommend method 8. Maxima, S, and R (versions prior to 2.0.0) use 7 as their default. Minitab and SPSS use method 6. &lt;small&gt;MATLAB&lt;/small&gt; uses method 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8597a56ed45fd7ce7a17d23c0a0834fdedd4c352" translate="yes" xml:space="preserve">
          <source>Hyndman, R. J. and Fan, Y. (1996) Sample quantiles in statistical packages, American Statistician, 50, 361&amp;ndash;365.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="2d3021d62c6233299d0f3898ab8f67801ccd0ff1" translate="yes" xml:space="preserve">
          <source>I (&amp;hellip;, class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c05417e482e7838a44beeec83928ec1a82244f" translate="yes" xml:space="preserve">
          <source>I (n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e723d5d43eecebf22420b38d05e2c4624eedc" translate="yes" xml:space="preserve">
          <source>I (n, m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0977a4d09207c79df28e9fc9d050268b4d2dfd" translate="yes" xml:space="preserve">
          <source>I (n, m, k, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac28be47e304d9312429e9da6e1e16fbc92bdc0" translate="yes" xml:space="preserve">
          <source>I = besseli (alpha, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af2fa28809f1df7254173bf76657aa34ad0ed63" translate="yes" xml:space="preserve">
          <source>I = besseli (alpha, x, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d956d700a3d1240ac5f94808effbab811d63386c" translate="yes" xml:space="preserve">
          <source>I = ind2gray (x, map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c56cd56ed847480719ec6c0d645629588f5248" translate="yes" xml:space="preserve">
          <source>I = rgb2gray (rgb_img)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb68d77d4b326c86cb9aaffee7ba4feac94be8eb" translate="yes" xml:space="preserve">
          <source>I, and its equivalents i, j, and J, are functions so any of the names may be reused for other purposes (such as i for a counter variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758f6731fdb89841d7e7c02391aadd098af1b884" translate="yes" xml:space="preserve">
          <source>I.e., the model is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f9748c316a9694a2156a0c41bbf3f087b9530b" translate="yes" xml:space="preserve">
          <source>I/O Dialogs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30bd18b5fe6c7bc0d690cbdfa2a5c50bc539983" translate="yes" xml:space="preserve">
          <source>ID of device containing a directory entry for this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78d7debb17606ef8725d2a33d342dcb6cbbf618" translate="yes" xml:space="preserve">
          <source>ID of device for block or character special files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf022d10dafb1706c204faf5dc38b7671770b39a" translate="yes" xml:space="preserve">
          <source>IEEE big endian format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c128ccd3a731eb7be240facbab02c2375732929a" translate="yes" xml:space="preserve">
          <source>IEEE big endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce2264188cd2e6eb1e328dbdbb78b45c1e2287a" translate="yes" xml:space="preserve">
          <source>IEEE little endian format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49123ae2a601e5f0f1c613711fca2e10c25da41" translate="yes" xml:space="preserve">
          <source>IEEE little endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af535a6c0fca0babc1b0bfc90f8b2248d882421b" translate="yes" xml:space="preserve">
          <source>ILU factorization with no fill-in (ILU(0)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8789776d2b4584a667f2ab2e4d4a7a98b55d9f" translate="yes" xml:space="preserve">
          <source>ILU factorization with threshold and pivoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1375c4b7fc818690890f6cdbe995d2a848f33c84" translate="yes" xml:space="preserve">
          <source>IMAGE_PATH</source>
          <target state="translated">IMAGE_PATH</target>
        </trans-unit>
        <trans-unit id="8385ff4ad9dea81cd94dfb084ccfef0d643a8d0b" translate="yes" xml:space="preserve">
          <source>IMAGE_PATH (new_val, &quot;local&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2704c1d8c3fc215c38ee176f6cc30e434a22b7d7" translate="yes" xml:space="preserve">
          <source>INDEX</source>
          <target state="translated">INDEX</target>
        </trans-unit>
        <trans-unit id="c335a27a082cc8d17dd36dc0eda3086cb0c9baaa" translate="yes" xml:space="preserve">
          <source>INSTALL</source>
          <target state="translated">INSTALL</target>
        </trans-unit>
        <trans-unit id="d9e9a31f3c132abdb62135b7359ad673ae141323" translate="yes" xml:space="preserve">
          <source>Identical to &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a455613f0b30288798b24f4c0e5c3a3a9bfcbad" translate="yes" xml:space="preserve">
          <source>Identify the matrix type or mark a matrix as a particular type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a4c98b14592e209fb45299e28a77a147f1d238" translate="yes" xml:space="preserve">
          <source>Identify the symbolic variable names in the string &lt;var&gt;str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4a025e0a431e0f87322277837c1f890b8ecc08" translate="yes" xml:space="preserve">
          <source>Identify unique poles in &lt;var&gt;p&lt;/var&gt; and their associated multiplicity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047aafeab71bd647d455f3acee89bdfd324af852" translate="yes" xml:space="preserve">
          <source>Identifying Points in Triangulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="a6da5f920f380e7758e753d1a1619236c31c16fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;AutoScaling&quot;&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the variables will be automatically scaled according to the column norms of the (estimated) Jacobian. As a result, &lt;code&gt;&quot;TolFun&quot;&lt;/code&gt; becomes scaling-independent. By default, this option is &lt;code&gt;&quot;off&quot;&lt;/code&gt; because it may sometimes deliver unexpected (though mathematically correct) results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5363ace77e4750b6237a1f5fa82824a396d97e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;ComplexEqn&quot;&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, &lt;code&gt;fsolve&lt;/code&gt; will attempt to solve complex equations in complex variables, assuming that the equations possess a complex derivative (i.e., are holomorphic). If this is not what you want, you should unpack the real and imaginary parts of the system to get a real system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb26e26886c99222b6ce8cffc89a2aece16fa05f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;GradObj&quot;&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, it specifies that &lt;var&gt;fcn&lt;/var&gt;&amp;ndash;when called with two output arguments&amp;mdash;also returns the Jacobian matrix of partial first derivatives at the requested point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b5bcae834ca84ef233d17beb6b5fa37ce7a881" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;Jacobian&quot;&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, it specifies that &lt;var&gt;fcn&lt;/var&gt;&amp;mdash;when called with 2 output arguments&amp;mdash;also returns the Jacobian matrix of right-hand sides at the requested point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de494a55fc1a7f36b31cefd9215d504f60db160b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;Updating&quot;&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the function will attempt to use Broyden updates to update the Jacobian, in order to reduce the number of Jacobian calculations. If your user function always calculates the Jacobian (regardless of number of output arguments) then this option provides no advantage and should be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a705b24203d20b368e55a6a863b03017abc2e95e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;all&quot;&lt;/code&gt; is given, the function returns all valid file separators in the form of a string. The list of file separators is system-dependent. It is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3500179760ad4d710334c36f6b49af5693300e66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;double&quot;&lt;/code&gt; is given the sum is performed in double precision even for single precision inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eceeaf5b655d8dacca76bd05e4cd2b13fdd056" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;linespec&quot;&lt;/code&gt; is given it is used to set the color and line style of the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b421ab161e1dad431ea122694a2eddfb2ba34280" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;toplevel&quot;&lt;/code&gt; is given as a third argument, return the highest parent in the object hierarchy that matches the condition, instead of the first (nearest) one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5402c7b4b6822ca8fbc9ea88937af68d6ff86991" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;name&lt;/var&gt;.cc&lt;/code&gt; is specified, then it will search for &lt;code&gt;&lt;var&gt;name&lt;/var&gt;.cc&lt;/code&gt; in the path and try to modify it, otherwise it will create a new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bce96e655769765f859e8973e188b7c7254e65" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = -1&lt;/code&gt;, return the true Cholesky factor with strictly positive values on the diagonal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab06689c6d2029bcd87714455c57067b6a545a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = 2&lt;/code&gt;, return a transposed and permuted version of &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 1)&lt;/code&gt;, which is the cube root of the identity matrix. That is, &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 2) ^ 3 == eye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f92e9e4644b3b38e38a5a8c8199575577a82ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OCTAVE_HOME&lt;/code&gt; or &lt;code&gt;OCTAVE_EXEC_HOME&lt;/code&gt; are set in the environment, then other variables are adjusted accordingly with &lt;code&gt;OCTAVE_HOME&lt;/code&gt; or &lt;code&gt;OCTAVE_EXEC_HOME&lt;/code&gt; substituted for the original value of the directory specified by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbbd3cd2bf454c8aade2476a9880c3d5b61fd46" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;attrib&lt;/code&gt; fails, &lt;var&gt;msg&lt;/var&gt; is a non-empty string containing an error message and &lt;var&gt;msg_id&lt;/var&gt; is the non-empty string &lt;code&gt;&quot;fileattrib&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbd2cef3621c30bd46b774f1da61ff8da20346b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cdata&lt;/code&gt; is a scalar index into the current colormap or a RGB triplet, it defines the color of all faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf73470c7eaab37fc7551202f8bbbafe709d67c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cdata&lt;/code&gt; is an N-by-1 vector of indices or an N-by-3 (RGB) matrix, it defines the color of each one of the N faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193dd3038952ec55e68bd8d5933ac9f0c47b4382" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cdata&lt;/code&gt; is an N-by-M or an N-by-M-by-3 (RGB) matrix, it defines the color at each vertex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3374c3a18dbdbac270c5257888d4dafaac7517d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;class (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; is complex, then primality is tested in the domain of Gaussian integers (&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_integer&quot;&gt;https://en.wikipedia.org/wiki/Gaussian_integer&lt;/a&gt;). Some non-complex integers are prime in the ordinary sense, but not in the domain of Gaussian integers. For example, &lt;em&gt;5 = (1+2i)*(1-2i)&lt;/em&gt; shows that 5 is not prime because it has a factor other than itself and 1. Exercise caution when testing complex and real values together in the same matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ed74a5b2c47a9fc276f885d9ccbd0d7b82f9e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clear&lt;/code&gt; is called without any arguments, all user-defined variables are cleared from the current workspace (i.e., local variables). Any global variables present will no longer be visible in the current workspace, but they will continue to exist in the global workspace. Functions are unaffected by this form of &lt;code&gt;clear&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c27868d32269b889c48a5dc06f20978880c928e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the image is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597427917ab6411d1947e91343a0ae468d2c8b8e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the light is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37beed0206e1c10f93bfefc0f6f6ee9bff993da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the line is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50aa62bf26bec94ba3467eba9152f684345f0541" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the patch is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aec6380c6806917ccd1ae1bb7bb1e3858b776e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the surface is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685d37804719789cb1fd6b003d64977bbf3b8d5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the text is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7b4d0d1c2d9df9656d1b7e215b36ad46968385" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uibuttongroup is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8069975b2d75fee9a40e909ddcaa713c33dec3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uicontextmenu is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ae361eee37aa60c7f8a19cbeeb94cd5bf1bb5c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uicontrol is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d56c06b5b1af462d594793d12c5ceb22e833169" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uimenu is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0318236610922e38ba9879193f83102408423579" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uipanel is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7d1ec9c6e7aaf95f092dda98597eb321b5913a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uipushtool is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e87236e4810eafa30ba4004d85505d209867522" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uitable is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8abdc0537b640a2d8222c9c58134dac2d9a2b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uitoggletool is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2e6797a4d8e6a2646a71bc1f4b4f94ef596822" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clipping&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the uitoolbar is clipped in its parent axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1c867b726733cab7210f39bab4c388d12b3192" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;configure&lt;/code&gt; finds &lt;code&gt;dlopen&lt;/code&gt;, &lt;code&gt;dlsym&lt;/code&gt;, &lt;code&gt;dlclose&lt;/code&gt;, and &lt;code&gt;dlerror&lt;/code&gt;, but not the header file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48620a33ce646bd87ce091e6a9e33c3f77c5972" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dbstop if error&lt;/code&gt; is true but no explicit IDs are specified, the return value will have an empty field called &lt;code&gt;&quot;errs&quot;&lt;/code&gt;. If IDs are specified, the &lt;code&gt;errs&lt;/code&gt; field will have one row per ID. If &lt;code&gt;dbstop if error&lt;/code&gt; is false, there is no &lt;code&gt;&quot;errs&quot;&lt;/code&gt; field. The &lt;code&gt;&quot;warn&quot;&lt;/code&gt; field is set similarly by &lt;code&gt;dbstop if warning&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986b4e840aa0974162fc49ba96dc6ab83469d58e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;edit&lt;/code&gt; is called with &lt;var&gt;field&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; variables, the value of the control field &lt;var&gt;field&lt;/var&gt; will be set to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eae32c0841dfb37b0d5a80b667bd99a67681a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;edit&lt;/code&gt; is called with the name of a file or function as its argument it will be opened in the text editor defined by &lt;code&gt;EDITOR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebafa2c3f1217ea0b2f7fbe03cebc6f31c751ad7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the axes&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df433da7b36a7b3444eb3d9d2e82618c78e7bc1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the figure&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b2c257e6860ba44cdc11af18f6b91c67bf3d3f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the image&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43bb302308eba5c433c7970046b94c70187cbae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the light&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ebb9e9cc44bd9c5dc0dd33c53211d957f4749b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the line&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff38b82b9f3ae853b81cb73ee2c16d39a305a1b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the patch&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ae11d5552f048c917561827901e5dfe236052a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the surface&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9999057081e259df98d626f2128f3bd025e33259" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the text&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d147a93e664cd8ba9ae5223db7d9e366f48a0ec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uibuttongroup&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8069d461f1994fd09544c96c4bdb6db59105789" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uicontextmenu&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cac97a4d900015ff6f7874aaf6a123395eef35b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uicontrol&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c3fc57c82bc71ad726d160a03dc6dd970c5d3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uimenu&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c814f974b467f5d42a9257cdc8ea8d48a5a2c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uipanel&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853712066678b4ef3d167dfe4936bb4572f5e883" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uipushtool&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25ede1d0afa56184cfea41acb3c318352ab2944" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitable&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3dc3f6b08c19af989636dc9a14bbc2dbdfd156" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitoggletool&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0997b0c6b89155332a175b14e2af2749e8ab473" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;handlevisibility&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitoolbar&amp;rsquo;s handle is not visible in its parent&amp;rsquo;s &quot;children&quot; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2485642061c6c0a95fa641243cd3c331eb35952d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ilu&lt;/code&gt; is called with just one output, the returned matrix is &lt;code&gt;&lt;var&gt;L&lt;/var&gt; + &lt;var&gt;U&lt;/var&gt; - speye (size (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt;, where &lt;var&gt;L&lt;/var&gt; is unit lower triangular and &lt;var&gt;U&lt;/var&gt; is upper triangular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e407e7f1c79e40c1e0295083e55c52cb9e3a29f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keyboard&lt;/code&gt; is invoked without arguments, a default prompt of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d40a502eded0ea27bf6e3ee7e5fdad579012f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lasterror&lt;/code&gt; is called with the argument &lt;code&gt;&quot;reset&quot;&lt;/code&gt;, all fields are set to their default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8202be363e534d58807e06c2d160b460b23587a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length (&lt;var&gt;x&lt;/var&gt;) &amp;gt; &lt;var&gt;l&lt;/var&gt;&lt;/code&gt;, elements from the beginning of &lt;var&gt;x&lt;/var&gt; are removed until a vector of length &lt;var&gt;l&lt;/var&gt; is obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874f6c05a6bebdc85a3b4e69a87670bd821c9731" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length (&lt;var&gt;x&lt;/var&gt;) &amp;gt; &lt;var&gt;l&lt;/var&gt;&lt;/code&gt;, elements from the end of &lt;var&gt;x&lt;/var&gt; are removed until a vector of length &lt;var&gt;l&lt;/var&gt; is obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd7fc29cc737217fad1c5f122a686e7b0b78cb2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;levellistmode&lt;/code&gt; is &lt;code&gt;&quot;manual&quot;&lt;/code&gt;, then the levels at which to plot the contours is determined by &lt;code&gt;levellist&lt;/code&gt;. If &lt;code&gt;levellistmode&lt;/code&gt; is set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, then the distance between contours is determined by &lt;code&gt;levelstep&lt;/code&gt;. If both &lt;code&gt;levellistmode&lt;/code&gt; and &lt;code&gt;levelstepmode&lt;/code&gt; are set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, then there are assumed to be 10 equal spaced contours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d2712428ea027aa4dbf9a790a8fb62262857a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paperpositionmode&lt;/code&gt; is set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, the &lt;code&gt;paperposition&lt;/code&gt; property is automatically computed: the printed figure will have the same size as the on-screen figure and will be centered on the output page. Setting the &lt;code&gt;paperpositionmode&lt;/code&gt; to &lt;code&gt;&quot;auto&quot;&lt;/code&gt; does not modify the value of the &lt;code&gt;paperposition&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1344455543a7a9b947bec6bec49e3ef699882730" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;quad2d&lt;/code&gt; fails to converge to the desired error tolerance before MaxFunEvals is reached, a plot of the areas that still need refinement is created. The default value is &lt;var&gt;false&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8553eca7a5ff4f3ca5c7417d2b79bd277350424f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reducepatch&lt;/code&gt; is called with a handle to a valid patch &lt;var&gt;patch_handle&lt;/var&gt;, and without any output arguments, then the given patch is updated immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35244c45fc8fc45cd08bce1ba3cb5d73cca26c6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reducevolume&lt;/code&gt; is called with two arguments then &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; are assumed to match the respective indices of &lt;var&gt;v&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd1fb00f7dc2f872c800c23fc3037e40cef2ea7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;showhiddenhandles&lt;/code&gt; is &lt;code&gt;&quot;on&quot;&lt;/code&gt;, all graphics objects handles are visible in their parents&amp;rsquo; children list, regardless of the value of their &lt;code&gt;handlevisibility&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6d05439cb6fcd6b01924cc31868061a89e919d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;textlistmode&lt;/code&gt; is &lt;code&gt;&quot;manual&quot;&lt;/code&gt;, then the labeled contours is determined by &lt;code&gt;textlist&lt;/code&gt;. If &lt;code&gt;textlistmode&lt;/code&gt; is set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, then the distance between labeled contours is determined by &lt;code&gt;textstep&lt;/code&gt;. If both &lt;code&gt;textlistmode&lt;/code&gt; and &lt;code&gt;textstepmode&lt;/code&gt; are set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, then there are assumed to be 10 equal spaced labeled contours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735d889cfa3bb0d8fda47f61295722b2047c262d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;varargin&lt;/code&gt; (&lt;code&gt;varargout&lt;/code&gt;) does not appear as the last element of the input (output) parameter list, then it is not special, and is handled the same as any other parameter name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8efd8f24ebc939b77f8828b22fa7a5f33cf968d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the axes is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa456443e4e614e8c12c08340b57b5f3c4d87df4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the figure is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfe34de82bb7c212df57a34b0078f9a7848b810" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the image is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b83ed2b0f0e37fc42d647ea081138cffaf9b0c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the light is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bc2814614e56f3e5d83862c2534f158f4bfd07" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the line is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a951c8f97efcf40eb5892e946bcc68d62445743f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the patch is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f664539e0ea6bc5c515b54bed8bf7108b011da0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the surface is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cb1224cf7010b2303eb45514dd95ba46657640" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the text is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577d1c997b4411bfc309f89131d3dd15fc7fc52d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uibuttongroup is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243d7fbe5bf37e9c0ad88f2697a7d9454ce1e8d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uicontextmenu is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc34d1a8b07ba7953066cab5c3446e27d75e7358" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uicontrol is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5721668a28d41b2286f4f51d7d8f29cef4bad93" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uimenu is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b39f6d05e8d718cce7cbc1d768a6a7830afc6c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uipanel is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a5e7fef280b5469ccfd7f5c1c3c2f75ba73a27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uipushtool is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e07a7dae481c42a2c1b275aa15a768143786d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitable is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81de4954a255bab456008b315912f8a3cb8ed5d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitoggletool is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfffcfaddfd391436330cb44cb03a66c718092c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the uitoolbar is not rendered on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecebb2423b0f0334e6119131a023f71cb619809" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;whos&lt;/code&gt; is called as a function, return a struct array of defined variable names matching the given patterns. Fields in the structure describing each variable are: name, size, bytes, class, global, sparse, complex, nesting, persistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2d505bad1e1421e19c13ccb144c5f67ec1c6c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;N&lt;/em&gt; is equal to 1 the value of &lt;var&gt;opt&lt;/var&gt; is ignored and normalization by &lt;em&gt;N&lt;/em&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac2271df16ab04317fd2500a3ba45cab4bb6767" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is a matrix (or sparse matrix):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c28c4c1440f52121d02ba21db8db65102c6e697" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is a multi-dimensional matrix, each two-dimensional sub-matrix of &lt;var&gt;A&lt;/var&gt; is treated separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae5275e61bbb1c85e100ece26acc24fc49de2db" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is a square &lt;em&gt;N&lt;/em&gt;-by-&lt;em&gt;N&lt;/em&gt; matrix, &lt;code&gt;poly (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt; is the row vector of the coefficients of &lt;code&gt;det (z * eye (N) - A)&lt;/code&gt;, the characteristic polynomial of &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afa8bd082e8c94bd9f5726f7343a385cf876347" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is a vector or a scalar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d6298c30e120e7f88714711f3c684aa31a67e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;A&lt;/var&gt; is full then subroutines from &lt;small&gt;LAPACK&lt;/small&gt; are used, and if &lt;var&gt;A&lt;/var&gt; is sparse then &lt;small&gt;UMFPACK&lt;/small&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fdd55fb283e11cfb7e346f48f306f6ad6e11c1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;D1&lt;/var&gt; and &lt;var&gt;D2&lt;/var&gt; are both diagonal matrices, then the expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c097395c54fd1c302ea2b37d97b96275eec572" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;P&lt;/var&gt; is a permutation matrix and &lt;var&gt;M&lt;/var&gt; a matrix, the expression &lt;code&gt;P*M&lt;/code&gt; will permute the rows of &lt;var&gt;M&lt;/var&gt;. Similarly, &lt;code&gt;M*P&lt;/code&gt; will yield a column permutation. Matrix division &lt;code&gt;P\M&lt;/code&gt; and &lt;code&gt;M/P&lt;/code&gt; can be used to do inverse permutation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40233d06532615106298230ec819cda351fdfe08" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;S&lt;/var&gt; is n-by-n, then rows and columns with more than &lt;code&gt;max(16,&lt;var&gt;knobs&lt;/var&gt;(1)*sqrt(n))&lt;/code&gt; entries are ignored, and ordered last in the output permutation (subject to the cmember constraints).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1383211c03cd7a86916e684c64f435281587a4b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;V&lt;/var&gt; is a vector and &lt;var&gt;k&lt;/var&gt; is greater than &lt;code&gt;length (A) - 1&lt;/code&gt;, then &lt;var&gt;h&lt;/var&gt; contains the Hessenberg matrix such that &lt;code&gt;a*u == u*h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b047b726149dd7ece0510145e280600631acc6c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;V&lt;/var&gt; is a vector, then &lt;var&gt;h&lt;/var&gt; contains the Hessenberg matrix such that &lt;code&gt;a*u == u*h+rk*ek'&lt;/code&gt;, in which &lt;code&gt;rk = a*u(:,k)-u*h(:,k)&lt;/code&gt;, and &lt;code&gt;ek'&lt;/code&gt; is the vector &lt;code&gt;[0, 0, &amp;hellip;, 1]&lt;/code&gt; of length &lt;var&gt;k&lt;/var&gt;. Otherwise, &lt;var&gt;h&lt;/var&gt; is meaningless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9187ed386cd0344569f0b1745a04d56babef93" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; are both row vectors then return a row vector; Otherwise, return a column vector. The inputs may also be cell arrays of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83907631b62714393366cd093c24721f7976360b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;a&lt;/var&gt; is a full matrix, convert it to a sparse matrix representation, removing all zero values in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32e8e27eb2fa1975e60fd3b2be8d95cc187d750" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;a&lt;/var&gt; is a row vector return a row vector; Otherwise, return a column vector. The inputs may also be cell arrays of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ccb1297bdc5c3b5d963e6db61107797be9d970" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;a&lt;/var&gt; is omitted, the denominator is assumed to be 1 (this corresponds to a simple FIR filter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5baf4a511c3cfd23cdd00685c53f47c346c0e5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;a&lt;/var&gt; is scalar, then &lt;code&gt;gammainc (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;a&lt;/var&gt;)&lt;/code&gt; is returned for each element of &lt;var&gt;x&lt;/var&gt; and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7636a01190a3bea174ab45eb067edbd95b16e7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;af&lt;/var&gt; is given, then flags whether the function &lt;var&gt;af&lt;/var&gt; defines a real problem. It is ignored if &lt;var&gt;A&lt;/var&gt; is given. The default is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f676075e9bbcedd8068cddc3739c33920575a455" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;af&lt;/var&gt; is given, then flags whether the function &lt;var&gt;af&lt;/var&gt; defines a symmetric problem. It is ignored if &lt;var&gt;A&lt;/var&gt; is given. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353edb096b52c7e77da893b082874807313f1dd4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alpha&lt;/var&gt; is a scalar, the result is the same size as &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a scalar, the result is the same size as &lt;var&gt;alpha&lt;/var&gt;. If &lt;var&gt;alpha&lt;/var&gt; is a row vector and &lt;var&gt;x&lt;/var&gt; is a column vector, the result is a matrix with &lt;code&gt;length (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; rows and &lt;code&gt;length (&lt;var&gt;alpha&lt;/var&gt;)&lt;/code&gt; columns. Otherwise, &lt;var&gt;alpha&lt;/var&gt; and &lt;var&gt;x&lt;/var&gt; must conform and the result will be the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d55ff547d90ef7fbf273cc7faee2b0f27fc5b5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;b&lt;/var&gt; is a vector and &lt;var&gt;k&lt;/var&gt; is greater than &lt;var&gt;m-1&lt;/var&gt;, then &lt;var&gt;h&lt;/var&gt; contains the Hessenberg decomposition of &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8e47ca136d108a38ff293e19e10dc11a37fd5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;b&lt;/var&gt; is equal to pi, the points are between 10^&lt;var&gt;a&lt;/var&gt; and pi, &lt;em&gt;not&lt;/em&gt; 10^&lt;var&gt;a&lt;/var&gt; and 10^pi, in order to be compatible with the corresponding &lt;small&gt;MATLAB&lt;/small&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79d17c536b8ef580aabc2bfee3285fbe4898e4e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;b&lt;/var&gt; is omitted, &lt;code&gt;1 / sqrt (length (&lt;var&gt;x&lt;/var&gt;))&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52dcd05c90dbca74516c18dbac26a71b4140cec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;base&lt;/var&gt; is a string then the characters of &lt;var&gt;base&lt;/var&gt; are used as the symbols for the digits of &lt;var&gt;d&lt;/var&gt;. Space (&amp;rsquo; &amp;rsquo;) may not be used as a symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ee9c4a82bd612e142ddae6fbec8b1a28bcf3bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;base&lt;/var&gt; is a string, the characters of &lt;var&gt;base&lt;/var&gt; are used as the symbols for the digits of &lt;var&gt;s&lt;/var&gt;. Space (&amp;rsquo; &amp;rsquo;) may not be used as a symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39f2deaafdc829a7860dcfd91830c327500b56a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;c&lt;/var&gt; is a vector of length N then the ith polygon will have a color determined by scaling entry &lt;var&gt;c&lt;/var&gt;(i) according to &lt;code&gt;caxis&lt;/code&gt; and then indexing into the current colormap. More complicated coloring situations require directly manipulating patch property/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02cad048225b0d37a867f538f761b5d1df542c0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;classname&lt;/var&gt; is a cell array of string, a logical array of the same size is returned, containing true for each class to which &lt;var&gt;obj&lt;/var&gt; belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df93b06079410a03c5fce1cd02684600f16739db" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;condition&lt;/var&gt; is true, &lt;var&gt;then-body&lt;/var&gt; is executed; otherwise, &lt;var&gt;else-body&lt;/var&gt; is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73aaae6c4f1246dcfac7ca370be4f5c2120bfe90" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is omitted, it defaults to 1. &lt;var&gt;count&lt;/var&gt; may also be &lt;code&gt;Inf&lt;/code&gt;, in which case lines are skipped until the end of the file. This form is suitable for counting the number of lines in a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f2beda665de6f7013c4322ad49e7d7c271b1ba" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;curv&lt;/var&gt; is a scalar, it represents the curvature of the shorter of the two sides of the rectangle and the curvature of the other side is defined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a83a5ec12a8ad4af05dc26a5781d3fe22c7943f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;d&lt;/var&gt; is a matrix or cell array, return a string matrix with one row per element in &lt;var&gt;d&lt;/var&gt;, padded with leading zeros to the width of the largest value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ca56f8b44a95fdcce673f283778a846aa38488" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;d&lt;/var&gt; is specified, return the calendar for the month containing the date &lt;var&gt;d&lt;/var&gt;, which must be a serial date number or a date string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072872bb0990a608455028699fba36630f9e97f7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;data&lt;/var&gt; is omitted, Octave calls the function without any arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbef9ea2853eaa0e8558a78ddf900214eff70072" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;default_file&lt;/var&gt; is given then it will be selected in the GUI dialog. If, in addition, a path is given it is also used as current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece02cfee7a4419703977d93351cd927570fcbd1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;delimiter&lt;/var&gt; is a cell string array whose length is one less than &lt;var&gt;cstr&lt;/var&gt;, then the elements of &lt;var&gt;cstr&lt;/var&gt; are joined by interleaving the cell string elements of &lt;var&gt;delimiter&lt;/var&gt;. Escape sequences are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5ccf536ed3d3d13b6bf9f90e2d752744a060ce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;delimiter&lt;/var&gt; is specified as a string, the cell string array is joined using the string. Escape sequences are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9579dab8f793ae5e2a3ad96349be7899cd9ed0e5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is defined then individual elements of &lt;var&gt;C&lt;/var&gt; contain all of the elements from &lt;var&gt;A&lt;/var&gt; along the specified dimension. &lt;var&gt;dim&lt;/var&gt; may also be a vector of dimensions with the same rule applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559edcf235f1e4a9412e13b48aa5abcb3a4652b1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is larger than the dimensions of &lt;var&gt;x&lt;/var&gt;, the result will have &lt;var&gt;dim&lt;/var&gt; dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e31359f3ea5404b77352abf2a881e336fe5ddc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is omitted the first non-singleton dimension is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730d55fdc5a989aa78db39c421cd9254f7e8c768" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is omitted, it defaults to the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a21c42ea257c45bee61f9d458ed0fd2cb61b3d8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is omitted, it defaults to the first non-singleton dimension. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791c72ca4cfec7c038ee016f95a4602ae8aa0648" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is specified, then interpolate along the dimension &lt;var&gt;dim&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89eb199b79d486f73d9c221c3240bb139860a26" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is supplied, the dimensions of &lt;var&gt;v&lt;/var&gt; are set to &lt;var&gt;dim&lt;/var&gt; with all elements along the last dimension. This is equivalent to &lt;code&gt;shiftdim (&lt;var&gt;x&lt;/var&gt;(:), 1-&lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f52a9b38b75c840009f3effa37ac884cff1e310" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is unspecified it defaults to column-wise operation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3798c39d827c898336037e2ac379e123328e64d4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dim&lt;/var&gt; is unspecified it defaults to the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eff6767ffc75b46b635219e17d39b0f6ef96cf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; does not exist it is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69d71651bf74ea7ce274343250f98f650300744" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is also omitted, the default directory for temporary files (&lt;code&gt;P_tmpdir&lt;/code&gt;) is used. If &lt;var&gt;dir&lt;/var&gt; is provided, it must exist, otherwise the default directory for temporary files is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daeff58d9a9db6a88365d437066cf0d133a82e4e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is defined the compressed files are placed in this directory, rather than the original directory where the uncompressed file resides. Note that this does not replicate a directory tree in &lt;var&gt;dir&lt;/var&gt; which may lead to files overwriting each other if there are multiple files with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4237f345115470cc9c05400736792fc8cb57b1e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is not specified or is empty (&lt;code&gt;[]&lt;/code&gt;), it defaults to the current directory. If a directory is in the file list, then &lt;var&gt;filetype&lt;/var&gt; must also be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669dccf228a1d9a85fdd74c691833a995e720a76" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is not specified then the current directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583d8ff036e247c9f989e960bba16189dce62e24" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is omitted, the current directory is changed to the user&amp;rsquo;s home directory (&lt;code&gt;&quot;~&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe515a916e5b1ca67e2cf5961e780f870308fc9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is specified the files are unpacked in this directory rather than the one where &lt;var&gt;bzfile&lt;/var&gt; is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55283a7a640f5c2f37b52a03da650ec8f58cb06" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is specified the files are unpacked in this directory rather than the one where &lt;var&gt;gzfile&lt;/var&gt; is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0022f028344294aa9fc0f5512de10a7fa1f919c0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is specified the files are unpacked in this directory rather than the one where &lt;var&gt;tarfile&lt;/var&gt; is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec3ceb71582155efc04cb6fe8d6c3b5110eab27" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir&lt;/var&gt; is specified the files are unpacked in this directory rather than the one where &lt;var&gt;zipfile&lt;/var&gt; is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3844e358c5bbca5524b214dbae69328aac0af408" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;direction&lt;/var&gt; is &lt;code&gt;&quot;first&quot;&lt;/code&gt;, return the first element found. If &lt;var&gt;direction&lt;/var&gt; is &lt;code&gt;&quot;last&quot;&lt;/code&gt;, return the last element found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3dfb2e8df4292246a61c9c7da391d058c510b4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;directory&lt;/var&gt; is a filename, rather than a directory, then return information about the named file. &lt;var&gt;directory&lt;/var&gt; may also be a list rather than a single directory or file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7227569883acfc2ed517d992e7e84f50308642e8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;directory&lt;/var&gt; is not specified then list the present working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a1deee15910214be9cef40f95ffde689b0a413" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dirname&lt;/var&gt; is a relative path, and no &lt;var&gt;parent&lt;/var&gt; directory is specified, then the present working directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6fd3459183483a9b434bd77de8f3c240ead3f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dom&lt;/var&gt; is a two element vector, it represents the minimum and maximum values of &lt;var&gt;t&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52c0ee9c23964d182dcce672e0e2d267b782ede" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dom&lt;/var&gt; is a two element vector, it represents the minimum and maximum values of &lt;var&gt;theta&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbf4e623ba192e825de211c64e31e3b3b0ada27" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dom&lt;/var&gt; is a two element vector, it represents the minimum and maximum values of both &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, or &lt;var&gt;t&lt;/var&gt; for a parametric plot. If &lt;var&gt;dom&lt;/var&gt; is a four element vector, then the minimum and maximum values are &lt;code&gt;[xmin xmax ymin ymax]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cae8deee7b1e80cdaca78aed100e7810e08942" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dom&lt;/var&gt; is a two element vector, it represents the minimum and maximum values of both &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;. If &lt;var&gt;dom&lt;/var&gt; is a four element vector, then the minimum and maximum values are &lt;code&gt;[xmin xmax ymin ymax]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505f7835d812d594a1c5bd0c050eca2ff6dfbe7f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ex&lt;/var&gt; is a string or a cell array of strings, &lt;var&gt;uniqstr&lt;/var&gt; will contain elements that are unique between themselves and with respect to &lt;var&gt;ex&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93eb981aa0a04dc35d1cf3ee4c4dccc6f365974" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ex&lt;/var&gt; is an index array or a logical array for &lt;var&gt;str&lt;/var&gt; then it selects the subset of &lt;var&gt;str&lt;/var&gt; that are made unique. Unselected elements are not modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d3551885f78c8dd121843da104ba1350b33eb9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;expected&lt;/var&gt; is zero &lt;var&gt;tol&lt;/var&gt; will always be interpreted as an absolute tolerance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08046463178ee403443df44c2f4eaa5c60c48cb4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;expr&lt;/var&gt; is omitted, return a cell array of strings containing all the currently installed data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee720fab412c54fbde464c90991eab2083edc9e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ext&lt;/var&gt; is not supplied, the file extension of &lt;var&gt;filename&lt;/var&gt; is used to determine the format. The actual supported formats are dependent on options made during the build of Octave. Use &lt;code&gt;imformats&lt;/code&gt; to check the support of the different image formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886adc21f7300f418a6cdb9fdd9361543b89dff" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;extrap&lt;/var&gt; is the string &lt;code&gt;&quot;extrap&quot;&lt;/code&gt;, then extrapolate values beyond the endpoints using the current &lt;var&gt;method&lt;/var&gt;. If &lt;var&gt;extrap&lt;/var&gt; is a number, then replace values beyond the endpoints with that number. When unspecified, &lt;var&gt;extrap&lt;/var&gt; defaults to &lt;code&gt;NA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d893055a7b4676f5855b914c3b48bcb0089e9e40" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f2v&lt;/var&gt; is a function of two variables then the implicit function &lt;code&gt;&lt;var&gt;f&lt;/var&gt;(&lt;var&gt;x&lt;/var&gt;,&lt;var&gt;y&lt;/var&gt;) = 0&lt;/code&gt; is calculated over the meshed domain &lt;code&gt;-2*pi &amp;lt;= &lt;var&gt;x&lt;/var&gt; | &lt;var&gt;y&lt;/var&gt; &amp;lt;= 2*pi&lt;/code&gt; with 60 points in each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249a72750e27f925e5633cfbc8c8ad0ddd51dfd6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is a cell array of strings or a character array, remove each of the named fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c663824be595651b78585f25e25c6f8ee78fbf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is a cell array of strings, &lt;var&gt;tf&lt;/var&gt; is a logical array of the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf857361a36551c87323a514ef7acbc660b55b4f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is a format string, the following symbols are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d7add6fc29df36025c6ecd4f668c9a2ffa1725" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is not specified or is &lt;code&gt;-1&lt;/code&gt;, then use 0, 1 or 16, depending on whether the date portion or the time portion of &lt;var&gt;date&lt;/var&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b87d4bbc12def97d53df18a2830d42532dfed2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is the number of fields in the structure, the resulting cell array will have a dimension vector corresponding to &lt;code&gt;[&lt;var&gt;f&lt;/var&gt; size(&lt;var&gt;s&lt;/var&gt;)]&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0ea8184999f8a6a77aa53b951f09f50ae5d954" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;f&lt;/var&gt; is the vector representing the polynomial f(x), then &lt;code&gt;&lt;var&gt;g&lt;/var&gt; = polyaffine (&lt;var&gt;f&lt;/var&gt;, &lt;var&gt;mu&lt;/var&gt;)&lt;/code&gt; is the vector representing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6deb8596b536a12433085f4a6081e08d2279a75" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fcn&lt;/var&gt; is a two-element string array or a two-element cell array of strings, inline functions, or function handles, the first element names the function &lt;em&gt;f&lt;/em&gt; described above, and the second element names a function to compute the Jacobian of &lt;em&gt;f&lt;/em&gt;. The Jacobian function must have the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4203a51b3186d4c6880fa042961b4165e3dd0b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fcn&lt;/var&gt; is a two-element string array or a two-element cell array of strings, inline functions, or function handles, the first element names the function &lt;em&gt;f&lt;/em&gt; described above, and the second element names a function to compute the modified Jacobian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e24b9482a8acccc837ab692fca80db1036d5c07" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fcn&lt;/var&gt; is not defined then all listener functions of &lt;var&gt;prop&lt;/var&gt; are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae25910ff2738bcf0d2b74e4c4059065145491cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;feature&lt;/var&gt; is not supported, a scalar struct with field &lt;code&gt;&quot;message&quot;&lt;/code&gt; and &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; is returned. The field &lt;code&gt;&quot;message&quot;&lt;/code&gt; contains an error message mentioning &lt;var&gt;feature&lt;/var&gt; as well as the optional user-specified &lt;var&gt;caller&lt;/var&gt;. This structure is suitable for passing in to the &lt;code&gt;error&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b283392abf6436ec114f6c5ad6732a65746d987e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;feature&lt;/var&gt; is supported and available, an empty struct array is returned with fields &lt;code&gt;&quot;message&quot;&lt;/code&gt; and &lt;code&gt;&quot;identifier&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21129dd520347aaf8e91dca7b04aa155e62292c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fid&lt;/var&gt; is omitted, the output is written to &lt;code&gt;stdout&lt;/code&gt; making the function exactly equivalent to &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc8d04ef9452c0f808436dae2a9ff0cd4e4a873" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; contains globbing characters, return information about all the matching files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aca337529704a01166f4706c70d1dbca16efe34" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is a list of strings, then each file is unpacked individually. Shell wildcards in the filename such as &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c7801cfdb25f28486f5efaaa117e893c28d01b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is a symbolic link, &lt;code&gt;stat&lt;/code&gt; will return information about the actual file that is referenced by the link. Use &lt;code&gt;lstat&lt;/code&gt; if you want information about the symbolic link itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714cede437f741825e82ffacf7ca21aec343f541" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is omitted, Octave looks in the current directory for a project-specific</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa7bfeee4c4054e95782cbd56bf3ae41a9ed6fd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is omitted, read the default initialization file (normally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bad1e405150fc320e041e317b1a3eed0b582691" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; has no extension, Octave will try to find the file with and without the default extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ebafab71a26fecf9cdf64abad3ea798cc5f60c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fmt&lt;/var&gt; fails to match, &lt;var&gt;nchars&lt;/var&gt; is 0; otherwise, it is set to the position of last matched character plus 1. Always check for this unless you&amp;rsquo;re absolutely sure the date string will be parsed correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b367a90b8022a5e59310d2940b55d5f40bb41fdc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fmt&lt;/var&gt; is missing, the yerrorbars (&quot;~&quot;) plot style is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7952ae38588d8811fb816cee9bb51b86c333260f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fmt&lt;/var&gt; is omitted it is extracted from the extension of &lt;var&gt;filename&lt;/var&gt;. The default format when there is no extension is &lt;code&gt;&quot;pdf&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a97e1cb3539b929c46e86d2d77bbee817abc9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fs&lt;/var&gt; is not given, a default sample rate of 8000 samples per second is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7663bce57a01b4c2bf81520479fb74167ada5d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;gzfile&lt;/var&gt; is a directory, all gzfiles in the directory will be recursively unpacked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42555ac54bfa8f50f8c93d528c07cb5dc4f1136d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is a matrix then return a logical array which is true where the elements of &lt;var&gt;h&lt;/var&gt; are axes graphics handles and false where they are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e87e8754dcd6b8a1b600b4428b88b744c15501e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is a matrix then return a logical array which is true where the elements of &lt;var&gt;h&lt;/var&gt; are figure graphics handles and false where they are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37afc6112cc86d2f440433a0c2f94eed76aef908" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is a vector of handles, they must all have the same parent axes object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986b28116887193f7315711a8bc2bfcf3e56cc3a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is a vector, return a cell array including the property values or lists respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a394ec1e2a8491b3ffacdae76a322d53ca589030" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is given then a uicontextmenu relative to &lt;var&gt;h&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775484f9e1b28da9968e8c69f6a63df1ec056dd9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is omitted then a top-level menu for the current figure is created. If &lt;var&gt;h&lt;/var&gt; is given then a submenu relative to &lt;var&gt;h&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588d2f0745cd3c6ef7734771292b7b3a5dd83307" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;h&lt;/var&gt; is omitted then a uicontextmenu for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6947c64fdc1a2a78f826a544371ecb8bfba96205" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;handles&lt;/var&gt; is a scalar, &lt;var&gt;h&lt;/var&gt; will be a vector. Otherwise, &lt;var&gt;h&lt;/var&gt; will be a cell matrix of the same size as &lt;var&gt;handles&lt;/var&gt; and each cell will contain a vector of handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb76a5032531435dd11e081dfdcd9310aea5548" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;horig&lt;/var&gt; is a vector of handles, and &lt;var&gt;hparent&lt;/var&gt; is a scalar, then each handle in the vector &lt;var&gt;hnew&lt;/var&gt; has its &lt;code&gt;&quot;Parent&quot;&lt;/code&gt; property set to &lt;var&gt;hparent&lt;/var&gt;. Conversely, if &lt;var&gt;horig&lt;/var&gt; is a scalar and &lt;var&gt;hparent&lt;/var&gt; a vector, then each parent object will receive a copy of &lt;var&gt;horig&lt;/var&gt;. If &lt;var&gt;horig&lt;/var&gt; and &lt;var&gt;hparent&lt;/var&gt; are both vectors with the same number of elements then &lt;code&gt;&lt;var&gt;hnew&lt;/var&gt;(i)&lt;/code&gt; will have parent &lt;code&gt;&lt;var&gt;hparent&lt;/var&gt;(i)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c52166f9e61ce8ca770a4d5f689944a5ec07b1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;idx&lt;/var&gt; is an empty structure array with fields &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0b081c95d285d3f0eb749275e05a02eb5d01cf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;img&lt;/var&gt; is an indexed image, then the second argument should be the string &lt;code&gt;&quot;indexed&quot;&lt;/code&gt;. If so, then &lt;var&gt;img&lt;/var&gt; must either be of floating point class, or unsigned integer class and it will simply be cast to double. If it is an integer class, a +1 offset is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99153cfe143a61b050429fb83edf54d65bf0dd2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;info&lt;/var&gt; is not present, an error message is printed in cases 1 and 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d56d33d68ac080e18c34108449787216172c129" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;init_path&lt;/var&gt; is not given the current working directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a1567f841b7b89e5b8645b8673f736e0337261" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;k&lt;/var&gt; is omitted &lt;code&gt;k = log2 (flintmax) + 1&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2757602f4d856bfb61aa02225c5b6353268f7dcd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;k&lt;/var&gt; is outside the range &lt;code&gt;1:max (nargout)&lt;/code&gt;, the function returns false. &lt;var&gt;k&lt;/var&gt; can also be an array, in which case the function works element-by-element and a logical array is returned. At the top level, &lt;code&gt;isargout&lt;/code&gt; returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbf3ec0bf881356e630c917b2425a78dedb3d92" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;label&lt;/var&gt; is a cell array the corresponding &lt;var&gt;command_list&lt;/var&gt; is executed if &lt;em&gt;any&lt;/em&gt; of the elements of the cell array match &lt;var&gt;expression&lt;/var&gt;. As an example, the following program will print &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef1ba230c74a22439a77b5d2879dc36a95e89ad" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;len&lt;/var&gt; is omitted, &lt;code&gt;fgetl&lt;/code&gt; reads until the next newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0199dfcec195998198ff9dc804a623ca096f16e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;len&lt;/var&gt; is omitted, &lt;code&gt;fgets&lt;/code&gt; reads until the next newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c3c84c9f7e3757e422115cefb192a0f2dd162" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;len&lt;/var&gt; is omitted, the substring extends to the end of &lt;var&gt;s&lt;/var&gt;. A negative value for &lt;var&gt;len&lt;/var&gt; extracts to within &lt;var&gt;len&lt;/var&gt; characters of the end of the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48221c59ac69b466347886bc7dd2df0a3e697dd2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limits&lt;/var&gt; is a 2-element vector &lt;code&gt;[&lt;var&gt;low&lt;/var&gt;, &lt;var&gt;high&lt;/var&gt;]&lt;/code&gt;, the image is shown using a display range between &lt;var&gt;low&lt;/var&gt; and &lt;var&gt;high&lt;/var&gt;. If an empty matrix is passed for &lt;var&gt;limits&lt;/var&gt;, the display range is computed as the range between the minimal and the maximal value in the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e65f54bb3694e0771074c3fe59bd4cf0413b7e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; is a scalar, the results are the same size as &lt;var&gt;u&lt;/var&gt;. If &lt;var&gt;u&lt;/var&gt; is a scalar, the results are the same size as &lt;var&gt;m&lt;/var&gt;. If &lt;var&gt;u&lt;/var&gt; is a column vector and &lt;var&gt;m&lt;/var&gt; is a row vector, the results are matrices with &lt;code&gt;length (&lt;var&gt;u&lt;/var&gt;)&lt;/code&gt; rows and &lt;code&gt;length (&lt;var&gt;m&lt;/var&gt;)&lt;/code&gt; columns. Otherwise, &lt;var&gt;u&lt;/var&gt; and &lt;var&gt;m&lt;/var&gt; must conform in size and the results will be the same size as the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0681ff43f87b0bfe6f1794bdead864e19993d57" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; is a vector, calculate the one-dimensional gradient of &lt;var&gt;m&lt;/var&gt;. If &lt;var&gt;m&lt;/var&gt; is a matrix the gradient is calculated for each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b56cb0d275dd03fbb8d16a4b3191a154c67fdf2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; is omitted the first derivative is calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e3f429592fad6f6645b129330c78f3ca7b2f3b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; is supplied, return &lt;var&gt;m&lt;/var&gt; unique entries, sampled without replacement from &lt;code&gt;1:&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95fd4c82d8e184c637fa389d13ece0d691e9c7d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; or &lt;var&gt;n&lt;/var&gt; are not specified their values are derived from the maximum index in the vectors &lt;var&gt;i&lt;/var&gt; and &lt;var&gt;j&lt;/var&gt; as given by &lt;code&gt;&lt;var&gt;m&lt;/var&gt; = max (&lt;var&gt;i&lt;/var&gt;)&lt;/code&gt;, &lt;code&gt;&lt;var&gt;n&lt;/var&gt; = max (&lt;var&gt;j&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2575a5eebbbda6956d872102e08e9c88097c4b1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;map&lt;/var&gt; is a valid color map, the image will be shown as an indexed image using the supplied color map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d675f59b29ec1d61c60f39072d491a9c43677894" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is a logical scalar, the other two arguments can be arbitrary values. Otherwise, &lt;var&gt;mask&lt;/var&gt; must be a logical array, and &lt;var&gt;tval&lt;/var&gt;, &lt;var&gt;fval&lt;/var&gt; should be arrays of matching class, or cell arrays. In the scalar mask case, &lt;var&gt;tval&lt;/var&gt; is returned if &lt;var&gt;mask&lt;/var&gt; is true, otherwise &lt;var&gt;fval&lt;/var&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6431cb99bcabc905c35bbb83e01df404f8e15c20" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a logical vector, it is used as a mask to selectively force the corresponding polynomial coefficients to be used or ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b1754e6fa5eba4c2f455b6f9759361945ba658" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a scalar the plot is made with &lt;var&gt;n&lt;/var&gt; grid lines. The default value for &lt;var&gt;n&lt;/var&gt; is 41.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff50983c9d7a001181e2caa38cb55400a404fb0a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a scalar then calculate the binomial coefficient of &lt;var&gt;n&lt;/var&gt; and &lt;var&gt;k&lt;/var&gt; which is defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5038d6d4674828a980dc82ba890c82f822703b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a scalar, &lt;code&gt;peaks&lt;/code&gt; plots the value of the above function on an &lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;n&lt;/var&gt; mesh over the range [-3,3]. The default value for &lt;var&gt;n&lt;/var&gt; is 49.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cceef13a8cadec39fe178b6d122e98c9c6b87f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a scalar, this is equivalent to &lt;code&gt;prod (1:&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;. For vector or matrix arguments, return the factorial of each element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129efc1f2b3a5f38eeb89621293750b39bb4f9eb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is a vector, then it represents the grid values over which to calculate the function. If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are specified then the function value is calculated over the specified grid of vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37776a6a91844da560b54b58b65dc594ca3c7776" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is defined, then capture &lt;var&gt;n&lt;/var&gt; events before returning. When &lt;var&gt;n&lt;/var&gt; is not defined &lt;code&gt;ginput&lt;/code&gt; will loop until the return key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43abc8e230479cc3e59239b3ddac8e355b14fe7a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified it defaults to 0, 8, or 16 depending on the range of values in &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441d57586fdd3e1e45b55bdc957a0aa2cc5259f2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e866b39c0c3fce36b197e04dd237c919e831caae" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified, all examples are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5c296dd034114335289d214ed2620613277f22" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified, all examples are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1ddc173b29dd9dbdc887b3313e6ffd0d4ae757" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified, form an &lt;var&gt;m&lt;/var&gt; by &lt;var&gt;m&lt;/var&gt; block matrix. For copying along more than two dimensions, specify the number of times to copy across each dimension &lt;var&gt;m&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;, &amp;hellip;, in a vector in the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed2abc34a8a12f813245244f8910a7d41409f83" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is omitted it defaults to 64. &lt;var&gt;n&lt;/var&gt; must be in the range [1,64].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff0f8218ad88fa8545fc707ec9b41d0275136de" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is omitted, a value of 512 is assumed. For fastest computation, &lt;var&gt;n&lt;/var&gt; should factor into a small number of small primes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5ec1b93edbb7fa5e913fb5afe7bf45efe0e15a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is omitted, execute the next single line of code. If the next line of code is itself defined in terms of an m-file remain in the existing function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3818f9434b682b13f6c54e917aae518924add528" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is omitted, move down one frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3744fa7a893ce89cb8e722c7714d1a56de47684a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is omitted, move up one frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e0484e9806a7b9be3a0f652ee02861107a8994" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is specified, it determines the number of columns; otherwise, &lt;var&gt;n&lt;/var&gt; is taken to be equal to the length of &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c4e0ee9df76bff0cd3be8041c92cfa2ea2b6d2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is unspecified it defaults to 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae7973ea1ad0be52a25d457dc17040ae43ae9af" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is unspecified, the first 25 primes are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f52f139c653dbf2a8de8e7b31ead33eecaec512" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; are cell arrays of the same size, set each property to a corresponding value. Given a structure with fields corresponding to property names, set the value of those properties to the corresponding field values. Given only the recorder object, return a structure of settable properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac558d9d528669cb1e6c7db875757c5ff097eae7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; are cell arrays, set each property to the corresponding value. Given a structure of &lt;var&gt;properties&lt;/var&gt; with fields corresponding to property names, set the value of those properties to the field values. Given only the audioplayer object, return a structure of settable properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034d66e2bdb1e2c338fefba77ae1fcc67326bb2a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is a cell array of strings then a logical array of equal dimension is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e2e0ce5f39497ec2a0c91f520e0c0561b7f500" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is a cell array return the values of the properties identified by the elements of the cell array. Given only the player object, return a scalar structure with values of all properties of &lt;var&gt;player&lt;/var&gt;. The field names of the structure correspond to property names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f4630794de99439004afe27993c98d1600b54b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is a cell array, return the values of the properties corresponding to the elements of the cell array. Given only the recorder object, return a scalar structure with values of all properties of &lt;var&gt;recorder&lt;/var&gt;. The field names of the structure correspond to property names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32da0815b5ea6eabb1fad825b7d500b5b4a3570" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is defined from a function file, the full name of the file is also displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139aec0720404ec922f06a0a6fe1d2df21d3b5e5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is omitted, return a list of keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034f60557f974b2d23b1fe1692e7f13e5e320176" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is specified, it must be a string that contains a &amp;ldquo;name&amp;rdquo; for the profile being exported. This name is included in the HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ba2b04db0aab7968911afab8c8ec59f7694940" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is the name of a function defined in the interpreter but not in an m-file, then an m-file will be created in &lt;code&gt;HOME&lt;/code&gt; to contain that function along with its current definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a47eaa73f4fecd11bc8caa89ea1a2347e11c516" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nargin&lt;/var&gt; and &lt;var&gt;nargout&lt;/var&gt; are zero, display the elements of Octave&amp;rsquo;s load path in an easy to read format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2629fda18c2f28fc3adbaf9ce54ee5e567a490" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nargin&lt;/var&gt; is greater than zero, concatenate the arguments, separating them with &lt;code&gt;pathsep&lt;/code&gt;. Set the internal search path to the result and return it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0929d6f0a9997d4c18efd36697e3432bb25c775" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nargin&lt;/var&gt; is zero and nargout is greater than zero, return the current load path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3190700ac803f9e5dda2fbd904ef89ba489d03ad" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;native_bytes&lt;/var&gt; is a string vector, it is returned as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634a62dfa8ad93712609663981dbc0bd84bfc698" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nbins&lt;/var&gt; is given and is a scalar, then the histogram is produced with &lt;var&gt;nbin&lt;/var&gt; bins. If &lt;var&gt;bins&lt;/var&gt; is a vector, then the center of each bin is defined by the values in &lt;var&gt;bins&lt;/var&gt; and the number of bins is given by the number of elements in &lt;var&gt;bins&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c55f03f7d25c582cf53c446974ac2c98f86cd3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;octave_core_file_options&lt;/var&gt; flags specify a binary format, then &lt;var&gt;octave_core_file_limit&lt;/var&gt; will be approximately the maximum size of the file. If a text file format is used, then the file could be much larger than the limit. The default value is -1 (unlimited).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379c062880077e212557fd2859a0052cb8d20c47" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oldphi&lt;/var&gt; and &lt;var&gt;oldv&lt;/var&gt; are omitted, all steps from 1 to &lt;var&gt;t&lt;/var&gt; of the algorithm are performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2515c13b7c45feb4539189db661d4a3628ec8cd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;op&lt;/var&gt; is &lt;code&gt;&quot;-&quot;&lt;/code&gt;, &lt;var&gt;info&lt;/var&gt; is set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a396eddf323cc431f5412ccff2aa4ed3b9323dcb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;op&lt;/var&gt; is not given it defaults to &lt;code&gt;&quot;fix&quot;&lt;/code&gt;. An example demonstrating these rounding rules is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ec99269eb30b1f6a58ea3445d30db616ad9e2c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;opt&lt;/var&gt; is a structure, it must contain fields &lt;code&gt;&quot;WindowStyle&quot;&lt;/code&gt; and &lt;code&gt;&quot;Interpreter&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7716e9c94adae86f45327172e8f4011b6df97bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;opt&lt;/var&gt; is the value &lt;code&gt;&quot;rows&quot;&lt;/code&gt;, treat each row as a vector and compute its norm. The result is returned as a column vector. Similarly, if &lt;var&gt;opt&lt;/var&gt; is &lt;code&gt;&quot;columns&quot;&lt;/code&gt; or &lt;code&gt;&quot;cols&quot;&lt;/code&gt; then compute the norms of each column and return a row vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c83f5e1135b31a3b2941fc03535317f7c5aee6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;option&lt;/var&gt; is &lt;code&gt;&quot;-begin&quot;&lt;/code&gt; or 0 (the default), prepend the directory name to the current path. If &lt;var&gt;option&lt;/var&gt; is &lt;code&gt;&quot;-end&quot;&lt;/code&gt; or 1, append the directory name to the current path. Directories added to the path must exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebbd3d33349e39a2cebc134a6c14e1acdac00f0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;options&lt;/var&gt; is not present or &lt;code&gt;[]&lt;/code&gt; then the default arguments are used. Otherwise, &lt;var&gt;options&lt;/var&gt; replaces the default argument list. To append user options to the defaults it is necessary to repeat the default arguments in &lt;var&gt;options&lt;/var&gt;. Use a null string to pass no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914bc521c381b24b263d91ebd890712b84449be2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;opts&lt;/var&gt; is given, it is a structure defining possible options that &lt;code&gt;eigs&lt;/code&gt; should use. The fields of the &lt;var&gt;opts&lt;/var&gt; structure are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9714aef3fdb70c4fc0f8eb44cad1558fb8b66b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;opts&lt;/var&gt; is specified, it must be a string with letters indicating additional options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1308327777a297a22bc29b572bc71dfd0ce7c624" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;col&quot;&lt;/code&gt;, &lt;var&gt;j&lt;/var&gt; may be an index vector resulting in the QR factorization of a matrix &lt;var&gt;B&lt;/var&gt; such that A(:,&lt;var&gt;j&lt;/var&gt;) = [] gives &lt;var&gt;B&lt;/var&gt;. Notice that the latter case is done as a sequence of k deletions; thus, for k large enough, it will be both faster and more accurate to recompute the factorization from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d6003617ab5cd110827011ef4a835aa053ed63" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;col&quot;&lt;/code&gt;, the QR factorization supplied may be either full (Q is square) or economized (R is square).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5f6e164d9ba7a4ad3b59f819f45f4686c38e04" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;orient&lt;/var&gt; is &lt;code&gt;&quot;row&quot;&lt;/code&gt;, full factorization is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca681f1c04149e2c9586745ec005edbdd1e70c34" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;outval&lt;/var&gt; is supplied, then the values of &lt;var&gt;xi&lt;/var&gt; that are not contained within one of the simplices &lt;var&gt;tri&lt;/var&gt; are set to &lt;var&gt;outval&lt;/var&gt;. Generally, &lt;var&gt;tri&lt;/var&gt; is returned from &lt;code&gt;delaunayn (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12051311d0ed4daa4c3a63fdb34ac33fd640e887" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;p&lt;/var&gt; is nor specified, it defaults to the current year minus 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312baddb61d9a010ae26fc0dc4aea0f5cf80e04f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;p&lt;/var&gt; is omitted it defaults to 2 (Euclidean norm). &lt;var&gt;p&lt;/var&gt; can be &lt;code&gt;Inf&lt;/code&gt; (absolute value of largest element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc214634060e494b88f8c15f3f8d71d9490058a2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;p&lt;/var&gt; is omitted, return the complete property list for &lt;var&gt;h&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98770737d9d5d0c44cb0f367911659f4c18e08ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;p&lt;/var&gt; is unspecified, return the quantiles for &lt;code&gt;[0 25 50 75 100]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b995c8a06ae0286685d4b36212b76e2dace2255" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;p&lt;/var&gt; is unspecified, return the quantiles for &lt;code&gt;[0.00 0.25 0.50 0.75 1.00]&lt;/code&gt;. The optional argument &lt;var&gt;dim&lt;/var&gt; determines the dimension along which the quantiles are calculated. If &lt;var&gt;dim&lt;/var&gt; is omitted it defaults to the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644e79c113203b7f5623d57671b2da224bb65124" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uibuttongroup relative to &lt;var&gt;parent&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a65ac577676b6a2b9e6a657320196b322f77dde" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uicontrol relative to &lt;var&gt;parent&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b9128f4c7dacdb994aa98a3bd9952a1c427ee1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uipanel relative to &lt;var&gt;parent&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f3cbc2ab42bb37748f133810d527f25bf6823c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uipushtool is created on the &lt;var&gt;parent&lt;/var&gt; uitoolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80eda90b3c247ece36bfe5f57e763b35602e4cbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uitable relative to &lt;var&gt;parent&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3cde9d0a9004cd8393026f1cfc471fee71dfb1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uitoggletool is created on the &lt;var&gt;parent&lt;/var&gt; uitoolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc627c0a8ad2ff9d99265af5caed4583cc856b0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is given then a uitoolbar relative to &lt;var&gt;parent&lt;/var&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276834a90b1593532230bc008e37ecd8e077167d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uibuttongroup for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2ade8a4fc2cd723399b1873ebe7a781f8a6155" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uicontrol for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10236e68fa1c0ad5a4e396abd2c27f2d6634df75" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uipanel for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47194c9b921a0fa9471d66a4d787b4566878c8d0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uipushtool for the current figure is created. If no figure is available, a new figure is created first. If a figure is available, but does not contain a uitoolbar, a uitoolbar will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc768295db90b22a4dc1a0a63d6ff973f6199dd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uitable for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1e84d0d2033adf449957ea1e0c7b795ca1b889" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uitoggletool for the current figure is created. If no figure is available, a new figure is created first. If a figure is available, but does not contain a uitoolbar, a uitoolbar will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8880dc7dd8bf3e455844cc9d7763a204be8b2409" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; is omitted then a uitoolbar for the current figure is created. If no figure is available, a new figure is created first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f24d4d44d7b26ed55f6899d92b392aad7f7921" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parname&lt;/var&gt; is not defined then return &lt;var&gt;default&lt;/var&gt; if supplied, otherwise return an empty matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731563e0567e45f36f4bc7d9354178005fe80322" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;path&lt;/var&gt; is not specified, return the remote current working directory. Otherwise, set the remote directory to &lt;var&gt;path&lt;/var&gt; and return the new remote working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaea8bcb9cd30dec478f6325f21af411597206b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pid&lt;/var&gt; is -1, then signal &lt;var&gt;sig&lt;/var&gt; is sent to every process except process 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763c3a67a01b39b5e8a7023fa27b59ee1041a7fb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pid&lt;/var&gt; is 0, then signal &lt;var&gt;sig&lt;/var&gt; is sent to every process in the process group of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebd172bb85993f35234185091bfa7f5e5f8f740" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pid&lt;/var&gt; is less than -1, then signal &lt;var&gt;sig&lt;/var&gt; is sent to every process in the process group &lt;var&gt;-pid&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7d3d642fe7523873b5e401e5dd89d26ec9775d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pid&lt;/var&gt; is positive, then signal &lt;var&gt;sig&lt;/var&gt; is sent to &lt;var&gt;pid&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c6b1369e8d90f12a3fce5bd9288ec3bc07b398" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is omitted it defaults to &lt;code&gt;&quot;right&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9206f0db89cecf684a3284d72d3f6dd2e46bcb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pp&lt;/var&gt; describes a scalar polynomial function, the result is an array of the same shape as &lt;var&gt;xi&lt;/var&gt;. Otherwise, the size of the result is &lt;code&gt;[pp.dim, length(&lt;var&gt;xi&lt;/var&gt;)]&lt;/code&gt; if &lt;var&gt;xi&lt;/var&gt; is a vector, or &lt;code&gt;[pp.dim, size(&lt;var&gt;xi&lt;/var&gt;)]&lt;/code&gt; if it is a multi-dimensional array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a375e9f91cd08546370ff5825fbe4f4f9d700275" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pref&lt;/var&gt; does not exist in &lt;var&gt;group&lt;/var&gt; and &lt;var&gt;default&lt;/var&gt; is specified, create the preference with value &lt;var&gt;default&lt;/var&gt; and return &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5dd0890f7a3bfea872c1f503df8182e3ff8423" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pref&lt;/var&gt; is not specified, remove the preference group &lt;var&gt;group&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d319f315ef8e241c7a285501799b031d41197cf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pref&lt;/var&gt; is not specified, return true if the preference group &lt;var&gt;group&lt;/var&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab2666f45329e7076ed9b8d10c5a4deac48530f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is omitted, a value of &lt;code&gt;&quot;oct-&quot;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dd3e1d90f7f646f97775aefcdf0c91808a851e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rem&lt;/var&gt; is requested, it contains the remainder of the string, starting at the first delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d36d1b5c817541de6dcc93b26923043f31fb0e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rootdir&lt;/var&gt; is defined then any files without absolute pathnames are located relative to &lt;var&gt;rootdir&lt;/var&gt; rather than the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735236eed77aba7bbdb501ae7cc58f599bf816bc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a cell array of strings, return a column vector with one converted number per cell element in &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a469059951a681bd5cd84b74cffd5e9142c1d80" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a cell array of strings, return a column vector with one value per cell element in &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b8817b10d8299bad7e009617aa319904ed2c21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a cell array of strings, then the operation is performed on each cell element and the new cell array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e462d361bb313606851d366bc25f440e8124e2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a character matrix, then the number of columns is adjusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39821e6463d2233a85bab212dd06acc5fb205edf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a matrix, &lt;var&gt;deblank&lt;/var&gt; trims each row to the length of longest string. If &lt;var&gt;s&lt;/var&gt; is a cell array of strings, operate recursively on each string element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9a9c219ebef565a53e71481a765874c6d449be" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a matrix, &lt;var&gt;strtrim&lt;/var&gt; trims each row to the length of longest string. If &lt;var&gt;s&lt;/var&gt; is a cell array of strings, operate recursively on each string element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534f39492a8fa844095f6b27b5b391027084a01d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a string matrix, return a column vector with one converted number per row of &lt;var&gt;s&lt;/var&gt;; Invalid rows evaluate to NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad268ed0466d056ac6a56b8acc6114af4e1a7f3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a string matrix, return a column vector with one value per row of &lt;var&gt;s&lt;/var&gt;. If a row contains invalid symbols then the corresponding value will be NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a6700905e0c1794bb4f7f97ea407329d0683b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is a structure array then &lt;var&gt;sidx&lt;/var&gt; selects an element of the structure array, &lt;var&gt;field&lt;/var&gt; specifies the field name of the selected element, and &lt;var&gt;fidx&lt;/var&gt; selects which element of the field (in the case of an array or cell array). See &lt;code&gt;setfield&lt;/code&gt; for a more complete description of the syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb10c24e26a1a8057f3450dae82eb1e91be3d6eb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;s&lt;/var&gt; is symmetric, then &lt;var&gt;p&lt;/var&gt; is chosen such that &lt;code&gt;&lt;var&gt;s&lt;/var&gt; (&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; orders the rows and columns with increasing number of nonzeros elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc74a897eb401641f80aca81d085a46e52bff4c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sense&lt;/var&gt; is 1, the problem is a minimization. If &lt;var&gt;sense&lt;/var&gt; is -1, the problem is a maximization. The default value is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fb04085959f1399b8be7dde5b8ff05c0e8a2a5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sep&lt;/var&gt; is not defined the separator between fields is determined from the file itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07ac09167a61338554d611aca97b78319268a9e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sig&lt;/var&gt; is 0, then no signal is sent, but error checking is still performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9967b4e872e595d59f33651576903110540eaf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;size&lt;/var&gt; is omitted, a value of &lt;code&gt;Inf&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8728c5926961efd3bafa0e50030b25fe69d17a56" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;str&lt;/var&gt; is a cell array, &lt;code&gt;isstrpop&lt;/code&gt; is applied recursively to each element of the cell array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597fb6ba4f6af0d95700bae3abb790e073be5c1f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; begins with a tilde character, (&amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db92451fac2b29eac984c4af7ab0b51c2d5d4fc5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;system&lt;/var&gt; is called with one or more output arguments, or if the optional argument &lt;var&gt;return_output&lt;/var&gt; is true and the subprocess is started synchronously, then the output from the command is returned as a variable. Otherwise, if the subprocess is executed synchronously, its output is sent to the standard output. To send the output of a command executed with &lt;code&gt;system&lt;/code&gt; through the pager, use a command like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df564211abdef3ea9e7efdae15698ef7fc7dea3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;scaledlower&quot;&lt;/code&gt;, then the lower incomplete gamma function is multiplied by &lt;em&gt;gamma(a+1)*exp(x)/(x^a)&lt;/em&gt;. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;scaledupper&quot;&lt;/code&gt;, then the upper incomplete gamma function is multiplied by the same quantity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130952dc2967950258306b8579d474d8f7fb435c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tol&lt;/var&gt; is negative then it is a relative tolerance which will produce an error if &lt;code&gt;abs (&lt;var&gt;observed&lt;/var&gt; - &lt;var&gt;expected&lt;/var&gt;) &amp;gt;
abs (&lt;var&gt;tol&lt;/var&gt; * &lt;var&gt;expected&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81893eaaa673624926b46554facac6918caf4af3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tol&lt;/var&gt; is not scalar its dimensions must agree with those of &lt;var&gt;observed&lt;/var&gt; and &lt;var&gt;expected&lt;/var&gt; and tests are performed on an element-by-element basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d164d8b91c61acc7a97d9e38e85faa7b1ea9e7d2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tol&lt;/var&gt; is omitted, use a tolerance of &lt;code&gt;100 * eps * norm (&lt;var&gt;A&lt;/var&gt;, &quot;fro&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388ae2a3379d8529c46690a342637cb9c4465f6a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tol&lt;/var&gt; is positive then it is an absolute tolerance which will produce an error if &lt;code&gt;abs (&lt;var&gt;observed&lt;/var&gt; - &lt;var&gt;expected&lt;/var&gt;) &amp;gt; abs (&lt;var&gt;tol&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aea81ae2bbf7af2cfe5b7dff8b17ee461d1a0c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;type&lt;/var&gt; is a cell array of strings, return the first parent whose type matches any of the given type strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f3c64abebee81317285e1bd8bb8825a2c916a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;username&lt;/var&gt; and &lt;var&gt;password&lt;/var&gt; are not specified, user &lt;code&gt;&quot;anonymous&quot;&lt;/code&gt; with no password is used. The returned FTP object &lt;var&gt;f&lt;/var&gt; represents the established FTP connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f8c027f2b79e733ba7e9552e99f9d1cd3c1f2c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value1&lt;/var&gt; is a 2-element vector, it must contain horizontal image limits in the form [xfirst, xlast], where xfirst and xlast are the abscissa of the centers of the corner pixels. Otherwise &lt;var&gt;value1&lt;/var&gt; must be a vector and only the first and last elements will be used for xfirst and xlast respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7006cc07b8e31d88654f4b7a844be23f9dabc7a2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value1&lt;/var&gt; is a 2-element vector, it must contain vertical image limits in the form [yfirst, ylast], where yfirst and ylast are the ordinates of the center of the corner pixels. Otherwise &lt;var&gt;value1&lt;/var&gt; must be a vector and only the first and last elements will be used for yfirst and ylast respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108ed5d5f034b83a4a19da492164ec9d1f38b348" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is a string, any character in &lt;var&gt;value&lt;/var&gt; will be used to split the input into words. If &lt;var&gt;value&lt;/var&gt; is a cell array of strings, any string in the array will be used to split the input into words. (default value = any whitespace.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42417b29057ba02a3a34fea7554a760e42cbdf9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is nonzero, treat a series of consecutive delimiters, without whitespace in between, as a single delimiter. Consecutive delimiter series need not be vertically aligned. Without this option, a single delimiter before the end of the line does not cause the line to be considered to end with an empty value, but a single delimiter at the start of a line causes the line to be considered to start with an empty value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4177a6d17121f3c95dbd3abebb58558b7fe47f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; true (1, default), ignore read errors and return normally. If false (0), return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4342c184cc6887f5da10fa6482529eed51a8bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;width&lt;/var&gt; is not specified or is an empty matrix, or less than or equal to zero, the width of the terminal screen is used. Newline characters are used to break the lines in the output string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c1d9752305d6bd43d417480e968eef0ee2be1d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;win&lt;/var&gt; is omitted, the triangle window is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b734594d05ccd70868de26b683cc521fbfdc76" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wisdom&lt;/var&gt; is an empty string, then the wisdom used is cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08070271906279d59c0745dcec5aa921579caf6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;mad&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movmad&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movmad&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641981b3ca891e628cb4177ecc28919557db465f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;max&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movmax&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movmax&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d39a5e295e3c2e1605bddbdea7155e85f67fe67" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;mean&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movmean&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movmean&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5276eab1ce712c7ca425f679800665456b2f46da" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;min&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movmin&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movmin&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed28f8bf9e443eba6c81ab30ffe207691b497c00" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;movmedian&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movmedian&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movmedian&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a42d21f9a44fa8d2630061f7271c6fc9cde7a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;movprod&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movprod&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movprod&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b82646da1123687055cf0f29ae6f343d39cfe4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;movstd&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movstd&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movstd&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ede3ad0690661de0c2c7fbb1d4ccc94a59acc8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;movsum&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movsum&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movsum&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65b9f2a1ea0b1e0cdad8c43b3e866829ad8e855" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;code&gt;var&lt;/code&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movvar&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movvar&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af954fe35a56fa3377f99f893fdc7621acd3b4ae" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is a scalar, the function &lt;var&gt;fcn&lt;/var&gt; is applied to a moving window of length &lt;var&gt;wlen&lt;/var&gt;. When &lt;var&gt;wlen&lt;/var&gt; is an odd number the window is symmetric and includes &lt;code&gt;(&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;/&amp;nbsp;2&lt;/code&gt; elements on either side of the central element. For example, when calculating the output at index 5 with a window length of 3, &lt;code&gt;movfun&lt;/code&gt; uses data elements &lt;code&gt;[4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;. If &lt;var&gt;wlen&lt;/var&gt; is an even number, the window is asymmetric and has &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&lt;/code&gt; elements to the left of the central element and &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;/2&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; elements to the right of the central element. For example, when calculating the output at index 5 with a window length of 4, &lt;code&gt;movfun&lt;/code&gt; uses data elements &lt;code&gt;[3,&amp;nbsp;4,&amp;nbsp;5,&amp;nbsp;6]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3751a1c5dbd7d67f7ed5a2c7cec08c7ba152c2d4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wlen&lt;/var&gt; is an array with two elements &lt;code&gt;[&lt;var&gt;nb&lt;/var&gt;,&amp;nbsp;&lt;var&gt;na&lt;/var&gt;]&lt;/code&gt;, the function is applied to a moving window &lt;code&gt;-&lt;var&gt;nb&lt;/var&gt;:&lt;var&gt;na&lt;/var&gt;&lt;/code&gt;. This window includes &lt;var&gt;nb&lt;/var&gt; number of elements &lt;em&gt;before&lt;/em&gt; the current element and &lt;var&gt;na&lt;/var&gt; number of elements &lt;em&gt;after&lt;/em&gt; the current element. The current element is always included. For example, given &lt;code&gt;&lt;var&gt;wlen&lt;/var&gt;&amp;nbsp;=&amp;nbsp;[3,&amp;nbsp;0]&lt;/code&gt;, the data used to calculate index 5 is &lt;code&gt;[2,&amp;nbsp;3,&amp;nbsp;4,&amp;nbsp;5]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a30ac23e9542d4a6aaf02976b47b77e8e2d1914" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x0&lt;/var&gt; is a single scalar then several nearby and distant values are probed in an attempt to obtain a valid bracketing. If this is not successful, the function fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e927fb3bb7285e3484f3318505d749ef6d1f30" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x1&lt;/var&gt;, &amp;hellip;, &lt;var&gt;xn&lt;/var&gt; are omitted, they are assumed to be &lt;code&gt;x1 = 1 : size (&lt;var&gt;v&lt;/var&gt;, 1)&lt;/code&gt;, etc. If &lt;var&gt;m&lt;/var&gt; is specified, then the interpolation adds a point half way between each of the interpolation points. This process is performed &lt;var&gt;m&lt;/var&gt; times. If only &lt;var&gt;v&lt;/var&gt; is specified, then &lt;var&gt;m&lt;/var&gt; is assumed to be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5ea15606abe71a4e22f16fb020eb65dba36900" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are drawn from independent distributions, &lt;var&gt;rho&lt;/var&gt; has zero mean and variance &lt;code&gt;1 / (N - 1)&lt;/code&gt;, where &lt;em&gt;N&lt;/em&gt; is the length of the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; vectors, and is asymptotically normally distributed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21d991ae421c46233295f93d8acdfc401f183e4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are drawn from independent distributions, Kendall&amp;rsquo;s &lt;var&gt;tau&lt;/var&gt; is asymptotically normal with mean 0 and variance &lt;code&gt;(2 * (2N+5)) / (9 * N * (N-1))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6453310b906819ca585201b1da7fb398623737f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are matrices, calculate the dot products along the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07430aae4302bf7539991b8a70263c6670b487c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are matrices, the cross product is applied along the first dimension with three elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8b7208bd9bf78665db40f95bfd3aba4d60ac9c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are not given they are assumed to be &lt;code&gt;(1:&lt;var&gt;m&lt;/var&gt;, 1:&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; where &lt;code&gt;[&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;] = size (&lt;var&gt;u&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7034f3036627ba20822813645de673974c2f5a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are scalars, a single point is plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620d4351e175b1896a2a0afadd6def7065bf9b28" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are vectors, then a typical vertex is (&lt;var&gt;x&lt;/var&gt;(j), &lt;var&gt;y&lt;/var&gt;(i), &lt;var&gt;z&lt;/var&gt;(i,j)). Thus, columns of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;x&lt;/var&gt; values and rows of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;y&lt;/var&gt; values. If only a single input &lt;var&gt;z&lt;/var&gt; is given then &lt;var&gt;x&lt;/var&gt; is taken to be &lt;code&gt;1:columns (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; and &lt;var&gt;y&lt;/var&gt; is &lt;code&gt;1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979e6bcdcfb3f7721a708323c8e1f4397c27d27b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix then at least two &lt;var&gt;R_j&lt;/var&gt;s must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b628de8cc6f4626d19468817fca1c0fd8256f6a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, &lt;code&gt;detrend (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; does the same for each column in &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877cadd30019791806f9c5026cb7c96b7abbf279" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, &lt;code&gt;diff&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; is the matrix of column differences along the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d4cdb1e1acc06ead4cf6fe8aae5ade52ff477c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, calculate along the first non-singleton dimension. If the third optional argument &lt;var&gt;dim&lt;/var&gt; is given, operate along this dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199de55456ca41e6df145ac5402686262d18510b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, calculate statistics over the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d9dbd3a5b75bf037ffdc835f56b7d7cd894231" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute &lt;code&gt;mad&lt;/code&gt; for each column and return results in a row vector. For a multi-dimensional array, the calculation is done over the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a20e29a5f74021cf63d86014a8431faf56a0ced" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the mean for each column and return them in a row vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40eea14ec531706e798a808df202a00749de2df7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the median value for each column and return them in a row vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4a46bbcb53ca46b78ae80fc6e9f627bfc36b9b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the percentiles for each column and return them in a matrix, such that the i-th row of &lt;var&gt;q&lt;/var&gt; contains the &lt;var&gt;p&lt;/var&gt;(i)th percentiles of each column of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f236311f9981a0be599bd6de405e8b0a235da45" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the quantiles for each column and return them in a matrix, such that the i-th row of &lt;var&gt;q&lt;/var&gt; contains the &lt;var&gt;p&lt;/var&gt;(i)th quantiles of each column of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a41346f78465835905c3597b57faf5023782bd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the standard deviation for each column and return them in a row vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abf685f99c454988415113618ad834f3191aa8b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, compute the variance for each column and return them in a row vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10441ade633b9d2e414ca33a8cab44a8511aec38" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, do the above for each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361f10af8ab8950718e1612cdf31273119fd9be2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, do the above for first non-singleton dimension of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04e21de39a91b2af028d82aa379d6db185d9d88" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, do the same for each column of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f1e7b6f79c83578482254286926ce2d224e888" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, elements are appended or removed from each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dbfc06dbdfdc973338a03f75bd7f789715b753" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, elements are prepended or removed from each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153527dbbea297fe05adc3d8ae07583d22524b61" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, filter each column of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f726b7c0de85ce1704c5c11ca59abc687b28a96" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, or more generally a multi-dimensional array, return the kurtosis along the first non-singleton dimension. If the optional &lt;var&gt;dim&lt;/var&gt; argument is given, operate along this dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a55d3202ab11ad9e0ec4aad85b4d1fb4c3e9a4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, or more generally a multi-dimensional array, return the skewness along the first non-singleton dimension. If the optional &lt;var&gt;dim&lt;/var&gt; argument is given, operate along this dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8855644ec8632f8da47cba6a4b25acea4d5bb963" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, return a row vector containing the mean square of each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254a5521683b980c406b72346757b3cfc1858d8e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, return the row vector containing the &lt;var&gt;p&lt;/var&gt;-th central moment of each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fe5d4e0c1bb5a45983b7f7d9a9de9c8c429b8b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, the parameter is estimated for every column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f475bf4797f2d155a21b41aaed3b048a4481496" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a matrix, the same holds for rows and columns. If &lt;var&gt;x&lt;/var&gt; is an array, then the same holds along each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68324f10cb5016b634bb4f6d2fff923f2bff08b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a scalar or vector then &lt;code&gt;repelem&lt;/code&gt; may be called with just a single repeat instruction &lt;var&gt;R&lt;/var&gt; and &lt;code&gt;repelem&lt;/code&gt; will return a vector with the same orientation as the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75b93b7d1f2664a6450988965d93062ccf98c13" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector and &lt;var&gt;y&lt;/var&gt; is a matrix, then the columns (or rows) of &lt;var&gt;y&lt;/var&gt; are plotted versus &lt;var&gt;x&lt;/var&gt;. (using whichever combination matches, with columns tried first.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2d71040f4e2865fe9b43a4489359852ecc87df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector of &lt;em&gt;N&lt;/em&gt; elements corresponding to &lt;em&gt;N&lt;/em&gt; time samples spaced by &lt;em&gt;dt&lt;/em&gt;, then &lt;code&gt;fftshift (fft (&lt;var&gt;x&lt;/var&gt;))&lt;/code&gt; corresponds to frequencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8455973480bfb3541ae9d6008d0aaef343e30f89" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector of length &lt;em&gt;n&lt;/em&gt;, &lt;code&gt;diff&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; is the vector of first differences &lt;var&gt;x&lt;/var&gt;(2) - &lt;var&gt;x&lt;/var&gt;(1), &amp;hellip;, &lt;var&gt;x&lt;/var&gt;(n) - &lt;var&gt;x&lt;/var&gt;(n-1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e128d0df9a9778eed6aaead4d92e918816cf8f4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector or matrix, the polynomial is evaluated for each of the elements of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90caab715074faf7736a845ac3fdbe817d1dcec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector then &lt;var&gt;x&lt;/var&gt; is resampled with &lt;var&gt;n&lt;/var&gt; points. The data in &lt;var&gt;x&lt;/var&gt; is assumed to be equispaced. If &lt;var&gt;x&lt;/var&gt; is a matrix or an N-dimensional array, the interpolation is performed on each column of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f39f48883f1affe8804bd04ba79654270ed9ab9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, &lt;code&gt;detrend (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; removes the best fit of a polynomial of order &lt;var&gt;p&lt;/var&gt; from the data &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091cbad31bb2df42964b68e0d53d7a7579ada76b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, &lt;code&gt;poly (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; is a vector of the coefficients of the polynomial whose roots are the elements of &lt;var&gt;x&lt;/var&gt;. That is, if &lt;var&gt;c&lt;/var&gt; is a polynomial, then the elements of &lt;code&gt;&lt;var&gt;d&lt;/var&gt; = roots (poly (&lt;var&gt;c&lt;/var&gt;))&lt;/code&gt; are contained in &lt;var&gt;c&lt;/var&gt;. The vectors &lt;var&gt;c&lt;/var&gt; and &lt;var&gt;d&lt;/var&gt; are not identical, however, due to sorting and numerical errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010f5241d288036cd74fb03cb7afd2516954de1e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, perform a circular shift of length &lt;var&gt;b&lt;/var&gt; of the elements of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ac02493a07fe719a27e086eb5ae2d38859753f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, subtract its mean and divide by its standard deviation. If the standard deviation is zero, divide by 1 instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f13c2bac5399ec72eb7f59a0c8d8707ec767628" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, subtract its mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d458c97c0cd46a85b9cc400ec3993df536b676" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, the bounds are calculated over the elements of &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a matrix, the bounds are calculated for each column. For a multi-dimensional array, the bounds are calculated over the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc666e5525bc5415aea93974635624622da9fbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is a vector, the range is calculated over the elements of &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a matrix, the range is calculated over each column of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144447adf86fd5a44ac4bbe5b8ea30b3642dca90" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is an array, &lt;code&gt;nth_element&lt;/code&gt; operates along the dimension defined by &lt;var&gt;dim&lt;/var&gt;, or the first non-singleton dimension if &lt;var&gt;dim&lt;/var&gt; is not given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da35483d275c0316c219f773c3a4da255ce317d5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;ceil (real (&lt;var&gt;x&lt;/var&gt;)) + ceil (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397631b70f17dd7aecbc6f36269eef6e89ab1ce6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;round (real (&lt;var&gt;x&lt;/var&gt;)) + round (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;. If there are two nearest integers, return the one further away from zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a6f2c998dfceff53137a14036505eb4885eca3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;roundb (real (&lt;var&gt;x&lt;/var&gt;)) + roundb (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fdb7009c1b93879db102f3e292727e267b71c8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is negative, a complex result is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2107ec3986fecf016967e735e5e2aa925ad82dc6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is not specified it defaults to the indices of &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdab149589dd00210f8c3c313138cade2f26cc1b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is of a discrete type such as integer or logical, then the case of even &lt;em&gt;N&lt;/em&gt; rounds up (or toward &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642dfd6f562fa1c513b6851b8ba5600e3d680979" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is omitted, a vector containing the row numbers is assumed (&lt;code&gt;1:rows (Y)&lt;/code&gt;). Alternatively, &lt;var&gt;x&lt;/var&gt; can also be a vector with same number of elements as rows of &lt;var&gt;y&lt;/var&gt; in which case the same &lt;var&gt;x&lt;/var&gt; is used for each column of &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56112a1007100e094270768422b40a34f2883ba4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt; are omitted, they are assumed to be &lt;code&gt;x = 1:size (&lt;var&gt;v&lt;/var&gt;, 2)&lt;/code&gt;, &lt;code&gt;y = 1:size (&lt;var&gt;v&lt;/var&gt;, 1)&lt;/code&gt; and &lt;code&gt;z = 1:size (&lt;var&gt;v&lt;/var&gt;, 3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78b2f9820f8e6b2557172d3700ab7e4ad8f9663" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; are not given they are assumed to be &lt;code&gt;(1:&lt;var&gt;m&lt;/var&gt;, 1:&lt;var&gt;n&lt;/var&gt;, 1:&lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; where &lt;code&gt;[&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;] = size (&lt;var&gt;u&lt;/var&gt;)&lt;/code&gt; and &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = max (size (&lt;var&gt;w&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2548a501477211a33256f1487ddd87676e8a80e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;a&lt;/var&gt; are polynomial coefficient vectors, &lt;var&gt;b&lt;/var&gt; will contain the coefficients of the polynomial quotient and &lt;var&gt;r&lt;/var&gt; will be a remainder polynomial of lowest order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4488f993f794335c26a6af9ebabf75c752a53069" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;m&lt;/var&gt; are specified, return the calendar for year &lt;var&gt;y&lt;/var&gt; and month &lt;var&gt;m&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df634a782fc3c7a831413bb8a0326fee27dbdff" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; is a matrix, &lt;var&gt;x&lt;/var&gt; and the error parameters must also be matrices having the same dimensions. The columns of &lt;var&gt;y&lt;/var&gt; are plotted versus the corresponding columns of &lt;var&gt;x&lt;/var&gt; and errorbars are taken from the corresponding columns of the error parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf59f9fc2679ac666c276726902ef80b816f8549" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; is a matrix, then each column of &lt;var&gt;y&lt;/var&gt; is taken to be a separate bar graph plotted on the same graph. By default the columns are plotted side-by-side. This behavior can be changed by the &lt;var&gt;style&lt;/var&gt; argument which can take the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0711486a9cda4235f885100d314757ddb6ff6074" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; is a matrix, then each column of the matrix is plotted as a separate stem graph. In this case &lt;var&gt;x&lt;/var&gt; can either be a vector, the same length as the number of rows in &lt;var&gt;y&lt;/var&gt;, or it can be a matrix of the same size as &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eb0dd431b46ec9ed0fbf6a7a0ddb01a61f71ec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;y&lt;/var&gt; is an array, then the size of &lt;var&gt;y&lt;/var&gt; must have the form &lt;code&gt;[&lt;var&gt;s1&lt;/var&gt;, &lt;var&gt;s2&lt;/var&gt;, &amp;hellip;, &lt;var&gt;sk&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;]&lt;/code&gt; or &lt;code&gt;[&lt;var&gt;s1&lt;/var&gt;, &lt;var&gt;s2&lt;/var&gt;, &amp;hellip;, &lt;var&gt;sk&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt; + 2]&lt;/code&gt;. The array is reshaped internally to a matrix where the leading dimension is given by &lt;code&gt;&lt;var&gt;s1&lt;/var&gt; * &lt;var&gt;s2&lt;/var&gt; * &amp;hellip; * &lt;var&gt;sk&lt;/var&gt;&lt;/code&gt; and each row of this matrix is then treated separately. Note that this is exactly the opposite of &lt;code&gt;interp1&lt;/code&gt; but is done for &lt;small&gt;MATLAB&lt;/small&gt; compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4668c4cae8be399ec5a576bfc24f17d3b35a5fba" translate="yes" xml:space="preserve">
          <source>If Octave crashes immediately with a floating point exception, it is likely that it is failing to initialize the IEEE floating point values for infinity and NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41b33a43216874c206f2dfc77552f521d6ddf5b" translate="yes" xml:space="preserve">
          <source>If Octave does not produce an error message for invalid input, that is a bug. However, you should note that your idea of &amp;ldquo;invalid input&amp;rdquo; might be my idea of &amp;ldquo;an extension&amp;rdquo; or &amp;ldquo;support for traditional practice&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef73781c955e9aa1e33618efd8e4d6a2961bb44d" translate="yes" xml:space="preserve">
          <source>If Octave for some reason exits unexpectedly it will by default save the variables available in the workspace to a file in the current directory. By default this file is named &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3da7685d455d9789fdfa46b33dcb5faa4ce2a15" translate="yes" xml:space="preserve">
          <source>If Octave gets a fatal signal, for any input whatever, that is a bug. Reliable interpreters never crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb01e4bd1e858a2c549377131b8d3f2f5b89069" translate="yes" xml:space="preserve">
          <source>If Octave is compiled with 64-bit indexing, the result is of class int64, otherwise it is of class int32. The maximum array size is slightly smaller than the maximum value allowable for the relevant class as reported by &lt;code&gt;intmax&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b8f74a4f3d1757edc6be3b892684573dbee888" translate="yes" xml:space="preserve">
          <source>If Octave is unable to find a header file because it is installed in a location that is not normally searched by the compiler, you can add the directory to the include search path by specifying (for example) &lt;code&gt;CPPFLAGS=-I/some/nonstandard/directory&lt;/code&gt; as an argument to &lt;code&gt;configure&lt;/code&gt;. Other variables that can be specified this way are &lt;code&gt;CFLAGS&lt;/code&gt;, &lt;code&gt;CXXFLAGS&lt;/code&gt;, &lt;code&gt;FFLAGS&lt;/code&gt;, and &lt;code&gt;LDFLAGS&lt;/code&gt;. Passing them as options to the configure script also records them in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5a80e6370e62116e6f9508218ac5fd1a9f9cc1" translate="yes" xml:space="preserve">
          <source>If Octave produces an error message for valid input, that is a bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d9956d4c02bef8826003732364f585b5608d0a" translate="yes" xml:space="preserve">
          <source>If Octave produces incorrect results, for any input whatever, that is a bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bb8de0af0d622055cdc199dcce3d2d40bd18d6" translate="yes" xml:space="preserve">
          <source>If a cell array of strings &lt;var&gt;cellstr&lt;/var&gt; is specified then &lt;var&gt;idx&lt;/var&gt; is a cell array of vectors, as specified above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f408e9b9cb16b87da84173ef34a4cb8b52187" translate="yes" xml:space="preserve">
          <source>If a current figure does not exist, create one and return its handle. The handle may then be used to examine or set properties of the figure. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14b819fed624ae8074df80e64a0a305e72dc63e" translate="yes" xml:space="preserve">
          <source>If a delimiter is not specified the string is split at whitespace &lt;code&gt;{&quot; &quot;, &quot;\f&quot;, &quot;\n&quot;, &quot;\r&quot;, &quot;\t&quot;, &quot;\v&quot;}&lt;/code&gt;. Otherwise, the delimiter, &lt;var&gt;del&lt;/var&gt; must be a string or cell array of strings. By default, consecutive delimiters in the input string &lt;var&gt;s&lt;/var&gt; are collapsed into one resulting in a single split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9558c1dde3bae6c1abbbaa0c5aaf4fad22f7930" translate="yes" xml:space="preserve">
          <source>If a filename is given instead of an image, the file will be read and shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf56e0c8c458b37215b47245aa0635962929833" translate="yes" xml:space="preserve">
          <source>If a filename is given the file extension is extracted and used as filter. In addition the path is selected as current path and the filename is selected as default file. Example: &lt;code&gt;uiputfile (&quot;myfun.m&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df127eb2463ed9990918eb9687268120f64f2c11" translate="yes" xml:space="preserve">
          <source>If a filename is given then the file extension is extracted and used as filter. In addition, the path is selected as current path and the filename is selected as default file. Example: &lt;code&gt;uigetfile (&quot;myfun.m&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8776737c04d3ae589ee5a249e75401b5b0f6de0a" translate="yes" xml:space="preserve">
          <source>If a final argument &lt;code&gt;&quot;local&quot;&lt;/code&gt; is provided then the warning state will be set temporarily until the end of the current function. Changes to warning states that are set locally affect the current function and all functions called from the current scope. The previous warning state is restored on return from the current function. The &lt;code&gt;&quot;local&quot;&lt;/code&gt; option is ignored if used in the top-level workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b705a5c8e18f2b16e84131ffb9584c6ad9b419e5" translate="yes" xml:space="preserve">
          <source>If a function name &lt;var&gt;func&lt;/var&gt; is specified then only report breakpoints for the named function and its subfunctions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ba9cb6989e84f4e5d8b6ba427f1d9ec6e5f9b6" translate="yes" xml:space="preserve">
          <source>If a matrix or cell array of dates is given, a column vector of date strings is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af6c18561d2befb18f0784ddc2ca7162b53f12a" translate="yes" xml:space="preserve">
          <source>If a package relies on a component, such as another Octave package, that may not be present it may be useful to install a function which informs users what to do when a particular component is missing. The function must be written by the package maintainer and registered with Octave using &lt;code&gt;missing_component_hook&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f67e09f5422a631490b7f7fa67b847c09f489d" translate="yes" xml:space="preserve">
          <source>If a pair of polynomials is given, return the derivative of the product &lt;em&gt;&lt;var&gt;a&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfaa09280e57fcbcdc5eb7279a883ab2ea8ec11" translate="yes" xml:space="preserve">
          <source>If a parent handle &lt;var&gt;hparent&lt;/var&gt; (root, figure, axes, or hggroup) is specified, the copied object will be created as a child of &lt;var&gt;hparent&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b663d0105a7144771b810eb8780f054a84e618" translate="yes" xml:space="preserve">
          <source>If a persistent variable is declared but not initialized to a specific value, it will contain an empty matrix. So, it is also possible to initialize a persistent variable by checking whether it is empty, as the following example illustrates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b721ce9c7540d703729f3e68fe5e4c634c53218" translate="yes" xml:space="preserve">
          <source>If a precision is supplied, it specifies the minimum number of digits to appear; leading zeros are produced if necessary. If you don&amp;rsquo;t specify a precision, the number is printed with as many digits as it needs. If you convert a value of zero with an explicit precision of zero, then no characters at all are produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d643eed87f35fc9fbdc35aa8501bf560ff1a8e" translate="yes" xml:space="preserve">
          <source>If a return argument is requested, the files found are returned in the structure &lt;var&gt;w&lt;/var&gt;. The structure contains the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a24ed19e79afe584e8429c0bc4684104cabbfd" translate="yes" xml:space="preserve">
          <source>If a return value is requested, return a structure array with the fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bf586149e573634fc887654e98cfe47c5ce1c4" translate="yes" xml:space="preserve">
          <source>If a root of some constraint function defines the end of the problem, the input to &lt;small&gt;DASRT&lt;/small&gt; should nevertheless allow integration to a point slightly past that root, so that &lt;small&gt;DASRT&lt;/small&gt; can locate the root by interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72aa62f0fd7f1d931f10d0ce2bdfc0e8e0299ba" translate="yes" xml:space="preserve">
          <source>If a sampling frequency is specified, &lt;var&gt;Fs&lt;/var&gt;, then the output frequencies &lt;var&gt;f&lt;/var&gt; will be in the range [0, &lt;var&gt;Fs&lt;/var&gt;/2] or [0, &lt;var&gt;Fs&lt;/var&gt;/2) for one-sided calculations. For two-sided calculations the range will be [0, &lt;var&gt;Fs&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5bf9f218287a55dc9235f6af44fcf2135f2037" translate="yes" xml:space="preserve">
          <source>If a scalar &lt;var&gt;dim&lt;/var&gt; is given then operate along the specified dimension. In this case &lt;var&gt;n&lt;/var&gt; must be a scalar as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c25b4d33cbcecfcffdd0227b6be47fb6bd020c" translate="yes" xml:space="preserve">
          <source>If a second input &lt;var&gt;y&lt;/var&gt; (of the same size as &lt;var&gt;x&lt;/var&gt;) is given then calculate the correlation coefficients between &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4493c5303b4ef23498ec8f7eac9de54c56ac77" translate="yes" xml:space="preserve">
          <source>If a second interrupt signal is received before reaching the debugging mode, a normal interrupt will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8638c393237100dd49e4c1019f630519ac4e8781" translate="yes" xml:space="preserve">
          <source>If a second output argument is requested then the index into &lt;var&gt;s&lt;/var&gt; of each matching element is also returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10618ed15bbbdb2c3b21a370f21db16647ff26eb" translate="yes" xml:space="preserve">
          <source>If a second struct argument is given, arrange field names in &lt;var&gt;s1&lt;/var&gt; as they appear in &lt;var&gt;s2&lt;/var&gt;. The second argument may also specify the order in a cell array of strings &lt;var&gt;cellstr&lt;/var&gt;. The second argument may also be a permutation vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de396289ca990109f8001c597b0fbc4306b001e6" translate="yes" xml:space="preserve">
          <source>If a single complex argument &lt;var&gt;z&lt;/var&gt; is given, then &lt;code&gt;&lt;var&gt;u&lt;/var&gt; = real (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; and &lt;code&gt;&lt;var&gt;v&lt;/var&gt; = imag (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edba815b79d040372cae9ed556e27d23d15b55b8" translate="yes" xml:space="preserve">
          <source>If a single complex input &lt;var&gt;cplx&lt;/var&gt; is given then the real part is used for &lt;var&gt;theta&lt;/var&gt; and the imaginary part is used for &lt;var&gt;rho&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259d03ced5f1d354ff0d9960401b76c919f4bd55" translate="yes" xml:space="preserve">
          <source>If a single data argument is supplied, it is taken as the set of &lt;var&gt;y&lt;/var&gt; coordinates and the &lt;var&gt;x&lt;/var&gt; coordinates are taken to be the indices of the elements, starting with 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4836b5e8949b26cd9c8c70e2efb552b643079a" translate="yes" xml:space="preserve">
          <source>If a single output argument is requested then the Voronoi diagram will be plotted and a graphics handle &lt;var&gt;h&lt;/var&gt; to the plot is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8321401b601d5b4efa15f6fa4106fd8e3cdac5" translate="yes" xml:space="preserve">
          <source>If a single return argument is requested then &lt;code&gt;pkg&lt;/code&gt; returns a cell array where each element is a structure with information on a single package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6149f7302fab5d423f43da132254802ae149dc4b" translate="yes" xml:space="preserve">
          <source>If a third argument &lt;code&gt;&quot;remove&quot;&lt;/code&gt; is given, the function is cleared and not loaded anymore during the current Octave session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc2be23a42b61268ae853684e831de512516348" translate="yes" xml:space="preserve">
          <source>If a third argument is provided, the histogram is normalized such that the sum of the bars is equal to &lt;var&gt;norm&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a856c3c6c4ab0faf3c2b5524f3ea713bccdbc76" translate="yes" xml:space="preserve">
          <source>If a third string argument &lt;var&gt;target&lt;/var&gt; is given, then it must indicate the path to the local destination directory. &lt;var&gt;target&lt;/var&gt; may be a relative or absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05c92a3e460a5c3c0587b2959d36c0e206218c6" translate="yes" xml:space="preserve">
          <source>If a variable that is not marked as global is loaded from a file when a global symbol with the same name already exists, it is loaded in the global symbol table. Also, if a variable is marked as global in a file and a local symbol exists, the local symbol is moved to the global symbol table and given the value from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8931618c2cb490e21da663e64368d4d4f070bbd1" translate="yes" xml:space="preserve">
          <source>If additional string parameters are given, the resulting path will exclude directories with those names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cede9189320628ced1226a79ecacfe701f4d310" translate="yes" xml:space="preserve">
          <source>If also given a device ID, return true if the device supports playback or recording using those parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b2fa060b16ce796f979fb25822736d535ad311" translate="yes" xml:space="preserve">
          <source>If an additional matrix &lt;var&gt;B&lt;/var&gt; is supplied and two return values are requested, then &lt;code&gt;qr&lt;/code&gt; returns &lt;var&gt;C&lt;/var&gt;, where &lt;code&gt;&lt;var&gt;C&lt;/var&gt; = &lt;var&gt;Q&lt;/var&gt;' * &lt;var&gt;B&lt;/var&gt;&lt;/code&gt;. This allows the least squares approximation of &lt;code&gt;&lt;var&gt;A&lt;/var&gt; \ &lt;var&gt;B&lt;/var&gt;&lt;/code&gt; to be calculated as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e99d935c027dd1536f2b7a57ce51b576bcb6ed" translate="yes" xml:space="preserve">
          <source>If an attribute does not apply (i.e., archive on a Unix system) then the field is set to NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c64b2fbbb2ac246b9300eab7ed23db540bb9d57" translate="yes" xml:space="preserve">
          <source>If an axes graphics handle &lt;var&gt;hax&lt;/var&gt; is supplied then the Voronoi diagram is drawn on the specified axes rather than in a new figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf5fa10dc23beef9ede4bb0c0b0de87a391037" translate="yes" xml:space="preserve">
          <source>If an axes handle &lt;var&gt;hax&lt;/var&gt; is provided after the (&lt;var&gt;rows&lt;/var&gt;, &lt;var&gt;cols&lt;/var&gt;, &lt;var&gt;index&lt;/var&gt;) arguments, the corresponding axes is turned into a subplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a117ce11eeedeac6bb8549aed287623a69d1644" translate="yes" xml:space="preserve">
          <source>If an error condition exists then return a string &lt;var&gt;msg&lt;/var&gt; describing the error. Otherwise, return an empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c427bd16117242ac584b5cf024d8ab8fd1f4b404" translate="yes" xml:space="preserve">
          <source>If an error occurs during the evaluation of &lt;var&gt;try&lt;/var&gt; then the &lt;var&gt;catch&lt;/var&gt; string is evaluated, as the following example shows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d24cf0dd2a078d847ac14fa1a13b8febd36dfa" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;var&gt;errmsg&lt;/var&gt; contains a system-dependent error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ea9f5df930eb79ff3f3352ebc1f570e46b276d" translate="yes" xml:space="preserve">
          <source>If an error occurs, return an empty cell array in &lt;var&gt;files&lt;/var&gt;. If successful, &lt;var&gt;err&lt;/var&gt; is 0 and &lt;var&gt;msg&lt;/var&gt; is an empty string. Otherwise, &lt;var&gt;err&lt;/var&gt; is nonzero and &lt;var&gt;msg&lt;/var&gt; contains a system-dependent error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee180aa68b9fc9cdc982fbb5cb967d5292daf82" translate="yes" xml:space="preserve">
          <source>If an output argument is requested and the first input argument is &lt;code&gt;get&lt;/code&gt; then &lt;code&gt;edit&lt;/code&gt; will return the value of the control field &lt;var&gt;field&lt;/var&gt;. If the control field does not exist, edit will return a structure containing all fields and values. Thus, &lt;code&gt;edit (&quot;get&quot;,
&lt;code&gt;&quot;all&quot;&lt;/code&gt;)&lt;/code&gt; returns a complete control structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889e0264436392902225ada6678f62558cd7062b" translate="yes" xml:space="preserve">
          <source>If an output is requested the grabbed code will be returned as string &lt;var&gt;code_str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dea2921db85a1d678b8d16aee3fcbb0345d1aa6" translate="yes" xml:space="preserve">
          <source>If an output is requested then no plot is made. Instead, return the values &lt;var&gt;nn&lt;/var&gt; (numbers of elements) and &lt;var&gt;xx&lt;/var&gt; (bin centers) such that &lt;code&gt;bar (&lt;var&gt;xx&lt;/var&gt;, &lt;var&gt;nn&lt;/var&gt;)&lt;/code&gt; will plot the histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb2b0b9b3d6db33e4c0cb2a34c36f7bdcecd168" translate="yes" xml:space="preserve">
          <source>If an output value is requested, &lt;code&gt;disp&lt;/code&gt; prints nothing and returns the formatted output in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95093cac8dadecedabf155967861e6b4d0e2a69" translate="yes" xml:space="preserve">
          <source>If any dialogs already exist with the same title, the most recent is reused and all others are closed. The resulting dialog is set &lt;code&gt;&quot;non-modal&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22567c384509bfa7c29ba996ed9688d26d17e500" translate="yes" xml:space="preserve">
          <source>If any element results in a complex return value &lt;code&gt;reallog&lt;/code&gt; aborts and issues an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65fbc88d167b53f9dbb6c3600eafa947e163801" translate="yes" xml:space="preserve">
          <source>If any element results in a complex return value &lt;code&gt;realsqrt&lt;/code&gt; aborts and issues an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b39cfe4fcb5a78d5ca27128320c4afb99dc7d0" translate="yes" xml:space="preserve">
          <source>If any of &lt;var&gt;a&lt;/var&gt;, &lt;var&gt;b&lt;/var&gt;, or &lt;var&gt;waypoints&lt;/var&gt; is complex then the quadrature is treated as a contour integral along a piecewise continuous path defined by the above. In this case the integral is assumed to have no edge singularities. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036a2bc15dc0cdbe64483bb461d73bbb4a20858c" translate="yes" xml:space="preserve">
          <source>If any of the characters cannot be mapped into the codepage &lt;var&gt;codepage&lt;/var&gt;, they are replaced with the appropriate substitution sequence for that codepage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ab04eb00df0e8317e3531a801223bb6e651da4" translate="yes" xml:space="preserve">
          <source>If any of the requested packages is not installed, &lt;code&gt;pkg&lt;/code&gt; returns an error, unless a second output is requested:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd743c2408275ce84799fefa227396c38e84d1e" translate="yes" xml:space="preserve">
          <source>If beta = 0, then no reflection need be applied (zer set to 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b6a24ce33ae315a76268d8cea1ef18efdd22be" translate="yes" xml:space="preserve">
          <source>If both &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;dim&lt;/var&gt; are given they may appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0d8d2290935c868055b4f5d9e33f4819427c7a" translate="yes" xml:space="preserve">
          <source>If both arguments are matrices, the columns of &lt;var&gt;y&lt;/var&gt; are plotted versus the columns of &lt;var&gt;x&lt;/var&gt;. In this case, both matrices must have the same number of rows and columns and no attempt is made to transpose the arguments to make the number of rows match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0871c4a835259ce560aa58428a5a5c4a2394a4" translate="yes" xml:space="preserve">
          <source>If both arguments are vectors, the elements of &lt;var&gt;y&lt;/var&gt; are plotted versus the elements of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b9568b167db581ba26977c5daab59793f0c797" translate="yes" xml:space="preserve">
          <source>If called as a function, return a cell array of defined variable names matching the given patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d098b98464a98249e135968130e8e62cd6955d0d" translate="yes" xml:space="preserve">
          <source>If called with a filename of &lt;code&gt;&quot;-&quot;&lt;/code&gt;, write the output to stdout if nargout is 0, otherwise return the output in a character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca4c05bce2e7e8c08aae9a56796af13788b4299" translate="yes" xml:space="preserve">
          <source>If called with a scalar fourth argument &lt;var&gt;rc&lt;/var&gt;, a random sparse matrix with reciprocal condition number &lt;var&gt;rc&lt;/var&gt; is generated. If &lt;var&gt;rc&lt;/var&gt; is a vector, then it specifies the first singular values of the generated matrix (&lt;code&gt;length (&lt;var&gt;rc&lt;/var&gt;) &amp;lt;= min (&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792fd54a1620c502b3501de163b48548e1c75c39" translate="yes" xml:space="preserve">
          <source>If called with a single argument, the arguments of the generated function are extracted from the function itself. The generated function arguments will then be in alphabetical order. It should be noted that i and j are ignored as arguments due to the ambiguity between their use as a variable or their use as an built-in constant. All arguments followed by a parenthesis are considered to be functions. If no arguments are found, a function taking a single argument named &lt;code&gt;x&lt;/code&gt; will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7715cc139eb64fe62b19eba621b17463e4512d29" translate="yes" xml:space="preserve">
          <source>If called with a single input parameter &lt;var&gt;what&lt;/var&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e24d43247a5d7bad9e9a107f2a9c3fae287f7e" translate="yes" xml:space="preserve">
          <source>If called with a single matrix argument, a random sparse matrix is generated wherever the matrix &lt;var&gt;s&lt;/var&gt; is nonzero in its lower triangular part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c4e0402dedc21a52986a138e70c48af1d95e9c" translate="yes" xml:space="preserve">
          <source>If called with a single matrix argument, a sparse matrix is generated with random values wherever the matrix &lt;var&gt;s&lt;/var&gt; is nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4cf585c1cd1fd3be9221103290b174eae59875" translate="yes" xml:space="preserve">
          <source>If called with a single reference data matrix &lt;var&gt;v&lt;/var&gt; and a refinement value &lt;var&gt;n&lt;/var&gt;, then perform interpolation over a 3-D grid where each original interval has been recursively subdivided &lt;var&gt;n&lt;/var&gt; times. This results in &lt;code&gt;2^&lt;var&gt;n&lt;/var&gt;-1&lt;/code&gt; additional points for every interval in the original grid. If &lt;var&gt;n&lt;/var&gt; is omitted a value of 1 is used. As an example, the interval [0,1] with &lt;code&gt;&lt;var&gt;n&lt;/var&gt;==2&lt;/code&gt; results in a refined interval with points at [0, 1/4, 1/2, 3/4, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0087e12e94428d931932a902f92e860731f67434" translate="yes" xml:space="preserve">
          <source>If called with a single reference data matrix &lt;var&gt;z&lt;/var&gt; and a refinement value &lt;var&gt;n&lt;/var&gt;, then perform interpolation over a grid where each original interval has been recursively subdivided &lt;var&gt;n&lt;/var&gt; times. This results in &lt;code&gt;2^&lt;var&gt;n&lt;/var&gt;-1&lt;/code&gt; additional points for every interval in the original grid. If &lt;var&gt;n&lt;/var&gt; is omitted a value of 1 is used. As an example, the interval [0,1] with &lt;code&gt;&lt;var&gt;n&lt;/var&gt;==2&lt;/code&gt; results in a refined interval with points at [0, 1/4, 1/2, 3/4, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e26980c45c1c9048b936a723528dfcfefaf0cc" translate="yes" xml:space="preserve">
          <source>If called with a sparse matrix, then in general &lt;var&gt;x&lt;/var&gt; will be a full matrix requiring significantly more storage. Avoid forming the inverse of a sparse matrix if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea15e8d190b9927c69123b38144bb9be6d01cf18" translate="yes" xml:space="preserve">
          <source>If called with additional input arguments &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;z&lt;/var&gt; which are three-dimensional arrays of the same size as &lt;var&gt;c&lt;/var&gt; then the color data is taken at those specified points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5f2b70bd1dab643f1919c7a63afe8fb9d164ae" translate="yes" xml:space="preserve">
          <source>If called with additional input arguments &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; that are three-dimensional arrays with the same size as &lt;var&gt;v&lt;/var&gt; or vectors with lengths corresponding to the dimensions of &lt;var&gt;v&lt;/var&gt;, then the volume data is taken at the specified points. If &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, or &lt;var&gt;z&lt;/var&gt; are empty, the grid corresponds to the indices (&lt;code&gt;1:n&lt;/code&gt;) in the respective direction (see &lt;a href=&quot;#XREFmeshgrid&quot;&gt;meshgrid&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd912e2a71ce08f33589633eb7a22fd7c4783c1f" translate="yes" xml:space="preserve">
          <source>If called with additional input arguments &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;, which are 3-dimensional arrays with the same size as &lt;var&gt;val&lt;/var&gt;, then the volume data is taken at these points. Instead of the vertex data &lt;var&gt;vert&lt;/var&gt;, a patch handle &lt;var&gt;hp&lt;/var&gt; can be passed to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14269e7c56a1ff82dd228e83ff6ee6bceae454d8" translate="yes" xml:space="preserve">
          <source>If called with an argument, don&amp;rsquo;t wait for a keypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b031e81de6c0fef3606e4756ced4aa6f39c14bfe" translate="yes" xml:space="preserve">
          <source>If called with an argument, the preferences directory is created if it doesn&amp;rsquo;t already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8ef9b514713d36401ad5052f08e84a52da9ae2" translate="yes" xml:space="preserve">
          <source>If called with an input structure &lt;var&gt;oldstruct&lt;/var&gt; then overwrite the values of the options &lt;var&gt;&quot;field1&quot;&lt;/var&gt;, &lt;var&gt;&quot;field2&quot;&lt;/var&gt;, &amp;hellip; with new values &lt;var&gt;value1&lt;/var&gt;, &lt;var&gt;value2&lt;/var&gt;, &amp;hellip; and return the modified structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d48d38ec704c6f9d3f3c3db1ef876b5c3727fb4" translate="yes" xml:space="preserve">
          <source>If called with an integer &lt;var&gt;n&lt;/var&gt;, and no such numbered figure exists, then a new figure with the specified number is created. If the figure already exists then it is made visible and becomes the current figure for plotting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dc6c4f8f19184f008f619c0ef7dc88cefa4ee4" translate="yes" xml:space="preserve">
          <source>If called with an optional third input argument, and &lt;var&gt;field&lt;/var&gt; is not set in the structure &lt;var&gt;ode_opt&lt;/var&gt;, then return the default value &lt;var&gt;default&lt;/var&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d487e936662fece915114e3fc533cab445dd27c4" translate="yes" xml:space="preserve">
          <source>If called with more than one output parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f477f33ba6ff5b99345b8b581b276b8d98fb5be1" translate="yes" xml:space="preserve">
          <source>If called with name-value input argument pairs &lt;var&gt;&quot;field1&quot;&lt;/var&gt;, &lt;var&gt;&quot;value1&quot;&lt;/var&gt;, &lt;var&gt;&quot;field2&quot;&lt;/var&gt;, &lt;var&gt;&quot;value2&quot;&lt;/var&gt;, &amp;hellip; return a new ODE options structure with all the most common option fields initialized, &lt;strong&gt;and&lt;/strong&gt; set the values of the fields &lt;var&gt;&quot;field1&quot;&lt;/var&gt;, &lt;var&gt;&quot;field2&quot;&lt;/var&gt;, &amp;hellip; to the values &lt;var&gt;value1&lt;/var&gt;, &lt;var&gt;value2&lt;/var&gt;, &amp;hellip;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32409ef3d1455f7ce77bb1c3077b93f80727c9ce" translate="yes" xml:space="preserve">
          <source>If called with no inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8716a566b5e2109ff1e4dd896b8cc43567bd96d8" translate="yes" xml:space="preserve">
          <source>If called with no output argument, the end-caps are drawn directly in the current figure with the &lt;code&gt;patch&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d977a3c69b88483ccf940d6c8300e2fb8f18fe0" translate="yes" xml:space="preserve">
          <source>If called with no output argument, the isosurface geometry is directly plotted with the &lt;code&gt;patch&lt;/code&gt; command and a light object is added to the axes if not yet present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765f47c2475c5aebfdcbe2836ca530f24e066339" translate="yes" xml:space="preserve">
          <source>If called with one argument, compute &lt;code&gt;corr (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, the correlation between the columns of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf345453316da0eb169dedd9fbcd51a36cd2d3a" translate="yes" xml:space="preserve">
          <source>If called with one argument, compute &lt;code&gt;cov (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, the covariance between the columns of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c60aa843924326b86638483511fdd5d3217999c" translate="yes" xml:space="preserve">
          <source>If called with one input and two output arguments, &lt;code&gt;max&lt;/code&gt; also returns the first index of the maximum value(s). Thus,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5121d43bda3c450bf5eef08223a0e3ae3435009f" translate="yes" xml:space="preserve">
          <source>If called with one input and two output arguments, &lt;code&gt;min&lt;/code&gt; also returns the first index of the minimum value(s). Thus,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94a3b5aaad4229ba13609112cbd10ed5fa06eef" translate="yes" xml:space="preserve">
          <source>If called with one or two output arguments, and no inputs, return the current format and format spacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5322a144631a0a8aef6370c55bd638c75332e0" translate="yes" xml:space="preserve">
          <source>If called with one output argument &lt;var&gt;vn&lt;/var&gt;, and the second input argument &lt;var&gt;vert&lt;/var&gt; holds the vertices of an isosurface, then the normals &lt;var&gt;vn&lt;/var&gt; are calculated at the vertices &lt;var&gt;vert&lt;/var&gt; on a grid given by &lt;code&gt;[x, y, z] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt;. The output argument &lt;var&gt;vn&lt;/var&gt; has the same size as &lt;var&gt;vert&lt;/var&gt; and can be used to set the &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; property of the corresponding patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d530adcedd6e02ddd290f5b1d70af8ecd8f992" translate="yes" xml:space="preserve">
          <source>If called with one output argument, &lt;code&gt;tic&lt;/code&gt; creates a new timer instance and returns a timer identifier &lt;var&gt;id&lt;/var&gt;. The &lt;var&gt;id&lt;/var&gt; is a scalar of type &lt;code&gt;uint64&lt;/code&gt; that may be passed to &lt;code&gt;toc&lt;/code&gt; to check elapsed time on this timer, rather than the default internal timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a006f4fa11eb5240550ded627d74f02780cb6d" translate="yes" xml:space="preserve">
          <source>If called with one output argument, and the first input argument &lt;var&gt;c&lt;/var&gt; is a three-dimensional array that contains indexed color values, and the second input argument &lt;var&gt;v&lt;/var&gt; are the vertices of an isosurface geometry, then return a matrix &lt;var&gt;cdat&lt;/var&gt; with color data information for the geometry at computed points &lt;code&gt;[x, y, z] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt;. The output argument &lt;var&gt;cdat&lt;/var&gt; can be used to manually set the &lt;code&gt;&quot;FaceVertexCData&quot;&lt;/code&gt; property of an isosurface patch object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48cb66f3809a63ce28d09b10a28b26caa576d0b" translate="yes" xml:space="preserve">
          <source>If called with one output argument, return a structure with fields &lt;code&gt;&quot;faces&quot;&lt;/code&gt;, &lt;code&gt;&quot;vertices&quot;&lt;/code&gt;, and &lt;code&gt;&quot;facevertexcdata&quot;&lt;/code&gt; containing the data after shrinking. This structure can be used directly as an input argument to the &lt;code&gt;patch&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591a8ef33345b7af3d00b8111a623cd05bf84198" translate="yes" xml:space="preserve">
          <source>If called with one output argument, the reduced faces and vertices are returned in a structure &lt;var&gt;reduced_fv&lt;/var&gt; with the fields &lt;code&gt;faces&lt;/code&gt; and &lt;code&gt;vertices&lt;/code&gt; (see the one output option of &lt;code&gt;isosurface&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e14f21446b8771d9ecc67cb999ec42d76be9a2c" translate="yes" xml:space="preserve">
          <source>If called with only &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs then any unspecified properties use their default values as specified on the root object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e129d1074032059ccdfb5b65bd5460cd3205150" translate="yes" xml:space="preserve">
          <source>If called with the optional argument &lt;var&gt;fcn&lt;/var&gt;&amp;mdash;a function name or handle&amp;mdash;return the declared number of arguments that the function can accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd7d55f54733e2a0ea5046b60ca052f026ddaf7" translate="yes" xml:space="preserve">
          <source>If called with the optional argument &lt;var&gt;fcn&lt;/var&gt;&amp;mdash;a function name or handle&amp;mdash;return the number of declared output values that the function can produce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2457fa9ba62916ce2a4a7508f0c7d4e0830889d" translate="yes" xml:space="preserve">
          <source>If called with the optional argument &lt;var&gt;query&lt;/var&gt;, modify how processors are counted as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73677166b19adbb0eb7c1965babf032d8963c600" translate="yes" xml:space="preserve">
          <source>If called with three arguments, &lt;var&gt;dim&lt;/var&gt; is an integer specifying the dimension of the matrix along which the FFT is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef48eea4b6076b7164a836974fd6936782d652d" translate="yes" xml:space="preserve">
          <source>If called with three arguments, &lt;var&gt;dim&lt;/var&gt; is an integer specifying the dimension of the matrix along which the inverse FFT is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af613ce3a3c365203fc00b7d505501e8fa3a3b79" translate="yes" xml:space="preserve">
          <source>If called with three output arguments matrix &lt;var&gt;A&lt;/var&gt; must be sparse and a sparsity preserving row/column permutation is applied to matrix &lt;var&gt;A&lt;/var&gt; prior to the factorization. That is &lt;var&gt;R&lt;/var&gt; is the factorization of &lt;code&gt;&lt;var&gt;A&lt;/var&gt;(&lt;var&gt;Q&lt;/var&gt;,&lt;var&gt;Q&lt;/var&gt;)&lt;/code&gt; such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9575d1e01819bae1914b392e0263b65df16d568" translate="yes" xml:space="preserve">
          <source>If called with two arguments, &lt;var&gt;n&lt;/var&gt; is expected to be an integer specifying the number of elements of &lt;var&gt;x&lt;/var&gt; to use, or an empty matrix to specify that its value should be ignored. If &lt;var&gt;n&lt;/var&gt; is larger than the dimension along which the FFT is calculated, then &lt;var&gt;x&lt;/var&gt; is resized and padded with zeros. Otherwise, if &lt;var&gt;n&lt;/var&gt; is smaller than the dimension along which the FFT is calculated, then &lt;var&gt;x&lt;/var&gt; is truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a97f3358e524c18670c9058e3923da0ca2b4558" translate="yes" xml:space="preserve">
          <source>If called with two arguments, &lt;var&gt;n&lt;/var&gt; is expected to be an integer specifying the number of elements of &lt;var&gt;x&lt;/var&gt; to use, or an empty matrix to specify that its value should be ignored. If &lt;var&gt;n&lt;/var&gt; is larger than the dimension along which the inverse FFT is calculated, then &lt;var&gt;x&lt;/var&gt; is resized and padded with zeros. Otherwise, if &lt;var&gt;n&lt;/var&gt; is smaller than the dimension along which the inverse FFT is calculated, then &lt;var&gt;x&lt;/var&gt; is truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa2e975d5748137211bdc8e1b8d4ff14009db37" translate="yes" xml:space="preserve">
          <source>If called with two arguments, return the piecewise polynomial &lt;var&gt;pp&lt;/var&gt; that may be used with &lt;code&gt;ppval&lt;/code&gt; to evaluate the polynomial at specific points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee298d9beda2b35adb1820fe9379784dff787fd4" translate="yes" xml:space="preserve">
          <source>If called with two arguments, the return value will be true only if &lt;var&gt;code&lt;/var&gt; fails with an error message containing &lt;var&gt;pattern&lt;/var&gt; (case sensitive). If the code fails with a different error than the one specified in &lt;var&gt;pattern&lt;/var&gt; then the message produced is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9eeeb3ca1455d3623dd8ad8a80308a55108b84" translate="yes" xml:space="preserve">
          <source>If called with two input arguments and the first input argument &lt;var&gt;ode_opt&lt;/var&gt; is an ODE option structure and the second input argument &lt;var&gt;field&lt;/var&gt; is a string specifying an option name, then return the option value &lt;var&gt;val&lt;/var&gt; corresponding to &lt;var&gt;field&lt;/var&gt; from &lt;var&gt;ode_opt&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c3b460e0b06bcb76e09836180eb8df5d71afd3" translate="yes" xml:space="preserve">
          <source>If called with two or three output arguments, return the information about the faces &lt;var&gt;f&lt;/var&gt;, vertices &lt;var&gt;v&lt;/var&gt;, and color data &lt;var&gt;c&lt;/var&gt; as separate arrays instead of a single structure array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc0e19eafa8675b29fdc96972f66c9bbeb1efe9" translate="yes" xml:space="preserve">
          <source>If called with two or three output arguments, the data for faces &lt;var&gt;faces&lt;/var&gt;, vertices &lt;var&gt;vertices&lt;/var&gt;, and the color data &lt;var&gt;facevertexcdata&lt;/var&gt; are returned in separate arrays instead of a single structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e091b8300b2c43d6a29e7bd46dd2b00e7f8f38c7" translate="yes" xml:space="preserve">
          <source>If called with two output arguments the index of the maximum value is also returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e634db5d2dcae207543360af2dcf305af3ac1b39" translate="yes" xml:space="preserve">
          <source>If called with two output arguments the index of the minimum value is also returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bfffb3f610f0857ef0b5e3b2ca84a53fcf25f7" translate="yes" xml:space="preserve">
          <source>If called with two output arguments, split &lt;var&gt;x&lt;/var&gt; into binary mantissa and exponent so that &lt;code&gt;1/2&amp;nbsp;&amp;lt;=&amp;nbsp;abs(f)&amp;nbsp;&amp;lt;&amp;nbsp;1&lt;/code&gt; and &lt;var&gt;e&lt;/var&gt; is an integer. If &lt;code&gt;x&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;, &lt;code&gt;f&amp;nbsp;=&amp;nbsp;e&amp;nbsp;=&amp;nbsp;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d296d49f40e41a908e69185c11df3af55eaece4c" translate="yes" xml:space="preserve">
          <source>If called with two output arguments, the reduced faces and vertices are returned in two separate matrices &lt;var&gt;reduced_faces&lt;/var&gt; and &lt;var&gt;reduced_vertices&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ab98d007f8f86725498f5ab3b977107c19fc75" translate="yes" xml:space="preserve">
          <source>If called without &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;, and just a single reference data matrix &lt;var&gt;v&lt;/var&gt;, the 3-D region &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;v&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;v&lt;/var&gt;),
&lt;var&gt;z&lt;/var&gt; = 1:size (&lt;var&gt;v&lt;/var&gt;, 3)&lt;/code&gt; is assumed. This saves memory if the grid is regular and the distance between points is not important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671c386e6fe78465a0702ebb057c382fd7991a4c" translate="yes" xml:space="preserve">
          <source>If called without &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and just a single reference data matrix &lt;var&gt;z&lt;/var&gt;, the 2-D region &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; is assumed. This saves memory if the grid is regular and the distance between points is not important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09fb61f460d6e329d38acee8f4fb192b20a24f7" translate="yes" xml:space="preserve">
          <source>If called without input argument, the first return value &lt;var&gt;v&lt;/var&gt; gives the version number of Octave as a string. The second return value &lt;var&gt;d&lt;/var&gt; holds the release date as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a918ec90e65aedfe605948eb92ae70a1e1c8139" translate="yes" xml:space="preserve">
          <source>If each row of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; is an observation and each column is a variable, then the (&lt;var&gt;i&lt;/var&gt;, &lt;var&gt;j&lt;/var&gt;)-th entry of &lt;code&gt;corr (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is the correlation between the &lt;var&gt;i&lt;/var&gt;-th variable in &lt;var&gt;x&lt;/var&gt; and the &lt;var&gt;j&lt;/var&gt;-th variable in &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7939645a5965c668dc9425640c826d8fe52e31" translate="yes" xml:space="preserve">
          <source>If each row of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; is an observation, and each column is a variable, then the (&lt;var&gt;i&lt;/var&gt;, &lt;var&gt;j&lt;/var&gt;)-th entry of &lt;code&gt;cov (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is the covariance between the &lt;var&gt;i&lt;/var&gt;-th variable in &lt;var&gt;x&lt;/var&gt; and the &lt;var&gt;j&lt;/var&gt;-th variable in &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56b0c7b3051cddfbf7a492d6957b055cbf53da4" translate="yes" xml:space="preserve">
          <source>If either &lt;var&gt;s1&lt;/var&gt; or &lt;var&gt;s2&lt;/var&gt; is a cell array of strings, then an array of the same size is returned, containing the values described above for every member of the cell array. The other argument may also be a cell array of strings (of the same size or with only one element), char matrix or character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198b181d0ff3dfd2fc01f759e1b80d88085d7a5d" translate="yes" xml:space="preserve">
          <source>If executing a script from the command line (e.g., &lt;code&gt;octave foo.m&lt;/code&gt;) or using an executable Octave script, the program name is set to the name of the script. See &lt;a href=&quot;executable-octave-programs#Executable-Octave-Programs&quot;&gt;Executable Octave Programs&lt;/a&gt;, for an example of how to create an executable Octave script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a155710d0e9d04ad9efbe0cf093ee4b9b817b4aa" translate="yes" xml:space="preserve">
          <source>If execution fails, evaluate the optional string &lt;var&gt;catch&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1909a5264951356fa4d0a48e4f1f3dd6400da47e" translate="yes" xml:space="preserve">
          <source>If fewer &lt;var&gt;R_j&lt;/var&gt; are given than the number of dimensions in &lt;var&gt;x&lt;/var&gt;, &lt;code&gt;repelem&lt;/code&gt; will assume &lt;var&gt;R_j&lt;/var&gt; is 1 for those dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61eaf7628a3ff2964b38ea89e1e391dc172946b1" translate="yes" xml:space="preserve">
          <source>If four output values are requested, compute &lt;code&gt;&lt;var&gt;AA&lt;/var&gt; =
&lt;var&gt;CC&lt;/var&gt;*&lt;var&gt;A&lt;/var&gt;*&lt;var&gt;DD&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;BB&lt;/var&gt; = &lt;var&gt;CC&lt;/var&gt;*&lt;var&gt;B&lt;/var&gt;*&lt;var&gt;DD&lt;/var&gt;&lt;/code&gt;, in which &lt;var&gt;AA&lt;/var&gt; and &lt;var&gt;BB&lt;/var&gt; have nonzero elements of approximately the same magnitude and &lt;var&gt;CC&lt;/var&gt; and &lt;var&gt;DD&lt;/var&gt; are permuted diagonal matrices as in &lt;var&gt;DD&lt;/var&gt; for the algebraic eigenvalue problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3544381296b2fa070205c6e423736e8e8fea774" translate="yes" xml:space="preserve">
          <source>If given the string input argument &lt;code&gt;&quot;noshare&quot;&lt;/code&gt;, vertices may be returned multiple times for different faces. The default behavior is to eliminate vertices shared by adjacent faces with &lt;code&gt;unique&lt;/code&gt; which may be time consuming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3a1330959a79677389ba93aae717c2ec1a0493" translate="yes" xml:space="preserve">
          <source>If given, the parameter &lt;var&gt;string_param1&lt;/var&gt; has value &lt;var&gt;value1&lt;/var&gt;. &lt;var&gt;string_param1&lt;/var&gt; can be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e1146a657d191eda0ca90d09b01cf408584e97" translate="yes" xml:space="preserve">
          <source>If gnuplot is being used to display images it is possible to plot on top of images. Since an image is a matrix it is indexed by row and column values. The plotting system is, however, based on the traditional &lt;em&gt;(x, y)&lt;/em&gt; system. To minimize the difference between the two systems Octave places the origin of the coordinate system in the point corresponding to the pixel at &lt;em&gt;(1, 1)&lt;/em&gt;. So, to plot points given by row and column values on top of an image, one should simply call &lt;code&gt;plot&lt;/code&gt; with the column values as the first argument and the row values as the second. As an example the following code generates an image with random intensities between 0 and 1, and shows the image with red circles over pixels with an intensity above &lt;em&gt;0.99&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e5d98bbd9778a9d5426f6e1111a20477298bbd" translate="yes" xml:space="preserve">
          <source>If instead of knowing properties of variables, you wish to know which variables are defined and to gather other information about the workspace itself, see &lt;a href=&quot;status-of-variables#Status-of-Variables&quot;&gt;Status of Variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e08606ae7a2df7add7116c4e770187d2e056ffa" translate="yes" xml:space="preserve">
          <source>If invoked as &lt;code&gt;arch_fit (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;k&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; with a positive integer &lt;var&gt;k&lt;/var&gt;, fit an ARCH(&lt;var&gt;k&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;) process, i.e., do the above with the &lt;em&gt;t&lt;/em&gt;-th row of &lt;var&gt;x&lt;/var&gt; given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9067f631f185797cdf134b8db68932655637ade3" translate="yes" xml:space="preserve">
          <source>If invoked with a single output argument, Octave returns data instead of inserting variables in the symbol table. If the data file contains only numbers (TAB- or space-delimited columns), a matrix of values is returned. Otherwise, &lt;code&gt;load&lt;/code&gt; returns a structure with members corresponding to the names of the variables in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9309a0c2029b27807d9e03c009c3a4462477fd3a" translate="yes" xml:space="preserve">
          <source>If invoked with a single output argument, the history will be saved to that argument as a cell string and will not be output to screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c3e0d9cd8afa93cee74cad100ce652aaefac96" translate="yes" xml:space="preserve">
          <source>If invoked with a single scalar argument &lt;var&gt;n&lt;/var&gt;, return a square NxN identity matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90b65c992f436aecaba68fbfe1da920eaa8083c" translate="yes" xml:space="preserve">
          <source>If invoked with a single scalar integer argument &lt;var&gt;n&lt;/var&gt;, return a square NxN matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0b69c189394cccc75973e2b6b679196e6387ba" translate="yes" xml:space="preserve">
          <source>If invoked with a single scalar integer argument, return a square NxN cell array. If invoked with two or more scalar integer arguments, or a vector of integer values, return an array with the given dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf5a2063b094d7f9464c75e020d543816560302" translate="yes" xml:space="preserve">
          <source>If invoked with a single scalar integer argument, return a square NxN matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176687ffe03cb9d15ae870bf8f1c3216d5fe0f1d" translate="yes" xml:space="preserve">
          <source>If invoked with a single scalar integer argument, return a square matrix of the specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c560c4e87618d477bf07dd3ba7844097cc230847" translate="yes" xml:space="preserve">
          <source>If invoked with a string argument &lt;code&gt;&quot;on&quot;&lt;/code&gt;, &lt;code&gt;&quot;off&quot;&lt;/code&gt;, or &lt;code&gt;&quot;query&quot;&lt;/code&gt;, the state of the pause function is changed or queried. When the state is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, the pause function returns immediately. The optional return value contains the previous state of the pause function. In the following example pause is disabled locally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd7257ce9cabbc8aa06d61658278c8f98e68cd9" translate="yes" xml:space="preserve">
          <source>If invoked with an output argument, the value is returned instead of printed. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50444e8083c6eabe6e62153f10718d3e7bb4c3c2" translate="yes" xml:space="preserve">
          <source>If invoked with no arguments, &lt;code&gt;history&lt;/code&gt; displays a list of commands that you have executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f095314c765b95e6cbf9d062bb8e88b2fb26a1eb" translate="yes" xml:space="preserve">
          <source>If invoked with two or more scalar integer arguments, or a vector of integer values, return an array with given dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6105974f7b71158c8bd4f41887c58b01e2dae86" translate="yes" xml:space="preserve">
          <source>If invoked with two or more scalar integer arguments, or a vector of integer values, return an array with the given dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919d8365e02cc02e9f647766105d9dc9646a38a7" translate="yes" xml:space="preserve">
          <source>If invoked without an argument, the manual is shown from the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88442f6c42720c9d5bd2e8a01c301578ea072c15" translate="yes" xml:space="preserve">
          <source>If invoked without an input arguments then the program is suspended until a character is typed. If argument &lt;var&gt;n&lt;/var&gt; is a positive real value, it indicates the number of seconds the program shall be suspended, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c11a435c497023dde6769af9a5edfbbf85dd84" translate="yes" xml:space="preserve">
          <source>If invoked without any arguments, &lt;code&gt;help&lt;/code&gt; displays instructions on how to access help from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7024612247026792782c6da77b3b5c82c00593" translate="yes" xml:space="preserve">
          <source>If invoked without arguments, &lt;code&gt;rand&lt;/code&gt; and &lt;code&gt;randn&lt;/code&gt; return a single element of a random sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a543142b9b819b8d6e5cc611e5288027d55584" translate="yes" xml:space="preserve">
          <source>If just a single return value is requested then it is either &lt;var&gt;R&lt;/var&gt;, if &lt;var&gt;A&lt;/var&gt; is sparse, or &lt;var&gt;X&lt;/var&gt;, such that &lt;code&gt;&lt;var&gt;R&lt;/var&gt; = triu (&lt;var&gt;X&lt;/var&gt;)&lt;/code&gt; if &lt;var&gt;A&lt;/var&gt; is full. (Note: unlike most commands, the single return value is not the first return value when multiple values are requested.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260b3d06cdf4a47a01ee6294193e7e32effb19cb" translate="yes" xml:space="preserve">
          <source>If load is invoked using the functional form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41743fbec19fe38ba596a45410b3200c75c3dcd3" translate="yes" xml:space="preserve">
          <source>If logically true &lt;code&gt;quadgk&lt;/code&gt; prints information on the convergence of the quadrature at each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f30b987ebbe3429649b2c43412dfa9a09cfd8e7" translate="yes" xml:space="preserve">
          <source>If more arguments are given, the summation is applied cumulatively from left to right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86dd5142c30dfd44d8c05b6c901bca19f2f3bd3" translate="yes" xml:space="preserve">
          <source>If more than one argument is given then all arguments must be the same size or scalar. In this case the greatest common divisor is calculated for each element individually. All elements must be ordinary or Gaussian (complex) integers. Note that for Gaussian integers, the gcd is only unique up to a phase factor (multiplication by 1, -1, i, or -i), so an arbitrary greatest common divisor among the four possible is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ddd0a41e2292d8a082e5eec01cdb77a39dac01" translate="yes" xml:space="preserve">
          <source>If more than one argument is given, they are interpreted as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f7734bb35302f6aa676bc55054cc00d2e0e723" translate="yes" xml:space="preserve">
          <source>If more than one output arguments are given then the named function must return the number of return values that also are expected, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3c424d4dad25234a79e272a41e172ac960ccc0" translate="yes" xml:space="preserve">
          <source>If more than one output is requested then &lt;code&gt;svds&lt;/code&gt; will return an approximation of the singular value decomposition of &lt;var&gt;A&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12db0abec60b3cd5bafc48686b748098accbe6ab" translate="yes" xml:space="preserve">
          <source>If more than one value is to be printed in a single call, the output functions do not return to the beginning of the format template when moving on from one value to the next. This can lead to confusing output if the number of elements in the matrices are not exact multiples of the number of conversions in the format template. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e19cb422466d0f04b910a96ca893feed501837" translate="yes" xml:space="preserve">
          <source>If more than two arguments are given the xor operation is applied cumulatively from left to right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a25d5f0ce09f84f93af63579e6c73f34fbfff5" translate="yes" xml:space="preserve">
          <source>If neither &lt;var&gt;pref&lt;/var&gt; nor &lt;var&gt;default&lt;/var&gt; are specified, return a structure of preferences for the preference group &lt;var&gt;group&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0be13bbdb08a8b909121381c50b8223ff0d829" translate="yes" xml:space="preserve">
          <source>If neither &lt;var&gt;x&lt;/var&gt; nor &lt;var&gt;a&lt;/var&gt; is scalar then the sizes of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;a&lt;/var&gt; must agree, and &lt;code&gt;gammainc&lt;/code&gt; is applied element-by-element. The elements of &lt;var&gt;a&lt;/var&gt; must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49379a95625f0c9b014cc33e3ed5fe76aa60ad04" translate="yes" xml:space="preserve">
          <source>If neither &lt;var&gt;y&lt;/var&gt; nor &lt;var&gt;a&lt;/var&gt; is scalar then the sizes of &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;a&lt;/var&gt; must agree, and &lt;code&gt;gammaincinv&lt;/code&gt; is applied element-by-element. The variable &lt;var&gt;y&lt;/var&gt; must be in the interval &lt;em&gt;[0,1]&lt;/em&gt; while &lt;var&gt;a&lt;/var&gt; must be real and positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97103140aeb1314a1e69611ee495e4bd67952a8a" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;arch&lt;/var&gt; is given the value used in the call to &lt;code&gt;fopen&lt;/code&gt; which created the file descriptor is used. Otherwise, the value specified with &lt;code&gt;fread&lt;/code&gt; overrides that of &lt;code&gt;fopen&lt;/code&gt; and determines the data format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0205b27590b837f60f4783409ad66238e939c3" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;delimiter&lt;/var&gt; is specified, the elements of &lt;var&gt;cstr&lt;/var&gt; are separated by a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2397928fdbe80b01b0b46b7b003587928f688d" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;value&lt;/var&gt; is specified then the variable will be assigned the null string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bd909b3737a942997192c3c2145920751b59e6" translate="yes" xml:space="preserve">
          <source>If no arguments are specified, a new figure with the next available number is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c61f2683b126928fd533b7206b78d31defdf3db" translate="yes" xml:space="preserve">
          <source>If no arguments are specified, return a structure containing all groups of preferences and their values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51679a95f7eaeb02ecd18481f6b7f67c9e497ee4" translate="yes" xml:space="preserve">
          <source>If no callback is executing, this function returns the empty matrix. The handle returned by this function is the same as the second output argument of &lt;code&gt;gcbo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d972d23b0c27e63fe87380997617cb1ee5d29cf" translate="yes" xml:space="preserve">
          <source>If no callback is executing, this function returns the empty matrix. This handle is obtained from the root object property &lt;code&gt;&quot;CallbackObject&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7284589949a7a092d96477c5fdfa6e92815858" translate="yes" xml:space="preserve">
          <source>If no current axes object exists, create one and return its handle. The handle may then be used to examine or set properties of the axes. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56647d6ae6190211760f3f89bd4302846e82743" translate="yes" xml:space="preserve">
          <source>If no destination &lt;var&gt;f2&lt;/var&gt; is specified then the destination is the present working directory. If &lt;var&gt;f2&lt;/var&gt; is a filename then &lt;var&gt;f1&lt;/var&gt; is renamed to &lt;var&gt;f2&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c52515f8465a885ec477979f8aa13b406fd6db2" translate="yes" xml:space="preserve">
          <source>If no directory is given (or it is the empty matrix), a cache for built-in functions, operators, and keywords is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302a4b2ae1e5b6a1955030ba9f626ad410c464b1" translate="yes" xml:space="preserve">
          <source>If no directory is specified, operate on all directories in Octave&amp;rsquo;s search path for functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42835b3ff37bbd47eecd7a9bce9cf1ffd3d5ab2e" translate="yes" xml:space="preserve">
          <source>If no file is found, return an empty character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef81c3205913df79a9d71f3f0e76c7e082db944a" translate="yes" xml:space="preserve">
          <source>If no function is named then return true if the current function is locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718d8cfb2b6d9e1ca121412aee1374b6e9eeafbf" translate="yes" xml:space="preserve">
          <source>If no function is named then unlock the current function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a3907ffb0bbcbf1e7525029b0ae1698704d9c1" translate="yes" xml:space="preserve">
          <source>If no handle is specified the current figure returned by &lt;code&gt;gcf&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee34ebfe8dd07a03eb9e33be1afcec9572935e1e" translate="yes" xml:space="preserve">
          <source>If no inputs are given, return the current &lt;var&gt;azimuth&lt;/var&gt; and &lt;var&gt;elevation&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2a1d7834735b163872c284112024111934b53a" translate="yes" xml:space="preserve">
          <source>If no match is found, return an empty character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9652d9b652c52d1401eedc120ce17a66042bf6" translate="yes" xml:space="preserve">
          <source>If no mouse click occurred in the target figure, this function returns an empty matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1c62c316ea2fed8221014b9accfa6a685587b0" translate="yes" xml:space="preserve">
          <source>If no output argument is given, the &lt;em&gt;p&lt;/em&gt;-value is displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15de99418a3fe1bbf9e5d644ebb9089b69fb9bc" translate="yes" xml:space="preserve">
          <source>If no output argument is given, the property &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; of the patch associated with the patch handle &lt;var&gt;hp&lt;/var&gt; is changed directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e7e5d863347196aa2d5be2bf51ceb06caa6d44" translate="yes" xml:space="preserve">
          <source>If no output argument is specified and an error occurs, then the error is signaled through Octave&amp;rsquo;s error handling mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5472ae24a514112293750887a96218eb6f734aa4" translate="yes" xml:space="preserve">
          <source>If no output arguments are requested, and no &lt;code&gt;OutputFcn&lt;/code&gt; is specified in &lt;var&gt;ode_opt&lt;/var&gt;, then the &lt;code&gt;OutputFcn&lt;/code&gt; is set to &lt;code&gt;odeplot&lt;/code&gt; and the results of the solver are plotted immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6deb4cc515efe0036185c3c62aa97b4b04796e0" translate="yes" xml:space="preserve">
          <source>If no output arguments are specified, print the calendar on the screen instead of returning a matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5948ef75462b789066e86857d370556a0713eb40" translate="yes" xml:space="preserve">
          <source>If no output is requested, the dynamic and static classpaths are printed to the standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558d2663ee37aa5ebf8d339e7eda493efcce2ca5" translate="yes" xml:space="preserve">
          <source>If no output is specified then the result is written to the current colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efedbd7db135080f20dbc3c1642a1f6ff2ffbd51" translate="yes" xml:space="preserve">
          <source>If no output variable is used the contents are displayed on screen. Otherwise, a cell array of strings is returned, where each element corresponds to the contents of each requested function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834ba56b5729cc98fb599fba50cc02f01a2820b4" translate="yes" xml:space="preserve">
          <source>If no parent is specified, the group is created in the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b420c8abc14f04a7c4908bee43ad7be7e3289c0" translate="yes" xml:space="preserve">
          <source>If no property is specified (&lt;code&gt;&lt;var&gt;slist&lt;/var&gt; = set (&lt;var&gt;h&lt;/var&gt;)&lt;/code&gt;) then a structure &lt;var&gt;slist&lt;/var&gt; is returned where the fieldnames are the properties of the object &lt;var&gt;h&lt;/var&gt; and the fields are the list of possible values for each property. If no output variable is used then the list is formatted and printed to the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0ce994dc49d96003100dfc4ec9f3d4d3825b62" translate="yes" xml:space="preserve">
          <source>If no return arguments are requested, a surface plot with the normal vectors to the surface is plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee225e55fee4b61a033593e1e3a5225c049d715e" translate="yes" xml:space="preserve">
          <source>If no return value is requested the code is saved to a temporary file and opened in the default editor. NOTE: The temporary file must be saved under a new or the code will be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62730b314bcaf85b7a80ecde1f2debf1b50a6869" translate="yes" xml:space="preserve">
          <source>If no size arguments are given then the result matrix is a random ordering of the sample &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cd7c13803ad6045d861c00d74fdb677e0a5cb2" translate="yes" xml:space="preserve">
          <source>If no size arguments are given then the result matrix is the common size of &lt;var&gt;v&lt;/var&gt; and &lt;var&gt;p&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623815be95f77e3079001803d1bbe1b549639cdd" translate="yes" xml:space="preserve">
          <source>If no type is given, and there are multiple possible matches for name, &lt;code&gt;exist&lt;/code&gt; will return a code according to the following priority list: variable, built-in function, oct-file, directory, file, class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c6815e078d9d57467af13e4f05df8d944f00e3" translate="yes" xml:space="preserve">
          <source>If no value is assigned to &lt;var&gt;arg1&lt;/var&gt; by the user, it will have the value &lt;var&gt;val1&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90acca32ce2e92822b4f69e37f68f8b21e3e2e6b" translate="yes" xml:space="preserve">
          <source>If no variables are specified then all variables found in the file will be loaded. As with &lt;code&gt;save&lt;/code&gt;, the list of variables to extract can be full names or use a pattern syntax. The format of the file is automatically detected but may be overridden by supplying the appropriate option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2b812eeaa33fda9f2564d2854c173b09efa6db" translate="yes" xml:space="preserve">
          <source>If no year is specified, &lt;code&gt;is_leap_year&lt;/code&gt; uses the current year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d9ff67df7422b1630d79179b0aed015b3119ee" translate="yes" xml:space="preserve">
          <source>If none of the preceding functions is sufficient there is also the class &lt;code&gt;inputParser&lt;/code&gt; which can perform extremely complex input checking for functions.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
