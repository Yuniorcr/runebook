<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="b9d4288831f66b2ade92578207482f44fd3052d6" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domcdatasection&quot;&gt;DOMCDATASection&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a738d5268abba71a6f4c3d5f6f0e4b6b72f7ea41" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domcomment&quot;&gt;DOMComment&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40106b1a657da71c0450ca182fda520265bbdb3" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domdocumentfragment&quot;&gt;DOMDocumentFragment&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8909e0f81301853e94354db6895cc9532bdbe7f" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domelement&quot;&gt;DOMElement&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb235446257186c77857154974432833eedeca9" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domentityreference&quot;&gt;DOMEntityReference&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ac13c006ea05b0ac06aec19798cedf852c5a06" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domprocessinginstruction&quot;&gt;DOMProcessingInstruction&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f2f795e2c29e723f063261f1496e86beea37ed" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domtext&quot;&gt;DOMText&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d7764e2a96247cbf77e1e3434377551568c5c1" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.limititerator&quot;&gt;LimitIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d2f9ba73d5a07084755deb0321503ff7bdd08a" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; level. It takes on either a bitmask, or named constants. Using named constants is strongly encouraged to ensure compatibility for future versions. As error levels are added, the range of integers increases, so older integer-based error levels will not always behave as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62851171d75057531c4203bcc3aeffb0bccece0" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to exchange with the current array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e48dc81d4efe76333c9740b59755b606ea1a225" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;variable&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ca1de42126522b1cb19e5268d88d6a866f9f9b" translate="yes" xml:space="preserve">
          <source>The new ArrayIterator behavior. It takes on either a bitmask, or named constants. Using named constants is strongly encouraged to ensure compatibility for future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc76e3000a82c5caf2d9aff5bd241a5bd3b65237" translate="yes" xml:space="preserve">
          <source>The new ArrayObject behavior. It takes on either a bitmask, or named constants. Using named constants is strongly encouraged to ensure compatibility for future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf72dd15edb1266ac27ba47b8f48ebca06982617" translate="yes" xml:space="preserve">
          <source>The new RDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e8a134ed22e99d67978b3d46719efc32ca7ea9" translate="yes" xml:space="preserve">
          <source>The new SyncEvent object. An exception is thrown if the event object cannot be created or opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075b54365019033394e734ecb54fabae768b48d8" translate="yes" xml:space="preserve">
          <source>The new SyncMutex object. An exception is thrown if the mutex cannot be created or opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76190273b8de8395c50a5363e48bca3654c3c85e" translate="yes" xml:space="preserve">
          <source>The new SyncReaderWriter object. An exception is thrown if the reader-writer cannot be created or opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26025356642a291b15332c4e133f998555ae9f8d" translate="yes" xml:space="preserve">
          <source>The new SyncSemaphore object. An exception is thrown if the semaphore cannot be created or opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8735a2850f86b151db2ce86848e7e344343ad2" translate="yes" xml:space="preserve">
          <source>The new SyncSharedMemory object. An exception is thrown if the shared memory object cannot be created or opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7093860fa20ffa2b963604550c614aa0b30dd3bb" translate="yes" xml:space="preserve">
          <source>The new array size. This should be a value between &lt;em&gt;0&lt;/em&gt; and &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39a05899439b275fef1f846c9d52c60ef806200" translate="yes" xml:space="preserve">
          <source>The new calendar will represent not only the same instant as the given &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; (subject to precision loss for dates very far into the past or future), but also the same timezone (subject to the caveat that different timezone databases will be used, and therefore the results may differ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6b22dbe4321b113ac8f714280cf8779847388a" translate="yes" xml:space="preserve">
          <source>The new callback for new connections. Ignored if &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1798bcdb89107d881283a3b077363bf0456c4be7" translate="yes" xml:space="preserve">
          <source>The new code to be evaluated when &lt;code&gt;methodname&lt;/code&gt; is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fdbf3986a3efebcbdab64d1b64de29ac584d2b" translate="yes" xml:space="preserve">
          <source>The new current directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3476d24d5ddd7711bb53c1d5708e845185aa90" translate="yes" xml:space="preserve">
          <source>The new endpoint URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e6bc80ce9168bc5ec32c87bcc474f775041053" translate="yes" xml:space="preserve">
          <source>The new file name that replaces &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0389e5dab5f64bb3f966088505aead52f3671c" translate="yes" xml:space="preserve">
          <source>The new height</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9a8c747c2ae015a982457c936874dd4613df2b" translate="yes" xml:space="preserve">
          <source>The new image x resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1eddd55736a0108b08745a3a5350e572030ef8" translate="yes" xml:space="preserve">
          <source>The new image y resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cca43366f4d115a7ae674b3411259deffb6b5e" translate="yes" xml:space="preserve">
          <source>The new iterator to attach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef05510130770853aa2d2712c1301f38c2958296" translate="yes" xml:space="preserve">
          <source>The new mailbox name, see &lt;a href=&quot;function.imap-open&quot;&gt;imap_open()&lt;/a&gt; for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718abf71c4d4eaea21fb33b2d92357dd5621a9fb" translate="yes" xml:space="preserve">
          <source>The new message domain, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to get the current setting without changing it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba66e5dc0569963e53bf4f1b533c258f0d624c9c" translate="yes" xml:space="preserve">
          <source>The new name to give to the renamed method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58cf7d7c684a5b60158d773790ab94233d73cb6" translate="yes" xml:space="preserve">
          <source>The new name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135c1e2801f3efa63873243a7076eb41ba5e5b9b" translate="yes" xml:space="preserve">
          <source>The new node of the same type, which contains all the content at and after the &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e95ee6505c429ec9b21a8973652d4404c522c4" translate="yes" xml:space="preserve">
          <source>The new node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e771f5ef85b15beafa9812e8418585c8e2ca918a" translate="yes" xml:space="preserve">
          <source>The new node. It must be a member of the target document, i.e. created by one of the DOMDocument-&amp;gt;createXXX() methods or imported in the document by &lt;a href=&quot;domdocument.importnode&quot;&gt;DOMDocument::importNode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22c22ea08fd4c507912c8e012461115302daae2" translate="yes" xml:space="preserve">
          <source>The new parent/superior entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea70b8cf42d1d3e742b4763eef011d322371880" translate="yes" xml:space="preserve">
          <source>The new password for this user. May be omitted or empty to have a generated password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d9d3e708c2dc6dbbc607a5935d3a4480695639" translate="yes" xml:space="preserve">
          <source>The new permissions, given as an &lt;em&gt;octal&lt;/em&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7e9d655224b058751519d2377fb9fb19426050" translate="yes" xml:space="preserve">
          <source>The new permissions. E.g. 0644.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00eec09d144121ea120a4065cdeb305e05dc474e" translate="yes" xml:space="preserve">
          <source>The new permissions. E.g. &lt;strong&gt;&lt;code&gt;0644&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3acf2d805598a8b0817425ac8100c71405a427" translate="yes" xml:space="preserve">
          <source>The new pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f98cfe0bcbba9e4a8f8101d084b4c2dcf277a6" translate="yes" xml:space="preserve">
          <source>The new priority value, the value of this may differ on platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfbaba45713540ed62d16855ef7424c0b0e355a" translate="yes" xml:space="preserve">
          <source>The new security preferences. The following constants can be ORed: &lt;strong&gt;&lt;code&gt;XSL_SECPREF_READ_FILE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XSL_SECPREF_WRITE_FILE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XSL_SECPREF_CREATE_DIRECTORY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XSL_SECPREF_READ_NETWORK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XSL_SECPREF_WRITE_NETWORK&lt;/code&gt;&lt;/strong&gt;. Alternatively, &lt;strong&gt;&lt;code&gt;XSL_SECPREF_NONE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;XSL_SECPREF_DEFAULT&lt;/code&gt;&lt;/strong&gt; can be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5ca5d03f6d4c37bb7afe1e27308a68fc2e36fe" translate="yes" xml:space="preserve">
          <source>The new size of the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e00a28c88eac335df2819b2e74e39614f994d9" translate="yes" xml:space="preserve">
          <source>The new size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b9e295dfce8f972e9a274c09adfaeaf53cb73f" translate="yes" xml:space="preserve">
          <source>The new smushed image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fde0057670b21c60814c55675b703bc9f21ae5f" translate="yes" xml:space="preserve">
          <source>The new timezone to be used by this calendar. It can be specified in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44eef46ec7fa3625683a339ca83cfc2948b54731" translate="yes" xml:space="preserve">
          <source>The new title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d02b17b439791337b8be5079184b1abd7a85a5" translate="yes" xml:space="preserve">
          <source>The new umask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90d8c63611ca8f78e4b4cb87812e22f172d2bba" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt;&lt;/strong&gt;. The month sequence is zero-based, i.e., January is represented by 0, February by 1, &amp;hellip;, December is 11 and Undecember (if the calendar has it) is 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c0fb446d1afe65cdff23e8b19e806e79ee1c59" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f267e3504b97d78ef9a49a61d60b3e6ceeb4ea16" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206a439cca8aff83a0dc0bc507cf45f3afbdce2b" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MONTH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6e152e3271260b6b5210f22c250fe33322bd82" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a519fb01e2cfd5a324ea87798d7fafa1c0b0d6" translate="yes" xml:space="preserve">
          <source>The new value for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea751037041cd590202936e0fbad2d283aa764c" translate="yes" xml:space="preserve">
          <source>The new value for the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d87f6533b4756b78017c51c872484da6237f68" translate="yes" xml:space="preserve">
          <source>The new value for the &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d52f4f30570cab156e446a0fa0c54cf5c6ef0" translate="yes" xml:space="preserve">
          <source>The new value for the entry. If a non-string is passed, it will be converted to a string automatically if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a60d24b53d5f607dd94dad2b6781f63cc84945" translate="yes" xml:space="preserve">
          <source>The new value for the option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7632154a3cca720026c5eed914ebc99c19fb5cbb" translate="yes" xml:space="preserve">
          <source>The new value for the servlet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cb4431655aea9c4adaf72d87ab1421c0fe31b7" translate="yes" xml:space="preserve">
          <source>The new value for the specified &lt;code&gt;option&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8631857693eaaa7a3bd82018980b281cfe8d833b" translate="yes" xml:space="preserve">
          <source>The new value of the XSLT parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19a825f43f2ab7c207cfd896186428e8ecead25" translate="yes" xml:space="preserve">
          <source>The new value of the given field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c470fd7fea65b82015d689429f9bae2fc1596c73" translate="yes" xml:space="preserve">
          <source>The new value to set the entry with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c907a077dcaf7934454e48b33f3d2577b3d808" translate="yes" xml:space="preserve">
          <source>The new value to store at the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c1d690227e317d53e596274ea24a8e04f0fbc1" translate="yes" xml:space="preserve">
          <source>The new value to update the entry with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bddb187557b6435c903ab642336217e51d79f64" translate="yes" xml:space="preserve">
          <source>The new value to update to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5846611ef08161b895e9cfae56a1ecdbe7079b9d" translate="yes" xml:space="preserve">
          <source>The new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366bce10a732a38f0c55a52d084aeff59132e9d4" translate="yes" xml:space="preserve">
          <source>The new width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7458136630e25538efd4fb7d0fc61094c600ec55" translate="yes" xml:space="preserve">
          <source>The newline character is never treated in any special way in character classes, whatever the setting of the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; or &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt; options is. A class such as [^a] will always match a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6ba24582480b3bd0da611bf2859ff46e9f285e" translate="yes" xml:space="preserve">
          <source>The next event loop iteration after the given timer expires will complete normally, then exit without blocking for events again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a56d4fcbb12b417d847cf13e2a109744692abf5" translate="yes" xml:space="preserve">
          <source>The next example shows the behavior of &lt;strong&gt;strtr()&lt;/strong&gt; when called with only two arguments. Note the preference of the replacements (&lt;em&gt;&quot;h&quot;&lt;/em&gt; is not picked because there are longer matches) and how replaced text was not searched again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e912d40d864957a142854d170c406757cb0414" translate="yes" xml:space="preserve">
          <source>The node added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d052d1c177f92d6d41708e898042ebd36d1f326f" translate="yes" xml:space="preserve">
          <source>The node at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;a href=&quot;class.domnodelist&quot;&gt;DOMNodeList&lt;/a&gt;, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if that is not a valid index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e31d45b2c08ab8f8b750b7a86c647138017821" translate="yes" xml:space="preserve">
          <source>The node at the &lt;code&gt;index&lt;/code&gt;th position in the map, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if that is not a valid index (greater than or equal to the number of nodes in this map).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc148022144d2430ea72084c9453224851a11928" translate="yes" xml:space="preserve">
          <source>The node immediately following this node. If there is no such node, this returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fa6fc9062ae90d7cb7621d43f848c4d1f5c66b" translate="yes" xml:space="preserve">
          <source>The node immediately preceding this node. If there is no such node, this returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f7d3794855684d24bb75b257bdcd50880085f1" translate="yes" xml:space="preserve">
          <source>The node to be transformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e349152fab713d1906f2232d49a36a8c0040b1" translate="yes" xml:space="preserve">
          <source>The node to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6215ce543867fd662c22f3df942e8e1d24860944" translate="yes" xml:space="preserve">
          <source>The node type for the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076226fbc4a560db421cd29c051ad3d4d4a4ed75" translate="yes" xml:space="preserve">
          <source>The non-centrality parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8874f69c0493a7bd36704b2599be708ccef67ead" translate="yes" xml:space="preserve">
          <source>The normalized string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9a43ccb0fb6e84771083b1f72918d85f571b94" translate="yes" xml:space="preserve">
          <source>The normalized value for hue, described as a fractional arc (between 0 and 1) of the hue circle, where the zero value is red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10905dd884dbba592522c6cb2d92409fa47a2641" translate="yes" xml:space="preserve">
          <source>The normalized value for luminosity, on a scale from black at 0 to white at 1, with the full HS value at 0.5 luminosity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a08fd16cf1cfd601504c944b4bc64f4ef57aff" translate="yes" xml:space="preserve">
          <source>The normalized value for saturation, with 1 as full saturation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a057110f5175dfd0bb3d0049af0d21757f2adabf" translate="yes" xml:space="preserve">
          <source>The null or empty string obtains the &quot;root&quot; locale. The &quot;root&quot; locale is equivalent to &quot;en_US_POSIX&quot; in CLDR. Language tags (and thus locale identifiers) are case insensitive. There exists a canonicalization function to make case match the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a62df7e3714acc50b3b99f4f9904efb6fc01849" translate="yes" xml:space="preserve">
          <source>The nullable option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e7b050bc9de8df363f7bb79175fd1b85dc7a31" translate="yes" xml:space="preserve">
          <source>The number (e.g. item count) to determine the translation for the respective grammatical number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ca542c0de0ae9c6e88854a0f3940d945d8f865" translate="yes" xml:space="preserve">
          <source>The number being checked as a perfect square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff6615ccab700b946a6f3f09e005ad339fc761b" translate="yes" xml:space="preserve">
          <source>The number being checked as a prime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53715c34c8343c837d5e7d42ad5b5c92be35d2cf" translate="yes" xml:space="preserve">
          <source>The number being divided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0ca857417c1f56b16b1605b0196bcd13062969" translate="yes" xml:space="preserve">
          <source>The number being formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8bf2804be78f72f8b6b91ca3240bff1a706b95" translate="yes" xml:space="preserve">
          <source>The number being square rooted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5472bb63af2d401308ff0162c99b0a31d33a07c2" translate="yes" xml:space="preserve">
          <source>The number being subtracted from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3c5cebed7e6b4303d303529c0fb9aac14ac3da" translate="yes" xml:space="preserve">
          <source>The number is formatted according to the locale's international currency format (e.g. for the USA locale: USD 1,234.56).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c1143a2885b882b2260da6ee7db200933511b0" translate="yes" xml:space="preserve">
          <source>The number is formatted according to the locale's national currency format (e.g. for the de_DE locale: EU1.234,56).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8690f345873d1a46327de054bf3f60ea81ef716d" translate="yes" xml:space="preserve">
          <source>The number of &lt;em&gt;PID&lt;/em&gt; watchers per &lt;em&gt;PID&lt;/em&gt; is unlimited. All of them will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bd22a358aad5d131605aa2db1be4a8cda04f23" translate="yes" xml:space="preserve">
          <source>The number of arguments that the SQL aggregate takes. If this parameter is negative, then the SQL aggregate may take any number of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb099e8ff0239154cdb67a1d8fe4e7b2f7f9b1fe" translate="yes" xml:space="preserve">
          <source>The number of arguments that the SQL function takes. If this parameter is &lt;em&gt;-1&lt;/em&gt;, then the SQL function may take any number of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6766ef42723097bb93274f627f2175908eaf1a54" translate="yes" xml:space="preserve">
          <source>The number of attached iterator instances (as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01c955e47d2af798ed87d77b33488bfcd45f330" translate="yes" xml:space="preserve">
          <source>The number of attributes on the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f54bb77c176d13db694ea87988bf49114faba11" translate="yes" xml:space="preserve">
          <source>The number of bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0189beb076ba552dfd26f4154629631d710d5ae5" translate="yes" xml:space="preserve">
          <source>The number of bytes required to be contiguous within the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7971645798f52b24fc51a3d36d55ea9b82e1137d" translate="yes" xml:space="preserve">
          <source>The number of bytes returned to PHP is controlled by the parameter length. If it is set to 0, Long column data is passed through to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764221e910857fe4bfcd862d8d2a19fcdb964565" translate="yes" xml:space="preserve">
          <source>The number of bytes stored contiguously at the front of the buffer. The bytes in a buffer may be stored in multiple separate chunks of memory; the property returns the number of bytes currently stored in the first chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f1678f3ea8af2a37c3bb2a4fdb5e2de5a957b5" translate="yes" xml:space="preserve">
          <source>The number of bytes stored in an event buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290b10f5a3faa91a8d2f4081762398f08d744095" translate="yes" xml:space="preserve">
          <source>The number of bytes that will be sent to the remote host from &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d14aef9c152a08a20b80fe5c19a4d34c19558" translate="yes" xml:space="preserve">
          <source>The number of bytes to allocate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66341ba9cba487bec67f1f3d460cadcc74a040de" translate="yes" xml:space="preserve">
          <source>The number of bytes to buffer. If &lt;code&gt;buffer&lt;/code&gt; is 0 then read operations are unbuffered. This ensures that all reads with &lt;a href=&quot;function.fread&quot;&gt;fread()&lt;/a&gt; are completed before other processes are allowed to read from that input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fad930953df8a31d90c280ac97f5688a604047" translate="yes" xml:space="preserve">
          <source>The number of bytes to buffer. If &lt;code&gt;buffer&lt;/code&gt; is 0 then write operations are unbuffered. This ensures that all writes with &lt;a href=&quot;function.fwrite&quot;&gt;fwrite()&lt;/a&gt; are completed before other processes are allowed to write to that output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f662a7b4748bebc5a474a7a4679e369929f1231" translate="yes" xml:space="preserve">
          <source>The number of bytes to copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f658441a3086f9a69a736d235f4a4e3fcc1e1c81" translate="yes" xml:space="preserve">
          <source>The number of bytes to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f412d21e0798891a7453152377aff0bd1b675e45" translate="yes" xml:space="preserve">
          <source>The number of bytes to read from the handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6b53a411fd99b840b1ad8bf129f7856bd9a074" translate="yes" xml:space="preserve">
          <source>The number of bytes to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c75cb94067bcfb8861acb913fbe2c385c180b0" translate="yes" xml:space="preserve">
          <source>The number of bytes to receive from the &lt;code&gt;socket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d227ae3fb5fdad868ff81c2b0a629780307553" translate="yes" xml:space="preserve">
          <source>The number of bytes to remove from the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917a758225376cf38c58fa8c1aff94b76096ae42" translate="yes" xml:space="preserve">
          <source>The number of bytes to reserve for the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb8d99db1c53193313e82e0028eb02e61152c5c" translate="yes" xml:space="preserve">
          <source>The number of bytes to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c498c1faa49e6af8c557538a68f504885a2bb5b" translate="yes" xml:space="preserve">
          <source>The number of bytes to seek.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22f032b78ce1542b36351a805769ce95f84524a" translate="yes" xml:space="preserve">
          <source>The number of bytes to truncate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04a864a91a77be0227899825eb5fa0bb61608df" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the file, otherwise &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if APC is not enabled, &lt;code&gt;filename&lt;/code&gt; is an invalid file name, &lt;code&gt;filename&lt;/code&gt; can't be opened, the file dump can't be completed (e.g., the hard drive is out of disk space), or an unknown error was encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393735c764cea4a5333c19bac53cb00b2caa863f" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the large object, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d494e291473381b57404faec4a25a79875f927" translate="yes" xml:space="preserve">
          <source>The number of characters at which the string will be wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2603b634074fc29aaeb3febafa94ed9276ce1596" translate="yes" xml:space="preserve">
          <source>The number of characters for fields of character type, the number of bytes for fields of binary type, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; for other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d7e355f42b34a5925fd306ddec1457e48e6eb4" translate="yes" xml:space="preserve">
          <source>The number of characters into a document to look for suitable snippets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4863db96c0a27172233563fb5939180000faf7a1" translate="yes" xml:space="preserve">
          <source>The number of characters to delete. If the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds the length, then all characters to the end of the data are deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8782375cc68127965dee7f1a81d6e3673eeb24da" translate="yes" xml:space="preserve">
          <source>The number of characters to extract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea314cc7fc5454ef592d5cc3d0aeab0ee0b4867" translate="yes" xml:space="preserve">
          <source>The number of characters to replace. If the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds the length, then all characters to the end of the data are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecff1d7cf5b847f2c7cdc9b14ef6a042005834f" translate="yes" xml:space="preserve">
          <source>The number of chooses from the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c13290532da3db356e37d103f7766495ecfaf50" translate="yes" xml:space="preserve">
          <source>The number of colors in image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae58dc613d79204fe30713457f315dbcd2c7b1d" translate="yes" xml:space="preserve">
          <source>The number of colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5f31e9849550fe93d62c40ea9c074880f516c3" translate="yes" xml:space="preserve">
          <source>The number of columns in the scaled image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6210e4f2bb1958667b6158f0910b044b67d65cd9" translate="yes" xml:space="preserve">
          <source>The number of days after March 21st that the Easter Sunday is in the given &lt;code&gt;year&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8401faa9cdbad1f12a6d7a9811a64f9eeb3dea8b" translate="yes" xml:space="preserve">
          <source>The number of decimals used (for integer fields)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7246cb4ab5548d2641eea6667b8ee08081ef02b4" translate="yes" xml:space="preserve">
          <source>The number of decimals used (for numeric fields)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b730399ca0a06a8568de18d60493b4ef67c24865" translate="yes" xml:space="preserve">
          <source>The number of degrees to rotate the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41940506799731b0629c3b0215c7f34eb6b13a4" translate="yes" xml:space="preserve">
          <source>The number of degrees to shear on the x axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b82c7b6915888476d95b391f5f1b699b7f9b9c" translate="yes" xml:space="preserve">
          <source>The number of degrees to shear on the y axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c734458af66119a201192194f294842c8bc45d" translate="yes" xml:space="preserve">
          <source>The number of degrees to shear the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286a1d1f8ff3b6b66f94f0ccf2712f985f90007e" translate="yes" xml:space="preserve">
          <source>The number of dots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972bedda722ccc7a9731a83cfff4b178aa47c374" translate="yes" xml:space="preserve">
          <source>The number of elements in &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceef14daed6afb9505b40a563176b47d1702d386" translate="yes" xml:space="preserve">
          <source>The number of elements in the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a006e9290f5cd855524e604af20c66f123329d81" translate="yes" xml:space="preserve">
          <source>The number of elements in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35598111fa96930a11ed7ac097b28f692b924178" translate="yes" xml:space="preserve">
          <source>The number of elements in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aa267831bb278eef8174fdf40310c452c231cd" translate="yes" xml:space="preserve">
          <source>The number of elements or public properties in the associated &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081b6f3c1fff21278c7bc0758a367de833dedf16" translate="yes" xml:space="preserve">
          <source>The number of entries by page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3900e71f9f3f58f27de0596d37c39b6741d3e5" translate="yes" xml:space="preserve">
          <source>The number of errors are returned as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf335010f0ec06dd685647226fb2c075cbdfa99" translate="yes" xml:space="preserve">
          <source>The number of event priority levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35f13ac0c04607e50b3f62db0f10d049a2b739d" translate="yes" xml:space="preserve">
          <source>The number of failure of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f122768e4aeae617b6c4612a25b1185999766e98" translate="yes" xml:space="preserve">
          <source>The number of failure samples of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eac470bf428964f6ade40656710c0fbfe5275f4" translate="yes" xml:space="preserve">
          <source>The number of fields (columns) in the result. On error, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92e449eb00a47cad2310d600409be88981bbf83" translate="yes" xml:space="preserve">
          <source>The number of fields from a result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb16559dccbf30ece01f347e37f019efbd90ca48" translate="yes" xml:space="preserve">
          <source>The number of files contained within this phar, or &lt;em&gt;0&lt;/em&gt; (the number zero) if none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f537fc87f2f6ec8441bcd6a1d971b25428e456ea" translate="yes" xml:space="preserve">
          <source>The number of hits on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f2bfda0c84bd259fa4a6c5bdf9a59b135ecf8f" translate="yes" xml:space="preserve">
          <source>The number of in-between images to generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9e87ca2316c4de51066452488c0d2feff90d9d" translate="yes" xml:space="preserve">
          <source>The number of internal iterations to perform for the derivation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b0c74b30d1c92688134525e6f05c7a34ea2639" translate="yes" xml:space="preserve">
          <source>The number of items to fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811a96361e067793369d6ad15336e03c55b2f4f3" translate="yes" xml:space="preserve">
          <source>The number of iteration to apply the morphology function. A value of -1 means loop until no change found. How this is applied may depend on the morphology method. Typically this is a value of 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bf45718cf11c24974b722587dd7fbf7ec3a86c" translate="yes" xml:space="preserve">
          <source>The number of iterations desired. &lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html#sec5&quot;&gt;&amp;raquo; NIST recommends at least 10,000&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a085633dc95bed4e522d046e75bb8cd77abd8e6c" translate="yes" xml:space="preserve">
          <source>The number of iterations the image should loop over. Set to '0' to loop continuously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c04db2824b180d0ae63e05a730a52080ffb8c3" translate="yes" xml:space="preserve">
          <source>The number of key-value pairs to ignore when using cdb databases. This value is ignored for all other databases which do not support multiple keys with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1729d63232c658eb7ed94833dd6164a749871e" translate="yes" xml:space="preserve">
          <source>The number of matching characters is calculated by finding the longest first common substring, and then doing this for the prefixes and the suffixes, recursively. The lengths of all found common substrings are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dbe0e85d839333d1a145d7033084fe9fe1b33d" translate="yes" xml:space="preserve">
          <source>The number of messages waiting to be read from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3665dc354413e4a84a35e6a5d1008ed11f53e804" translate="yes" xml:space="preserve">
          <source>The number of milliseconds into the day at which the weekend begins or ends or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4573382977f7bf2968400e58782c2c8c8396bf4e" translate="yes" xml:space="preserve">
          <source>The number of milliseconds that have passed since the reference date. This number is derived from the system time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbefcc8f9088a18ceac84f84b60b5f4fcc5d6d54" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait for a lock. A value of -1 is infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b29e3c2d21a4d3fa162af3d892bc612daca8555" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait for the event to be fired. A value of -1 is infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae660fc0a2be32686547456df91c74622c62a19" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait for the exclusive lock. A value of -1 is infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045ff15f97b738fde574e330293ed36418b7017a" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait for the semaphore. A value of -1 is infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a24b563a935fc538602cd788b80265cd4ef371" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait while trying to connect. Use 0 to wait indefinitely. If libcurl is built to use the standard system name resolver, that portion of the connect will still use full-second resolution for timeouts with a minimum timeout allowed of one second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b247c3a830159e52bfc62b3a925f3acd6f96c49" translate="yes" xml:space="preserve">
          <source>The number of minimal days to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe30817e94e4487d6d6c8be3c575f09f61be1b9" translate="yes" xml:space="preserve">
          <source>The number of nodes in the list. The range of valid child node indices is 0 to &lt;em&gt;length - 1&lt;/em&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab68de321eabd2d5ab0eadec2602a00430f361" translate="yes" xml:space="preserve">
          <source>The number of nodes in the map. The range of valid child node indices is &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;length - 1&lt;/em&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59e0a6fa39f67ba75e731b3d566b0899824554" translate="yes" xml:space="preserve">
          <source>The number of objects in the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971a622c5936a9bd34150cb59304008442b50a07" translate="yes" xml:space="preserve">
          <source>The number of parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448704f4ac350b5e944db96d933656be9301bc95" translate="yes" xml:space="preserve">
          <source>The number of parent directories to go up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b8ccfbfced1e6378e1b1a17d4a9a0df655cba8" translate="yes" xml:space="preserve">
          <source>The number of pending watchers. &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; indicates that there are no watchers pending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074cf3285bf96b1867238dc3f71f17a985911afc" translate="yes" xml:space="preserve">
          <source>The number of priorities per event base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e2c2627f2ea3af8f53ce5fe9eac07af349e40" translate="yes" xml:space="preserve">
          <source>The number of processes that can acquire the semaphore simultaneously is set to &lt;code&gt;max_acquire&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e0fd8cfed2d2b3af20a22ca08f2daa08021055" translate="yes" xml:space="preserve">
          <source>The number of public properties in the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24ece18fc1ef19c7eff72c4da941a1ec3133c0c" translate="yes" xml:space="preserve">
          <source>The number of read and/or write event watchers per &lt;code&gt;fd&lt;/code&gt; is unlimited. Setting all file descriptors to non-blocking mode is also usually a good idea(but not required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e38772992a2be4ad3db12d378144b4398e9054" translate="yes" xml:space="preserve">
          <source>The number of recurrences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af0ca997e32680b7bd63a66e4d4b54adbd70c2b" translate="yes" xml:space="preserve">
          <source>The number of remaining tasks in the pool to be collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bee2c165011c3e8e3163cbdb4e9456bab67bca" translate="yes" xml:space="preserve">
          <source>The number of remaining tasks on the worker's stack to be collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23fd5357f8943392367c7b58156ca1a92dcdf45" translate="yes" xml:space="preserve">
          <source>The number of required parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba5db0509b985cf8b8a2a9dc833bc5ffd792de8" translate="yes" xml:space="preserve">
          <source>The number of returned directories and files, as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356ed424d23a649f88608b28c5066a8889dd61cc" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the query. If no tuple is affected, it will return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7499403ad492f5e0c8d8e35c06a9f868891824d4" translate="yes" xml:space="preserve">
          <source>The number of rows in the result. On error, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e028adae2eade3459af96468e5a57a716a5ef06" translate="yes" xml:space="preserve">
          <source>The number of rows in the scaled image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de65c8bc11ebf2e14c9dedcaf0e9359abedb059" translate="yes" xml:space="preserve">
          <source>The number of rows to skip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87764ae52881e9c2cd34806c7857f50cc79b457f" translate="yes" xml:space="preserve">
          <source>The number of seconds relative to the start of the &lt;code&gt;minute&lt;/code&gt;. Negative values reference the second in the previous minute. Values greater than 59 reference the appropriate second in the following minute(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5382392f5c1b7268ff07f033e6250e5e148e38c7" translate="yes" xml:space="preserve">
          <source>The number of seconds the transfer speed should be below &lt;strong&gt;&lt;code&gt;CURLOPT_LOW_SPEED_LIMIT&lt;/code&gt;&lt;/strong&gt; before PHP considers the transfer too slow and aborts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb1ac50aa3affb9d0a959bf33512860a9b48572" translate="yes" xml:space="preserve">
          <source>The number of seconds to keep DNS entries in memory. This option is set to 120 (2 minutes) by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fca31d2a54e242362026312599035e381faea3" translate="yes" xml:space="preserve">
          <source>The number of seconds to wait while trying to connect. Use 0 to wait indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e8179535b12e905049ad210212ace9d6d23a48" translate="yes" xml:space="preserve">
          <source>The number of seconds to wait. If &lt;code&gt;seconds&lt;/code&gt; is zero, no new alarm is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d175752fe6d26e0d3f7485a680b0625000ad2bd7" translate="yes" xml:space="preserve">
          <source>The number of similar documents to return for each result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa73d7003a8bda53a1b0eb5b7a52310f4e6a1e4" translate="yes" xml:space="preserve">
          <source>The number of success</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d7aea7e67bf9013d1178a9a89125d401c651fe" translate="yes" xml:space="preserve">
          <source>The number of success samples of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e3ac427dbaa0f79d639d991734befd4a75cc6d" translate="yes" xml:space="preserve">
          <source>The number of success, at which the probability mass is calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b679e9b3b323dfb2b65bf6223a8695179be56ebe" translate="yes" xml:space="preserve">
          <source>The number of the day relative to the end of the previous month. Values 1 to 28, 29, 30 or 31 (depending upon the month) reference the normal days in the relevant month. Values less than 1 (including negative values) reference the days in the previous month, so 0 is the last day of the previous month, -1 is the day before that, etc. Values greater than the number of days in the relevant month reference the appropriate day in the following month(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65550c4827f875c7bb2765fe175ba59551f8f5f" translate="yes" xml:space="preserve">
          <source>The number of the hour relative to the start of the day determined by &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt;. Negative values reference the hour before midnight of the day in question. Values greater than 23 reference the appropriate hour in the following day(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfdc1b9cc89424a44e59f7460463ea2ad1a52d7" translate="yes" xml:space="preserve">
          <source>The number of the minute relative to the start of the &lt;code&gt;hour&lt;/code&gt;. Negative values reference the minute in the previous hour. Values greater than 59 reference the appropriate minute in the following hour(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc1daf6adb164c99dac8b4e2c33b3f22cfcba57" translate="yes" xml:space="preserve">
          <source>The number of the month relative to the end of the previous year. Values 1 to 12 reference the normal calendar months of the year in question. Values less than 1 (including negative values) reference the months in the previous year in reverse order, so 0 is December, -1 is November, etc. Values greater than 12 reference the appropriate month in the following year(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8900d5d7b45d06605780b75fbbc6e8df59f930" translate="yes" xml:space="preserve">
          <source>The number of the signal that caused the child process to stop its execution (only meaningful if &lt;em&gt;stopped&lt;/em&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0000b01b00159643da71561ea2b5c82cdb3886d9" translate="yes" xml:space="preserve">
          <source>The number of the signal that caused the child process to terminate its execution (only meaningful if &lt;em&gt;signaled&lt;/em&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3682fe4b27e6514ef41c9e71467d13db20dc6ae6" translate="yes" xml:space="preserve">
          <source>The number of the success of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a37dc9552b49f54da9ec43f17758dc4c607cdf" translate="yes" xml:space="preserve">
          <source>The number of the year, may be a two or four digit value, with values between 0-69 mapping to 2000-2069 and 70-100 to 1970-2000. On systems where time_t is a 32bit signed integer, as most common today, the valid range for &lt;code&gt;year&lt;/code&gt; is somewhere between 1901 and 2038. However, before PHP 5.1.0 this range was limited from 1970 to 2038 on some systems (e.g. Windows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e55cee373e914a470ddb140508c67918fd8b701" translate="yes" xml:space="preserve">
          <source>The number of tiles per row and page (e.g. 6x4+0+0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad2f08ebaac3f4041ada98d85eaa88b81018302" translate="yes" xml:space="preserve">
          <source>The number of times &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; was entered minus the number of times &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; was exited normally, in other words, the recursion depth. Outside &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; , this number is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; . In a callback, this number is &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; , unless &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; was invoked recursively (or from another thread), in which case it is higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21b7443e42f5528623f19584596f48d61ba20a4" translate="yes" xml:space="preserve">
          <source>The number of times the &lt;code&gt;needle&lt;/code&gt; substring occurs in the &lt;code&gt;haystack&lt;/code&gt;&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc7ff920eb3e9c6aa09f6118512441947aa783" translate="yes" xml:space="preserve">
          <source>The number of times the deque should be rotated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e482ad81d6a85264a7bcdbb45005dc1490be6451" translate="yes" xml:space="preserve">
          <source>The number of times the sequence should be rotated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da122290a026b98f9f6cda0cd8186095628ff74" translate="yes" xml:space="preserve">
          <source>The number of times the vector should be rotated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6053d3e47e4b1798a343a053b0c02faf6fb639d6" translate="yes" xml:space="preserve">
          <source>The number of trials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a2d2f2a57f5ccc36bcba024b83c15319c702be" translate="yes" xml:space="preserve">
          <source>The number of trials of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468768a8063a10829b26c9a087c38cd431a94b41" translate="yes" xml:space="preserve">
          <source>The number of uncompressed bytes to write. If supplied, writing will stop after &lt;code&gt;length&lt;/code&gt; (uncompressed) bytes have been written or the end of &lt;code&gt;string&lt;/code&gt; is reached, whichever comes first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ada1f4288e6107ca23f5209660d675087bd24b2" translate="yes" xml:space="preserve">
          <source>The number of uncompressed characters read from &lt;code&gt;gz&lt;/code&gt; and passed through to the input, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09503e5bd607812c870bf9e2be8fb4fb1368b055" translate="yes" xml:space="preserve">
          <source>The number of values for which capacity should be allocated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ac5d0d7b07387cfc5ff2e84d6890e53dc0d646" translate="yes" xml:space="preserve">
          <source>The number of variables and length of string &lt;code&gt;types&lt;/code&gt; must match the parameters in the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c99078d35cd46fede42a54edd3f507de46e497" translate="yes" xml:space="preserve">
          <source>The number subtracted from &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8966216682d2231e464e3870e5cda59f78093fd" translate="yes" xml:space="preserve">
          <source>The number that &lt;code&gt;a&lt;/code&gt; is being divided by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64ce147cf214a5daa73abac94d5515f55a9b987" translate="yes" xml:space="preserve">
          <source>The number that &lt;code&gt;n&lt;/code&gt; is being divided by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8da88e922ca8c42e90b1e7116243bf395b37127" translate="yes" xml:space="preserve">
          <source>The number to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917784f82c797de463b070da87e094fdc6d31394" translate="yes" xml:space="preserve">
          <source>The number to convert to a character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c59b1e184e9a477de45e457f5c5e9f8cf6d3f0f" translate="yes" xml:space="preserve">
          <source>The number to convert. Any invalid characters in &lt;code&gt;number&lt;/code&gt; are silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc31e1d6d7dafb7e57342f3f6b302486bf669d67" translate="yes" xml:space="preserve">
          <source>The number to scan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2cbbee5d80dde44a0b0f4319556de37dbb4aaf" translate="yes" xml:space="preserve">
          <source>The number, as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9773153985fbd9d5a7086dc9e639f8762495a4" translate="yes" xml:space="preserve">
          <source>The numerator of the precentage completed expressed as a fraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a534feb255b636516993ff89f73a45c38162ff27" translate="yes" xml:space="preserve">
          <source>The numeric currency value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e3d44dfd489547c8e040ccddb95b8c9a37ebaf" translate="yes" xml:space="preserve">
          <source>The numeric precision of this column. Normally &lt;em&gt;0&lt;/em&gt; for types other than floating point decimals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a99d056c2a8ecb3ad8af317fa3316c18e172146" translate="yes" xml:space="preserve">
          <source>The numeric value for the SQL type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f5b49ebf0001ac351277be210f50f896e943ef" translate="yes" xml:space="preserve">
          <source>The numeric value to process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a11d0976045d9eafb944012c1f744ff676aa900" translate="yes" xml:space="preserve">
          <source>The numeric value to round</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6f2473f12f41ff675a9dcfacf4833681918c32" translate="yes" xml:space="preserve">
          <source>The numeric zero-based index of the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621073440c980f447915650b7282567d4ab197be" translate="yes" xml:space="preserve">
          <source>The object being compared to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c5abfa7caa11534098483f5364b1f578358116" translate="yes" xml:space="preserve">
          <source>The object can be made persistent across request for a given PHP session with the &lt;a href=&quot;soapserver.setpersistence&quot;&gt;SoapServer::setPersistence()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bee355748bba3ce7931a65a940254c46623e26" translate="yes" xml:space="preserve">
          <source>The object key currently being iterated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dce07d0e9a63c3ce2947958f200a598b21976cc" translate="yes" xml:space="preserve">
          <source>The object serving as key of the key-value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ffb7f243c399e06f895f9a0359fee6b7a664c9" translate="yes" xml:space="preserve">
          <source>The object to compare the current instance to, which is always an instance of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112972c12d7c64b19c5da3faa54b16cdd7100158" translate="yes" xml:space="preserve">
          <source>The object to handle the requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1ea8a6f552806b18cd066619915f4c3da52745" translate="yes" xml:space="preserve">
          <source>The object to invoke the method on. For static methods, pass &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; to this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3946dc23fd859b1b2e6fa30b922f20438a69754f" translate="yes" xml:space="preserve">
          <source>The object to invoke the method on. In case of static methods, you can pass &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; to this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bed7948438b6147d04f171bf5b575f6cb9a7136" translate="yes" xml:space="preserve">
          <source>The object to reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cc0ec2e3e368d3a3a46f1159212ad5a17616b0" translate="yes" xml:space="preserve">
          <source>The object to which the given anonymous function should be bound, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; for the closure to be unbound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9457179436daf892cb08f14df747ed0ab06f9b4" translate="yes" xml:space="preserve">
          <source>The object where to use the XML parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7f7c7bcc06a641b6e6f1837c16e1c768e5cc41" translate="yes" xml:space="preserve">
          <source>The object whose identifier is to be calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15634a0f78d455a9ff7c58b59847e92852efddcf" translate="yes" xml:space="preserve">
          <source>The octal string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa0cbb0971f94ec243f04bed4069fee72927eed" translate="yes" xml:space="preserve">
          <source>The offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0187c222737c506fbf099b2f05762130830c40b9" translate="yes" xml:space="preserve">
          <source>The offset at which to split, starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60488961a99ea5cd1b25656c7f1c539c57654474" translate="yes" xml:space="preserve">
          <source>The offset being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef3c5a4b139441c491eb2ad6cd55c26c2f59e67" translate="yes" xml:space="preserve">
          <source>The offset from which to start removing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acc9a561d6ceaf97c2b9eddc8f36b74aabc17da" translate="yes" xml:space="preserve">
          <source>The offset from which to start replacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed03862b656997b9d72cf53564d2a8c0b414dfe3" translate="yes" xml:space="preserve">
          <source>The offset into the image colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cd93116b2be16a9d9f1f58dca6ddbd902a4974" translate="yes" xml:space="preserve">
          <source>The offset to assign the value to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83398e5db9c544ee3244a60286bf7de74c5e56ee" translate="yes" xml:space="preserve">
          <source>The offset to begin unpacking from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e69b38a856f259694bd1c56db6b2d1756437bf" translate="yes" xml:space="preserve">
          <source>The offset to get the value from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0261617606257cfe53cab042b4d5bf0dad6b18d" translate="yes" xml:space="preserve">
          <source>The offset to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05af9bd84732ae79915f469f9938d03de06003e0" translate="yes" xml:space="preserve">
          <source>The offset to unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2372af6b3babda98a520c1fb7cf2ad79409cfd8b" translate="yes" xml:space="preserve">
          <source>The offset where the reading starts on the original stream. Negative offsets count from the end of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ef446bbb835ed87b92f418fd2c8f90379b94a" translate="yes" xml:space="preserve">
          <source>The offset where to start counting. If the offset is negative, counting starts from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137b3d9b04b56dd18119777c5197a0e10fea4066" translate="yes" xml:space="preserve">
          <source>The offset where to start to copy data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a782280c94590a0f6e9d9efb9107b32ce69fdfb" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, to resume a transfer from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda118b78ed652f135d644daa8c4aa141dde23bc" translate="yes" xml:space="preserve">
          <source>The offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16701571f5afb6236f8919265b90bdc281354dc6" translate="yes" xml:space="preserve">
          <source>The offset. A negative value can be used to move backwards through the file which is useful when SEEK_END is used as the &lt;code&gt;whence&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a2f4764bbf3288d89fc68778d45526aee1cae7" translate="yes" xml:space="preserve">
          <source>The old endpoint URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d78a5e3bb7e8f1a4a3b1c425c80fc26bd0ebed9" translate="yes" xml:space="preserve">
          <source>The old file/directory name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a3ae6110740fbe1aab0282408936ea9bd6c759" translate="yes" xml:space="preserve">
          <source>The old mailbox name, see &lt;a href=&quot;function.imap-open&quot;&gt;imap_open()&lt;/a&gt; for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e30c8b422a4dea31b54d5de90e57e5d1f9be71" translate="yes" xml:space="preserve">
          <source>The old name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a32816fda3147e3706e04e3d0d7ada24e41ac9d" translate="yes" xml:space="preserve">
          <source>The old node or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7c4d961287d287df7d95c229056cb92f484a20" translate="yes" xml:space="preserve">
          <source>The old node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564ca5e26531d3005ddee6f22508f995314d8f76" translate="yes" xml:space="preserve">
          <source>The old password of this user. May be ommited depending of server configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c15c11ba76b9c9f042ea65d3746a502e57593f7" translate="yes" xml:space="preserve">
          <source>The old syntax with multiple parameters &lt;strong&gt;$conn = pg_connect(&quot;host&quot;, &quot;port&quot;, &quot;options&quot;, &quot;tty&quot;, &quot;dbname&quot;) &lt;/strong&gt; has been deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d12bd02731f5008068ebfcdbd78bf8744124d72" translate="yes" xml:space="preserve">
          <source>The old value (the value currently stored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2501061d70184d87910264381669068fa2b91772" translate="yes" xml:space="preserve">
          <source>The only APCu function that can be called safely by &lt;code&gt;generator&lt;/code&gt; is &lt;strong&gt;apcu_entry()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199a4d00c12eb633f14da5f713207583fe624bd3" translate="yes" xml:space="preserve">
          <source>The only code construct allowed before a namespace declaration is the &lt;em&gt;declare&lt;/em&gt; statement, for defining encoding of a source file. In addition, no non-PHP code may precede a namespace declaration, including extra whitespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb067b7aa1ab1ab6ca3c65b4f92fbeb7904edb3c" translate="yes" xml:space="preserve">
          <source>The only parameter of this method is an array containing exported properties in the form &lt;em&gt;array('property' =&amp;gt; value, ...)&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4a71c1b0c97060edb3abc67b6424fda8f44c15" translate="yes" xml:space="preserve">
          <source>The opacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141792ab6f0365b5aecf0ab503a4b099232a3475" translate="yes" xml:space="preserve">
          <source>The opaque job handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8f8b07f1012c0aeeab63dcfc045e7b3554fe3b" translate="yes" xml:space="preserve">
          <source>The open callback works like a constructor in classes and is executed when the session is being opened. It is the first callback function executed when the session is started automatically or manually with &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt;. Return value is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c77ab01b532766f7bae2264c02c1935dea6917" translate="yes" xml:space="preserve">
          <source>The opened archive's API version. This is not to be confused with the API version that the loaded phar extension will use to create new phars. Each Phar archive has the API version hard-coded into its manifest. See &lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.php&quot;&gt;Phar file format&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd13b61e1690229d9fba4bef1c86c374968cf640" translate="yes" xml:space="preserve">
          <source>The opened file as an &lt;a href=&quot;class.splfileobject&quot;&gt;SplFileObject&lt;/a&gt;&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf616983071ae2ec48e3dfc6ad40e60ab99a118" translate="yes" xml:space="preserve">
          <source>The operand, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950f05d150a93ef46451953956823bb711de7f04" translate="yes" xml:space="preserve">
          <source>The operating system code defined by one of the ZipArchive::OPSYS_ constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8d1ae3f6375fd166ab0bab398795bd4353073d" translate="yes" xml:space="preserve">
          <source>The operation mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d4505875a87579d91e9e55a0c1ff0df36bf101" translate="yes" xml:space="preserve">
          <source>The option name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbe405c5ad414ca49c4f6c5eb4464eeeeb96e3f" translate="yes" xml:space="preserve">
          <source>The option that you want to set. It can be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf704c971dd581cde6792912458b0f2ce9263fc" translate="yes" xml:space="preserve">
          <source>The option to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3627f97946ef253b120bc1c5542a91eb8b49ed" translate="yes" xml:space="preserve">
          <source>The option value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0456bd8b151908324f902f95f41c65e26bf926" translate="yes" xml:space="preserve">
          <source>The option's new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b9f1ce4c729b2ded7edcf5db48cd7ab36a842d" translate="yes" xml:space="preserve">
          <source>The optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1f939f8c55c6c82ef5863daf9e192889b6647c" translate="yes" xml:space="preserve">
          <source>The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). If the offset is negative, it is treated relative to the end of the string. The position returned is still relative to the beginning of haystack regardless of the value of $offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4df75bc260d002082f9b8d99b134534d8f0625" translate="yes" xml:space="preserve">
          <source>The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad5240f07adf5e04cb6f0fdecdf067f13942d4a" translate="yes" xml:space="preserve">
          <source>The optional $offset parameter allows you to specify where in haystack to start searching as an offset in grapheme units (not bytes or characters). If the offset is negative, it is treated relative to the end of the string. The position returned is still relative to the beginning of haystack regardless of the value of $offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e01b72321418c553737f0265c24c0553e5ad7e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;charset&lt;/code&gt; parameter specifies the character set to represent the result by. If omitted, &lt;a href=&quot;https://secure.php.net/manual/en/iconv.configuration.php&quot;&gt;iconv.internal_encoding&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c50160de1ebaf8a2676c86a94f1710b7c0af561" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;contextnode&lt;/code&gt; can be specified for doing relative XPath queries. By default, the queries are relative to the root element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0de126a4606448d30d250375687959573e93c12" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;delimiter&lt;/code&gt; parameter sets the field delimiter (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ecda7e232b51b07c0d8c68f4ae07b5f67b0f19" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;delimiters&lt;/code&gt; contains the word separator characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e9a8a83e19305945f17ac2b9045d48fb684410" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;enclosure&lt;/code&gt; parameter sets the field enclosure (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44db5e2dd805d5d450d7eba68112567e80c5da57" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;enclosure&lt;/code&gt; parameter sets the field enclosure character (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3093df5469506295a0ab595fb2813f9b7a29c9dd" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;encoding&lt;/code&gt; specifies the character encoding for the input/output in PHP 4. Starting from PHP 5, the input encoding is automatically detected, so that the &lt;code&gt;encoding&lt;/code&gt; parameter specifies only the output encoding. In PHP 4, the default output encoding is the same as the input charset. If empty string is passed, the parser attempts to identify which encoding the document is encoded in by looking at the heading 3 or 4 bytes. In PHP 5.0.0 and 5.0.1, the default output charset is ISO-8859-1, while in PHP 5.0.2 and upper is UTF-8. The supported encodings are &lt;em&gt;ISO-8859-1&lt;/em&gt;, &lt;em&gt;UTF-8&lt;/em&gt; and &lt;em&gt;US-ASCII&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf33e2daf34cd845a922184fd76b1be9690c346" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;escape&lt;/code&gt; parameter sets the escape character (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ebb290dbd4266287a2c1d59ca9a8595ff03231" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;escape_char&lt;/code&gt; parameter sets the escape character (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1bc64c6e13ab9fdac15c6b5a271481151bea14" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;flags&lt;/code&gt; allows you to pass flags to the low-level msgrcv system call. It defaults to 0, but you may specify one or more of the following values (by adding or ORing them together).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59417ab1bf6891a5bcae301f5140e366a8e023d0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;lib_dir&lt;/code&gt; parameter can contain the location where the algorithm module is on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926ff915d0442b8058f8c8b5e9645940dc80114b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;object_id&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709932163f39bf9201008a2d77c3c20e0f9b87f8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;offset&lt;/code&gt; has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a52bc174135210bc3e7716abed101ba2679dad7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;offset&lt;/code&gt; parameter specifies the position from which the search should be performed. If the offset is negative, it is counted from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71a71a96ba838c5f4dcd20af3d88cae4c50e0a1" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; are a bit mask with one or more of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeccb9966b85e6859dd354291ee2b5d3b5ee4367" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;preserve_keys&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875575502419b8f90b4ae7c07e8a9d0b2a1b20c2" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;registerNodeNS&lt;/code&gt; can be specified to disable automatic registration of the context node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242cfc04bd70e84fe9a5d199b9a1c1d23c797eb2" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;replace&lt;/code&gt; parameter indicates whether the header should replace a previous similar header, or add a second header of the same type. By default it will replace, but if you pass in &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; as the second argument you can force multiple headers of the same type. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91481776ca904eb10c2ec62e5621d8f3f9eff0b9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;response_code&lt;/code&gt; will set the response code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc8b20f09ba9be19b95bcebabef26751a99f64b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;scale&lt;/code&gt; parameter is used to set the number of digits after the decimal place which will be used in the comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecee204bebfd431f6f3563ca7728aff143fa1acb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;serialize&lt;/code&gt; controls how the &lt;code&gt;message&lt;/code&gt; is sent. &lt;code&gt;serialize&lt;/code&gt; defaults to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; which means that the &lt;code&gt;message&lt;/code&gt; is serialized using the same mechanism as the session module before being sent to the queue. This allows complex arrays and objects to be sent to other PHP scripts, or if you are using the WDDX serializer, to any WDDX compatible client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88ca2c7089b9ca0d9ef1981ed32d381c2fe1e33" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;timestamp&lt;/code&gt; parameter is an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; Unix timestamp that defaults to the current local time if a &lt;code&gt;timestamp&lt;/code&gt; is not given. In other words, it defaults to the value of &lt;a href=&quot;function.time&quot;&gt;time()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf4c578f3244d34eea05ea42eda800cc33b345" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;timestamp_begin&lt;/code&gt; and &lt;code&gt;timestamp_end&lt;/code&gt; were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba8e7064a8ba3bf7681c4113dd694cf681acd26" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;zend_extensions&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddc0ba2f0b133b15b102383361c980857f0ef1a" translate="yes" xml:space="preserve">
          <source>The optional assigned values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42da1d50ad7a83c15e945eb0328f28301640d055" translate="yes" xml:space="preserve">
          <source>The optional color string to use as the initial value of this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5e6f9a2a16b8f97cab56e617716a9259632d3f" translate="yes" xml:space="preserve">
          <source>The optional default value, returned if the key could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25702e22055a5ca7385b6c93fb4c4e167a93081c" translate="yes" xml:space="preserve">
          <source>The optional filter, for filtering desired property types. It's configured using the &lt;a href=&quot;class.reflectionproperty#reflectionproperty.constants.modifiers&quot;&gt;ReflectionProperty constants&lt;/a&gt;, and defaults to all property types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f482a9dd7226ca2304df12f9957f4fa982f0148" translate="yes" xml:space="preserve">
          <source>The optional logarithmic base to use (defaults to 'e' and so to the natural logarithm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134bd050ac25184fce20708a5ec222a91d377177" translate="yes" xml:space="preserve">
          <source>The optional number of decimal digits to round to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64edfa1affc1a4903179b1d02f6d6f93d5d81484" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;doc_comment&lt;/code&gt; has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ba015e7a5777a2524cf732d47189ca78c2f2bd" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;flags&lt;/code&gt; can be one, or more, of the following constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4082784df00157b825dd77bab377c3182b0b76bb" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;is_prefix&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135a66e4c8bf043fd78598b6835f7a6e3cde53dc" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;length&lt;/code&gt; can specify an alternate length of bytes written to the socket. If this length is greater than the buffer length, it is silently truncated to the length of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0719f201410d91961e8a8f8836b7479bcc55aa09" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;notext&lt;/code&gt; affects the verbosity of the output; if it is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, then additional human-readable information is included in the output. The default value of &lt;code&gt;notext&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5359d0cae6565d25b397573c37e297d9aede75be" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;passphrase&lt;/code&gt; must be used if the specified key is encrypted (protected by a passphrase).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baba2b98f9042188b8a2ae2b66c0a1300136f90" translate="yes" xml:space="preserve">
          <source>The optional parameter value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48db9f14a664b3743ecc7edffbf424e57c7700b0" translate="yes" xml:space="preserve">
          <source>The optional parameters &lt;code&gt;return_by_reference&lt;/code&gt; and &lt;code&gt;doc_comment&lt;/code&gt; have been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb15fac68aa904c78e17f53cc2ba707112b84c2a" translate="yes" xml:space="preserve">
          <source>The optional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bb3afa78a4acb0f3b841022e789415e699df46" translate="yes" xml:space="preserve">
          <source>The optional permission bits. Default to 0666.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ac622a70a996f625e57f3d59bd95fe9b4823e3" translate="yes" xml:space="preserve">
          <source>The optional second parameter &lt;code&gt;sort_flags&lt;/code&gt; may be used to modify the sorting behavior using these values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e086bb75671a853b621f3184c068ad5c7003f0f" translate="yes" xml:space="preserve">
          <source>The optional third &lt;code&gt;use_include_path&lt;/code&gt; parameter can be set to '1' or &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if you want to search for the file in the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15cc07ba0188f8cb95def18f0faae4bf2b0f0b7" translate="yes" xml:space="preserve">
          <source>The optional third argument is set to 1 if the lock would block (EWOULDBLOCK errno condition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed40afae6fa4782074ddb2ca975ae41ca683621f" translate="yes" xml:space="preserve">
          <source>The optional value of the entry to add. If no value is specified, &lt;em&gt;1&lt;/em&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf50176bf3bb0f8b4bc81588bfc41d97c5d52b3" translate="yes" xml:space="preserve">
          <source>The options currently set for the worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086c892f93b1af479f226ae1bd8ea507beb7e700" translate="yes" xml:space="preserve">
          <source>The options listed below require values specified via constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc28f317aca55cc474f5a56ec9fd8dcbc7e5784" translate="yes" xml:space="preserve">
          <source>The options that you can pass in are: QuickHashIntHash::CHECK_FOR_DUPES, which makes sure no duplicate entries are added to the hash; QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC to not use PHP's internal memory manager as well as one of QuickHashIntHash::HASHER_NO_HASH, QuickHashIntHash::HASHER_JENKINS1 or QuickHashIntHash::HASHER_JENKINS2. These last three configure which hashing algorithm to use. All options can be combined using bitmasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084ef55c00e6488ee543528e12a216c6e4c6aafa" translate="yes" xml:space="preserve">
          <source>The options that you can pass in are: QuickHashIntSet::CHECK_FOR_DUPES, which makes sure no duplicate entries are added to the set; QuickHashIntSet::DO_NOT_USE_ZEND_ALLOC to not use PHP's internal memory manager as well as one of QuickHashIntSet::HASHER_NO_HASH, QuickHashIntSet::HASHER_JENKINS1 or QuickHashIntSet::HASHER_JENKINS2. These last three configure which hashing algorithm to use. All options can be combined using bitmasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306acd421f7f205308b1d5339beaa3fd9c015dc0" translate="yes" xml:space="preserve">
          <source>The options that you can pass in are: QuickHashIntStringHash::CHECK_FOR_DUPES, which makes sure no duplicate entries are added to the hash; QuickHashIntStringHash::DO_NOT_USE_ZEND_ALLOC to not use PHP's internal memory manager as well as one of QuickHashIntStringHash::HASHER_NO_HASH, QuickHashIntStringHash::HASHER_JENKINS1 or QuickHashIntStringHash::HASHER_JENKINS2. These last three configure which hashing algorithm to use. All options can be combined using bitmasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bee1394a7426aeb32c51e0c462bbe6ff85ec5ef" translate="yes" xml:space="preserve">
          <source>The options that you can pass in are: QuickHashStringIntHash::CHECK_FOR_DUPES, which makes sure no duplicate entries are added to the hash and QuickHashStringIntHash::DO_NOT_USE_ZEND_ALLOC to not use PHP's internal memory manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b00951d246c44ce9fe76c1e2d264d48d715895f" translate="yes" xml:space="preserve">
          <source>The options to add. One of the following constants, or a combination of them using the bitwise OR operator (&quot;|&quot;): &lt;strong&gt;&lt;code&gt;GEARMAN_CLIENT_GENERATE_UNIQUE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;GEARMAN_CLIENT_NON_BLOCKING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;GEARMAN_CLIENT_UNBUFFERED_RESULT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;GEARMAN_CLIENT_FREE_TASKS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b9e713eeea802614966845255e810cf95e495d" translate="yes" xml:space="preserve">
          <source>The options to be added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353e63b0bc1351063ddcceff069fa3540cdda9eb" translate="yes" xml:space="preserve">
          <source>The options to be removed (unset)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac3f2f801a9e010910355384d0da5c2fdfd884d" translate="yes" xml:space="preserve">
          <source>The options to be set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03ce118757dcf2b416c549789e19f1c0904554a" translate="yes" xml:space="preserve">
          <source>The options to refresh, using the MYSQLI_REFRESH_* constants as documented within the &lt;a href=&quot;https://secure.php.net/manual/en/mysqli.constants.php&quot;&gt;MySQLi constants&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853cb620eeb2d10db0a467923a774df8f42393ec" translate="yes" xml:space="preserve">
          <source>The options to set for &lt;code&gt;stream_or_context&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403e241f0aaee76206588e4d7fe91ad2926fdf13" translate="yes" xml:space="preserve">
          <source>The options to set for the default context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a489196a5de42e9118dc427229f981c438abf65" translate="yes" xml:space="preserve">
          <source>The options to set. This is a string where each character is an option. To set a mode, the mode character must be the last one set, however there can only be set one mode but multiple options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491822a2077572663f2cbeb218f7f705fe38e185" translate="yes" xml:space="preserve">
          <source>The order in which directory entries are returned by the read method is system-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdd14d53e0808647cd215b8bd73651a9e6f884f" translate="yes" xml:space="preserve">
          <source>The order in which the indices of the array to be consumed by &lt;strong&gt;list()&lt;/strong&gt; are defined is irrelevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073db3a4e8688c514ee2008d778b89b1309e8f7a" translate="yes" xml:space="preserve">
          <source>The order of &lt;code&gt;latitude&lt;/code&gt; and &lt;code&gt;longitude&lt;/code&gt; has been swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0d8f26c1816391985cdd8ec0a531a1cede5bf1" translate="yes" xml:space="preserve">
          <source>The order that the assignment operations are performed in has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b797a22ce425bfc9a1bd9dbf9dcc592561e80cbf" translate="yes" xml:space="preserve">
          <source>The order used to sort the previous &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; argument. Either &lt;strong&gt;&lt;code&gt;SORT_ASC&lt;/code&gt;&lt;/strong&gt; to sort ascendingly or &lt;strong&gt;&lt;code&gt;SORT_DESC&lt;/code&gt;&lt;/strong&gt; to sort descendingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c0a4051bc4eac72775a35dd27cfeb20b9c933e" translate="yes" xml:space="preserve">
          <source>The original class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262ca4206a7d632ad7d2374d096c85ccd22369c0" translate="yes" xml:space="preserve">
          <source>The original filename, for uuencoded parts only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8724db772d60fec4013f34182f1e847ecec76068" translate="yes" xml:space="preserve">
          <source>The original string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662dd6872027b1063914811936a08e95001f166f" translate="yes" xml:space="preserve">
          <source>The original uncompressed data or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c833c2dccc4fbc4a985f008386686b893c5585" translate="yes" xml:space="preserve">
          <source>The original values of variables that are modified are stored in the SERVER array with &lt;em&gt;PHAR_&lt;/em&gt; prepended, so for instance &lt;em&gt;SCRIPT_NAME&lt;/em&gt; would be saved as &lt;em&gt;PHAR_SCRIPT_NAME&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8597353bed41c509102725666cdddecae0d7aca" translate="yes" xml:space="preserve">
          <source>The other calendar against which the comparison is to be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b3710d81f8617f98c1ca83d39ccf97e4d65717" translate="yes" xml:space="preserve">
          <source>The other map, containing the keys to intersect with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a72118bcf129205fdd47eff2bffa9756c2e110" translate="yes" xml:space="preserve">
          <source>The other map, to combine with the current instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4660a294df872660a05bdba217f8b140d8dd5278" translate="yes" xml:space="preserve">
          <source>The other map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e81eebb179845c71d40fc488a2e4544cf6dd1d" translate="yes" xml:space="preserve">
          <source>The other set, to combine with the current instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cae9285f2fac100934409f4af14a01045a2671" translate="yes" xml:space="preserve">
          <source>The other set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99254ea37c5b309436ea680dd928b014e76b3533" translate="yes" xml:space="preserve">
          <source>The other two are short tags and ASP style tags. As such, while some people find short tags and ASP style tags convenient, they are less portable, and generally not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95d250fb800133c3f503f2b6d57f50116819ca0" translate="yes" xml:space="preserve">
          <source>The outer bevel width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773db35d894a1dfea6d29c69b4903a562128cd49" translate="yes" xml:space="preserve">
          <source>The outgoing interface for IPv4 multicast packets. (added in PHP 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3770f3a8375242904f58ca3abe72adc7f2b52522" translate="yes" xml:space="preserve">
          <source>The outgoing interface for IPv6 multicast packets. (added in PHP 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407f66ce07b4d3480104e7c303a982404116476c" translate="yes" xml:space="preserve">
          <source>The output buffer must be started by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-cleanable&quot;&gt;PHP_OUTPUT_HANDLER_CLEANABLE&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-removable&quot;&gt;PHP_OUTPUT_HANDLER_REMOVABLE&lt;/a&gt; flags. Otherwise &lt;strong&gt;ob_end_clean()&lt;/strong&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410b2f245c53fa113513e56445795c4e033ca925" translate="yes" xml:space="preserve">
          <source>The output buffer must be started by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-cleanable&quot;&gt;PHP_OUTPUT_HANDLER_CLEANABLE&lt;/a&gt; flag. Otherwise &lt;strong&gt;ob_clean()&lt;/strong&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9923925643a37ffdc22f91b5bcdd7f6a0c820fd" translate="yes" xml:space="preserve">
          <source>The output buffer must be started by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-cleanable&quot;&gt;PHP_OUTPUT_HANDLER_CLEANABLE&lt;/a&gt; flag. Otherwise &lt;strong&gt;ob_get_clean()&lt;/strong&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abab581dd570eace2992d6e9c5717fc3a68a864" translate="yes" xml:space="preserve">
          <source>The output buffer must be started by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-flushable&quot;&gt;PHP_OUTPUT_HANDLER_FLUSHABLE&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-removable&quot;&gt;PHP_OUTPUT_HANDLER_REMOVABLE&lt;/a&gt; flags. Otherwise &lt;strong&gt;ob_end_flush()&lt;/strong&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ce78404af1f230f5c82e3dd86a83cdf6e9778c" translate="yes" xml:space="preserve">
          <source>The output buffer must be started by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; with &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.constants.php#constant.php-output-handler-flushable&quot;&gt;PHP_OUTPUT_HANDLER_FLUSHABLE&lt;/a&gt; flag. Otherwise &lt;strong&gt;ob_get_flush()&lt;/strong&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4078573a407d6440c588b6bcedfd1f60ed60db25" translate="yes" xml:space="preserve">
          <source>The output charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee554eabc269024151dce1c51132d724813ceee" translate="yes" xml:space="preserve">
          <source>The output for this will be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54639326f0847500c1116b8745636fbc3d88785b" translate="yes" xml:space="preserve">
          <source>The output from the executed command or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if an error occurred or the command produces no output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f5ee434b4f708140c1e2d61ad72243d5d0adab" translate="yes" xml:space="preserve">
          <source>The output gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7249dd2751a49139da50e883eee50727f3ebadbc" translate="yes" xml:space="preserve">
          <source>The output is not parsed in any way. The system type identifier returned by &lt;a href=&quot;function.ftp-systype&quot;&gt;ftp_systype()&lt;/a&gt; can be used to determine how the results should be interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a832b3fe482e07435311be8ed0c02bb8d3be93ed" translate="yes" xml:space="preserve">
          <source>The output may be customized by passing one or more of the following &lt;em&gt;constants&lt;/em&gt; bitwise values summed together in the optional &lt;code&gt;what&lt;/code&gt; parameter. One can also combine the respective constants or bitwise values together with the &lt;a href=&quot;language.operators.bitwise&quot;&gt;bitwise or operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05288e4d229ba3bb9e7b0ad33f5655097e64b8f4" translate="yes" xml:space="preserve">
          <source>The overloading methods are invoked when interacting with properties or methods that have not been declared or are not &lt;a href=&quot;language.oop5.visibility&quot;&gt;visible&lt;/a&gt; in the current scope. The rest of this section will use the terms &quot;inaccessible properties&quot; and &quot;inaccessible methods&quot; to refer to this combination of declaration and visibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e1d98c68e6ed1c0916d2fd30376ad57a9c2732" translate="yes" xml:space="preserve">
          <source>The owner id in numerical format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf1fd37f0f45851b0790f381fcfe95e5caacf7d" translate="yes" xml:space="preserve">
          <source>The owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad58218d9f5cf1ea7016057afb8704e5834751f" translate="yes" xml:space="preserve">
          <source>The owner. Accepts search patterns ('%' to match zero or more characters and '_' to match a single character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca901a7f2fed1c7667e03f59970c586ff6057e7f" translate="yes" xml:space="preserve">
          <source>The owner. Accepts the following search patterns: ('%' to match zero or more characters and '_' to match a single character)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc44dd31787da1fddd16ea4165c521704912aaf" translate="yes" xml:space="preserve">
          <source>The owner. This parameter accepts the following search patterns: &quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d179fb9e6c6ae9925c962021877c775d61958f85" translate="yes" xml:space="preserve">
          <source>The packed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9cff8ba58603412361241faa5b81c06e996f9b" translate="yes" xml:space="preserve">
          <source>The page definition as a string. The string is in format WxH+x+y. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7bddf21cf5836b44cc121f233b1acd6183b97f" translate="yes" xml:space="preserve">
          <source>The page definition. For example &lt;em&gt;7168x5147+0+0&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1e2619b9bf4e00ac668d331cba16b1c5a4d1dc" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;basenode&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2c6ab2b73b4438e14ceaf9d67379c35d79be5c" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;option&lt;/code&gt; can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74df4f8303e520a98abb644bb97f522414944a27" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;provide_object&lt;/code&gt; changed to &lt;code&gt;options&lt;/code&gt; and additional option &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_IGNORE_ARGS&lt;/code&gt;&lt;/strong&gt; is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630fbad1fb6100cc700e62e0e1ba9e895e4cf604" translate="yes" xml:space="preserve">
          <source>The parameter key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29c6c653675850040d779bab82783e4b41e60bb" translate="yes" xml:space="preserve">
          <source>The parameter markers must be bound to application variables using &lt;a href=&quot;mysqli-stmt.bind-param&quot;&gt;mysqli_stmt_bind_param()&lt;/a&gt; and/or &lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt_bind_result()&lt;/a&gt; before executing the statement or fetching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afb04c87acac04f58d6a3e46609360ec1a6de0a" translate="yes" xml:space="preserve">
          <source>The parameter must be a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73e8c728e081732998510756b5775f0d29ef05a" translate="yes" xml:space="preserve">
          <source>The parameter must be a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;ing point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecbd3f543929ab75fa95dd4ad92a2e153ee87a4" translate="yes" xml:space="preserve">
          <source>The parameter must be a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74b7e8b0ca693438852d5f29d82ba0a47a05a0b" translate="yes" xml:space="preserve">
          <source>The parameter must be a string. Using other data types will produce unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcc05b7f6ddcae9a82c8592204a506ee2d78f40" translate="yes" xml:space="preserve">
          <source>The parameter must be a valid &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2743707a1543bb931706119d19c1c0eacb2a872" translate="yes" xml:space="preserve">
          <source>The parameter must be an &lt;a href=&quot;language.operators.type&quot;&gt;&lt;em&gt;instanceof&lt;/em&gt;&lt;/a&gt; the given class or interface name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d0d444eb19c0f7bb80e96b2329e74856812748" translate="yes" xml:space="preserve">
          <source>The parameter must be an &lt;a href=&quot;language.operators.type&quot;&gt;&lt;em&gt;instanceof&lt;/em&gt;&lt;/a&gt; the same class as the one the method is defined on. This can only be used on class and instance methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea63f52dd10f91dbd99816fa976e89f2775a788a" translate="yes" xml:space="preserve">
          <source>The parameter must be an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d61f7431905f6ac9daf3604bbbb9d09da6e0792" translate="yes" xml:space="preserve">
          <source>The parameter must be an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd397b455adc69a370676fa6bbcbb2ad9f93ac88" translate="yes" xml:space="preserve">
          <source>The parameter must be an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45857e499602ee7472dd19e6219b5ab8a5ffaa7b" translate="yes" xml:space="preserve">
          <source>The parameter must be either an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or an &lt;a href=&quot;language.operators.type&quot;&gt;&lt;em&gt;instanceof&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0d5bcdb4927dad0eb89021491daf6f6e13f7e8" translate="yes" xml:space="preserve">
          <source>The parameter name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae63a6134ba45828f16aa02cbc31b39f10a25f5" translate="yes" xml:space="preserve">
          <source>The parameter of the Poisson distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66dadd3557d4f9e1b43201bd63abff30c3fe033" translate="yes" xml:space="preserve">
          <source>The parameter to bind to a statement variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee6bfc940ad05d465c91e2d29a8f4d356ecf4fa" translate="yes" xml:space="preserve">
          <source>The parameter to output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7f9d8af2b02af9b9d7c8f3873a10859c4a2e59" translate="yes" xml:space="preserve">
          <source>The parameter to specify the task to unstack has been removed. Now, only the first task in the stack is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc61de5bcf7259ae0bb94b29a8cf209ad410af70" translate="yes" xml:space="preserve">
          <source>The parameter type of &lt;code&gt;proper_address&lt;/code&gt; has been changed from &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c677b727193bb37a9911ff1962107228c69d5b" translate="yes" xml:space="preserve">
          <source>The parameter value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869ce116f012019f5dfd439143775bc25ed00a7a" translate="yes" xml:space="preserve">
          <source>The parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cd0a4f849e2c2e4177fda083d4885b74251d93" translate="yes" xml:space="preserve">
          <source>The parameterized SQL statement. Must contain only a single statement. (multiple statements separated by semi-colons are not allowed.) If any parameters are used, they are referred to as $1, $2, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead0e691fd22dd017d010bbdf0f078c57844fd47" translate="yes" xml:space="preserve">
          <source>The parameters &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt; and &lt;code&gt;bcc&lt;/code&gt; are all strings and are all parsed as &lt;a href=&quot;http://www.faqs.org/rfcs/rfc822&quot;&gt;&amp;raquo; RFC822&lt;/a&gt; address lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ee98ce65174922e5968723414697cbee772877" translate="yes" xml:space="preserve">
          <source>The parameters are identical to &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt;, except that the name of a prepared statement is given instead of a query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf714d1d7af28048c6c0281aa473fce3fbd3adbe" translate="yes" xml:space="preserve">
          <source>The parameters default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952283ba2ed65e14e22e7ea0be41856c6ea774e8" translate="yes" xml:space="preserve">
          <source>The parameters to be passed to the callback, as an indexed array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df85e4e9d8ca361651b99deb8bde241e6057ba6" translate="yes" xml:space="preserve">
          <source>The parameters to be passed to the class constructor as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221f93504d7b59cd4ad5e18aac39990df1dbab71" translate="yes" xml:space="preserve">
          <source>The parameters to be passed to the function, as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a48b11ffea0353426532fa3524acfd7f42be44c" translate="yes" xml:space="preserve">
          <source>The parameters, as a &lt;a href=&quot;class.reflectionparameter&quot;&gt;ReflectionParameter&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0380212e9ef4d8e85734471b9f74dcdd88e07bf8" translate="yes" xml:space="preserve">
          <source>The parent cURL handle (the request the client made).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527e17c42010273a5c1c71a088755db1eb5ae835" translate="yes" xml:space="preserve">
          <source>The parent of this node. If there is no such node, this returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefd0c0533b81257a4456b8a790fb5ca9e323fd5" translate="yes" xml:space="preserve">
          <source>The parenthetical restrictions do not apply in PHP 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231a08a6e82afed23eff22fa4c4cfea404f4b56c" translate="yes" xml:space="preserve">
          <source>The parsed headers data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a14e830338cb6c31132090c171e502a83e2519" translate="yes" xml:space="preserve">
          <source>The parsed numeric value or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e94e9d3082ccce98d7f13d16ae99e63dac3a13" translate="yes" xml:space="preserve">
          <source>The parsing of options will end at the first non-option found, anything that follows is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000d4498290a70e28e841dd42faf3732a958fd8d" translate="yes" xml:space="preserve">
          <source>The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87aede92e2a01bb789a1877d7f90b25f4dc48e7" translate="yes" xml:space="preserve">
          <source>The passed arguments to the function as an array, much like &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt; works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a2ab7ec45ba2df62f76a6b16f7e49542306753" translate="yes" xml:space="preserve">
          <source>The passed in argument list. It accepts a variable number of arguments which are passed to the function much like &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06146634b90d02df4faa8dfcf02d2b4ffc1a4e1" translate="yes" xml:space="preserve">
          <source>The passphrase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce08545c1f59a9f082f90176fc52310b058ff3c" translate="yes" xml:space="preserve">
          <source>The passwd element contains the group's password in an encrypted format. Often, for example on a system employing &quot;shadow&quot; passwords, an asterisk is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f99fbbaae6269431672739b2b250d3bb6c0668" translate="yes" xml:space="preserve">
          <source>The passwd element contains the user's password in an encrypted format. Often, for example on a system employing &quot;shadow&quot; passwords, an asterisk is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558062fb907cee6d9ef8ddf2b639c816b809fc31" translate="yes" xml:space="preserve">
          <source>The password (&lt;em&gt;PASS&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e80e8fb9a80494c63fefed4640745c3fd44b86" translate="yes" xml:space="preserve">
          <source>The password associated with the &lt;code&gt;username&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb94d9d475dfe33739d2d0ac53d594073d12f034" translate="yes" xml:space="preserve">
          <source>The password for &lt;code&gt;username&lt;/code&gt;. Can be set with the &lt;em&gt;ibase.default_password&lt;/em&gt;&lt;var&gt;php.ini&lt;/var&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b8dd687aa07d985102cf285f1c9c8da48b57ba" translate="yes" xml:space="preserve">
          <source>The password for the DSN string. This parameter is optional for some PDO drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf2da1737dfd7506fb183083f56450614b1a6b0" translate="yes" xml:space="preserve">
          <source>The password of the new user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4959362ab7d706845c38ad6f3ac9a5693d8e676" translate="yes" xml:space="preserve">
          <source>The password required to use the &lt;strong&gt;&lt;code&gt;CURLOPT_SSLCERT&lt;/code&gt;&lt;/strong&gt; certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b754cae8c74ff2c3f30a5fe3c9211f43758afb" translate="yes" xml:space="preserve">
          <source>The password required to use the &lt;strong&gt;&lt;code&gt;CURLOPT_SSLKEY&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;CURLOPT_SSH_PRIVATE_KEYFILE&lt;/code&gt;&lt;/strong&gt; private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd70877e8dec47fa5cb034042a0984f17e74397" translate="yes" xml:space="preserve">
          <source>The password to be used for the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483cf594d6101e163b1d6e9caf3abce102902456" translate="yes" xml:space="preserve">
          <source>The password to use for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3e284fa830c8bdf4abebf923253f2c03cd0393" translate="yes" xml:space="preserve">
          <source>The password to use for the derivation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a376739ae8fc19bb8d70bf288e1116439446bb9c" translate="yes" xml:space="preserve">
          <source>The password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8694cc3a95eade15289573ee40ca48e78ec7de42" translate="yes" xml:space="preserve">
          <source>The path and filename of the current dir entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4d935444d8f730a157997cc708d09dafef195a" translate="yes" xml:space="preserve">
          <source>The path being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b055e1d87e99828755b129a8397d22b44bf6efb" translate="yes" xml:space="preserve">
          <source>The path does not need to exist: changing from &quot;path exists&quot; to &quot;path does not exist&quot; is a status change like any other. The condition &quot;path does not exist&quot; is signified by the &lt;strong&gt;&lt;code&gt;'nlink'&lt;/code&gt;&lt;/strong&gt; item being 0(returned by &lt;a href=&quot;evstat.attr&quot;&gt;EvStat::attr()&lt;/a&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47aa4a2b56151925b3774e296fc59353e6cb6c5" translate="yes" xml:space="preserve">
          <source>The path for which to invoke the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f78c18cc7d69a476cf530f1cf16eed28d69a51e" translate="yes" xml:space="preserve">
          <source>The path must not end in a slash or contain special components such as &lt;strong&gt;&lt;code&gt;'.'&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;..&lt;/code&gt;&lt;/strong&gt; . The path should be absolute: if it is relative and the working directory changes, then the behaviour is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852fa4062a9807c5f0766fd712367f023986864f" translate="yes" xml:space="preserve">
          <source>The path name to the certificate authority file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d257cba1b490c569a25c5dfc11cd92e141aa51" translate="yes" xml:space="preserve">
          <source>The path name to the certificate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff319208c91cf31f7cca4c3e30d601bb19329e9" translate="yes" xml:space="preserve">
          <source>The path name to the key file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba39dadb59d4e3146ce96ebb54c1ecd3b125b57" translate="yes" xml:space="preserve">
          <source>The path of the directory to be iterated over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf16bd1d59984fc5b4d7bea5c7af4b3aee85d84" translate="yes" xml:space="preserve">
          <source>The path of the directory to traverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8242e33fc8888cd54ae18b44958da516abe64d" translate="yes" xml:space="preserve">
          <source>The path of the filesystem item to be iterated over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9987eb16d22cf61d4a65f0f9a7d818ac2201245" translate="yes" xml:space="preserve">
          <source>The path on disk to the phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa2630983c1fce8365647a64d0027da12f4059d" translate="yes" xml:space="preserve">
          <source>The path on the server in which the cookie will be available on. If set to &lt;em&gt;'/'&lt;/em&gt;, the cookie will be available within the entire &lt;code&gt;domain&lt;/code&gt;. If set to &lt;em&gt;'/foo/'&lt;/em&gt;, the cookie will only be available within the &lt;em&gt;/foo/&lt;/em&gt; directory and all sub-directories such as &lt;em&gt;/foo/bar/&lt;/em&gt; of &lt;code&gt;domain&lt;/code&gt;. The default value is the current directory that the cookie is being set in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1837fc8d8c3e67f54b975b85350eea2d27be0fd7" translate="yes" xml:space="preserve">
          <source>The path or an open stream resource (which is automatically being closed after this function returns) to save the file to. If not set or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, the raw image stream will be outputted directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc40fb3596802345e16f28d7ceb0c0517b15ebc" translate="yes" xml:space="preserve">
          <source>The path specified in &lt;a href=&quot;class.evstat&quot;&gt;EvStat&lt;/a&gt; watcher changed its attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaddeebca8f79f067c8e973841e2dcb63fc2923" translate="yes" xml:space="preserve">
          <source>The path to an image to load or an array of paths. Paths can include wildcards for file names, or can be URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7064e94677c38bd55a2f38176f4aa6d8e73863b6" translate="yes" xml:space="preserve">
          <source>The path to an image to load or array of paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852320ffbed2e2342bc9be41ab4825528adaa8c3" translate="yes" xml:space="preserve">
          <source>The path to be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74103657d0bbee31ce41af307f2664192dc1999b" translate="yes" xml:space="preserve">
          <source>The path to change the root directory to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1754bfd18635eadcf15297cbd18449d6441ee74d" translate="yes" xml:space="preserve">
          <source>The path to save the file to. If not set or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, the raw image stream will be outputted directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6c27edc4d8492d27f4299e18de3b7544a64eb2" translate="yes" xml:space="preserve">
          <source>The path to the HTML file, as a string. This can be a local file or an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94280156cb57927f2abbeed8102566c9fe1e36f9" translate="yes" xml:space="preserve">
          <source>The path to the HTML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657a43528448d42754c43f0cb5db5b174dacaa9f" translate="yes" xml:space="preserve">
          <source>The path to the TrueType font you wish to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b8b8a1c2bdb90276a2dc05e7043b0d88467e6e" translate="yes" xml:space="preserve">
          <source>The path to the XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83ba6cb567b370e7b70b9fc337889579d90855f" translate="yes" xml:space="preserve">
          <source>The path to the file to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d7f6c37fe93af27b88af304f713208b3e7e43a" translate="yes" xml:space="preserve">
          <source>The path to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ecab2399754afa4c550261d3916981e120b1af" translate="yes" xml:space="preserve">
          <source>The path to the root directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60d370b1e7c786362c47abc6b84db4861f3134a" translate="yes" xml:space="preserve">
          <source>The path to the saved HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493120c29937f69b123cb042b8baf538ed8ba6f8" translate="yes" xml:space="preserve">
          <source>The path to the saved XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b09fd71cec19d6b4cc5ead1d195d0e27d5c382" translate="yes" xml:space="preserve">
          <source>The path to the saved file as a string, or a valid file descriptor returned by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96aceb1b8f73df54f0649cb765ccd1a015360cb7" translate="yes" xml:space="preserve">
          <source>The path to the schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22007d14c2afb8ad71a5dbd92bd60bbccabad83" translate="yes" xml:space="preserve">
          <source>The path to wait for status changes on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf53a7d1705cb3c8c39a0141e01400aca237907" translate="yes" xml:space="preserve">
          <source>The path where to store/retrieve the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ed03fba80a04035fc625a90a3eb60185bc03e7" translate="yes" xml:space="preserve">
          <source>The path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495ffc681b451dc5d9989b1fefc4da98119cf5be" translate="yes" xml:space="preserve">
          <source>The pathname to a directory that contains trusted SSL CA certificates in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00574120543ee4ef82b15860dc1272a61f823530" translate="yes" xml:space="preserve">
          <source>The pattern &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; for this message formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4736de855bc6ff64184cc92b645a4bbacd89fb77" translate="yes" xml:space="preserve">
          <source>The pattern &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to insert things into. The pattern uses an 'apostrophe-friendly' syntax; it is run through &lt;a href=&quot;http://www.icu-project.org/apiref/icu4c/umsg_8h.html#9da796210146ff51d395affe4928f0b7&quot;&gt;&amp;raquo; umsg_autoQuoteApostrophe&lt;/a&gt; before being interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d52623d7dc8e99927d2d993b41fcd078fad5e1" translate="yes" xml:space="preserve">
          <source>The pattern &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to use in this message formatter. The pattern uses an 'apostrophe-friendly' syntax; it is run through &lt;a href=&quot;http://www.icu-project.org/apiref/icu4c/umsg_8h.html#9da796210146ff51d395affe4928f0b7&quot;&gt;&amp;raquo; umsg_autoQuoteApostrophe&lt;/a&gt; before being interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee49d9788e1a7f14c60c9a7cbda71992a649d6c" translate="yes" xml:space="preserve">
          <source>The pattern for profile names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0eb82f76631a103d7e2d1a2ac129c90039060" translate="yes" xml:space="preserve">
          <source>The pattern for property names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f9a9d8aecdb4c58564cc0355f9cb0bbf34eb7e" translate="yes" xml:space="preserve">
          <source>The pattern separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac7f596264e11f014d92bdfc75405a932f95d60" translate="yes" xml:space="preserve">
          <source>The pattern string being used to format/parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064f616eefc11c3234cfe4f885554e393a4ed45d" translate="yes" xml:space="preserve">
          <source>The pattern string to stick arguments into. The pattern uses an 'apostrophe-friendly' syntax; it is run through &lt;a href=&quot;http://www.icu-project.org/apiref/icu4c/umsg_8h.html#9da796210146ff51d395affe4928f0b7&quot;&gt;&amp;raquo; umsg_autoQuoteApostrophe&lt;/a&gt; before being interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ab83cdea720960dd1fc1a208bdaf8501641c61" translate="yes" xml:space="preserve">
          <source>The pattern to search for, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70626c024cd9f366bd967c1084c2eacba189aa7" translate="yes" xml:space="preserve">
          <source>The pattern to search for. It can be either a string or an array with strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac54d1e3d0135aecb2342c047ad2f9854ea7aff" translate="yes" xml:space="preserve">
          <source>The pattern with which to parse the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f106f3b6f963da014e56fa4a20c8d89a263824" translate="yes" xml:space="preserve">
          <source>The pattern. No tilde expansion or parameter substitution is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a9989827939e72bcdf9a16721a004e50af07e0" translate="yes" xml:space="preserve">
          <source>The percent change in brighness (-100 thru +100).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3828a77b4326cd27430635f7985ecec5e6d9b59" translate="yes" xml:space="preserve">
          <source>The percent change in hue (-100 thru +100)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5206f5a60a2f01210be348e157350fa65b2baac2" translate="yes" xml:space="preserve">
          <source>The percent change in saturation (-100 thru +100)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193c7846a8dae38af233e97f056ffc03fd341a27" translate="yes" xml:space="preserve">
          <source>The percent sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82cc8da28b23fe9d52da5743acf4f61a1d63aba" translate="yes" xml:space="preserve">
          <source>The percentile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46aee288c1dee86a8595e59f4ce0104203630a9" translate="yes" xml:space="preserve">
          <source>The permissions that you wish to assign to your memory segment, those are the same as permission for a file. Permissions need to be passed in octal form, like for example &lt;em&gt;0644&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1eac0307d5ba39ce385644fa0761d393cf2ea1c" translate="yes" xml:space="preserve">
          <source>The persistence of &lt;strong&gt;&lt;code&gt;SOAP_PERSISTENCE_SESSION&lt;/code&gt;&lt;/strong&gt; makes only objects of the given class persistent, but not the class static data. In this case, use &lt;var&gt;&lt;var&gt;$this-&amp;gt;bar&lt;/var&gt;&lt;/var&gt; instead of self::$bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b39eb77b805f090204534961695f1df6e73be9a" translate="yes" xml:space="preserve">
          <source>The php_user_filter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd1758cf76ba8cacb77fd3d0b37fd3250b145bc" translate="yes" xml:space="preserve">
          <source>The pid of the process that received the last message from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eb9ca6ea76720b5bc105220a3b714dcbaa73bb" translate="yes" xml:space="preserve">
          <source>The pid of the process that sent the last message to the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fefdfef9afaafe8442db9cd9ea337fa58b6c8b3" translate="yes" xml:space="preserve">
          <source>The pixel storage method. Refer to this list of &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.pixel&quot;&gt;pixel constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7433ba7e7a3d0a08cacc57f34b6516ae822a00c" translate="yes" xml:space="preserve">
          <source>The plaintext message data to be encrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc7ea469e142762f37730a7b6217403e7862850" translate="yes" xml:space="preserve">
          <source>The plural message ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9325219c601d8f1102ace1096d082a3f059366" translate="yes" xml:space="preserve">
          <source>The plural version of &lt;a href=&quot;function.gettext&quot;&gt;gettext()&lt;/a&gt;. Some languages have more than one form for plural messages dependent on the count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684670da01d6e1f99b459a2cd175de3b58db5ea4" translate="yes" xml:space="preserve">
          <source>The plus sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a052309b500a59e11c9061011cfffa1302870" translate="yes" xml:space="preserve">
          <source>The points are relative to the &lt;em&gt;text&lt;/em&gt; regardless of the &lt;code&gt;angle&lt;/code&gt;, so &quot;upper left&quot; means in the top left-hand corner seeing the text horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bf7ef96c19f856219f0bf1706bd237c7dd9f63" translate="yes" xml:space="preserve">
          <source>The polaroid angle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4c740282f46609b14eedfef80accf2d1b0f667" translate="yes" xml:space="preserve">
          <source>The polaroid properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa679413471c3d316f37af7bbe237737e7d8b646" translate="yes" xml:space="preserve">
          <source>The population count of &lt;code&gt;a&lt;/code&gt;, as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d0a97df63b765b88da05a33263a4a885d6f930" translate="yes" xml:space="preserve">
          <source>The port being used on the user's machine to communicate with the web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4670dd1b45a5f1c4bdf1cc8bc47418cd0b2498d4" translate="yes" xml:space="preserve">
          <source>The port number of the proxy to connect to. This port number can also be set in &lt;strong&gt;&lt;code&gt;CURLOPT_PROXY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd89f1edec98a16c8950e85297f4364193be5c3" translate="yes" xml:space="preserve">
          <source>The port number to listen on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f727285f6c5ea95df808ab5b0efc8845bca251" translate="yes" xml:space="preserve">
          <source>The port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cf168ade70e0468a28ec473916f0a28469feaf" translate="yes" xml:space="preserve">
          <source>The port number. This can be omitted and skipped with &lt;em&gt;-1&lt;/em&gt; for transports that do not use ports, such as &lt;em&gt;unix://&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954bfc4fe2a5af53712cedde2bbcd7ffa2e75d42" translate="yes" xml:space="preserve">
          <source>The port on the server machine being used by the web server for communication. For default setups, this will be '&lt;em&gt;80&lt;/em&gt;'; using SSL, for instance, will change this to whatever your defined secure HTTP port is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8f1d2a9c94ac3cb933c8779deed55548f8de79" translate="yes" xml:space="preserve">
          <source>The port on which memcache is running. Usually, this is &lt;em&gt;11211&lt;/em&gt;. As of version 2.0.0b1, set this parameter to &lt;em&gt;0&lt;/em&gt; when using UNIX domain sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1a1b9719095181eadb88f82d8df0d75d27a1b4" translate="yes" xml:space="preserve">
          <source>The port on which to listen on all interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d082f661ec18211418de1c4aba6e6bdae166f5" translate="yes" xml:space="preserve">
          <source>The port to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcf902ddde62962dd5c52a6b1a26c6fc7bce552" translate="yes" xml:space="preserve">
          <source>The port to connect to. Not used when using LDAP URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec75f720c6130748274456b7d58c921a3270e54e" translate="yes" xml:space="preserve">
          <source>The position at which padding will take place. See pad position constants for possible argument values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dcbbc65273b2093588b077ff131e5fe7cc79a7" translate="yes" xml:space="preserve">
          <source>The position in &lt;code&gt;haystack&lt;/code&gt; to start searching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7dcddf4abc7bc491425d9c73dad4d212b783ad" translate="yes" xml:space="preserve">
          <source>The position in &lt;code&gt;haystack&lt;/code&gt; to start searching. A negative offset counts from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4456bf84df215f0439ace71fe5e6686f48035156" translate="yes" xml:space="preserve">
          <source>The position in &lt;code&gt;subject&lt;/code&gt; to start searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc81a6f9f1b97c7bf8d623a46d8230fc0670954b" translate="yes" xml:space="preserve">
          <source>The position in the remote file to start downloading from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78bd4e011d46f9ade46e2e86e8f293f1b8fc08c" translate="yes" xml:space="preserve">
          <source>The position in the remote file to start uploading to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0ef00999dffda7b5f456f867d01e5d4f32a8dc" translate="yes" xml:space="preserve">
          <source>The position of the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df96e4523e7266bd1bc7c70954ec93838b6cf73" translate="yes" xml:space="preserve">
          <source>The position of the file pointer or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369062a6e1701b70c248d1ab2c14929fccaf62fa" translate="yes" xml:space="preserve">
          <source>The position of the parameter, left to right, starting at position #0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401878438e690dcc339309f53bc61923164a7a96" translate="yes" xml:space="preserve">
          <source>The position to seek to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cc9a609c773c994d1ed81c5a90afac5a388815" translate="yes" xml:space="preserve">
          <source>The position to set the iterator to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7385d4cc25d4fa91eb099dd5310f6fe0d4fbc1a2" translate="yes" xml:space="preserve">
          <source>The position to set. If it is negative, it counts from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7820e10b428be2900edc372eb34b08cd2e79844c" translate="yes" xml:space="preserve">
          <source>The positive power to raise the &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c1d43550943e4e4d5d214f6889268c1467ead" translate="yes" xml:space="preserve">
          <source>The positive root to take of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5951745a4e21bd5b2600e1f5df752f010e4513df" translate="yes" xml:space="preserve">
          <source>The possible &lt;code&gt;options&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb4b1f0ed44ba8b9d0df9de6f00f6afc89d69e9" translate="yes" xml:space="preserve">
          <source>The possible value of 4 was added to &lt;code&gt;message_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575ddb6ca7af39a4d7cf165dab82c9808e6258d9" translate="yes" xml:space="preserve">
          <source>The power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa7c5ae97a495d4904d9442046346913998d722" translate="yes" xml:space="preserve">
          <source>The power of regular expressions comes from the ability to include alternatives and repetitions in the pattern. These are encoded in the pattern by the use of &lt;em&gt;meta-characters&lt;/em&gt;, which do not stand for themselves but instead are interpreted in some special way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0956de1ad427d94720170c1fa7a304bd89558ec6" translate="yes" xml:space="preserve">
          <source>The precedence of an operator specifies how &quot;tightly&quot; it binds two expressions together. For example, in the expression &lt;em&gt;1 + 5 * 3&lt;/em&gt;, the answer is &lt;em&gt;16&lt;/em&gt; and not &lt;em&gt;18&lt;/em&gt; because the multiplication (&quot;*&quot;) operator has a higher precedence than the addition (&quot;+&quot;) operator. Parentheses may be used to force precedence, if necessary. For instance: &lt;em&gt;(1 + 5) * 3&lt;/em&gt; evaluates to &lt;em&gt;18&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68fde32e721119649aa9356fc4bfd83944166b9" translate="yes" xml:space="preserve">
          <source>The precise effect of &quot;&lt;em&gt;\cx&lt;/em&gt;&quot; is as follows: if &quot;&lt;em&gt;x&lt;/em&gt;&quot; is a lower case letter, it is converted to upper case. Then bit 6 of the character (hex 40) is inverted. Thus &quot;&lt;em&gt;\cz&lt;/em&gt;&quot; becomes hex 1A, but &quot;&lt;em&gt;\c{&lt;/em&gt;&quot; becomes hex 3B, while &quot;&lt;em&gt;\c;&lt;/em&gt;&quot; becomes hex 7B.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed504fc7bb21b64616d3742f612dcf47dc1ed37" translate="yes" xml:space="preserve">
          <source>The precision for types of variable precision, &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; for other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205299d241090e747b91586619601432c06e9335" translate="yes" xml:space="preserve">
          <source>The prefix is a string used to reference the namespace within an XML object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4a3c2aea86c1e60a9321959045b0326470c736" translate="yes" xml:space="preserve">
          <source>The prefix of the generated temporary filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f999729d110aa12b1ac4a22c885394709123358" translate="yes" xml:space="preserve">
          <source>The prefix of the namespace associated with the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac70c8700403ed3bf6f2628b7226840a96a47bc" translate="yes" xml:space="preserve">
          <source>The prefix of the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1c470ae420c72c686ad935a7f2ba9c9bfea4c2" translate="yes" xml:space="preserve">
          <source>The prefix string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d078274998a14fbb071c96c80aca2d2d09720810" translate="yes" xml:space="preserve">
          <source>The prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe17219e7bf0df60b94da753cad749eeef762677" translate="yes" xml:space="preserve">
          <source>The prepared query handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08152babdd2097a6dcf283ce3b7dd96989262197" translate="yes" xml:space="preserve">
          <source>The previous exception used for the exception chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c041883a7a2b12175a6114aa40aafc09c14e0490" translate="yes" xml:space="preserve">
          <source>The previous options. If &lt;code&gt;options&lt;/code&gt; is omitted, it returns the &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; that describes the current options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0672337389a412106d5767ee407cf24b0105bac0" translate="yes" xml:space="preserve">
          <source>The previous throwable used for the exception chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0826c7e891e0100e02f681a7e52c9a7d77e062" translate="yes" xml:space="preserve">
          <source>The previous verbosity level: &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_TERSE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_DEFAULT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_VERBOSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0293e061738f83eab69cc6c19edf7367b696a264" translate="yes" xml:space="preserve">
          <source>The primary advantage of &lt;strong&gt;pg_query_params()&lt;/strong&gt; over &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; is that parameter values may be separated from the &lt;code&gt;query&lt;/code&gt; string, thus avoiding the need for tedious and error-prone quoting and escaping. Unlike &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt;, &lt;strong&gt;pg_query_params()&lt;/strong&gt; allows at most one SQL command in the given string. (There can be semicolons in it, but not more than one nonempty command.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfb4f75d254dbbf387b06e8bdfe17301f9556bd" translate="yes" xml:space="preserve">
          <source>The primary advantage of generators is their simplicity. Much less boilerplate code has to be written compared to implementing an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; class, and the code is generally much more readable. For example, the following function and class are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878cb8bc22258ff52d4992be9c030260f76d3fb7" translate="yes" xml:space="preserve">
          <source>The primary key owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ba697500556ebf9f5ce74853249f8395921b01" translate="yes" xml:space="preserve">
          <source>The primary key qualifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b57a33afd18109dbe1f55be63894f620dd3e8e" translate="yes" xml:space="preserve">
          <source>The primary key table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75189c531bf3c8348f4f2d503ab5fc0dcd98822" translate="yes" xml:space="preserve">
          <source>The priority associated with the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21b3cab36a7f6411f4ff6c26ce438c6f25100fd" translate="yes" xml:space="preserve">
          <source>The priority of the events used to implement the buffer event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e9ed249e9fa9e12c5c14774d56d38389d58fbe" translate="yes" xml:space="preserve">
          <source>The priority of the first node being compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa67b22522be1d505ad0df7fd132e79d8d3d6108" translate="yes" xml:space="preserve">
          <source>The priority of the second node being compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbc683066f9962dea6ac126262c4311e8d93f07" translate="yes" xml:space="preserve">
          <source>The private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06955bfe63719107b27968c1bccb5cd01afd873" translate="yes" xml:space="preserve">
          <source>The probability density at &lt;code&gt;x&lt;/code&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb919221b646ef213b50b4d4df998c57d8432eb" translate="yes" xml:space="preserve">
          <source>The probability mass at &lt;code&gt;n1&lt;/code&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9384cfae391dbc703ba1b8ef03ea6931e6cae672" translate="yes" xml:space="preserve">
          <source>The probability mass at &lt;code&gt;x&lt;/code&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77f45f5c686be12247e66742bc13be6327afaf7" translate="yes" xml:space="preserve">
          <source>The probability of an event in each trial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5385f49c2f24ac332570a27ac2ee1be3126e6809" translate="yes" xml:space="preserve">
          <source>The proc. This parameter accepts the following search patterns: &quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f897a83341f9edfb4a710938f9c77a5ba51cf25c" translate="yes" xml:space="preserve">
          <source>The process group id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3febbcf68ccabb75706f5ad8163e4ebaad0ef516" translate="yes" xml:space="preserve">
          <source>The process id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb011da943a6720eb915f7c73d873d81a032acd" translate="yes" xml:space="preserve">
          <source>The process identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933dc2a485c0ee710e10e192aa66e32b357ecadf" translate="yes" xml:space="preserve">
          <source>The process identifier. If set to 0, the current process is assumed. If an invalid &lt;code&gt;pid&lt;/code&gt; is specified, then &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned and an error is set which can be checked with &lt;a href=&quot;function.posix-get-last-error&quot;&gt;posix_get_last_error()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8977d758fb7176a43806ae5d9750d2c3d1ebb61b" translate="yes" xml:space="preserve">
          <source>The product of an empty array is now 1, when before this function would return 0 for an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5e26e3e9b5f85ad2ff6c4e1069ec8d5c9a025b" translate="yes" xml:space="preserve">
          <source>The profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7975d32583fca9b45ef6f5d2847b4e46431e2b92" translate="yes" xml:space="preserve">
          <source>The programmer should always implement the run method for objects that are intended for execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bdc21840aa9c127f4ffcb75292c9ab83768cef" translate="yes" xml:space="preserve">
          <source>The programmer should not ordinarily kill Threads by force</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8096cbec7e81a540e9a9e714b8ecbb4c549642a4" translate="yes" xml:space="preserve">
          <source>The progress function to call. It should return true if image processing should continue, or false if it should be cancelled. The offset parameter indicates the progress and the span parameter indicates the total amount of work needed to be done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c0f4d96d1b6ce5e7b96c1d234b1f3b62dd6d47" translate="yes" xml:space="preserve">
          <source>The properties APIs are intended to reflect Unicode properties as defined in the Unicode Character Database (UCD) and Unicode Technical Reports (UTR). For details about the properties see &lt;a href=&quot;http://www.unicode.org/ucd/&quot;&gt;&amp;raquo; http://www.unicode.org/ucd/&lt;/a&gt;. For names of Unicode properties see the UCD file PropertyAliases.txt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d783d812d0f44dcc5f45e472d20d825856b631d6" translate="yes" xml:space="preserve">
          <source>The property doc comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40bec4bbbcd57deea101397eb24149bb6111aa3" translate="yes" xml:space="preserve">
          <source>The property name to be matched. The name is compared using &quot;loose matching&quot; as described in PropertyAliases.txt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04dcd4d9e3fdfb316a49d102b3473f76bd1e0d6" translate="yes" xml:space="preserve">
          <source>The property name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9776b2f8fda0f1cf6b2dd85322ce8a46b6a6ca2" translate="yes" xml:space="preserve">
          <source>The property names represented by &lt;em&gt;xx&lt;/em&gt; above are limited to the Unicode general category properties. Each character has exactly one such property, specified by a two-letter abbreviation. For compatibility with Perl, negation can be specified by including a circumflex between the opening brace and the property name. For example, &lt;em&gt;\p{^Lu}&lt;/em&gt; is the same as &lt;em&gt;\P{Lu}&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c5834f81ef4e82ee2ce75fb9ef41342ffc3eef" translate="yes" xml:space="preserve">
          <source>The protocol family to be used: &lt;strong&gt;&lt;code&gt;STREAM_PF_INET&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_PF_INET6&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;STREAM_PF_UNIX&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb9363c263447472822e2c9331891c08bc89560" translate="yes" xml:space="preserve">
          <source>The protocol name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7a1d3cc86f6d16b2bed54f944e3b1fb8fe8aa1" translate="yes" xml:space="preserve">
          <source>The protocol number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d87311430335252d8234dd045b4d0da6a035de3" translate="yes" xml:space="preserve">
          <source>The protocol to be used: &lt;strong&gt;&lt;code&gt;STREAM_IPPROTO_ICMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_IPPROTO_IP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_IPPROTO_RAW&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_IPPROTO_TCP&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;STREAM_IPPROTO_UDP&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db9eef027db81e819fe91dc0ab506fcdfacf79b" translate="yes" xml:space="preserve">
          <source>The proxy authentication service name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000c6170b65e86eba021bc92bea1a95f92298517" translate="yes" xml:space="preserve">
          <source>The pseudo-variable &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is available inside any class method when that method is called from within an object context. &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is a reference to the calling object (usually the object to which the method belongs, but possibly another object, if the method is called &lt;a href=&quot;language.oop5.static&quot;&gt;statically&lt;/a&gt; from the context of a secondary object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0abaecfe6c2e7432bc254fcea546bdc54374b35" translate="yes" xml:space="preserve">
          <source>The pseudo-variable &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is available when a method is called from within an object context. &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is a reference to the calling object (usually the object to which the method belongs, but possibly another object, if the method is called &lt;a href=&quot;language.oop5.static&quot;&gt;statically&lt;/a&gt; from the context of a secondary object). As of PHP 7.0.0 calling a non-static method statically from an incompatible context results in $this being undefined inside the method. Calling a non-static method statically from an incompatible context has been deprecated as of PHP 5.6.0. As of PHP 7.0.0 calling a non-static method statically has been generally deprecated (even if called from a compatible context). Before PHP 5.6.0 such calls already triggered a strict notice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89d61286052c58d7ec10304d3875c82b39f814c" translate="yes" xml:space="preserve">
          <source>The public identifier associated with the entity if specified, and &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084fd15bde5749cac40870c17b4a07ccada3bfac" translate="yes" xml:space="preserve">
          <source>The public identifier of the external subset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b27e34781e4f6bc7a6f36a790dc355d4131d6f" translate="yes" xml:space="preserve">
          <source>The public key file needs to be in OpenSSH's format. It should look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dad9c33bcac378ceae29f34057f973ec6a3312c" translate="yes" xml:space="preserve">
          <source>The public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd47b1eb249ec4d54f431e36c858f0afdeca0589" translate="yes" xml:space="preserve">
          <source>The public properties &lt;var&gt;&lt;var&gt;recurrences&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;include_start_date&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;start&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;current&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;end&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;interval&lt;/var&gt;&lt;/var&gt; have been exposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14a0191f1085d4acbcbeb5e2c5a8f9787f59b86" translate="yes" xml:space="preserve">
          <source>The public rule sets. This is only available with rule-based formatters. This is a read-only attribute. The public rulesets are returned as a single string, with each ruleset name delimited by ';' (semicolon).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47161ca23448dd5a6a38a89a1741c7a45dafd472" translate="yes" xml:space="preserve">
          <source>The publickey subsystem allows an already connected and authenticated client to manage the list of authorized public keys stored on the target server in an implementation agnostic manner. If the remote server does not support the publickey subsystem, the &lt;strong&gt;ssh2_publickey_init()&lt;/strong&gt; function will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a902d70604f5ca0e5f460f2030dd4ac2aa8e8742" translate="yes" xml:space="preserve">
          <source>The push function is supposed to return either &lt;strong&gt;&lt;code&gt;CURL_PUSH_OK&lt;/code&gt;&lt;/strong&gt; if it can handle the push, or &lt;strong&gt;&lt;code&gt;CURL_PUSH_DENY&lt;/code&gt;&lt;/strong&gt; to reject it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb53bf20c06f46cceb429d0d8cd69e5d49adbce" translate="yes" xml:space="preserve">
          <source>The push promise headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3cd553f57802e95285d1a52fcd19d3d740c290" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute, as &lt;em&gt;prefix:tagname&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5a3bec379c7c88f6ef2e48239d9a69a4965521" translate="yes" xml:space="preserve">
          <source>The qualified name of the document element to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6d1a51d638419446bb663ec3c444d66d370704" translate="yes" xml:space="preserve">
          <source>The qualified name of the document type to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f86d63344378d1a72340691dee60175f34d372" translate="yes" xml:space="preserve">
          <source>The qualified name of the element, as &lt;em&gt;prefix:tagname&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e148dd13392934ec1306dd93fc6c07168a5f38" translate="yes" xml:space="preserve">
          <source>The qualified name of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bb7f53b2a0ee1c10f881ab7b60535832ab394d" translate="yes" xml:space="preserve">
          <source>The qualifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e380246a84646127b23ce36338de5b244f84a6ef" translate="yes" xml:space="preserve">
          <source>The quantifier {0} is permitted, causing the expression to behave as if the previous item and the quantifier were not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c794c454a0938602306ab67ac7a4ec53ccab073" translate="yes" xml:space="preserve">
          <source>The quantum value of the color element. Float if ImageMagick was compiled with HDRI, otherwise an int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db4274d047ee1ec82cfb63d32cc99136758ec90" translate="yes" xml:space="preserve">
          <source>The quantum value to set the color element to. This should be a float if ImageMagick was compiled with HDRI otherwise an int in the range 0 to Imagick::getQuantum().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb04fe99d1493d9637fd30aa0ad0c7edb644791" translate="yes" xml:space="preserve">
          <source>The query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f0b1a76afcebfd126a6cd3657b0891ab60cdd0" translate="yes" xml:space="preserve">
          <source>The query field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0c936ea29411fc6e7a886322045609c575e96e" translate="yes" xml:space="preserve">
          <source>The query pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66be9275dde7b6cb8aa5fad40961a0905403f052" translate="yes" xml:space="preserve">
          <source>The query string can be passed to the included file but &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.get&quot;&gt;$_GET&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; is copied from the parent script and only &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['QUERY_STRING']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; is filled with the passed query string. The query string may only be passed when using Apache 2. The requested file will not be listed in the Apache access log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e627d35babb4c6238051ecfc1ac39cd0fd8864b" translate="yes" xml:space="preserve">
          <source>The query string statement being prepared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c934d923da91eff7c45f01cb4cbde08963776a" translate="yes" xml:space="preserve">
          <source>The query string, if any, via which the page was accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d907e8f257ae592a07831d1686f1821af918c238" translate="yes" xml:space="preserve">
          <source>The query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d54080bbf9c743c71bf8e7bf9ae7a919bbab16" translate="yes" xml:space="preserve">
          <source>The query, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f23ef1aa7e6bfab544595f5662b701337188eb1" translate="yes" xml:space="preserve">
          <source>The query, as a string. If this parameter is omitted, then the constructor behaves identically to &lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli_stmt_init()&lt;/a&gt;, if provided, then it behaves as per &lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cd09cd062bdf6af410dec27e57ae87181b0bae" translate="yes" xml:space="preserve">
          <source>The query, as a string. It must consist of a single SQL statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d12d8bcc293ab914f31b482f8cc1efdab7b8950" translate="yes" xml:space="preserve">
          <source>The radian equivalent of &lt;code&gt;number&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991e436db3ffc5a7a605fdcee7f7469565e4695a" translate="yes" xml:space="preserve">
          <source>The radius of the Gaussian, in pixels, not counting the center pixel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1795754965f79cbdfd61c477352eff256107f52d" translate="yes" xml:space="preserve">
          <source>The radius of the Gaussian, in pixels, not counting the center pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e249ff7815fb4aff3ceb5cffc4e61f0f87254940" translate="yes" xml:space="preserve">
          <source>The radius of the Gaussian, in pixels, not counting the center pixel. Provide a value of 0 and the radius will be chosen automagically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d43f674df33c86fc4e1ad3524d8db867c67fabf" translate="yes" xml:space="preserve">
          <source>The radius of the Gaussian, in pixels, not counting the center pixel. Use 0 for auto-select.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f224ff6b7bf6952972a96fdad812ae96f76494" translate="yes" xml:space="preserve">
          <source>The radius of the circular neighborhood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1830e81e280177cee5e0f9e5b9154759a92b9be9" translate="yes" xml:space="preserve">
          <source>The radius of the effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b118ff542644f6b735e2eda3535d5b82d904056d" translate="yes" xml:space="preserve">
          <source>The radius of the implode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2740f42c57df07e5d53bb358e9678dda2bd2e6d" translate="yes" xml:space="preserve">
          <source>The radius of the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c935905aa7695edb8fcd9a045b87fbbb6245b3" translate="yes" xml:space="preserve">
          <source>The radius of the pixel neighborhood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e7a8bc660f1ea5e6030cfdf580d9ae8512d5f4" translate="yes" xml:space="preserve">
          <source>The radix (defaults to &lt;em&gt;10&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcc87dbde26788d88375ddfad07c1f91247ea6e" translate="yes" xml:space="preserve">
          <source>The radix argument is valid if it is greater than or equal to &lt;em&gt;2&lt;/em&gt; and less than or equal to &lt;em&gt;36&lt;/em&gt;. The digit argument is valid if &lt;em&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5747acbb08ab33d12121f978f9fa34174b555fd8" translate="yes" xml:space="preserve">
          <source>The raw request sent to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7faf573f061c06d99d19d10878c300f60e002eb" translate="yes" xml:space="preserve">
          <source>The read/write position of the stream should be updated according to the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;whence&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebc5ca0b7d96b647de9b4693964e63b4de7e1cb" translate="yes" xml:space="preserve">
          <source>The reason for the two different variations of &quot;and&quot; and &quot;or&quot; operators is that they operate at different precedences. (See &lt;a href=&quot;language.operators.precedence&quot;&gt;Operator Precedence&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a874a8897f0b1249cf6b963fc4ba55f364f28be9" translate="yes" xml:space="preserve">
          <source>The received message will be stored in &lt;code&gt;message&lt;/code&gt;, unless there were errors receiving the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353f74ade1a30bafe0b09e2f939b130117113483" translate="yes" xml:space="preserve">
          <source>The receiver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33a6fdf5595b6255a61e58aab88b7ba9749a803" translate="yes" xml:space="preserve">
          <source>The receivers specified in &lt;code&gt;bcc&lt;/code&gt; will get the mail, but are excluded from the headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533de451fc62a7c850ba1d9564a3688e6b392ec6" translate="yes" xml:space="preserve">
          <source>The recipient name, for display purpose. If this part is not set for a recipient, this key will hold the same value as &lt;em&gt;address&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cb0c1f9b0d97fd08fa6f62eaccbe66fbcdad4f" translate="yes" xml:space="preserve">
          <source>The record in the DNS namespace to which the rest of the associated data refers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0991c540950904e90e2ef145496c40313e7a7c74" translate="yes" xml:space="preserve">
          <source>The recursion depth. See &lt;a href=&quot;ev.depth&quot;&gt;Ev::depth()&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d9a44eb6057006d6134da771062ce06777fc07" translate="yes" xml:space="preserve">
          <source>The recursive iterator to apply this regex filter to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b4f6f660f8bc28d707becb649187a45f6ceab9" translate="yes" xml:space="preserve">
          <source>The recursive iterator to be filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b6d21549d0789eaa24bd3d16990a92d1e961d8" translate="yes" xml:space="preserve">
          <source>The red primary x-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8532aad2b3c51e9594755145a0b3aa3c4d5e20d4" translate="yes" xml:space="preserve">
          <source>The red primary y-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d399a8a454d45ba1eb1934e372c788c545104913" translate="yes" xml:space="preserve">
          <source>The redefined method can be &lt;strong&gt;&lt;code&gt;RUNKIT_ACC_PUBLIC&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;RUNKIT_ACC_PROTECTED&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;RUNKIT_ACC_PRIVATE&lt;/code&gt;&lt;/strong&gt; optionally combined via bitwise OR with &lt;strong&gt;&lt;code&gt;RUNKIT_ACC_STATIC&lt;/code&gt;&lt;/strong&gt; (since 1.0.1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c41376bd75536dcb6768adcb75e32378dd97cf" translate="yes" xml:space="preserve">
          <source>The reference counter of the returned object will be incremented by one to protect internal structures against premature destruction when the method is called from a user callback. So the &lt;a href=&quot;class.eventbufferevent&quot;&gt;EventBufferEvent&lt;/a&gt; object should be freed explicitly with &lt;a href=&quot;eventbufferevent.free&quot;&gt;EventBufferEvent::free()&lt;/a&gt; method. Otherwise memory will leak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58ed2ddbfa65bb941268b4b31b39a86d246ce60" translate="yes" xml:space="preserve">
          <source>The reference image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59668cc0ecb441b231dc3497c1ab8045a95aeca5" translate="yes" xml:space="preserve">
          <source>The reference node. If not supplied, &lt;code&gt;newnode&lt;/code&gt; is appended to the children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70090663559ba549053a17b0ec13c741742da7c" translate="yes" xml:space="preserve">
          <source>The reflection class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc54a752c0db5fdaddad462b4db360e10690998e" translate="yes" xml:space="preserve">
          <source>The reflection to export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea18d6151dd304fe1b27fe9a6eee8892dc5e689" translate="yes" xml:space="preserve">
          <source>The region subtag for the locale or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if not present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67689717370e6a3c80bc970e8daa36630513355e" translate="yes" xml:space="preserve">
          <source>The regular expression flags. See &lt;a href=&quot;regexiterator.construct&quot;&gt;RegexIterator::__construct()&lt;/a&gt; for an overview of available flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5368e04a5e8125b4105c7c930372e85e9f3d8241" translate="yes" xml:space="preserve">
          <source>The regular expression flags. These flags depend on the operation mode parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ac9a2a69ab1495012e5dfe849172be19d84ed7" translate="yes" xml:space="preserve">
          <source>The regular expression for fragmenting. This could be used to extract sentences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7968a2059eb096a9ad928a6d8fa459e62e306418" translate="yes" xml:space="preserve">
          <source>The regular expression pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4621c0015608e3a0446b947c552bca9b66a0ea" translate="yes" xml:space="preserve">
          <source>The regular expression pattern. Multibyte characters may be used. The case will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc9bc9795dc407505351f0b53133bd9ccb78001" translate="yes" xml:space="preserve">
          <source>The regular expression to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2803f331dcafef9f3a673a272aed4252104634a2" translate="yes" xml:space="preserve">
          <source>The related &lt;a href=&quot;class.oauth#oauth.props.debug&quot;&gt;debug&lt;/a&gt; property was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702c4980253251aa8bc92c2986cce955198f8e26" translate="yes" xml:space="preserve">
          <source>The remainder, as a GMP number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a36e8c37780c097b72a89bb285af16fff120f1f" translate="yes" xml:space="preserve">
          <source>The remote file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e778f7149c00699d451a757cb8f9eb7e9a287d29" translate="yes" xml:space="preserve">
          <source>The remote file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e58352d825bb824b5b554932d30acf95adeecb" translate="yes" xml:space="preserve">
          <source>The remote socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf391ff56d610348b408d294627652bd7616ec9" translate="yes" xml:space="preserve">
          <source>The removed child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cd097174c3dc1578b882fa72c0d5fe14eb4fe5" translate="yes" xml:space="preserve">
          <source>The removed last value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6b7ec6b8f7e06e6249c525412c330dd3b3114f" translate="yes" xml:space="preserve">
          <source>The removed value which was at the front of the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d54ee23785fc1af7bd9fc987492d733d81a451" translate="yes" xml:space="preserve">
          <source>The removed value which was at the top of the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a9c16e6cc5e173b5ff73cf40efaa0d708d3877" translate="yes" xml:space="preserve">
          <source>The replace Imagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6ca0ed06917422a3d97659ca91f83beeefba78" translate="yes" xml:space="preserve">
          <source>The replacement color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e465c2dfa9eb8b531fb0042cb32360ad8e8822" translate="yes" xml:space="preserve">
          <source>The replacement string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6e7b5bccee3a84564f706dc2f389ac5d140bb6" translate="yes" xml:space="preserve">
          <source>The replacement text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb66be59a4390a3fad87178eb526d4e0b2e4a13" translate="yes" xml:space="preserve">
          <source>The replacement value that replaces found &lt;code&gt;search&lt;/code&gt; values. An array may be used to designate multiple replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab6512dc77da34079e9207abbd9236c82258b4" translate="yes" xml:space="preserve">
          <source>The request URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff43ef8eeccbb0ae026f509d484a9949b1008ee" translate="yes" xml:space="preserve">
          <source>The request group resource returned by &lt;a href=&quot;function.eio-grp&quot;&gt;eio_grp()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d29f53138026699c38e6ca94bdb5c3767b0dbd" translate="yes" xml:space="preserve">
          <source>The request group resource returned by &lt;a href=&quot;function.eio-grp&quot;&gt;eio_grp()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadacc3c8736be0f234d3fa4915e3958a113bc7f" translate="yes" xml:space="preserve">
          <source>The request group resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0c446dafdbd7a9eeecbf5f9a537e103296705e" translate="yes" xml:space="preserve">
          <source>The request priority: &lt;strong&gt;&lt;code&gt;EIO_PRI_DEFAULT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;EIO_PRI_MIN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;EIO_PRI_MAX&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;. If &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; passed, &lt;code&gt;pri&lt;/code&gt; internally is set to &lt;strong&gt;&lt;code&gt;EIO_PRI_DEFAULT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c5764e08012c425e7c4532015e32d962c37c08" translate="yes" xml:space="preserve">
          <source>The request resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff6b13e30b350f4749fad821817c2ca7d67ba13" translate="yes" xml:space="preserve">
          <source>The required client encoding. One of &lt;em&gt;SQL_ASCII&lt;/em&gt;, &lt;em&gt;EUC_JP&lt;/em&gt;, &lt;em&gt;EUC_CN&lt;/em&gt;, &lt;em&gt;EUC_KR&lt;/em&gt;, &lt;em&gt;EUC_TW&lt;/em&gt;, &lt;em&gt;UNICODE&lt;/em&gt;, &lt;em&gt;MULE_INTERNAL&lt;/em&gt;, &lt;em&gt;LATINX&lt;/em&gt; (X=1...9), &lt;em&gt;KOI8&lt;/em&gt;, &lt;em&gt;WIN&lt;/em&gt;, &lt;em&gt;ALT&lt;/em&gt;, &lt;em&gt;SJIS&lt;/em&gt;, &lt;em&gt;BIG5&lt;/em&gt; or &lt;em&gt;WIN1250&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00b4e45d16bdd4fc0cfa444a08c5c9f9cbc78ab" translate="yes" xml:space="preserve">
          <source>The required parameter to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055271b15f075ce23d337facd91dc837050b60e0" translate="yes" xml:space="preserve">
          <source>The required parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822da65ddb84773fd08cab1d33f64945262610fe" translate="yes" xml:space="preserve">
          <source>The required verbosity: &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_TERSE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_DEFAULT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;PGSQL_ERRORS_VERBOSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c8a6c9618a2ccc272112568a694d0d25172a25" translate="yes" xml:space="preserve">
          <source>The resolution is only used as meta information when images are read from and written to formats supporting this kind of information (curently PNG and JPEG). It does not affect any drawing operations. The default resolution for new images is 96 DPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725ff0fa4d93ef4661278c0b36f334cf0a619650" translate="yes" xml:space="preserve">
          <source>The resource limit. The unit depends on the type of the resource being limited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9704e951aac19dd8f7ee2a5478b5ce1895de881b" translate="yes" xml:space="preserve">
          <source>The resource-type documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a166ea8e052222ae0d28390200923a844ad38a" translate="yes" xml:space="preserve">
          <source>The response in PHP serialized format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71ac599faf76ed33c07626824c3d3e61bf75148" translate="yes" xml:space="preserve">
          <source>The response message from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4007c46c315a6a37c34012a3a443ae2c67a4a352" translate="yes" xml:space="preserve">
          <source>The response message from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc4fe57ae5a0b1f1defc011014f525aab0170a0" translate="yes" xml:space="preserve">
          <source>The response of the exception which occurred, if any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8864392414a13fc99c45c4d8d725c5c174fa638" translate="yes" xml:space="preserve">
          <source>The result &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; that can be of any type since it will be converted to type array. The array will contain the column values starting at array index 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d964a4be594db5917a7ce32e291124af2df63" translate="yes" xml:space="preserve">
          <source>The result &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if no more results are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b4c1fccb49b7cd73f03612e2acca06e04c168f" translate="yes" xml:space="preserve">
          <source>The result &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f9445d799b4bf0d648f22718acd642cf8102b5" translate="yes" xml:space="preserve">
          <source>The result array contains the following items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a06d01837f6721558725b3f177a5462d99f5817" translate="yes" xml:space="preserve">
          <source>The result as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7b6cf780b91ad920c87e99f6e5c55b2da4fe86" translate="yes" xml:space="preserve">
          <source>The result callback or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72fd80585abc37f98ceb6b3aee97916f0f934b6" translate="yes" xml:space="preserve">
          <source>The result handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc339d6dafeb448bc6d9d7f7bdb6e883866f7e8" translate="yes" xml:space="preserve">
          <source>The result id &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;, from &lt;a href=&quot;function.odbc-prepare&quot;&gt;odbc_prepare()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4203f3df223e9d888a86b6d28017abe8b045dec" translate="yes" xml:space="preserve">
          <source>The result identifier returned by &lt;a href=&quot;function.odbc-exec&quot;&gt;odbc_exec()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81395099e2cfab58089b23eb720aae831805e57f" translate="yes" xml:space="preserve">
          <source>The result identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8112e2b82eac28b1dd412af2dae5507c5554071a" translate="yes" xml:space="preserve">
          <source>The result of adding all given values to the deque, effectively the same as adding the values to a copy, then returning that copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a5b7e9596cd96636b59070f6b37abdb3bc2624" translate="yes" xml:space="preserve">
          <source>The result of adding all given values to the sequence, effectively the same as adding the values to a copy, then returning that copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a2afe08dd21981dac044c08a10421a8831b347" translate="yes" xml:space="preserve">
          <source>The result of adding all given values to the set, effectively the same as adding the values to a copy, then returning that copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95ff870d240656bf463d169d7e365e91b36764b" translate="yes" xml:space="preserve">
          <source>The result of adding all given values to the vector, effectively the same as adding the values to a copy, then returning that copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a59fec207ef0d1a46dbfa8aa25291bc212a91b9" translate="yes" xml:space="preserve">
          <source>The result of applying a &lt;code&gt;callback&lt;/code&gt; to each value in the deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835cf5e89f8aacf7217043099db39c18c5acb12b" translate="yes" xml:space="preserve">
          <source>The result of applying a &lt;code&gt;callback&lt;/code&gt; to each value in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4867b95e71b78253daac32d40fc2cf1515f76da" translate="yes" xml:space="preserve">
          <source>The result of applying a &lt;code&gt;callback&lt;/code&gt; to each value in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d83deff8c30f57d39a713e82ff0dc4c45c8fa9" translate="yes" xml:space="preserve">
          <source>The result of applying a &lt;code&gt;callback&lt;/code&gt; to each value in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d6acdbd6054a58157f4d5ad09dd2008d15054b" translate="yes" xml:space="preserve">
          <source>The result of associating all keys of a given &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; with their corresponding values, combined with the current instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5b1dd0214fd0433863d785aa1ea6ac584478f3" translate="yes" xml:space="preserve">
          <source>The result of removing all keys from the current instance that are present in a given &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c03db8a61f4617c569ce4fe6ed069f9c98abd54" translate="yes" xml:space="preserve">
          <source>The result of the modulo operator &lt;em&gt;%&lt;/em&gt; has the same sign as the dividend &amp;mdash; that is, the result of &lt;em&gt;$a % $b&lt;/em&gt; will have the same sign as &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa8e78b586fe74627dfbb40dd1f21675b73b092" translate="yes" xml:space="preserve">
          <source>The result of the subtraction, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce86c0deed3f4e5b9ec05ddeee9425fad823c0bc" translate="yes" xml:space="preserve">
          <source>The result of the transformation as a string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958f8b098345a816c82217433fbd2f9666986601" translate="yes" xml:space="preserve">
          <source>The result resource from &lt;a href=&quot;function.odbc-exec&quot;&gt;odbc_exec()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1407d8baa11e3e8ad06ccf4b5ce62cf3f79d1378" translate="yes" xml:space="preserve">
          <source>The result rounding is defined by the &lt;code&gt;round&lt;/code&gt;, which can have the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8753ffa4658bf4edf400eb7e4312fcfe8af8fe2" translate="yes" xml:space="preserve">
          <source>The result set has the following columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffdd4e48fd07e29829432d0737930386b1779a8" translate="yes" xml:space="preserve">
          <source>The result set is ordered by DATA_TYPE and TYPE_NAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba278cc1c036163ea2f64f93e04ce777e49154d" translate="yes" xml:space="preserve">
          <source>The result set is ordered by NON_UNIQUE, TYPE, INDEX_QUALIFIER, INDEX_NAME and SEQ_IN_INDEX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9218266ef8e8fb122b21e49537ab9d410bb79d2" translate="yes" xml:space="preserve">
          <source>The result set is ordered by PROCEDURE_QUALIFIER, PROCEDURE_OWNER, PROCEDURE_NAME and COLUMN_TYPE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89e51a765ddca822353421771dc5ce945410ae8" translate="yes" xml:space="preserve">
          <source>The result set is ordered by TABLE_QUALIFIER, TABLE_OWNER and TABLE_NAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937edc5f6ff9f5c4dc27e164a4e7ca1e9d3699b7" translate="yes" xml:space="preserve">
          <source>The result set is ordered by TABLE_QUALIFIER, TABLE_SCHEM and TABLE_NAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c126fe27ba9d2b71663503ffce9a955398a83356" translate="yes" xml:space="preserve">
          <source>The result set is ordered by TABLE_TYPE, TABLE_QUALIFIER, TABLE_OWNER and TABLE_NAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c750e177bc970c3cf91ce440f9550fd9658cf0" translate="yes" xml:space="preserve">
          <source>The result set returned by &lt;strong&gt;mysqli_stmt_result_metadata()&lt;/strong&gt; contains only metadata. It does not contain any row results. The rows are obtained by using the statement handle with &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eb61cf6d41fb0c1920d43d3a68cece108a7ddd" translate="yes" xml:space="preserve">
          <source>The result set structure should be freed when you are done with it, which you can do by passing it to &lt;a href=&quot;mysqli-result.free&quot;&gt;mysqli_free_result()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ba2cc7a26b999bb2df62500f92202c71ca8261" translate="yes" xml:space="preserve">
          <source>The result string is returned. If &lt;code&gt;string&lt;/code&gt; is an array then array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6c62f31217982fa36572296727a7a5b64edc17" translate="yes" xml:space="preserve">
          <source>The resultant &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319125e1fa8619772476ab785bb212681ebe6935" translate="yes" xml:space="preserve">
          <source>The resultant &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3b1f6d8921fee37c141c1a2f6d592e205caf68" translate="yes" xml:space="preserve">
          <source>The resulting &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f11c41165cb497fa6d0605a20977aa956f5513" translate="yes" xml:space="preserve">
          <source>The resulting &lt;a href=&quot;class.domnode&quot;&gt;DOMNode&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a34ebf1d728261a94f551402b9e96b76afb7d92" translate="yes" xml:space="preserve">
          <source>The resulting array of keys is no longer shuffled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e7ef1b5295639133b5ae0e191aa371d8f3470f" translate="yes" xml:space="preserve">
          <source>The resulting binary string will be 6 bytes long and contain the byte sequence 0x12, 0x34, 0x78, 0x56, 0x41, 0x42.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32298ee364ab11c6e7aba08105b402375502dc7" translate="yes" xml:space="preserve">
          <source>The resulting data contains the appropriate headers and data structure to make a standard .gz file, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e67b906bbdad8a0044717c03b59d541e0da18e4" translate="yes" xml:space="preserve">
          <source>The retry limit. &lt;strong&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/strong&gt; means infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20bb423c6b8d891c728d2deaccaef6f3a7c4c0b" translate="yes" xml:space="preserve">
          <source>The return type declaration changed to &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfa245562ca174a1f8cb4b90ff9b2b8054876be" translate="yes" xml:space="preserve">
          <source>The return type of &lt;strong&gt;shmop_open()&lt;/strong&gt; has been changed from &lt;a href=&quot;language.types.integer&quot;&gt;int&lt;/a&gt; to &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cb5cf03ff1f0e4e7b059cc88eed98c14550ca2" translate="yes" xml:space="preserve">
          <source>The return type will be &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; unless the code point was passed as a UTF-8 &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, in which case a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4347d91ae782655c640ce7c1da72cf8524dc2085" translate="yes" xml:space="preserve">
          <source>The return value (usually &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure). Note this value is returned internally to PHP for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfd23b7f178a1a703750caa50a664976aaf3cf6" translate="yes" xml:space="preserve">
          <source>The return value from the block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad58aeccbddc68352b6c72bd47468d11da50d82" translate="yes" xml:space="preserve">
          <source>The return value from this method is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9b9e6a01fbc7f68434f12ca22526f2a170c297" translate="yes" xml:space="preserve">
          <source>The return value is a string, common values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc71d7e31961667569b6e207f0c959fa97e3b0" translate="yes" xml:space="preserve">
          <source>The return value is a unique (inotify instance wide) watch descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b41290bdce200da30333ab457a137fcd03c6c77" translate="yes" xml:space="preserve">
          <source>The return value is an array whose keys and values have the following meanings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2069ad30dc35bcf01f4016daee886d9c18e83ce" translate="yes" xml:space="preserve">
          <source>The return value is an event resource. This resource can be used to free the event handler using &lt;a href=&quot;function.ibase-free-event-handler&quot;&gt;ibase_free_event_handler()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaf6cc217e5126ec1b470b377e2b59a2b647030" translate="yes" xml:space="preserve">
          <source>The return value is cast to an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167ce186db2b21b67cb789b893cb413805206b39" translate="yes" xml:space="preserve">
          <source>The return value is numeric and can be compared to the following constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2842ec34aa025f3f547805dd70ec3ffcbb35d29d" translate="yes" xml:space="preserve">
          <source>The return value of &lt;a href=&quot;language.oop5.overloading#object.set&quot;&gt;__set()&lt;/a&gt; is ignored because of the way PHP processes the assignment operator. Similarly, &lt;a href=&quot;language.oop5.overloading#object.get&quot;&gt;__get()&lt;/a&gt; is never called when chaining assignments together like this: &lt;em&gt;&lt;div&gt;&lt;pre&gt; $a = $obj-&amp;gt;b = 8; &lt;/pre&gt;&lt;/div&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b0969f9523447f7ea2f0f1b47675f3fd61f49c" translate="yes" xml:space="preserve">
          <source>The return value of &lt;strong&gt;setlocale()&lt;/strong&gt; depends on the system that PHP is running. It returns exactly what the system &lt;em&gt;setlocale&lt;/em&gt; function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74faded7e6c5fb446783a781c686a4bc88619fed" translate="yes" xml:space="preserve">
          <source>The return value of the Callable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f2b15c49e5e982c29ac04281dcd082ee390eb9" translate="yes" xml:space="preserve">
          <source>The return value of the final callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69365650500cd4609ab42646cfb980d0e22a8a4" translate="yes" xml:space="preserve">
          <source>The return value of the previous callback, or &lt;code&gt;initial&lt;/code&gt; if it's the first iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1220e37afb790c29957fe6a0ff0fb06e0edb8fc" translate="yes" xml:space="preserve">
          <source>The return value of this function on success depends on the fetch type. In all cases, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d5736fd95ea6b1784b1bf77b5ee006d8a46a9e" translate="yes" xml:space="preserve">
          <source>The return value on failure was changed from &lt;em&gt;null&lt;/em&gt; string to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eacbd8e28e201e8a97b386f48a34f817a3cf806" translate="yes" xml:space="preserve">
          <source>The return value will be casted to &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and then evaluated. Returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10c60b4dcd5c2ea2ab51d4da27dc0f7b9493bd0" translate="yes" xml:space="preserve">
          <source>The return value will be casted to &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; if non-boolean was returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bda62ab4733cfd7a283cb65e005c7df6de7401" translate="yes" xml:space="preserve">
          <source>The return value will be casted to &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b40fd25b1d7dfbb01f2a7049d0d1e5f64e74587" translate="yes" xml:space="preserve">
          <source>The return width of the returned thumbnail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e4c4008c0ed4cbf6aa5ec4c3285116ebb03410" translate="yes" xml:space="preserve">
          <source>The returned array will preserve the keys of the array argument if and only if exactly one array is passed. If more than one array is passed, the returned array will have sequential integer keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6facd857473a019fa102eb69b9a8d5257d32801c" translate="yes" xml:space="preserve">
          <source>The returned configuration files include the full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4303c5350e42db97a83c13159d11a8b0bdf07d" translate="yes" xml:space="preserve">
          <source>The returned crypttext can be larger than the size of the data that was given by &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519045d96d2d07c0f467871056c2237dcd7a2eba" translate="yes" xml:space="preserve">
          <source>The returned data needs to match the format specified in the &lt;em&gt;LOAD DATA&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2e98929abb612044cce51b27b841f1f3af41ee" translate="yes" xml:space="preserve">
          <source>The returned height of the returned thumbnail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e4791431433eb4027014bb0417221c89db07d4" translate="yes" xml:space="preserve">
          <source>The returned image type of the returned thumbnail. This is either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4787bf2e102d143085e39ec4af2191bdbc00f5d9" translate="yes" xml:space="preserve">
          <source>The returned string will be the same as the name of the error code constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef972e9c5b3e3aa2d1d84641c419a7cb85f17f7d" translate="yes" xml:space="preserve">
          <source>The returned values are as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932014e343cc8c68a94d5887e2099cbe34c6aefe" translate="yes" xml:space="preserve">
          <source>The rewrites function is passed a string as its only parameter and must return a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55ef39682bcc45db76dfd24c0499f8f3f15979b" translate="yes" xml:space="preserve">
          <source>The right operand, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc0a856c928392f91f33414c8a6de4a3bb0d835" translate="yes" xml:space="preserve">
          <source>The rights to give to the user. Passing an empty string will delete acl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de794ae2460176d732586c22724fb0e1a77bdeca" translate="yes" xml:space="preserve">
          <source>The rounded value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb5d9b878192ee76ffb76525112c5295bc74c5e" translate="yes" xml:space="preserve">
          <source>The row ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299367e200c76b35bccdad4316512be6a059b335" translate="yes" xml:space="preserve">
          <source>The row number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2de81f82b64709c0e9ed6b6ab07f6dc1fdee181" translate="yes" xml:space="preserve">
          <source>The row offset of the composited image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7aa35cda98d374eb70bf8b8c11bb66b1e0aa6c" translate="yes" xml:space="preserve">
          <source>The row to be accessed. This parameter can only be used if the specified statement was prepared with a scrollable cursor. In that case, this parameter can take on one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057fc03b763cdfd7ba29b7d80b0634f74070f755" translate="yes" xml:space="preserve">
          <source>The rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1f010b968acc0e678fd14b157ddf8497b41bbc" translate="yes" xml:space="preserve">
          <source>The running script must have executable permissions on all directories in the hierarchy, otherwise &lt;strong&gt;realpath()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9609d369db7b4ccb3936e3ce156a5027678c6f54" translate="yes" xml:space="preserve">
          <source>The salt option has been deprecated as of PHP 7.0.0. It is now preferred to simply use the salt that is generated by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced46239de7467ec72eb725079bfdae5c053fcf" translate="yes" xml:space="preserve">
          <source>The salt to use for the derivation. This value should be generated randomly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08043334ce90449ec52f7a45f4a378248d442efa" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;ev.backend&quot;&gt;Ev::backend()&lt;/a&gt; , but for the loop instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309ba2efe8ba704edded55801c6d268465d846fa" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct()&lt;/a&gt; , but doesn't start the watcher automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86326cd6e96b786b9c063d3e89a0762bfc9bb2bc" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct()&lt;/a&gt; , but doesn't start the watcher automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cac6767c2baec588994d276ed95bf746eff59c9" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;evfork.construct&quot;&gt;EvFork::__construct()&lt;/a&gt; , but doesn't start the watcher automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87988bc7d80a32d85b30aafc271e2c99e8cc036e" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;evidle.construct&quot;&gt;EvIdle::__construct()&lt;/a&gt; , but doesn't start the watcher automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808fcc5b1561bd2fcdc3749566d4cb66de95a52b" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;evio.construct&quot;&gt;EvIo::__construct()&lt;/a&gt; , but doesn't start the watcher automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134420bb1d491e5f60f999fc7f6332cc6eb84ec5" translate="yes" xml:space="preserve">
          <source>The same as &lt;strong&gt;&lt;code&gt;EventBuffer::PTR_SET&lt;/code&gt;&lt;/strong&gt; , except this flag causes &lt;strong&gt;EventBuffer::setPosition()&lt;/strong&gt; method to move position forward up to the specified number of bytes(instead of setting absolute position).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de96671e47a43bcdccd27233b1841ec19a87fc7" translate="yes" xml:space="preserve">
          <source>The same as &lt;strong&gt;&lt;code&gt;IP_MULTICAST_IF&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08766b744044639fa5bf8536e92aa6c431db0897" translate="yes" xml:space="preserve">
          <source>The same as &lt;strong&gt;&lt;code&gt;SPH_MATCH_EXTENDED&lt;/code&gt;&lt;/strong&gt; plus ranking and quorum searching support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd81d30aa16fc23ab8f397a09f96187057919034" translate="yes" xml:space="preserve">
          <source>The same as for &lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f1efbcc08d0f9d591e2661070479ef9ca00198" translate="yes" xml:space="preserve">
          <source>The same as for &lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149b50f1d851aa36945a18f3262551f4f77640a3" translate="yes" xml:space="preserve">
          <source>The same as for &lt;a href=&quot;evio.construct&quot;&gt;EvIo::__construct()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a974980ee523e2909cb166f27719bc27fd475d8" translate="yes" xml:space="preserve">
          <source>The same context data structure set with &lt;a href=&quot;gearmanclient.setcontext&quot;&gt;GearmanClient::setContext()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d1e65deae3fa48912dc3f46f802402916081ae" translate="yes" xml:space="preserve">
          <source>The same meaning as for &lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic::__construct()&lt;/a&gt; . See &lt;a href=&quot;https://secure.php.net/manual/en/ev.periodic-modes.php&quot;&gt;Periodic watcher operation modes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c281e67d21a4920af75ea784ac2cb5d41dd855d1" translate="yes" xml:space="preserve">
          <source>The same options that the class' constructor takes; except that the size option is ignored. It is automatically calculated to be the same as the number of entries in the hash, rounded up to the nearest power of two with a maximum limit of 4194304.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0760650cd98752328831a293b56938db750dff20" translate="yes" xml:space="preserve">
          <source>The same options that the class' constructor takes; except that the size option is ignored. It is automatically calculated to be the same as the number of entries in the set, rounded up to the nearest power of two automatically limited from 64 to 4194304.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89962f5657249b94ab8e87911a37d250ed652ee" translate="yes" xml:space="preserve">
          <source>The same options that the class' constructor takes; except that the size option is ignored. It is automatically calculated to be the same as the number of entries in the set, rounded up to the nearest power of two with a maximum limit of 4194304.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d0edfbe75dcbc1cc9a720a74621e5f0bf21041" translate="yes" xml:space="preserve">
          <source>The same options that the class' constructor takes; except that the size option is ignored. It is read from the file format (unlike the QuickHashIntHash and QuickHashIntStringHash classes, where it is automatically calculated from the number of entries in the hash.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0959c45f5a81e5fcd1f2eb45948f4771725b64de" translate="yes" xml:space="preserve">
          <source>The same principle can be applied to namespaced elements in PHP. For example, a class name can be referred to in three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8426e701a04a0f5e5a4a2eac0f3feeef57fa5f" translate="yes" xml:space="preserve">
          <source>The same server may appear multiple times in the server pool, because no duplication checks are made. This is not advisable; instead, use the &lt;code&gt;weight&lt;/code&gt; option to increase the selection weighting of this server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe72324267d7203dfeca4d9aa891dd4aac1cd83" translate="yes" xml:space="preserve">
          <source>The same string data set with &lt;a href=&quot;gearmanclient.setdata&quot;&gt;GearmanClient::setData()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8608de3e3adf1161e8e212c76da0d1dea4e0c88" translate="yes" xml:space="preserve">
          <source>The same syntax can be used with functions that return references:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e702ce9ced24cbfc58fcb4018eabaca6515427" translate="yes" xml:space="preserve">
          <source>The scalar value being converted to a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11ad0d4636d3234bb1193eae697885251217193" translate="yes" xml:space="preserve">
          <source>The scalar value being converted to an integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd318b12082b37cbb68d8f487de01634fb674e7" translate="yes" xml:space="preserve">
          <source>The scale factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658cd3ab1cb9672fd976c7fba440f5b037eeb5a5" translate="yes" xml:space="preserve">
          <source>The scale for types of variable scale, &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; for other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79827f036850c9af7c48ee378571bcc1ab8f4abb" translate="yes" xml:space="preserve">
          <source>The scale of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9efc04ee4121e1a79ed1c5ae64582d4fd2de961" translate="yes" xml:space="preserve">
          <source>The scale parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb13ba4c55805c316ec3ff2c19771c1434a8ff1" translate="yes" xml:space="preserve">
          <source>The scale parameter of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85fe12d93a5dc4dbd78fd5c0f191c9005184f83" translate="yes" xml:space="preserve">
          <source>The scene number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc12ac75ee1dd7b0c81e3c842b7baff17ff65ebb" translate="yes" xml:space="preserve">
          <source>The scope of a variable is the context within which it is defined. For the most part all PHP variables only have a single scope. This single scope spans included and required files as well. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8401f04f06ad36fd5ed279997fdcae1eea6b11" translate="yes" xml:space="preserve">
          <source>The scope, which orders the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c023b0c19d23b12510bc9edcacf02adf9a8bc9b" translate="yes" xml:space="preserve">
          <source>The script originally called is considered an &quot;included file,&quot; so it will be listed together with the files referenced by &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; and family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94737695dde85f550535d26a24c7004937a2330" translate="yes" xml:space="preserve">
          <source>The script subtag for the locale or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if not present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2484cc750b18ae8f1465a9e332dd0ed6c3b249c" translate="yes" xml:space="preserve">
          <source>The sealed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361570f8f882156a8a24b3c1f415e683dc5c032c" translate="yes" xml:space="preserve">
          <source>The search &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e305f3b6bd5006469bf6945ddbc42b8c5a052daf" translate="yes" xml:space="preserve">
          <source>The search filter can be simple or advanced, using boolean operators in the format described in the LDAP documentation (see the &lt;a href=&quot;https://wiki.mozilla.org/Mozilla_LDAP_SDK_Programmer%27s_Guide/Searching_the_Directory_With_LDAP_C_SDK&quot;&gt;&amp;raquo; Netscape Directory SDK&lt;/a&gt; or &lt;a href=&quot;http://www.faqs.org/rfcs/rfc4515&quot;&gt;&amp;raquo; RFC4515&lt;/a&gt; for full information on filters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a857878336ec68c9e9426e777baaa46bf3ddc9" translate="yes" xml:space="preserve">
          <source>The search offset. If it is not specified, 0 is used. A negative offset counts from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74f99ff7baafc53b6897eee065a9bb0acc13b6e" translate="yes" xml:space="preserve">
          <source>The search option. See &lt;a href=&quot;function.mb-regex-set-options&quot;&gt;mb_regex_set_options()&lt;/a&gt; for explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a397a205e8e3cae7651d61a2d288b3afb424da03" translate="yes" xml:space="preserve">
          <source>The search pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91eb3aa37b1978ae84be21789d6f443ea822b6af" translate="yes" xml:space="preserve">
          <source>The search query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e56ad0382e4eae262429ec303ce0c0aae3a0d6" translate="yes" xml:space="preserve">
          <source>The search string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a828038e5c81eee36cd0b9090bc89af78371a4ed" translate="yes" xml:space="preserve">
          <source>The searched &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b3b70b742f93b0987696971406e059f753ab98" translate="yes" xml:space="preserve">
          <source>The searched string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf002750b47bf41f39f2645d3063d0556e31838a" translate="yes" xml:space="preserve">
          <source>The searched substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd57d45948fbdbfba170274ca8a0c4cdccf32433" translate="yes" xml:space="preserve">
          <source>The searched value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87df17cae45bb7de5bab8a81b230b4ecda06a9bd" translate="yes" xml:space="preserve">
          <source>The second array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b37089dc8abfd7501bd145b8abda808c2ac932" translate="yes" xml:space="preserve">
          <source>The second array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6687e19835e66fc69fb2926b02348cf80482502" translate="yes" xml:space="preserve">
          <source>The second condition fails because &lt;strong&gt;in_array()&lt;/strong&gt; is case-sensitive, so the program above will display:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74e5b7c7d5a1a8a54faeedfd25bfc40037c450c" translate="yes" xml:space="preserve">
          <source>The second form of the iterator can be used with any iterator that returns a key =&amp;gt; value mapping, such as an &lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe49877237ae0bcaa73e9256bbe74649ed64650" translate="yes" xml:space="preserve">
          <source>The second form will additionally assign the current element's key to the &lt;em&gt;$key&lt;/em&gt; variable on each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f413e7213c730ae3fc1623a81058abcd15e6a17" translate="yes" xml:space="preserve">
          <source>The second image to combine with this one to form either the magnitude / phase or real / imaginary image pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d006add3b251b80e5dd0c05f8c8611edfc0f64" translate="yes" xml:space="preserve">
          <source>The second loop does not output because the iterator is only used once, as it does not rewind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800b18a54d99cf58bec223f2f6155d9594bd84ca" translate="yes" xml:space="preserve">
          <source>The second parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe3eb0ee55a16bffa312af75f7abadd4dea7693" translate="yes" xml:space="preserve">
          <source>The second parameter &lt;code&gt;mode&lt;/code&gt; has to be given in octal notation (e.g. 0644). The permission of the newly created &lt;em&gt;FIFO&lt;/em&gt; also depends on the setting of the current &lt;a href=&quot;function.umask&quot;&gt;umask()&lt;/a&gt;. The permissions of the created file are (mode &amp;amp; ~umask).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de97eaffab3e7bfd7379da46081340ee03a0cf06" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;data&lt;/code&gt;, contains the character data as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e069362cb438b06d5ea55a5c07fc13f7f57f04" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;data&lt;/code&gt;, contains the character data.This may be the XML declaration, document type declaration, entities or other data for which no other handler exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd12e158fd8783feddc2cc4ac2fead28a77a764a" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;errstr&lt;/code&gt;, contains the error message, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c90d4f96e893f49b9a459b9285c86db2bb4b817" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;name&lt;/code&gt;, contains the name of the element for which this handler is called.If &lt;a href=&quot;https://secure.php.net/manual/en/xml.case-folding.php&quot;&gt;case-folding&lt;/a&gt; is in effect for this parser, the element name will be in uppercase letters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ab370d52e19babffcba21b261867f9bfd8514f" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;open_entity_names&lt;/code&gt;, is a space-separated list of the names of the entities that are open for the parse of this entity (including the name of the referenced entity).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27360f48098b7928f7aae8cc4754504fa388e772" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;target&lt;/code&gt;, contains the PI target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a621f492c32cef6b7cb42330d068f65123f14b4" translate="yes" xml:space="preserve">
          <source>The second samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb91fb0ea67a5dfce136e0a61856313581d477f0" translate="yes" xml:space="preserve">
          <source>The second set of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d31c8146b0b83e6df2b2f4770606ef9cf36364" translate="yes" xml:space="preserve">
          <source>The second special case is the &quot;Location:&quot; header. Not only does it send this header back to the browser, but it also returns a &lt;em&gt;REDIRECT&lt;/em&gt; (302) status code to the browser unless the &lt;em&gt;201&lt;/em&gt; or a &lt;em&gt;3xx&lt;/em&gt; status code has already been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd7090ad92baeb4f8693bfc63f94670a167ffd9" translate="yes" xml:space="preserve">
          <source>The second string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cac81cfea368a1c4df6f0a5b9a3eec8e411f60f" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bc27eff252d9d878dac0b3962cc7917ec32a35" translate="yes" xml:space="preserve">
          <source>The second string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b9598edea747e4e9687c981bc0cb26a2a7e7a" translate="yes" xml:space="preserve">
          <source>The second summand (addend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da24fce997cced3e752566955c0a47707a711f1" translate="yes" xml:space="preserve">
          <source>The second thing references do is to pass variables by reference. This is done by making a local variable in a function and a variable in the calling scope referencing the same content. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660185d5febb4af33f098e433d925f8222e8a6ce" translate="yes" xml:space="preserve">
          <source>The secondary string being compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5133f57c94a6a31147f84bf6f95e21bc9ede48" translate="yes" xml:space="preserve">
          <source>The seconds part of the timeout to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216df7b7760d21e13a5614556fcb56e3b5a13228" translate="yes" xml:space="preserve">
          <source>The secret password needed to use the private SSL key specified in &lt;strong&gt;&lt;code&gt;CURLOPT_SSLKEY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3201eb7503df7f00850007366db4937119f3fd" translate="yes" xml:space="preserve">
          <source>The section of the manual about &lt;a href=&quot;https://secure.php.net/manual/en/features.file-upload.php&quot;&gt;handling file uploads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c6ef5418965cbdfa1a666be6f28c179909d63d" translate="yes" xml:space="preserve">
          <source>The section on &lt;a href=&quot;https://secure.php.net/manual/en/features.connection-handling.php&quot;&gt;connection handling&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbf4cef4b1f074ccf3907fcc04d754521df7dee" translate="yes" xml:space="preserve">
          <source>The section on &lt;a href=&quot;https://secure.php.net/manual/en/features.http-auth.php&quot;&gt;HTTP authentication&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389f33caf941fcfe6d6efce152ec3b5ea58737eb" translate="yes" xml:space="preserve">
          <source>The section on &lt;a href=&quot;language.constants&quot;&gt;Constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dcafda9b41c750c2db150b742bf95f3be40a74" translate="yes" xml:space="preserve">
          <source>The seed to be set for the &lt;a href=&quot;function.gmp-random&quot;&gt;gmp_random()&lt;/a&gt;, &lt;a href=&quot;function.gmp-random-bits&quot;&gt;gmp_random_bits()&lt;/a&gt;, and &lt;a href=&quot;function.gmp-random-range&quot;&gt;gmp_random_range()&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba222631f4b566bdbab20319968242b908688daf" translate="yes" xml:space="preserve">
          <source>The seeked offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7889d5d177cceb99d331eccac13784642ab6f18c" translate="yes" xml:space="preserve">
          <source>The semaphore permissions. Actually this value is set only if the process finds it is the only process currently attached to the semaphore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e922d312df715319ff41bf250266c51d73faa5b4" translate="yes" xml:space="preserve">
          <source>The sent data will be taken from buffer &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff35244579a8ee584761baf0876a156f88ce5ac" translate="yes" xml:space="preserve">
          <source>The sequence (?# marks the start of a comment which continues up to the next closing parenthesis. Nested parentheses are not permitted. The characters that make up a comment play no part in the pattern matching at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f16f9ad5180fba922a994248915a33085f3775" translate="yes" xml:space="preserve">
          <source>The sequence is ended upon reaching the &lt;code&gt;end&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e35cc2a49d5ced33617b0eecda777b804e54d9" translate="yes" xml:space="preserve">
          <source>The serialized &lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805a8bc4f214f457e46c6b23e4bc67f078aea88c" translate="yes" xml:space="preserve">
          <source>The serialized &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c274bfb6ba2894427fc5aa875089d059c38bb239" translate="yes" xml:space="preserve">
          <source>The serialized ArrayIterator object to be unserialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c233316772f508a99baa3e4c25253f251fe2b1fb" translate="yes" xml:space="preserve">
          <source>The serialized data, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if no data is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ce2b52638ca161a2473c66d7b08df423ce1d29" translate="yes" xml:space="preserve">
          <source>The serialized representation of a storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c8856d9a4f9d412bbabec4da891b8cfd81b1bd" translate="yes" xml:space="preserve">
          <source>The serialized representation of the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f5aa775b7a7f5caafcc46c0a284b168b091a72" translate="yes" xml:space="preserve">
          <source>The serialized representation of the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f1906e647067f48d43ce8adc8dbfc8e478051" translate="yes" xml:space="preserve">
          <source>The serialized session data passed to this callback should be stored against the passed session ID. When retrieving this data, the &lt;code&gt;read&lt;/code&gt; callback must return the exact value that was originally passed to the &lt;code&gt;write&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ad307a031418a86b7ad3452e2649d5fd9003c9" translate="yes" xml:space="preserve">
          <source>The serialized string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab9084e3e6b6f42bbec8c400d9e254dc322fd7d" translate="yes" xml:space="preserve">
          <source>The server part is mandatory in all mailbox parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22eeac52f85f421f3e52078f96e541eaa645b275" translate="yes" xml:space="preserve">
          <source>The server part, which is enclosed in '{' and '}', consists of the servers name or ip address, an optional port (prefixed by ':'), and an optional protocol specification (prefixed by '/').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bfc933a593e6fb60885eb434b1f84f5f3b6cfd" translate="yes" xml:space="preserve">
          <source>The server socket to accept a connection from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bfc9954a91d516c80bab425322520f7443267f" translate="yes" xml:space="preserve">
          <source>The service to connect to. If service is a name, it is translated to the corresponding port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe325f4ec8725934cd3c3b4fd27ae737a17f9d96" translate="yes" xml:space="preserve">
          <source>The session ID being destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182dbdffca2fff45c82f61985b9246b4c073d270" translate="yes" xml:space="preserve">
          <source>The session id to read data for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d1d944efaf1db299a132c9c80b9da9390ca2a9" translate="yes" xml:space="preserve">
          <source>The session id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a158b6afd52f284619e4e95785e70ab71ca1a3c" translate="yes" xml:space="preserve">
          <source>The session name can't consist of digits only, at least one letter must be present. Otherwise a new session id is generated every time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ee21b64b0110bf0855feeda40c134f10dacde1" translate="yes" xml:space="preserve">
          <source>The session name is reset to the default value stored in &lt;em&gt;session.name&lt;/em&gt; at request startup time. Thus, you need to call &lt;strong&gt;session_name()&lt;/strong&gt; for every request (and before &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96f6a83e2d9e8f6a082a4633eb1e4cc94faf106" translate="yes" xml:space="preserve">
          <source>The session name references the name of the session, which is used in cookies and URLs (e.g. &lt;em&gt;PHPSESSID&lt;/em&gt;). It should contain only alphanumeric characters; it should be short and descriptive (i.e. for users with enabled cookie warnings). If &lt;code&gt;name&lt;/code&gt; is specified, the name of the current session is changed to its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f1740f402897a2f164554c12b7dd3c84282c9" translate="yes" xml:space="preserve">
          <source>The session name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1a39056d50aeb377837baeb94f7a9249b25c7d" translate="yes" xml:space="preserve">
          <source>The setting, like &lt;em&gt;&quot;FOO=BAR&quot;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e739633308cdbd194c684f059504c7c11223c6" translate="yes" xml:space="preserve">
          <source>The settings are returned as an associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; on success, and &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a8a7ebf6c20cc874382baef3f669459115453a" translate="yes" xml:space="preserve">
          <source>The settings of &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_CASELESS&lt;/a&gt;, &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt;, &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt;, &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_UNGREEDY&lt;/a&gt;, &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_EXTRA&lt;/a&gt;, &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_EXTENDED&lt;/a&gt; and PCRE_DUPNAMES can be changed from within the pattern by a sequence of Perl option letters enclosed between &quot;(?&quot; and &quot;)&quot;. The option letters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74c38f5c1b64ff3857abe4025988e9c80af87b9" translate="yes" xml:space="preserve">
          <source>The severity level of the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ef57ec602f1bd8ef14e501afe8c4f3bb8dcb6d" translate="yes" xml:space="preserve">
          <source>The severity of the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51312e3ef2de4237cfef55b3469146d1f1e0703a" translate="yes" xml:space="preserve">
          <source>The shape parameter of the beta distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9567500ed0161ec03f8c4d12cc6d839f2662ab11" translate="yes" xml:space="preserve">
          <source>The shape parameter of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef9930da95abced97b63f6199c1c8157001c3e9" translate="yes" xml:space="preserve">
          <source>The shared memory block identifier created by &lt;a href=&quot;function.shmop-open&quot;&gt;shmop_open()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4959e0b9cb4c89c89b401a91b3c4fa89ee7f4afc" translate="yes" xml:space="preserve">
          <source>The shared memory block resource created by &lt;a href=&quot;function.shmop-open&quot;&gt;shmop_open()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b93e43afb156b056c896d6a65f604d653f300f" translate="yes" xml:space="preserve">
          <source>The shared memory identifier as returned by &lt;a href=&quot;function.shm-attach&quot;&gt;shm_attach()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaf0d088d427c9eb1377b4d8a922a7edb44960e" translate="yes" xml:space="preserve">
          <source>The shared secret returned by &lt;strong&gt;openssl_dh_compute_key()&lt;/strong&gt; is often used as an encryption key to secretly communicate with a remote party. This is known as the Diffie-Hellman key exchange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d1e847db8b6d9a15a5cc73ef9ea1480ce7ab66" translate="yes" xml:space="preserve">
          <source>The sharpen value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cd0e83f8b5a13234b554bfb39c355a5ad71277" translate="yes" xml:space="preserve">
          <source>The shell element contains the absolute path to the executable of the user's default shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff126c718d921a38ecdf4b6ba47e8686f8bb2167" translate="yes" xml:space="preserve">
          <source>The shell wildcard pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b2a43ef4f7fab04a871e21835b36b2c7821a70" translate="yes" xml:space="preserve">
          <source>The short name of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d43f0a8d3400f7f50a95f0e436f616cd7ff3fb3" translate="yes" xml:space="preserve">
          <source>The shutdown callback to register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4335f6ebe551a96a0f6931ec9b72a5d94c02ff5" translate="yes" xml:space="preserve">
          <source>The shutdown callbacks are executed as the part of the request, so it's possible to send output from them and access output buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042f050923915295e4e7071cd74c0cc3c5bd3d06" translate="yes" xml:space="preserve">
          <source>The sigma of the effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438bdd02ce9c7934939b561271bd0ce03243199d" translate="yes" xml:space="preserve">
          <source>The signal being handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1925ae356bb4203e0e92032b0bfab7c505eed4ad" translate="yes" xml:space="preserve">
          <source>The signal event callback. See &lt;a href=&quot;https://secure.php.net/manual/en/event.callbacks.php&quot;&gt;Event callbacks&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa8b726ec41a7a4dc4ff48ab3a29543b746847f" translate="yes" xml:space="preserve">
          <source>The signal handler. This may be either a &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt;, which will be invoked to handle the signal, or either of the two global constants &lt;strong&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/strong&gt;, which will ignore the signal or restore the default signal handler respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548e8e2cf6d0ecdcbeafbe2fb22801a538eed953" translate="yes" xml:space="preserve">
          <source>The signal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbef07fde7969893319fe0d3be13aeb7e94556b" translate="yes" xml:space="preserve">
          <source>The signed amount to add to the current field. If the amount is positive, the instant will be moved forward; if it is negative, the instant wil be moved into the past. The unit is implicit to the field type. For instance, hours for &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffedcf8c94eb0efca34909899251a16704a70c29" translate="yes" xml:space="preserve">
          <source>The simplest way to specify a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is to enclose it in single quotes (the character &lt;em&gt;'&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a26dd8bf4ca94435fb7fc72dcc5b40c2500c18b" translate="yes" xml:space="preserve">
          <source>The sine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8fa08199fa2618277203c965d7b6238ee363fc" translate="yes" xml:space="preserve">
          <source>The singular message ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfe0494842686d24afa0ce2a738980320ff239a" translate="yes" xml:space="preserve">
          <source>The size in bytes of the file within the Phar archive on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01e3a0e789487876ab838f3881b383ae4793d03" translate="yes" xml:space="preserve">
          <source>The size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadaab56c9e0215a302bd4498df0227722139baa" translate="yes" xml:space="preserve">
          <source>The size of a float is platform-dependent, although a maximum of approximately 1.8e308 with a precision of roughly 14 decimal digits is a common value (the 64 bit IEEE format).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c93a3b909bf156035dea0d9925d4ceb9301af4" translate="yes" xml:space="preserve">
          <source>The size of an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; is platform-dependent, although a maximum value of about two billion is the usual value (that's 32 bits signed). 64-bit platforms usually have a maximum value of about 9E18, except on Windows prior to PHP 7, where it was always 32 bit. PHP does not support unsigned &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;s. &lt;a href=&quot;language.types.integer&quot;&gt;Integer&lt;/a&gt; size can be determined using the constant &lt;strong&gt;&lt;code&gt;PHP_INT_SIZE&lt;/code&gt;&lt;/strong&gt;, maximum value using the constant &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt; since PHP 5.0.5, and minimum value using the constant &lt;strong&gt;&lt;code&gt;PHP_INT_MIN&lt;/code&gt;&lt;/strong&gt; since PHP 7.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8db79a8cc24d1fb50ebc2a5392b4de19bea96fb" translate="yes" xml:space="preserve">
          <source>The size of each chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a348486e18a9a01428c6e55c4d295836b1695f" translate="yes" xml:space="preserve">
          <source>The size of the IV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898e255e6dac9738882a81cdeafd7001de49dcc7" translate="yes" xml:space="preserve">
          <source>The size of the buffer to use for each read. There is no guarantee this request will be fulfilled, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78652ba2f88967dfa0a60dca79380de04c0c7b5f" translate="yes" xml:space="preserve">
          <source>The size of the directory entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e456249676b01837043b1536367945b3996e74f1" translate="yes" xml:space="preserve">
          <source>The size of the fixed array. This expects a number between &lt;em&gt;0&lt;/em&gt; and &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c94ddd4e5496880a41d2f56c4d46b2ca82d8bc" translate="yes" xml:space="preserve">
          <source>The size of the internal command/network buffer. Only valid for mysqlnd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58454d88da72a4551bd27fe7ef65d53fc0bad1d" translate="yes" xml:space="preserve">
          <source>The size of the shared memory block you wish to create in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cc978f021bda0d3b31ad7e64e1edd0e8c59296" translate="yes" xml:space="preserve">
          <source>The size of the written &lt;code&gt;data&lt;/code&gt;, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680e433a6e09ab02ba958962ab2e720e55a5a6f9" translate="yes" xml:space="preserve">
          <source>The size to truncate to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5330ec35d6bf86ae09b604043202fd5dbda44821" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of shared memory to reserve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1882c1f915a9232ec6737cb6a01541c8af27cd8f" translate="yes" xml:space="preserve">
          <source>The size, in characters, of fragments to consider for highlighting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5a4167ab254d16bb3127b4eea873f7daf9331f" translate="yes" xml:space="preserve">
          <source>The socket resource returned by &lt;strong&gt;socket_accept()&lt;/strong&gt; may not be used to accept new connections. The original listening socket &lt;code&gt;socket&lt;/code&gt;, however, remains open and may be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3626fc9ee8d1ae5c9251ecfda631b1546415d8d0" translate="yes" xml:space="preserve">
          <source>The socket to get the name of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b05e37c3d696bcb30a3ee93adf6365a09dc10ab" translate="yes" xml:space="preserve">
          <source>The socket to send &lt;code&gt;data&lt;/code&gt; to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e544c6b219c95a647f4e42eb2e34ee8f0c8d333" translate="yes" xml:space="preserve">
          <source>The socket will by default be opened in blocking mode. You can switch it to non-blocking mode by using &lt;a href=&quot;function.stream-set-blocking&quot;&gt;stream_set_blocking()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0158fbf9587795f74f7b5d5191d3e8c06ab2a9" translate="yes" xml:space="preserve">
          <source>The sockets listed in the &lt;code&gt;except&lt;/code&gt; array will be watched for exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01341596f6969ac5e4349da141f26b4836c3708b" translate="yes" xml:space="preserve">
          <source>The sockets listed in the &lt;code&gt;read&lt;/code&gt; array will be watched to see if characters become available for reading (more precisely, to see if a read will not block - in particular, a socket resource is also ready on end-of-file, in which case a &lt;a href=&quot;function.socket-read&quot;&gt;socket_read()&lt;/a&gt; will return a zero length string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6a80c4f084ec9d336b229b28c9ff4e872491f4" translate="yes" xml:space="preserve">
          <source>The sockets listed in the &lt;code&gt;write&lt;/code&gt; array will be watched to see if a write will not block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef893c47fc78d21395981e5b1ed8c200d0259262" translate="yes" xml:space="preserve">
          <source>The soft limit, in whatever unit the resource limit requires, or &lt;strong&gt;&lt;code&gt;POSIX_RLIMIT_INFINITY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1b1d95b7cf9dc285df8880fcbb9d566fcac191" translate="yes" xml:space="preserve">
          <source>The sort criteria</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12e800db7e83b6ebcc8d26620993bde96101eb9" translate="yes" xml:space="preserve">
          <source>The sort criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a178e8ae41900601bf641386690d0ce120310b4" translate="yes" xml:space="preserve">
          <source>The sort direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1812989bdbd04862ab79bb2793519919f6af549d" translate="yes" xml:space="preserve">
          <source>The sort direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45bdc9e4d8de33d4f1866bb7ae3fe7dbae5cbe3" translate="yes" xml:space="preserve">
          <source>The sort direction. This should be either SolrQuery::ORDER_ASC or SolrQuery::ORDER_DESC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d257ff67320c2670f80e097ca2ee8843299726e8" translate="yes" xml:space="preserve">
          <source>The source Cyrillic character set, as a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976d9a2309ba883a5f39a608b27e18a5c8c9f5ef" translate="yes" xml:space="preserve">
          <source>The source EventBuffer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24a0c2bd6b937560556695a4bdaab150d959d44" translate="yes" xml:space="preserve">
          <source>The source Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143a47089d83790c878867514fd693b805124db7" translate="yes" xml:space="preserve">
          <source>The source Imagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d1003637a1f0f9b089340e4952d4e52c9e1bf8" translate="yes" xml:space="preserve">
          <source>The source document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f60d3335b11eace5746e43d3bf509a2d51ba1e" translate="yes" xml:space="preserve">
          <source>The source image resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284b6500709700cc33bfbb254973fa6ecf05bd1a" translate="yes" xml:space="preserve">
          <source>The source of the IV. The source can be &lt;strong&gt;&lt;code&gt;MCRYPT_RAND&lt;/code&gt;&lt;/strong&gt; (system random number generator), &lt;strong&gt;&lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt;&lt;/strong&gt; (read data from &lt;var&gt;/dev/random&lt;/var&gt;) and &lt;strong&gt;&lt;code&gt;MCRYPT_DEV_URANDOM&lt;/code&gt;&lt;/strong&gt; (read data from &lt;var&gt;/dev/urandom&lt;/var&gt;). Prior to 5.3.0, &lt;strong&gt;&lt;code&gt;MCRYPT_RAND&lt;/code&gt;&lt;/strong&gt; was the only one supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1be07526aef1044d69adaec6d22fde9e8f23c45" translate="yes" xml:space="preserve">
          <source>The source stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfbe78a24e535dc1a59ca79735e8921de5a4fe4" translate="yes" xml:space="preserve">
          <source>The sources of randomness used for this function are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725052ae2964bdb5f1da36919ff865598f67662f" translate="yes" xml:space="preserve">
          <source>The special &lt;strong&gt;&lt;code&gt;::class&lt;/code&gt;&lt;/strong&gt; constant are available as of PHP 5.5.0, and allows for fully qualified class name resolution at compile, this is useful for namespaced classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe3964847acbd9acb5d9dea022b3909085abbf3" translate="yes" xml:space="preserve">
          <source>The special &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value represents a variable with no value. &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; is the only possible value of type &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e6ecb245aa65bdc6bb3af0ac0327eddfe43bb7" translate="yes" xml:space="preserve">
          <source>The special regular expression characters are: &lt;em&gt;. \ + * ? [ ^ ] $ ( ) { } = ! &amp;lt; &amp;gt; | : -&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e9dbeb7386d2f2ca1fc08a4fbd66bc3f770ace" translate="yes" xml:space="preserve">
          <source>The specification can also be represented as a date time. A sample of one year and four days would be &lt;em&gt;P0001-00-04T00:00:00&lt;/em&gt;. But the values in this format can not exceed a given period's roll-over-point (e.g. &lt;em&gt;25&lt;/em&gt; hours is invalid).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127ca45383a166a18ad8813ba33c466cb20808c7" translate="yes" xml:space="preserve">
          <source>The specified character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73944e9214a20da0f309a5b72d561c18e6e51c1f" translate="yes" xml:space="preserve">
          <source>The specified format as described in the &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f958324b6f06b069ff87c2e84d57637df1a8d7" translate="yes" xml:space="preserve">
          <source>The specified substring. If the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds the length, then all 16-bit units to the end of the data are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3b10476d8fab483e193cfd7aab865b7715a0d0" translate="yes" xml:space="preserve">
          <source>The sql state with the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49185eb8af3536eacf9ccb41c1cd2ede3e71574" translate="yes" xml:space="preserve">
          <source>The square root of &lt;code&gt;arg&lt;/code&gt; or the special value &lt;em&gt;NAN&lt;/em&gt; for negative numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76857b6774cda5b65b0668dafe493bd58f18f704" translate="yes" xml:space="preserve">
          <source>The standard DES-based &lt;strong&gt;crypt()&lt;/strong&gt; returns the salt as the first two characters of the output. It also only uses the first eight characters of &lt;code&gt;str&lt;/code&gt;, so longer strings that start with the same eight characters will generate the same result (when the same salt is used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac3d567ccff992b3f874df550b9e9ac03302029" translate="yes" xml:space="preserve">
          <source>The standard deviation of the Gaussian, in pixels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b007bdd71ad16e8694fe66d77f1e050b87a49cc6" translate="yes" xml:space="preserve">
          <source>The standard deviation of the Gaussian, in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db32fd84cb71adf3670ea332f2309eac568bfa7" translate="yes" xml:space="preserve">
          <source>The standard deviation of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c3b907ccf8948036117862d12f7b5f8a26467c" translate="yes" xml:space="preserve">
          <source>The standard deviation of the normal distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c3bbc968060dffce58614e1f15bb36cb39d71e" translate="yes" xml:space="preserve">
          <source>The standard fragmenter is gap. Another option is regex, which tries to create fragments that resembles a certain regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bd2b1e421160c5a21ea992ce78ea79a72b9688" translate="yes" xml:space="preserve">
          <source>The start date of the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2850b674e8709b06688ca1e8206aa5d052eb7c" translate="yes" xml:space="preserve">
          <source>The start index (in UTF-16 code units) from which the string will start to be transformed, inclusive. Indexing starts at 0. The text before will be left as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaa66909a5d3309a020d1a4774b8543a40e9673" translate="yes" xml:space="preserve">
          <source>The start of the astronomical dawn (zenith angle = 108&amp;deg;). It ends at &lt;em&gt;nautical_twilight_begin&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f71d8025bdd79319d0c961f01748bc079d73b8" translate="yes" xml:space="preserve">
          <source>The start of the civil dawn (zenith angle = 96&amp;deg;). It ends at &lt;em&gt;sunrise&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fe99847f2baa9a65a0cf15deb6fe65d337f4f5" translate="yes" xml:space="preserve">
          <source>The start of the nautical dawn (zenith angle = 102&amp;deg;). It ends at &lt;em&gt;civil_twilight_begin&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc924d24c50278982d430b2b1f98fb70f4fe6002" translate="yes" xml:space="preserve">
          <source>The start position for the comparison. If negative, it starts counting from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aeb2cfb1351a0ba91b8e9aec979c559b960cac2" translate="yes" xml:space="preserve">
          <source>The start position of data to be substracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69faf3b3fa099f988e69ff84cae162de44138550" translate="yes" xml:space="preserve">
          <source>The start position offset. Number of characters from the beginning of string (first character is 0), or if start is negative, number of characters from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d86d08f01f224ee3cab4ac76c89f7fe997f94a" translate="yes" xml:space="preserve">
          <source>The start/offset, in bytes, to begin reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d314c9bd68c75bcfef94b91a579c2029d356863d" translate="yes" xml:space="preserve">
          <source>The start/offset, in bytes, to begin writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31dd519ab957d9e8c3e82e990e907c99e4294d2" translate="yes" xml:space="preserve">
          <source>The starting bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491829f088fc0a2ee9f8dd85ec5e1bc72cffa61d" translate="yes" xml:space="preserve">
          <source>The starting byte of the file range to be synchronized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c8d9d4ce0245ea86beb53493f929d4b597c8bd" translate="yes" xml:space="preserve">
          <source>The starting line number, as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb24f0af103fad5c7b97c15800b21ea2fe3aa675" translate="yes" xml:space="preserve">
          <source>The starting line number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf5bc3312c7fabdd1f4f8db98a3a03f097eba5" translate="yes" xml:space="preserve">
          <source>The starting x coordinate of the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75472f1bc12a5a5405b0f597500ed39e6eb873df" translate="yes" xml:space="preserve">
          <source>The starting y coordinate of the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94d05caf2136271e97f9d7183c3095016890e09" translate="yes" xml:space="preserve">
          <source>The statement for which the row count is returned. The statment resource must be created with a static or keyset cursor. For more information, see &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;, &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;, or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ee376927.aspx&quot;&gt;&amp;raquo; Specifying a Cursor Type and Selecting Rows&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b42606cd01e312993583c6b394d79dcc8c969a" translate="yes" xml:space="preserve">
          <source>The statement list for a case can also be empty, which simply passes control into the statement list for the next case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab836d79f51bdcbea27df0f2e45d7414cd85dfb9" translate="yes" xml:space="preserve">
          <source>The statement resource to be cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fb76b3ce14890f97b24ace80a610d9f7952df2" translate="yes" xml:space="preserve">
          <source>The static methods contained in the Cond class provide direct access to Posix Condition Variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccdf4313ae2ede59dc67867d61b10995bfed2ce" translate="yes" xml:space="preserve">
          <source>The static methods contained in the Mutex class provide direct access to Posix Mutex functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725158525dc5d8e559e698757656b942451a576" translate="yes" xml:space="preserve">
          <source>The static properties, as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6150afbc993955aa3eea8f85f3e8ab4a2583617" translate="yes" xml:space="preserve">
          <source>The statment for which resources are freed. Note that &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; is a valid parameter value. This allows the function to be called multiple times in a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011ec36ff7357009befb61df574b807a9cb2d7e8" translate="yes" xml:space="preserve">
          <source>The statment for which the number of fields is returned. &lt;strong&gt;sqlsrv_num_fields()&lt;/strong&gt; can be called on a statement before or after statement execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d9190df3754efeace15bb9bd71e4411beac748" translate="yes" xml:space="preserve">
          <source>The statment on which the next result is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5839866676b639b93a15803d67992cd030ef110" translate="yes" xml:space="preserve">
          <source>The statment resource for which metadata is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfe48a7d607f944222639de2123d59e976c0330" translate="yes" xml:space="preserve">
          <source>The status can be &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_IDLE&lt;/code&gt;&lt;/strong&gt; (currently idle), &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_ACTIVE&lt;/code&gt;&lt;/strong&gt; (a command is in progress), &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_INTRANS&lt;/code&gt;&lt;/strong&gt; (idle, in a valid transaction block), or &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_INERROR&lt;/code&gt;&lt;/strong&gt; (idle, in a failed transaction block). &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_UNKNOWN&lt;/code&gt;&lt;/strong&gt; is reported if the connection is bad. &lt;strong&gt;&lt;code&gt;PGSQL_TRANSACTION_ACTIVE&lt;/code&gt;&lt;/strong&gt; is reported only when a query has been sent to the server and not yet completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4f2d22bf9d8b5922b717ada33f71e7bc5fb7a7" translate="yes" xml:space="preserve">
          <source>The status of the output buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826f465eff5fad502feabbee9bd570bee9b7acb8" translate="yes" xml:space="preserve">
          <source>The step, or value to decrease.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec3b658661d45c9d054a1ce4ed40c58120e3d6d" translate="yes" xml:space="preserve">
          <source>The step, or value to increase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa54d1c3ac91e856543f39672c7383d716f9f12" translate="yes" xml:space="preserve">
          <source>The storage containing the elements to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f3405e399272d577cb2dc9abe84362dd7a2054" translate="yes" xml:space="preserve">
          <source>The storage containing the elements to retain in the current storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396f81befab570c2179310cf647a55ecc87f0d41" translate="yes" xml:space="preserve">
          <source>The storage object will never contain more than one object with the same identifier. As such, it can be used to implement a set (a collection of unique values) where the quality of an object being unique is determined by the value returned by this function being unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9beebd1248af8b72f8ff599fef40c70d9b4aed" translate="yes" xml:space="preserve">
          <source>The storage you want to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d558a4f0fa7e314a16a857aac9c99be88fba006" translate="yes" xml:space="preserve">
          <source>The stored variable or array of variables on success; &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfbcc9807fa277a08067e6d62bf06c14b5bacd9" translate="yes" xml:space="preserve">
          <source>The stream &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; or URL to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5f5453f2ede2a6c087c92e42ffcfddd918dde0" translate="yes" xml:space="preserve">
          <source>The stream can be any stream created by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;, &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt; and &lt;a href=&quot;function.pfsockopen&quot;&gt;pfsockopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f404da70782b7e7fd8f0d74f772844e59792644f" translate="yes" xml:space="preserve">
          <source>The stream context resource (created with &lt;a href=&quot;function.stream-context-create&quot;&gt;stream_context_create()&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddc8826b9defe18b39f8bcecb445ff8b5aa089b" translate="yes" xml:space="preserve">
          <source>The stream filter to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f79b1782d978afc731b8436f84dd7175ab0736" translate="yes" xml:space="preserve">
          <source>The stream offset to seek to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d01f898bc077f4839148b3c271fe37af29ef930" translate="yes" xml:space="preserve">
          <source>The stream on which the function will operate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de53f07e43cc18b2991588b903586f50d7618b26" translate="yes" xml:space="preserve">
          <source>The stream or context resource to apply the options to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e852b7c7730a09c90060e255d612dc226866bbd" translate="yes" xml:space="preserve">
          <source>The stream or context to apply the parameters too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41346bf0b65fa136cbd835a9b859a5db779ccee2" translate="yes" xml:space="preserve">
          <source>The stream or context to get options from</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
