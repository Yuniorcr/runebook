<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="a9b13523b66e89596e2c514bfe31cc02647805fe" translate="yes" xml:space="preserve">
          <source>Fills an array with the value of the &lt;code&gt;value&lt;/code&gt; parameter, using the values of the &lt;code&gt;keys&lt;/code&gt; array as keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcbcd8a7d03a2f5f9706973941d4089579a35ea" translate="yes" xml:space="preserve">
          <source>Filter &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f0f63829d004a58486b50afdfdc62a0a688656" translate="yes" xml:space="preserve">
          <source>Filter processed successfully with data available in the &lt;code&gt;out&lt;/code&gt;&lt;em&gt;bucket brigade&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf50d33c98e285804b848176547c4ac4cecc5b93" translate="yes" xml:space="preserve">
          <source>Filter processed successfully, however no data was available to return. More data is required from the stream or prior filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280557d3fdbf1516320f12fc88e09fef234ba802" translate="yes" xml:space="preserve">
          <source>Filter the results to include only methods with certain attributes. Defaults to no filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3344ebcd16854fb2a36c5ad2f4e4318e3d1b8f9" translate="yes" xml:space="preserve">
          <source>FilterIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b317b59ed426984ef1babef331670c113847a6d" translate="yes" xml:space="preserve">
          <source>FilterIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078ea0948ac3b3a26bf14c71a406db04cd0773a0" translate="yes" xml:space="preserve">
          <source>FilterIterator::__construct</source>
          <target state="translated">FilterIterator::__construct</target>
        </trans-unit>
        <trans-unit id="c3948c5ee9c63cd091e8821ff43cae5f85ddfd0e" translate="yes" xml:space="preserve">
          <source>FilterIterator::__construct &amp;mdash; Construct a filterIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9a33714d11d5c6d20beeec20ce2d032bab8629" translate="yes" xml:space="preserve">
          <source>FilterIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd059352b40ab64d16c3266f4c7c198d661a4372" translate="yes" xml:space="preserve">
          <source>FilterIterator::accept</source>
          <target state="translated">FilterIterator::accept</target>
        </trans-unit>
        <trans-unit id="67312c7b525bb292386221f7cb458fdb235f0706" translate="yes" xml:space="preserve">
          <source>FilterIterator::accept &amp;mdash; Check whether the current element of the iterator is acceptable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a67a67f42b915de4ca284ad98bc09f05965bb5d" translate="yes" xml:space="preserve">
          <source>FilterIterator::accept &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e72b9a6009e1b986c99bc29db02040d6a3d1fa8" translate="yes" xml:space="preserve">
          <source>FilterIterator::current</source>
          <target state="translated">FilterIterator::current</target>
        </trans-unit>
        <trans-unit id="06f2ad810caaf9fb556925cb5082040a7edb85bb" translate="yes" xml:space="preserve">
          <source>FilterIterator::current &amp;mdash; Get the current element value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db929863be92489f39f2a294abb1d68d4d0d44e" translate="yes" xml:space="preserve">
          <source>FilterIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406b33c88316eb3afb28c618a6498d785e71c8e9" translate="yes" xml:space="preserve">
          <source>FilterIterator::getInnerIterator</source>
          <target state="translated">FilterIterator::getInnerIterator</target>
        </trans-unit>
        <trans-unit id="562991d5f44416c115fcab1c3c70fd74aaac5ef6" translate="yes" xml:space="preserve">
          <source>FilterIterator::getInnerIterator &amp;mdash; Get the inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a081a18cce6d5d02fb9c3d5e83b346a7b149798" translate="yes" xml:space="preserve">
          <source>FilterIterator::getInnerIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8938f76f46208cb8bd42ff866c9e49f06569c281" translate="yes" xml:space="preserve">
          <source>FilterIterator::key</source>
          <target state="translated">FilterIterator::key</target>
        </trans-unit>
        <trans-unit id="2198159eea17614fbb8a0eaf115daf295b16c662" translate="yes" xml:space="preserve">
          <source>FilterIterator::key &amp;mdash; Get the current key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa5c76080a7e3ecef0a1e693e0bff4338f1836e" translate="yes" xml:space="preserve">
          <source>FilterIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6d923e670b4e875a4eec8c8b3633428285f539" translate="yes" xml:space="preserve">
          <source>FilterIterator::next</source>
          <target state="translated">FilterIterator::next</target>
        </trans-unit>
        <trans-unit id="8cd02e0ad4d43c7750d87866d64ed62b4ee9fb24" translate="yes" xml:space="preserve">
          <source>FilterIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03596af49ecd39aadde0763be4d8e8fe3ca76c36" translate="yes" xml:space="preserve">
          <source>FilterIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d176ce88ba9fe97f548330b97e79a5b00a0dd02" translate="yes" xml:space="preserve">
          <source>FilterIterator::rewind</source>
          <target state="translated">FilterIterator::rewind</target>
        </trans-unit>
        <trans-unit id="a64d9c276479261599a6202aed8381cb4e4cd3b4" translate="yes" xml:space="preserve">
          <source>FilterIterator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d297b67cb18fed787548dbfbdaea577ac2472243" translate="yes" xml:space="preserve">
          <source>FilterIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21785ef4c6583cc19b386d848ddf0d739abda41" translate="yes" xml:space="preserve">
          <source>FilterIterator::valid</source>
          <target state="translated">FilterIterator::valid</target>
        </trans-unit>
        <trans-unit id="e10b9e39cc838398de121efe5b0351e232373709" translate="yes" xml:space="preserve">
          <source>FilterIterator::valid &amp;mdash; Check whether the current element is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bbf1e2c83bc20e6726cf4c5ecdc5ce5dd6d19f" translate="yes" xml:space="preserve">
          <source>FilterIterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7345062babed7daed3cc915c191c729622c38ab4" translate="yes" xml:space="preserve">
          <source>Filtering a recursive iterator generally involves two conditions. The first is that, to allow recursion, the callback function should return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the current iterator item has children. The second is the normal filter condition, such as a file size or extension check as in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a99981fcedd8ca28fb899925a526d91b5282a52" translate="yes" xml:space="preserve">
          <source>Final Keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caac480a81536f3d99aa42bd716c01b1e9c4e73" translate="yes" xml:space="preserve">
          <source>Final Keyword &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f8a7d12abc0ffa39020921abfbad8a484e39f6" translate="yes" xml:space="preserve">
          <source>Final punctuation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad890f47254c1e1d67d067daeda611a8eb11922" translate="yes" xml:space="preserve">
          <source>Finally, if the constant or function &lt;em&gt;name&lt;/em&gt; does not exist in the current namespace, a global constant or function &lt;em&gt;name&lt;/em&gt; is used if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aad0343a5572690d7240d4b75d648acfa14ba2" translate="yes" xml:space="preserve">
          <source>Finally, see also the &lt;a href=&quot;https://secure.php.net/manual/en/ref.ctype.php&quot;&gt;character type functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b737ebbe01b01d64b41cc6e57979174f7a3d9f98" translate="yes" xml:space="preserve">
          <source>Finally, they may just assume the string is using a specific encoding, usually UTF-8. This is the case of most functions in the &lt;a href=&quot;https://secure.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; extension and in the &lt;a href=&quot;https://secure.php.net/manual/en/book.pcre.php&quot;&gt;PCRE&lt;/a&gt; extension (in the last case, only when the &lt;em&gt;u&lt;/em&gt; modifier is used). Although this is due to their special purpose, the function &lt;a href=&quot;function.utf8-decode&quot;&gt;utf8_decode()&lt;/a&gt; assumes a UTF-8 encoding and the function &lt;a href=&quot;function.utf8-encode&quot;&gt;utf8_encode()&lt;/a&gt; assumes an ISO-8859-1 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa34829a6ab51f27bff5b4a0d22cea76ec06210" translate="yes" xml:space="preserve">
          <source>Finally, you may also pass variable arguments &lt;a href=&quot;functions.arguments#functions.arguments.by-reference&quot;&gt;by reference&lt;/a&gt; by prefixing the &lt;em&gt;...&lt;/em&gt; with an ampersand (&lt;em&gt;&amp;amp;&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71aab5071f39b1c41d80e02c4f4043431745653c" translate="yes" xml:space="preserve">
          <source>Find next prime number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3980ca65174485492e9bd2b16885ffa5fbd1357" translate="yes" xml:space="preserve">
          <source>Find position (in grapheme units) of first occurrence of a case-insensitive string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d32bd9bf68229d6a7bdfd77b2a19ccdce6ebffc" translate="yes" xml:space="preserve">
          <source>Find position (in grapheme units) of first occurrence of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebb89986c181f286c4c48c349ff24b8d9f38439" translate="yes" xml:space="preserve">
          <source>Find position (in grapheme units) of last occurrence of a case-insensitive string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c482b41a65f1e9ef164d2137669acf70f56ef14" translate="yes" xml:space="preserve">
          <source>Find position (in grapheme units) of last occurrence of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea490b250d13df05facb8b8fb26214397a9ef1f4" translate="yes" xml:space="preserve">
          <source>Find the numeric position of the first occurrence of &lt;code&gt;needle&lt;/code&gt; in the &lt;code&gt;haystack&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1fd150cc05820785d802d997cdbb5f836bdd2b" translate="yes" xml:space="preserve">
          <source>Find the numeric position of the last occurrence of &lt;code&gt;needle&lt;/code&gt; in the &lt;code&gt;haystack&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f8b38d1d7c43aa95b43b4f64787acd7f73962b" translate="yes" xml:space="preserve">
          <source>Finds a Unicode character by its name and returns its code point value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e66565670381cb806b3ffa4c04819e5c2d4193" translate="yes" xml:space="preserve">
          <source>Finds longest matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0364295da41e50a89b1b81dbbd9dff4f2e1ece62" translate="yes" xml:space="preserve">
          <source>Finds out the DN of an entry in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c64904e6094f0c7cd43822be895c75d17a84ff" translate="yes" xml:space="preserve">
          <source>Finds out whether a global variable is registered in a session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9924281dc04ff5bca0690950a863271c8fb279" translate="yes" xml:space="preserve">
          <source>Finds out whether the extension is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7115f38f5a62589230808e5eeecb860ef46d7b" translate="yes" xml:space="preserve">
          <source>Finds position of first occurrence of a &lt;code&gt;needle&lt;/code&gt; within a &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9413b7edfac19d0548730a68ba4b303e612754a8" translate="yes" xml:space="preserve">
          <source>Finds position of the first occurrence of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616079630a5f8ae19177745f969e77cc43f4794f" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of a &lt;code&gt;needle&lt;/code&gt; within a &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c763dad4e79d92cf0e365c7280722a6354f5994" translate="yes" xml:space="preserve">
          <source>Finds the length of the initial segment of &lt;code&gt;subject&lt;/code&gt; that contains &lt;em&gt;only&lt;/em&gt; characters from &lt;code&gt;mask&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2239c0a62fb5c65c2b3b68bdd56d653c90c6a6c2" translate="yes" xml:space="preserve">
          <source>Finds the value belonging a header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcdbb76e286bf700a7dca84117878486184726c" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25652ab7037056c348da0da249cf76aa48d57c22" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is a boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2309f6b20ffb719cc5c855f644e4f685c0065dae" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1edba2d14e56dd2bb559807fd41040023671fb" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daa641263e1fe4baaa2f9013c495e485f8ed896" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fa080e3a43cbdd08c660e48988528d094aafda" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc46d879613d1c1376b749f939f50f88ff29945" translate="yes" xml:space="preserve">
          <source>Finds whether the given variable is numeric. Numeric strings consist of optional sign, any number of digits, optional decimal part and optional exponential part. Thus &lt;em&gt;+0123.45e6&lt;/em&gt; is a valid numeric value. Hexadecimal (e.g. &lt;em&gt;0xf4c3b00c&lt;/em&gt;) and binary (e.g. &lt;em&gt;0b10100111001&lt;/em&gt;) notation is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755554fe0bd70e8d942935b3712272ba38e53c24" translate="yes" xml:space="preserve">
          <source>Finds whether the type of the given variable is float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a85871fc86761cf19bed9ca986fc8bf175c55e" translate="yes" xml:space="preserve">
          <source>Finds whether the type of the given variable is integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae41be6519122ea82a00f2a1c29f3ba269ce4afb" translate="yes" xml:space="preserve">
          <source>Finds whether the type of the given variable is string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60289c9ff5d074f7cefdf3bc9500b1e0b73a06e0" translate="yes" xml:space="preserve">
          <source>Finished a requested connection on the bufferevent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea4d2b0ad8f12880a2249bfe46518ff28857c10" translate="yes" xml:space="preserve">
          <source>Firebird/InterBase</source>
          <target state="translated">Firebird/InterBase</target>
        </trans-unit>
        <trans-unit id="56f9d54fb4b851b67d54bb3a975724630b0af557" translate="yes" xml:space="preserve">
          <source>Fires/sets a SyncEvent object. Lets multiple threads through that are waiting if the event object was created with a manual value of TRUE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adf4189358887a2cd1ac6b830f58fb24bab9bc7" translate="yes" xml:space="preserve">
          <source>First array to compare keys against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238751702df2e16ea543fcf4d65b35b094a93075" translate="yes" xml:space="preserve">
          <source>First generate a public/private DH keypair locally, and have the remote party do the same. We need to use the &lt;em&gt;openssl&lt;/em&gt; command-line utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2825bbc00d827daab22c0ce180586b52a70db42" translate="yes" xml:space="preserve">
          <source>First it matches an opening parenthesis. Then it matches any number of substrings which can either be a sequence of non-parentheses, or a recursive match of the pattern itself (i.e. a correctly parenthesized substring). Finally there is a closing parenthesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582c571f0117a4f9e89dfb4809e56c5572bde2f9" translate="yes" xml:space="preserve">
          <source>First string to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2845cd1c4e06e7b1f4c81219bf89ad7112af882b" translate="yes" xml:space="preserve">
          <source>First value of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6a51d99024897d33410a86ea1a88f1ed0fdae0" translate="yes" xml:space="preserve">
          <source>First version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942d5fec314c0e6c7771ced4923a5e6ca81ce79c" translate="yes" xml:space="preserve">
          <source>First, an example use of &lt;em&gt;global&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da4bcd3a553890555cb6e5c9aae1872caca4b52" translate="yes" xml:space="preserve">
          <source>First, generate the DH prime number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bb67c72960f63a154e10707c8fda7ce823744a" translate="yes" xml:space="preserve">
          <source>First, the code inside of a phar archive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ce933174356d7c93f9b5ba2eb0ab040ebc943f" translate="yes" xml:space="preserve">
          <source>First, the common questions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a7c3e5d86469f44878c087919631724ff282eb" translate="yes" xml:space="preserve">
          <source>First, the current namespace name is prepended to &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a89f638b9a6142e438abbd4140bf5bc8d3815f" translate="yes" xml:space="preserve">
          <source>First, when connecting, the function will first try to find a (persistent) link that's already opened with the same parameters. If one is found, an identifier for it will be returned instead of opening a new connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4129c4bf3f0ef9558af020a776c18e4d21c98204" translate="yes" xml:space="preserve">
          <source>Fixed &lt;em&gt;host&lt;/em&gt; recognition when &lt;em&gt;scheme&lt;/em&gt; is omitted and a leading component separator is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1869c28ffa85abe78fd5f5d06971e2b411afb7" translate="yes" xml:space="preserve">
          <source>Fixed Blowfish behaviour on invalid rounds to return &quot;failure&quot; string (&quot;*0&quot; or &quot;*1&quot;), instead of falling back to DES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="7ef69909b41d40f599b11cb4ccde2e9ff57b63f3" translate="yes" xml:space="preserve">
          <source>Flag Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a8a222d30db6fd6517967b9681c7c337848a08" translate="yes" xml:space="preserve">
          <source>Flag determining what arguments are sent to &lt;code&gt;callback&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f453accfc509a6acfcf1da81f225739ea3da185" translate="yes" xml:space="preserve">
          <source>Flag for returning extended meta data. Default to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d331c27ca915768827875c958d035303c18f43d7" translate="yes" xml:space="preserve">
          <source>Flag used as argument of &lt;strong&gt;EventBuffer::setPosition()&lt;/strong&gt; method. If this flag specified, the position pointer is moved to an absolute position within the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63eed1d85be13aceeac6ba09aa53a154f3d18962" translate="yes" xml:space="preserve">
          <source>Flag used with &lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop()&lt;/a&gt; method which means: &quot;block until libevent has an active event, then exit once all active events have had their callbacks run&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02a8f978658982e454ce15fa87e4617bda2792c" translate="yes" xml:space="preserve">
          <source>Flag used with &lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop()&lt;/a&gt; method which means: &quot;do not block: see which events are ready now, run the callbacks of the highest-priority ones, then exit&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6303dfa1a47b02b4dd9d1183c32321e0001af1b7" translate="yes" xml:space="preserve">
          <source>Flagged - &lt;em&gt;F&lt;/em&gt; if flagged, ' ' if not flagged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="3240eacceb08b77e24aebe24a4b69b411cc056ce" translate="yes" xml:space="preserve">
          <source>Flags may be provided which will affect the behavior of some methods. A list of the flags can found under &lt;a href=&quot;class.filesystemiterator#filesystemiterator.constants&quot;&gt;FilesystemIterator predefined constants&lt;/a&gt;. They can also be set later with &lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator::setFlags()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fb67f910bd08c567202a932d9dc78f62a64666" translate="yes" xml:space="preserve">
          <source>Flags may be provided which will affect the behavior of some methods. A list of the flags can found under &lt;a href=&quot;class.filesystemiterator#filesystemiterator.constants&quot;&gt;FilesystemIterator predefined constants&lt;/a&gt;. They can also be set later with &lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator::setFlags()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35f2a1715de80f62526e758ab76fc0e15b58526" translate="yes" xml:space="preserve">
          <source>Flags may be provided which will affect the behavior of some methods. A list of the flags can found under &lt;a href=&quot;class.recursivetreeiterator#recursivetreeiterator.constants&quot;&gt;RecursiveTreeIterator predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0d7b6599cd816b5d4b9ab5c0713f6cd816cb5a" translate="yes" xml:space="preserve">
          <source>Flags passed to &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; , or &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ff8e0b46cd9128034b745c804cbcec0f81cd35" translate="yes" xml:space="preserve">
          <source>Flags passed to &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; , or &lt;a href=&quot;evloop.stop&quot;&gt;EvLoop::stop()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a45ad2d230bb9d2c48a9547f64a2f7c4bb5d9d" translate="yes" xml:space="preserve">
          <source>Flags passed to create a loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b565ca419220a4323dea0dcf37684afa30c5deb" translate="yes" xml:space="preserve">
          <source>Flags passed to the &lt;code&gt;filename&lt;/code&gt; stream. See the &lt;a href=&quot;function.file-put-contents&quot;&gt;file_put_contents()&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d24aeffb0464562bff3c39385f9f25c69711499" translate="yes" xml:space="preserve">
          <source>Flags to affect the behavior of the &lt;a href=&quot;class.recursivecachingiterator&quot;&gt;RecursiveCachingIterator&lt;/a&gt; used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0921ec5e5d1dc892fe825d90ecd1128196724376" translate="yes" xml:space="preserve">
          <source>Flags to affect the behavior of the &lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt; used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5d6e641b8d5fd679b7da2d012a22b2703cddba" translate="yes" xml:space="preserve">
          <source>Flags to control the behaviour of the &lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt; object. See &lt;a href=&quot;arrayiterator.setflags&quot;&gt;ArrayIterator::setFlags()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ef118e5e542d42a897f8097a8e63e5530b0b99" translate="yes" xml:space="preserve">
          <source>Flags to control the behaviour of the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt; object. See &lt;a href=&quot;arrayobject.setflags&quot;&gt;ArrayObject::setFlags()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7d8e1dd2fd19d7ff88df870bef56ac24f7bfec" translate="yes" xml:space="preserve">
          <source>Flags to control the returned result. When &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; is given, the function will also return the CAS token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4139526e7681d272c768498cc3ae681e059ba0d7" translate="yes" xml:space="preserve">
          <source>Flags to control the returned result. When value of &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; is given will return the CAS token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dface8decb150474e09f192f4fda81bebe0e59a" translate="yes" xml:space="preserve">
          <source>Flags to pass to &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; parent class &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b0734bdb8d317e8e171dc7f12ce00325eecc4b" translate="yes" xml:space="preserve">
          <source>Flags to pass to parent class &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c71df14d0ce3e506ab1da966a990148af64e7c3" translate="yes" xml:space="preserve">
          <source>Flip mode, this can be one of the &lt;strong&gt;&lt;code&gt;IMG_FLIP_*&lt;/code&gt;&lt;/strong&gt; constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2f2735054caf26df4271b63e4cd91a51770f15" translate="yes" xml:space="preserve">
          <source>Flips the &lt;code&gt;image&lt;/code&gt; image using the given &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416d4fea5242f30562b5b34fe0ef6afef092ac45" translate="yes" xml:space="preserve">
          <source>Flips the image both horizontally and vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aeab0d532e234118dc2634e0867857f08a2f823" translate="yes" xml:space="preserve">
          <source>Flips the image horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012bf44f8e1ecedb76ffd37dc3a20dcbed3701b7" translate="yes" xml:space="preserve">
          <source>Flips the image vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c2559ddef9cb0435b556f187c76ca13d0d375f" translate="yes" xml:space="preserve">
          <source>Floating point numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d7476d5bcc3b08a5d5b3fde65f5500ce21c22" translate="yes" xml:space="preserve">
          <source>Floating point numbers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8addf9da8ef68080e5d06164d49de5ace27f17ba" translate="yes" xml:space="preserve">
          <source>Floating point numbers (also known as &quot;floats&quot;, &quot;doubles&quot;, or &quot;real numbers&quot;) can be specified using any of the following syntaxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc26ea77ebdd611c521e633bd5170979655ec8b" translate="yes" xml:space="preserve">
          <source>Floating point numbers have limited precision. Although it depends on the system, PHP typically uses the IEEE 754 double precision format, which will give a maximum relative error due to rounding in the order of 1.11e-16. Non elementary arithmetic operations may give larger errors, and, of course, error propagation must be considered when several operations are compounded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a7c52b736c6775269c8d41cccd2d53a975b71c" translate="yes" xml:space="preserve">
          <source>Floating point precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99492a7cd70af3336262ab6598f8e89a8e027d38" translate="yes" xml:space="preserve">
          <source>Flushes tables or caches, or resets the replication server information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8d111a3ef3119026dacba4e446ca0eae5c7ff3" translate="yes" xml:space="preserve">
          <source>Flushes the current buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a76d774532e33d0ea7b40398d8a17b593a47cb" translate="yes" xml:space="preserve">
          <source>Flushes the system write buffers of PHP and whatever backend PHP is using (CGI, a web server, etc). This attempts to push current output all the way to the browser with a few caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e579f73a0a4d446d8529cc6328576777ae4d2b" translate="yes" xml:space="preserve">
          <source>Follow and sign redirects automatically, which is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93cd2eca567e78c9fb2966ec029e6b62000eda5" translate="yes" xml:space="preserve">
          <source>Following characters are preceded by a backslash: &lt;em&gt;&amp;amp;#;`|*?~&amp;lt;&amp;gt;^()[]{}$\&lt;/em&gt;, &lt;em&gt;\x0A&lt;/em&gt; and &lt;em&gt;\xFF&lt;/em&gt;. &lt;em&gt;'&lt;/em&gt; and &lt;em&gt;&quot;&lt;/em&gt; are escaped only if they are not paired. In Windows, all these characters plus &lt;em&gt;%&lt;/em&gt; and &lt;em&gt;!&lt;/em&gt; are replaced by a space instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46b7d7bd9792e8e5d0fc707d0d32fb9b55b8d9a" translate="yes" xml:space="preserve">
          <source>Following example script draws a dashed line from upper left to lower right corner of the canvas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7844751acf019949048f7d5e2a4b58efa6b902" translate="yes" xml:space="preserve">
          <source>Font name or a filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e5192d4d5d629a2a6c9e2273878fcfee973a6d" translate="yes" xml:space="preserve">
          <source>Font style (NormalStyle, ItalicStyle, ObliqueStyle, AnyStyle)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d56317994703d7c7e2db7cd66032f4e2fba9cf" translate="yes" xml:space="preserve">
          <source>Font weight (valid range 100-900)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b77698c47ac538c9ffb3bfe84a5348ca44c457" translate="yes" xml:space="preserve">
          <source>For 64-bit versions of PHP, the valid range of a timestamp is effectively infinite, as 64 bits can represent approximately 293 billion years in either direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2703fc76f74e406d5133e986671c9eddf7b44e" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;Bidi_Paired_Bracket_Type!=None&lt;/em&gt;, this is the same as &lt;a href=&quot;intlchar.charmirror&quot;&gt;IntlChar::charMirror()&lt;/a&gt;. Otherwise &lt;code&gt;codepoint&lt;/code&gt; itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fc4dab6b3de14fc96edb3dceb2df1f635022ef" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;ISO-8859-*&lt;/em&gt;, &lt;em&gt;mbstring&lt;/em&gt; always detects as &lt;em&gt;ISO-8859-*&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c522a164e3d6a12dcc63ae450ae1efa9e4249442" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;UTF-16&lt;/em&gt;, &lt;em&gt;UTF-32&lt;/em&gt;, &lt;em&gt;UCS2&lt;/em&gt; and &lt;em&gt;UCS4&lt;/em&gt;, encoding detection will fail always.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461bb246265af459045e4f1f0ded59f0bb002c38" translate="yes" xml:space="preserve">
          <source>For HTTP authentication, the &lt;em&gt;login&lt;/em&gt; and &lt;em&gt;password&lt;/em&gt; options can be used to supply credentials. For making an HTTP connection through a proxy server, the options &lt;em&gt;proxy_host&lt;/em&gt;, &lt;em&gt;proxy_port&lt;/em&gt;, &lt;em&gt;proxy_login&lt;/em&gt; and &lt;em&gt;proxy_password&lt;/em&gt; are also available. For HTTPS client certificate authentication use &lt;em&gt;local_cert&lt;/em&gt; and &lt;em&gt;passphrase&lt;/em&gt; options. An authentication may be supplied in the &lt;em&gt;authentication&lt;/em&gt; option. The authentication method may be either &lt;strong&gt;&lt;code&gt;SOAP_AUTHENTICATION_BASIC&lt;/code&gt;&lt;/strong&gt; (default) or &lt;strong&gt;&lt;code&gt;SOAP_AUTHENTICATION_DIGEST&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40c73a052f51220ef5c3e98261d78aff00bcd29" translate="yes" xml:space="preserve">
          <source>For Internet Domain sockets (&lt;strong&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/strong&gt;) such as TCP and UDP, the &lt;em&gt;target&lt;/em&gt; portion of the &lt;code&gt;remote_socket&lt;/code&gt; parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the &lt;em&gt;target&lt;/em&gt; portion should point to the socket file on the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f7cdde084afa8734243f4ddc2c91ea1026db20" translate="yes" xml:space="preserve">
          <source>For SELECT statements &lt;strong&gt;mysqli_affected_rows()&lt;/strong&gt; works like &lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_num_rows()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1577e41a2ba6bd5b2523ef4d8317ef7cd186302" translate="yes" xml:space="preserve">
          <source>For UDP sockets, you must use &lt;strong&gt;&lt;code&gt;STREAM_SERVER_BIND&lt;/code&gt;&lt;/strong&gt; as the &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbf59d255e47c45f57ebec9ebd7c5ffc3c566e3" translate="yes" xml:space="preserve">
          <source>For Unicode 1.0 names, only those are enumerated that differ from the modern names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366f1514a4fd2e528ccac62eaf0d63b8f9afb070" translate="yes" xml:space="preserve">
          <source>For Windows the &lt;code&gt;increment&lt;/code&gt; parameter have the following meanings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4a9b9ee3eda26b1650d65a72c38d360d12b955" translate="yes" xml:space="preserve">
          <source>For Zip-based and phar-based phar archives, this method compresses all files in the Phar archive using gzip compression. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension must be enabled to take advantage of this feature. In addition, if any files are already compressed using bzip2 compression, the &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extension must be enabled in order to decompress the files prior to re-compressing with gzip compression. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12843f37b2f8f9dbc265187e8f9be9c1100eb4d" translate="yes" xml:space="preserve">
          <source>For Zip-based and phar-based phar archives, this method compresses all files in the Phar archive using the specified compression. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extensions must be enabled to take advantage of this feature. In addition, if any files are already compressed using bzip2/zlib compression, the respective extension must be enabled in order to decompress the files prior to re-compressing. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2178fb4db0a608f460e7942d889090002182bc3a" translate="yes" xml:space="preserve">
          <source>For Zip-based and phar-based phar archives, this method decompresses all files in the Phar archive. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extensions must be enabled to take advantage of this feature if any files are compressed using bzip2/zlib compression. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aff4753bb1b0078990c76dce752726812f167e4" translate="yes" xml:space="preserve">
          <source>For Zip-based archives, this method compresses all files in the archive using the specified compression. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extensions must be enabled to take advantage of this feature. In addition, if any files are already compressed using bzip2/zlib compression, the respective extension must be enabled in order to decompress the files prior to re-compressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a732536a010d5d463ba45db791e5f397d38172d" translate="yes" xml:space="preserve">
          <source>For Zip-based archives, this method decompresses all files in the archive. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extensions must be enabled to take advantage of this feature if any files are compressed using bzip2/zlib compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379e65b48919623c285a0c28eadb70f984abf679" translate="yes" xml:space="preserve">
          <source>For Zip-based archives, this method fails with an exception. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension must be enabled to decompress an archive compressed with gzip compression, and the &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extension must be enabled in order to decompress an archive compressed with bzip2 compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18e297f7cfa2021d69c46cccacb9e38fbde440d" translate="yes" xml:space="preserve">
          <source>For Zip-based phar archives, this method fails with an exception. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension must be enabled to compress with gzip compression, the &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extension must be enabled in order to compress with bzip2 compression. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4080e657a2b889e10229528c2315e35844d577b" translate="yes" xml:space="preserve">
          <source>For Zip-based phar archives, this method fails with an exception. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension must be enabled to decompress an archive compressed with gzip compression, and the &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extension must be enabled in order to decompress an archive compressed with bzip2 compression. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a63830d7d2f3bbf5e7748b86da3b7dbd4e6bcee" translate="yes" xml:space="preserve">
          <source>For a &quot;simple&quot; explanation, see the &lt;a href=&quot;http://floating-point-gui.de/&quot;&gt;&amp;raquo; floating point guide&lt;/a&gt; that's also titled &quot;Why don&amp;rsquo;t my numbers add up?&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65442ec419f995e4c5c0283e2c2031d2fe01ebb1" translate="yes" xml:space="preserve">
          <source>For a PDOStatement object representing a scrollable cursor for which the &lt;em&gt;cursor_orientation&lt;/em&gt; parameter is set to &lt;em&gt;PDO::FETCH_ORI_ABS&lt;/em&gt;, this value specifies the absolute number of the row in the result set that shall be fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7b241d6c7677c6ffa1560feccfa3cbf4a6d960" translate="yes" xml:space="preserve">
          <source>For a PDOStatement object representing a scrollable cursor for which the &lt;em&gt;cursor_orientation&lt;/em&gt; parameter is set to &lt;em&gt;PDO::FETCH_ORI_REL&lt;/em&gt;, this value specifies the row to fetch relative to the cursor position before &lt;strong&gt;PDOStatement::fetch()&lt;/strong&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a276f51d4cdb0a8711188149d3406a795ee843" translate="yes" xml:space="preserve">
          <source>For a PDOStatement object representing a scrollable cursor, this value determines which row will be returned to the caller. This value must be one of the &lt;em&gt;PDO::FETCH_ORI_*&lt;/em&gt; constants, defaulting to &lt;em&gt;PDO::FETCH_ORI_NEXT&lt;/em&gt;. To request a scrollable cursor for your PDOStatement object, you must set the &lt;em&gt;PDO::ATTR_CURSOR&lt;/em&gt; attribute to &lt;em&gt;PDO::CURSOR_SCROLL&lt;/em&gt; when you prepare the SQL statement with &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684ec7d5d093661ddceb56da31c3fe609dcbf106" translate="yes" xml:space="preserve">
          <source>For a better-performing solution, try the &lt;a href=&quot;http://pecl.php.net/package/hidef&quot;&gt;&amp;raquo; hidef&lt;/a&gt; extension from PECL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea0f5b41edf57821f48954ddd38f017c24876e2" translate="yes" xml:space="preserve">
          <source>For a description of &lt;em&gt;contexts&lt;/em&gt;, refer to &lt;a href=&quot;https://secure.php.net/manual/en/ref.stream.php&quot;&gt;Stream Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdb5aa909066193219c8a69d17b060054d0938c" translate="yes" xml:space="preserve">
          <source>For a description of the &lt;code&gt;context&lt;/code&gt; parameter, refer to &lt;a href=&quot;https://secure.php.net/manual/en/ref.stream.php&quot;&gt;the streams section&lt;/a&gt; of the manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f724acb4a6cd83f9214840452e744d746198fa76" translate="yes" xml:space="preserve">
          <source>For a full discussion, see the &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.php&quot;&gt;Classes and Objects&lt;/a&gt; chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768dc06286f617c7de47e21f8a84bd59c2b6f08c" translate="yes" xml:space="preserve">
          <source>For a given locale key, get the set of values for that key that would result in a different behavior. For now, only the &lt;em&gt;'calendar'&lt;/em&gt; keyword is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4029929daff291aac60b29df1f2d5089b0d082" translate="yes" xml:space="preserve">
          <source>For a hexadecimal representation of the checksum you can either use the &quot;%x&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; or the &lt;a href=&quot;function.dechex&quot;&gt;dechex()&lt;/a&gt; conversion functions, both of these also take care of converting the &lt;strong&gt;crc32()&lt;/strong&gt; result to an unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d4545e4a50803654ea81c45f678e474c6cde0a" translate="yes" xml:space="preserve">
          <source>For a list of parser tokens, see &lt;a href=&quot;https://secure.php.net/manual/en/tokens.php&quot;&gt;List of Parser Tokens&lt;/a&gt;, or use &lt;a href=&quot;function.token-name&quot;&gt;token_name()&lt;/a&gt; to translate a token value into its string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc24e31735a969b25e0a6b68ec042df6c0acf93" translate="yes" xml:space="preserve">
          <source>For a more portable solution you may also consider the generic &lt;a href=&quot;function.hash&quot;&gt;hash()&lt;/a&gt;. &lt;code&gt;hash(&quot;crc32b&quot;, $str)&lt;/code&gt; will return the same string as &lt;code&gt;str_pad(dechex(crc32($str)), 8, '0', STR_PAD_LEFT)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95be2993df00de57e2a567d73c3705dc770bae28" translate="yes" xml:space="preserve">
          <source>For a non-admin user version of this function, please see the &lt;a href=&quot;function.imap-get-quotaroot&quot;&gt;imap_get_quotaroot()&lt;/a&gt; function of PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e8f00be43f3ae3327c6662398ed037edae274a" translate="yes" xml:space="preserve">
          <source>For a query that you need to issue multiple times, you will realize better performance if you prepare a PDOStatement object using &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; and issue the statement with multiple calls to &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3292902aba9a9c3fe8b63aad1ba43924589749f" translate="yes" xml:space="preserve">
          <source>For a set of tasks previously added with &lt;a href=&quot;gearmanclient.addtask&quot;&gt;GearmanClient::addTask()&lt;/a&gt;, &lt;a href=&quot;gearmanclient.addtaskhigh&quot;&gt;GearmanClient::addTaskHigh()&lt;/a&gt;, &lt;a href=&quot;gearmanclient.addtasklow&quot;&gt;GearmanClient::addTaskLow()&lt;/a&gt;, &lt;a href=&quot;gearmanclient.addtaskbackground&quot;&gt;GearmanClient::addTaskBackground()&lt;/a&gt;, &lt;a href=&quot;gearmanclient.addtaskhighbackground&quot;&gt;GearmanClient::addTaskHighBackground()&lt;/a&gt;, or &lt;a href=&quot;gearmanclient.addtasklowbackground&quot;&gt;GearmanClient::addTaskLowBackground()&lt;/a&gt;, this call starts running the tasks in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e82770eac575f3f1c7b993b06e518d05f00544" translate="yes" xml:space="preserve">
          <source>For an explanation about each option, see &lt;a href=&quot;http://tidy.sourceforge.net/docs/quickref.html&quot;&gt;&amp;raquo; http://tidy.sourceforge.net/docs/quickref.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c418eaaaa5bf233afc7b9e62f0bb201ed7f2c29b" translate="yes" xml:space="preserve">
          <source>For an explanation about each option, visit &lt;a href=&quot;http://tidy.sourceforge.net/docs/quickref.html&quot;&gt;&amp;raquo; http://tidy.sourceforge.net/docs/quickref.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d902bb60a68d3b1e884f76ec5d606a9bac138c36" translate="yes" xml:space="preserve">
          <source>For animated GIFs, this function does not change the number of 'image ticks' per second, which is always defined as 100. Instead it adjusts the amount of time that the frame is displayed for to simulate the change in 'ticks per second'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c54033ac41ca8fdfd6a188feed2460bb6ae6a58" translate="yes" xml:space="preserve">
          <source>For any of the types &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;, &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;, converting a value to an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; results in an array with a single element with index zero and the value of the scalar which was converted. In other words, &lt;em&gt;(array)$scalarValue&lt;/em&gt; is exactly the same as &lt;em&gt;array($scalarValue)&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c98b878d83d717d2dd5c8735b4072965268bbc7" translate="yes" xml:space="preserve">
          <source>For any other value, a member variable named &lt;em&gt;scalar&lt;/em&gt; will contain the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2a6f5afd54314cab594c4dfa1716c1391dceff" translate="yes" xml:space="preserve">
          <source>For anything more complex, you should use the complex syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a737f1eca4ad147c03980207edc9ceb517dffca" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, &lt;strong&gt;array_key_exists()&lt;/strong&gt; will also return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;key&lt;/code&gt; is a property defined within an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; given as &lt;code&gt;array&lt;/code&gt;. This behaviour should not be relied upon, and care should be taken to ensure that &lt;code&gt;array&lt;/code&gt; is an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5212ebf0113823440b289fb4d0eb671c40d6e4" translate="yes" xml:space="preserve">
          <source>For backwards compatibility reasons, the original access methods are still available for use, although it is suggested to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7450246cbbc3aa186f1baf08b2f432cc4cc1fe8e" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with PHP 3 and 4, if PHP cannot find a &lt;a href=&quot;language.oop5.decon#object.construct&quot;&gt;__construct()&lt;/a&gt; function for a given class, it will search for the old-style constructor function, by the name of the class. Effectively, it means that the only case that would have compatibility issues is if the class had a method named &lt;a href=&quot;language.oop5.decon#object.construct&quot;&gt;__construct()&lt;/a&gt; which was used for different semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55936707b1e3417f018aeeca8d5328f5fd5cac05" translate="yes" xml:space="preserve">
          <source>For brevity, this example omits input validation. However, the &lt;em&gt;$id&lt;/em&gt; parameters are actually user supplied values which require proper validation/sanitization to avoid vulnerabilities, such as path traversal issues. &lt;em&gt;So do not use this example unmodified in production environments.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0820f81185ec85dc738f9c564ab53ce0ae519e7" translate="yes" xml:space="preserve">
          <source>For case-insensitive filesystems &lt;strong&gt;realpath()&lt;/strong&gt; may or may not normalize the character case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248f9a6ef2b5f3e0f035c36e44bf14dee278c8d2" translate="yes" xml:space="preserve">
          <source>For characters with the &lt;em&gt;Bidi_Mirrored&lt;/em&gt; property, implementations sometimes need a &quot;poor man's&quot; mapping to another Unicode character (code point) such that the default glyph may serve as the mirror-image of the default glyph of the specified character. This is useful for text conversion to and from codepages with visual order, and for displays without glyph selection capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf91b9faf47639be23e0d66384d1283e11bd426b" translate="yes" xml:space="preserve">
          <source>For characters without any numeric values in the Unicode Character Database, this function will return &lt;strong&gt;&lt;code&gt;IntlChar::NO_NUMERIC_VALUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7467828cabbfd60595bcad9e9187549cbd39ed2" translate="yes" xml:space="preserve">
          <source>For compatibility with PHP 4, if no &lt;a href=&quot;language.oop5.visibility&quot;&gt;visibility&lt;/a&gt; declaration is used, then the property or method will be treated as if it was declared as &lt;em&gt;public&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d7159f15754b235ad5acee00f73aa6e519edf9" translate="yes" xml:space="preserve">
          <source>For compatibility with Windows before this was implemented, then try the &lt;a href=&quot;http://pear.php.net/&quot;&gt;&amp;raquo; PEAR&lt;/a&gt; class &lt;a href=&quot;http://pear.php.net/package/Net_DNS&quot;&gt;&amp;raquo; Net_DNS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac8025d9d9f3de4829f891e428503a4f2d0580d" translate="yes" xml:space="preserve">
          <source>For compatibility with versions before PHP 5.3.0 on some operating systems, try the &lt;a href=&quot;http://pear.php.net/&quot;&gt;&amp;raquo; PEAR&lt;/a&gt; class &lt;a href=&quot;http://pear.php.net/package/Net_DNS&quot;&gt;&amp;raquo; Net_DNS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3234fba0832e6d8140c3aa18c49946273d213ced" translate="yes" xml:space="preserve">
          <source>For convenience (and historical compatibility) the three most common quantifiers have single-character abbreviations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca9aad784b59fa118d9b1813ab6ff3c6a7e5b11" translate="yes" xml:space="preserve">
          <source>For currencies you can use currency format type to create a formatter that returns a string with the formatted number and the appropriate currency sign. Of course, the NumberFormatter class is unaware of exchange rates so, the number output is the same regardless of the specified currency. This means that the same number has different monetary values depending on the currency locale. If the number is 9988776.65 the results will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59524ac1c3596640f60fe31c0e13e056f928cf36" translate="yes" xml:space="preserve">
          <source>For decompressing, the default file extension is &lt;em&gt;.tar&lt;/em&gt;. Use this parameter to specify another file extension. Be aware that only executable archives can contain &lt;em&gt;.phar&lt;/em&gt; in their filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e8d57d83cb821b4df8d922497cdea8979f05a5" translate="yes" xml:space="preserve">
          <source>For decompressing, the default file extensions are &lt;em&gt;.phar&lt;/em&gt; and &lt;em&gt;.phar.tar&lt;/em&gt;. Use this parameter to specify another file extension. Be aware that all executable phar archives must contain &lt;em&gt;.phar&lt;/em&gt; in their filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e1d7b98a9ad812431883c7ea999d369dedefd3" translate="yes" xml:space="preserve">
          <source>For details on the DEFLATE compression algorithm see the document &quot;&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1951&quot;&gt;&amp;raquo; DEFLATE Compressed Data Format Specification version 1.3&lt;/a&gt;&quot; (RFC 1951).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f475087ad0bc7c696df69d6154adcea5a0d47f" translate="yes" xml:space="preserve">
          <source>For details on the ZLIB compression algorithm see the document &quot;&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1950&quot;&gt;&amp;raquo; ZLIB Compressed Data Format Specification version 3.3&lt;/a&gt;&quot; (RFC 1950).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dadfa307745b016cf957f42da1248763f549865" translate="yes" xml:space="preserve">
          <source>For details, consult your system documentation on the &lt;em&gt;tmpfile(3)&lt;/em&gt; function, as well as the &lt;var&gt;stdio.h&lt;/var&gt; header file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61031245ac5b3a9042f673fecc5bb2cfb06dc222" translate="yes" xml:space="preserve">
          <source>For each contiguous range of code points with a given general category (&quot;character type&quot;), the &lt;code&gt;callback&lt;/code&gt; function is called. Adjacent ranges have different types. The Unicode Standard guarantees that the numeric value of the type is 0..31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb30ab1c8a6536a95aeac9782db50ae4f0c7a59" translate="yes" xml:space="preserve">
          <source>For each of these, &lt;strong&gt;compact()&lt;/strong&gt; looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key. In short, it does the opposite of &lt;a href=&quot;function.extract&quot;&gt;extract()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70ae25cec9c06664b3879dc2d6aa92bda9215f2" translate="yes" xml:space="preserve">
          <source>For either mode, the error code and message, if any, will be available via &lt;a href=&quot;sqlite3.lasterrorcode&quot;&gt;SQLite3::lastErrorCode()&lt;/a&gt; and &lt;a href=&quot;sqlite3.lasterrormsg&quot;&gt;SQLite3::lastErrorMsg()&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71e97e7a9ac2a838fc151e98b110afab573eeb0" translate="yes" xml:space="preserve">
          <source>For errors that originate from SQL Server, the native SQL Server error code. For errors that originate from the ODBC driver, the error code returned by ODBC. For errors that originate from the Microsoft Drivers for PHP for SQL Server, the Microsoft Drivers for PHP for SQL Server error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a91baac955bcaa19f5c668909e96757bd35b7de" translate="yes" xml:space="preserve">
          <source>For errors that originate from the ODBC driver, the SQLSTATE returned by ODBC. For errors that originate from the Microsoft Drivers for PHP for SQL Server, a SQLSTATE of IMSSP. For warnings that originate from the Microsoft Drivers for PHP for SQL Server, a SQLSTATE of 01SSP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604bfeb5900ee55919f47487d1f0e61fdf49a99b" translate="yes" xml:space="preserve">
          <source>For example, (?im) sets case-insensitive (caseless), multiline matching. It is also possible to unset these options by preceding the letter with a hyphen, and a combined setting and unsetting such as (?im-sx), which sets &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_CASELESS&lt;/a&gt; and &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt; while unsetting &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; and &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_EXTENDED&lt;/a&gt;, is also permitted. If a letter appears both before and after the hyphen, the option is unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed20dd25f2fc0f2a1a7b86b872f45f6b76a95a01" translate="yes" xml:space="preserve">
          <source>For example, for an animated GIF where each frame is displayed for 20 ticks (1/5 of a second) when this method is called on each frame of that image with an argument of &lt;em&gt;50&lt;/em&gt; the frames are adjusted to be displayed for 40 ticks (2/5 of a second) and the animation will play at half the original speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8f30e0c702fa9ec13f36ad8330b1bc33244e16" translate="yes" xml:space="preserve">
          <source>For example, if a function is defined in &lt;code&gt;filename&lt;/code&gt;, this defined function will be available to the file that executed &lt;strong&gt;php_check_syntax()&lt;/strong&gt;, but output from &lt;code&gt;filename&lt;/code&gt; will be suppressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bdc8efa30ad35a72b531596957af21318e4ecb" translate="yes" xml:space="preserve">
          <source>For example, if the string &quot;the red king&quot; is matched against the pattern &lt;em&gt;the ((red|white) (king|queen))&lt;/em&gt; the captured substrings are &quot;red king&quot;, &quot;red&quot;, and &quot;king&quot;, and are numbered 1, 2, and 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4317b6c7214b6c1f339aee621cdd729163f94da0" translate="yes" xml:space="preserve">
          <source>For example, if you want to match a &quot;*&quot; character, you write &quot;\*&quot; in the pattern. This applies whether or not the following character would otherwise be interpreted as a meta-character, so it is always safe to precede a non-alphanumeric with &quot;\&quot; to specify that it stands for itself. In particular, if you want to match a backslash, you write &quot;\\&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5dd82a99d462b0e50c4088347817c5a081b408" translate="yes" xml:space="preserve">
          <source>For example, people may choose to ignore accents or ignore accents and case when searching for text. Almost all characters are distinguished by the first three levels, and in most locales the default value is thus Tertiary. However, if Alternate is set to be Shifted, then the Quaternary strength can be used to break ties among whitespace, punctuation, and symbols that would otherwise be ignored. If very fine distinctions among characters are required, then the Identical strength can be used (for example, Identical Strength distinguishes between the Mathematical Bold Small A and the Mathematical Italic Small A.). However, using levels higher than Tertiary the Identical strength result in significantly longer sort keys, and slower string comparison performance for equal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbfa433cf8a12af360c7d585fb36a40c4fa6969" translate="yes" xml:space="preserve">
          <source>For example, the character class [aeiou] matches any lower case vowel, while [^aeiou] matches any character that is not a lower case vowel. Note that a circumflex is just a convenient notation for specifying the characters which are in the class by enumerating those that are not. It is not an assertion: it still consumes a character from the subject string, and fails if the current pointer is at the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac9494c674bebb6b09c7d452e68c08d6fb45405" translate="yes" xml:space="preserve">
          <source>For example, the following code snippet prints &quot;This was a test&quot; three times:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db27bf2a82f45fee49b474fbbd87062b7acdd77f" translate="yes" xml:space="preserve">
          <source>For example, this code will result in a warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a7e645cf246455c14cee857c964bfce4b57d57" translate="yes" xml:space="preserve">
          <source>For example, to match all unanswered messages sent by Mom, you'd use: &quot;UNANSWERED FROM mom&quot;. Searches appear to be case insensitive. This list of criteria is from a reading of the UW c-client source code and may be incomplete or inaccurate (see also &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2060&quot;&gt;&amp;raquo; RFC2060&lt;/a&gt;, section 6.4.4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd8c9a6de4f5e98c6102efb3304d98b8e43b211" translate="yes" xml:space="preserve">
          <source>For example, when you extend a class, the subclass inherits all of the public and protected methods from the parent class. Unless a class overrides those methods, they will retain their original functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01490096d0e5548b7b2a4c7ce9262824d253575" translate="yes" xml:space="preserve">
          <source>For fields that conflict, the fields that are set later have priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7361b815e4464f42d83299626f597a46e0f0e2c" translate="yes" xml:space="preserve">
          <source>For functions and constants, PHP will fall back to global functions or constants if a namespaced function or constant does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8d78141c45936b0a96f931a7b766c8cae5c8bc" translate="yes" xml:space="preserve">
          <source>For having &lt;strong&gt;socket_getpeername()&lt;/strong&gt; to return a meaningful value, the socket it is applied upon must of course be one for which the concept of &quot;peer&quot; makes sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860bed2c9e28e05497db73ba88503673d62392d" translate="yes" xml:space="preserve">
          <source>For information on converting &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;, see &lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;String conversion to numbers&lt;/a&gt;. For values of other types, the conversion is performed by converting the value to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; first and then to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;. See &lt;a href=&quot;language.types.integer#language.types.integer.casting&quot;&gt;Converting to integer&lt;/a&gt; for more information. As of PHP 5, a notice is thrown if an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; is converted to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847efc4ca561a565852f9c63789b538e9f06506c" translate="yes" xml:space="preserve">
          <source>For information on retrieving the current path info, read the section on &lt;a href=&quot;language.variables.predefined&quot;&gt; predefined reserved variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd97cb3417d508a8606e12be2973162e7259a45" translate="yes" xml:space="preserve">
          <source>For information on setting up a user defined log handler, see the syslog.conf(5) Unix manual page. More information on the syslog facilities and option can be found in the man pages for syslog(3) on Unix machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6988dfd35749b36d5f7c1c412bbfe032d0274905" translate="yes" xml:space="preserve">
          <source>For information on variable related functions, see the &lt;a href=&quot;https://secure.php.net/manual/en/ref.var.php&quot;&gt;Variable Functions Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9deaca36a57f4415a30096a681bb34359d6f324c" translate="yes" xml:space="preserve">
          <source>For instance, French notation usually use two decimals, comma (',') as decimal separator, and space (' ') as thousand separator. The following example demonstrates various ways to format a number:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a9c736e63080e703f294deec37a723dfc767a3" translate="yes" xml:space="preserve">
          <source>For instance, in the gregorian calendar, the actual maximum value for the &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-day-of-month&quot;&gt;day of month&lt;/a&gt; would vary between &lt;em&gt;28&lt;/em&gt; and &lt;em&gt;31&lt;/em&gt;, depending on the month and year of the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb15b8d64e7ba169c9de6eae1f4bbce244878f7" translate="yes" xml:space="preserve">
          <source>For iterators that return SplFileInfo objects, the portion of each file's full path to remove when adding to the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535a13cf89133ce128280b307b10cb07ba2afe3b" translate="yes" xml:space="preserve">
          <source>For iterators that return SplFileInfo objects, the portion of each file's full path to remove when adding to the tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5b7fd9e804686ef5ea7bc947e82ecb01f6e446" translate="yes" xml:space="preserve">
          <source>For local files, the specific return value is that of the &lt;em&gt;st_mode&lt;/em&gt; member of the structure returned by the C library's &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; function. Exactly which bits are set can vary from platform to platform, and looking up your specific platform's documentation is recommended if parsing the non-permission bits of the return value is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669dbfeba39d60220f8048ae3be634fba58f927c" translate="yes" xml:space="preserve">
          <source>For more complex formatting, like spelled-out numbers, the rule-based number formatters are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9693a4ee059b47e2bd83d35aeed9eb887b3044" translate="yes" xml:space="preserve">
          <source>For more detailed server information, use &lt;a href=&quot;function.pg-parameter-status&quot;&gt;pg_parameter_status()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ee075921db93964a12032304b21da1b9718a70" translate="yes" xml:space="preserve">
          <source>For more examples of iterators, see the &lt;a href=&quot;https://secure.php.net/manual/en/spl.iterators.php&quot;&gt;SPL Extension&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e1d138ef9047730211b8647e56f780d120d7a5" translate="yes" xml:space="preserve">
          <source>For more information about magic_quotes, see this &lt;a href=&quot;https://secure.php.net/manual/en/security.magicquotes.php&quot;&gt;security section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94443d438f36b7d1587b95d3260d9c4c615e95cf" translate="yes" xml:space="preserve">
          <source>For more information about the Unicode properties, please see &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr21/&quot;&gt;&amp;raquo; http://www.unicode.org/unicode/reports/tr21/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8824c3e9666f368c5efcd826c5b27e01df6eeb2" translate="yes" xml:space="preserve">
          <source>For more information about the format options, read the &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aac479e9c54dbcef879f6ba163233e4211692c6" translate="yes" xml:space="preserve">
          <source>For more information on how PHP handles including files and the include path, see the documentation for &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1a45b36ca453046fcd65eb2f896338bdf0ca59" translate="yes" xml:space="preserve">
          <source>For more information on references, please check out &lt;a href=&quot;https://secure.php.net/manual/en/language.references.php&quot;&gt;References Explained&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa47d2e6dd78facc2ff982c465f6f22f91e8f7cc" translate="yes" xml:space="preserve">
          <source>For more information on the GZIP file format, see the document: &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1952&quot;&gt;&amp;raquo; GZIP file format specification version 4.3&lt;/a&gt; (RFC 1952).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dda9702fc44fcb41f85f4c014a5e494f6da15c" translate="yes" xml:space="preserve">
          <source>For more information on this conversion, see the Unix manual page for strtod(3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37880921c029ecffb689e7ee4368a7b1f409b208" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.close&quot;&gt;SessionHandlerInterface::close()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0a2e50f1b815570b24838df826d676e7f0fdef" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.destroy&quot;&gt;SessionHandlerInterface::destroy()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2083b14f4519ca4f946af653707d3ff984c62ebd" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.gc&quot;&gt;SessionHandlerInterface::gc()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0c58952cc21a4ada9ad40957ff94376ded8801" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.open&quot;&gt;SessionHandlerInterface::open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2fc477376f967d340b2d42a31ddc14e986c041" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.read&quot;&gt;SessionHandlerInterface::read()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6118066d928a063a97948024b9d94bfb78451365" translate="yes" xml:space="preserve">
          <source>For more information on what this method is expected to do, please refer to the documentation at &lt;a href=&quot;sessionhandlerinterface.write&quot;&gt;SessionHandlerInterface::write()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0a32895cccf03c28bcfb308c83ccb7f1d7cd85" translate="yes" xml:space="preserve">
          <source>For more information see: Martin Pool's &lt;a href=&quot;http://sourcefrog.net/projects/natsort/&quot;&gt;&amp;raquo; Natural Order String Comparison&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d347f13c066e3c68033c0f01e54af113f3a5723" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;functions.returning-values&quot;&gt;Returning values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfef6fd51b55ae056de0e14e11fc48b51f7e45b3" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc296197.aspx&quot;&gt;&amp;raquo; sqlsrv_field_metadata&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f39a9c51b8a54e63c71f8ca08f02c4cc3555c2a" translate="yes" xml:space="preserve">
          <source>For most databases, &lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; does not return the number of rows affected by a SELECT statement. Instead, use &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; to issue a SELECT COUNT(*) statement with the same predicates as your intended SELECT statement, then use &lt;a href=&quot;pdostatement.fetchcolumn&quot;&gt;PDOStatement::fetchColumn()&lt;/a&gt; to retrieve the number of rows that will be returned. Your application can then perform the correct action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a831afaf5eef45807541c24e86de13fb6d6e3f65" translate="yes" xml:space="preserve">
          <source>For most phar archives, the archive will reflect an actual directory layout, and the second style is the most useful. For instance, to create a phar archive containing the files in this sample directory layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4a7bf094893b659894c3b3778a1c4fa9c4d800" translate="yes" xml:space="preserve">
          <source>For most tar/zip archives, the archive will reflect an actual directory layout, and the second style is the most useful. For instance, to create a tar/zip archive containing the files in this sample directory layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5031e062ed1da1b430ba62276fa233680bfa118f" translate="yes" xml:space="preserve">
          <source>For multi-value fields, if a valid boost value is specified, the specified value will be multiplied by the current boost value for this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e65353f0604d2199923214e6966da4b17cd48c2" translate="yes" xml:space="preserve">
          <source>For non-DML queries (not INSERT, UPDATE or DELETE), this function is similar to calling &lt;a href=&quot;mysqli.real-query&quot;&gt;mysqli_real_query()&lt;/a&gt; followed by either &lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result()&lt;/a&gt; or &lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eb7e2da74fb1633db714e375f4efc8bf2cb1cf" translate="yes" xml:space="preserve">
          <source>For now, this function is not available on non-POSIX compliant systems except Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02cf858096a684b4af33fd7fb08ae5f045b30f1" translate="yes" xml:space="preserve">
          <source>For objects, if you have &lt;a href=&quot;https://secure.php.net/manual/en/ref.spl.php&quot;&gt;SPL&lt;/a&gt; installed, you can hook into &lt;strong&gt;count()&lt;/strong&gt; by implementing interface &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;. The interface has exactly one method, &lt;a href=&quot;countable.count&quot;&gt;Countable::count()&lt;/a&gt;, which returns the return value for the &lt;strong&gt;count()&lt;/strong&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a4654fca20e42d34b2ae215ffcfc6837d464f1" translate="yes" xml:space="preserve">
          <source>For outputting large blocks of text, dropping out of PHP parsing mode is generally more efficient than sending all of the text through &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; or &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2126d539341b61faf99dca2dec84f027d15fe6d" translate="yes" xml:space="preserve">
          <source>For parameter information, see the &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e154003069a25a7a2a7747a7c466ca32931124f" translate="yes" xml:space="preserve">
          <source>For parameter information, see the &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ce2690755436f7203c9b1376f7f44b8504f9d9" translate="yes" xml:space="preserve">
          <source>For persistent connections: &lt;a href=&quot;function.odbc-pconnect&quot;&gt;odbc_pconnect()&lt;/a&gt; - Open a persistent database connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8005d71e47332a8fd8745411c0123ce0272089e6" translate="yes" xml:space="preserve">
          <source>For portability, it is strongly recommended that you always use the 'b' flag when opening files with &lt;strong&gt;fopen()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20f4325ba3438c8551784a4ba48cd4427de81c9" translate="yes" xml:space="preserve">
          <source>For proper working, the function &lt;strong&gt;is_uploaded_file()&lt;/strong&gt; needs an argument like &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.files&quot;&gt;$_FILES['userfile']['tmp_name']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;, - the name of the uploaded file on the client's machine &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.files&quot;&gt;$_FILES['userfile']['name']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; does not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7638104da8f3f15bf8036a649aa5cfb00de87dd8" translate="yes" xml:space="preserve">
          <source>For qualified names the first segment of the name is translated according to the current class/namespace import table. For example, if the namespace &lt;em&gt;A\B\C&lt;/em&gt; is imported as &lt;em&gt;C&lt;/em&gt;, the name &lt;em&gt;C\D\E&lt;/em&gt; is translated to &lt;em&gt;A\B\C\D\E&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0da044785f665ae467261d5a3dde8d65c37193" translate="yes" xml:space="preserve">
          <source>For qualified names, if no import rule applies, the current namespace is prepended to the name. For example, the name &lt;em&gt;C\D\E&lt;/em&gt; inside namespace &lt;em&gt;A\B&lt;/em&gt;, resolves to &lt;em&gt;A\B\C\D\E&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a6a112a411ef1bc970ae37509ea88bf4cad78" translate="yes" xml:space="preserve">
          <source>For related information on this change, read the configuration entry for &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt;, the security chapter on &lt;a href=&quot;https://secure.php.net/manual/en/security.globals.php&quot;&gt;Using Register Globals &lt;/a&gt;, as well as the PHP &lt;a href=&quot;http://www.php.net/releases/4_1_0.php&quot;&gt;&amp;raquo; 4.1.0 &lt;/a&gt; and &lt;a href=&quot;http://www.php.net/releases/4_2_0.php&quot;&gt;&amp;raquo; 4.2.0&lt;/a&gt; Release Announcements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96fe755e5e0119a9c31945feef1535746831d2c" translate="yes" xml:space="preserve">
          <source>For related information, see the FAQ titled &quot;&lt;a href=&quot;https://secure.php.net/manual/en/faq.using.php#faq.register-globals&quot;&gt;How does register_globals affect me?&lt;/a&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ead776059a17018ce4f9b5f8afab486928683a9" translate="yes" xml:space="preserve">
          <source>For resources with the ability to link to other resource (such as an HTTP Location: forward, or a filesystem symlink). This flag specified that only information about the link itself should be returned, not the resource pointed to by the link. This flag is set in response to calls to &lt;a href=&quot;function.lstat&quot;&gt;lstat()&lt;/a&gt;, &lt;a href=&quot;function.is-link&quot;&gt;is_link()&lt;/a&gt;, or &lt;a href=&quot;function.filetype&quot;&gt;filetype()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39344ffd7b1a7004b744fff956cd1e23dd9a01a7" translate="yes" xml:space="preserve">
          <source>For retrieving warning messages you can use the SQL command &lt;em&gt;SHOW WARNINGS [limit row_count]&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac199db8d7c3bdfd872f3069869e942b15278165" translate="yes" xml:space="preserve">
          <source>For security reasons the &lt;strong&gt;&lt;code&gt;MULTI_STATEMENT&lt;/code&gt;&lt;/strong&gt; flag is not supported in PHP. If you want to execute multiple queries use the &lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli_multi_query()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a53c543ca51f1ac5f7614678792fa24097d3c0" translate="yes" xml:space="preserve">
          <source>For security reasons, &lt;em&gt;none&lt;/em&gt; is disabled by the underlying &lt;a href=&quot;http://libssh2.org/&quot;&gt;&amp;raquo; libssh2&lt;/a&gt; library unless explicitly enabled during build time by using the appropriate ./configure options. See documentation for the underlying library for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f782317109870b1781be257a47120884c1c6dfd8" translate="yes" xml:space="preserve">
          <source>For security, $_GET/$_POST are readonly in Yaf, which means if you set a value to these global variables, you can not get it from &lt;a href=&quot;yaf-request-http.getquery&quot;&gt;Yaf_Request_Http::getQuery()&lt;/a&gt; or &lt;a href=&quot;yaf-request-http.getpost&quot;&gt;Yaf_Request_Http::getPost()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea40f4bef4be7da56222f0d810ddb740b1bc450" translate="yes" xml:space="preserve">
          <source>For service providers which support 1.0a, a &lt;code&gt;verifier_token&lt;/code&gt; must be passed while exchanging the request token for the access token. If the &lt;code&gt;verifier_token&lt;/code&gt; is present in &lt;code&gt;$_GET&lt;/code&gt; or &lt;code&gt;$_POST&lt;/code&gt; it is passed automatically and the caller does not need to specify a &lt;code&gt;verifier_token&lt;/code&gt; (usually if the access token is exchanged at the oauth_callback URL). &lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo; See ScalableOAuth&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0436a8e8991dc2019f90ded215eb32d6ba763eb7" translate="yes" xml:space="preserve">
          <source>For some image types, the presence of &lt;em&gt;channels&lt;/em&gt; and &lt;em&gt;bits&lt;/em&gt; values can be a bit confusing. As an example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96083e85554035de1addcb13060ce0710c2e009d" translate="yes" xml:space="preserve">
          <source>For statements that you plan to execute only once, use &lt;strong&gt;sqlsrv_query()&lt;/strong&gt;. If you intend to re-execute a statement with different parameter values, use the combination of &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt; and &lt;a href=&quot;function.sqlsrv-execute&quot;&gt;sqlsrv_execute()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a66e072cfa7bc661ecf7ed3d2be339cfd4fe422" translate="yes" xml:space="preserve">
          <source>For tar archives, this method compresses the entire archive using gzip compression or bzip2 compression. The resulting file can be processed with the gunzip command/bunzip command, or accessed directly and transparently with the Phar extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea0389d095d8226e55e352b1dfefb8c1e8e933a" translate="yes" xml:space="preserve">
          <source>For tar-based and phar-based phar archives, this method compresses the entire archive using gzip compression or bzip2 compression. The resulting file can be processed with the gunzip command/bunzip command, or accessed directly and transparently with the Phar extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c83373cf5f1efefb687419b95481a13326183e0" translate="yes" xml:space="preserve">
          <source>For tar-based and phar-based phar archives, this method decompresses the entire archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db605c78dc331b7c088d15790b3a090c07d15d56" translate="yes" xml:space="preserve">
          <source>For tar-based archives, this method decompresses the entire archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a83b15a4b472ad1003a36c4a90bc8d564f55631" translate="yes" xml:space="preserve">
          <source>For tar-based archives, this method throws a &lt;a href=&quot;class.badmethodcallexception&quot;&gt;BadMethodCallException&lt;/a&gt;, as compression of individual files within a tar archive is not supported by the file format. Use &lt;a href=&quot;phardata.compress&quot;&gt;PharData::compress()&lt;/a&gt; to compress an entire tar-based archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cadaf265b8725f8548079bae48b783dcc59a617" translate="yes" xml:space="preserve">
          <source>For tar-based phar archives, this method compresses the entire archive using gzip compression. The resulting file can be processed with the gunzip command, or accessed directly and transparently with the Phar extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eb2d53dcbd362f991b616c935c5ead716599c4" translate="yes" xml:space="preserve">
          <source>For tar-based phar archives, this method throws a &lt;a href=&quot;class.badmethodcallexception&quot;&gt;BadMethodCallException&lt;/a&gt;, as compression of individual files within a tar archive is not supported by the file format. Use &lt;a href=&quot;phar.compress&quot;&gt;Phar::compress()&lt;/a&gt; to compress an entire tar-based phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5e417ac7e8fbc4e682f575cd15deb3429ce927" translate="yes" xml:space="preserve">
          <source>For technical reasons, this function is deprecated and removed from PHP. Instead, use &lt;em&gt;php -l somefile.php&lt;/em&gt; from the &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;commandline&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4615c6a0d21b96b910fc1f24c812bcfcceb0d700" translate="yes" xml:space="preserve">
          <source>For the Gregorian calendar, this is always the same as &lt;a href=&quot;intlcalendar.getminimum&quot;&gt;IntlCalendar::getMinimum()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d5b20af7bf774729b1ac2ae9798a25d4c05fcd" translate="yes" xml:space="preserve">
          <source>For the default loop during module initialization phase &lt;em&gt;Ev&lt;/em&gt; registers &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS_CO&quot;&gt;&amp;raquo; ev_loop_fork&lt;/a&gt; call by means of &lt;em&gt;pthread_atfork&lt;/em&gt; (if available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89465783d24c17d20dad399f60df640de20d9a0" translate="yes" xml:space="preserve">
          <source>For the following example, assume the phar archive is located at &lt;em&gt;/path/to/phar/my.phar&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621a58a53c59d96d3d7ecbcb37ae1ec1fcf029a7" translate="yes" xml:space="preserve">
          <source>For the purpose of this function, 'word' is defined as a locale dependent string containing alphabetic characters, which also may contain, but not start with &quot;'&quot; and &quot;-&quot; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd0cd0d3685936b5d447d0ffcacb6a870942aa7" translate="yes" xml:space="preserve">
          <source>For the purposes of these resolution rules, here are some important definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f38b3d306a461d886a304738e7d84d1f621972b" translate="yes" xml:space="preserve">
          <source>For the purposes of this function, the encodings &lt;em&gt;ISO-8859-1&lt;/em&gt;, &lt;em&gt;ISO-8859-15&lt;/em&gt;, &lt;em&gt;UTF-8&lt;/em&gt;, &lt;em&gt;cp866&lt;/em&gt;, &lt;em&gt;cp1251&lt;/em&gt;, &lt;em&gt;cp1252&lt;/em&gt;, and &lt;em&gt;KOI8-R&lt;/em&gt; are effectively equivalent, provided the &lt;code&gt;string&lt;/code&gt; itself is valid for the encoding, as the characters affected by &lt;strong&gt;htmlspecialchars()&lt;/strong&gt; occupy the same positions in all of these encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855b1a99c8d312034d327dcce66be8febe964d67" translate="yes" xml:space="preserve">
          <source>For the rest of the world, GeoIP uses FIPS 10-4 codes to represent regions. You can check &lt;a href=&quot;http://www.maxmind.com/app/fips10_4&quot;&gt;&amp;raquo; http://www.maxmind.com/app/fips10_4&lt;/a&gt; for a detailed list of FIPS 10-4 codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7871be85ccb4c6e984fee38ea1526991653ba027" translate="yes" xml:space="preserve">
          <source>For the sending of large amounts of email, see the &lt;a href=&quot;http://pear.php.net/package/Mail&quot;&gt;&amp;raquo; PEAR::Mail&lt;/a&gt;, and &lt;a href=&quot;http://pear.php.net/package/Mail_Queue&quot;&gt;&amp;raquo; PEAR::Mail_Queue&lt;/a&gt; packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dbb5b233552940a08c81b15a4e680205768157" translate="yes" xml:space="preserve">
          <source>For this example, each element in the &lt;var&gt;&lt;var&gt;data&lt;/var&gt;&lt;/var&gt; array represents one row in a table. This type of dataset is typical of database records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a27a658c44218bb31d86c85b2db0817c92de8b" translate="yes" xml:space="preserve">
          <source>For this function to work, you will need either to set some ID attributes with &lt;a href=&quot;domelement.setidattribute&quot;&gt;DOMElement::setIdAttribute&lt;/a&gt; or a DTD which defines an attribute to be of type ID. In the later case, you will need to validate your document with &lt;a href=&quot;domdocument.validate&quot;&gt;DOMDocument::validate&lt;/a&gt; or &lt;a href=&quot;class.domdocument#domdocument.props.validateonparse&quot;&gt;DOMDocument::$validateOnParse&lt;/a&gt; before using this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af398ad9ed0b48c9819ea71683f0bf3b31ec8823" translate="yes" xml:space="preserve">
          <source>For this reason, it is important to note that PHP will automatically replace any dots in incoming variable names with underscores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f76490c8cfe1ea67454151b99566d8f0ca3adc" translate="yes" xml:space="preserve">
          <source>For those accustomed to using &lt;a href=&quot;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;mysql_real_escape_string()&lt;/a&gt;, note that the arguments of &lt;strong&gt;mysqli_real_escape_string()&lt;/strong&gt; differ from what &lt;a href=&quot;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;mysql_real_escape_string()&lt;/a&gt; expects. The &lt;code&gt;link&lt;/code&gt; identifier comes first in &lt;strong&gt;mysqli_real_escape_string()&lt;/strong&gt;, whereas the string to be escaped comes first in &lt;a href=&quot;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;mysql_real_escape_string()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd0f72428408752fa464b7feea77cb9baa54175" translate="yes" xml:space="preserve">
          <source>For those who are not, it can still be useful for tracing errors in queries sent to the server, you could do for example &lt;strong&gt;grep '^To backend' trace.log&lt;/strong&gt; and see what queries actually were sent to the PostgreSQL server. For more information, refer to the &lt;a href=&quot;http://www.postgresql.org/docs/current/interactive/&quot;&gt;&amp;raquo; PostgreSQL Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0d70b00b8a58c4a0f1a65ac868b669bd7f4026" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity. For parsed entities, this is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733c4b3301167b9ef7667fffb4c108b733d070b5" translate="yes" xml:space="preserve">
          <source>For unqualified names, if no import rule applies and the name refers to a class-like symbol, the current namespace is prepended. For example &lt;em&gt;new C()&lt;/em&gt; inside namespace &lt;em&gt;A\B&lt;/em&gt; resolves to name &lt;em&gt;A\B\C&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9f572f72e454ebda44409a3c5df2ee936f3451" translate="yes" xml:space="preserve">
          <source>For unqualified names, if no import rule applies and the name refers to a function or constant and the code is outside the global namespace, the name is resolved at runtime. Assuming the code is in namespace &lt;em&gt;A\B&lt;/em&gt;, here is how a call to function &lt;em&gt;foo()&lt;/em&gt; is resolved:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7515704bcc55306f533a2d85afb5dd46f8da3376" translate="yes" xml:space="preserve">
          <source>For unqualified names, the name is translated according to the current import table for the respective symbol type. This means that class-like names are translated according to the class/namespace import table, function names according to the function import table and constants according to the constant import table. For example, after &lt;em&gt;use A\B\C;&lt;/em&gt; a usage such as &lt;em&gt;new C()&lt;/em&gt; resolves to the name &lt;em&gt;A\B\C()&lt;/em&gt;. Similarly, after &lt;em&gt;use function A\B\fn;&lt;/em&gt; a usage such as &lt;em&gt;fn()&lt;/em&gt; resolves to the name &lt;em&gt;A\B\fn&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8f93b44a35e647916fdfc699967cdb5bcda913" translate="yes" xml:space="preserve">
          <source>For unsuccessful parses, error information can be retrieved with &lt;a href=&quot;function.xml-get-error-code&quot;&gt;xml_get_error_code()&lt;/a&gt;, &lt;a href=&quot;function.xml-error-string&quot;&gt;xml_error_string()&lt;/a&gt;, &lt;a href=&quot;function.xml-get-current-line-number&quot;&gt;xml_get_current_line_number()&lt;/a&gt;, &lt;a href=&quot;function.xml-get-current-column-number&quot;&gt;xml_get_current_column_number()&lt;/a&gt; and &lt;a href=&quot;function.xml-get-current-byte-index&quot;&gt;xml_get_current_byte_index()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885234259f119736609ed62f7ac7c200d6eca559" translate="yes" xml:space="preserve">
          <source>For usage, please see the example section of &lt;a href=&quot;yaf-route-rewrite.construct&quot;&gt;Yaf_Route_Rewrite::__construct()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942a24bf716dab3c5dfe230b8d14ee7a51e247e1" translate="yes" xml:space="preserve">
          <source>For users looking for a way to emulate Perl's &lt;strong&gt;@chars = split('', $str)&lt;/strong&gt; behaviour, please see the examples for &lt;a href=&quot;function.preg-split&quot;&gt;preg_split()&lt;/a&gt; or &lt;a href=&quot;function.str-split&quot;&gt;str_split()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec6ac9f7f22bc2250a99d407c1ee3f820a17256" translate="yes" xml:space="preserve">
          <source>For various types, comparison is done according to the following table (in order).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea55efff1c58ba710420c8dd9c6a1ef77bd907f1" translate="yes" xml:space="preserve">
          <source>For zip archives, this method fails with an exception. The &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension must be enabled to compress with gzip compression, the &lt;a href=&quot;https://secure.php.net/manual/en/ref.bzip2.php&quot;&gt;bzip2&lt;/a&gt; extension must be enabled in order to compress with bzip2 compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3710d4b62ef5b132d79873cc9afebf975fd8fbb" translate="yes" xml:space="preserve">
          <source>Forbidden for static methods, required for other methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ae58ece0d26d03ee80786f82725b573904c586" translate="yes" xml:space="preserve">
          <source>Forces a write of all buffered bzip2 data for the file pointer &lt;code&gt;bz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b595545cd7326e2bd5cbe93299a9db7db13764" translate="yes" xml:space="preserve">
          <source>Forces a write of all buffered output to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68f78568c3011ed1fa4b25fb7e3354b2c0b8457" translate="yes" xml:space="preserve">
          <source>Forces all JS objects to be associative arrays in PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d4dcce49aa9fa9747228f26caa2401bc1d9a63" translate="yes" xml:space="preserve">
          <source>Forces collection of any existing garbage cycles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44efbe4a4acd0b41e338df01b6a016d615c5b8fd" translate="yes" xml:space="preserve">
          <source>Forces the HTTP response code to the specified value. Note that this parameter only has an effect if the &lt;code&gt;header&lt;/code&gt; is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ed56f44195b27f2ca11dcb41528033ae9917f6" translate="yes" xml:space="preserve">
          <source>Forces the referenced Thread to terminate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cccbf8d21139146c16c535cca0307f946d9434" translate="yes" xml:space="preserve">
          <source>Fork watchers are called when a &lt;em&gt;fork()&lt;/em&gt; was detected (usually because whoever signalled &lt;em&gt;libev&lt;/em&gt; about it by calling &lt;a href=&quot;evloop.fork&quot;&gt;EvLoop::fork()&lt;/a&gt; ). The invocation is done before the event loop blocks next and before &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; watchers are being called, and only in the child after the fork. Note, that if whoever calling &lt;a href=&quot;evloop.fork&quot;&gt;EvLoop::fork()&lt;/a&gt; calls it in the wrong process, the fork handlers will be invoked, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c9f71c2adba15fe4f07b00809182891d97a2c" translate="yes" xml:space="preserve">
          <source>Formally, the structure for &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; literals is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f41dbcee0902f992f1e52507f4aea414798955" translate="yes" xml:space="preserve">
          <source>Formally:</source>
          <target state="translated">Formally:</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="1a3fb528c9d22edf809a8db84dc744fafb915d86" translate="yes" xml:space="preserve">
          <source>Format a numeric value according to the formatter rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726c07e3b7b29b46831f8c62148ccdafc7cb10fd" translate="yes" xml:space="preserve">
          <source>Format accepted by &lt;a href=&quot;datetime.createfromformat&quot;&gt;DateTime::createFromFormat()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a7a512daf45ef3de28437b35efcbae38d97533" translate="yes" xml:space="preserve">
          <source>Format accepted by &lt;a href=&quot;function.date&quot;&gt;date()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9178547c8a437b1173e4fcff5b334c80295dbac9" translate="yes" xml:space="preserve">
          <source>Format the currency value according to the formatter rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2a33c1e49747b01318437d47df971f4a07452c" translate="yes" xml:space="preserve">
          <source>Format the message by substituting the data into the format string according to the locale rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789057ebff09d5c1ac7fa18f47227bb6b1e049c4" translate="yes" xml:space="preserve">
          <source>Format the time and/or date according to locale settings. Month and weekday names and other language-dependent strings respect the current locale set with &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100bc1b1527b5346adbd7b7827127ee7df31b90f" translate="yes" xml:space="preserve">
          <source>Format/parse as 32-bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b83c3f1595b1fe1437eaf35940946f2669bf34" translate="yes" xml:space="preserve">
          <source>Format/parse as 64-bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16e3801ba2b45ebb26b31268b0cca57719b4c3c" translate="yes" xml:space="preserve">
          <source>Format/parse as currency value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f2135de2c5114f7f70002bb264adbf9e08113f" translate="yes" xml:space="preserve">
          <source>Format/parse as floating point value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbc70eee46e33a9d0d9de6fc82b8e29ca8d12f3" translate="yes" xml:space="preserve">
          <source>Formats the interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aa75631f20ce136c9fb615f0e11a4995cb17b5" translate="yes" xml:space="preserve">
          <source>Formats the time value as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c19f7cb2949f155e1f593e0dbcaa6cdab79b35c" translate="yes" xml:space="preserve">
          <source>Forward to the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af67a2c324bf0fee7c480167b937c2f5f5f045d8" translate="yes" xml:space="preserve">
          <source>Forwards to the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e39d35dc0c6dbbad7f958a8272bb9a2c91d1132" translate="yes" xml:space="preserve">
          <source>Four compound types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777e34664c3ffbe466ae2e8ce9673f7258b185c0" translate="yes" xml:space="preserve">
          <source>Four digit representation for the year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e8137301588fa0a6edd4201b9f9b5ba1309e96" translate="yes" xml:space="preserve">
          <source>Four scalar types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc15060f216e0802cc2def8f558e7a62842f605" translate="yes" xml:space="preserve">
          <source>Fraction digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f03e077730ab533a645f164eac538e8256f75d" translate="yes" xml:space="preserve">
          <source>Fractional number of seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecc23be3e876fb25e685046b87168fa2678f259" translate="yes" xml:space="preserve">
          <source>Free resources allocated by buffer event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe286755f78181eed7254f17c3e658d6d7e6568" translate="yes" xml:space="preserve">
          <source>Free resources associated with a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63f7885204002d1e340133a4f09af75d8b9c43d" translate="yes" xml:space="preserve">
          <source>Free the entire &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bffb89a7332a7fa316c62a6ed2ba0a089d4601" translate="yes" xml:space="preserve">
          <source>FreeType Linkage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe53f4deda92a3de715c9750d200632736ad4cdd" translate="yes" xml:space="preserve">
          <source>FreeType Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fcc48175e3d4dbec8f4213f2b532aa8cb6c988" translate="yes" xml:space="preserve">
          <source>Freeing resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc19d5c34b8192481afa258d14f086288992173" translate="yes" xml:space="preserve">
          <source>Frees a &lt;em&gt;MIME&lt;/em&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349aefb70e67edfeab328a54d0ecbc4a3edf6040" translate="yes" xml:space="preserve">
          <source>Frees a prepared query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dd2d18fec8f1e9bbb6581d967c9c6e16d300c0" translate="yes" xml:space="preserve">
          <source>Frees a result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27231b6dacd3ba5e9ddf21f4e441e6b6c594fcc3" translate="yes" xml:space="preserve">
          <source>Frees all resources associated with the ImagickDraw object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694dbbfacd100093228921bbe38555ed965e7e85" translate="yes" xml:space="preserve">
          <source>Frees all resources for the specified statement. The statement cannot be used after &lt;strong&gt;sqlsrv_free_stmt()&lt;/strong&gt; has been called on it. If &lt;strong&gt;sqlsrv_free_stmt()&lt;/strong&gt; is called on an in-progress statement that alters server state, statement execution is terminated and the statement is rolled back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92b7c9681642dcebe352f00f228d7a8ee0242a4" translate="yes" xml:space="preserve">
          <source>Frees previously created event resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cc047a54a466636fc65de61bcd353b22b7ddbb" translate="yes" xml:space="preserve">
          <source>Frees the given XML &lt;code&gt;parser&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6fdb2a25860508649177d7263939142e61bd16" translate="yes" xml:space="preserve">
          <source>Frees the memory associated with the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6015f648437a44d46d6b22cf64cabd10777dd4fb" translate="yes" xml:space="preserve">
          <source>Frees the object and removes associated events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d0837bc28b362cd82d9d9a63ec12787bfe68a2" translate="yes" xml:space="preserve">
          <source>Frees the result memory associated with the statement, which was allocated by &lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt_store_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1928abacb797ae922d533c61b6ef44a087d24e98" translate="yes" xml:space="preserve">
          <source>Frees up the memory allocated internally to store the result. All result memory will be automatically freed when the script terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0aecc8bab292da910d0e4cd0c53db5c428521a0" translate="yes" xml:space="preserve">
          <source>French Republican</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b2379e3b212438eda90652a1a03af089a1bc97" translate="yes" xml:space="preserve">
          <source>Friday.</source>
          <target state="translated">Friday.</target>
        </trans-unit>
        <trans-unit id="90521abfe53d6d6c93c2cd4b48fc7d99dfcf933c" translate="yes" xml:space="preserve">
          <source>From 4.0.5 on it's also possible to do parallel searches. To do this you use an array of link identifiers, rather than a single identifier, as the first argument. If you don't want the same base DN and the same filter for all the searches, you can also use an array of base DNs and/or an array of filters. Those arrays must be of the same size as the link identifier array since the first entries of the arrays are used for one search, the second entries are used for another, and so on. When doing parallel searches an array of search result identifiers is returned, except in case of error, then the entry corresponding to the search will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. This is very much like the value normally returned, except that a result identifier is always returned when a search was made. There are some rare cases where the normal search returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; while the parallel search returns an identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca9fe48c1314e2f0b818e92572482425cf6ab38" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;language.types.boolean&quot;&gt;booleans&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a230e395c5dedcad62d9c5ddc93396a5c4ccca90" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;language.types.float&quot;&gt;floating point numbers&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac06c7d20d2acd986a5254f3f377e777ce2d4f9" translate="yes" xml:space="preserve">
          <source>From PHP 5.1.3, this option has no effect: the raw output will always be returned when &lt;strong&gt;&lt;code&gt;CURLOPT_RETURNTRANSFER&lt;/code&gt;&lt;/strong&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc73c5cdd1b690bac07e0561a25479c76189183f" translate="yes" xml:space="preserve">
          <source>From PHP 7.0 onwards, classes, functions and constants being imported from the same &lt;a href=&quot;language.namespaces.definition&quot;&gt;&lt;em&gt;namespace&lt;/em&gt;&lt;/a&gt; can be grouped together in a single &lt;a href=&quot;language.namespaces.importing&quot;&gt;&lt;em&gt;use&lt;/em&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6af142f6195e1dce421bd826e987494a280ac2" translate="yes" xml:space="preserve">
          <source>From RFC: The responseTtl field is the time in seconds which the server chooses to have as the time-to-live field for that entry. It must not be any smaller than that which the client requested, and it may be larger. However, to allow servers to maintain a relatively accurate directory, and to prevent clients from abusing the dynamic extensions, servers are permitted to shorten a client-requested time-to-live value, down to a minimum of 86400 seconds (one day). &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will be returned on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ee89c2c2e9cff601d821134348bd266eccc096" translate="yes" xml:space="preserve">
          <source>From now on microseconds are filled with actual value. Not with '00000'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b77ba20df7c2ba38f38c3bfb895ade8a6a9d8b" translate="yes" xml:space="preserve">
          <source>From other types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccc9458f2cf5e7b539e3308c3f21b0acd9e2f39" translate="yes" xml:space="preserve">
          <source>From strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf56871cb522b0a6a4c49b9e55bc2a30dca0736" translate="yes" xml:space="preserve">
          <source>From version 4.1.0 onward, PHP provides an additional set of predefined arrays containing variables from the web server (if applicable), the environment, and user input. These new arrays are rather special in that they are automatically global--i.e., automatically available in every scope. For this reason, they are often known as &quot;superglobals&quot;. (There is no mechanism in PHP for user-defined superglobals.) The superglobals are listed below; however, for a listing of their contents and further discussion on PHP predefined variables and their natures, please see the section &lt;a href=&quot;https://secure.php.net/manual/en/reserved.variables.php&quot;&gt;Reserved Predefined Variables&lt;/a&gt;. Also, you'll notice how the older predefined variables (&lt;var&gt;&lt;var&gt;$HTTP_*_VARS&lt;/var&gt;&lt;/var&gt;) still exist. As of PHP 5.0.0, the long PHP &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variable&lt;/a&gt; arrays may be disabled with the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-long-arrays&quot;&gt;register_long_arrays&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522577548cb63c07a764694dfbcdeaace585a08b" translate="yes" xml:space="preserve">
          <source>FrontBase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375309aa9521d17b29ee62f6c62eb8e246fe0a3b" translate="yes" xml:space="preserve">
          <source>Full month name, based on the locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4e67fb100361dd1b10e33fe433c188222d6e5e" translate="yes" xml:space="preserve">
          <source>Full name of the Unicode character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e73dd08673da89b112316bf599ada16acbd19a8" translate="yes" xml:space="preserve">
          <source>Full or relative path to a PHP file that will be compiled and stored in the bytecode cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb3184c370c70cda5197c952ece887974116c0f" translate="yes" xml:space="preserve">
          <source>Full or relative path to a file on disk to be added to the phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf7d9b67fbf533e8db18f56490aaecf270cbf7b" translate="yes" xml:space="preserve">
          <source>Fully qualified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b246c06284a8c88b5d776530e1e4be5110e0d776" translate="yes" xml:space="preserve">
          <source>Fully qualified name, or a prefixed name with global prefix operator like &lt;em&gt;$a = new \currentnamespace\foo();&lt;/em&gt; or &lt;em&gt;\currentnamespace\foo::staticmethod();&lt;/em&gt;. This always resolves to the literal name specified in the code, &lt;em&gt;currentnamespace\foo&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ab6c26c0e3eb3b4476ad6acea4a9be0f5907ce" translate="yes" xml:space="preserve">
          <source>Fully qualified names always resolve to the name without leading namespace separator. For instance &lt;em&gt;\A\B&lt;/em&gt; resolves to &lt;em&gt;A\B&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371503ebcbb132882b2282a800801dae531ac60b" translate="yes" xml:space="preserve">
          <source>Function (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5331ee284756d21cdbcfa046c75bd908e562029f" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;cmp_function&lt;/code&gt; should accept two parameters which will be filled by pairs of entries. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e36b9638c2651ddb38d39bfc94b7d2504062de" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;cmp_function&lt;/code&gt; should accept two parameters which will be filled by pairs of entry keys. The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb9c8b9a9939e93638461c32c29ce41229c84b1" translate="yes" xml:space="preserve">
          <source>Function Handling &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a605a56e2cdcdebd5e329a93e319622341b36f7" translate="yes" xml:space="preserve">
          <source>Function arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625ff9e575d4d5880ca4a56cb504ed883e66e963" translate="yes" xml:space="preserve">
          <source>Function arguments &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f50201150829c68ee99d81cd161c28a4489e6ac" translate="yes" xml:space="preserve">
          <source>Function called just before the headers are sent. It gets no parameters and the return value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7c431b43f246391da9f0bc980c4120a250b7cc" translate="yes" xml:space="preserve">
          <source>Function is not locale-aware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b389a67b88dc11d3ca8a7606a8511ef745c99b" translate="yes" xml:space="preserve">
          <source>Function name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d437008d843d685b8c91aae9afb1087813dea1" translate="yes" xml:space="preserve">
          <source>Function name in lua</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624458c3b715a3690c26acb5fe26816ef9d80519" translate="yes" xml:space="preserve">
          <source>Function names follow the same rules as other labels in PHP. A valid function name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thus: &lt;em&gt;[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be77f736eeb4b81b8b74597c3b12de51e0ef240b" translate="yes" xml:space="preserve">
          <source>Function or constant names that do not contain a backslash like &lt;em&gt;name&lt;/em&gt; can be resolved in 2 different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc3bd74f719714c37145d4b3747fd965e679eb5" translate="yes" xml:space="preserve">
          <source>Function to call when the worker throws an exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9226f3e7144c6dbdc0efe888eeed6c65805c5868" translate="yes" xml:space="preserve">
          <source>Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3056565b68a5d65e28534501407e0914eaa6a418" translate="yes" xml:space="preserve">
          <source>Function::__construct</source>
          <target state="translated">Function::__construct</target>
        </trans-unit>
        <trans-unit id="5f45617855f62213e449ec5e583729cab78e37b4" translate="yes" xml:space="preserve">
          <source>Function::__toString</source>
          <target state="translated">Function::__toString</target>
        </trans-unit>
        <trans-unit id="a9a960d03e71e0a8595f074108b9a487b234401b" translate="yes" xml:space="preserve">
          <source>Function::export</source>
          <target state="translated">Function::export</target>
        </trans-unit>
        <trans-unit id="ffe0ab477d61852beffd9f467378263a486f4497" translate="yes" xml:space="preserve">
          <source>Function::getClosure</source>
          <target state="translated">Function::getClosure</target>
        </trans-unit>
        <trans-unit id="d096d9640e60766979d01e826461d0878c2601df" translate="yes" xml:space="preserve">
          <source>Function::invoke</source>
          <target state="translated">Function::invoke</target>
        </trans-unit>
        <trans-unit id="c98104101a859ba546611226f93a18d8b777496a" translate="yes" xml:space="preserve">
          <source>Function::invokeArgs</source>
          <target state="translated">Function::invokeArgs</target>
        </trans-unit>
        <trans-unit id="0fab1f7ddfc5246a58ffa9caa60df07c0cd3ffbc" translate="yes" xml:space="preserve">
          <source>Function::isDisabled</source>
          <target state="translated">Function::isDisabled</target>
        </trans-unit>
        <trans-unit id="39a5154d167f966e575efba02013802bd9eba66a" translate="yes" xml:space="preserve">
          <source>FunctionAbstract (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10feecb6c93776b0d56cfca2c96cc3e609fefed" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::__clone</source>
          <target state="translated">FunctionAbstract::__clone</target>
        </trans-unit>
        <trans-unit id="3d77374fa6e261b05b95c2cdf523afb95ae3e16b" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::__toString</source>
          <target state="translated">FunctionAbstract::__toString</target>
        </trans-unit>
        <trans-unit id="44576d4796f556259664b0eb4f4c79f7a837686b" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getClosureScopeClass</source>
          <target state="translated">FunctionAbstract::getClosureScopeClass</target>
        </trans-unit>
        <trans-unit id="5eb6aa0f2a53fc318ce80fdf88071ceeb43b2c0d" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getClosureThis</source>
          <target state="translated">FunctionAbstract::getClosureThis</target>
        </trans-unit>
        <trans-unit id="1152de9fb80fcc8d694a2e73e04543df4742511c" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getDocComment</source>
          <target state="translated">FunctionAbstract::getDocComment</target>
        </trans-unit>
        <trans-unit id="535131b14b57051c8771d57e96480732c941dfcc" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getEndLine</source>
          <target state="translated">FunctionAbstract::getEndLine</target>
        </trans-unit>
        <trans-unit id="8e772d791425d7400127bfeba74aa57d77984fe8" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getExtension</source>
          <target state="translated">FunctionAbstract::getExtension</target>
        </trans-unit>
        <trans-unit id="f05c71aa3666da48214e341599957c74222ecda4" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getExtensionName</source>
          <target state="translated">FunctionAbstract::getExtensionName</target>
        </trans-unit>
        <trans-unit id="73afa696f3283d27c9d41813ab0160750925fd2c" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getFileName</source>
          <target state="translated">FunctionAbstract::getFileName</target>
        </trans-unit>
        <trans-unit id="eae117d4ba7211d751c93c179b5191ac49f9d583" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getName</source>
          <target state="translated">FunctionAbstract::getName</target>
        </trans-unit>
        <trans-unit id="a3866f944782afc950085c6051e688b95ce0a313" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getNamespaceName</source>
          <target state="translated">FunctionAbstract::getNamespaceName</target>
        </trans-unit>
        <trans-unit id="47d9b0aba8b6900e46bbc3c1e4d1edb45afbd004" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getNumberOfParameters</source>
          <target state="translated">FunctionAbstract::getNumberOfParameters</target>
        </trans-unit>
        <trans-unit id="2445a3cfb1daf98caf12b1f990564d938d1e0ad2" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getNumberOfRequiredParameters</source>
          <target state="translated">FunctionAbstract::getNumberOfRequiredParameters</target>
        </trans-unit>
        <trans-unit id="b8f54d0467f328eaea7ba163c57bcb78110ab36c" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getParameters</source>
          <target state="translated">FunctionAbstract::getParameters</target>
        </trans-unit>
        <trans-unit id="a090647928af0a066d92a7b20875989e657024a8" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getReturnType</source>
          <target state="translated">FunctionAbstract::getReturnType</target>
        </trans-unit>
        <trans-unit id="9971df5b430d89643aaee3332207c74c6501e530" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getShortName</source>
          <target state="translated">FunctionAbstract::getShortName</target>
        </trans-unit>
        <trans-unit id="d2e95f92b7b0463f793d4f41ff1fd67f3fd50d9d" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getStartLine</source>
          <target state="translated">FunctionAbstract::getStartLine</target>
        </trans-unit>
        <trans-unit id="f10dbd67a2b3e1b022f0285247ac43a19e7ef063" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::getStaticVariables</source>
          <target state="translated">FunctionAbstract::getStaticVariables</target>
        </trans-unit>
        <trans-unit id="965e70ccb6d6621feca3e64d863fa63dc583462a" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::hasReturnType</source>
          <target state="translated">FunctionAbstract::hasReturnType</target>
        </trans-unit>
        <trans-unit id="674082244ccdb83bf54e9067787990918a1c01dd" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::inNamespace</source>
          <target state="translated">FunctionAbstract::inNamespace</target>
        </trans-unit>
        <trans-unit id="69fc8366cd8d74ada381fdd2a1e5561f61ee8ece" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isClosure</source>
          <target state="translated">FunctionAbstract::isClosure</target>
        </trans-unit>
        <trans-unit id="fb43a781e1ec045697a9c4ab3e476a1da8a9eb45" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isDeprecated</source>
          <target state="translated">FunctionAbstract::isDeprecated</target>
        </trans-unit>
        <trans-unit id="007c915da4cce1274d1498bc18b706bed96fad40" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isGenerator</source>
          <target state="translated">FunctionAbstract::isGenerator</target>
        </trans-unit>
        <trans-unit id="3eda139a41df1bdda31c4e97375f8049fc2ced70" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isInternal</source>
          <target state="translated">FunctionAbstract::isInternal</target>
        </trans-unit>
        <trans-unit id="060f5319eb394a9f1d79a40c97a7f1bdc4a82499" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isUserDefined</source>
          <target state="translated">FunctionAbstract::isUserDefined</target>
        </trans-unit>
        <trans-unit id="3608ef2a9ec42cac533d54aac05af99fc24c92e1" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::isVariadic</source>
          <target state="translated">FunctionAbstract::isVariadic</target>
        </trans-unit>
        <trans-unit id="8be88fb9e94c1ffefaf740f7156d0baffcca889a" translate="yes" xml:space="preserve">
          <source>FunctionAbstract::returnsReference</source>
          <target state="translated">FunctionAbstract::returnsReference</target>
        </trans-unit>
        <trans-unit id="4de43755a45bb671876d166a7a05e3fc3d7a7f3e" translate="yes" xml:space="preserve">
          <source>Functional only with InterBase 5 and up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="5d9a4c378b3098e0430ecfb23d9b6fbf323dee49" translate="yes" xml:space="preserve">
          <source>Functions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fa5180acd37faacb74c98d5c340d37663400b9" translate="yes" xml:space="preserve">
          <source>Functions (with optional boosts) that will be included in the user's query to influence the score. Any function supported natively by Solr can be used, along with a boost value. e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863b22d40c5abf862d182bdbb24f170824ebf4e9" translate="yes" xml:space="preserve">
          <source>Functions declaring iterable as a return type may also be &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a773e3c4c5ae2e6dfb3968095142bf2453642e08" translate="yes" xml:space="preserve">
          <source>Functions need not be defined before they are referenced, &lt;em&gt;except&lt;/em&gt; when a function is conditionally defined as shown in the two examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1354da873ca03cef243ab398e1557d9c4113153e" translate="yes" xml:space="preserve">
          <source>Functions, method calls, static class variables, and class constants inside &lt;em&gt;{$}&lt;/em&gt; work since PHP 5. However, the value accessed will be interpreted as the name of a variable in the scope in which the string is defined. Using single curly braces (&lt;em&gt;{}&lt;/em&gt;) will not work for accessing the return values of functions or methods or the values of class constants or static class variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd9951ecc96bca5cf14f65d6f96af0d521bf40e" translate="yes" xml:space="preserve">
          <source>Further dereferencing a variable property that is an array has different semantics between PHP 5 and PHP 7. The &lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php#migration70.incompatible.variable-handling.indirect&quot;&gt;PHP 7.0 migration guide&lt;/a&gt; includes further details on the types of expressions that have changed, and how to place curly braces to avoid ambiguity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1744b9e942dc79f957c53108e25584a7c59e8f69" translate="yes" xml:space="preserve">
          <source>Further exists the &quot;??&quot; (or null coalescing) operator, available as of PHP 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="4b20b8626ac71ec5966b767f3a27db1efb9164a2" translate="yes" xml:space="preserve">
          <source>GB2312</source>
          <target state="translated">GB2312</target>
        </trans-unit>
        <trans-unit id="a5ec616668f5ea6fa47eec00bbe6e31964599856" translate="yes" xml:space="preserve">
          <source>GD</source>
          <target state="translated">GD</target>
        </trans-unit>
        <trans-unit id="1aa591af49e36e16d5e3ad6e5eef9d4bac2b7ebf" translate="yes" xml:space="preserve">
          <source>GD &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdd9e8240254317dc3324e38c54251f16093218" translate="yes" xml:space="preserve">
          <source>GD Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6718f60a3f6ab448ff5b268710cedf78c232769f" translate="yes" xml:space="preserve">
          <source>GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system. The field, however, lives on, and its contents have been formalized by POSIX. The field contains a comma separated list containing the user's full name, office phone, office number, and home phone number. On most systems, only the user's full name is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1897c17a802bfd9803ad508b44e41a18ad420ed8" translate="yes" xml:space="preserve">
          <source>GEOIP_CABLEDSL_SPEED</source>
          <target state="translated">GEOIP_CABLEDSL_SPEED</target>
        </trans-unit>
        <trans-unit id="572c1359ede6c3aceaf427ea89fff9002a659f7a" translate="yes" xml:space="preserve">
          <source>GEOIP_CORPORATE_SPEED</source>
          <target state="translated">GEOIP_CORPORATE_SPEED</target>
        </trans-unit>
        <trans-unit id="3acfe5b1afc0fd5eaa8666e3b8a4739a99642ac9" translate="yes" xml:space="preserve">
          <source>GEOIP_DIALUP_SPEED</source>
          <target state="translated">GEOIP_DIALUP_SPEED</target>
        </trans-unit>
        <trans-unit id="48f8d8ee9c9b88836d6b45a9023dcef68044cd7e" translate="yes" xml:space="preserve">
          <source>GEOIP_UNKNOWN_SPEED</source>
          <target state="translated">GEOIP_UNKNOWN_SPEED</target>
        </trans-unit>
        <trans-unit id="12680b5ee3510014c94579b05060c8db14aca849" translate="yes" xml:space="preserve">
          <source>GET method(command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758f6c9347b91091c38ad698a8eba6aeac47b9c4" translate="yes" xml:space="preserve">
          <source>GIF</source>
          <target state="translated">GIF</target>
        </trans-unit>
        <trans-unit id="e5a904dd092546360b538bd20b122cd7b531218b" translate="yes" xml:space="preserve">
          <source>GIF Create Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f950b97b5e8cd93ff9730c7c35a1b944f4d69b0" translate="yes" xml:space="preserve">
          <source>GIF Read Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700e86b9b43fc21f5981ffcadc980bd8ebda4a8a" translate="yes" xml:space="preserve">
          <source>GIF support was removed from the GD library in Version 1.6, and added back in Version 2.0.28. This function is not available between these versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e166b4a8d2182ba8711b37db8367c73e08226cdc" translate="yes" xml:space="preserve">
          <source>GIF87a</source>
          <target state="translated">GIF87a</target>
        </trans-unit>
        <trans-unit id="25c9b37ae36a0a08318d4dca7ca57ea98d776821" translate="yes" xml:space="preserve">
          <source>GIF89a</source>
          <target state="translated">GIF89a</target>
        </trans-unit>
        <trans-unit id="7eca19b567fe122c097106533444cb8be9534072" translate="yes" xml:space="preserve">
          <source>GMP</source>
          <target state="translated">GMP</target>
        </trans-unit>
        <trans-unit id="fd15dc31950acfb5d3f4b927e8fca56d8134a133" translate="yes" xml:space="preserve">
          <source>GMP &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e40fa9fc17d8ad342593f7220d0fb607e11c7a" translate="yes" xml:space="preserve">
          <source>GNU regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2389ac7e0dd2002ee6ee028656d6591322a2a14e" translate="yes" xml:space="preserve">
          <source>GRANTEE</source>
          <target state="translated">GRANTEE</target>
        </trans-unit>
        <trans-unit id="be09164514cadb19b0f41a9b9ec6b73a8179a167" translate="yes" xml:space="preserve">
          <source>GRANTOR</source>
          <target state="translated">GRANTOR</target>
        </trans-unit>
        <trans-unit id="309d7a7d75e1e981e82415642ed0deb65f1416ad" translate="yes" xml:space="preserve">
          <source>GRAPHEME_EXTR_COUNT (default) - $size is the number of default grapheme clusters to extract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f540f31f231033eb3b337d6b06d20fda1d859adb" translate="yes" xml:space="preserve">
          <source>GRAPHEME_EXTR_MAXBYTES - $size is the maximum number of bytes returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4af1501be32e5ea97a5a303f3e2f6a6fb25b0c6" translate="yes" xml:space="preserve">
          <source>GRAPHEME_EXTR_MAXCHARS - $size is the maximum number of UTF-8 characters returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddeedff715cc44df5586c087ac4eb923276b8a9" translate="yes" xml:space="preserve">
          <source>GRAVITY_ constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da051903004280341f68d0f0e1e9cecc4ff08695" translate="yes" xml:space="preserve">
          <source>GUI Extensions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab76fad56dba5bf02292df59f61febba5734172" translate="yes" xml:space="preserve">
          <source>Gamma-corrects an image. The same image viewed on different devices will have perceptual differences in the way the image's intensities are represented on the screen. Specify individual gamma levels for the red, green, and blue channels, or adjust all three with the gamma parameter. Values typically range from 0.8 to 2.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b32b8542e4c8854b05455c0b114c2bdced713ad" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53834c379b45d6f42a0f1011a7ac6a325f5c9c03" translate="yes" xml:space="preserve">
          <source>Gathers the statistics of the file named by &lt;code&gt;filename&lt;/code&gt;. If &lt;code&gt;filename&lt;/code&gt; is a symbolic link, statistics are from the file itself, not the symlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2ffdcd8206d6c3731668b60c04fc8800dca0b6" translate="yes" xml:space="preserve">
          <source>Gathers the statistics of the file opened by the file pointer &lt;code&gt;handle&lt;/code&gt;. This function is similar to the &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; function except that it operates on an open file pointer instead of a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c564be5306728c89bb5df7038302cfdf88d54098" translate="yes" xml:space="preserve">
          <source>Gathers the statistics of the file or symbolic link named by &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24181b3963a6ee8d8cf3956a6ac8716e1e785df9" translate="yes" xml:space="preserve">
          <source>Gathers the statistics of the file. Behaves identically to &lt;a href=&quot;function.fstat&quot;&gt;fstat()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a349423db99a954d7e9bc7c47db0c92ed7a75c2c" translate="yes" xml:space="preserve">
          <source>Gearman</source>
          <target state="translated">Gearman</target>
        </trans-unit>
        <trans-unit id="85471076d252f34ff3791d3428cce7849092be56" translate="yes" xml:space="preserve">
          <source>Gearman &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a8acee254d8618b87d6da458507c67d5d81472" translate="yes" xml:space="preserve">
          <source>GearmanClient::__construct</source>
          <target state="translated">GearmanClient::__construct</target>
        </trans-unit>
        <trans-unit id="49483c2d73bd71cbdcb49f29ae76873dbfeb63c5" translate="yes" xml:space="preserve">
          <source>GearmanClient::__construct &amp;mdash; Create a GearmanClient instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2941631f1afacbd522ae0eaf544149ff62da0724" translate="yes" xml:space="preserve">
          <source>GearmanClient::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1841e833be51fc28f32da162a8f426589941bd95" translate="yes" xml:space="preserve">
          <source>GearmanClient::addOptions</source>
          <target state="translated">GearmanClient::addOptions</target>
        </trans-unit>
        <trans-unit id="93e260e2c743190fee5728b7f1577028410ba9a2" translate="yes" xml:space="preserve">
          <source>GearmanClient::addOptions &amp;mdash; Add client options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82c3fc6e024ca266230a03de74aa14acc66681b" translate="yes" xml:space="preserve">
          <source>GearmanClient::addOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28144f45b119c116cd78d003425484f51be9ce03" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServer</source>
          <target state="translated">GearmanClient::addServer</target>
        </trans-unit>
        <trans-unit id="9e4d136ba3c7d8fc326dfb06d2a842a5493f3387" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServer &amp;mdash; Add a job server to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee9c2f220ff7e744d7e49ba394fe4d81e99c726" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa9cb112af285db7014e9165bf092d0a5ad518" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServers</source>
          <target state="translated">GearmanClient::addServers</target>
        </trans-unit>
        <trans-unit id="d9ffdb4364197101cf490b4a0405f07d277e7314" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServers &amp;mdash; Add a list of job servers to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ee8abeda5f758bdf6539082b9ac9fa969a9261" translate="yes" xml:space="preserve">
          <source>GearmanClient::addServers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c48ef27b163af39b1c833106c7a767a0266807" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTask</source>
          <target state="translated">GearmanClient::addTask</target>
        </trans-unit>
        <trans-unit id="3c69f429f327ded7d454fc07c8974c3dcf321daf" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTask &amp;mdash; Add a task to be run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d5b5940fc7e34a4e426445e0234f57da330215" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTask &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd0b79585d90686d77b3dab5e6bd4d5d905edbd" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskBackground</source>
          <target state="translated">GearmanClient::addTaskBackground</target>
        </trans-unit>
        <trans-unit id="e93edf25180196d902491c1a56f2bdd0ef8f3e84" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskBackground &amp;mdash; Add a background task to be run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0c4de6d77a2db6389665566c5bb0bb647af509" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4277545d719983456a45d8d96e7d0dfb1a2d4d89" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHigh</source>
          <target state="translated">GearmanClient::addTaskHigh</target>
        </trans-unit>
        <trans-unit id="fe9d3a893c9f725dc6d43492fdf2c0698ee4a4cb" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHigh &amp;mdash; Add a high priority task to run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b7c5a983033d26428d174fb6f05ce61ebfc427" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHigh &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad8100fbf655f1b7850e9420109288195acefb1" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHighBackground</source>
          <target state="translated">GearmanClient::addTaskHighBackground</target>
        </trans-unit>
        <trans-unit id="2698a7d122d55353bc0b1a42ef6115e22445adfe" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHighBackground &amp;mdash; Add a high priority background task to be run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58a8b4e868ddf57933cb927b320d3b0356912f7" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskHighBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d7fd83cd71b4d8fa893d80924f6bc85887e23d" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLow</source>
          <target state="translated">GearmanClient::addTaskLow</target>
        </trans-unit>
        <trans-unit id="250e975a594e85ba9479339470679396c419634c" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLow &amp;mdash; Add a low priority task to run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e76c5fd332e8fc7f1bcbeeaa4b4ba5e3d905ddd" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLow &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff98b1c3da80c441919b1cf5d6c0ef3b4b2b3a0" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLowBackground</source>
          <target state="translated">GearmanClient::addTaskLowBackground</target>
        </trans-unit>
        <trans-unit id="25979d3ec9a58b66c38364e22f5ef038a7aec6bc" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLowBackground &amp;mdash; Add a low priority background task to be run in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fd14f89fd0a1e4d90caf39afbe568fcd23fbfa" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskLowBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d1de94ccc2e0e923f2633d85134e3a82d2ff35" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskStatus</source>
          <target state="translated">GearmanClient::addTaskStatus</target>
        </trans-unit>
        <trans-unit id="ef5297dd3488787d0ffe08bad84ee62f5e870611" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskStatus &amp;mdash; Add a task to get status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9af9095673655c1b498d9d9d2b96fcd98c8114" translate="yes" xml:space="preserve">
          <source>GearmanClient::addTaskStatus &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b53f1611f2c4d055bb30858cc2485335f837eb" translate="yes" xml:space="preserve">
          <source>GearmanClient::clearCallbacks</source>
          <target state="translated">GearmanClient::clearCallbacks</target>
        </trans-unit>
        <trans-unit id="9b263467358854def0956206bf2c2fe2d014f313" translate="yes" xml:space="preserve">
          <source>GearmanClient::clearCallbacks &amp;mdash; Clear all task callback functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f13f147e6fe96bf597246aa513ba9a2047f5def" translate="yes" xml:space="preserve">
          <source>GearmanClient::clearCallbacks &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4820989ee9b1ebe58718797044e4ffbe8575f4bd" translate="yes" xml:space="preserve">
          <source>GearmanClient::clone</source>
          <target state="translated">GearmanClient::clone</target>
        </trans-unit>
        <trans-unit id="669669900b225f703bcdcfc57a417fd7b8bcb2c5" translate="yes" xml:space="preserve">
          <source>GearmanClient::clone &amp;mdash; Create a copy of a &lt;a href=&quot;class.gearmanclient&quot;&gt;GearmanClient&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef181c6b4bd099e45e8a1cde1747760b74c4e240" translate="yes" xml:space="preserve">
          <source>GearmanClient::clone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8033959d90dd0edc96403ab6e4f2eff8628fd2b9" translate="yes" xml:space="preserve">
          <source>GearmanClient::context</source>
          <target state="translated">GearmanClient::context</target>
        </trans-unit>
        <trans-unit id="bea3be4af35977e432dcffbf24ef5fc2436f0d8b" translate="yes" xml:space="preserve">
          <source>GearmanClient::context &amp;mdash; Get the application context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d887bcb3ee172f7bc41f7810f381a2267745d3" translate="yes" xml:space="preserve">
          <source>GearmanClient::context &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bb4440d95c902da1cca52674a6d6ef9820cf1f" translate="yes" xml:space="preserve">
          <source>GearmanClient::data</source>
          <target state="translated">GearmanClient::data</target>
        </trans-unit>
        <trans-unit id="52c89ba28057aa7846018459adc066097e26a989" translate="yes" xml:space="preserve">
          <source>GearmanClient::data &amp;mdash; Get the application data (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e2ea7ae4cf76188c52e72047c2bb2bab8c3a13" translate="yes" xml:space="preserve">
          <source>GearmanClient::data &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057bfae07075e8cd737f7a996d41d3915968e8ba" translate="yes" xml:space="preserve">
          <source>GearmanClient::do</source>
          <target state="translated">GearmanClient::do</target>
        </trans-unit>
        <trans-unit id="de5930cc5d66d0a5160eedbf1477c47ffaf22533" translate="yes" xml:space="preserve">
          <source>GearmanClient::do &amp;mdash; Run a single task and return a result [deprecated]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2fa209f88704a458022f29a0e98db8ce7d4de2" translate="yes" xml:space="preserve">
          <source>GearmanClient::do &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f97267cbc221789e7acf0258139304c28819b0" translate="yes" xml:space="preserve">
          <source>GearmanClient::doBackground</source>
          <target state="translated">GearmanClient::doBackground</target>
        </trans-unit>
        <trans-unit id="1ea1c108ed0495a17af2682f3fa385a5e3f6dad9" translate="yes" xml:space="preserve">
          <source>GearmanClient::doBackground &amp;mdash; Run a task in the background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb56b44c23562ed1fc70e95ab330fc6b5f1972e3" translate="yes" xml:space="preserve">
          <source>GearmanClient::doBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818a7077e3be05a6c61b57d8b7fe29bfdb1756a6" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHigh</source>
          <target state="translated">GearmanClient::doHigh</target>
        </trans-unit>
        <trans-unit id="2a53ea7c6e205585be145bb364dfe3f9e6cd4ac0" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHigh &amp;mdash; Run a single high priority task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1ec42617009074f6b221c9c0c78ad0eae6606d" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHigh &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c7b7d320d8792a01d05fd4cdb9ef00cce0f467" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHighBackground</source>
          <target state="translated">GearmanClient::doHighBackground</target>
        </trans-unit>
        <trans-unit id="e18b2fe0eeef85d4b4d23efb907fbfb8963ffc83" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHighBackground &amp;mdash; Run a high priority task in the background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528cba54e96f82b9fa0d5d548bb813d3cae674a3" translate="yes" xml:space="preserve">
          <source>GearmanClient::doHighBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d294ffc30630fbf304663ba9c9d4778f42b3352" translate="yes" xml:space="preserve">
          <source>GearmanClient::doJobHandle</source>
          <target state="translated">GearmanClient::doJobHandle</target>
        </trans-unit>
        <trans-unit id="46194b4dbb6a1bf3aba18bba7396f67ac66c8562" translate="yes" xml:space="preserve">
          <source>GearmanClient::doJobHandle &amp;mdash; Get the job handle for the running task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff5a5d359144036b63c3e5dc3c680e799131a17" translate="yes" xml:space="preserve">
          <source>GearmanClient::doJobHandle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5474567c547b52efda20440f38ab2dfec89120" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLow</source>
          <target state="translated">GearmanClient::doLow</target>
        </trans-unit>
        <trans-unit id="c89bc17c3c3679e29514a7624fc432ebfceea4c4" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLow &amp;mdash; Run a single low priority task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e640c3ac424809a228c4f9b2da0b48722b4a0847" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLow &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ad72390dfb3f1c1db1a919bd6ca53f6335a626" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLowBackground</source>
          <target state="translated">GearmanClient::doLowBackground</target>
        </trans-unit>
        <trans-unit id="7eac21c1ff627b2401e25413c1b3647844cabc45" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLowBackground &amp;mdash; Run a low priority task in the background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb18196f80ffea28ab90fc76a8a3ebb7c8ae1340" translate="yes" xml:space="preserve">
          <source>GearmanClient::doLowBackground &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b7ccfcec860cd0394d32e0567cd5de7dd7864f" translate="yes" xml:space="preserve">
          <source>GearmanClient::doNormal</source>
          <target state="translated">GearmanClient::doNormal</target>
        </trans-unit>
        <trans-unit id="89aab76614d6fa68a44523b1eb62b6b14765f221" translate="yes" xml:space="preserve">
          <source>GearmanClient::doNormal &amp;mdash; Run a single task and return a result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbe09b3d03e019eed8008f63b7b9fc5e1d39d9e" translate="yes" xml:space="preserve">
          <source>GearmanClient::doNormal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb36c2217476ad9c317e73c9fd6b96f701155845" translate="yes" xml:space="preserve">
          <source>GearmanClient::doStatus</source>
          <target state="translated">GearmanClient::doStatus</target>
        </trans-unit>
        <trans-unit id="6cfe3ed113637660276b67551ef7156d8fde17ea" translate="yes" xml:space="preserve">
          <source>GearmanClient::doStatus &amp;mdash; Get the status for the running task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3e6dc67031396f5ab5a2d09d3e5602b5b9f156" translate="yes" xml:space="preserve">
          <source>GearmanClient::doStatus &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d909c9615ef97823947a54ec8826f531c77b104b" translate="yes" xml:space="preserve">
          <source>GearmanClient::echo</source>
          <target state="translated">GearmanClient::echo</target>
        </trans-unit>
        <trans-unit id="bd38483132c25817bc586244e454e02ed9e6c56c" translate="yes" xml:space="preserve">
          <source>GearmanClient::echo &amp;mdash; Send data to all job servers to see if they echo it back [deprecated]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d821774c9500b00bd08e68515b90d1fdbbd5c69" translate="yes" xml:space="preserve">
          <source>GearmanClient::echo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5322a32043d05de524bda7d7a39ae028bd7ed81" translate="yes" xml:space="preserve">
          <source>GearmanClient::error</source>
          <target state="translated">GearmanClient::error</target>
        </trans-unit>
        <trans-unit id="124851ce9c411799d63f165c285398eba3821f63" translate="yes" xml:space="preserve">
          <source>GearmanClient::error &amp;mdash; Returns an error string for the last error encountered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd918931afce4f4a334ea4072431d70294c4e89" translate="yes" xml:space="preserve">
          <source>GearmanClient::error &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b168441ace347127027630a389fa4012a4b373" translate="yes" xml:space="preserve">
          <source>GearmanClient::getErrno</source>
          <target state="translated">GearmanClient::getErrno</target>
        </trans-unit>
        <trans-unit id="d286a16c7fffa18c646ee53369d32ee57f13192a" translate="yes" xml:space="preserve">
          <source>GearmanClient::getErrno &amp;mdash; Get an errno value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ded51c32feee4c6df14cd2844d382becbb6e87" translate="yes" xml:space="preserve">
          <source>GearmanClient::getErrno &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaa43899108a1870b591678752035863ba38474" translate="yes" xml:space="preserve">
          <source>GearmanClient::jobStatus</source>
          <target state="translated">GearmanClient::jobStatus</target>
        </trans-unit>
        <trans-unit id="6eea6bbabb074732773c9b4c041a997ea61c300c" translate="yes" xml:space="preserve">
          <source>GearmanClient::jobStatus &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1b130caa04059d5facef41baaf64a43884de86" translate="yes" xml:space="preserve">
          <source>GearmanClient::jobStatus -- gearman_job_status &amp;mdash; Get the status of a background job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138abf1d0618dcefdf36ecb106115ac19a5bc0b1" translate="yes" xml:space="preserve">
          <source>GearmanClient::ping</source>
          <target state="translated">GearmanClient::ping</target>
        </trans-unit>
        <trans-unit id="407c36719ea36c8911f9d431439e171c3d4fb5a8" translate="yes" xml:space="preserve">
          <source>GearmanClient::ping &amp;mdash; Send data to all job servers to see if they echo it back</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4e8ed71ebf7c6b6d58688eac1f8af270d5a70b" translate="yes" xml:space="preserve">
          <source>GearmanClient::ping &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390b4c3262537e3574dde88ab10c75c5d31d666" translate="yes" xml:space="preserve">
          <source>GearmanClient::removeOptions</source>
          <target state="translated">GearmanClient::removeOptions</target>
        </trans-unit>
        <trans-unit id="ddcedd1fbab047cdd8803947af303a0b31e2d754" translate="yes" xml:space="preserve">
          <source>GearmanClient::removeOptions &amp;mdash; Remove client options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0b8f7aaa5041f3b13e125a3ff6f8725ee0733f" translate="yes" xml:space="preserve">
          <source>GearmanClient::removeOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9460c7d1990c8db5c125f83a145f729e252090b8" translate="yes" xml:space="preserve">
          <source>GearmanClient::returnCode</source>
          <target state="translated">GearmanClient::returnCode</target>
        </trans-unit>
        <trans-unit id="7d13565190b6e2e469c7acce2bdea7438c1382a3" translate="yes" xml:space="preserve">
          <source>GearmanClient::returnCode &amp;mdash; Get the last Gearman return code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff3820d9ef03f3ae372cc9e6466c3eccbd45baf" translate="yes" xml:space="preserve">
          <source>GearmanClient::returnCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0123f2828e21213a9d8064a2f6b79a9d8f172b3d" translate="yes" xml:space="preserve">
          <source>GearmanClient::runTasks</source>
          <target state="translated">GearmanClient::runTasks</target>
        </trans-unit>
        <trans-unit id="32853c4450ec745e4f5d82650be7f64fd752fd2d" translate="yes" xml:space="preserve">
          <source>GearmanClient::runTasks &amp;mdash; Run a list of tasks in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afebf4d302e9d5bc61140cabf7870eeff38746b" translate="yes" xml:space="preserve">
          <source>GearmanClient::runTasks &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978d3f75ebcbb6e4d93c9e26ab4058b3e17c1bd9" translate="yes" xml:space="preserve">
          <source>GearmanClient::setClientCallback</source>
          <target state="translated">GearmanClient::setClientCallback</target>
        </trans-unit>
        <trans-unit id="dbf17710817ad4d2622bc1d8a145439e9d48d6dc" translate="yes" xml:space="preserve">
          <source>GearmanClient::setClientCallback &amp;mdash; Callback function when there is a data packet for a task (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08f8f75b992a174256d5d5dcf19a1170d649c92" translate="yes" xml:space="preserve">
          <source>GearmanClient::setClientCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8626655c52edfed9d1566caaa44a9d58d483efc5" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCompleteCallback</source>
          <target state="translated">GearmanClient::setCompleteCallback</target>
        </trans-unit>
        <trans-unit id="2b34b1a154b1106588ad49157fd24063f46754aa" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCompleteCallback &amp;mdash; Set a function to be called on task completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e057fd15bccc86055cbc724f1f5bcdbea79d8f" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCompleteCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0bc5b4ada2627f08ce0b4c7ab678cd44b489af" translate="yes" xml:space="preserve">
          <source>GearmanClient::setContext</source>
          <target state="translated">GearmanClient::setContext</target>
        </trans-unit>
        <trans-unit id="2d75f3e10b2f3d3592c98f23017a00d62c02de23" translate="yes" xml:space="preserve">
          <source>GearmanClient::setContext &amp;mdash; Set application context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dba30bbf623f9456a4c8007fcf15a730dc8fda" translate="yes" xml:space="preserve">
          <source>GearmanClient::setContext &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bc06e298b69be814dbee3e7fa7ca762a97a228" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCreatedCallback</source>
          <target state="translated">GearmanClient::setCreatedCallback</target>
        </trans-unit>
        <trans-unit id="1acd5b4015eeaa178033954c3d49c02acdfdee8b" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCreatedCallback &amp;mdash; Set a callback for when a task is queued</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d35b9ce8946683115d8746e26c739e28d2ba6f" translate="yes" xml:space="preserve">
          <source>GearmanClient::setCreatedCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7228d65e095a57e37e2055132f76e36844f47e71" translate="yes" xml:space="preserve">
          <source>GearmanClient::setData</source>
          <target state="translated">GearmanClient::setData</target>
        </trans-unit>
        <trans-unit id="b23497e22aaf00fafb20391b5663d85d403d6983" translate="yes" xml:space="preserve">
          <source>GearmanClient::setData &amp;mdash; Set application data (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9e7663f1c37882d948faf534e937f77cec8d03" translate="yes" xml:space="preserve">
          <source>GearmanClient::setData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e1c697dc221abac9189e4ff74dcc5948259414" translate="yes" xml:space="preserve">
          <source>GearmanClient::setDataCallback</source>
          <target state="translated">GearmanClient::setDataCallback</target>
        </trans-unit>
        <trans-unit id="a55480ad5591e50b755920e28ecfb3985dcbb7bd" translate="yes" xml:space="preserve">
          <source>GearmanClient::setDataCallback &amp;mdash; Callback function when there is a data packet for a task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeec48c6085a50e9329582e680e29f5c6b2342f" translate="yes" xml:space="preserve">
          <source>GearmanClient::setDataCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e48533b65cbc7692eb3c65e736fe474302801c9" translate="yes" xml:space="preserve">
          <source>GearmanClient::setExceptionCallback</source>
          <target state="translated">GearmanClient::setExceptionCallback</target>
        </trans-unit>
        <trans-unit id="e2e4e4561cd45e98b96443c547deba24237cfc1d" translate="yes" xml:space="preserve">
          <source>GearmanClient::setExceptionCallback &amp;mdash; Set a callback for worker exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba74441ee10bafde234f81b3e3a1a165447686d" translate="yes" xml:space="preserve">
          <source>GearmanClient::setExceptionCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c79535f1dbc7feac67171eb20248e6820681de" translate="yes" xml:space="preserve">
          <source>GearmanClient::setFailCallback</source>
          <target state="translated">GearmanClient::setFailCallback</target>
        </trans-unit>
        <trans-unit id="a94ed4fb1e54b970440ac863e568f6379f502e08" translate="yes" xml:space="preserve">
          <source>GearmanClient::setFailCallback &amp;mdash; Set callback for job failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c075f440ff8c0f3269bda0ae68a7e23f2c6c186" translate="yes" xml:space="preserve">
          <source>GearmanClient::setFailCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a5c4290f3f3a57cf603b354f746b305aa79fc1" translate="yes" xml:space="preserve">
          <source>GearmanClient::setOptions</source>
          <target state="translated">GearmanClient::setOptions</target>
        </trans-unit>
        <trans-unit id="4672be68f34d131b928c83869a9eb2559286e058" translate="yes" xml:space="preserve">
          <source>GearmanClient::setOptions &amp;mdash; Set client options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a824036c8ac410a8bc3aa665f50aef64f08bef" translate="yes" xml:space="preserve">
          <source>GearmanClient::setOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fd448ce41a02575150fd590718c134e6629771" translate="yes" xml:space="preserve">
          <source>GearmanClient::setStatusCallback</source>
          <target state="translated">GearmanClient::setStatusCallback</target>
        </trans-unit>
        <trans-unit id="358e1494fad8e2558ea399eb66755265db5d67d5" translate="yes" xml:space="preserve">
          <source>GearmanClient::setStatusCallback &amp;mdash; Set a callback for collecting task status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b2347cac8886410797accde8c98e58a6884d39" translate="yes" xml:space="preserve">
          <source>GearmanClient::setStatusCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577f0920f9d2ef71a40d6c963ac3d685028130ac" translate="yes" xml:space="preserve">
          <source>GearmanClient::setTimeout</source>
          <target state="translated">GearmanClient::setTimeout</target>
        </trans-unit>
        <trans-unit id="84fc2ff665acca357879fde870018331ed2cd08c" translate="yes" xml:space="preserve">
          <source>GearmanClient::setTimeout &amp;mdash; Set socket I/O activity timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b4ede25a6fb86bc8cd33e6cfee3eb884376a2c" translate="yes" xml:space="preserve">
          <source>GearmanClient::setTimeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8492bccc5bcf8d19360fc38a7cad172e63dee1ff" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWarningCallback</source>
          <target state="translated">GearmanClient::setWarningCallback</target>
        </trans-unit>
        <trans-unit id="dcc537ccd3db27dbd35936959f8f9bb145f5ad6d" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWarningCallback &amp;mdash; Set a callback for worker warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4904e2344f13514d370bbcae5776ac02e3314d" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWarningCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3171069ee5a828f3c8e076585c671a0408e51b" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWorkloadCallback</source>
          <target state="translated">GearmanClient::setWorkloadCallback</target>
        </trans-unit>
        <trans-unit id="29289926386c0066fbdb2e999e679e2ea2c9de5a" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWorkloadCallback &amp;mdash; Set a callback for accepting incremental data updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217584e92a23a1af5c7bcbd20216f3c395483200" translate="yes" xml:space="preserve">
          <source>GearmanClient::setWorkloadCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d773f735ae3f73c2733705e371378b03b7e8b4" translate="yes" xml:space="preserve">
          <source>GearmanClient::timeout</source>
          <target state="translated">GearmanClient::timeout</target>
        </trans-unit>
        <trans-unit id="175269709794e9e4310d638744b3d054a8622ca2" translate="yes" xml:space="preserve">
          <source>GearmanClient::timeout &amp;mdash; Get current socket I/O activity timeout value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a694030800e5c090a3e8cc5d7efbc5f6d3e63ec" translate="yes" xml:space="preserve">
          <source>GearmanClient::timeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f9773047ac01fb6c9c6251810a62041b3a909e" translate="yes" xml:space="preserve">
          <source>GearmanException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0790c061120a9e81eaf4f519ad28600cc02565c" translate="yes" xml:space="preserve">
          <source>GearmanJob &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfb9e603750a112a0061205eaa78acbfb2de2fa" translate="yes" xml:space="preserve">
          <source>GearmanJob::__construct</source>
          <target state="translated">GearmanJob::__construct</target>
        </trans-unit>
        <trans-unit id="c8c7550ed2bfcd51363e3b873492b07956de4165" translate="yes" xml:space="preserve">
          <source>GearmanJob::__construct &amp;mdash; Create a GearmanJob instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160d006d837f099076b7455c2204829bc4f1614e" translate="yes" xml:space="preserve">
          <source>GearmanJob::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a478142c7c04c73c83ad84bacd508d949ca4a7a" translate="yes" xml:space="preserve">
          <source>GearmanJob::complete</source>
          <target state="translated">GearmanJob::complete</target>
        </trans-unit>
        <trans-unit id="dcf0cb8131d6a294daa12af999b9cf95eadda8f5" translate="yes" xml:space="preserve">
          <source>GearmanJob::complete &amp;mdash; Send the result and complete status (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59a71929b0e33bc53ffdb1703a76ef651b1cdc6" translate="yes" xml:space="preserve">
          <source>GearmanJob::complete &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d34cce719369555760db19bf6cd86f3fa6ea60" translate="yes" xml:space="preserve">
          <source>GearmanJob::data</source>
          <target state="translated">GearmanJob::data</target>
        </trans-unit>
        <trans-unit id="5284c07eb1545e818259ba3aad1038059218d61b" translate="yes" xml:space="preserve">
          <source>GearmanJob::data &amp;mdash; Send data for a running job (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345bb61d7263c30719a0f10374ed3fc3ee9cb2a2" translate="yes" xml:space="preserve">
          <source>GearmanJob::data &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f505ebb50bd86abd2ec19b280923deaa951de3" translate="yes" xml:space="preserve">
          <source>GearmanJob::exception</source>
          <target state="translated">GearmanJob::exception</target>
        </trans-unit>
        <trans-unit id="a47bc95af60762a0ba8782c489ed7c38ebf0c83b" translate="yes" xml:space="preserve">
          <source>GearmanJob::exception &amp;mdash; Send exception for running job (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5017b4adb6719dabd94eb7446bf7a2ed7c13a21f" translate="yes" xml:space="preserve">
          <source>GearmanJob::exception &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fbd8043bd4b2033d6327be484c840b7c323fc4" translate="yes" xml:space="preserve">
          <source>GearmanJob::fail</source>
          <target state="translated">GearmanJob::fail</target>
        </trans-unit>
        <trans-unit id="070565ca37d5e1225ef990bdbf3d358c1b7c4b94" translate="yes" xml:space="preserve">
          <source>GearmanJob::fail &amp;mdash; Send fail status (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f0a9f9950b6b887e99508d80bea388ab9cbc15" translate="yes" xml:space="preserve">
          <source>GearmanJob::fail &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41b215570c6ace5b2b52b9024f7f08e83caf047" translate="yes" xml:space="preserve">
          <source>GearmanJob::functionName</source>
          <target state="translated">GearmanJob::functionName</target>
        </trans-unit>
        <trans-unit id="d3889cff6b6e2ca0641eadba3a262638547988c0" translate="yes" xml:space="preserve">
          <source>GearmanJob::functionName &amp;mdash; Get function name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009efb20dae709c3707a57da06c4c55f434bb1b9" translate="yes" xml:space="preserve">
          <source>GearmanJob::functionName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0fe5898f099519fa8a18b3414a3de8380a486b" translate="yes" xml:space="preserve">
          <source>GearmanJob::handle</source>
          <target state="translated">GearmanJob::handle</target>
        </trans-unit>
        <trans-unit id="5fbd25da03f255214fdd6ecf0844f36106aabe1d" translate="yes" xml:space="preserve">
          <source>GearmanJob::handle &amp;mdash; Get the job handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34243b895c0849c10b2d3f8f7186a7feb0989445" translate="yes" xml:space="preserve">
          <source>GearmanJob::handle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee1db8e8f6bebe9cf28b160bfbfd4c68d067c4d" translate="yes" xml:space="preserve">
          <source>GearmanJob::returnCode</source>
          <target state="translated">GearmanJob::returnCode</target>
        </trans-unit>
        <trans-unit id="3b713b9eb658b0746f4e76d4319cf4b2f2c1fda4" translate="yes" xml:space="preserve">
          <source>GearmanJob::returnCode &amp;mdash; Get last return code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f198398ff2e82a6db86b12cdf0d60da5f968ee" translate="yes" xml:space="preserve">
          <source>GearmanJob::returnCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767edd3235e81d2b760ec37bb9095f9e8fca3a4" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendComplete</source>
          <target state="translated">GearmanJob::sendComplete</target>
        </trans-unit>
        <trans-unit id="8e6c4bdc972c9bd7157b4fd18cb66a33c28384e9" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendComplete &amp;mdash; Send the result and complete status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ad037d5e39f92a0b66f248e1b6430211e45567" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendComplete &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4b4fc8dbeb31d692fd26e35c46f908dca11d44" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendData</source>
          <target state="translated">GearmanJob::sendData</target>
        </trans-unit>
        <trans-unit id="b2c06791593ae7c8aa9e137473e01ab81fbec3a2" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendData &amp;mdash; Send data for a running job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3c297e321954ee4652233ab83adaac67a92a1b" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aceb5301d7a586a4cf001e01a98b5fff33eb472" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendException</source>
          <target state="translated">GearmanJob::sendException</target>
        </trans-unit>
        <trans-unit id="7493a6596fadf651eb29a08849ff5704cb049df3" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendException &amp;mdash; Send exception for running job (exception)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b263b413081009547eb9e447f1bc1af762f9290" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5299937c00a3bbcc6d21c8dd6fea78f6438012cb" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendFail</source>
          <target state="translated">GearmanJob::sendFail</target>
        </trans-unit>
        <trans-unit id="87014592ef0feaf339c0e85a2ac0e96e8bfb1c2d" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendFail &amp;mdash; Send fail status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084a2a49cd26db1af3083443cb34b5cb2c464415" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendFail &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffd0bb6213031cd9549716a5e3c7e575f9a09b5" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendStatus</source>
          <target state="translated">GearmanJob::sendStatus</target>
        </trans-unit>
        <trans-unit id="7b9385b39522f23948035524c33fe9a57d60e648" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendStatus &amp;mdash; Send status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c42c7bc879a23824aa0818333f0742425334bcc" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendStatus &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2367c2e5fec100e2e2f16ca128b9e18ebd76edac" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendWarning</source>
          <target state="translated">GearmanJob::sendWarning</target>
        </trans-unit>
        <trans-unit id="8d8d08e1095fa77149e3361e9d427788efbe5460" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendWarning &amp;mdash; Send a warning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc0205efefc6eb867cec595d45a15b9269c87e9" translate="yes" xml:space="preserve">
          <source>GearmanJob::sendWarning &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23adbc1b08226ef6bbbdb9708fa512f1f84ae00e" translate="yes" xml:space="preserve">
          <source>GearmanJob::setReturn</source>
          <target state="translated">GearmanJob::setReturn</target>
        </trans-unit>
        <trans-unit id="70372adaeea21045a7e5e98f980d8fbd2d5573ec" translate="yes" xml:space="preserve">
          <source>GearmanJob::setReturn &amp;mdash; Set a return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78005b5e88ddc555fc4a7e3a99cf53a75a54a7ef" translate="yes" xml:space="preserve">
          <source>GearmanJob::setReturn &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f361d0e5013d8559122b84a8d885f9c6168219" translate="yes" xml:space="preserve">
          <source>GearmanJob::status</source>
          <target state="translated">GearmanJob::status</target>
        </trans-unit>
        <trans-unit id="cd07a80b1b0051c870d47fa638e4af7a9d2889fc" translate="yes" xml:space="preserve">
          <source>GearmanJob::status &amp;mdash; Send status (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab61fb9854f2eca202da294b6418e8d19639632" translate="yes" xml:space="preserve">
          <source>GearmanJob::status &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ccc6342e83ff1e2c9dec794b5238a03c4a3afe" translate="yes" xml:space="preserve">
          <source>GearmanJob::unique</source>
          <target state="translated">GearmanJob::unique</target>
        </trans-unit>
        <trans-unit id="1679c03dab55fa4f9922b1f329e0d51e460d1273" translate="yes" xml:space="preserve">
          <source>GearmanJob::unique &amp;mdash; Get the unique identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdce8bfba07bafec98e8d081ffd2e4a1ce72c8ae" translate="yes" xml:space="preserve">
          <source>GearmanJob::unique &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b420247e014be47f523fe6e86db6eef6b7998245" translate="yes" xml:space="preserve">
          <source>GearmanJob::warning</source>
          <target state="translated">GearmanJob::warning</target>
        </trans-unit>
        <trans-unit id="467a54dd09b7c95779cb08b34437eefc192649ec" translate="yes" xml:space="preserve">
          <source>GearmanJob::warning &amp;mdash; Send a warning (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ee8669c9be3fd1375ac7382b891ca520483d0d" translate="yes" xml:space="preserve">
          <source>GearmanJob::warning &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c35ae3e7a156f3ab6a495eeb65fbfe4ba7a0762" translate="yes" xml:space="preserve">
          <source>GearmanJob::workload</source>
          <target state="translated">GearmanJob::workload</target>
        </trans-unit>
        <trans-unit id="13e25f6f32b209b531ea66bb1e496bbe0184082b" translate="yes" xml:space="preserve">
          <source>GearmanJob::workload &amp;mdash; Get workload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f81f0a54d33a219b7e3ad89dada6ef02ec0dd0" translate="yes" xml:space="preserve">
          <source>GearmanJob::workload &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588d04ee0a0b32966318601c76d7767b5bdf373a" translate="yes" xml:space="preserve">
          <source>GearmanJob::workloadSize</source>
          <target state="translated">GearmanJob::workloadSize</target>
        </trans-unit>
        <trans-unit id="38cc7913e3cd551ff0be3ee01e75cbd40d016bf5" translate="yes" xml:space="preserve">
          <source>GearmanJob::workloadSize &amp;mdash; Get size of work load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5cd96bf0ddbb79ebbd6e6189273b9daf3e67df" translate="yes" xml:space="preserve">
          <source>GearmanJob::workloadSize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3da58bc309201fbf6503fce3ecd9e3711913796" translate="yes" xml:space="preserve">
          <source>GearmanTask &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c36087c4f4c3810cb733214301ed61f34c3477" translate="yes" xml:space="preserve">
          <source>GearmanTask::__construct</source>
          <target state="translated">GearmanTask::__construct</target>
        </trans-unit>
        <trans-unit id="a3eef267533e0840373e678ec288125f1c66aa1d" translate="yes" xml:space="preserve">
          <source>GearmanTask::__construct &amp;mdash; Create a GearmanTask instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db98291a1554536b87415536dfe5a825d23e59df" translate="yes" xml:space="preserve">
          <source>GearmanTask::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6343cbc75299ccf454f32fdd2906d655a82bf33" translate="yes" xml:space="preserve">
          <source>GearmanTask::create</source>
          <target state="translated">GearmanTask::create</target>
        </trans-unit>
        <trans-unit id="4230acc517559626e6d20535c9bf004833c962ff" translate="yes" xml:space="preserve">
          <source>GearmanTask::create &amp;mdash; Create a task (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267ae43e2664203441472e2cf25d99391920fd62" translate="yes" xml:space="preserve">
          <source>GearmanTask::create &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4638f906739bb409893c8906208a81d57a0654" translate="yes" xml:space="preserve">
          <source>GearmanTask::data</source>
          <target state="translated">GearmanTask::data</target>
        </trans-unit>
        <trans-unit id="f983c563d1547a58a57b6ee36b9a212e5b4dc9b9" translate="yes" xml:space="preserve">
          <source>GearmanTask::data &amp;mdash; Get data returned for a task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d16cd2e988a57f181e81d9bb22c61579713f74f" translate="yes" xml:space="preserve">
          <source>GearmanTask::data &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071403911fc3f78ca8244d55f70885bdf9c52d64" translate="yes" xml:space="preserve">
          <source>GearmanTask::dataSize</source>
          <target state="translated">GearmanTask::dataSize</target>
        </trans-unit>
        <trans-unit id="2611ee399d5f737e377415503b5bf108d68bdb85" translate="yes" xml:space="preserve">
          <source>GearmanTask::dataSize &amp;mdash; Get the size of returned data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da5f8166df37176cd11cbe27026bf90757d011f" translate="yes" xml:space="preserve">
          <source>GearmanTask::dataSize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c62cf3f81ef729f8d500e49dc2235042935d738" translate="yes" xml:space="preserve">
          <source>GearmanTask::function</source>
          <target state="translated">GearmanTask::function</target>
        </trans-unit>
        <trans-unit id="09f876133742316c38f85368b32ae0a7dd904c4c" translate="yes" xml:space="preserve">
          <source>GearmanTask::function &amp;mdash; Get associated function name (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f1dbb4e1f2a5fdf22f2c8048455c065a1b1915" translate="yes" xml:space="preserve">
          <source>GearmanTask::function &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534b09ac5bbfec8a55b40ca413dc98dbb9e318ac" translate="yes" xml:space="preserve">
          <source>GearmanTask::functionName</source>
          <target state="translated">GearmanTask::functionName</target>
        </trans-unit>
        <trans-unit id="71edbf362d2914c8296acf5244c5af0132ea9f4d" translate="yes" xml:space="preserve">
          <source>GearmanTask::functionName &amp;mdash; Get associated function name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86afc0d6263fd80f59f3f9799a2030c26141ac5" translate="yes" xml:space="preserve">
          <source>GearmanTask::functionName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f471b0b5fcfc719d4d9ace25d676d82e996b12a" translate="yes" xml:space="preserve">
          <source>GearmanTask::isKnown</source>
          <target state="translated">GearmanTask::isKnown</target>
        </trans-unit>
        <trans-unit id="ea5bc556c25cd7b9067f519187baf3b946d0edda" translate="yes" xml:space="preserve">
          <source>GearmanTask::isKnown &amp;mdash; Determine if task is known</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7904875dfd2c92d0064fda804d5c5c689067bf" translate="yes" xml:space="preserve">
          <source>GearmanTask::isKnown &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814b3b926f7bbd0f05a93695b76e7a1c9002729c" translate="yes" xml:space="preserve">
          <source>GearmanTask::isRunning</source>
          <target state="translated">GearmanTask::isRunning</target>
        </trans-unit>
        <trans-unit id="80c90735cee3f122ef16236c1fb6164f22197394" translate="yes" xml:space="preserve">
          <source>GearmanTask::isRunning &amp;mdash; Test whether the task is currently running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94f16e182640f5ff5b83a28019423f4f6a907a1" translate="yes" xml:space="preserve">
          <source>GearmanTask::isRunning &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cceaebeaa6a1f50b8d51e6bba488c65a02788f3d" translate="yes" xml:space="preserve">
          <source>GearmanTask::jobHandle</source>
          <target state="translated">GearmanTask::jobHandle</target>
        </trans-unit>
        <trans-unit id="4235bd8903fc5cc558030f0e33cf0a11b7a9bae4" translate="yes" xml:space="preserve">
          <source>GearmanTask::jobHandle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888f90db7c685867180cdc61e52eaf38bf4a2ec7" translate="yes" xml:space="preserve">
          <source>GearmanTask::jobHandle -- gearman_job_handle &amp;mdash; Get the job handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6a79e7c69790128a858cee9f8c46461c54718a" translate="yes" xml:space="preserve">
          <source>GearmanTask::recvData</source>
          <target state="translated">GearmanTask::recvData</target>
        </trans-unit>
        <trans-unit id="a0edb0e95bb23b434f4fa4633cde9d1a4a74af1c" translate="yes" xml:space="preserve">
          <source>GearmanTask::recvData &amp;mdash; Read work or result data into a buffer for a task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9913b9f17cc799a597490e3174715d786ee0638b" translate="yes" xml:space="preserve">
          <source>GearmanTask::recvData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875ac2efa1917a378c3a31236bce3de868e1c3cf" translate="yes" xml:space="preserve">
          <source>GearmanTask::returnCode</source>
          <target state="translated">GearmanTask::returnCode</target>
        </trans-unit>
        <trans-unit id="2e6aa26f257ee7e2a7a02a1deda6d6e3eced0469" translate="yes" xml:space="preserve">
          <source>GearmanTask::returnCode &amp;mdash; Get the last return code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07d9242590615cf969fcb9a597ac2ba0cf43239" translate="yes" xml:space="preserve">
          <source>GearmanTask::returnCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bef766e725d297088eee51eba286ccfdd164469" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendData</source>
          <target state="translated">GearmanTask::sendData</target>
        </trans-unit>
        <trans-unit id="741d9d3b505a24926a5fda2fa8fc1b006fb59d97" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendData &amp;mdash; Send data for a task (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3759707cb7e7b3a5e2a010950511649d2cff8dea" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c69bbb1144acf80fab207484c1a6511acd96d3" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendWorkload</source>
          <target state="translated">GearmanTask::sendWorkload</target>
        </trans-unit>
        <trans-unit id="e6b1b40eaa2930c764f62f750af3456e800c68fd" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendWorkload &amp;mdash; Send data for a task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bd17e47b34eb7448e5188b1afe665301983e04" translate="yes" xml:space="preserve">
          <source>GearmanTask::sendWorkload &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f731322b5abb33ab13eef60000a4f05fb9c1e164" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskDenominator</source>
          <target state="translated">GearmanTask::taskDenominator</target>
        </trans-unit>
        <trans-unit id="88ca32852885130e2637d5033bb08f0027704189" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskDenominator &amp;mdash; Get completion percentage denominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec2c4784596600a2caa2b39dd9607f91b970960" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskDenominator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e585958876706662abd11ce6df6354e03d3360" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskNumerator</source>
          <target state="translated">GearmanTask::taskNumerator</target>
        </trans-unit>
        <trans-unit id="ed674f2c7c83e3dd0662b97b31577c3e20a0c558" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskNumerator &amp;mdash; Get completion percentage numerator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b814642e630fc04b43714b90e90e497870c8cf" translate="yes" xml:space="preserve">
          <source>GearmanTask::taskNumerator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e8146685fed9f537d8195e980324fc157af851" translate="yes" xml:space="preserve">
          <source>GearmanTask::unique</source>
          <target state="translated">GearmanTask::unique</target>
        </trans-unit>
        <trans-unit id="95be0b83366b5ead18224b29b2a19abe68147343" translate="yes" xml:space="preserve">
          <source>GearmanTask::unique &amp;mdash; Get the unique identifier for a task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ecdd9420cc11f17356938c412d3b7b16b3b3ba" translate="yes" xml:space="preserve">
          <source>GearmanTask::unique &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e542a75610701b19e2f0ad1155e51f937b6dc841" translate="yes" xml:space="preserve">
          <source>GearmanTask::uuid</source>
          <target state="translated">GearmanTask::uuid</target>
        </trans-unit>
        <trans-unit id="238935212fc29a826c804e451294cdf54337efc1" translate="yes" xml:space="preserve">
          <source>GearmanTask::uuid &amp;mdash; Get the unique identifier for a task (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad3eb7919bd2495c39b57a45ae51929a820de95" translate="yes" xml:space="preserve">
          <source>GearmanTask::uuid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c29c64ffe6da2e0892206e7156b75ed1172f6cc" translate="yes" xml:space="preserve">
          <source>GearmanWorker &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa600b12262cffe650a193a69420615c9d0a943" translate="yes" xml:space="preserve">
          <source>GearmanWorker::__construct</source>
          <target state="translated">GearmanWorker::__construct</target>
        </trans-unit>
        <trans-unit id="74c89c9e13a6407db0c185b6763e47a3fa0791b7" translate="yes" xml:space="preserve">
          <source>GearmanWorker::__construct &amp;mdash; Create a GearmanWorker instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ede7d0c1be9c874e421c1cf0d2a1a5338d3248" translate="yes" xml:space="preserve">
          <source>GearmanWorker::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf7b73abf05be0417253de18563c125d156192" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addFunction</source>
          <target state="translated">GearmanWorker::addFunction</target>
        </trans-unit>
        <trans-unit id="5dea1b7240ddb91510cc6f855db8aa2366dff57c" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addFunction &amp;mdash; Register and add callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47181efb421a07b649825fdef97ad5ca8b06755e" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addFunction &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1914b4519f7d57554baede942ac9251d9d9b69a7" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addOptions</source>
          <target state="translated">GearmanWorker::addOptions</target>
        </trans-unit>
        <trans-unit id="979ada7d9372b2e225e0a8b8a8b0204be527fe19" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addOptions &amp;mdash; Add worker options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd86a636a6ff162326d449a9063830a6916cfc0" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2344618dd47d4541bab2f43bb402b8800b9f564" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServer</source>
          <target state="translated">GearmanWorker::addServer</target>
        </trans-unit>
        <trans-unit id="2e7e162c94493b1a849edefb001a3f83cf60748c" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServer &amp;mdash; Add a job server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477b7aed6ed2c3d1349729ad854c410cd2ebfff3" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d7c5e2e5d82584146e1cd90389a8b1cdd2c33a" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServers</source>
          <target state="translated">GearmanWorker::addServers</target>
        </trans-unit>
        <trans-unit id="d8d475db7c90a47d9ed904a460f1061d9b2020dc" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServers &amp;mdash; Add job servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e87a3d98c7e0e5a243e28729e431ce6b7ac911" translate="yes" xml:space="preserve">
          <source>GearmanWorker::addServers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d596f0982c6219c018aee3ebc4d37c6e8771a7d" translate="yes" xml:space="preserve">
          <source>GearmanWorker::clone</source>
          <target state="translated">GearmanWorker::clone</target>
        </trans-unit>
        <trans-unit id="1dde60f2e434f30cbc2e165e427eca33b60aa498" translate="yes" xml:space="preserve">
          <source>GearmanWorker::clone &amp;mdash; Create a copy of the worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0d1d297baa6cf923bfae25c006463936aa7823" translate="yes" xml:space="preserve">
          <source>GearmanWorker::clone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee590b5155311f866cce4edcb5e341508f1fac2" translate="yes" xml:space="preserve">
          <source>GearmanWorker::echo</source>
          <target state="translated">GearmanWorker::echo</target>
        </trans-unit>
        <trans-unit id="e0a4d97ddc9f098f39f9b2a1f18e2954c5b7faae" translate="yes" xml:space="preserve">
          <source>GearmanWorker::echo &amp;mdash; Test job server response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d31644efa3557366dfd30f886c26b303c8fe1e" translate="yes" xml:space="preserve">
          <source>GearmanWorker::echo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5912a5deae66c84bfcdfe5e73816de7ffd85a4" translate="yes" xml:space="preserve">
          <source>GearmanWorker::error</source>
          <target state="translated">GearmanWorker::error</target>
        </trans-unit>
        <trans-unit id="c2ba227d6c3cce9e70f65f5fa2d06269cf7cc635" translate="yes" xml:space="preserve">
          <source>GearmanWorker::error &amp;mdash; Get the last error encountered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7942d7b584842af28506a6454d27192e20819bb" translate="yes" xml:space="preserve">
          <source>GearmanWorker::error &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bbe4e65662684eeb7c1e13fca057c8f262cc00" translate="yes" xml:space="preserve">
          <source>GearmanWorker::getErrno</source>
          <target state="translated">GearmanWorker::getErrno</target>
        </trans-unit>
        <trans-unit id="e35558aec9f6622fdec0b6fbbefb0022aa5a7556" translate="yes" xml:space="preserve">
          <source>GearmanWorker::getErrno &amp;mdash; Get errno</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709ed8d341fce3a5bfd8aedad1618d9346e9a3f2" translate="yes" xml:space="preserve">
          <source>GearmanWorker::getErrno &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e6a4868a2960758fd8411ccec38a209f4bbe07" translate="yes" xml:space="preserve">
          <source>GearmanWorker::options</source>
          <target state="translated">GearmanWorker::options</target>
        </trans-unit>
        <trans-unit id="166aac7877506d19d5dedf1be0b87427665396b6" translate="yes" xml:space="preserve">
          <source>GearmanWorker::options &amp;mdash; Get worker options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b26ca5b971ec432fce1e986c65717548174db61" translate="yes" xml:space="preserve">
          <source>GearmanWorker::options &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f2809f8c3ac767f05a881ac40b8806cd80e6f7" translate="yes" xml:space="preserve">
          <source>GearmanWorker::register</source>
          <target state="translated">GearmanWorker::register</target>
        </trans-unit>
        <trans-unit id="fedcfbc695aedec984f6b1b929b9712670a67f9e" translate="yes" xml:space="preserve">
          <source>GearmanWorker::register &amp;mdash; Register a function with the job server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cd8b8f3cbc500687cc77afc9d1b48ad932836f" translate="yes" xml:space="preserve">
          <source>GearmanWorker::register &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d5aa53c2621bec79f11e988943a26af17e821c" translate="yes" xml:space="preserve">
          <source>GearmanWorker::removeOptions</source>
          <target state="translated">GearmanWorker::removeOptions</target>
        </trans-unit>
        <trans-unit id="70b897cdd158870673f8a53e9b9ec53d0752552b" translate="yes" xml:space="preserve">
          <source>GearmanWorker::removeOptions &amp;mdash; Remove worker options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604216bc864dc3e672ef9912281e481597d46df3" translate="yes" xml:space="preserve">
          <source>GearmanWorker::removeOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37d14f633aed6063a2e5f46b9a48f9e3848d419" translate="yes" xml:space="preserve">
          <source>GearmanWorker::returnCode</source>
          <target state="translated">GearmanWorker::returnCode</target>
        </trans-unit>
        <trans-unit id="7103de08c87d1c2b19ba070b84df89e42980efb2" translate="yes" xml:space="preserve">
          <source>GearmanWorker::returnCode &amp;mdash; Get last Gearman return code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c34f6e029ecef4397b6c3f803782ad216421022" translate="yes" xml:space="preserve">
          <source>GearmanWorker::returnCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e89d9f569744dde0e6507283f1d8aa2eeaf926" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setId</source>
          <target state="translated">GearmanWorker::setId</target>
        </trans-unit>
        <trans-unit id="bbbfb1a1c3dd6ed07223db3a2cdf32c2d91468a4" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setId &amp;mdash; Give the worker an identifier so it can be tracked when asking gearmand for the list of available workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459db77c7872599b64dc05f85270c277e04742a5" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setId &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309c929b5f88f0294feb587f90612c8ad252c6ed" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setOptions</source>
          <target state="translated">GearmanWorker::setOptions</target>
        </trans-unit>
        <trans-unit id="c7268447c3cdaa4e0e56de2165e79837b2e49233" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setOptions &amp;mdash; Set worker options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeb8295361017c651220ee83d858ac3794f6378" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0499859148267b3e05b9417e083d9f257f37699e" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setTimeout</source>
          <target state="translated">GearmanWorker::setTimeout</target>
        </trans-unit>
        <trans-unit id="817636fe8fa40d5165294ff5be1be92854ee8225" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setTimeout &amp;mdash; Set socket I/O activity timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6021c29d1308473cfcda7e7c30cced5a73866d" translate="yes" xml:space="preserve">
          <source>GearmanWorker::setTimeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5a77b866e076a71924956752c1740c6b1ae258" translate="yes" xml:space="preserve">
          <source>GearmanWorker::timeout</source>
          <target state="translated">GearmanWorker::timeout</target>
        </trans-unit>
        <trans-unit id="ee650436840c788fb37df5c1abfab6111cd6eff0" translate="yes" xml:space="preserve">
          <source>GearmanWorker::timeout &amp;mdash; Get socket I/O activity timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b40a9a32046fa9fca2ca2b330bcc54ba11d0a5d" translate="yes" xml:space="preserve">
          <source>GearmanWorker::timeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8195f47c89bc9916f488ac06b6d0acb93d380aaa" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregister</source>
          <target state="translated">GearmanWorker::unregister</target>
        </trans-unit>
        <trans-unit id="7517fce44c9c8e0ff2d143fd2cb43088a38c1e4d" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregister &amp;mdash; Unregister a function name with the job servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a24cf41515841a030d5b5f0443bf04423c1d46" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregister &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15910e24c4bcadff1734f6f7f9dcd62dcdfa63b" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregisterAll</source>
          <target state="translated">GearmanWorker::unregisterAll</target>
        </trans-unit>
        <trans-unit id="2547a62ac16b5eb7675926a28cc8587ab4f80d51" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregisterAll &amp;mdash; Unregister all function names with the job servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9b7842892a33b601a26da204843c48414fd4fd" translate="yes" xml:space="preserve">
          <source>GearmanWorker::unregisterAll &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe50b665232b7f8b3a3ee74cb3e828d467199d0" translate="yes" xml:space="preserve">
          <source>GearmanWorker::wait</source>
          <target state="translated">GearmanWorker::wait</target>
        </trans-unit>
        <trans-unit id="f54776bba167c15c6e083a1acc4e2d3915667e0f" translate="yes" xml:space="preserve">
          <source>GearmanWorker::wait &amp;mdash; Wait for activity from one of the job servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df167d6c9aa84253621b121a1d8905f2bec834c" translate="yes" xml:space="preserve">
          <source>GearmanWorker::wait &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d9dfe3e572869041d13f552014936bd3fe9b6a" translate="yes" xml:space="preserve">
          <source>GearmanWorker::work</source>
          <target state="translated">GearmanWorker::work</target>
        </trans-unit>
        <trans-unit id="f3051d8e8a980cd43f466e30c8ba035d99e73c66" translate="yes" xml:space="preserve">
          <source>GearmanWorker::work &amp;mdash; Wait for and perform jobs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94271336a2a119716a817f7dcfc20eaea3d2288" translate="yes" xml:space="preserve">
          <source>GearmanWorker::work &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f0e3e6ae55e240f01cc9a6101b5f0512d732e9" translate="yes" xml:space="preserve">
          <source>General credits: Language design and concept, PHP authors and SAPI module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50178cd08d50128ea30933bb6c92a49b32302f40" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is advisable to avoid relying on a specific order of operation, as this may change again in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3612171fac41dad96d36b213a89b94729aab3983" translate="yes" xml:space="preserve">
          <source>Generally, using the bundled magic database (by leaving &lt;code&gt;magic_file&lt;/code&gt; and the &lt;em&gt;MAGIC&lt;/em&gt; environment variables unset) is the best course of action unless you specifically need a custom magic database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbf46f0e4a1131007b61987d5c9f0c002755748" translate="yes" xml:space="preserve">
          <source>Generate OAuth header string signature based on the final HTTP method, URL and a string/array of parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcad10c78ca8b548b2779a0e6dcd31dd7291dcc" translate="yes" xml:space="preserve">
          <source>Generate a YAML representation of the provided &lt;code&gt;data&lt;/code&gt; in the &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1690781762082f3676e9bf18dde2e7b477057090" translate="yes" xml:space="preserve">
          <source>Generate a YAML representation of the provided &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810206087db67ff4e8e88f0180833637fb28e2e5" translate="yes" xml:space="preserve">
          <source>Generate a new SPKAC with the default digest (MD5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439b0ef9a6b7f6830d24c034a19b491ff41e3c0b" translate="yes" xml:space="preserve">
          <source>Generate a random number. The number will be between 0 and (2 ** &lt;code&gt;bits&lt;/code&gt;) - 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2fc091bc843e31ca9e1db4be54b2a8579dc2ec" translate="yes" xml:space="preserve">
          <source>Generate a random number. The number will be between 0 and (2 ** n) - 1, where n is the number of bits per limb multiplied by &lt;code&gt;limiter&lt;/code&gt;. If &lt;code&gt;limiter&lt;/code&gt; is negative, negative numbers are generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0488c27762010812ed1b8e24284859ca2ee7dc7" translate="yes" xml:space="preserve">
          <source>Generate a random number. The number will be between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5103f2eebdc808c0d2141602839f11396f3cc0" translate="yes" xml:space="preserve">
          <source>Generate a signature based on the final HTTP method, URL and a string/array of parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2d049fb4082c4db164e2dc025eda5ab5c65835" translate="yes" xml:space="preserve">
          <source>Generate two seeds for the random number generator from a &lt;code&gt;phrase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67618d10bdac423c133ad51436d3be6badddd1ba" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; of pseudo-random bytes, with the number of bytes determined by the &lt;code&gt;length&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b3808553472f71b52bca685ad9990c39fdd551" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; of pseudo-random bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42b84f35bceb8355c1f4892e62fde743913208e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; which is the pathname for the current controlling terminal for the process. On error this will set errno, which can be checked using &lt;a href=&quot;function.posix-get-last-error&quot;&gt;posix_get_last_error()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24034096f13cf518f07338f1690ddf297aac8d49" translate="yes" xml:space="preserve">
          <source>Generates a Signature Base String according to pecl/oauth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadf8a9823293ea49f306e8eac9c34d12e16da89" translate="yes" xml:space="preserve">
          <source>Generates a URL-encoded query string from the associative (or indexed) array provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee4c5d711ead82b0f80009af0340387786fb469" translate="yes" xml:space="preserve">
          <source>Generates a random deviate from the F (variance ratio) distribution with &quot;dfn&quot; degrees of freedom in the numerator and &quot;dfd&quot; degrees of freedom in the denominator. Method : directly generates ratio of chisquare variates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b2d29a1547f681ae5f4c8981cf49adea48b929" translate="yes" xml:space="preserve">
          <source>Generates a random deviate from the gamma distribution whose density is (A**R)/Gamma(R) * X**(R-1) * Exp(-A*X).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c431193a690944ef42c772eba0d81ea433d251" translate="yes" xml:space="preserve">
          <source>Generates a signed public key and challenge using specified hashing algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a440ae3ad5bcc4b2ab56fe84df8cb09b8948af" translate="yes" xml:space="preserve">
          <source>Generates a storable representation of a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb814f2537e38b353f3cc27d6611476fbdef529" translate="yes" xml:space="preserve">
          <source>Generates a warning if called from outside of a user-defined function, or if &lt;code&gt;arg_num&lt;/code&gt; is greater than the number of arguments actually passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5236f6a90bb70de8d556680dc5085ba84d5ad4" translate="yes" xml:space="preserve">
          <source>Generates a warning if called from outside of a user-defined function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19becdb4b935cb9793b6f515a52c8aae798c8b12" translate="yes" xml:space="preserve">
          <source>Generates an SHA-256 message digest for the image pixel stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd4756fd9e80d0c206bffe90a71e42e99498242" translate="yes" xml:space="preserve">
          <source>Generates an arbitrary length string of cryptographic random bytes that are suitable for cryptographic use, such as when generating salts, keys or initialization vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a988ba1841f986a1e5e759a5bb4832fae56446" translate="yes" xml:space="preserve">
          <source>Generates and returns a new session ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e96992d79fd318e1c257f054d1fd1e081ebac8" translate="yes" xml:space="preserve">
          <source>Generates cryptographic random integers that are suitable for use where unbiased results are critical, such as when shuffling a deck of cards for a poker game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00662b7972d040d85901fdeedec5058204b3e6ad" translate="yes" xml:space="preserve">
          <source>Generates entropy by means of OpenSSL's &lt;em&gt;RAND_poll()&lt;/em&gt; (see the system manual).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3fc10d90844835fa9010d39ec82b9a88a722d6" translate="yes" xml:space="preserve">
          <source>Generates the cyclic redundancy checksum polynomial of 32-bit lengths of the &lt;code&gt;str&lt;/code&gt;. This is usually used to validate the integrity of data being transmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f360628c7148f7f180ebd0ac4c827ac4ad4fb44" translate="yes" xml:space="preserve">
          <source>Generator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b31a51b2d78676d18fa0331d129bf10475ac457" translate="yes" xml:space="preserve">
          <source>Generator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f004ff4c9e880e4124ca0e04934c265b31bc544" translate="yes" xml:space="preserve">
          <source>Generator delegation via &lt;strong&gt;yield from&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff522e62cc7ab14d49a9995e667d68c01e6cf566" translate="yes" xml:space="preserve">
          <source>Generator functions are able to yield values by reference as well as by value. This is done in the same way as &lt;a href=&quot;functions.returning-values&quot;&gt;returning references from functions&lt;/a&gt;: by prepending an ampersand to the function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281693cd589535a735980977c8b32305c1d4d014" translate="yes" xml:space="preserve">
          <source>Generator syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59f82ff46568780779e5cc1dcdbd00191e1c60e" translate="yes" xml:space="preserve">
          <source>Generator syntax &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7063eb4962b4aa5198c074131c3404747941d493" translate="yes" xml:space="preserve">
          <source>Generator::__construct</source>
          <target state="translated">Generator::__construct</target>
        </trans-unit>
        <trans-unit id="cd1b0562e1f8a7c27b0cf088ce23be3c6f78ffc9" translate="yes" xml:space="preserve">
          <source>Generator::__wakeup</source>
          <target state="translated">Generator::__wakeup</target>
        </trans-unit>
        <trans-unit id="35e3f54f514fdfba29fcaeef86be47518f7b5af7" translate="yes" xml:space="preserve">
          <source>Generator::__wakeup &amp;mdash; Serialize callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1771d23083d8582ce6ce4a34bdb5af83406dfa3" translate="yes" xml:space="preserve">
          <source>Generator::__wakeup &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d403afd128371aa486b3e608f0540a8cde4b95" translate="yes" xml:space="preserve">
          <source>Generator::current</source>
          <target state="translated">Generator::current</target>
        </trans-unit>
        <trans-unit id="ceee5af10b0f36e43752d4459aeaab9478e13bd9" translate="yes" xml:space="preserve">
          <source>Generator::current &amp;mdash; Get the yielded value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b807c6fe61188f50b16b438fdffa45f1385e473" translate="yes" xml:space="preserve">
          <source>Generator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304c7d667a562a00a74c4dfa776041e2775e1747" translate="yes" xml:space="preserve">
          <source>Generator::getExecutingFile</source>
          <target state="translated">Generator::getExecutingFile</target>
        </trans-unit>
        <trans-unit id="7e29d05c92277255d31e8d087ad3cf7ca14afa62" translate="yes" xml:space="preserve">
          <source>Generator::getExecutingGenerator</source>
          <target state="translated">Generator::getExecutingGenerator</target>
        </trans-unit>
        <trans-unit id="9a9367d14ca69ec8804e2be7b2d8f7ae8fba02e4" translate="yes" xml:space="preserve">
          <source>Generator::getExecutingLine</source>
          <target state="translated">Generator::getExecutingLine</target>
        </trans-unit>
        <trans-unit id="d8acc17096baee3d80d33142cf407543dbf436c3" translate="yes" xml:space="preserve">
          <source>Generator::getFunction</source>
          <target state="translated">Generator::getFunction</target>
        </trans-unit>
        <trans-unit id="789d85848b026d9ab387860a82a04e9d99a7e625" translate="yes" xml:space="preserve">
          <source>Generator::getReturn</source>
          <target state="translated">Generator::getReturn</target>
        </trans-unit>
        <trans-unit id="dc86dc25e8b41bbc5644bccc15ebe46239cba48f" translate="yes" xml:space="preserve">
          <source>Generator::getReturn &amp;mdash; Get the return value of a generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd8df8f9a4db2e346439174e156ee2bc07f8400" translate="yes" xml:space="preserve">
          <source>Generator::getReturn &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977e08578306b4d7564a15f06603cb95bb4f8e20" translate="yes" xml:space="preserve">
          <source>Generator::getThis</source>
          <target state="translated">Generator::getThis</target>
        </trans-unit>
        <trans-unit id="d60d79f4e1584156156c891e02dc1982f449064c" translate="yes" xml:space="preserve">
          <source>Generator::getTrace</source>
          <target state="translated">Generator::getTrace</target>
        </trans-unit>
        <trans-unit id="8b6b721960800548500796a8e6b057130d14c40d" translate="yes" xml:space="preserve">
          <source>Generator::key</source>
          <target state="translated">Generator::key</target>
        </trans-unit>
        <trans-unit id="266f0c5c19fb1954e6b8a827cd1cadf434ccfe51" translate="yes" xml:space="preserve">
          <source>Generator::key &amp;mdash; Get the yielded key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea51ecbe9d1d514800125f9e654f34e59ef80108" translate="yes" xml:space="preserve">
          <source>Generator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9904e7c109a01705efc21d51e803f3f3272833d7" translate="yes" xml:space="preserve">
          <source>Generator::next</source>
          <target state="translated">Generator::next</target>
        </trans-unit>
        <trans-unit id="e117e07a40a801baca9a366c58304ea65a6503b8" translate="yes" xml:space="preserve">
          <source>Generator::next &amp;mdash; Resume execution of the generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857316a74a34bfe1a8964f63f4b348283399a75e" translate="yes" xml:space="preserve">
          <source>Generator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40134d4235a09bc3b5854f104bfd4e27f18182de" translate="yes" xml:space="preserve">
          <source>Generator::rewind</source>
          <target state="translated">Generator::rewind</target>
        </trans-unit>
        <trans-unit id="6257b310bb0ebd0f8590d112ea3773ad2a1e3793" translate="yes" xml:space="preserve">
          <source>Generator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1ca0472d171df1da4f693a0f7d3f52f38b62c6" translate="yes" xml:space="preserve">
          <source>Generator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f22bdebf4d1c1e3250cb6110de97fb602ea0f3" translate="yes" xml:space="preserve">
          <source>Generator::send</source>
          <target state="translated">Generator::send</target>
        </trans-unit>
        <trans-unit id="199c5b167b8265f6051acaf400d33dc410393019" translate="yes" xml:space="preserve">
          <source>Generator::send &amp;mdash; Send a value to the generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6f22c077f5ad5b47e31ceb59a576e4d7c6b20a" translate="yes" xml:space="preserve">
          <source>Generator::send &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1981f21cf70b83acd6e6c21e82e78fcd1ef9e6" translate="yes" xml:space="preserve">
          <source>Generator::throw</source>
          <target state="translated">Generator::throw</target>
        </trans-unit>
        <trans-unit id="08cfc8413bef1a6ad963a3054f5bbbb68788e17e" translate="yes" xml:space="preserve">
          <source>Generator::throw &amp;mdash; Throw an exception into the generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c1cba7c4d79ca55c1770afa27d8a19fb267869" translate="yes" xml:space="preserve">
          <source>Generator::throw &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc805e0a85b3a52e4873bd3468dc18a174d94ee" translate="yes" xml:space="preserve">
          <source>Generator::valid</source>
          <target state="translated">Generator::valid</target>
        </trans-unit>
        <trans-unit id="4f8a6f08bb76f04d3bdc35a52a9f961fb7137cf6" translate="yes" xml:space="preserve">
          <source>Generator::valid &amp;mdash; Check if the iterator has been closed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd93cef79c88ffff2af3c2159cf41191a69f7f4" translate="yes" xml:space="preserve">
          <source>Generator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1ecdc7fb865fd235df6c8e11896fbba8618f66" translate="yes" xml:space="preserve">
          <source>Generators &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c039223e0b4f481deb916962044f578ed8a188c" translate="yes" xml:space="preserve">
          <source>Generators overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f639d607fcc88a933bb1f238af02d7cffa32b766" translate="yes" xml:space="preserve">
          <source>Generators provide an easy way to implement simple &lt;a href=&quot;language.oop5.iterations&quot;&gt;iterators&lt;/a&gt; without the overhead or complexity of implementing a class that implements the &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f60cf89dfde84a5f2958ca37a86d8ca85c76bf" translate="yes" xml:space="preserve">
          <source>GenericResponse (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bf860ebadc6bcce72f30d24065a452088e894d" translate="yes" xml:space="preserve">
          <source>GenericResponse::__construct</source>
          <target state="translated">GenericResponse::__construct</target>
        </trans-unit>
        <trans-unit id="34f657f2607f263f2a1dea18ec4228991d6cb8ae" translate="yes" xml:space="preserve">
          <source>GenericResponse::__destruct</source>
          <target state="translated">GenericResponse::__destruct</target>
        </trans-unit>
        <trans-unit id="0276760b8687a7785212ee4dd8ba5828baba7562" translate="yes" xml:space="preserve">
          <source>Genetic user level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197389b4d1e7bba673cc1ab6dc8e5ec0dd368f1d" translate="yes" xml:space="preserve">
          <source>Get Document By Id. Utilizes Solr Realtime Get (RTG).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bc9ce94acdc2e4117c2b0676583b41fb439d01" translate="yes" xml:space="preserve">
          <source>Get Documents by their Ids. Utilizes Solr Realtime Get (RTG).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce547b61f0129de2b1cc60ef0def8bcfcd001aa" translate="yes" xml:space="preserve">
          <source>Get HTTP information about the last response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4351d5d2127adad4cceedaff5c62d2440136fa5c" translate="yes" xml:space="preserve">
          <source>Get a Doc comment from a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263330fa0309a0cc8f77d96e30db89d58ea95a98" translate="yes" xml:space="preserve">
          <source>Get a MIME charset &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; for a specific encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480f249447825aa507857d5b639a6f32a7f682ee" translate="yes" xml:space="preserve">
          <source>Get a copy of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4ac4bee0c171f610900f6909ded86dc74ede15" translate="yes" xml:space="preserve">
          <source>Get a file handler to the entry defined by its name. For now it only supports read operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f9564c58fb85a0689edb10211b89c41f5ba427" translate="yes" xml:space="preserve">
          <source>Get a list of loaded Apache modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e146a53d15ac7343289b6d54b79b0cbe328080" translate="yes" xml:space="preserve">
          <source>Get a numeric attribute associated with the formatter. An example of a numeric attribute is the number of integer digits the formatter will produce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44493fab9501e02f2c21cdd245ae6bbf8f76c8f" translate="yes" xml:space="preserve">
          <source>Get a symbol associated with the formatter. The formatter uses symbols to represent the special locale-dependent characters in a number, for example the percent sign. This API is not supported for rule-based formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277461152ec16470e780840de733d53db4280e0f" translate="yes" xml:space="preserve">
          <source>Get a text attribute associated with the formatter. An example of a text attribute is the suffix for positive numbers. If the formatter does not understand the attribute, &lt;strong&gt;&lt;code&gt;U_UNSUPPORTED_ERROR&lt;/code&gt;&lt;/strong&gt; error is produced. Rule-based formatters only understand &lt;strong&gt;&lt;code&gt;NumberFormatter::DEFAULT_RULESET&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;NumberFormatter::PUBLIC_RULESETS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b046e8f9d39fe98f308250f027fa05aa6f6dd7" translate="yes" xml:space="preserve">
          <source>Get a value of an integer collator attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559efbf3605f179bae8b1eb44b5fe2acb407ed45" translate="yes" xml:space="preserve">
          <source>Get all registered __autoload() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f2ba5d14effdb8f275ac373f36104d59abb5f5" translate="yes" xml:space="preserve">
          <source>Get an ImagickPixelIterator for an image section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8122ebd4e5491dd3f73dcbd4d396bded4fd644" translate="yes" xml:space="preserve">
          <source>Get available locales from ResourceBundle name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c81f2305261440abbec67d670caf373b1beaf6f" translate="yes" xml:space="preserve">
          <source>Get children of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c4bca7226af3ed5d29ff3fb9cdcfe879e678ba" translate="yes" xml:space="preserve">
          <source>Get collector locale name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4363d78f10d60edf197babd54e162badb654d6c0" translate="yes" xml:space="preserve">
          <source>Get defined constants from an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6615f2c88a86f59d97ba1178d26bf4d59b00f0c1" translate="yes" xml:space="preserve">
          <source>Get defined functions from an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c121a3effcc1d3bc63e90493161c4cf2efc3e9f" translate="yes" xml:space="preserve">
          <source>Get error code from the last function performed by the bundle object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767ac29f60ec09847344953cd4f5e7060357aea6" translate="yes" xml:space="preserve">
          <source>Get error code from the last function performed by the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bce4f89f4b24c0581723bfa1b9a5bb8e63d2df5" translate="yes" xml:space="preserve">
          <source>Get error message from last internationalization function called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b1413ee317759499d0f56899e9f6934c6185e5" translate="yes" xml:space="preserve">
          <source>Get error message from the last function performed by the bundle object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3b0bc4f1e7c33611bd1b10d8abd4b41def395a" translate="yes" xml:space="preserve">
          <source>Get error message from the last function performed by the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c2f7c4d88ada76d61f838edb1b1d47daf0b839" translate="yes" xml:space="preserve">
          <source>Get file information of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24510d939741dca65404a407e486359d36037b8" translate="yes" xml:space="preserve">
          <source>Get formatter locale name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a847e058875192fd7c96aae4e87b590ad537db" translate="yes" xml:space="preserve">
          <source>Get headers for last response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5562fe6e23c47ce8c717a7e1cadd4a07ab36decf" translate="yes" xml:space="preserve">
          <source>Get line number where the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045cac025409bf2489d4804c1fb58e191522ce2b" translate="yes" xml:space="preserve">
          <source>Get line number where the exception was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e888c2ffb480a3d02b0cfbed60315b224452b262" translate="yes" xml:space="preserve">
          <source>Get locale used by the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce0df059346ffd4e2475c4cb7fad7f71ce768ba" translate="yes" xml:space="preserve">
          <source>Get methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d5c2e3126621d86c547d79b551e32d493216cc" translate="yes" xml:space="preserve">
          <source>Get pattern used by the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbf12426abafedf09d37e735ebd414e5ba90600" translate="yes" xml:space="preserve">
          <source>Get result data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e2321778f2b41a4fe5ae384f633b04f2358a9e" translate="yes" xml:space="preserve">
          <source>Get result from async query. Available only with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b111acd81b3b362bf44653f1e2b46ad894b6e3e2" translate="yes" xml:space="preserve">
          <source>Get statistics about a table and its indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79867cb46f323fbb430930243acb2a03fe9aad05" translate="yes" xml:space="preserve">
          <source>Get string length in grapheme units (not bytes or characters)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfa5c4845ca54b33d08777604b4eb05cdf13577" translate="yes" xml:space="preserve">
          <source>Get the 2d matrix of values used in this kernel. The elements are either float for elements that are used or 'false' if the element should be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb3845b41d43b937196398d70924f04a29c172c" translate="yes" xml:space="preserve">
          <source>Get the &lt;em&gt;$this&lt;/em&gt; value that the generator has access to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f366e67e23eff70ffe77a5b27a97247a20253e6" translate="yes" xml:space="preserve">
          <source>Get the StringRegistry entry for the named key or false if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f99d4d604349f709b34cd822996262ae2e0e1c" translate="yes" xml:space="preserve">
          <source>Get the absolute value of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3704e7bf54a6608881a2a489a46e14be8a39c95" translate="yes" xml:space="preserve">
          <source>Get the amount of memory used by the realpath cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702f5477f707628ef595ad9f05584bbedfea78e4" translate="yes" xml:space="preserve">
          <source>Get the application context previously set with &lt;a href=&quot;gearmanclient.setcontext&quot;&gt;GearmanClient::setContext()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ca912a1c6789198dc0fbe6eaddf0a9b3347eeb" translate="yes" xml:space="preserve">
          <source>Get the application data previously set with &lt;a href=&quot;gearmanclient.setdata&quot;&gt;GearmanClient::setData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fde51c29ae45b21927ad302087547b890e71ab" translate="yes" xml:space="preserve">
          <source>Get the base name of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dc6d4c8b835677cfc7e6ae2ff90e62c3c463e3" translate="yes" xml:space="preserve">
          <source>Get the bitmask of the flags used for this CachingIterator instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0bd3e1bce226b1163de7631ab71319e21c8ec7" translate="yes" xml:space="preserve">
          <source>Get the contents of the realpath cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf1a41978daa9d3e2e388c842668344612767e8" translate="yes" xml:space="preserve">
          <source>Get the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead0c2c4d38ec039d55155a6f0e193a639581880" translate="yes" xml:space="preserve">
          <source>Get the current &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da34b53d8d2c96cab4e0dcc232ac87e36dc1c033" translate="yes" xml:space="preserve">
          <source>Get the current array element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409388c35f1023ca4fed0b4f3b8755746638c060" translate="yes" xml:space="preserve">
          <source>Get the current datastructure node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e94989f4e5cf26d3816df1ea8e0f94304d699b" translate="yes" xml:space="preserve">
          <source>Get the current doubly linked list node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba786d43ae1a8e650a631016c11c95a10442694" translate="yes" xml:space="preserve">
          <source>Get the current element value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b32c6403aafe31ea0a3447044695dcb8b1c6a1" translate="yes" xml:space="preserve">
          <source>Get the current key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030165d3ee69899021a63addfb908be81d325464" translate="yes" xml:space="preserve">
          <source>Get the currently executing line number of the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2071e419de524831f09eeb642e2a2d9ac00a167" translate="yes" xml:space="preserve">
          <source>Get the data from the bundle by index or string key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ff2de7e4be5ee447b352bbb77ce1e8278a1dcb" translate="yes" xml:space="preserve">
          <source>Get the default properties of the given class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dd2ab62fc9b0d3a56c1efb9e0b13604c72d578" translate="yes" xml:space="preserve">
          <source>Get the ending line number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd347b4b5db135c60d5a9760cce05b20301f9bd" translate="yes" xml:space="preserve">
          <source>Get the error code from last operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467c0c95e439236cbd32490721c9e149f28ec215" translate="yes" xml:space="preserve">
          <source>Get the error code from last operation. Returns error code from the last number formatting operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a6a8d5d35e3736ce3ea7a008e562537f30b89c" translate="yes" xml:space="preserve">
          <source>Get the error text from the last operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7e21b73fa873d32b180c32d65de51894a16d7c" translate="yes" xml:space="preserve">
          <source>Get the exception original type threw by server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdce257ef59ad9839926f8a6640e037ad80eb1f" translate="yes" xml:space="preserve">
          <source>Get the executing &lt;a href=&quot;class.generator&quot;&gt;Generator&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8bb4e072d7ba813c49e82887cb9221f3a10f26" translate="yes" xml:space="preserve">
          <source>Get the extension information of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c173b89dcc3d9b53026a30bbd3d1198354247e" translate="yes" xml:space="preserve">
          <source>Get the extensions name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dac69eedea03946def114c95e2d112d922eace" translate="yes" xml:space="preserve">
          <source>Get the file name of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7369438512a1c66675ffaa241b8ff693106cdd3d" translate="yes" xml:space="preserve">
          <source>Get the file size for the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286124dc699d8c2bda96326790e8b9ad3d8675c6" translate="yes" xml:space="preserve">
          <source>Get the first key of the given &lt;code&gt;array&lt;/code&gt; without affecting the internal array pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d52c34bec78d5c212546a8de78842fd0107345b" translate="yes" xml:space="preserve">
          <source>Get the full path and file name of the currently executing generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e8429a2849862b5630143c198689b0d58d956f" translate="yes" xml:space="preserve">
          <source>Get the group id of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b2234279417c9a5dbcedb6f1fc1917bc47b8c2" translate="yes" xml:space="preserve">
          <source>Get the identifier of the codepage of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13caeef0d83f44683fa130072aff261a12e16e95" translate="yes" xml:space="preserve">
          <source>Get the index of the color which has the hue, white and blackness nearest the given color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcccfa3b54aee2ec7cd0446f63f81c72b015645" translate="yes" xml:space="preserve">
          <source>Get the ini entries for an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ee38c86c49d28b64c6c13e7972dfc9344f21f1" translate="yes" xml:space="preserve">
          <source>Get the inner iterator's children contained in a ParentIterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bc9ec444f3f32e8b59788771a4957026d325f6" translate="yes" xml:space="preserve">
          <source>Get the inner iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89076d7d1ab1e6285963c91392ce0e3f9cd0ba5" translate="yes" xml:space="preserve">
          <source>Get the inode change time for the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6344cb6305b4370191f5028f4a86b5d0b2ebf0e5" translate="yes" xml:space="preserve">
          <source>Get the inode number for the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7487a7eda22cb3b680f26b01587d62ac9df1e666" translate="yes" xml:space="preserve">
          <source>Get the interface names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2581b687325deba8c5e71fe9bbc779b51666c77d" translate="yes" xml:space="preserve">
          <source>Get the key for the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40fbd438ca38ff397699b07431c3e70e6733986" translate="yes" xml:space="preserve">
          <source>Get the key of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c18bd0bef98111267749bb971f1e140c1340cea" translate="yes" xml:space="preserve">
          <source>Get the kurtosis and skewness of a specific channel. This method is available if Imagick has been compiled against ImageMagick version 6.4.9 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8c2ff204e9bad9f6557e3d3a752d22b21b206d" translate="yes" xml:space="preserve">
          <source>Get the last access time of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c07bbacc861c4602e4fdae9451c3846afbb4dfa" translate="yes" xml:space="preserve">
          <source>Get the last key of the given &lt;code&gt;array&lt;/code&gt; without affecting the internal array pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8d51646fa4a1e1295801983191393fea755c1c" translate="yes" xml:space="preserve">
          <source>Get the last modification time of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item, as a Unix timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11dd5c2de2d5df8da7e8a04c9ebea42d8203f761" translate="yes" xml:space="preserve">
          <source>Get the locale for which the formatter was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a973ad030bc27656a4a90b93b291097c9b0add" translate="yes" xml:space="preserve">
          <source>Get the modules list defined in config, if no one defined, there will always be a module named &quot;Index&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d12014b022a425c2f092512166e4904d1f59c1" translate="yes" xml:space="preserve">
          <source>Get the name of the file in which the exception was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e842168c7c0df97c2c31199b50af5e24b89e8d" translate="yes" xml:space="preserve">
          <source>Get the name of the file the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee984bbd7e15b3210b29c79f6024ef5052573f42" translate="yes" xml:space="preserve">
          <source>Get the name of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7638527876456be186ab5455a7c0ac015be521" translate="yes" xml:space="preserve">
          <source>Get the name of the route which is effective in the route process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5415532acccd8bfb01bcb60fb42c95485120b19" translate="yes" xml:space="preserve">
          <source>Get the namespace name where the class is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b274777566aa95f0f0e59a4535526b648ddc7528" translate="yes" xml:space="preserve">
          <source>Get the number of elements in the bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab83fe81730f447b288b6fe627a7cbdb8fd658" translate="yes" xml:space="preserve">
          <source>Get the number of errors and optional the error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d892e62bb1f71578ed57cc6d32b089423b8f7f57" translate="yes" xml:space="preserve">
          <source>Get the number of fields in a result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36c7825d3433ddeea4da9d7dd2239e0789ac4e6" translate="yes" xml:space="preserve">
          <source>Get the number of parameters that a function defines, both optional and required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7029357cd762f4d00a156e1405b73a56daebd6b" translate="yes" xml:space="preserve">
          <source>Get the number of public properties in the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3adf117501c2418175710f3cc04021aa9169cb" translate="yes" xml:space="preserve">
          <source>Get the number of required parameters that a function defines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260a8fba8943cf4baffa01a1c9ff3cb717d6dfeb" translate="yes" xml:space="preserve">
          <source>Get the owner of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item, in numerical format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7443d65902fc510d01a54e871187cb4477f88c8" translate="yes" xml:space="preserve">
          <source>Get the parameters as an array of &lt;a href=&quot;class.reflectionparameter&quot;&gt;ReflectionParameter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8940b830c1bd02899364e6bbc55d5c4836a708" translate="yes" xml:space="preserve">
          <source>Get the path and file name of the current file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c34c47d9c958cce17d92e48fc37c7d5e934981" translate="yes" xml:space="preserve">
          <source>Get the path to the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8eae4449e2fe8cba45f8fde7d04624d8e69480" translate="yes" xml:space="preserve">
          <source>Get the pattern used by the formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1527927f1081fdbb175d264bcf63a822ac38aff6" translate="yes" xml:space="preserve">
          <source>Get the permissions of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac52ace656b0b526595a5f1b5c717980d5cf7dd" translate="yes" xml:space="preserve">
          <source>Get the population count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87139e26493455896d77b3462f0fcc1d33cd57f" translate="yes" xml:space="preserve">
          <source>Get the raw response of the most recent request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe2d7b83869e8988ab5c9ad16a5a0f375918548" translate="yes" xml:space="preserve">
          <source>Get the registered iterator instances current() result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fc7e62b5a36a8f88fd1f050cbe00af71396692" translate="yes" xml:space="preserve">
          <source>Get the registered iterator instances key() result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959e957755c39a4b18675333f7201bb69cf69639" translate="yes" xml:space="preserve">
          <source>Get the remainder of dividing &lt;code&gt;dividend&lt;/code&gt; by &lt;code&gt;divisor&lt;/code&gt;. Unless &lt;code&gt;divisor&lt;/code&gt; is zero, the result has the same sign as &lt;code&gt;dividend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b232abe06a1c04ca72aeb7bccf5095ff5b201c" translate="yes" xml:space="preserve">
          <source>Get the short name of the function (without the namespace part).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d71cfd136fc0452efbc320105275bc3f6b98bd" translate="yes" xml:space="preserve">
          <source>Get the size in pixels associated with the Imagick object, previously set by &lt;a href=&quot;imagick.setsize&quot;&gt;Imagick::setSize()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afacb8eb71b8d3badb972c01b10784e7312aa4a8" translate="yes" xml:space="preserve">
          <source>Get the starting line number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19124e79790bc181c58b56f63105cd8d8513a87" translate="yes" xml:space="preserve">
          <source>Get the static properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f9da94150b33621032b8f619ee241ad25c08ce" translate="yes" xml:space="preserve">
          <source>Get the static variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef7690eb6b5517738bd19455b7d36a571aa700" translate="yes" xml:space="preserve">
          <source>Get the string representation of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbddf7042ff78a2b7a789e3f1251f7bdba37889f" translate="yes" xml:space="preserve">
          <source>Get the string value of a variable. See the documentation on &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; for more information on converting to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af30f74a54bb529aad705cf1fdd654da080fbcd8" translate="yes" xml:space="preserve">
          <source>Get the timezone-id used for the IntlDateFormatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b50fb743c0109f0a65a6ebabeccd0c6b5ef4895" translate="yes" xml:space="preserve">
          <source>Get the total count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0211f0387bc443066f3636c119bb3b773d943175" translate="yes" xml:space="preserve">
          <source>Get the trace of the currently executing generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954b14b7154f54f4a95c5f3fb029a58bfd57d03b" translate="yes" xml:space="preserve">
          <source>Get the value of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5b623a996d14362979243d7be4313028003ee9" translate="yes" xml:space="preserve">
          <source>Gets a (uncompressed) string of up to length - 1 bytes read from the given file pointer. Reading ends when length - 1 bytes have been read, on a newline, or on EOF (whichever comes first).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b526b741cc6ccdb1a46ef0be925cf4ae5460cb06" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; representing the interval used for the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b23ff1c5edab81d1f6cf8dce9f90d621d892038" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;class.reflectionclassconstant&quot;&gt;ReflectionClassConstant&lt;/a&gt; for a class's property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510cbde651696adf02ad460384dc9897faa5a308" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;class.reflectionextension&quot;&gt;ReflectionExtension&lt;/a&gt; object for the extension which defined the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6e097671c30902b6995e7a35be8b74cd25b42a" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;class.reflectionmethod&quot;&gt;ReflectionMethod&lt;/a&gt; for a class method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d319425c43e22e5886478cd994e22bbde6adb6" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;class.reflectionproperty&quot;&gt;ReflectionProperty&lt;/a&gt; for a class's property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfb4617ff911ad69230a6d909d720aa0cfe9cd2" translate="yes" xml:space="preserve">
          <source>Gets a character from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321a1f45c40c6907c272089ca21dd5f7e56cde14" translate="yes" xml:space="preserve">
          <source>Gets a character from the given file pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e962dbd3e4e550510c2254f269924e7ea1b021" translate="yes" xml:space="preserve">
          <source>Gets a line from file pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c031a5a7a98d4a1e7fd1a11012064a8ebbba2d81" translate="yes" xml:space="preserve">
          <source>Gets a line from the file which is in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e19ca45a15db2210a7845a8eab774a372107385" translate="yes" xml:space="preserve">
          <source>Gets a line from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec5e7e716bdc3ccbe6a077f550a539c0b8703c1" translate="yes" xml:space="preserve">
          <source>Gets a line from the given handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ea16ed1eac3a120d183685b396978c72d53f4" translate="yes" xml:space="preserve">
          <source>Gets a list of available cipher methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a604169fcf8e67fec9f45445088ff9ec1e1a641" translate="yes" xml:space="preserve">
          <source>Gets a list of available digest methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d825978e6ff4b0e42fe515a07f7d0113f2f72e17" translate="yes" xml:space="preserve">
          <source>Gets a list of classes from an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6ce5e8c66f57b43ac82cc31c7f614ff127d1d3" translate="yes" xml:space="preserve">
          <source>Gets a listing of class names as defined in the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017ac59b93fc0b4884019c1eb7e7d819d110b8b1" translate="yes" xml:space="preserve">
          <source>Gets a parameter if previously set by &lt;a href=&quot;xsltprocessor.setparameter&quot;&gt;XSLTProcessor::setParameter()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfd59d733a9feedab32d7d6e1ea3bc9c6685702" translate="yes" xml:space="preserve">
          <source>Gets a prefixed unique identifier based on the current time in microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fda2fad6bdf102350a97dd921dd70b504a02879" translate="yes" xml:space="preserve">
          <source>Gets a string with the repaired html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b72a3dbf84e448fe84012f49a6a892b0acfd1a" translate="yes" xml:space="preserve">
          <source>Gets a tree of a threaded message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c526b90dcafa31b8de732665196b68e5ad6655b" translate="yes" xml:space="preserve">
          <source>Gets all defined constants from a class, regardless of their visibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2090562988e04d0c2d705120c5ac8192d57b7be" translate="yes" xml:space="preserve">
          <source>Gets all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fac0dda5351389a8d27fb3f4d7556ec02b2cafb" translate="yes" xml:space="preserve">
          <source>Gets an &lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; object for the parent of the current file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e058350a5462fb854c8d7f5f58c758ccfc2efd" translate="yes" xml:space="preserve">
          <source>Gets an XPath location path for the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdc60a2cfa39d7f7a78f508adc89ec47e73bffe" translate="yes" xml:space="preserve">
          <source>Gets an array of all defined functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eeed3a63bb0003e59244ec2cfd7cf5a82968647" translate="yes" xml:space="preserve">
          <source>Gets an array of all the mailboxes that you have subscribed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af62a5cd92812f320ab1eaf3175fd9c27096db3" translate="yes" xml:space="preserve">
          <source>Gets an array of methods for the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6363755f2a37f56a26bd2ab971422df712756227" translate="yes" xml:space="preserve">
          <source>Gets an array of the function's argument list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a509905beb7c87489b87b0a535f5c2f6282d1ea" translate="yes" xml:space="preserve">
          <source>Gets an artifact associated with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68d53ded9ce3938f3cbe3dc662097c73bfa5125" translate="yes" xml:space="preserve">
          <source>Gets an attribute of the statement. Currently, no generic attributes exist but only driver specific:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca3884ae3544bdfc642e2a08608d21f65ccc1e6" translate="yes" xml:space="preserve">
          <source>Gets an object of various header elements, similar to &lt;a href=&quot;function.imap-header&quot;&gt;imap_header()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6df1ece87aa083702ebcd929dbbe3c71caeda22" translate="yes" xml:space="preserve">
          <source>Gets an option value from an XML parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465548bbdead4454dee03079088e5ee5fac21390" translate="yes" xml:space="preserve">
          <source>Gets and sorts message numbers by the given parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0586533d487b2967d9603225194819b5d4ef60" translate="yes" xml:space="preserve">
          <source>Gets children of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbe685f39f8891b6df2e7fcacc5e2008dc7473e" translate="yes" xml:space="preserve">
          <source>Gets default properties from a class (including inherited properties).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1c186e871d6fb637378ae20e7d1397ef9fc939" translate="yes" xml:space="preserve">
          <source>Gets dependencies, by listing both required and conflicting dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f9c80ded7257a66984fc3bff0b7b347b8796cb" translate="yes" xml:space="preserve">
          <source>Gets doc comments from a class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd321794932aad6a9b1519855f34caa2e8c6a56" translate="yes" xml:space="preserve">
          <source>Gets doc comments from a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3412eefef53d09a58c4ff18c66db16321b0cb3" translate="yes" xml:space="preserve">
          <source>Gets end line number from a user-defined class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60629f16c81326596dca2a5d2d9bbba668babf09" translate="yes" xml:space="preserve">
          <source>Gets field data from the currently selected row. Fields must be accessed in order. Field indices start at 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b08a5b22d105d0dd3bc69b3194435c847d23ef" translate="yes" xml:space="preserve">
          <source>Gets information about a group provided its id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ef1381c3c7d7a55deb902ee9d828dd540ca4d" translate="yes" xml:space="preserve">
          <source>Gets information about a group provided its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88332f8dae73ed98624a65070248b1ea98606769" translate="yes" xml:space="preserve">
          <source>Gets information about a link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55037d7b79ef5de5b65aafd160b995c3cd0f3142" translate="yes" xml:space="preserve">
          <source>Gets information about the current CPU usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe4030c3070096e01aed982fe180e828d225a0f" translate="yes" xml:space="preserve">
          <source>Gets information about the flags.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
