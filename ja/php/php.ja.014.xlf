<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="f9af13aee4cb41df15a62d6c8768055c296a4495" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.haschildren&quot;&gt;SplFileObject::hasChildren&lt;/a&gt; &amp;mdash; SplFileObject does not have children</source>
          <target state="translated">&lt;a href=&quot;splfileobject.haschildren&quot;&gt;SplFileObject :: hasChildren&lt;/a&gt; &amp;mdash; SplFileObjectには子がありません</target>
        </trans-unit>
        <trans-unit id="f70bd0ddfb9f7f0b7607c5fbeb8b2da49277110f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.key&quot;&gt;SplFileObject::key()&lt;/a&gt; - Get line number</source>
          <target state="translated">&lt;a href=&quot;splfileobject.key&quot;&gt;SplFileObject :: key（）&lt;/a&gt; -行番号を取得する</target>
        </trans-unit>
        <trans-unit id="5dae9b98daa27aa2b51726b19e3555224136032e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.key&quot;&gt;SplFileObject::key&lt;/a&gt; &amp;mdash; Get line number</source>
          <target state="translated">&lt;a href=&quot;splfileobject.key&quot;&gt;SplFileObject :: key&lt;/a&gt; &amp;mdash;行番号を取得する</target>
        </trans-unit>
        <trans-unit id="d38e9befe3e570fdc0c5141cf550d7c7c4d7f9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.next&quot;&gt;SplFileObject::next()&lt;/a&gt; - Read next line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.next&quot;&gt;SplFileObject :: next（）&lt;/a&gt; -次の行を読み取る</target>
        </trans-unit>
        <trans-unit id="76ce979feccb9a4ab1ad6b896cd8034fb0e06429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.next&quot;&gt;SplFileObject::next&lt;/a&gt; &amp;mdash; Read next line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.next&quot;&gt;SplFileObject :: next&lt;/a&gt; &amp;mdash;次の行を読み取る</target>
        </trans-unit>
        <trans-unit id="84bfd36cbd679e9f3f088be353e037abd1cc838c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.rewind&quot;&gt;SplFileObject::rewind()&lt;/a&gt; - Rewind the file to the first line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.rewind&quot;&gt;SplFileObject :: rewind（）&lt;/a&gt; -ファイルを最初の行に巻き戻す</target>
        </trans-unit>
        <trans-unit id="cf326005665c3a6d5fac7180564bfebe08abb5db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.rewind&quot;&gt;SplFileObject::rewind&lt;/a&gt; &amp;mdash; Rewind the file to the first line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.rewind&quot;&gt;SplFileObject :: rewind&lt;/a&gt; &amp;mdash;ファイルを最初の行に巻き戻す</target>
        </trans-unit>
        <trans-unit id="ce1babb6782d654ac69143dd9cba4924d41a818d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.seek&quot;&gt;SplFileObject::seek()&lt;/a&gt; - Seek to specified line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.seek&quot;&gt;SplFileObject :: seek（）&lt;/a&gt; -指定した行に移動する</target>
        </trans-unit>
        <trans-unit id="bc7e7f7633a91bf15b6fb3d46a1d59dda8636f42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.seek&quot;&gt;SplFileObject::seek&lt;/a&gt; &amp;mdash; Seek to specified line</source>
          <target state="translated">&lt;a href=&quot;splfileobject.seek&quot;&gt;SplFileObject :: seek&lt;/a&gt; &amp;mdash;指定した行に移動する</target>
        </trans-unit>
        <trans-unit id="f29db2a29f6bfa59010c8e6788b32d80c46f5ced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject::setCsvControl()&lt;/a&gt; - Set the delimiter, enclosure and escape character for CSV</source>
          <target state="translated">&lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject :: setCsvControl（）&lt;/a&gt; -CSVの区切り文字、囲み文字、エスケープ文字を設定する</target>
        </trans-unit>
        <trans-unit id="b4a08a15086a0818971a7b7daeb643dbb404b1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject::setCsvControl&lt;/a&gt; &amp;mdash; Set the delimiter, enclosure and escape character for CSV</source>
          <target state="translated">&lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject :: setCsvControl&lt;/a&gt; &amp;mdash; CSVの区切り文字、囲み文字、エスケープ文字を設定する</target>
        </trans-unit>
        <trans-unit id="4249990642c495432b0e428a878170f8a5d48ead" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.setflags&quot;&gt;SplFileObject::setFlags()&lt;/a&gt; - Sets flags for the SplFileObject</source>
          <target state="translated">&lt;a href=&quot;splfileobject.setflags&quot;&gt;SplFileObject :: setFlags（）&lt;/a&gt; -SplFileObjectのフラグを設定する</target>
        </trans-unit>
        <trans-unit id="e9f9b41cb0bb091d294848cd77655b1cbcaa764c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.setflags&quot;&gt;SplFileObject::setFlags&lt;/a&gt; &amp;mdash; Sets flags for the SplFileObject</source>
          <target state="translated">&lt;a href=&quot;splfileobject.setflags&quot;&gt;SplFileObject :: setFlags&lt;/a&gt; &amp;mdash; SplFileObjectのフラグを設定する</target>
        </trans-unit>
        <trans-unit id="b70e3062188bc110cef45f0ce8b7ba619c162b51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.setmaxlinelen&quot;&gt;SplFileObject::setMaxLineLen&lt;/a&gt; &amp;mdash; Set maximum line length</source>
          <target state="translated">&lt;a href=&quot;splfileobject.setmaxlinelen&quot;&gt;SplFileObject :: setMaxLineLen&lt;/a&gt; &amp;mdash;行の最大長を設定する</target>
        </trans-unit>
        <trans-unit id="2147b8dd315a9932609a557e91535ef97de22343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.tostring&quot;&gt;SplFileObject::__toString&lt;/a&gt; &amp;mdash; Alias of SplFileObject::current</source>
          <target state="translated">&lt;a href=&quot;splfileobject.tostring&quot;&gt;SplFileObject :: __ toString&lt;/a&gt; &amp;mdash; SplFileObject :: currentのエイリアス</target>
        </trans-unit>
        <trans-unit id="4ff55b8b8510f12dad64d79e447b8157c18651b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.valid&quot;&gt;SplFileObject::valid()&lt;/a&gt; - Not at EOF</source>
          <target state="translated">&lt;a href=&quot;splfileobject.valid&quot;&gt;SplFileObject :: valid（）&lt;/a&gt; -EOFではない</target>
        </trans-unit>
        <trans-unit id="e1e1bda1e4c144194d04c94d22148b589b0a537c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfileobject.valid&quot;&gt;SplFileObject::valid&lt;/a&gt; &amp;mdash; Not at EOF</source>
          <target state="translated">&lt;a href=&quot;splfileobject.valid&quot;&gt;SplFileObject :: valid&lt;/a&gt; &amp;mdash; EOFではない</target>
        </trans-unit>
        <trans-unit id="46cad05923f80347dd2a7dc8c06ba07d116cb66a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.construct&quot;&gt;SplFixedArray::__construct&lt;/a&gt; &amp;mdash; Constructs a new fixed array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.construct&quot;&gt;SplFixedArray :: __ construct&lt;/a&gt; &amp;mdash;新しい固定配列を構築する</target>
        </trans-unit>
        <trans-unit id="37d629283e47df7ce7d6906a2a367d5e82b28b51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.count&quot;&gt;SplFixedArray::count()&lt;/a&gt; - Returns the size of the array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.count&quot;&gt;SplFixedArray :: count（）&lt;/a&gt; -配列のサイズを返す</target>
        </trans-unit>
        <trans-unit id="bc7cd0e67e36d1e8e43c62f2f6e7dd8f264f1eb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.count&quot;&gt;SplFixedArray::count&lt;/a&gt; &amp;mdash; Returns the size of the array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.count&quot;&gt;SplFixedArray :: count&lt;/a&gt; &amp;mdash;配列のサイズを返す</target>
        </trans-unit>
        <trans-unit id="6fa199243d087b580194b38c9cb5a3cbba195de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.current&quot;&gt;SplFixedArray::current&lt;/a&gt; &amp;mdash; Return current array entry</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.current&quot;&gt;SplFixedArray :: current&lt;/a&gt; &amp;mdash;現在の配列エントリを返す</target>
        </trans-unit>
        <trans-unit id="8f33c27f45493b3057ce48e5acdf08a6bee0484d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.fromarray&quot;&gt;SplFixedArray::fromArray&lt;/a&gt; &amp;mdash; Import a PHP array in a SplFixedArray instance</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.fromarray&quot;&gt;SplFixedArray :: fromArray&lt;/a&gt; &amp;mdash; SplFixedArrayインスタンスにPHP配列をインポートする</target>
        </trans-unit>
        <trans-unit id="36701708a0a387c7c7a8875d4fbadced11e1d161" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.getsize&quot;&gt;SplFixedArray::getSize()&lt;/a&gt; - Gets the size of the array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.getsize&quot;&gt;SplFixedArray :: getSize（）&lt;/a&gt; -配列のサイズを取得する</target>
        </trans-unit>
        <trans-unit id="d3af043bd3da16405e2eeb8e81dc70115a5ce0c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.getsize&quot;&gt;SplFixedArray::getSize&lt;/a&gt; &amp;mdash; Gets the size of the array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.getsize&quot;&gt;SplFixedArray :: getSize&lt;/a&gt; &amp;mdash;配列のサイズを取得する</target>
        </trans-unit>
        <trans-unit id="a1509a21ae0f3d08658e6493a2e1150cb21a0695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.key&quot;&gt;SplFixedArray::key&lt;/a&gt; &amp;mdash; Return current array index</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.key&quot;&gt;SplFixedArray :: key&lt;/a&gt; &amp;mdash;現在の配列インデックスを返す</target>
        </trans-unit>
        <trans-unit id="a4d92339284c4f38d91772312873019e7ae2d831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.next&quot;&gt;SplFixedArray::next&lt;/a&gt; &amp;mdash; Move to next entry</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.next&quot;&gt;SplFixedArray :: next&lt;/a&gt; &amp;mdash;次のエントリに移動する</target>
        </trans-unit>
        <trans-unit id="a312a9d3cb5088e24ce97c1c75bbe54877fe342c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.offsetexists&quot;&gt;SplFixedArray::offsetExists&lt;/a&gt; &amp;mdash; Returns whether the requested index exists</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.offsetexists&quot;&gt;SplFixedArray :: offsetExists&lt;/a&gt; &amp;mdash;リクエストされたインデックスが存在するかどうかを返す</target>
        </trans-unit>
        <trans-unit id="24895ab1ba2f24b62aff4d371f1d8723eff967f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.offsetget&quot;&gt;SplFixedArray::offsetGet&lt;/a&gt; &amp;mdash; Returns the value at the specified index</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.offsetget&quot;&gt;SplFixedArray :: offsetGet&lt;/a&gt; &amp;mdash;指定したインデックスの値を返す</target>
        </trans-unit>
        <trans-unit id="ee98c438b508943ad169ba801a343ad982ec61c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.offsetset&quot;&gt;SplFixedArray::offsetSet&lt;/a&gt; &amp;mdash; Sets a new value at a specified index</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.offsetset&quot;&gt;SplFixedArray :: offsetSet&lt;/a&gt; &amp;mdash;指定したインデックスに新しい値を設定する</target>
        </trans-unit>
        <trans-unit id="72d9735a7ac0551a834c3e539f836bb14f419fc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.offsetunset&quot;&gt;SplFixedArray::offsetUnset&lt;/a&gt; &amp;mdash; Unsets the value at the specified $index</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.offsetunset&quot;&gt;SplFixedArray :: offsetUnset&lt;/a&gt; &amp;mdash;指定した$ indexの値を設定解除する</target>
        </trans-unit>
        <trans-unit id="ba8664d015a20313767a7e83092f0df4828959ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.rewind&quot;&gt;SplFixedArray::rewind&lt;/a&gt; &amp;mdash; Rewind iterator back to the start</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.rewind&quot;&gt;SplFixedArray :: rewind&lt;/a&gt; &amp;mdash;イテレータを最初に巻き戻す</target>
        </trans-unit>
        <trans-unit id="877dc0085c1014720c448055dc7d6ddc34192181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.setsize&quot;&gt;SplFixedArray::setSize&lt;/a&gt; &amp;mdash; Change the size of an array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.setsize&quot;&gt;SplFixedArray :: setSize&lt;/a&gt; &amp;mdash;配列のサイズを変更する</target>
        </trans-unit>
        <trans-unit id="5d082597583b174f9916e094beafe7e5c1650eea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.toarray&quot;&gt;SplFixedArray::toArray&lt;/a&gt; &amp;mdash; Returns a PHP array from the fixed array</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.toarray&quot;&gt;SplFixedArray :: toArray&lt;/a&gt; &amp;mdash;固定配列からPHP配列を返す</target>
        </trans-unit>
        <trans-unit id="dd36039994363d93c7684f180d4a58370d91ef22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.valid&quot;&gt;SplFixedArray::valid&lt;/a&gt; &amp;mdash; Check whether the array contains more elements</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.valid&quot;&gt;SplFixedArray :: valid&lt;/a&gt; &amp;mdash;配列にさらに要素があるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="a119fcc36c7b57e20536a86d5a7b01e56cb650a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splfixedarray.wakeup&quot;&gt;SplFixedArray::__wakeup&lt;/a&gt; &amp;mdash; Reinitialises the array after being unserialised</source>
          <target state="translated">&lt;a href=&quot;splfixedarray.wakeup&quot;&gt;SplFixedArray :: __ wakeup&lt;/a&gt; &amp;mdash;シリアル化が解除された後、アレイを再初期化する</target>
        </trans-unit>
        <trans-unit id="c003dc341c8e6b79b51bc8598f78a1219ddc2307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.compare&quot;&gt;SplHeap::compare&lt;/a&gt; &amp;mdash; Compare elements in order to place them correctly in the heap while sifting up</source>
          <target state="translated">&lt;a href=&quot;splheap.compare&quot;&gt;SplHeap :: compare&lt;/a&gt; &amp;mdash;要素を比較し、ふるいにかけている間に要素をヒープに正しく配置する</target>
        </trans-unit>
        <trans-unit id="1d079e3c5ce17bc2ed5726b5109dc0857f6e4669" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.construct&quot;&gt;SplHeap::__construct&lt;/a&gt; &amp;mdash; Constructs a new empty heap</source>
          <target state="translated">&lt;a href=&quot;splheap.construct&quot;&gt;SplHeap :: __ construct&lt;/a&gt; &amp;mdash;新しい空のヒープを構築する</target>
        </trans-unit>
        <trans-unit id="3cd629248300cc41d7d1371ef82271ca5041fab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.count&quot;&gt;SplHeap::count&lt;/a&gt; &amp;mdash; Counts the number of elements in the heap</source>
          <target state="translated">&lt;a href=&quot;splheap.count&quot;&gt;SplHeap :: count&lt;/a&gt; &amp;mdash;ヒープ内の要素の数を数える</target>
        </trans-unit>
        <trans-unit id="2a3262cf106204c29341d239f24147a479f9077c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.current&quot;&gt;SplHeap::current&lt;/a&gt; &amp;mdash; Return current node pointed by the iterator</source>
          <target state="translated">&lt;a href=&quot;splheap.current&quot;&gt;SplHeap :: current&lt;/a&gt; &amp;mdash;イテレータが指す現在のノードを返す</target>
        </trans-unit>
        <trans-unit id="f64cc6052f515ac9d2d5525731f007075e9da5af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.extract&quot;&gt;SplHeap::extract&lt;/a&gt; &amp;mdash; Extracts a node from top of the heap and sift up</source>
          <target state="translated">&lt;a href=&quot;splheap.extract&quot;&gt;SplHeap :: extract&lt;/a&gt; &amp;mdash;ヒープの上からノードを抽出し、上に移動する</target>
        </trans-unit>
        <trans-unit id="e8f35369e9ff73ee1962881785eb987cca50ced8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.insert&quot;&gt;SplHeap::insert&lt;/a&gt; &amp;mdash; Inserts an element in the heap by sifting it up</source>
          <target state="translated">&lt;a href=&quot;splheap.insert&quot;&gt;SplHeap :: insert&lt;/a&gt; &amp;mdash;要素をシフトしてヒープに挿入する</target>
        </trans-unit>
        <trans-unit id="85371e8be236532f8e63873eb77f45b8933affd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.iscorrupted&quot;&gt;SplHeap::isCorrupted&lt;/a&gt; &amp;mdash; Tells if the heap is in a corrupted state</source>
          <target state="translated">&lt;a href=&quot;splheap.iscorrupted&quot;&gt;SplHeap :: isCorrupted&lt;/a&gt; &amp;mdash;ヒープが破損した状態かどうかを調べる</target>
        </trans-unit>
        <trans-unit id="f7f7b03a8881b3f33c231c61f98280d1a07b6e9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.isempty&quot;&gt;SplHeap::isEmpty&lt;/a&gt; &amp;mdash; Checks whether the heap is empty</source>
          <target state="translated">&lt;a href=&quot;splheap.isempty&quot;&gt;SplHeap :: isEmpty&lt;/a&gt; &amp;mdash;ヒープが空かどうかを確認する</target>
        </trans-unit>
        <trans-unit id="2e88f53b5d1cee5d593d5a84a18e04f5a1120afb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.key&quot;&gt;SplHeap::key&lt;/a&gt; &amp;mdash; Return current node index</source>
          <target state="translated">&lt;a href=&quot;splheap.key&quot;&gt;SplHeap :: key&lt;/a&gt; &amp;mdash;現在のノードのインデックスを返す</target>
        </trans-unit>
        <trans-unit id="8642dc70669c0b9acb7b6d93b9da3bfc3f7d31e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.next&quot;&gt;SplHeap::next&lt;/a&gt; &amp;mdash; Move to the next node</source>
          <target state="translated">&lt;a href=&quot;splheap.next&quot;&gt;SplHeap :: next&lt;/a&gt; &amp;mdash;次のノードに移動する</target>
        </trans-unit>
        <trans-unit id="77176463f20ab6a99b115c843776263f76b9f009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.recoverfromcorruption&quot;&gt;SplHeap::recoverFromCorruption&lt;/a&gt; &amp;mdash; Recover from the corrupted state and allow further actions on the heap</source>
          <target state="translated">&lt;a href=&quot;splheap.recoverfromcorruption&quot;&gt;SplHeap :: recoverFromCorruption&lt;/a&gt; &amp;mdash;破損した状態から回復し、ヒープでさらにアクションを実行できるようにする</target>
        </trans-unit>
        <trans-unit id="62f9d80439979eee8ab9c3ccdd152b5e9ad82546" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.rewind&quot;&gt;SplHeap::rewind&lt;/a&gt; &amp;mdash; Rewind iterator back to the start (no-op)</source>
          <target state="translated">&lt;a href=&quot;splheap.rewind&quot;&gt;SplHeap :: rewind&lt;/a&gt; &amp;mdash;イテレータを最初に巻き戻す（何もしない）</target>
        </trans-unit>
        <trans-unit id="9223ad82f81ac76867f72184d467d3d15388212e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.top&quot;&gt;SplHeap::top&lt;/a&gt; &amp;mdash; Peeks at the node from the top of the heap</source>
          <target state="translated">&lt;a href=&quot;splheap.top&quot;&gt;SplHeap :: top&lt;/a&gt; &amp;mdash;ヒープの先頭からノードを覗く</target>
        </trans-unit>
        <trans-unit id="b33d0307983a4ed26619cf50e9c38c1d218f883e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splheap.valid&quot;&gt;SplHeap::valid&lt;/a&gt; &amp;mdash; Check whether the heap contains more nodes</source>
          <target state="translated">&lt;a href=&quot;splheap.valid&quot;&gt;SplHeap :: valid&lt;/a&gt; &amp;mdash;ヒープにさらにノードが含まれているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="6a9b3c7e5303a58995e763fab1833fa642b4a1d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splmaxheap.compare&quot;&gt;SplMaxHeap::compare&lt;/a&gt; &amp;mdash; Compare elements in order to place them correctly in the heap while sifting up</source>
          <target state="translated">&lt;a href=&quot;splmaxheap.compare&quot;&gt;SplMaxHeap :: compare&lt;/a&gt; &amp;mdash;要素を比較し、ふるいにかけている間に要素をヒープに正しく配置する</target>
        </trans-unit>
        <trans-unit id="5494aa202a5b47118d4fff03894b2a21d6dd0e92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splminheap.compare&quot;&gt;SplMinHeap::compare&lt;/a&gt; &amp;mdash; Compare elements in order to place them correctly in the heap while sifting up</source>
          <target state="translated">&lt;a href=&quot;splminheap.compare&quot;&gt;SplMinHeap :: compare&lt;/a&gt; &amp;mdash;要素を比較し、ふるいにかけている間に要素をヒープに正しく配置する</target>
        </trans-unit>
        <trans-unit id="7bacd8bcb40d267b901591d94228bb3dcccfbf69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.addall&quot;&gt;SplObjectStorage::addAll()&lt;/a&gt; - Adds all objects from another storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.addall&quot;&gt;SplObjectStorage :: addAll（）&lt;/a&gt; -別のストレージからすべてのオブジェクトを追加する</target>
        </trans-unit>
        <trans-unit id="c22af230ca577438df7cbcb015c5bb2c76f3d6da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.addall&quot;&gt;SplObjectStorage::addAll&lt;/a&gt; &amp;mdash; Adds all objects from another storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.addall&quot;&gt;SplObjectStorage :: addAll&lt;/a&gt; &amp;mdash;別のストレージからすべてのオブジェクトを追加する</target>
        </trans-unit>
        <trans-unit id="a2bbea864c6b74d85906cd5ccc61fe317933567b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage::attach()&lt;/a&gt; - Adds an object in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage :: attach（）&lt;/a&gt; -ストレージにオブジェクトを追加する</target>
        </trans-unit>
        <trans-unit id="02bd169ccf94b1baae32ecea035ee669c85a7806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage::attach&lt;/a&gt; &amp;mdash; Adds an object in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage :: attach&lt;/a&gt; &amp;mdash;ストレージにオブジェクトを追加する</target>
        </trans-unit>
        <trans-unit id="e73e7edaea748f26ba779f9eb3adff05d6aa2006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.contains&quot;&gt;SplObjectStorage::contains&lt;/a&gt; &amp;mdash; Checks if the storage contains a specific object</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.contains&quot;&gt;SplObjectStorage :: contains&lt;/a&gt; &amp;mdash;ストレージに特定のオブジェクトが含まれているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="8ab6ca4841cc4a08fc56d937f9ca0723346dffa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.count&quot;&gt;SplObjectStorage::count&lt;/a&gt; &amp;mdash; Returns the number of objects in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.count&quot;&gt;SplObjectStorage :: count&lt;/a&gt; &amp;mdash;ストレージ内のオブジェクトの数を返す</target>
        </trans-unit>
        <trans-unit id="994841f59531911e7f2ed48d640c6d8b579ce1f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.current&quot;&gt;SplObjectStorage::current()&lt;/a&gt; - Returns the current storage entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.current&quot;&gt;SplObjectStorage :: current（）&lt;/a&gt; -現在のストレージエントリを返す</target>
        </trans-unit>
        <trans-unit id="1e3e9551e3889ec3be54ec6997300d554e985e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.current&quot;&gt;SplObjectStorage::current&lt;/a&gt; &amp;mdash; Returns the current storage entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.current&quot;&gt;SplObjectStorage :: current&lt;/a&gt; &amp;mdash;現在のストレージエントリを返す</target>
        </trans-unit>
        <trans-unit id="7abc1c6b0383d248cbede726bc1abc95869d8fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage::detach()&lt;/a&gt; - Removes an object from the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage :: detach（）&lt;/a&gt; -ストレージからオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="64043a98926df7f1d487c29210c39c2cc38d2d12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage::detach&lt;/a&gt; &amp;mdash; Removes an object from the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage :: detach&lt;/a&gt; &amp;mdash;ストレージからオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="2fa0ab62f62f203e98744297951d8ebd53764b29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.gethash&quot;&gt;SplObjectStorage::getHash&lt;/a&gt; &amp;mdash; Calculate a unique identifier for the contained objects</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.gethash&quot;&gt;SplObjectStorage :: getHash&lt;/a&gt; &amp;mdash;含まれているオブジェクトの一意の識別子を計算する</target>
        </trans-unit>
        <trans-unit id="d536e376f7ea006cf9493ec1179c0d33cd7c5e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.getinfo&quot;&gt;SplObjectStorage::getInfo()&lt;/a&gt; - Returns the data associated with the current iterator entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.getinfo&quot;&gt;SplObjectStorage :: getInfo（）&lt;/a&gt; -現在のイテレータエントリに関連付けられているデータを返す</target>
        </trans-unit>
        <trans-unit id="dce65206dc188285b2df8fa7ac72e727d1652dc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.getinfo&quot;&gt;SplObjectStorage::getInfo&lt;/a&gt; &amp;mdash; Returns the data associated with the current iterator entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.getinfo&quot;&gt;SplObjectStorage :: getInfo&lt;/a&gt; &amp;mdash;現在のイテレータエントリに関連付けられているデータを返す</target>
        </trans-unit>
        <trans-unit id="be9835c313e48ebc3f4a80fd7cbc3721414a7537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.key&quot;&gt;SplObjectStorage::key()&lt;/a&gt; - Returns the index at which the iterator currently is</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.key&quot;&gt;SplObjectStorage :: key（）&lt;/a&gt; -イテレータが現在あるインデックスを返す</target>
        </trans-unit>
        <trans-unit id="f4c3cd8429da2d74b10ac1f7e64eaaaeaa42c508" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.key&quot;&gt;SplObjectStorage::key&lt;/a&gt; &amp;mdash; Returns the index at which the iterator currently is</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.key&quot;&gt;SplObjectStorage :: key&lt;/a&gt; &amp;mdash;イテレータが現在あるインデックスを返す</target>
        </trans-unit>
        <trans-unit id="e910339d1acb68936e08020195b5a0573b54dd62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.next&quot;&gt;SplObjectStorage::next()&lt;/a&gt; - Move to the next entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.next&quot;&gt;SplObjectStorage :: next（）&lt;/a&gt; -次のエントリに移動する</target>
        </trans-unit>
        <trans-unit id="4e5c25b3fc011fb92253a2f2348347a7086693c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.next&quot;&gt;SplObjectStorage::next&lt;/a&gt; &amp;mdash; Move to the next entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.next&quot;&gt;SplObjectStorage :: next&lt;/a&gt; &amp;mdash;次のエントリに移動する</target>
        </trans-unit>
        <trans-unit id="612212295efe1399efd006c5947ff1d9f91545c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetexists&quot;&gt;SplObjectStorage::offsetExists()&lt;/a&gt; - Checks whether an object exists in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetexists&quot;&gt;SplObjectStorage :: offsetExists（）&lt;/a&gt; -オブジェクトがストレージに存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="9b3055a0471ce3482c69c1dadc7633705459d5e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetexists&quot;&gt;SplObjectStorage::offsetExists&lt;/a&gt; &amp;mdash; Checks whether an object exists in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetexists&quot;&gt;SplObjectStorage :: offsetExists&lt;/a&gt; &amp;mdash;オブジェクトがストレージに存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="993fa93e8872079fdb95951e01782f48fa85f2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetget&quot;&gt;SplObjectStorage::offsetGet()&lt;/a&gt; - Returns the data associated with an object</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetget&quot;&gt;SplObjectStorage :: offsetGet（）&lt;/a&gt; -オブジェクトに関連付けられたデータを返す</target>
        </trans-unit>
        <trans-unit id="a248cad1da349e32ad87257a346ebca0a11f07c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetget&quot;&gt;SplObjectStorage::offsetGet&lt;/a&gt; &amp;mdash; Returns the data associated with an object</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetget&quot;&gt;SplObjectStorage :: offsetGet&lt;/a&gt; &amp;mdash;オブジェクトに関連付けられたデータを返す</target>
        </trans-unit>
        <trans-unit id="71ab60b1bfa758c8242775ac46c60f1af39fc57a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetset&quot;&gt;SplObjectStorage::offsetSet()&lt;/a&gt; - Associates data to an object in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetset&quot;&gt;SplObjectStorage :: offsetSet（）&lt;/a&gt; -ストレージ内のオブジェクトにデータを関連付ける</target>
        </trans-unit>
        <trans-unit id="b41245accccdf10b797b629b3d7f62dd7c55ea72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetset&quot;&gt;SplObjectStorage::offsetSet&lt;/a&gt; &amp;mdash; Associates data to an object in the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetset&quot;&gt;SplObjectStorage :: offsetSet&lt;/a&gt; &amp;mdash;ストレージ内のオブジェクトにデータを関連付ける</target>
        </trans-unit>
        <trans-unit id="a8dc9a08515992f59dd7aaf31d4ee906fb97306f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetunset&quot;&gt;SplObjectStorage::offsetUnset()&lt;/a&gt; - Removes an object from the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetunset&quot;&gt;SplObjectStorage :: offsetUnset（）&lt;/a&gt; -ストレージからオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="2b3c9569ab459387951b1fe6a4bfdb7afbcc601a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.offsetunset&quot;&gt;SplObjectStorage::offsetUnset&lt;/a&gt; &amp;mdash; Removes an object from the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.offsetunset&quot;&gt;SplObjectStorage :: offsetUnset&lt;/a&gt; &amp;mdash;ストレージからオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="4cb46663027f5f33f3f366357aea4202ec6e591f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.removeall&quot;&gt;SplObjectStorage::removeAll()&lt;/a&gt; - Removes objects contained in another storage from the current storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.removeall&quot;&gt;SplObjectStorage :: removeAll（）&lt;/a&gt; -現在のストレージから別のストレージに含まれているオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="e994cbd43e48fec5e910a29755fda28ceaf047bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.removeall&quot;&gt;SplObjectStorage::removeAll&lt;/a&gt; &amp;mdash; Removes objects contained in another storage from the current storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.removeall&quot;&gt;SplObjectStorage :: removeAll&lt;/a&gt; &amp;mdash;別のストレージに含まれているオブジェクトを現在のストレージから削除する</target>
        </trans-unit>
        <trans-unit id="d10ab4af2d59700ea0daa9c120b429b8303cf71a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.removeallexcept&quot;&gt;SplObjectStorage::removeAllExcept&lt;/a&gt; &amp;mdash; Removes all objects except for those contained in another storage from the current storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.removeallexcept&quot;&gt;SplObjectStorage :: removeAllExcept&lt;/a&gt; &amp;mdash;別のストレージに含まれているものを除くすべてのオブジェクトを現在のストレージから削除する</target>
        </trans-unit>
        <trans-unit id="b7cd5c46cdef893f6805abd3c618436ec052993b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SPLObjectStorage::rewind()&lt;/a&gt; - Rewind the iterator to the first storage element</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SPLObjectStorage :: rewind（）&lt;/a&gt; -イテレータを最初のストレージ要素に巻き戻します</target>
        </trans-unit>
        <trans-unit id="69c02c7f331243ec5ba5200d92e4848d1bf51b36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SplObjectStorage::rewind()&lt;/a&gt; - Rewind the iterator to the first storage element</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SplObjectStorage :: rewind（）&lt;/a&gt; -イテレータを最初のストレージ要素に巻き戻す</target>
        </trans-unit>
        <trans-unit id="5055553fdcf774092a06d8f409c7c1c861a0100d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SplObjectStorage::rewind&lt;/a&gt; &amp;mdash; Rewind the iterator to the first storage element</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.rewind&quot;&gt;SplObjectStorage :: rewind&lt;/a&gt; &amp;mdash;イテレータを最初のストレージ要素に巻き戻す</target>
        </trans-unit>
        <trans-unit id="5f70e8f330fc3c08363406c47fb48076faa0d8e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.serialize&quot;&gt;SplObjectStorage::serialize()&lt;/a&gt; - Serializes the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.serialize&quot;&gt;SplObjectStorage :: serialize（）&lt;/a&gt; -ストレージをシリアル化する</target>
        </trans-unit>
        <trans-unit id="afa106af81754be01dce6e87a397085563e1c6f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.serialize&quot;&gt;SplObjectStorage::serialize&lt;/a&gt; &amp;mdash; Serializes the storage</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.serialize&quot;&gt;SplObjectStorage :: serialize&lt;/a&gt; &amp;mdash;ストレージをシリアライズする</target>
        </trans-unit>
        <trans-unit id="c4c0b331589eb1d71a16104740df1d727b307304" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.setinfo&quot;&gt;SplObjectStorage::setInfo()&lt;/a&gt; - Sets the data associated with the current iterator entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.setinfo&quot;&gt;SplObjectStorage :: setInfo（）&lt;/a&gt; -現在のイテレータエントリに関連付けられたデータを設定する</target>
        </trans-unit>
        <trans-unit id="65efae97a2b3b03947e5539f14e09fd492019cf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.setinfo&quot;&gt;SplObjectStorage::setInfo&lt;/a&gt; &amp;mdash; Sets the data associated with the current iterator entry</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.setinfo&quot;&gt;SplObjectStorage :: setInfo&lt;/a&gt; &amp;mdash;現在のイテレータエントリに関連付けられたデータを設定する</target>
        </trans-unit>
        <trans-unit id="85ac6cf96f1ececbe7acc45ba8b5620e91fcd205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.unserialize&quot;&gt;SplObjectStorage::unserialize()&lt;/a&gt; - Unserializes a storage from its string representation</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.unserialize&quot;&gt;SplObjectStorage :: unserialize（）&lt;/a&gt; -文字列表現からストレージをシリアル化解除する</target>
        </trans-unit>
        <trans-unit id="82023976705a1336ae3b7936d74df3f07df7ef54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.unserialize&quot;&gt;SplObjectStorage::unserialize&lt;/a&gt; &amp;mdash; Unserializes a storage from its string representation</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.unserialize&quot;&gt;SplObjectStorage :: unserialize&lt;/a&gt; &amp;mdash;ストレージをその文字列表現からアンシリアライズする</target>
        </trans-unit>
        <trans-unit id="2df232a301c2b92089363b0009956ecac1ac3ea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.valid&quot;&gt;SplObjectStorage::valid()&lt;/a&gt; - Returns if the current iterator entry is valid</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.valid&quot;&gt;SplObjectStorage :: valid（）&lt;/a&gt; -現在のイテレータエントリが有効かどうかを返す</target>
        </trans-unit>
        <trans-unit id="c08306320f05256c0284035e641b434fc7cf8a1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobjectstorage.valid&quot;&gt;SplObjectStorage::valid&lt;/a&gt; &amp;mdash; Returns if the current iterator entry is valid</source>
          <target state="translated">&lt;a href=&quot;splobjectstorage.valid&quot;&gt;SplObjectStorage :: valid&lt;/a&gt; &amp;mdash;現在のイテレータエントリが有効かどうかを返す</target>
        </trans-unit>
        <trans-unit id="5e6bec4e17510c38036cc2a076448b2fa623a887" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splobserver.update&quot;&gt;SplObserver::update&lt;/a&gt; &amp;mdash; Receive update from subject</source>
          <target state="translated">&lt;a href=&quot;splobserver.update&quot;&gt;SplObserver :: update&lt;/a&gt; &amp;mdash;件名から更新を受け取る</target>
        </trans-unit>
        <trans-unit id="33f9e5a08ac30f687fda5fe989e72c2ed9bbbcb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.compare&quot;&gt;SplPriorityQueue::compare&lt;/a&gt; &amp;mdash; Compare priorities in order to place elements correctly in the heap while sifting up</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.compare&quot;&gt;SplPriorityQueue :: compare&lt;/a&gt; &amp;mdash;優先順位を比較して、シフト中に要素をヒープに正しく配置する</target>
        </trans-unit>
        <trans-unit id="d904e264592f580fd13a5468134408f53c5a0017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.construct&quot;&gt;SplPriorityQueue::__construct&lt;/a&gt; &amp;mdash; Constructs a new empty queue</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.construct&quot;&gt;SplPriorityQueue :: __ construct&lt;/a&gt; &amp;mdash;新しい空のキューを作成する</target>
        </trans-unit>
        <trans-unit id="a75d7fb2869e00f8f654b482969bbd85ac48b9de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.count&quot;&gt;SplPriorityQueue::count&lt;/a&gt; &amp;mdash; Counts the number of elements in the queue</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.count&quot;&gt;SplPriorityQueue :: count&lt;/a&gt; &amp;mdash;キュー内の要素の数を数える</target>
        </trans-unit>
        <trans-unit id="fdb15c3ff9a8597a5c5944e5f23ea123ad752710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.current&quot;&gt;SplPriorityQueue::current&lt;/a&gt; &amp;mdash; Return current node pointed by the iterator</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.current&quot;&gt;SplPriorityQueue :: current&lt;/a&gt; &amp;mdash;イテレータが指す現在のノードを返す</target>
        </trans-unit>
        <trans-unit id="b2cd3efbd1802e9d5e3a2202ed58c7738ace32de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.extract&quot;&gt;SplPriorityQueue::extract&lt;/a&gt; &amp;mdash; Extracts a node from top of the heap and sift up</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.extract&quot;&gt;SplPriorityQueue :: extract&lt;/a&gt; &amp;mdash;ヒープの上からノードを抽出し、上に移動する</target>
        </trans-unit>
        <trans-unit id="a6975a76600bfdd8d6330437363087ce02716f2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.getextractflags&quot;&gt;SplPriorityQueue::getExtractFlags&lt;/a&gt; &amp;mdash; Get the flags of extraction</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.getextractflags&quot;&gt;SplPriorityQueue :: getExtractFlags&lt;/a&gt; &amp;mdash;抽出のフラグを取得する</target>
        </trans-unit>
        <trans-unit id="ecf66b018efefbdbdeac145533cd0e29342ad86f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.insert&quot;&gt;SplPriorityQueue::insert&lt;/a&gt; &amp;mdash; Inserts an element in the queue by sifting it up</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.insert&quot;&gt;SplPriorityQueue :: insert&lt;/a&gt; &amp;mdash;要素をシフトしてキューに挿入する</target>
        </trans-unit>
        <trans-unit id="3182d92e2fb3c6f02f924e851c41c33a35f4bd49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.iscorrupted&quot;&gt;SplPriorityQueue::isCorrupted&lt;/a&gt; &amp;mdash; Tells if the priority queue is in a corrupted state</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.iscorrupted&quot;&gt;SplPriorityQueue :: isCorrupted&lt;/a&gt; &amp;mdash;優先度キューが破損した状態かどうかを通知する</target>
        </trans-unit>
        <trans-unit id="11c0fa32fe3e6718676834bf2e07af186ad48c58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.isempty&quot;&gt;SplPriorityQueue::isEmpty&lt;/a&gt; &amp;mdash; Checks whether the queue is empty</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.isempty&quot;&gt;SplPriorityQueue :: isEmpty&lt;/a&gt; &amp;mdash;キューが空かどうかを確認する</target>
        </trans-unit>
        <trans-unit id="e374ae86cf403a5825036c4cbfd0e211cde141b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.key&quot;&gt;SplPriorityQueue::key&lt;/a&gt; &amp;mdash; Return current node index</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.key&quot;&gt;SplPriorityQueue :: key&lt;/a&gt; &amp;mdash;現在のノードのインデックスを返す</target>
        </trans-unit>
        <trans-unit id="ea90d5753fe4a11f748ed747111fc910aa85b0b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.next&quot;&gt;SplPriorityQueue::next&lt;/a&gt; &amp;mdash; Move to the next node</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.next&quot;&gt;SplPriorityQueue :: next&lt;/a&gt; &amp;mdash;次のノードに移動する</target>
        </trans-unit>
        <trans-unit id="772552109183abf62e6188567a9fcfce78cad050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.recoverfromcorruption&quot;&gt;SplPriorityQueue::recoverFromCorruption&lt;/a&gt; &amp;mdash; Recover from the corrupted state and allow further actions on the queue</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.recoverfromcorruption&quot;&gt;SplPriorityQueue :: recoverFromCorruption&lt;/a&gt; &amp;mdash;破損した状態から回復し、キューでさらにアクションを実行できるようにする</target>
        </trans-unit>
        <trans-unit id="2260c4b3957bf1fce2fd7c52da9078b4f3c658d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.rewind&quot;&gt;SplPriorityQueue::rewind&lt;/a&gt; &amp;mdash; Rewind iterator back to the start (no-op)</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.rewind&quot;&gt;SplPriorityQueue :: rewind&lt;/a&gt; &amp;mdash;イテレータを最初に巻き戻す（何もしない）</target>
        </trans-unit>
        <trans-unit id="aa3221dd0f89efd3583f652f5ff2f461eb938ed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.setextractflags&quot;&gt;SplPriorityQueue::setExtractFlags&lt;/a&gt; &amp;mdash; Sets the mode of extraction</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.setextractflags&quot;&gt;SplPriorityQueue :: setExtractFlags&lt;/a&gt; &amp;mdash;抽出モードを設定する</target>
        </trans-unit>
        <trans-unit id="62f038fdc1d6d1b4013a0ed7a4403c675bb2c94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.top&quot;&gt;SplPriorityQueue::top&lt;/a&gt; &amp;mdash; Peeks at the node from the top of the queue</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.top&quot;&gt;SplPriorityQueue :: top&lt;/a&gt; &amp;mdash;キューの先頭からノードを覗く</target>
        </trans-unit>
        <trans-unit id="9721e319d58d97ac83d66a3a76b3fdc177e65878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splpriorityqueue.valid&quot;&gt;SplPriorityQueue::valid&lt;/a&gt; &amp;mdash; Check whether the queue contains more nodes</source>
          <target state="translated">&lt;a href=&quot;splpriorityqueue.valid&quot;&gt;SplPriorityQueue :: valid&lt;/a&gt; &amp;mdash;キューにさらにノードが含まれているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="963e844e8745b51bc2fe38ffa902eacc7e0dc9a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splqueue.construct&quot;&gt;SplQueue::__construct&lt;/a&gt; &amp;mdash; Constructs a new queue implemented using a doubly linked list</source>
          <target state="translated">&lt;a href=&quot;splqueue.construct&quot;&gt;SplQueue :: __ construct&lt;/a&gt; &amp;mdash;二重にリンクされたリストを使用して実装された新しいキューを構築する</target>
        </trans-unit>
        <trans-unit id="6ba3534c2664cc3710fc3c6c9a600dc33304599e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splqueue.construct&quot;&gt;__construct&lt;/a&gt; ( void )</source>
          <target state="translated">&lt;a href=&quot;splqueue.construct&quot;&gt;__construct&lt;/a&gt;（void）</target>
        </trans-unit>
        <trans-unit id="4683d41ffe33440c5743a224ac97d6664a74285f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splqueue.dequeue&quot;&gt;SplQueue::dequeue&lt;/a&gt; &amp;mdash; Dequeues a node from the queue</source>
          <target state="translated">&lt;a href=&quot;splqueue.dequeue&quot;&gt;SplQueue :: dequeue&lt;/a&gt; &amp;mdash;キューからノードをデキューする</target>
        </trans-unit>
        <trans-unit id="afdd9330bb7690708e608c4d98113bb881faeb8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splqueue.enqueue&quot;&gt;SplQueue::enqueue&lt;/a&gt; &amp;mdash; Adds an element to the queue</source>
          <target state="translated">&lt;a href=&quot;splqueue.enqueue&quot;&gt;SplQueue :: enqueue&lt;/a&gt; &amp;mdash;要素をキューに追加する</target>
        </trans-unit>
        <trans-unit id="5adcf74712cfed28916b3b1dee3cc3676843df03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splqueue.setiteratormode&quot;&gt;SplQueue::setIteratorMode&lt;/a&gt; &amp;mdash; Sets the mode of iteration</source>
          <target state="translated">&lt;a href=&quot;splqueue.setiteratormode&quot;&gt;SplQueue :: setIteratorMode&lt;/a&gt; &amp;mdash;反復のモードを設定する</target>
        </trans-unit>
        <trans-unit id="857e93e529e0193cc2faf291156c9dec0b7aab2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splstack.construct&quot;&gt;SplStack::__construct&lt;/a&gt; &amp;mdash; Constructs a new stack implemented using a doubly linked list</source>
          <target state="translated">&lt;a href=&quot;splstack.construct&quot;&gt;SplStack :: __ construct&lt;/a&gt; &amp;mdash;二重にリンクされたリストを使用して実装された新しいスタックを構築する</target>
        </trans-unit>
        <trans-unit id="c1053231432574bcf139bd5fb2123e3a46d71b94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splstack.construct&quot;&gt;__construct&lt;/a&gt; ( void )</source>
          <target state="translated">&lt;a href=&quot;splstack.construct&quot;&gt;__construct&lt;/a&gt;（void）</target>
        </trans-unit>
        <trans-unit id="6be009b314848c1070c522b5401aea07f6d6effd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splstack.setiteratormode&quot;&gt;SplStack::setIteratorMode&lt;/a&gt; &amp;mdash; Sets the mode of iteration</source>
          <target state="translated">&lt;a href=&quot;splstack.setiteratormode&quot;&gt;SplStack :: setIteratorMode&lt;/a&gt; &amp;mdash;反復のモードを設定する</target>
        </trans-unit>
        <trans-unit id="5a135c5dff17e6f58983a6fa6d64596ab35d64c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splsubject.attach&quot;&gt;SplSubject::attach&lt;/a&gt; &amp;mdash; Attach an SplObserver</source>
          <target state="translated">&lt;a href=&quot;splsubject.attach&quot;&gt;SplSubject :: attach&lt;/a&gt; &amp;mdash; SplObserverをアタッチする</target>
        </trans-unit>
        <trans-unit id="f1b5fd841b66d929d966a7e6c441ef7a2207d705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splsubject.detach&quot;&gt;SplSubject::detach&lt;/a&gt; &amp;mdash; Detach an observer</source>
          <target state="translated">&lt;a href=&quot;splsubject.detach&quot;&gt;SplSubject :: detach&lt;/a&gt; &amp;mdash;オブザーバーを切り離す</target>
        </trans-unit>
        <trans-unit id="c9278ec302537579bab45fb7b1f1ce40bc2fe9ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;splsubject.notify&quot;&gt;SplSubject::notify&lt;/a&gt; &amp;mdash; Notify an observer</source>
          <target state="translated">&lt;a href=&quot;splsubject.notify&quot;&gt;SplSubject :: notify&lt;/a&gt; &amp;mdash;オブザーバーに通知する</target>
        </trans-unit>
        <trans-unit id="1d333bb8bee092aa74ed1e9d86d76664e7588de3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spltempfileobject.construct&quot;&gt;SplTempFileObject::__construct&lt;/a&gt; &amp;mdash; Construct a new temporary file object</source>
          <target state="translated">&lt;a href=&quot;spltempfileobject.construct&quot;&gt;SplTempFileObject :: __ construct&lt;/a&gt; &amp;mdash;新しい一時ファイルオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="d15d3cfa8185ffc7a0879707db59a797a0569fc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spltype.construct&quot;&gt;SplType::__construct&lt;/a&gt; &amp;mdash; Creates a new value of some type</source>
          <target state="translated">&lt;a href=&quot;spltype.construct&quot;&gt;SplType :: __ construct&lt;/a&gt; &amp;mdash;あるタイプの新しい値を作成する</target>
        </trans-unit>
        <trans-unit id="6c91c82b180c9e52dbb884ede9ebfcbfe01992f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spoofchecker.areconfusable&quot;&gt;Spoofchecker::areConfusable&lt;/a&gt; &amp;mdash; Checks if given strings can be confused</source>
          <target state="translated">&lt;a href=&quot;spoofchecker.areconfusable&quot;&gt;Spoofchecker :: areConfusable&lt;/a&gt; &amp;mdash;指定された文字列が混乱する可能性があるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="a3dbfa82cd9c3f12b3e03129daf8954af0ff321b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spoofchecker.construct&quot;&gt;Spoofchecker::__construct&lt;/a&gt; &amp;mdash; Constructor</source>
          <target state="translated">&lt;a href=&quot;spoofchecker.construct&quot;&gt;Spoofchecker :: __ construct&lt;/a&gt; &amp;mdash;コンストラクタ</target>
        </trans-unit>
        <trans-unit id="0f01a4e2e9fa5a33c042e17428c80a299446382b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spoofchecker.issuspicious&quot;&gt;Spoofchecker::isSuspicious&lt;/a&gt; &amp;mdash; Checks if a given text contains any suspicious characters</source>
          <target state="translated">&lt;a href=&quot;spoofchecker.issuspicious&quot;&gt;Spoofchecker :: isSuspicious&lt;/a&gt; &amp;mdash;指定したテキストに不審な文字が含まれているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="81b372ac78e96aadb37cbeae823f92dfe40af76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spoofchecker.setallowedlocales&quot;&gt;Spoofchecker::setAllowedLocales&lt;/a&gt; &amp;mdash; Locales to use when running checks</source>
          <target state="translated">&lt;a href=&quot;spoofchecker.setallowedlocales&quot;&gt;Spoofchecker :: setAllowedLocales&lt;/a&gt; &amp;mdash;チェックを実行するときに使用するロケール</target>
        </trans-unit>
        <trans-unit id="c7e9674070b8d4f5a2dee65e4b19952f43edb39a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spoofchecker.setchecks&quot;&gt;Spoofchecker::setChecks&lt;/a&gt; &amp;mdash; Set the checks to run</source>
          <target state="translated">&lt;a href=&quot;spoofchecker.setchecks&quot;&gt;Spoofchecker :: setChecks&lt;/a&gt; &amp;mdash;実行するチェックを設定する</target>
        </trans-unit>
        <trans-unit id="9cb98bec8ea0f01a16b4ae65758e3489cf669775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.busytimeout&quot;&gt;SQLite3::busyTimeout&lt;/a&gt; &amp;mdash; Sets the busy connection handler</source>
          <target state="translated">&lt;a href=&quot;sqlite3.busytimeout&quot;&gt;SQLite3 :: busyTimeout&lt;/a&gt; &amp;mdash;ビジーな接続ハンドラーを設定する</target>
        </trans-unit>
        <trans-unit id="880008862dfb6ba70480613da6bdc9fd75f6df6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.changes&quot;&gt;SQLite3::changes&lt;/a&gt; &amp;mdash; Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement</source>
          <target state="translated">&lt;a href=&quot;sqlite3.changes&quot;&gt;SQLite3 :: changes&lt;/a&gt; &amp;mdash;最新のSQLステートメントによって変更（または挿入または削除）されたデータベース行の数を返す</target>
        </trans-unit>
        <trans-unit id="4ca875074bb67331a59cf51ec5971e547cf4a3bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.close&quot;&gt;SQLite3::close&lt;/a&gt; &amp;mdash; Closes the database connection</source>
          <target state="translated">&lt;a href=&quot;sqlite3.close&quot;&gt;SQLite3 :: close&lt;/a&gt; &amp;mdash;データベース接続を閉じる</target>
        </trans-unit>
        <trans-unit id="83f927b58c4f6a9bc0aa6858a136c0da28498c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.construct&quot;&gt;SQLite3::__construct&lt;/a&gt; &amp;mdash; Instantiates an SQLite3 object and opens an SQLite 3 database</source>
          <target state="translated">&lt;a href=&quot;sqlite3.construct&quot;&gt;SQLite3 :: __ construct&lt;/a&gt; &amp;mdash; SQLite3オブジェクトをインスタンス化し、SQLite 3データベースを開く</target>
        </trans-unit>
        <trans-unit id="f043fab38575e5b1120216cfec64d287b674d01d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.createaggregate&quot;&gt;SQLite3::createAggregate&lt;/a&gt; &amp;mdash; Registers a PHP function for use as an SQL aggregate function</source>
          <target state="translated">&lt;a href=&quot;sqlite3.createaggregate&quot;&gt;SQLite3 :: createAggregate&lt;/a&gt; &amp;mdash; SQL集計関数として使用するPHP関数を登録する</target>
        </trans-unit>
        <trans-unit id="9d29021545d700ae10ac861115bbf99956aed193" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.createcollation&quot;&gt;SQLite3::createCollation&lt;/a&gt; &amp;mdash; Registers a PHP function for use as an SQL collating function</source>
          <target state="translated">&lt;a href=&quot;sqlite3.createcollation&quot;&gt;SQLite3 :: createCollat​​ion&lt;/a&gt; &amp;mdash; SQL照合関数として使用するPHP関数を登録する</target>
        </trans-unit>
        <trans-unit id="2f22f9d9293a707f52775846f3b9cb674dca89cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.createfunction&quot;&gt;SQLite3::createFunction&lt;/a&gt; &amp;mdash; Registers a PHP function for use as an SQL scalar function</source>
          <target state="translated">&lt;a href=&quot;sqlite3.createfunction&quot;&gt;SQLite3 :: createFunction&lt;/a&gt; &amp;mdash; SQLスカラー関数として使用するPHP関数を登録する</target>
        </trans-unit>
        <trans-unit id="bbd6dccafb69635a571656689a0f2b2211a320ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.enableexceptions&quot;&gt;SQLite3::enableExceptions&lt;/a&gt; &amp;mdash; Enable throwing exceptions</source>
          <target state="translated">&lt;a href=&quot;sqlite3.enableexceptions&quot;&gt;SQLite3 :: enableExceptions&lt;/a&gt; &amp;mdash;例外のスローを有効にする</target>
        </trans-unit>
        <trans-unit id="29fc9564247315fb745daac61c77913c7f46103f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.escapestring&quot;&gt;SQLite3::escapeString&lt;/a&gt; &amp;mdash; Returns a string that has been properly escaped</source>
          <target state="translated">&lt;a href=&quot;sqlite3.escapestring&quot;&gt;SQLite3 :: escapeString&lt;/a&gt; &amp;mdash;適切にエスケープされた文字列を返す</target>
        </trans-unit>
        <trans-unit id="d1191264f0a85de08eafe76f46ff8ae8ee24c5ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.exec&quot;&gt;SQLite3::exec&lt;/a&gt; &amp;mdash; Executes a result-less query against a given database</source>
          <target state="translated">&lt;a href=&quot;sqlite3.exec&quot;&gt;SQLite3 :: exec&lt;/a&gt; &amp;mdash;与えられたデータベースに対して結果のないクエリを実行する</target>
        </trans-unit>
        <trans-unit id="1458e879568ac79b82157bd00f3a8a76f101fc44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.lasterrorcode&quot;&gt;SQLite3::lastErrorCode&lt;/a&gt; &amp;mdash; Returns the numeric result code of the most recent failed SQLite request</source>
          <target state="translated">&lt;a href=&quot;sqlite3.lasterrorcode&quot;&gt;SQLite3 :: lastErrorCode&lt;/a&gt; &amp;mdash;直近で失敗したSQLiteリクエストの数値結果コードを返す</target>
        </trans-unit>
        <trans-unit id="733f3387305b031a85660278daeaa8ebe487b347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.lasterrormsg&quot;&gt;SQLite3::lastErrorMsg&lt;/a&gt; &amp;mdash; Returns English text describing the most recent failed SQLite request</source>
          <target state="translated">&lt;a href=&quot;sqlite3.lasterrormsg&quot;&gt;SQLite3 :: lastErrorMsg&lt;/a&gt; &amp;mdash;失敗した最新のSQLiteリクエストを説明する英語のテキストを返す</target>
        </trans-unit>
        <trans-unit id="79819c2082398cf69e265e7d7445874375524cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.lastinsertrowid&quot;&gt;SQLite3::lastInsertRowID&lt;/a&gt; &amp;mdash; Returns the row ID of the most recent INSERT into the database</source>
          <target state="translated">&lt;a href=&quot;sqlite3.lastinsertrowid&quot;&gt;SQLite3 :: lastInsertRowID&lt;/a&gt; &amp;mdash;データベースへの最新のINSERTの行IDを返す</target>
        </trans-unit>
        <trans-unit id="73ad54dca94d3b9c637f4b84399d37b92b02b124" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.loadextension&quot;&gt;SQLite3::loadExtension&lt;/a&gt; &amp;mdash; Attempts to load an SQLite extension library</source>
          <target state="translated">&lt;a href=&quot;sqlite3.loadextension&quot;&gt;SQLite3 :: loadExtension&lt;/a&gt; &amp;mdash; SQLite拡張ライブラリをロードしようとする</target>
        </trans-unit>
        <trans-unit id="722d0434cb84f835b5eaf1c66785c8e70a28d3c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.open&quot;&gt;SQLite3::open&lt;/a&gt; &amp;mdash; Opens an SQLite database</source>
          <target state="translated">&lt;a href=&quot;sqlite3.open&quot;&gt;SQLite3 :: open&lt;/a&gt; &amp;mdash; SQLiteデータベースを開く</target>
        </trans-unit>
        <trans-unit id="6f925ab649767b81efced0d3a5578645c1dd41b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.openblob&quot;&gt;SQLite3::openBlob&lt;/a&gt; &amp;mdash; Opens a stream resource to read a BLOB</source>
          <target state="translated">&lt;a href=&quot;sqlite3.openblob&quot;&gt;SQLite3 :: openBlob&lt;/a&gt; &amp;mdash; BLOBを読み取るためにストリームリソースを開く</target>
        </trans-unit>
        <trans-unit id="ffd8b93d23404d610993c2c9722ffeb584cb2e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.prepare&quot;&gt;SQLite3::prepare()&lt;/a&gt; - Prepares an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;sqlite3.prepare&quot;&gt;SQLite3 :: prepare（）&lt;/a&gt; -実行するSQLステートメントを準備する</target>
        </trans-unit>
        <trans-unit id="e30f8c7d4bc08d10ecfc22fb7e09a03260c068bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.prepare&quot;&gt;SQLite3::prepare&lt;/a&gt; &amp;mdash; Prepares an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;sqlite3.prepare&quot;&gt;SQLite3 :: prepare&lt;/a&gt; &amp;mdash; SQLステートメントを実行する準備をする</target>
        </trans-unit>
        <trans-unit id="d8f315202fea9c421fc475c1e716d4382f5b50de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.query&quot;&gt;SQLite3::query&lt;/a&gt; &amp;mdash; Executes an SQL query</source>
          <target state="translated">&lt;a href=&quot;sqlite3.query&quot;&gt;SQLite3 :: query&lt;/a&gt; &amp;mdash; SQLクエリを実行する</target>
        </trans-unit>
        <trans-unit id="6f94bb938a6399222b2e4d02644d880798f3b968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.querysingle&quot;&gt;SQLite3::querySingle&lt;/a&gt; &amp;mdash; Executes a query and returns a single result</source>
          <target state="translated">&lt;a href=&quot;sqlite3.querysingle&quot;&gt;SQLite3 :: querySingle&lt;/a&gt; &amp;mdash;クエリを実行し、単一の結果を返す</target>
        </trans-unit>
        <trans-unit id="c7f5bb728a0f7e4a69aa0875c22335880eced5bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3.version&quot;&gt;SQLite3::version&lt;/a&gt; &amp;mdash; Returns the SQLite3 library version as a string constant and as a number</source>
          <target state="translated">&lt;a href=&quot;sqlite3.version&quot;&gt;SQLite3 :: version&lt;/a&gt; &amp;mdash; SQLite3ライブラリのバージョンを文字列定数および数値として返す</target>
        </trans-unit>
        <trans-unit id="351efe8d1161c4411b38c82b96554750091dd62d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.columnname&quot;&gt;SQLite3Result::columnName&lt;/a&gt; &amp;mdash; Returns the name of the nth column</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.columnname&quot;&gt;SQLite3Result :: columnName&lt;/a&gt; &amp;mdash; n番目の列の名前を返す</target>
        </trans-unit>
        <trans-unit id="c9fd6cbd4728194e3769b3e8cc505d89400bf74e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.columntype&quot;&gt;SQLite3Result::columnType&lt;/a&gt; &amp;mdash; Returns the type of the nth column</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.columntype&quot;&gt;SQLite3Result :: columnType&lt;/a&gt; &amp;mdash; n番目の列のタイプを返す</target>
        </trans-unit>
        <trans-unit id="d92a0e672afad901065ec7ae80cc8788fe8166c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.fetcharray&quot;&gt;SQLite3Result::fetchArray&lt;/a&gt; &amp;mdash; Fetches a result row as an associative or numerically indexed array or both</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.fetcharray&quot;&gt;SQLite3Result :: fetchArray&lt;/a&gt; &amp;mdash;結果の行を連想配列または数値でインデックス付けされた配列、あるいはその両方として取得する</target>
        </trans-unit>
        <trans-unit id="cbc65407da102569ffd016bec5fe8e557e5fd1ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.finalize&quot;&gt;SQLite3Result::finalize&lt;/a&gt; &amp;mdash; Closes the result set</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.finalize&quot;&gt;SQLite3Result :: finalize&lt;/a&gt; &amp;mdash;結果セットを閉じる</target>
        </trans-unit>
        <trans-unit id="ceb45088c5b3d6f706c8e5a032ec76c1a3515978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.numcolumns&quot;&gt;SQLite3Result::numColumns&lt;/a&gt; &amp;mdash; Returns the number of columns in the result set</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.numcolumns&quot;&gt;SQLite3Result :: numColumns&lt;/a&gt; &amp;mdash;結果セットの列数を返す</target>
        </trans-unit>
        <trans-unit id="a8c07ebda873efe84983421695e6ba1635e3b72b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3result.reset&quot;&gt;SQLite3Result::reset&lt;/a&gt; &amp;mdash; Resets the result set back to the first row</source>
          <target state="translated">&lt;a href=&quot;sqlite3result.reset&quot;&gt;SQLite3Result :: reset&lt;/a&gt; &amp;mdash;結果セットを最初の行にリセットする</target>
        </trans-unit>
        <trans-unit id="6a8c9621e843bd463365f8d7d38ecb6594e040dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.bindparam&quot;&gt;SQLite3Stmt::bindParam()&lt;/a&gt; - Binds a parameter to a statement variable</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.bindparam&quot;&gt;SQLite3Stmt :: bindParam（）&lt;/a&gt; -パラメータをステートメント変数にバインドする</target>
        </trans-unit>
        <trans-unit id="52b5b875df5ed1f8318b86c8e683c2b342b44d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.bindparam&quot;&gt;SQLite3Stmt::bindParam&lt;/a&gt; &amp;mdash; Binds a parameter to a statement variable</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.bindparam&quot;&gt;SQLite3Stmt :: bindParam&lt;/a&gt; &amp;mdash;パラメータをステートメント変数にバインドする</target>
        </trans-unit>
        <trans-unit id="4847eab2c8cebd23cae6b733ad8d8f8d18e9a302" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.bindvalue&quot;&gt;SQLite3Stmt::bindValue()&lt;/a&gt; - Binds the value of a parameter to a statement variable</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.bindvalue&quot;&gt;SQLite3Stmt :: bindValue（）&lt;/a&gt; -パラメータの値をステートメント変数にバインドする</target>
        </trans-unit>
        <trans-unit id="77fd4d78136a435f0295a8b3fc57db8e35a1cddd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.bindvalue&quot;&gt;SQLite3Stmt::bindValue&lt;/a&gt; &amp;mdash; Binds the value of a parameter to a statement variable</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.bindvalue&quot;&gt;SQLite3Stmt :: bindValue&lt;/a&gt; &amp;mdash;パラメータの値をステートメント変数にバインドする</target>
        </trans-unit>
        <trans-unit id="5deeda94fcc35c434fe4d8f374e6879fd3ea2f7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.clear&quot;&gt;SQLite3Stmt::clear&lt;/a&gt; &amp;mdash; Clears all current bound parameters</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.clear&quot;&gt;SQLite3Stmt :: clear&lt;/a&gt; &amp;mdash;現在バインドされているすべてのパラメーターをクリアする</target>
        </trans-unit>
        <trans-unit id="25717c5c311721651c4b349776b819d1a42ffc75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.close&quot;&gt;SQLite3Stmt::close&lt;/a&gt; &amp;mdash; Closes the prepared statement</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.close&quot;&gt;SQLite3Stmt :: close&lt;/a&gt; &amp;mdash;準備されたステートメントを閉じる</target>
        </trans-unit>
        <trans-unit id="712013395af397474f0cc80c2b28cfba9efedb80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt::execute&lt;/a&gt; &amp;mdash; Executes a prepared statement and returns a result set object</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt :: execute&lt;/a&gt; &amp;mdash;準備されたステートメントを実行し、結果セットオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="7421845dbf43960b162ee3daaea36fb8c7eb000c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.paramcount&quot;&gt;SQLite3Stmt::paramCount()&lt;/a&gt; - Returns the number of parameters within the prepared statement</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.paramcount&quot;&gt;SQLite3Stmt :: paramCount（）&lt;/a&gt; -準備されたステートメント内のパラメーターの数を返す</target>
        </trans-unit>
        <trans-unit id="b873f08d6ff9112ea81e91a4c2d8cad8b01122bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.paramcount&quot;&gt;SQLite3Stmt::paramCount&lt;/a&gt; &amp;mdash; Returns the number of parameters within the prepared statement</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.paramcount&quot;&gt;SQLite3Stmt :: paramCount&lt;/a&gt; &amp;mdash;準備されたステートメント内のパラメーターの数を返す</target>
        </trans-unit>
        <trans-unit id="daefbfd6dc64246d8f9fc3e09ebf87eab21b2db3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.readonly&quot;&gt;SQLite3Stmt::readOnly&lt;/a&gt; &amp;mdash; Returns whether a statement is definitely read only</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.readonly&quot;&gt;SQLite3Stmt :: readOnly&lt;/a&gt; &amp;mdash;ステートメントが確実に読み取り専用かどうかを返す</target>
        </trans-unit>
        <trans-unit id="4d3540bfa7775bea3f8f3fe0abe70f2cf7e56d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset&lt;/a&gt; &amp;mdash; Resets the prepared statement</source>
          <target state="translated">&lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt :: reset&lt;/a&gt; &amp;mdash;準備されたステートメントをリセットする</target>
        </trans-unit>
        <trans-unit id="4a56d34855f5290705eb22a3be191197c3955a31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.construct&quot;&gt;streamWrapper::__construct&lt;/a&gt; &amp;mdash; Constructs a new stream wrapper</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.construct&quot;&gt;streamWrapper :: __ construct&lt;/a&gt; &amp;mdash;新しいストリームラッパーを構築する</target>
        </trans-unit>
        <trans-unit id="a9939174f1c423cc2201ae6c976c41f46ce4c8d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.destruct&quot;&gt;streamWrapper::__destruct&lt;/a&gt; &amp;mdash; Destructs an existing stream wrapper</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.destruct&quot;&gt;streamWrapper :: __ destruct&lt;/a&gt; &amp;mdash;既存のストリームラッパーを破棄する</target>
        </trans-unit>
        <trans-unit id="ba8914e40db713fead9ac442824f7cbf16a5de70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-closedir&quot;&gt;streamWrapper::dir_closedir()&lt;/a&gt; - Close directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-closedir&quot;&gt;streamWrapper :: dir_closedir（）&lt;/a&gt; -ディレクトリハンドルを閉じる</target>
        </trans-unit>
        <trans-unit id="b7ea3a5e58afbb98ea23bdde61e34a1546891abe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-closedir&quot;&gt;streamWrapper::dir_closedir&lt;/a&gt; &amp;mdash; Close directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-closedir&quot;&gt;streamWrapper :: dir_closedir&lt;/a&gt; &amp;mdash;ディレクトリハンドルを閉じる</target>
        </trans-unit>
        <trans-unit id="0ac0bd1864f6e3217cabcbea3584949b90370e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-opendir&quot;&gt;streamWrapper::dir_opendir()&lt;/a&gt; - Open directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-opendir&quot;&gt;streamWrapper :: dir_opendir（）&lt;/a&gt; -ディレクトリハンドルを開く</target>
        </trans-unit>
        <trans-unit id="f3397db892d3b60a86d94aeba172d6720b4755b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-opendir&quot;&gt;streamWrapper::dir_opendir&lt;/a&gt; &amp;mdash; Open directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-opendir&quot;&gt;streamWrapper :: dir_opendir&lt;/a&gt; &amp;mdash;ディレクトリハンドルを開く</target>
        </trans-unit>
        <trans-unit id="40f607056b19f7b847385cadf72481f93e885016" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-readdir&quot;&gt;streamWrapper::dir_readdir()&lt;/a&gt; - Read entry from directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-readdir&quot;&gt;streamWrapper :: dir_readdir（）&lt;/a&gt; -ディレクトリハンドルからエントリを読み取る</target>
        </trans-unit>
        <trans-unit id="1a65a3f38a80e6f77bcbe8e6b02022388ce7fe1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-readdir&quot;&gt;streamWrapper::dir_readdir&lt;/a&gt; &amp;mdash; Read entry from directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-readdir&quot;&gt;streamWrapper :: dir_readdir&lt;/a&gt; &amp;mdash;ディレクトリハンドルからエントリを読み取る</target>
        </trans-unit>
        <trans-unit id="179e89eb728601fa487c43c2e57e4cf9bf18d58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.dir-rewinddir&quot;&gt;streamWrapper::dir_rewinddir&lt;/a&gt; &amp;mdash; Rewind directory handle</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.dir-rewinddir&quot;&gt;streamWrapper :: dir_rewinddir&lt;/a&gt; &amp;mdash;ディレクトリハンドルを巻き戻す</target>
        </trans-unit>
        <trans-unit id="1ce8f4888e8ef7bbfb29d88241f0b4409d769be0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.mkdir&quot;&gt;streamWrapper::mkdir&lt;/a&gt; &amp;mdash; Create a directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.mkdir&quot;&gt;streamWrapper :: mkdir&lt;/a&gt; &amp;mdash;ディレクトリを作成する</target>
        </trans-unit>
        <trans-unit id="97e3f85ed117dde79169b7749c698a9fabfa57ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.mkdir&quot;&gt;streamwrapper::mkdir()&lt;/a&gt; - Create a directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.mkdir&quot;&gt;streamwrapper :: mkdir（）&lt;/a&gt; -ディレクトリを作成する</target>
        </trans-unit>
        <trans-unit id="dfe5463ec4d2c7eb669421fdee8788a98f18069c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.rename&quot;&gt;streamWrapper::rename&lt;/a&gt; &amp;mdash; Renames a file or directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.rename&quot;&gt;streamWrapper :: rename&lt;/a&gt; &amp;mdash;ファイルまたはディレクトリの名前を変更する</target>
        </trans-unit>
        <trans-unit id="0b8aa3dc09749f50c571379b81af6970748127fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamWrapper::rmdir()&lt;/a&gt; - Removes a directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamWrapper :: rmdir（）&lt;/a&gt; -ディレクトリを削除する</target>
        </trans-unit>
        <trans-unit id="9bcdca346c677cb8273d2e1ac7fbba15ba9d7e07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamWrapper::rmdir&lt;/a&gt; &amp;mdash; Removes a directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamWrapper :: rmdir&lt;/a&gt; &amp;mdash;ディレクトリを削除する</target>
        </trans-unit>
        <trans-unit id="b766df88e765a6afb0d05fbdd67cd37cadb6ab63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamwrapper::rmdir()&lt;/a&gt; - Removes a directory</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.rmdir&quot;&gt;streamwrapper :: rmdir（）&lt;/a&gt; -ディレクトリを削除する</target>
        </trans-unit>
        <trans-unit id="0ea913976e469266e96a454718ca74bce96e433d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-cast&quot;&gt;streamWrapper::stream_cast&lt;/a&gt; &amp;mdash; Retrieve the underlaying resource</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-cast&quot;&gt;streamWrapper :: stream_cast&lt;/a&gt; &amp;mdash;基になるリソースを取得する</target>
        </trans-unit>
        <trans-unit id="37912524b00e678956bdefa9393db6656a03374a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-close&quot;&gt;streamWrapper::stream_close&lt;/a&gt; &amp;mdash; Close a resource</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-close&quot;&gt;streamWrapper :: stream_close&lt;/a&gt; &amp;mdash;リソースを閉じる</target>
        </trans-unit>
        <trans-unit id="5ae513e14b36a1642c2d7794813ea3046c49d815" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper::stream_eof()&lt;/a&gt; is called directly after calling &lt;strong&gt;streamWrapper::stream_read()&lt;/strong&gt; to check if</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper :: &lt;/a&gt;&lt;strong&gt;stream_read（）&lt;/strong&gt;を呼び出した&lt;strong&gt;直後に&lt;/strong&gt;streamWrapper :: stream_eof（）を呼び出して、</target>
        </trans-unit>
        <trans-unit id="70ed127e02f936e015f3541b567471a0ca6f0a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper::stream_eof&lt;/a&gt; &amp;mdash; Tests for end-of-file on a file pointer</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper :: stream_eof&lt;/a&gt; &amp;mdash;ファイルポインタのファイルの終わりをテストする</target>
        </trans-unit>
        <trans-unit id="5f2ce7e3c79c4a30d86bf51f11343a9537b400ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-flush&quot;&gt;streamWrapper::stream_flush&lt;/a&gt; &amp;mdash; Flushes the output</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-flush&quot;&gt;streamWrapper :: stream_flush&lt;/a&gt; &amp;mdash;出力をフラッシュする</target>
        </trans-unit>
        <trans-unit id="f6b175c6305009a9f0e527e96b16d5401a344750" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-lock&quot;&gt;streamWrapper::stream_lock&lt;/a&gt; &amp;mdash; Advisory file locking</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-lock&quot;&gt;streamWrapper :: stream_lock&lt;/a&gt; &amp;mdash; 通知ファイルのロック</target>
        </trans-unit>
        <trans-unit id="4e0dbc94fc66e3bf3b02cf9e3e83013e3990da8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-metadata&quot;&gt;streamWrapper::stream_metadata&lt;/a&gt; &amp;mdash; Change stream metadata</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-metadata&quot;&gt;streamWrapper :: stream_metadata&lt;/a&gt; &amp;mdash;ストリームのメタデータを変更する</target>
        </trans-unit>
        <trans-unit id="bbfccba87a7fc478ef6e55ea3693c43d66779a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-open&quot;&gt;streamWrapper::stream_open&lt;/a&gt; &amp;mdash; Opens file or URL</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-open&quot;&gt;streamWrapper :: stream_open&lt;/a&gt; &amp;mdash;ファイルまたはURLを開く</target>
        </trans-unit>
        <trans-unit id="1f5d0131306cf5e213d235952b36276e5b80130e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-read&quot;&gt;streamWrapper::stream_read&lt;/a&gt; &amp;mdash; Read from stream</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-read&quot;&gt;streamWrapper :: stream_read&lt;/a&gt; &amp;mdash;ストリームから読み取る</target>
        </trans-unit>
        <trans-unit id="7d371215b02f37503b2aede2854d0315e3a780d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-seek&quot;&gt;streamWrapper::stream_seek&lt;/a&gt; &amp;mdash; Seeks to specific location in a stream</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-seek&quot;&gt;streamWrapper :: stream_seek&lt;/a&gt; &amp;mdash;ストリーム内の特定の場所にシークする</target>
        </trans-unit>
        <trans-unit id="d0715b64407a14ee66b3758cf5367692c38307c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-set-option&quot;&gt;streamWrapper::stream_set_option&lt;/a&gt; &amp;mdash; Change stream options</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-set-option&quot;&gt;streamWrapper :: stream_set_option&lt;/a&gt; &amp;mdash;ストリームオプションを変更する</target>
        </trans-unit>
        <trans-unit id="dda5585088ea83a7c4bed200071b329ff3065e65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-stat&quot;&gt;streamWrapper::stream_stat&lt;/a&gt; &amp;mdash; Retrieve information about a file resource</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-stat&quot;&gt;streamWrapper :: stream_stat&lt;/a&gt; &amp;mdash;ファイルリソースに関する情報を取得する</target>
        </trans-unit>
        <trans-unit id="46c0fd5076bf0f355e2ca593df61158bb775a2d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-stat&quot;&gt;streamwrapper::stream_stat()&lt;/a&gt; - Retrieve information about a file resource</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-stat&quot;&gt;streamwrapper :: stream_stat（）&lt;/a&gt; -ファイルリソースに関する情報を取得する</target>
        </trans-unit>
        <trans-unit id="bf105a5d599b8db2693543635ed61091635ec65a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-tell&quot;&gt;streamWrapper::stream_tell&lt;/a&gt; &amp;mdash; Retrieve the current position of a stream</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-tell&quot;&gt;streamWrapper :: stream_tell&lt;/a&gt; &amp;mdash;ストリームの現在の位置を取得する</target>
        </trans-unit>
        <trans-unit id="ef11cb49b5eac721ed7ea7ceced5e9abc0d58602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-truncate&quot;&gt;streamWrapper::stream_truncate&lt;/a&gt; &amp;mdash; Truncate stream</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-truncate&quot;&gt;streamWrapper :: stream_truncate&lt;/a&gt; &amp;mdash;ストリームを切り捨てる</target>
        </trans-unit>
        <trans-unit id="8dc2cd462691d8ad5968366a4ffacb6fe652343b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.stream-write&quot;&gt;streamWrapper::stream_write&lt;/a&gt; &amp;mdash; Write to stream</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-write&quot;&gt;streamWrapper :: stream_write&lt;/a&gt; &amp;mdash;ストリームに書き込む</target>
        </trans-unit>
        <trans-unit id="e09084b7a6db18abffe752e36e3c4c0bafb5c4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.unlink&quot;&gt;streamWrapper::unlink&lt;/a&gt; &amp;mdash; Delete a file</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.unlink&quot;&gt;streamWrapper :: unlink&lt;/a&gt; &amp;mdash;ファイルを削除する</target>
        </trans-unit>
        <trans-unit id="b907f5cd912a3c809dad0b4584599991d1f14232" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.unlink&quot;&gt;streamwrapper::unlink()&lt;/a&gt; - Delete a file</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.unlink&quot;&gt;streamwrapper :: unlink（）&lt;/a&gt; -ファイルを削除する</target>
        </trans-unit>
        <trans-unit id="483f02b48f57655c74f086827e42ee278e614681" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.url-stat&quot;&gt;streamWrapper::url_stat&lt;/a&gt; &amp;mdash; Retrieve information about a file</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.url-stat&quot;&gt;streamWrapper :: url_stat&lt;/a&gt; &amp;mdash;ファイルに関する情報を取得する</target>
        </trans-unit>
        <trans-unit id="3f740ba3f57295b951550c90f1e4bc277d2a1fb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;streamwrapper.url-stat&quot;&gt;streamwrapper::url_stat()&lt;/a&gt; - Retrieve information about a file</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.url-stat&quot;&gt;streamwrapper :: url_stat（）&lt;/a&gt; -ファイルに関する情報を取得する</target>
        </trans-unit>
        <trans-unit id="bb72d16fc4628bd4ee13e25db4759e21d8d945f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.construct&quot;&gt;SyncEvent::__construct&lt;/a&gt; &amp;mdash; Constructs a new SyncEvent object</source>
          <target state="translated">&lt;a href=&quot;syncevent.construct&quot;&gt;SyncEvent :: __ construct&lt;/a&gt; &amp;mdash;新しいSyncEventオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="312e1cf3eb7fade9a5f29c6461abea0c8388b2b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.fire&quot;&gt;SyncEvent::fire()&lt;/a&gt; - Fires/sets the event</source>
          <target state="translated">&lt;a href=&quot;syncevent.fire&quot;&gt;SyncEvent :: fire（）&lt;/a&gt; -イベントを発生/設定する</target>
        </trans-unit>
        <trans-unit id="8a496174dd9fcd28d06475dcba3b22b026c0b34a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.fire&quot;&gt;SyncEvent::fire&lt;/a&gt; &amp;mdash; Fires/sets the event</source>
          <target state="translated">&lt;a href=&quot;syncevent.fire&quot;&gt;SyncEvent :: fire&lt;/a&gt; &amp;mdash;イベントを発生/設定する</target>
        </trans-unit>
        <trans-unit id="aee96300c04dff2bd3e3b55a0611f851d025f54c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.reset&quot;&gt;SyncEvent::reset()&lt;/a&gt; - Resets a manual event</source>
          <target state="translated">&lt;a href=&quot;syncevent.reset&quot;&gt;SyncEvent :: reset（）&lt;/a&gt; -手動イベントをリセットする</target>
        </trans-unit>
        <trans-unit id="478c0b150689ce7361904731a43f58ec431e8e50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.reset&quot;&gt;SyncEvent::reset&lt;/a&gt; &amp;mdash; Resets a manual event</source>
          <target state="translated">&lt;a href=&quot;syncevent.reset&quot;&gt;SyncEvent :: reset&lt;/a&gt; &amp;mdash;手動イベントをリセットする</target>
        </trans-unit>
        <trans-unit id="b892a50f3418eb6ed07d395e572fa846fbe5eb5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.wait&quot;&gt;SyncEvent::wait()&lt;/a&gt; - Waits for the event to be fired/set</source>
          <target state="translated">&lt;a href=&quot;syncevent.wait&quot;&gt;SyncEvent :: wait（）&lt;/a&gt; -イベントが発生/設定されるのを待つ</target>
        </trans-unit>
        <trans-unit id="a4ecb51fb22c2b4ad6e8879161552daa17c1c2be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncevent.wait&quot;&gt;SyncEvent::wait&lt;/a&gt; &amp;mdash; Waits for the event to be fired/set</source>
          <target state="translated">&lt;a href=&quot;syncevent.wait&quot;&gt;SyncEvent :: wait&lt;/a&gt; &amp;mdash;イベントが発生/設定されるのを待つ</target>
        </trans-unit>
        <trans-unit id="15bebadbe3a9297aae76fa4707095f6b275a04d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncmutex.construct&quot;&gt;SyncMutex::__construct&lt;/a&gt; &amp;mdash; Constructs a new SyncMutex object</source>
          <target state="translated">&lt;a href=&quot;syncmutex.construct&quot;&gt;SyncMutex :: __ construct&lt;/a&gt; &amp;mdash;新しいSyncMutexオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="ed2052db4aeceaf52ffdaff7cc83868d1abc500d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncmutex.lock&quot;&gt;SyncMutex::lock()&lt;/a&gt; - Waits for an exclusive lock</source>
          <target state="translated">&lt;a href=&quot;syncmutex.lock&quot;&gt;SyncMutex :: lock（）&lt;/a&gt; -排他ロックを待つ</target>
        </trans-unit>
        <trans-unit id="6df317425ba7e89c9a72308b9d3fc14220ac10eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncmutex.lock&quot;&gt;SyncMutex::lock&lt;/a&gt; &amp;mdash; Waits for an exclusive lock</source>
          <target state="translated">&lt;a href=&quot;syncmutex.lock&quot;&gt;SyncMutex :: lock&lt;/a&gt; &amp;mdash;排他ロックを待つ</target>
        </trans-unit>
        <trans-unit id="40ddc6fa13ba37a0219c3d55afae03e9a6949b46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncmutex.unlock&quot;&gt;SyncMutex::unlock()&lt;/a&gt; - Unlocks the mutex</source>
          <target state="translated">&lt;a href=&quot;syncmutex.unlock&quot;&gt;SyncMutex :: unlock（）&lt;/a&gt; -ミューテックスをロック解除する</target>
        </trans-unit>
        <trans-unit id="41c45f78e15565c12f8f25ecbb607c0f892f0bb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncmutex.unlock&quot;&gt;SyncMutex::unlock&lt;/a&gt; &amp;mdash; Unlocks the mutex</source>
          <target state="translated">&lt;a href=&quot;syncmutex.unlock&quot;&gt;SyncMutex :: unlock&lt;/a&gt; &amp;mdash; mutexをロック解除する</target>
        </trans-unit>
        <trans-unit id="3f896b67e69def811b11c423ed9ca97129439e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.construct&quot;&gt;SyncReaderWriter::__construct&lt;/a&gt; &amp;mdash; Constructs a new SyncReaderWriter object</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.construct&quot;&gt;SyncReaderWriter :: __ construct&lt;/a&gt; &amp;mdash;新しいSyncReaderWriterオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="1e2b6926b41963681a961dcbc132a85ce7ce7651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.readlock&quot;&gt;SyncReaderWriter::readlock()&lt;/a&gt; - Waits for a read lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.readlock&quot;&gt;SyncReaderWriter :: readlock（）&lt;/a&gt; -読み取りロックを待つ</target>
        </trans-unit>
        <trans-unit id="620ff124836cd9b90a72caadd0b3edd22c03b3b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.readlock&quot;&gt;SyncReaderWriter::readlock&lt;/a&gt; &amp;mdash; Waits for a read lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.readlock&quot;&gt;SyncReaderWriter :: readlock&lt;/a&gt; &amp;mdash;読み取りロックを待つ</target>
        </trans-unit>
        <trans-unit id="a20fdd07a97b1fead0f20fdd5a94aca211882def" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.readunlock&quot;&gt;SyncReaderWriter::readunlock()&lt;/a&gt; - Releases a read lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.readunlock&quot;&gt;SyncReaderWriter :: readunlock（）&lt;/a&gt; -読み取りロックを解放する</target>
        </trans-unit>
        <trans-unit id="a1f5f19d7417b15be2c8fc0798096c27f18a270e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.readunlock&quot;&gt;SyncReaderWriter::readunlock&lt;/a&gt; &amp;mdash; Releases a read lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.readunlock&quot;&gt;SyncReaderWriter :: readunlock&lt;/a&gt; &amp;mdash;読み取りロックを解放する</target>
        </trans-unit>
        <trans-unit id="4ab325f302830fcec5c6c2c933112e48219c525b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.writelock&quot;&gt;SyncReaderWriter::writelock()&lt;/a&gt; - Waits for an exclusive write lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.writelock&quot;&gt;SyncReaderWriter :: writelock（）&lt;/a&gt; -排他的な書き込みロックを待つ</target>
        </trans-unit>
        <trans-unit id="5352813bd2919bcbd3ee3106a24acd51a39eed89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.writelock&quot;&gt;SyncReaderWriter::writelock&lt;/a&gt; &amp;mdash; Waits for an exclusive write lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.writelock&quot;&gt;SyncReaderWriter :: writelock&lt;/a&gt; &amp;mdash;排他的な書き込みロックを待つ</target>
        </trans-unit>
        <trans-unit id="151ed88473d3643b6fb3ebd353211d9679e957f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.writeunlock&quot;&gt;SyncReaderWriter::writeunlock()&lt;/a&gt; - Releases a write lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.writeunlock&quot;&gt;SyncReaderWriter :: writeunlock（）&lt;/a&gt; -書き込みロックを解放する</target>
        </trans-unit>
        <trans-unit id="28c5e79caa49e7a101c8169e42b91f69455d52d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncreaderwriter.writeunlock&quot;&gt;SyncReaderWriter::writeunlock&lt;/a&gt; &amp;mdash; Releases a write lock</source>
          <target state="translated">&lt;a href=&quot;syncreaderwriter.writeunlock&quot;&gt;SyncReaderWriter :: writeunlock&lt;/a&gt; &amp;mdash;書き込みロックを解放する</target>
        </trans-unit>
        <trans-unit id="8022bcd271a4dc3d933f83a8cbd578134db0be80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsemaphore.construct&quot;&gt;SyncSemaphore::__construct&lt;/a&gt; &amp;mdash; Constructs a new SyncSemaphore object</source>
          <target state="translated">&lt;a href=&quot;syncsemaphore.construct&quot;&gt;SyncSemaphore :: __ construct&lt;/a&gt; &amp;mdash;新しいSyncSemaphoreオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="6f9fe00e18706df9036a4e58d8811f4a89317551" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsemaphore.lock&quot;&gt;SyncSemaphore::lock()&lt;/a&gt; - Decreases the count of the semaphore or waits</source>
          <target state="translated">&lt;a href=&quot;syncsemaphore.lock&quot;&gt;SyncSemaphore :: lock（）&lt;/a&gt; -セマフォの数を減らすか、待機する</target>
        </trans-unit>
        <trans-unit id="e4131128aa7698621f3f650e4e560236342b87f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsemaphore.lock&quot;&gt;SyncSemaphore::lock&lt;/a&gt; &amp;mdash; Decreases the count of the semaphore or waits</source>
          <target state="translated">&lt;a href=&quot;syncsemaphore.lock&quot;&gt;SyncSemaphore :: lock&lt;/a&gt; &amp;mdash;セマフォの数を減らすか待機する</target>
        </trans-unit>
        <trans-unit id="3cea28289c58d03c75218f6f08d65c01e2367e23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsemaphore.unlock&quot;&gt;SyncSemaphore::unlock()&lt;/a&gt; - Increases the count of the semaphore</source>
          <target state="translated">&lt;a href=&quot;syncsemaphore.unlock&quot;&gt;SyncSemaphore :: unlock（）&lt;/a&gt; -セマフォの数を増やす</target>
        </trans-unit>
        <trans-unit id="2c7e13684546808998e4e53cf714f9d220b04ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsemaphore.unlock&quot;&gt;SyncSemaphore::unlock&lt;/a&gt; &amp;mdash; Increases the count of the semaphore</source>
          <target state="translated">&lt;a href=&quot;syncsemaphore.unlock&quot;&gt;SyncSemaphore :: unlock&lt;/a&gt; &amp;mdash;セマフォの数を増やす</target>
        </trans-unit>
        <trans-unit id="d6a0bf702c07d8884ddea03805f5956240521b90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory::__construct()&lt;/a&gt; - Constructs a new SyncSharedMemory object</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory :: __ construct（）&lt;/a&gt; -新しいSyncSharedMemoryオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="f4d3064a7027094579a0de0f2326348dd4187cf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory::__construct&lt;/a&gt; &amp;mdash; Constructs a new SyncSharedMemory object</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.construct&quot;&gt;SyncSharedMemory :: __ construct&lt;/a&gt; &amp;mdash;新しいSyncSharedMemoryオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="723151cbacbd799c53370bc7729b28f6eccc39e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.first&quot;&gt;SyncSharedMemory::first()&lt;/a&gt; - Check to see if the object is the first instance system-wide of named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.first&quot;&gt;SyncSharedMemory :: first（）&lt;/a&gt; -オブジェクトがシステム全体の名前付き共有メモリの最初のインスタンスかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="d07ed5d50ddfbd6eb952d739ca0fb8166bf869fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.first&quot;&gt;SyncSharedMemory::first&lt;/a&gt; &amp;mdash; Check to see if the object is the first instance system-wide of named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.first&quot;&gt;SyncSharedMemory :: first&lt;/a&gt; &amp;mdash;オブジェクトが名前付き共有メモリのシステム全体の最初のインスタンスであるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="2c8b30dfd6d6fba3274181a65e0237a37c25a68c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.read&quot;&gt;SyncSharedMemory::read()&lt;/a&gt; - Copy data from named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.read&quot;&gt;SyncSharedMemory :: read（）&lt;/a&gt; -名前付き共有メモリからデータをコピーする</target>
        </trans-unit>
        <trans-unit id="dc84370fa85caad65bbd4c2ce8093989ceb0d9c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.read&quot;&gt;SyncSharedMemory::read&lt;/a&gt; &amp;mdash; Copy data from named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.read&quot;&gt;SyncSharedMemory :: read&lt;/a&gt; &amp;mdash;指定した共有メモリからデータをコピーする</target>
        </trans-unit>
        <trans-unit id="57f8a25c9bc02fc4970c9f10280ab9500eb19266" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.size&quot;&gt;SyncSharedMemory::size()&lt;/a&gt; - Returns the size of the named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.size&quot;&gt;SyncSharedMemory :: size（）&lt;/a&gt; -指定した共有メモリのサイズを返す</target>
        </trans-unit>
        <trans-unit id="adaa058fb1ef014c3083fb290d7c821a7cb6be99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.size&quot;&gt;SyncSharedMemory::size&lt;/a&gt; &amp;mdash; Returns the size of the named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.size&quot;&gt;SyncSharedMemory :: size&lt;/a&gt; &amp;mdash;指定した共有メモリのサイズを返す</target>
        </trans-unit>
        <trans-unit id="475e523a6a2febe90dce50a1673979245a4d4a36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.write&quot;&gt;SyncSharedMemory::write()&lt;/a&gt; - Copy data to named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.write&quot;&gt;SyncSharedMemory :: write（）&lt;/a&gt; -データを名前付きの共有メモリにコピーする</target>
        </trans-unit>
        <trans-unit id="3f5c495e5fc56004b89b13adafa12e96010d5720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syncsharedmemory.write&quot;&gt;SyncSharedMemory::write&lt;/a&gt; &amp;mdash; Copy data to named shared memory</source>
          <target state="translated">&lt;a href=&quot;syncsharedmemory.write&quot;&gt;SyncSharedMemory :: write&lt;/a&gt; &amp;mdash;指定した共有メモリにデータをコピーする</target>
        </trans-unit>
        <trans-unit id="1fd55ca33d4492240938767a26fda2059c818565" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.detach&quot;&gt;Thread::detach&lt;/a&gt; &amp;mdash; Execution</source>
          <target state="translated">&lt;a href=&quot;thread.detach&quot;&gt;Thread :: detach&lt;/a&gt; &amp;mdash;実行</target>
        </trans-unit>
        <trans-unit id="4ffaaf6bb7ef689a3e62c046732cb7a9b1134824" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.getcreatorid&quot;&gt;Thread::getCreatorId&lt;/a&gt; &amp;mdash; Identification</source>
          <target state="translated">&lt;a href=&quot;thread.getcreatorid&quot;&gt;Thread :: getCreatorId&lt;/a&gt; &amp;mdash;識別</target>
        </trans-unit>
        <trans-unit id="949b790a4cb0ab0b157bd97550735fb50672c05a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.getcurrentthread&quot;&gt;Thread::getCurrentThread&lt;/a&gt; &amp;mdash; Identification</source>
          <target state="translated">&lt;a href=&quot;thread.getcurrentthread&quot;&gt;Thread :: getCurrentThread&lt;/a&gt; &amp;mdash;識別</target>
        </trans-unit>
        <trans-unit id="7b0a712b3855036beb1d8ac0da5d0c7d6b39ebce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.getcurrentthreadid&quot;&gt;Thread::getCurrentThreadId&lt;/a&gt; &amp;mdash; Identification</source>
          <target state="translated">&lt;a href=&quot;thread.getcurrentthreadid&quot;&gt;Thread :: getCurrentThreadId&lt;/a&gt; &amp;mdash;識別</target>
        </trans-unit>
        <trans-unit id="f834ef9bb72addc4164cbcb37868f663c2c23811" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.getthreadid&quot;&gt;Thread::getThreadId&lt;/a&gt; &amp;mdash; Identification</source>
          <target state="translated">&lt;a href=&quot;thread.getthreadid&quot;&gt;Thread :: getThreadId&lt;/a&gt; &amp;mdash;識別</target>
        </trans-unit>
        <trans-unit id="e1c005dbf2160c0998f2e1c27b6cb8e6134216c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.globally&quot;&gt;Thread::globally&lt;/a&gt; &amp;mdash; Execution</source>
          <target state="translated">&lt;a href=&quot;thread.globally&quot;&gt;Thread :: globally&lt;/a&gt; &amp;mdash;実行</target>
        </trans-unit>
        <trans-unit id="f8680c277d1436e49d08d62a63d641d141be45df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.isjoined&quot;&gt;Thread::isJoined&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;thread.isjoined&quot;&gt;Thread :: isJoined&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="57002f01998e5474324e4c1b640d30916fc0ad9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.isrunning&quot;&gt;Threaded::isRunning&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;thread.isrunning&quot;&gt;Threaded :: isRunning&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="56131e5512ca243feedbdaa78f0c74d867882dc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.isstarted&quot;&gt;Thread::isStarted&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;thread.isstarted&quot;&gt;Thread :: isStarted&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="8a01079473a1b17eb1f56eebcb5d36f8dc982a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.join&quot;&gt;Thread::join&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;thread.join&quot;&gt;Thread :: join&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="dd471011d356c3bf304d0e6b19ad6332753cbf3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.kill&quot;&gt;Thread::kill&lt;/a&gt; &amp;mdash; Execution</source>
          <target state="translated">&lt;a href=&quot;thread.kill&quot;&gt;Thread :: kill&lt;/a&gt; &amp;mdash;実行</target>
        </trans-unit>
        <trans-unit id="ae37de3182006395a518ab4c88730cfda8df269f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread.start&quot;&gt;Thread::start&lt;/a&gt; &amp;mdash; Execution</source>
          <target state="translated">&lt;a href=&quot;thread.start&quot;&gt;Thread :: start&lt;/a&gt; &amp;mdash;実行</target>
        </trans-unit>
        <trans-unit id="d68e16c84914d0bb7890351ea36203a932597186" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.chunk&quot;&gt;Threaded::chunk&lt;/a&gt; &amp;mdash; Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.chunk&quot;&gt;Threaded :: chunk&lt;/a&gt; &amp;mdash;操作</target>
        </trans-unit>
        <trans-unit id="8382fbf6d390e0fc9ad61cd13aa7399dff5f935f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.count&quot;&gt;Threaded::count&lt;/a&gt; &amp;mdash; Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.count&quot;&gt;Threaded :: count&lt;/a&gt; &amp;mdash;操作</target>
        </trans-unit>
        <trans-unit id="ed18e9931e1a140ac63657bd094260d58c94f7b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.extend&quot;&gt;Threaded::extend&lt;/a&gt; &amp;mdash; Runtime Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.extend&quot;&gt;Threaded :: extend&lt;/a&gt; &amp;mdash;ランタイム操作</target>
        </trans-unit>
        <trans-unit id="13cf0706094775566532408e55e5a163f75b1474" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.from&quot;&gt;Threaded::from&lt;/a&gt; &amp;mdash; Creation</source>
          <target state="translated">&lt;a href=&quot;threaded.from&quot;&gt;Threaded :: from&lt;/a&gt; &amp;mdash;作成</target>
        </trans-unit>
        <trans-unit id="8592289c83ae41e5f62485064cf5c67411bdf721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.getterminationinfo&quot;&gt;Threaded::getTerminationInfo&lt;/a&gt; &amp;mdash; Error Detection</source>
          <target state="translated">&lt;a href=&quot;threaded.getterminationinfo&quot;&gt;Threaded :: getTerminationInfo&lt;/a&gt; &amp;mdash;エラー検出</target>
        </trans-unit>
        <trans-unit id="6846672e0cf628c4259bd37337cfe2fa5d855651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.isterminated&quot;&gt;Threaded::isTerminated&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;threaded.isterminated&quot;&gt;Threaded :: isTerminated&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="cedae87499a13f21ef831e2def1adc32be75cb79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.iswaiting&quot;&gt;Threaded::isWaiting&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;threaded.iswaiting&quot;&gt;Threaded :: isWaiting&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="fe391b2080f839351c4084585dead6c9ae063004" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.lock&quot;&gt;Threaded::lock&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.lock&quot;&gt;Threaded :: lock&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="e9b0f3c30b282c4b9972488af31f05bc97dc5fad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.merge&quot;&gt;Threaded::merge&lt;/a&gt; &amp;mdash; Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.merge&quot;&gt;Threaded :: merge&lt;/a&gt; &amp;mdash;操作</target>
        </trans-unit>
        <trans-unit id="a6c3abe2e37d14ed131b2e2a57a4826b629d2ffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.notify&quot;&gt;Threaded::notify&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.notify&quot;&gt;Threaded :: notify&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="d9fa01eb9e6a84731b38a43c539b480020e5bd78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.notifyone&quot;&gt;Threaded::notifyOne&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.notifyone&quot;&gt;Threaded :: notifyOne&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="2981d2142b383be1db57c3e87f08d7e2f5ec9472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.pop&quot;&gt;Threaded::pop&lt;/a&gt; &amp;mdash; Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.pop&quot;&gt;Threaded :: pop&lt;/a&gt; &amp;mdash;操作</target>
        </trans-unit>
        <trans-unit id="b58e35fc05e7514d3b3de52584f5c15497badf53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.run&quot;&gt;Threaded::run&lt;/a&gt; &amp;mdash; Execution</source>
          <target state="translated">&lt;a href=&quot;threaded.run&quot;&gt;Threaded :: run&lt;/a&gt; &amp;mdash;実行</target>
        </trans-unit>
        <trans-unit id="f24d691635b0ab3a83649341ef0b3cd851cd972d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.shift&quot;&gt;Threaded::shift&lt;/a&gt; &amp;mdash; Manipulation</source>
          <target state="translated">&lt;a href=&quot;threaded.shift&quot;&gt;Threaded :: shift&lt;/a&gt; &amp;mdash;操作</target>
        </trans-unit>
        <trans-unit id="d6a85a6f1a32cf5f8c39d29fb4f6d2f76a7443e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.synchronized&quot;&gt;Threaded::synchronized&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.synchronized&quot;&gt;Threaded :: synchronized&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="e569581199b77b597c83323c76bd4439a380da99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.unlock&quot;&gt;Threaded::unlock&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.unlock&quot;&gt;Threaded :: unlock&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="28283298684aac7e8c0fbaf97260258c9dad4f6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threaded.wait&quot;&gt;Threaded::wait&lt;/a&gt; &amp;mdash; Synchronization</source>
          <target state="translated">&lt;a href=&quot;threaded.wait&quot;&gt;Threaded :: wait&lt;/a&gt; &amp;mdash;同期</target>
        </trans-unit>
        <trans-unit id="c863641253fc03ab5460511326c8194b9326e6f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getcode&quot;&gt;Throwable::getCode()&lt;/a&gt; - Gets the exception code</source>
          <target state="translated">&lt;a href=&quot;throwable.getcode&quot;&gt;Throwable :: getCode（）&lt;/a&gt; -例外コードを取得する</target>
        </trans-unit>
        <trans-unit id="0139b18c9d75f5d0c9508466e294d15397669573" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getcode&quot;&gt;Throwable::getCode&lt;/a&gt; &amp;mdash; Gets the exception code</source>
          <target state="translated">&lt;a href=&quot;throwable.getcode&quot;&gt;Throwable :: getCode&lt;/a&gt; &amp;mdash;例外コードを取得する</target>
        </trans-unit>
        <trans-unit id="4b4ee6e6f7622e8f32e2cd667ba02bebd72523a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getfile&quot;&gt;Throwable::getFile()&lt;/a&gt; - Gets the file in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;throwable.getfile&quot;&gt;Throwable :: getFile（）&lt;/a&gt; -例外が作成されたファイルを取得する</target>
        </trans-unit>
        <trans-unit id="d8a1aed9bb97654bd40caefb9a98c91fff1a2494" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getfile&quot;&gt;Throwable::getFile&lt;/a&gt; &amp;mdash; Gets the file in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;throwable.getfile&quot;&gt;Throwable :: getFile&lt;/a&gt; &amp;mdash;例外が作成されたファイルを取得する</target>
        </trans-unit>
        <trans-unit id="bbded8bf2e67529425875660da77ba78dd8b70d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getline&quot;&gt;Throwable::getLine()&lt;/a&gt; - Gets the line on which the object was instantiated</source>
          <target state="translated">&lt;a href=&quot;throwable.getline&quot;&gt;Throwable :: getLine（）&lt;/a&gt; -オブジェクトがインスタンス化された行を取得する</target>
        </trans-unit>
        <trans-unit id="75994ff350377c75fdbbf814804bf3a9ed4456d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getline&quot;&gt;Throwable::getLine&lt;/a&gt; &amp;mdash; Gets the line on which the object was instantiated</source>
          <target state="translated">&lt;a href=&quot;throwable.getline&quot;&gt;Throwable :: getLine&lt;/a&gt; &amp;mdash;オブジェクトがインスタンス化された行を取得する</target>
        </trans-unit>
        <trans-unit id="2b0e38dceff0f8a5ba7177fc74343f206263e55d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getmessage&quot;&gt;Throwable::getMessage()&lt;/a&gt; - Gets the message</source>
          <target state="translated">&lt;a href=&quot;throwable.getmessage&quot;&gt;Throwable :: getMessage（）&lt;/a&gt; -メッセージを取得する</target>
        </trans-unit>
        <trans-unit id="c15a1af79963af22b836f1ef9b127f81d39e8c00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getmessage&quot;&gt;Throwable::getMessage&lt;/a&gt; &amp;mdash; Gets the message</source>
          <target state="translated">&lt;a href=&quot;throwable.getmessage&quot;&gt;Throwable :: getMessage&lt;/a&gt; &amp;mdash;メッセージを取得する</target>
        </trans-unit>
        <trans-unit id="8479049ece77d12510b39f2e9fe6c3b8200f2f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getprevious&quot;&gt;Throwable::getPrevious()&lt;/a&gt; - Returns the previous Throwable</source>
          <target state="translated">&lt;a href=&quot;throwable.getprevious&quot;&gt;Throwable :: getPrevious（）&lt;/a&gt; -前のThrowableを返す</target>
        </trans-unit>
        <trans-unit id="40db4a1cd1adc5bb19b88219a015642813f757af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.getprevious&quot;&gt;Throwable::getPrevious&lt;/a&gt; &amp;mdash; Returns the previous Throwable</source>
          <target state="translated">&lt;a href=&quot;throwable.getprevious&quot;&gt;Throwable :: getPrevious&lt;/a&gt; &amp;mdash;前のThrowableを返す</target>
        </trans-unit>
        <trans-unit id="1ed39836c70224eef4cb7c061ba2481ede203eaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.gettrace&quot;&gt;Throwable::getTrace()&lt;/a&gt; - Gets the stack trace</source>
          <target state="translated">&lt;a href=&quot;throwable.gettrace&quot;&gt;Throwable :: getTrace（）&lt;/a&gt; -スタックトレースを取得する</target>
        </trans-unit>
        <trans-unit id="6aa01d2a130c590e8c10f7044e1f59b0706fb354" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.gettrace&quot;&gt;Throwable::getTrace&lt;/a&gt; &amp;mdash; Gets the stack trace</source>
          <target state="translated">&lt;a href=&quot;throwable.gettrace&quot;&gt;Throwable :: getTrace&lt;/a&gt; &amp;mdash;スタックトレースを取得する</target>
        </trans-unit>
        <trans-unit id="12c3f54c12c1dbe065f856b2e4e58adccf17f73e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.gettraceasstring&quot;&gt;Throwable::getTraceAsString()&lt;/a&gt; - Gets the stack trace as a string</source>
          <target state="translated">&lt;a href=&quot;throwable.gettraceasstring&quot;&gt;Throwable :: getTraceAsString（）&lt;/a&gt; -スタックトレースを文字列として取得する</target>
        </trans-unit>
        <trans-unit id="0f954c9c9702460ed699b8e0eafa8de5cb38c89b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.gettraceasstring&quot;&gt;Throwable::getTraceAsString&lt;/a&gt; &amp;mdash; Gets the stack trace as a string</source>
          <target state="translated">&lt;a href=&quot;throwable.gettraceasstring&quot;&gt;Throwable :: getTraceAsString&lt;/a&gt; &amp;mdash;スタックトレースを文字列として取得する</target>
        </trans-unit>
        <trans-unit id="abdae9c7da9ff57275246c306bb4ad1acd664101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.tostring&quot;&gt;Throwable::__toString()&lt;/a&gt; - Gets a string representation of the thrown object</source>
          <target state="translated">&lt;a href=&quot;throwable.tostring&quot;&gt;Throwable :: __ toString（）&lt;/a&gt; -スローされたオブジェクトの文字列表現を取得する</target>
        </trans-unit>
        <trans-unit id="e4c687832b834aa34097caae0f0ace3ffec4b239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;throwable.tostring&quot;&gt;Throwable::__toString&lt;/a&gt; &amp;mdash; Gets a string representation of the thrown object</source>
          <target state="translated">&lt;a href=&quot;throwable.tostring&quot;&gt;Throwable :: __ toString&lt;/a&gt; &amp;mdash;スローされたオブジェクトの文字列表現を取得する</target>
        </trans-unit>
        <trans-unit id="93bb2e52532efdba4e185c70d6119de7ad54f708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.body&quot;&gt;tidy::body()&lt;/a&gt; - Returns a tidyNode object starting from the &amp;lt;body&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.body&quot;&gt;tidy :: body（）&lt;/a&gt; -tidy解析ツリーの&amp;lt;body&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="4305b292aa749bdba70958abbe727d570528568e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.body&quot;&gt;tidy::body&lt;/a&gt; &amp;mdash; Returns a tidyNode object starting from the &amp;lt;body&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.body&quot;&gt;tidy :: body&lt;/a&gt; &amp;mdash; tidy解析ツリーの&amp;lt;body&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="9fe53dcfb8bc78cd7064b74f0ff551bcba6fd3f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.cleanrepair&quot;&gt;tidy::cleanRepair&lt;/a&gt; &amp;mdash; Execute configured cleanup and repair operations on parsed markup</source>
          <target state="translated">&lt;a href=&quot;tidy.cleanrepair&quot;&gt;tidy :: cleanRepair&lt;/a&gt; &amp;mdash;解析されたマークアップに対して構成されたクリーンアップと修復操作を実行する</target>
        </trans-unit>
        <trans-unit id="7dfc8b4b977ce0a077c3d0efa40ebfd4b920ff54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.construct&quot;&gt;tidy::__construct&lt;/a&gt; &amp;mdash; Constructs a new tidy object</source>
          <target state="translated">&lt;a href=&quot;tidy.construct&quot;&gt;tidy :: __ construct&lt;/a&gt; &amp;mdash;新しいtidyオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="0db246ced547cbcb55aea706570710d532a159a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.diagnose&quot;&gt;tidy::diagnose&lt;/a&gt; &amp;mdash; Run configured diagnostics on parsed and repaired markup</source>
          <target state="translated">&lt;a href=&quot;tidy.diagnose&quot;&gt;tidy :: diagnose&lt;/a&gt; &amp;mdash;解析および修復されたマークアップに対して構成済みの診断を実行する</target>
        </trans-unit>
        <trans-unit id="db53641a7d010a588c319c7912ccaf6ea602c746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy::getConfig&lt;/a&gt; &amp;mdash; Get current Tidy configuration</source>
          <target state="translated">&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy :: getConfig&lt;/a&gt; &amp;mdash;現在のTidy設定を取得する</target>
        </trans-unit>
        <trans-unit id="4c642a29e7ff1ac5b44f236af725d28795a82751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy::getconfig()&lt;/a&gt; - Get current Tidy configuration</source>
          <target state="translated">&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy :: getconfig（）&lt;/a&gt; -現在のTidy設定を取得する</target>
        </trans-unit>
        <trans-unit id="4d3deee4bf7baebb5eba97a5f054424029a259b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy_get_config()&lt;/a&gt; - Get current Tidy configuration</source>
          <target state="translated">&lt;a href=&quot;tidy.getconfig&quot;&gt;tidy_get_config（）&lt;/a&gt; -現在のTidy設定を取得する</target>
        </trans-unit>
        <trans-unit id="da1d85867053e65caa876c0336101d83aca3153c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.gethtmlver&quot;&gt;tidy::getHtmlVer&lt;/a&gt; &amp;mdash; Get the Detected HTML version for the specified document</source>
          <target state="translated">&lt;a href=&quot;tidy.gethtmlver&quot;&gt;tidy :: getHtmlVer&lt;/a&gt; &amp;mdash;指定したドキュメントの検出されたHTMLバージョンを取得する</target>
        </trans-unit>
        <trans-unit id="fbb6fc9fef46cbfc0b9711815e1c26f158823b2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getopt&quot;&gt;tidy::getOpt&lt;/a&gt; &amp;mdash; Returns the value of the specified configuration option for the tidy document</source>
          <target state="translated">&lt;a href=&quot;tidy.getopt&quot;&gt;tidy :: getOpt&lt;/a&gt; &amp;mdash;整頓されたドキュメントに指定された設定オプションの値を返す</target>
        </trans-unit>
        <trans-unit id="69ac74250df25497d63d975c09dd8f091e8d55a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getopt&quot;&gt;tidy::getopt()&lt;/a&gt; - Returns the value of the specified configuration option for the tidy document</source>
          <target state="translated">&lt;a href=&quot;tidy.getopt&quot;&gt;tidy :: getopt（）&lt;/a&gt; -tidyドキュメントに指定された構成オプションの値を返す</target>
        </trans-unit>
        <trans-unit id="0347e1ace3c98d3959f453e28fdeef024b0131be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getopt&quot;&gt;tidy_getopt()&lt;/a&gt; - Returns the value of the specified configuration option for the tidy document</source>
          <target state="translated">&lt;a href=&quot;tidy.getopt&quot;&gt;tidy_getopt（）&lt;/a&gt; -tidyドキュメントに指定された構成オプションの値を返す</target>
        </trans-unit>
        <trans-unit id="9bd7081379ca1f3e1d69ce615d69ec045e0e67c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getoptdoc&quot;&gt;tidy::getOptDoc&lt;/a&gt; &amp;mdash; Returns the documentation for the given option name</source>
          <target state="translated">&lt;a href=&quot;tidy.getoptdoc&quot;&gt;tidy :: getOptDoc&lt;/a&gt; &amp;mdash;指定したオプション名のドキュメントを返す</target>
        </trans-unit>
        <trans-unit id="7368b15d0e406e75fda61c2fab6d289cc1aef69c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getrelease&quot;&gt;tidy::getRelease&lt;/a&gt; &amp;mdash; Get release date (version) for Tidy library</source>
          <target state="translated">&lt;a href=&quot;tidy.getrelease&quot;&gt;tidy :: getRelease&lt;/a&gt; &amp;mdash; Tidyライブラリのリリース日（バージョン）を取得する</target>
        </trans-unit>
        <trans-unit id="bb05f0d0b315464b9cc26705ce03bad7147235a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.getstatus&quot;&gt;tidy::getStatus&lt;/a&gt; &amp;mdash; Get status of specified document</source>
          <target state="translated">&lt;a href=&quot;tidy.getstatus&quot;&gt;tidy :: getStatus&lt;/a&gt; &amp;mdash;指定したドキュメントのステータスを取得する</target>
        </trans-unit>
        <trans-unit id="3747878d698018525e2938af06559af652ffb547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.head&quot;&gt;tidy::head()&lt;/a&gt; - Returns a tidyNode object starting from the &amp;lt;head&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.head&quot;&gt;tidy :: head（）&lt;/a&gt; -tidy解析ツリーの&amp;lt;head&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="27126e400e3e024dec5eb9968d426d806092f47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.head&quot;&gt;tidy::head&lt;/a&gt; &amp;mdash; Returns a tidyNode object starting from the &amp;lt;head&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.head&quot;&gt;tidy :: head&lt;/a&gt; &amp;mdash; tidy解析ツリーの&amp;lt;head&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="1b9070182ac0dd41401f3337cd02b4544934200f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.html&quot;&gt;tidy::html()&lt;/a&gt; - Returns a tidyNode object starting from the &amp;lt;html&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.html&quot;&gt;tidy :: html（）&lt;/a&gt; -tidy解析ツリーの&amp;lt;html&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="5fa59ab3cd1bafa108f725859b566f4fc091af5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.html&quot;&gt;tidy::html&lt;/a&gt; &amp;mdash; Returns a tidyNode object starting from the &amp;lt;html&amp;gt; tag of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.html&quot;&gt;tidy :: html&lt;/a&gt; &amp;mdash; tidy解析ツリーの&amp;lt;html&amp;gt;タグから始まるtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="952be5a6b20cb99e3ff4c66b338aeb211344ecd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.isxhtml&quot;&gt;tidy::isXhtml&lt;/a&gt; &amp;mdash; Indicates if the document is a XHTML document</source>
          <target state="translated">&lt;a href=&quot;tidy.isxhtml&quot;&gt;tidy :: isXhtml&lt;/a&gt; &amp;mdash;ドキュメントがXHTMLドキュメントかどうかを示す</target>
        </trans-unit>
        <trans-unit id="ac9fe9f0dad799336c4442d406292d60461ce75c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.isxml&quot;&gt;tidy::isXml&lt;/a&gt; &amp;mdash; Indicates if the document is a generic (non HTML/XHTML) XML document</source>
          <target state="translated">&lt;a href=&quot;tidy.isxml&quot;&gt;tidy :: isXml&lt;/a&gt; &amp;mdash;ドキュメントが一般的な（HTML / XHTML以外の）XMLドキュメントかどうかを示す</target>
        </trans-unit>
        <trans-unit id="4cb5e654481f6b0529a477a3e8b670ec14313f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.parsefile&quot;&gt;tidy::parseFile()&lt;/a&gt; - Parse markup in file or URI</source>
          <target state="translated">&lt;a href=&quot;tidy.parsefile&quot;&gt;tidy :: parseFile（）&lt;/a&gt; -ファイルまたはURIのマークアップを解析する</target>
        </trans-unit>
        <trans-unit id="3ef7f9a6cbfbe6c01b519372f17bbe4bc0105df7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.parsefile&quot;&gt;tidy::parseFile&lt;/a&gt; &amp;mdash; Parse markup in file or URI</source>
          <target state="translated">&lt;a href=&quot;tidy.parsefile&quot;&gt;tidy :: parseFile&lt;/a&gt; &amp;mdash;ファイルまたはURIのマークアップを解析する</target>
        </trans-unit>
        <trans-unit id="0ada9051a276ae1eda3315a99173be1b32b6b632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy::parseString()&lt;/a&gt; - Parse a document stored in a string</source>
          <target state="translated">&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy :: parseString（）&lt;/a&gt; -文字列に格納されているドキュメントを解析する</target>
        </trans-unit>
        <trans-unit id="ceb773834be5c123c10fd111b1195ff04df57f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy::parseString&lt;/a&gt; &amp;mdash; Parse a document stored in a string</source>
          <target state="translated">&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy :: parseString&lt;/a&gt; &amp;mdash;文字列に保存されたドキュメントを解析する</target>
        </trans-unit>
        <trans-unit id="598b60da6a25cf87f5f4469998d49ef47ad755c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy::parsestring()&lt;/a&gt; - Parse a document stored in a string</source>
          <target state="translated">&lt;a href=&quot;tidy.parsestring&quot;&gt;tidy :: parsestring（）&lt;/a&gt; -文字列に格納されたドキュメントを解析する</target>
        </trans-unit>
        <trans-unit id="3d9b7c9008752bef6f637eb7db1b9681b21ac42e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.props.errorbuffer&quot;&gt;tidy::$errorBuffer&lt;/a&gt; &amp;mdash; Return warnings and errors which occurred parsing the specified document</source>
          <target state="translated">&lt;a href=&quot;tidy.props.errorbuffer&quot;&gt;tidy :: $ errorBuffer&lt;/a&gt; &amp;mdash;指定したドキュメントの解析中に発生した警告とエラーを返す</target>
        </trans-unit>
        <trans-unit id="d3d8eae9a4a4403a9e642e3db66a23645005bacb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy::repairFile()&lt;/a&gt; - Repair a file and return it as a string</source>
          <target state="translated">&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy :: repairFile（）&lt;/a&gt; -ファイルを修復し、文字列として返す</target>
        </trans-unit>
        <trans-unit id="83f1c60e3e2eb1444e11fb32efec05f8b5f28a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy::repairFile&lt;/a&gt; &amp;mdash; Repair a file and return it as a string</source>
          <target state="translated">&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy :: repairFile&lt;/a&gt; &amp;mdash;ファイルを修復し、文字列として返す</target>
        </trans-unit>
        <trans-unit id="95f9cc8e0ebd40dc1c9e3f23e8866e0ed15323d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy::repairfile()&lt;/a&gt; - Repair a file and return it as a string</source>
          <target state="translated">&lt;a href=&quot;tidy.repairfile&quot;&gt;tidy :: repairfile（）&lt;/a&gt; -ファイルを修復し、文字列として返す</target>
        </trans-unit>
        <trans-unit id="db08a744b92b0affa5f16f2d0d0362c39eccfa54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy::repairString()&lt;/a&gt; - Repair a string using an optionally provided configuration file</source>
          <target state="translated">&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy :: repairString（）&lt;/a&gt; -オプションで提供される構成ファイルを使用して文字列を修復する</target>
        </trans-unit>
        <trans-unit id="d6ac9c602fcd1d16e4c3720b9acc8cc446ec8287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy::repairString&lt;/a&gt; &amp;mdash; Repair a string using an optionally provided configuration file</source>
          <target state="translated">&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy :: repairString&lt;/a&gt; &amp;mdash;オプションで提供される構成ファイルを使用して文字列を修復する</target>
        </trans-unit>
        <trans-unit id="5825c86808697a5466702865b0038401e87c3175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy::repairstring()&lt;/a&gt; - Repair a string using an optionally provided configuration file</source>
          <target state="translated">&lt;a href=&quot;tidy.repairstring&quot;&gt;tidy :: repairstring（）&lt;/a&gt; -オプションで提供される構成ファイルを使用して文字列を修復する</target>
        </trans-unit>
        <trans-unit id="a5b1b9b656225f77ff73703f2181ee43de8f3646" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidy.root&quot;&gt;tidy::root&lt;/a&gt; &amp;mdash; Returns a tidyNode object representing the root of the tidy parse tree</source>
          <target state="translated">&lt;a href=&quot;tidy.root&quot;&gt;tidy :: root&lt;/a&gt; &amp;mdash;整頓された解析ツリーのルートを表すtidyNodeオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="7aee22854f3a07f643a9d97eb3bb16f20d938921" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.getparent&quot;&gt;tidyNode::getParent&lt;/a&gt; &amp;mdash; Returns the parent node of the current node</source>
          <target state="translated">&lt;a href=&quot;tidynode.getparent&quot;&gt;tidyNode :: getParent&lt;/a&gt; &amp;mdash;現在のノードの親ノードを返す</target>
        </trans-unit>
        <trans-unit id="f2fa9edd5a410deb7cbf14124e16963bb3b79c6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.haschildren&quot;&gt;tidyNode::hasChildren&lt;/a&gt; &amp;mdash; Checks if a node has children</source>
          <target state="translated">&lt;a href=&quot;tidynode.haschildren&quot;&gt;tidyNode :: hasChildren&lt;/a&gt; &amp;mdash;ノードに子があるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="e15d4c630dabb38a899a76a8764172139cde1127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.hassiblings&quot;&gt;tidyNode::hasSiblings&lt;/a&gt; &amp;mdash; Checks if a node has siblings</source>
          <target state="translated">&lt;a href=&quot;tidynode.hassiblings&quot;&gt;tidyNode :: hasSiblings&lt;/a&gt; &amp;mdash;ノードに兄弟があるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="85fbf10da3b9c501ec0e3ef948843f6f55a2e982" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.isasp&quot;&gt;tidyNode::isAsp&lt;/a&gt; &amp;mdash; Checks if this node is ASP</source>
          <target state="translated">&lt;a href=&quot;tidynode.isasp&quot;&gt;tidyNode :: isAsp&lt;/a&gt; &amp;mdash;このノードがASPかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="98d78638e286ca795c82ad02515c16db073a557c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.iscomment&quot;&gt;tidyNode::isComment&lt;/a&gt; &amp;mdash; Checks if a node represents a comment</source>
          <target state="translated">&lt;a href=&quot;tidynode.iscomment&quot;&gt;tidyNode :: isComment&lt;/a&gt; &amp;mdash;ノードがコメントを表すかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="d7d0f30c6c4894ba1c36232fdb746f910758e6a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.ishtml&quot;&gt;tidyNode::isHtml&lt;/a&gt; &amp;mdash; Checks if a node is part of a HTML document</source>
          <target state="translated">&lt;a href=&quot;tidynode.ishtml&quot;&gt;tidyNode :: isHtml&lt;/a&gt; &amp;mdash;ノードがHTMLドキュメントの一部であるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="0b68088d1e8bea2254189be80468ba2d6ec6d993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.isjste&quot;&gt;tidyNode::isJste&lt;/a&gt; &amp;mdash; Checks if this node is JSTE</source>
          <target state="translated">&lt;a href=&quot;tidynode.isjste&quot;&gt;tidyNode :: isJste&lt;/a&gt; &amp;mdash;このノードがJSTEかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="ecff67d6b764511f435a66b74a571ee206b466a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.isphp&quot;&gt;tidyNode::isPhp&lt;/a&gt; &amp;mdash; Checks if a node is PHP</source>
          <target state="translated">&lt;a href=&quot;tidynode.isphp&quot;&gt;tidyNode :: isPhp&lt;/a&gt; &amp;mdash;ノードがPHPかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="310736f3fd665b04e7a9f1a42f42f5eb3fa10b4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tidynode.istext&quot;&gt;tidyNode::isText&lt;/a&gt; &amp;mdash; Checks if a node represents text (no markup)</source>
          <target state="translated">&lt;a href=&quot;tidynode.istext&quot;&gt;tidyNode :: isText&lt;/a&gt; &amp;mdash;ノードがテキストを表す（マークアップなし）かどうかを確認する</target>
        </trans-unit>
        <trans-unit id="f95ec332c0cd96121c2e8f862a6945ca8f754377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.construct&quot;&gt;Transliterator::__construct()&lt;/a&gt; - Private constructor to deny instantiation</source>
          <target state="translated">&lt;a href=&quot;transliterator.construct&quot;&gt;Transliterator :: __ construct（）&lt;/a&gt; -インスタンス化を拒否するプライベートコンストラクタ</target>
        </trans-unit>
        <trans-unit id="0c658ea6236a27264bd61c03254327ae25d07b8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.construct&quot;&gt;Transliterator::__construct&lt;/a&gt; &amp;mdash; Private constructor to deny instantiation</source>
          <target state="translated">&lt;a href=&quot;transliterator.construct&quot;&gt;Transliterator :: __ construct&lt;/a&gt; &amp;mdash;インスタンス化を拒否するプライベートコンストラクタ</target>
        </trans-unit>
        <trans-unit id="71d803365e53e00e3cb7480b42862962ec51fe03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.construct&quot;&gt;__construct&lt;/a&gt; ( void )</source>
          <target state="translated">&lt;a href=&quot;transliterator.construct&quot;&gt;__construct&lt;/a&gt;（void）</target>
        </trans-unit>
        <trans-unit id="7cf5497692aaa559c1f35aef1d41a57e7433ba9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.create&quot;&gt;Transliterator::create()&lt;/a&gt; - Create a transliterator</source>
          <target state="translated">&lt;a href=&quot;transliterator.create&quot;&gt;Transliterator :: create（）&lt;/a&gt; -文字変換プログラムを作成する</target>
        </trans-unit>
        <trans-unit id="d97d2881491edde257eb8d27da161ba12990c2c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.create&quot;&gt;Transliterator::create&lt;/a&gt; &amp;mdash; Create a transliterator</source>
          <target state="translated">&lt;a href=&quot;transliterator.create&quot;&gt;Transliterator :: create&lt;/a&gt; &amp;mdash; 文字変換プログラムを作成する</target>
        </trans-unit>
        <trans-unit id="7d65da21f136d8100afc7116238ca1d1e2ace096" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.createfromrules&quot;&gt;Transliterator::createFromRules()&lt;/a&gt; - Create transliterator from rules</source>
          <target state="translated">&lt;a href=&quot;transliterator.createfromrules&quot;&gt;Transliterator :: createFromRules（）&lt;/a&gt; -ルールから文字変換プログラムを作成する</target>
        </trans-unit>
        <trans-unit id="1ce3c16c5b813c3a64d525de10c3eb29d17bf1fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.createfromrules&quot;&gt;Transliterator::createFromRules&lt;/a&gt; &amp;mdash; Create transliterator from rules</source>
          <target state="translated">&lt;a href=&quot;transliterator.createfromrules&quot;&gt;Transliterator :: createFromRules&lt;/a&gt; &amp;mdash;ルールから文字変換プログラムを作成する</target>
        </trans-unit>
        <trans-unit id="642590f9367589629a99d623a39bd1fce9e57434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.createinverse&quot;&gt;Transliterator::createInverse&lt;/a&gt; &amp;mdash; Create an inverse transliterator</source>
          <target state="translated">&lt;a href=&quot;transliterator.createinverse&quot;&gt;Transliterator :: createInverse&lt;/a&gt; &amp;mdash;逆の文字変換プログラムを作成する</target>
        </trans-unit>
        <trans-unit id="68611e5d43b40528191f1dec4214480ef3b79a2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.geterrorcode&quot;&gt;Transliterator::getErrorCode()&lt;/a&gt; - Get last error code</source>
          <target state="translated">&lt;a href=&quot;transliterator.geterrorcode&quot;&gt;Transliterator :: getErrorCode（）&lt;/a&gt; -最後のエラーコードを取得する</target>
        </trans-unit>
        <trans-unit id="dd87ed518400065d7d0bf36eee9e016053f61fba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.geterrorcode&quot;&gt;Transliterator::getErrorCode&lt;/a&gt; &amp;mdash; Get last error code</source>
          <target state="translated">&lt;a href=&quot;transliterator.geterrorcode&quot;&gt;Transliterator :: getErrorCode&lt;/a&gt; &amp;mdash;最後のエラーコードを取得する</target>
        </trans-unit>
        <trans-unit id="09790efe90332e520f85f63409c5446a423730e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.geterrormessage&quot;&gt;Transliterator::getErrorMessage()&lt;/a&gt; - Get last error message</source>
          <target state="translated">&lt;a href=&quot;transliterator.geterrormessage&quot;&gt;Transliterator :: getErrorMessage（）&lt;/a&gt; -最後のエラーメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="bb21df21b8a1844fc6876ef5b10e54130aa9909e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.geterrormessage&quot;&gt;Transliterator::getErrorMessage&lt;/a&gt; &amp;mdash; Get last error message</source>
          <target state="translated">&lt;a href=&quot;transliterator.geterrormessage&quot;&gt;Transliterator :: getErrorMessage&lt;/a&gt; &amp;mdash;最後のエラーメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="40d00e4ae296293e9d5a856974f6ad7951afac58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.listids&quot;&gt;Transliterator::listIDs()&lt;/a&gt; - Get transliterator IDs</source>
          <target state="translated">&lt;a href=&quot;transliterator.listids&quot;&gt;Transliterator :: listIDs（）&lt;/a&gt; - Transliterator IDを取得する</target>
        </trans-unit>
        <trans-unit id="2383726e48bd660b4d11614d5ff306995c7024d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.listids&quot;&gt;Transliterator::listIDs&lt;/a&gt; &amp;mdash; Get transliterator IDs</source>
          <target state="translated">&lt;a href=&quot;transliterator.listids&quot;&gt;Transliterator :: listIDs&lt;/a&gt; &amp;mdash; 文字変換IDを取得する</target>
        </trans-unit>
        <trans-unit id="d6f9c96a73afb76ac0909e3acb96b592bf0933a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.transliterate&quot;&gt;Transliterator::transliterate()&lt;/a&gt; - Transliterate a string</source>
          <target state="translated">&lt;a href=&quot;transliterator.transliterate&quot;&gt;Transliterator :: transliterate（）&lt;/a&gt; -文字列を音訳する</target>
        </trans-unit>
        <trans-unit id="34c0de45c8b7a493c3fe4adcf11b83be09fc3c40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transliterator.transliterate&quot;&gt;Transliterator::transliterate&lt;/a&gt; &amp;mdash; Transliterate a string</source>
          <target state="translated">&lt;a href=&quot;transliterator.transliterate&quot;&gt;Transliterator :: transliterate&lt;/a&gt; &amp;mdash;文字列を文字変換する</target>
        </trans-unit>
        <trans-unit id="02dd9daefdbab5245d9ea377717f1adc9bc44574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.construct&quot;&gt;UConverter::__construct&lt;/a&gt; &amp;mdash; Create UConverter object</source>
          <target state="translated">&lt;a href=&quot;uconverter.construct&quot;&gt;UConverter :: __ construct&lt;/a&gt; &amp;mdash; UConverterオブジェクトを作成する</target>
        </trans-unit>
        <trans-unit id="fd55ef80cdf9ceb22a3b618923813d200d07348f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.convert&quot;&gt;UConverter::convert&lt;/a&gt; &amp;mdash; Convert string from one charset to another</source>
          <target state="translated">&lt;a href=&quot;uconverter.convert&quot;&gt;UConverter :: convert&lt;/a&gt; &amp;mdash;文字列をある文字セットから別の文字セットに変換する</target>
        </trans-unit>
        <trans-unit id="703468bbfc985ea0c2fd7894a37879f52dadba21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.fromucallback&quot;&gt;UConverter::fromUCallback&lt;/a&gt; &amp;mdash; Default &quot;from&quot; callback function</source>
          <target state="translated">&lt;a href=&quot;uconverter.fromucallback&quot;&gt;UConverter :: fromUCallback&lt;/a&gt; &amp;mdash;デフォルトの &quot;from&quot;コールバック関数</target>
        </trans-unit>
        <trans-unit id="c8302cad07afafcd28ca91dd48c55516a2aac1c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getaliases&quot;&gt;UConverter::getAliases&lt;/a&gt; &amp;mdash; Get the aliases of the given name</source>
          <target state="translated">&lt;a href=&quot;uconverter.getaliases&quot;&gt;UConverter :: getAliases&lt;/a&gt; &amp;mdash;指定した名前のエイリアスを取得する</target>
        </trans-unit>
        <trans-unit id="ec947e230ee86b1bd8f27b86aa53c36493efefb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getavailable&quot;&gt;UConverter::getAvailable&lt;/a&gt; &amp;mdash; Get the available canonical converter names</source>
          <target state="translated">&lt;a href=&quot;uconverter.getavailable&quot;&gt;UConverter :: getAvailable&lt;/a&gt; &amp;mdash;利用可能な正規のコンバーター名を取得する</target>
        </trans-unit>
        <trans-unit id="cbc7f3e2de350f144e564606ea617444aee313b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getdestinationencoding&quot;&gt;UConverter::getDestinationEncoding&lt;/a&gt; &amp;mdash; Get the destination encoding</source>
          <target state="translated">&lt;a href=&quot;uconverter.getdestinationencoding&quot;&gt;UConverter :: getDestinationEncoding&lt;/a&gt; &amp;mdash;宛先のエンコーディングを取得する</target>
        </trans-unit>
        <trans-unit id="4a33673078fb1a5ec63d402d1bfe7ba7a7f634a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getdestinationtype&quot;&gt;UConverter::getDestinationType&lt;/a&gt; &amp;mdash; Get the destination converter type</source>
          <target state="translated">&lt;a href=&quot;uconverter.getdestinationtype&quot;&gt;UConverter :: getDestinationType&lt;/a&gt; &amp;mdash;変換先のコンバータータイプを取得する</target>
        </trans-unit>
        <trans-unit id="21010a1a8cf6a2360dd4d5bc0edf9278094e58e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.geterrorcode&quot;&gt;UConverter::getErrorCode&lt;/a&gt; &amp;mdash; Get last error code on the object</source>
          <target state="translated">&lt;a href=&quot;uconverter.geterrorcode&quot;&gt;UConverter :: getErrorCode&lt;/a&gt; &amp;mdash;オブジェクトの最後のエラーコードを取得する</target>
        </trans-unit>
        <trans-unit id="d7ee7bed3834e160bfdca0768da5aa78eaadb328" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.geterrormessage&quot;&gt;UConverter::getErrorMessage&lt;/a&gt; &amp;mdash; Get last error message on the object</source>
          <target state="translated">&lt;a href=&quot;uconverter.geterrormessage&quot;&gt;UConverter :: getErrorMessage&lt;/a&gt; &amp;mdash;オブジェクトの最後のエラーメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="3eeee66218830884d7106ccb95136a34e420aaff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getsourceencoding&quot;&gt;UConverter::getSourceEncoding&lt;/a&gt; &amp;mdash; Get the source encoding</source>
          <target state="translated">&lt;a href=&quot;uconverter.getsourceencoding&quot;&gt;UConverter :: getSourceEncoding&lt;/a&gt; &amp;mdash;ソースのエンコーディングを取得する</target>
        </trans-unit>
        <trans-unit id="468c8770c0a9b0101dc907e049440e84565aff27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getsourcetype&quot;&gt;UConverter::getSourceType&lt;/a&gt; &amp;mdash; Get the source convertor type</source>
          <target state="translated">&lt;a href=&quot;uconverter.getsourcetype&quot;&gt;UConverter :: getSourceType&lt;/a&gt; &amp;mdash;ソースのコンバータータイプを取得する</target>
        </trans-unit>
        <trans-unit id="0a3e892647d7844db2e3fc99169e9c2f28146275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getstandards&quot;&gt;UConverter::getStandards&lt;/a&gt; &amp;mdash; Get standards associated to converter names</source>
          <target state="translated">&lt;a href=&quot;uconverter.getstandards&quot;&gt;UConverter :: getStandards&lt;/a&gt; &amp;mdash;コンバーター名に関連付けられた標準を取得する</target>
        </trans-unit>
        <trans-unit id="44dcdb95428246b5b3e9e4da7deaf14269501f7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.getsubstchars&quot;&gt;UConverter::getSubstChars&lt;/a&gt; &amp;mdash; Get substitution chars</source>
          <target state="translated">&lt;a href=&quot;uconverter.getsubstchars&quot;&gt;UConverter :: getSubstChars&lt;/a&gt; &amp;mdash;置換文字を取得する</target>
        </trans-unit>
        <trans-unit id="2e859454b0fce05fc218b0320f3d5bd7f07772db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.reasontext&quot;&gt;UConverter::reasonText&lt;/a&gt; &amp;mdash; Get string representation of the callback reason</source>
          <target state="translated">&lt;a href=&quot;uconverter.reasontext&quot;&gt;UConverter :: reasonText&lt;/a&gt; &amp;mdash;コールバックの理由の文字列表現を取得する</target>
        </trans-unit>
        <trans-unit id="6e1efa738c49c396939b5e2fcbb396a74d83738e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.setdestinationencoding&quot;&gt;UConverter::setDestinationEncoding&lt;/a&gt; &amp;mdash; Set the destination encoding</source>
          <target state="translated">&lt;a href=&quot;uconverter.setdestinationencoding&quot;&gt;UConverter :: setDestinationEncoding&lt;/a&gt; &amp;mdash;宛先のエンコーディングを設定する</target>
        </trans-unit>
        <trans-unit id="4dd97edeee99c6c62188894674bd5f8f4c173e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.setsourceencoding&quot;&gt;UConverter::setSourceEncoding&lt;/a&gt; &amp;mdash; Set the source encoding</source>
          <target state="translated">&lt;a href=&quot;uconverter.setsourceencoding&quot;&gt;UConverter :: setSourceEncoding&lt;/a&gt; &amp;mdash;ソースのエンコーディングを設定する</target>
        </trans-unit>
        <trans-unit id="97eae78c15df8721779211c17343760834a12022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.setsubstchars&quot;&gt;UConverter::setSubstChars&lt;/a&gt; &amp;mdash; Set the substitution chars</source>
          <target state="translated">&lt;a href=&quot;uconverter.setsubstchars&quot;&gt;UConverter :: setSubstChars&lt;/a&gt; &amp;mdash;置換文字を設定する</target>
        </trans-unit>
        <trans-unit id="76a45f4d391cc02e34e466abf0c3844ab19ab9c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.toucallback&quot;&gt;UConverter::toUCallback&lt;/a&gt; &amp;mdash; Default &quot;to&quot; callback function</source>
          <target state="translated">&lt;a href=&quot;uconverter.toucallback&quot;&gt;UConverter :: toUCallback&lt;/a&gt; &amp;mdash;デフォルトの &quot;to&quot;コールバック関数</target>
        </trans-unit>
        <trans-unit id="41723792858331a104d45b2ee4d8acb04649e634" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uconverter.transcode&quot;&gt;UConverter::transcode&lt;/a&gt; &amp;mdash; Convert string from one charset to another</source>
          <target state="translated">&lt;a href=&quot;uconverter.transcode&quot;&gt;UConverter :: transcode&lt;/a&gt; &amp;mdash;文字列をある文字セットから別の文字セットに変換する</target>
        </trans-unit>
        <trans-unit id="2cac77c3a9eba921f62678a32df527a81e7af54a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8js.construct&quot;&gt;V8Js::__construct&lt;/a&gt; &amp;mdash; Construct a new V8Js object</source>
          <target state="translated">&lt;a href=&quot;v8js.construct&quot;&gt;V8Js :: __ construct&lt;/a&gt; &amp;mdash;新しいV8Jsオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="e77496af5b972bb354cfa6447dd2fbfa95ca0573" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8js.executestring&quot;&gt;V8Js::executeString&lt;/a&gt; &amp;mdash; Execute a string as Javascript code</source>
          <target state="translated">&lt;a href=&quot;v8js.executestring&quot;&gt;V8Js :: executeString&lt;/a&gt; &amp;mdash;文字列をJavaScriptコードとして実行する</target>
        </trans-unit>
        <trans-unit id="827d7bcac6bffa6000a5c570a273c538d0a11c6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8js.getextensions&quot;&gt;V8Js::getExtensions&lt;/a&gt; &amp;mdash; Return an array of registered extensions</source>
          <target state="translated">&lt;a href=&quot;v8js.getextensions&quot;&gt;V8Js :: getExtensions&lt;/a&gt; &amp;mdash;登録された拡張機能の配列を返す</target>
        </trans-unit>
        <trans-unit id="75a7d177943428bd14030baa0e49984b2eca27d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8js.getpendingexception&quot;&gt;V8Js::getPendingException&lt;/a&gt; &amp;mdash; Return pending uncaught Javascript exception</source>
          <target state="translated">&lt;a href=&quot;v8js.getpendingexception&quot;&gt;V8Js :: getPendingException&lt;/a&gt; &amp;mdash;保留中のキャッチされていないJavaScript例外を返す</target>
        </trans-unit>
        <trans-unit id="0a585eae7d50b8f66808c7ff53d44cb64f026130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8js.registerextension&quot;&gt;V8Js::registerExtension&lt;/a&gt; &amp;mdash; Register Javascript extensions for V8Js</source>
          <target state="translated">&lt;a href=&quot;v8js.registerextension&quot;&gt;V8Js :: registerExtension&lt;/a&gt; &amp;mdash; V8Jの JavaScript拡張機能を登録する</target>
        </trans-unit>
        <trans-unit id="b4d5d39c96f9ad16b9c0ffd16cc7b8b01715eb42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8jsexception.getjsfilename&quot;&gt;V8JsException::getJsFileName&lt;/a&gt; &amp;mdash; The getJsFileName purpose</source>
          <target state="translated">&lt;a href=&quot;v8jsexception.getjsfilename&quot;&gt;V8JsException :: getJsFileName&lt;/a&gt; &amp;mdash; getJsFileNameの目的</target>
        </trans-unit>
        <trans-unit id="bc93ec6ce8befefd5e448b68cebc429c8ffa9646" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8jsexception.getjslinenumber&quot;&gt;V8JsException::getJsLineNumber&lt;/a&gt; &amp;mdash; The getJsLineNumber purpose</source>
          <target state="translated">&lt;a href=&quot;v8jsexception.getjslinenumber&quot;&gt;V8JsException :: getJsLineNumber&lt;/a&gt; &amp;mdash; getJsLineNumberの目的</target>
        </trans-unit>
        <trans-unit id="5e1eb03badc6f219a7107f6a7ef34a64315ad492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8jsexception.getjssourceline&quot;&gt;V8JsException::getJsSourceLine&lt;/a&gt; &amp;mdash; The getJsSourceLine purpose</source>
          <target state="translated">&lt;a href=&quot;v8jsexception.getjssourceline&quot;&gt;V8JsException :: getJsSourceLine&lt;/a&gt; &amp;mdash; getJsSourceLineの目的</target>
        </trans-unit>
        <trans-unit id="e7b626de04f9c9551717c92d481cad6778488f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;v8jsexception.getjstrace&quot;&gt;V8JsException::getJsTrace&lt;/a&gt; &amp;mdash; The getJsTrace purpose</source>
          <target state="translated">&lt;a href=&quot;v8jsexception.getjstrace&quot;&gt;V8JsException :: getJsTrace&lt;/a&gt; &amp;mdash; getJsTraceの目的</target>
        </trans-unit>
        <trans-unit id="0dbf59112a3b1ca5c4d59c0708db5711334e21b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.auth&quot;&gt;VarnishAdmin::auth&lt;/a&gt; &amp;mdash; Authenticate on a varnish instance</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.auth&quot;&gt;VarnishAdmin :: auth&lt;/a&gt; &amp;mdash; varnishインスタンスで認証する</target>
        </trans-unit>
        <trans-unit id="185e9ca0a872f590f3950b3e2f19ec13267c271c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.ban&quot;&gt;VarnishAdmin::ban&lt;/a&gt; &amp;mdash; Ban URLs using a VCL expression</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.ban&quot;&gt;VarnishAdmin :: ban&lt;/a&gt; &amp;mdash; VCL式を使用してURLを禁止する</target>
        </trans-unit>
        <trans-unit id="7950664ef7b632fcbb7dbaad4e081fd50c13b92b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.banurl&quot;&gt;VarnishAdmin::banUrl&lt;/a&gt; &amp;mdash; Ban an URL using a VCL expression</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.banurl&quot;&gt;VarnishAdmin :: banUrl&lt;/a&gt; &amp;mdash; VCL式を使用してURLを禁止する</target>
        </trans-unit>
        <trans-unit id="c7f36d943e09596bc538b91bdb4f1106a639cfb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.clearpanic&quot;&gt;VarnishAdmin::clearPanic&lt;/a&gt; &amp;mdash; Clear varnish instance panic messages</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.clearpanic&quot;&gt;VarnishAdmin :: clearPanic&lt;/a&gt; &amp;mdash;ワニスのインスタンスパニックメッセージをクリアする</target>
        </trans-unit>
        <trans-unit id="834df9ff974b8aabb86fdb4b6a4e224424db31fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.connect&quot;&gt;VarnishAdmin::connect&lt;/a&gt; &amp;mdash; Connect to a varnish instance administration interface</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.connect&quot;&gt;VarnishAdmin :: connect&lt;/a&gt; &amp;mdash; varnishインスタンス管理インターフェースに接続する</target>
        </trans-unit>
        <trans-unit id="b4105dd6bcc3a3040e1529cbbcf6d862c8a094ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.construct&quot;&gt;VarnishAdmin::__construct&lt;/a&gt; &amp;mdash; VarnishAdmin constructor</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.construct&quot;&gt;VarnishAdmin :: __ construct&lt;/a&gt; &amp;mdash; VarnishAdminコンストラクタ</target>
        </trans-unit>
        <trans-unit id="be7c36160275d9ce75deb9253ae63952dbe1eccd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.disconnect&quot;&gt;VarnishAdmin::disconnect&lt;/a&gt; &amp;mdash; Disconnect from a varnish instance administration interface</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.disconnect&quot;&gt;VarnishAdmin :: disconnect&lt;/a&gt; &amp;mdash; Varnishインスタンス管理インターフェースから切断する</target>
        </trans-unit>
        <trans-unit id="d6b3a86409360b6496aac8c02a35934f0d19e15c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.getpanic&quot;&gt;VarnishAdmin::getPanic&lt;/a&gt; &amp;mdash; Get the last panic message on a varnish instance</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.getpanic&quot;&gt;VarnishAdmin :: getPanic&lt;/a&gt; &amp;mdash; varnishインスタンスの最後のパニックメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="4fb251cc80f6b301eb49fdc53adc8465d3ecf0e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.getparams&quot;&gt;VarnishAdmin::getParams&lt;/a&gt; &amp;mdash; Fetch current varnish instance configuration parameters</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.getparams&quot;&gt;VarnishAdmin :: getParams&lt;/a&gt; &amp;mdash;現在のニスのインスタンス設定パラメータを取得する</target>
        </trans-unit>
        <trans-unit id="9810d2422268e50f577cefc205eeeca94c797423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.isrunning&quot;&gt;VarnishAdmin::isRunning&lt;/a&gt; &amp;mdash; Check if the varnish slave process is currently running</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.isrunning&quot;&gt;VarnishAdmin :: isRunning&lt;/a&gt; &amp;mdash; varnishスレーブプロセスが現在実行されているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="c1144cfedfcaa2616acd930982a93cc1265fe14e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.setcompat&quot;&gt;VarnishAdmin::setCompat&lt;/a&gt; &amp;mdash; Set the class compat configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.setcompat&quot;&gt;VarnishAdmin :: setCompat&lt;/a&gt; &amp;mdash;クラスの互換構成パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="b1c68c478641bcfdbf8851277916b82e3cc19cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.sethost&quot;&gt;VarnishAdmin::setHost&lt;/a&gt; &amp;mdash; Set the class host configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.sethost&quot;&gt;VarnishAdmin :: setHost&lt;/a&gt; &amp;mdash;クラスのホスト設定パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="396162a454a8bdce1238e2118028860085b38101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.setident&quot;&gt;VarnishAdmin::setIdent&lt;/a&gt; &amp;mdash; Set the class ident configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.setident&quot;&gt;VarnishAdmin :: setIdent&lt;/a&gt; &amp;mdash;クラスのident設定パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="efbc25222eabdfe2cf46684aa3573787157d47e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.setparam&quot;&gt;VarnishAdmin::setParam&lt;/a&gt; &amp;mdash; Set configuration param on the current varnish instance</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.setparam&quot;&gt;VarnishAdmin :: setParam&lt;/a&gt; &amp;mdash;現在のvarnishインスタンスに構成パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="badfe28d32968ed209042ad0bd02fb7322ce79ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.setport&quot;&gt;VarnishAdmin::setPort&lt;/a&gt; &amp;mdash; Set the class port configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.setport&quot;&gt;VarnishAdmin :: setPort&lt;/a&gt; &amp;mdash;クラスのポート設定パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="a6e7a37af8b498b03285b8893c8bec806735e483" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.setsecret&quot;&gt;VarnishAdmin::setSecret&lt;/a&gt; &amp;mdash; Set the class secret configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.setsecret&quot;&gt;VarnishAdmin :: setSecret&lt;/a&gt; &amp;mdash;クラスの秘密設定パラメータを設定する</target>
        </trans-unit>
        <trans-unit id="c3f438c56704f88fe3a6d1028df8ed5f5f46935a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.settimeout&quot;&gt;VarnishAdmin::setTimeout&lt;/a&gt; &amp;mdash; Set the class timeout configuration param</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.settimeout&quot;&gt;VarnishAdmin :: setTimeout&lt;/a&gt; &amp;mdash;クラスのタイムアウト設定パラメーターを設定する</target>
        </trans-unit>
        <trans-unit id="3ebdca6f89326abbb9edce9c8e5a1c3d8eb1873f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.start&quot;&gt;VarnishAdmin::start&lt;/a&gt; &amp;mdash; Start varnish worker process</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.start&quot;&gt;VarnishAdmin :: start&lt;/a&gt; &amp;mdash; varnishワーカープロセスを開始する</target>
        </trans-unit>
        <trans-unit id="5360da0e0e49282c596ccb5aada111ddf1254086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishadmin.stop&quot;&gt;VarnishAdmin::stop&lt;/a&gt; &amp;mdash; Stop varnish worker process</source>
          <target state="translated">&lt;a href=&quot;varnishadmin.stop&quot;&gt;VarnishAdmin :: stop&lt;/a&gt; &amp;mdash;ワニスワーカープロセスを停止する</target>
        </trans-unit>
        <trans-unit id="33389547fb8e386d6566fef4932050636d8c278a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishlog.construct&quot;&gt;VarnishLog::__construct&lt;/a&gt; &amp;mdash; Varnishlog constructor</source>
          <target state="translated">&lt;a href=&quot;varnishlog.construct&quot;&gt;VarnishLog :: __ construct&lt;/a&gt; &amp;mdash; Varnishlogコンストラクタ</target>
        </trans-unit>
        <trans-unit id="026fc43e210dae2c56afda6b47ff818546164511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishlog.getline&quot;&gt;VarnishLog::getLine&lt;/a&gt; &amp;mdash; Get next log line</source>
          <target state="translated">&lt;a href=&quot;varnishlog.getline&quot;&gt;VarnishLog :: getLine&lt;/a&gt; &amp;mdash;次のログ行を取得する</target>
        </trans-unit>
        <trans-unit id="b1314b1b4410f6ec08a663fc6e85b861b11c8828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishlog.gettagname&quot;&gt;VarnishLog::getTagName&lt;/a&gt; &amp;mdash; Get the log tag string representation by its index</source>
          <target state="translated">&lt;a href=&quot;varnishlog.gettagname&quot;&gt;VarnishLog :: getTagName&lt;/a&gt; &amp;mdash; ログタグの文字列表現をインデックスで取得する</target>
        </trans-unit>
        <trans-unit id="08067f965105d69be3b9451fc90f0a2df6b3a982" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishstat.construct&quot;&gt;VarnishStat::__construct&lt;/a&gt; &amp;mdash; VarnishStat constructor</source>
          <target state="translated">&lt;a href=&quot;varnishstat.construct&quot;&gt;VarnishStat :: __ construct&lt;/a&gt; &amp;mdash; VarnishStatコンストラクタ</target>
        </trans-unit>
        <trans-unit id="cd1b2a6773bc9bc10c52736529201d53ac30c697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;varnishstat.getsnapshot&quot;&gt;VarnishStat::getSnapshot&lt;/a&gt; &amp;mdash; Get the current varnish instance statistics snapshot</source>
          <target state="translated">&lt;a href=&quot;varnishstat.getsnapshot&quot;&gt;VarnishStat :: getSnapshot&lt;/a&gt; &amp;mdash;現在のニスインスタンス統計のスナップショットを取得する</target>
        </trans-unit>
        <trans-unit id="85357aed01f53e661bd46630a0a606f421392c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.construct&quot;&gt;WeakMap::__construct&lt;/a&gt; &amp;mdash; Constructs a new map</source>
          <target state="translated">&lt;a href=&quot;weakmap.construct&quot;&gt;WeakMap :: __ construct&lt;/a&gt; &amp;mdash;新しいマップを作成する</target>
        </trans-unit>
        <trans-unit id="342e7c6ec8f47d3a64456ea314f2f4185d273f1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.count&quot;&gt;WeakMap::count&lt;/a&gt; &amp;mdash; Counts the number of live entries in the map</source>
          <target state="translated">&lt;a href=&quot;weakmap.count&quot;&gt;WeakMap :: count&lt;/a&gt; &amp;mdash;マップ内のライブエントリの数をカウントする</target>
        </trans-unit>
        <trans-unit id="97d8247e3643396f5fab08a78d89072cca62ed0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.current&quot;&gt;WeakMap::current&lt;/a&gt; &amp;mdash; Returns the current value under iteration</source>
          <target state="translated">&lt;a href=&quot;weakmap.current&quot;&gt;WeakMap :: current&lt;/a&gt; &amp;mdash;反復中の現在の値を返す</target>
        </trans-unit>
        <trans-unit id="561bdd2972734f338cc1348243687eeb313e38b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.key&quot;&gt;WeakMap::key&lt;/a&gt; &amp;mdash; Returns the current key under iteration</source>
          <target state="translated">&lt;a href=&quot;weakmap.key&quot;&gt;WeakMap :: key&lt;/a&gt; &amp;mdash;反復中の現在のキーを返す</target>
        </trans-unit>
        <trans-unit id="a2c196dbb2f02d338ac3083ef192a5ba7c887775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.next&quot;&gt;WeakMap::next&lt;/a&gt; &amp;mdash; Advances to the next map element</source>
          <target state="translated">&lt;a href=&quot;weakmap.next&quot;&gt;WeakMap :: next&lt;/a&gt; &amp;mdash;次のマップ要素に進む</target>
        </trans-unit>
        <trans-unit id="2aa2a4880d5e6685b9fee15ff0d9d35b130bea90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.offsetexists&quot;&gt;WeakMap::offsetExists&lt;/a&gt; &amp;mdash; Checks whether a certain object is in the map</source>
          <target state="translated">&lt;a href=&quot;weakmap.offsetexists&quot;&gt;WeakMap :: offsetExists&lt;/a&gt; &amp;mdash;特定のオブジェクトがマップ内にあるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="cf365c81e22690adb45e60dc238e43477774b8c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.offsetget&quot;&gt;WeakMap::offsetGet&lt;/a&gt; &amp;mdash; Returns the value pointed to by a certain object</source>
          <target state="translated">&lt;a href=&quot;weakmap.offsetget&quot;&gt;WeakMap :: offsetGet&lt;/a&gt; &amp;mdash;特定のオブジェクトが指す値を返す</target>
        </trans-unit>
        <trans-unit id="4e380085bcbf7e20cfcbf4882b279f2c09e6c4b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.offsetset&quot;&gt;WeakMap::offsetSet&lt;/a&gt; &amp;mdash; Updates the map with a new key-value pair</source>
          <target state="translated">&lt;a href=&quot;weakmap.offsetset&quot;&gt;WeakMap :: offsetSet&lt;/a&gt; &amp;mdash;新しいキーと値のペアでマップを更新する</target>
        </trans-unit>
        <trans-unit id="a31073f1aab86e9f7ea21f14e7e140499d8cbc3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.offsetunset&quot;&gt;WeakMap::offsetUnset&lt;/a&gt; &amp;mdash; Removes an entry from the map</source>
          <target state="translated">&lt;a href=&quot;weakmap.offsetunset&quot;&gt;WeakMap :: offsetUnset&lt;/a&gt; &amp;mdash;マップからエントリを削除する</target>
        </trans-unit>
        <trans-unit id="f1fcb02bb2306059e4da4eb885de1b119a754813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.rewind&quot;&gt;WeakMap::rewind&lt;/a&gt; &amp;mdash; Rewinds the iterator to the beginning of the map</source>
          <target state="translated">&lt;a href=&quot;weakmap.rewind&quot;&gt;WeakMap :: rewind&lt;/a&gt; &amp;mdash;イテレータをマップの最初に巻き戻す</target>
        </trans-unit>
        <trans-unit id="cc546b6a671bebe6ebc10c6ea9d6d58dfd29f3c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakmap.valid&quot;&gt;WeakMap::valid&lt;/a&gt; &amp;mdash; Returns whether the iterator is still on a valid map element</source>
          <target state="translated">&lt;a href=&quot;weakmap.valid&quot;&gt;WeakMap :: valid&lt;/a&gt; &amp;mdash;イテレータがまだ有効なマップ要素上にあるかどうかを返す</target>
        </trans-unit>
        <trans-unit id="31542fe8531fb8807cd62c92229a79d6c38b1095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.acquire&quot;&gt;Weakref::acquire()&lt;/a&gt; - Acquires a strong reference on that object</source>
          <target state="translated">&lt;a href=&quot;weakref.acquire&quot;&gt;Weakref :: acquire（）&lt;/a&gt; -そのオブジェクトの強参照を取得する</target>
        </trans-unit>
        <trans-unit id="30a3b5a9c9aa6db1baab49e28affbce25e26bb4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.acquire&quot;&gt;Weakref::acquire&lt;/a&gt; &amp;mdash; Acquires a strong reference on that object</source>
          <target state="translated">&lt;a href=&quot;weakref.acquire&quot;&gt;Weakref :: acquire&lt;/a&gt; &amp;mdash;そのオブジェクトの強参照を取得する</target>
        </trans-unit>
        <trans-unit id="a5bbbdbcc4a17f9fd54675301a6c56f0c8252596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.construct&quot;&gt;Weakref::__construct&lt;/a&gt; &amp;mdash; Constructs a new weak reference</source>
          <target state="translated">&lt;a href=&quot;weakref.construct&quot;&gt;Weakref :: __ construct&lt;/a&gt; &amp;mdash;新しい弱参照を構築する</target>
        </trans-unit>
        <trans-unit id="ebe784eee128d2fc59db4fce224060b75bda0de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.get&quot;&gt;Weakref::get()&lt;/a&gt; - Returns the object pointed to by the weak reference</source>
          <target state="translated">&lt;a href=&quot;weakref.get&quot;&gt;Weakref :: get（）&lt;/a&gt; -弱参照が指すオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="54de1b28f48c60af0912423ab3d1cfe904db1ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.get&quot;&gt;Weakref::get&lt;/a&gt; &amp;mdash; Returns the object pointed to by the weak reference</source>
          <target state="translated">&lt;a href=&quot;weakref.get&quot;&gt;Weakref :: get&lt;/a&gt; &amp;mdash;弱参照が指すオブジェクトを返す</target>
        </trans-unit>
        <trans-unit id="0f9f184536943b6cc4719d2c8246811dfbed6b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.release&quot;&gt;Weakref::release()&lt;/a&gt; - Releases a previously acquired reference</source>
          <target state="translated">&lt;a href=&quot;weakref.release&quot;&gt;Weakref :: release（）&lt;/a&gt; -以前に取得した参照を解放する</target>
        </trans-unit>
        <trans-unit id="df93d06d65747b2bcbe2cbe4ebb532b4240a5b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.release&quot;&gt;Weakref::release&lt;/a&gt; &amp;mdash; Releases a previously acquired reference</source>
          <target state="translated">&lt;a href=&quot;weakref.release&quot;&gt;Weakref :: release&lt;/a&gt; &amp;mdash;以前に取得した参照を解放する</target>
        </trans-unit>
        <trans-unit id="a7fe85ddae2b6941ff25750faa36647a130d336d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.valid&quot;&gt;Weakref::valid()&lt;/a&gt; - Checks whether the object referenced still exists</source>
          <target state="translated">&lt;a href=&quot;weakref.valid&quot;&gt;Weakref :: valid（）&lt;/a&gt; -参照されているオブジェクトがまだ存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="f7e577b8854e88c9a8f8fac8d72f6ed8581dbd81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;weakref.valid&quot;&gt;Weakref::valid&lt;/a&gt; &amp;mdash; Checks whether the object referenced still exists</source>
          <target state="translated">&lt;a href=&quot;weakref.valid&quot;&gt;Weakref :: valid&lt;/a&gt; &amp;mdash;参照されたオブジェクトがまだ存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="b36bb763c3626fd9a8608e6dd2136d0291305d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.collect&quot;&gt;Worker::collect&lt;/a&gt; &amp;mdash; Collect references to completed tasks</source>
          <target state="translated">&lt;a href=&quot;worker.collect&quot;&gt;Worker :: collect&lt;/a&gt; &amp;mdash;完了したタスクへの参照を収集する</target>
        </trans-unit>
        <trans-unit id="2c655d54a2658a3bd09bb8567345f4bf2604e260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.getstacked&quot;&gt;Worker::getStacked&lt;/a&gt; &amp;mdash; Gets the remaining stack size</source>
          <target state="translated">&lt;a href=&quot;worker.getstacked&quot;&gt;Worker :: getStacked&lt;/a&gt; &amp;mdash;残りのスタックサイズを取得する</target>
        </trans-unit>
        <trans-unit id="8748799b34895e428441ad44161d1ae9a221da8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.isshutdown&quot;&gt;Worker::isShutdown&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;worker.isshutdown&quot;&gt;Worker :: isShutdown&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="daccb4ac9f5eee63c03d17cad4a943d3ac431bfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.isworking&quot;&gt;Worker::isWorking&lt;/a&gt; &amp;mdash; State Detection</source>
          <target state="translated">&lt;a href=&quot;worker.isworking&quot;&gt;Worker :: isWorking&lt;/a&gt; &amp;mdash;状態検出</target>
        </trans-unit>
        <trans-unit id="80479863c96a61dd885c12c900c6f27f3afeb0b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.shutdown&quot;&gt;Worker::shutdown&lt;/a&gt; &amp;mdash; Shutdown the worker</source>
          <target state="translated">&lt;a href=&quot;worker.shutdown&quot;&gt;Worker :: shutdown&lt;/a&gt; &amp;mdash; ワーカーをシャットダウンする</target>
        </trans-unit>
        <trans-unit id="30ebcdd189ecefba30f14d91c4307469140d345e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.stack&quot;&gt;Worker::stack&lt;/a&gt; &amp;mdash; Stacking work</source>
          <target state="translated">&lt;a href=&quot;worker.stack&quot;&gt;Worker :: stack&lt;/a&gt; &amp;mdash; スタック作業</target>
        </trans-unit>
        <trans-unit id="00ed8d9821ae01240ea93b2a6cc879b668d080c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;worker.unstack&quot;&gt;Worker::unstack&lt;/a&gt; &amp;mdash; Unstacking work</source>
          <target state="translated">&lt;a href=&quot;worker.unstack&quot;&gt;Worker :: unstack&lt;/a&gt; &amp;mdash; 作業をアンスタックする</target>
        </trans-unit>
        <trans-unit id="69576e40c893b805ed14a20f3a7a397bbc354c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.close&quot;&gt;XMLReader::close()&lt;/a&gt; - Close the XMLReader input</source>
          <target state="translated">&lt;a href=&quot;xmlreader.close&quot;&gt;XMLReader :: close（）&lt;/a&gt; -XMLReader入力を閉じる</target>
        </trans-unit>
        <trans-unit id="5824213139bfabf2c349696cec5ee577954c52e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.close&quot;&gt;XMLReader::close&lt;/a&gt; &amp;mdash; Close the XMLReader input</source>
          <target state="translated">&lt;a href=&quot;xmlreader.close&quot;&gt;XMLReader :: close&lt;/a&gt; &amp;mdash; XMLReader入力を閉じる</target>
        </trans-unit>
        <trans-unit id="cb368034d3ec7f77e42612281b14029f0c8ff8f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.expand&quot;&gt;XMLReader::expand()&lt;/a&gt; - Returns a copy of the current node as a DOM object</source>
          <target state="translated">&lt;a href=&quot;xmlreader.expand&quot;&gt;XMLReader :: expand（）&lt;/a&gt; -現在のノードのコピーをDOMオブジェクトとして返す</target>
        </trans-unit>
        <trans-unit id="1375aaa0bd8bb1f9fd112dad8b7a1c1811ce6956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.expand&quot;&gt;XMLReader::expand&lt;/a&gt; &amp;mdash; Returns a copy of the current node as a DOM object</source>
          <target state="translated">&lt;a href=&quot;xmlreader.expand&quot;&gt;XMLReader :: expand&lt;/a&gt; &amp;mdash;現在のノードのコピーをDOMオブジェクトとして返す</target>
        </trans-unit>
        <trans-unit id="53104a8918135a5869c0eff795a3f9f7a019d51d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattribute&quot;&gt;XMLReader::getAttribute()&lt;/a&gt; - Get the value of a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattribute&quot;&gt;XMLReader :: getAttribute（）&lt;/a&gt; -名前付き属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="273c743996bc7ac41e3e35310b106baf40ed8c4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattribute&quot;&gt;XMLReader::getAttribute&lt;/a&gt; &amp;mdash; Get the value of a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattribute&quot;&gt;XMLReader :: getAttribute&lt;/a&gt; &amp;mdash;名前付き属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="a9c2b1fb0a59ff48def7c957ebadc11d4dd87d27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattributeno&quot;&gt;XMLReader::getAttributeNo()&lt;/a&gt; - Get the value of an attribute by index</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattributeno&quot;&gt;XMLReader :: getAttributeNo（）&lt;/a&gt; -インデックスで属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="c2b284129457fea60d55c064fda92b6a193f66c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattributeno&quot;&gt;XMLReader::getAttributeNo&lt;/a&gt; &amp;mdash; Get the value of an attribute by index</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattributeno&quot;&gt;XMLReader :: getAttributeNo&lt;/a&gt; &amp;mdash;インデックスで属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="7668b7c7dcea11c8fbd48493889bf8f54817a918" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattributens&quot;&gt;XMLReader::getAttributeNs()&lt;/a&gt; - Get the value of an attribute by localname and URI</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattributens&quot;&gt;XMLReader :: getAttributeNs（）&lt;/a&gt; -ローカル名とURIによって属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="c82ec3fb71eb0036b0165924af4b34b0da0a768f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getattributens&quot;&gt;XMLReader::getAttributeNs&lt;/a&gt; &amp;mdash; Get the value of an attribute by localname and URI</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getattributens&quot;&gt;XMLReader :: getAttributeNs&lt;/a&gt; &amp;mdash;ローカル名とURIによって属性の値を取得する</target>
        </trans-unit>
        <trans-unit id="e03b26c45b44a2da959957f7e927b0dc728fa41c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.getparserproperty&quot;&gt;XMLReader::getParserProperty&lt;/a&gt; &amp;mdash; Indicates if specified property has been set</source>
          <target state="translated">&lt;a href=&quot;xmlreader.getparserproperty&quot;&gt;XMLReader :: getParserProperty&lt;/a&gt; &amp;mdash;指定したプロパティが設定されているかどうかを示す</target>
        </trans-unit>
        <trans-unit id="1a0d84040bcf95859d83ce7eb96581a1a643140b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.isvalid&quot;&gt;XMLReader::isValid()&lt;/a&gt; - Indicates if the parsed document is valid</source>
          <target state="translated">&lt;a href=&quot;xmlreader.isvalid&quot;&gt;XMLReader :: isValid（）&lt;/a&gt; -解析されたドキュメントが有効かどうかを示す</target>
        </trans-unit>
        <trans-unit id="a7780a1281880df1b191001e86ae054d0d18e65b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.isvalid&quot;&gt;XMLReader::isValid&lt;/a&gt; &amp;mdash; Indicates if the parsed document is valid</source>
          <target state="translated">&lt;a href=&quot;xmlreader.isvalid&quot;&gt;XMLReader :: isValid&lt;/a&gt; &amp;mdash;解析されたドキュメントが有効かどうかを示す</target>
        </trans-unit>
        <trans-unit id="018ee8415e3cafe84746eb649b47d244435c916c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.lookupnamespace&quot;&gt;XMLReader::lookupNamespace&lt;/a&gt; &amp;mdash; Lookup namespace for a prefix</source>
          <target state="translated">&lt;a href=&quot;xmlreader.lookupnamespace&quot;&gt;XMLReader :: lookupNamespace&lt;/a&gt; &amp;mdash;プレフィックスの名前空間を検索する</target>
        </trans-unit>
        <trans-unit id="1547b5fa10f9102665b8c45cdad0ad96f90864aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattribute&quot;&gt;XMLReader::moveToAttribute()&lt;/a&gt; - Move cursor to a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattribute&quot;&gt;XMLReader :: moveToAttribute（）&lt;/a&gt; -カーソルを名前付き属性に移動する</target>
        </trans-unit>
        <trans-unit id="17872efef86eac2f99d1fef40ba4bd8d23d47858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattribute&quot;&gt;XMLReader::moveToAttribute&lt;/a&gt; &amp;mdash; Move cursor to a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattribute&quot;&gt;XMLReader :: moveToAttribute&lt;/a&gt; &amp;mdash;カーソルを名前付き属性に移動する</target>
        </trans-unit>
        <trans-unit id="9ec1e6adc0ee90f569e75dffb2a61e11766705f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattributeno&quot;&gt;XMLReader::moveToAttributeNo()&lt;/a&gt; - Move cursor to an attribute by index</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattributeno&quot;&gt;XMLReader :: moveToAttributeNo（）&lt;/a&gt; -インデックスでカーソルを属性に移動する</target>
        </trans-unit>
        <trans-unit id="ef4bd9057c78d07b6313aed2c5cd8fb4962da58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattributeno&quot;&gt;XMLReader::moveToAttributeNo&lt;/a&gt; &amp;mdash; Move cursor to an attribute by index</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattributeno&quot;&gt;XMLReader :: moveToAttributeNo&lt;/a&gt; &amp;mdash;インデックスでカーソルを属性に移動する</target>
        </trans-unit>
        <trans-unit id="820216c161d7d117fe2d7db8e9f984c4ffcd581b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattributens&quot;&gt;XMLReader::moveToAttributeNs()&lt;/a&gt; - Move cursor to a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattributens&quot;&gt;XMLReader :: moveToAttributeNs（）&lt;/a&gt; -名前付き属性にカーソルを移動する</target>
        </trans-unit>
        <trans-unit id="37257cde71ca2169e6a1b2e05db15f72b2a06e68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoattributens&quot;&gt;XMLReader::moveToAttributeNs&lt;/a&gt; &amp;mdash; Move cursor to a named attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoattributens&quot;&gt;XMLReader :: moveToAttributeNs&lt;/a&gt; &amp;mdash;名前付き属性にカーソルを移動する</target>
        </trans-unit>
        <trans-unit id="67c61372d8e3679f9981487572555a7bb6d39180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoelement&quot;&gt;XMLReader::moveToElement()&lt;/a&gt; - Position cursor on the parent Element of current Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoelement&quot;&gt;XMLReader :: moveToElement（）&lt;/a&gt; -現在の属性の親要素にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="fb5217b0233083e50b0fbc2df30f0a6e48ca91e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetoelement&quot;&gt;XMLReader::moveToElement&lt;/a&gt; &amp;mdash; Position cursor on the parent Element of current Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetoelement&quot;&gt;XMLReader :: moveToElement&lt;/a&gt; &amp;mdash;現在の属性の親要素にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="ffcbd0b71b69a7874f080ab59d63d2188a8207d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetofirstattribute&quot;&gt;XMLReader::moveToFirstAttribute()&lt;/a&gt; - Position cursor on the first Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetofirstattribute&quot;&gt;XMLReader :: moveToFirstAttribute（）&lt;/a&gt; -最初の属性にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="a334600e8ce79fda2a2c4fbc17f620d70cf66e7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetofirstattribute&quot;&gt;XMLReader::moveToFirstAttribute&lt;/a&gt; &amp;mdash; Position cursor on the first Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetofirstattribute&quot;&gt;XMLReader :: moveToFirstAttribute&lt;/a&gt; &amp;mdash;最初の属性にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="74ef120cea5093f20581cd12f0c2c4993cea3642" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetonextattribute&quot;&gt;XMLReader::moveToNextAttribute()&lt;/a&gt; - Position cursor on the next Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetonextattribute&quot;&gt;XMLReader :: moveToNextAttribute（）&lt;/a&gt; -次の属性にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="00695137ef77864d47f1e34a531257524c703e50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.movetonextattribute&quot;&gt;XMLReader::moveToNextAttribute&lt;/a&gt; &amp;mdash; Position cursor on the next Attribute</source>
          <target state="translated">&lt;a href=&quot;xmlreader.movetonextattribute&quot;&gt;XMLReader :: moveToNextAttribute&lt;/a&gt; &amp;mdash;カーソルを次の属性に置く</target>
        </trans-unit>
        <trans-unit id="1d210b3a96c4c18bab40f7c670fe1e15cdc82401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.next&quot;&gt;XMLReader::next()&lt;/a&gt; - Move cursor to next node skipping all subtrees</source>
          <target state="translated">&lt;a href=&quot;xmlreader.next&quot;&gt;XMLReader :: next（）&lt;/a&gt; -カーソルを次のノードに移動し、すべてのサブツリーをスキップする</target>
        </trans-unit>
        <trans-unit id="329a2e18d5d19d779bf86c58068d9b8e07ddcdb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.next&quot;&gt;XMLReader::next&lt;/a&gt; &amp;mdash; Move cursor to next node skipping all subtrees</source>
          <target state="translated">&lt;a href=&quot;xmlreader.next&quot;&gt;XMLReader :: next&lt;/a&gt; &amp;mdash;すべてのサブツリーをスキップして、カーソルを次のノードに移動する</target>
        </trans-unit>
        <trans-unit id="410ba3a0b16b22ee1267c005256da2cd85bd9b61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.open&quot;&gt;XMLReader::open()&lt;/a&gt; - Set the URI containing the XML to parse</source>
          <target state="translated">&lt;a href=&quot;xmlreader.open&quot;&gt;XMLReader :: open（）&lt;/a&gt; -解析するXMLを含むURIを設定する</target>
        </trans-unit>
        <trans-unit id="bb2b930268a0d0f1c4c77873bcb0a81dc3734983" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.open&quot;&gt;XMLReader::open&lt;/a&gt; &amp;mdash; Set the URI containing the XML to parse</source>
          <target state="translated">&lt;a href=&quot;xmlreader.open&quot;&gt;XMLReader :: open&lt;/a&gt; &amp;mdash;解析するXMLを含むURIを設定する</target>
        </trans-unit>
        <trans-unit id="8918aefac59ed41f6fabffb2260065327a93b58c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.read&quot;&gt;XMLReader::read&lt;/a&gt; &amp;mdash; Move to next node in document</source>
          <target state="translated">&lt;a href=&quot;xmlreader.read&quot;&gt;XMLReader :: read&lt;/a&gt; &amp;mdash;ドキュメントの次のノードに移動する</target>
        </trans-unit>
        <trans-unit id="d94a8dd0a6a7323de93954dc12278bf5a3a4baab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readinnerxml&quot;&gt;XMLReader::readInnerXml()&lt;/a&gt; - Retrieve XML from current node</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readinnerxml&quot;&gt;XMLReader :: readInnerXml（）&lt;/a&gt; -現在のノードからXMLを取得する</target>
        </trans-unit>
        <trans-unit id="38b92592b7349427a2789f90618a6a05d3d56e9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readinnerxml&quot;&gt;XMLReader::readInnerXml&lt;/a&gt; &amp;mdash; Retrieve XML from current node</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readinnerxml&quot;&gt;XMLReader :: readInnerXml&lt;/a&gt; &amp;mdash;現在のノードからXMLを取得する</target>
        </trans-unit>
        <trans-unit id="991515b06e2b54dea76ad3e00b9f991d11cc5e52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readouterxml&quot;&gt;XMLReader::readOuterXml()&lt;/a&gt; - Retrieve XML from current node, including itself</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readouterxml&quot;&gt;XMLReader :: readOuterXml（）&lt;/a&gt; -自身を含む現在のノードからXMLを取得する</target>
        </trans-unit>
        <trans-unit id="382c9be845ed00e03573d6df1c507d5c27a7c258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readouterxml&quot;&gt;XMLReader::readOuterXml&lt;/a&gt; &amp;mdash; Retrieve XML from current node, including itself</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readouterxml&quot;&gt;XMLReader :: readOuterXml&lt;/a&gt; &amp;mdash;現在のノードから自分自身を含むXMLを取得する</target>
        </trans-unit>
        <trans-unit id="314e9ec7d654341997d191e7aee5c3043a47d815" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readstring&quot;&gt;XMLReader::readString()&lt;/a&gt; - Reads the contents of the current node as a string</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readstring&quot;&gt;XMLReader :: readString（）&lt;/a&gt; -現在のノードの内容を文字列として読み取る</target>
        </trans-unit>
        <trans-unit id="1cfbad22894222a01e101d9c22479f30d3915b74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.readstring&quot;&gt;XMLReader::readString&lt;/a&gt; &amp;mdash; Reads the contents of the current node as a string</source>
          <target state="translated">&lt;a href=&quot;xmlreader.readstring&quot;&gt;XMLReader :: readString&lt;/a&gt; &amp;mdash;現在のノードの内容を文字列として読み込む</target>
        </trans-unit>
        <trans-unit id="5c19cad77f93af6aff4011b06c2aba700314082e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setparserproperty&quot;&gt;XMLReader::setParserProperty()&lt;/a&gt; - Set parser options</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setparserproperty&quot;&gt;XMLReader :: setParserProperty（）&lt;/a&gt; -パーサーオプションを設定する</target>
        </trans-unit>
        <trans-unit id="04293721ab720fa77ad162dc3bbdc061052659d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setparserproperty&quot;&gt;XMLReader::setParserProperty&lt;/a&gt; &amp;mdash; Set parser options</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setparserproperty&quot;&gt;XMLReader :: setParserProperty&lt;/a&gt; &amp;mdash;パーサーオプションを設定する</target>
        </trans-unit>
        <trans-unit id="f9e1c0d1ca65d549a8672a6f533a3df3365ac25c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setrelaxngschema&quot;&gt;XMLReader::setRelaxNGSchema()&lt;/a&gt; - Set the filename or URI for a RelaxNG Schema</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setrelaxngschema&quot;&gt;XMLReader :: setRelaxNGSchema（）&lt;/a&gt; -RelaxNGスキーマのファイル名またはURIを設定する</target>
        </trans-unit>
        <trans-unit id="eb6f01fbc9c0eafaa53b6ee1f3fbca6ecf50d8f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setrelaxngschema&quot;&gt;XMLReader::setRelaxNGSchema&lt;/a&gt; &amp;mdash; Set the filename or URI for a RelaxNG Schema</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setrelaxngschema&quot;&gt;XMLReader :: setRelaxNGSchema&lt;/a&gt; &amp;mdash; RelaxNGスキーマのファイル名またはURIを設定する</target>
        </trans-unit>
        <trans-unit id="c462288f52670c2d850ab06ceaf6b8bce5c5387e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setrelaxngschemasource&quot;&gt;XMLReader::setRelaxNGSchemaSource()&lt;/a&gt; - Set the data containing a RelaxNG Schema</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setrelaxngschemasource&quot;&gt;XMLReader :: setRelaxNGSchemaSource（）&lt;/a&gt; -RelaxNGスキーマを含むデータを設定する</target>
        </trans-unit>
        <trans-unit id="f454d39f800ca527bf271a0cedb66df68122825d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setrelaxngschemasource&quot;&gt;XMLReader::setRelaxNGSchemaSource&lt;/a&gt; &amp;mdash; Set the data containing a RelaxNG Schema</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setrelaxngschemasource&quot;&gt;XMLReader :: setRelaxNGSchemaSource&lt;/a&gt; &amp;mdash; RelaxNGスキーマを含むデータを設定する</target>
        </trans-unit>
        <trans-unit id="7c37778196a0f69c1fa8b9e90c98b81bc14668e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setschema&quot;&gt;XMLReader::setSchema()&lt;/a&gt; - Validate document against XSD</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setschema&quot;&gt;XMLReader :: setSchema（）&lt;/a&gt; -XSDに対してドキュメントを検証する</target>
        </trans-unit>
        <trans-unit id="f64c4f5a1a03f7b3caf2961c717546155ddbc2d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.setschema&quot;&gt;XMLReader::setSchema&lt;/a&gt; &amp;mdash; Validate document against XSD</source>
          <target state="translated">&lt;a href=&quot;xmlreader.setschema&quot;&gt;XMLReader :: setSchema&lt;/a&gt; &amp;mdash; XSDに対してドキュメントを検証する</target>
        </trans-unit>
        <trans-unit id="f9a0525c32488b840b1f58ef0893e0c8a9b04708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.xml&quot;&gt;XMLReader::XML&lt;/a&gt; &amp;mdash; Set the data containing the XML to parse</source>
          <target state="translated">&lt;a href=&quot;xmlreader.xml&quot;&gt;XMLReader :: XML&lt;/a&gt; &amp;mdash;解析するXMLを含むデータを設定する</target>
        </trans-unit>
        <trans-unit id="3b2ea910001bbbfa21f25f348805ee63e56d2033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlreader.xml&quot;&gt;XMLReader::xml()&lt;/a&gt; - Set the data containing the XML to parse</source>
          <target state="translated">&lt;a href=&quot;xmlreader.xml&quot;&gt;XMLReader :: xml（）&lt;/a&gt; -解析するXMLを含むデータを設定する</target>
        </trans-unit>
        <trans-unit id="1c6e05c94bdb0d69ea49bb3c9c94dcd020063e78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.construct&quot;&gt;XSLTProcessor::__construct&lt;/a&gt; &amp;mdash; Creates a new XSLTProcessor object</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.construct&quot;&gt;XSLTProcessor :: __ construct&lt;/a&gt; &amp;mdash;新しいXSLTProcessorオブジェクトを作成する</target>
        </trans-unit>
        <trans-unit id="753a5d6655d67d4301d744c90edb294338b7129b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.getparameter&quot;&gt;XSLTProcessor::getParameter()&lt;/a&gt; - Get value of a parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.getparameter&quot;&gt;XSLTProcessor :: getParameter（）&lt;/a&gt; -パラメータの値を取得する</target>
        </trans-unit>
        <trans-unit id="e7d98bbdd1dedb7442f5fdbe5f5224a2dc321a55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.getparameter&quot;&gt;XSLTProcessor::getParameter&lt;/a&gt; &amp;mdash; Get value of a parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.getparameter&quot;&gt;XSLTProcessor :: getParameter&lt;/a&gt; &amp;mdash;パラメータの値を取得する</target>
        </trans-unit>
        <trans-unit id="fb1af3049f279ab3b17ca685a99f9300c11b8c6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.getsecurityprefs&quot;&gt;XSLTProcessor::getSecurityPrefs&lt;/a&gt; &amp;mdash; Get security preferences</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.getsecurityprefs&quot;&gt;XSLTProcessor :: getSecurityPrefs&lt;/a&gt; &amp;mdash;セキュリティ設定を取得する</target>
        </trans-unit>
        <trans-unit id="eefcb074b0aa7f4381d919d8ecf40839765c485d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.hasexsltsupport&quot;&gt;XSLTProcessor::hasExsltSupport&lt;/a&gt; &amp;mdash; Determine if PHP has EXSLT support</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.hasexsltsupport&quot;&gt;XSLTProcessor :: hasExsltSupport&lt;/a&gt; &amp;mdash; PHPがEXSLTをサポートしているかどうかを調べる</target>
        </trans-unit>
        <trans-unit id="806886b4783349026e229d7d4400c82b1799ee66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.importstylesheet&quot;&gt;XSLTProcessor::importStylesheet&lt;/a&gt; &amp;mdash; Import stylesheet</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.importstylesheet&quot;&gt;XSLTProcessor :: importStylesheet&lt;/a&gt; &amp;mdash;スタイルシートをインポートする</target>
        </trans-unit>
        <trans-unit id="aca875d7d7c3569239ad49b0af290b679a674f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.registerphpfunctions&quot;&gt;XSLTProcessor::registerPHPFunctions&lt;/a&gt; &amp;mdash; Enables the ability to use PHP functions as XSLT functions</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.registerphpfunctions&quot;&gt;XSLTProcessor :: registerPHPFunctions&lt;/a&gt; &amp;mdash; PHP関数をXSLT関数として使用できるようにする</target>
        </trans-unit>
        <trans-unit id="1d15f446f3e208c3b9e04eaffb70e4cf582d568b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.removeparameter&quot;&gt;XSLTProcessor::removeParameter()&lt;/a&gt; - Remove parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.removeparameter&quot;&gt;XSLTProcessor :: removeParameter（）&lt;/a&gt; -パラメータを削除する</target>
        </trans-unit>
        <trans-unit id="ec59430718a5b9a5f9a042b4e9cf662311623f4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.removeparameter&quot;&gt;XSLTProcessor::removeParameter&lt;/a&gt; &amp;mdash; Remove parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.removeparameter&quot;&gt;XSLTProcessor :: removeParameter&lt;/a&gt; &amp;mdash;パラメータを削除する</target>
        </trans-unit>
        <trans-unit id="3bcb9cb72107cbea4763f020e73873b567cd431c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.setparameter&quot;&gt;XSLTProcessor::setParameter()&lt;/a&gt; - Set value for a parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.setparameter&quot;&gt;XSLTProcessor :: setParameter（）&lt;/a&gt; -パラメータの値を設定する</target>
        </trans-unit>
        <trans-unit id="0ff335dc7ae12a39e591b9c3d10878271064f0a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.setparameter&quot;&gt;XSLTProcessor::setParameter&lt;/a&gt; &amp;mdash; Set value for a parameter</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.setparameter&quot;&gt;XSLTProcessor :: setParameter&lt;/a&gt; &amp;mdash;パラメータの値を設定する</target>
        </trans-unit>
        <trans-unit id="a294b9838f17f1bd760b3f04ed41f6d680bf1205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.setprofiling&quot;&gt;XSLTProcessor::setProfiling&lt;/a&gt; &amp;mdash; Sets profiling output file</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.setprofiling&quot;&gt;XSLTProcessor :: setProfiling&lt;/a&gt; &amp;mdash;プロファイリング出力ファイルを設定する</target>
        </trans-unit>
        <trans-unit id="1a57edd6847be3a4631e4a9847610af834d3a4a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.setsecurityprefs&quot;&gt;XSLTProcessor::setSecurityPrefs&lt;/a&gt; &amp;mdash; Set security preferences</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.setsecurityprefs&quot;&gt;XSLTProcessor :: setSecurityPrefs&lt;/a&gt; &amp;mdash;セキュリティ設定を設定する</target>
        </trans-unit>
        <trans-unit id="116ed107ecb038710c864779fdf229cc1497c0e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtodoc&quot;&gt;XSLTProcessor::transformToDoc()&lt;/a&gt; - Transform to a DOMDocument</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtodoc&quot;&gt;XSLTProcessor :: transformToDoc（）&lt;/a&gt; -DOMDocumentに変換する</target>
        </trans-unit>
        <trans-unit id="3082e434cb2501e93007583932a046f08959134b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtodoc&quot;&gt;XSLTProcessor::transformToDoc&lt;/a&gt; &amp;mdash; Transform to a DOMDocument</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtodoc&quot;&gt;XSLTProcessor :: transformToDoc&lt;/a&gt; &amp;mdash; DOMDocumentに変換する</target>
        </trans-unit>
        <trans-unit id="0a6bf39797e77ceb734c3a85d872d401c879cb38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtouri&quot;&gt;XSLTProcessor::transformToUri()&lt;/a&gt; - Transform to URI</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtouri&quot;&gt;XSLTProcessor :: transformToUri（）&lt;/a&gt; -URIに変換する</target>
        </trans-unit>
        <trans-unit id="233cd52d843e27f7d1831e7297917789587c646d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtouri&quot;&gt;XSLTProcessor::transformToUri&lt;/a&gt; &amp;mdash; Transform to URI</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtouri&quot;&gt;XSLTProcessor :: transformToUri&lt;/a&gt; &amp;mdash; URIに変換する</target>
        </trans-unit>
        <trans-unit id="20abde8442cbcfacfe16b0967bb51d643cdb2bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtoxml&quot;&gt;XSLTProcessor::transformToXml()&lt;/a&gt; - Transform to XML</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtoxml&quot;&gt;XSLTProcessor :: transformToXml（）&lt;/a&gt; -XMLに変換する</target>
        </trans-unit>
        <trans-unit id="c1b6f3f151f86eddf9dcf11d6bf6cdffd0c13f7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xsltprocessor.transformtoxml&quot;&gt;XSLTProcessor::transformToXml&lt;/a&gt; &amp;mdash; Transform to XML</source>
          <target state="translated">&lt;a href=&quot;xsltprocessor.transformtoxml&quot;&gt;XSLTProcessor :: transformToXml&lt;/a&gt; &amp;mdash; XMLに変換する</target>
        </trans-unit>
        <trans-unit id="2253c351b79406748c20303bfa3a43b4bb629b70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-action-abstract.execute&quot;&gt;Yaf_Action_Abstract::execute&lt;/a&gt; &amp;mdash; Action entry point</source>
          <target state="translated">&lt;a href=&quot;yaf-action-abstract.execute&quot;&gt;Yaf_Action_Abstract :: execute&lt;/a&gt; &amp;mdash;アクションのエントリーポイント</target>
        </trans-unit>
        <trans-unit id="7331b0f845ecca5694119d108390f6aff5452a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-action-abstract.getcontroller&quot;&gt;Yaf_Action_Abstract::getController&lt;/a&gt; &amp;mdash; Retrieve controller object</source>
          <target state="translated">&lt;a href=&quot;yaf-action-abstract.getcontroller&quot;&gt;Yaf_Action_Abstract :: getController&lt;/a&gt; &amp;mdash;コントローラオブジェクトを取得する</target>
        </trans-unit>
        <trans-unit id="11a2a321e0e1b20ec3cf3558b8fdb6e801fc87a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application::app()&lt;/a&gt; - Retrieve an Application instance</source>
          <target state="translated">&lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application :: app（）&lt;/a&gt; -アプリケーションインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="93eba4999af16206e676d65b465bede6b7a4a942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application::app&lt;/a&gt; &amp;mdash; Retrieve an Application instance</source>
          <target state="translated">&lt;a href=&quot;yaf-application.app&quot;&gt;Yaf_Application :: app&lt;/a&gt; &amp;mdash;アプリケーションのインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="eaf41eb196b540bc0a3be84ef644203a640bf526" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.bootstrap&quot;&gt;Yaf_Application::bootstrap&lt;/a&gt; &amp;mdash; Call bootstrap</source>
          <target state="translated">&lt;a href=&quot;yaf-application.bootstrap&quot;&gt;Yaf_Application :: bootstrap&lt;/a&gt; &amp;mdash;ブートストラップを呼び出す</target>
        </trans-unit>
        <trans-unit id="e0e1fcc74b7924960469edbd44ca3746a5c03122" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.clearlasterror&quot;&gt;Yaf_Application::clearLastError&lt;/a&gt; &amp;mdash; Clear the last error info</source>
          <target state="translated">&lt;a href=&quot;yaf-application.clearlasterror&quot;&gt;Yaf_Application :: clearLastError&lt;/a&gt; &amp;mdash;直近のエラー情報をクリアする</target>
        </trans-unit>
        <trans-unit id="fd008abeb42bf007ffc2660ba7c5f8ce0076f84e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.clone&quot;&gt;Yaf_Application::__clone&lt;/a&gt; &amp;mdash; Yaf_Application can not be cloned</source>
          <target state="translated">&lt;a href=&quot;yaf-application.clone&quot;&gt;Yaf_Application :: __ clone&lt;/a&gt; &amp;mdash; Yaf_Applicationは複製できません</target>
        </trans-unit>
        <trans-unit id="6528dd0f5160d1f20351d9361efabbbac377aa1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.construct&quot;&gt;Yaf_Application::__construct&lt;/a&gt; &amp;mdash; Yaf_Application constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-application.construct&quot;&gt;Yaf_Application :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Applicationコンストラクタ</target>
        </trans-unit>
        <trans-unit id="93c7f16e787d8fc5992a5292d14aaf20b538c55d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.destruct&quot;&gt;Yaf_Application::__destruct&lt;/a&gt; &amp;mdash; The __destruct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-application.destruct&quot;&gt;Yaf_Application :: __ destruct&lt;/a&gt; &amp;mdash; __destructの目的</target>
        </trans-unit>
        <trans-unit id="2933882d133c1e16022dbe9f212d75d6dbbe7a64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.environ&quot;&gt;Yaf_Application::environ&lt;/a&gt; &amp;mdash; Retrive environ</source>
          <target state="translated">&lt;a href=&quot;yaf-application.environ&quot;&gt;Yaf_Application :: environ&lt;/a&gt; &amp;mdash;環境を取得する</target>
        </trans-unit>
        <trans-unit id="3092020082507284faa6d0e01d28359aa5e5b42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.execute&quot;&gt;Yaf_Application::execute&lt;/a&gt; &amp;mdash; Execute a callback</source>
          <target state="translated">&lt;a href=&quot;yaf-application.execute&quot;&gt;Yaf_Application :: execute&lt;/a&gt; &amp;mdash;コールバックを実行する</target>
        </trans-unit>
        <trans-unit id="4e07b8b237ffacc8f9eb3fc83bd08beaeb89288b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getappdirectory&quot;&gt;Yaf_Application::getAppDirectory&lt;/a&gt; &amp;mdash; Get the application directory</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getappdirectory&quot;&gt;Yaf_Application :: getAppDirectory&lt;/a&gt; &amp;mdash;アプリケーションのディレクトリを取得する</target>
        </trans-unit>
        <trans-unit id="70f83a7ccc40114374b4e151cc0d93a0e4bf3037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getconfig&quot;&gt;Yaf_Application::getConfig&lt;/a&gt; &amp;mdash; Retrive the config instance</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getconfig&quot;&gt;Yaf_Application :: getConfig&lt;/a&gt; &amp;mdash;設定インスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="6191899f655ba7ee90b5203a09724dd799f4f59a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getdispatcher&quot;&gt;Yaf_Application::getDispatcher&lt;/a&gt; &amp;mdash; Get Yaf_Dispatcher instance</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getdispatcher&quot;&gt;Yaf_Application :: getDispatcher&lt;/a&gt; &amp;mdash; Yaf_Dispatcherインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="b245d87f3797ea1af49cf3974fc9617c9478f03a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getlasterrormsg&quot;&gt;Yaf_Application::getLastErrorMsg()&lt;/a&gt; - Get message of the last occurred error</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getlasterrormsg&quot;&gt;Yaf_Application :: getLastErrorMsg（）&lt;/a&gt; -最後に発生したエラーのメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="cac919a93e4a01d8454e95ebc1d10e46191d3e25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getlasterrormsg&quot;&gt;Yaf_Application::getLastErrorMsg&lt;/a&gt; &amp;mdash; Get message of the last occurred error</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getlasterrormsg&quot;&gt;Yaf_Application :: getLastErrorMsg&lt;/a&gt; &amp;mdash;最後に発生したエラーのメッセージを取得する</target>
        </trans-unit>
        <trans-unit id="dcf3832db8c15dc6a0507f4ef8a89098e3bd4e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getlasterrorno&quot;&gt;Yaf_Application::getLastErrorNo()&lt;/a&gt; - Get code of last occurred error</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getlasterrorno&quot;&gt;Yaf_Application :: getLastErrorNo（）&lt;/a&gt; -最後に発生したエラーのコードを取得する</target>
        </trans-unit>
        <trans-unit id="2c3eed657991598766c38ade3e9fee3a51d9d033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getlasterrorno&quot;&gt;Yaf_Application::getLastErrorNo&lt;/a&gt; &amp;mdash; Get code of last occurred error</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getlasterrorno&quot;&gt;Yaf_Application :: getLastErrorNo&lt;/a&gt; &amp;mdash;最後に発生したエラーのコードを取得する</target>
        </trans-unit>
        <trans-unit id="2a2cb886a7f4707a4e19f6b26bcaeda4db00dcc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.getmodules&quot;&gt;Yaf_Application::getModules&lt;/a&gt; &amp;mdash; Get defined module names</source>
          <target state="translated">&lt;a href=&quot;yaf-application.getmodules&quot;&gt;Yaf_Application :: getModules&lt;/a&gt; &amp;mdash;定義されたモジュール名を取得する</target>
        </trans-unit>
        <trans-unit id="1c6fc8e2e69dc32d894c260f43d7e3619a88bc49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.run&quot;&gt;Yaf_Application::run&lt;/a&gt; &amp;mdash; Start Yaf_Application</source>
          <target state="translated">&lt;a href=&quot;yaf-application.run&quot;&gt;Yaf_Application :: run&lt;/a&gt; &amp;mdash; Yaf_Applicationを起動する</target>
        </trans-unit>
        <trans-unit id="5967138301fde19d71ca2042c7995565bd0e1d41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.setappdirectory&quot;&gt;Yaf_Application::setAppDirectory&lt;/a&gt; &amp;mdash; Change the application directory</source>
          <target state="translated">&lt;a href=&quot;yaf-application.setappdirectory&quot;&gt;Yaf_Application :: setAppDirectory&lt;/a&gt; &amp;mdash;アプリケーションのディレクトリを変更する</target>
        </trans-unit>
        <trans-unit id="b47ec5a7764536abd29db2bafde4aa370429ac08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.sleep&quot;&gt;Yaf_Application::__sleep&lt;/a&gt; &amp;mdash; Yaf_Application can not be serialized</source>
          <target state="translated">&lt;a href=&quot;yaf-application.sleep&quot;&gt;Yaf_Application :: __ sleep&lt;/a&gt; &amp;mdash; Yaf_Applicationはシリアル化できません</target>
        </trans-unit>
        <trans-unit id="c2c725fe1435bea19be7b42425aed9f46f6fd4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-application.wakeup&quot;&gt;Yaf_Application::__wakeup&lt;/a&gt; &amp;mdash; Yaf_Application can not be unserialized</source>
          <target state="translated">&lt;a href=&quot;yaf-application.wakeup&quot;&gt;Yaf_Application :: __ wakeup&lt;/a&gt; &amp;mdash; Yaf_Applicationはシリアル化解除できません</target>
        </trans-unit>
        <trans-unit id="dd2ac6153523a5d486ecb7db8bacf0c6f8478aa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-abstract.get&quot;&gt;Yaf_Config_Abstract::get&lt;/a&gt; &amp;mdash; Getter</source>
          <target state="translated">&lt;a href=&quot;yaf-config-abstract.get&quot;&gt;Yaf_Config_Abstract :: get&lt;/a&gt; &amp;mdash;ゲッター</target>
        </trans-unit>
        <trans-unit id="ae5c2073e079611234a5c02c8c8fe246ff91431a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-abstract.readonly&quot;&gt;Yaf_Config_Abstract::readonly&lt;/a&gt; &amp;mdash; Find a config whether readonly</source>
          <target state="translated">&lt;a href=&quot;yaf-config-abstract.readonly&quot;&gt;Yaf_Config_Abstract :: readonly&lt;/a&gt; &amp;mdash;設定が読み取り専用かどうかを調べる</target>
        </trans-unit>
        <trans-unit id="12fe34cbd81d7654a9db2dcdc776784fceb9db2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-abstract.set&quot;&gt;Yaf_Config_Abstract::set&lt;/a&gt; &amp;mdash; Setter</source>
          <target state="translated">&lt;a href=&quot;yaf-config-abstract.set&quot;&gt;Yaf_Config_Abstract :: set&lt;/a&gt; &amp;mdash;セッター</target>
        </trans-unit>
        <trans-unit id="c341753f1ff82cb08591ff1e1d18aaea34ea9c58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-abstract.toarray&quot;&gt;Yaf_Config_Abstract::toArray&lt;/a&gt; &amp;mdash; Cast to array</source>
          <target state="translated">&lt;a href=&quot;yaf-config-abstract.toarray&quot;&gt;Yaf_Config_Abstract :: toArray&lt;/a&gt; &amp;mdash;配列にキャストする</target>
        </trans-unit>
        <trans-unit id="47ea4be79cac0136f75b683ff1d38f7db400877f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.construct&quot;&gt;Yaf_Config_Ini::__construct&lt;/a&gt; &amp;mdash; Yaf_Config_Ini constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.construct&quot;&gt;Yaf_Config_Ini :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Config_Iniコンストラクタ</target>
        </trans-unit>
        <trans-unit id="2f2c4ea054c4d439832d765f37304471637ef5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.count&quot;&gt;Yaf_Config_Ini::count&lt;/a&gt; &amp;mdash; Count all elements in Yaf_Config.ini</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.count&quot;&gt;Yaf_Config_Ini :: count&lt;/a&gt; &amp;mdash; Yaf_Config.iniのすべての要素をカウントする</target>
        </trans-unit>
        <trans-unit id="9f8dd3f27ef642e2b57d21a7ede03000606fb638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.current&quot;&gt;Yaf_Config_Ini::current&lt;/a&gt; &amp;mdash; Retrieve the current value</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.current&quot;&gt;Yaf_Config_Ini :: current&lt;/a&gt; &amp;mdash;現在の値を取得する</target>
        </trans-unit>
        <trans-unit id="bbc526195fccba20ebd052a779b9d59ef77050cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.get&quot;&gt;Yaf_Config_Ini::__get&lt;/a&gt; &amp;mdash; Retrieve a element</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.get&quot;&gt;Yaf_Config_Ini :: __ get&lt;/a&gt; &amp;mdash;要素を取得する</target>
        </trans-unit>
        <trans-unit id="874262b487bf75e174450ef1eb53e87489776b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.isset&quot;&gt;Yaf_Config_Ini::__isset&lt;/a&gt; &amp;mdash; Determine if a key is exists</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.isset&quot;&gt;Yaf_Config_Ini :: __ isset&lt;/a&gt; &amp;mdash;キーが存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="bd437f15ef6a4b6d2fb14cc1bdf072ddc98e6a04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.key&quot;&gt;Yaf_Config_Ini::key&lt;/a&gt; &amp;mdash; Fetch current element's key</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.key&quot;&gt;Yaf_Config_Ini :: key&lt;/a&gt; &amp;mdash;現在の要素のキーを取得する</target>
        </trans-unit>
        <trans-unit id="4c7d88dbe1186a7ee820e41b74afc42cd55d20a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.next&quot;&gt;Yaf_Config_Ini::next&lt;/a&gt; &amp;mdash; Advance the internal pointer</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.next&quot;&gt;Yaf_Config_Ini :: next&lt;/a&gt; &amp;mdash;内部ポインタを進める</target>
        </trans-unit>
        <trans-unit id="84f14bec04f57b8849b4e0f6930c3805e097cb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.offsetexists&quot;&gt;Yaf_Config_Ini::offsetExists&lt;/a&gt; &amp;mdash; The offsetExists purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.offsetexists&quot;&gt;Yaf_Config_Ini :: offsetExists&lt;/a&gt; &amp;mdash; offsetExistsの目的</target>
        </trans-unit>
        <trans-unit id="7d77eba6101a80d0c8b4f5a2e369c5ec15e8f1d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.offsetget&quot;&gt;Yaf_Config_Ini::offsetGet&lt;/a&gt; &amp;mdash; The offsetGet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.offsetget&quot;&gt;Yaf_Config_Ini :: offsetGet&lt;/a&gt; &amp;mdash; offsetGetの目的</target>
        </trans-unit>
        <trans-unit id="7981eb16308b143754b6cd5912265540e0f94378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.offsetset&quot;&gt;Yaf_Config_Ini::offsetSet&lt;/a&gt; &amp;mdash; The offsetSet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.offsetset&quot;&gt;Yaf_Config_Ini :: offsetSet&lt;/a&gt; &amp;mdash; offsetSetの目的</target>
        </trans-unit>
        <trans-unit id="32e143f27f2ba2269ef5b6659255db8a12aca0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.offsetunset&quot;&gt;Yaf_Config_Ini::offsetUnset&lt;/a&gt; &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.offsetunset&quot;&gt;Yaf_Config_Ini :: offsetUnset&lt;/a&gt; &amp;mdash; offsetUnsetの目的</target>
        </trans-unit>
        <trans-unit id="5bc249e2aed704d4ae162441a3538611a85c0f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.readonly&quot;&gt;Yaf_Config_Ini::readonly&lt;/a&gt; &amp;mdash; The readonly purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.readonly&quot;&gt;Yaf_Config_Ini :: readonly&lt;/a&gt; &amp;mdash;読み取り専用の目的</target>
        </trans-unit>
        <trans-unit id="b77fd83578efdca3c53f607b6a5550af48118a70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.rewind&quot;&gt;Yaf_Config_Ini::rewind&lt;/a&gt; &amp;mdash; The rewind purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.rewind&quot;&gt;Yaf_Config_Ini :: rewind&lt;/a&gt; &amp;mdash;巻き戻しの目的</target>
        </trans-unit>
        <trans-unit id="2f59ebffc1dfdc1fbd3b8f852f4c7c7e464e3daf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.set&quot;&gt;Yaf_Config_Ini::__set&lt;/a&gt; &amp;mdash; The __set purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.set&quot;&gt;Yaf_Config_Ini :: __ set&lt;/a&gt; &amp;mdash; __setの目的</target>
        </trans-unit>
        <trans-unit id="8792a87dbab2e8c309409714950a0674fc1ff253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.toarray&quot;&gt;Yaf_Config_Ini::toArray&lt;/a&gt; &amp;mdash; Return config as a PHP array</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.toarray&quot;&gt;Yaf_Config_Ini :: toArray&lt;/a&gt; &amp;mdash;設定をPHP配列として返す</target>
        </trans-unit>
        <trans-unit id="61ee6d7a8a6ef530e8016ad6b6a88b0d38c0f1b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-ini.valid&quot;&gt;Yaf_Config_Ini::valid&lt;/a&gt; &amp;mdash; The valid purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-ini.valid&quot;&gt;Yaf_Config_Ini :: valid&lt;/a&gt; &amp;mdash;有効な目的</target>
        </trans-unit>
        <trans-unit id="bf0299668d8abfc3302b6faf323c586d07679b65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.construct&quot;&gt;Yaf_Config_Simple::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.construct&quot;&gt;Yaf_Config_Simple :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="c454e09e2d7cd4f11c66db12ca16b1e77d2fe242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.count&quot;&gt;Yaf_Config_Simple::count&lt;/a&gt; &amp;mdash; The count purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.count&quot;&gt;Yaf_Config_Simple :: count&lt;/a&gt; &amp;mdash;カウントの目的</target>
        </trans-unit>
        <trans-unit id="342e7d41e81ce1ea6d63a05c36fa2bef492a2867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.current&quot;&gt;Yaf_Config_Simple::current&lt;/a&gt; &amp;mdash; The current purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.current&quot;&gt;Yaf_Config_Simple :: current&lt;/a&gt; &amp;mdash;現在の目的</target>
        </trans-unit>
        <trans-unit id="82b83e5685a433e7a19af31b5c2a8fe39ace09fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.get&quot;&gt;Yaf_Config_Simple::__get&lt;/a&gt; &amp;mdash; The __get purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.get&quot;&gt;Yaf_Config_Simple :: __ get&lt;/a&gt; &amp;mdash; __getの目的</target>
        </trans-unit>
        <trans-unit id="c0e0ac631755c8afc78dc1e0ebe3532176aa8ed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.isset&quot;&gt;Yaf_Config_Simple::__isset&lt;/a&gt; &amp;mdash; The __isset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.isset&quot;&gt;Yaf_Config_Simple :: __ isset&lt;/a&gt; &amp;mdash; __issetの目的</target>
        </trans-unit>
        <trans-unit id="7df26f5574bf2229952ce1d49784045eb31f1932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.key&quot;&gt;Yaf_Config_Simple::key&lt;/a&gt; &amp;mdash; The key purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.key&quot;&gt;Yaf_Config_Simple :: key&lt;/a&gt; &amp;mdash;キーの目的</target>
        </trans-unit>
        <trans-unit id="35f240a8064c07b6f3a151a227fa9462083a6713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.next&quot;&gt;Yaf_Config_Simple::next&lt;/a&gt; &amp;mdash; The next purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.next&quot;&gt;Yaf_Config_Simple :: next&lt;/a&gt; &amp;mdash;次の目的</target>
        </trans-unit>
        <trans-unit id="dc99a184a0568960624fbc77dd5d6c07bd32fa06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.offsetexists&quot;&gt;Yaf_Config_Simple::offsetExists&lt;/a&gt; &amp;mdash; The offsetExists purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.offsetexists&quot;&gt;Yaf_Config_Simple :: offsetExists&lt;/a&gt; &amp;mdash; offsetExistsの目的</target>
        </trans-unit>
        <trans-unit id="933618f022de654f2ced13eb0548bfd665bdf0c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.offsetget&quot;&gt;Yaf_Config_Simple::offsetGet&lt;/a&gt; &amp;mdash; The offsetGet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.offsetget&quot;&gt;Yaf_Config_Simple :: offsetGet&lt;/a&gt; &amp;mdash; offsetGetの目的</target>
        </trans-unit>
        <trans-unit id="98beeadf1b68d9a887185d1b901cc95a287109cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.offsetset&quot;&gt;Yaf_Config_Simple::offsetSet&lt;/a&gt; &amp;mdash; The offsetSet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.offsetset&quot;&gt;Yaf_Config_Simple :: offsetSet&lt;/a&gt; &amp;mdash; offsetSetの目的</target>
        </trans-unit>
        <trans-unit id="0b4e60101f9b3a4141c83bcf7c879eac94e02e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.offsetunset&quot;&gt;Yaf_Config_Simple::offsetUnset&lt;/a&gt; &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.offsetunset&quot;&gt;Yaf_Config_Simple :: offsetUnset&lt;/a&gt; &amp;mdash; offsetUnsetの目的</target>
        </trans-unit>
        <trans-unit id="913cf7a1dad6345a58cd238e495aa0b02b27b68d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.readonly&quot;&gt;Yaf_Config_Simple::readonly&lt;/a&gt; &amp;mdash; The readonly purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.readonly&quot;&gt;Yaf_Config_Simple :: readonly&lt;/a&gt; &amp;mdash;読み取り専用の目的</target>
        </trans-unit>
        <trans-unit id="2900273dc93c9ebf0237977d9c8f3222dca41032" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.rewind&quot;&gt;Yaf_Config_Simple::rewind&lt;/a&gt; &amp;mdash; The rewind purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.rewind&quot;&gt;Yaf_Config_Simple :: rewind&lt;/a&gt; &amp;mdash;巻き戻しの目的</target>
        </trans-unit>
        <trans-unit id="a57b058e1073a6d20b7adae2e3c81a4782afba23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.set&quot;&gt;Yaf_Config_Simple::__set&lt;/a&gt; &amp;mdash; The __set purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.set&quot;&gt;Yaf_Config_Simple :: __ set&lt;/a&gt; &amp;mdash; __setの目的</target>
        </trans-unit>
        <trans-unit id="79fb5a9a1c3e377f290b37db6b0ef57ef08ae255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.toarray&quot;&gt;Yaf_Config_Simple::toArray&lt;/a&gt; &amp;mdash; Returns a PHP array</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.toarray&quot;&gt;Yaf_Config_Simple :: toArray&lt;/a&gt; &amp;mdash; PHPの配列を返す</target>
        </trans-unit>
        <trans-unit id="82d4fca20ec9b214100cdb0c4c18d72ba514786f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-config-simple.valid&quot;&gt;Yaf_Config_Simple::valid&lt;/a&gt; &amp;mdash; The valid purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-config-simple.valid&quot;&gt;Yaf_Config_Simple :: valid&lt;/a&gt; &amp;mdash;有効な目的</target>
        </trans-unit>
        <trans-unit id="3c6b5638300063d3de753c2237691f33cff445ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.clone&quot;&gt;Yaf_Controller_Abstract::__clone&lt;/a&gt; &amp;mdash; Yaf_Controller_Abstract can not be cloned</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.clone&quot;&gt;Yaf_Controller_Abstract :: __ clone&lt;/a&gt; &amp;mdash; Yaf_Controller_Abstractは複製できません</target>
        </trans-unit>
        <trans-unit id="439cb877fb49c35e1e1f6fb673d467cc4ad9e78d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract::__construct()&lt;/a&gt; - Yaf_Controller_Abstract constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract :: __ construct（）&lt;/a&gt; -Yaf_Controller_Abstractコンストラクタ</target>
        </trans-unit>
        <trans-unit id="65836a34a1af1e284bc5531b4cf18dee7425a1fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract::__construct()&lt;/a&gt; is final, which means users can not override it. but users can define &lt;strong&gt;Yaf_Controller_Abstract::init()&lt;/strong&gt;, which will be called after controller object is instantiated.</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract :: __ construct（）&lt;/a&gt;は最終版であり、ユーザーがオーバーライドすることはできません。ただし、ユーザーは&lt;strong&gt;Yaf_Controller_Abstract :: init（）を&lt;/strong&gt;定義できます。これは、コントローラーオブジェクトがインスタンス化された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="11520f9afd31c2ef10984216947e405f7f8c4b39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract::__construct&lt;/a&gt; &amp;mdash; Yaf_Controller_Abstract constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.construct&quot;&gt;Yaf_Controller_Abstract :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Controller_Abstractコンストラクタ</target>
        </trans-unit>
        <trans-unit id="da25b228362ae0e655e3c8564eec4ab5c99040fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.display&quot;&gt;Yaf_Controller_Abstract::display&lt;/a&gt; &amp;mdash; The display purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.display&quot;&gt;Yaf_Controller_Abstract :: display&lt;/a&gt; &amp;mdash;表示の目的</target>
        </trans-unit>
        <trans-unit id="9ca029ba2f6eb43c91cb0e59b9eaceb9b1838bde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.forward&quot;&gt;Yaf_Controller_Abstract::forward&lt;/a&gt; &amp;mdash; Foward to another action</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.forward&quot;&gt;Yaf_Controller_Abstract :: forward&lt;/a&gt; &amp;mdash;別のアクションに進む</target>
        </trans-unit>
        <trans-unit id="5cbb05a188382ac887b6087021a6c22fa39babcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getinvokearg&quot;&gt;Yaf_Controller_Abstract::getInvokeArg&lt;/a&gt; &amp;mdash; The getInvokeArg purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getinvokearg&quot;&gt;Yaf_Controller_Abstract :: getInvokeArg&lt;/a&gt; &amp;mdash; getInvokeArgの目的</target>
        </trans-unit>
        <trans-unit id="657992921f71a4c6810963cd9327ea221d3d0b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getinvokeargs&quot;&gt;Yaf_Controller_Abstract::getInvokeArgs&lt;/a&gt; &amp;mdash; The getInvokeArgs purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getinvokeargs&quot;&gt;Yaf_Controller_Abstract :: getInvokeArgs&lt;/a&gt; &amp;mdash; getInvokeArgsの目的</target>
        </trans-unit>
        <trans-unit id="51e81c16cfb0cf9dcf0cc22ac0365d0decaf272e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getmodulename&quot;&gt;Yaf_Controller_Abstract::getModuleName&lt;/a&gt; &amp;mdash; Get module name</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getmodulename&quot;&gt;Yaf_Controller_Abstract :: getModuleName&lt;/a&gt; &amp;mdash;モジュール名を取得する</target>
        </trans-unit>
        <trans-unit id="e5c528025e875036322cfa2ba7b09e47d27f2a9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getrequest&quot;&gt;Yaf_Controller_Abstract::getRequest&lt;/a&gt; &amp;mdash; Retrieve current request object</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getrequest&quot;&gt;Yaf_Controller_Abstract :: getRequest&lt;/a&gt; &amp;mdash;現在のリクエストオブジェクトを取得する</target>
        </trans-unit>
        <trans-unit id="9441a7b5e29d7026ebd43768e67cd5936d8c6298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getresponse&quot;&gt;Yaf_Controller_Abstract::getResponse&lt;/a&gt; &amp;mdash; Retrieve current response object</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getresponse&quot;&gt;Yaf_Controller_Abstract :: getResponse&lt;/a&gt; &amp;mdash;現在のレスポンスオブジェクトを取得する</target>
        </trans-unit>
        <trans-unit id="005c6ef85a7e7aaf030673dfb5e0ede09017c301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getview&quot;&gt;Yaf_Controller_Abstract::getView&lt;/a&gt; &amp;mdash; Retrieve the view engine</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getview&quot;&gt;Yaf_Controller_Abstract :: getView&lt;/a&gt; &amp;mdash;ビューエンジンを取得する</target>
        </trans-unit>
        <trans-unit id="aadc52cb93a39223d6c68b1e9ce33673d7971d7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.getviewpath&quot;&gt;Yaf_Controller_Abstract::getViewpath&lt;/a&gt; &amp;mdash; The getViewpath purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.getviewpath&quot;&gt;Yaf_Controller_Abstract :: getViewpath&lt;/a&gt; &amp;mdash; getViewpathの目的</target>
        </trans-unit>
        <trans-unit id="79809e64c05d977e5955c131cd8920fd3ac54fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract::init()&lt;/a&gt; - Controller initializer</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract :: init（）&lt;/a&gt; -コントローラ初期化子</target>
        </trans-unit>
        <trans-unit id="6186dee1fd437e197b6fa638f2daa41f45b3251e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract::init&lt;/a&gt; &amp;mdash; Controller initializer</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract :: init&lt;/a&gt; &amp;mdash;コントローラ初期化子</target>
        </trans-unit>
        <trans-unit id="80347201874c9cce5138c8afd3b0d5b9ab3a2c9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.initview&quot;&gt;Yaf_Controller_Abstract::initView&lt;/a&gt; &amp;mdash; The initView purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.initview&quot;&gt;Yaf_Controller_Abstract :: initView&lt;/a&gt; &amp;mdash; initViewの目的</target>
        </trans-unit>
        <trans-unit id="9371822cdc1db25deb5e27c93d2d133b6fed4fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.redirect&quot;&gt;Yaf_Controller_Abstract::redirect&lt;/a&gt; &amp;mdash; Redirect to a URL</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.redirect&quot;&gt;Yaf_Controller_Abstract :: redirect&lt;/a&gt; &amp;mdash; URLにリダイレクトする</target>
        </trans-unit>
        <trans-unit id="289d011172faaac3b782063fba95015e7dd44465" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.render&quot;&gt;Yaf_Controller_Abstract::render&lt;/a&gt; &amp;mdash; Render view template</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.render&quot;&gt;Yaf_Controller_Abstract :: render&lt;/a&gt; &amp;mdash;ビューテンプレートをレンダリングする</target>
        </trans-unit>
        <trans-unit id="53882dfc9a69db2e81fb93066f46a680ceb76e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-controller-abstract.setviewpath&quot;&gt;Yaf_Controller_Abstract::setViewpath&lt;/a&gt; &amp;mdash; The setViewpath purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-controller-abstract.setviewpath&quot;&gt;Yaf_Controller_Abstract :: setViewpath&lt;/a&gt; &amp;mdash; setViewpathの目的</target>
        </trans-unit>
        <trans-unit id="de6cd481c0601596bbc7cb9c47f38a1ecbf5bcc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.autorender&quot;&gt;Yaf_Dispatcher::autoRender&lt;/a&gt; &amp;mdash; Switch on/off autorendering</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.autorender&quot;&gt;Yaf_Dispatcher :: autoRender&lt;/a&gt; &amp;mdash;自動レンダリングのオン/オフを切り替える</target>
        </trans-unit>
        <trans-unit id="b2df513bd81475209a16db1356faf9e0c6d0684d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.catchexception&quot;&gt;Yaf_Dispatcher::catchException()&lt;/a&gt; - Switch on/off exception catching</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.catchexception&quot;&gt;Yaf_Dispatcher :: catchException（）&lt;/a&gt; -例外キャッチのオン/オフを切り替える</target>
        </trans-unit>
        <trans-unit id="16664f11d610989df2de765ebf63c935e3445550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.catchexception&quot;&gt;Yaf_Dispatcher::catchException&lt;/a&gt; &amp;mdash; Switch on/off exception catching</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.catchexception&quot;&gt;Yaf_Dispatcher :: catchException&lt;/a&gt; &amp;mdash;例外のキャッチをオン/オフにする</target>
        </trans-unit>
        <trans-unit id="89f68adb30e3a77f4781fa7223b21005743d966a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.clone&quot;&gt;Yaf_Dispatcher::__clone&lt;/a&gt; &amp;mdash; Yaf_Dispatcher can not be cloned</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.clone&quot;&gt;Yaf_Dispatcher :: __ clone&lt;/a&gt; &amp;mdash; Yaf_Dispatcherは複製できません</target>
        </trans-unit>
        <trans-unit id="1bed80516fdba1dc90303ce44b3fb345453a151b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.construct&quot;&gt;Yaf_Dispatcher::__construct&lt;/a&gt; &amp;mdash; Yaf_Dispatcher constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.construct&quot;&gt;Yaf_Dispatcher :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Dispatcherコンストラクタ</target>
        </trans-unit>
        <trans-unit id="cae33f9f5772134ff0b952712771ffe5572de728" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.disableview&quot;&gt;Yaf_Dispatcher::disableView&lt;/a&gt; &amp;mdash; Disable view rendering</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.disableview&quot;&gt;Yaf_Dispatcher :: disableView&lt;/a&gt; &amp;mdash;ビューのレンダリングを無効にする</target>
        </trans-unit>
        <trans-unit id="ea252b63010199dccba576875e465f5fb904c596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.dispatch&quot;&gt;Yaf_Dispatcher::dispatch()&lt;/a&gt; - Dispatch a request</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.dispatch&quot;&gt;Yaf_Dispatcher :: dispatch（）&lt;/a&gt; -リクエストをディスパッチする</target>
        </trans-unit>
        <trans-unit id="bdbcd9a6fdf0cecf8a34428fdbd5e5ea54ba4bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.dispatch&quot;&gt;Yaf_Dispatcher::dispatch&lt;/a&gt; &amp;mdash; Dispatch a request</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.dispatch&quot;&gt;Yaf_Dispatcher :: dispatch&lt;/a&gt; &amp;mdash;リクエストをディスパッチする</target>
        </trans-unit>
        <trans-unit id="02f80441d6c52758e5bfb77a3e2a121826463608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.enableview&quot;&gt;Yaf_Dispatcher::enableView&lt;/a&gt; &amp;mdash; Enable view rendering</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.enableview&quot;&gt;Yaf_Dispatcher :: enableView&lt;/a&gt; &amp;mdash;ビューのレンダリングを有効にする</target>
        </trans-unit>
        <trans-unit id="c64d5476595a34d6dffaf2532c98414f4abad4c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.flushinstantly&quot;&gt;Yaf_Dispatcher::flushInstantly&lt;/a&gt; &amp;mdash; Switch on/off the instant flushing</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.flushinstantly&quot;&gt;Yaf_Dispatcher :: flushInstantly&lt;/a&gt; &amp;mdash;インスタントフラッシュのオン/オフを切り替える</target>
        </trans-unit>
        <trans-unit id="69fe6934db73e826f5791fae11c5728f3ffef7a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher::getApplication()&lt;/a&gt; - Retrive the application</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher :: getApplication（）&lt;/a&gt; -アプリケーションを取得する</target>
        </trans-unit>
        <trans-unit id="ac005d60fc0e5f46c04bf32f30f375236ebd3608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher::getApplication&lt;/a&gt; &amp;mdash; Retrive the application</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.getapplication&quot;&gt;Yaf_Dispatcher :: getApplication&lt;/a&gt; &amp;mdash;アプリケーションを取得する</target>
        </trans-unit>
        <trans-unit id="2e3400f7c3fdee6e678c5014723f3deef21eb1ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.getinstance&quot;&gt;Yaf_Dispatcher::getInstance&lt;/a&gt; &amp;mdash; Retrive the dispatcher instance</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.getinstance&quot;&gt;Yaf_Dispatcher :: getInstance&lt;/a&gt; &amp;mdash;ディスパッチャーのインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="6e119b730365bce096047a01ffde24606e336430" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.getrequest&quot;&gt;Yaf_Dispatcher::getRequest&lt;/a&gt; &amp;mdash; Retrive the request instance</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.getrequest&quot;&gt;Yaf_Dispatcher :: getRequest&lt;/a&gt; &amp;mdash;リクエストのインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="cc8ce5577db1e914c4d44b3d64157599d6e26290" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.getrouter&quot;&gt;Yaf_Dispatcher::getRouter&lt;/a&gt; &amp;mdash; Retrive router instance</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.getrouter&quot;&gt;Yaf_Dispatcher :: getRouter&lt;/a&gt; &amp;mdash;ルーターインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="f94f72924a71f4da1016bc1a2a5cc46e77461506" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.initview&quot;&gt;Yaf_Dispatcher::initView&lt;/a&gt; &amp;mdash; Initialize view and return it</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.initview&quot;&gt;Yaf_Dispatcher :: initView&lt;/a&gt; &amp;mdash;ビューを初期化して返す</target>
        </trans-unit>
        <trans-unit id="991124c0a9a255892afee1b585fb1c4a02f9f467" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.registerplugin&quot;&gt;Yaf_Dispatcher::registerPlugin&lt;/a&gt; &amp;mdash; Register a plugin</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.registerplugin&quot;&gt;Yaf_Dispatcher :: registerPlugin&lt;/a&gt; &amp;mdash;プラグインを登録する</target>
        </trans-unit>
        <trans-unit id="2a5fb17e89bca26c2df2e1f607de965f4b19af38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.returnresponse&quot;&gt;Yaf_Dispatcher::returnResponse&lt;/a&gt; &amp;mdash; The returnResponse purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.returnresponse&quot;&gt;Yaf_Dispatcher :: returnResponse&lt;/a&gt; &amp;mdash; returnResponseの目的</target>
        </trans-unit>
        <trans-unit id="f3e22d08cf99324cad79e09f27d853f3b0ecabda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.setdefaultaction&quot;&gt;Yaf_Dispatcher::setDefaultAction&lt;/a&gt; &amp;mdash; Change default action name</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.setdefaultaction&quot;&gt;Yaf_Dispatcher :: setDefaultAction&lt;/a&gt; &amp;mdash;デフォルトのアクション名を変更する</target>
        </trans-unit>
        <trans-unit id="9c1cef9d9caff6579739fead2d0f549090f7534d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.setdefaultcontroller&quot;&gt;Yaf_Dispatcher::setDefaultController&lt;/a&gt; &amp;mdash; Change default controller name</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.setdefaultcontroller&quot;&gt;Yaf_Dispatcher :: setDefaultController&lt;/a&gt; &amp;mdash;デフォルトのコントローラ名を変更する</target>
        </trans-unit>
        <trans-unit id="be277d413de2dc46e637b5ba2dcc572e6a91e1a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.setdefaultmodule&quot;&gt;Yaf_Dispatcher::setDefaultModule&lt;/a&gt; &amp;mdash; Change default module name</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.setdefaultmodule&quot;&gt;Yaf_Dispatcher :: setDefaultModule&lt;/a&gt; &amp;mdash;デフォルトのモジュール名を変更する</target>
        </trans-unit>
        <trans-unit id="721395f8b66b9fe410909442e1f006363977a7e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.seterrorhandler&quot;&gt;Yaf_Dispatcher::setErrorHandler()&lt;/a&gt; - Set error handler</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.seterrorhandler&quot;&gt;Yaf_Dispatcher :: setErrorHandler（）&lt;/a&gt; -エラーハンドラを設定する</target>
        </trans-unit>
        <trans-unit id="662272c5b1b4b2e6eca76fa9eaaf6538a1725a48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.seterrorhandler&quot;&gt;Yaf_Dispatcher::setErrorHandler&lt;/a&gt; &amp;mdash; Set error handler</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.seterrorhandler&quot;&gt;Yaf_Dispatcher :: setErrorHandler&lt;/a&gt; &amp;mdash;エラーハンドラを設定する</target>
        </trans-unit>
        <trans-unit id="d50da2a7bd9351add120985c0015a2840960b67f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.setrequest&quot;&gt;Yaf_Dispatcher::setRequest&lt;/a&gt; &amp;mdash; The setRequest purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.setrequest&quot;&gt;Yaf_Dispatcher :: setRequest&lt;/a&gt; &amp;mdash; setRequestの目的</target>
        </trans-unit>
        <trans-unit id="3979e3f6f97ca293ff78b4d89ae96b548d14110f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.setview&quot;&gt;Yaf_Dispatcher::setView&lt;/a&gt; &amp;mdash; Set a custom view engine</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.setview&quot;&gt;Yaf_Dispatcher :: setView&lt;/a&gt; &amp;mdash;カスタムビューエンジンを設定する</target>
        </trans-unit>
        <trans-unit id="d7c3019f0103627f69b1a5935704c63f3a03ab80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.sleep&quot;&gt;Yaf_Dispatcher::__sleep&lt;/a&gt; &amp;mdash; Yaf_Dispatcher can not be serialized</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.sleep&quot;&gt;Yaf_Dispatcher :: __ sleep&lt;/a&gt; &amp;mdash; Yaf_Dispatcherをシリアル化できない</target>
        </trans-unit>
        <trans-unit id="bc3212e0669cecfe7c18f4a37ee1a95616d59518" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.throwexception&quot;&gt;Yaf_Dispatcher::throwException()&lt;/a&gt; - Switch on/off exception throwing</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.throwexception&quot;&gt;Yaf_Dispatcher :: throwException（）&lt;/a&gt; -例外スローのオン/オフを切り替える</target>
        </trans-unit>
        <trans-unit id="f99cbed671c277f85fe6102c17eb1e45763dab83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.throwexception&quot;&gt;Yaf_Dispatcher::throwException&lt;/a&gt; &amp;mdash; Switch on/off exception throwing</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.throwexception&quot;&gt;Yaf_Dispatcher :: throwException&lt;/a&gt; &amp;mdash;例外のスローのオン/オフを切り替える</target>
        </trans-unit>
        <trans-unit id="f16c528cf865065ec2faa296bff9562d778d8dd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-dispatcher.wakeup&quot;&gt;Yaf_Dispatcher::__wakeup&lt;/a&gt; &amp;mdash; Yaf_Dispatcher can not be unserialized</source>
          <target state="translated">&lt;a href=&quot;yaf-dispatcher.wakeup&quot;&gt;Yaf_Dispatcher :: __ wakeup&lt;/a&gt; &amp;mdash; Yaf_Dispatcherをシリアル化解除できない</target>
        </trans-unit>
        <trans-unit id="b2aff4c09a450788585663ec13eb7a6175a966be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-exception.construct&quot;&gt;Yaf_Exception::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-exception.construct&quot;&gt;Yaf_Exception :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="e771994288cc247cee34429dacd572cfc7a0cd58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-exception.getprevious&quot;&gt;Yaf_Exception::getPrevious&lt;/a&gt; &amp;mdash; The getPrevious purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-exception.getprevious&quot;&gt;Yaf_Exception :: getPrevious&lt;/a&gt; &amp;mdash; getPreviousの目的</target>
        </trans-unit>
        <trans-unit id="3f0fe068404c62018a0734a878cb99108c90c7be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader::autoload&lt;/a&gt; &amp;mdash; The autoload purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader :: autoload&lt;/a&gt; &amp;mdash;自動ロードの目的</target>
        </trans-unit>
        <trans-unit id="684ba99688a3b1611427874ea5a428a8aa1683af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.clearlocalnamespace&quot;&gt;Yaf_Loader::clearLocalNamespace&lt;/a&gt; &amp;mdash; The clearLocalNamespace purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.clearlocalnamespace&quot;&gt;Yaf_Loader :: clearLocalNamespace&lt;/a&gt; &amp;mdash; clearLocalNamespaceの目的</target>
        </trans-unit>
        <trans-unit id="01a0e620ec2bff17a429c6b6419a37ab99a52aac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.clone&quot;&gt;Yaf_Loader::__clone&lt;/a&gt; &amp;mdash; The __clone purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.clone&quot;&gt;Yaf_Loader :: __ clone&lt;/a&gt; &amp;mdash; __cloneの目的</target>
        </trans-unit>
        <trans-unit id="6b9190e07f436cd1193129585c46948fa962d4c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.construct&quot;&gt;Yaf_Loader::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.construct&quot;&gt;Yaf_Loader :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="f669060a869d3612ee16b80be1a6f4669b5d0c9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.getinstance&quot;&gt;Yaf_Loader::getInstance&lt;/a&gt; &amp;mdash; The getInstance purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.getinstance&quot;&gt;Yaf_Loader :: getInstance&lt;/a&gt; &amp;mdash; getInstanceの目的</target>
        </trans-unit>
        <trans-unit id="b04db67dcb02a5895e67ab11859d63be31dc1274" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.getlibrarypath&quot;&gt;Yaf_Loader::getLibraryPath&lt;/a&gt; &amp;mdash; Get the library path</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.getlibrarypath&quot;&gt;Yaf_Loader :: getLibraryPath&lt;/a&gt; &amp;mdash;ライブラリのパスを取得する</target>
        </trans-unit>
        <trans-unit id="f41a8d4d43a289cacfa25b54bb2c979f19044b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.getlocalnamespace&quot;&gt;Yaf_Loader::getLocalNamespace&lt;/a&gt; &amp;mdash; The getLocalNamespace purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.getlocalnamespace&quot;&gt;Yaf_Loader :: getLocalNamespace&lt;/a&gt; &amp;mdash; getLocalNamespaceの目的</target>
        </trans-unit>
        <trans-unit id="712942f4e909db28fd255bb83be69ebb6c5511bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.import&quot;&gt;Yaf_Loader::import&lt;/a&gt; &amp;mdash; The import purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.import&quot;&gt;Yaf_Loader :: import&lt;/a&gt; &amp;mdash;インポートの目的</target>
        </trans-unit>
        <trans-unit id="afe592885d4eeb492da48268e57aff906062e040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.islocalname&quot;&gt;Yaf_Loader::isLocalName&lt;/a&gt; &amp;mdash; The isLocalName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.islocalname&quot;&gt;Yaf_Loader :: isLocalName&lt;/a&gt; &amp;mdash; isLocalNameの目的</target>
        </trans-unit>
        <trans-unit id="aaba811c027746f64ef1a4a509d300299c5a0905" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.registerlocalnamespace&quot;&gt;Yaf_Loader::registerLocalNamespace&lt;/a&gt; &amp;mdash; Register local class prefix</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.registerlocalnamespace&quot;&gt;Yaf_Loader :: registerLocalNamespace&lt;/a&gt; &amp;mdash;ローカルクラスのプレフィックスを登録する</target>
        </trans-unit>
        <trans-unit id="a7d403dba605f5093f3f4ce855b1966a639f64a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath&lt;/a&gt; &amp;mdash; Change the library path</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader :: setLibraryPath&lt;/a&gt; &amp;mdash;ライブラリのパスを変更する</target>
        </trans-unit>
        <trans-unit id="eb593437f6bd7fe8229ba6fd1363b39e58fa85e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.sleep&quot;&gt;Yaf_Loader::__sleep&lt;/a&gt; &amp;mdash; The __sleep purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.sleep&quot;&gt;Yaf_Loader :: __ sleep&lt;/a&gt; &amp;mdash; __sleepの目的</target>
        </trans-unit>
        <trans-unit id="5d55726a3eacb0290297e215dad14e17bbd66066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-loader.wakeup&quot;&gt;Yaf_Loader::__wakeup&lt;/a&gt; &amp;mdash; The __wakeup purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-loader.wakeup&quot;&gt;Yaf_Loader :: __ wakeup&lt;/a&gt; &amp;mdash; __wakeupの目的</target>
        </trans-unit>
        <trans-unit id="f84eacfd68e2cf19dbb911dd15b5d3f7be5be797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.dispatchloopshutdown&quot;&gt;Yaf_Plugin_Abstract::dispatchLoopShutdown()&lt;/a&gt; - The dispatchLoopShutdown purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.dispatchloopshutdown&quot;&gt;Yaf_Plugin_Abstract :: dispatchLoopShutdown（）&lt;/a&gt; -dispatchLoopShutdownの目的</target>
        </trans-unit>
        <trans-unit id="6a28e7a1e2e6217f2021570b5eb51db55d2f9579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.dispatchloopshutdown&quot;&gt;Yaf_Plugin_Abstract::dispatchLoopShutdown&lt;/a&gt; &amp;mdash; The dispatchLoopShutdown purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.dispatchloopshutdown&quot;&gt;Yaf_Plugin_Abstract :: dispatchLoopShutdown&lt;/a&gt; &amp;mdash; dispatchLoopShutdownの目的</target>
        </trans-unit>
        <trans-unit id="aa8d23be3bf52f84440c5238818ecf203cec6e53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.dispatchloopstartup&quot;&gt;Yaf_Plugin_Abstract::dispatchLoopStartup()&lt;/a&gt; - Hook before dispatch loop</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.dispatchloopstartup&quot;&gt;Yaf_Plugin_Abstract :: dispatchLoopStartup（）&lt;/a&gt; -ディスパッチループの前にフックする</target>
        </trans-unit>
        <trans-unit id="c0386ec7edecb9d8de2b550200e13d67630a8d90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.dispatchloopstartup&quot;&gt;Yaf_Plugin_Abstract::dispatchLoopStartup&lt;/a&gt; &amp;mdash; Hook before dispatch loop</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.dispatchloopstartup&quot;&gt;Yaf_Plugin_Abstract :: dispatchLoopStartup&lt;/a&gt; &amp;mdash;ディスパッチループの前にフックする</target>
        </trans-unit>
        <trans-unit id="a2edbd86c51980421b065b144688fd389dbcf7d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.postdispatch&quot;&gt;Yaf_Plugin_Abstract::postDispatch()&lt;/a&gt; - The postDispatch purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.postdispatch&quot;&gt;Yaf_Plugin_Abstract :: postDispatch（）&lt;/a&gt; -postDispatchの目的</target>
        </trans-unit>
        <trans-unit id="5c047bcb6dd00da52f541279e11e475c1384d5d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.postdispatch&quot;&gt;Yaf_Plugin_Abstract::postDispatch&lt;/a&gt; &amp;mdash; The postDispatch purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.postdispatch&quot;&gt;Yaf_Plugin_Abstract :: postDispatch&lt;/a&gt; &amp;mdash; postDispatchの目的</target>
        </trans-unit>
        <trans-unit id="7f0ded6fd2a89d372aa1b3fdc661dad4dd626014" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.predispatch&quot;&gt;Yaf_Plugin_Abstract::preDispatch()&lt;/a&gt; - The preDispatch purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.predispatch&quot;&gt;Yaf_Plugin_Abstract :: preDispatch（）&lt;/a&gt; -preDispatchの目的</target>
        </trans-unit>
        <trans-unit id="17345106859b404ab33b9155658502c6468c4a37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.predispatch&quot;&gt;Yaf_Plugin_Abstract::preDispatch&lt;/a&gt; &amp;mdash; The preDispatch purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.predispatch&quot;&gt;Yaf_Plugin_Abstract :: preDispatch&lt;/a&gt; &amp;mdash; preDispatchの目的</target>
        </trans-unit>
        <trans-unit id="e20e17a3307fcaa81f00962e96ff116c68572288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.preresponse&quot;&gt;Yaf_Plugin_Abstract::preResponse&lt;/a&gt; &amp;mdash; The preResponse purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.preresponse&quot;&gt;Yaf_Plugin_Abstract :: preResponse&lt;/a&gt; &amp;mdash; preResponseの目的</target>
        </trans-unit>
        <trans-unit id="25739673a75f157bcd08353a4f09fdeafe9ead81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.routershutdown&quot;&gt;Yaf_Plugin_Abstract::routerShutdown()&lt;/a&gt; - The routerShutdown purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.routershutdown&quot;&gt;Yaf_Plugin_Abstract :: routerShutdown（）&lt;/a&gt; -routerShutdownの目的</target>
        </trans-unit>
        <trans-unit id="88ae3a2fac64e22dfce26e49a3e0167d450688a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.routershutdown&quot;&gt;Yaf_Plugin_Abstract::routerShutdown&lt;/a&gt; &amp;mdash; The routerShutdown purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.routershutdown&quot;&gt;Yaf_Plugin_Abstract :: routerShutdown&lt;/a&gt; &amp;mdash; routerShutdownの目的</target>
        </trans-unit>
        <trans-unit id="970dcf1909b309d1016703ecbe3392ea9624d95a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.routerstartup&quot;&gt;Yaf_Plugin_Abstract::routerStartup()&lt;/a&gt; - RouterStartup hook</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.routerstartup&quot;&gt;Yaf_Plugin_Abstract :: routerStartup（）&lt;/a&gt; -RouterStartupフック</target>
        </trans-unit>
        <trans-unit id="d22dab48a37c73899fc7a3d3eb237141c5186282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-plugin-abstract.routerstartup&quot;&gt;Yaf_Plugin_Abstract::routerStartup&lt;/a&gt; &amp;mdash; RouterStartup hook</source>
          <target state="translated">&lt;a href=&quot;yaf-plugin-abstract.routerstartup&quot;&gt;Yaf_Plugin_Abstract :: routerStartup&lt;/a&gt; &amp;mdash; RouterStartupフック</target>
        </trans-unit>
        <trans-unit id="d97b7d8900e4f9d8c8df1f1a69dd55feffa7ab3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.clone&quot;&gt;Yaf_Registry::__clone&lt;/a&gt; &amp;mdash; The __clone purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.clone&quot;&gt;Yaf_Registry :: __ clone&lt;/a&gt; &amp;mdash; __cloneの目的</target>
        </trans-unit>
        <trans-unit id="07cdec4c04613d0d3475c36fdc3c37dbbf164d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.construct&quot;&gt;Yaf_Registry::__construct&lt;/a&gt; &amp;mdash; Yaf_Registry implements singleton</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.construct&quot;&gt;Yaf_Registry :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Registryがシングルトンを実装する</target>
        </trans-unit>
        <trans-unit id="a3396b82daa971ab2b24c7d8f80e4624905c038d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.del&quot;&gt;Yaf_Registry::del&lt;/a&gt; &amp;mdash; Remove an item from registry</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.del&quot;&gt;Yaf_Registry :: del&lt;/a&gt; &amp;mdash;レジストリからアイテムを削除する</target>
        </trans-unit>
        <trans-unit id="9717e3475bbb6844990ea7797d4ee01fe6e1d6e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.get&quot;&gt;Yaf_Registry::get&lt;/a&gt; &amp;mdash; Retrieve an item from registry</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.get&quot;&gt;Yaf_Registry :: get&lt;/a&gt; &amp;mdash;レジストリからアイテムを取得する</target>
        </trans-unit>
        <trans-unit id="ead9019276b32608ebebc92a72d788e908c09d5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.has&quot;&gt;Yaf_Registry::has&lt;/a&gt; &amp;mdash; Check whether an item exists</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.has&quot;&gt;Yaf_Registry :: has&lt;/a&gt; &amp;mdash;アイテムが存在するかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="1471e6923d497430558029b2dabdd7f084e430e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-registry.set&quot;&gt;Yaf_Registry::set&lt;/a&gt; &amp;mdash; Add an item into registry</source>
          <target state="translated">&lt;a href=&quot;yaf-registry.set&quot;&gt;Yaf_Registry :: set&lt;/a&gt; &amp;mdash;アイテムをレジストリに追加する</target>
        </trans-unit>
        <trans-unit id="9b49e356cfb56dbf44e68ffbd75354eb81ba5b54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getactionname&quot;&gt;Yaf_Request_Abstract::getActionName&lt;/a&gt; &amp;mdash; The getActionName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getactionname&quot;&gt;Yaf_Request_Abstract :: getActionName&lt;/a&gt; &amp;mdash; getActionNameの目的</target>
        </trans-unit>
        <trans-unit id="eb9950f3ed50c74e2c673a40ea5738b9a48d4074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getbaseuri&quot;&gt;Yaf_Request_Abstract::getBaseUri&lt;/a&gt; &amp;mdash; The getBaseUri purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getbaseuri&quot;&gt;Yaf_Request_Abstract :: getBaseUri&lt;/a&gt; &amp;mdash; getBaseUriの目的</target>
        </trans-unit>
        <trans-unit id="ef92750a53557486c7dcdea08dae77c9b527e8d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getcontrollername&quot;&gt;Yaf_Request_Abstract::getControllerName&lt;/a&gt; &amp;mdash; The getControllerName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getcontrollername&quot;&gt;Yaf_Request_Abstract :: getControllerName&lt;/a&gt; &amp;mdash; getControllerNameの目的</target>
        </trans-unit>
        <trans-unit id="7a2e59adba7ae4eab57ae4e1872fa8e882cf0822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getenv&quot;&gt;Yaf_Request_Abstract::getEnv()&lt;/a&gt; - Retrieve ENV varialbe</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getenv&quot;&gt;Yaf_Request_Abstract :: getEnv（）&lt;/a&gt; -ENV変数を取得する</target>
        </trans-unit>
        <trans-unit id="129533dc5317a23d34568aa6f913164981e1107d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getenv&quot;&gt;Yaf_Request_Abstract::getEnv&lt;/a&gt; &amp;mdash; Retrieve ENV varialbe</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getenv&quot;&gt;Yaf_Request_Abstract :: getEnv&lt;/a&gt; &amp;mdash; ENV変数を取得する</target>
        </trans-unit>
        <trans-unit id="7a8f625872084a99d29c9d8ade2a4da557e586d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getexception&quot;&gt;Yaf_Request_Abstract::getException&lt;/a&gt; &amp;mdash; The getException purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getexception&quot;&gt;Yaf_Request_Abstract :: getException&lt;/a&gt; &amp;mdash; getExceptionの目的</target>
        </trans-unit>
        <trans-unit id="6e6c14871ccd9b4bbee7b7b1c3ba4279ef9a0d43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getlanguage&quot;&gt;Yaf_Request_Abstract::getLanguage&lt;/a&gt; &amp;mdash; Retrieve client's prefered language</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getlanguage&quot;&gt;Yaf_Request_Abstract :: getLanguage&lt;/a&gt; &amp;mdash;クライアントの優先言語を取得する</target>
        </trans-unit>
        <trans-unit id="3cea11d375d08ede7f02a4ca3aa4c21bde767b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getmethod&quot;&gt;Yaf_Request_Abstract::getMethod&lt;/a&gt; &amp;mdash; Retrieve the request method</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getmethod&quot;&gt;Yaf_Request_Abstract :: getMethod&lt;/a&gt; &amp;mdash;リクエストメソッドを取得する</target>
        </trans-unit>
        <trans-unit id="98680d8579c6ba466182a428d6496a30f1309f90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getmodulename&quot;&gt;Yaf_Request_Abstract::getModuleName&lt;/a&gt; &amp;mdash; The getModuleName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getmodulename&quot;&gt;Yaf_Request_Abstract :: getModuleName&lt;/a&gt; &amp;mdash; getModuleNameの目的</target>
        </trans-unit>
        <trans-unit id="23e3c832682f515a0ad96b79da57b43cfa245169" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getparam&quot;&gt;Yaf_Request_Abstract::getParam()&lt;/a&gt; - Retrieve calling parameter</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getparam&quot;&gt;Yaf_Request_Abstract :: getParam（）&lt;/a&gt; -呼び出しパラメーターを取得する</target>
        </trans-unit>
        <trans-unit id="42d1ecd4438409716c0c1a38e1abdc65e9b4602d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getparam&quot;&gt;Yaf_Request_Abstract::getParam&lt;/a&gt; &amp;mdash; Retrieve calling parameter</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getparam&quot;&gt;Yaf_Request_Abstract :: getParam&lt;/a&gt; &amp;mdash;呼び出しパラメータを取得する</target>
        </trans-unit>
        <trans-unit id="cff4552e6b25dd99191e82ffbdcf4125123d5746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getparams&quot;&gt;Yaf_Request_Abstract::getParams()&lt;/a&gt; - Retrieve all calling parameters</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getparams&quot;&gt;Yaf_Request_Abstract :: getParams（）&lt;/a&gt; -すべての呼び出しパラメータを取得する</target>
        </trans-unit>
        <trans-unit id="d7b795e8322edddd7ebd8783699a26c3ab6e1a16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getparams&quot;&gt;Yaf_Request_Abstract::getParams&lt;/a&gt; &amp;mdash; Retrieve all calling parameters</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getparams&quot;&gt;Yaf_Request_Abstract :: getParams&lt;/a&gt; &amp;mdash;すべての呼び出しパラメータを取得する</target>
        </trans-unit>
        <trans-unit id="5778e53c7192b0847905f93d8e2266bbbc2291e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getrequesturi&quot;&gt;Yaf_Request_Abstract::getRequestUri&lt;/a&gt; &amp;mdash; The getRequestUri purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getrequesturi&quot;&gt;Yaf_Request_Abstract :: getRequestUri&lt;/a&gt; &amp;mdash; getRequestUriの目的</target>
        </trans-unit>
        <trans-unit id="6918f708fead105e19a12112a9b51c1cb0f8627a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getserver&quot;&gt;Yaf_Request_Abstract::getServer()&lt;/a&gt; - Retrieve SERVER variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getserver&quot;&gt;Yaf_Request_Abstract :: getServer（）&lt;/a&gt; -SERVER変数を取得する</target>
        </trans-unit>
        <trans-unit id="f0b497dbf8755cff102057e46611b67e4914d654" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.getserver&quot;&gt;Yaf_Request_Abstract::getServer&lt;/a&gt; &amp;mdash; Retrieve SERVER variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.getserver&quot;&gt;Yaf_Request_Abstract :: getServer&lt;/a&gt; &amp;mdash; SERVER変数を取得する</target>
        </trans-unit>
        <trans-unit id="af098278479afb0a13e16d306d9803a468335b54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.iscli&quot;&gt;Yaf_Request_Abstract::isCli()&lt;/a&gt; - Determine if request is CLI reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.iscli&quot;&gt;Yaf_Request_Abstract :: isCli（）&lt;/a&gt; -リクエストがCLIリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="0fd016023fbc828302370be1c5759135694e05fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.iscli&quot;&gt;Yaf_Request_Abstract::isCli&lt;/a&gt; &amp;mdash; Determine if request is CLI reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.iscli&quot;&gt;Yaf_Request_Abstract :: isCli&lt;/a&gt; &amp;mdash;リクエストがCLIリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="8dd3e268f6171f9119714350414eea0c6b223829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isdispatched&quot;&gt;Yaf_Request_Abstract::isDispatched&lt;/a&gt; &amp;mdash; Determin if the request is dispatched</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isdispatched&quot;&gt;Yaf_Request_Abstract :: isDispatched&lt;/a&gt; &amp;mdash;リクエストがディスパッチされているかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="d427acedfeeeb9a7de244633ee971257437b47d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isget&quot;&gt;Yaf_Request_Abstract::isGet()&lt;/a&gt; - Determine if request is GET reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isget&quot;&gt;Yaf_Request_Abstract :: isGet（）&lt;/a&gt; -リクエストがGETリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="c0cd1f97859a76f5eddee28930c38aa079a44e63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isget&quot;&gt;Yaf_Request_Abstract::isGet&lt;/a&gt; &amp;mdash; Determine if request is GET reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isget&quot;&gt;Yaf_Request_Abstract :: isGet&lt;/a&gt; &amp;mdash;リクエストがGETリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="68f7de38afb3b70d49a31c22745d298c95599777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.ishead&quot;&gt;Yaf_Request_Abstract::isHead()&lt;/a&gt; - Determine if request is HEAD reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.ishead&quot;&gt;Yaf_Request_Abstract :: isHead（）&lt;/a&gt; -リクエストがHEADリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="c174d417b175bbe45c242923176b2b282dd77af5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.ishead&quot;&gt;Yaf_Request_Abstract::isHead&lt;/a&gt; &amp;mdash; Determine if request is HEAD reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.ishead&quot;&gt;Yaf_Request_Abstract :: isHead&lt;/a&gt; &amp;mdash;リクエストがHEADリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="bbc10a0d677499a5d043587da73a09fad33553a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isoptions&quot;&gt;Yaf_Request_Abstract::isOptions()&lt;/a&gt; - Determine if request is OPTIONS reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isoptions&quot;&gt;Yaf_Request_Abstract :: isOptions（）&lt;/a&gt; -リクエストがOPTIONSリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="55df330ce668ec6ac0630dfb2b53114d749255c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isoptions&quot;&gt;Yaf_Request_Abstract::isOptions&lt;/a&gt; &amp;mdash; Determine if request is OPTIONS reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isoptions&quot;&gt;Yaf_Request_Abstract :: isOptions&lt;/a&gt; &amp;mdash;リクエストがOPTIONSリクエストであるかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="4fe2d18281fc868d68f0784235c49ad0af4993a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.ispost&quot;&gt;Yaf_Request_Abstract::isPost()&lt;/a&gt; - Determine if request is POST request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.ispost&quot;&gt;Yaf_Request_Abstract :: isPost（）&lt;/a&gt; -リクエストがPOSTリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="73e0ba91e1c27e52f6fa5d0eab7d5b83dfb32614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.ispost&quot;&gt;Yaf_Request_Abstract::isPost&lt;/a&gt; &amp;mdash; Determine if request is POST request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.ispost&quot;&gt;Yaf_Request_Abstract :: isPost&lt;/a&gt; &amp;mdash;リクエストがPOSTリクエストであるかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="213ae461985af013454e8e7185631bda7c207275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isput&quot;&gt;Yaf_Request_Abstract::isPut()&lt;/a&gt; - Determine if request is PUT reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isput&quot;&gt;Yaf_Request_Abstract :: isPut（）&lt;/a&gt; -リクエストがPUTリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="b49b69ca7e5de135426c28d6a928047fae9fa3f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isput&quot;&gt;Yaf_Request_Abstract::isPut&lt;/a&gt; &amp;mdash; Determine if request is PUT reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isput&quot;&gt;Yaf_Request_Abstract :: isPut&lt;/a&gt; &amp;mdash;リクエストがPUTリクエストであるかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="5faefd6660bf635bf36fe478003899985704ca13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isrouted&quot;&gt;Yaf_Request_Abstract::isRouted&lt;/a&gt; &amp;mdash; Determin if request has been routed</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isrouted&quot;&gt;Yaf_Request_Abstract :: isRouted&lt;/a&gt; &amp;mdash;リクエストがルーティングされたかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="467257d1715e4939ecf6f6adecff702e98e9706c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isxmlhttprequest&quot;&gt;Yaf_Request_Abstract::isXmlHTTPRequest()&lt;/a&gt; - Determine if request is AJAX reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isxmlhttprequest&quot;&gt;Yaf_Request_Abstract :: isXmlHTTPRequest（）&lt;/a&gt; -リクエストがAJAXリクエストであるかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="c0f54ed54889a6940533dc746344b6fd08d7c715" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.isxmlhttprequest&quot;&gt;Yaf_Request_Abstract::isXmlHttpRequest&lt;/a&gt; &amp;mdash; Determine if request is AJAX reques</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.isxmlhttprequest&quot;&gt;Yaf_Request_Abstract :: isXmlHttpRequest&lt;/a&gt; &amp;mdash;リクエストがAJAXリクエストかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="d0d136fc923accd11e6f55f5b1f7c68cc59b9974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setactionname&quot;&gt;Yaf_Request_Abstract::setActionName&lt;/a&gt; &amp;mdash; The setActionName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setactionname&quot;&gt;Yaf_Request_Abstract :: setActionName&lt;/a&gt; &amp;mdash; setActionNameの目的</target>
        </trans-unit>
        <trans-unit id="d09ec8eeafad25627da7b1fe0e6513d08c1a1889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract::setBaseUri&lt;/a&gt; &amp;mdash; Set base URI</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract :: setBaseUri&lt;/a&gt; &amp;mdash;ベースURIを設定する</target>
        </trans-unit>
        <trans-unit id="f4985e3869b0fd1eeb33762fee2f82a4c73aaf86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setcontrollername&quot;&gt;Yaf_Request_Abstract::setControllerName&lt;/a&gt; &amp;mdash; The setControllerName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setcontrollername&quot;&gt;Yaf_Request_Abstract :: setControllerName&lt;/a&gt; &amp;mdash; setControllerNameの目的</target>
        </trans-unit>
        <trans-unit id="2a5e352da73a94d9f53e70662be042685f8be47c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setdispatched&quot;&gt;Yaf_Request_Abstract::setDispatched&lt;/a&gt; &amp;mdash; The setDispatched purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setdispatched&quot;&gt;Yaf_Request_Abstract :: setDispatched&lt;/a&gt; &amp;mdash; setDispatchedの目的</target>
        </trans-unit>
        <trans-unit id="ed0ae51e8ca9a9ff0744a676b3a9d030cc3d2b97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setmodulename&quot;&gt;Yaf_Request_Abstract::setModuleName&lt;/a&gt; &amp;mdash; The setModuleName purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setmodulename&quot;&gt;Yaf_Request_Abstract :: setModuleName&lt;/a&gt; &amp;mdash; setModuleNameの目的</target>
        </trans-unit>
        <trans-unit id="3c6cf7775dd6d4e586a5135ac46e4034d1540594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract::setParam()&lt;/a&gt; - Set a calling parameter to a request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract :: setParam（）&lt;/a&gt; -呼び出しパラメータをリクエストに設定する</target>
        </trans-unit>
        <trans-unit id="ebf3e32d91065010aa50e652d4b1ca705c4782fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract::setParam&lt;/a&gt; &amp;mdash; Set a calling parameter to a request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setparam&quot;&gt;Yaf_Request_Abstract :: setParam&lt;/a&gt; &amp;mdash;呼び出しパラメータをリクエストに設定する</target>
        </trans-unit>
        <trans-unit id="3bcf6e95e91d328bceed95fc4c16fc1bdfd456fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setrequesturi&quot;&gt;Yaf_Request_Abstract::setRequestUri&lt;/a&gt; &amp;mdash; The setRequestUri purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setrequesturi&quot;&gt;Yaf_Request_Abstract :: setRequestUri&lt;/a&gt; &amp;mdash; setRequestUriの目的</target>
        </trans-unit>
        <trans-unit id="da4274d520c09c0f7927ac8e678706aa092ffeff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-abstract.setrouted&quot;&gt;Yaf_Request_Abstract::setRouted&lt;/a&gt; &amp;mdash; The setRouted purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-abstract.setrouted&quot;&gt;Yaf_Request_Abstract :: setRouted&lt;/a&gt; &amp;mdash; setRoutedの目的</target>
        </trans-unit>
        <trans-unit id="d8b3f9452b17449ba08f2147da998b77a4269d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.clone&quot;&gt;Yaf_Request_Http::__clone&lt;/a&gt; &amp;mdash; Yaf_Request_Http can not be cloned</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.clone&quot;&gt;Yaf_Request_Http :: __ clone&lt;/a&gt; &amp;mdash; Yaf_Request_Httpは複製できません</target>
        </trans-unit>
        <trans-unit id="941f2def5421a00e939c32df397ab8601f5cb584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.construct&quot;&gt;Yaf_Request_Http::__construct&lt;/a&gt; &amp;mdash; Constructor of Yaf_Request_Http</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.construct&quot;&gt;Yaf_Request_Http :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Request_Httpのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="47b4d618b110c0d7aa5205d4d30cff1f87aae528" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.get&quot;&gt;Yaf_Request_Http::get()&lt;/a&gt; - Retrieve variable from client</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.get&quot;&gt;Yaf_Request_Http :: get（）&lt;/a&gt; -クライアントから変数を取得する</target>
        </trans-unit>
        <trans-unit id="acc12421c2f86de205fdf1f03ced7d1398b8b5ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.get&quot;&gt;Yaf_Request_Http::get&lt;/a&gt; &amp;mdash; Retrieve variable from client</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.get&quot;&gt;Yaf_Request_Http :: get&lt;/a&gt; &amp;mdash;クライアントから変数を取得する</target>
        </trans-unit>
        <trans-unit id="071e914fcf075da7e70c81451649dea81e265a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getcookie&quot;&gt;Yaf_Request_Http::getCookie()&lt;/a&gt; - Retrieve Cookie variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getcookie&quot;&gt;Yaf_Request_Http :: getCookie（）&lt;/a&gt; -Cookie変数を取得する</target>
        </trans-unit>
        <trans-unit id="94af60ec8bcff981d6d0044fcb22ca389164ead7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getcookie&quot;&gt;Yaf_Request_Http::getCookie&lt;/a&gt; &amp;mdash; Retrieve Cookie variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getcookie&quot;&gt;Yaf_Request_Http :: getCookie&lt;/a&gt; &amp;mdash; Cookie変数を取得する</target>
        </trans-unit>
        <trans-unit id="551a29c5bd9eedcfe4f68db241b456c81ca26023" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getfiles&quot;&gt;Yaf_Request_Http::getFiles&lt;/a&gt; &amp;mdash; The getFiles purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getfiles&quot;&gt;Yaf_Request_Http :: getFiles&lt;/a&gt; &amp;mdash; getFilesの目的</target>
        </trans-unit>
        <trans-unit id="862e23b455da4092dc0fd14d2d6a52269dfafa02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getpost&quot;&gt;Yaf_Request_Http::getPost()&lt;/a&gt; - Retrieve POST variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getpost&quot;&gt;Yaf_Request_Http :: getPost（）&lt;/a&gt; -POST変数を取得する</target>
        </trans-unit>
        <trans-unit id="b998c2bdd2bf2c7b881e2f503a4a6aa5996c8141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getpost&quot;&gt;Yaf_Request_Http::getPost&lt;/a&gt; &amp;mdash; Retrieve POST variable</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getpost&quot;&gt;Yaf_Request_Http :: getPost&lt;/a&gt; &amp;mdash; POST変数を取得する</target>
        </trans-unit>
        <trans-unit id="09798d6bb6992705facee92713cff82255b1a2a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getquery&quot;&gt;Yaf_Request_Http::getQuery()&lt;/a&gt; - Fetch a query parameter</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getquery&quot;&gt;Yaf_Request_Http :: getQuery（）&lt;/a&gt; -クエリパラメータを取得する</target>
        </trans-unit>
        <trans-unit id="b9e9141c54cca89f4952563f7b4cd4b2edf319cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getquery&quot;&gt;Yaf_Request_Http::getQuery&lt;/a&gt; &amp;mdash; Fetch a query parameter</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getquery&quot;&gt;Yaf_Request_Http :: getQuery&lt;/a&gt; &amp;mdash;クエリパラメータを取得する</target>
        </trans-unit>
        <trans-unit id="9175ebb0c08bb7ad4087ade9be4c8cfc95407bad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getraw&quot;&gt;Yaf_Request_Http::getRaw()&lt;/a&gt; - Retrieve Raw request body</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getraw&quot;&gt;Yaf_Request_Http :: getRaw（）&lt;/a&gt; -未加工のリクエスト本文を取得する</target>
        </trans-unit>
        <trans-unit id="a73635cbc5803c2563040acf1afdf475d728ff22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getraw&quot;&gt;Yaf_Request_Http::getRaw&lt;/a&gt; &amp;mdash; Retrieve Raw request body</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getraw&quot;&gt;Yaf_Request_Http :: getRaw&lt;/a&gt; &amp;mdash;未加工のリクエストボディを取得する</target>
        </trans-unit>
        <trans-unit id="61facce98a202fc36465c23e238089e321a77477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.getrequest&quot;&gt;Yaf_Request_Http::getRequest&lt;/a&gt; &amp;mdash; The getRequest purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.getrequest&quot;&gt;Yaf_Request_Http :: getRequest&lt;/a&gt; &amp;mdash; getRequestの目的</target>
        </trans-unit>
        <trans-unit id="d54fd2e95e02fdfc6a5cf578ec8354366a2ded23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.isxmlhttprequest&quot;&gt;Yaf_Request_Http::isXmlHTTPRequest()&lt;/a&gt; - Determin if request is Ajax Request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.isxmlhttprequest&quot;&gt;Yaf_Request_Http :: isXmlHTTPRequest（）&lt;/a&gt; -リクエストがAjaxリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="e2781b39c25f916c0302f2e1b216c37065c15736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-http.isxmlhttprequest&quot;&gt;Yaf_Request_Http::isXmlHttpRequest&lt;/a&gt; &amp;mdash; Determin if request is Ajax Request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-http.isxmlhttprequest&quot;&gt;Yaf_Request_Http :: isXmlHttpRequest&lt;/a&gt; &amp;mdash;リクエストがAjaxリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="03a0a1eb4c3d72a4a8aef3b403f38457b3ee5c36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.clone&quot;&gt;Yaf_Request_Simple::__clone&lt;/a&gt; &amp;mdash; The __clone purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.clone&quot;&gt;Yaf_Request_Simple :: __ clone&lt;/a&gt; &amp;mdash; __cloneの目的</target>
        </trans-unit>
        <trans-unit id="5f878049abd74bc4d03a8103f08892998d01475b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.construct&quot;&gt;Yaf_Request_Simple::__construct&lt;/a&gt; &amp;mdash; Constructor of Yaf_Request_Simple</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.construct&quot;&gt;Yaf_Request_Simple :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Request_Simpleのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="669b8b22bd2ef4552359e5ddf78e5f28ac64bebb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.get&quot;&gt;Yaf_Request_Simple::get&lt;/a&gt; &amp;mdash; The get purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.get&quot;&gt;Yaf_Request_Simple :: get&lt;/a&gt; &amp;mdash;取得の目的</target>
        </trans-unit>
        <trans-unit id="6e80e52b116a641c963186095881ecbd23ece84f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.getcookie&quot;&gt;Yaf_Request_Simple::getCookie&lt;/a&gt; &amp;mdash; The getCookie purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.getcookie&quot;&gt;Yaf_Request_Simple :: getCookie&lt;/a&gt; &amp;mdash; getCookieの目的</target>
        </trans-unit>
        <trans-unit id="e2b8faa207fbc0229d02a3c9bb40209f4ad89539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.getfiles&quot;&gt;Yaf_Request_Simple::getFiles&lt;/a&gt; &amp;mdash; The getFiles purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.getfiles&quot;&gt;Yaf_Request_Simple :: getFiles&lt;/a&gt; &amp;mdash; getFilesの目的</target>
        </trans-unit>
        <trans-unit id="42192a9230dc9ad77a25627fe1f6ef246906ed39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.getpost&quot;&gt;Yaf_Request_Simple::getPost&lt;/a&gt; &amp;mdash; The getPost purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.getpost&quot;&gt;Yaf_Request_Simple :: getPost&lt;/a&gt; &amp;mdash; getPostの目的</target>
        </trans-unit>
        <trans-unit id="f1e1cd1b044cf68479279da30ec7b41c4362efdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.getquery&quot;&gt;Yaf_Request_Simple::getQuery&lt;/a&gt; &amp;mdash; The getQuery purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.getquery&quot;&gt;Yaf_Request_Simple :: getQuery&lt;/a&gt; &amp;mdash; getQueryの目的</target>
        </trans-unit>
        <trans-unit id="5c2d9ec891e9a0c24d9421ee6afa42474c7e54f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.getrequest&quot;&gt;Yaf_Request_Simple::getRequest&lt;/a&gt; &amp;mdash; The getRequest purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.getrequest&quot;&gt;Yaf_Request_Simple :: getRequest&lt;/a&gt; &amp;mdash; getRequestの目的</target>
        </trans-unit>
        <trans-unit id="0502f77be546f2363c3f846cf7a9445517c286b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-request-simple.isxmlhttprequest&quot;&gt;Yaf_Request_Simple::isXmlHttpRequest&lt;/a&gt; &amp;mdash; Determin if request is AJAX request</source>
          <target state="translated">&lt;a href=&quot;yaf-request-simple.isxmlhttprequest&quot;&gt;Yaf_Request_Simple :: isXmlHttpRequest&lt;/a&gt; &amp;mdash;リクエストがAJAXリクエストかどうかを判別する</target>
        </trans-unit>
        <trans-unit id="d0c0991114cc7f3b56f14dcf268589dacc0761e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.appendbody&quot;&gt;Yaf_Response_Abstract::appendBody()&lt;/a&gt; - Append to response body</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.appendbody&quot;&gt;Yaf_Response_Abstract :: appendBody（）&lt;/a&gt; -応答本文に追加する</target>
        </trans-unit>
        <trans-unit id="c7a8bcab0d6e8c1a7ecefc7496505d7ecb687a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.appendbody&quot;&gt;Yaf_Response_Abstract::appendBody&lt;/a&gt; &amp;mdash; Append to response body</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.appendbody&quot;&gt;Yaf_Response_Abstract :: appendBody&lt;/a&gt; &amp;mdash;レスポンスの本文に追加する</target>
        </trans-unit>
        <trans-unit id="3c019d1b727b5262c8ba6cf23617c212f1139136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.clearbody&quot;&gt;Yaf_Response_Abstract::clearBody()&lt;/a&gt; - Discard all exists response body</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.clearbody&quot;&gt;Yaf_Response_Abstract :: clearBody（）&lt;/a&gt; -存在するすべてのレスポンスボディを破棄する</target>
        </trans-unit>
        <trans-unit id="79350631d374ec4aa5e6dd0f601d822a5a430bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.clearbody&quot;&gt;Yaf_Response_Abstract::clearBody&lt;/a&gt; &amp;mdash; Discard all exists response body</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.clearbody&quot;&gt;Yaf_Response_Abstract :: clearBody&lt;/a&gt; &amp;mdash;存在するすべてのレスポンスボディを破棄する</target>
        </trans-unit>
        <trans-unit id="a3a2c903d3c67586b1b98731dfa0d2b1b0b898fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.clearheaders&quot;&gt;Yaf_Response_Abstract::clearHeaders&lt;/a&gt; &amp;mdash; Discard all set headers</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.clearheaders&quot;&gt;Yaf_Response_Abstract :: clearHeaders&lt;/a&gt; &amp;mdash;設定されたすべてのヘッダーを破棄する</target>
        </trans-unit>
        <trans-unit id="de8d267649f1ee1653c10e0cfb212fc8579dba69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.clone&quot;&gt;Yaf_Response_Abstract::__clone&lt;/a&gt; &amp;mdash; The __clone purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.clone&quot;&gt;Yaf_Response_Abstract :: __ clone&lt;/a&gt; &amp;mdash; __cloneの目的</target>
        </trans-unit>
        <trans-unit id="e83fe5926349e988abae02873ec1a996108ba74a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.construct&quot;&gt;Yaf_Response_Abstract::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.construct&quot;&gt;Yaf_Response_Abstract :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="ed30cb3f6a5401c1e4d6a1fc9dc0042e22a1b9d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.destruct&quot;&gt;Yaf_Response_Abstract::__destruct&lt;/a&gt; &amp;mdash; The __destruct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.destruct&quot;&gt;Yaf_Response_Abstract :: __ destruct&lt;/a&gt; &amp;mdash; __destructの目的</target>
        </trans-unit>
        <trans-unit id="ecc40cddade660ba55df21e89bf54fde8aa42704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.getbody&quot;&gt;Yaf_Response_Abstract::getBody()&lt;/a&gt; - Retrieve a exists content</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.getbody&quot;&gt;Yaf_Response_Abstract :: getBody（）&lt;/a&gt; -存在するコンテンツを取得する</target>
        </trans-unit>
        <trans-unit id="532a4e9087d22a821bb994f7f5e1d28de389dce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.getbody&quot;&gt;Yaf_Response_Abstract::getBody&lt;/a&gt; &amp;mdash; Retrieve a exists content</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.getbody&quot;&gt;Yaf_Response_Abstract :: getBody&lt;/a&gt; &amp;mdash;存在するコンテンツを取得する</target>
        </trans-unit>
        <trans-unit id="045bebb8791e10d94987e95bc6f005cdb05d9c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.getheader&quot;&gt;Yaf_Response_Abstract::getHeader()&lt;/a&gt; - The getHeader purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.getheader&quot;&gt;Yaf_Response_Abstract :: getHeader（）&lt;/a&gt; -getHeaderの目的</target>
        </trans-unit>
        <trans-unit id="6ec6b9c91b82c5813c833ff88d072f3f1b61efee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.getheader&quot;&gt;Yaf_Response_Abstract::getHeader&lt;/a&gt; &amp;mdash; The getHeader purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.getheader&quot;&gt;Yaf_Response_Abstract :: getHeader&lt;/a&gt; &amp;mdash; getHeaderの目的</target>
        </trans-unit>
        <trans-unit id="152b41fe3380c23c9904a873bb80fc4ac59600e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.prependbody&quot;&gt;Yaf_Response_Abstract::prependBody()&lt;/a&gt; - The prependBody purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.prependbody&quot;&gt;Yaf_Response_Abstract :: prependBody（）&lt;/a&gt; -prependBodyの目的</target>
        </trans-unit>
        <trans-unit id="2b0de31c13d1e7b489e2a26f08e76868832c83a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.prependbody&quot;&gt;Yaf_Response_Abstract::prependBody&lt;/a&gt; &amp;mdash; The prependBody purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.prependbody&quot;&gt;Yaf_Response_Abstract :: prependBody&lt;/a&gt; &amp;mdash; prependBodyの目的</target>
        </trans-unit>
        <trans-unit id="4f313cb9e99bc81c56fd5e6a37b34ee6c230a959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.response&quot;&gt;Yaf_Response_Abstract::response&lt;/a&gt; &amp;mdash; Send response</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.response&quot;&gt;Yaf_Response_Abstract :: response&lt;/a&gt; &amp;mdash;レスポンスを送信する</target>
        </trans-unit>
        <trans-unit id="d4e2bab1d3b92dc202ba67ec8f02635419991faa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setallheaders&quot;&gt;Yaf_Response_Abstract::setAllHeaders&lt;/a&gt; &amp;mdash; The setAllHeaders purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setallheaders&quot;&gt;Yaf_Response_Abstract :: setAllHeaders&lt;/a&gt; &amp;mdash; setAllHeadersの目的</target>
        </trans-unit>
        <trans-unit id="f52470454d3776a0102630415a068717dd6cb5c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setbody&quot;&gt;Yaf_Response_Abstract::setBody()&lt;/a&gt; - Set content to response</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setbody&quot;&gt;Yaf_Response_Abstract :: setBody（）&lt;/a&gt; -コンテンツを応答に設定する</target>
        </trans-unit>
        <trans-unit id="395b8913f858bd1c1ae38ba714e8c5b6c977f4ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setbody&quot;&gt;Yaf_Response_Abstract::setBody&lt;/a&gt; &amp;mdash; Set content to response</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setbody&quot;&gt;Yaf_Response_Abstract :: setBody&lt;/a&gt; &amp;mdash;コンテンツを応答に設定する</target>
        </trans-unit>
        <trans-unit id="d82716b6588571b6c0d13081a83d31530549b63d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setheader&quot;&gt;Yaf_Response_Abstract::setHeader()&lt;/a&gt; - Set reponse header</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setheader&quot;&gt;Yaf_Response_Abstract :: setHeader（）&lt;/a&gt; -応答ヘッダーを設定する</target>
        </trans-unit>
        <trans-unit id="ff5af6de32de0671d22cc3e7af5c681cc928e539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setheader&quot;&gt;Yaf_Response_Abstract::setHeader&lt;/a&gt; &amp;mdash; Set reponse header</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setheader&quot;&gt;Yaf_Response_Abstract :: setHeader&lt;/a&gt; &amp;mdash;応答ヘッダーを設定する</target>
        </trans-unit>
        <trans-unit id="86940d84880c62d07d54aa27e3454f48ca1dcca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.setredirect&quot;&gt;Yaf_Response_Abstract::setRedirect&lt;/a&gt; &amp;mdash; The setRedirect purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.setredirect&quot;&gt;Yaf_Response_Abstract :: setRedirect&lt;/a&gt; &amp;mdash; setRedirectの目的</target>
        </trans-unit>
        <trans-unit id="6ef11543beef5def6ff9db6363de0adbf9061b75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-response-abstract.tostring&quot;&gt;Yaf_Response_Abstract::__toString&lt;/a&gt; &amp;mdash; Retrieve all bodys as string</source>
          <target state="translated">&lt;a href=&quot;yaf-response-abstract.tostring&quot;&gt;Yaf_Response_Abstract :: __ toString&lt;/a&gt; &amp;mdash;すべてのボディを文字列として取得する</target>
        </trans-unit>
        <trans-unit id="6b212867c128002736a2f22c95979e5da06a40df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-interface.assemble&quot;&gt;Yaf_Route_Interface::assemble&lt;/a&gt; &amp;mdash; Assemble a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-interface.assemble&quot;&gt;Yaf_Route_Interface :: assemble&lt;/a&gt; &amp;mdash;リクエストを組み立てる</target>
        </trans-unit>
        <trans-unit id="65b1bbb538f304353470e1a80cf4c06b03fd0db2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-interface.route&quot;&gt;Yaf_Route_Interface::route&lt;/a&gt; &amp;mdash; Route a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-interface.route&quot;&gt;Yaf_Route_Interface :: route&lt;/a&gt; &amp;mdash;リクエストをルーティングする</target>
        </trans-unit>
        <trans-unit id="3cb2755f54cd45c9677ea1dcd2ea67ef438f7eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-map.assemble&quot;&gt;Yaf_Route_Map::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-map.assemble&quot;&gt;Yaf_Route_Map :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="5a45199a6496725fb2a4ecec1c1cbd2d70d158db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-map.construct&quot;&gt;Yaf_Route_Map::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-map.construct&quot;&gt;Yaf_Route_Map :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="ceb303f08bbd4dadddd32468d64727a635c46323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-map.route&quot;&gt;Yaf_Route_Map::route()&lt;/a&gt; - The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-map.route&quot;&gt;Yaf_Route_Map :: route（）&lt;/a&gt; -ルートの目的</target>
        </trans-unit>
        <trans-unit id="96fdb01f54bb3731ba07be00f596f606819256e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-map.route&quot;&gt;Yaf_Route_Map::route&lt;/a&gt; &amp;mdash; The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-map.route&quot;&gt;Yaf_Route_Map :: route&lt;/a&gt; &amp;mdash;ルートの目的</target>
        </trans-unit>
        <trans-unit id="7285056ee7f97d0c6baf61c8a1556c6b1576af2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-regex.assemble&quot;&gt;Yaf_Route_Regex::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-regex.assemble&quot;&gt;Yaf_Route_Regex :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="90e419faa59b5f53d948ea289b857f18b13b5615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-regex.construct&quot;&gt;Yaf_Route_Regex::__construct&lt;/a&gt; &amp;mdash; Yaf_Route_Regex constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-route-regex.construct&quot;&gt;Yaf_Route_Regex :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Route_Regexコンストラクタ</target>
        </trans-unit>
        <trans-unit id="20ce3ef7881ae77d7827f07ff4b6b214ccdd7d45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-regex.route&quot;&gt;Yaf_Route_Regex::route()&lt;/a&gt; - The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-regex.route&quot;&gt;Yaf_Route_Regex :: route（）&lt;/a&gt; -ルートの目的</target>
        </trans-unit>
        <trans-unit id="db871cbbc7c72fbcfdb0528c334f658c14a23262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-regex.route&quot;&gt;Yaf_Route_Regex::route&lt;/a&gt; &amp;mdash; The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-regex.route&quot;&gt;Yaf_Route_Regex :: route&lt;/a&gt; &amp;mdash;ルートの目的</target>
        </trans-unit>
        <trans-unit id="66b1253157b1b19b46b1a7f49c01c1e077549404" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-rewrite.assemble&quot;&gt;Yaf_Route_Rewrite::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-rewrite.assemble&quot;&gt;Yaf_Route_Rewrite :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="5dd8a29e87fd2ba6c95cf28fa48e085c573d808a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-rewrite.construct&quot;&gt;Yaf_Route_Rewrite::__construct&lt;/a&gt; &amp;mdash; Yaf_Route_Rewrite constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-route-rewrite.construct&quot;&gt;Yaf_Route_Rewrite :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Route_Rewriteコンストラクタ</target>
        </trans-unit>
        <trans-unit id="18a11d69ffc9c28c783ffc735e0812ebe60af557" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-rewrite.route&quot;&gt;Yaf_Route_Rewrite::route()&lt;/a&gt; - The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-rewrite.route&quot;&gt;Yaf_Route_Rewrite :: route（）&lt;/a&gt; -ルートの目的</target>
        </trans-unit>
        <trans-unit id="e72f2508a297ac1190c333e9df85ffe430bdc8f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-rewrite.route&quot;&gt;Yaf_Route_Rewrite::route&lt;/a&gt; &amp;mdash; The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-rewrite.route&quot;&gt;Yaf_Route_Rewrite :: route&lt;/a&gt; &amp;mdash;ルートの目的</target>
        </trans-unit>
        <trans-unit id="be715685d907ffb1d22d58ac21f9c5f9f8c39eba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-simple.assemble&quot;&gt;Yaf_Route_Simple::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-simple.assemble&quot;&gt;Yaf_Route_Simple :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="fd5b5bcdb10367db1ab56af074af7720cafa60b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-simple.construct&quot;&gt;Yaf_Route_Simple::__construct&lt;/a&gt; &amp;mdash; Yaf_Route_Simple constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-route-simple.construct&quot;&gt;Yaf_Route_Simple :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Route_Simpleコンストラクタ</target>
        </trans-unit>
        <trans-unit id="bec808b37e7ab053065c368a646dfc2b8e45b24e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple::route()&lt;/a&gt; - Route a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple :: route（）&lt;/a&gt; -リクエストをルーティングする</target>
        </trans-unit>
        <trans-unit id="8336aad4a66a159037ad3d358249f45ca507a7f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple::route()&lt;/a&gt; will always return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, so it is important put &lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt; in the front of the Route stack, otherwise all the other routes will not be called.</source>
          <target state="translated">&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple :: route（）&lt;/a&gt;は常に&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;を返すため、&lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt;をルートスタックの前に置くことが重要です。そうしないと、他のすべてのルートが呼び出されません。</target>
        </trans-unit>
        <trans-unit id="509010afa0d54732c6a304b05db27d5581ab74d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple::route&lt;/a&gt; &amp;mdash; Route a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-simple.route&quot;&gt;Yaf_Route_Simple :: route&lt;/a&gt; &amp;mdash;リクエストをルーティングする</target>
        </trans-unit>
        <trans-unit id="575ac6e8c7ab7746abacc9c47d7efe4ccd56bbf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-static.assemble&quot;&gt;Yaf_Route_Static::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-static.assemble&quot;&gt;Yaf_Route_Static :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="f3dbe4c07a7d3a5ba5f38c23011e2cc0f42d3652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-static.match&quot;&gt;Yaf_Route_Static::match&lt;/a&gt; &amp;mdash; The match purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-static.match&quot;&gt;Yaf_Route_Static :: match&lt;/a&gt; &amp;mdash;マッチの目的</target>
        </trans-unit>
        <trans-unit id="df74e2bda360829e649faf7b3bbde70bc0a2a52e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-static.route&quot;&gt;Yaf_Route_Static::route()&lt;/a&gt; - Route a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-static.route&quot;&gt;Yaf_Route_Static :: route（）&lt;/a&gt; -リクエストをルーティングする</target>
        </trans-unit>
        <trans-unit id="9b8255a3c503a3cf4534a11b1372e0e05130e0d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-static.route&quot;&gt;Yaf_Route_Static::route&lt;/a&gt; &amp;mdash; Route a request</source>
          <target state="translated">&lt;a href=&quot;yaf-route-static.route&quot;&gt;Yaf_Route_Static :: route&lt;/a&gt; &amp;mdash;リクエストをルーティングする</target>
        </trans-unit>
        <trans-unit id="03b16e05b7454479ad5c691dec610ad2d01fe59f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-supervar.assemble&quot;&gt;Yaf_Route_Supervar::assemble&lt;/a&gt; &amp;mdash; Assemble a url</source>
          <target state="translated">&lt;a href=&quot;yaf-route-supervar.assemble&quot;&gt;Yaf_Route_Supervar :: assemble&lt;/a&gt; &amp;mdash; URLを組み立てる</target>
        </trans-unit>
        <trans-unit id="7c8537cd10f3436e7ef3abb572b379499c15128d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-supervar.construct&quot;&gt;Yaf_Route_Supervar::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-supervar.construct&quot;&gt;Yaf_Route_Supervar :: __ construct&lt;/a&gt; &amp;mdash; __constructの目的</target>
        </trans-unit>
        <trans-unit id="3d7f6e941e8e78a1b92f6715b97580402fa4b631" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-supervar.route&quot;&gt;Yaf_Route_Supervar::route()&lt;/a&gt; - The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-supervar.route&quot;&gt;Yaf_Route_Supervar :: route（）&lt;/a&gt; -ルートの目的</target>
        </trans-unit>
        <trans-unit id="7870884c2f45c89362303543aa62814b86f29be2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-route-supervar.route&quot;&gt;Yaf_Route_Supervar::route&lt;/a&gt; &amp;mdash; The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-route-supervar.route&quot;&gt;Yaf_Route_Supervar :: route&lt;/a&gt; &amp;mdash;ルートの目的</target>
        </trans-unit>
        <trans-unit id="3559282cf711374639723afb4d9167be840d0c01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.addconfig&quot;&gt;Yaf_Router::addConfig()&lt;/a&gt; - Add config-defined routes into Router</source>
          <target state="translated">&lt;a href=&quot;yaf-router.addconfig&quot;&gt;Yaf_Router :: addConfig（）&lt;/a&gt; -構成で定義されたルートをルーターに追加する</target>
        </trans-unit>
        <trans-unit id="029a5f6a62054e97fc8c24c488f6fbf4e6e4de84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.addconfig&quot;&gt;Yaf_Router::addConfig&lt;/a&gt; &amp;mdash; Add config-defined routes into Router</source>
          <target state="translated">&lt;a href=&quot;yaf-router.addconfig&quot;&gt;Yaf_Router :: addConfig&lt;/a&gt; &amp;mdash;設定で定義されたルートをルーターに追加する</target>
        </trans-unit>
        <trans-unit id="080221b44e91352b823c4fcd3adf780ad6884059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.addroute&quot;&gt;Yaf_Router::addRoute()&lt;/a&gt; - Add new Route into Router</source>
          <target state="translated">&lt;a href=&quot;yaf-router.addroute&quot;&gt;Yaf_Router :: addRoute（）&lt;/a&gt; -新しいルートをルーターに追加する</target>
        </trans-unit>
        <trans-unit id="9fd36e09bcb0c2d568f4a34a30a6191d2b139886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.addroute&quot;&gt;Yaf_Router::addRoute&lt;/a&gt; &amp;mdash; Add new Route into Router</source>
          <target state="translated">&lt;a href=&quot;yaf-router.addroute&quot;&gt;Yaf_Router :: addRoute&lt;/a&gt; &amp;mdash;新しいルートをルーターに追加する</target>
        </trans-unit>
        <trans-unit id="007c9fae5d9157aa9fdc45c8ff09eb4f8f814fbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.construct&quot;&gt;Yaf_Router::__construct&lt;/a&gt; &amp;mdash; Yaf_Router constructor</source>
          <target state="translated">&lt;a href=&quot;yaf-router.construct&quot;&gt;Yaf_Router :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Routerコンストラクタ</target>
        </trans-unit>
        <trans-unit id="90d4f247a1b977c4b33d6b09e8bb1ad496d740e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router::getCurrentRoute()&lt;/a&gt; - Get the effective route name</source>
          <target state="translated">&lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router :: getCurrentRoute（）&lt;/a&gt; -有効なルート名を取得する</target>
        </trans-unit>
        <trans-unit id="f730691615677fe5bdf43de38fbfeed148f23e3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router::getCurrentRoute&lt;/a&gt; &amp;mdash; Get the effective route name</source>
          <target state="translated">&lt;a href=&quot;yaf-router.getcurrentroute&quot;&gt;Yaf_Router :: getCurrentRoute&lt;/a&gt; &amp;mdash;有効なルート名を取得する</target>
        </trans-unit>
        <trans-unit id="c8c7ec3a41e72e057f15803d9259c92481f0474a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.getroute&quot;&gt;Yaf_Router::getRoute&lt;/a&gt; &amp;mdash; Retrieve a route by name</source>
          <target state="translated">&lt;a href=&quot;yaf-router.getroute&quot;&gt;Yaf_Router :: getRoute&lt;/a&gt; &amp;mdash;名前でルートを取得する</target>
        </trans-unit>
        <trans-unit id="c525cd4a456c4252e30ee4ecdc136c621850272c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.getroutes&quot;&gt;Yaf_Router::getRoutes&lt;/a&gt; &amp;mdash; Retrieve registered routes</source>
          <target state="translated">&lt;a href=&quot;yaf-router.getroutes&quot;&gt;Yaf_Router :: getRoutes&lt;/a&gt; &amp;mdash;登録されたルートを取得する</target>
        </trans-unit>
        <trans-unit id="1e89dc880e7081cc209075d8626d32f3e365ddd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-router.route&quot;&gt;Yaf_Router::route&lt;/a&gt; &amp;mdash; The route purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-router.route&quot;&gt;Yaf_Router :: route&lt;/a&gt; &amp;mdash;ルートの目的</target>
        </trans-unit>
        <trans-unit id="e798d4cff85c661ca3a3b906af92059f63d86f36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.clone&quot;&gt;Yaf_Session::__clone&lt;/a&gt; &amp;mdash; The __clone purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.clone&quot;&gt;Yaf_Session :: __ clone&lt;/a&gt; &amp;mdash; __cloneの目的</target>
        </trans-unit>
        <trans-unit id="6ca50b4dc7fb0e0738646163a9aabced5772fbce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.construct&quot;&gt;Yaf_Session::__construct&lt;/a&gt; &amp;mdash; Constructor of Yaf_Session</source>
          <target state="translated">&lt;a href=&quot;yaf-session.construct&quot;&gt;Yaf_Session :: __ construct&lt;/a&gt; &amp;mdash; Yaf_Sessionのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="62d732a12c116f283a28bdccb48e9c110827a48f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.count&quot;&gt;Yaf_Session::count&lt;/a&gt; &amp;mdash; The count purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.count&quot;&gt;Yaf_Session :: count&lt;/a&gt; &amp;mdash;カウントの目的</target>
        </trans-unit>
        <trans-unit id="68ebf2c7b0ac0b04137a336114d9e7f4d771fbb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.current&quot;&gt;Yaf_Session::current&lt;/a&gt; &amp;mdash; The current purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.current&quot;&gt;Yaf_Session :: current&lt;/a&gt; &amp;mdash;現在の目的</target>
        </trans-unit>
        <trans-unit id="442f340bdc5cf64c09ef3b88e2513ca769a177d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.del&quot;&gt;Yaf_Session::del&lt;/a&gt; &amp;mdash; The del purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.del&quot;&gt;Yaf_Session :: del&lt;/a&gt; &amp;mdash; delの目的</target>
        </trans-unit>
        <trans-unit id="95cc30650cf959038d994cc1b46d385e4f98e0e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.get&quot;&gt;Yaf_Session::__get&lt;/a&gt; &amp;mdash; The __get purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.get&quot;&gt;Yaf_Session :: __ get&lt;/a&gt; &amp;mdash; __getの目的</target>
        </trans-unit>
        <trans-unit id="bd8929704dc6e5224d281b5cabe70e928c3f7994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.getinstance&quot;&gt;Yaf_Session::getInstance&lt;/a&gt; &amp;mdash; The getInstance purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.getinstance&quot;&gt;Yaf_Session :: getInstance&lt;/a&gt; &amp;mdash; getInstanceの目的</target>
        </trans-unit>
        <trans-unit id="1de6085c52ece2d5927170d3df6a691ea61f5315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.has&quot;&gt;Yaf_Session::has&lt;/a&gt; &amp;mdash; The has purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.has&quot;&gt;Yaf_Session :: has&lt;/a&gt; &amp;mdash;目的があります</target>
        </trans-unit>
        <trans-unit id="7283643275d01cea6e28b5af22937ed5635c00c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.isset&quot;&gt;Yaf_Session::__isset&lt;/a&gt; &amp;mdash; The __isset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.isset&quot;&gt;Yaf_Session :: __ isset&lt;/a&gt; &amp;mdash; __issetの目的</target>
        </trans-unit>
        <trans-unit id="f99560136e3467a21565232854e4c3d0070a83c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.key&quot;&gt;Yaf_Session::key&lt;/a&gt; &amp;mdash; The key purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.key&quot;&gt;Yaf_Session :: key&lt;/a&gt; &amp;mdash;キーの目的</target>
        </trans-unit>
        <trans-unit id="687062770bef2e12e6e482a20af54771d5c04491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.next&quot;&gt;Yaf_Session::next&lt;/a&gt; &amp;mdash; The next purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.next&quot;&gt;Yaf_Session :: next&lt;/a&gt; &amp;mdash;次の目的</target>
        </trans-unit>
        <trans-unit id="545a277a165d36eb0b1446b47338f42f67f7e77b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.offsetexists&quot;&gt;Yaf_Session::offsetExists&lt;/a&gt; &amp;mdash; The offsetExists purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.offsetexists&quot;&gt;Yaf_Session :: offsetExists&lt;/a&gt; &amp;mdash; offsetExistsの目的</target>
        </trans-unit>
        <trans-unit id="020c2b3b9719bfa538d12ec08128c841d46463a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.offsetget&quot;&gt;Yaf_Session::offsetGet&lt;/a&gt; &amp;mdash; The offsetGet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.offsetget&quot;&gt;Yaf_Session :: offsetGet&lt;/a&gt; &amp;mdash; offsetGetの目的</target>
        </trans-unit>
        <trans-unit id="e4c134867df1cba2372db886bf53b552e098f216" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.offsetset&quot;&gt;Yaf_Session::offsetSet&lt;/a&gt; &amp;mdash; The offsetSet purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.offsetset&quot;&gt;Yaf_Session :: offsetSet&lt;/a&gt; &amp;mdash; offsetSetの目的</target>
        </trans-unit>
        <trans-unit id="5206564567b863ea010fe97c05556d9155d29f40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.offsetunset&quot;&gt;Yaf_Session::offsetUnset&lt;/a&gt; &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.offsetunset&quot;&gt;Yaf_Session :: offsetUnset&lt;/a&gt; &amp;mdash; offsetUnsetの目的</target>
        </trans-unit>
        <trans-unit id="1158088f09e3dc0eaea2127fbc02424a30b281f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.rewind&quot;&gt;Yaf_Session::rewind&lt;/a&gt; &amp;mdash; The rewind purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.rewind&quot;&gt;Yaf_Session :: rewind&lt;/a&gt; &amp;mdash;巻き戻しの目的</target>
        </trans-unit>
        <trans-unit id="417814ca2d448833f175198a7042c4e556f17b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.set&quot;&gt;Yaf_Session::__set&lt;/a&gt; &amp;mdash; The __set purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.set&quot;&gt;Yaf_Session :: __ set&lt;/a&gt; &amp;mdash; __setの目的</target>
        </trans-unit>
        <trans-unit id="f08d920dbddadbe542a9dc56fb20925ad5dba51a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.sleep&quot;&gt;Yaf_Session::__sleep&lt;/a&gt; &amp;mdash; The __sleep purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.sleep&quot;&gt;Yaf_Session :: __ sleep&lt;/a&gt; &amp;mdash; __sleepの目的</target>
        </trans-unit>
        <trans-unit id="27becd3fb3bee0b91bfaf6fe722520bf9f35cacc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.start&quot;&gt;Yaf_Session::start&lt;/a&gt; &amp;mdash; The start purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.start&quot;&gt;Yaf_Session :: start&lt;/a&gt; &amp;mdash;開始の目的</target>
        </trans-unit>
        <trans-unit id="6b96086e611c439686f3307ef2d0f0fe52e40e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.unset&quot;&gt;Yaf_Session::__unset&lt;/a&gt; &amp;mdash; The __unset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.unset&quot;&gt;Yaf_Session :: __ unset&lt;/a&gt; &amp;mdash; __unsetの目的</target>
        </trans-unit>
        <trans-unit id="657019f21e9785790389e85251fab0dbc684d49c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.valid&quot;&gt;Yaf_Session::valid&lt;/a&gt; &amp;mdash; The valid purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.valid&quot;&gt;Yaf_Session :: valid&lt;/a&gt; &amp;mdash;有効な目的</target>
        </trans-unit>
        <trans-unit id="223684ca8fc7b13a71ceca11799727904a1081fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-session.wakeup&quot;&gt;Yaf_Session::__wakeup&lt;/a&gt; &amp;mdash; The __wakeup purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-session.wakeup&quot;&gt;Yaf_Session :: __ wakeup&lt;/a&gt; &amp;mdash; __wakeupの目的</target>
        </trans-unit>
        <trans-unit id="00392407f3d838ff21591eeba3acd2605700f7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.assign&quot;&gt;Yaf_View_Interface::assign()&lt;/a&gt; - Assign value to View engine</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.assign&quot;&gt;Yaf_View_Interface :: assign（）&lt;/a&gt; -ビューエンジンに値を割り当てる</target>
        </trans-unit>
        <trans-unit id="1a27a3e824ba2b542a7b1fb271acaf2b9063545b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.assign&quot;&gt;Yaf_View_Interface::assign&lt;/a&gt; &amp;mdash; Assign value to View engine</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.assign&quot;&gt;Yaf_View_Interface :: assign&lt;/a&gt; &amp;mdash;ビューエンジンに値を割り当てる</target>
        </trans-unit>
        <trans-unit id="8de053aa89f228d17a40855e82f160f3faa815aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.display&quot;&gt;Yaf_View_Interface::display&lt;/a&gt; &amp;mdash; Render and output a template</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.display&quot;&gt;Yaf_View_Interface :: display&lt;/a&gt; &amp;mdash;テンプレートをレンダリングして出力する</target>
        </trans-unit>
        <trans-unit id="d47d601e58439d704006b7321ddd9524d2428823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.getscriptpath&quot;&gt;Yaf_View_Interface::getScriptPath&lt;/a&gt; &amp;mdash; The getScriptPath purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.getscriptpath&quot;&gt;Yaf_View_Interface :: getScriptPath&lt;/a&gt; &amp;mdash; getScriptPathの目的</target>
        </trans-unit>
        <trans-unit id="a0ca8e1363cde1f36a0a1eb83f2a9decc1e89619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.render&quot;&gt;Yaf_View_Interface::render&lt;/a&gt; &amp;mdash; Render a template</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.render&quot;&gt;Yaf_View_Interface :: render&lt;/a&gt; &amp;mdash;テンプレートをレンダリングする</target>
        </trans-unit>
        <trans-unit id="aed4f5eaeb02c2d1785dffa0ceb388a3a08f7220" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-interface.setscriptpath&quot;&gt;Yaf_View_Interface::setScriptPath&lt;/a&gt; &amp;mdash; The setScriptPath purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-view-interface.setscriptpath&quot;&gt;Yaf_View_Interface :: setScriptPath&lt;/a&gt; &amp;mdash; setScriptPathの目的</target>
        </trans-unit>
        <trans-unit id="902fa99babc68e2a787d83a4c8fa57e94e94a98a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.assign&quot;&gt;Yaf_View_Simple::assign()&lt;/a&gt; - Assign values</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.assign&quot;&gt;Yaf_View_Simple :: assign（）&lt;/a&gt; -値を割り当てる</target>
        </trans-unit>
        <trans-unit id="5cdac44a54ea32415352d78c49fd5979e75013cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.assign&quot;&gt;Yaf_View_Simple::assign&lt;/a&gt; &amp;mdash; Assign values</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.assign&quot;&gt;Yaf_View_Simple :: assign&lt;/a&gt; &amp;mdash;値を割り当てる</target>
        </trans-unit>
        <trans-unit id="380dc92d361fbc18b725968649b85f7e566892bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.assignref&quot;&gt;Yaf_View_Simple::assignRef()&lt;/a&gt; - The assignRef purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.assignref&quot;&gt;Yaf_View_Simple :: assignRef（）&lt;/a&gt; -assignRefの目的</target>
        </trans-unit>
        <trans-unit id="7568bdce9c6be47bfd991da6d05d569b70d290f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.assignref&quot;&gt;Yaf_View_Simple::assignRef&lt;/a&gt; &amp;mdash; The assignRef purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.assignref&quot;&gt;Yaf_View_Simple :: assignRef&lt;/a&gt; &amp;mdash; assignRefの目的</target>
        </trans-unit>
        <trans-unit id="55fe115d3aaa1bb400a87d8224bf9ca7c2b5f04b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.clear&quot;&gt;Yaf_View_Simple::clear&lt;/a&gt; &amp;mdash; Clear Assigned values</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.clear&quot;&gt;Yaf_View_Simple :: clear&lt;/a&gt; &amp;mdash;割り当てられた値をクリアする</target>
        </trans-unit>
        <trans-unit id="fc17350b2c16184bf1b42926862e2778a2bc6953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.construct&quot;&gt;Yaf_View_Simple::__construct&lt;/a&gt; &amp;mdash; Constructor of Yaf_View_Simple</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.construct&quot;&gt;Yaf_View_Simple :: __ construct&lt;/a&gt; &amp;mdash; Yaf_View_Simpleのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="6814fcc0e34f7d7fb7cb7d43cdcc0290978bc618" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.display&quot;&gt;Yaf_View_Simple::display&lt;/a&gt; &amp;mdash; Render and display</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.display&quot;&gt;Yaf_View_Simple :: display&lt;/a&gt; &amp;mdash;レンダリングして表示する</target>
        </trans-unit>
        <trans-unit id="ba18f02e383f84c3f52839b8f157a19e581689d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.eval&quot;&gt;Yaf_View_Simple::eval&lt;/a&gt; &amp;mdash; Render template</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.eval&quot;&gt;Yaf_View_Simple :: eval&lt;/a&gt; &amp;mdash;テンプレートをレンダリングする</target>
        </trans-unit>
        <trans-unit id="34fabcbed65d6033054d696a41b385ab92941810" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.get&quot;&gt;Yaf_View_Simple::__get&lt;/a&gt; &amp;mdash; Retrieve assigned variable</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.get&quot;&gt;Yaf_View_Simple :: __ get&lt;/a&gt; &amp;mdash;割り当てられた変数を取得する</target>
        </trans-unit>
        <trans-unit id="ad80429015d05263580677cebc2d8bc2b79d1d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.getscriptpath&quot;&gt;Yaf_View_Simple::getScriptPath&lt;/a&gt; &amp;mdash; Get templates directory</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.getscriptpath&quot;&gt;Yaf_View_Simple :: getScriptPath&lt;/a&gt; &amp;mdash;テンプレートのディレクトリを取得する</target>
        </trans-unit>
        <trans-unit id="80b364359fb699b808a57adff8c895dc31d2a3ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.isset&quot;&gt;Yaf_View_Simple::__isset&lt;/a&gt; &amp;mdash; The __isset purpose</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.isset&quot;&gt;Yaf_View_Simple :: __ isset&lt;/a&gt; &amp;mdash; __issetの目的</target>
        </trans-unit>
        <trans-unit id="82405e5ddd513dc54484cd16db9590de5ff326f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.render&quot;&gt;Yaf_View_Simple::render&lt;/a&gt; &amp;mdash; Render template</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.render&quot;&gt;Yaf_View_Simple :: render&lt;/a&gt; &amp;mdash;テンプレートをレンダリングする</target>
        </trans-unit>
        <trans-unit id="ad3408aad70e16227c3b78ed3660d13784d1a671" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.set&quot;&gt;Yaf_View_Simple::__set()&lt;/a&gt; - Set value to engine</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.set&quot;&gt;Yaf_View_Simple :: __ set（）&lt;/a&gt; -エンジンに値を設定する</target>
        </trans-unit>
        <trans-unit id="7c1749a190d51cc917757fd4a136e1de93d45c03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.set&quot;&gt;Yaf_View_Simple::__set&lt;/a&gt; &amp;mdash; Set value to engine</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.set&quot;&gt;Yaf_View_Simple :: __ set&lt;/a&gt; &amp;mdash;値をエンジンに設定する</target>
        </trans-unit>
        <trans-unit id="84848706378eac2573280d74dcde5a06f871604e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yaf-view-simple.setscriptpath&quot;&gt;Yaf_View_Simple::setScriptPath&lt;/a&gt; &amp;mdash; Set tempaltes directory</source>
          <target state="translated">&lt;a href=&quot;yaf-view-simple.setscriptpath&quot;&gt;Yaf_View_Simple :: setScriptPath&lt;/a&gt; &amp;mdash; tempaltesディレクトリを設定する</target>
        </trans-unit>
        <trans-unit id="31e45f11844b36a383662e1f2a3be5cce6c0fc20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client-exception.gettype&quot;&gt;Yar_Client_Exception::getType&lt;/a&gt; &amp;mdash; Retrieve exception's type</source>
          <target state="translated">&lt;a href=&quot;yar-client-exception.gettype&quot;&gt;Yar_Client_Exception :: getType&lt;/a&gt; &amp;mdash;例外のタイプを取得する</target>
        </trans-unit>
        <trans-unit id="d294a4c95c1c9b9d0914c2c27869a7e79fe0d481" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client.call&quot;&gt;Yar_Client::__call()&lt;/a&gt; - Call service</source>
          <target state="translated">&lt;a href=&quot;yar-client.call&quot;&gt;Yar_Client :: __ call（）&lt;/a&gt; -サービスを呼び出す</target>
        </trans-unit>
        <trans-unit id="b4e3d7d052ad9f8f7bd28f901c6adab4b3ecc3dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client.call&quot;&gt;Yar_Client::__call&lt;/a&gt; &amp;mdash; Call service</source>
          <target state="translated">&lt;a href=&quot;yar-client.call&quot;&gt;Yar_Client :: __ call&lt;/a&gt; &amp;mdash;サービスを呼び出す</target>
        </trans-unit>
        <trans-unit id="bfc7f3f5942ad5c9d002854b119e4fa6a48987b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client.construct&quot;&gt;Yar_Client::__construct&lt;/a&gt; &amp;mdash; Create a client</source>
          <target state="translated">&lt;a href=&quot;yar-client.construct&quot;&gt;Yar_Client :: __ construct&lt;/a&gt; &amp;mdash;クライアントを作成する</target>
        </trans-unit>
        <trans-unit id="48611d42eee2ed1a6295d3fb9105146251176f93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client.setopt&quot;&gt;Yar_Client::setOpt()&lt;/a&gt; - Set calling contexts</source>
          <target state="translated">&lt;a href=&quot;yar-client.setopt&quot;&gt;Yar_Client :: setOpt（）&lt;/a&gt; -呼び出しコンテキストを設定する</target>
        </trans-unit>
        <trans-unit id="aef674d493f1c27d92bedd227582e14c0192e226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-client.setopt&quot;&gt;Yar_Client::setOpt&lt;/a&gt; &amp;mdash; Set calling contexts</source>
          <target state="translated">&lt;a href=&quot;yar-client.setopt&quot;&gt;Yar_Client :: setOpt&lt;/a&gt; &amp;mdash;呼び出しコンテキストを設定する</target>
        </trans-unit>
        <trans-unit id="86114b5c5072d5beaa0f053343e471135a4fe705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.call&quot;&gt;Yar_Concurrent_Client::call()&lt;/a&gt; - Register a concurrent call</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.call&quot;&gt;Yar_Concurrent_Client :: call（）&lt;/a&gt; -同時呼び出しを登録する</target>
        </trans-unit>
        <trans-unit id="1d458c0ef5d80ca4a76de99b1696cd12a2d64f4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.call&quot;&gt;Yar_Concurrent_Client::call&lt;/a&gt; &amp;mdash; Register a concurrent call</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.call&quot;&gt;Yar_Concurrent_Client :: call&lt;/a&gt; &amp;mdash;同時呼び出しを登録する</target>
        </trans-unit>
        <trans-unit id="ed34a25abf114884757cf727d3f60f7ee25fd4b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client::loop()&lt;/a&gt; - Send all calls</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client :: loop（）&lt;/a&gt; -すべての呼び出しを送信する</target>
        </trans-unit>
        <trans-unit id="dc6c4669c60969696de8873d566e947b101543a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client::loop&lt;/a&gt; &amp;mdash; Send all calls</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.loop&quot;&gt;Yar_Concurrent_Client :: loop&lt;/a&gt; &amp;mdash;すべての呼び出しを送信する</target>
        </trans-unit>
        <trans-unit id="5ea32191b0b8dfeaacb31123e6af6595205b81bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.reset&quot;&gt;Yar_Concurrent_Client::reset()&lt;/a&gt; - Clean all registered calls</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.reset&quot;&gt;Yar_Concurrent_Client :: reset（）&lt;/a&gt; -登録されているすべての呼び出しを消去する</target>
        </trans-unit>
        <trans-unit id="02a082e0b133c605286b7c73a064276c6b8c35b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-concurrent-client.reset&quot;&gt;Yar_Concurrent_Client::reset&lt;/a&gt; &amp;mdash; Clean all registered calls</source>
          <target state="translated">&lt;a href=&quot;yar-concurrent-client.reset&quot;&gt;Yar_Concurrent_Client :: reset&lt;/a&gt; &amp;mdash;登録されたすべての呼び出しを消去する</target>
        </trans-unit>
        <trans-unit id="ed8da97243dc055d8884f62f4b02775aa5a912a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-server-exception.gettype&quot;&gt;Yar_Server_Exception::getType&lt;/a&gt; &amp;mdash; Retrieve exception's type</source>
          <target state="translated">&lt;a href=&quot;yar-server-exception.gettype&quot;&gt;Yar_Server_Exception :: getType&lt;/a&gt; &amp;mdash;例外のタイプを取得する</target>
        </trans-unit>
        <trans-unit id="4f8ce0c6bbe233d6dd19cd641564eac5c65b6ac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-server.construct&quot;&gt;Yar_Server::__construct()&lt;/a&gt; - Register a server</source>
          <target state="translated">&lt;a href=&quot;yar-server.construct&quot;&gt;Yar_Server :: __ construct（）&lt;/a&gt; -サーバーを登録する</target>
        </trans-unit>
        <trans-unit id="9e5bca2ba17490f66f1c71d607c8d3644164bd89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-server.construct&quot;&gt;Yar_Server::__construct&lt;/a&gt; &amp;mdash; Register a server</source>
          <target state="translated">&lt;a href=&quot;yar-server.construct&quot;&gt;Yar_Server :: __ construct&lt;/a&gt; &amp;mdash;サーバーを登録する</target>
        </trans-unit>
        <trans-unit id="49bbc1dd8c8c7a04c55594b5daafe01b49796cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-server.handle&quot;&gt;Yar_Server::handle()&lt;/a&gt; - Start RPC Server</source>
          <target state="translated">&lt;a href=&quot;yar-server.handle&quot;&gt;Yar_Server :: handle（）&lt;/a&gt; -RPCサーバーを起動する</target>
        </trans-unit>
        <trans-unit id="7599877a44bf103a5bfa700361f31669a15cfb3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;yar-server.handle&quot;&gt;Yar_Server::handle&lt;/a&gt; &amp;mdash; Start RPC Server</source>
          <target state="translated">&lt;a href=&quot;yar-server.handle&quot;&gt;Yar_Server :: handle&lt;/a&gt; &amp;mdash; RPCサーバーを起動する</target>
        </trans-unit>
        <trans-unit id="99334bcd0e0524b842c458473d915fee0bf0827a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addemptydir&quot;&gt;ZipArchive::addEmptyDir&lt;/a&gt; &amp;mdash; Add a new directory</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addemptydir&quot;&gt;ZipArchive :: addEmptyDir&lt;/a&gt; &amp;mdash;新しいディレクトリを追加する</target>
        </trans-unit>
        <trans-unit id="2bf54596a0a92984dc078dd49fb6bb2202034d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile()&lt;/a&gt; - Adds a file to a ZIP archive from the given path</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive :: addFile（）&lt;/a&gt; -指定したパスからZIPアーカイブにファイルを追加する</target>
        </trans-unit>
        <trans-unit id="ffe5e71e9491f6b139e34b28138abe383702e0a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile&lt;/a&gt; &amp;mdash; Adds a file to a ZIP archive from the given path</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive :: addFile&lt;/a&gt; &amp;mdash;指定したパスからZIPアーカイブにファイルを追加する</target>
        </trans-unit>
        <trans-unit id="5334b4ddcef8f5dc5ec95025714ffeba8aeae31e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive::addFromString&lt;/a&gt; &amp;mdash; Add a file to a ZIP archive using its contents</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive :: addFromString&lt;/a&gt; &amp;mdash;その内容を使用してファイルをZIPアーカイブに追加する</target>
        </trans-unit>
        <trans-unit id="eafd34dd447062e00af1ed594cf10cb54f9287e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addglob&quot;&gt;ZipArchive::addGlob()&lt;/a&gt; - Add files from a directory by glob pattern</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addglob&quot;&gt;ZipArchive :: addGlob（）&lt;/a&gt; -ディレクトリからファイルをグロブパターンで追加する</target>
        </trans-unit>
        <trans-unit id="d6e0ebe1258bb4344cc1fab876b3c13557757b93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addglob&quot;&gt;ZipArchive::addGlob&lt;/a&gt; &amp;mdash; Add files from a directory by glob pattern</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addglob&quot;&gt;ZipArchive :: addGlob&lt;/a&gt; &amp;mdash;ディレクトリからファイルをグロブパターンで追加する</target>
        </trans-unit>
        <trans-unit id="f36a65efd87be6e4137238dc0d3c8e0bff5769f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addpattern&quot;&gt;ZipArchive::addPattern()&lt;/a&gt; - Add files from a directory by PCRE pattern</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addpattern&quot;&gt;ZipArchive :: addPattern（）&lt;/a&gt; -ディレクトリからPCREパターンでファイルを追加する</target>
        </trans-unit>
        <trans-unit id="60ced64ccb7eb808ece38a0d7134198100cb704a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.addpattern&quot;&gt;ZipArchive::addPattern&lt;/a&gt; &amp;mdash; Add files from a directory by PCRE pattern</source>
          <target state="translated">&lt;a href=&quot;ziparchive.addpattern&quot;&gt;ZIPARCHIVE :: addPattern&lt;/a&gt; - PCREのパターンによってディレクトリからファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="3109214c4ac0724b0749d378ab4b534f74652743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.close&quot;&gt;ZipArchive::close&lt;/a&gt; &amp;mdash; Close the active archive (opened or newly created)</source>
          <target state="translated">&lt;a href=&quot;ziparchive.close&quot;&gt;ZipArchive :: close&lt;/a&gt; &amp;mdash;アクティブなアーカイブ（開かれた、または新しく作成された）を閉じる</target>
        </trans-unit>
        <trans-unit id="c014a9532933a9cf96b084b0e48704a19edfcbca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.count&quot;&gt;ZipArchive::count&lt;/a&gt; &amp;mdash; Counts the number of files in the achive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.count&quot;&gt;ZipArchive :: count&lt;/a&gt; &amp;mdash; アーカイブ内のファイル数をカウントする</target>
        </trans-unit>
        <trans-unit id="7bbe79a0a396e2df6022c1a29951dc9e859e2e23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.deleteindex&quot;&gt;ZipArchive::deleteIndex&lt;/a&gt; &amp;mdash; Delete an entry in the archive using its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.deleteindex&quot;&gt;ZipArchive :: deleteIndex&lt;/a&gt; &amp;mdash;インデックスを使用して、アーカイブ内のエントリを削除する</target>
        </trans-unit>
        <trans-unit id="d83911beae54ea960446d8e1155a7565dc9b2d35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.deletename&quot;&gt;ZipArchive::deleteName&lt;/a&gt; &amp;mdash; Delete an entry in the archive using its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.deletename&quot;&gt;ZipArchive :: deleteName&lt;/a&gt; &amp;mdash;名前を使用してアーカイブのエントリを削除する</target>
        </trans-unit>
        <trans-unit id="da247e5b9c3c393316fd484be7aab8998f1aa730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.extractto&quot;&gt;ZipArchive::extractTo&lt;/a&gt; &amp;mdash; Extract the archive contents</source>
          <target state="translated">&lt;a href=&quot;ziparchive.extractto&quot;&gt;ZipArchive :: extractTo&lt;/a&gt; &amp;mdash;アーカイブの内容を抽出する</target>
        </trans-unit>
        <trans-unit id="4ec3cdde4a7c11cd6a283f4771f79e8b493df182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getarchivecomment&quot;&gt;ZipArchive::getArchiveComment&lt;/a&gt; &amp;mdash; Returns the Zip archive comment</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getarchivecomment&quot;&gt;ZipArchive :: getArchiveComment&lt;/a&gt; &amp;mdash; Zipアーカイブのコメントを返す</target>
        </trans-unit>
        <trans-unit id="1d19cfea912829b7bff0c6088c121c27f652c236" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getcommentindex&quot;&gt;ZipArchive::getCommentIndex&lt;/a&gt; &amp;mdash; Returns the comment of an entry using the entry index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getcommentindex&quot;&gt;ZipArchive :: getCommentIndex&lt;/a&gt; &amp;mdash;エントリのインデックスを使用して、エントリのコメントを返す</target>
        </trans-unit>
        <trans-unit id="b463408324e710007608f6bee012809b46516ca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getcommentname&quot;&gt;ZipArchive::getCommentName&lt;/a&gt; &amp;mdash; Returns the comment of an entry using the entry name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getcommentname&quot;&gt;ZipArchive :: getCommentName&lt;/a&gt; &amp;mdash;エントリ名を使用してエントリのコメントを返す</target>
        </trans-unit>
        <trans-unit id="89b3178ba83c550b1239258877b7171aa7963c9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getexternalattributesindex&quot;&gt;ZipArchive::getExternalAttributesIndex&lt;/a&gt; &amp;mdash; Retrieve the external attributes of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getexternalattributesindex&quot;&gt;ZipArchive :: getExternalAttributesIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの外部属性を取得する</target>
        </trans-unit>
        <trans-unit id="16a6a4a50e235b5b5aa970e73af437e3fc1afb64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getexternalattributesname&quot;&gt;ZipArchive::getExternalAttributesName&lt;/a&gt; &amp;mdash; Retrieve the external attributes of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getexternalattributesname&quot;&gt;ZipArchive :: getExternalAttributesName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの外部属性を取得する</target>
        </trans-unit>
        <trans-unit id="fb38fcdd7c376bb043c2895fc41505d2f2d0ddd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getfromindex&quot;&gt;ZipArchive::getFromIndex()&lt;/a&gt; - Returns the entry contents using its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getfromindex&quot;&gt;ZipArchive :: getFromIndex（）&lt;/a&gt; -インデックスを使用してエントリの内容を返す</target>
        </trans-unit>
        <trans-unit id="bf2699d17b82829f85ab406e84a08cbf143a5831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getfromindex&quot;&gt;ZipArchive::getFromIndex&lt;/a&gt; &amp;mdash; Returns the entry contents using its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getfromindex&quot;&gt;ZipArchive :: getFromIndex&lt;/a&gt; &amp;mdash;インデックスを使用してエントリの内容を返す</target>
        </trans-unit>
        <trans-unit id="f3aa7dd1fd0b32d160088eac4494ea5cb20a2f1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getfromname&quot;&gt;ZipArchive::getFromName()&lt;/a&gt; - Returns the entry contents using its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getfromname&quot;&gt;ZipArchive :: getFromName（）&lt;/a&gt; -名前を使用してエントリの内容を返す</target>
        </trans-unit>
        <trans-unit id="ba10225b206f7e4d18efc47fb681909a580e522d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getfromname&quot;&gt;ZipArchive::getFromName&lt;/a&gt; &amp;mdash; Returns the entry contents using its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getfromname&quot;&gt;ZipArchive :: getFromName&lt;/a&gt; &amp;mdash;名前を使用してエントリの内容を返す</target>
        </trans-unit>
        <trans-unit id="7d3a0cbb407f1e5cc629c2b0c8e1450089b624ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getnameindex&quot;&gt;ZipArchive::getNameIndex&lt;/a&gt; &amp;mdash; Returns the name of an entry using its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getnameindex&quot;&gt;ZipArchive :: getNameIndex&lt;/a&gt; &amp;mdash;インデックスを使用してエントリの名前を返す</target>
        </trans-unit>
        <trans-unit id="9c20a0fa6200d1bb04abc97444efa5878f895380" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getstatusstring&quot;&gt;ZipArchive::getStatusString&lt;/a&gt; &amp;mdash; Returns the status error message, system and/or zip messages</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getstatusstring&quot;&gt;ZipArchive :: getStatusString&lt;/a&gt; &amp;mdash;ステータスエラーメッセージ、システムメッセージ、zipメッセージを返す</target>
        </trans-unit>
        <trans-unit id="a05f86b5944fc93fe6bbd7b672773969585f7778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.getstream&quot;&gt;ZipArchive::getStream&lt;/a&gt; &amp;mdash; Get a file handler to the entry defined by its name (read only)</source>
          <target state="translated">&lt;a href=&quot;ziparchive.getstream&quot;&gt;ZipArchive :: getStream&lt;/a&gt; &amp;mdash;名前で定義されたエントリへのファイルハンドラを取得する（読み取り専用）</target>
        </trans-unit>
        <trans-unit id="5efc4d2e4326a22bafc1710fa6031f28c3c1d97f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.locatename&quot;&gt;ZipArchive::locateName&lt;/a&gt; &amp;mdash; Returns the index of the entry in the archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.locatename&quot;&gt;ZipArchive :: locateName&lt;/a&gt; &amp;mdash;アーカイブ内のエントリのインデックスを返す</target>
        </trans-unit>
        <trans-unit id="1e1db92458ae3c9ce3021534d39f1135795821c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.open&quot;&gt;ZipArchive::open&lt;/a&gt; &amp;mdash; Open a ZIP file archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.open&quot;&gt;ZipArchive :: open&lt;/a&gt; &amp;mdash; ZIPファイルのアーカイブを開く</target>
        </trans-unit>
        <trans-unit id="8301a65e0be958d33d97250a4845f4f422dbe894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.renameindex&quot;&gt;ZipArchive::renameIndex&lt;/a&gt; &amp;mdash; Renames an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.renameindex&quot;&gt;ZipArchive :: renameIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの名前を変更する</target>
        </trans-unit>
        <trans-unit id="d36da1df0d23d60f01ffcdd4af6ee65192f73ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.renamename&quot;&gt;ZipArchive::renameName&lt;/a&gt; &amp;mdash; Renames an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.renamename&quot;&gt;ZipArchive :: renameName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの名前を変更する</target>
        </trans-unit>
        <trans-unit id="b5d7d5a33e791f08ef807f537e32b0f33b0df288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setarchivecomment&quot;&gt;ZipArchive::setArchiveComment&lt;/a&gt; &amp;mdash; Set the comment of a ZIP archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setarchivecomment&quot;&gt;ZipArchive :: setArchiveComment&lt;/a&gt; &amp;mdash; ZIPアーカイブのコメントを設定する</target>
        </trans-unit>
        <trans-unit id="80be8bdfc94fd38368c1b79ec60c26c8f5aeec55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setcommentindex&quot;&gt;ZipArchive::setCommentIndex&lt;/a&gt; &amp;mdash; Set the comment of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setcommentindex&quot;&gt;ZipArchive :: setCommentIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリのコメントを設定する</target>
        </trans-unit>
        <trans-unit id="cee8af3795d2580759efdf9aec6e9ba0cc3f1017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setcommentname&quot;&gt;ZipArchive::setCommentName&lt;/a&gt; &amp;mdash; Set the comment of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setcommentname&quot;&gt;ZipArchive :: setCommentName&lt;/a&gt; &amp;mdash;名前で定義されたエントリのコメントを設定する</target>
        </trans-unit>
        <trans-unit id="060e2c9d9686d336151dad9187fedbeb5313d421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setcompressionindex&quot;&gt;ZipArchive::setCompressionIndex&lt;/a&gt; &amp;mdash; Set the compression method of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setcompressionindex&quot;&gt;ZipArchive :: setCompressionIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの圧縮方法を設定する</target>
        </trans-unit>
        <trans-unit id="1ddf694d055470cd57e6093666c683baee942399" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setcompressionname&quot;&gt;ZipArchive::setCompressionName&lt;/a&gt; &amp;mdash; Set the compression method of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setcompressionname&quot;&gt;ZipArchive :: setCompressionName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの圧縮方法を設定する</target>
        </trans-unit>
        <trans-unit id="a5494d679541edbb8d2757f45f9af06c740f4939" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive::setEncryptionIndex()&lt;/a&gt; - Set the encryption method of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive :: setEncryptionIndex（）&lt;/a&gt; -インデックスで定義されたエントリの暗号化方法を設定する</target>
        </trans-unit>
        <trans-unit id="4694705e3c9506ad720adae2f7cb9b4895a559f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive::setEncryptionIndex&lt;/a&gt; &amp;mdash; Set the encryption method of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive :: setEncryptionIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの暗号化方法を設定する</target>
        </trans-unit>
        <trans-unit id="57e8410c15b90d678fd1657dc090de8206a9e642" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive::setEncryptionName()&lt;/a&gt; - Set the encryption method of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive :: setEncryptionName（）&lt;/a&gt; -名前で定義されたエントリの暗号化方式を設定する</target>
        </trans-unit>
        <trans-unit id="7abef4028e96950a72626f0ba052645fac7167aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive::setEncryptionName&lt;/a&gt; &amp;mdash; Set the encryption method of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive :: setEncryptionName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの暗号化方法を設定する</target>
        </trans-unit>
        <trans-unit id="5372e5b7e0dd0f9f284839453d5084fbadb6905c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setexternalattributesindex&quot;&gt;ZipArchive::setExternalAttributesIndex&lt;/a&gt; &amp;mdash; Set the external attributes of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setexternalattributesindex&quot;&gt;ZipArchive :: setExternalAttributesIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの外部属性を設定する</target>
        </trans-unit>
        <trans-unit id="10994786a162bf5a7bd0b2c1fc80d6199496ffff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setexternalattributesname&quot;&gt;ZipArchive::setExternalAttributesName&lt;/a&gt; &amp;mdash; Set the external attributes of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setexternalattributesname&quot;&gt;ZipArchive :: setExternalAttributesName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの外部属性を設定する</target>
        </trans-unit>
        <trans-unit id="d76d7fb17fe897ea61f7b20f74867239994ef468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setpassword&quot;&gt;ZipArchive::setPassword()&lt;/a&gt; - Set the password for the active archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setpassword&quot;&gt;ZipArchive :: setPassword（）&lt;/a&gt; -アクティブなアーカイブのパスワードを設定する</target>
        </trans-unit>
        <trans-unit id="d7f9f36d8ee99ba02e59e92802700604f2f2fb90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.setpassword&quot;&gt;ZipArchive::setPassword&lt;/a&gt; &amp;mdash; Set the password for the active archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.setpassword&quot;&gt;ZipArchive :: setPassword&lt;/a&gt; &amp;mdash;アクティブなアーカイブのパスワードを設定する</target>
        </trans-unit>
        <trans-unit id="267eae5a139ea14f89c2f1544268a56b9aee31b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.statindex&quot;&gt;ZipArchive::statIndex&lt;/a&gt; &amp;mdash; Get the details of an entry defined by its index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.statindex&quot;&gt;ZipArchive :: statIndex&lt;/a&gt; &amp;mdash;インデックスで定義されたエントリの詳細を取得する</target>
        </trans-unit>
        <trans-unit id="8dd6860232fef8dfaf52327d4575fd5c8ff32b71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.statname&quot;&gt;ZipArchive::statName&lt;/a&gt; &amp;mdash; Get the details of an entry defined by its name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.statname&quot;&gt;ZipArchive :: statName&lt;/a&gt; &amp;mdash;名前で定義されたエントリの詳細を取得する</target>
        </trans-unit>
        <trans-unit id="7f0e16b151241cb7312ada1ffd9504bab05e54a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.unchangeall&quot;&gt;ZipArchive::unchangeAll&lt;/a&gt; &amp;mdash; Undo all changes done in the archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.unchangeall&quot;&gt;ZipArchive :: unchangeAll&lt;/a&gt; &amp;mdash;アーカイブで行われたすべての変更を元に戻す</target>
        </trans-unit>
        <trans-unit id="6d51e82682d87e68e4fab29be72a4e681c3f5da0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.unchangearchive&quot;&gt;ZipArchive::unchangeArchive&lt;/a&gt; &amp;mdash; Revert all global changes done in the archive</source>
          <target state="translated">&lt;a href=&quot;ziparchive.unchangearchive&quot;&gt;ZipArchive :: unchangeArchive&lt;/a&gt; &amp;mdash;アーカイブで行われたすべてのグローバル変更を元に戻す</target>
        </trans-unit>
        <trans-unit id="7fae6f5dadfd5ec8e63b250b4d027f04ce14b6d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.unchangeindex&quot;&gt;ZipArchive::unchangeIndex&lt;/a&gt; &amp;mdash; Revert all changes done to an entry at the given index</source>
          <target state="translated">&lt;a href=&quot;ziparchive.unchangeindex&quot;&gt;ZipArchive :: unchangeIndex&lt;/a&gt; &amp;mdash;指定したインデックスのエントリに加えられたすべての変更を元に戻す</target>
        </trans-unit>
        <trans-unit id="55ca0ce30b14fcf689eea211b63c5f09726d5c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ziparchive.unchangename&quot;&gt;ZipArchive::unchangeName&lt;/a&gt; &amp;mdash; Revert all changes done to an entry with the given name</source>
          <target state="translated">&lt;a href=&quot;ziparchive.unchangename&quot;&gt;ZipArchive :: unchangeName&lt;/a&gt; &amp;mdash;指定した名前のエントリに加えられたすべての変更を元に戻す</target>
        </trans-unit>
        <trans-unit id="e4607d49626d6e9b75ebc011fbf7bdcdd7ac85a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$...&lt;/code&gt; in function prototypes means &lt;em&gt;and so on&lt;/em&gt;. This variable name is used when a function can take an endless number of arguments.</source>
          <target state="translated">&lt;code&gt;$...&lt;/code&gt; 関数プロトタイプでは&lt;em&gt;、以下同様&lt;/em&gt;です。この変数名は、関数が無限の数の引数を取ることができる場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="7b3291ecab2911278d87b8acd7ec8ebdf5c64505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CURLAUTH_ANY&lt;/code&gt; is an alias for &lt;em&gt;CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;CURLAUTH_ANY&lt;/code&gt; はCURLAUTH_BASICのエイリアスです&lt;em&gt;。CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c64de665500d211ed79639889f1b35efd2167521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CURLAUTH_ANYSAFE&lt;/code&gt; is an alias for &lt;em&gt;CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;CURLAUTH_ANYSAFE&lt;/code&gt; はCURLAUTH_DIGESTのエイリアスです&lt;em&gt;。CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bdef8b6c93c818bc17315631b377a0ad55d374e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CURL_HTTP_VERSION_NONE&lt;/code&gt; (default, lets CURL decide which version to use), &lt;code&gt;CURL_HTTP_VERSION_1_0&lt;/code&gt; (forces HTTP/1.0), or &lt;code&gt;CURL_HTTP_VERSION_1_1&lt;/code&gt; (forces HTTP/1.1).</source>
          <target state="translated">&lt;code&gt;CURL_HTTP_VERSION_NONE&lt;/code&gt; （デフォルト、CURLに使用するバージョンを決定させる）、 &lt;code&gt;CURL_HTTP_VERSION_1_0&lt;/code&gt; （HTTP / 1.0を強制する）、または &lt;code&gt;CURL_HTTP_VERSION_1_1&lt;/code&gt; （HTTP / 1.1を強制する）。</target>
        </trans-unit>
        <trans-unit id="543c4becf1f5ae75facea0e0e5ff76adc6fdfc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMG&lt;/code&gt; tag and the correspondent</source>
          <target state="translated">&lt;code&gt;IMG&lt;/code&gt; タグと特派員</target>
        </trans-unit>
        <trans-unit id="e287df915f67d0d33dba61ae2d7f0db171eaaef8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additional_headers&lt;/code&gt; (optional)</source>
          <target state="translated">&lt;code&gt;additional_headers&lt;/code&gt; （オプション）</target>
        </trans-unit>
        <trans-unit id="3edd9bde9eeb490abf3d364cd0883ffdb42bcb37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additional_parameter&lt;/code&gt; is a MTA command line parameter. It is useful when setting the correct Return-Path header when using sendmail.</source>
          <target state="translated">&lt;code&gt;additional_parameter&lt;/code&gt; はMTAコマンドラインパラメータです。sendmailを使用するときに正しいReturn-Pathヘッダーを設定するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="06ce21fe8b525a57004b8fdcd5f6d74c7c618ed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additional_parameters&lt;/code&gt; (optional)</source>
          <target state="translated">&lt;code&gt;additional_parameters&lt;/code&gt; （オプション）</target>
        </trans-unit>
        <trans-unit id="55323836d17c139ddb5c63b4d573dae5735b75fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angle&lt;/code&gt; is in degrees.</source>
          <target state="translated">&lt;code&gt;angle&lt;/code&gt; は度単位です。</target>
        </trans-unit>
        <trans-unit id="ebbbe6922c19a3895a2950d4d91ee6da1b1278ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is an array of argument strings passed to the program.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; は、プログラムに渡される引数文字列の配列です。</target>
        </trans-unit>
        <trans-unit id="c6e5b769ffc4d43f1829f9424c56c54e0175335a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is now always passed by value. Prior to this version, it was passed by reference if possible, and by value otherwise.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; は常に値で渡されるようになりました。このバージョンより前は、可能であれば参照によって、そうでなければ値によって渡されていました。</target>
        </trans-unit>
        <trans-unit id="ddc73e3d7562333fd8dd4c0b83a5fc38d2c7997a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth_type&lt;/code&gt; can be one of the following flags (in order of decreasing preference as per OAuth 1.0 section 5.2):</source>
          <target state="translated">&lt;code&gt;auth_type&lt;/code&gt; は、次のフラグのいずれかになります（OAuth 1.0セクション5.2に従って優先度の高い順に）：</target>
        </trans-unit>
        <trans-unit id="0010cafb769ace27f98926ebe4f68181c44c7682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; raised to the power of &lt;code&gt;exp&lt;/code&gt;. If both arguments are non-negative integers and the result can be represented as an integer, the result will be returned with &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type, otherwise it will be returned as a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; を &lt;code&gt;exp&lt;/code&gt; で累乗します。両方の引数が負でない整数であり、結果を整数として表すことができる場合、結果は&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;型で返されます。それ以外の場合は、&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="99e2f2ff0a6c6daaae35436795ed470d7365991d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ber_identifier&lt;/code&gt; is the identifier to internal memory location pointer. It is passed by reference. The same &lt;code&gt;ber_identifier&lt;/code&gt; is passed to &lt;a href=&quot;function.ldap-next-attribute&quot;&gt;ldap_next_attribute()&lt;/a&gt; , which modifies that pointer.</source>
          <target state="translated">&lt;code&gt;ber_identifier&lt;/code&gt; は、内部メモリロケーションポインタの識別子です。参照渡しされます。同じ &lt;code&gt;ber_identifier&lt;/code&gt; が&lt;a href=&quot;function.ldap-next-attribute&quot;&gt;ldap_next_attribute（）に&lt;/a&gt;渡され、そのポインターが変更されます。</target>
        </trans-unit>
        <trans-unit id="ca503031dfb34b6343b783feb08dee59aeedc1a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bits&lt;/code&gt; must greater than 0, and the maximum value is restricted by available memory.</source>
          <target state="translated">&lt;code&gt;bits&lt;/code&gt; は0より大きくなければならず、最大値は使用可能なメモリによって制限されます。</target>
        </trans-unit>
        <trans-unit id="9a8748cc27a67764a832a60bc3846b43c9ef834e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brigade&lt;/code&gt; is a resource pointing to a &lt;em&gt;bucket brigade&lt;/em&gt; which contains one or more &lt;em&gt;bucket&lt;/em&gt; objects.</source>
          <target state="translated">&lt;code&gt;brigade&lt;/code&gt; は、1つ以上の&lt;em&gt;バケット&lt;/em&gt;オブジェクトを含む&lt;em&gt;バケット旅団&lt;/em&gt;を指すリソースです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0924cdf3b7c0c2df52235d7e652fc9ad0d0e8dfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is passed by reference, so it must be specified as a variable in the argument list. Data read from &lt;code&gt;socket&lt;/code&gt; by &lt;strong&gt;socket_recv()&lt;/strong&gt; will be returned in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; は参照によって渡されるため、引数リストで変数として指定する必要があります。&lt;strong&gt;socket_recv（）&lt;/strong&gt;によって &lt;code&gt;socket&lt;/code&gt; から読み取られたデータは &lt;code&gt;buf&lt;/code&gt; に返されます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b19889506c0170e2284028ebe24b72006b93766e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers&lt;/code&gt; is the number of database buffers to allocate for the server-side cache. If 0 or omitted, server chooses its own default.</source>
          <target state="translated">&lt;code&gt;buffers&lt;/code&gt; は、サーバー側キャッシュに割り当てるデータベースバッファーの数です。0または省略した場合、サーバーは独自のデフォルトを選択します。</target>
        </trans-unit>
        <trans-unit id="3d1a74e26eb8d838e3e4b9a49142d81a248745cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cainfo&lt;/code&gt; should be an array of trusted CA files/dirs as described in &lt;a href=&quot;https://secure.php.net/manual/en/openssl.cert.verification.php&quot;&gt;Certificate Verification&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cainfo&lt;/code&gt; は、&lt;a href=&quot;https://secure.php.net/manual/en/openssl.cert.verification.php&quot;&gt;証明書の検証で&lt;/a&gt;説明されているように、信頼できるCAファイル/ディレクトリの配列である必要があります。</target>
        </trans-unit>
        <trans-unit id="f5a9fcc62563366453c1711ba7d8a84404bb1c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; function is called when the request is done. It should match the following prototype:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 関数は、リクエストが完了すると呼び出されます。次のプロトタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="a73aaa8a1732a50cec30ada740a0d8e57ab39786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is event completion callback that should match the following prototype:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; は、次のプロトタイプと一致する必要があるイベント完了コールバックです。</target>
        </trans-unit>
        <trans-unit id="d02308ca2a8096d25aa81e74be4a55e79d7c94cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callbacks&lt;/code&gt; may be an associative array with any or all of the following parameters.</source>
          <target state="translated">&lt;code&gt;callbacks&lt;/code&gt; は、以下のパラメータのいずれかまたはすべてを含む連想配列です。</target>
        </trans-unit>
        <trans-unit id="64bd907f9d1420ae369f7c917025353d75d61da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;category&lt;/code&gt; is a named constant specifying the category of the functions affected by the locale setting:</source>
          <target state="translated">&lt;code&gt;category&lt;/code&gt; は、ロケール設定の影響を受ける関数のカテゴリを指定する名前付き定数です。</target>
        </trans-unit>
        <trans-unit id="e0de3745702013358866d7dbfd7ca7f1f3514586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;certificate&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;certificate&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="96fe9e96abc2a7d02d4e1a7b584bb1c8711ef7b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charlist&lt;/code&gt; like &quot;\0..\37&quot;, which would escape all characters with ASCII code between 0 and 31.</source>
          <target state="translated">&lt;code&gt;charlist&lt;/code&gt; 「\ 0 .. \ 37」のような文字リスト。0〜31の ASCIIコードを持つすべての文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="29841ac6a376803eb9ba204215d14980af209f4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; is the default character set for a database.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; は、データベースのデフォルトの文字セットです。</target>
        </trans-unit>
        <trans-unit id="ae76a3f59c15e0c57faf6550e747cf1da94b60e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; specifies the name of the character set in which &lt;code&gt;str&lt;/code&gt; is represented in. The default value is determined by the current NLS setting (&lt;em&gt;mbstring.language&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; は、 &lt;code&gt;str&lt;/code&gt; を表す文字セットの名前を指定します。デフォルト値は、現在のNLS設定（&lt;em&gt;mbstring.language&lt;/em&gt;）によって決定されます。</target>
        </trans-unit>
        <trans-unit id="c5b775ba6f21c635a97b506d1b5da70b9b4ff879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configargs&lt;/code&gt; can be used to fine-tune the export process by specifying and/or overriding options for the openssl configuration file. See &lt;a href=&quot;function.openssl-csr-new&quot;&gt;openssl_csr_new()&lt;/a&gt; for more information about &lt;code&gt;configargs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;configargs&lt;/code&gt; を使用して、openssl構成ファイルのオプションを指定またはオーバーライドすることにより、エクスポートプロセスを微調整できます。 &lt;code&gt;configargs&lt;/code&gt; の詳細については、&lt;a href=&quot;function.openssl-csr-new&quot;&gt;openssl_csr_new（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dd887269843f555455117e33fdbacd202667507f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configargs&lt;/code&gt; key</source>
          <target state="translated">&lt;code&gt;configargs&lt;/code&gt; キー</target>
        </trans-unit>
        <trans-unit id="9d1b3f589b1f889505ac32fa8a90c87b3dbc886b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connection&lt;/code&gt; added</source>
          <target state="translated">&lt;code&gt;connection&lt;/code&gt; 追加されました</target>
        </trans-unit>
        <trans-unit id="881f4971687f665feb29bf08cbf80c99f6fe31b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consumed&lt;/code&gt;, which must &lt;em&gt;always&lt;/em&gt; be declared by reference, should be incremented by the length of the data which your filter reads in and alters. In most cases this means you will increment &lt;code&gt;consumed&lt;/code&gt; by &lt;em&gt;$bucket-&amp;gt;datalen&lt;/em&gt; for each &lt;em&gt;$bucket&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;consumed&lt;/code&gt; &lt;em&gt;常に&lt;/em&gt;参照によって宣言する必要&lt;em&gt;が&lt;/em&gt;ある消費されたは、フィルターが読み取って変更するデータの長さだけインクリメントする必要があります。ほとんどの場合、これは、&lt;em&gt;$ bucket&lt;/em&gt;ごとに&lt;em&gt;$ &lt;/em&gt;&lt;em&gt;bucket-&amp;gt; datalen&lt;/em&gt;によって &lt;code&gt;consumed&lt;/code&gt; ことを意味します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d63104345c54c9dbbca9a0da528c67b3e8b53fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;convmap&lt;/code&gt; is an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; that specifies the code area to convert.</source>
          <target state="translated">&lt;code&gt;convmap&lt;/code&gt; は、変換するコード領域を指定する&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e5af78b6b707f6008b651c662a337059efd21290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;convmap&lt;/code&gt; is array specifies code area to convert.</source>
          <target state="translated">&lt;code&gt;convmap&lt;/code&gt; は、変換するコード領域を指定する配列です。</target>
        </trans-unit>
        <trans-unit id="c6d8f2d5336b29703687f5726693a9025626489f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; is the data passed to &lt;code&gt;execute&lt;/code&gt; via &lt;code&gt;data&lt;/code&gt; argument without modifications &lt;code&gt;result&lt;/code&gt; value returned by &lt;code&gt;execute&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; データに渡され &lt;code&gt;execute&lt;/code&gt; を介して &lt;code&gt;data&lt;/code&gt; 変更なし引数 &lt;code&gt;result&lt;/code&gt; によって返された値を &lt;code&gt;execute&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c12a9882b26ab489b0c74c690e19ae90b13a4465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt; (&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; （&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f76a66ebdb8619565c1031aea4c1dccfbf875fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;days&lt;/code&gt; specifies the length of time for which the generated certificate will be valid, in days.</source>
          <target state="translated">&lt;code&gt;days&lt;/code&gt; は、生成された証明書が有効になる期間を日数で指定します。</target>
        </trans-unit>
        <trans-unit id="53af727bfe0de42f02a5659bd1975cd17f3a8c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth&lt;/code&gt; parameter was added.</source>
          <target state="translated">&lt;code&gt;depth&lt;/code&gt; パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="ae1563f1c23a55bdf08b71984afa6535fe51f62e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dialect&lt;/code&gt; selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries.</source>
          <target state="translated">&lt;code&gt;dialect&lt;/code&gt; は、接続内で実行されるすべてのステートメントに対してデフォルトのSQL方言を選択します。デフォルトでは、クライアントライブラリでサポートされている最も高い方言が使用されます。</target>
        </trans-unit>
        <trans-unit id="2d0163fde1cd89f04365be5077a7cedeaaea94ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dialect&lt;/code&gt; selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries. Functional only with InterBase 6 and up.</source>
          <target state="translated">&lt;code&gt;dialect&lt;/code&gt; は、接続内で実行されるすべてのステートメントに対してデフォルトのSQL方言を選択します。デフォルトでは、クライアントライブラリでサポートされている最も高い方言が使用されます。InterBase 6以降でのみ機能します。</target>
        </trans-unit>
        <trans-unit id="24d6a00e5b93c06a6b226c8ef715141c72221e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dividend&lt;/code&gt; and &lt;code&gt;divisor&lt;/code&gt; are no longer truncated to integer, so now the behavior of &lt;strong&gt;bcmod()&lt;/strong&gt; follows &lt;a href=&quot;function.fmod&quot;&gt;fmod()&lt;/a&gt; rather than the &lt;em&gt;%&lt;/em&gt; operator.</source>
          <target state="translated">&lt;code&gt;dividend&lt;/code&gt; と &lt;code&gt;divisor&lt;/code&gt; もはや整数に切り捨てられ、今の挙動&lt;strong&gt;bcmod（）は&lt;/strong&gt;以下の&lt;a href=&quot;function.fmod&quot;&gt;FMODを（）&lt;/a&gt;ではなく&lt;em&gt;％の&lt;/em&gt;オペレータ。</target>
        </trans-unit>
        <trans-unit id="fd6aeb97b2b18042d9ceb4145970f3512be8fe5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dns_base&lt;/code&gt; is optional. May be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, or an object created with &lt;a href=&quot;eventdnsbase.construct&quot;&gt;EventDnsBase::__construct()&lt;/a&gt; . For asyncronous hostname resolving pass a valid event dns base resource. Otherwise the hostname resolving will block.</source>
          <target state="translated">&lt;code&gt;dns_base&lt;/code&gt; はオプションです。かもしれ&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;、またはを使用して作成したオブジェクト&lt;a href=&quot;eventdnsbase.construct&quot;&gt;EventDnsBase :: __構築物（） &lt;/a&gt;。非同期のホスト名解決では、有効なイベントDNSベースリソースを渡します。そうしないと、ホスト名解決がブロックされます。</target>
        </trans-unit>
        <trans-unit id="cd8d86d69e711542c0b8aa8e919c53100e5cc4ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dsn&lt;/code&gt; consists of &lt;strong&gt;&lt;code&gt;uri:&lt;/code&gt;&lt;/strong&gt; followed by a URI that defines the location of a file containing the DSN string. The URI can specify a local file or a remote URL.</source>
          <target state="translated">&lt;code&gt;dsn&lt;/code&gt; は、&lt;strong&gt; &lt;code&gt;uri:&lt;/code&gt; の&lt;/strong&gt;後に、DSN文字列を含むファイルの場所を定義するURIが続きます。URIは、ローカルファイルまたはリモートURLを指定できます。</target>
        </trans-unit>
        <trans-unit id="4a8a8bc952920e9b78818941e37ea87000d791aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dsn&lt;/code&gt; consists of a name &lt;code&gt;name&lt;/code&gt; that maps to &lt;code&gt;pdo.dsn.&lt;code&gt;name&lt;/code&gt;&lt;/code&gt; in &lt;var&gt;php.ini&lt;/var&gt; defining the DSN string.</source>
          <target state="translated">&lt;code&gt;dsn&lt;/code&gt; は、 &lt;code&gt;pdo.dsn.&lt;code&gt;name&lt;/code&gt;&lt;/code&gt; マップされる名前 &lt;code&gt;name&lt;/code&gt; で構成されます。 &lt;code&gt;name&lt;/code&gt; で &lt;var&gt;php.ini&lt;/var&gt; の DSN文字列を定義します。</target>
        </trans-unit>
        <trans-unit id="209eab7e8d5b1764a89f9d2d888316eaf1dd9bce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dsn&lt;/code&gt; contains the full DSN.</source>
          <target state="translated">&lt;code&gt;dsn&lt;/code&gt; には完全なDSNが含まれています。</target>
        </trans-unit>
        <trans-unit id="9876512ae0ba7d88fdf4facab489010c3b8c9f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; were added.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; と &lt;code&gt;options&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="8e1a12dc602a767efd083a5d807f6ca849cac66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; is the character encoding name used for the HTTP input character encoding conversion, HTTP output character encoding conversion, and the default character encoding for string functions defined by the mbstring module. You should notice that the internal encoding is totally different from the one for multibyte regex.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; は、HTTP入力文字エンコード変換、HTTP出力文字エンコード変換、およびmbstringモジュールで定義された文字列関数のデフォルトの文字エンコードに使用される文字エンコード名です。内部エンコーディングがマルチバイト正規表現のエンコーディングとは完全に異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d43acdb6328c6b66c0195a396d78b741a8ceae01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding_list&lt;/code&gt; is an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or comma separated list of character encoding. See &lt;a href=&quot;https://secure.php.net/manual/en/mbstring.supported-encodings.php&quot;&gt;supported encodings&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;encoding_list&lt;/code&gt; は、文字エンコーディングの&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;またはカンマ区切りのリストです。&lt;a href=&quot;https://secure.php.net/manual/en/mbstring.supported-encodings.php&quot;&gt;サポートされているエンコーディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="06fda032286761895f2a3ee30c77b2242c153670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding_list&lt;/code&gt; is list of character encoding. Encoding order may be specified by array or comma separated list string.</source>
          <target state="translated">&lt;code&gt;encoding_list&lt;/code&gt; は文字エンコーディングのリストです。エンコード順は、配列またはコンマ区切りのリスト文字列で指定できます。</target>
        </trans-unit>
        <trans-unit id="518fec080ca0c582020c84d335305f269d23c529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; type changed to &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt;. Previously, &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; タイプが&lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterfaceに&lt;/a&gt;変更されました。以前は、&lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt;でした。</target>
        </trans-unit>
        <trans-unit id="f3021dbbe8bc9f6d6ac0082de4e84580ecb6c704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; may be passed as an associative array of name/value pairs to set in the target environment.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; は、名前/値のペアの連想配列として渡され、ターゲット環境で設定されます。</target>
        </trans-unit>
        <trans-unit id="8bcdb538dd3877d16068e3ea5fec014e7d4559c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;envs&lt;/code&gt; is an array of strings which are passed as environment to the program. The array is in the format of name =&amp;gt; value, the key being the name of the environmental variable and the value being the value of that variable.</source>
          <target state="translated">&lt;code&gt;envs&lt;/code&gt; は、環境としてプログラムに渡される文字列の配列です。配列の形式はname =&amp;gt; valueで、キーは環境変数の名前、値はその変数の値です。</target>
        </trans-unit>
        <trans-unit id="444d242785d4019840783fe78a8dbd985232cd7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errcontext&lt;/code&gt; became deprecated. Usage of this parameter now emits an &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; notice.</source>
          <target state="translated">&lt;code&gt;errcontext&lt;/code&gt; は非推奨になりました。このパラメーターを使用すると、&lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt;通知が&lt;strong&gt;発行され&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ba1c1a217729e710d9b83f0fd60f8b2433b9cc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_handler&lt;/code&gt; now accepts &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;error_handler&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; を&lt;/strong&gt;受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="3c5037302e618606197062f29b8cf8c7006b76cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_message&lt;/code&gt; is passed by reference.</source>
          <target state="translated">&lt;code&gt;error_message&lt;/code&gt; は参照渡しされます。</target>
        </trans-unit>
        <trans-unit id="e8783d3dd1cd2706cdc0cc89c4fd1a77f3afc9a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extraattribs&lt;/code&gt; is used to specify additional configuration options for the CSR. Both &lt;code&gt;dn&lt;/code&gt; and &lt;code&gt;extraattribs&lt;/code&gt; are associative arrays whose keys are converted to OIDs and applied to the relevant part of the request.</source>
          <target state="translated">&lt;code&gt;extraattribs&lt;/code&gt; は、CSRの追加構成オプションを指定するために使用されます。 &lt;code&gt;dn&lt;/code&gt; と &lt;code&gt;extraattribs&lt;/code&gt; はどちらも連想配列であり、そのキーはOIDに変換され、リクエストの関連部分に適用されます。</target>
        </trans-unit>
        <trans-unit id="31fe691b9b883aea28cb5a3db7fd042d2c3be60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extracerts&lt;/code&gt; specifies the name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used.</source>
          <target state="translated">&lt;code&gt;extracerts&lt;/code&gt; は、署名に含める追加の証明書の束を含むファイルの名前を指定します。たとえば、使用した証明書を受信者が確認するのに使用できます。</target>
        </trans-unit>
        <trans-unit id="67f2aff9e0403685d9e5d3b6ee49f3ac16390d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_flag&lt;/code&gt; is a combination of the constants &lt;strong&gt;&lt;code&gt;IBASE_TEXT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IBASE_UNIXTIME&lt;/code&gt;&lt;/strong&gt; ORed together. Passing &lt;strong&gt;&lt;code&gt;IBASE_TEXT&lt;/code&gt;&lt;/strong&gt; will cause this function to return BLOB contents instead of BLOB ids. Passing &lt;strong&gt;&lt;code&gt;IBASE_UNIXTIME&lt;/code&gt;&lt;/strong&gt; will cause this function to return date/time values as Unix timestamps instead of as formatted strings.</source>
          <target state="translated">&lt;code&gt;fetch_flag&lt;/code&gt; は、定数&lt;strong&gt; &lt;code&gt;IBASE_TEXT&lt;/code&gt; &lt;/strong&gt;と&lt;strong&gt; &lt;code&gt;IBASE_UNIXTIME&lt;/code&gt; を&lt;/strong&gt; ORで組み合わせたものです。&lt;strong&gt; &lt;code&gt;IBASE_TEXT&lt;/code&gt; &lt;/strong&gt;を渡すと、この関数はBLOB IDではなくBLOBコンテンツを返します。&lt;strong&gt; &lt;code&gt;IBASE_UNIXTIME&lt;/code&gt; &lt;/strong&gt;を渡すと、この関数は日付/時刻値をフォーマットされた文字列ではなくUnixタイムスタンプとして返​​します。</target>
        </trans-unit>
        <trans-unit id="2f00c56e34799f70e2220f9b2cc6a66956e41a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field_name_or_number&lt;/code&gt; can be passed either as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; or as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. If it is passed as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, PHP recognises it as the field number, otherwise as field name.</source>
          <target state="translated">&lt;code&gt;field_name_or_number&lt;/code&gt; は、&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;または&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;として渡すことができます。&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;として渡された場合、PHPはそれをフィールド番号として認識し、そうでない場合はフィールド名として認識します。</target>
        </trans-unit>
        <trans-unit id="01cdc0b2a88d6d04804a894a65fa77431cf9193a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filtertype&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;filtertype&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="43d319ee15874be84eccad54f9ee763f931ad1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be a combination of the following flags:</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; は、次のフラグの組み合わせにすることができます。</target>
        </trans-unit>
        <trans-unit id="3697d5fc73d4a44b996c9d64ed41be199391737d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be any combination of the following flags (combined with the &lt;em&gt;|&lt;/em&gt; bitwise operator):</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; は、次のフラグの任意の組み合わせにすることができます（&lt;em&gt;|&lt;/em&gt;ビットごとの演算子と組み合わせて）。</target>
        </trans-unit>
        <trans-unit id="dec9d46462894d89d5f65afce147a88499945884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be used to affect how the signature is verified - see &lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;PKCS7 constants&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; を使用して、署名の検証方法に影響を与えることができます。詳細については、&lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;PKCS7定数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e04bd4ff7b7e60023e8cbfe724e2c169ff1a2e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be used to alter the output - see &lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;PKCS7 constants&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; を使用して出力を変更できます&lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;。PKCS7定数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7c296191085aba055b2349296923340aacf12d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be used to specify options that affect the encoding process - see &lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;PKCS7 constants&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; を使用して、エンコードプロセスに影響を与えるオプションを指定できます&lt;a href=&quot;https://secure.php.net/manual/en/openssl.pkcs7.flags.php&quot;&gt;。PKCS7定数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a8f5198ad4faa0b7c271eeb1cee15114fa8e8098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; is not an integer</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; は整数ではありません</target>
        </trans-unit>
        <trans-unit id="0e633e0c1bd2314b56027246956a2a67d79e3282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; may be either of &lt;strong&gt;&lt;code&gt;SSH2_FINGERPRINT_MD5&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;SSH2_FINGERPRINT_SHA1&lt;/code&gt;&lt;/strong&gt; logically ORed with &lt;strong&gt;&lt;code&gt;SSH2_FINGERPRINT_HEX&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;SSH2_FINGERPRINT_RAW&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; どちらかのかもしれ&lt;strong&gt; &lt;code&gt;SSH2_FINGERPRINT_MD5&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;SSH2_FINGERPRINT_SHA1&lt;/code&gt; &lt;/strong&gt;論理とOR &lt;strong&gt; &lt;code&gt;SSH2_FINGERPRINT_HEX&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;SSH2_FINGERPRINT_RAW&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6097fd6377d2996392b51fd380c8cb1d6b7ac6e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; (&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; （&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="70854594805e15e31157c472bfd3b86fba95ef23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; character</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 文字</target>
        </trans-unit>
        <trans-unit id="554690e8f71f2ae4753ebc297bd7c96d2d24e49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_encoding&lt;/code&gt; is specified as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or comma separated &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it tries to detect encoding from &lt;code&gt;from-coding&lt;/code&gt;. When &lt;code&gt;from_encoding&lt;/code&gt; is omitted, &lt;em&gt;detect_order&lt;/em&gt; is used.</source>
          <target state="translated">&lt;code&gt;from_encoding&lt;/code&gt; は、&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;またはカンマ区切りの&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;として指定され、 &lt;code&gt;from-coding&lt;/code&gt; からエンコーディングを検出しようとします。とき &lt;code&gt;from_encoding&lt;/code&gt; が省略され、&lt;em&gt;detect_orderが&lt;/em&gt;使用されています。</target>
        </trans-unit>
        <trans-unit id="3e3afb6b98c21521ae01aadecf19344ebf58b8e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functions&lt;/code&gt; must receive all input arguments in the same order as defined in the WSDL file (They should not receive any output parameters as arguments) and return one or more values. To return several values they must return an array with named output parameters.</source>
          <target state="translated">&lt;code&gt;functions&lt;/code&gt; は、WSDLファイルで定義されているのと同じ順序ですべての入力引数を受け取り（引数として出力パラメーターを受け取ってはなりません）、1つ以上の値を返す必要があります。複数の値を返すには、名前付きの出力パラメーターを持つ配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7db9bfae4c2327ee764b38a2ab5b4852efbb1dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle&lt;/code&gt; (&lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; （&lt;a href=&quot;language.types.resource&quot;&gt;リソース&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c13514657f97c29fc07d4625a37d9526ce32d691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; is a string containing the name of a function that must exist when &lt;a href=&quot;function.xml-parse&quot;&gt;xml_parse()&lt;/a&gt; is called for &lt;code&gt;parser&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; は、 &lt;code&gt;parser&lt;/code&gt; に対して&lt;a href=&quot;function.xml-parse&quot;&gt;xml_parse（）&lt;/a&gt;が呼び出されたときに存在する必要がある関数の名前を含む文字列です。</target>
        </trans-unit>
        <trans-unit id="891bf346488e6e26cff57e168fe14d029efa26f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; can be either an associative array keyed by header name, or an indexed array, where each element contains a single header line.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; は、ヘッダー名をキーとする連想配列、または各要素が単一のヘッダー行を含むインデックス配列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="6734c20078f9e267699c7128a4171e0bd1f7a49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; is an array of headers that will be prepended to the data after it has been encrypted.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; は、暗号化されたデータの前に付加されるヘッダーの配列です。</target>
        </trans-unit>
        <trans-unit id="995923e48d02d6b731350f958e244f2d9cbe4748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; is an array of headers that will be prepended to the data after it has been signed (see &lt;a href=&quot;function.openssl-pkcs7-encrypt&quot;&gt;openssl_pkcs7_encrypt()&lt;/a&gt; for more information about the format of this parameter).</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; は、データの署名後にデータの前に付加されるヘッダーの配列です（このパラメーターの形式の詳細については、&lt;a href=&quot;function.openssl-pkcs7-encrypt&quot;&gt;openssl_pkcs7_encrypt（）&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="95593d8c9d40a0fbe2c116ce58b64ba0384e34de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; may either be the IP address in dotted-quad notation or the host name.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; は、ドット付きクワッド表記のIPアドレスまたはホスト名のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f9db4a9d4397c7f2d251523845d77e7b9a26742d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hostname&lt;/code&gt; should be a valid DNS hostname such as &quot;&lt;em&gt;www.example.com&lt;/em&gt;&quot;. Reverse lookups can be generated using &lt;em&gt;in-addr.arpa&lt;/em&gt; notation, but &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr()&lt;/a&gt; is more suitable for the majority of reverse lookups.</source>
          <target state="translated">&lt;code&gt;hostname&lt;/code&gt; は、「&lt;em&gt;www.example.com&lt;/em&gt;」などの有効なDNSホスト名である必要があります。逆ルックアップは&lt;em&gt;in-addr.arpa&lt;/em&gt;表記を使用して生成できますが、大部分の逆ルックアップには&lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr（）&lt;/a&gt;がより適しています。</target>
        </trans-unit>
        <trans-unit id="9ba0fcd9fa173596a8066bec4a91f955e22cebfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore_transparent&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;ignore_transparent&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="afc6d87a292b6656a8d1b80507fdfe43bc01dca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in&lt;/code&gt; is a resource pointing to a &lt;em&gt;bucket brigade&lt;/em&gt; which contains one or more &lt;em&gt;bucket&lt;/em&gt; objects containing data to be filtered.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; は、フィルタリングされるデータを含む1つ以上の&lt;em&gt;バケット&lt;/em&gt;オブジェクトを含む&lt;em&gt;バケット旅団&lt;/em&gt;を指すリソースです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d4b7661af8e5484c201c0bb642b3cabc5537221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;gt; 5&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;gt; 5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba97b77f6a025d0c3bcc3e3226313e4c033fae16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;gt; 9&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;gt; 9&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7365cfcbaa4807790d95117ed93c52eaf290548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;lt; -4&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;lt;-4&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72931e1102bf680a5418ba33cfc4fd6c4e7aef9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;lt; -9&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;lt;-9&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bdd63cbccc2b737dc24bf2e90b912ab0ab80b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;lt; 5&lt;/em&gt; &amp;amp; &lt;code&gt;increment&lt;/code&gt;&lt;em&gt;&amp;gt; -5&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;lt;5&lt;/em&gt;＆ &lt;code&gt;increment&lt;/code&gt; &lt;em&gt;&amp;gt; -5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd4b08e5ac082e99caf4862cd9405c9023b9f2bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt; is not an array or object</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; が配列またはオブジェクトではありません</target>
        </trans-unit>
        <trans-unit id="f3b1c14816faf6994e8e864cb515bdb0965d8ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal_encoding&lt;/code&gt; and &lt;code&gt;output_encoding&lt;/code&gt; should be defined in the &lt;var&gt;php.ini&lt;/var&gt; file or in &lt;a href=&quot;function.iconv-set-encoding&quot;&gt;iconv_set_encoding()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;internal_encoding&lt;/code&gt; および &lt;code&gt;output_encoding&lt;/code&gt; は、 &lt;var&gt;php.ini&lt;/var&gt; ファイルまたは&lt;a href=&quot;function.iconv-set-encoding&quot;&gt;iconv_set_encoding（）&lt;/a&gt;で定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="6f698b4ad937d8882c25eb4135cf81747c892abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_dst&lt;/code&gt; parameter has been removed.</source>
          <target state="translated">&lt;code&gt;is_dst&lt;/code&gt; パラメータは削除されました。</target>
        </trans-unit>
        <trans-unit id="b56740223db8c2136c41d7aad115821392f4c1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;item&lt;/code&gt; may be an integer value of the element or the constant name of the element. The following is a list of constant names for &lt;code&gt;item&lt;/code&gt; that may be used and their description. Some of these constants may not be defined or hold no value for certain locales.</source>
          <target state="translated">&lt;code&gt;item&lt;/code&gt; は、要素の整数値または要素の定数名です。以下は、使用できる &lt;code&gt;item&lt;/code&gt; の定数名とその説明のリストです。これらの定数の一部は、特定のロケールでは定義されていないか、値を保持していない場合があります。</target>
        </trans-unit>
        <trans-unit id="33bd2f70372b9d55660ddf880ba8a26a9eb8542b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iterator_class&lt;/code&gt; is not an object that implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;iterator_class&lt;/code&gt; は、&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;を実装するオブジェクトではありません</target>
        </trans-unit>
        <trans-unit id="46b47466c20f819d6641aba713598054108e9a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="80ff4f4910a2e8357ee1ca18bebcf7b056ce2e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; must be the private key corresponding that was used to encrypt the data.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; は、データの暗号化に使用された対応する秘密鍵である必要があります。</target>
        </trans-unit>
        <trans-unit id="6557d6b54f3f0cbbb9442763ed38ff07c2d668dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; must be the public key corresponding that was used to encrypt the data.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; は、データの暗号化に使用された対応する公開鍵である必要があります。</target>
        </trans-unit>
        <trans-unit id="fbc23e6bd532010d97d9dc2fb278381090930ba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;buf&lt;/code&gt; will be sent.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; はからバイト &lt;code&gt;buf&lt;/code&gt; が送信されます。</target>
        </trans-unit>
        <trans-unit id="c07b230f52be2d1afc3935bbef1b9fb7e8fa2463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; bytes have been read</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; バイトが読み込まれました</target>
        </trans-unit>
        <trans-unit id="c39468fa8ce75329a24137c209d908b673a18273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; may now be &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; は&lt;em&gt;0に&lt;/em&gt;なり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a9b10724e877e1c88ec4a81086d380e2313f3a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linefeed&lt;/code&gt; specifies the EOL (end-of-line) marker with which &lt;strong&gt;mb_encode_mimeheader()&lt;/strong&gt; performs line-folding (a &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2822&quot;&gt;&amp;raquo; RFC&lt;/a&gt; term, the act of breaking a line longer than a certain length into multiple lines. The length is currently hard-coded to 74 characters). Falls back to &lt;em&gt;&quot;\r\n&quot;&lt;/em&gt; (CRLF) if not given.</source>
          <target state="translated">&lt;code&gt;linefeed&lt;/code&gt; は、&lt;strong&gt;mb_encode_mimeheader（）&lt;/strong&gt;が行折りたたみを実行するEOL（行末）マーカーを指定します（&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2822&quot;&gt;&amp;raquo;RFC&lt;/a&gt;用語。特定の長さよりも長い行を複数行に分割する動作。現在、長さはハードコードされています） 74文字）。指定しない場合、&lt;em&gt;「\ r \ n」&lt;/em&gt;（CRLF）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="b885997024146b4c82a6bc1635c6ced051b289da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxlength&lt;/code&gt; (&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;maxlength&lt;/code&gt; （&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="19aab51c5628b7969a3a71269140c68bf45cdf06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; is appended to the file &lt;code&gt;destination&lt;/code&gt;. A newline is not automatically added to the end of the &lt;code&gt;message&lt;/code&gt; string.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; はファイルの &lt;code&gt;destination&lt;/code&gt; 追加されます。改行は &lt;code&gt;message&lt;/code&gt; 文字列の最後に自動的に追加されません。</target>
        </trans-unit>
        <trans-unit id="13ac40918cc968e45e6a7387ea87b519578f387c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; is sent by email to the address in the &lt;code&gt;destination&lt;/code&gt; parameter. This is the only message type where the fourth parameter, &lt;code&gt;extra_headers&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; は、 &lt;code&gt;destination&lt;/code&gt; パラメーターのアドレスにEメールで送信されます。これは、4番目のパラメーター &lt;code&gt;extra_headers&lt;/code&gt; が使用される唯一のメッセージタイプです。</target>
        </trans-unit>
        <trans-unit id="ce2fe8c6c6797b233abc59c33e1a6eb007872236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; is sent directly to the SAPI logging handler.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; はSAPIロギングハンドラーに直接送信されます。</target>
        </trans-unit>
        <trans-unit id="d0ba3467bc27a514e17af832b7e0e95612c55990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; is sent to PHP's system logger, using the Operating System's system logging mechanism or a file, depending on what the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt;error_log&lt;/a&gt; configuration directive is set to. This is the default option.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; は、&lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt;error_log&lt;/a&gt;設定ディレクティブの設定に応じて、オペレーティングシステムのシステムロギングメカニズムまたはファイルを使用して、PHPのシステムロガーに送信されます。これがデフォルトのオプションです。</target>
        </trans-unit>
        <trans-unit id="d27d500612304be97dbbc6440d5c02dcf19bd079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; should not contain null character. Note that &lt;code&gt;message&lt;/code&gt; may be sent to file, mail, syslog, etc. Use appropriate conversion/escape function, &lt;a href=&quot;function.base64-encode&quot;&gt;base64_encode()&lt;/a&gt;, &lt;a href=&quot;function.rawurlencode&quot;&gt;rawurlencode()&lt;/a&gt; or &lt;a href=&quot;function.addslashes&quot;&gt;addslashes()&lt;/a&gt; before calling &lt;strong&gt;error_log()&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; null文字を含めることはできません。注意 &lt;code&gt;message&lt;/code&gt; ファイルに送信することができる、メール、シスログなどを使用して、適切な変換/エスケープ機能、&lt;a href=&quot;function.base64-encode&quot;&gt;BASE64_ENCODE（） &lt;/a&gt;、&lt;a href=&quot;function.rawurlencode&quot;&gt;rawurlencode（）&lt;/a&gt;または&lt;a href=&quot;function.addslashes&quot;&gt;にaddslashes（）&lt;/a&gt;を呼び出す前&lt;strong&gt;のerror_logを（） &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="44ceeb9332654e061526825a7559571f32d597ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;methods&lt;/code&gt; may be an associative array with up to four parameters as described below.</source>
          <target state="translated">&lt;code&gt;methods&lt;/code&gt; は、以下で説明するように、最大​​4つのパラメーターを持つ連想配列です。</target>
        </trans-unit>
        <trans-unit id="0ede9db95882508d3709a660b07800edf04bdaab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; can both be negative but &lt;code&gt;min&lt;/code&gt; must always be less than &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; と &lt;code&gt;max&lt;/code&gt; はどちらも負の値にすることができますが、 &lt;code&gt;min&lt;/code&gt; は常に &lt;code&gt;max&lt;/code&gt; より小さくなければなりません。</target>
        </trans-unit>
        <trans-unit id="a1667b2ed85989e4738eb67f8bb9b55427992183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt;&lt;code&gt;max&lt;/code&gt; range must be within the range &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt;. i.e. (&lt;code&gt;max&lt;/code&gt; - &lt;code&gt;min&lt;/code&gt;) &amp;lt;= &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt; Otherwise, &lt;strong&gt;rand()&lt;/strong&gt; may return poor-quality random numbers.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; &lt;code&gt;max&lt;/code&gt; 範囲は&lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax（）の&lt;/a&gt;範囲内でなければなりません。つまり、（ &lt;code&gt;max&lt;/code&gt; - &lt;code&gt;min&lt;/code&gt; ）&amp;lt;= &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax（）&lt;/a&gt;そうでなければ、&lt;strong&gt;rand（）&lt;/strong&gt;は低品質の乱数を返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="a4efed59519eafbb00bd600150062d0785cdf020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt;&lt;code&gt;max&lt;/code&gt; range must be within the range &lt;a href=&quot;function.mt-getrandmax&quot;&gt;mt_getrandmax()&lt;/a&gt;. i.e. (&lt;code&gt;max&lt;/code&gt; - &lt;code&gt;min&lt;/code&gt;) &amp;lt;= &lt;a href=&quot;function.mt-getrandmax&quot;&gt;mt_getrandmax()&lt;/a&gt; Otherwise, &lt;strong&gt;mt_rand()&lt;/strong&gt; may return poorer random numbers than it should.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; &lt;code&gt;max&lt;/code&gt; 範囲は&lt;a href=&quot;function.mt-getrandmax&quot;&gt;mt_getrandmax（）の&lt;/a&gt;範囲内でなければなりません。つまり、（ &lt;code&gt;max&lt;/code&gt; - &lt;code&gt;min&lt;/code&gt; ）&amp;lt;= &lt;a href=&quot;function.mt-getrandmax&quot;&gt;mt_getrandmax（）&lt;/a&gt;そうで&lt;strong&gt;ない&lt;/strong&gt;場合、&lt;strong&gt;mt_rand（）&lt;/strong&gt;は&lt;strong&gt;本来&lt;/strong&gt;よりも低い乱数を返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="deea6f4949d87f759126447b177104ad6ce097cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;rd&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;rd&quot;</target>
        </trans-unit>
        <trans-unit id="9903db3b12bf4349ff617e9fc2061a44bd03bc8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;rdt&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;rdt&quot;</target>
        </trans-unit>
        <trans-unit id="196ca8c5b8a486c787916016abb9453fc617b250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;rl&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;rl&quot;</target>
        </trans-unit>
        <trans-unit id="9958d9deb41b35471cebea87a7a17c32734fd290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;rlt&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;rlt&quot;</target>
        </trans-unit>
        <trans-unit id="38fcefcd76740876e70d5770a3b09b6277a5d2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;wd&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;wd&quot;</target>
        </trans-unit>
        <trans-unit id="e11ba924f2c2d6b21fe09b0fa990250f24567ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;wdt&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;wdt&quot;</target>
        </trans-unit>
        <trans-unit id="5ecc30c08673b997a9e729b8c5a44358b8216f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;wl&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;wl&quot;</target>
        </trans-unit>
        <trans-unit id="85832e5f45235869fe06cebf5aa808b8fb8142d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; = &quot;wlt&quot;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; = &quot;wlt&quot;</target>
        </trans-unit>
        <trans-unit id="0290859020044dbdb1081a073787d0b7d7c3ee5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; determines the behaviour in the event &lt;strong&gt;iconv_mime_decode()&lt;/strong&gt; encounters a malformed &lt;em&gt;MIME&lt;/em&gt; header field. You can specify any combination of the following bitmasks.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; は、&lt;strong&gt;iconv_mime_decode（）&lt;/strong&gt;が不正な&lt;em&gt;MIME&lt;/em&gt;ヘッダーフィールドを検出した場合の動作を決定します。次のビットマスクの任意の組み合わせを指定できます。</target>
        </trans-unit>
        <trans-unit id="5c555a298603a70caf35b42619e3b1a8a96eb148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; determines the behaviour in the event &lt;strong&gt;iconv_mime_decode_headers()&lt;/strong&gt; encounters a malformed &lt;em&gt;MIME&lt;/em&gt; header field. You can specify any combination of the following bitmasks.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; は、&lt;strong&gt;iconv_mime_decode_headers（）&lt;/strong&gt;が不正な&lt;em&gt;MIME&lt;/em&gt;ヘッダーフィールドを検出した場合の動作を決定します。次のビットマスクの任意の組み合わせを指定できます。</target>
        </trans-unit>
        <trans-unit id="09208aec62d472bbf43f576a1289facdf57b4b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; is a single character that defines what information is returned:</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; は、返される情報を定義する単一の文字です。</target>
        </trans-unit>
        <trans-unit id="767e7aac33a2bf74832bb2330b39fa88515aad9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; is ignored on Windows.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; Windowsではモードは無視されます。</target>
        </trans-unit>
        <trans-unit id="62d4850e26945697ac3bbfa9157ae8b575df726d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msglist&lt;/code&gt; is a range not just message numbers (as described in &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2060&quot;&gt;&amp;raquo; RFC2060&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;msglist&lt;/code&gt; は単なるメッセージ番号ではない範囲です（&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2060&quot;&gt;&amp;raquo;RFC2060で&lt;/a&gt;説明されています）。</target>
        </trans-unit>
        <trans-unit id="e6a7696a538a01bd32fb2ae03463d755b79539dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msgs_in_queue&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;msgs_in_queue&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="8dd0eadaba2b44ce42a9bab2863e8d199bcb37d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiplier&lt;/code&gt; has to be greater than or equal to 0. If the &lt;code&gt;multiplier&lt;/code&gt; is set to 0, the function will return an empty string.</source>
          <target state="translated">&lt;code&gt;multiplier&lt;/code&gt; は0以上でなければなりません。 &lt;code&gt;multiplier&lt;/code&gt; が0に設定されている場合、関数は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="784fb6f3167b84b20fe9828a6ee487d4d1982f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n_retries&lt;/code&gt; added</source>
          <target state="translated">&lt;code&gt;n_retries&lt;/code&gt; 追加されたn_retries</target>
        </trans-unit>
        <trans-unit id="e4381fad643d13289a6975869a311574387e94f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; can now be a &lt;a href=&quot;functions.anonymous&quot;&gt;closure&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; を&lt;a href=&quot;functions.anonymous&quot;&gt;クロージャー&lt;/a&gt;にすることができます。</target>
        </trans-unit>
        <trans-unit id="3f3e584dfbedef4cbb0f21b9222c2107749cdedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;needle&lt;/code&gt; and &lt;code&gt;haystack&lt;/code&gt; are examined in a case-insensitive manner.</source>
          <target state="translated">&lt;code&gt;needle&lt;/code&gt; と &lt;code&gt;haystack&lt;/code&gt; は大文字と小文字を区別しない方法で検査されます。</target>
        </trans-unit>
        <trans-unit id="34ba45ceb4e4585009c9623df99bee38ece06376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newscope&lt;/code&gt; can not be (an object of) an internal class anymore, what was possible prior to this version.</source>
          <target state="translated">&lt;code&gt;newscope&lt;/code&gt; を内部クラス（のオブジェクト）にすることはできません。このバージョンより前は可能でした。</target>
        </trans-unit>
        <trans-unit id="d173ffaaee992ded21741a97bfc87685269e65db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num&lt;/code&gt; may now be zero. Previously, &lt;code&gt;num&lt;/code&gt; was required to be greater than zero.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; はゼロになる場合があります。以前は、 &lt;code&gt;num&lt;/code&gt; はゼロより大きい必要がありました。</target>
        </trans-unit>
        <trans-unit id="71c9973ce42f2cce59194a71dc3b39a69c34b619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; converted to base &lt;code&gt;tobase&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 塩基に変換 &lt;code&gt;tobase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6db699f7a715b7748b4e819f5e04513e408b6421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt; (&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; （&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="148b2a73ad5ea4da2d9fb5fa7280f2e5e958976a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_basedir&lt;/code&gt; may be set to any path below the current setting of &lt;em&gt;open_basedir&lt;/em&gt;. If &lt;em&gt;open_basedir&lt;/em&gt; is not set within the global scope, then it is assumed to be the root directory and may be set to any location.</source>
          <target state="translated">&lt;code&gt;open_basedir&lt;/code&gt; は、&lt;em&gt;open_basedirの&lt;/em&gt;現在の設定より下の任意のパスに設定&lt;em&gt;でき&lt;/em&gt;ます。&lt;em&gt;open_basedir&lt;/em&gt;がグローバルスコープ内で設定されていない場合は、ルートディレクトリと&lt;em&gt;見なされ&lt;/em&gt;、任意の場所に設定できます。</target>
        </trans-unit>
        <trans-unit id="fb9503fa3774e08de39d27b5df430987fa974f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="2cd883f8e3071318aa4466e6e3cd3a0223306b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are a bit mask and may contain the single option:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; はビットマスクであり、単一のオプションを含めることができます。</target>
        </trans-unit>
        <trans-unit id="5edd691d4abbe2be4be59bc855062a9ccd84e574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; can be one of &lt;strong&gt;&lt;code&gt;OPENSSL_RAW_DATA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;OPENSSL_ZERO_PADDING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;OPENSSL_RAW_DATA&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;OPENSSL_ZERO_PADDING&lt;/code&gt; のいずれか&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="b7ee9f9aeef323cfa7a9387e45b166a311e2bce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; is a bitmask and may contain the single option:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; はビットマスクであり、単一のオプションを含めることができます。</target>
        </trans-unit>
        <trans-unit id="566eef41cc802ff7a6cb40e370af0e655c8a20ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; is a bitmask of one or more of</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; は、1つ以上のビットマスクです。</target>
        </trans-unit>
        <trans-unit id="0d8373ebafb094c64e7f938e424d6d11c1b7be46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; is a bitwise disjunction of the flags &lt;strong&gt;&lt;code&gt;OPENSSL_RAW_DATA&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;OPENSSL_ZERO_PADDING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; は、フラグ&lt;strong&gt; &lt;code&gt;OPENSSL_RAW_DATA&lt;/code&gt; &lt;/strong&gt;および&lt;strong&gt; &lt;code&gt;OPENSSL_ZERO_PADDING&lt;/code&gt; の&lt;/strong&gt;ビット単位の分離です。</target>
        </trans-unit>
        <trans-unit id="be17c046f6ea85cccedc9908500674a842fba2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; is an associative array containing any combination of the special ini options listed below.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; は、以下に示す特別なiniオプションの任意の組み合わせを含む連想配列です。</target>
        </trans-unit>
        <trans-unit id="e91e04115d8c83b8c384cf39eb3f1ec6e935dac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; must be an associative array of associative arrays in the format &lt;em&gt;$arr['wrapper']['option'] = $value&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; は、&lt;em&gt;$ arr ['wrapper'] ['option'] = $ value&lt;/em&gt;の形式の連想配列の連想配列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="44d131717f5d1ca1e5d2ee00b2a7c045b846654a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out&lt;/code&gt; is a resource pointing to a second &lt;em&gt;bucket brigade&lt;/em&gt; into which your modified buckets should be placed.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; は、変更したバケットを配置する必要がある2番目の&lt;em&gt;バケット旅団&lt;/em&gt;を指すリソースです。</target>
        </trans-unit>
        <trans-unit id="bb80c5ecf143d8ed017fdec278637c5645c38554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padding&lt;/code&gt; can be one of &lt;strong&gt;&lt;code&gt;OPENSSL_PKCS1_PADDING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;OPENSSL_NO_PADDING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;OPENSSL_PKCS1_PADDING&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;OPENSSL_NO_PADDING&lt;/code&gt; のいずれか&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="302733a37bd03cd0b60dcf3198e404707b69c6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padding&lt;/code&gt; can be one of &lt;strong&gt;&lt;code&gt;OPENSSL_PKCS1_PADDING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;OPENSSL_SSLV23_PADDING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;OPENSSL_PKCS1_OAEP_PADDING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;OPENSSL_NO_PADDING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; は、&lt;strong&gt; &lt;code&gt;OPENSSL_PKCS1_PADDING&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;OPENSSL_SSLV23_PADDING&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;OPENSSL_PKCS1_OAEP_PADDING&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;OPENSSL_NO_PADDING&lt;/code&gt; のいずれか&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="06167f42e66efa676de6a91306d13d6f2025ab4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; added</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 追加されたパラメータ</target>
        </trans-unit>
        <trans-unit id="61ab9d76238d3ee5c35b8a99e7b25e8a1e188ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; should be an associative array of the structure: &lt;em&gt;$params['paramname'] = &quot;paramvalue&quot;;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; は、構造の連想配列である必要があります。&lt;em&gt;$ params ['paramname'] = &quot;paramvalue&quot;; &lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="405c3f9e430e1d7a357bcc68042ef89dcc5bf53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can also be any URL which supports directory listing, however only the &lt;em&gt;file://&lt;/em&gt; URL wrapper supports this in PHP 4</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; はディレクトリ一覧をサポートする任意のURLにすることもできますが、PHP 4では&lt;em&gt;file：//&lt;/em&gt; URLラッパーのみがこれをサポートしています</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
