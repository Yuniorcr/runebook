<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="c4e91a8a5360a9b887f4a6f9dac1446bc61a4f07" translate="yes" xml:space="preserve">
          <source>Creates a sequence that returns the specified values.</source>
          <target state="translated">指定した値を返すシーケンスを作成します。</target>
        </trans-unit>
        <trans-unit id="1a10948e2dd791471f8ddc3b2e085347f1c7710e" translate="yes" xml:space="preserve">
          <source>Creates a sequential &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; instance that produces elements from the original sequence.</source>
          <target state="translated">元のシーケンスから要素を生成する順次&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="6fb8af385d590efbb670e788f86874b75af65b31" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="c2aaece5d33b8fff12da2c768c024eafdb0a3d5b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="d8ca8d32b53a94047e4555627b85314b0e578315" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="e6c5b98ccb1a724d6ce8cafad0f9447bafa63273" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="392769d12f9ea9ef7593ddf2cb6dda9e0d233ad5" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="122ade18023237924aa9b58f517ead97b9cfc70b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="910c48ed78011762a3175eb3f63c11f106df4662" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="fdbb6ef3499ca688d357860a4fc82265cf978400" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="c0946e45d76e5f16ab029ffab975c37ed42c50c1" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="3f6d0cb0a5c2f441a885d455bad637adb6fad484" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="33bf12f4596aaf05b08ba2925c99a7f6aff94970" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="53421e6af67f0166f040610347e545df09d5f04d" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="1d127f8330415a3b27cc71efb91ce835b353621f" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="6a6f0bf2831cb91fc3b0ee9c00139b11c87fda84" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;セパレーター&lt;/a&gt;を使用して分離され、指定された&lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;接頭辞&lt;/a&gt;と&lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;接尾&lt;/a&gt;辞が指定されている場合はそれらを使用して、すべての要素から文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="961d50f105a5368c306a59a3a778f2a1e173556d" translate="yes" xml:space="preserve">
          <source>Creates a thread that runs the specified &lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; of code.</source>
          <target state="translated">指定されたコード&lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行するスレッドを作成します。</target>
        </trans-unit>
        <trans-unit id="b554e982400d94f6f75670ce9427f55496eabfd8" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">指定された&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt;日付から、前のタスクの開始から次のタスクの開始までの&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期間が&lt;/a&gt;ミリ秒の間隔で、指定された&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;定期的に実行するタイマーを作成します。</target>
        </trans-unit>
        <trans-unit id="b6b7cd792eb1db8af927227f480c30bfc46524f6" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">指定された&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt;（ミリ秒で表される）の後で、前のタスクの開始から次のタスクの開始までの&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期間が&lt;/a&gt;ミリ秒の間隔で、指定された&lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;定期的に実行するタイマーを作成します。</target>
        </trans-unit>
        <trans-unit id="fb76987705fc2f86a024f4c3aed9429cf6412ea9" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">指定された&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt;日付で開始し、前のタスクの終了から次のタスクの開始までの&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期間が&lt;/a&gt;ミリ秒の間隔で、指定された&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;定期的に実行するタイマーを作成します。</target>
        </trans-unit>
        <trans-unit id="e1cc24eca493343d12e2c45fe050ec2bb11d812a" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">指定された&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt;（ミリ秒で表されます）の後で、前のタスクの終了から次のタスクの開始までの&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;期間が&lt;/a&gt;ミリ秒の間隔で、指定された&lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;定期的に実行するタイマーを作成します。</target>
        </trans-unit>
        <trans-unit id="093f8c11b75317d2e1034076b3fef44bec50f9c8" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">thisと&lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;からタイプ&lt;a href=&quot;-pair/index&quot;&gt;Pairの&lt;/a&gt;タプルを作成します。</target>
        </trans-unit>
        <trans-unit id="9e557cb5662bab6115beaaccbd8865ba55632474" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">thisと&lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;からタイプ&lt;a href=&quot;../-pair/index&quot;&gt;Pairの&lt;/a&gt;タプルを作成します。</target>
        </trans-unit>
        <trans-unit id="d31ca5b8fb7cb661b0a0559a6ffa2e4d118216c5" translate="yes" xml:space="preserve">
          <source>Creates a version from &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;major&lt;/a&gt; and &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;minor&lt;/a&gt; components, leaving &lt;a href=&quot;patch&quot;&gt;patch&lt;/a&gt; component zero.</source>
          <target state="translated">&lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;メジャー&lt;/a&gt;コンポーネントと&lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;マイナー&lt;/a&gt;コンポーネントからバージョンを作成し、&lt;a href=&quot;patch&quot;&gt;パッチ&lt;/a&gt;コンポーネントをゼロのままにします。</target>
        </trans-unit>
        <trans-unit id="e669f229b644b1604e4140c0742c32b89805e029" translate="yes" xml:space="preserve">
          <source>Creates a version from all three components.</source>
          <target state="translated">3つのコンポーネントすべてからバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="2dcf822c9cd329c7445d6ff9e19773c5fd906c6f" translate="yes" xml:space="preserve">
          <source>Creates a weak reference object pointing to an object. Weak reference doesn't prevent removing object, and is nullified once object is collected.</source>
          <target state="translated">オブジェクトを指す弱い参照オブジェクトを作成します。弱い参照はオブジェクトの削除を妨げず、オブジェクトが収集されると無効化されます。</target>
        </trans-unit>
        <trans-unit id="08834c5b02522e602df7f666ff21e2b712f70f4d" translate="yes" xml:space="preserve">
          <source>Creates a writer on this output stream using UTF-8 or the specified &lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8または指定された&lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;文字セット&lt;/a&gt;を使用して、この出力ストリームにライターを作成します。</target>
        </trans-unit>
        <trans-unit id="c33cb35dd07a8560f5c0b436709cb377baedb202" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">反復時に元の配列をラップして要素を返す&lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="1680a341d81bcb160ec9d7cebf2ed92a5836bc28" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">反復時に元のマップをラップして&lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成し、エントリを返します。</target>
        </trans-unit>
        <trans-unit id="149cf06530ff5aac4f9f616f618bccac279e8cbe" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">反復時に元のマップをラップして&lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成し、エントリを返します。</target>
        </trans-unit>
        <trans-unit id="070be7e77def6a0cfe7d0bff29e15fd8cf571104" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for an &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt;, allowing to use it in &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumerationの&lt;/a&gt;&lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt;を作成し、 &lt;code&gt;for&lt;/code&gt; ループで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="fa7eeb353dcc0402efb954b10c4fd7f83f4abed5" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">反復時に元の配列をラップして要素を返す&lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="1457740b35add09bc88a207588a58d86ab4affbf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">反復時に元の文字シーケンスをラップして&lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成し、その文字を返します。</target>
        </trans-unit>
        <trans-unit id="e6010c6545edd6fc6d3f14f22fb1ca3547170f9a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">反復されたときに要素を返す元のシーケンスをラップする&lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="8a00321f1e8128ded8335b65d0bdc746d39b6544" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for iterating over the elements of the array.</source>
          <target state="translated">配列の要素を反復するための&lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;イテレータ&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="492310e5133c7f522fd7194dc1b4f2fe454b95ef" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">反復時に元の文字シーケンスをラップして&lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成し、その文字を返します。</target>
        </trans-unit>
        <trans-unit id="7c69e13959a1cb87462b9abe6172dae182fbc836" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">反復されたときに要素を返す元のシーケンスをラップする&lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="f45143f46c7813f66f23de46756b62bdb63f01ad" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; filled from the &lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;elements&lt;/a&gt; collection.</source>
          <target state="translated">&lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;要素&lt;/a&gt;コレクションから満たされた&lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayListを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="172a80649f231445c9b3b536887e042187ed6835" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt;.</source>
          <target state="translated">空の&lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayListを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="11e2e30d68d8dcfe4321ef61fa43b8effe23946d" translate="yes" xml:space="preserve">
          <source>Creates an empty directory in the specified &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">指定された&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;プレフィックス&lt;/a&gt;と&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;サフィックス&lt;/a&gt;を使用して、指定された&lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;ディレクトリに&lt;/a&gt;空のディレクトリを作成し、その名前を生成します。</target>
        </trans-unit>
        <trans-unit id="7d575cfdf73a5eabdc9d28072dc08ca9284b5430" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from the specified portion of this byte array.</source>
          <target state="translated">このバイト配列の指定された部分からデータを読み込むための入力ストリームを作成します。</target>
        </trans-unit>
        <trans-unit id="a498de335a1698d89734ca7ad1c696c8486a6bef" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from this byte array.</source>
          <target state="translated">このバイト配列からデータを読み込むための入力ストリームを作成します。</target>
        </trans-unit>
        <trans-unit id="fb004f78e15245ed4e66faeef95b32cc7865a03a" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">指定された分類&lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;子を使用&lt;/a&gt;してKTypeのインスタンスを作成し、そのすべての型パラメーターを星図に置き換えます。結果の型はnull可能としてマークされておらず、注釈もありません。</target>
        </trans-unit>
        <trans-unit id="fe0687a80da60c10e60a92c94c276de185e697c0" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">指定された分類&lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;子を使用&lt;/a&gt;してKTypeのインスタンスを作成し、そのすべての型パラメーターを星図に置き換えます。結果の型はnull可能としてマークされておらず、注釈もありません。</target>
        </trans-unit>
        <trans-unit id="355c4798f5b6985e9a80d39a2ff6cceacda541d9" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">指定された分類&lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;子を使用&lt;/a&gt;してKTypeのインスタンスを作成し、そのすべての型パラメーターを星図に置き換えます。結果の型はnull可能としてマークされておらず、注釈もありません。</target>
        </trans-unit>
        <trans-unit id="032d8f86211f8339b60701af86804b368db5583d" translate="yes" xml:space="preserve">
          <source>Creates an invariant projection of a given type. Invariant projection is just the type itself, without any use-site variance modifiers applied to it. For example, in the type &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; is an invariant projection of the type represented by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">指定されたタイプの不変射影を作成します。不変射影は、型そのものであり、使用サイトの分散修飾子が適用されていません。たとえば、タイプ &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt; では、 &lt;code&gt;String&lt;/code&gt; はクラス &lt;code&gt;String&lt;/code&gt; で表されるタイプの不変射影です。</target>
        </trans-unit>
        <trans-unit id="188d52b577049ed907518d59faef4a28341b3019" translate="yes" xml:space="preserve">
          <source>Creates an iterator for iterating over the elements of the array.</source>
          <target state="translated">配列の要素を反復処理するためのイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="062635b077927c6a08e98c1db093e6513c40efaf" translate="yes" xml:space="preserve">
          <source>Creates an iterator over the elements of the array.</source>
          <target state="translated">配列の要素の上にイテレータを作成します.</target>
        </trans-unit>
        <trans-unit id="644a56faf95e507b15f944cadf10fa550567091b" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">ランダムなバイトで満たされた、指定&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;さ&lt;/a&gt;れたsizeの符号なしバイト配列を作成します。</target>
        </trans-unit>
        <trans-unit id="5d694a0ec93b05884276d54e792b91045a2ba907" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">ランダムなバイトで満たされた、指定&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;さ&lt;/a&gt;れたsizeの符号なしバイト配列を作成します。</target>
        </trans-unit>
        <trans-unit id="a05c8d617f3a8328401bb99287d4b9dbf5e98b4f" translate="yes" xml:space="preserve">
          <source>Creates detached object graph from value stored earlier in a C raw pointer.</source>
          <target state="translated">Cの生ポインタに先に格納された値から、切り離されたオブジェクトグラフを作成します。</target>
        </trans-unit>
        <trans-unit id="905e0440a71b39cacb8983c47ad7865cd04540fa" translate="yes" xml:space="preserve">
          <source>Creates stable pointer to object, ensuring associated object subgraph is disjoint in specified mode (&lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE&lt;/a&gt; by default). Raw value returned by &lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt; could be stored to a C variable or passed to another Kotlin machine.</source>
          <target state="translated">オブジェクトへの安定したポインタを作成し、関連付けられたオブジェクトサブグラフが指定されたモード（デフォルトでは&lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE&lt;/a&gt;）で切り離されるようにします。&lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt;によって返される生の値は、C変数に格納するか、別のKotlinマシンに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="271a82431d9fa97eadc8deb6264e0ef2cc38dd8a" translate="yes" xml:space="preserve">
          <source>Creates text node and append it to the element.</source>
          <target state="translated">テキストノードを作成し、要素に追加します。</target>
        </trans-unit>
        <trans-unit id="1f355103d2a3e17a85828cdb67583359d0f4c05a" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine with receiver type &lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">レシーバタイプ&lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt;と結果タイプ&lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;Tの&lt;/a&gt;インターセプトされていないコルーチンを作成します。この関数は、呼び出されるたびに、中断可能な計算の新しい新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="fabe2dc686b2babe37e5f9906683b798fcbfe5dc" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine without receiver and with result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">レシーバーなしで結果タイプ&lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;Tの&lt;/a&gt;インターセプトされていないコルーチンを作成します。この関数は、呼び出されるたびに、中断可能な計算の新しい新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="99e17083ff94e8a04031aab60bd2f3b8b0074a79" translate="yes" xml:space="preserve">
          <source>Creating DTOs (POJOs/POCOs)</source>
          <target state="translated">DTOの作成(POJOs/POCOs</target>
        </trans-unit>
        <trans-unit id="5bbe6928a3475f1c1aa37bc2aaf2197e1a851133" translate="yes" xml:space="preserve">
          <source>Creating Hello Kotlin</source>
          <target state="translated">ハローKotlinの作成</target>
        </trans-unit>
        <trans-unit id="f2eb45b71e49bc3b558945f74db4b24998a792a4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets client-side JavaScript</source>
          <target state="translated">クライアントサイドのJavaScriptをターゲットにしたKotlinのコードを作成する</target>
        </trans-unit>
        <trans-unit id="a015a191b6c32e9034c4dc69a4a8a6547fa7dde4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets server-side JavaScript</source>
          <target state="translated">サーバーサイドのJavaScriptをターゲットにしたKotlinのコードを作成する</target>
        </trans-unit>
        <trans-unit id="ce8b88f0d45a9e05a0acb80a3544621deee4515d" translate="yes" xml:space="preserve">
          <source>Creating Struct and Union as &lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt; としての構造体とユニオンの作成</target>
        </trans-unit>
        <trans-unit id="d764e4c4091cd3af83661688bcd0070b7840795b" translate="yes" xml:space="preserve">
          <source>Creating Web Applications with Http Servlets</source>
          <target state="translated">Http サーブレットを使用した Web アプリケーションの作成</target>
        </trans-unit>
        <trans-unit id="91bc9208620d0b7ac0d6d70d7371878e3ca740f1" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; 作成</target>
        </trans-unit>
        <trans-unit id="51e9c1badeade62d27e067d5b5176d5eeee96439" translate="yes" xml:space="preserve">
          <source>Creating a Greeting Data Class and Controller</source>
          <target state="translated">グリーティングデータクラスとコントローラの作成</target>
        </trans-unit>
        <trans-unit id="8f60dc47b51c5c7184e8e31baa8a1934331bcbcb" translate="yes" xml:space="preserve">
          <source>Creating a Home Controller</source>
          <target state="translated">ホームコントローラの作成</target>
        </trans-unit>
        <trans-unit id="1fe7f636b4c3cc8163ad15d02aafbd937ce7ecd6" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin JavaScript library with the Command Line Compiler</source>
          <target state="translated">コマンドラインコンパイラを使ったKotlin JavaScriptライブラリの作成</target>
        </trans-unit>
        <trans-unit id="9f4b0b2d75c9d2d6bc7c0ed8f0a2631a3ad378b3" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin Library</source>
          <target state="translated">Kotlin ライブラリの作成</target>
        </trans-unit>
        <trans-unit id="4ea74668de10780b6390b876111ed84510c44765" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/JavaScript library</source>
          <target state="translated">Kotlin/JavaScriptライブラリの作成</target>
        </trans-unit>
        <trans-unit id="3b2f68c77cb636dbe2bb3b1e6af8eba12852848e" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/Native Gradle project</source>
          <target state="translated">Kotlin/Native Gradle プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="d576ba59729b1adb7aa8a2fbb7114d10ccbd15fe" translate="yes" xml:space="preserve">
          <source>Creating a RESTful Web Service with Spring Boot</source>
          <target state="translated">Spring BootでRESTfulなWebサービスを作成する</target>
        </trans-unit>
        <trans-unit id="875d1659f0b60a210ae22470241a1b0564c004f8" translate="yes" xml:space="preserve">
          <source>Creating a course</source>
          <target state="translated">コースの作成</target>
        </trans-unit>
        <trans-unit id="5779ce31675e4f49452cfd03428b18f0bba00725" translate="yes" xml:space="preserve">
          <source>Creating a new project</source>
          <target state="translated">新規プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="translated">プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="c4b23bfacf5d34c9319619616d3245375600ea1d" translate="yes" xml:space="preserve">
          <source>Creating a singleton</source>
          <target state="translated">シングルトンの作成</target>
        </trans-unit>
        <trans-unit id="091fcca5c001dbc9b7d735a1d55ab5a5f4b3212a" translate="yes" xml:space="preserve">
          <source>Creating an Android Project</source>
          <target state="translated">Androidプロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="5ae79fb1befc41c8a93a37b1959402c84de925a8" translate="yes" xml:space="preserve">
          <source>Creating an application targeting JavaScript</source>
          <target state="translated">JavaScriptをターゲットにしたアプリケーションの作成</target>
        </trans-unit>
        <trans-unit id="167edf949ab29cb746f1e2434beb01cf91923a77" translate="yes" xml:space="preserve">
          <source>Creating and running a first application</source>
          <target state="translated">最初のアプリケーションの作成と実行</target>
        </trans-unit>
        <trans-unit id="23c2235d034bfd3052d33a35f0e2f156cf20e65b" translate="yes" xml:space="preserve">
          <source>Creating basic classes and their instances:</source>
          <target state="translated">基本的なクラスとそのインスタンスの作成</target>
        </trans-unit>
        <trans-unit id="335208229c2cc5f4aeb2d1831c924860ce5407da" translate="yes" xml:space="preserve">
          <source>Creating bindings for a new library</source>
          <target state="translated">新しいライブラリのバインディングを作成する</target>
        </trans-unit>
        <trans-unit id="25d8af1fe3f9177178c334372ae34f6512d705aa" translate="yes" xml:space="preserve">
          <source>Creating iOS Application</source>
          <target state="translated">iOSアプリの作成</target>
        </trans-unit>
        <trans-unit id="0bbcbdde173cc3954b14384f94eda12495115411" translate="yes" xml:space="preserve">
          <source>Creating instances of classes</source>
          <target state="translated">クラスのインスタンスの作成</target>
        </trans-unit>
        <trans-unit id="8d7ec9f8d0cf9f3525b2c0412bcadf2bb077691e" translate="yes" xml:space="preserve">
          <source>Creating instances of nested, inner and anonymous inner classes is described in &lt;a href=&quot;nested-classes&quot;&gt;Nested classes&lt;/a&gt;.</source>
          <target state="translated">ネストされた内部クラスと匿名の内部クラスのインスタンスの作成については、&lt;a href=&quot;nested-classes&quot;&gt;ネスト&lt;/a&gt;されたクラスで説明されています。</target>
        </trans-unit>
        <trans-unit id="6ec55b6c63e301cb9aca12340ee39058119de416" translate="yes" xml:space="preserve">
          <source>Creating marker annotations</source>
          <target state="translated">マーカー注釈の作成</target>
        </trans-unit>
        <trans-unit id="9d617173515b440c011c25a9478a996b59b03e82" translate="yes" xml:space="preserve">
          <source>Creating the Application class</source>
          <target state="translated">アプリケーションクラスの作成</target>
        </trans-unit>
        <trans-unit id="a47a8f67c031f93257fd589df0322e2bc8af9dd3" translate="yes" xml:space="preserve">
          <source>Creating the Shared Module</source>
          <target state="translated">共有モジュールの作成</target>
        </trans-unit>
        <trans-unit id="d2a463d1fd54eb7d11c92e0e71b86fed201fe30d" translate="yes" xml:space="preserve">
          <source>Current Limitations</source>
          <target state="translated">現在の制限</target>
        </trans-unit>
        <trans-unit id="0ff7a081ba1fcd225575a0f0c0cb2159f7a7e349" translate="yes" xml:space="preserve">
          <source>Current data size, may concurrently change later on.</source>
          <target state="translated">現在のデータサイズは、後から同時に変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="713b07e9490d702bdceb690d20d9ed5d803c5412" translate="yes" xml:space="preserve">
          <source>Currently the Kotlin/Native compiler produces debug info compatible with the DWARF 2 specification, so modern debugger tools can perform the following operations:</source>
          <target state="translated">現在、Kotlin/Native コンパイラは DWARF 2 仕様と互換性のあるデバッグ情報を生成しているため、最新のデバッガツールでは以下の操作が可能です。</target>
        </trans-unit>
        <trans-unit id="7b8f71c2668c0aed64bb077872227679b7061883" translate="yes" xml:space="preserve">
          <source>Currently you should not use DCE tool if your project is a shared library. It's only applicable when you are developing an application (which may use shared libraries). The reason is: DCE does not know which parts of the library are going to be used by the user's application.</source>
          <target state="translated">現在のところ、プロジェクトが共有ライブラリの場合はDCEツールを使うべきではありません。これはアプリケーションを開発している場合にのみ適用されます(共有ライブラリを使用する可能性がある)。理由は以下の通りです。DCEはライブラリのどの部分がユーザーのアプリケーションで使用されるかを知りません。</target>
        </trans-unit>
        <trans-unit id="6e2f7653e302d483564689cc3c76773c62c4fd47" translate="yes" xml:space="preserve">
          <source>Currently, scratches are supported only in Kotlin/JVM projects.</source>
          <target state="translated">現在、スクラッチはKotlin/JVMプロジェクトでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="292aba6163db8b0b2f940f22522e29628d2e30c7" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Parceler&lt;/code&gt;s</source>
          <target state="translated">カスタム &lt;code&gt;Parceler&lt;/code&gt; 秒</target>
        </trans-unit>
        <trans-unit id="1c4db5c4b660736d3dbab3d8b61e303bbf6919b6" translate="yes" xml:space="preserve">
          <source>Custom Contracts</source>
          <target state="translated">カスタム契約</target>
        </trans-unit>
        <trans-unit id="8865a3a68c9544ac12367c763b6303a7435e3ab1" translate="yes" xml:space="preserve">
          <source>Custom comparators are also handy when a list uses an order different from natural one, for example, a case-insensitive order for &lt;code&gt;String&lt;/code&gt; elements.</source>
          <target state="translated">カスタムコンパレーターは、リストが自然な順序とは異なる順序を使用する場合にも便利です。たとえば、 &lt;code&gt;String&lt;/code&gt; 要素の大文字と小文字を区別しない順序です。</target>
        </trans-unit>
        <trans-unit id="77242d32f849b7b91b473376230b5128e0904393" translate="yes" xml:space="preserve">
          <source>Custom contracts are introduced by the call to &lt;code&gt;contract&lt;/code&gt; stdlib function, which provides DSL scope:</source>
          <target state="translated">カスタムコントラクトは、DSLスコープを提供する &lt;code&gt;contract&lt;/code&gt; stdlib関数の呼び出しによって導入されます。</target>
        </trans-unit>
        <trans-unit id="5aa1de640fb90d00ad86e2515a356290d45d70d9" translate="yes" xml:space="preserve">
          <source>Custom orders</source>
          <target state="translated">カスタムオーダー</target>
        </trans-unit>
        <trans-unit id="510dabf7252835d9978c83c5ec9c6ce309cf2f03" translate="yes" xml:space="preserve">
          <source>Custom source sets created in addition to the &lt;a href=&quot;#default-project-layout&quot;&gt;default ones&lt;/a&gt; should be explicitly included into the dependencies hierarchy to be able to use declarations from other source sets and, most importantly, to take part in compilations. Most often, they need a &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; or &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; statement, and some of the default platform-specific source sets should depend on the custom ones, directly or indirectly:</source>
          <target state="translated">&lt;a href=&quot;#default-project-layout&quot;&gt;デフォルトのもの&lt;/a&gt;に加えて作成されたカスタムソースセットは、他のソースセットからの宣言を使用できるように、そして最も重要なことに、コンパイルに参加できるように、依存関係階層に明示的に含める必要があります。ほとんどの場合、それらは &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; または &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; ステートメントを必要とし、デフォルトのプラットフォーム固有のソースセットのいくつかは、カスタムソースに直接または間接的に依存する必要があります：</target>
        </trans-unit>
        <trans-unit id="9641d220de46bb82adcd91404005a9e912f6654c" translate="yes" xml:space="preserve">
          <source>CustomElementRegistry</source>
          <target state="translated">CustomElementRegistry</target>
        </trans-unit>
        <trans-unit id="e3ae39135530349988b9f2b37312a7da38d5e9d7" translate="yes" xml:space="preserve">
          <source>CustomEventInit</source>
          <target state="translated">CustomEventInit</target>
        </trans-unit>
        <trans-unit id="b7ddd78bc2d738dd5f328a3913edbca0e62d37a2" translate="yes" xml:space="preserve">
          <source>DASH_PUNCTUATION</source>
          <target state="translated">DASH_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="7da9e660ee43ba312a0eadb9e2826cd368fadd30" translate="yes" xml:space="preserve">
          <source>DBFlow</source>
          <target state="translated">DBFlow</target>
        </trans-unit>
        <trans-unit id="fa4185d299a864320463795980d92616fe160a5f" translate="yes" xml:space="preserve">
          <source>DBFlow defines a bunch of extensions to make its usage in Kotlin more idiomatic, which you can include in your dependencies:</source>
          <target state="translated">DBFlowはKotlinでの使い方をより分かりやすくするために多くの拡張機能を定義しており、あなたの依存関係に含めることができます。</target>
        </trans-unit>
        <trans-unit id="aa3a5ae3d36048343f3b6ed675a6abcebd03915b" translate="yes" xml:space="preserve">
          <source>DCE does not perform minification (uglification) of your code by removing unnecessary whitespaces and shortening identifiers. You should use existing tools, like UglifyJS (https://github.com/mishoo/UglifyJS2) or Google Closure Compiler (https://developers.google.com/closure/compiler/) for this purpose.</source>
          <target state="translated">DCEは、不要な空白や短縮識別子を削除することでコードのミニ化(醜化)を行いません。この目的のためには、UglifyJS (https://github.com/mishoo/UglifyJS2)や Google Closure Compiler (https://developers.google.com/closure/compiler/)などの既存のツールを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="607449471dd18a1ecd5a210d9b9d39d34771a6f4" translate="yes" xml:space="preserve">
          <source>DCE tool is currently available from Gradle.</source>
          <target state="translated">DCEツールは現在Gradleから利用可能です。</target>
        </trans-unit>
        <trans-unit id="7bafdff61869a500494f4a0443ee9c0bfcb64720" translate="yes" xml:space="preserve">
          <source>DECIMAL_DIGIT_NUMBER</source>
          <target state="translated">DECIMAL_DIGIT_NUMBER</target>
        </trans-unit>
        <trans-unit id="1902b4c2b3614e4e710b092597e72b666f4e62de" translate="yes" xml:space="preserve">
          <source>DEFAULT_BUFFER_SIZE</source>
          <target state="translated">DEFAULT_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="7e26ca86e8689fde0bc1ba61a994c9cf74dbfa68" translate="yes" xml:space="preserve">
          <source>DOMImplementation</source>
          <target state="translated">DOMImplementation</target>
        </trans-unit>
        <trans-unit id="0bc9f0b62530ff017c6c91b4fa67c96e2492460d" translate="yes" xml:space="preserve">
          <source>DOMMatrixReadOnly</source>
          <target state="translated">DOMMatrixReadOnly</target>
        </trans-unit>
        <trans-unit id="bc2d230be05641f6476890725cf77245ddd0cd4e" translate="yes" xml:space="preserve">
          <source>DOMParser</source>
          <target state="translated">DOMParser</target>
        </trans-unit>
        <trans-unit id="536b73091cfe45ef69242c6db35a7b5fd376f931" translate="yes" xml:space="preserve">
          <source>DOMPointInit</source>
          <target state="translated">DOMPointInit</target>
        </trans-unit>
        <trans-unit id="909d75ad6b7731c724935a96a7082a7facdae2f6" translate="yes" xml:space="preserve">
          <source>DOMPointReadOnly</source>
          <target state="translated">DOMPointReadOnly</target>
        </trans-unit>
        <trans-unit id="a1e260231ffc7b5f77e0bbbf92dae64bd48ff67c" translate="yes" xml:space="preserve">
          <source>DOMQuad</source>
          <target state="translated">DOMQuad</target>
        </trans-unit>
        <trans-unit id="a696856663e8dc6d97e69006973f485c1eba6bf1" translate="yes" xml:space="preserve">
          <source>DOMRectInit</source>
          <target state="translated">DOMRectInit</target>
        </trans-unit>
        <trans-unit id="bf4907ee992b8f11e57a77ebeb8fe2280a9a7950" translate="yes" xml:space="preserve">
          <source>DOMRectList</source>
          <target state="translated">DOMRectList</target>
        </trans-unit>
        <trans-unit id="702ea8983cf1fffc7b15b640c87fdb73f01dfc97" translate="yes" xml:space="preserve">
          <source>DOMRectReadOnly</source>
          <target state="translated">DOMRectReadOnly</target>
        </trans-unit>
        <trans-unit id="8832c7fde3b423da65a9f5b85c41f43c7152cddc" translate="yes" xml:space="preserve">
          <source>DOMStringMap</source>
          <target state="translated">DOMStringMap</target>
        </trans-unit>
        <trans-unit id="dc3bf6edffd07dfbe381f9aa7a7c4de309f1c584" translate="yes" xml:space="preserve">
          <source>DOMTokenList</source>
          <target state="translated">DOMTokenList</target>
        </trans-unit>
        <trans-unit id="50637fefb475f90055c63ca741f15faf0c2d8aa9" translate="yes" xml:space="preserve">
          <source>DOT_MATCHES_ALL</source>
          <target state="translated">DOT_MATCHES_ALL</target>
        </trans-unit>
        <trans-unit id="8ab5faf932ad8859edda84dc1b3b557d86d509cc" translate="yes" xml:space="preserve">
          <source>DSL example</source>
          <target state="translated">DSLの例</target>
        </trans-unit>
        <trans-unit id="8e0e5961c9dc8c314c3d9bec3aebc5d5dceab1d6" translate="yes" xml:space="preserve">
          <source>Dagger</source>
          <target state="translated">Dagger</target>
        </trans-unit>
        <trans-unit id="8f5dcead155abae58e4489a3bd3c744c03583ea7" translate="yes" xml:space="preserve">
          <source>Dagger generates an implementation of &lt;code&gt;CoffeeShop&lt;/code&gt; that allows you to get a fully-injected &lt;code&gt;CoffeeMaker&lt;/code&gt;. You can navigate and see the implementation of &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; if you open the project in IDE.</source>
          <target state="translated">Daggerは、完全に注入された &lt;code&gt;CoffeeMaker&lt;/code&gt; を取得できるようにする &lt;code&gt;CoffeeShop&lt;/code&gt; の実装を生成します。IDEでプロジェクトを開くと、 &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; の実装をナビゲートして確認できます。</target>
        </trans-unit>
        <trans-unit id="f20dcbd9b08fb9703f8879bef939587ab26fc293" translate="yes" xml:space="preserve">
          <source>Data Binding</source>
          <target state="translated">データバインディング</target>
        </trans-unit>
        <trans-unit id="c54003d0e1fe3378d8a6f8ba0f92ff9d2ae47e4b" translate="yes" xml:space="preserve">
          <source>Data Classes</source>
          <target state="translated">データクラス</target>
        </trans-unit>
        <trans-unit id="25c88740923ece15a2d16cf6a1e52ff72c24402d" translate="yes" xml:space="preserve">
          <source>Data Classes and Destructuring Declarations</source>
          <target state="translated">データクラスと構造化宣言</target>
        </trans-unit>
        <trans-unit id="d329cacaecc37bed4e5fba53c74606c0aee9908a" translate="yes" xml:space="preserve">
          <source>Data class overriding &lt;code&gt;copy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; オーバーライドするデータクラス</target>
        </trans-unit>
        <trans-unit id="ab038a7b945db81e2822af6bc55e7e1f6c35643c" translate="yes" xml:space="preserve">
          <source>Data class representing a value from a collection or sequence, along with its index in that collection or sequence.</source>
          <target state="translated">コレクションやシーケンスの値を、そのコレクションやシーケンス内のインデックスとともに表現するデータクラスです。</target>
        </trans-unit>
        <trans-unit id="8d0d0dc2f1ce54673556eb82f08e78cb7b578e8e" translate="yes" xml:space="preserve">
          <source>Data classes</source>
          <target state="translated">データクラス</target>
        </trans-unit>
        <trans-unit id="b34a69fadee2adf638bc56a02902a4fe355613a2" translate="yes" xml:space="preserve">
          <source>Data classes cannot be abstract, open, sealed or inner;</source>
          <target state="translated">データクラスは、抽象化、オープン、封印、内部化することはできません。</target>
        </trans-unit>
        <trans-unit id="425b14cd89372a10529ed16926e15bcdbfff8b02" translate="yes" xml:space="preserve">
          <source>DataTransfer</source>
          <target state="translated">DataTransfer</target>
        </trans-unit>
        <trans-unit id="8b221a5dbde46295ca9b03d3ef95bf345bc17788" translate="yes" xml:space="preserve">
          <source>DataTransferItem</source>
          <target state="translated">DataTransferItem</target>
        </trans-unit>
        <trans-unit id="f7120cb47ca5a4d617a103230733edaf9acbcdf2" translate="yes" xml:space="preserve">
          <source>DataTransferItemList</source>
          <target state="translated">DataTransferItemList</target>
        </trans-unit>
        <trans-unit id="16dcedc9e32ace9d82832081fe934341dd1cd877" translate="yes" xml:space="preserve">
          <source>DataView</source>
          <target state="translated">DataView</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="846d191ced329d2097943633bca6335b1f9262d7" translate="yes" xml:space="preserve">
          <source>Dead code elimination is often also called 'tree shaking'.</source>
          <target state="translated">デッドコードの消去は「ツリーシェイク」とも呼ばれることがあります。</target>
        </trans-unit>
        <trans-unit id="0c1e9ddea0de0b23e31feaa4dc074a8f7479dfd8" translate="yes" xml:space="preserve">
          <source>Dealing with compiler bugs</source>
          <target state="translated">コンパイラのバグへの対応</target>
        </trans-unit>
        <trans-unit id="0fbdd5ca2957e4874b16a85b82aca02e4bd258fd" translate="yes" xml:space="preserve">
          <source>Debug the application</source>
          <target state="translated">アプリケーションのデバッグ</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="66abfad53a2d8c7fd31179cc45507c14c6aaafb0" translate="yes" xml:space="preserve">
          <source>Debugging Kotlin in browser</source>
          <target state="translated">ブラウザでKotlinをデバッグする</target>
        </trans-unit>
        <trans-unit id="626734da9fe68917919a5a44392d04c3162eb224" translate="yes" xml:space="preserve">
          <source>Debugging coroutines and threads</source>
          <target state="translated">コアーチンとスレッドのデバッグ</target>
        </trans-unit>
        <trans-unit id="f5b699f98a2551f1c0a872e7cffc95e49c88762b" translate="yes" xml:space="preserve">
          <source>Debugging in Chrome DevTools</source>
          <target state="translated">Chrome DevToolsでのデバッグ</target>
        </trans-unit>
        <trans-unit id="01215d60a71f32827f8a67f7496424403c10a94c" translate="yes" xml:space="preserve">
          <source>Debugging the application</source>
          <target state="translated">アプリケーションのデバッグ</target>
        </trans-unit>
        <trans-unit id="6bd2b2a5baac6419baf232311ddedcb455f71727" translate="yes" xml:space="preserve">
          <source>Decimals: &lt;code&gt;123&lt;/code&gt;</source>
          <target state="translated">小数： &lt;code&gt;123&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9594d42d905843075ce48e892e70d108c93bc849" translate="yes" xml:space="preserve">
          <source>Decision Making</source>
          <target state="translated">意思決定</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="1783c331796c466fc89ce660373b5909402350f2" translate="yes" xml:space="preserve">
          <source>Declaration and instantiation</source>
          <target state="translated">宣言とインスタンス化</target>
        </trans-unit>
        <trans-unit id="69526f363f4c1c4bb90a49bf84072799c864d489" translate="yes" xml:space="preserve">
          <source>Declaration-site covariance and contravariance</source>
          <target state="translated">宣言サイトの共分散と対照分散</target>
        </trans-unit>
        <trans-unit id="f5efd46800538f85d7e67a47b7a6cad936953d2e" translate="yes" xml:space="preserve">
          <source>Declaration-site variance</source>
          <target state="translated">宣言サイトの分散</target>
        </trans-unit>
        <trans-unit id="0d879e5bd2107e7fcc43b998dbd9566dd52996e4" translate="yes" xml:space="preserve">
          <source>Declaration-site variance &amp;amp; Type projections</source>
          <target state="translated">宣言サイトの差異とタイプの予測</target>
        </trans-unit>
        <trans-unit id="bfd9dd188823ff26f847ebb4d0225407c0d4d7aa" translate="yes" xml:space="preserve">
          <source>Declaration-site variance of this type parameter. See the &lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">この型パラメーターの宣言サイトの差異。詳細については、&lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin言語のドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="9ce1aefa86e8746e05050d3834bd558b2d5da0b5" translate="yes" xml:space="preserve">
          <source>Declare a function as infix only when it works on two objects which play a similar role. Good examples: &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;. Bad example: &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">関数を同様の役割を果たす2つのオブジェクトで機能する場合にのみ、関数をインフィックスとして宣言します。良い例： &lt;code&gt;and&lt;/code&gt; 、 &lt;code&gt;to&lt;/code&gt; 、 &lt;code&gt;zip&lt;/code&gt; 。悪い例： &lt;code&gt;add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8141e317efc56ee18697750584f177cb4fa4437e" translate="yes" xml:space="preserve">
          <source>Declaring (static) members of a class</source>
          <target state="translated">クラスのメンバ宣言(静的)</target>
        </trans-unit>
        <trans-unit id="6efca92889af37277cb00d1a93da58f85c0f3dff" translate="yes" xml:space="preserve">
          <source>Declaring Extensions as Members</source>
          <target state="translated">拡張機能をメンバーとして宣言する</target>
        </trans-unit>
        <trans-unit id="a629716d1d1a36db6105b259501576be00e22498" translate="yes" xml:space="preserve">
          <source>Declaring Properties</source>
          <target state="translated">プロパティの宣言</target>
        </trans-unit>
        <trans-unit id="4d179adca795cf882d1e2fcb4c827a032f922f7d" translate="yes" xml:space="preserve">
          <source>Declaring binaries</source>
          <target state="translated">バイナリの宣言</target>
        </trans-unit>
        <trans-unit id="03687cebdb8a1a45896ded70c2c26f49424f77f2" translate="yes" xml:space="preserve">
          <source>Declaring optional parameters</source>
          <target state="translated">オプションのパラメータの宣言</target>
        </trans-unit>
        <trans-unit id="9e7e78b012b62dce6c259a2e257e3457ddce8d5e" translate="yes" xml:space="preserve">
          <source>Declaring variables</source>
          <target state="translated">変数の宣言</target>
        </trans-unit>
        <trans-unit id="50ca464d8d74ab7e8696b7fc5d01d47f9bc40078" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array or its subrange.</source>
          <target state="translated">この配列またはそのサブレンジのUTF-8エンコーディングのバイトから文字列をデコードします。</target>
        </trans-unit>
        <trans-unit id="a88fac956a784fdf0af3aaafc7b7cbaaa44dc2d4" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array.</source>
          <target state="translated">この配列の UTF-8 エンコーディングのバイトから文字列をデコードします。</target>
        </trans-unit>
        <trans-unit id="367cc2e5fdfe082bdc453ff9e067bf533453c0ed" translate="yes" xml:space="preserve">
          <source>Decrements this value.</source>
          <target state="translated">この値をデクリメントします。</target>
        </trans-unit>
        <trans-unit id="c6763c63e480b6aa1f2eebe6f3923a7dbc558e61" translate="yes" xml:space="preserve">
          <source>Decrements value by one.</source>
          <target state="translated">値を1つずつデクリメントします。</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="9a38baf3b03048f37add45c1488d99b0fdacb170" translate="yes" xml:space="preserve">
          <source>Default Arguments</source>
          <target state="translated">デフォルトの引数</target>
        </trans-unit>
        <trans-unit id="004333fa2e938db560bd7c551693ae782059af6f" translate="yes" xml:space="preserve">
          <source>Default Imports</source>
          <target state="translated">デフォルトのインポート</target>
        </trans-unit>
        <trans-unit id="74dd2556fd5dce92b9c4d8ff65a0c66dd460a66b" translate="yes" xml:space="preserve">
          <source>Default Project Layout</source>
          <target state="translated">デフォルトのプロジェクトレイアウト</target>
        </trans-unit>
        <trans-unit id="7078198f7cae420890a1abe183a812a6a35f8ed6" translate="yes" xml:space="preserve">
          <source>Default Value</source>
          <target state="translated">デフォルト値</target>
        </trans-unit>
        <trans-unit id="6d72a87e6ca669498157e500dc90d1e5fa61249d" translate="yes" xml:space="preserve">
          <source>Default implementation does nothing.</source>
          <target state="translated">デフォルトの実装では何もしません。</target>
        </trans-unit>
        <trans-unit id="f56ba5ccdc01660a00f065dbd818701d68a03ff1" translate="yes" xml:space="preserve">
          <source>Default implementations with optional more specialized overrides is another bonus of the multiplatform library. Now, when we have a string-based API, we can cover it with basic tests:</source>
          <target state="translated">オプションでより専門的なオーバーライドを持つデフォルトの実装は、マルチプラットフォームライブラリのもう一つのボーナスです。これで、文字列ベースの API があれば、基本的なテストでカバーできるようになりました。</target>
        </trans-unit>
        <trans-unit id="cb00dac1a7ec814c3f0bfabcc91fd624f09d93ae" translate="yes" xml:space="preserve">
          <source>Default methods are available only for targets JVM 1.8 and above.</source>
          <target state="translated">デフォルトのメソッドは、ターゲットJVM 1.8以上でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="1f529b0fd28579227a1a938ed1cf822b7ce635b0" translate="yes" xml:space="preserve">
          <source>Default methods in interfaces</source>
          <target state="translated">インターフェースのデフォルトメソッド</target>
        </trans-unit>
        <trans-unit id="00510f3c2eb3ca8fa74448310c01822126885a11" translate="yes" xml:space="preserve">
          <source>Default parameter values</source>
          <target state="translated">パラメータのデフォルト値</target>
        </trans-unit>
        <trans-unit id="bdffe654f8554300a98d2acefcbbf1d894339b2b" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="translated">デフォルト値</target>
        </trans-unit>
        <trans-unit id="0c247591a0ec421cf213df87f5cfab736920f65f" translate="yes" xml:space="preserve">
          <source>Default values are defined using the &lt;strong&gt;=&lt;/strong&gt; after type along with the value.</source>
          <target state="translated">デフォルト値は、値とともにタイプの後に&lt;strong&gt;=&lt;/strong&gt;を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="c5a4ca79fc3b9dc619dfd98357c74e615190760f" translate="yes" xml:space="preserve">
          <source>Default values for function parameters</source>
          <target state="translated">関数パラメータのデフォルト値</target>
        </trans-unit>
        <trans-unit id="a52d4d2896f5b9308cd4cda93ca25ef7bdc3eb13" translate="yes" xml:space="preserve">
          <source>DeferScope</source>
          <target state="translated">DeferScope</target>
        </trans-unit>
        <trans-unit id="d36a311eae80bac3cfeb88f38f8a93405c81d66a" translate="yes" xml:space="preserve">
          <source>Deferred values can be selected using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt; clause. Let us start with an async function that returns a deferred string value after a random delay:</source>
          <target state="translated">遅延値は、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt;句を使用して選択できます。ランダムな遅延の後に遅延ストリング値を返す非同期関数から始めましょう。</target>
        </trans-unit>
        <trans-unit id="f715ef459873f316a735356bea952722b1f87891" translate="yes" xml:space="preserve">
          <source>Deferred values provide a convenient way to transfer a single value between coroutines. Channels provide a way to transfer a stream of values.</source>
          <target state="translated">繰延値は、コアーチン間で単一の値を転送する便利な方法を提供します。チャンネルは、値のストリームを転送する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="10af19f21c0846e0d21d57d9441a6d4f9e9e3e9c" translate="yes" xml:space="preserve">
          <source>Define the version of Kotlin you want to use via a &lt;em&gt;kotlin.version&lt;/em&gt; property:</source>
          <target state="translated">&lt;em&gt;kotlin.version&lt;/em&gt;プロパティを使用して、使用するKotlinのバージョンを定義します。</target>
        </trans-unit>
        <trans-unit id="a45e6f082f931e76cc35b1d2866f81758dc21207" translate="yes" xml:space="preserve">
          <source>Defines names for Unicode symbols used in proper Typography.</source>
          <target state="translated">適切なタイポグラフィで使用されるUnicodeシンボルの名前を定義します。</target>
        </trans-unit>
        <trans-unit id="eaf85480139ce8b3345d7674369f7104c63e0e8b" translate="yes" xml:space="preserve">
          <source>Defining functions</source>
          <target state="translated">機能の定義</target>
        </trans-unit>
        <trans-unit id="02462ee7bb41afbb3da00beda231ae5b090fc04c" translate="yes" xml:space="preserve">
          <source>Defining packages</source>
          <target state="translated">パッケージの定義</target>
        </trans-unit>
        <trans-unit id="f9a8e79df5bf3ca302b1d914723d2b6350c0ffd5" translate="yes" xml:space="preserve">
          <source>Defining the project and dependencies</source>
          <target state="translated">プロジェクトと依存関係の定義</target>
        </trans-unit>
        <trans-unit id="6fb23f37daf93108649d6a0aadfd418fba192724" translate="yes" xml:space="preserve">
          <source>Defining variables</source>
          <target state="translated">変数の定義</target>
        </trans-unit>
        <trans-unit id="55341770817a3767f3abf6b917b16dc6cad31ecd" translate="yes" xml:space="preserve">
          <source>Definition file hints</source>
          <target state="translated">定義ファイルのヒント</target>
        </trans-unit>
        <trans-unit id="86fdbca0dd71baf05d4d0e731fea35018ff2b87d" translate="yes" xml:space="preserve">
          <source>Deinitializes Kotlin runtime for the current thread, if was inited.</source>
          <target state="translated">現在のスレッドが起動されている場合、Kotlinのランタイムを初期化します。</target>
        </trans-unit>
        <trans-unit id="8cf0fe100bdde85b284c9b3460b06f6be544fd3e" translate="yes" xml:space="preserve">
          <source>Delaying for a time while another coroutine is working is not a good approach. Let's explicitly wait (in a non-blocking way) until the background &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; that we have launched is complete:</source>
          <target state="translated">別のコルーチンが動作している間、しばらく遅延させることは良い方法ではありません。起動したバックグラウンド&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;ジョブ&lt;/a&gt;が完了するまで、明示的に（非ブロッキング方法で）待機します。</target>
        </trans-unit>
        <trans-unit id="d9eb1a11956e5cc888e4d13347657ff7ef90d5aa" translate="yes" xml:space="preserve">
          <source>Delegated Properties</source>
          <target state="translated">委譲されたプロパティ</target>
        </trans-unit>
        <trans-unit id="82c1773025dcf386373e640047e7d3b6ec4c2f26" translate="yes" xml:space="preserve">
          <source>Delegated properties</source>
          <target state="translated">委譲されたプロパティ</target>
        </trans-unit>
        <trans-unit id="1a873edd160a55e0483eb179209876956ff30b1f" translate="yes" xml:space="preserve">
          <source>Delegated properties are described on a separate page: &lt;a href=&quot;delegated-properties&quot;&gt;Delegated Properties&lt;/a&gt;.</source>
          <target state="translated">委任されたプロパティについては、別のページ「&lt;a href=&quot;delegated-properties&quot;&gt;委任&lt;/a&gt;されたプロパティ」で説明します。</target>
        </trans-unit>
        <trans-unit id="8363eb20dcbf9367e655b3c4cc23c2a2d59d977e" translate="yes" xml:space="preserve">
          <source>Delegated properties take values from this map (by the string keys &amp;ndash;&amp;ndash; names of properties):</source>
          <target state="translated">委任されたプロパティは、このマップから値を取得します（文字列キー-プロパティの名前）：</target>
        </trans-unit>
        <trans-unit id="7dcccba4f8856a9df41efcf1d5ea4f2cfd327cec" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegates</target>
        </trans-unit>
        <trans-unit id="710ea31c1844269e394476da1f1443e6ca2a3b36" translate="yes" xml:space="preserve">
          <source>Delegation</source>
          <target state="translated">Delegation</target>
        </trans-unit>
        <trans-unit id="76a4d95cde894c1d7bc38dcf7ee5a2700580fa21" translate="yes" xml:space="preserve">
          <source>Delete this file with all its children. Note that if this operation fails then partial deletion may have taken place.</source>
          <target state="translated">このファイルをすべての子ファイルとともに削除します。この操作が失敗した場合、部分的な削除が行われている可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="12b5aeca69dae0e0c7deaf5c22ac0279d161947f" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that can be used without module system.</source>
          <target state="translated">モジュールシステムなしで使用できる &lt;code&gt;external&lt;/code&gt; 宣言を示します。</target>
        </trans-unit>
        <trans-unit id="2a32014ccda5a7ce6f1870686c19e3803d7e50c8" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that must be imported from native JavaScript library.</source>
          <target state="translated">ネイティブJavaScriptライブラリからインポートする必要がある &lt;code&gt;external&lt;/code&gt; 宣言を示します。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bbf64a22a95358bfa04118b993ea2161656f19a2" translate="yes" xml:space="preserve">
          <source>Dependencies (including interop ones)</source>
          <target state="translated">依存関係(相互ホップを含む)</target>
        </trans-unit>
        <trans-unit id="6aee742fa33aa11fbc680a59d219de7616a030a1" translate="yes" xml:space="preserve">
          <source>Dependencies are specified per source set as follows:</source>
          <target state="translated">依存関係は、以下のようにソースセットごとに指定されます。</target>
        </trans-unit>
        <trans-unit id="a1bf8971a01b6d47d63607bf14877619e76a3c41" translate="yes" xml:space="preserve">
          <source>Dependency declaration is also possible in the component block:</source>
          <target state="translated">コンポーネントブロック内での依存性宣言も可能です。</target>
        </trans-unit>
        <trans-unit id="e2558bbd35c8640c622365be8cd60ab5693f2bed" translate="yes" xml:space="preserve">
          <source>Depending on the target platform, we use different &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;functions&lt;/a&gt;, e.g. &lt;code&gt;macosX64&lt;/code&gt;, &lt;code&gt;mingwX64&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt;, &lt;code&gt;iosX64&lt;/code&gt;, to create the Kotlin target. The function name is the platform which we are compiling our code for. These functions optionally take the target name as a parameter, which is &lt;code&gt;&quot;native&quot;&lt;/code&gt; in our case. The specified &lt;em&gt;target name&lt;/em&gt; is used to generate the source paths and task names in the project.</source>
          <target state="translated">ターゲットプラットフォームに応じて、さまざまな&lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;関数&lt;/a&gt;（ &lt;code&gt;macosX64&lt;/code&gt; 、 &lt;code&gt;mingwX64&lt;/code&gt; 、 &lt;code&gt;linuxX64&lt;/code&gt; 、 &lt;code&gt;iosX64&lt;/code&gt; など）を使用してKotlinターゲットを作成します。関数名は、コードをコンパイルするプラットフォームです。これらの関数は、オプションでターゲット名をパラメーターとして受け取ります。この場合、これは &lt;code&gt;&quot;native&quot;&lt;/code&gt; です。指定された&lt;em&gt;ターゲット名&lt;/em&gt;は、プロジェクトでソースパスとタスク名を生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8048405643ba6bef25d30dfe59095c956c725378" translate="yes" xml:space="preserve">
          <source>Depending on the variant, the build generates the framework into the &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; and &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; folders. Let's see what is inside</source>
          <target state="translated">バリアントに応じて、ビルドはフレームワークを &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; および &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; フォルダーに生成します。中身を見てみましょう</target>
        </trans-unit>
        <trans-unit id="798b9e0b080bdadd97be30e380836acd3d374644" translate="yes" xml:space="preserve">
          <source>Deploying Kotlin Server-side Applications</source>
          <target state="translated">Kotlin サーバーサイドアプリケーションのデプロイ</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="302492c12a53b4d434a03ea744269ffb1d2b42ce" translate="yes" xml:space="preserve">
          <source>Deprecated element will not be accessible from code.</source>
          <target state="translated">非推奨の要素はコードからアクセスできません。</target>
        </trans-unit>
        <trans-unit id="04985d606d209354e4c0bdf6e1358ebf8a4ccb08" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API.</source>
          <target state="translated">互換性のために提供されている実験的コルーチンのサポートが終了しました。 &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API に移行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="539273974a9ae804f07b5878e48f50da514e14b9" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines&lt;/code&gt; API.</source>
          <target state="translated">互換性のために提供されている実験的コルーチンのサポートが終了しました。 &lt;code&gt;kotlin.coroutines&lt;/code&gt; API に移行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7df2a723d463ebf5da79b9a658bebb4606c0e28d" translate="yes" xml:space="preserve">
          <source>Deprecation: data classes overriding copy</source>
          <target state="translated">非推奨:コピーをオーバーライドするデータクラス</target>
        </trans-unit>
        <trans-unit id="36624958c874d1922e4fbf19d0e3b3799f091c9f" translate="yes" xml:space="preserve">
          <source>Deprecation: inner classes of generic classes extending Throwable</source>
          <target state="translated">非推奨:Throwable を拡張した汎用クラスの内部クラス</target>
        </trans-unit>
        <trans-unit id="ab28aea81dcb8e631e0158a588b35c6b9bb8c716" translate="yes" xml:space="preserve">
          <source>Deprecation: mutating backing field of a read-only property</source>
          <target state="translated">非推奨:読み取り専用プロパティのバッキングフィールドを変異させる</target>
        </trans-unit>
        <trans-unit id="f4f6df8fbf57a2ccc2c0341033eadbab83bb2bcd" translate="yes" xml:space="preserve">
          <source>Deprecation: nested types in enum entries</source>
          <target state="translated">非推奨:enum エントリ内の入れ子になった型</target>
        </trans-unit>
        <trans-unit id="dbc762089c0916158a95b8d950c6a5e3683d4b1c" translate="yes" xml:space="preserve">
          <source>Deprecation: single named argument for vararg</source>
          <target state="translated">非推奨:vararg の単一の名前付き引数</target>
        </trans-unit>
        <trans-unit id="4d159ac4945dc04545976d85f5f34241d79b594a" translate="yes" xml:space="preserve">
          <source>DeprecationLevel</source>
          <target state="translated">DeprecationLevel</target>
        </trans-unit>
        <trans-unit id="ab7b1741687e161f8bb2328b955c7ab64f3aedb3" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited AFTER its files</source>
          <target state="translated">深さ優先検索では、ディレクトリはファイルの後に訪問されます。</target>
        </trans-unit>
        <trans-unit id="037651e19b37eabb46e3b048f4a22f02596ad647" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited BEFORE its files</source>
          <target state="translated">深さ優先検索では、ディレクトリはファイルの前に訪問されます。</target>
        </trans-unit>
        <trans-unit id="43cf02d877c19ac2bb2e51c8f7a4fd7d94a2052a" translate="yes" xml:space="preserve">
          <source>Derived class initialization order</source>
          <target state="translated">派生クラスの初期化順</target>
        </trans-unit>
        <trans-unit id="c17a281db8e4c73087d63b2afbb53608f2f24527" translate="yes" xml:space="preserve">
          <source>Deriving a data class from a type that already has a &lt;code&gt;copy(...)&lt;/code&gt; function with a matching signature is deprecated in Kotlin 1.2 and is prohibited in Kotlin 1.3.</source>
          <target state="translated">一致するシグネチャを持つ &lt;code&gt;copy(...)&lt;/code&gt; 関数がすでにある型からデータクラスを派生させることは、Kotlin 1.2では非推奨であり、Kotlin 1.3では禁止されています。</target>
        </trans-unit>
        <trans-unit id="2fd3bd3e6afc045bfbcd4e36b1046fe4a31118e1" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with a given return value.</source>
          <target state="translated">関数が指定された戻り値で正常に戻る場合の状況を記述します。</target>
        </trans-unit>
        <trans-unit id="b7f74295d186c5835da5910c6ecd9b24295b6889" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any non-null return value.</source>
          <target state="translated">関数が任意の非ヌル以外の戻り値で正常に戻る場合の状況を説明します。</target>
        </trans-unit>
        <trans-unit id="02faff5cf391486d94200363ccf97c36a29845f3" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any value that is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">関数が &lt;code&gt;null&lt;/code&gt; 以外の値で正常に戻る状況について説明します。</target>
        </trans-unit>
        <trans-unit id="fa1d7eb3bb3131462f668f204cbd6cc484b77f8b" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with the specified return &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">関数が指定された戻り&lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;値で&lt;/a&gt;正常に戻る状況を説明します。</target>
        </trans-unit>
        <trans-unit id="bf479a0d235c44afe79c60e873b396d3193fd49c" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally, without any exceptions thrown.</source>
          <target state="translated">関数が例外を発生させずに正常に戻る場合の状況を記述します。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="d6eb84b30671924abdb086ad3eb7958b9baa8de6" translate="yes" xml:space="preserve">
          <source>Destination directory or .jar file name</source>
          <target state="translated">宛先ディレクトリまたは .jar ファイル名</target>
        </trans-unit>
        <trans-unit id="2a8acf95fbf5e4a22b63df20b3c2077c316bd245" translate="yes" xml:space="preserve">
          <source>Destination file</source>
          <target state="translated">宛先ファイル</target>
        </trans-unit>
        <trans-unit id="cf51fcb4adddfb6b7992e0883887b8a2af792726" translate="yes" xml:space="preserve">
          <source>Destructured</source>
          <target state="translated">Destructured</target>
        </trans-unit>
        <trans-unit id="56ca5e0437411ccbc6fa42dbc7ea25edfbc879d6" translate="yes" xml:space="preserve">
          <source>Destructuring Declarations</source>
          <target state="translated">宣言の破壊</target>
        </trans-unit>
        <trans-unit id="cc6c207f956f982b3f9eceae519287e9d31fdc71" translate="yes" xml:space="preserve">
          <source>Destructuring declarations also work in &lt;em&gt;for&lt;/em&gt;-loops: when you say:</source>
          <target state="translated">構造化宣言は&lt;em&gt;for&lt;/em&gt;ループでも機能します。</target>
        </trans-unit>
        <trans-unit id="9538600b70248a80970283859082e44f96e1adf1" translate="yes" xml:space="preserve">
          <source>Destructuring in Lambdas (since 1.1)</source>
          <target state="translated">ラムダの破壊 (1.1以降)</target>
        </trans-unit>
        <trans-unit id="c0617ad55d1641d3908e28bec4940aeb15edea5a" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas</source>
          <target state="translated">ラムダの破壊</target>
        </trans-unit>
        <trans-unit id="194fbab7abe4ad4d976eef9a3150ec1ded7d903e" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas (since 1.1)</source>
          <target state="translated">ラムダの破壊 (1.1 以降)</target>
        </trans-unit>
        <trans-unit id="50273607265bc87623bc4400b2ab41906200ad2d" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas is described as a part of &lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;destructuring declarations&lt;/a&gt;.</source>
          <target state="translated">ラムダでの分解は、分解&lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;宣言の&lt;/a&gt;一部として説明されています。</target>
        </trans-unit>
        <trans-unit id="5f5676f43d2a6ac041f3d4e368178eea5400c5c1" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">分離オブジェクトグラフは、&lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;attach&lt;/a&gt;拡張機能で接続されるまで、外部からアクセスできない転送可能な分離サブグラフをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="e51248e3fd7469c27661bd0ad8a1f6c2c6d61d10" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">分離オブジェクトグラフは、&lt;a href=&quot;../attach&quot;&gt;attach&lt;/a&gt;拡張機能で接続されるまで、外部からアクセスできない転送可能な分離サブグラフをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="462de32668c565664db0ea11ad515a3cedf31db9" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">分離オブジェクトグラフは、&lt;a href=&quot;attach&quot;&gt;attach&lt;/a&gt;拡張機能で接続されるまで、外部からアクセスできない転送可能な分離サブグラフをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="83d50b55671877d18384e9fd282e401c50dca26f" translate="yes" xml:space="preserve">
          <source>DetachedObjectGraph</source>
          <target state="translated">DetachedObjectGraph</target>
        </trans-unit>
        <trans-unit id="6bbf8be755a774a0bbcfcc9129bcb43de6794477" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt;と同様に、一般的な最小インデントを検出し、指定された&lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndentに置き換え&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="759cb23e79d0bcfe352dd1767c40f4e86484c2f6" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt;と同様に、一般的な最小インデントを検出し、指定された&lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndentに置き換え&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4de7f3cf3b3fe1a56ea6af47ee3d2b8568ca59d8" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent of all the input lines, removes it from every line and also removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="translated">すべての入力行の共通の最小インデントを検出し、すべての行からそれを削除し、最初と最後の行が空白の場合はそれも削除します (空白と空の違いに注意してください)。</target>
        </trans-unit>
        <trans-unit id="448573a1acf6c0d0a632e432c77153d554bb05ed" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin&lt;/a&gt;と&lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;同じ&lt;/a&gt;ようにmarginPrefixによってインデントを検出し、それを&lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndentに置き換え&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ff27fb1c919a6e53c31b55dac2dc76b1369ccaaa" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trim-margin&quot;&gt;trimMargin&lt;/a&gt;と&lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;同じ&lt;/a&gt;ようにmarginPrefixによってインデントを検出し、それを&lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndentに置き換え&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a6284a1d1ed8d8ad6502082e3f3348005e4c0a88" translate="yes" xml:space="preserve">
          <source>Determines how an annotation is stored in binary output.</source>
          <target state="translated">アノテーションがバイナリ出力にどのように格納されるかを決定します。</target>
        </trans-unit>
        <trans-unit id="9f4e38e8239446bc3109f6d54600b9fa68f13c81" translate="yes" xml:space="preserve">
          <source>Determines the type of &lt;code&gt;a&lt;/code&gt;, let it be &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; のタイプを決定し、それを &lt;code&gt;T&lt;/code&gt; とします。</target>
        </trans-unit>
        <trans-unit id="ff108cd0ac89424a1c63e0b7e9d4faaa9fdae2f9" translate="yes" xml:space="preserve">
          <source>Determines whether a character is whitespace according to the Unicode standard. Returns &lt;code&gt;true&lt;/code&gt; if the character is whitespace.</source>
          <target state="translated">Unicode標準に従って、文字が空白かどうかを判別します。文字が空白の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0df44ea37c46de95961847be769d2295c4d4c5d1" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; and ends with all components of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, last N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;. For relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;, &lt;code&gt;this&lt;/code&gt; can belong to any root.</source>
          <target state="translated">このファイルが&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;他&lt;/a&gt;と同じルートに属し、同じ順序で&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;他の&lt;/a&gt;すべてのコンポーネントで終了するかどうかを決定します。その場合は&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;、他のは&lt;/a&gt;、N個の要素を持って、最後のNコンポーネント &lt;code&gt;this&lt;/code&gt; と同じである必要があり&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;、他の&lt;/a&gt;。相対&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;otherの&lt;/a&gt;場合、 &lt;code&gt;this&lt;/code&gt; は任意のルートに属することができます。</target>
        </trans-unit>
        <trans-unit id="ff4cb6550bb3b4d85086ff0926bfdfd7ced324ad" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; and starts with all components of &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, first N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">このファイルが&lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;他&lt;/a&gt;と同じルートに属するかどうかを決定し、同じ順序で&lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;他の&lt;/a&gt;すべてのコンポーネントから開始します。その場合は&lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;、他のは&lt;/a&gt;、N個の要素を持っている、の最初のN個の部品 &lt;code&gt;this&lt;/code&gt; と同じである必要があり&lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;、他の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6bf88572f43737b0b427a9e321cfca77dbc5372" translate="yes" xml:space="preserve">
          <source>Determines whether this file has a root or it represents a relative path.</source>
          <target state="translated">このファイルがルートを持っているか、相対パスを表しているかを判断します。</target>
        </trans-unit>
        <trans-unit id="dddc6211c132c415993b584dc730f460ec7ab7d4" translate="yes" xml:space="preserve">
          <source>Determines whether this file path ends with the path of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; file.</source>
          <target state="translated">このファイルパスが&lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;他の&lt;/a&gt;ファイルのパスで終わるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="80f261b6ba4ad9cd101519ca55f6e50d58c5295e" translate="yes" xml:space="preserve">
          <source>Development mode</source>
          <target state="translated">開発モード</target>
        </trans-unit>
        <trans-unit id="860e1f95d3a8d20be2e3e527091c855f4e981bdb" translate="yes" xml:space="preserve">
          <source>Dictionary</source>
          <target state="translated">Dictionary</target>
        </trans-unit>
        <trans-unit id="66334f39b8b0fe14f26e33cf08b74cb64a672551" translate="yes" xml:space="preserve">
          <source>Differences between &quot;Kotlin Coding Conventions&quot; and &quot;IntelliJ IDEA default code style&quot;</source>
          <target state="translated">Kotlinコーディング規約」と「IntelliJ IDEAデフォルトコードスタイル」の違い</target>
        </trans-unit>
        <trans-unit id="4d052b9389172aa17e8d031bb01ccb4301b35447" translate="yes" xml:space="preserve">
          <source>Different APIs. Usually there's a need to learn a completely new API such as &lt;code&gt;thenCompose&lt;/code&gt; or &lt;code&gt;thenAccept&lt;/code&gt;, which can also vary across platforms.</source>
          <target state="translated">さまざまなAPI。通常、 &lt;code&gt;thenCompose&lt;/code&gt; や &lt;code&gt;thenAccept&lt;/code&gt; などの完全に新しいAPIを学習する必要がありますが、プラットフォームによっても異なります。</target>
        </trans-unit>
        <trans-unit id="1f9f0627015d50fd47a8bae9f4260f05c039adc0" translate="yes" xml:space="preserve">
          <source>Different programming model. Similar to callbacks, the programming model moves away from a top-down imperative approach to a compositional model with chained calls. Traditional program structures such as loops, exception handling, etc. usually are no longer valid in this model.</source>
          <target state="translated">異なるプログラミングモデル。コールバックと同様に、プログラミングモデルはトップダウン型の命令的アプローチから、連鎖した呼び出しによる構成モデルへと移行します。ループや例外処理などの伝統的なプログラム構造は、通常、このモデルでは有効ではなくなります。</target>
        </trans-unit>
        <trans-unit id="5b6ebe83d80fe2194d1dbdb6663e40c82621031e" translate="yes" xml:space="preserve">
          <source>Difficulty of nested callbacks. Usually a function that is used as a callback, often ends up needing its own callback. This leads to a series of nested callbacks which lead to incomprehensible code. The pattern is often referred to as the titled christmas tree (brace represent branches of the tree).</source>
          <target state="translated">ネストされたコールバックの難しさ 通常、コールバックとして使用される関数は、それ自身のコールバックを必要とすることがよくあります。これは、一連の入れ子になったコールバックにつながり、理解しがたいコードにつながります。このパターンは、しばしばタイトルのクリスマスツリー(ブレースは木の枝を表します)と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">ディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="cafb3aec55e92698494c582358ea45304a23574b" translate="yes" xml:space="preserve">
          <source>Disable internal declaration export</source>
          <target state="translated">内部宣言のエクスポートを無効にする</target>
        </trans-unit>
        <trans-unit id="78dfcd9c50f960bd4c21e40451e983a8a020ea02" translate="yes" xml:space="preserve">
          <source>Disambiguating targets</source>
          <target state="translated">ターゲットを曖昧にする</target>
        </trans-unit>
        <trans-unit id="78a8653f70041e9014354e7e97dbb680df00d5a7" translate="yes" xml:space="preserve">
          <source>Discontinued deprecated artifacts in the compiler distribution</source>
          <target state="translated">コンパイラ・ディストリビューションの非推奨のアーティファクトを廃止しました。</target>
        </trans-unit>
        <trans-unit id="e9bbf50fb8b45100c1b7a2539b0951ff336c730d" translate="yes" xml:space="preserve">
          <source>Dispatchers and threads</source>
          <target state="translated">派遣会社とスレッド</target>
        </trans-unit>
        <trans-unit id="3b6491a4ba67aed4b435bfa8449b41c8a6251b06" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be &lt;a href=&quot;get&quot;&gt;used&lt;/a&gt; after that.</source>
          <target state="translated">ハンドルを破棄します。その後は&lt;a href=&quot;get&quot;&gt;使用&lt;/a&gt;しないでください。</target>
        </trans-unit>
        <trans-unit id="6ee7951db01f07d84c88c38e4f1920c53234ce4b" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be used after that.</source>
          <target state="translated">ハンドルを廃棄します。それ以降は使用してはいけません。</target>
        </trans-unit>
        <trans-unit id="ec06ecc113854f061fc6d9ffbd14d296f147a792" translate="yes" xml:space="preserve">
          <source>Distinctions</source>
          <target state="translated">Distinctions</target>
        </trans-unit>
        <trans-unit id="76ea7428fc14a51fd5358254584c79f7dac47e89" translate="yes" xml:space="preserve">
          <source>Divides this value by the other value.</source>
          <target state="translated">この値を他の値で割ります。</target>
        </trans-unit>
        <trans-unit id="c9aa55dcc69c2c71abf561fe3b47e1527e2ddf90" translate="yes" xml:space="preserve">
          <source>Do not forget about &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 13: &lt;em&gt;Override clone judiciously&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;効果的なJava、第3版&lt;/a&gt;、項目13：&lt;em&gt;クローンを慎重にオーバーライドする&lt;/em&gt;ことを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="7b23d9bbdfefc85d448394a6669411db77eac0ed" translate="yes" xml:space="preserve">
          <source>Do not give up early! Make all the exercises green to finish the course:</source>
          <target state="translated">早めにあきらめないでください! 全ての演習をグリーンにしてコースを終了させましょう。</target>
        </trans-unit>
        <trans-unit id="604339b2897e84ca95cb164180153aa9b92f9ccd" translate="yes" xml:space="preserve">
          <source>Do not put a space before &lt;code&gt;?&lt;/code&gt; used to mark a nullable type: &lt;code&gt;String?&lt;/code&gt;</source>
          <target state="translated">前にスペースを入れません &lt;code&gt;?&lt;/code&gt; null許容型をマークするために使用： &lt;code&gt;String?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2993b64fe7851ac2250a1c240b336811f7c23e79" translate="yes" xml:space="preserve">
          <source>Do not put a space before an opening parenthesis in a primary constructor declaration, method declaration or method call.</source>
          <target state="translated">プライマリ コンストラクタの宣言、メソッドの宣言、またはメソッド呼び出しでは、開括弧の前にスペースを入れないでください。</target>
        </trans-unit>
        <trans-unit id="8d290ff51e50bef19d6cbbe1bd2888eebc0c194a" translate="yes" xml:space="preserve">
          <source>Do not put spaces around &lt;code&gt;::&lt;/code&gt;: &lt;code&gt;Foo::class&lt;/code&gt;, &lt;code&gt;String::length&lt;/code&gt;</source>
          <target state="translated">周りにスペースを入れないでください &lt;code&gt;::&lt;/code&gt; ： &lt;code&gt;Foo::class&lt;/code&gt; 、 &lt;code&gt;String::length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="179e75f1f327ede1a349a061a2361c0d22573c01" translate="yes" xml:space="preserve">
          <source>Do not put spaces around angle brackets used to specify type parameters: &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</source>
          <target state="translated">型パラメーターの指定に使用される山括弧の前後にスペースを入れないでください： &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7137f35d14dec35ee4b39dcac073fc47b316a778" translate="yes" xml:space="preserve">
          <source>Do not put spaces around unary operators (&lt;code&gt;a++&lt;/code&gt;)</source>
          <target state="translated">単項演算子の周りにスペースを入れないでください（ &lt;code&gt;a++&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="559fcccf797927f3cddbdb303b4454b8fc3cbb07" translate="yes" xml:space="preserve">
          <source>Do not sort the method declarations alphabetically or by visibility, and do not separate regular methods from extension methods. Instead, put related stuff together, so that someone reading the class from top to bottom would be able to follow the logic of what's happening. Choose an order (either higher-level stuff first, or vice versa) and stick to it.</source>
          <target state="translated">メソッド宣言をアルファベット順や可視性順に並べ替えたり、通常のメソッドと拡張メソッドを分けたりしないでください。その代わり、クラスを上から下まで読んでいる人が何が起こっているのか論理的に理解できるように、関連するものをまとめておきましょう。順番を決めて (上位レベルのものを先に、またはその逆に)、それに従うようにします。</target>
        </trans-unit>
        <trans-unit id="d82e8757015cafb43eb445e49f46aa2d15a58e76" translate="yes" xml:space="preserve">
          <source>Do not use a labeled return for the last statement in a lambda.</source>
          <target state="translated">ラムダの最後の文にラベル付きのリターンを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="8b093a7f1f8da84ae28f1d6753e11ea7dd1547d7" translate="yes" xml:space="preserve">
          <source>Do not use this function for huge files.</source>
          <target state="translated">巨大なファイルには使用しないでください。</target>
        </trans-unit>
        <trans-unit id="85fefe68a555a105dd9589b0f57bd9ed3b04f5a7" translate="yes" xml:space="preserve">
          <source>DocumentAndElementEventHandlers</source>
          <target state="translated">DocumentAndElementEventHandlers</target>
        </trans-unit>
        <trans-unit id="88f69bef493fba89ab946f2e087d0caf9b90e0d2" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot</source>
          <target state="translated">DocumentOrShadowRoot</target>
        </trans-unit>
        <trans-unit id="a5b968a6e012d1d2b06fecbe3c39c573a6d9708c" translate="yes" xml:space="preserve">
          <source>DocumentReadyState</source>
          <target state="translated">DocumentReadyState</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="3a0cc390f81644d0680cc454c11e51496fd81c3b" translate="yes" xml:space="preserve">
          <source>Documentation comments</source>
          <target state="translated">ドキュメントのコメント</target>
        </trans-unit>
        <trans-unit id="1d333cf81bf3bb582cb06ede8c39d94e4346b195" translate="yes" xml:space="preserve">
          <source>Documentation for a module as a whole, as well as packages in that module, is provided as a separate Markdown file, and the paths to that file is passed to Dokka using the &lt;code&gt;-include&lt;/code&gt; command line parameter or the corresponding parameters in Ant, Maven and Gradle plugins.</source>
          <target state="translated">モジュール全体のドキュメントとそのモジュール内のパッケージは、個別のMarkdownファイルとして提供され、そのファイルへのパスは、 &lt;code&gt;-include&lt;/code&gt; コマンドラインパラメーターまたはAnt、MavenおよびGradleプラグイン。</target>
        </trans-unit>
        <trans-unit id="c94081ae91f83b17508d2459face00f433d22c6e" translate="yes" xml:space="preserve">
          <source>Documenting Kotlin Code</source>
          <target state="translated">Kotlin のコードを文書化する</target>
        </trans-unit>
        <trans-unit id="8c20c134ae35dfbe8a7fe9c597283d56bb78d09f" translate="yes" xml:space="preserve">
          <source>Documents a value parameter of a function or a type parameter of a class, property or function. To better separate the parameter name from the description, if you prefer, you can enclose the name of the parameter in brackets. The following two syntaxes are therefore equivalent:</source>
          <target state="translated">関数の値パラメータや、クラス、プロパティ、関数の型パラメータを文書化します。パラメータ名と説明をよりよく分離するために、必要に応じてパラメータ名を括弧で囲むことができます。したがって、以下の 2 つの構文は同等です。</target>
        </trans-unit>
        <trans-unit id="49266f90cef3d806f5f34a15d2664c581545c97e" translate="yes" xml:space="preserve">
          <source>Documents an exception which can be thrown by a method. Since Kotlin does not have checked exceptions, there is also no expectation that all possible exceptions are documented, but you can still use this tag when it provides useful information for users of the class.</source>
          <target state="translated">メソッドによって投げられる可能性のある例外を文書化します。Kotlinにはチェック済みの例外がないので、すべての可能性のある例外がドキュメント化されていることは期待できませんが、クラスの利用者にとって有用な情報を提供してくれる場合には、このタグを使うことができます。</target>
        </trans-unit>
        <trans-unit id="f6db0f5a7306be8cd64173e0c7fabd018386d71f" translate="yes" xml:space="preserve">
          <source>Documents the primary constructor of a class.</source>
          <target state="translated">クラスのプライマリ・コンストラクタをドキュメント化します。</target>
        </trans-unit>
        <trans-unit id="f18adbc267f261936f87731208bbfa516fad1be0" translate="yes" xml:space="preserve">
          <source>Documents the property of a class which has the specified name. This tag can be used for documenting properties declared in the primary constructor, where putting a doc comment directly before the property definition would be awkward.</source>
          <target state="translated">指定された名前を持つクラスのプロパティを文書化します。このタグは、プライマリ・コンストラクタで宣言されたプロパティを文書化する際に使用できます。</target>
        </trans-unit>
        <trans-unit id="774992180b38d059386d310b9315ed0fe28476af" translate="yes" xml:space="preserve">
          <source>Documents the receiver of an extension function.</source>
          <target state="translated">拡張機能の受信機を文書化します。</target>
        </trans-unit>
        <trans-unit id="0a4c7c3dcf046f9c233cfa23a0f24a10a1a0bcd9" translate="yes" xml:space="preserve">
          <source>Documents the return value of a function.</source>
          <target state="translated">関数の戻り値を文書化します。</target>
        </trans-unit>
        <trans-unit id="1579785071cbfbf4e7cf75bf97e1c2e46cae5d8d" translate="yes" xml:space="preserve">
          <source>Does Kotlin have a community?</source>
          <target state="translated">コトリンにはコミュニティはありますか?</target>
        </trans-unit>
        <trans-unit id="c6727f8ad39827f1d374d3416d8e2fc42be6ad25" translate="yes" xml:space="preserve">
          <source>Does Kotlin only target Java 6?</source>
          <target state="translated">KotlinはJava 6のみを対象としていますか?</target>
        </trans-unit>
        <trans-unit id="f4ca2d4d9c6a0c693699a0dd9feaad71d708bcfe" translate="yes" xml:space="preserve">
          <source>Does not include the Kotlin standard library into the classpath</source>
          <target state="translated">クラスパスにKotlin標準ライブラリをインクルードしない</target>
        </trans-unit>
        <trans-unit id="0df838f2d48c7a75f0c511870710f77ac1d49718" translate="yes" xml:space="preserve">
          <source>Does nothing in this ArrayList implementation.</source>
          <target state="translated">この ArrayList の実装では何もしません。</target>
        </trans-unit>
        <trans-unit id="d376b12cffa9053a97f54b84ba604bc1a38aab9f" translate="yes" xml:space="preserve">
          <source>Doesn't affect a line if it doesn't contain &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; except the first and the last blank lines.</source>
          <target state="translated">最初と最後の空白行以外に&lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt;が含まれていない場合、行には影響しません。</target>
        </trans-unit>
        <trans-unit id="86d1050237805f5bef98fed1545d38f678ca7c28" translate="yes" xml:space="preserve">
          <source>Doesn't preserve the original line endings.</source>
          <target state="translated">元の行末を保持しません。</target>
        </trans-unit>
        <trans-unit id="fc3ec45270b94cffd4726d4162504d2aed8286b8" translate="yes" xml:space="preserve">
          <source>Dokka has plugins for Gradle, Maven and Ant, so you can integrate documentation generation into your build process.</source>
          <target state="translated">DokkaにはGradle,Maven,Ant用のプラグインがあるので、ドキュメント生成をビルドプロセスに統合することができます。</target>
        </trans-unit>
        <trans-unit id="674f2329cf52ca826ca203f63d16149b6c868108" translate="yes" xml:space="preserve">
          <source>Don't declare a method as infix if it mutates the receiver object.</source>
          <target state="translated">メソッドがレシーバオブジェクトを変異させる場合は、infixとして宣言しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="a7a55dbdf1fc21a3e4b49e71c869049035a76573" translate="yes" xml:space="preserve">
          <source>Don't forget to configure the &lt;a href=&quot;#configuring-dependencies&quot;&gt;standard library dependency&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#configuring-dependencies&quot;&gt;標準ライブラリの依存関係&lt;/a&gt;を設定することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="132cf6d69030e700977aad13556944c950e60fe4" translate="yes" xml:space="preserve">
          <source>Don't include Java runtime into classpath</source>
          <target state="translated">クラスパスにJavaランタイムを含まないようにする</target>
        </trans-unit>
        <trans-unit id="d50dd4cf2ca5f8bf68edff09c5759784aab7da7d" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin reflection implementation into classpath</source>
          <target state="translated">クラスパスにKotlinのリフレクションの実装を含まないようにする</target>
        </trans-unit>
        <trans-unit id="aad1adc11555491a7924a835262ebc43c948200a" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin runtime into classpath</source>
          <target state="translated">クラスパスに Kotlin のランタイムを含まないようにする</target>
        </trans-unit>
        <trans-unit id="6c7fd93bb25d5d75ea22611e7f245e65f975c074" translate="yes" xml:space="preserve">
          <source>Don't put a space before &lt;code&gt;:&lt;/code&gt; when it separates a declaration and its type.</source>
          <target state="translated">前にスペースを置かないでください &lt;code&gt;:&lt;/code&gt; 宣言とその型を区切る場合。</target>
        </trans-unit>
        <trans-unit id="646bf03016f3edf964253fb0fc3017c3c4d08276" translate="yes" xml:space="preserve">
          <source>Don't split lines if the resulting two lines are also grammatically valid on their own (even if it results in a compilation error that is not directly related to the grammar of Kotlin). The following does not actually return the result of &lt;code&gt;foo()&lt;/code&gt; - it returns a special value called &lt;code&gt;Unit&lt;/code&gt;, which we'll cover later, and &lt;code&gt;foo()&lt;/code&gt; is never called.</source>
          <target state="translated">結果の2行がそれ自体でも文法的に有効である場合は行を分割しないでください（Kotlinの文法に直接関連しないコンパイルエラーが発生した場合でも）。以下は実際には &lt;code&gt;foo()&lt;/code&gt; の結果を返しません-これは、後で説明する &lt;code&gt;Unit&lt;/code&gt; と呼ばれる特別な値を返し、 &lt;code&gt;foo()&lt;/code&gt; は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="09fb3893d047a836791635a0443cc9216f51e6ba" translate="yes" xml:space="preserve">
          <source>Don't use bundled Kotlin stdlib</source>
          <target state="translated">バンドルされている Kotlin の stdlib を使わないでください。</target>
        </trans-unit>
        <trans-unit id="f80cdcceee4d91537ff77825073b7036b585b343" translate="yes" xml:space="preserve">
          <source>Don't use curly braces when inserting a simple variable into a string template. Use curly braces only for longer expressions.</source>
          <target state="translated">文字列テンプレートに単純な変数を挿入する際に中括弧を使用しないでください。中括弧は長い式にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="3194951241cacbdd98f1aed6e5b2b42bebedb241" translate="yes" xml:space="preserve">
          <source>DoubleArray</source>
          <target state="translated">DoubleArray</target>
        </trans-unit>
        <trans-unit id="1827d562954cd23e4834e09f0e32e9b3e42fc4a5" translate="yes" xml:space="preserve">
          <source>DoubleIterator</source>
          <target state="translated">DoubleIterator</target>
        </trans-unit>
        <trans-unit id="da5c3eafb2a6fab1f0d485bd24e020a7bf7031cc" translate="yes" xml:space="preserve">
          <source>DoubleRange</source>
          <target state="translated">DoubleRange</target>
        </trans-unit>
        <trans-unit id="3cde05be63ba29d6e9c3dc318400a51421d14bf6" translate="yes" xml:space="preserve">
          <source>DoubleVar</source>
          <target state="translated">DoubleVar</target>
        </trans-unit>
        <trans-unit id="103746b98e5ac528917ab1d3e59fe03baca4727b" translate="yes" xml:space="preserve">
          <source>DoubleVarOf</source>
          <target state="translated">DoubleVarOf</target>
        </trans-unit>
        <trans-unit id="f56bdf21350350a8a2323dd95680e9a746286046" translate="yes" xml:space="preserve">
          <source>Doubles by default: &lt;code&gt;123.5&lt;/code&gt;, &lt;code&gt;123.5e10&lt;/code&gt;</source>
          <target state="translated">：デフォルトではダブルス &lt;code&gt;123.5&lt;/code&gt; 、 &lt;code&gt;123.5e10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="140001432d798891428681194a9dfa55bddb4614" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt; which includes Kotlin support out of the box.</source>
          <target state="translated">すぐに使えるKotlinサポートを含む&lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt;をダウンロードしてインストールします。</target>
        </trans-unit>
        <trans-unit id="0e8ca4fb0a389212c6ed052ff927d2cd7c7cd549" translate="yes" xml:space="preserve">
          <source>Download and install the meta-runner.</source>
          <target state="translated">メタランナーをダウンロードしてインストールします。</target>
        </trans-unit>
        <trans-unit id="750aecff5e7115d4f4f730e3be7ef5843044e79b" translate="yes" xml:space="preserve">
          <source>Downloading the compiler</source>
          <target state="translated">コンパイラのダウンロード</target>
        </trans-unit>
        <trans-unit id="5eeb55c228b8b7544858818654ad72eab39ff75d" translate="yes" xml:space="preserve">
          <source>DragEventInit</source>
          <target state="translated">DragEventInit</target>
        </trans-unit>
        <trans-unit id="0bb2f18a9f2730ea509eb82acef7cda97c4ce41d" translate="yes" xml:space="preserve">
          <source>DslMarker</source>
          <target state="translated">DslMarker</target>
        </trans-unit>
        <trans-unit id="51d0193dc58bcee14c37411c06f30d06e100a34c" translate="yes" xml:space="preserve">
          <source>Due to different representations, smaller types are not subtypes of bigger ones. If they were, we would have troubles of the following sort:</source>
          <target state="translated">表現の違いから、小さい型は大きい型のサブタイプではありません。もしそうだとしたら、次のような問題が発生するでしょう。</target>
        </trans-unit>
        <trans-unit id="81075e498615cc7a7ea41929fa4088ae475a42e9" translate="yes" xml:space="preserve">
          <source>Due to the current limitations, some tasks configured by the Java plugin are disabled, and the corresponding tasks added by the Kotlin plugin are used instead:</source>
          <target state="translated">現在の制限のため、Javaプラグインで設定されたタスクの一部は無効になっており、代わりにKotlinプラグインで追加された対応するタスクが使用されています。</target>
        </trans-unit>
        <trans-unit id="5407d1d0ad8a8c1986bf04088f64de3c1cea4067" translate="yes" xml:space="preserve">
          <source>Due to the key access to elements, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt;&lt;code&gt;plus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-&lt;/code&gt;) operators work for maps differently than for other collections. &lt;code&gt;plus&lt;/code&gt; returns a &lt;code&gt;Map&lt;/code&gt; that contains elements of its both operands: a &lt;code&gt;Map&lt;/code&gt; on the left and a &lt;code&gt;Pair&lt;/code&gt; or another &lt;code&gt;Map&lt;/code&gt; on the right. When the right-hand side operand contains entries with keys present in the left-hand side &lt;code&gt;Map&lt;/code&gt;, the result map contains the entries from the right side.</source>
          <target state="translated">要素へのキーアクセスにより、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt; &lt;code&gt;plus&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+&lt;/code&gt; ）および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;-&lt;/code&gt; ）演算子は、マップに対して他のコレクションとは異なる動作をします。 &lt;code&gt;plus&lt;/code&gt; は、両方のオペランドの要素を含む &lt;code&gt;Map&lt;/code&gt; を返します：左側の &lt;code&gt;Map&lt;/code&gt; と &lt;code&gt;Pair&lt;/code&gt; または右側の別の &lt;code&gt;Map&lt;/code&gt; 。右側のオペランドに左側の &lt;code&gt;Map&lt;/code&gt; に存在するキーを持つエントリが含まれている場合、結果マップには右側のエントリが含まれます。</target>
        </trans-unit>
        <trans-unit id="5959cafc90b9976fab302fc450377426e53fb1b1" translate="yes" xml:space="preserve">
          <source>Due to the similar nature of scope functions, choosing the right one for your case can be a bit tricky. The choice mainly depends on your intent and the consistency of use in your project. Below we'll provide detailed descriptions of the distinctions between scope functions and the conventions on their usage.</source>
          <target state="translated">スコープ機能の性質が似ているため、自分のケースに合ったものを選ぶのは少し難しいかもしれません。どちらを選ぶかは、主にあなたの意図とプロジェクトでの使用の一貫性に依存します。以下では、スコープ関数の違いとその使用法について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="fbcac33cd2aae5fd2f5bd43d61fe4687672d037d" translate="yes" xml:space="preserve">
          <source>During an instance initialization, the initializer blocks are executed in the same order as they appear in the class body, interleaved with the property initializers:</source>
          <target state="translated">インスタンスの初期化中、イニシャライザ・ブロックは、クラス本体に表示されているのと同じ順番で、プロパティのイニシャライザを挟んで実行されます。</target>
        </trans-unit>
        <trans-unit id="89eca32e31f17a93e4068b4794aa9a7213518c8c" translate="yes" xml:space="preserve">
          <source>During construction of a new instance of a derived class, the base class initialization is done as the first step (preceded only by evaluation of the arguments for the base class constructor) and thus happens before the initialization logic of the derived class is run.</source>
          <target state="translated">派生クラスの新しいインスタンスを構築する際には、基底クラスの初期化が最初のステップとして行われます (基底クラスのコンストラクタの引数の評価のみが先行します)ので、派生クラスの初期化ロジックが実行される前に行われます。</target>
        </trans-unit>
        <trans-unit id="95b790ad62c861c84e10d2d8a95af1b4cc85369a" translate="yes" xml:space="preserve">
          <source>Dynamic Type</source>
          <target state="translated">ダイナミック型</target>
        </trans-unit>
        <trans-unit id="1bec92c134e4881eaaf2a6bd7cba072fefd54d18" translate="yes" xml:space="preserve">
          <source>Dynamic libraries are the main way to use Kotlin code from existing programs. We can use them to share our code with many platforms or languages, including JVM, &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt;Python&lt;/a&gt;, iOS, Android, and others.</source>
          <target state="translated">動的ライブラリは、既存のプログラムからKotlinコードを使用する主な方法です。それらを使用して、JVM、&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt;Python&lt;/a&gt;、iOS、Android など、多くのプラットフォームや言語とコードを共有できます。</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="d15caa4e4c433db64527c708d6ce618053bc66c0" translate="yes" xml:space="preserve">
          <source>E.g. for next code:</source>
          <target state="translated">例:次のコードのために。</target>
        </trans-unit>
        <trans-unit id="79ee0da987021d140e8d6e8587c39d867fd71006" translate="yes" xml:space="preserve">
          <source>E.g. for the following code:</source>
          <target state="translated">例えば、以下のコードの場合。</target>
        </trans-unit>
        <trans-unit id="b7871ed9065f6c83f82cacf6677e3ec16560ecab" translate="yes" xml:space="preserve">
          <source>EAP Builds</source>
          <target state="translated">EAP ビルド</target>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="6f46563c4624929c3ea8e9a78058aa4bc6526dff" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER</source>
          <target state="translated">EUROPEAN_NUMBER</target>
        </trans-unit>
        <trans-unit id="adc4803227e466e80770cf89d11f810e3a1d1985" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_SEPARATOR</source>
          <target state="translated">EUROPEAN_NUMBER_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="6c73ba19807e39fecfb3120a9d4be19db919b958" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_TERMINATOR</source>
          <target state="translated">EUROPEAN_NUMBER_TERMINATOR</target>
        </trans-unit>
        <trans-unit id="b9318e8dd43cf90dac164eaf28c412c8270bd081" translate="yes" xml:space="preserve">
          <source>EXACTLY_ONCE</source>
          <target state="translated">EXACTLY_ONCE</target>
        </trans-unit>
        <trans-unit id="891bbd450e125f5b1ee12d035ddc1a7eef7a872c" translate="yes" xml:space="preserve">
          <source>EXPRESSION</source>
          <target state="translated">EXPRESSION</target>
        </trans-unit>
        <trans-unit id="822c0f907a120edc9af6756a2f2ce2c284f197c5" translate="yes" xml:space="preserve">
          <source>EXTENSION_RECEIVER</source>
          <target state="translated">EXTENSION_RECEIVER</target>
        </trans-unit>
        <trans-unit id="9fa15ceb7fbfcb040793c598863789e6ad8dddde" translate="yes" xml:space="preserve">
          <source>Each compilation has a default source set, which is the place for sources and dependencies that are specific to that compilation. The default source set is also used for directing other source sets to the compilation by the means of the &quot;depends on&quot; relation.</source>
          <target state="translated">各コンパイルにはデフォルトのソースセットがあり、そのコンパイルに固有のソースと依存関係の場所となります。デフォルトのソースセットは、&quot;depend on &quot;関係によって他のソースセットをコンパイルに指示するためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="75794b79a3c7503d4cb9fd0d66eb5e355e381841" translate="yes" xml:space="preserve">
          <source>Each compilation is accompanied by a default &lt;a href=&quot;#configuring-source-sets&quot;&gt;source set&lt;/a&gt;, which is created automatically and should be used for sources and dependencies that are specific to that compilation. The default source set for a compilation &lt;code&gt;foo&lt;/code&gt; of a target &lt;code&gt;bar&lt;/code&gt; has the name &lt;code&gt;barFoo&lt;/code&gt;. It can also be accessed from a compilation using &lt;code&gt;defaultSourceSet&lt;/code&gt;:</source>
          <target state="translated">各コンパイルには、デフォルトの&lt;a href=&quot;#configuring-source-sets&quot;&gt;ソースセット&lt;/a&gt;が付属しています。これは自動的に作成され、そのコンパイルに固有のソースと依存関係に使用する必要があります。ターゲット &lt;code&gt;bar&lt;/code&gt; コンパイル &lt;code&gt;foo&lt;/code&gt; に設定されたデフォルトのソースは、名前が &lt;code&gt;barFoo&lt;/code&gt; です。また、 &lt;code&gt;defaultSourceSet&lt;/code&gt; を使用してコンパイルからアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="9d4e8f2c9423cf7f3b3e960de1520a01d1b94247" translate="yes" xml:space="preserve">
          <source>Each element in the list gets replaced with the &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">リスト内の各要素は&lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;値で&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5e2c66324047aba6ab2a31ade0c6e2c38c1338ce" translate="yes" xml:space="preserve">
          <source>Each enum constant is an object. Enum constants are separated with commas.</source>
          <target state="translated">各列挙定数はオブジェクトです。列挙型定数はカンマで区切られています。</target>
        </trans-unit>
        <trans-unit id="288c78381723c563253b7eae6cda31fe87af7cc5" translate="yes" xml:space="preserve">
          <source>Each factory method exists in several versions. Consider them by example of the &lt;code&gt;executable&lt;/code&gt; method. All the same versions are available for all other factory methods.</source>
          <target state="translated">各ファクトリーメソッドはいくつかのバージョンに存在します。 &lt;code&gt;executable&lt;/code&gt; メソッドの例で検討してください。他のすべてのファクトリーメソッドでは、すべて同じバージョンを使用できます。</target>
        </trans-unit>
        <trans-unit id="286c3a296e5ddc0501582b309ba3224c6f8b3201" translate="yes" xml:space="preserve">
          <source>Each of the created frameworks contains the header file in &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt;. The headers do not depend on the target platform (at least with Kotlin/Native v.0.9.2). It contains the definitions for our Kotlin code and a few Kotlin-wide declarations.</source>
          <target state="translated">作成された各フレームワークには、 &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt; にヘッダーファイルが含まれています。ヘッダーはターゲットプラットフォームに依存しません（少なくともKotlin / Native v.0.9.2では）。Kotlinコードの定義といくつかのKotlin全体の宣言が含まれています。</target>
        </trans-unit>
        <trans-unit id="1ac0799f6a9a4112f1d8fe7504939fbe4d8034de" translate="yes" xml:space="preserve">
          <source>Each source set by default has its Kotlin sources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; directory and the resources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、各ソースセットのKotlinソースは &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; ディレクトリにあり、リソースは &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="36c270f1772f1e5369f05b1e129b1452732ce2bc" translate="yes" xml:space="preserve">
          <source>Each source set has a default source directory for Kotlin sources: &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt;. To add Kotlin source directories and resources to a source set, use its &lt;code&gt;kotlin&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt;&lt;code&gt;SourceDirectorySet&lt;/code&gt;s:</source>
          <target state="translated">各ソースセットには、Kotlinソース用のデフォルトのソースディレクトリ &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt; があります。Kotlinソースディレクトリとリソースをソースセットに追加するには、 &lt;code&gt;kotlin&lt;/code&gt; と &lt;code&gt;resources&lt;/code&gt; &lt;code&gt;SourceDirectorySet&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="eccbae19f1793e2279bb379096b38a15107b788c" translate="yes" xml:space="preserve">
          <source>Each target includes two &lt;strong&gt;compilations&lt;/strong&gt;: &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compiling product and test sources respectively. A compilation is an abstraction over a compiler invocation and described at the &lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">各ターゲットには2つの&lt;strong&gt;コンパイルが&lt;/strong&gt;含まれています。 &lt;code&gt;main&lt;/code&gt; と &lt;code&gt;test&lt;/code&gt; コンパイル製品とテストソースです。コンパイルは、コンパイラの呼び出しを抽象化したものであり、&lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;対応するページで&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="77cf02692234ad5fe03dd42180cdec6debe9dfd2" translate="yes" xml:space="preserve">
          <source>Earlier, Kotlin used assignments made inside a &lt;code&gt;try&lt;/code&gt; block for smart casts after the block, which could break type- and null-safety and lead to runtime failures. This release fixes this issue, making the smart casts more strict, but breaking some code that relied on such smart casts.</source>
          <target state="translated">以前のバージョンでは、Kotlin は、ブロックの後のスマートキャストの &lt;code&gt;try&lt;/code&gt; ブロック内で行われた割り当てを使用していました。これにより、型とnullの安全性が損なわれ、ランタイムエラーが発生する可能性がありました。このリリースでは、この問題が修正され、スマートキャストがより厳密になりましたが、そのようなスマートキャストに依存していた一部のコードが壊れています。</target>
        </trans-unit>
        <trans-unit id="f3c53eb8a62fd350a8b808a2e8ad6882452c7601" translate="yes" xml:space="preserve">
          <source>Eclipse (&lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt;)</source>
          <target state="translated">Eclipse（ &lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="4ef1415307c2764c7902e5073b06866fb4ef3897" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format.</source>
          <target state="translated">8ビットUCS変換フォーマット。</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="cffab4c6beb33b9e8e4dde3262e3a725abe28506" translate="yes" xml:space="preserve">
          <source>ElementCSSInlineStyle</source>
          <target state="translated">ElementCSSInlineStyle</target>
        </trans-unit>
        <trans-unit id="d137eed0ce5cd2a4cfee42d7643ae2ba8d6dc32f" translate="yes" xml:space="preserve">
          <source>ElementContentEditable</source>
          <target state="translated">ElementContentEditable</target>
        </trans-unit>
        <trans-unit id="ff19e297eb7330b9b685e8eed6956f8d8853a66a" translate="yes" xml:space="preserve">
          <source>ElementCreationOptions</source>
          <target state="translated">ElementCreationOptions</target>
        </trans-unit>
        <trans-unit id="70696a12cee77679875477bdbc5af610150a683d" translate="yes" xml:space="preserve">
          <source>ElementDefinitionOptions</source>
          <target state="translated">ElementDefinitionOptions</target>
        </trans-unit>
        <trans-unit id="46e6c77a0a1d3415576cf0983505dda61b4a49a4" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">返されるセットの要素は、指定された&lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;に従ってソートされます。</target>
        </trans-unit>
        <trans-unit id="d06fd310678899c14b842666da4910c5ad079e70" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">返されるセットの要素は、指定された&lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;に従ってソートされます。</target>
        </trans-unit>
        <trans-unit id="6a88cb2b3693e123208ae8e724fc1dc0faa56c45" translate="yes" xml:space="preserve">
          <source>Elvis Operator</source>
          <target state="translated">エルビス オペレーター</target>
        </trans-unit>
        <trans-unit id="9435fb78efed9559ebdda8817e66f5e037cdb9f1" translate="yes" xml:space="preserve">
          <source>Elvis operator</source>
          <target state="translated">エルビス工作員</target>
        </trans-unit>
        <trans-unit id="f3781e102266b0236e1e2f34ca15a94bcf3b30be" translate="yes" xml:space="preserve">
          <source>Embed source files into source map</source>
          <target state="translated">ソース ファイルをソース マップに埋め込む</target>
        </trans-unit>
        <trans-unit id="b467d1b8b6b53bb5ecc32ca24a87b2fec5e550f4" translate="yes" xml:space="preserve">
          <source>Embeds the body of the function with the specified qualified name into the documentation for the current element, in order to show an example of how the element could be used.</source>
          <target state="translated">指定された修飾名を持つ関数のボディを、現在の要素のドキュメントに埋め込み、要素がどのように使用されるかの例を示します。</target>
        </trans-unit>
        <trans-unit id="efffc6ff2c76faf4e3da9bd05908f46360ee6c19" translate="yes" xml:space="preserve">
          <source>Empty classes aren't very interesting, so let's make a class with some &lt;em&gt;properties&lt;/em&gt;:</source>
          <target state="translated">空のクラスはあまり面白くないので、いくつかの&lt;em&gt;プロパティ&lt;/em&gt;を持つクラスを作ってみましょう：</target>
        </trans-unit>
        <trans-unit id="9fd5e5efc84f85d37ba0aa6b82181d579d9cc263" translate="yes" xml:space="preserve">
          <source>Empty collections</source>
          <target state="translated">空のコレクション</target>
        </trans-unit>
        <trans-unit id="b427299e75fecbaeeb3025bf821643b8a411487f" translate="yes" xml:space="preserve">
          <source>EmptyCoroutineContext</source>
          <target state="translated">EmptyCoroutineContext</target>
        </trans-unit>
        <trans-unit id="7ef2ebecc0cb97c031b733c92b842fed11b529d2" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;invokeInitializers&lt;/code&gt; option if you want the plugin to run the initialization logic from the synthetic constructor. Starting from Kotlin 1.1.3-2, it is disabled by default because of &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt;&lt;code&gt;KT-18667&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt;&lt;code&gt;KT-18668&lt;/code&gt;&lt;/a&gt; which will be addressed in the future.</source>
          <target state="translated">プラグインで合成コンストラクターから初期化ロジックを実行する場合は、 &lt;code&gt;invokeInitializers&lt;/code&gt; オプションを有効にします。Kotlin 1.1.3-2以降では、&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt; &lt;code&gt;KT-18667&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt; &lt;code&gt;KT-18668&lt;/code&gt; &lt;/a&gt;が将来的に対応される予定であるため、デフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="6e3ada3d12644276d91abd790279f716fabc7767" translate="yes" xml:space="preserve">
          <source>Enable the official code style formatting by default starting from Kotlin 1.3 and only for new projects (old formatting can be enabled manually)</source>
          <target state="translated">Kotlin 1.3 からデフォルトで公式のコードスタイルの書式設定を有効にし、新しいプロジェクトでのみ有効にします(古い書式設定は手動で有効にすることができます)。</target>
        </trans-unit>
        <trans-unit id="900f496f052ef1aab784a6675a6acce778d1fbc7" translate="yes" xml:space="preserve">
          <source>Enable verbose logging output</source>
          <target state="translated">冗長なロギング出力を有効にする</target>
        </trans-unit>
        <trans-unit id="a7fde85fed255437f0dd6f222439a91515a76d1e" translate="yes" xml:space="preserve">
          <source>Enabled &lt;a href=&quot;compiler-plugins&quot;&gt;compiler plugins&lt;/a&gt;</source>
          <target state="translated">有効な&lt;a href=&quot;compiler-plugins&quot;&gt;コンパイラプラグイン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bf2d1d72b43d7d00f66dc3259477d82291aac64" translate="yes" xml:space="preserve">
          <source>Enables Unix lines mode. In this mode, only the &lt;code&gt;'\n'&lt;/code&gt; is recognized as a line terminator.</source>
          <target state="translated">Unixラインモードを有効にします。このモードでは、 &lt;code&gt;'\n'&lt;/code&gt; のみが行末記号として認識されます。</target>
        </trans-unit>
        <trans-unit id="c6a24259091d007977acf52d96a64c638d463fb7" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching.</source>
          <target state="translated">大文字小文字を区別しないマッチングを有効にします。</target>
        </trans-unit>
        <trans-unit id="78ad37c7bf7b510807eb5d75d95837985737627a" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching. Case comparison is Unicode-aware.</source>
          <target state="translated">大文字小文字を区別しないマッチングを有効にします。大文字と小文字の比較はUnicodeを考慮しています。</target>
        </trans-unit>
        <trans-unit id="acf6c9c494a0dbe1b691aa73b8db57947f65afe5" translate="yes" xml:space="preserve">
          <source>Enables equivalence by canonical decomposition.</source>
          <target state="translated">正準分解による等価性を可能にします。</target>
        </trans-unit>
        <trans-unit id="ad1614448b99ab93c2cc9d0947ca3d403238fc64" translate="yes" xml:space="preserve">
          <source>Enables literal parsing of the pattern.</source>
          <target state="translated">パターンのリテラル解析を有効にします。</target>
        </trans-unit>
        <trans-unit id="35ed1f408c376283e160007e24f8a96d620e43ac" translate="yes" xml:space="preserve">
          <source>Enables multiline mode.</source>
          <target state="translated">マルチラインモードが有効になります。</target>
        </trans-unit>
        <trans-unit id="e1fe51857b55253ff73a9a2c9a2797fa93ec4f62" translate="yes" xml:space="preserve">
          <source>Enables the mode, when the expression &lt;code&gt;.&lt;/code&gt; matches any character, including a line terminator.</source>
          <target state="translated">式のときにモードを有効にします &lt;code&gt;.&lt;/code&gt; 行末記号を含む任意の文字に一致します。</target>
        </trans-unit>
        <trans-unit id="61f7fcd5b0acf58febf20a27beceef248b4d79e1" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの &lt;code&gt;%&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="62bf98501f48e3d6638ee31f3dc892382fa44291" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスで &lt;code&gt;%&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="2d1b9cc0653169cdbc8b16ab42133b95b5cf62f4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスで &lt;code&gt;*&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="5ec13935d7b12f8e2621b695798cfa9b310f73fb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスで &lt;code&gt;*&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="e37cfaa4aac0c14e26761c88a4f12883f051a221" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスで &lt;code&gt;++&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="555142761ca7eeae74a0001576503c4b52c6bb64" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの &lt;code&gt;+&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="29fba93702bc6b00c98feb4e72c2ec9eb8f81ccd" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスで &lt;code&gt;+&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="fcf0418be3e06165ed8f8e668f6264a1c55f1b34" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスの &lt;code&gt;--&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="b49eba52d9e61697c4a01ae81da160684a8c5dc4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの &lt;code&gt;-&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="c18f83d2751070b0c6b30dfd072daf35ed4491cb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスで &lt;code&gt;-&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="b6c04c1288775e71e51d15fbd313526f30534dc7" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの &lt;code&gt;/&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="171342186cc81da13932d358e9a0092fadcfbb7a" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスの &lt;code&gt;/&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="e3a4e4af45919dede2113503a360a311d9019c1b" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの単項 &lt;code&gt;++&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="b5570f7243cf037a733dec49cf6fb8b5598cc3a3" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの単項 &lt;code&gt;--&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="e9b98fdf874bdeafb9768bfd23933d4615cfabba" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;インスタンスの単項 &lt;code&gt;-&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="d61e047cb21f08becc143f5a52736e7568f9aa72" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt;インスタンスの単項 &lt;code&gt;-&lt;/code&gt; 演算子の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="58552fd26e8fa7feb843fdef8d3ce44846b1f9a3" translate="yes" xml:space="preserve">
          <source>Enabling experimental features</source>
          <target state="translated">実験機能を有効にする</target>
        </trans-unit>
        <trans-unit id="fe70bb6ac7d4b1f90b3d1f54131e739ff3ec604d" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Gradle:</source>
          <target state="translated">Gradleでインラインクラスを有効にする</target>
        </trans-unit>
        <trans-unit id="2cddaef1b3907935b6973e0af7177c7b41cc1be4" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Maven</source>
          <target state="translated">Mavenでインラインクラスを有効にする</target>
        </trans-unit>
        <trans-unit id="abb8332dea269450ae077d0adbca55842af73acc" translate="yes" xml:space="preserve">
          <source>Enabling new language constructs or relaxing limitations for existing ones.</source>
          <target state="translated">新しい言語構成を有効にしたり、既存の言語構成の制限を緩和したりすることができます。</target>
        </trans-unit>
        <trans-unit id="4c2ffe42c69d5ce80645de8283c5fe8b7275fcc3" translate="yes" xml:space="preserve">
          <source>Enabling the progressive mode can require you to rewrite some of your code, but it shouldn't be too much &amp;mdash; all the fixes which are enabled under progressive are carefully handpicked, reviewed, and provided with tooling migration assistance. We expect that the progressive mode will be a nice choice for any actively maintained codebases which are updated to the latest language versions quickly.</source>
          <target state="translated">プログレッシブモードを有効にすると、コードの一部を書き直す必要がある場合がありますが、多すぎないはずです。プログレッシブで有効になっているすべての修正は、慎重に厳選され、レビューされ、ツールの移行支援が提供されます。プログレッシブモードは、最新の言語バージョンに迅速に更新されるアクティブに維持されているコードベースに最適です。</target>
        </trans-unit>
        <trans-unit id="2410e31d2a877c1bca39654727da50311a1d23ee" translate="yes" xml:space="preserve">
          <source>Encodes the contents of this string using the specified character set and returns the resulting byte array.</source>
          <target state="translated">指定した文字セットを使用してこの文字列の内容をエンコードし、結果のバイト配列を返します。</target>
        </trans-unit>
        <trans-unit id="3f94b91ab41430c97f9da4fe715cc87bf63669d1" translate="yes" xml:space="preserve">
          <source>Encodes this string or its substring to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">この文字列またはその部分文字列を UTF-8 エンコーディングでバイトの配列にエンコードします。</target>
        </trans-unit>
        <trans-unit id="88952b65da85f578e3d056e4d7d39e21191d2a4d" translate="yes" xml:space="preserve">
          <source>Encodes this string to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">この文字列を UTF-8 エンコーディングでバイトの配列にエンコードします。</target>
        </trans-unit>
        <trans-unit id="656cfef3d626370283d844f1c61d9217f8d3fc5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="c592b5bc49281936513ba6081997d620718c7dcd" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="c4d569d86f5e35ed053e3095ef0285e60445aa23" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="01135ec86d1739e9090b30f685121d042b98c431" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="782dedb2a5052cdfca76c5418b3162085b7deb93" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="28d8a80170f1b7416ef2bbfda2c35a7b80bbd456" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="96f261db16afa8da791496781fa8009ef354ed31" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="1b4b1359b18c494e43aef182294b0330cf92da20" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="6fe4f25db6853a8b3399272a411c26fa0c6f64e4" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="d019645cd6ba1dd386fdea2df4fad88850b31329" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="9529283362371ceb35f0c46be993c6b3d319d9a2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="50723df44a240655f71b8614db9893e98a21ef6f" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="e42a63eec0e0ac707883c94b742178f1e9594b87" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="aa0fb34e21f56f306e812998113d1de03910c92a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;より大きくないことを確認します。</target>
        </trans-unit>
        <trans-unit id="19c375d42f4d2bc2a22343af879580c5ad4d21e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="aff5083914cd02a8367bf02d8c6d9d277735c245" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="82118e74fa89839e0f5b1d0ee51a20e37feaba18" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="c891a2e60fb263e67ec6c092a1f35152b238f973" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="2caff89d57f8b0a254e5b0252fb4719adf5c08ba" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="3cc25334decfc6b70d3b837359a34a88e8fea2df" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="33b031b5d7c801d8dd6bba00666e31583d30223a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="9305f3aba1f8bd516f1dc6e27469835bae1cee08" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="4e48692d263dcb64f5bf02b631a83489f39138a6" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="36316603eaa66a130c3357bf0b5a7a8dc86a00fb" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="075ba07f9a038dea1cec1b9bffd75ea3fb54ff88" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="507af5e9b2513f430e4f9a1ce31c9fab7aa336e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="f36efb1bf449faf0a08f50fc913f46918231b6e0" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="01d73e24f39678d08d61c73426cb56114a85dee2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;以上であることを確認します。</target>
        </trans-unit>
        <trans-unit id="c09bcc2e5be36bde6659db36215448f4a28b89c9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="fe8b6e2cc457ae7ed1428d7ffc40e2d0fcf710aa" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4058a8ea9636c95dbf0246f44c55ceb228dcc108" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7b12ca79e902892991011200a265a52c0a30e043" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4733bf89476d88bfd608e49b1d8787c7f370e14b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d7504ca10ca1603940a6aac69287285ab9e9410d" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1b6b1f3c22173369d98500b0fcf1e4da111d1d5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7da6f1a8637907fa58f172b3f304c7305656ec41" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b559c8d692bf7a9afeee0c6bc77448ca1697db5c" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">この値が指定された&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;範囲内にあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7527e719a86974cfa8d1b5adcb94da5cb48f02bf" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="fd5d8f67cc692522c7da3307ea58b5f1af94f560" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="42af36c8e18fb9e0145c29d5e1bd9f331959c3b9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9720b4a5e28124e07b76cf2a6fef000470ddbda9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c20bb0db8819bb5e0f0f4f90f90370a8a1c56930" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8d9bdc8f202c573d3d12671fb4b5620791854ff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="70289eb83c7b23e71ab88b1c7e6e50ab140ba4e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d48bc4d50d5dd56a76012fda43c787d319920175" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3ae8d9596f0becbc9456de88903607686b84ce77" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0fa19a167412bd0da54b14b00304794203a40431" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ce38f4a83c7fbcdfa026b1f70a70063b1633ac68" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="647c656799e54b0803ef954fc0e566593ebeec57" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="085b13d77397d17582ba9674bfe9a3b3ef4bc0d0" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="23b80d6e104e5ec2c30cca729487bf7441f1cff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">この値が指定された範囲&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValueにあることを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c7194e06a3b4d1c91d8aea774c5500019b5129fd" translate="yes" xml:space="preserve">
          <source>Entries of the map are iterated in the order they were specified.</source>
          <target state="translated">マップのエントリは、指定された順に繰り返し実行されます。</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="35748b339b75707aa86eccdc826e9c484f210273" translate="yes" xml:space="preserve">
          <source>Enum Classes</source>
          <target state="translated">列挙クラス</target>
        </trans-unit>
        <trans-unit id="b2e5e902b1971489c8bd86ea7e44ac1bef195074" translate="yes" xml:space="preserve">
          <source>Enum Values</source>
          <target state="translated">列挙値</target>
        </trans-unit>
        <trans-unit id="385eabe2319af7be5d69418344d6f590f2823047" translate="yes" xml:space="preserve">
          <source>Enum classes</source>
          <target state="translated">列挙クラス</target>
        </trans-unit>
        <trans-unit id="937325799c883439aa3b4e58a52c889a2d66fae0" translate="yes" xml:space="preserve">
          <source>Enum constants can also declare their own anonymous classes:</source>
          <target state="translated">列挙定数は、独自の匿名クラスを宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="a0bb971b8a00934d25b661b15120131432511336" translate="yes" xml:space="preserve">
          <source>Enum entries cannot contain nested types other than inner classes (deprecated in Kotlin 1.2).</source>
          <target state="translated">列挙型のエントリには、内部クラス以外の入れ子になった型を含めることはできません (Kotlin 1.2では非推奨)。</target>
        </trans-unit>
        <trans-unit id="f4b6073e28f6c79e9fe65d95b5913ed2917af776" translate="yes" xml:space="preserve">
          <source>Enum that can be used to specify behaviour of the &lt;code&gt;copyRecursively()&lt;/code&gt; function in exceptional conditions.</source>
          <target state="translated">例外的な状況での &lt;code&gt;copyRecursively()&lt;/code&gt; 関数の動作を指定するために使用できる列挙型。</target>
        </trans-unit>
        <trans-unit id="0b7ef4706b4e2944c06aaa4c03af39bc96de6a9b" translate="yes" xml:space="preserve">
          <source>Enums can be mapped to either Kotlin enum or integral values, depending on heuristics and the &lt;a href=&quot;#definition-file-hints&quot;&gt;definition file hints&lt;/a&gt;.</source>
          <target state="translated">列挙型は、ヒューリスティックと&lt;a href=&quot;#definition-file-hints&quot;&gt;定義ファイルのヒントに&lt;/a&gt;応じて、Kotlin列挙型または整数値のいずれかにマップできます。</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="6b22c83cbad3afd7779a656e495c44a1b27cd751" translate="yes" xml:space="preserve">
          <source>Equality and inequality operators</source>
          <target state="translated">等価演算子と不等式演算子</target>
        </trans-unit>
        <trans-unit id="748ebc730a71bae7868135d1accc56922b028b39" translate="yes" xml:space="preserve">
          <source>Equality checks: &lt;code&gt;a == b&lt;/code&gt; and &lt;code&gt;a != b&lt;/code&gt;</source>
          <target state="translated">等価チェック： &lt;code&gt;a == b&lt;/code&gt; および &lt;code&gt;a != b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="039a53d57231960ec224d61b8349bfe18518e3b0" translate="yes" xml:space="preserve">
          <source>Error handling can be complicated. The propagation and chaining of errors aren't always straightforward.</source>
          <target state="translated">エラー処理は複雑です。エラーの伝搬や連鎖は必ずしも簡単なものではありません。</target>
        </trans-unit>
        <trans-unit id="c52aa93f970c79972bc37d5c3c59e2a8620d085a" translate="yes" xml:space="preserve">
          <source>Error handling is complicated. The nesting model makes error handling and propagation of these somewhat more complicated.</source>
          <target state="translated">エラー処理は複雑です。ネスティングモデルは、これらのエラー処理と伝搬をやや複雑にします。</target>
        </trans-unit>
        <trans-unit id="78f2140dbbcc9fd8d65b0ee8b553a347bb18737b" translate="yes" xml:space="preserve">
          <source>ErrorEventInit</source>
          <target state="translated">ErrorEventInit</target>
        </trans-unit>
        <trans-unit id="358338848dd4deed29a7bd14128aad9bacc42494" translate="yes" xml:space="preserve">
          <source>Errors and exceptions</source>
          <target state="translated">エラーと例外</target>
        </trans-unit>
        <trans-unit id="b0063eeadf598a7f91e76579d25f31225af1d74a" translate="yes" xml:space="preserve">
          <source>Escaping for Java identifiers that are keywords in Kotlin</source>
          <target state="translated">Kotlin のキーワードである Java 識別子をエスケープする</target>
        </trans-unit>
        <trans-unit id="1d25fd0a9340484bebe5803f5ab67a703d5f008c" translate="yes" xml:space="preserve">
          <source>Escaping is done in the conventional way, with a backslash. See &lt;a href=&quot;#characters&quot;&gt;Characters&lt;/a&gt; above for the list of supported escape sequences.</source>
          <target state="translated">エスケープは、バックスラッシュを使用して従来の方法で行われます。サポートされているエスケープシーケンスのリストについては、上記の&lt;a href=&quot;#characters&quot;&gt;文字を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c10f3e33eb7fdf58c0e3673d8f5975481200d9d0" translate="yes" xml:space="preserve">
          <source>Essentially, coroutines are light-weight threads. They are launched with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;&lt;em&gt;coroutine builder&lt;/em&gt; in a context of some &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScope&lt;/a&gt;. Here we are launching a new coroutine in the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;, meaning that the lifetime of the new coroutine is limited only by the lifetime of the whole application.</source>
          <target state="translated">基本的に、コルーチンは軽量スレッドです。これらは、一部の&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScopeの&lt;/a&gt;コンテキストで、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;起動&lt;/a&gt;&lt;em&gt;コルーチンビルダーを使用&lt;/em&gt;して起動されます。ここでは、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;で新しいコルーチンを起動しています。つまり、新しいコルーチンの存続期間は、アプリケーション全体の存続期間によってのみ制限されます。</target>
        </trans-unit>
        <trans-unit id="59a9b2e5945e0cbc814d0dde5b0e8a0a95ba5259" translate="yes" xml:space="preserve">
          <source>Evaluation order of constructor arguments regarding &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; call</source>
          <target state="translated">&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 呼び出しに関するコンストラクター引数の評価順序</target>
        </trans-unit>
        <trans-unit id="2d12eda121ccf292f1e6f3b8e534f5576492a3f2" translate="yes" xml:space="preserve">
          <source>Even if you don't know Python, this document should hopefully be a useful introduction to Kotlin, in particular if you are used to other dynamically typed languages. However, if you're coming from a Java background, you're probably better off diving directly into the excellent &lt;a href=&quot;../../reference/index&quot;&gt;official docs&lt;/a&gt; (from which this doc has drawn a lot of inspiration). To some extent, you can try to write Java code and look stuff up whenever what you're trying to do doesn't work - and some IDEs can even automatically convert Java code to Kotlin.</source>
          <target state="translated">Pythonを知らなくても、特に他の動的型付け言語に慣れている場合は、このドキュメントがKotlinの有用な入門書になるはずです。ただし、Javaのバックグラウンドを使用している場合は、優れた&lt;a href=&quot;../../reference/index&quot;&gt;公式ドキュメントに&lt;/a&gt;直接飛び込む方がよいでしょう（このドキュメントから多くのインスピレーションを得ています）。ある程度までは、Javaコードを記述して、実行しようとしていることがうまくいかないときはいつでも調べてみてください。一部のIDEは、Javaコードを自動的にKotlinに変換することもできます。</target>
        </trans-unit>
        <trans-unit id="e9ecf8ca9a3f1b27484055f2b1906e1ef4a4efef" translate="yes" xml:space="preserve">
          <source>Even if your type is not supported directly, you can write a &lt;code&gt;Parceler&lt;/code&gt; mapping object for it.</source>
          <target state="translated">タイプが直接サポートされていない場合でも、 &lt;code&gt;Parceler&lt;/code&gt; マッピングオブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="aea29208b1c90e49c372500ccead9244a9c7a1fb" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">さらに多くの例が&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHubにあります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d8c30df9df1ce8e280dcdfa32923dbef67a465a" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">さらに多くの例が&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHubにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1385120f004f9f61f7aeb2f15c759f3b41d4f34" translate="yes" xml:space="preserve">
          <source>Even more specifically, if you declare a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; inside your class, you'll be able to call its members with the same syntax as calling static methods in Java/C#, using only the class name as a qualifier.</source>
          <target state="translated">さらに具体的には、クラス内で&lt;a href=&quot;object-declarations#companion-objects&quot;&gt;コンパニオンオブジェクト&lt;/a&gt;を宣言すると、クラス名のみを修飾子として使用して、Java / C＃で静的メソッドを呼び出すのと同じ構文でそのメンバーを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3897d9606879be1a26c2336653ed95ac6602ce46" translate="yes" xml:space="preserve">
          <source>Even so, sometimes we have high-level program logic that implies type safety instead. For example:</source>
          <target state="translated">それでも、代わりに型の安全性を暗示するような高レベルのプログラムロジックがあることもあります。例えば、以下のようなものです。</target>
        </trans-unit>
        <trans-unit id="dbd96bf60af2cd93858a146fdca307b624b21c7a" translate="yes" xml:space="preserve">
          <source>Even though it is the most preferred way to provide OSGi support, unfortunately it couldn't be done for now due to so called &lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;&quot;package split&quot; issue&lt;/a&gt; that couldn't be easily eliminated and such a big change is not planned for now. There is &lt;code&gt;Require-Bundle&lt;/code&gt; feature but it is not the best option too and not recommended to use. So it was decided to make a separate artifact for OSGi.</source>
          <target state="translated">これはOSGiサポートを提供するための最も好ましい方法ですが、残念ながら、現時点では実行できませんでした。これは、いわゆる&lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;「パッケージ分割」の問題&lt;/a&gt;により簡単に解消できず、そのような大きな変更は現時点では予定されていません。ある &lt;code&gt;Require-Bundle&lt;/code&gt; 機能が、それはあまりにもしていない使用することをお勧め最高のオプションではありません。そのため、OSGi用に別のアーティファクトを作成することが決定されました。</target>
        </trans-unit>
        <trans-unit id="dcd39b20440b49172a45b9ff20743790f496a088" translate="yes" xml:space="preserve">
          <source>Even when we navigate with an index, it does not introduce any overhead:</source>
          <target state="translated">インデックスでナビゲートする場合でも、オーバーヘッドは発生しません。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="564c33e26b4fec29a028538c0231da4cb00a4e5b" translate="yes" xml:space="preserve">
          <source>EventInit</source>
          <target state="translated">EventInit</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="ac26147cb05290648f581f7f492a1f694d0c3ae7" translate="yes" xml:space="preserve">
          <source>EventListenerOptions</source>
          <target state="translated">EventListenerOptions</target>
        </trans-unit>
        <trans-unit id="f03fb9318f09e45d9f3193bb10d8e5967dae15e7" translate="yes" xml:space="preserve">
          <source>EventModifierInit</source>
          <target state="translated">EventModifierInit</target>
        </trans-unit>
        <trans-unit id="7618aa295e59ea02d44ad33999a0594b78372453" translate="yes" xml:space="preserve">
          <source>EventSourceInit</source>
          <target state="translated">EventSourceInit</target>
        </trans-unit>
        <trans-unit id="06d2da8cd620cdca5a8c4a25bc54d444bda9ad32" translate="yes" xml:space="preserve">
          <source>EventTarget</source>
          <target state="translated">EventTarget</target>
        </trans-unit>
        <trans-unit id="073c07d94b8dd1ed6194a2e9a28519adc1dcd7c9" translate="yes" xml:space="preserve">
          <source>Ever since version 1.0, Kotlin supported expressions with complex control flow, such as try-catch expressions and inline function calls. Such code is valid according to the Java Virtual Machine specification. Unfortunately, some bytecode processing tools do not handle such code quite well when such expressions are present in the arguments of constructor calls.</source>
          <target state="translated">Kotlinはバージョン1.0以降、トライキャッチ式やインライン関数呼び出しなどの複雑な制御フローを持つ式をサポートしています。このようなコードは Java Virtual Machine の仕様に従って有効です。残念ながら、バイトコード処理ツールの中には、コンストラクタ呼び出しの引数にこのような式が含まれている場合には、そのようなコードをうまく処理できないものもあります。</target>
        </trans-unit>
        <trans-unit id="8e9af70e11b1ca73e5219a9e463119c7c9692b0b" translate="yes" xml:space="preserve">
          <source>Every Android developer knows well the &lt;code&gt;findViewById()&lt;/code&gt; function. It is, without a doubt, a source of potential bugs and nasty code which is hard to read and support. While there are several libraries available that provide solutions to this problem, those libraries require annotating fields for each exposed &lt;code&gt;View&lt;/code&gt;.</source>
          <target state="translated">すべてのAndroid開発者は、 &lt;code&gt;findViewById()&lt;/code&gt; 関数をよく知っています。それは間違いなく、潜在的なバグと厄介なコードのソースであり、読み取りとサポートが困難です。この問題の解決策を提供するライブラリがいくつかありますが、それらのライブラリには、公開された各 &lt;code&gt;View&lt;/code&gt; に注釈フィールドが必要です。</target>
        </trans-unit>
        <trans-unit id="d44024cf002cece75b7307b0c5a4734b9f467460" translate="yes" xml:space="preserve">
          <source>Every C macro that expands to a constant is represented as a Kotlin property. Other macros are not supported. However, they can be exposed manually by wrapping them with supported declarations. E.g. function-like macro &lt;code&gt;FOO&lt;/code&gt; can be exposed as function &lt;code&gt;foo&lt;/code&gt; by &lt;a href=&quot;#adding-custom-declarations&quot;&gt;adding the custom declaration&lt;/a&gt; to the library:</source>
          <target state="translated">定数に展開されるすべてのCマクロは、Kotlinプロパティとして表されます。他のマクロはサポートされていません。ただし、サポートされている宣言でラップすることにより、手動で公開できます。たとえば、関数のようなマクロ &lt;code&gt;FOO&lt;/code&gt; は&lt;a href=&quot;#adding-custom-declarations&quot;&gt;、カスタム宣言&lt;/a&gt;をライブラリに追加することにより、関数 &lt;code&gt;foo&lt;/code&gt; として公開できます。</target>
        </trans-unit>
        <trans-unit id="e28c8f8f3e50c8bace74c95cde8a3b93f881cbbf" translate="yes" xml:space="preserve">
          <source>Every Kotlin course created with EduTools is structured as a list of lessons. Each lesson contains tasks. A task has the following components: a description, a &lt;code&gt;Task.kt&lt;/code&gt; file with exercise code, a &lt;code&gt;Tests.kt&lt;/code&gt; file with the task check, and any other files needed for the learner to complete the task.</source>
          <target state="translated">EduToolsで作成されたすべてのKotlinコースは、レッスンのリストとして構成されています。各レッスンにはタスクが含まれています。説明：タスクは、以下のコンポーネントがあり &lt;code&gt;Task.kt&lt;/code&gt; の行使コードでファイル &lt;code&gt;Tests.kt&lt;/code&gt; のタスクのチェックとファイル、およびタスクを完了するために、学習者のために必要な任意の他のファイルを。</target>
        </trans-unit>
        <trans-unit id="712f339f3b7f6b2c24d611d29b336e0fa8a399cb" translate="yes" xml:space="preserve">
          <source>Every Kotlin file should belong to a &lt;em&gt;package&lt;/em&gt;. This is somewhat similar to modules in Python, but files need to explicitly declare which package they belong to, and a package implicitly comes into existence whenever any file declares itself to belong to that package (as opposed to explicitly defining a module with &lt;code&gt;__init__.py&lt;/code&gt; and having all the files in that directory implicitly belong to the module). The package declaration must go on the top of the file:</source>
          <target state="translated">すべてのKotlinファイルは&lt;em&gt;パッケージに&lt;/em&gt;属している必要があり&lt;em&gt;ます&lt;/em&gt;。これはPythonのモジュールにいくぶん似ていますが、ファイルはそれらが属するパッケージを明示的に宣言する必要があり、ファイルがそのパッケージに属することを宣言すると、パッケージは暗黙的に存在します（ &lt;code&gt;__init__.py&lt;/code&gt; でモジュールを明示的に定義するのではなく）そして、そのディレクトリ内のすべてのファイルがモジュールに暗黙的に属している）。パッケージ宣言はファイルの先頭に置く必要があります：</target>
        </trans-unit>
        <trans-unit id="957184e810ecd33124979aa181b56fb181e3cf91" translate="yes" xml:space="preserve">
          <source>Every block tag begins on a new line and starts with the &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">すべてのブロックタグは新しい行で始まり、 &lt;code&gt;@&lt;/code&gt; 文字で始まります。</target>
        </trans-unit>
        <trans-unit id="ef355dc6d7b5ce7246012bd3c8a9e56856406957" translate="yes" xml:space="preserve">
          <source>Every class that doesn't explicitly declare a parent class inherits from &lt;code&gt;Any&lt;/code&gt;, which is the root of the class hierarchy (similar to &lt;code&gt;object&lt;/code&gt; in Python) - more on &lt;a href=&quot;inheritance&quot;&gt;inheritance&lt;/a&gt; later. Via &lt;code&gt;Any&lt;/code&gt;, every class automatically has the following functions:</source>
          <target state="translated">親クラスを明示的に宣言していないすべてのクラスは、クラス階層のルートである &lt;code&gt;Any&lt;/code&gt; から継承します（Pythonの &lt;code&gt;object&lt;/code&gt; と同様）- &lt;a href=&quot;inheritance&quot;&gt;継承については&lt;/a&gt;後で詳しく説明します。 &lt;code&gt;Any&lt;/code&gt; を介して、すべてのクラスに自動的に次の機能があります。</target>
        </trans-unit>
        <trans-unit id="b953ba083693f71dab9d629490a3304ec341e941" translate="yes" xml:space="preserve">
          <source>Every enum constant has properties to obtain its name and position in the enum class declaration:</source>
          <target state="translated">すべての列挙定数は、その名前と列挙クラス宣言の位置を取得するためのプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="bcac05684e2dee81d1bf6970400ecaf8f8b3e967" translate="yes" xml:space="preserve">
          <source>Every file implicitly imports its own package and a number of built-in Kotlin and Java packages.</source>
          <target state="translated">すべてのファイルは暗黙のうちに独自のパッケージと、多くの組み込みの Kotlin と Java パッケージをインポートしています。</target>
        </trans-unit>
        <trans-unit id="fa667469f4a415e1b99572742732f58821dc8630" translate="yes" xml:space="preserve">
          <source>Every number type has a class method to create a new instance from the related simple type. Also, there is an instance method to extract a simple value back. Schematically, declarations look like that:</source>
          <target state="translated">すべての数値型には、関連する単純型から新しいインスタンスを生成するクラスメソッドがあります。また、単純な値を取り出すためのインスタンスメソッドもあります。宣言は図式的にはこのようになります。</target>
        </trans-unit>
        <trans-unit id="a3a0dbd972838d1fbe40227514fc9c6be8e290db" translate="yes" xml:space="preserve">
          <source>Every number type supports the following conversions:</source>
          <target state="translated">すべての数値型は以下の変換をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ef6da45848820d599c1a8937a78be5d39dd0ed0f" translate="yes" xml:space="preserve">
          <source>Every release ships with a standalone version of the compiler. We can download it from &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt;. The latest release is 1.3.41.</source>
          <target state="translated">すべてのリリースには、スタンドアロンバージョンのコンパイラが付属しています。&lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt;からダウンロードできます。最新のリリースは1.3.41です。</target>
        </trans-unit>
        <trans-unit id="b5994533aa728b6d163f7ab516212133e02265cf" translate="yes" xml:space="preserve">
          <source>Every task has a description that you can read in the &lt;strong&gt;Task Description&lt;/strong&gt; panel (&lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Task Description&lt;/strong&gt;) and exercise code in the &lt;code&gt;Task.kt&lt;/code&gt; file:</source>
          <target state="translated">すべてのタスクには、&lt;strong&gt;[タスクの説明&lt;/strong&gt; ]パネル（&lt;strong&gt;[表示]-&amp;gt; [ツールウィンドウ]-&amp;gt; [ &lt;/strong&gt;&lt;strong&gt;タスクの説明&lt;/strong&gt; ]）で読み取ることができる&lt;strong&gt;説明&lt;/strong&gt;と、 &lt;code&gt;Task.kt&lt;/code&gt; ファイルのコードを実行します。</target>
        </trans-unit>
        <trans-unit id="f71a789415d6265a0917595a076f9b20d52fb16d" translate="yes" xml:space="preserve">
          <source>Every variable must be &lt;em&gt;declared&lt;/em&gt;. Any attempt to use a variable that hasn't been declared yet is a syntax error; thus, you are protected from accidentally assigning to a misspelled variable. The declaration also decides what kind of data you are allowed to store in the variable.</source>
          <target state="translated">すべての変数を&lt;em&gt;宣言&lt;/em&gt;する必要があります。まだ宣言されていない変数を使用しようとすると、構文エラーになります。したがって、スペルミスのある変数に誤って割り当ててしまうことから保護されます。宣言は、変数に格納できるデータの種類も決定します。</target>
        </trans-unit>
        <trans-unit id="0a05c1370418c2c91be6a0f9821dc8a88ccc505e" translate="yes" xml:space="preserve">
          <source>Evolving the binary format</source>
          <target state="translated">バイナリ形式を進化させる</target>
        </trans-unit>
        <trans-unit id="6f5937facdbbf8929ff49ee312426d57efa74c7e" translate="yes" xml:space="preserve">
          <source>Examination of small programs leads to the conclusion that requiring exception specifications could both enhance developer productivity and enhance code quality, but experience with large software projects suggests a different result &amp;ndash; decreased productivity and little or no increase in code quality.</source>
          <target state="translated">小規模なプログラムを調査すると、例外仕様を必要とすることで開発者の生産性とコード品質が向上するという結論につながりますが、大規模なソフトウェアプロジェクトでの経験から、生産性の低下とコード品質の向上はほとんどまたはまったくないという異なる結果が示唆されます。</target>
        </trans-unit>
        <trans-unit id="eb9c01b9dbc6f514c62cdb6301f33220ca486e01" translate="yes" xml:space="preserve">
          <source>Examine generated C headers</source>
          <target state="translated">生成された C ヘッダの検査</target>
        </trans-unit>
        <trans-unit id="d9d56a471acee54c2001672aeebac5f1e0d96e35" translate="yes" xml:space="preserve">
          <source>Examining the compilation output</source>
          <target state="translated">コンパイル出力を調べる</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="206722f0c6e1e021a292d1476c4112863bbd4e5b" translate="yes" xml:space="preserve">
          <source>Example: Destructuring Declarations and Maps</source>
          <target state="translated">例。宣言とマップの構造化</target>
        </trans-unit>
        <trans-unit id="7d45f296f4ddd9ed3cee1886a7d1ff14b49f0db4" translate="yes" xml:space="preserve">
          <source>Example: Function Composition</source>
          <target state="translated">例.関数の構成</target>
        </trans-unit>
        <trans-unit id="1c713110ecc4fd6c64069db38531c3b22e08794a" translate="yes" xml:space="preserve">
          <source>Example: Returning Two Values from a Function</source>
          <target state="translated">例。関数から2つの値を返す</target>
        </trans-unit>
        <trans-unit id="73c4272f37511fc890854594e8d12c23cd698331" translate="yes" xml:space="preserve">
          <source>Example: we declare</source>
          <target state="translated">例:次のように宣言します。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="86f1f3751a3e3d2c3f35d7e1533ba929fc329127" translate="yes" xml:space="preserve">
          <source>Exception Classes</source>
          <target state="translated">例外クラス</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="d52b1546eba125cf4b7e9f2f57a0230bf95d128b" translate="yes" xml:space="preserve">
          <source>Exception handling and supervision</source>
          <target state="translated">例外処理と監督</target>
        </trans-unit>
        <trans-unit id="300a6d9d09e23a4f70d97fbd823c96cef62aaa3c" translate="yes" xml:space="preserve">
          <source>Exception propagation</source>
          <target state="translated">例外の伝播</target>
        </trans-unit>
        <trans-unit id="c8af2ec677c43cacf18cf6f5b90ea5a3d11acf50" translate="yes" xml:space="preserve">
          <source>Exception thrown when top level variable is accessed from incorrect execution context.</source>
          <target state="translated">トップレベル変数が不正な実行コンテキストからアクセスされた場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="3cb1749c83c04a86b034d9fd59faf83d742f3547" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever freezing is not possible.</source>
          <target state="translated">フリーズができない場合に例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="ff5162e9f6b4f048737649b87ce2adb1e4ad5cdf" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever we attempt to mutate frozen objects.</source>
          <target state="translated">凍結したオブジェクトを突然変異させようとすると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="ce1f90f3a94299d612d1161a67a6e4ea9633a574" translate="yes" xml:space="preserve">
          <source>Exception: factory functions used to create instances of classes can have the same name as the class being created:</source>
          <target state="translated">例外:クラスのインスタンスを作成するために使用されるファクトリ関数は、作成されるクラスと同じ名前を持つことができます。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="d10e8b2bdd0f1d5efdff34cd7ab9bdecd596bcec" translate="yes" xml:space="preserve">
          <source>Exceptions aggregation</source>
          <target state="translated">例外の集計</target>
        </trans-unit>
        <trans-unit id="4b745a5fdde0d75970ed0ed55a2060a9894aef88" translate="yes" xml:space="preserve">
          <source>Exceptions in supervised coroutines</source>
          <target state="translated">教師付きコルーチンの例外</target>
        </trans-unit>
        <trans-unit id="e553b09c329e1f113754f2dbaac3b3aaf0533a57" translate="yes" xml:space="preserve">
          <source>Exceptions pretty much work like they do in Python. You &lt;em&gt;throw&lt;/em&gt; (raise) one with &lt;code&gt;throw&lt;/code&gt;:</source>
          <target state="translated">例外は、Pythonの場合とほとんど同じように機能します。あなたは&lt;em&gt;throwで&lt;/em&gt; 1つを &lt;code&gt;throw&lt;/code&gt; ます（上げます）：</target>
        </trans-unit>
        <trans-unit id="d438cc2c39f9e526b7cf5e3357c8b6419b9dcc06" translate="yes" xml:space="preserve">
          <source>Exceptions that can be passed to the &lt;code&gt;onError&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; 関数に渡すことができる例外：</target>
        </trans-unit>
        <trans-unit id="f726a3681e0553bff6da8faa113a1eabe65c5771" translate="yes" xml:space="preserve">
          <source>Excludes the element from the generated documentation. Can be used for elements which are not part of the official API of a module but still have to be visible externally.</source>
          <target state="translated">生成されたドキュメントから要素を除外します。モジュールの公式APIの一部ではないが、外部から見えるようにしなければならない要素に使うことができます。</target>
        </trans-unit>
        <trans-unit id="4078b4cde7d9aaf6040def926ac6643dd634780c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;./gradlew check&lt;/code&gt; and you will see that the tests are run three times, on JVM, on JS, and on Native!</source>
          <target state="translated">&lt;code&gt;./gradlew check&lt;/code&gt; を実行すると、テストがJVM、JS、ネイティブで3回実行されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="117e5acbf802d6c99917aa10544e8a741a3c69ad" translate="yes" xml:space="preserve">
          <source>Execute if not null</source>
          <target state="translated">nullでない場合は実行</target>
        </trans-unit>
        <trans-unit id="0e0ab7b9797ada82aa57a130049c898a5290b92b" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with raw pointer to the data stored in the buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">バッファに格納されたデータへの生ポインタを持つロック下で、提供されたブロックを実行します。ブロックはスピンロック下で実行され、短くなければなりません。</target>
        </trans-unit>
        <trans-unit id="488594846cc639e778f89f8eaac0b080be7fbb88" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with the raw data buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">提供されたブロックを生データバッファとのロック下で実行します。ブロックはスピンロック下で実行され、短くなければなりません。</target>
        </trans-unit>
        <trans-unit id="614d4cb3f8799274e5d1a02ed4102a8b920ee64f" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in nanoseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="4ebd143fb53cb41967744a45798d8a8e88db909b" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in microseconds (Kotlin/Native only).</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、マイクロ秒単位の経過時間を返します（Kotlin /ネイティブのみ）。</target>
        </trans-unit>
        <trans-unit id="282e807ef96dd3abe00f20fdafa99797e00b480d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in milliseconds.</source>
          <target state="translated">指定された&lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行し、経過時間をミリ秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="d24b7f053f3eea01fc7419110ea4ca2bce2ddaeb" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the read lock of this lock.</source>
          <target state="translated">このロックの読み取りロックの下で、指定された&lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="a0d41a196bd1c586aa870febe53b2e0a6dac0ff8" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされてもされなくても、正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="2e0781fbc1659638abe69b290403b74d1e477a6d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">このリソースで指定された&lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;関数を実行し、例外がスローされてもされなくても、正しく閉じます。</target>
        </trans-unit>
        <trans-unit id="2c1c3a22034c156ae3b217a9a4c32c610ee18bd6" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under this lock.</source>
          <target state="translated">このロックの下で指定された&lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="67c84cfb8baeaffcb837ab0b1446834489eeab45" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the write lock of this lock.</source>
          <target state="translated">このロックの書き込みロックの下で、指定された&lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;アクションを&lt;/a&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="d878f68e2a355fbb917f2568270a4b7dcfb4a592" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; specified number of &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">与えられた関数を実行し&lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;、アクション&lt;/a&gt;の数、指定&lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;時間を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d7ee5a9194bd33546aeecbed83957e3a6b1fb66" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; while holding the monitor of the given object &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;lock&lt;/a&gt;.</source>
          <target state="translated">指定されたオブジェクト&lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;ロックの&lt;/a&gt;モニターを保持しながら、指定されたファンクション&lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;ブロック&lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="e41faf78521557eb6736e0bf3af395d2b7982be4" translate="yes" xml:space="preserve">
          <source>Executing a lambda on non-null objects: &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">null以外のオブジェクトでラムダを実行する： &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf1a2716f1a2c670bf0c7de278d2a8e68d7667f" translate="yes" xml:space="preserve">
          <source>Executing a statement if null</source>
          <target state="translated">nullの場合のステートメントの実行</target>
        </trans-unit>
        <trans-unit id="3c269bf863f985e09a56ca0835c97eb0941d25b9" translate="yes" xml:space="preserve">
          <source>Expected declarations never contain any implementation code.</source>
          <target state="translated">期待される宣言には、実装コードが含まれることはありません。</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="d621d7a06ece519175e16b02c031c6928f80477a" translate="yes" xml:space="preserve">
          <source>Experimental API Markers</source>
          <target state="translated">実験用APIマーカー</target>
        </trans-unit>
        <trans-unit id="ac76b852a915773325e2a6aa597d5290cd384ec5" translate="yes" xml:space="preserve">
          <source>Experimental APIs, subject to change in future versions of Kotlin.</source>
          <target state="translated">実験的なAPIであり、Kotlinの将来のバージョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="83e69bded5eee52fb9cf80af633d0b035eb4533a" translate="yes" xml:space="preserve">
          <source>Experimental DSL for declaring custom function contracts.</source>
          <target state="translated">カスタム関数契約を宣言するための実験的DSL。</target>
        </trans-unit>
        <trans-unit id="0d95a6a73703895596be46e50da232129664280d" translate="yes" xml:space="preserve">
          <source>Experimental features</source>
          <target state="translated">実験的特徴</target>
        </trans-unit>
        <trans-unit id="5d7f1cf8e07153923c6d0b21531a1643339069a4" translate="yes" xml:space="preserve">
          <source>Experimental features usually graduate to the stable status after some iterations.</source>
          <target state="translated">実験的特徴は通常、いくつかの反復の後に安定した状態に移行します。</target>
        </trans-unit>
        <trans-unit id="95839ce792e67ff3e4fc9c17515cf67b4d2ce6bc" translate="yes" xml:space="preserve">
          <source>Experimental marker annotations must meet several requirements:</source>
          <target state="translated">実験マーカーのアノテーションは、いくつかの要件を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="a9a30d212b365f3c57c7ff6cfb07a356fa6aff18" translate="yes" xml:space="preserve">
          <source>Experimental metadata publishing mode</source>
          <target state="translated">実験的なメタデータ公開モード</target>
        </trans-unit>
        <trans-unit id="798815b51c596e7360bb82efdbdec703b1bb1941" translate="yes" xml:space="preserve">
          <source>Experimental status of experimental API markers</source>
          <target state="translated">実験的APIマーカーの実験状況</target>
        </trans-unit>
        <trans-unit id="ada450325004db70f7b9f62cf11736e270c333f9" translate="yes" xml:space="preserve">
          <source>Experimental status of inline classes</source>
          <target state="translated">インラインクラスの実験状況</target>
        </trans-unit>
        <trans-unit id="7238f4bce9d5c771de41a0852b1ae8eb6443e037" translate="yes" xml:space="preserve">
          <source>Experimental status of unsigned integers</source>
          <target state="translated">符号なし整数の実験状況</target>
        </trans-unit>
        <trans-unit id="be95734df15b21d8571ecd278c36ee5d08b31707" translate="yes" xml:space="preserve">
          <source>ExperimentalContracts</source>
          <target state="translated">ExperimentalContracts</target>
        </trans-unit>
        <trans-unit id="ad810ef395525b8fdd1e4947c449bf2f1eccd04b" translate="yes" xml:space="preserve">
          <source>ExperimentalMultiplatform</source>
          <target state="translated">ExperimentalMultiplatform</target>
        </trans-unit>
        <trans-unit id="ef6b4c3b738ea2aedb5f203fffec0f3eedea7b14" translate="yes" xml:space="preserve">
          <source>ExperimentalStdlibApi</source>
          <target state="translated">ExperimentalStdlibApi</target>
        </trans-unit>
        <trans-unit id="c12c682ee6126acad804bc0d465ec31016ca1fff" translate="yes" xml:space="preserve">
          <source>ExperimentalTypeInference</source>
          <target state="translated">ExperimentalTypeInference</target>
        </trans-unit>
        <trans-unit id="f0e4f46aed2ac7c2ff93ed970bdbe71a48bfc4ca" translate="yes" xml:space="preserve">
          <source>ExperimentalUnsignedTypes</source>
          <target state="translated">ExperimentalUnsignedTypes</target>
        </trans-unit>
        <trans-unit id="7aa3684808a420bd5ec930091efde83abe389d26" translate="yes" xml:space="preserve">
          <source>Explicit Conversions</source>
          <target state="translated">明示的な変換</target>
        </trans-unit>
        <trans-unit id="39b1b23e65cf21583e2e4ee9f34c127726f32ce5" translate="yes" xml:space="preserve">
          <source>Explicit return types</source>
          <target state="translated">明示的な戻り値の型</target>
        </trans-unit>
        <trans-unit id="b32cb310fac463afd22fd6fd3737a2207dc234c9" translate="yes" xml:space="preserve">
          <source>Explicitly declaring the return type is &lt;a href=&quot;#explicit-return-types&quot;&gt;optional&lt;/a&gt; when this can be inferred by the compiler:</source>
          <target state="translated">戻り値の型を明示的に宣言することは、これがコンパイラーによって推測できる場合は&lt;a href=&quot;#explicit-return-types&quot;&gt;オプションです&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43336edd2de8a8c0d6ca6212bebd882f4b6d4909" translate="yes" xml:space="preserve">
          <source>Exponentation: &lt;code&gt;pow&lt;/code&gt; (an extension function), &lt;code&gt;sqrt&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;;</source>
          <target state="translated">指数： &lt;code&gt;pow&lt;/code&gt; （拡張関数）、 &lt;code&gt;sqrt&lt;/code&gt; 、 &lt;code&gt;hypot&lt;/code&gt; 、 &lt;code&gt;exp&lt;/code&gt; 、 &lt;code&gt;expm1&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="51b5379cf4a7b819639a6ede1381a5a13b164f83" translate="yes" xml:space="preserve">
          <source>ExportObjCClass</source>
          <target state="translated">ExportObjCClass</target>
        </trans-unit>
        <trans-unit id="43edbf4bd908e79b67863854024df0a7c2323414" translate="yes" xml:space="preserve">
          <source>Exporting dependencies in frameworks</source>
          <target state="translated">フレームワークでの依存関係のエクスポート</target>
        </trans-unit>
        <trans-unit id="5b17190de402201512ee799bb88cd7f8d0a18cf4" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="b2e20d3d831015a9df71cf80fbd82aafb9cb6d98" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;console API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;コンソールAPI&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="6ab1b33548d4fca15fffc5b58c1ec41e7907a41b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSON object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSONオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="e4a6243c9409724b2e58fee6d381c89fa19c64f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval function&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval関数&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="5a8fa21de53c1f3a28b2872d04dfaa83193015b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined property&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;未定義プロパティ&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="0e14fd5fe707f7f567a5aee1be266c99ea9b049d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="abec735cbcc57f96c140390409f054112384559d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e178f9b3c8329a8ac144e4d638b00b44aead423" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="78bf228bd96b7863df8dc0302a649e46544534fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8a5e4a699c98b135404243956f1da06ae6a3c23f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="10f83d0d9f3ccc86a3665754da71ca7079fcc1cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;Body&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;ボディ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f20783e43ed5e6cdee4b24ca5efd181d2a07c885" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="66ff222964356401a7820893d69dd953e4824a2b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1da806b511e98e9a4f6a3f2ae167ef1360a0255" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a2bd067acc6233cd661be4648c3abc2e07636126" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="4e3900fa446a47f9057628dbfc49e11ebfcab28b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;Cache&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;キャッシュ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="bbdbd782d9e88901e1772158661da5e7a3db90bb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4f8c73e9e4d08b66f4014dcbac4bb38df823fd8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7f378c5e9dc1aa9ae0ca6ae667b6ace9b0e3f48d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0dff1e94c348f48305efe1589b113686d4613952" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="4930f5ad3a9da6457e5252472c3ced645ae2cead" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="89ff70f6a73ea4a50c506300b6989950e61f2c2f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e4a925b4141cea624f09f915c771a8b09584d369" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;Client&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;クライアント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="789a754b67eb39328c8c5b301bc2c39a0093fa36" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;Clients&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;クライアント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e777b4982e65bc088b48f0713adbdb8dd5e124fb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="24251d16da841ec785c88c102e9e7e04ab621ddd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9555f96c2658affea0519712bf9618a7526a3cc0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="599721a5d18543535db48150b253ecacb693fcbd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e3eebd70ffb6c151ccc23dfc8ab2b798f64010aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a8bc9d0ca02b4b87cb6ac5dda9e03dc15d4ce13e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="377d9cd673d55abf626add5da125727021158ac1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df395f12d2cf46b2abf0b8dfc447b01f81b1cc95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="fcb317c5366fd47254889133dfb6cadd5186d229" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5c1355046bc22a15b9b555e96ce1465666a40a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b966b2756ee971befb78ff1fc2f7ce0d36241720" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="be2e1a2d74c5dfab6ca0eeda618bc1cf3eb3da95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3e297d588fdf0551d7607ebe1a4dcbb9d8b361fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;DataTransfer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;DataTransfer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="657218ca287c4ab1d651dc874b92d90297881237" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7161d538a8dd045951edca5302e4f4f3b01abe07" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2ce5c44b812f7dd74e252a5c982d37c536143617" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d6b220d67bd5020d5d0a01710584388f12e02103" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="fc6c327e8c193039e557e5dbdd5862092ef6e9d1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c8faab27bc840b65d0f6510393f1dd829a58ba99" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;Event&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;イベント&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="31909a542544ab2a87787bc8a0f41d3fa14236b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b0933aa986371c1e96909886bc002c8809633c57" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="01cc58cefd31c1f25cd29e7299dab0beb838132a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;FileList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;FileList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d954a1747055695b2aa217fbee4e6d492f1823aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="eabde8bb825c4b4670eb79217903e19e64de6c3f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="61fbfd956a594009722cf43bce8d832b25fd78f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df5d9fea1dd397884c321ca5ad54e9b66fa36f0a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="47eb053564cccb602e12d23d81ca75f2907f2615" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7f14bc578acf1650c2af65e1ecf877c248074503" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0f97809f5b83ec31a615da48f7059bb57d24f35a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a4be2038903db95e40459a5b7b894454fe7b369c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="90b22119e6b1b7ee93e4db7c22729bdf5749bffd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;Headers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;ヘッダー&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9fcc8fafc8fcb7e3b46668079b5781f28a479a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;History&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;履歴&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="6d9ef3b736c7f42d0c8861ab0cc6eece785a8618" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="973cbfdbca2c36b7235dfc40f619002608ec7fce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f82954ca62c979f2496ec6c75850738af1a3c33a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d285055d606a76b320c4404abab59ecb8acd058e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="aff6d2005ba74313a48864193ff2ecf7cf78f861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="dd8fedd33e528d064a8c3c9df21aa80a0b282f4d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="129711733d4b366136e86fd6fcbf352f82eecce3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2b219bf877410a2e09d890c9e77587bb983243c8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;Location&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScriptの&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;場所&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="594941baeab3b58f67ecd5c21d0b1e4b40bbc957" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0740f2182dfbdaf8ba83fbd49306c7bbc1161276" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e79c365ce95423c640a10613c9ce3be82f04736d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9e419166cd21b42d675612e45aa1af5c29ade451" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="68291c661b34c0e31166089125357d3815b272d8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="ff03892bef60c1998049aef0de9ee2d17148a16a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="053f12e3979b8f507eece6ee8f2dda7eba1760f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a713be19005a108490c636a26437642fcf666e96" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9dcdfd72585577cb86ed3c56b45dcd29c329a2e2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="502e6200143e319eea72ef7a0d8f3976f09d6554" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="159d4c29526679b4def070ff47f3874ab0445340" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c88b7e5c1859d6b4e116f43a892ec9e83413e2b9" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="ae9ba33271e618704e2556ffd0b4761516dbecf0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4aaf62796642329437174298aebc06b6672bbe2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;Navigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;ナビゲーター&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1fdab215bf657f2971cf9c106d747aa79a0779f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3eed33d131c33790c5648056a06c94987025b918" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f13f74a7460676e529c928964a91f57efc1fb755" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="db9975cc843532c7e71febf7da5b9cdef4013205" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0cab989ab29d81fc606498b1461b54abdb616973" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b4b114eb135375d93d610e89253f0d7f1338c498" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="837e4b2bb71ce6e6d07abaa4817afbd0a686267f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0350ad5d05e21f7ce6c543c4ac253ea6516c4989" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5ce16ccc392741a3c3d2c8e565b8a10724aec773" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2fee1b01d1d6830d156d51f7bc02de375b36492c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3542685f71c53dcb7eadb5604c680f9810ac6991" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b57066c829f4ca9971eba9b6bb3d4bd38b7aea8e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="5accafb6bf29fc4fbec3bd2e054128cb2ba377dd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d4fbaf94b37e485b14b450d8c7247ebb96aa678e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;Plugin&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;プラグイン&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a3fc9a900a38b0133fe2a34587114f7fca726c3a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;PluginArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;PluginArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2819f804c7a52056a59418c1fb2a86167b33fadf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;Range&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;範囲&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3b334cd256f0844989f2a345991c2eebcc56ff6e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;Request&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;リクエスト&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0c52d88a09c46d141a3597b85a9216845f9eb9a1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;Response&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;応答&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="9ce8f42f6b18e9a8b089c9a14ecb5fdbaaea57c6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="785e2f1f7635c086da66db4f3713f206535b9cc7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="051a1286b426f5bec613b4abdcde9fa99f14ad38" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="81d7238d3df9d3b77c30b1ef3e78b1105e083d2a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="f04b9666e3a6dca28299f7846a3b53f766f49396" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7774d99aa383d400d810ee4b809f89e1ba491a62" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8b0a6e7fb9a1b23faeeb1c9113ee6f85cc9c34f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="de7b4fa0a4c4bb3bdeca8e0ae307605fa182a490" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="176f0149ce43b70e00a21793f31c0f4848382dce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e16282d1d93a66e25ec1e4d7ffbe189596d7852d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e5a8b61ef7c19a12dc2bb8afee431431ee113f84" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e7f7e344ee33aaef20de0ecb31899cf93296303" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e0e66a5ffa780d59897c918ac840cd70fa059232" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="0615dc49574b140ded7aa57b87618fffd3b30427" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b0e962fdeeb2551808a6e9aecbfe1a79a9cad559" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="078b1ec9b810dc9d975c22600b9c649cb85e51cf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e08fa2c91c7c018c66a658d4ff9e7de2e687e68f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="abb6726d726b7d58da55bf78975506e3bf0e388b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="30358bc4fb2dfbd2f398bd1c37fe504752cecbad" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="6164bfeb6c1430f3b51271da676a9e9d47ffdd01" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d1783b94978b6506971caef84995623354643256" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTests&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTest&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="efac11d0375fcac4e195ad460f2e9c2b8cc9dad1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c2072d21623d4729dc79f90145320c926f93f51b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="794b61c8f72bac8f0b9d3fd2652c80ce1d80694d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7c829e3628424e61dcc945a5462eea950f2d2c1d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="aaad2c9354613395e931347fed2604c7f33f44fd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="d0964c6b87e8f3595e610f46c83d621e45c94626" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;Screen&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;画面&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7ab5bcdd6737147c7f9650419d9fa1d946080edd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="caf29a99f800ee4df1f509978fc9374661efadb6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;Slotable&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;Slotable&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="c7b1cd1569fb790a7933995806002a84ef72115a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;Storage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;ストレージ&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="df5f09f1c1d114ab78d0ed32fdc63bec2c70f7b2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="1db3c227625f52f06785d52413b5c48e54ff34ef" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="debcb2b5a5a08272f50dfab5ecbad48428a5713b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="51420fdb3827a705b67cb55f2acb6f7f7c1628c5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="e536765260fd33a0fb1c970d29b3f7ae1e52aa5b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;Touch&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;Touch&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a047f1c4d3aaa1f205a636e1fb3c697f871596e3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="1b6755f3767c0926efceb18412b59e78e5ddd7e6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="a1bf59f10e3be594d883bfdf2a6469362f387868" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="3dfee26dedf689461470f9f5c52687188126f29e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b57fa61d6662e31034b82d1030292fd5e29802f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="50101016b89badc5c44b4f57e7dd6fbc42c3d595" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="982e986db2fb851b76bb8066b72041ced1b81d88" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="2e48d5873d97381debc1ed63a5d1f151e5b8c6cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="181a8619cf89cb42e0df69afa8bc974fd83e4bf2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="736f21bc1ba71124f7e6d21a43012838c88762f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="8c22a91d08cf479408a96c4aff1215bc647b37a5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="24d413e2f6ddca096f6b75605cc7a8505e87bed0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="720c4b07bf8a67700ee7fdae70cb56aed58d51d6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="dbdaf28de983adc6f6372cfce201b7e91dcab861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="b44fb2210010be4cea8c8bd9b7557abeacbf1323" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="edd5ec34a8b69af5a791317e7719446b9d28ac71" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="12ded232807775d1c78389294216756b150cc1f0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="29a69a8bf1473782da6fb3407ef2c139a6e6233d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="02de36425e15ec92f0499e15152296de14a85669" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="7b37415bc97597a600acdaac8f6aa4588e841914" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt;をKotlinに公開します</target>
        </trans-unit>
        <trans-unit id="169719bb7fe6c072f51b022f45191170db2da5b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Math object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Mathオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="af12a69227d7123455a07f62644ac1f53f5fc9b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promiseオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="e9eb87eff6a035d83115bfb1ec018f9bc5372b8b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExp object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExpオブジェクト&lt;/a&gt;をKotlinに公開します。</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="f1c19d6b5edc0f215409941d6605832d490f7a6e" translate="yes" xml:space="preserve">
          <source>Expression body formatting</source>
          <target state="translated">式本文の書式設定</target>
        </trans-unit>
        <trans-unit id="8250f28d9a39afd3e8181e48d1deb5e48d360b03" translate="yes" xml:space="preserve">
          <source>Expressions using values of &lt;code&gt;dynamic&lt;/code&gt; type are translated to JavaScript &quot;as is&quot;, and do not use the Kotlin operator conventions. The following operators are supported:</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; タイプの値を使用する式は「現状のまま」JavaScriptに変換され、Kotlin演算子の規則を使用しません。次の演算子がサポートされています。</target>
        </trans-unit>
        <trans-unit id="8eb6bfee0bd7f9803c91c54c8e8b8b54210eb10e" translate="yes" xml:space="preserve">
          <source>ExtendableEventInit</source>
          <target state="translated">ExtendableEventInit</target>
        </trans-unit>
        <trans-unit id="6a0d6c93904de6a1cc9d0c587fd4c50c1053901f" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEventInit</source>
          <target state="translated">ExtendableMessageEventInit</target>
        </trans-unit>
        <trans-unit id="d83a59dce7cd16ba52b0e73db158eb39b8977bdb" translate="yes" xml:space="preserve">
          <source>Extending JavaScript classes</source>
          <target state="translated">JavaScriptのクラスを拡張する</target>
        </trans-unit>
        <trans-unit id="0d6d521c48a1ba72b1626fab7ee2b08c70405da7" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="5e41da74dacb9cfc137f741cb7062c82eaab0d55" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="e6ce257aad19fe0416795a1c9aadc67e8ed873e3" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="be3051f954b68657a9cbdc25d786b4ff25eff1c0" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">正規表現がサポートしている場合に、名前で一致するグループを取得する方法を導入することにより、&lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt;を拡張します。</target>
        </trans-unit>
        <trans-unit id="d16da02113a4ec75748867c4632e26a2f7b7bc45" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value less than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以下の任意の他の値よりも値。</target>
        </trans-unit>
        <trans-unit id="cbb9ec2258d4e2b1504fbffe64af72ec3ff079e0" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value greater than any other value.</source>
          <target state="translated">所与延び&lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;コンパレータ&lt;/a&gt;考慮null許容値の比較に非NULL可能値の &lt;code&gt;null&lt;/code&gt; 以外の値よりも大きい値を。</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="bc56dc0b9c671805d3fa3254212af0b6ec6d4765" translate="yes" xml:space="preserve">
          <source>Extension Functions</source>
          <target state="translated">拡張機能</target>
        </trans-unit>
        <trans-unit id="07d42748298f0d67ded63b428e89231e8cc38745" translate="yes" xml:space="preserve">
          <source>Extension Properties</source>
          <target state="translated">拡張プロパティ</target>
        </trans-unit>
        <trans-unit id="f3a349da9b92423626eca70230c45e7f230c41a4" translate="yes" xml:space="preserve">
          <source>Extension and member functions</source>
          <target state="translated">拡張機能とメンバー機能</target>
        </trans-unit>
        <trans-unit id="0508e77219f46be972ce3c02c3d431e8dfa41ced" translate="yes" xml:space="preserve">
          <source>Extension functions</source>
          <target state="translated">拡張機能</target>
        </trans-unit>
        <trans-unit id="c8264eafd9b93a89477b0af2f3e72bde5f7f0098" translate="yes" xml:space="preserve">
          <source>Extension functions are explained in &lt;a href=&quot;extensions&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">拡張機能については&lt;a href=&quot;extensions&quot;&gt;、独自のセクションで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="2d2a44dee5f51576e0e165d74f152ef76b696d38" translate="yes" xml:space="preserve">
          <source>Extension functions providing querying operations for collections (eager) and sequences (lazy).</source>
          <target state="translated">コレクション(eager)とシーケンス(lazy)のクエリ操作を提供する拡張関数です。</target>
        </trans-unit>
        <trans-unit id="1fe77a025e03b7c1d219475308773f2eb67f5ea0" translate="yes" xml:space="preserve">
          <source>Extension functions/properties</source>
          <target state="translated">拡張機能/プロパティ</target>
        </trans-unit>
        <trans-unit id="6fbafd05c05dff63bd87c3c487287decd1a283b0" translate="yes" xml:space="preserve">
          <source>Extension receiver of an extension function or property.</source>
          <target state="translated">拡張機能またはプロパティの拡張レシーバー。</target>
        </trans-unit>
        <trans-unit id="01085898b3fab1a22bc2f04ad759a96cacb2e826" translate="yes" xml:space="preserve">
          <source>ExtensionFunctionType</source>
          <target state="translated">ExtensionFunctionType</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="65823204317e74b224cb6b2cce660c01bb0fce85" translate="yes" xml:space="preserve">
          <source>Extensions are resolved &lt;strong&gt;statically&lt;/strong&gt;</source>
          <target state="translated">拡張機能は&lt;strong&gt;静的に&lt;/strong&gt;解決されます&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9850a2bfef7f87f77e79f50f16de67a4437087" translate="yes" xml:space="preserve">
          <source>Extensions declared as members can be declared as &lt;code&gt;open&lt;/code&gt; and overridden in subclasses. This means that the dispatch of such functions is virtual with regard to the dispatch receiver type, but static with regard to the extension receiver type.</source>
          <target state="translated">メンバーとして宣言された拡張機能は、 &lt;code&gt;open&lt;/code&gt; として宣言され、サブクラスでオーバーライドできます。つまり、このような関数のディスパッチはディスパッチレシーバータイプに関しては仮想ですが、拡張レシーバータイプに関しては静的です。</target>
        </trans-unit>
        <trans-unit id="8e6d1c8a997cd22ea827a61962ef748d5ed5ca48" translate="yes" xml:space="preserve">
          <source>Extensions do not actually modify classes they extend. By defining an extension, you do not insert new members into a class, but merely make new functions callable with the dot-notation on variables of this type.</source>
          <target state="translated">拡張機能は、拡張するクラスを実際に変更することはありません。拡張機能を定義することで、新しいメンバをクラスに挿入するのではなく、単にこの型の変数にドット記法で新しい関数を呼び出し可能にするだけです。</target>
        </trans-unit>
        <trans-unit id="2593a8dfc13c7c0c959ccdc515619ba9d1c8d073" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; ライブラリによって提供される&lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlinリフレクションの&lt;/a&gt;拡張機能。</target>
        </trans-unit>
        <trans-unit id="262319f6e6a669249cf95f667b1fd0fa2e5c350e" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; ライブラリによって提供される&lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlinリフレクションの&lt;/a&gt;拡張機能。</target>
        </trans-unit>
        <trans-unit id="49832a1ebdf4f5668682a13c2f151f8e1267195f" translate="yes" xml:space="preserve">
          <source>Extensions for External Classes</source>
          <target state="translated">外部クラスの拡張機能</target>
        </trans-unit>
        <trans-unit id="5f228be09712a15893b5d848c62e3c657711b680" translate="yes" xml:space="preserve">
          <source>Extensions for JDK classes making it convenient to work with files, IO, and threading.</source>
          <target state="translated">ファイル、IO、スレッドを使った作業を便利にするJDKクラスのための拡張機能。</target>
        </trans-unit>
        <trans-unit id="4610d13ada7dc94c37cb8c0d288ed51a8b59020e" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedInputStream</source>
          <target state="translated">java.io.BufferedInputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="90d18d9176044d4704cc79db47128df70dcfac58" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedReader</source>
          <target state="translated">java.io.BufferedReaderの拡張機能</target>
        </trans-unit>
        <trans-unit id="c9a256ac8d8337e3986435759ce63b670611d314" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.File</source>
          <target state="translated">java.io.Fileの拡張機能</target>
        </trans-unit>
        <trans-unit id="353d555a82b35fa53856f04bb4a9788692ddcdaa" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.InputStream</source>
          <target state="translated">java.io.InputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="7c866a3221824bca9b7f5d4599a0c9dc84bab82f" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.OutputStream</source>
          <target state="translated">java.io.OutputStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="11ab0c0a7f587ef465def37cfdc1deb1b4be69ba" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Reader</source>
          <target state="translated">java.io.Readerの拡張機能</target>
        </trans-unit>
        <trans-unit id="ddccd6f98474eb5b6f85a7e011a8615f58ab99ac" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Writer</source>
          <target state="translated">java.io.Writer用の拡張機能</target>
        </trans-unit>
        <trans-unit id="910af862461d3bd30ea9ce035af6e32975f3ffa5" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Appendable</source>
          <target state="translated">java.lang.Appendable用の拡張機能</target>
        </trans-unit>
        <trans-unit id="5d734df1d86332fe5c1c0883b237481868a6eb45" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Class</source>
          <target state="translated">java.lang.Classの拡張機能</target>
        </trans-unit>
        <trans-unit id="7dfb388d369e5267e4e1d8c071143d790f1da0a9" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.StringBuilder</source>
          <target state="translated">java.lang.StringBuilder用の拡張機能</target>
        </trans-unit>
        <trans-unit id="42a7e63663d54d93bcac2363d5f99b205132dcb1" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.ThreadLocal</source>
          <target state="translated">java.lang.ThreadLocal の拡張機能</target>
        </trans-unit>
        <trans-unit id="e0d33457d7c5ae07736459433ab7863dd2d23048" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Constructor</source>
          <target state="translated">java.lang.reflect.Constructor の拡張機能</target>
        </trans-unit>
        <trans-unit id="52860746d7cb86bbffcd7d48faaa9614487e2238" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Field</source>
          <target state="translated">java.lang.reflect.Fieldの拡張機能</target>
        </trans-unit>
        <trans-unit id="18e154fc99122dceb560cb89e50cd85317a5ec79" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Method</source>
          <target state="translated">java.lang.reflect.Methodの拡張機能</target>
        </trans-unit>
        <trans-unit id="4d57a6ee49879007c6f1c94860855f9cab702a1f" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigDecimal</source>
          <target state="translated">java.math.BigDecimalの拡張機能</target>
        </trans-unit>
        <trans-unit id="0418015890da6d28427d023d4a378a41e7681950" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigInteger</source>
          <target state="translated">java.math.BigIntegerの拡張機能</target>
        </trans-unit>
        <trans-unit id="fe35e40777eea67159ce5cc1fdd71d4c5d0d0ce1" translate="yes" xml:space="preserve">
          <source>Extensions for java.net.URL</source>
          <target state="translated">java.net.URL用の拡張機能</target>
        </trans-unit>
        <trans-unit id="97e069f223cf669139046c0679a9b909b863d264" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Enumeration</source>
          <target state="translated">java.util.Enumerationの拡張機能</target>
        </trans-unit>
        <trans-unit id="6a90de809fe794a79ec52bdf3bd3fa37c93d3dea" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Random</source>
          <target state="translated">java.util.Randomの拡張機能</target>
        </trans-unit>
        <trans-unit id="3f3041f4748454781df8851b55d5eccdd80a6c37" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Timer</source>
          <target state="translated">java.util.Timerの拡張機能</target>
        </trans-unit>
        <trans-unit id="86c125f61aa798d8e570c84873c21f581edee4b6" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.ConcurrentMap</source>
          <target state="translated">java.util.concurrent.ConcurrentMapの拡張機能</target>
        </trans-unit>
        <trans-unit id="7c4cef4cdc47c5a0bf19e79d3eb4fa62d21ca526" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.Lock</source>
          <target state="translated">java.util.concurrent.lock.Lockの拡張機能</target>
        </trans-unit>
        <trans-unit id="b485fb17804e0e991120066ac20569bfe5c26a3c" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.ReentrantReadWriteLock</source>
          <target state="translated">java.util.concurrent.lock.ReentrantReadWriteLockの拡張機能</target>
        </trans-unit>
        <trans-unit id="414cada964acd8bd9e1e6c02985aebf6df173ad7" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.regex.Pattern</source>
          <target state="translated">java.util.regex.Patternの拡張機能</target>
        </trans-unit>
        <trans-unit id="757d6146e2012199e6bb842d802f53ef4ff91fae" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.DoubleStream</source>
          <target state="translated">java.util.stream.DoubleStream用の拡張機能</target>
        </trans-unit>
        <trans-unit id="2730f9b1d95c9b0be067fdfe8d1bf63f04d66c36" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.IntStream</source>
          <target state="translated">java.util.stream.IntStreamの拡張機能</target>
        </trans-unit>
        <trans-unit id="a27ac102df0c42a230129dd84535df76fbd245be" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.LongStream</source>
          <target state="translated">java.util.stream.LongStream用の拡張機能</target>
        </trans-unit>
        <trans-unit id="64be01bf05722c57090d4f50f3ce593da917cb7f" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.Stream</source>
          <target state="translated">java.util.stream.Streamの拡張機能</target>
        </trans-unit>
        <trans-unit id="ffd106e43f1f60a473e9c938c997ed060ed8c485" translate="yes" xml:space="preserve">
          <source>Extensions for kotlin.sequences.Sequence</source>
          <target state="translated">kotlin.sequence.Sequence の拡張機能</target>
        </trans-unit>
        <trans-unit id="f99ea873dfea775479c335eab5803cfde34107d6" translate="yes" xml:space="preserve">
          <source>Extensions utilize the same &lt;a href=&quot;visibility-modifiers&quot;&gt;visibility of other entities&lt;/a&gt; as regular functions declared in the same scope would. For example:</source>
          <target state="translated">拡張機能は、同じスコープで宣言された通常の関数と同じように&lt;a href=&quot;visibility-modifiers&quot;&gt;、他のエンティティの可視性を&lt;/a&gt;利用します。例えば：</target>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="b218d608576f8d28f4a7419eec6029fe3056ab1d" translate="yes" xml:space="preserve">
          <source>External interfaces have some restrictions:</source>
          <target state="translated">外部インターフェースにはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="fbe670fe71f260f3b9c49599ce41e0605a44d7d5" translate="yes" xml:space="preserve">
          <source>External parcelers can be applied using &lt;code&gt;@TypeParceler&lt;/code&gt; or &lt;code&gt;@WriteWith&lt;/code&gt; annotations:</source>
          <target state="translated">&lt;code&gt;@TypeParceler&lt;/code&gt; または &lt;code&gt;@WriteWith&lt;/code&gt; アノテーションを使用して、外部パーセルを適用できます。</target>
        </trans-unit>
        <trans-unit id="ae31299de3fd40f30a779befa5b69d1b665ecee7" translate="yes" xml:space="preserve">
          <source>ExternalObjCClass</source>
          <target state="translated">ExternalObjCClass</target>
        </trans-unit>
        <trans-unit id="8c3e992beac9ce57c5d18399f9649cfe6776dc02" translate="yes" xml:space="preserve">
          <source>Extract function refactoring</source>
          <target state="translated">抽出関数リファクタリング</target>
        </trans-unit>
        <trans-unit id="d7e4092f1ada90ff78c5ffbaece8f1d9c9fe883e" translate="yes" xml:space="preserve">
          <source>Extracts the key of an &lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;要素&lt;/a&gt;のキーを抽出します。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="987f4e96caf5df1037efbd4ee25756938e9da844" translate="yes" xml:space="preserve">
          <source>FIELD</source>
          <target state="translated">FIELD</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="58f8d703301dc080dbc5ad227fc9eb9a6907792a" translate="yes" xml:space="preserve">
          <source>FINAL_QUOTE_PUNCTUATION</source>
          <target state="translated">FINAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="3f6103eba0b588dc2c4ca41ac7c6811788d10af9" translate="yes" xml:space="preserve">
          <source>FORMAT</source>
          <target state="translated">FORMAT</target>
        </trans-unit>
        <trans-unit id="cbbe4ab96942b98eb0abdac26822dc1d38333a1f" translate="yes" xml:space="preserve">
          <source>FS</source>
          <target state="translated">FS</target>
        </trans-unit>
        <trans-unit id="63425456f14a800f08b688a005e2e85f84241751" translate="yes" xml:space="preserve">
          <source>FUNCTION</source>
          <target state="translated">FUNCTION</target>
        </trans-unit>
        <trans-unit id="9b310938807ae01c09739cc6dfb16a87ccdf31c5" translate="yes" xml:space="preserve">
          <source>Factory functions</source>
          <target state="translated">工場機能</target>
        </trans-unit>
        <trans-unit id="6a870f1db04a4fcdfc79d2c09cb8d2638f09b148" translate="yes" xml:space="preserve">
          <source>Fails the build if errors are detected during the compilation</source>
          <target state="translated">コンパイル中にエラーが検出された場合、ビルドに失敗します。</target>
        </trans-unit>
        <trans-unit id="d7376abef46b61b2c0e7f3ea50e99785a96f7b70" translate="yes" xml:space="preserve">
          <source>Failure to call either method will result in the iteration terminating with a failed state</source>
          <target state="translated">いずれかのメソッドの呼び出しに失敗すると、失敗した状態で反復処理が終了します。</target>
        </trans-unit>
        <trans-unit id="cf4e939a4bc9f1f8a5ed344753387fde48e4f393" translate="yes" xml:space="preserve">
          <source>Fan-in</source>
          <target state="translated">Fan-in</target>
        </trans-unit>
        <trans-unit id="68d396bc4617b24173f6299d8899670495af2a75" translate="yes" xml:space="preserve">
          <source>Fan-out</source>
          <target state="translated">Fan-out</target>
        </trans-unit>
        <trans-unit id="3985dc2113f752ea3d5ba01f6f5ea23216fd7920" translate="yes" xml:space="preserve">
          <source>Feature Releases and Incremental Releases</source>
          <target state="translated">フィーチャーリリースとインクリメンタルリリース</target>
        </trans-unit>
        <trans-unit id="c785d69b047aae15681a82c14fb44770ecc346fb" translate="yes" xml:space="preserve">
          <source>Feature releases often add new features and may remove or change previously deprecated ones. Feature graduation from experimental to stable also happens in feature releases.</source>
          <target state="translated">フィーチャーリリースでは、新機能が追加されたり、以前に非推奨とされた機能が削除されたり変更されたりすることがよくあります。実験的な機能から安定版への機能の移行も機能リリースで行われます。</target>
        </trans-unit>
        <trans-unit id="fc8d8a130e59cea8845a112b8bb13aff241f58c0" translate="yes" xml:space="preserve">
          <source>FetchEventInit</source>
          <target state="translated">FetchEventInit</target>
        </trans-unit>
        <trans-unit id="2b91e715d2d02f2af55c3b002a28880144e2035c" translate="yes" xml:space="preserve">
          <source>Field, including property's backing field</source>
          <target state="translated">物件の裏地を含む畑</target>
        </trans-unit>
        <trans-unit id="af1f1743894e9d2075372f912106995709044999" translate="yes" xml:space="preserve">
          <source>Fields cannot be declared directly in Kotlin classes. However, when a property needs a backing field, Kotlin provides it automatically. This backing field can be referenced in the accessors using the &lt;code&gt;field&lt;/code&gt; identifier:</source>
          <target state="translated">Kotlinクラスでフィールドを直接宣言することはできません。ただし、プロパティがバッキングフィールドを必要とする場合、Kotlinはそれを自動的に提供します。このバッキングフィールドは、 &lt;code&gt;field&lt;/code&gt; 識別子を使用してアクセサーで参照できます。</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="0b2ab472c98d63ec948dc1ae7415adc951da0e82" translate="yes" xml:space="preserve">
          <source>File I/O</source>
          <target state="translated">ファイル入出力</target>
        </trans-unit>
        <trans-unit id="c244fb903631a89023331dc332d1f20761fe92c7" translate="yes" xml:space="preserve">
          <source>File annotations</source>
          <target state="translated">ファイルの注釈</target>
        </trans-unit>
        <trans-unit id="4795bd822544fa93a0e6b59333ebc039830614e8" translate="yes" xml:space="preserve">
          <source>File annotations are placed after the file comment (if any), before the &lt;code&gt;package&lt;/code&gt; statement, and are separated from &lt;code&gt;package&lt;/code&gt; with a blank line (to emphasize the fact that they target the file and not the package).</source>
          <target state="translated">ファイルの注釈は、ファイルのコメント（ある場合）の後、 &lt;code&gt;package&lt;/code&gt; ステートメントの前に配置され、 &lt;code&gt;package&lt;/code&gt; とは空白行で区切られます（パッケージではなくファイルを対象としていることを強調するため）。</target>
        </trans-unit>
        <trans-unit id="11d00030429cf440a0eed93048e18bcf0f608864" translate="yes" xml:space="preserve">
          <source>FileAlreadyExistsException</source>
          <target state="translated">FileAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="dcbfb4b9458e6276e2eaed8e1c3a90abe3a03e22" translate="yes" xml:space="preserve">
          <source>FileList</source>
          <target state="translated">FileList</target>
        </trans-unit>
        <trans-unit id="1eeed9fc8ac08cae63efd3e6cfb86688ca1eb09e" translate="yes" xml:space="preserve">
          <source>FilePropertyBag</source>
          <target state="translated">FilePropertyBag</target>
        </trans-unit>
        <trans-unit id="24e9abbe8a8774b06b669d519dc39a1fc22f37ef" translate="yes" xml:space="preserve">
          <source>FileReaderSync</source>
          <target state="translated">FileReaderSync</target>
        </trans-unit>
        <trans-unit id="f2c382539a871cd69dfa9067309de203426794f4" translate="yes" xml:space="preserve">
          <source>FileSystemException</source>
          <target state="translated">FileSystemException</target>
        </trans-unit>
        <trans-unit id="2019cdf50d33b987fa3917d1d7ff358ce86d7ed1" translate="yes" xml:space="preserve">
          <source>FileTreeWalk</source>
          <target state="translated">FileTreeWalk</target>
        </trans-unit>
        <trans-unit id="9d8ed3c9c34c5bd81bf0d6039e6207425141909a" translate="yes" xml:space="preserve">
          <source>FileWalkDirection</source>
          <target state="translated">FileWalkDirection</target>
        </trans-unit>
        <trans-unit id="851077fa3616a78308f5defffcf72a0cd04b8626" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="b9e3c8271aa2538c927e4314da56ddc22303ee52" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">指定されたのサブレンジ塗りつぶし &lt;code&gt;UByte&lt;/code&gt; &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列&lt;/a&gt;から始まっ&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;たfromIndexの&lt;/a&gt;包括的で終了&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndexのを&lt;/a&gt;ランダムUBytesとの独占を。</target>
        </trans-unit>
        <trans-unit id="85987c9dd2c96e8f6547d6f683296a300a545e0f" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndexで&lt;/a&gt;始まり、toIndexで終わる指定されたバイト&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列の&lt;/a&gt;部分範囲をランダムなバイトで&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;埋め&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3d9d39692d77315c88a1dfa964cb0fa1189bb377" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndexで&lt;/a&gt;始まり、toIndexで終わる指定されたバイト&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;配列の&lt;/a&gt;部分範囲をランダムなバイトで&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;埋め&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5c0dc43415d67e026e79beb225f338b213ba730c" translate="yes" xml:space="preserve">
          <source>Fills original array with the provided value.</source>
          <target state="translated">指定された値で元の配列を埋めます。</target>
        </trans-unit>
        <trans-unit id="89e798e1dda4e5dac33b7f11bf49290b106046be" translate="yes" xml:space="preserve">
          <source>Fills the list with the provided &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;値で&lt;/a&gt;リストを埋めます。</target>
        </trans-unit>
        <trans-unit id="77be4617fe7494fb74087de5e016de347d74a0ab" translate="yes" xml:space="preserve">
          <source>Fills the provided &lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;array&lt;/a&gt; or creates new array of the same type and fills it with the elements of this collection.</source>
          <target state="translated">提供された&lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;配列&lt;/a&gt;を埋めるか、同じタイプの新しい配列を作成し、このコレクションの要素で埋めます。</target>
        </trans-unit>
        <trans-unit id="9ce7a3ae6b4c588da234b20207da1a94d501af06" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="0d55dfbc1b184e2a8dd831cfa97e75d935c52da9" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定されたバイト&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋めて返します。</target>
        </trans-unit>
        <trans-unit id="d25169886a4c44c520ccc551bbc86ac14323c755" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋め、それを返します。</target>
        </trans-unit>
        <trans-unit id="aebe03633eefd6ce76234594610876a4e1a0dc69" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">指定された符号なしバイト&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;配列&lt;/a&gt;をランダムなバイトで埋め、それを返します。</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="fa9054484d7a6e039e4277de5a9419714828fdfe" translate="yes" xml:space="preserve">
          <source>Filtering a list</source>
          <target state="translated">リストのフィルタリング</target>
        </trans-unit>
        <trans-unit id="9417e901507e0a69cfe6080357ed9c0901d63f40" translate="yes" xml:space="preserve">
          <source>Filtering by module maps</source>
          <target state="translated">モジュールマップによるフィルタリング</target>
        </trans-unit>
        <trans-unit id="51e63b81d7e9adf4e24abe5cfd7daefd74151793" translate="yes" xml:space="preserve">
          <source>Filtering by predicate</source>
          <target state="translated">述語によるフィルタリング</target>
        </trans-unit>
        <trans-unit id="db13d2fc62892a93874264f328534fe964c4ba34" translate="yes" xml:space="preserve">
          <source>Filtering headers by globs</source>
          <target state="translated">globs によるヘッダのフィルタリング</target>
        </trans-unit>
        <trans-unit id="b0aa5e3d2d9e2ddb22fa5005592a03e1e3622309" translate="yes" xml:space="preserve">
          <source>Filtering is one of the most popular tasks in the collection processing. In Kotlin, filtering conditions are defined by &lt;em&gt;predicates&lt;/em&gt; &amp;ndash; lambda functions that take a collection element and return a boolean value: &lt;code&gt;true&lt;/code&gt; means that the given element matches the predicate, &lt;code&gt;false&lt;/code&gt; means the opposite.</source>
          <target state="translated">フィルタリングは、コレクション処理で最も人気のあるタスクの1つです。Kotlinには、フィルタリング条件は以下のように定義されている&lt;em&gt;述語&lt;/em&gt;：コレクション要素を取り、ブール値を返すラムダ関数- &lt;code&gt;true&lt;/code&gt; 指定された要素が述語に一致することを意味し、 &lt;code&gt;false&lt;/code&gt; 手段反対を。</target>
        </trans-unit>
        <trans-unit id="28660880ee5a7abb3d5dc99a669dacae6c5950ae" translate="yes" xml:space="preserve">
          <source>Finally the last factory method version allows customizing the binary name.</source>
          <target state="translated">最後のファクトリーメソッドのバージョンでは、バイナリ名をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="446f94faa289cad0a11793f2097a9a3e254ace94" translate="yes" xml:space="preserve">
          <source>Finally we need to define an Application class. As Spring Boot looks for a public static main method, we need to define this in Kotlin. It could be done with the &lt;em&gt;@JvmStatic&lt;/em&gt; annotation and a companion object but here we prefer using a &lt;a href=&quot;../reference/functions&quot;&gt;top-level function&lt;/a&gt; defined outside Application class since it leads to more concise and clean code.</source>
          <target state="translated">最後に、Applicationクラスを定義する必要があります。Spring Bootがpublic static mainメソッドを探すので、これをKotlinで定義する必要があります。&lt;em&gt;@JvmStatic&lt;/em&gt;アノテーションとコンパニオンオブジェクトを使用して&lt;em&gt;実行&lt;/em&gt;できますが、ここでは、より簡潔でクリーンなコードにつながるため、Applicationクラスの外部で定義された&lt;a href=&quot;../reference/functions&quot;&gt;トップレベル関数&lt;/a&gt;を使用することをお&lt;em&gt;勧めし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="593295ace88e10040cffe008ef4c1167513b06bc" translate="yes" xml:space="preserve">
          <source>Finally, &lt;em&gt;in&lt;/em&gt;-checks have no overhead either:</source>
          <target state="translated">最後に&lt;em&gt;、&lt;/em&gt; -checksにはオーバーヘッドもありません。</target>
        </trans-unit>
        <trans-unit id="4ec4c9df9d82f5b8afd6529bbb9a8e7376248508" translate="yes" xml:space="preserve">
          <source>Finally, the API is either removed entirely, or hidden (&lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;) from code, so its usages look like unresolved references, while the API remains in the compiled code preserving binary compatibility with previously compiled code.</source>
          <target state="translated">最後に、APIは完全に削除されるか、コードから非表示（&lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;）になるため、APIはコンパイル済みコード内に残り、APIは以前にコンパイルされたコードとのバイナリ互換性を維持します。</target>
        </trans-unit>
        <trans-unit id="19ea1ed6fcf9d758b3f3804a9abd699e53d6d484" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that apply such operations to collection elements from right to left - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt;&lt;code&gt;reduceRightIndexed()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt;&lt;code&gt;foldRightIndexed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最後に、このような操作をコレクション要素に右から左に適用する関数、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt; &lt;code&gt;reduceRightIndexed()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt; &lt;code&gt;foldRightIndexed()&lt;/code&gt; があり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f53948bf71af7c505a51fa698490804ab1131cd8" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that simply test a predicate against collection elements:</source>
          <target state="translated">最後に、単純にコレクション要素に対して述語をテストする関数があります。</target>
        </trans-unit>
        <trans-unit id="c1a8c5296921837c075cfaeca5d67cd0a04dbeda" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that lets you produce sequence elements one by one or by chunks of arbitrary sizes &amp;ndash; the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt;&lt;code&gt;sequence()&lt;/code&gt;&lt;/a&gt; function. This function takes a lambda expression containing calls of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt;&lt;code&gt;yield()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt;&lt;code&gt;yieldAll()&lt;/code&gt;&lt;/a&gt; functions. They return an element to the sequence consumer and suspend the execution of &lt;code&gt;sequence()&lt;/code&gt; until the next element is requested by the consumer. &lt;code&gt;yield()&lt;/code&gt; takes a single element as an argument; &lt;code&gt;yieldAll()&lt;/code&gt; can take an &lt;code&gt;Iterable&lt;/code&gt; object, an &lt;code&gt;Iterator&lt;/code&gt;, or another &lt;code&gt;Sequence&lt;/code&gt;. A &lt;code&gt;Sequence&lt;/code&gt; argument of &lt;code&gt;yieldAll()&lt;/code&gt; can be infinite. However, such a call must be the last: all subsequent calls will never be executed.</source>
          <target state="translated">最後に、シーケンス要素を1つずつ、または任意のサイズのチャンクで生成できる関数があります。sequence &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt; &lt;code&gt;sequence()&lt;/code&gt; &lt;/a&gt;関数です。この機能は、コールを含有するラムダ式かかり&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt; &lt;code&gt;yield()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt; &lt;code&gt;yieldAll()&lt;/code&gt; &lt;/a&gt;関数を。それらはシーケンスコンシューマに要素を返し、コンシューマによって次の要素が要求されるまで、 &lt;code&gt;sequence()&lt;/code&gt; の実行を一時停止します。 &lt;code&gt;yield()&lt;/code&gt; は引数として単一の要素を取ります。 &lt;code&gt;yieldAll()&lt;/code&gt; は、 &lt;code&gt;Iterable&lt;/code&gt; オブジェクト、 &lt;code&gt;Iterator&lt;/code&gt; 、または別の &lt;code&gt;Sequence&lt;/code&gt; を取ることができます。 &lt;code&gt;Sequence&lt;/code&gt; の引数 &lt;code&gt;yieldAll()&lt;/code&gt; 無限にすることができます。ただし、そのような呼び出しは最後でなければなりません。それ以降の呼び出しはすべて実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="39afcd9bc5f82d8e31f2fbcbc90b5a411497578c" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that returns a new &lt;code&gt;List&lt;/code&gt; containing the collection elements in a random order - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt;&lt;code&gt;shuffled()&lt;/code&gt;&lt;/a&gt;. You can call it without arguments or with a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">最後に、コレクション要素をランダムな順序で含む新しい &lt;code&gt;List&lt;/code&gt; を返す関数があります&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt; &lt;code&gt;shuffled()&lt;/code&gt; &lt;/a&gt;。引数なしで、または&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="bee211daf716d379de0eb2d0c93c568e44163eef" translate="yes" xml:space="preserve">
          <source>Finally, there is a useful &lt;code&gt;forEach()&lt;/code&gt; function that lets you automatically iterate a collection and execute the given code for each element. So, the same example would look like this:</source>
          <target state="translated">最後に、コレクションを自動的に反復処理し、各要素に対して指定されたコードを実行できる便利な &lt;code&gt;forEach()&lt;/code&gt; 関数があります。したがって、同じ例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="a531cdec3d49eab2a8812ff6da172cf703efe854" translate="yes" xml:space="preserve">
          <source>Finally, to customize the representation of elements themselves, provide the &lt;code&gt;transform&lt;/code&gt; function.</source>
          <target state="translated">最後に、要素自体の表現をカスタマイズするには、 &lt;code&gt;transform&lt;/code&gt; 機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f1a1903657c0708c2f71083344aa00ede3a0dc0c" translate="yes" xml:space="preserve">
          <source>Finally, you can apply a transformation to the returned ranges right away. To do this, provide the transformation as a lambda function when calling &lt;code&gt;windowed()&lt;/code&gt;.</source>
          <target state="translated">最後に、返された範囲にすぐに変換を適用できます。これを行うには、 &lt;code&gt;windowed()&lt;/code&gt; を呼び出すときにラムダ関数として変換を提供します。</target>
        </trans-unit>
        <trans-unit id="0ca7c890de7b104b7c385cda2f789cbcd93f1e51" translate="yes" xml:space="preserve">
          <source>Find how &lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Primitive Types in Kotlin&lt;/a&gt; are mapped to C</source>
          <target state="translated">&lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Kotlinのプリミティブ型が&lt;/a&gt; Cにどのようにマップされているかを確認する</target>
        </trans-unit>
        <trans-unit id="91ab1b7db4dcce3cefb5d70f34a89d81dabe88d8" translate="yes" xml:space="preserve">
          <source>FindBugs (&lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt;)</source>
          <target state="translated">FindBugs（ &lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="229bcc4f101c8a8f98260f713325ebf63c5df391" translate="yes" xml:space="preserve">
          <source>Finding element positions</source>
          <target state="translated">要素の位置を見つける</target>
        </trans-unit>
        <trans-unit id="f36d389c4a89754dda5dec648cbd01607dc377cb" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="c5d2045460fd1c1eb9867fb6f91988c743842d3d" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="f9adcfa727ac2114339b9ea89540b3052d79d448" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最初の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="7fdcfe57198b5ce268c0465263ebea77712f40d7" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="d05669208f213fea94073f4b7dfd2030e95bdabd" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="87f37810b16a7e86468c6d165c040456f1de55a2" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="63b9588d1e0c8b5a5e365863e579eb40d20febad" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="bc01891ab879b9ee334a5a559c564aacb3e76b2d" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンスで指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかが最初に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="1983c1dc07932a0bc85d94b95f7ec0d26408fe92" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかの最初の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="674c6c9c3a08b1c18f1e984ee189fd45b43c970b" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="d01e387d9dc8aa0003032e7d9d83fb8e540bc837" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b0ed6c1ac3ed128e60b772ca566674d3454881c0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="71a3468c854493867feea9cd21596eb51c24a2f0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b45b81266833b2a1ff0b148d7d94b234f79d174a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;文字の&lt;/a&gt;いずれかの最後の出現のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="be0e9163dfd3435d499a6cb09fb2eaeb14ae574a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列の&lt;/a&gt;いずれかが最後に出現するインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="b80b401d8af282b08f47b451f942a66fb84c87af" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="eb062c37513e3d9a197b4d9c0cf603ddb5a9f14d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="200ba29f97fb4cacc4a651ea6bacc3a16bbcda2d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt;から開始し、オプションで大文字と小文字を無視して、この文字シーケンス内の指定された&lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;文字列&lt;/a&gt;の最後の出現を検索します。</target>
        </trans-unit>
        <trans-unit id="a772f0b95a82f9b42ba3f2e47945b227fbfbe358" translate="yes" xml:space="preserve">
          <source>First and by default, &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt; is used to notify API consumers, but not to break their compilation or runtime usages.</source>
          <target state="translated">まず、デフォルトでは、&lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt;は、APIコンシューマに通知するために使用されますが、コンパイルまたはランタイムの使用を中断するためには使用されません。</target>
        </trans-unit>
        <trans-unit id="10d34264de5bcf95a2368929c309f682ebf97d06" translate="yes" xml:space="preserve">
          <source>First let's create a library. Place the tiny library source code into &lt;code&gt;kotlinizer.kt&lt;/code&gt;:</source>
          <target state="translated">まず、ライブラリを作成しましょう。小さなライブラリのソースコードを &lt;code&gt;kotlinizer.kt&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="d6ebd189e555fcc845acb54b7025e742cee302fe" translate="yes" xml:space="preserve">
          <source>First of all, &lt;code&gt;select&lt;/code&gt; is &lt;em&gt;biased&lt;/em&gt; to the first clause. When several clauses are selectable at the same time, the first one among them gets selected. Here, both channels are constantly producing strings, so &lt;code&gt;a&lt;/code&gt; channel, being the first clause in select, wins. However, because we are using unbuffered channel, the &lt;code&gt;a&lt;/code&gt; gets suspended from time to time on its &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;send&lt;/a&gt; invocation and gives a chance for &lt;code&gt;b&lt;/code&gt; to send, too.</source>
          <target state="translated">まず、 &lt;code&gt;select&lt;/code&gt; は最初の句に&lt;em&gt;偏っ&lt;/em&gt;ています。複数の句を同時に選択できる場合は、それらの最初の句が選択されます。ここでは、両方のチャネルが常に文字列を生成しているため &lt;code&gt;a&lt;/code&gt; selectの最初の句であるチャネルが優先されます。ただし、バッファリングされていないチャネルを使用しているため、 &lt;code&gt;a&lt;/code&gt; はその&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;送信&lt;/a&gt;呼び出しで時々中断され、 &lt;code&gt;b&lt;/code&gt; も送信する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="91387211d09f73aa2d29f7472f1dc87ceea391b3" translate="yes" xml:space="preserve">
          <source>First of all, we need to have a native pointer to pass to the C function. We use the &lt;code&gt;usePinned&lt;/code&gt; extension function to temporarily pin the native memory address of the byte array. The C function fills in the byte array with data. We use another extension function &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; to turn the byte array into a Kotlin &lt;code&gt;String&lt;/code&gt;, assuming UTF-8 encoding.</source>
          <target state="translated">まず、C関数に渡すネイティブポインターが必要です。 &lt;code&gt;usePinned&lt;/code&gt; 拡張関数を使用して、バイト配列のネイティブメモリアドレスを一時的に固定します。C関数は、バイト配列にデータを入力します。UTF-8エンコーディングを想定して、別の拡張関数 &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; を使用して、バイト配列をKotlin &lt;code&gt;String&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="07ace0e77a28e647a56e3217744218e0f591c0d5" translate="yes" xml:space="preserve">
          <source>First of all, you need the Eclipse IDE installed on your system. You can download its latest version from &lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;download page&lt;/a&gt;. The &quot;Eclipse IDE for Java Developers&quot; bundle is recommended.</source>
          <target state="translated">まず、システムにEclipse IDEをインストールする必要があります。最新バージョンは&lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;ダウンロードページ&lt;/a&gt;からダウンロードできます。「Eclipse Developer for Java Developers」バンドルをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6def8856ba78db6ce14b20d1f189667c3be8cca9" translate="yes" xml:space="preserve">
          <source>First value.</source>
          <target state="translated">最初の値。</target>
        </trans-unit>
        <trans-unit id="014cd3d3385286090f24027a25e87fcac71bec38" translate="yes" xml:space="preserve">
          <source>First, create a new Kotlin Android Project for your application:</source>
          <target state="translated">まず、アプリケーション用の新しいKotlin Androidプロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="07544b4bf851debb973c4f3d5555c5bb476a9ca7" translate="yes" xml:space="preserve">
          <source>First, let's create a project folder. All the paths in this tutorial will be relative to this folder. Sometimes the missing directories will have to be created before any new files can be added.</source>
          <target state="translated">まず、プロジェクトフォルダを作成しましょう。このチュートリアルのすべてのパスは、このフォルダからの相対パスになります。新しいファイルを追加する前に、不足しているディレクトリを作成しなければならないこともあります。</target>
        </trans-unit>
        <trans-unit id="9334a12c7372e26d6be5b8bb8e8eb7dc7fd289ac" translate="yes" xml:space="preserve">
          <source>First, let's think about why Java needs those mysterious wildcards. The problem is explained in &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 31: &lt;em&gt;Use bounded wildcards to increase API flexibility&lt;/em&gt;. First, generic types in Java are &lt;strong&gt;invariant&lt;/strong&gt;, meaning that &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; a subtype of &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt;. Why so? If List was not &lt;strong&gt;invariant&lt;/strong&gt;, it would have been no better than Java's arrays, since the following code would have compiled and caused an exception at runtime:</source>
          <target state="translated">最初に、なぜJavaがこれらの不可解なワイルドカードを必要とするのかを考えてみましょう。問題は、&lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java、3rd Edition&lt;/a&gt;、アイテム31：&lt;em&gt;制限付きワイルドカードを使用してAPIの柔軟性を向上させる&lt;/em&gt;で説明されてい&lt;em&gt;ます&lt;/em&gt;。まず、Javaのジェネリック型は&lt;strong&gt;不変です&lt;/strong&gt;。つまり、 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; は &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt; サブタイプではあり&lt;strong&gt;ません&lt;/strong&gt;。なんでそうなの？Listが&lt;strong&gt;不変&lt;/strong&gt;でなかった場合、次のコードがコンパイル時にコンパイルされて実行時に例外が発生するため、Javaの配列と同じです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="903cc573c51fbef754880d4a04451b373d2ff417" translate="yes" xml:space="preserve">
          <source>First, there is &lt;em&gt;natural&lt;/em&gt; order. It is defined for inheritors of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Natural order is used for sorting them when no other order is specified.</source>
          <target state="translated">まず、&lt;em&gt;自然な&lt;/em&gt;秩序があります。これは、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;インターフェースの継承者のために定義されています。他の順序が指定されていない場合、それらを並べ替えるために自然順序が使用されます。</target>
        </trans-unit>
        <trans-unit id="31dfd703459e1b6a9ae1ed2fc671be3556bf75c9" translate="yes" xml:space="preserve">
          <source>First, we add the new project into the &lt;code&gt;settings.gradle&lt;/code&gt; file, simply by adding the following line to the end of the file:</source>
          <target state="translated">まず、ファイルの最後に次の行を追加するだけで、新しいプロジェクトを &lt;code&gt;settings.gradle&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="141d229204c263b76a047b5bc576568829fec380" translate="yes" xml:space="preserve">
          <source>First, we need to include the compiled framework into the Xcode project. For this we add the framework to the &lt;code&gt;Embedded Binaries&lt;/code&gt; block of the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration page.</source>
          <target state="translated">まず、コンパイルされたフレームワークをXcodeプロジェクトに含める必要があります。このために、&lt;em&gt;ターゲット&lt;/em&gt;構成ページの &lt;code&gt;General&lt;/code&gt; セクションの &lt;code&gt;Embedded Binaries&lt;/code&gt; ブロックにフレームワークを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb377ed1460ffda0b03789323fc3d1f940c32dd" translate="yes" xml:space="preserve">
          <source>First, we need to include the framework in the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration. There is the &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; section to include our framework. This will make Xcode look at our framework and resolve imports both from Objective-C and Swift.</source>
          <target state="translated">最初に、&lt;em&gt;ターゲット&lt;/em&gt;構成の &lt;code&gt;General&lt;/code&gt; セクションにフレームワークを含める必要があります。そこで &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; 私たちのフレームワークを含むようにセクションが。これにより、Xcodeがフレームワークを調べ、Objective-CとSwiftの両方からのインポートを解決します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="883cc965531c81000adec116dcd945c6473014b3" translate="yes" xml:space="preserve">
          <source>First, you can explicitly check if &lt;code&gt;b&lt;/code&gt; is &lt;em&gt;null&lt;/em&gt;, and handle the two options separately:</source>
          <target state="translated">まず、 &lt;code&gt;b&lt;/code&gt; が&lt;em&gt;null&lt;/em&gt;かどうかを明示的に確認し、2つのオプションを個別に処理します。</target>
        </trans-unit>
        <trans-unit id="db5e9d2943caab6eedc38de51f275f1c08eb5cbf" translate="yes" xml:space="preserve">
          <source>First-class delegation</source>
          <target state="translated">一流の代表団</target>
        </trans-unit>
        <trans-unit id="a4369cd318f982ecd4037bc347f7b700a90010b7" translate="yes" xml:space="preserve">
          <source>Fixing the Code</source>
          <target state="translated">コードの修正</target>
        </trans-unit>
        <trans-unit id="68839cce52f25f5e722d684d280b2b741a295de7" translate="yes" xml:space="preserve">
          <source>Flattening</source>
          <target state="translated">Flattening</target>
        </trans-unit>
        <trans-unit id="3ae6842a29a39335221041b3f30e383dacc9b9ea" translate="yes" xml:space="preserve">
          <source>Flavor support</source>
          <target state="translated">フレーバーサポート</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="1cbcea917c60692fe6c69a4151dd7e5bcc9da555" translate="yes" xml:space="preserve">
          <source>Float32Array</source>
          <target state="translated">Float32Array</target>
        </trans-unit>
        <trans-unit id="42ae0e778d4c2ca3c83ff2f30eea14a7dfba5a83" translate="yes" xml:space="preserve">
          <source>Float64Array</source>
          <target state="translated">Float64Array</target>
        </trans-unit>
        <trans-unit id="455a972c73b73dc4bac4b0a78033ba84362d0692" translate="yes" xml:space="preserve">
          <source>FloatArray</source>
          <target state="translated">FloatArray</target>
        </trans-unit>
        <trans-unit id="75f980af562e559d4e3cc96d1c51b44c9754fabe" translate="yes" xml:space="preserve">
          <source>FloatIterator</source>
          <target state="translated">FloatIterator</target>
        </trans-unit>
        <trans-unit id="b73efe618f9aa8e2897eb91cb0f18673e5d48a97" translate="yes" xml:space="preserve">
          <source>FloatVar</source>
          <target state="translated">FloatVar</target>
        </trans-unit>
        <trans-unit id="c0ea9f66df3119a44fa1e9b36eebfcf85cc69779" translate="yes" xml:space="preserve">
          <source>FloatVarOf</source>
          <target state="translated">FloatVarOf</target>
        </trans-unit>
        <trans-unit id="f2fcdb71bd772d3aedf2ab924de45e055aed5e47" translate="yes" xml:space="preserve">
          <source>Floating Point Numbers Comparison</source>
          <target state="translated">浮動小数点数の比較</target>
        </trans-unit>
        <trans-unit id="fbbce7c2bd0495f1dfb372805ab8fe1d050e33ba" translate="yes" xml:space="preserve">
          <source>Floating point numbers equality</source>
          <target state="translated">浮動小数点数の平等</target>
        </trans-unit>
        <trans-unit id="25f2649c6c900f682ec1c5457eaf2171cb22dfb9" translate="yes" xml:space="preserve">
          <source>Floating point to bits conversions</source>
          <target state="translated">浮動小数点からビットへの変換</target>
        </trans-unit>
        <trans-unit id="b61c95ccd79a54c27f8848d6bdd0e42be0d1b3ab" translate="yes" xml:space="preserve">
          <source>Floating-point and other types</source>
          <target state="translated">浮動小数点型など</target>
        </trans-unit>
        <trans-unit id="0e7554a08478576bef6230269bfec3d2f920dec7" translate="yes" xml:space="preserve">
          <source>Floating-point numbers act similarly to in Python, but they come in two types, depending on how many digits you need. If you need larger precision, or to work with monetary amounts (or other situations where you must have exact results), use the non-primitive type &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">浮動小数点数はPythonと同様に機能しますが、必要な桁数に応じて2つのタイプがあります。より高い精度が必要な場合、または金額（または正確な結果が必要なその他の状況）を処理する場合は、プリミティブ型ではない &lt;code&gt;BigDecimal&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="75247b1405beabbe2433c334ee457c6b63301008" translate="yes" xml:space="preserve">
          <source>Floats are tagged by &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;: &lt;code&gt;123.5f&lt;/code&gt;</source>
          <target state="translated">フロートは &lt;code&gt;f&lt;/code&gt; または &lt;code&gt;F&lt;/code&gt; でタグ付けされています： &lt;code&gt;123.5f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b116ec5966382c21a5d91ab57e879cd944d954" translate="yes" xml:space="preserve">
          <source>FocusEventInit</source>
          <target state="translated">FocusEventInit</target>
        </trans-unit>
        <trans-unit id="93a54a94f3c7246b2829b18c58f2f5f37395fb11" translate="yes" xml:space="preserve">
          <source>Fold and reduce</source>
          <target state="translated">折りたたんで減らす</target>
        </trans-unit>
        <trans-unit id="2e2afca6d0dd17580032d0ae27317e2de9b64677" translate="yes" xml:space="preserve">
          <source>Follow the &lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;Getting Started with Android and Kotlin&lt;/a&gt; tutorial to create your first Kotlin application.</source>
          <target state="translated">&lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;AndroidとKotlinの入門&lt;/a&gt;チュートリアルに従って、最初のKotlinアプリケーションを作成します。</target>
        </trans-unit>
        <trans-unit id="3ea19335fbbfe973c7abd974cb5ad7401a1101f0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;delegated-properties&quot;&gt;delegated properties&lt;/a&gt;, it is now possible to intercept delegate to property binding using the &lt;code&gt;provideDelegate&lt;/code&gt; operator. For example, if we want to check the property name before binding, we can write something like this:</source>
          <target state="translated">以下のために&lt;a href=&quot;delegated-properties&quot;&gt;委任の性質&lt;/a&gt;、それは使用して結合特性にインターセプトデリゲートにできるようになりました &lt;code&gt;provideDelegate&lt;/code&gt; の演算子を。たとえば、バインドする前にプロパティ名を確認する場合は、次のように記述できます。</target>
        </trans-unit>
        <trans-unit id="5f2a4b596e206597c0ed7295073dc6afa996e5b9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; extension function is here for the rescue. It creates an additional context element, which keeps the value of the given &lt;code&gt;ThreadLocal&lt;/code&gt; and restores it every time the coroutine switches its context.</source>
          <target state="translated">以下のため&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElementの&lt;/a&gt;拡張機能は、救助のためにここにあります。追加のコンテキスト要素を作成します。これは、指定された &lt;code&gt;ThreadLocal&lt;/code&gt; の値を保持し、コルーチンがコンテキストを切り替えるたびにそれを復元します。</target>
        </trans-unit>
        <trans-unit id="f20274a899133f1e66b0011aed86b24f7186d1ca" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is an invariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; for reading values and to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; for writing values.</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; が上限と不変の型パラメータである &lt;code&gt;TUpper&lt;/code&gt; 、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; と等価である &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; 値を読み取るとするために &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; 値を書き込むため。</target>
        </trans-unit>
        <trans-unit id="332d2c7a81fe2ca27d839eef9b44bce000ba25e2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a contravariant type parameter, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt;. It means there is nothing you can &lt;em&gt;write&lt;/em&gt; to &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; in a safe way when &lt;code&gt;T&lt;/code&gt; is unknown.</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; は反変の型パラメータで、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 同等です &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; 。それはあなたができることは何も存在しないことを意味&lt;em&gt;書く&lt;/em&gt;に &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; とき、安全な方法で、 &lt;code&gt;T&lt;/code&gt; は不明ですが。</target>
        </trans-unit>
        <trans-unit id="f764307d008b2dc88dbd4a50404093c551a59137" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a covariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt;. It means that when the &lt;code&gt;T&lt;/code&gt; is unknown you can safely &lt;em&gt;read&lt;/em&gt; values of &lt;code&gt;TUpper&lt;/code&gt; from &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ため &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; が上限との共変の型パラメータである &lt;code&gt;TUpper&lt;/code&gt; 、 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; と等価である &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; 。つまり、 &lt;code&gt;T&lt;/code&gt; が不明な場合、 &lt;code&gt;TUpper&lt;/code&gt; 値を &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; から安全に&lt;em&gt;読み取る&lt;/em&gt;ことができ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="de45977bda92a2c4ac133cf321bc144db3f877f2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;a--&lt;/code&gt; the steps are completely analogous.</source>
          <target state="translated">aの場合 &lt;code&gt;a--&lt;/code&gt; 手順は完全に類似しています。</target>
        </trans-unit>
        <trans-unit id="f16d61f55554c0f8e3fcbdd6a01df57f3ff5b3b3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;!in&lt;/code&gt; the procedure is the same, but the order of arguments is reversed.</source>
          <target state="translated">以下のため &lt;code&gt;in&lt;/code&gt; と &lt;code&gt;!in&lt;/code&gt; 手順は同じですが、引数の順序が逆になります。</target>
        </trans-unit>
        <trans-unit id="31f9ee789739cfb2cfe2b0d0e06d5b503a8b42d9" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;scoped&lt;/em&gt; concurrency &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScope&lt;/a&gt; can be used instead of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; for the same purpose. It propagates cancellation only in one direction and cancels all children only if it has failed itself. It also waits for all children before completion just like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; does.</source>
          <target state="translated">以下のために&lt;em&gt;スコープの&lt;/em&gt;同時実行&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScopeが&lt;/a&gt;代わりに使用することができます&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt;同じ目的のために。キャンセルは一方向にのみ伝播し、失敗した場合にのみすべての子をキャンセルします。また、&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt;と同様に、完了前にすべての子を待機します。</target>
        </trans-unit>
        <trans-unit id="a0e12bb16ea7f7a27b9b78e993d5f87a2124f98e" translate="yes" xml:space="preserve">
          <source>For Common</source>
          <target state="translated">共通の場合</target>
        </trans-unit>
        <trans-unit id="6f36291090388ede8a74a2268f3b0b4769b93681" translate="yes" xml:space="preserve">
          <source>For Common, JS</source>
          <target state="translated">コモン、JSの場合</target>
        </trans-unit>
        <trans-unit id="08f2b4dbf3c972b5d411304bf3e11192f1f2b5cd" translate="yes" xml:space="preserve">
          <source>For Common, JS, Native</source>
          <target state="translated">Common,JS,Native用</target>
        </trans-unit>
        <trans-unit id="c57700f7e3a3d62bcd69c71749f0f3be05b90f01" translate="yes" xml:space="preserve">
          <source>For Common, JVM</source>
          <target state="translated">コモン、JVMの場合</target>
        </trans-unit>
        <trans-unit id="c6d6fbfa8f0b28a75a50eef0c4691e291e4ed840" translate="yes" xml:space="preserve">
          <source>For Common, JVM, JS</source>
          <target state="translated">コモン、JVM、JS用</target>
        </trans-unit>
        <trans-unit id="97569590cb4cba4889ce7c34a4818f4359884242" translate="yes" xml:space="preserve">
          <source>For Common, JVM, Native</source>
          <target state="translated">コモン、JVM、ネイティブ用</target>
        </trans-unit>
        <trans-unit id="dfb677aec3d63fca3e145c67432fc2f47b804a0f" translate="yes" xml:space="preserve">
          <source>For Common, Native</source>
          <target state="translated">コモン、ネイティブの場合</target>
        </trans-unit>
        <trans-unit id="f2a1cfa3398b9f0993eeb53309d74df3be92ac54" translate="yes" xml:space="preserve">
          <source>For Gradle, you can use &lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle composite builds&lt;/a&gt; like this:</source>
          <target state="translated">Gradleの場合、次のような&lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle複合ビルドを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="03e5026bb8bab6b35279081359d5bd1232248dec" translate="yes" xml:space="preserve">
          <source>For JS</source>
          <target state="translated">JSの場合</target>
        </trans-unit>
        <trans-unit id="eb3146c22a68ff70c95d86d10c3aac2c61e9ff48" translate="yes" xml:space="preserve">
          <source>For JS, Native</source>
          <target state="translated">JSの場合は、ネイティブ</target>
        </trans-unit>
        <trans-unit id="52a5c3b06aba4f97fbfff83904d500d04c6cf159" translate="yes" xml:space="preserve">
          <source>For JVM</source>
          <target state="translated">JVMの場合</target>
        </trans-unit>
        <trans-unit id="f560905d6ce11426aa66b2a00de81c0fb9ddf9a2" translate="yes" xml:space="preserve">
          <source>For JVM targets, use &lt;code&gt;kotlin-test-junit&lt;/code&gt; or &lt;code&gt;kotlin-test-testng&lt;/code&gt; for the corresponding asserter implementation and annotations mapping.</source>
          <target state="translated">JVMターゲットの場合、対応する &lt;code&gt;kotlin-test-testng&lt;/code&gt; 実装とアノテーションのマッピングに &lt;code&gt;kotlin-test-junit&lt;/code&gt; またはkotlin-test-testngを使用します。</target>
        </trans-unit>
        <trans-unit id="e336336a19c419821bcd2958c5a320b4be56f6b6" translate="yes" xml:space="preserve">
          <source>For JVM, JS, Native</source>
          <target state="translated">JVM、JS、ネイティブの場合</target>
        </trans-unit>
        <trans-unit id="4231cf261b352f7e81cbd406b3067bb406f78f5e" translate="yes" xml:space="preserve">
          <source>For JVM, Native</source>
          <target state="translated">JVMの場合、ネイティブ</target>
        </trans-unit>
        <trans-unit id="04b10a19cf1aeb7cc946055626cdf7a2d6e7e7bc" translate="yes" xml:space="preserve">
          <source>For Kotlin types, it means that &lt;code&gt;null&lt;/code&gt; value is allowed to be represented by this type. In practice it means that the type was declared with a question mark at the end. For non-Kotlin types, it means the type or the symbol which was declared with this type is annotated with a runtime-retained nullability annotation such as javax.annotation.Nullable.</source>
          <target state="translated">Kotlin型の場合、これは &lt;code&gt;null&lt;/code&gt; 値をこの型で表すことができることを意味します。実際には、型が最後に疑問符を付けて宣言されたことを意味します。非Kotlin型の場合、これは、この型で宣言された型またはシンボルに、javax.annotation.Nullableなどの実行時保持のnull可能性注釈が付けられていることを意味します。</target>
        </trans-unit>
        <trans-unit id="e5178c43125e009c8d866f7748cc2bbf34035517" translate="yes" xml:space="preserve">
          <source>For Kotlin/JS targets, add &lt;code&gt;kotlin-test-js&lt;/code&gt; as a test dependency. At this point, test tasks for Kotlin/JS are created but do not run tests by default; they should be manually configured to run the tests with a JavaScript test framework.</source>
          <target state="translated">Kotlin / JSターゲットの場合、 &lt;code&gt;kotlin-test-js&lt;/code&gt; をテスト依存関係として追加します。この時点で、Kotlin / JSのテストタスクが作成されますが、デフォルトではテストを実行しません。JavaScriptテストフレームワークを使用してテストを実行するには、手動で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a36b859180dd2062331e5d0956bbf601eda4340d" translate="yes" xml:space="preserve">
          <source>For Loops</source>
          <target state="translated">ループの場合</target>
        </trans-unit>
        <trans-unit id="6d6e345d366909cab27a1a82d173a98512a79549" translate="yes" xml:space="preserve">
          <source>For Maven, it would be:</source>
          <target state="translated">メイヴンの場合は</target>
        </trans-unit>
        <trans-unit id="1b374591365e51702410472ce8ea252f95f74ff7" translate="yes" xml:space="preserve">
          <source>For Native</source>
          <target state="translated">ネイティブのために</target>
        </trans-unit>
        <trans-unit id="fa0cf33839ec78139e380b6a981aa8d6503e8b15" translate="yes" xml:space="preserve">
          <source>For OSGi support see the &lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGi page&lt;/a&gt;.</source>
          <target state="translated">OSGiサポートについては、&lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGiページを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4a584c0cd636b99f6cd5deb25bfe0a9ca2e2c8a" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;mutable&lt;/strong&gt; property (a &lt;em&gt;var&lt;/em&gt;), a delegate has to &lt;em&gt;additionally&lt;/em&gt; provide a function named &lt;code&gt;setValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">以下のために&lt;strong&gt;変更可能な&lt;/strong&gt;プロパティ（&lt;em&gt;VAR&lt;/em&gt;）、デリゲートをしなければなら&lt;em&gt;さらに&lt;/em&gt;名前の関数を提供 &lt;code&gt;setValue&lt;/code&gt; の次のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="35025801cc394371dfde9934e9cf7e49df02c0ef" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;read-only&lt;/strong&gt; property (i.e. a &lt;em&gt;val&lt;/em&gt;), a delegate has to provide a function named &lt;code&gt;getValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">以下のために&lt;strong&gt;読み取り専用の&lt;/strong&gt;プロパティ（すなわちA &lt;em&gt;ヴァル&lt;/em&gt;）、デリゲートは、名前の関数を提供しなければならない &lt;code&gt;getValue&lt;/code&gt; 次のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="21cb8d49e26bf8342dc4bb5b4ad4da91a1e77a5f" translate="yes" xml:space="preserve">
          <source>For a gradual migration, it's possible to enable the &lt;em&gt;&quot;File is not formatted according to project settings&quot;&lt;/em&gt; inspection. It will highlight the places that should be reformatted. After enabling the &lt;em&gt;&quot;Apply only to modified files&quot;&lt;/em&gt; option, inspection will show formatting problems only in modified files. Such files are probably going to be committed soon anyway.</source>
          <target state="translated">段階的な移行の場合、&lt;em&gt;「ファイルはプロジェクト設定に従ってフォーマットされていません」&lt;/em&gt;検査を有効にすることができ&lt;em&gt;ます&lt;/em&gt;。再フォーマットする必要がある場所が強調表示されます。[ &lt;em&gt;変更されたファイルにのみ適用&lt;/em&gt; ]オプション&lt;em&gt;を&lt;/em&gt;有効にすると、検査により、変更されたファイルのみでフォーマットの問題が表示されます。そのようなファイルはおそらくとにかくすぐにコミットされるでしょう。</target>
        </trans-unit>
        <trans-unit id="6e4c801bbb25ddbc3c08a47408830082eed3477f" translate="yes" xml:space="preserve">
          <source>For a lambda with multiple parameters, you can use the &lt;code&gt;_&lt;/code&gt; character to replace the names of the parameters you don't use:</source>
          <target state="translated">複数のパラメーターを持つラムダの場合、 &lt;code&gt;_&lt;/code&gt; 文字を使用して、使用しないパラメーターの名前を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="b3f1a97500bff9f685ac335e27f80b3c7d1687f3" translate="yes" xml:space="preserve">
          <source>For a low-level description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">低レベルの説明については、&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;仕様書を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52de52af3f48a41d7aaf8f9a39e3810b703b093a" translate="yes" xml:space="preserve">
          <source>For a more complete example of using &lt;code&gt;libcurl&lt;/code&gt;, the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;libcurl sample of the Kotlin/Native project&lt;/a&gt; shows how to abstract the code into Kotlin classes as well as display headers. It also demonstrates how to make the steps a little easier by combining them into a shell script or Gradle build. We'll cover these topics though in more detail in subsequent tutorials.</source>
          <target state="translated">&lt;code&gt;libcurl&lt;/code&gt; のより完全な使用例について&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;は、Kotlin / Nativeプロジェクト&lt;/a&gt;のlibcurlサンプルで、コードをKotlinクラスに抽象化し、ヘッダーを表示する方法を示します。また、ステップをシェルスクリプトまたはGradleビルドに組み合わせることにより、ステップを少し簡単にする方法も示します。これらのトピックについては、以降のチュートリアルで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="ed114e62d47b1c0762ff485fe26cc64acad1eb09" translate="yes" xml:space="preserve">
          <source>For a more complete example please refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;workers example&lt;/a&gt; in the Kotlin/Native repository.</source>
          <target state="translated">より完全な例については、Kotlin /ネイティブリポジトリの&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;ワーカーの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="05ea2ae6af0a59b8862585f8d9a02e695b4bd06e" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction to the language, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">この言語の詳細については、このサイトの&lt;a href=&quot;index&quot;&gt;リファレンスドキュメント&lt;/a&gt;と&lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koansをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8d65cf737fd6a20fca9a5968a403caa15ac7b74" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">より詳細な&lt;a href=&quot;index&quot;&gt;概要&lt;/a&gt;については、このサイトおよび&lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koansの&lt;/a&gt;リファレンスドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="fbc2c91fbdda5a2b47669726bfdd3023ba301d36" translate="yes" xml:space="preserve">
          <source>For a more technical description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">より技術的な説明については、&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;仕様書を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4905d96c37716a04ccca3bcd0aec1d2235e24e05" translate="yes" xml:space="preserve">
          <source>For a mutable property, e.g. &lt;code&gt;var y = 1&lt;/code&gt;, &lt;code&gt;::y&lt;/code&gt; returns a value of type &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt;&lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt;&lt;/a&gt;, which has a &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">可変のプロパティの場合（例： &lt;code&gt;var y = 1&lt;/code&gt; 、 &lt;code&gt;::y&lt;/code&gt; &lt;code&gt;set()&lt;/code&gt; は、set（）メソッドを持つ&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt; &lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt; &lt;/a&gt;型の値を返します。</target>
        </trans-unit>
        <trans-unit id="c04dc331c62e225f9ba430516892d65199206707" translate="yes" xml:space="preserve">
          <source>For a symbol that is declared inside a class:</source>
          <target state="translated">クラス内で宣言されているシンボルの場合。</target>
        </trans-unit>
        <trans-unit id="e993bf612bf1600b9ce9618843fca0af6ca52f9c" translate="yes" xml:space="preserve">
          <source>For a typical Unix library with a config script, the &lt;code&gt;compilerOpts&lt;/code&gt; will likely contain the output of a config script with the &lt;code&gt;--cflags&lt;/code&gt; flag (maybe without exact paths).</source>
          <target state="translated">構成スクリプトを使用する一般的なUnixライブラリの場合、 &lt;code&gt;compilerOpts&lt;/code&gt; には &lt;code&gt;--cflags&lt;/code&gt; フラグを使用した構成スクリプトの出力が含まれている可能性があります（正確なパスがない可能性があります）。</target>
        </trans-unit>
        <trans-unit id="f0ffc38ab87aa0a2254afe0dac4d4f4abe21ea7b" translate="yes" xml:space="preserve">
          <source>For additional details, please consult the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="86c5db154bc4017f6e19e21eebb42b806549c22c" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">ロギングMDC、トランザクションコンテキスト、またはデータを渡すために内部でスレッドローカルを使用するその他のライブラリとの統合など、高度な使用法については、実装する必要がある&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt;インターフェイスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d1b6d864741b47438551c8743952cc88342b08e2" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;Unix&lt;/code&gt; or &lt;code&gt;Windows&lt;/code&gt; based targets (including &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt;) we provide the &lt;code&gt;posix&lt;/code&gt; platform lib. It contains bindings to platform's implementation of &lt;code&gt;POSIX&lt;/code&gt; standard.</source>
          <target state="translated">すべての &lt;code&gt;Unix&lt;/code&gt; または &lt;code&gt;Windows&lt;/code&gt; ベースのターゲット（ &lt;code&gt;Android&lt;/code&gt; および &lt;code&gt;iPhone&lt;/code&gt; を含む）に対して、 &lt;code&gt;posix&lt;/code&gt; プラットフォームlib を提供します。これには、 &lt;code&gt;POSIX&lt;/code&gt; 標準のプラットフォームの実装へのバインディングが含まれています。</target>
        </trans-unit>
        <trans-unit id="637ba86f66e04bfb5c21e0d443fd411f1ae0d969" translate="yes" xml:space="preserve">
          <source>For an example of CocoaPods integration, refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt;&lt;code&gt;cocoapods&lt;/code&gt;&lt;/a&gt; sample.</source>
          <target state="translated">CocoaPods統合の例については、&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt; &lt;code&gt;cocoapods&lt;/code&gt; &lt;/a&gt;サンプルを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf11697a4677fb9ee8260c3dad7ad63798e47a6" translate="yes" xml:space="preserve">
          <source>For an extension property:</source>
          <target state="translated">増築物件の場合。</target>
        </trans-unit>
        <trans-unit id="71b6ee394141461f71e0ce2d3f94fa8ad9908ffc" translate="yes" xml:space="preserve">
          <source>For bigger collections, you may want to specify the &lt;code&gt;limit&lt;/code&gt; &amp;ndash; a number of elements that will be included into result. If the collection size exceeds the &lt;code&gt;limit&lt;/code&gt;, all the other elements will be replaced with a single value of the &lt;code&gt;truncated&lt;/code&gt; argument.</source>
          <target state="translated">より大きなコレクションでは、 &lt;code&gt;limit&lt;/code&gt; 結果に含まれる要素の数）を指定することができます。コレクションのサイズが &lt;code&gt;limit&lt;/code&gt; を超える場合、他のすべての要素は &lt;code&gt;truncated&lt;/code&gt; 引数の単一の値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="694ca7b8850a82c8e256d49268391f7fa91d2fc1" translate="yes" xml:space="preserve">
          <source>For building maps with collection elements as values, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt;&lt;code&gt;associateBy()&lt;/code&gt;&lt;/a&gt;. It takes a function that returns a key based on an element's value. If two elements are equal, only the last one remains in the map. &lt;code&gt;associateBy()&lt;/code&gt; can also be called with a value transformation function.</source>
          <target state="translated">コレクション要素を値として持つマップを構築するために、関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt; &lt;code&gt;associateBy()&lt;/code&gt; &lt;/a&gt;ます。要素の値に基づいてキーを返す関数を受け取ります。2つの要素が等しい場合、最後の要素のみがマップに残ります。 &lt;code&gt;associateBy()&lt;/code&gt; は、値変換関数で呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="f47b960e3cf1bba7f7326ae02c9c3b8dd9fb72b5" translate="yes" xml:space="preserve">
          <source>For certain collection operations, there is an option to specify the &lt;em&gt;destination&lt;/em&gt; object. Destination is a mutable collection to which the function appends its resulting items instead of returning them in a new object. For performing operations with destinations, there are separate functions with the &lt;code&gt;To&lt;/code&gt; postfix in their names, for example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt;&lt;code&gt;filterTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt;&lt;code&gt;associateTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt;&lt;code&gt;associate()&lt;/code&gt;&lt;/a&gt;. These functions take the destination collection as an additional parameter.</source>
          <target state="translated">特定のコレクション操作では、&lt;em&gt;宛先&lt;/em&gt;オブジェクトを指定するオプションがあります。 Destinationは、関数が結果のアイテムを新しいオブジェクトに返すのではなく追加する変更可能なコレクションです。宛先を使用して操作を実行する &lt;code&gt;To&lt;/code&gt; に、名前にTo接尾辞が付いた個別の関数があります。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt; &lt;code&gt;filterTo()&lt;/code&gt; &lt;/a&gt;代わりにfilterTo &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;や、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt; &lt;code&gt;associateTo()&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt; &lt;code&gt;associate()&lt;/code&gt; &lt;/a&gt;ます。これらの関数は、追加のパラメーターとして宛先コレクションを受け取ります。</target>
        </trans-unit>
        <trans-unit id="02887bdbee3c2022f2023698adee356772aedd2e" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so it's state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">特定の操作については、同じ操作を実行するための関数のペアがあります。1つは操作をインプレースで適用し、もう1つは個別のコレクションとして結果を返します。たとえば、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;は変更可能なコレクションをインプレースでソートするため、状態が変化します。&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;は、ソートされた順序で同じ要素を含む新しいコレクションを作成します。</target>
        </trans-unit>
        <trans-unit id="b47aa3d5261111e5dc0cf33a82d66cb2c8e5c3fe" translate="yes" xml:space="preserve">
          <source>For classes with a long supertype list, put a line break after the colon and align all supertype names horizontally:</source>
          <target state="translated">長いスーパータイプリストを持つクラスでは、コロンの後に改行を入れ、すべてのスーパータイプ名を水平に並べます。</target>
        </trans-unit>
        <trans-unit id="f5426c4f7933a1cb4871210952ed14cb2d0d066b" translate="yes" xml:space="preserve">
          <source>For classifiers representing type parameters, the type argument list must always be empty. For classes, the type argument list should contain arguments for the type parameters of the class. If the class is &lt;code&gt;inner&lt;/code&gt;, the list should follow with arguments for the type parameters of its outer class, and so forth until a class is not &lt;code&gt;inner&lt;/code&gt;, or is declared on the top level.</source>
          <target state="translated">型パラメーターを表す分類子の場合、型引数リストは常に空でなければなりません。クラスの場合、型引数リストには、クラスの型パラメーターの引数が含まれている必要があります。クラスがある場合は &lt;code&gt;inner&lt;/code&gt; クラスがでなくなるまで、リストは等々その外側のクラスの型パラメータの引数に従う、とすべきである &lt;code&gt;inner&lt;/code&gt; 、またはトップレベルで宣言されています。</target>
        </trans-unit>
        <trans-unit id="ed9eeecc6a0d768124a687f0cde43ed7908087f9" translate="yes" xml:space="preserve">
          <source>For completeness: it is also possible (but discouraged) to split the declaration and the initial assignment, and even to initialize in multiple places based on some condition. You can only read the variable at a point where the compiler can prove that every possible execution path will have initialized it. If you're creating a read-only variable in this way, you must also ensure that every possible execution path assigns to it &lt;em&gt;exactly&lt;/em&gt; once.</source>
          <target state="translated">完全を期すために、宣言と最初の割り当てを分割し、いくつかの条件に基づいて複数の場所で初期化することも可能です（ただし推奨されません）。可能なすべての実行パスが変数を初期化したことをコンパイラが証明できる時点でのみ、変数を読み取ることができます。この方法で読み取り専用変数を作成する場合は、可能なすべての実行パス&lt;em&gt;が&lt;/em&gt; 1回だけ変数に割り当てるようにする必要もあります。</target>
        </trans-unit>
        <trans-unit id="79ee8b4421a58fb8d8446ab0d337de5ea30eee34" translate="yes" xml:space="preserve">
          <source>For consistency with array literals in annotations, passing a single item for a vararg parameter in the named form (&lt;code&gt;foo(items = i)&lt;/code&gt;) has been deprecated. Please use the spread operator with the corresponding array factory functions:</source>
          <target state="translated">注釈内の配列リテラルとの一貫性を保つために、名前付き形式（ &lt;code&gt;foo(items = i)&lt;/code&gt; ）でvarargパラメーターに単一の項目を渡すことは非推奨になりました。対応する配列ファクトリ関数でスプレッド演算子を使用してください：</target>
        </trans-unit>
        <trans-unit id="afef4be80502f3cfdb78878e430e782b609b8c37" translate="yes" xml:space="preserve">
          <source>For convenience, these functions return the destination collection back, so you can create it right in the corresponding argument of the function call:</source>
          <target state="translated">便利なように、これらの関数は目的のコレクションを返してくれるので、関数呼び出しの対応する引数ですぐに作成することができます。</target>
        </trans-unit>
        <trans-unit id="b434cd5b8ed34d1f894873e141d8af5c3688e3d4" translate="yes" xml:space="preserve">
          <source>For curly braces, put the opening brace in the end of the line where the construct begins, and the closing brace on a separate line aligned horizontally with the opening construct.</source>
          <target state="translated">カーリーブレースの場合は、開始ブレースを構成要素が始まる線の端に置き、終了ブレースを開始構成要素と水平に並んだ別の線上に置きます。</target>
        </trans-unit>
        <trans-unit id="19a64fc7bea10f2735062a2c907700c0ef67633d" translate="yes" xml:space="preserve">
          <source>For debug build it embeds placeholder LLVM IR data as a marker.</source>
          <target state="translated">デバッグビルドでは、LLVMのIRデータをマーカーとして埋め込んでいます。</target>
        </trans-unit>
        <trans-unit id="f7296b3affa034e56286c14adf5ca5d09604d26c" translate="yes" xml:space="preserve">
          <source>For decades, as developers we are confronted with a problem to solve - how to prevent our applications from blocking. Whether we're developing desktop, mobile, or even server-side applications, we want to avoid having the user wait or what's worse cause bottlenecks that would prevent an application from scaling.</source>
          <target state="translated">何十年もの間、開発者として私たちは解決すべき問題に直面してきました。デスクトップ、モバイル、サーバーサイドのアプリケーションを開発しているかどうかに関わらず、ユーザーを待たせたり、アプリケーションのスケーリングを妨げるボトルネックの原因になったりすることは避けたいと考えています。</target>
        </trans-unit>
        <trans-unit id="e5618ea5aa387ca3d934fa7059f4ea5eb2684f42" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d58fbd0a86a8a8236e1ea5cfe8098c23478de1f" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="757a87b936de48b2ca7dbd30472b34156baef56a" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9afaf366ae8ced14236278d07ef496e91fa87059" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c60faedb0188f0b5a90fa8dfbfa95ce16294c10e" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">使用法の詳細については、&lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;スコープ関数&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="028e4a57b533fce9ed58d13b3dddb5fa9f3454af" translate="yes" xml:space="preserve">
          <source>For details on using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) operators on mutable maps, see &lt;a href=&quot;#map-write-operations&quot;&gt;Map write operations&lt;/a&gt; below.</source>
          <target state="translated">変更可能なマップでの&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; ）演算子と&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; &lt;/a&gt;（-=）演算子の使用の詳細については、以下の&lt;a href=&quot;#map-write-operations&quot;&gt;マップ書き込み操作を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a0931a279af808bfe00c2a0d994687a2bad1f41e" translate="yes" xml:space="preserve">
          <source>For each compilation, there is a default source set under the name composed as &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt;. This default source set participates in the compilation, and thus it should be used for the platform-specific code and dependencies, and for adding other source sets to the compilation by the means of 'depends on'. For example, a project with targets &lt;code&gt;jvm6&lt;/code&gt; (JVM) and &lt;code&gt;nodeJs&lt;/code&gt; (JS) will have source sets: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, &lt;code&gt;jvm6Main&lt;/code&gt;, &lt;code&gt;jvm6Test&lt;/code&gt;, &lt;code&gt;nodeJsMain&lt;/code&gt;, &lt;code&gt;nodeJsTest&lt;/code&gt;.</source>
          <target state="translated">コンパイルごとに、 &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt; として構成される名前の下にデフォルトのソースセットがあります。このデフォルトのソースセットはコンパイルに参加するため、プラットフォーム固有のコードと依存関係、および「依存」の方法でコンパイルに他のソースセットを追加するために使用する必要があります。たとえば、ターゲットが &lt;code&gt;jvm6&lt;/code&gt; （JVM）と &lt;code&gt;nodeJs&lt;/code&gt; （JS）のプロジェクトには、ソースセット &lt;code&gt;commonMain&lt;/code&gt; 、 &lt;code&gt;commonTest&lt;/code&gt; 、 &lt;code&gt;jvm6Main&lt;/code&gt; 、 &lt;code&gt;jvm6Test&lt;/code&gt; 、 &lt;code&gt;nodeJsMain&lt;/code&gt; 、 &lt;code&gt;nodeJsTest&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="a971809f1d47fbd85329764ce9196c05695ed736" translate="yes" xml:space="preserve">
          <source>For each key, there is always a single value associated with it. You can add and remove whole entries.</source>
          <target state="translated">各キーには、常に1つの値が関連付けられています。エントリ全体を追加したり削除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="f9d32997cfc2635d965d79f6a6f0696c8adae072" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-humps names starting with an uppercase letter, depending on the usage.</source>
          <target state="translated">enum定数の場合、使用法に応じて、アンダースコアで区切られた大文字の名前（ &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ）または大文字で始まる通常のキャメルこぶ名のいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="3cdc85f184c2ea8335df38fe8b455a7815ab1f41" translate="yes" xml:space="preserve">
          <source>For every parameter with a default value, this will generate one additional overload, which has this parameter and all parameters to the right of it in the parameter list removed. In this example, the following will be generated:</source>
          <target state="translated">デフォルト値を持つすべてのパラメータに対して、このパラメータとその右側のすべてのパラメータが削除されたオーバーロードが追加で生成されます。この例では、以下のように生成されます。</target>
        </trans-unit>
        <trans-unit id="94b950f7e09b83a55502571aef5cf0416b4ce619" translate="yes" xml:space="preserve">
          <source>For every set of &lt;code&gt;.h&lt;/code&gt; files, we will be using the &lt;code&gt;cinterop&lt;/code&gt;&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; from Kotlin/Native to generate a Kotlin/Native library, or &lt;code&gt;.klib&lt;/code&gt;. The generated library will bridge calls from Kotlin/Native to C. It includes respective Kotlin declarations for the definitions form the &lt;code&gt;.h&lt;/code&gt; files. It is only necessary to have a &lt;code&gt;.h&lt;/code&gt; file to run the &lt;code&gt;cinterop&lt;/code&gt; tool. And we do not need to create a &lt;code&gt;lib.c&lt;/code&gt; file, unless we want to compile and run the example. More details on this are covered in the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; page. It is enough for the tutorial to create the &lt;code&gt;lib.def&lt;/code&gt; file with the following content:</source>
          <target state="translated">&lt;code&gt;.h&lt;/code&gt; ファイルのすべてのセットについて、Kotlin / Nativeの &lt;code&gt;cinterop&lt;/code&gt; &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;を使用して、Kotlin / Nativeライブラリまたは &lt;code&gt;.klib&lt;/code&gt; を生成します。生成されたライブラリは、Kotlin /ネイティブからCへの呼び出しをブリッジします。これには、 &lt;code&gt;.h&lt;/code&gt; ファイルからの定義に対するそれぞれのKotlin宣言が含まれます。 &lt;code&gt;cinterop&lt;/code&gt; ツールを実行するには、 &lt;code&gt;.h&lt;/code&gt; ファイルが必要です。また、 &lt;code&gt;lib.c&lt;/code&gt; をコンパイルして実行する場合を除き、lib.cファイルを作成する必要はありません。これに関する詳細は、&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;Cライブラリ&lt;/a&gt;ページで説明されています。チュートリアルが &lt;code&gt;lib.def&lt;/code&gt; ファイルを作成するには、次の内容で十分です。</target>
        </trans-unit>
        <trans-unit id="a79d24b8ae547d8a56979a7932df7c035d95e45d" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt;, &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt; 、 &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90fea239952b564e524c37f54598a7c5cbd251b7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;private&lt;/code&gt; could be used to define a property or helper function that is needed by several functions in one file, or a complex type returned by one of your private functions, without leaking them to the rest of the codebase:</source>
          <target state="translated">たとえば、 &lt;code&gt;private&lt;/code&gt; を使用して、1つのファイル内のいくつかの関数が必要とするプロパティやヘルパー関数、またはプライベート関数の1つが返す複雑な型を定義して、コードベースの他の部分にリークすることはありません。</target>
        </trans-unit>
        <trans-unit id="41b672a7205fead42e4ee031049451669f4c3977" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;var firstName: String&lt;/code&gt; gets compiled to the following Java declarations:</source>
          <target state="translated">たとえば、 &lt;code&gt;var firstName: String&lt;/code&gt; は、次のJava宣言にコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="2e26c3138f6c624545fd6a6aad2743d30af7ee6e" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; to the compiler arguments makes the compiler generate warnings for inappropriate usages of types annotated by &lt;code&gt;@org.library.MyNullable&lt;/code&gt; and ignore all other JSR-305 annotations.</source>
          <target state="translated">たとえば、コンパイラの引数に &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; を &lt;code&gt;@org.library.MyNullable&lt;/code&gt; と、@ org.library.MyNullableで注釈された型の不適切な使用についてコンパイラが警告を生成します。他のすべてのJSR-305アノテーションを無視します。</target>
        </trans-unit>
        <trans-unit id="62105b32ee578f8ede398419b9b2ca8e4ed39f3b" translate="yes" xml:space="preserve">
          <source>For example, adding the following Java class:</source>
          <target state="translated">例えば、次のようなJavaクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="704304023cf4cdbc372fedca8efa4ba9b344de40" translate="yes" xml:space="preserve">
          <source>For example, consider a module is named &lt;code&gt;kotlin-js-example&lt;/code&gt; and it contains a function named &lt;code&gt;toKeep&lt;/code&gt; in package &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt;. Use the following line:</source>
          <target state="translated">例えば、モジュールの名前は考える &lt;code&gt;kotlin-js-example&lt;/code&gt; と、それはという名前の関数が含まれ &lt;code&gt;toKeep&lt;/code&gt; パッケージで &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt; を。次の行を使用します。</target>
        </trans-unit>
        <trans-unit id="f909490e8018194092afc3fb5cdc677fa190965f" translate="yes" xml:space="preserve">
          <source>For example, here's how you can import JQuery into a Kotlin module:</source>
          <target state="translated">例えば、JQueryをKotlinモジュールにインポートする方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="37483cc9fb0f554ae163c5d459de77c734124a8f" translate="yes" xml:space="preserve">
          <source>For example, if OV = 1.0 and NV = 1.1, you can observe one of the following warnings:</source>
          <target state="translated">例えば、OV=1.0、NV=1.1の場合、以下のいずれかの警告が観測されます。</target>
        </trans-unit>
        <trans-unit id="7e6d325fa34b0e3eb5a531fab7231604b20e54f9" translate="yes" xml:space="preserve">
          <source>For example, if you choose &quot;Kotlin (Multiplatform Library)&quot;, a library project is created that has three &lt;a href=&quot;#setting-up-targets&quot;&gt;targets&lt;/a&gt;, one for the JVM, one for JS, and one for the Native platform that you are using. These are configured in the &lt;code&gt;build.gradle&lt;/code&gt; script in the following way:</source>
          <target state="translated">たとえば、「Kotlin（マルチプラットフォームライブラリ）」を選択すると、JVM用、JS用、使用しているネイティブプラットフォーム用の3つの&lt;a href=&quot;#setting-up-targets&quot;&gt;ターゲット&lt;/a&gt;を持つライブラリプロジェクトが作成されます。これらは、 &lt;code&gt;build.gradle&lt;/code&gt; スクリプトで次のように構成されます。</target>
        </trans-unit>
        <trans-unit id="9e2cac3c12317d19b9429bd6c154e728f55e225b" translate="yes" xml:space="preserve">
          <source>For example, if you want to check the property name before binding, you can write something like this:</source>
          <target state="translated">例えば、バインドする前にプロパティ名を確認したい場合は、次のように書きます。</target>
        </trans-unit>
        <trans-unit id="b2e2d9ddd64f99c42afbd7403a3cecd42303d49b" translate="yes" xml:space="preserve">
          <source>For example, if you work a lot with bytes, you might want to easily get an unsigned byte in the range 0 through 255 instead of the default -128 through 127 (the result will have to be in the form of a &lt;code&gt;Short&lt;/code&gt;/&lt;code&gt;Int&lt;/code&gt;/&lt;code&gt;Long&lt;/code&gt;, though). &lt;code&gt;Byte&lt;/code&gt; is a built-in class that you can't modify, but you can define this extension function:</source>
          <target state="translated">たとえば、バイトを多用する場合、デフォルトの-128〜127ではなく、0〜255の範囲の符号なしバイトを簡単に取得できます（結果は &lt;code&gt;Short&lt;/code&gt; / &lt;code&gt;Int&lt;/code&gt; /の形式である必要があります） &lt;code&gt;Long&lt;/code&gt; ですが）。 &lt;code&gt;Byte&lt;/code&gt; は、変更できない組み込みクラスですが、次の拡張関数を定義できます。</target>
        </trans-unit>
        <trans-unit id="dc2ee7ccaf73dc899619ee5d9d39c7987e388739" translate="yes" xml:space="preserve">
          <source>For example, in the following case there will be no backing field:</source>
          <target state="translated">例えば、以下のような場合は、バッキングフィールドはありません。</target>
        </trans-unit>
        <trans-unit id="3a9c780158db1fc47c1a136b933a65ecc526133e" translate="yes" xml:space="preserve">
          <source>For example, let's make our example a bit more complicated:</source>
          <target state="translated">例えば、この例をもう少し複雑にしてみましょう。</target>
        </trans-unit>
        <trans-unit id="c1839f64eb2ce7573d6701acab747bd62c3838e1" translate="yes" xml:space="preserve">
          <source>For example, on JVM, &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; instances for a primitive type (&lt;code&gt;int&lt;/code&gt;) and the corresponding wrapper type (&lt;code&gt;java.lang.Integer&lt;/code&gt;) are considered equal, because they have the same fully qualified name &quot;kotlin.Int&quot;.</source>
          <target state="translated">たとえば、JVMでは、プリミティブ型（ &lt;code&gt;int&lt;/code&gt; ）と対応するラッパー型（ &lt;code&gt;java.lang.Integer&lt;/code&gt; ）の&lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt;インスタンスは、完全修飾名「kotlin.Int」が同じであるため、等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="36dc75e0d04d01c4a44b30e1411da2ccccd856ca" translate="yes" xml:space="preserve">
          <source>For example, the C function returning values through pointer parameters can be used like</source>
          <target state="translated">例えば、ポインタパラメータを介して値を返すC言語の関数は、次のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="079a917fd14fe02e329ee98416d6d8eaef4f6689" translate="yes" xml:space="preserve">
          <source>For example, the following Kotlin code:</source>
          <target state="translated">例えば、次のようなKotlinのコード。</target>
        </trans-unit>
        <trans-unit id="17bc9d0385f8ddb156c83471c2dbea8b14c1add0" translate="yes" xml:space="preserve">
          <source>For example, to create a target for each of the Kotlin/Native supported platforms (see below), use this code:</source>
          <target state="translated">例えば、Kotlin/Native がサポートしている各プラットフォーム(下記参照)用のターゲットを作成するには、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="17b4ffea3f831eaa0dd821feed12e719a49e8b8e" translate="yes" xml:space="preserve">
          <source>For example, to disable DCE based on a custom condition for the &lt;code&gt;main&lt;/code&gt; source set and always for the &lt;code&gt;test&lt;/code&gt; code, add the following lines to the build script:</source>
          <target state="translated">たとえば、 &lt;code&gt;main&lt;/code&gt; ソースセットと常に &lt;code&gt;test&lt;/code&gt; コードのカスタム条件に基づいてDCEを無効にするには、ビルドスクリプトに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="4bbcf5e1acf1d0538a87cdcded2402b6469d470f" translate="yes" xml:space="preserve">
          <source>For fully stable versions of the compiler the default binary compatibility protocol is the following:</source>
          <target state="translated">コンパイラの完全に安定したバージョンでは、デフォルトのバイナリ互換性プロトコルは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1890ad53fa33283873fb912de74957d361b6491e" translate="yes" xml:space="preserve">
          <source>For generic functions, using &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt; makes the casts such as &lt;code&gt;arg as T&lt;/code&gt; checked, unless &lt;code&gt;arg&lt;/code&gt;'s type has &lt;em&gt;its own&lt;/em&gt; type arguments that are erased.</source>
          <target state="translated">ジェネリック関数の場合、&lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;具体化された型パラメーターを使用&lt;/a&gt;すると、 &lt;code&gt;arg&lt;/code&gt; の型に消去される&lt;em&gt;独自の&lt;/em&gt;型引数がない限り、 &lt;code&gt;arg as T&lt;/code&gt; などのキャストがチェックされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b15e10dc47b42201678c7bc8e7f549631406db" translate="yes" xml:space="preserve">
          <source>For information on how to do use each of these tutorials refer to the corresponding section:</source>
          <target state="translated">これらのチュートリアルの使用方法については、対応するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="53871db63838c21ea25dd734e891b1c31c10f9df" translate="yes" xml:space="preserve">
          <source>For inline markup, KDoc uses the regular &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; syntax, extended to support a shorthand syntax for linking to other elements in the code.</source>
          <target state="translated">インラインマークアップの場合、KDocは通常の&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;構文を使用し、コード内の他の要素にリンクするための省略構文をサポートするように拡張されています。</target>
        </trans-unit>
        <trans-unit id="0a82fb018c66cd1ea1c613ead3f02864bd52e930" translate="yes" xml:space="preserve">
          <source>For instance, given</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="54fe8967f6394a3362a64d10de78a37ca1295329" translate="yes" xml:space="preserve">
          <source>For instance, when you use Spring, you don't need all the classes to be open, but only classes annotated with specific annotations like &lt;code&gt;@Configuration&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt;. &lt;em&gt;All-open&lt;/em&gt; allows to specify such annotations.</source>
          <target state="translated">たとえば、Springを使用する場合、すべてのクラスを開く必要はありませんが、 &lt;code&gt;@Configuration&lt;/code&gt; や &lt;code&gt;@Service&lt;/code&gt; などの特定のアノテーションが付けられたクラスのみが必要です。&lt;em&gt;All-open&lt;/em&gt;では、このような注釈を指定できます。</target>
        </trans-unit>
        <trans-unit id="7aaad9d147155eb1a6a3e244f5b9a2a8a6e149b0" translate="yes" xml:space="preserve">
          <source>For iterating mutable collections, there is &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt;&lt;code&gt;MutableIterator&lt;/code&gt;&lt;/a&gt; that extends &lt;code&gt;Iterator&lt;/code&gt; with the element removal function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. So, you can remove elements from a collection while iterating it.</source>
          <target state="translated">可変コレクションを反復するために、要素削除関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;Iterator&lt;/code&gt; を拡張する&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt; &lt;code&gt;MutableIterator&lt;/code&gt; &lt;/a&gt;があります。したがって、コレクションを反復しながら、コレクションから要素を削除できます。</target>
        </trans-unit>
        <trans-unit id="9623eecb005f28baef52cb3adf2863355f3a393f" translate="yes" xml:space="preserve">
          <source>For kotlin versions 1.1.50+/1.2, the default behavior is the same to &lt;code&gt;-Xjsr305=warn&lt;/code&gt;. The &lt;code&gt;strict&lt;/code&gt; value should be considered experimental (more checks may be added to it in the future).</source>
          <target state="translated">kotlinバージョン1.1.50 + / 1.2の場合、デフォルトの動作は &lt;code&gt;-Xjsr305=warn&lt;/code&gt; と同じです。 &lt;code&gt;strict&lt;/code&gt; 値は、実験（複数チェックが将来的にそれに添加することができる）を考慮すべきです。</target>
        </trans-unit>
        <trans-unit id="6cc59502f4a11ebcb9c7bb01b708f5f38029db03" translate="yes" xml:space="preserve">
          <source>For lists, there is a constructor that takes the list size and the initializer function that defines the element value based on its index.</source>
          <target state="translated">リストの場合は、リストのサイズを受け取るコンストラクタと、そのインデックスに基づいて要素の値を定義するイニシャライザ関数があります。</target>
        </trans-unit>
        <trans-unit id="cf7a2b59658422559e19da1a59a94b59966b8fc1" translate="yes" xml:space="preserve">
          <source>For lists, there is a special iterator implementation: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;/a&gt;. It supports iterating lists in both directions: forwards and backwards. Backward iteration is implemented by the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt;&lt;code&gt;hasPrevious()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;. Additionally, the &lt;code&gt;ListIterator&lt;/code&gt; provides information about the element indices with the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt;&lt;code&gt;nextIndex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt;&lt;code&gt;previousIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リストの場合、特別な反復子の実装：&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt; &lt;code&gt;ListIterator&lt;/code&gt; があり&lt;/a&gt;ます。それは双方向のリストの反復をサポートします：前方と後方。後方反復は、&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt; &lt;code&gt;hasPrevious()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt;関数によって実装されます。さらに、 &lt;code&gt;ListIterator&lt;/code&gt; は、要素のインデックスに関する情報を関数&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt; &lt;code&gt;nextIndex()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt; &lt;code&gt;previousIndex()&lt;/code&gt; で提供し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2613f4bb9152895d1f3da19c9b902595c6bf07de" translate="yes" xml:space="preserve">
          <source>For longer documentation comments, place the opening &lt;code&gt;/**&lt;/code&gt; on a separate line and begin each subsequent line with an asterisk:</source>
          <target state="translated">ドキュメントのコメントを長くするには、最初の &lt;code&gt;/**&lt;/code&gt; を別々の行に配置し、後続の各行をアスタリスクで開始します。</target>
        </trans-unit>
        <trans-unit id="65b1c9d3c495af1a58e2d00003c1736af99c56da" translate="yes" xml:space="preserve">
          <source>For medium and large projects the decision may be tough. If you are not ready to update many files right away you may decide to migrate module by module, or continue with gradual migration for modified files only.</source>
          <target state="translated">中規模や大規模なプロジェクトでは、決断は難しいかもしれません。多くのファイルをすぐに更新する準備ができていない場合は、モジュールごとに移行するか、変更されたファイルのみを対象とした段階的な移行を継続するかを決定することができます。</target>
        </trans-unit>
        <trans-unit id="e162067bf7e3d179878c919852cbcdf24e4f2f1f" translate="yes" xml:space="preserve">
          <source>For members declared inside a class:</source>
          <target state="translated">クラス内で宣言されたメンバの場合。</target>
        </trans-unit>
        <trans-unit id="a09f3bfd60f839007a27ec3a24559d939b2a35e4" translate="yes" xml:space="preserve">
          <source>For more complex properties, always put &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keywords on separate lines:</source>
          <target state="translated">より複雑なプロパティの場合は、 &lt;code&gt;get&lt;/code&gt; キーワードと &lt;code&gt;set&lt;/code&gt; キーワードを常に別々の行に配置します。</target>
        </trans-unit>
        <trans-unit id="2c6d11cb317dc6418f5fe966cb7b00efa9ca9a48" translate="yes" xml:space="preserve">
          <source>For more complicated problems, Kotlin's extensive library of functional operations on collections comes in handy to minimize the boilerplate and turn the code into a linear top-to-bottom and left-to-right fluent data transformation pipeline. For example, the &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;Problem B: Long Number&lt;/a&gt; problem takes a simple greedy algorithm to implement and it can be written using this style without a single mutable variable:</source>
          <target state="translated">より複雑な問題については、コトリンのコレクションに対する広範な関数演算ライブラリが定型文を最小限に抑え、コードを上から下へ、左から右へ流れるようなデータ変換パイプラインに変換するのに役立ちます。たとえば、&lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;問題B：長い数値の&lt;/a&gt;問題は、実装に単純な貪欲なアルゴリズムを使用し、単一の可変変数なしでこのスタイルを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="c8c7b26bf892e65f4f2f16ff179ebd4da28ea9ec" translate="yes" xml:space="preserve">
          <source>For more details about compatibility issues, see the &lt;code&gt;@JvmDefault&lt;/code&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt;.</source>
          <target state="translated">互換性の問題の詳細については、 &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;リファレンスページをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2b8ad66e41103aa7e5d576dd41cf032d9cca536" translate="yes" xml:space="preserve">
          <source>For more details about interface delegation in Kotlin, see &lt;a href=&quot;delegation&quot;&gt;Delegation&lt;/a&gt;.</source>
          <target state="translated">Kotlinのインターフェース委任の詳細については、「&lt;a href=&quot;delegation&quot;&gt;委任&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f99246268b944cbfb72319adef4c2c06f42700a" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;Visibility Modifiers&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;可視性修飾子を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f8c202f6d3fc629243929f6137d51db369ef6ba" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;dynamic&lt;/code&gt; see the &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;dynamic&lt;/code&gt; 参照&lt;a href=&quot;../../reference/dynamic-type&quot;&gt;リファレンスドキュメントを&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
