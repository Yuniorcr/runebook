<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="ef6e2c0065a88138164685c22b362043d944b36e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionType()</source>
          <target state="translated">ImageWriteParam.setCompressionType()</target>
        </trans-unit>
        <trans-unit id="885029e5b6f663d0db40574b49c292996c41bb83" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setProgressiveMode()</source>
          <target state="translated">ImageWriteParam.setProgressiveMode()</target>
        </trans-unit>
        <trans-unit id="0f5c357e718859d4ab4fcb8954692487ec570f9e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTiling()</source>
          <target state="translated">ImageWriteParam.setTiling()</target>
        </trans-unit>
        <trans-unit id="3573442ec6942f8378ae4ae34a30e19a64ada6bf" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTilingMode()</source>
          <target state="translated">ImageWriteParam.setTilingMode()</target>
        </trans-unit>
        <trans-unit id="b1f9535946bbf40d49d701cdb7851551f5d1f445" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetCompression()</source>
          <target state="translated">ImageWriteParam.unsetCompression()</target>
        </trans-unit>
        <trans-unit id="1685ca130d8e5f51d7594294aa05354251b83e47" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetTiling()</source>
          <target state="translated">ImageWriteParam.unsetTiling()</target>
        </trans-unit>
        <trans-unit id="5fba1640e942b7ec12607cb762460e194c6ddaf0" translate="yes" xml:space="preserve">
          <source>ImageWriter</source>
          <target state="translated">ImageWriter</target>
        </trans-unit>
        <trans-unit id="3f598a742e8fdc592bed4e3edd80ceccd1832c25" translate="yes" xml:space="preserve">
          <source>ImageWriter.abort()</source>
          <target state="translated">ImageWriter.abort()</target>
        </trans-unit>
        <trans-unit id="7d7721ffd2b23cd8f347cc9e8386027c9b7c31fb" translate="yes" xml:space="preserve">
          <source>ImageWriter.abortRequested()</source>
          <target state="translated">ImageWriter.abortRequested()</target>
        </trans-unit>
        <trans-unit id="e4b4813b91ba24ef180c41de0e405ab953b793e6" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteProgressListener()</source>
          <target state="translated">ImageWriter.addIIOWriteProgressListener()</target>
        </trans-unit>
        <trans-unit id="d1dba3c86a102bb8a27c019a2e1862faa82b8c4d" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteWarningListener()</source>
          <target state="translated">ImageWriter.addIIOWriteWarningListener()</target>
        </trans-unit>
        <trans-unit id="88ef5be0c1a01698599bd1744b79b4b0acdba7aa" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertEmpty()</source>
          <target state="translated">ImageWriter.canInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="5d9932c3c55f9a93b56c054ab70bfaa81233e682" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertImage()</source>
          <target state="translated">ImageWriter.canInsertImage()</target>
        </trans-unit>
        <trans-unit id="c55fd73eef7cec45a0476aedae00b5d2c0c5fe1a" translate="yes" xml:space="preserve">
          <source>ImageWriter.canRemoveImage()</source>
          <target state="translated">ImageWriter.canRemoveImage()</target>
        </trans-unit>
        <trans-unit id="077828fc76e1b686cb8e443e6552931f5f8ccbee" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceImageMetadata()</source>
          <target state="translated">ImageWriter.canReplaceImageMetadata()</target>
        </trans-unit>
        <trans-unit id="dde6bf583032f420007ff04df4ea48b393adab68" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplacePixels()</source>
          <target state="translated">ImageWriter.canReplacePixels()</target>
        </trans-unit>
        <trans-unit id="8219df68c104673c9948072c620d4c4be6366647" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceStreamMetadata()</source>
          <target state="translated">ImageWriter.canReplaceStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="702f7f8bb240a638dfe12a43e4fba5d6f190ce79" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteEmpty()</source>
          <target state="translated">ImageWriter.canWriteEmpty()</target>
        </trans-unit>
        <trans-unit id="bc33598046176d9eab7bba30e8222147757f2f72" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteRasters()</source>
          <target state="translated">ImageWriter.canWriteRasters()</target>
        </trans-unit>
        <trans-unit id="c5136c9bda61ca27c5cd0dae82f2baf85b060c58" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteSequence()</source>
          <target state="translated">ImageWriter.canWriteSequence()</target>
        </trans-unit>
        <trans-unit id="8c93b907cf061808747b0600c515e9f003b0e137" translate="yes" xml:space="preserve">
          <source>ImageWriter.clearAbortRequest()</source>
          <target state="translated">ImageWriter.clearAbortRequest()</target>
        </trans-unit>
        <trans-unit id="69c2b9ab433f8e2fd072dfed1da17c92bae04c90" translate="yes" xml:space="preserve">
          <source>ImageWriter.convertImageMetadata()</source>
          <target state="translated">ImageWriter.convertImageMetadata()</target>
        </trans-unit>
        <trans-unit id="495ce4c2c4273e1e46a930a8187c9f45f94c9896" translate="yes" xml:space="preserve">
          <source>ImageWriter.convertStreamMetadata()</source>
          <target state="translated">ImageWriter.convertStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="b6649f60f10be92daf80ffb85853cd4e31d8d80d" translate="yes" xml:space="preserve">
          <source>ImageWriter.dispose()</source>
          <target state="translated">ImageWriter.dispose()</target>
        </trans-unit>
        <trans-unit id="d9a96211e88c46d8122ba717844aa90f2fe59ae5" translate="yes" xml:space="preserve">
          <source>ImageWriter.endInsertEmpty()</source>
          <target state="translated">ImageWriter.endInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="02c53a0a5a5040166dad2ff2b70bf6417932e5a9" translate="yes" xml:space="preserve">
          <source>ImageWriter.endReplacePixels()</source>
          <target state="translated">ImageWriter.endReplacePixels()</target>
        </trans-unit>
        <trans-unit id="243445b4691380bda3e90240c0c25fbf2db5cfa7" translate="yes" xml:space="preserve">
          <source>ImageWriter.endWriteEmpty()</source>
          <target state="translated">ImageWriter.endWriteEmpty()</target>
        </trans-unit>
        <trans-unit id="7f53b9aebaff977beb83d1ab112645f4aac5efe2" translate="yes" xml:space="preserve">
          <source>ImageWriter.endWriteSequence()</source>
          <target state="translated">ImageWriter.endWriteSequence()</target>
        </trans-unit>
        <trans-unit id="048ac4db3ab2569e1a0464b22494fad23e59c667" translate="yes" xml:space="preserve">
          <source>ImageWriter.getAvailableLocales()</source>
          <target state="translated">ImageWriter.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="186f09acf93554a35caa650f580388f83fab1b64" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultImageMetadata()</source>
          <target state="translated">ImageWriter.getDefaultImageMetadata()</target>
        </trans-unit>
        <trans-unit id="261e96dca25da3b6ddc2ddf6270898ef54647ebd" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultStreamMetadata()</source>
          <target state="translated">ImageWriter.getDefaultStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="3b0ecc6a3712bede4df8b034146694078aea067c" translate="yes" xml:space="preserve">
          <source>ImageWriter.getDefaultWriteParam()</source>
          <target state="translated">ImageWriter.getDefaultWriteParam()</target>
        </trans-unit>
        <trans-unit id="d27a11604f88d6dd3d5e1dac72049b7318fa68d4" translate="yes" xml:space="preserve">
          <source>ImageWriter.getLocale()</source>
          <target state="translated">ImageWriter.getLocale()</target>
        </trans-unit>
        <trans-unit id="b1dcdc90769debae6b4b53593e7f1b23abaf557d" translate="yes" xml:space="preserve">
          <source>ImageWriter.getNumThumbnailsSupported()</source>
          <target state="translated">ImageWriter.getNumThumbnailsSupported()</target>
        </trans-unit>
        <trans-unit id="70342f647937897e5a8f931d41cfeeffd55e1d58" translate="yes" xml:space="preserve">
          <source>ImageWriter.getOriginatingProvider()</source>
          <target state="translated">ImageWriter.getOriginatingProvider()</target>
        </trans-unit>
        <trans-unit id="2e3dc4746bcf1b64502e6c10b09f75bae504e08f" translate="yes" xml:space="preserve">
          <source>ImageWriter.getOutput()</source>
          <target state="translated">ImageWriter.getOutput()</target>
        </trans-unit>
        <trans-unit id="17b68947f77c2816d5402030aae865b9c6bf49d7" translate="yes" xml:space="preserve">
          <source>ImageWriter.getPreferredThumbnailSizes()</source>
          <target state="translated">ImageWriter.getPreferredThumbnailSizes()</target>
        </trans-unit>
        <trans-unit id="f0996382875ebc3931f8227d1da9d9999c6262f0" translate="yes" xml:space="preserve">
          <source>ImageWriter.prepareInsertEmpty()</source>
          <target state="translated">ImageWriter.prepareInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="1600a8485e8aee5eabdb03fa172a540fa208a9ca" translate="yes" xml:space="preserve">
          <source>ImageWriter.prepareReplacePixels()</source>
          <target state="translated">ImageWriter.prepareReplacePixels()</target>
        </trans-unit>
        <trans-unit id="35d0acbd7d75f38aa62c22dada23269ac6e692a6" translate="yes" xml:space="preserve">
          <source>ImageWriter.prepareWriteEmpty()</source>
          <target state="translated">ImageWriter.prepareWriteEmpty()</target>
        </trans-unit>
        <trans-unit id="77b62910eb17e81d20d2ac6ee3a1451fec8f7b11" translate="yes" xml:space="preserve">
          <source>ImageWriter.prepareWriteSequence()</source>
          <target state="translated">ImageWriter.prepareWriteSequence()</target>
        </trans-unit>
        <trans-unit id="264a512aa75f545384e20d5c2a2d44f8cfd28c22" translate="yes" xml:space="preserve">
          <source>ImageWriter.processImageComplete()</source>
          <target state="translated">ImageWriter.processImageComplete()</target>
        </trans-unit>
        <trans-unit id="d899034a5d569f4ed1324d22847e032242084711" translate="yes" xml:space="preserve">
          <source>ImageWriter.processImageProgress()</source>
          <target state="translated">ImageWriter.processImageProgress()</target>
        </trans-unit>
        <trans-unit id="27332d4fb5ca683298f89fcef5f985ee18b1e27d" translate="yes" xml:space="preserve">
          <source>ImageWriter.processImageStarted()</source>
          <target state="translated">ImageWriter.processImageStarted()</target>
        </trans-unit>
        <trans-unit id="ea20b4712a47bc75f276b4adf8231f76d03fb566" translate="yes" xml:space="preserve">
          <source>ImageWriter.processThumbnailComplete()</source>
          <target state="translated">ImageWriter.processThumbnailComplete()</target>
        </trans-unit>
        <trans-unit id="51d80f53b4677d0c618c41e75214b7f17c0cfefb" translate="yes" xml:space="preserve">
          <source>ImageWriter.processThumbnailProgress()</source>
          <target state="translated">ImageWriter.processThumbnailProgress()</target>
        </trans-unit>
        <trans-unit id="e8d245e553e69546053b699570a19cf917b0ff1e" translate="yes" xml:space="preserve">
          <source>ImageWriter.processThumbnailStarted()</source>
          <target state="translated">ImageWriter.processThumbnailStarted()</target>
        </trans-unit>
        <trans-unit id="db5f4715eb940bd70bc26506a945db7ea9b2da98" translate="yes" xml:space="preserve">
          <source>ImageWriter.processWarningOccurred()</source>
          <target state="translated">ImageWriter.processWarningOccurred()</target>
        </trans-unit>
        <trans-unit id="7858acf7ee93b4017b8847e7702c868343598811" translate="yes" xml:space="preserve">
          <source>ImageWriter.processWriteAborted()</source>
          <target state="translated">ImageWriter.processWriteAborted()</target>
        </trans-unit>
        <trans-unit id="03fbfbe0ce8b469a11cc57d3d2f89ca0bcce678a" translate="yes" xml:space="preserve">
          <source>ImageWriter.removeAllIIOWriteProgressListeners()</source>
          <target state="translated">ImageWriter.removeAllIIOWriteProgressListeners()</target>
        </trans-unit>
        <trans-unit id="b83fee8f0c7d4508aa22b6525bb5d98ed0b3322f" translate="yes" xml:space="preserve">
          <source>ImageWriter.removeAllIIOWriteWarningListeners()</source>
          <target state="translated">ImageWriter.removeAllIIOWriteWarningListeners()</target>
        </trans-unit>
        <trans-unit id="cde86c599bcb774b43043a447041773b82450a7d" translate="yes" xml:space="preserve">
          <source>ImageWriter.removeIIOWriteProgressListener()</source>
          <target state="translated">ImageWriter.removeIIOWriteProgressListener()</target>
        </trans-unit>
        <trans-unit id="b9c0bc66df2955815d28d74bdff020a6af20a3d1" translate="yes" xml:space="preserve">
          <source>ImageWriter.removeIIOWriteWarningListener()</source>
          <target state="translated">ImageWriter.removeIIOWriteWarningListener()</target>
        </trans-unit>
        <trans-unit id="31fbb91214d8d39ad428825a48f3fbdb6fa60e2a" translate="yes" xml:space="preserve">
          <source>ImageWriter.removeImage()</source>
          <target state="translated">ImageWriter.removeImage()</target>
        </trans-unit>
        <trans-unit id="4f44e6546a9791fa9ab18d909a79abb19a863b88" translate="yes" xml:space="preserve">
          <source>ImageWriter.replaceImageMetadata()</source>
          <target state="translated">ImageWriter.replaceImageMetadata()</target>
        </trans-unit>
        <trans-unit id="c40e5cfd970633aa96ec6453b5cd39189eec519f" translate="yes" xml:space="preserve">
          <source>ImageWriter.replacePixels()</source>
          <target state="translated">ImageWriter.replacePixels()</target>
        </trans-unit>
        <trans-unit id="74e4c3be0799bbe1f7c421eb7be21b166ff60279" translate="yes" xml:space="preserve">
          <source>ImageWriter.replaceStreamMetadata()</source>
          <target state="translated">ImageWriter.replaceStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="85d06995be275a5540df30d0831143341e3bbff7" translate="yes" xml:space="preserve">
          <source>ImageWriter.reset()</source>
          <target state="translated">ImageWriter.reset()</target>
        </trans-unit>
        <trans-unit id="8fe56500c78199dad9352d8f603280356d3ac6c3" translate="yes" xml:space="preserve">
          <source>ImageWriter.setLocale()</source>
          <target state="translated">ImageWriter.setLocale()</target>
        </trans-unit>
        <trans-unit id="3c39e2913413d8d0162136d0c5d1d8e02851ce04" translate="yes" xml:space="preserve">
          <source>ImageWriter.setOutput()</source>
          <target state="translated">ImageWriter.setOutput()</target>
        </trans-unit>
        <trans-unit id="843ab49be0e6f42a53e35a4061fe467639fa6461" translate="yes" xml:space="preserve">
          <source>ImageWriter.write()</source>
          <target state="translated">ImageWriter.write()</target>
        </trans-unit>
        <trans-unit id="85fea7a2a9c977e351bbbfbd5963fa188c87bdac" translate="yes" xml:space="preserve">
          <source>ImageWriter.writeInsert()</source>
          <target state="translated">ImageWriter.writeInsert()</target>
        </trans-unit>
        <trans-unit id="ff12abc364282e927d5d6556cd4e677d4b326b02" translate="yes" xml:space="preserve">
          <source>ImageWriter.writeToSequence()</source>
          <target state="translated">ImageWriter.writeToSequence()</target>
        </trans-unit>
        <trans-unit id="d4c1cd6c86ba14ace868abe5436b6c3ea6867041" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi</source>
          <target state="translated">ImageWriterSpi</target>
        </trans-unit>
        <trans-unit id="7907c00c50feae52e7cd33381c995a5fe91a5327" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.canEncodeImage()</source>
          <target state="translated">ImageWriterSpi.canEncodeImage()</target>
        </trans-unit>
        <trans-unit id="114df7b0203df03ac058feb677cbc146b5ae8953" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.createWriterInstance()</source>
          <target state="translated">ImageWriterSpi.createWriterInstance()</target>
        </trans-unit>
        <trans-unit id="8c525960abeb10238cfa5bdebd4bafd51d80f9a9" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.getImageReaderSpiNames()</source>
          <target state="translated">ImageWriterSpi.getImageReaderSpiNames()</target>
        </trans-unit>
        <trans-unit id="2576cfdd9438a00c172370eb8ea0ed0dea89009f" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.getOutputTypes()</source>
          <target state="translated">ImageWriterSpi.getOutputTypes()</target>
        </trans-unit>
        <trans-unit id="b8388bf6802a2e78f4d3d0f825bbf4e83e656d96" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.isFormatLossless()</source>
          <target state="translated">ImageWriterSpi.isFormatLossless()</target>
        </trans-unit>
        <trans-unit id="473bc7237ab98736b74f2348995a72361b8fe8de" translate="yes" xml:space="preserve">
          <source>ImageWriterSpi.isOwnWriter()</source>
          <target state="translated">ImageWriterSpi.isOwnWriter()</target>
        </trans-unit>
        <trans-unit id="4211eb9c1fee9874525c7e0858d275f457d53e7d" translate="yes" xml:space="preserve">
          <source>Immediately performs the base action of this task and returns true if, upon return from this method, this task is guaranteed to have completed normally. This method may return false otherwise, to indicate that this task is not necessarily complete (or is not known to be complete), for example in asynchronous actions that require explicit invocations of completion methods. This method may also throw an (unchecked) exception to indicate abnormal exit. This method is designed to support extensions, and should not in general be called otherwise.</source>
          <target state="translated">このタスクの基本アクションを直ちに実行し、このメソッドからの復帰時に、このタスクが正常に完了したことが保証されていれば真を返します。このメソッドは、完了メソッドの明示的な呼び出しを必要とする非同期アクションなどで、このタスクが必ずしも完了していない(または完了していることがわからない)ことを示すために、それ以外の場合は false を返すことがあります。このメソッドは、異常終了を示すために例外を投げることもあります(チェックなし)。このメソッドは拡張機能をサポートするように設計されており、それ以外の場合は一般的に呼び出されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="ac8d36e07cc56e5300256f2a8edfaee0ed2e6146" translate="yes" xml:space="preserve">
          <source>Immediately turns off all sounding notes on this channel, ignoring the state of the Hold Pedal and the internal decay rate of the current &lt;code&gt;Instrument&lt;/code&gt;.</source>
          <target state="translated">ホールドペダルの状態と現在の &lt;code&gt;Instrument&lt;/code&gt; 内部ディケイレートを無視して、このチャンネルのすべての発音ノートをすぐにオフにします。</target>
        </trans-unit>
        <trans-unit id="8758ee05b925965fd186ddc64c16d26477e3f464" translate="yes" xml:space="preserve">
          <source>Immutable arbitrary-precision integers.</source>
          <target state="translated">不変の任意精度整数。</target>
        </trans-unit>
        <trans-unit id="9dadabf71766048113467cbc9b081255811fb85d" translate="yes" xml:space="preserve">
          <source>Immutable arbitrary-precision integers. All operations behave as if BigIntegers were represented in two's-complement notation (like Java's primitive integer types). BigInteger provides analogues to all of Java's primitive integer operators, and all relevant methods from java.lang.Math. Additionally, BigInteger provides operations for modular arithmetic, GCD calculation, primality testing, prime generation, bit manipulation, and a few other miscellaneous operations.</source>
          <target state="translated">不変の任意精度整数。すべての演算は、BigIntegerが2の補数記法で表現されているかのように動作します(Javaの原始整数型のように)。BigIntegerは、Javaの原始整数演算子のすべての類似体と、java.lang.Math.Mathからのすべての関連メソッドを提供します。さらに、BigIntegerは、モジュラー演算、GCD計算、プリマリティテスト、素数生成、ビット操作、およびいくつかの他の雑多な演算を提供します。</target>
        </trans-unit>
        <trans-unit id="9135fe2945023ddca478ae564e2500e0944e20a3" translate="yes" xml:space="preserve">
          <source>Immutable objects which encapsulate the context settings which describe certain rules for numerical operators, such as those implemented by the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;クラスによって実装されるものなど、数値演算子の特定のルールを記述するコンテキスト設定をカプセル化する不変オブジェクト。</target>
        </trans-unit>
        <trans-unit id="946d1618638d399656d4c970d5ff50225bc47ca3" translate="yes" xml:space="preserve">
          <source>Immutable, arbitrary-precision signed decimal numbers.</source>
          <target state="translated">不変、任意精度の符号付き10進数。</target>
        </trans-unit>
        <trans-unit id="10a4ef5ea8019a3a68a2a4a396691f1d378d5c37" translate="yes" xml:space="preserve">
          <source>Immutable, arbitrary-precision signed decimal numbers. A &lt;code&gt;BigDecimal&lt;/code&gt; consists of an arbitrary precision integer</source>
          <target state="translated">不変の任意精度の符号付き10進数。A &lt;code&gt;BigDecimal&lt;/code&gt; 任意精度の整数から成り</target>
        </trans-unit>
        <trans-unit id="7319e7f2b2dabeaa6c7b27e3568a5f5708e41dfe" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor</source>
          <target state="translated">ImmutableDescriptor</target>
        </trans-unit>
        <trans-unit id="b36cd894ece50e6aeffc14aae55cd0c27226fd98" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.clone()</source>
          <target state="translated">ImmutableDescriptor.clone()</target>
        </trans-unit>
        <trans-unit id="ed62e375f112ad9ccee1fba5b30840d38fa2702b" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.equals()</source>
          <target state="translated">ImmutableDescriptor.equals()</target>
        </trans-unit>
        <trans-unit id="cc2486aaa3fee33eb39977e70168c71e9c152579" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.getFieldNames()</source>
          <target state="translated">ImmutableDescriptor.getFieldNames()</target>
        </trans-unit>
        <trans-unit id="33c0e00e50294d5765396d16bed5b31e31b33704" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.getFieldValue()</source>
          <target state="translated">ImmutableDescriptor.getFieldValue()</target>
        </trans-unit>
        <trans-unit id="27f5f695db4a9c871dae6c1af910d2e02e2d8827" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.getFieldValues()</source>
          <target state="translated">ImmutableDescriptor.getFieldValues()</target>
        </trans-unit>
        <trans-unit id="c74b89a34fa2994f4dc20dbdb82753d62c2f8dba" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.getFields()</source>
          <target state="translated">ImmutableDescriptor.getFields()</target>
        </trans-unit>
        <trans-unit id="1ef304a4a99d2ee1d85fa6fa5017995b00e2e0d9" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.hashCode()</source>
          <target state="translated">ImmutableDescriptor.hashCode()</target>
        </trans-unit>
        <trans-unit id="1bed3158b55a0ff6dc6cf7eee07c3cb59df5f3ae" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.isValid()</source>
          <target state="translated">ImmutableDescriptor.isValid()</target>
        </trans-unit>
        <trans-unit id="9d20352efe423c7d09b17d5ea975cfa82b08c2a1" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.removeField()</source>
          <target state="translated">ImmutableDescriptor.removeField()</target>
        </trans-unit>
        <trans-unit id="d8f820196ba5acc46b266d1f2d228cf55ed7e0e1" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.setField()</source>
          <target state="translated">ImmutableDescriptor.setField()</target>
        </trans-unit>
        <trans-unit id="b253285758003719de94b91f5f21225436dd43df" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.setFields()</source>
          <target state="translated">ImmutableDescriptor.setFields()</target>
        </trans-unit>
        <trans-unit id="3331b138f3a353ed1554e90d8d377dd39afe2405" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.toString()</source>
          <target state="translated">ImmutableDescriptor.toString()</target>
        </trans-unit>
        <trans-unit id="58bb6a00dee16db192f8a0654a1c5b9c33aee672" translate="yes" xml:space="preserve">
          <source>ImmutableDescriptor.union()</source>
          <target state="translated">ImmutableDescriptor.union()</target>
        </trans-unit>
        <trans-unit id="53ec8c0efe8d1c9632dd1fa4a2184ba29ffd5a20" translate="yes" xml:space="preserve">
          <source>Impl</source>
          <target state="translated">Impl</target>
        </trans-unit>
        <trans-unit id="f0056cd1979fbe037e426222b348d25fd0689453" translate="yes" xml:space="preserve">
          <source>Implement &lt;code&gt;NamingListener.namingExceptionThrown()&lt;/code&gt; so that it will be notified of exceptions thrown while attempting to collect information about the events.</source>
          <target state="translated">&lt;code&gt;NamingListener.namingExceptionThrown()&lt;/code&gt; を実装して、イベントに関する情報を収集しようとしたときにスローされた例外が通知されるようにします。</target>
        </trans-unit>
        <trans-unit id="690dbe719c377561373486aa2f92fb2d6f5e4ff2" translate="yes" xml:space="preserve">
          <source>Implement &lt;code&gt;NamingListener.namingExceptionThrown()&lt;/code&gt; so that it will be notified of exceptions thrown while attempting to collect unsolicited notification events.</source>
          <target state="translated">非請求通知イベントの収集を試行中にスローされた例外が通知されるように、 &lt;code&gt;NamingListener.namingExceptionThrown()&lt;/code&gt; を実装します。</target>
        </trans-unit>
        <trans-unit id="75affea7e53c52cd8fab4edffef65fbf6ddb7308" translate="yes" xml:space="preserve">
          <source>Implement this interface and its method</source>
          <target state="translated">このインタフェースとそのメソッドを実装する</target>
        </trans-unit>
        <trans-unit id="5063beca960838bb432eb32e9373f94a39f1f788" translate="yes" xml:space="preserve">
          <source>Implement this interface and its method (&lt;code&gt;objectChanged()&lt;/code&gt;)</source>
          <target state="translated">このインターフェースとそのメソッドを実装します（ &lt;code&gt;objectChanged()&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aff6c99e6945c218f388a4965c6177505dfafc44" translate="yes" xml:space="preserve">
          <source>Implement this interface and its methods.</source>
          <target state="translated">このインタフェースとそのメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="1ea8952f50fb61a30b61a3567d5ee3bac1c761f1" translate="yes" xml:space="preserve">
          <source>Implementation Considerations</source>
          <target state="translated">実装上の考慮事項</target>
        </trans-unit>
        <trans-unit id="5392a59cf19d936f582c62933f66e98178ed888b" translate="yes" xml:space="preserve">
          <source>Implementation Note:</source>
          <target state="translated">実装ノート。</target>
        </trans-unit>
        <trans-unit id="35577183da3a83c37a96990c90025cb613ff293d" translate="yes" xml:space="preserve">
          <source>Implementation Notes</source>
          <target state="translated">実装上の注意事項</target>
        </trans-unit>
        <trans-unit id="56bd65881e479e23bf147d909b47f36e4767545c" translate="yes" xml:space="preserve">
          <source>Implementation Requirements:</source>
          <target state="translated">実装要件。</target>
        </trans-unit>
        <trans-unit id="b4db05a22307844f1edc4910aee61a1ebef7a63d" translate="yes" xml:space="preserve">
          <source>Implementation defaults require that only cipher suites which authenticate servers and provide confidentiality be enabled by default. Only if both sides explicitly agree to unauthenticated and/or non-private (unencrypted) communications will such a cipher suite be selected.</source>
          <target state="translated">実装のデフォルトでは、サーバを認証して機密性を提供する暗号化スイートのみがデフォルトで有効になっている必要があります。このような暗号化スイートが選択されるのは、認証されていない通信および/またはプライベートではない (暗号化されていない)通信に双方が明示的に同意した場合のみです。</target>
        </trans-unit>
        <trans-unit id="c2f7359e09ff4796735a0de165edbf80e271b48e" translate="yes" xml:space="preserve">
          <source>Implementation defaults require that only cipher suites which authenticate servers and provide confidentiality be enabled by default. Only if both sides explicitly agree to unauthenticated and/or non-private (unencrypted) communications will such a ciphersuite be selected.</source>
          <target state="translated">実装のデフォルトでは、サーバを認証して機密性を提供する暗号化スイートのみがデフォルトで有効になっている必要があります。このような暗号化スイートが選択されるのは、認証されていないおよび/またはプライベートではない (暗号化されていない)通信に双方が明示的に同意した場合のみです。</target>
        </trans-unit>
        <trans-unit id="89a26f51603685592a55c536acb5f2c479db2b32" translate="yes" xml:space="preserve">
          <source>Implementation dependent*</source>
          <target state="translated">実装に依存する*。</target>
        </trans-unit>
        <trans-unit id="7d8419888cec7209ae96fa638de54f65acbe69d3" translate="yes" xml:space="preserve">
          <source>Implementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be faster than their &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; counterparts.</source>
          <target state="translated">実装上の注意：すべての基本操作は一定の時間で実行されます。それらは（保証はされませんが）&lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; の&lt;/a&gt;対応物よりも高速である可能性があります。</target>
        </trans-unit>
        <trans-unit id="cf02ce9de07c112e78515bdd74f832a2026eaf4c" translate="yes" xml:space="preserve">
          <source>Implementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be much faster than their &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt; counterparts. Even bulk operations execute in constant time if their argument is also an enum set.</source>
          <target state="translated">実装上の注意：すべての基本操作は一定の時間で実行されます。それらは（保証はされませんが）&lt;a href=&quot;hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; の&lt;/a&gt;対応物よりもはるかに高速である可能性があります。引数も列挙セットである場合、一括操作でさえ一定時間で実行されます。</target>
        </trans-unit>
        <trans-unit id="c78934415a11eef7fc53181c42efe07bfe3abdfc" translate="yes" xml:space="preserve">
          <source>Implementation note: All constructors start a timer thread.</source>
          <target state="translated">実装上の注意:すべてのコンストラクタはタイマースレッドを開始します。</target>
        </trans-unit>
        <trans-unit id="9f92508b268a3c37cb005d5f88087365e6264aad" translate="yes" xml:space="preserve">
          <source>Implementation note: Currently the syntax properties of n are not used when doing the comparison. They might be in the future.</source>
          <target state="translated">実装上の注意:現在のところ、比較を行う際にnの構文プロパティは使用されていません。将来的には使用されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="357fbc883df7f4e052dd8544280cd702a44ddce7" translate="yes" xml:space="preserve">
          <source>Implementation note: Currently the syntax properties of suffix is not used or checked. They might be in the future.</source>
          <target state="translated">実装上の注意:現在のところ、接尾辞の構文プロパティは使用されていませんし、チェックもされていません。将来的には使われるかもしれません。</target>
        </trans-unit>
        <trans-unit id="57c22944b726188bf6ae7fd68a8e4603e289bff8" translate="yes" xml:space="preserve">
          <source>Implementation note: Currently the syntax properties of the two compound names are not compared for equality. They might be in the future.</source>
          <target state="translated">実装上の注意:現在のところ、2 つの複合名の構文プロパティは平等性のために比較されていません。将来的には比較されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="17efe67f11fa0904c5508671cc86b1f03383b987" translate="yes" xml:space="preserve">
          <source>Implementation note: Currently the syntax properties of the two compound names are not compared when checking order. They might be in the future.</source>
          <target state="translated">実装上の注意:現在、2 つの複合名の構文プロパティは、順序をチェックする際に比較されません。将来的には比較されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fadd3ec1701bf6a8dfbeac94df0eeb78424f23bc" translate="yes" xml:space="preserve">
          <source>Implementation note: In Sun's JRE, the &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is located as follows:</source>
          <target state="translated">実装メモ：SunのJREでは、 &lt;code&gt;PreferencesFactory&lt;/code&gt; 実装は次の場所にあります。</target>
        </trans-unit>
        <trans-unit id="e83e39679a9ec5b714b7a869ee88c37537f350ca" translate="yes" xml:space="preserve">
          <source>Implementation note: In Sun's default &lt;code&gt;Preferences&lt;/code&gt; implementations, the user's identity is inherited from the underlying operating system and does not change for the lifetime of the virtual machine. It is recognized that server-side &lt;code&gt;Preferences&lt;/code&gt; implementations may have the user identity change from request to request, implicitly passed to &lt;code&gt;Preferences&lt;/code&gt; methods via the use of a static &lt;a href=&quot;../../lang/threadlocal&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt; instance. Authors of such implementations are</source>
          <target state="translated">実装に関する注記：Sunのデフォルトの &lt;code&gt;Preferences&lt;/code&gt; 実装では、ユーザーのIDは基礎となるオペレーティングシステムから継承され、仮想マシンの存続期間中は変更されません。サーバー側の &lt;code&gt;Preferences&lt;/code&gt; 実装では、静的&lt;a href=&quot;../../lang/threadlocal&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;インスタンスを使用して &lt;code&gt;Preferences&lt;/code&gt; メソッドに暗黙的に渡される、要求ごとにユーザーIDが変更される可能性があることが認識されています。そのような実装の作者は</target>
        </trans-unit>
        <trans-unit id="f8347a8d9b2c4d7fc6f3f82a020b9be3d04e1235" translate="yes" xml:space="preserve">
          <source>Implementation note: It is a good idea for the returned input stream to be buffered.</source>
          <target state="translated">実装上の注意:返された入力ストリームはバッファリングされているのが良いでしょう。</target>
        </trans-unit>
        <trans-unit id="e620b36bbd87ef780306fc9678272515771dd91b" translate="yes" xml:space="preserve">
          <source>Implementation note: It is a good idea for the returned output stream to be buffered.</source>
          <target state="translated">実装上の注意:返された出力ストリームがバッファリングされていることは良いアイデアです。</target>
        </trans-unit>
        <trans-unit id="12c36d0f22c12cc8b408418579ca954e388e69cb" translate="yes" xml:space="preserve">
          <source>Implementation note: Java platform implementers are encouraged to document their implementation's behavior with respect to the &lt;code&gt;stackSize&lt;/code&gt; parameter.</source>
          <target state="translated">実装上の注意：Javaプラットフォームの実装者は、 &lt;code&gt;stackSize&lt;/code&gt; パラメーターに関する実装の動作を文書化することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="cc3f67c06af9914501ca24f8883a4e8966569d3d" translate="yes" xml:space="preserve">
          <source>Implementation note: The implementations of the &quot;bit twiddling&quot; methods (such as &lt;a href=&quot;integer#highestOneBit-int-&quot;&gt;&lt;code&gt;highestOneBit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;integer#numberOfTrailingZeros-int-&quot;&gt;&lt;code&gt;numberOfTrailingZeros&lt;/code&gt;&lt;/a&gt;) are based on material from Henry S. Warren, Jr.'s</source>
          <target state="translated">実装注：（例えば、メソッド「いじるビット」の実装&lt;a href=&quot;integer#highestOneBit-int-&quot;&gt; &lt;code&gt;highestOneBit&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;integer#numberOfTrailingZeros-int-&quot;&gt; &lt;code&gt;numberOfTrailingZeros&lt;/code&gt; は&lt;/a&gt;）ヘンリーS.ウォーレン・ジュニア者からの材料に基づいています</target>
        </trans-unit>
        <trans-unit id="8a4a16b7058693cbd0304356eead5736843a8092" translate="yes" xml:space="preserve">
          <source>Implementation note: The implementations of the &quot;bit twiddling&quot; methods (such as &lt;a href=&quot;long#highestOneBit-long-&quot;&gt;&lt;code&gt;highestOneBit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;long#numberOfTrailingZeros-long-&quot;&gt;&lt;code&gt;numberOfTrailingZeros&lt;/code&gt;&lt;/a&gt;) are based on material from Henry S. Warren, Jr.'s</source>
          <target state="translated">実装注：（例えば、メソッド「いじるビット」の実装&lt;a href=&quot;long#highestOneBit-long-&quot;&gt; &lt;code&gt;highestOneBit&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;long#numberOfTrailingZeros-long-&quot;&gt; &lt;code&gt;numberOfTrailingZeros&lt;/code&gt; は&lt;/a&gt;）ヘンリーS.ウォーレン・ジュニア者からの材料に基づいています</target>
        </trans-unit>
        <trans-unit id="3188db0c530c042cb96da0a5994510f97bfc5cc0" translate="yes" xml:space="preserve">
          <source>Implementation note: The sorting algorithm is a Dual-Pivot Quicksort by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm offers O(n log(n)) performance on many data sets that cause other quicksorts to degrade to quadratic performance, and is typically faster than traditional (one-pivot) Quicksort implementations.</source>
          <target state="translated">実装ノート:ソートアルゴリズムは、Vladimir Yaroslavoslavskiy、Jon Bentley、Joshua BlochによるDual-Pivot Quicksortです。このアルゴリズムは、他のクイックソートが二次性能に劣化する原因となる多くのデータセットに対してO(n log(n))の性能を提供し、従来の(ワンピボット)クイックソートの実装よりも一般的に高速です。</target>
        </trans-unit>
        <trans-unit id="b1d5721596c5d27ffa016e87f4ba7a7afcdd3a37" translate="yes" xml:space="preserve">
          <source>Implementation note: This class scales to large numbers of concurrently scheduled tasks (thousands should present no problem). Internally, it uses a binary heap to represent its task queue, so the cost to schedule a task is O(log n), where n is the number of concurrently scheduled tasks.</source>
          <target state="translated">実装上の注意:このクラスは多数の同時スケジュールされたタスクに対応しています (数千個でも問題ありません)。内部的には、タスクキューを表現するためにバイナリヒープを使用しているので、タスクをスケジュールするためのコストはO(log n)です。</target>
        </trans-unit>
        <trans-unit id="8ef20428f4dadec2f47e6e6850bd2a0025279b42" translate="yes" xml:space="preserve">
          <source>Implementation note: This implementation is a stable, adaptive, iterative mergesort that requires far fewer than n lg(n) comparisons when the input array is partially sorted, while offering the performance of a traditional mergesort when the input array is randomly ordered. If the input array is nearly sorted, the implementation requires approximately n comparisons. Temporary storage requirements vary from a small constant for nearly sorted input arrays to n/2 object references for randomly ordered input arrays.</source>
          <target state="translated">実装上の注意:この実装は,入力配列が部分的にソートされている場合には,従来のマージソートの性能を提供しながら,入力配列がランダムに順序付けされている場合には,従来のマージソートの性能を提供しながら,n lg(n)よりもはるかに少ない比較を必要とする安定した適応的な反復的マージソートです.入力配列がほぼソートされている場合,実装では約n回の比較が必要となります.一時的なストレージ要件は,ほぼソートされた入力配列に対する小さな定数から,ランダムに順序付けられた入力配列に対するn/2オブジェクト参照まで様々です.</target>
        </trans-unit>
        <trans-unit id="eb0470b2fedea042771a02bc0a5cad6afbd16278" translate="yes" xml:space="preserve">
          <source>Implementation note: This implementation maintains markable references by creating internal objects representing &quot;boxed&quot; [reference, boolean] pairs.</source>
          <target state="translated">実装上の注意:この実装では、&quot;ボックス化された&quot; [参照、ブール値]ペアを表す内部オブジェクトを作成することで、マーク可能な参照を維持します。</target>
        </trans-unit>
        <trans-unit id="2cff0a7e73f6f3b914b5fc7d60794f6a681ade41" translate="yes" xml:space="preserve">
          <source>Implementation note: This implementation maintains stamped references by creating internal objects representing &quot;boxed&quot; [reference, integer] pairs.</source>
          <target state="translated">実装上の注意:この実装では、「ボックス化された」[参照、整数]ペアを表す内部オブジェクトを作成することで、スタンプされた参照を維持します。</target>
        </trans-unit>
        <trans-unit id="82eefb0670ba392863839d4b7c351ae2f2aec431" translate="yes" xml:space="preserve">
          <source>Implementation note: This is a simple</source>
          <target state="translated">実装上の注意:これはシンプルな</target>
        </trans-unit>
        <trans-unit id="0f1b03ffa0afe0f4d925ad6c4cbaf6a53cc3d45c" translate="yes" xml:space="preserve">
          <source>Implementation note: this implementation provides O(log(n)) time for the enqueuing and dequeuing methods (&lt;code&gt;offer&lt;/code&gt;, &lt;code&gt;poll&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt;); linear time for the &lt;code&gt;remove(Object)&lt;/code&gt; and &lt;code&gt;contains(Object)&lt;/code&gt; methods; and constant time for the retrieval methods (&lt;code&gt;peek&lt;/code&gt;, &lt;code&gt;element&lt;/code&gt;, and &lt;code&gt;size&lt;/code&gt;).</source>
          <target state="translated">実装メモ：この実装は、エンキューおよびデキューのメソッド（ &lt;code&gt;offer&lt;/code&gt; 、 &lt;code&gt;poll&lt;/code&gt; 、 &lt;code&gt;remove()&lt;/code&gt; および &lt;code&gt;add&lt;/code&gt; ）にO（log（n））時間を提供します。 &lt;code&gt;remove(Object)&lt;/code&gt; &lt;code&gt;contains(Object)&lt;/code&gt; メソッドとcontains（Object）メソッドの線形時間。取得メソッド（ &lt;code&gt;peek&lt;/code&gt; 、 &lt;code&gt;element&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; ）の一定時間。</target>
        </trans-unit>
        <trans-unit id="3118ec0d79d222bcd2256d07c590a042e52e16c7" translate="yes" xml:space="preserve">
          <source>Implementation of the &lt;a href=&quot;rmiconnection&quot;&gt;&lt;code&gt;RMIConnection&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;rmiconnection&quot;&gt; &lt;code&gt;RMIConnection&lt;/code&gt; &lt;/a&gt;インターフェースの実装。</target>
        </trans-unit>
        <trans-unit id="f35fc1148f7585e27e0b304b08634ba0530c650a" translate="yes" xml:space="preserve">
          <source>Implementation of the &lt;a href=&quot;rmiconnection&quot;&gt;&lt;code&gt;RMIConnection&lt;/code&gt;&lt;/a&gt; interface. User code will not usually reference this class.</source>
          <target state="translated">&lt;a href=&quot;rmiconnection&quot;&gt; &lt;code&gt;RMIConnection&lt;/code&gt; &lt;/a&gt;インターフェースの実装。ユーザーコードは通常このクラスを参照しません。</target>
        </trans-unit>
        <trans-unit id="7f55d131a2dc1cfdadfdc55ae7393f24e57ed10d" translate="yes" xml:space="preserve">
          <source>Implementation of this compound name. This field is initialized by the constructors and cannot be null. It should be treated as a read-only variable by subclasses.</source>
          <target state="translated">この複合名の実装。このフィールドはコンストラクタによって初期化され、NULLにすることはできません。サブクラスでは読み取り専用の変数として扱う必要があります。</target>
        </trans-unit>
        <trans-unit id="4588461e3c03d7bc79552363d89b889505499be0" translate="yes" xml:space="preserve">
          <source>Implementation of this method should make sure the returned keys match the latest content of the keytab file. The result is a newly created copy that can be modified by the caller without modifying the keytab object. The caller should &lt;a href=&quot;kerberoskey#destroy--&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt; the result keys after they are used.</source>
          <target state="translated">このメソッドを実装すると、返されるキーがkeytabファイルの最新のコンテンツと一致するようになります。結果は、keytabオブジェクトを変更せずに呼び出し元が変更できる、新しく作成されたコピーです。呼び出し元は、使用後に結果キーを&lt;a href=&quot;kerberoskey#destroy--&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="396c510a1fc2ba783df94b6f422e4210a3731d18" translate="yes" xml:space="preserve">
          <source>Implementation specific properties are prefixed with a package name associated with the implementor, beginning with &lt;code&gt;com.&lt;/code&gt; or a similar prefix. All property names beginning with &lt;code&gt;pack.&lt;/code&gt; and &lt;code&gt;unpack.&lt;/code&gt; are reserved for use by this API.</source>
          <target state="translated">実装固有のプロパティには、 &lt;code&gt;com.&lt;/code&gt; で始まる、実装者に関連付けられたパッケージ名の接頭辞が付きます。または同様の接頭辞。 &lt;code&gt;pack.&lt;/code&gt; 始まるすべてのプロパティ名。そして &lt;code&gt;unpack.&lt;/code&gt; このAPIで使用するために予約されています。</target>
        </trans-unit>
        <trans-unit id="f7b530c2bf8258e2420563a2fcc5823de5071326" translate="yes" xml:space="preserve">
          <source>Implementations are free to flush changes into the persistent store at any time. They do not need to wait for this method to be called.</source>
          <target state="translated">実装は、いつでも変更を永続ストアにフラッシュすることができます。このメソッドが呼ばれるのを待つ必要はありません。</target>
        </trans-unit>
        <trans-unit id="eafb44c538b7aa7794d10b653782aa71d2cf24c8" translate="yes" xml:space="preserve">
          <source>Implementations are free to implement the Cloneable interface.</source>
          <target state="translated">Cloneableインターフェースの実装は自由です。</target>
        </trans-unit>
        <trans-unit id="90d7991836c70f5920ce49a6302cb1849e347963" translate="yes" xml:space="preserve">
          <source>Implementations are free to implement the Cloneable interface. Client applications can test cloneability by attempting cloning and catching the CloneNotSupportedException:</source>
          <target state="translated">実装は自由に Cloneable インターフェースを実装することができます。クライアントアプリケーションは複製を試みて CloneNotSupportedException をキャッチすることで複製可能性をテストすることができます。</target>
        </trans-unit>
        <trans-unit id="72941d4649ad680b0f6b254a46807c194c448b61" translate="yes" xml:space="preserve">
          <source>Implementations may declare support for units not listed by &lt;a href=&quot;temporalamount#getUnits--&quot;&gt;&lt;code&gt;getUnits()&lt;/code&gt;&lt;/a&gt;. Typically, the implementation would define additional units as conversions for the convenience of developers.</source>
          <target state="translated">実装では、&lt;a href=&quot;temporalamount#getUnits--&quot;&gt; &lt;code&gt;getUnits()&lt;/code&gt; で&lt;/a&gt;リストされていないユニットのサポートを宣言する場合があります。通常、実装では、開発者の便宜のために追加の単位を変換として定義します。</target>
        </trans-unit>
        <trans-unit id="7ed96c27054978247c25aafe7cde2ed3d3f6d247" translate="yes" xml:space="preserve">
          <source>Implementations may define implementation-specific keys.</source>
          <target state="translated">実装では、実装固有のキーを定義してもよい。</target>
        </trans-unit>
        <trans-unit id="e57a2e93acdecde99104a5856de790d14178c604" translate="yes" xml:space="preserve">
          <source>Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the minute observed via this clock will be later than that observed directly via the underlying clock.</source>
          <target state="translated">実装では、パフォーマンス上の理由からキャッシング戦略を使用することがあります。そのため、このクロックを介して観測された分の開始時刻は、基礎となるクロックを介して直接観測された分の開始時刻よりも遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="04f1ca2276b8a29b06fcbeeba05dd07d9e348abf" translate="yes" xml:space="preserve">
          <source>Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the requested duration observed via this clock will be later than that observed directly via the underlying clock.</source>
          <target state="translated">実装では、パフォーマンスの理由からキャッシング戦略を使用することがあります。そのため、このクロックを介して観測された要求された持続時間の開始は、基礎となるクロックを介して直接観測されたものよりも遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="267df03caeacf7ccfb622de33114e48140903168" translate="yes" xml:space="preserve">
          <source>Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the second observed via this clock will be later than that observed directly via the underlying clock.</source>
          <target state="translated">実装では、性能上の理由からキャッシング戦略を使用することがあります。このように、このクロックを介して観測された秒の開始は、基礎となるクロックを介して直接観測された秒の開始よりも遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="72c785333a007e0af3308efdcee58fc2bb59ca70" translate="yes" xml:space="preserve">
          <source>Implementations may, though they need not, include additional values in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate the progress of the job, such as adding the JOB_PRINTING value to indicate when the output device is actually making marks on paper and/or the PROCESSING_TO_STOP_POINT value to indicate that the printer is in the process of canceling or aborting the job.</source>
          <target state="translated">実装は、必須ではありませんが、ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加の値を含めて、ジョブの進行状況を示すことができます。たとえば、JOB_PRINTING値を追加して、出力デバイスが実際に紙にマークを付けていることを示したり、PROCESSING_TO_STOP_POINT値を示したりします。プリンタがジョブをキャンセルまたは中止している最中であること。</target>
        </trans-unit>
        <trans-unit id="5c2a22452963a67974d8eca84853200d44148ad1" translate="yes" xml:space="preserve">
          <source>Implementations must begin by checking to ensure that the input temporal object is of the same observable type as the implementation. They must then perform the calculation for all instances of &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. An &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown for &lt;code&gt;ChronoUnit&lt;/code&gt; instances that are unsupported.</source>
          <target state="translated">実装は、まず、入力時間オブジェクトが実装と同じ監視可能なタイプであることを確認するためにチェックする必要があります。次に、&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスの計算を実行する必要があります。アン &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; がためにスローされなければならない &lt;code&gt;ChronoUnit&lt;/code&gt; のサポートされていませんインスタンス。</target>
        </trans-unit>
        <trans-unit id="bdb87811bb31cda5ac17ddd36108afefeabd84e6" translate="yes" xml:space="preserve">
          <source>Implementations must begin by checking to if the two temporals have the same type using &lt;code&gt;getClass()&lt;/code&gt;. If they do not, then the result must be obtained by calling &lt;code&gt;temporal1Inclusive.until(temporal2Exclusive, this)&lt;/code&gt;.</source>
          <target state="translated">実装は、 &lt;code&gt;getClass()&lt;/code&gt; を使用して2つのテンポラルが同じ型であるかどうかをチェックすることから始める必要があります。そうでない場合は、 &lt;code&gt;temporal1Inclusive.until(temporal2Exclusive, this)&lt;/code&gt; 呼び出して結果を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="99c64c5755e63efaf236d48da5e987824e3c2112" translate="yes" xml:space="preserve">
          <source>Implementations must behave in a manor equivalent to the default method behavior.</source>
          <target state="translated">実装は、デフォルトのメソッドの動作と同等の動作をしなければなりません。</target>
        </trans-unit>
        <trans-unit id="605da4bf3bfd7a213bfefbf11d71af5029cff3f0" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all fields defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is supported and has an &lt;code&gt;int&lt;/code&gt; range, then the value of the field must be returned. If unsupported, then an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;定義されているすべてのフィールドをチェックして処理する必要があります。フィールドがサポートされており、 &lt;code&gt;int&lt;/code&gt; 範囲がある場合は、フィールドの値を返す必要があります。サポートされていない場合は、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="326e8afcb79071d12736245c0670a0b22ed327ab" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all fields defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is supported, then the adjustment must be performed. If unsupported, then an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;定義されているすべてのフィールドをチェックして処理する必要があります。フィールドがサポートされている場合は、調整を実行する必要があります。サポートされていない場合は、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="24d6daafcab1ab7caec669e141738ff42d7ea11e" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all fields defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is supported, then the range of the field must be returned. If unsupported, then an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;定義されているすべてのフィールドをチェックして処理する必要があります。フィールドがサポートされている場合は、フィールドの範囲を返す必要があります。サポートされていない場合は、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="0d3ca1653868ebecb681dc93b4d875e227530a96" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all fields defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is supported, then the value of the field must be returned. If unsupported, then an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;定義されているすべてのフィールドをチェックして処理する必要があります。フィールドがサポートされている場合、フィールドの値を返す必要があります。サポートされていない場合は、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="88d058d164cfb523e09f28cd76915ef7323f9f89" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all fields defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is supported, then true must be returned, otherwise false must be returned.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;定義されているすべてのフィールドをチェックして処理する必要があります。フィールドがサポートされている場合はtrueを返し、サポートされていない場合はfalseを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7bd8473721518ac9344401f3ce0ebff69428b906" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all units defined in &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. If the unit is supported, then the addition must be performed. If unsupported, then an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; で&lt;/a&gt;定義されているすべてのユニットをチェックして処理する必要があります。ユニットがサポートされている場合は、追加を実行する必要があります。サポートされていない場合は、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="54a5a6f5a6257c54b041e51e2f466300a629dac3" translate="yes" xml:space="preserve">
          <source>Implementations must check and handle all units defined in &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. If the unit is supported, then true must be returned, otherwise false must be returned.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; で&lt;/a&gt;定義されているすべてのユニットをチェックして処理する必要があります。ユニットがサポートされている場合はtrueを返し、サポートされていない場合はfalseを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="bac724627545efd92aff130adf9ca347e33f9433" translate="yes" xml:space="preserve">
          <source>Implementations must ensure that no observable state is altered when this read-only method is invoked.</source>
          <target state="translated">実装では、この読み取り専用メソッドが呼び出されたときに、観測可能な状態が変更されないようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed106bff8c1e29175cd31f921160a542066c5d66" translate="yes" xml:space="preserve">
          <source>Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.</source>
          <target state="translated">実装は、このオブジェクトや指定されたテンポラリオブジェクトを変更してはならない。その代わりに、元のオブジェクトの調整されたコピーが返されなければなりません。これは、不変型と変異型の実装に対して同等の安全な動作を提供します。</target>
        </trans-unit>
        <trans-unit id="cd2cfa4068cda0e805725377df4ada91ed41d4d7" translate="yes" xml:space="preserve">
          <source>Implementations must not alter the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.</source>
          <target state="translated">実装は指定された一時オブジェクトを変更してはならない。その代わりに、調整されたオリジナルのコピーが返されなければなりません。これは、不変型と変異型の実装に対して同等の安全な動作を提供します。</target>
        </trans-unit>
        <trans-unit id="3f230e75f808fadf35c94cfc851888119bcf87f0" translate="yes" xml:space="preserve">
          <source>Implementations must not alter this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.</source>
          <target state="translated">実装はこのオブジェクトを変更してはいけません。その代わりに、元のオブジェクトの調整済みコピーを返さなければなりません。これは、不変型と変異型の実装と同等の安全な動作を提供します。</target>
        </trans-unit>
        <trans-unit id="74a6d982447b042f899eb1e8d5f95251242078cc" translate="yes" xml:space="preserve">
          <source>Implementations must provide a result for each valid zone ID, however they do not have to provide a history of rules. Thus the map will always contain one element, and will only contain more than one element if historical rule information is available.</source>
          <target state="translated">実装は有効なゾーンIDごとに結果を提供しなければならないが、ルールの履歴を提供する必要はない。したがって、マップは常に1つの要素を含み、歴史的なルール情報が利用可能な場合にのみ、複数の要素を含むことになります。</target>
        </trans-unit>
        <trans-unit id="25d23de117447ed754f1b335e41805de9782f446" translate="yes" xml:space="preserve">
          <source>Implementations must provide a result for each valid zone ID, however they do not have to provide a history of rules. Thus the map will contain at least one element, and will only contain more than one element if historical rule information is available.</source>
          <target state="translated">実装は有効なゾーンIDごとに結果を提供しなければならないが、ルールの履歴を提供する必要はない。したがって、マップは少なくとも1つの要素を含み、過去のルール情報が利用可能な場合には1つ以上の要素を含むことになる。</target>
        </trans-unit>
        <trans-unit id="c2fcd171ac5ea0d1a6a331955bf015198a85c6ae" translate="yes" xml:space="preserve">
          <source>Implementations of &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; that implement various useful reduction operations, such as accumulating elements into collections, summarizing elements according to various criteria, etc.</source>
          <target state="translated">実装&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;など、様々な基準に基づいて要素を要約、コレクションに蓄積素子などの種々の有用な還元操作を実現します、</target>
        </trans-unit>
        <trans-unit id="993e4aede7d89287621098e82da0b0a8d21ce0b4" translate="yes" xml:space="preserve">
          <source>Implementations of entry-returning methods are expected to return &lt;code&gt;Map.Entry&lt;/code&gt; pairs representing snapshots of mappings at the time they were produced, and thus generally do &lt;em&gt;not&lt;/em&gt; support the optional &lt;code&gt;Entry.setValue&lt;/code&gt; method. Note however that it is possible to change mappings in the associated map using method &lt;code&gt;put&lt;/code&gt;.</source>
          <target state="translated">エントリを返すメソッドの実装は、作成時のマッピングのスナップショットを表す &lt;code&gt;Map.Entry&lt;/code&gt; ペアを返すことが期待されているため、通常、オプションの &lt;code&gt;Entry.setValue&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。ただし、メソッド &lt;code&gt;put&lt;/code&gt; を使用して、関連するマップのマッピングを変更できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d3b30e509d044195699ed5241d1f9e400fe5a8aa" translate="yes" xml:space="preserve">
          <source>Implementations of the DataInput and DataOutput interfaces represent Unicode strings in a format that is a slight modification of UTF-8. (For information regarding the standard UTF-8 format, see section</source>
          <target state="translated">DataInput と DataOutput インターフェイスの実装は、UTF-8 を少し修正した形式で Unicode 文字列を表現します。(標準のUTF-8形式については、セクション</target>
        </trans-unit>
        <trans-unit id="0a34c5a5639e138de40d514fc9cb6812e04cb9ff" translate="yes" xml:space="preserve">
          <source>Implementations of the Java time-scale using the JSR-310 API are not required to provide any clock that is sub-second accurate, or that progresses monotonically or smoothly. Implementations are therefore not required to actually perform the UTC-SLS slew or to otherwise be aware of leap seconds. JSR-310 does, however, require that implementations must document the approach they use when defining a clock representing the current instant. See &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;Clock&lt;/code&gt;&lt;/a&gt; for details on the available clocks.</source>
          <target state="translated">JSR-310 APIを使用したJavaタイムスケールの実装では、1秒未満の精度のクロックを提供したり、単調またはスムーズに進行したりする必要はありません。したがって、実装では、UTC-SLSスルーを実際に実行したり、うるう秒を認識したりする必要はありません。ただし、JSR-310では、現在の瞬間を表すクロックを定義するときに、実装が使用するアプローチを文書化する必要があります。参照&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;Clock&lt;/code&gt; &lt;/a&gt;利用できるクロックの詳細については。</target>
        </trans-unit>
        <trans-unit id="7ee8c35661e0c08111bc2cda529b33eb9ba4c61e" translate="yes" xml:space="preserve">
          <source>Implementations of these locale sensitive services are packaged using the Java Extension Mechanism as installed extensions. A provider identifies itself with a provider-configuration file in the resource directory META-INF/services, using the fully qualified provider interface class name as the file name. The file should contain a list of fully-qualified concrete provider class names, one per line. A line is terminated by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a line feed. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is '#' ('#'); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">これらのロケールに敏感なサービスの実装は、インストールされている拡張機能として Java Extension Mechanism を使用してパッケージ化されます。プロバイダは、リソースディレクトリ META-INF/services にある provider-configuration ファイルで、完全修飾された provider interface クラス名をファイル名として使用して、自分自身を識別する。このファイルには、1 行に 1 つずつ、完全修飾された具体的なプロバイダクラス名のリストが含まれていなければならない。行は、ラインフィード('\n')、キャリッジ・リターン('\r')、またはキャリッジ・リターンに続くラインフィードのいずれかで終了します。各名前を囲むスペースやタブ文字、空行は無視されます。コメント文字は '#' ('#')です。各行では、最初のコメント文字に続くすべての文字は無視されます。ファイルは UTF-8 でエンコードされている必要があります。</target>
        </trans-unit>
        <trans-unit id="9c79b815c8ed87dfe91404db79bb52d71de12170" translate="yes" xml:space="preserve">
          <source>Implementations of this class provide lookup services for print services (typically equivalent to printers) of a particular type.</source>
          <target state="translated">このクラスの実装は、特定のタイプのプリントサービス(一般的にはプリンタに相当)のためのルックアップサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="f006a559626fb65e046d55aa1f754669269e0a38" translate="yes" xml:space="preserve">
          <source>Implementations of this interface and of &lt;code&gt;NotificationBroadcaster&lt;/code&gt; should be careful about synchronization. In particular, it is not a good idea for an implementation to hold any locks while it is calling a listener. To deal with the possibility that the list of listeners might change while a notification is being dispatched, a good strategy is to use a &lt;a href=&quot;../../java/util/concurrent/copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; for this list.</source>
          <target state="translated">このインターフェイスと &lt;code&gt;NotificationBroadcaster&lt;/code&gt; の実装は、同期に注意する必要があります。特に、リスナーを呼び出している間、実装がロックを保持することはお勧めできません。通知のディスパッチ中にリスナーのリストが変更される可能性に対処するには、このリストに&lt;a href=&quot;../../java/util/concurrent/copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="58aa1ab9d54f0bb6c3d1e90d7b35e36a53ae6ddf" translate="yes" xml:space="preserve">
          <source>Implementations of this interface and of &lt;code&gt;NotificationEmitter&lt;/code&gt; should be careful about synchronization. In particular, it is not a good idea for an implementation to hold any locks while it is calling a listener. To deal with the possibility that the list of listeners might change while a notification is being dispatched, a good strategy is to use a &lt;a href=&quot;../../java/util/concurrent/copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; for this list.</source>
          <target state="translated">このインターフェースと &lt;code&gt;NotificationEmitter&lt;/code&gt; の実装は、同期に注意する必要があります。特に、リスナーを呼び出している間、実装がロックを保持することはお勧めできません。通知のディスパッチ中にリスナーのリストが変更される可能性に対処するには、このリストに&lt;a href=&quot;../../java/util/concurrent/copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="94b491a654af895b6d8857d4a56507944db181aa" translate="yes" xml:space="preserve">
          <source>Implementations of this interface are attached to a &lt;a href=&quot;../docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt; to monitor the status of attribute changes associated with the print job.</source>
          <target state="translated">このインターフェイスの実装は&lt;a href=&quot;../docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; &lt;/a&gt;にアタッチされ、印刷ジョブに関連する属性変更のステータスを監視します。</target>
        </trans-unit>
        <trans-unit id="4aa8cb2baf5c284c221df16a7268ff0b1941abb2" translate="yes" xml:space="preserve">
          <source>Implementations of this interface are immutable and safe for use by multiple concurrent threads.</source>
          <target state="translated">このインターフェイスの実装は不変であり、複数の並行スレッドで使用しても安全です。</target>
        </trans-unit>
        <trans-unit id="49c062426f85483f883d6e693db7f7fa3fbe1290" translate="yes" xml:space="preserve">
          <source>Implementations of this interface are passed to a &lt;code&gt;CallbackHandler&lt;/code&gt;, allowing underlying security services the ability to interact with a calling application to retrieve specific authentication data such as usernames and passwords, or to display certain information, such as error and warning messages.</source>
          <target state="translated">このインターフェースの実装は &lt;code&gt;CallbackHandler&lt;/code&gt; に渡されます。これにより、基盤となるセキュリティサービスは、呼び出し元のアプリケーションと対話して、ユーザー名やパスワードなどの特定の認証データを取得したり、エラーや警告メッセージなどの特定の情報を表示したりできます。</target>
        </trans-unit>
        <trans-unit id="58261f86ebc3621d1ab8d9da33065adeb7d657d0" translate="yes" xml:space="preserve">
          <source>Implementations of this interface can differ regarding the thread in which the methods of filters and listeners are called.</source>
          <target state="translated">このインターフェイスの実装は、フィルタやリスナーのメソッドが呼び出されるスレッドによって異なります。</target>
        </trans-unit>
        <trans-unit id="027d52c95dd46e88fa1635d12867938271a5588b" translate="yes" xml:space="preserve">
          <source>Implementations of this interface should specify the events they support.</source>
          <target state="translated">このインターフェイスの実装は、サポートするイベントを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6e3891d672494d0423b2340b5ba53445ff48f7f" translate="yes" xml:space="preserve">
          <source>Implementations of this listener interface are attached to a &lt;a href=&quot;../printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt; to monitor the status of the print service.</source>
          <target state="translated">このリスナーインターフェイスの実装は&lt;a href=&quot;../printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; &lt;/a&gt;にアタッチされ、印刷サービスのステータスを監視します。</target>
        </trans-unit>
        <trans-unit id="75c9d5402d09dbbffee2d3bf6c5bc10e82a612cd" translate="yes" xml:space="preserve">
          <source>Implementations of this listener interface should be attached to a &lt;a href=&quot;../docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt; to monitor the status of the printer job.</source>
          <target state="translated">このリスナーインターフェイスの実装を&lt;a href=&quot;../docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; &lt;/a&gt;にアタッチして、プリンタージョブのステータスを監視する必要があります。</target>
        </trans-unit>
        <trans-unit id="98cca08688fad60efd0ff1cada2bd3924fcafeb7" translate="yes" xml:space="preserve">
          <source>Implementations of this listener interface should be attached to a &lt;a href=&quot;../docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt; to monitor the status of the printer job. These callback methods may be invoked on the thread processing the print job, or a service created notification thread. In either case the client should not perform lengthy processing in these callbacks.</source>
          <target state="translated">このリスナーインターフェイスの実装を&lt;a href=&quot;../docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; &lt;/a&gt;にアタッチして、プリンタージョブのステータスを監視する必要があります。これらのコールバックメソッドは、印刷ジョブを処理するスレッド、またはサービスによって作成された通知スレッドで呼び出すことができます。どちらの場合も、クライアントはこれらのコールバックで長い処理を実行するべきではありません。</target>
        </trans-unit>
        <trans-unit id="4402cd1b45417982edba7b2ac6df98c76b27647c" translate="yes" xml:space="preserve">
          <source>Implementations of this method are permitted, but not required, to return the same object from multiple invocations.</source>
          <target state="translated">このメソッドの実装は、複数回の呼び出しから同じオブジェクトを返すことが許可されていますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="a1f0a740fb87b360af2d304f28d804dd997ef4e9" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;List&lt;/code&gt; object for each call. Using this method is likely to have comparable cost to using the like-named field. (Unlike this method, the field does not provide type safety.)</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;List&lt;/code&gt; オブジェクトを作成する必要はありません。この方法を使用すると、同じ名前のフィールドを使用する場合と同等のコストがかかる可能性があります。（このメソッドとは異なり、このフィールドはタイプセーフを提供しません。）</target>
        </trans-unit>
        <trans-unit id="7d7e4eb6f727ccc34715a0e9ae615998421dde8c" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;Map&lt;/code&gt; object for each call. Using this method is likely to have comparable cost to using the like-named field. (Unlike this method, the field does not provide type safety.)</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;Map&lt;/code&gt; オブジェクトを作成する必要はありません。この方法を使用すると、同じ名前のフィールドを使用する場合と同等のコストがかかる可能性があります。（このメソッドとは異なり、このフィールドはタイプセーフを提供しません。）</target>
        </trans-unit>
        <trans-unit id="f753f34db48ccb0310777f203dd093fd8129db52" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;NavigableMap&lt;/code&gt; object for each call.</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;NavigableMap&lt;/code&gt; オブジェクトを作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="724af2588f9712c349db1f2980acabcda1643883" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;NavigableSet&lt;/code&gt; object for each call.</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;NavigableSet&lt;/code&gt; オブジェクトを作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="8c569f90769c2ffcc16f17ff5ae79fd3729cd607" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;Set&lt;/code&gt; object for each call. Using this method is likely to have comparable cost to using the like-named field. (Unlike this method, the field does not provide type safety.)</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;Set&lt;/code&gt; オブジェクトを作成する必要はありません。この方法を使用すると、同じ名前のフィールドを使用する場合と同等のコストがかかる可能性があります。（このメソッドとは異なり、このフィールドはタイプセーフを提供しません。）</target>
        </trans-unit>
        <trans-unit id="a6219835d128fc2b015c10dfba2058045935cdb9" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;SortedMap&lt;/code&gt; object for each call.</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;SortedMap&lt;/code&gt; オブジェクトを作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="4148397f35d90aa072e66df043b8d5c754ee09b6" translate="yes" xml:space="preserve">
          <source>Implementations of this method need not create a separate &lt;code&gt;SortedSet&lt;/code&gt; object for each call.</source>
          <target state="translated">このメソッドの実装では、呼び出しごとに個別の &lt;code&gt;SortedSet&lt;/code&gt; オブジェクトを作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e09a8eb7b589680f1982a4e270b31adca911a817" translate="yes" xml:space="preserve">
          <source>Implementations should determine whether they are supported using the fields available in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;使用可能なフィールドを使用してそれらがサポートされているかどうかを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d0dc13ed50551259c51f74f77585ebb3686a0b5" translate="yes" xml:space="preserve">
          <source>Implementations should implement &lt;code&gt;Serializable&lt;/code&gt; wherever possible and must document whether or not they do support serialization.</source>
          <target state="translated">実装は可能な限り &lt;code&gt;Serializable&lt;/code&gt; を実装し、シリアル化をサポートしているかどうかを文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2023f1a7cd65e43dc987df91289f438391353dd" translate="yes" xml:space="preserve">
          <source>Implementations should override the default &lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;isDestroyed&lt;/code&gt; methods from the &lt;a href=&quot;../../javax/security/auth/destroyable&quot;&gt;&lt;code&gt;Destroyable&lt;/code&gt;&lt;/a&gt; interface to enable sensitive key information to be destroyed, cleared, or in the case where such information is immutable, unreferenced. Finally, since &lt;code&gt;PrivateKey&lt;/code&gt; is &lt;code&gt;Serializable&lt;/code&gt;, implementations should also override &lt;a href=&quot;../io/objectoutputstream#writeObject-java.lang.Object-&quot;&gt;&lt;code&gt;ObjectOutputStream.writeObject(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to prevent keys that have been destroyed from being serialized.</source>
          <target state="translated">実装では、デフォルトはオーバーライドする必要が &lt;code&gt;destroy&lt;/code&gt; と &lt;code&gt;isDestroyed&lt;/code&gt; から方法&lt;a href=&quot;../../javax/security/auth/destroyable&quot;&gt; &lt;code&gt;Destroyable&lt;/code&gt; &lt;/a&gt;界面機密鍵情報は、破壊クリア、またはそのような情報が参照されていない、不変である場合にされることを可能にします。最後に、 &lt;code&gt;PrivateKey&lt;/code&gt; は &lt;code&gt;Serializable&lt;/code&gt; であるため、実装は&lt;a href=&quot;../io/objectoutputstream#writeObject-java.lang.Object-&quot;&gt; &lt;code&gt;ObjectOutputStream.writeObject(java.lang.Object)&lt;/code&gt; &lt;/a&gt;もオーバーライドして、破棄されたキーがシリアル化されないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="3f89a141b40f5b504d614a3aa48c27dfceeae9ae" translate="yes" xml:space="preserve">
          <source>Implementations should perform any queries or calculations using the fields available in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the field is not supported an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;使用可能なフィールドを使用して、クエリまたは計算を実行する必要があります。フィールドがサポートされてい &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 場合は、UnsupportedTemporalTypeExceptionをスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="bb7adf8c98b0949039b35e12066594b1afab0446" translate="yes" xml:space="preserve">
          <source>Implementations should perform any queries or calculations using the units available in &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; or the fields available in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the unit is not supported an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; で&lt;/a&gt;使用可能な単位または&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;使用可能なフィールドを使用して、クエリまたは計算を実行する必要があります。ユニットがサポートされてい &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 場合は、UnsupportedTemporalTypeExceptionをスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="7ceb7c1ca9b69ca4554167b37ceed67cb09622fc" translate="yes" xml:space="preserve">
          <source>Implementations should perform any queries or calculations using the units available in &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; or the fields available in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. If the unit is not supported an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; must be thrown. Implementations must not alter the specified temporal objects.</source>
          <target state="translated">実装では、&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; で&lt;/a&gt;使用可能な単位または&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; で&lt;/a&gt;使用可能なフィールドを使用して、クエリまたは計算を実行する必要があります。ユニットがサポートされてい &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 場合は、UnsupportedTemporalTypeExceptionをスローする必要があります。実装は、指定された一時オブジェクトを変更してはなりません。</target>
        </trans-unit>
        <trans-unit id="9265c990fd1a70dc9468d67065e182a75e5b85cc" translate="yes" xml:space="preserve">
          <source>Implementations supporting this attribute view may also support setting the initial ACL when creating a file or directory. The initial ACL may be provided to methods such as &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&quot;acl:acl&quot;&lt;/code&gt; and a &lt;a href=&quot;fileattribute#value--&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; that is the list of &lt;code&gt;AclEntry&lt;/code&gt; objects.</source>
          <target state="translated">この属性ビューをサポートする実装は、ファイルまたはディレクトリの作成時に初期ACLの設定もサポートする場合があります。最初のACLは、&lt;a href=&quot;fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&quot;acl:acl&quot;&lt;/code&gt; で、&lt;a href=&quot;fileattribute#value--&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;AclEntry&lt;/code&gt; オブジェクトのリストである&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; &lt;/a&gt;として、&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;などのメソッドに提供できます。</target>
        </trans-unit>
        <trans-unit id="c46af4741218e7b1b97c7da9603c5a880f593947" translate="yes" xml:space="preserve">
          <source>Implementations supporting this attribute view may also support setting the initial permissions when creating a file or directory. The initial permissions are provided to the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods as a &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&quot;posix:permissions&quot;&lt;/code&gt; and a &lt;a href=&quot;fileattribute#value--&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; that is the set of permissions. The following example uses the &lt;a href=&quot;posixfilepermissions#asFileAttribute-java.util.Set-&quot;&gt;&lt;code&gt;asFileAttribute&lt;/code&gt;&lt;/a&gt; method to construct a &lt;code&gt;FileAttribute&lt;/code&gt; when creating a file:</source>
          <target state="translated">この属性ビューをサポートする実装は、ファイルまたはディレクトリを作成するときの初期権限の設定もサポートする場合があります。最初の権限はに提供されている&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;ような方法&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&quot;posix:permissions&quot;&lt;/code&gt; と&lt;a href=&quot;fileattribute#value--&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt;の許可のセットです。次の例では、ファイルの作成時に&lt;a href=&quot;posixfilepermissions#asFileAttribute-java.util.Set-&quot;&gt; &lt;code&gt;asFileAttribute&lt;/code&gt; &lt;/a&gt;メソッドを使用して &lt;code&gt;FileAttribute&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="e4f7352bd5189bae4e86402d1ca84f5a70c34ad4" translate="yes" xml:space="preserve">
          <source>Implemented by a service provider, used by the static methods of this class.</source>
          <target state="translated">サービスプロバイダによって実装され、このクラスの静的メソッドによって使用されます。</target>
        </trans-unit>
        <trans-unit id="5d27247adfc98a632446be7b025feb0b66fde48b" translate="yes" xml:space="preserve">
          <source>Implemented by objects that can have a &lt;code&gt;JMXServiceURL&lt;/code&gt; address.</source>
          <target state="translated">&lt;code&gt;JMXServiceURL&lt;/code&gt; アドレスを持つことができるオブジェクトによって実装されます。</target>
        </trans-unit>
        <trans-unit id="61cd05b213ed2ee1d81c4aee8d8fd0536738b4af" translate="yes" xml:space="preserve">
          <source>Implemented by objects that can have a &lt;code&gt;JMXServiceURL&lt;/code&gt; address. All &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt; objects implement this interface. Depending on the connector implementation, a &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; object may implement this interface too. &lt;code&gt;JMXConnector&lt;/code&gt; objects for the RMI Connector are instances of &lt;a href=&quot;rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt; which implements this interface.</source>
          <target state="translated">&lt;code&gt;JMXServiceURL&lt;/code&gt; アドレスを持つことができるオブジェクトによって実装されます。すべての&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;オブジェクトはこのインターフェースを実装しています。コネクターの実装によっては、&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;オブジェクトもこのインターフェースを実装する場合があります。RMIコネクタの &lt;code&gt;JMXConnector&lt;/code&gt; オブジェクトは、このインターフェースを実装する&lt;a href=&quot;rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; の&lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="6316c998aaf80f52e21906c45a08ecf6dd94f2cb" translate="yes" xml:space="preserve">
          <source>Implementing the Externalizable interface allows the object to assume complete control over the contents and format of the object's serialized form. The methods of the Externalizable interface, writeExternal and readExternal, are called to save and restore the objects state. When implemented by a class they can write and read their own state using all of the methods of ObjectOutput and ObjectInput. It is the responsibility of the objects to handle any versioning that occurs.</source>
          <target state="translated">Externalizableインターフェースを実装することで、オブジェクトはオブジェクトのシリアライズされたフォームの内容とフォーマットを完全に制御することができます。Externalizable インターフェースの writeExternal と readExternal のメソッドは、オブジェクトの状態を保存したり復元したりするために呼び出されます。クラスによって実装されている場合は、ObjectOutputとObjectInputのすべてのメソッドを使用して、オブジェクト自身の状態を書き込んだり、読み込んだりすることができます。バージョニングが発生した場合、それを処理するのはオブジェクトの責任です。</target>
        </trans-unit>
        <trans-unit id="85a1b32441e6f8998efff0a593cf96d0554294af" translate="yes" xml:space="preserve">
          <source>Implementing the MemoryPool object works similarly for both Standard MBeans and MXBeans.</source>
          <target state="translated">MemoryPool オブジェクトの実装は、Standard MBeans と MXBeans の両方で同様に動作します。</target>
        </trans-unit>
        <trans-unit id="b27273a4fe2fe56656ab15058c038de342b8f1ba" translate="yes" xml:space="preserve">
          <source>Implementing the Serializable interface allows object serialization to save and restore the entire state of the object and it allows classes to evolve between the time the stream is written and the time it is read. It automatically traverses references between objects, saving and restoring entire graphs.</source>
          <target state="translated">Serializableインターフェースを実装することで、オブジェクトのシリアル化により、オブジェクト全体の状態を保存・復元することができ、ストリームが書き込まれてから読み込まれるまでの間にクラスを進化させることができるようになります。また、オブジェクト間の参照を自動的にトラバースし、グラフ全体の保存と復元を行います。</target>
        </trans-unit>
        <trans-unit id="c4eba021a9e9d2a95adfd121f50523d25266d18b" translate="yes" xml:space="preserve">
          <source>Implementing this interface allows an object to be the target of the &quot;for-each loop&quot; statement.</source>
          <target state="translated">このインターフェイスを実装することで、オブジェクトを &quot;for-eachループ &quot;文の対象にすることができます。</target>
        </trans-unit>
        <trans-unit id="b2c3a655b63b5ea1f21619a61f5d5ab25bccd7b1" translate="yes" xml:space="preserve">
          <source>Implementing this interface allows an object to be the target of the &quot;for-each loop&quot; statement. See &lt;strong&gt; &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/language/foreach.html&quot;&gt;For-each Loop&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">このインターフェイスを実装すると、オブジェクトを「for-eachループ」ステートメントのターゲットにすることができます。&lt;strong&gt;&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/language/foreach.html&quot;&gt;For-Eachループを&lt;/a&gt;&lt;/strong&gt;参照&lt;strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfc9c018f8a42ee85a1ab091653d70a1654d6247" translate="yes" xml:space="preserve">
          <source>Implementors must override the nine abstract service-provider interface (SPI) methods: &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt;&lt;code&gt;removeNodeSpi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#syncSpi--&quot;&gt;&lt;code&gt;syncSpi()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractpreferences#flushSpi--&quot;&gt;&lt;code&gt;flushSpi()&lt;/code&gt;&lt;/a&gt;. All of the concrete methods specify precisely how they are implemented atop these SPI methods. The implementor may, at his discretion, override one or more of the concrete methods if the default implementation is unsatisfactory for any reason, such as performance.</source>
          <target state="translated">インプリ&lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; &lt;/a&gt;は、9つのサービス・プロバイダー・インターフェース（SPI）メソッドをオーバーライドする必要があります：getSpi（String）、&lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt; &lt;code&gt;removeNodeSpi()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#syncSpi--&quot;&gt; &lt;code&gt;syncSpi()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;abstractpreferences#flushSpi--&quot;&gt; &lt;code&gt;flushSpi()&lt;/code&gt; &lt;/a&gt;。すべての具象メソッドは、これらのSPIメソッドの上に実装する方法を正確に指定します。実装者は、デフォルトの実装がパフォーマンスなどの理由で不十分な場合、独自の裁量で、1つ以上の具象メソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="aead7400492ac0da3dcc2b29c778531e2a05071f" translate="yes" xml:space="preserve">
          <source>Implementors of serializable lambdas, such as compilers or language runtime libraries, are expected to ensure that instances deserialize properly. One means to do so is to ensure that the &lt;code&gt;writeReplace&lt;/code&gt; method returns an instance of &lt;code&gt;SerializedLambda&lt;/code&gt;, rather than allowing default serialization to proceed.</source>
          <target state="translated">コンパイラや言語ランタイムライブラリなどのシリアル化可能なラムダの実装者は、インスタンスが適切に逆シリアル化されることを保証する必要があります。そのための1つの方法は、デフォルトのシリアル化を続行するのではなく、 &lt;code&gt;writeReplace&lt;/code&gt; メソッドが &lt;code&gt;SerializedLambda&lt;/code&gt; のインスタンスを返すようにすることです。</target>
        </trans-unit>
        <trans-unit id="8863098812e88b16cb4e5ec4c94cb23e73164a4a" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.current() for String.</source>
          <target state="translated">String 用の CharacterIterator.current()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="38609ff217165cfd288c6a9112395629b53b1ba0" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.first() for String.</source>
          <target state="translated">String 用の CharacterIterator.first()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="2061a474328a606288949699b4d01ead864c594e" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.getBeginIndex() for String.</source>
          <target state="translated">String 用の CharacterIterator.getBeginIndex()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="f3e0d313072ecadecf8f42575d03f852e7618f30" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.getEndIndex() for String.</source>
          <target state="translated">String 用の CharacterIterator.getEndIndex()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="37d2fcb4f6e906f747d683461fcc4508ccb0e9f3" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.getIndex() for String.</source>
          <target state="translated">String 用の CharacterIterator.getIndex()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="e6267a8f45083745718daf081f7ae536fff0541e" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.last() for String.</source>
          <target state="translated">String 用の CharacterIterator.last()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="9ca927fd2f3bfbd655d908c44ae43b9f811f2ea5" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.next() for String.</source>
          <target state="translated">String 用の CharacterIterator.next()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="6fa220d3128cac8bac5353ff3943c263da81da91" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.previous() for String.</source>
          <target state="translated">String 用の CharacterIterator.previous()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="4ad2159627bb0908caad3b333ea29cbd16bf1140" translate="yes" xml:space="preserve">
          <source>Implements CharacterIterator.setIndex() for String.</source>
          <target state="translated">String 用の CharacterIterator.setIndex()をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="eb77268cf31c9d1b7065ac4f346f0f4f62633aa5" translate="yes" xml:space="preserve">
          <source>Implements a non-terminal append-and-replace step.</source>
          <target state="translated">終端ではない追加・置換ステップをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="8fc7388752bff5a1959372aa839600a88a0d6560" translate="yes" xml:space="preserve">
          <source>Implements a terminal append-and-replace step.</source>
          <target state="translated">ターミナルの追加・置換ステップを実装します。</target>
        </trans-unit>
        <trans-unit id="a4195097f3d067f532df1fff9627a92a21d4eb32" translate="yes" xml:space="preserve">
          <source>Implements absolute timed condition wait.</source>
          <target state="translated">絶対時間条件待ちをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="37c1e8dcf99a0f703b26aac24a1a89f9d4541abd" translate="yes" xml:space="preserve">
          <source>Implements an input stream filter for compressing data in the &quot;deflate&quot; compression format.</source>
          <target state="translated">deflate」圧縮形式でデータを圧縮するための入力ストリームフィルタを実装します。</target>
        </trans-unit>
        <trans-unit id="fb39bbcec1c774b4fba93fc21190a47bc5971af5" translate="yes" xml:space="preserve">
          <source>Implements an output stream filter for uncompressing data stored in the &quot;deflate&quot; compression format.</source>
          <target state="translated">deflate&quot; 圧縮形式で保存されたデータを解凍するための出力ストリームフィルタを実装します。</target>
        </trans-unit>
        <trans-unit id="9c43b35ae2a5e1c03476a63c25a2b6caa54dc356" translate="yes" xml:space="preserve">
          <source>Implements execution conventions for CountedCompleters.</source>
          <target state="translated">CountedCompletersの実行規約を実装します。</target>
        </trans-unit>
        <trans-unit id="551f1837817dc3b5cc8875eeb3c93a0ab8888206" translate="yes" xml:space="preserve">
          <source>Implements execution conventions for RecursiveActions.</source>
          <target state="translated">RecursiveActionsの実行規約を実装します。</target>
        </trans-unit>
        <trans-unit id="f0fdfaa1349a464aa045ad325a724296034d0863" translate="yes" xml:space="preserve">
          <source>Implements execution conventions for RecursiveTask.</source>
          <target state="translated">RecursiveTaskの実行規約を実装します。</target>
        </trans-unit>
        <trans-unit id="4cf0ccace084c50198d2ff61513b820d4b7ab184" translate="yes" xml:space="preserve">
          <source>Implements interruptible condition wait.</source>
          <target state="translated">割り込み条件待ちをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="2303304616ae77f7756f510ceeff5058198c36af" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;absolutePath&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#absolutePath--&quot;&gt;&lt;code&gt;Preferences.absolutePath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#absolutePath--&quot;&gt; &lt;code&gt;Preferences.absolutePath()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;absolutePath&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="034f9deafba508d9af3bcf5b68973bd9dea1bd76" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;children&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#childrenNames--&quot;&gt;&lt;code&gt;Preferences.childrenNames()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#childrenNames--&quot;&gt; &lt;code&gt;Preferences.childrenNames()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;children&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="46cb2a81f204b4143be54da7ee4ce2b43a9f0e15" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;clear&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#clear--&quot;&gt;&lt;code&gt;Preferences.clear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#clear--&quot;&gt; &lt;code&gt;Preferences.clear()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;clear&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="c5271f0b8def61c25744f1dd1f9a7a0866178042" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;exportNode&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#exportNode-java.io.OutputStream-&quot;&gt;&lt;code&gt;Preferences.exportNode(OutputStream)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#exportNode-java.io.OutputStream-&quot;&gt; &lt;code&gt;Preferences.exportNode(OutputStream)&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;exportNode&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="6992328892719c452810c6ca8560c959a91e93f4" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;exportSubtree&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#exportSubtree-java.io.OutputStream-&quot;&gt;&lt;code&gt;Preferences.exportSubtree(OutputStream)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#exportSubtree-java.io.OutputStream-&quot;&gt; &lt;code&gt;Preferences.exportSubtree(OutputStream)&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;exportSubtree&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="0bcf92c331b449f42058427c1857f88ad0cc933d" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;flush&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#flush--&quot;&gt;&lt;code&gt;Preferences.flush()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#flush--&quot;&gt; &lt;code&gt;Preferences.flush()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;flush&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="fd60f453d49bb8d7d210813e6ce68cc6bfb94562" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;get&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;Preferences.get(String,String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;Preferences.get(String,String)&lt;/code&gt; &lt;/a&gt;仕様に従って &lt;code&gt;get&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="bb5155ae4fbbe6ae18c3ab26004b7eece250eb0f" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getBoolean&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getBoolean-java.lang.String-boolean-&quot;&gt;&lt;code&gt;Preferences.getBoolean(String,boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getBoolean-java.lang.String-boolean-&quot;&gt; &lt;code&gt;Preferences.getBoolean(String,boolean)&lt;/code&gt; &lt;/a&gt;仕様に従って &lt;code&gt;getBoolean&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="f0b4007d76b02ecf996288a0c19ed712d960828e" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getByteArray&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getByteArray-java.lang.String-byte:A-&quot;&gt;&lt;code&gt;Preferences.getByteArray(String,byte[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getByteArray-java.lang.String-byte:A-&quot;&gt; &lt;code&gt;Preferences.getByteArray(String,byte[])&lt;/code&gt; &lt;/a&gt;の仕様 &lt;code&gt;getByteArray&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="e9e450fbaa690dcceaab8d53b8c3cbedb82f9d78" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getDouble&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getDouble-java.lang.String-double-&quot;&gt;&lt;code&gt;Preferences.getDouble(String,double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getDouble-java.lang.String-double-&quot;&gt; &lt;code&gt;Preferences.getDouble(String,double)&lt;/code&gt; &lt;/a&gt;仕様に従って &lt;code&gt;getDouble&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="84b21b049297b5e1b111acffab81a95f30370f84" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getFloat&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getFloat-java.lang.String-float-&quot;&gt;&lt;code&gt;Preferences.getFloat(String,float)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getFloat-java.lang.String-float-&quot;&gt; &lt;code&gt;Preferences.getFloat(String,float)&lt;/code&gt; &lt;/a&gt;仕様に従って &lt;code&gt;getFloat&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="c274f814517f4670c893c66cb2bfa98eeab7e4bd" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getInt&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Preferences.getInt(String,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Preferences.getInt(String,int)&lt;/code&gt; &lt;/a&gt;仕様 &lt;code&gt;getInt&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="1da387d0a91dd5384161de4e156bcc24ea6fbf17" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;getLong&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#getLong-java.lang.String-long-&quot;&gt;&lt;code&gt;Preferences.getLong(String,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#getLong-java.lang.String-long-&quot;&gt; &lt;code&gt;Preferences.getLong(String,long)&lt;/code&gt; &lt;/a&gt;仕様に従って &lt;code&gt;getLong&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="ea4fec525521819b707dbeac6d4f7ff72f03a4c2" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;isUserNode&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#isUserNode--&quot;&gt;&lt;code&gt;Preferences.isUserNode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#isUserNode--&quot;&gt; &lt;code&gt;Preferences.isUserNode()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;isUserNode&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="dd3d33b98e343258fdc365b452fe2c54c3a57a8c" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;keys&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#keys--&quot;&gt;&lt;code&gt;Preferences.keys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#keys--&quot;&gt; &lt;code&gt;Preferences.keys()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;keys&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="b8b350943fb40b138fd56f36c6dbef682a6322e1" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;name&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#name--&quot;&gt;&lt;code&gt;Preferences.name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#name--&quot;&gt; &lt;code&gt;Preferences.name()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;name&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="0649c8cc433a5e7005ae22f20906c8b707b86e84" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;node&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt;&lt;code&gt;Preferences.node(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt; &lt;code&gt;Preferences.node(String)&lt;/code&gt; の&lt;/a&gt;仕様に従って &lt;code&gt;node&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="e4aa7ebab34301da1cde7559e5697decfe5af827" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;nodeExists&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#nodeExists-java.lang.String-&quot;&gt;&lt;code&gt;Preferences.nodeExists(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#nodeExists-java.lang.String-&quot;&gt; &lt;code&gt;Preferences.nodeExists(String)&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;nodeExists&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="f4fe173b9d0a89ea7f1b5eba6be1698ca690f55e" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;parent&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#parent--&quot;&gt;&lt;code&gt;Preferences.parent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#parent--&quot;&gt; &lt;code&gt;Preferences.parent()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;parent&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="56c5e61149b3eee9a14a2381738dfc70bccfc389" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;put&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;Preferences.put(String,String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;Preferences.put(String,String)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;put&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="c964cfd9449cfba5f084d6eb883e09669a4711ef" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putBoolean&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putBoolean-java.lang.String-boolean-&quot;&gt;&lt;code&gt;Preferences.putBoolean(String,boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putBoolean-java.lang.String-boolean-&quot;&gt; &lt;code&gt;Preferences.putBoolean(String,boolean)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;putBoolean&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="6dfb192ca6481e94bbe487fe93ad8e390c6a8ddf" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putByteArray&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putByteArray-java.lang.String-byte:A-&quot;&gt;&lt;code&gt;Preferences.putByteArray(String,byte[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putByteArray-java.lang.String-byte:A-&quot;&gt; &lt;code&gt;Preferences.putByteArray(String,byte[])&lt;/code&gt; &lt;/a&gt;の仕様に従って、 &lt;code&gt;putByteArray&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="700b1f1d7618f6e22ebcf34385a559a63ca591ae" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putDouble&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putDouble-java.lang.String-double-&quot;&gt;&lt;code&gt;Preferences.putDouble(String,double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putDouble-java.lang.String-double-&quot;&gt; &lt;code&gt;Preferences.putDouble(String,double)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;putDouble&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="80192947101c876eaade219b960719ce5fba52be" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putFloat&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putFloat-java.lang.String-float-&quot;&gt;&lt;code&gt;Preferences.putFloat(String,float)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putFloat-java.lang.String-float-&quot;&gt; &lt;code&gt;Preferences.putFloat(String,float)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;putFloat&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="4a885f79dd7082ca994a78ab5b9536740b01678f" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putInt&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Preferences.putInt(String,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Preferences.putInt(String,int)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;putInt&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="95eb710c08c834586c53fc11e79b1b0c9ead4298" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;putLong&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#putLong-java.lang.String-long-&quot;&gt;&lt;code&gt;Preferences.putLong(String,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#putLong-java.lang.String-long-&quot;&gt; &lt;code&gt;Preferences.putLong(String,long)&lt;/code&gt; &lt;/a&gt;仕様に従って、 &lt;code&gt;putLong&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="b0b2653970946b64ed4ddaa3ebfdafe0eb71373a" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;remove(String)&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#remove-java.lang.String-&quot;&gt;&lt;code&gt;Preferences.remove(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#remove-java.lang.String-&quot;&gt; &lt;code&gt;Preferences.remove(String)&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;remove(String)&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="a9fc2ab6783e8c0ed4c3c6887838e051d6ead650" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;removeNode()&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;Preferences.removeNode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;Preferences.removeNode()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;removeNode()&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="0f50cf978662ba1a1c66109922a9ef7df030c0f8" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;sync&lt;/code&gt; method as per the specification in &lt;a href=&quot;preferences#sync--&quot;&gt;&lt;code&gt;Preferences.sync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;preferences#sync--&quot;&gt; &lt;code&gt;Preferences.sync()&lt;/code&gt; の&lt;/a&gt;仕様に従って、 &lt;code&gt;sync&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="8070a9651a28f504d3ee606de0cb54a78c1a449a" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; の &lt;code&gt;write&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="eba7a76fb44749a7dc70c0178e32f86bfaaab0bb" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;Writer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Writer&lt;/code&gt; の &lt;code&gt;write&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="1df7d1f3a6612a7a78698f998e2369cabdbb3654" translate="yes" xml:space="preserve">
          <source>Implements the abstract &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; の抽象 &lt;code&gt;write&lt;/code&gt; メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="85dcc3ce4240cbda68572ddbcac72a94ce15863a" translate="yes" xml:space="preserve">
          <source>Implements the guard interface for a permission. The &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called, passing this permission object as the permission to check. Returns silently if access is granted. Otherwise, throws a SecurityException.</source>
          <target state="translated">権限のガードインターフェイスを実装します。 &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; の方法をチェックする権限として、この権限オブジェクトを渡す、と呼ばれています。アクセスが許可されると、サイレントに戻ります。それ以外の場合は、SecurityExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="9c8baefff3346231902a3ebabd8df14c787b0f9b" translate="yes" xml:space="preserve">
          <source>Implements timed condition wait.</source>
          <target state="translated">時間条件待ちをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="97bc4b1502ef7ea7fd18271c7831c9405cc5ea04" translate="yes" xml:space="preserve">
          <source>Implements uninterruptible condition wait.</source>
          <target state="translated">無停電状態での待ち時間をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="c71923291c8740cc76f9206ce1cdd5cb8964838b" translate="yes" xml:space="preserve">
          <source>Imports all of the preferences represented by the XML document on the specified input stream. The document may represent user preferences or system preferences. If it represents user preferences, the preferences will be imported into the calling user's preference tree (even if they originally came from a different user's preference tree). If any of the preferences described by the document inhabit preference nodes that do not exist, the nodes will be created.</source>
          <target state="translated">指定された入力ストリーム上のXMLドキュメントで表されるすべての環境設定をインポートします。ドキュメントは、ユーザの環境設定やシステムの環境設定を表すものです。ユーザの環境設定を表している場合は、その環境設定は呼び出し元のユーザの環境設定ツリーにインポートされます (元々は別のユーザの環境設定ツリーから来たものであったとしても)。ドキュメントで説明されている環境設定のいずれかが、存在しない環境設定ノードに存在する場合は、そのノードが作成されます。</target>
        </trans-unit>
        <trans-unit id="c3b5a559d458b855feabfd942350c4d64812e691" translate="yes" xml:space="preserve">
          <source>Imports the parameters from &lt;code&gt;params&lt;/code&gt; and decodes them according to the specified decoding format. If &lt;code&gt;format&lt;/code&gt; is null, the primary decoding format for parameters is used. The primary decoding format is ASN.1, if an ASN.1 specification for these parameters exists.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; からパラメーターをインポートし、指定されたデコード形式に従ってデコードします。 &lt;code&gt;format&lt;/code&gt; がnullの場合、パラメーターのプライマリデコード形式が使用されます。これらのパラメーターのASN.1仕様が存在する場合、主なデコード形式はASN.1です。</target>
        </trans-unit>
        <trans-unit id="8daf910475ce86194cd83279397f2ce3ae7b465e" translate="yes" xml:space="preserve">
          <source>Imports the parameters from &lt;code&gt;params&lt;/code&gt; and decodes them according to the specified decoding scheme. If &lt;code&gt;format&lt;/code&gt; is null, the primary decoding format for parameters is used. The primary decoding format is ASN.1, if an ASN.1 specification for these parameters exists.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; からパラメーターをインポートし、指定されたデコードスキームに従ってデコードします。 &lt;code&gt;format&lt;/code&gt; がnullの場合、パラメーターのプライマリデコード形式が使用されます。これらのパラメーターのASN.1仕様が存在する場合、主なデコード形式はASN.1です。</target>
        </trans-unit>
        <trans-unit id="9e1a8d9caf50a44dc7557cdf109bddec4a771f9e" translate="yes" xml:space="preserve">
          <source>Imports the specified parameters and decodes them according to the primary decoding format for parameters. The primary decoding format for parameters is ASN.1, if an ASN.1 specification for this type of parameters exists.</source>
          <target state="translated">指定されたパラメータをインポートし、パラメータのプライマリデコードフォーマットに従ってデコードします。このタイプのパラメータのASN.1仕様が存在する場合、パラメータのプライマリデコードフォーマットはASN.1です。</target>
        </trans-unit>
        <trans-unit id="ebb09cb4d38a6b66afe6af78e3d1ad2ebf60b9fe" translate="yes" xml:space="preserve">
          <source>Imposes each consecutive pair of print-stream pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of print-stream pages on the medium would be correct for the reader as if for binding on the long edge. This imposition is also known as &quot;duplex&quot; (see &lt;a href=&quot;sides#DUPLEX&quot;&gt;&lt;code&gt;DUPLEX&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">媒体上の各印刷ストリームページのペアの向きが、長辺を綴じているかのようにリーダーに対して正しくなるように、連続する媒体シートの前面と裏面に各連続する印刷ストリームページのペアを課します。この面付けは「二重」としても知られています（&lt;a href=&quot;sides#DUPLEX&quot;&gt; &lt;code&gt;DUPLEX&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="54db18fccd287c2e1b6e20e055a1cdacd0a5564b" translate="yes" xml:space="preserve">
          <source>Imposes each consecutive pair of print-stream pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of print-stream pages on the medium would be correct for the reader as if for binding on the short edge. This imposition is also known as &quot;tumble&quot; (see &lt;a href=&quot;sides#TUMBLE&quot;&gt;&lt;code&gt;TUMBLE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">メディア上の各印刷ストリームページのペアの向きが、短辺をとじるかのようにリーダーにとって正しいように、連続するメディアシートの前面と裏面に各連続する印刷ストリームページのペアを課します。この面付けは「タンブル」としても知られています（&lt;a href=&quot;sides#TUMBLE&quot;&gt; &lt;code&gt;TUMBLE&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d2be57fb742356053fcc2d4484541e57728aa6dd" translate="yes" xml:space="preserve">
          <source>Imposes each consecutive print-stream page upon the same side of consecutive media sheets.</source>
          <target state="translated">連続したメディアシートの同じ面に、連続した印刷ストリームの各ページを課す。</target>
        </trans-unit>
        <trans-unit id="cecfaf1a15b7081e3c047943c8dccba7e77b2633" translate="yes" xml:space="preserve">
          <source>In 2008, time-zone offsets around the world extended from -12:00 to +14:00. To prevent any problems with that range being extended, yet still provide validation, the range of offsets is restricted to -18:00 to 18:00 inclusive.</source>
          <target state="translated">2008年には、世界中の時間帯のオフセットが-12:00から+14:00まで拡張されました。この範囲が拡張されたことによる問題を防ぎつつ検証を提供するために、オフセットの範囲は-18:00から18:00までに制限されています。</target>
        </trans-unit>
        <trans-unit id="86389704bee7bc2f2d5910700581356c0e5689e9" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt;, only the week-based-year is validated against the range of valid values. If the day-of-week is outside the range 1 to 7, then the resulting date is adjusted by a suitable number of weeks to reduce the day-of-week to the range 1 to 7. If the week-of-week-based-year value is outside the range 1 to 52, then any excess weeks are added or subtracted from the resulting date.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモードで&lt;/a&gt;、唯一の週ベース年には有効な値の範囲に対して検証されます。曜日が1から7の範囲外の場合、結果の日付は適切な週数で調整され、曜日を1から7の範囲に減らします。 based-yearの値が1〜52の範囲外の場合、超過した週が結果の日付に追加または減算されます。</target>
        </trans-unit>
        <trans-unit id="f9e4a79de23768eb149fc2303c479b95439f491c" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt;, only the year is validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first of January in the requested year. Then take the quarter-of-year, subtract one, and add the amount in quarters to the date. Finally, take the day-of-quarter, subtract one, and add the amount in days to the date.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモードで&lt;/a&gt;、唯一の年は、有効な値の範囲に対して検証されます。結果の日付は、次の3段階のアプローチと同等に計算されます。まず、要求された年の1月1日に日付を作成します。次に、四半期を取り、1を引いて、四半期の金額を日付に追加します。最後に、四半期の日を取り、1を引いて、日付に日数を加算します。</target>
        </trans-unit>
        <trans-unit id="cd6ec172c1edc269b53c0583f46c3f095ab84cae" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt;, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following four stage approach. First, create a date on the first day of the first week of January in the requested year. Then take the month-of-year, subtract one, and add the amount in months to the date. Then take the week-of-month, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;、年と曜日が有効な値の範囲に照らして検証されています。結果の日付は、次の4段階のアプローチと同等に計算されます。まず、要求された年の1月の第1週の最初の日に日付を作成します。次に、月を取り、1を引いて、日付に月単位の金額を追加します。次に、月の週を取り、1を引いて、週の量を日付に追加します。最後に、ローカライズされた週の正しい曜日に調整します。</target>
        </trans-unit>
        <trans-unit id="4e3729f6e6efd6616dbdd65aa7497b7c86a2f948" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt;, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first day of the first week in the requested week-based-year. Then take the week-of-week-based-year, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;、年と曜日が有効な値の範囲に照らして検証されています。結果の日付は、次の3段階のアプローチと同等に計算されます。まず、要求された週ベースの年の最初の週の最初の日に日付を作成します。次に、週ベースの年を取り、1を引いて、日付に週単位の金額を追加します。最後に、ローカライズされた週の正しい曜日に調整します。</target>
        </trans-unit>
        <trans-unit id="59cdf6f2f16e3f4bbc8085642ff9ed4c512d12dd" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt;, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first day of the first week in the requested year. Then take the week-of-year, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;、年と曜日が有効な値の範囲に照らして検証されています。結果の日付は、次の3段階のアプローチと同等に計算されます。まず、要求された年の最初の週の最初の日に日付を作成します。次に、週を取り、1を引いて、週の量を日付に追加します。最後に、ローカライズされた週の正しい曜日に調整します。</target>
        </trans-unit>
        <trans-unit id="0fb07a317c3eaba0aff1f9dde717867e0b71ef5e" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt;, all four fields are validated against their range of valid values. The week-of-month field is validated from 0 to 6, meaning that the resulting date can be in a different month to that specified.</source>
          <target state="translated">では&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;、スマートモードで&lt;/a&gt;、4つのすべてのフィールドが有効な値のその範囲に対して検証されています。月の週フィールドは0から6まで検証され、結果の日付は指定された月とは異なる月になる可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="8e475c8cf450e0722c0f73724f68b49888b78026" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt;, all three fields are validated against their range of valid values. The day-of-quarter field is validated between 1 and 92, ignoring the actual range based on the year and quarter. If the day-of-quarter exceeds the actual range by one day, then the resulting date is one day later. If the day-of-quarter exceeds the actual range by two days, then the resulting date is two days later.</source>
          <target state="translated">では&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;、スマートモードで&lt;/a&gt;、すべての3つのフィールドが有効な値のその範囲に対して検証されています。四半期の日フィールドは、年と四半期に基づく実際の範囲を無視して、1から92の間で検証されます。四半期の日が実際の範囲を1日超える場合、結果の日付は1日後です。四半期の日が実際の範囲を2日超える場合、結果の日付は2日後です。</target>
        </trans-unit>
        <trans-unit id="48298e99d0fc04b4dade93a7fa8a98aa3f5d9136" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-week-based-year field is validated between 1 and 53, ignoring the week-based-year. If the week-of-week-based-year is 53, but the week-based-year only has 52 weeks, then the resulting date is in week 1 of the following week-based-year.</source>
          <target state="translated">では&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;、スマートモードで&lt;/a&gt;、すべての3つのフィールドが有効な値のその範囲に対して検証されています。週ベースの年フィールドは、週ベースの年を無視して、1から53の間で検証されます。週ベースの年が53で、週ベースの年が52週しかない場合、結果の日付は次の週ベースの年の第1週になります。</target>
        </trans-unit>
        <trans-unit id="78349302167faa6d7a2aed1df47448ca5048b25d" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-week-based-year field is validated from 1 to 53, meaning that the resulting date can be in the following week-based-year to that specified.</source>
          <target state="translated">では&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;、スマートモードで&lt;/a&gt;、すべての3つのフィールドが有効な値のその範囲に対して検証されています。週ベースの年フィールドは、1から53まで検証されます。つまり、結果の日付は、次の週ベースの年から指定された日付までになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="f232305a5c1e15ea107e37a90c2ece7913724549" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-year field is validated from 0 to 54, meaning that the resulting date can be in a different year to that specified.</source>
          <target state="translated">では&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;、スマートモードで&lt;/a&gt;、すべての3つのフィールドが有効な値のその範囲に対して検証されています。年の週フィールドは0から54まで検証されます。つまり、結果の日付は指定された年とは異なる年になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="92aff29473ae74aa918cfecc94d38303412532e6" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt;, all four fields are validated against their range of valid values. The week-of-month field is validated to ensure that the resulting month is the month requested.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;、4つのすべてのフィールドが有効な値のその範囲に対して検証されています。毎週のフィールドは、結果の月が要求された月であることを確認するために検証されます。</target>
        </trans-unit>
        <trans-unit id="0f0e202932cebbe8a155bd934de772f0860489c8" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt;, all three fields are validated against their range of valid values. The day-of-quarter field is validated from 1 to 90, 91 or 92 depending on the year and quarter.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;、3つのすべてのフィールドが有効な値のその範囲に対して検証されています。四半期の日フィールドは、年と四半期に応じて、1から90、91、または92まで検証されます。</target>
        </trans-unit>
        <trans-unit id="61038d4b8c7da66e5b7168e9d72153f9f95dd9b8" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-week-based-year field is validated from 1 to 52 or 53 depending on the week-based-year.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;、3つのすべてのフィールドが有効な値のその範囲に対して検証されています。週ベースの年フィールドは、週ベースの年に応じて、1から52または53まで検証されます。</target>
        </trans-unit>
        <trans-unit id="6c209b717e4718fb111069dea4a3876d7d3d886e" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-year field is validated to ensure that the resulting week-based-year is the week-based-year requested.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;、3つのすべてのフィールドが有効な値のその範囲に対して検証されています。年の週フィールドは、結果の週ベースの年が要求された週ベースの年であることを確認するために検証されます。</target>
        </trans-unit>
        <trans-unit id="0e3442bcb8b50ab377f46533d2cb10831695feee" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt;, all three fields are validated against their range of valid values. The week-of-year field is validated to ensure that the resulting year is the year requested.</source>
          <target state="translated">で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;、3つのすべてのフィールドが有効な値のその範囲に対して検証されています。週のフィールドは、結果の年が要求された年であることを確認するために検証されます。</target>
        </trans-unit>
        <trans-unit id="94d0612798926c7af8d39f4a4589255d75a064c6" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;threadpoolexecutor.callerrunspolicy&quot;&gt;&lt;code&gt;ThreadPoolExecutor.CallerRunsPolicy&lt;/code&gt;&lt;/a&gt;, the thread that invokes &lt;code&gt;execute&lt;/code&gt; itself runs the task. This provides a simple feedback control mechanism that will slow down the rate that new tasks are submitted.</source>
          <target state="translated">で&lt;a href=&quot;threadpoolexecutor.callerrunspolicy&quot;&gt; &lt;code&gt;ThreadPoolExecutor.CallerRunsPolicy&lt;/code&gt; &lt;/a&gt;、呼び出すが、そのスレッド &lt;code&gt;execute&lt;/code&gt; 自体は、タスクを実行します。これにより、新しいタスクが送信される速度を遅くする単純なフィードバック制御メカニズムが提供されます。</target>
        </trans-unit>
        <trans-unit id="cb2aef34e8541d620db480296296a5005b0d8ebb" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;threadpoolexecutor.discardoldestpolicy&quot;&gt;&lt;code&gt;ThreadPoolExecutor.DiscardOldestPolicy&lt;/code&gt;&lt;/a&gt;, if the executor is not shut down, the task at the head of the work queue is dropped, and then execution is retried (which can fail again, causing this to be repeated.)</source>
          <target state="translated">では&lt;a href=&quot;threadpoolexecutor.discardoldestpolicy&quot;&gt; &lt;code&gt;ThreadPoolExecutor.DiscardOldestPolicy&lt;/code&gt; &lt;/a&gt; executorがシャットダウンされていない場合は、作業キューの先頭のタスクは破棄され、その後、実行が再試行され（これが繰り返されることを引き起こし、再び失敗する可能性があります。）</target>
        </trans-unit>
        <trans-unit id="c8f191d695cda03baf1111a2194130a680c23105" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;threadpoolexecutor.discardpolicy&quot;&gt;&lt;code&gt;ThreadPoolExecutor.DiscardPolicy&lt;/code&gt;&lt;/a&gt;, a task that cannot be executed is simply dropped.</source>
          <target state="translated">で&lt;a href=&quot;threadpoolexecutor.discardpolicy&quot;&gt; &lt;code&gt;ThreadPoolExecutor.DiscardPolicy&lt;/code&gt; &lt;/a&gt;、実行できないタスクが単に削除されます。</target>
        </trans-unit>
        <trans-unit id="0564ee6a70dbf13f614fae05c50df5afc450037f" translate="yes" xml:space="preserve">
          <source>In Beans 1.0 the given name can indicate either a serialized object or a class. Other mechanisms may be added in the future. In beans 1.0 we first try to treat the beanName as a serialized object name then as a class name.</source>
          <target state="translated">Beans 1.0では、与えられた名前はシリアル化されたオブジェクトかクラスのどちらかを示すことができます。将来的には他のメカニズムが追加されるかもしれません。Bean 1.0 では、まず beanName をシリアライズされたオブジェクト名として扱い、次にクラス名として扱おうとしています。</target>
        </trans-unit>
        <trans-unit id="042c75bc8038a7bfe93454be2f4ccc7544315dc7" translate="yes" xml:space="preserve">
          <source>In InetAddress and Inet6Address, it is used for internal representation; it has no functional role. Java will never return an IPv4-mapped address. These classes can take an IPv4-mapped address as input, both in byte array and text representation. However, it will be converted into an IPv4 address.</source>
          <target state="translated">InetAddressおよびInet6Addressでは、内部表現に使用され、機能的な役割はありません。JavaがIPv4にマップされたアドレスを返すことはありません。これらのクラスは、バイト配列でもテキスト表現でも、IPv4にマップされたアドレスを入力として受け取ることができます。ただし、IPv4アドレスに変換されます。</target>
        </trans-unit>
        <trans-unit id="014f1fa7c567eb71497930106403f0d11979f4bc" translate="yes" xml:space="preserve">
          <source>In JNDI, all naming and directory operations are performed relative to a context. There are no absolute roots. Therefore JNDI defines an &lt;em&gt;initial context&lt;/em&gt;, &lt;code&gt;InitialContext&lt;/code&gt;, which provides a starting point for naming and directory operations. Once you have an initial context, you can use it to look up other contexts and objects.</source>
          <target state="translated">JNDIでは、すべてのネーミングおよびディレクトリ操作はコンテキストに関連して実行されます。絶対的なルーツはありません。したがって、JNDIを定義&lt;em&gt;初期コンテキスト&lt;/em&gt;、 &lt;code&gt;InitialContext&lt;/code&gt; のネーミングおよびディレクトリ操作のための出発点を提供します。初期コンテキストを取得したら、それを使用して他のコンテキストやオブジェクトを検索できます。</target>
        </trans-unit>
        <trans-unit id="13209128b680b3afe374b6116423184d3647e46c" translate="yes" xml:space="preserve">
          <source>In Java Sound, &lt;code&gt;MidiEvent&lt;/code&gt; objects are typically contained in a &lt;code&gt;&lt;a href=&quot;track&quot;&gt;&lt;code&gt;Track&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;Tracks&lt;/code&gt; are likewise contained in a &lt;code&gt;Sequence&lt;/code&gt;.</source>
          <target state="translated">Java Soundでは、 &lt;code&gt;MidiEvent&lt;/code&gt; オブジェクトは通常 &lt;code&gt;&lt;a href=&quot;track&quot;&gt;&lt;code&gt;Track&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に含まれ、 &lt;code&gt;Tracks&lt;/code&gt; も同様に &lt;code&gt;Sequence&lt;/code&gt; に含まれます。</target>
        </trans-unit>
        <trans-unit id="98331511b3ce4c496aa8e2ac58efd2c1a6a50995" translate="yes" xml:space="preserve">
          <source>In Java Sound, however, a &lt;code&gt;Synthesizer&lt;/code&gt; class can expose the contents of its voices through its &lt;a href=&quot;synthesizer#getVoiceStatus--&quot;&gt;&lt;code&gt;getVoiceStatus()&lt;/code&gt;&lt;/a&gt; method. This behavior is recommended but optional; synthesizers that don't expose their voice allocation simply return a zero-length array. A &lt;code&gt;Synthesizer&lt;/code&gt; that does report its voice status should maintain this information at all times for all of its voices, whether they are currently sounding or not. In other words, a given type of &lt;code&gt;Synthesizer&lt;/code&gt; always has a fixed number of voices, equal to the maximum number of simultaneous notes it is capable of sounding.</source>
          <target state="translated">ただし、Java Soundでは、 &lt;code&gt;Synthesizer&lt;/code&gt; クラスは、&lt;a href=&quot;synthesizer#getVoiceStatus--&quot;&gt; &lt;code&gt;getVoiceStatus()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、その音声の内容を公開できます。この動作は推奨されていますが、オプションです。音声割り当てを公開しないシンセサイザは、長さがゼロの配列を返すだけです。音声ステータスを報告する &lt;code&gt;Synthesizer&lt;/code&gt; は、現在発音しているかどうかに関係なく、すべての音声についてこの情報を常に維持する必要があります。つまり、特定のタイプの &lt;code&gt;Synthesizer&lt;/code&gt; 常に、固定された数のボイスがあり、それは発音可能な同時ノートの最大数と同じです。</target>
        </trans-unit>
        <trans-unit id="7717ad4c43dc4f90b8dc37532fbf48149788e4e0" translate="yes" xml:space="preserve">
          <source>In June of 1996, the basic X.509 v3 format was completed by ISO/IEC and ANSI X9, which is described below in ASN.1:</source>
          <target state="translated">1996年6月にISO/IECとANSI X9によって基本的なX.509 v3フォーマットが完成し、ASN.1では以下のように記述されています。</target>
        </trans-unit>
        <trans-unit id="0cd5532b3248e413385cbfc9fc717eba269294fb" translate="yes" xml:space="preserve">
          <source>In Open MBeans, attributes and parameters can have default values and/or constraints associated with them in the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; or &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;. There are two ways to specify these constraints. Either the values are directly specified as parameters to one of the constructors of &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; or &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;, for example &lt;a href=&quot;openmbeanparameterinfosupport#OpenMBeanParameterInfoSupport-java.lang.String-java.lang.String-javax.management.openmbean.OpenType-T-T:A-&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport.OpenMBeanParameterInfoSupport(
      String, String, OpenType, Object, Object[])&lt;/code&gt;&lt;/a&gt;; or the values are specified in a &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; given as a parameter to one of the constructors.</source>
          <target state="translated">Open MBeanでは、属性とパラメーターに &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; または &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; で関連付けられたデフォルト値や制約を設定できます。これらの制約を指定するには2つの方法があります。値は、 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; または &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; のコンストラクターのいずれかにパラメーターとして直接指定されます。たとえば、&lt;a href=&quot;openmbeanparameterinfosupport#OpenMBeanParameterInfoSupport-java.lang.String-java.lang.String-javax.management.openmbean.OpenType-T-T:A-&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport.OpenMBeanParameterInfoSupport( String, String, OpenType, Object, Object[])&lt;/code&gt; &lt;/a&gt;ます。または、値は、コンストラクターの1つにパラメーターとして指定された&lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;子で指定されます。</target>
        </trans-unit>
        <trans-unit id="57742fea34c047c7946636e9200af85a7134f451" translate="yes" xml:space="preserve">
          <source>In Perl, &lt;code&gt;\1&lt;/code&gt; through &lt;code&gt;\9&lt;/code&gt; are always interpreted as back references; a backslash-escaped number greater than &lt;code&gt;9&lt;/code&gt; is treated as a back reference if at least that many subexpressions exist, otherwise it is interpreted, if possible, as an octal escape. In this class octal escapes must always begin with a zero. In this class, &lt;code&gt;\1&lt;/code&gt; through &lt;code&gt;\9&lt;/code&gt; are always interpreted as back references, and a larger number is accepted as a back reference if at least that many subexpressions exist at that point in the regular expression, otherwise the parser will drop digits until the number is smaller or equal to the existing number of groups or it is one digit.</source>
          <target state="translated">Perlでは、 &lt;code&gt;\1&lt;/code&gt; から &lt;code&gt;\9&lt;/code&gt; は常に後方参照として解釈されます。 &lt;code&gt;9&lt;/code&gt; より大きいバックスラッシュエスケープされた数値は、少なくともその数のサブ式が存在する場合は後方参照として扱われ、そうでない場合は、可能であれば8進エスケープとして解釈されます。このクラスでは、8進エスケープは常にゼロで始まる必要があります。このクラスでは、 &lt;code&gt;\1&lt;/code&gt; から &lt;code&gt;\9&lt;/code&gt; は常に後方参照として解釈され、正規表現のその時点で少なくともその数の部分式が存在する場合、より大きい数が後方参照として受け入れられます。それ以外の場合、パーサーは数値まで数字をドロップします既存のグループ数以下であるか、1桁です。</target>
        </trans-unit>
        <trans-unit id="4d1565310b4b37e62e7a911cfa4fcf890fef7d66" translate="yes" xml:space="preserve">
          <source>In Perl, embedded flags at the top level of an expression affect the whole expression. In this class, embedded flags always take effect at the point at which they appear, whether they are at the top level or within a group; in the latter case, flags are restored at the end of the group just as in Perl.</source>
          <target state="translated">Perlでは、式のトップレベルに埋め込まれたフラグは式全体に影響を与えます。このクラスでは、埋め込まれたフラグは、トップレベルにあってもグループ内にあっても、常にそのフラグが現れた時点で効果を発揮します。</target>
        </trans-unit>
        <trans-unit id="3b570462cd79d760be3948904adcdedf1d492b06" translate="yes" xml:space="preserve">
          <source>In SSL, sessions are used to describe an ongoing relationship between two entities.</source>
          <target state="translated">SSLでは、セッションは2つのエンティティ間の継続的な関係を記述するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1ff794ab8aeeb7f642a324d3b35b851cc6c68096" translate="yes" xml:space="preserve">
          <source>In SSL, sessions are used to describe an ongoing relationship between two entities. Each SSL connection involves one session at a time, but that session may be used on many connections between those entities, simultaneously or sequentially. The session used on a connection may also be replaced by a different session. Sessions are created, or rejoined, as part of the SSL handshaking protocol. Sessions may be invalidated due to policies affecting security or resource usage, or by an application explicitly calling &lt;code&gt;invalidate&lt;/code&gt;. Session management policies are typically used to tune performance.</source>
          <target state="translated">SSLでは、セッションは2つのエンティティ間の進行中の関係を記述するために使用されます。各SSL接続には一度に1つのセッションが含まれますが、そのセッションはそれらのエンティティ間の多くの接続で同時にまたは順次に使用できます。接続で使用されるセッションは、別のセッションで置き換えることもできます。セッションは、SSLハンドシェイクプロトコルの一部として作成または再結合されます。セキュリティまたはリソースの使用に影響を与えるポリシー、またはアプリケーションが明示的に &lt;code&gt;invalidate&lt;/code&gt; を呼び出すことにより、セッションが無効になる場合があります。セッション管理ポリシーは、通常、パフォーマンスを調整するために使用されます。</target>
        </trans-unit>
        <trans-unit id="26f05bf5ad6ab1df97bc4c4688975872f5e533e1" translate="yes" xml:space="preserve">
          <source>In a comma-separated list of actions, spaces are allowed before and after each action.</source>
          <target state="translated">カンマで区切られたアクションのリストでは、各アクションの前後にスペースを入れることができます。</target>
        </trans-unit>
        <trans-unit id="f1b27c3d7f721836425a197858414f76de2981f3" translate="yes" xml:space="preserve">
          <source>In a directory, named objects can have associated with them attributes. The &lt;code&gt;Attribute&lt;/code&gt; interface represents an attribute associated with a named object. An attribute contains 0 or more, possibly null, values. The attribute values can be ordered or unordered (see &lt;code&gt;isOrdered()&lt;/code&gt;). If the values are unordered, no duplicates are allowed. If the values are ordered, duplicates are allowed.</source>
          <target state="translated">ディレクトリでは、名前付きオブジェクトに属性を関連付けることができます。 &lt;code&gt;Attribute&lt;/code&gt; インタフェースは、指定されたオブジェクトに関連付けられた属性を表します。属性には、0以上の、場合によってはnullの値が含まれます。属性値は順序付けすることも順序付けしないこともできます（ &lt;code&gt;isOrdered()&lt;/code&gt; を参照）。値が順序付けられていない場合、重複は許可されません。値が順序付けられている場合、重複が許可されます。</target>
        </trans-unit>
        <trans-unit id="d814ed6a72f0f727435c36a8f8920d7394fc6592" translate="yes" xml:space="preserve">
          <source>In a directory, named objects can have associated with them attributes. The Attributes interface represents a collection of attributes. For example, you can request from the directory the attributes associated with an object. Those attributes are returned in an object that implements the Attributes interface.</source>
          <target state="translated">ディレクトリ内では、名前のついたオブジェクトは属性を持つことができます。属性インタフェースは、属性のコレクションを表します。例えば、あるオブジェクトに関連付けられた属性をディレクトリに要求することができます。これらの属性は、Attributes インターフェースを実装したオブジェクトで返されます。</target>
        </trans-unit>
        <trans-unit id="ef39a078f24c6cadc5267973ce916397b861c70d" translate="yes" xml:space="preserve">
          <source>In a federated naming system, a context from one naming system may be bound to a name in another. One can subsequently look up and perform operations on the foreign context using a composite name. However, an attempt destroy the context using this composite name will fail with &lt;code&gt;NotContextException&lt;/code&gt;, because the foreign context is not a &quot;subcontext&quot; of the context in which it is bound. Instead, use &lt;code&gt;unbind()&lt;/code&gt; to remove the binding of the foreign context. Destroying the foreign context requires that the &lt;code&gt;destroySubcontext()&lt;/code&gt; be performed on a context from the foreign context's &quot;native&quot; naming system.</source>
          <target state="translated">連合ネーミングシステムでは、あるネーミングシステムのコンテキストが別のネーミングシステムの名前にバインドされる場合があります。その後、複合名を使用して外部コンテキストを検索し、操作を実行できます。ただし、この複合名を使用してコンテキストを破棄しようとすると、外部コンテキストがバインドされているコンテキストの「サブコンテキスト」ではないため、 &lt;code&gt;NotContextException&lt;/code&gt; で失敗します。代わりに、 &lt;code&gt;unbind()&lt;/code&gt; を使用して外部コンテキストのバインディングを削除してください。外部コンテキストを &lt;code&gt;destroySubcontext()&lt;/code&gt; は、外部コンテキストの「ネイティブ」ネーミングシステムのコンテキストでdestroySubcontext（）を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="114c0d7797271a679147f3a27754dcc0dd68dfa2" translate="yes" xml:space="preserve">
          <source>In a given instance any particular component is either</source>
          <target state="translated">任意のインスタンスでは、特定のコンポーネントは以下のいずれかです。</target>
        </trans-unit>
        <trans-unit id="4f34c121362e6825cfb7979d461f740a49f541c2" translate="yes" xml:space="preserve">
          <source>In a similar manner, this method can be used to ignore secondary fields that would otherwise be cross-checked. For example, if the formatter consists of year, month, day-of-month and day-of-week, then there is only one way to resolve a date, but the parsed value for day-of-week will be cross-checked against the resolved date. Calling this method with the arguments &lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; will ensure that the date is resolved correctly, but without any cross-check for the day-of-week.</source>
          <target state="translated">同様に、このメソッドを使用すると、他の方法でクロスチェックされる2次フィールドを無視できます。たとえば、フォーマッタが年、月、日、および曜日で構成されている場合、日付を解決する方法は1つだけですが、曜日の解析された値はクロスチェックされます解決日に対して。引数&lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;を指定してこのメ​​ソッドを呼び出すと、日付が正しく解決されますが、曜日のクロスチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="90329937fe209cdc5c56c8a7860e7f3ea7544235" translate="yes" xml:space="preserve">
          <source>In a string without quotes or escapes, any instance of the separator delimits two atomic names. Each atomic name is referred to as a &lt;em&gt;component&lt;/em&gt;.</source>
          <target state="translated">引用符やエスケープのない文字列では、セパレーターのインスタンスは2つのアトミック名を区切ります。各原子名は&lt;em&gt;コンポーネント&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="85fe56db10a3c0d908e17d31e5b4da75440bafdf" translate="yes" xml:space="preserve">
          <source>In a tree of tiered phasers, registration and deregistration of child phasers with their parent are managed automatically. Whenever the number of registered parties of a child phaser becomes non-zero (as established in the &lt;a href=&quot;phaser#Phaser-java.util.concurrent.Phaser-int-&quot;&gt;&lt;code&gt;Phaser(Phaser,int)&lt;/code&gt;&lt;/a&gt; constructor, &lt;a href=&quot;phaser#register--&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;phaser#bulkRegister-int-&quot;&gt;&lt;code&gt;bulkRegister(int)&lt;/code&gt;&lt;/a&gt;), the child phaser is registered with its parent. Whenever the number of registered parties becomes zero as the result of an invocation of &lt;a href=&quot;phaser#arriveAndDeregister--&quot;&gt;&lt;code&gt;arriveAndDeregister()&lt;/code&gt;&lt;/a&gt;, the child phaser is deregistered from its parent.</source>
          <target state="translated">階層化されたフェイザーのツリーでは、子フェイザーの親への登録と登録解除が自動的に管理されます。 （&lt;a href=&quot;phaser#Phaser-java.util.concurrent.Phaser-int-&quot;&gt; &lt;code&gt;Phaser(Phaser,int)&lt;/code&gt; &lt;/a&gt;コンストラクター、&lt;a href=&quot;phaser#register--&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;phaser#bulkRegister-int-&quot;&gt; &lt;code&gt;bulkRegister(int)&lt;/code&gt; で&lt;/a&gt;確立された）子フェーザーの登録済みパーティーの数がゼロ以外になると、子フェーザーはその親に登録されます。登録されているパーティの数がゼロになると、&lt;a href=&quot;phaser#arriveAndDeregister--&quot;&gt; &lt;code&gt;arriveAndDeregister()&lt;/code&gt; &lt;/a&gt;が呼び出されるたびに、子フェイザーはその親から登録解除されます。</target>
        </trans-unit>
        <trans-unit id="4de1fa88647ce453435c8841d38d13382e76babc" translate="yes" xml:space="preserve">
          <source>In a weighted list, each language range is given a weight value. The weight value is identical to the &quot;quality value&quot; in &lt;a href=&quot;http://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;, and it expresses how much the user prefers the language. A weight value is specified after a corresponding language range followed by &lt;code&gt;&quot;;q=&quot;&lt;/code&gt;, and the default weight value is &lt;code&gt;MAX_WEIGHT&lt;/code&gt; when it is omitted.</source>
          <target state="translated">加重リストでは、各言語範囲に加重値が与えられます。重み値は&lt;a href=&quot;http://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616の&lt;/a&gt;「品質値」と同じであり、ユーザーが言語をどれだけ好むかを表します。重み値は、対応する言語範囲の後に &lt;code&gt;&quot;;q=&quot;&lt;/code&gt; 続くように指定されます。省略された場合、デフォルトの重み値は &lt;code&gt;MAX_WEIGHT&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db07c01b971410649ed0adc273a6cbcf93d8159c" translate="yes" xml:space="preserve">
          <source>In addition it provides an extension mechanism so that arbitrary attribute/value pairs can be associated with a design feature.</source>
          <target state="translated">さらに、任意の属性/値のペアをデザイン機能に関連付けることができるようにするための拡張メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="aee5260cc3f43d7a4d3d6be25379877f1d070d35" translate="yes" xml:space="preserve">
          <source>In addition there is a level OFF that can be used to turn off logging, and a level ALL that can be used to enable logging of all messages.</source>
          <target state="translated">さらに、ロギングをオフにするために使用できるレベル OFF と、すべてのメッセージのロギングを有効にするために使用できるレベル ALL があります。</target>
        </trans-unit>
        <trans-unit id="25aa82e21834a941721fb6024ff6ae38ee5c486b" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt;, the following options may be present:</source>
          <target state="translated">&lt;code&gt;READ&lt;/code&gt; および &lt;code&gt;WRITE&lt;/code&gt; に加えて、次のオプションが存在する場合があります。</target>
        </trans-unit>
        <trans-unit id="a77e8c6c29cfcb07a58299b7f377977a6631ab29" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;Stream&lt;/code&gt;, which is a stream of object references, there are primitive specializations for &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt;, all of which are referred to as &quot;streams&quot; and conform to the characteristics and restrictions described here.</source>
          <target state="translated">オブジェクト参照のストリームである &lt;code&gt;Stream&lt;/code&gt; に加えて、&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; の&lt;/a&gt;プリミティブな特殊化があり、これらはすべて「ストリーム」と呼ばれ、ここで説明する特性と制限に準拠しています。</target>
        </trans-unit>
        <trans-unit id="863160dc390b3ec933c01afa4c507995a466826d" translate="yes" xml:space="preserve">
          <source>In addition to a message string, a reference to another &lt;code&gt;Throwable&lt;/code&gt; (&lt;code&gt;Error&lt;/code&gt; or &lt;code&gt;Exception&lt;/code&gt;) is maintained. This reference, if non-&lt;code&gt;null&lt;/code&gt;, refers to the event that caused this exception to occur. For example, an &lt;code&gt;IOException&lt;/code&gt; while reading from a &lt;code&gt;File&lt;/code&gt; would be stored there.</source>
          <target state="translated">メッセージ文字列に加えて、別の &lt;code&gt;Throwable&lt;/code&gt; （ &lt;code&gt;Error&lt;/code&gt; または &lt;code&gt;Exception&lt;/code&gt; ）への参照が維持されます。この参照は、 &lt;code&gt;null&lt;/code&gt; でない場合、この例外を発生させたイベントを参照します。たとえば、 &lt;code&gt;File&lt;/code&gt; からの読み取り中の &lt;code&gt;IOException&lt;/code&gt; はそこに格納されます。</target>
        </trans-unit>
        <trans-unit id="2ad396eb168616040e6ae0797aa5e8deb8ca87b3" translate="yes" xml:space="preserve">
          <source>In addition to accessing the components of a path, a &lt;code&gt;Path&lt;/code&gt; also defines the &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;path#resolveSibling-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolveSibling&lt;/code&gt;&lt;/a&gt; methods to combine paths. The &lt;a href=&quot;path#relativize-java.nio.file.Path-&quot;&gt;&lt;code&gt;relativize&lt;/code&gt;&lt;/a&gt; method that can be used to construct a relative path between two paths. Paths can be &lt;a href=&quot;path#compareTo-java.nio.file.Path-&quot;&gt;&lt;code&gt;compared&lt;/code&gt;&lt;/a&gt;, and tested against each other using the &lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;startsWith&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;endsWith&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">パスは、パスのコンポーネントにアクセスするだけでなく、 &lt;code&gt;Path&lt;/code&gt; を結合&lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;path#resolveSibling-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolveSibling&lt;/code&gt; &lt;/a&gt;メソッドとresolveSiblingメソッドも定義します。&lt;a href=&quot;path#relativize-java.nio.file.Path-&quot;&gt; &lt;code&gt;relativize&lt;/code&gt; &lt;/a&gt;二つのパスの間の相対パスを構築することができる方法。パスはすることができ&lt;a href=&quot;path#compareTo-java.nio.file.Path-&quot;&gt; &lt;code&gt;compared&lt;/code&gt; &lt;/a&gt;、そして使用して互いに対して試験&lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;startsWith&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;endsWith&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="b69db6d9c887a09c80baed2338b0466acc408a2c" translate="yes" xml:space="preserve">
          <source>In addition to adjusting a date-time, an interface is provided to enable querying via &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;. The most common implementations of the query interface are method references. The &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; methods on major classes can all be used, such as &lt;code&gt;LocalDate::from&lt;/code&gt; or &lt;code&gt;Month::from&lt;/code&gt;. Further implementations are provided in &lt;a href=&quot;temporalqueries&quot;&gt;&lt;code&gt;TemporalQueries&lt;/code&gt;&lt;/a&gt; as static methods. Applications can also define queries by implementing &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日時の調整に加えて、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;を介したクエリを可能にするインターフェイスが提供されています。クエリインターフェイスの最も一般的な実装は、メソッド参照です。 &lt;code&gt;LocalDate::from&lt;/code&gt; や &lt;code&gt;Month::from&lt;/code&gt; など、主要なクラスの &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; メソッドをすべて使用できます。&lt;a href=&quot;temporalqueries&quot;&gt; &lt;code&gt;TemporalQueries&lt;/code&gt; では&lt;/a&gt;、静的メソッドとしてさらに実装が提供されます。アプリケーションは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;を実装することでクエリを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="18dd49d60299a8c8c9308c9ee36eeeae82c291e1" translate="yes" xml:space="preserve">
          <source>In addition to any notification specified by the application, a ModelMBean may always send also two additional notifications:</source>
          <target state="translated">アプリケーションによって指定された通知に加えて、ModelMBeanは常に2つの追加通知を送信することができます。</target>
        </trans-unit>
        <trans-unit id="d4c0aa78ed39e161d449ed162b18522a30f07ac8" translate="yes" xml:space="preserve">
          <source>In addition to attribute views, this package also defines classes and interfaces that are used when accessing attributes:</source>
          <target state="translated">属性ビューに加えて、本パッケージでは属性にアクセスする際に使用するクラスやインターフェースも定義しています。</target>
        </trans-unit>
        <trans-unit id="27cf5bf5dd1546b6480b43a44092643f35de07f9" translate="yes" xml:space="preserve">
          <source>In addition to classes representing single values, this package contains &lt;em&gt;Updater&lt;/em&gt; classes that can be used to obtain &lt;code&gt;compareAndSet&lt;/code&gt; operations on any selected &lt;code&gt;volatile&lt;/code&gt; field of any selected class. &lt;a href=&quot;atomicreferencefieldupdater&quot;&gt;&lt;code&gt;AtomicReferenceFieldUpdater&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomicintegerfieldupdater&quot;&gt;&lt;code&gt;AtomicIntegerFieldUpdater&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomiclongfieldupdater&quot;&gt;&lt;code&gt;AtomicLongFieldUpdater&lt;/code&gt;&lt;/a&gt; are reflection-based utilities that provide access to the associated field types. These are mainly of use in atomic data structures in which several &lt;code&gt;volatile&lt;/code&gt; fields of the same node (for example, the links of a tree node) are independently subject to atomic updates. These classes enable greater flexibility in how and when to use atomic updates, at the expense of more awkward reflection-based setup, less convenient usage, and weaker guarantees.</source>
          <target state="translated">単一の値を表すクラスに加えて、このパッケージには、選択したクラスの選択した &lt;code&gt;volatile&lt;/code&gt; フィールドの &lt;code&gt;compareAndSet&lt;/code&gt; 操作を取得するために使用できる&lt;em&gt;Updater&lt;/em&gt;クラスが含まれています。&lt;a href=&quot;atomicreferencefieldupdater&quot;&gt; &lt;code&gt;AtomicReferenceFieldUpdater&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomicintegerfieldupdater&quot;&gt; &lt;code&gt;AtomicIntegerFieldUpdater&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomiclongfieldupdater&quot;&gt; &lt;code&gt;AtomicLongFieldUpdater&lt;/code&gt; &lt;/a&gt;は、関連するフィールドタイプへのアクセスを提供するリフレクションベースのユーティリティです。これらは主に、いくつかの &lt;code&gt;volatile&lt;/code&gt; あるアトミックデータ構造で使用されます。同じノードのフィールド（たとえば、ツリーノードのリンク）は、独立してアトミック更新の対象になります。これらのクラスにより、アトミック更新をいつどのように使用するかにより大きな柔軟性が得られますが、リフレクションベースのセットアップがより厄介で、使い勝手が悪くなり、保証が弱くなります。</target>
        </trans-unit>
        <trans-unit id="c07668fb78a3e8b44ef261341e115a92aefc5157" translate="yes" xml:space="preserve">
          <source>In addition to execution and lifecycle control methods, this class provides status check methods (for example &lt;a href=&quot;forkjoinpool#getStealCount--&quot;&gt;&lt;code&gt;getStealCount()&lt;/code&gt;&lt;/a&gt;) that are intended to aid in developing, tuning, and monitoring fork/join applications. Also, method &lt;a href=&quot;forkjoinpool#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; returns indications of pool state in a convenient form for informal monitoring.</source>
          <target state="translated">実行およびライフサイクル制御メソッドに加えて、このクラスは、fork / joinアプリケーションの開発、調整、および監視を支援することを目的としたステータスチェックメソッド（たとえば、&lt;a href=&quot;forkjoinpool#getStealCount--&quot;&gt; &lt;code&gt;getStealCount()&lt;/code&gt; &lt;/a&gt;）を提供します。また、メソッド&lt;a href=&quot;forkjoinpool#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;は、プールの状態の表示を非公式の監視に便利な形式で返します。</target>
        </trans-unit>
        <trans-unit id="249af950c1dd714f44dfbec5cb9ac53d258e1718" translate="yes" xml:space="preserve">
          <source>In addition to groups created explicitly, the Java virtual machine maintains a system-wide &lt;em&gt;default group&lt;/em&gt; that is constructed automatically. Asynchronous channels that do not specify a group at construction time are bound to the default group. The default group has an associated thread pool that creates new threads as needed. The default group may be configured by means of system properties defined in the table below. Where the &lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt; for the default group is not configured then the pooled threads of the default group are &lt;a href=&quot;../../lang/thread#isDaemon--&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; threads.</source>
          <target state="translated">明示的に作成されたグループに加えて、Java仮想マシンは、自動的に構築されるシステム全体の&lt;em&gt;デフォルトグループ&lt;/em&gt;を維持します。構築時にグループを指定しない非同期チャネルは、デフォルトグループにバインドされます。デフォルトのグループには、必要に応じて新しいスレッドを作成する関連付けられたスレッドプールがあります。デフォルトのグループは、以下の表で定義されているシステムプロパティを使用して構成できます。どこ&lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;デフォルト・グループのために設定されていないデフォルトのグループのプールされたスレッドがある&lt;a href=&quot;../../lang/thread#isDaemon--&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;スレッド。</target>
        </trans-unit>
        <trans-unit id="e10fc02d16ef570a75e8db5a40d2d23818a250fc" translate="yes" xml:space="preserve">
          <source>In addition to implementing the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface, this class defines a number of &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; methods for inspecting the state of the lock. Some of these methods are only useful for instrumentation and monitoring.</source>
          <target state="translated">&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;インターフェースを実装することに加えて、このクラスは、ロックの状態を検査するためのいくつかの &lt;code&gt;public&lt;/code&gt; および &lt;code&gt;protected&lt;/code&gt; メソッドを定義します。これらの方法の一部は、計測と監視にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="ec4b220124539fad132ce531bce148656eb3511a" translate="yes" xml:space="preserve">
          <source>In addition to methods for accessing the position, limit, and capacity values and for marking and resetting, this class also defines the following operations upon buffers:</source>
          <target state="translated">位置、限界値、容量値へのアクセス、マーキング、リセットのメソッドに加え、バッファに対する以下の操作を定義します。</target>
        </trans-unit>
        <trans-unit id="4afd3c157bbfa30f1d336e095cfe8fd7e7490d3a" translate="yes" xml:space="preserve">
          <source>In addition to read and write operations, this class defines the following operations:</source>
          <target state="translated">このクラスでは、読み書き操作の他に、以下の操作を定義しています。</target>
        </trans-unit>
        <trans-unit id="bec83f051a9027148e6a86a6c722b1724d907132" translate="yes" xml:space="preserve">
          <source>In addition to reading bytes from the input buffer and writing characters to the output buffer, this method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination:</source>
          <target state="translated">このメソッドは、入力バッファーからバイトを読み取り、出力バッファーに文字を書き込むだけでなく、終了の理由を説明する&lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="6511f7091630bdef1a1d4d49b93dfe3aaad905c0" translate="yes" xml:space="preserve">
          <source>In addition to reading characters from the input buffer and writing bytes to the output buffer, this method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination:</source>
          <target state="translated">このメソッドは、入力バッファーから文字を読み取り、出力バッファーにバイトを書き込むことに加えて、終了の理由を説明する&lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="426c21be8d23fc549653794732dd4ec11d9e7056" translate="yes" xml:space="preserve">
          <source>In addition to serving as a standalone class, this class provides &lt;code&gt;protected&lt;/code&gt; functionality that may be useful when creating customized task classes.</source>
          <target state="translated">このクラスは、スタンドアロンクラスとして機能するだけでなく、カスタマイズされたタスククラスを作成するときに役立つ &lt;code&gt;protected&lt;/code&gt; 機能を提供します。</target>
        </trans-unit>
        <trans-unit id="70d7ce344f3e3d1092fd258a0707f75b56a6ae69" translate="yes" xml:space="preserve">
          <source>In addition to supporting</source>
          <target state="translated">サポートに加えて</target>
        </trans-unit>
        <trans-unit id="c50e8ec4869b062e7983b8307d360d622f72d425" translate="yes" xml:space="preserve">
          <source>In addition to the actions performed by the &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method, this method invokes the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method on all open channels in the group. This method does not attempt to stop or interrupt threads that are executing completion handlers. The group terminates when all actively executing completion handlers have run to completion and all resources have been released. This method may be invoked at any time. If some other thread has already invoked it, then another invocation will block until the first invocation is complete, after which it will return without effect.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;メソッドによって実行されるアクションに加えて、グループ内のすべての開いているチャネルで&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。このメソッドは、完了ハンドラーを実行しているスレッドの停止または中断を試みません。アクティブに実行されているすべての完了ハンドラーがすべて実行され、すべてのリソースが解放されると、グループは終了します。このメソッドはいつでも呼び出すことができます。他のスレッドがすでにそれを呼び出している場合、別の呼び出しは最初の呼び出しが完了するまでブロックされ、その後、効果なしに戻ります。</target>
        </trans-unit>
        <trans-unit id="28f37e8f3f69aa56facb878f44fda7bd5bd3c674" translate="yes" xml:space="preserve">
          <source>In addition to the available calendar types returned by the &lt;a href=&quot;calendar#getAvailableCalendarTypes--&quot;&gt;&lt;code&gt;Calendar.getAvailableCalendarTypes&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;&quot;gregorian&quot;&lt;/code&gt; and &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; as aliases of &lt;code&gt;&quot;gregory&quot;&lt;/code&gt; can be used with this method.</source>
          <target state="translated">このメソッドでは、&lt;a href=&quot;calendar#getAvailableCalendarTypes--&quot;&gt; &lt;code&gt;Calendar.getAvailableCalendarTypes&lt;/code&gt; &lt;/a&gt;メソッドによって返される利用可能なカレンダータイプに加えて、 &lt;code&gt;&quot;gregory&quot;&lt;/code&gt; エイリアスとして &lt;code&gt;&quot;gregorian&quot;&lt;/code&gt; と &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="e0a216003ee5984925855b502c7955bbfbb35501" translate="yes" xml:space="preserve">
          <source>In addition to the callback methods, the &lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;toBundleName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resourcebundle.control#toResourceName-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;toResourceName&lt;/code&gt;&lt;/a&gt; methods are defined primarily for convenience in implementing the callback methods. However, the &lt;code&gt;toBundleName&lt;/code&gt; method could be overridden to provide different conventions in the organization and packaging of localized resources. The &lt;code&gt;toResourceName&lt;/code&gt; method is &lt;code&gt;final&lt;/code&gt; to avoid use of wrong resource and class name separators.</source>
          <target state="translated">コールバックメソッドに加えて、&lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;toBundleName&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;resourcebundle.control#toResourceName-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;toResourceName&lt;/code&gt; &lt;/a&gt;方法は、コールバックメソッドを実装するの便宜上、主に定義されています。ただし、 &lt;code&gt;toBundleName&lt;/code&gt; メソッドをオーバーライドして、ローカライズされたリソースの編成とパッケージ化にさまざまな規則を提供することができます。 &lt;code&gt;toResourceName&lt;/code&gt; の方法があり &lt;code&gt;final&lt;/code&gt; 間違ったリソースとクラス名のセパレータの使用を避けること。</target>
        </trans-unit>
        <trans-unit id="cfc19ac6ac647d4ae06152ad3a7c4c90d5c62ae5" translate="yes" xml:space="preserve">
          <source>In addition to the date-time parameters, the &lt;a href=&quot;calendar.builder#setLocale-java.util.Locale-&quot;&gt;locale&lt;/a&gt;, &lt;a href=&quot;calendar.builder#setTimeZone-java.util.TimeZone-&quot;&gt;time zone&lt;/a&gt;, &lt;a href=&quot;calendar.builder#setWeekDefinition-int-int-&quot;&gt;week definition&lt;/a&gt;, and &lt;a href=&quot;calendar.builder#setLenient-boolean-&quot;&gt;leniency mode&lt;/a&gt; parameters can be set.</source>
          <target state="translated">日時パラメータに加えて、&lt;a href=&quot;calendar.builder#setLocale-java.util.Locale-&quot;&gt;ロケール&lt;/a&gt;、&lt;a href=&quot;calendar.builder#setTimeZone-java.util.TimeZone-&quot;&gt;タイムゾーン&lt;/a&gt;、&lt;a href=&quot;calendar.builder#setWeekDefinition-int-int-&quot;&gt;週の定義&lt;/a&gt;、および&lt;a href=&quot;calendar.builder#setLenient-boolean-&quot;&gt;制限モードの&lt;/a&gt;パラメータを設定できます。</target>
        </trans-unit>
        <trans-unit id="7614b1698980716dbcbacae739451584fa463381" translate="yes" xml:space="preserve">
          <source>In addition to the encoding, the audio format includes other properties that further specify the exact arrangement of the data. These include the number of channels, sample rate, sample size, byte order, frame rate, and frame size. Sounds may have different numbers of audio channels: one for mono, two for stereo. The sample rate measures how many &quot;snapshots&quot; (samples) of the sound pressure are taken per second, per channel. (If the sound is stereo rather than mono, two samples are actually measured at each instant of time: one for the left channel, and another for the right channel; however, the sample rate still measures the number per channel, so the rate is the same regardless of the number of channels. This is the standard use of the term.) The sample size indicates how many bits are used to store each snapshot; 8 and 16 are typical values. For 16-bit samples (or any other sample size larger than a byte), byte order is important; the bytes in each sample are arranged in either the &quot;little-endian&quot; or &quot;big-endian&quot; style. For encodings like PCM, a frame consists of the set of samples for all channels at a given point in time, and so the size of a frame (in bytes) is always equal to the size of a sample (in bytes) times the number of channels. However, with some other sorts of encodings a frame can contain a bundle of compressed data for a whole series of samples, as well as additional, non-sample data. For such encodings, the sample rate and sample size refer to the data after it is decoded into PCM, and so they are completely different from the frame rate and frame size.</source>
          <target state="translated">エンコーディングに加えて、オーディオフォーマットには、データの正確な配置をさらに特定する他のプロパティが含まれています。これらには、チャンネル数、サンプルレート、サンプルサイズ、バイトオーダー、フレームレート、フレームサイズが含まれます。サウンドは、モノラルには1つ、ステレオには2つの異なるチャンネル数を持つことができます。サンプルレートは、音圧の「スナップショット」(サンプル)の数を測定します。モノラルではなくステレオの場合、実際には各瞬間に 2 つのサンプルが測定されます:1 つは左チャンネル、もう 1 つは右チャンネルですが、サンプルレートはチャンネルごとの数を測定します。これがこの用語の標準的な使用法です)。サンプルサイズは、各スナップショットを保存するのに使用するビット数を示します。16 ビットサンプル(または 1 バイトよりも大きなサンプルサイズ)では、バイトの順序が重要です。PCM のようなエンコーディングでは、フレームは、ある時点でのすべてのチャンネルのサンプルの集合で構成されているため、フレームのサイズ(バイト数)は、常にサンプルのサイズ(バイト数)にチャンネル数をかけたものになります。しかし、他の種類のエンコーディングでは、フレームには一連のサンプル全体の圧縮データの束と、追加の非サンプルデータが含まれている場合があります。このようなエンコーディングでは、サンプルレートとサンプルサイズは、PCMにデコードされた後のデータを指すため、フレームレートとフレームサイズとは全く異なります。</target>
        </trans-unit>
        <trans-unit id="d6a83c2e73788cf89b876bfa744823e9380a8ac0" translate="yes" xml:space="preserve">
          <source>In addition to the familiar read, write, and close operations of byte channels, this class defines the following file-specific operations:</source>
          <target state="translated">このクラスは、バイトチャネルのおなじみの読み込み、書き込み、クローズ操作に加えて、以下のファイル固有の操作を定義しています。</target>
        </trans-unit>
        <trans-unit id="4f1190da5af20b63b0a7ea53b9dcbc33953d6769" translate="yes" xml:space="preserve">
          <source>In addition to the format, formatters can be created with desired Locale, Chronology, ZoneId, and DecimalStyle.</source>
          <target state="translated">フォーマットに加えて、Locale、Chronology、ZoneId、DecimalStyleを指定してフォーマッタを作成することができます。</target>
        </trans-unit>
        <trans-unit id="1e059e38a779b1f301213b52de153cb2600a26b3" translate="yes" xml:space="preserve">
          <source>In addition to the method area, a Java virtual machine implementation may require memory for internal processing or optimization which also belongs to non-heap memory. For example, the JIT compiler requires memory for storing the native machine code translated from the Java virtual machine code for high performance.</source>
          <target state="translated">Java仮想マシンの実装では、メソッド領域以外にも非ヒープメモリに属する内部処理や最適化のためのメモリを必要とする場合があります。例えば、JITコンパイラは、Java仮想マシンコードから翻訳されたネイティブマシンコードを高性能化するために格納するためのメモリを必要とする。</target>
        </trans-unit>
        <trans-unit id="ee283b61b3d9459d225d145542e24d6b57b4d6d2" translate="yes" xml:space="preserve">
          <source>In addition to the methods defined by this class, a file store may support one or more &lt;a href=&quot;attribute/filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; classes that provide a read-only or updatable view of a set of file store attributes.</source>
          <target state="translated">このクラスで定義されたメソッドに加えて、ファイルストアは、ファイルストア属性のセットの読み取り専用または更新可能なビューを提供する1つ以上の&lt;a href=&quot;attribute/filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; &lt;/a&gt;クラスをサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="6b02ab5a714cd80e6567da7665467edf7fd5e8ed" translate="yes" xml:space="preserve">
          <source>In addition to the network-oriented channels described in &lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt;&lt;code&gt;inheritedChannel&lt;/code&gt;&lt;/a&gt;, this method may return other kinds of channels in the future.</source>
          <target state="translated">&lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt; &lt;code&gt;inheritedChannel&lt;/code&gt; &lt;/a&gt;で説明されているネットワーク指向のチャネルに加えて、このメソッドは将来、他の種類のチャネルを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="a33bc2b0c620d7bc4fb0799e179286bb4b725634" translate="yes" xml:space="preserve">
          <source>In addition to the network-oriented channels described, this method may return other kinds of channels in the future.</source>
          <target state="translated">このメソッドは、説明したネットワーク指向のチャンネルに加えて、将来的には他の種類のチャンネルを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="6ed6b95a08d3c44af62e52f25de87e487d831331" translate="yes" xml:space="preserve">
          <source>In addition to the parameters described here, other GCM inputs/output (Additional Authenticated Data (AAD), Keys, block ciphers, plain/ciphertext and authentication tags) are handled in the &lt;code&gt;Cipher&lt;/code&gt; class.</source>
          <target state="translated">ここで説明するパラメーターに加えて、他のGCM入出力（追加の認証データ（AAD）、鍵、ブロック暗号、プレーン/暗号テキスト、認証タグ）は &lt;code&gt;Cipher&lt;/code&gt; クラスで処理されます。</target>
        </trans-unit>
        <trans-unit id="df0afba264acde97691ac7208acbd4a41b35b800" translate="yes" xml:space="preserve">
          <source>In addition to the predefined implementations in &lt;a href=&quot;collectors&quot;&gt;&lt;code&gt;Collectors&lt;/code&gt;&lt;/a&gt;, the static factory methods &lt;a href=&quot;collector#of-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BinaryOperator-java.util.stream.Collector.Characteristics...-&quot;&gt;&lt;code&gt;of(Supplier, BiConsumer, BinaryOperator, Characteristics...)&lt;/code&gt;&lt;/a&gt; can be used to construct collectors. For example, you could create a collector that accumulates widgets into a &lt;code&gt;TreeSet&lt;/code&gt; with:</source>
          <target state="translated">&lt;a href=&quot;collectors&quot;&gt; &lt;code&gt;Collectors&lt;/code&gt; &lt;/a&gt;の事前定義された実装に加えて、静的ファクトリーメソッド&lt;a href=&quot;collector#of-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BinaryOperator-java.util.stream.Collector.Characteristics...-&quot;&gt; &lt;code&gt;of(Supplier, BiConsumer, BinaryOperator, Characteristics...)&lt;/code&gt; &lt;/a&gt;を使用してコレクターを構築できます。たとえば、ウィジェットを &lt;code&gt;TreeSet&lt;/code&gt; に蓄積するコレクターを次のように作成できます。</target>
        </trans-unit>
        <trans-unit id="adf89d4fe796fb988f7407950dd9eefb826761d9" translate="yes" xml:space="preserve">
          <source>In addition to the properties of the super class, the &lt;code&gt;Expression&lt;/code&gt; object provides a &lt;em&gt;value&lt;/em&gt; which is the object returned when this expression is evaluated. The return value is typically not provided by the caller and is instead computed by dynamically finding the method and invoking it when the first call to &lt;code&gt;getValue&lt;/code&gt; is made.</source>
          <target state="translated">スーパークラスのプロパティに加えて、 &lt;code&gt;Expression&lt;/code&gt; オブジェクトは、この式が評価されたときに返されるオブジェクトである&lt;em&gt;値&lt;/em&gt;を提供し&lt;em&gt;ます&lt;/em&gt;。通常、戻り値は呼び出し元から提供されるのではなく、メソッドを動的に検索して &lt;code&gt;getValue&lt;/code&gt; への最初の呼び出しが行われたときにそれを呼び出すことによって計算されます。</target>
        </trans-unit>
        <trans-unit id="d2394c9520c75ba71dccb27ec850e0d98f0290f5" translate="yes" xml:space="preserve">
          <source>In addition to the restrictions on characters spelt out above, no part of an ObjectName may contain a newline character (&lt;code&gt;'\n'&lt;/code&gt;), whether the domain, a key, or a value, whether quoted or unquoted. The newline character can be represented in a quoted value with the sequence &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="translated">上記の文字の制限に加えて、ObjectNameのどの部分にも、ドメイン、キー、または値（引用符付きまたは引用符なし）にかかわらず、改行文字（ &lt;code&gt;'\n'&lt;/code&gt; ）を含めることはできません。改行文字は、シーケンス &lt;code&gt;\n&lt;/code&gt; 引用符付きの値で表すことができます。</target>
        </trans-unit>
        <trans-unit id="b2c1ff8172f1e7aba63f37e75d386a7d225ec94c" translate="yes" xml:space="preserve">
          <source>In addition to the standard session attributes, SSL sessions expose these read-only attributes:</source>
          <target state="translated">標準のセッション属性に加えて、SSLセッションはこれらの読み取り専用属性を公開しています。</target>
        </trans-unit>
        <trans-unit id="83938c315c82af2806ebd155f43016814eda7fb4" translate="yes" xml:space="preserve">
          <source>In addition to the textual enum name, each day-of-week has an &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). It is recommended that applications use the enum rather than the &lt;code&gt;int&lt;/code&gt; value to ensure code clarity.</source>
          <target state="translated">テキストの列挙名に加えて、各曜日には &lt;code&gt;int&lt;/code&gt; 値があります。 &lt;code&gt;int&lt;/code&gt; 型の値は、7日（日）に1からISO-8601標準、（月曜日）に従います。コードを明確にするために、アプリケーションでは &lt;code&gt;int&lt;/code&gt; 値ではなくenumを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2d4d3851f8f7049f215ed834737db941515f6412" translate="yes" xml:space="preserve">
          <source>In addition to the textual enum name, each month-of-year has an &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows normal usage and the ISO-8601 standard, from 1 (January) to 12 (December). It is recommended that applications use the enum rather than the &lt;code&gt;int&lt;/code&gt; value to ensure code clarity.</source>
          <target state="translated">列挙型のテキスト名に加えて、各月には &lt;code&gt;int&lt;/code&gt; 値があります。 &lt;code&gt;int&lt;/code&gt; 値は1（1月）から12（12月）への通常の使用およびISO-8601標準に従います。コードを明確にするために、アプリケーションでは &lt;code&gt;int&lt;/code&gt; 値ではなくenumを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dbbe182566bca48d0fbeb7cd780b3e1c5f49a252" translate="yes" xml:space="preserve">
          <source>In addition to the usage restrictions imposed by its &lt;a href=&quot;annotation/target&quot;&gt;&lt;code&gt;@Target&lt;/code&gt;&lt;/a&gt; meta-annotation, compilers are required to implement additional usage restrictions on this annotation type; it is a compile-time error if a method or constructor declaration is annotated with a &lt;code&gt;@SafeVarargs&lt;/code&gt; annotation, and either:</source>
          <target state="translated">&lt;a href=&quot;annotation/target&quot;&gt; &lt;code&gt;@Target&lt;/code&gt; &lt;/a&gt;メタアノテーションによって課される使用制限に加えて、コンパイラーはこのアノテーションタイプに追加の使用制限を実装する必要があります。メソッドまたはコンストラクタの宣言に &lt;code&gt;@SafeVarargs&lt;/code&gt; アノテーションが付けられている場合、および次のいずれかの場合は、コンパイル時エラーになります。</target>
        </trans-unit>
        <trans-unit id="48906b2213eda76c1ef9cb3120b0f8752c37d2ea" translate="yes" xml:space="preserve">
          <source>In addition to these and related methods for directly manipulating status and results, CompletableFuture implements interface &lt;a href=&quot;completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt; with the following policies:</source>
          <target state="translated">ステータスと結果を直接操作するためのこれらのメソッドと関連するメソッドに加えて、CompletableFuture は、次のポリシーでインターフェイス&lt;a href=&quot;completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt;を実装します。</target>
        </trans-unit>
        <trans-unit id="53919e02325aec34ba4ab39d138ab42852e587c0" translate="yes" xml:space="preserve">
          <source>In addition to using a delegation model, this persistence scheme differs from traditional serialization schemes in requiring an analog of the &lt;code&gt;writeObject&lt;/code&gt; method without a corresponding &lt;code&gt;readObject&lt;/code&gt; method. The &lt;code&gt;writeObject&lt;/code&gt; analog encodes each instance in terms of its public API and there is no need to define a &lt;code&gt;readObject&lt;/code&gt; analog since the procedure for reading the serialized form is defined by the semantics of method invocation as laid out in the Java Language Specification. Breaking the dependency between &lt;code&gt;writeObject&lt;/code&gt; and &lt;code&gt;readObject&lt;/code&gt; implementations, which may change from version to version, is the key factor in making the archives produced by this technique immune to changes in the private implementations of the classes to which they refer.</source>
          <target state="translated">委任モデルを使用することに加えて、この永続化スキームは、対応する &lt;code&gt;readObject&lt;/code&gt; メソッドなしで &lt;code&gt;writeObject&lt;/code&gt; メソッドの類似物を必要とする点で、従来のシリアル化スキームとは異なります。 &lt;code&gt;writeObject&lt;/code&gt; その公開APIの点でアナログエンコード各インスタンスと定義する必要がない &lt;code&gt;readObject&lt;/code&gt; Java言語仕様にレイアウトとして直列化された形式を読み取るための手順は、メソッド呼び出しのセマンティクスによって定義されているのでアナログ。 &lt;code&gt;writeObject&lt;/code&gt; と &lt;code&gt;readObject&lt;/code&gt; 間の依存関係を解消するバージョンごとに変更される可能性のある実装は、この手法によって生成されるアーカイブを、それらが参照するクラスのプライベート実装の変更の影響を受けないようにするための重要な要素です。</target>
        </trans-unit>
        <trans-unit id="f1f23c6ebcae32c016f175cd630762e9b2b7d49f" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;Runnable&lt;/code&gt; provides the means for a class to be active while not subclassing &lt;code&gt;Thread&lt;/code&gt;. A class that implements &lt;code&gt;Runnable&lt;/code&gt; can run without subclassing &lt;code&gt;Thread&lt;/code&gt; by instantiating a &lt;code&gt;Thread&lt;/code&gt; instance and passing itself in as the target. In most cases, the &lt;code&gt;Runnable&lt;/code&gt; interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other &lt;code&gt;Thread&lt;/code&gt; methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">さらに、 &lt;code&gt;Runnable&lt;/code&gt; は、 &lt;code&gt;Thread&lt;/code&gt; をサブクラス化しないときにクラスをアクティブにする手段を提供します。実装するクラス &lt;code&gt;Runnable&lt;/code&gt; サブクラス化せずに実行できる &lt;code&gt;Thread&lt;/code&gt; インスタンス化することによって &lt;code&gt;Thread&lt;/code&gt; インスタンスを、ターゲットなどで自分自身を渡します。ほとんどの場合、 &lt;code&gt;run()&lt;/code&gt; メソッドのみをオーバーライドし、他の &lt;code&gt;Thread&lt;/code&gt; メソッドはオーバーライドしない場合は、 &lt;code&gt;Runnable&lt;/code&gt; インターフェースを使用する必要があります。プログラマーがクラスの基本的な動作を変更または拡張するつもりでない限り、クラスをサブクラス化してはならないため、これは重要です。</target>
        </trans-unit>
        <trans-unit id="d0ffa912abbac66bc23c7cc4eb525a47987acde5" translate="yes" xml:space="preserve">
          <source>In addition, BCP 47 imposes syntax restrictions that are not imposed by Locale's constructors. This means that conversions between some Locales and BCP 47 language tags cannot be made without losing information. Thus &lt;code&gt;toLanguageTag&lt;/code&gt; cannot represent the state of locales whose language, country, or variant do not conform to BCP 47.</source>
          <target state="translated">さらに、BCP 47は、ロケールのコンストラクターによって課されない構文制限を課します。つまり、一部のロケールとBCP 47言語タグ間の変換は、情報を失うことなく行うことができません。したがって、 &lt;code&gt;toLanguageTag&lt;/code&gt; は、言語、国、またはバリアントがBCP 47に準拠していないロケールの状態を表すことはできません。</target>
        </trans-unit>
        <trans-unit id="0fe92cfe39db7917857638c730c6e8a9d72af5f4" translate="yes" xml:space="preserve">
          <source>In addition, an application must specify constraints on the target certificate that the &lt;code&gt;CertPathBuilder&lt;/code&gt; will attempt to build a path to. The constraints are specified as a &lt;code&gt;CertSelector&lt;/code&gt; object. These constraints should provide the &lt;code&gt;CertPathBuilder&lt;/code&gt; with enough search criteria to find the target certificate. Minimal criteria for an &lt;code&gt;X509Certificate&lt;/code&gt; usually include the subject name and/or one or more subject alternative names. If enough criteria is not specified, the &lt;code&gt;CertPathBuilder&lt;/code&gt; may throw a &lt;code&gt;CertPathBuilderException&lt;/code&gt;.</source>
          <target state="translated">さらに、アプリケーションは、 &lt;code&gt;CertPathBuilder&lt;/code&gt; がパスを構築しようとするターゲット証明書に制約を指定する必要があります。制約は &lt;code&gt;CertSelector&lt;/code&gt; オブジェクトとして指定されます。これらの制約により、 &lt;code&gt;CertPathBuilder&lt;/code&gt; はターゲット証明書を見つけるのに十分な検索基準を提供するはずです。 &lt;code&gt;X509Certificate&lt;/code&gt; の最低限の基準には、通常、サブジェクト名や1つ以上のサブジェクト代替名が含まれます。十分な基準が指定されていない場合、 &lt;code&gt;CertPathBuilder&lt;/code&gt; はCertPathBuilderExceptionをスローする場合があり &lt;code&gt;CertPathBuilderException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9e610984b972d7e5beb58e119cffbd2ab22c70f" translate="yes" xml:space="preserve">
          <source>In addition, an instance has four flags. These flags indicate:</source>
          <target state="translated">さらに、インスタンスには 4 つのフラグがあります。これらのフラグは次のことを示します。</target>
        </trans-unit>
        <trans-unit id="870e411531c039af2dbdb3bb6e5d628c5975e9bb" translate="yes" xml:space="preserve">
          <source>In addition, an offset mechanism enables particular counting intervals to be detected. If the offset value is not zero, whenever the threshold is triggered by the counter value reaching a comparison level, that comparison level is incremented by the offset value. This is regarded as taking place instantaneously, that is, before the count is incremented. Thus, for each level, the threshold triggers an event notification every time the count increases by an interval equal to the offset value.</source>
          <target state="translated">さらに、オフセット機構は、特定のカウント間隔を検出することを可能にする。オフセット値がゼロでない場合、カウンタ値が比較レベルに達することで閾値がトリガーされるたびに、その比較レベルはオフセット値によってインクリメントされます。これは、瞬間的に、すなわち、カウントがインクリメントされる前に行われるものとみなされる。このように、各レベルについて、しきい値は、カウントがオフセット値に等しい間隔で増加するたびにイベント通知をトリガします。</target>
        </trans-unit>
        <trans-unit id="53b8d630d402819b1f760ea377f44b6a16712937" translate="yes" xml:space="preserve">
          <source>In addition, any of the elements may be decorated by padding, either with spaces or any other character.</source>
          <target state="translated">また、いずれかの要素は、スペースまたは他の任意の文字を用いて、パディングによって装飾されていてもよい。</target>
        </trans-unit>
        <trans-unit id="fe6d4ce281cc41c2d663795cad62610decb0511e" translate="yes" xml:space="preserve">
          <source>In addition, if a &lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;finishings#STAPLE&quot;&gt;&lt;code&gt;STAPLE&lt;/code&gt;&lt;/a&gt; is specified, then:</source>
          <target state="translated">さらに、&lt;a href=&quot;finishings#STAPLE&quot;&gt; &lt;code&gt;STAPLE&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;属性が指定されている場合は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="3719d936e29998d0689eb9e0adf828047d1a0f6c" translate="yes" xml:space="preserve">
          <source>In addition, its &lt;code&gt;checkPermission&lt;/code&gt; method is invoked with the &lt;code&gt;RuntimePermission(&quot;enableContextClassLoaderOverride&quot;)&lt;/code&gt; permission when invoked directly or indirectly by the constructor of a subclass which overrides the &lt;code&gt;getContextClassLoader&lt;/code&gt; or &lt;code&gt;setContextClassLoader&lt;/code&gt; methods.</source>
          <target state="translated">また、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;getContextClassLoader&lt;/code&gt; メソッドまたは &lt;code&gt;setContextClassLoader&lt;/code&gt; メソッドをオーバーライドするサブクラスのコンストラクターによって直接または間接的に呼び出されると、 &lt;code&gt;RuntimePermission(&quot;enableContextClassLoaderOverride&quot;)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="eb227b57999fd7e909da8da1d2a7fde11cad3089" translate="yes" xml:space="preserve">
          <source>In addition, some subclasses may also implement other &lt;code&gt;getXxxxInstance&lt;/code&gt; methods for more specialized control. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class provides &lt;code&gt;getPercentInstance&lt;/code&gt; and &lt;code&gt;getCurrencyInstance&lt;/code&gt; methods for getting specialized number formatters.</source>
          <target state="translated">さらに、一部のサブクラスは、より特殊な制御のために他の &lt;code&gt;getXxxxInstance&lt;/code&gt; メソッドを実装する場合もあります。たとえば、 &lt;code&gt;NumberFormat&lt;/code&gt; クラスは、特殊な数値フォーマッターを取得するための &lt;code&gt;getPercentInstance&lt;/code&gt; メソッドと &lt;code&gt;getCurrencyInstance&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="8521432ca817c76647f2d846f1bef6c88792da85" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; contains at least attributes indicating where text was generated from an argument in the &lt;code&gt;arguments&lt;/code&gt; array. The keys of these attributes are of type &lt;code&gt;MessageFormat.Field&lt;/code&gt;, their values are &lt;code&gt;Integer&lt;/code&gt; objects indicating the index in the &lt;code&gt;arguments&lt;/code&gt; array of the argument from which the text was generated.</source>
          <target state="translated">さらに、 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; には、少なくとも、 &lt;code&gt;arguments&lt;/code&gt; 配列の引数からテキストが生成された場所を示す属性が含まれています。これらの属性のキーは &lt;code&gt;MessageFormat.Field&lt;/code&gt; 型であり、それらの値はテキストが生成された &lt;code&gt;arguments&lt;/code&gt; 配列のインデックスを示す &lt;code&gt;Integer&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a6e2e314534ac045cf69b2d41f6340feecc19940" translate="yes" xml:space="preserve">
          <source>In addition, the PrincipalClass/PrincipalName pairing may be repeated:</source>
          <target state="translated">また、PrincipalClass/PrincipalName のペアリングを繰り返すこともできます。</target>
        </trans-unit>
        <trans-unit id="cf2386bcd0be6584acdb144b841b15f4c960e9dd" translate="yes" xml:space="preserve">
          <source>In addition, the following operations are supported, either directly, or indirectly through objects that the &lt;code&gt;Sequencer&lt;/code&gt; has access to:</source>
          <target state="translated">さらに、次の操作は、 &lt;code&gt;Sequencer&lt;/code&gt; がアクセスできるオブジェクトを介して、直接的または間接的にサポートされています。</target>
        </trans-unit>
        <trans-unit id="c0f1f85aac1e1e7e02b8f9ea172b9f1824281377" translate="yes" xml:space="preserve">
          <source>In addition, this class provides many methods for converting a &lt;code&gt;boolean&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;boolean&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">加えて、このクラスは、変換のための多くの方法を提供する &lt;code&gt;boolean&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; を &lt;code&gt;boolean&lt;/code&gt; を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ffeb51b3224523ef436b1d1938bf920a43bfc60" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting a &lt;code&gt;byte&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;byte&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;byte&lt;/code&gt; の &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;byte&lt;/code&gt; を扱う場合に有用な、ならびに他の定数とメソッドを &lt;code&gt;byte&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e85c3617c388e7fe3a9752600be2c78c296128c0" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting a &lt;code&gt;double&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;double&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;double&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;double&lt;/code&gt; を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;double&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68a2ece26a8ec24ff52bdb5b8ffee400c05c5514" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting a &lt;code&gt;float&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;float&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;float&lt;/code&gt; を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3209e7895f5274dda2c59c01800db0e7f1a6cb9" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting a &lt;code&gt;long&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;long&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;long&lt;/code&gt; を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bceab1896f5431f9616536d2c3debec95c7baf0d" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting a &lt;code&gt;short&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to a &lt;code&gt;short&lt;/code&gt;, as well as other constants and methods useful when dealing with a &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;short&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; や &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;short&lt;/code&gt; を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77411ccbd611f6cf25185bc001e7ca50aa01649a" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for converting an &lt;code&gt;int&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; and a &lt;code&gt;String&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;, as well as other constants and methods useful when dealing with an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">また、このクラスには、変換するためのいくつかの方法を提供 &lt;code&gt;int&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; や &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;int&lt;/code&gt; 値を扱う場合に有用な、ならびに他の定数および方法を &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68c06dbee76a5636d9963ea08f8ff95d58d1e068" translate="yes" xml:space="preserve">
          <source>In addition, this class provides several methods for determining a character's category (lowercase letter, digit, etc.) and for converting characters from uppercase to lowercase and vice versa.</source>
          <target state="translated">さらに、このクラスは、文字のカテゴリ(小文字、数字など)を決定するためのいくつかのメソッドと、文字を大文字から小文字に変換するためのメソッド、およびその逆のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="e292b452247845d9e091ce216510934fc5ca8378" translate="yes" xml:space="preserve">
          <source>In addition, unlike &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;add()&lt;/code&gt; forces an immediate recomputation of the calendar's milliseconds and all fields.</source>
          <target state="translated">さらに、 &lt;code&gt;set()&lt;/code&gt; とは異なり、 &lt;code&gt;add()&lt;/code&gt; はカレンダーのミリ秒とすべてのフィールドの即時再計算を強制します。</target>
        </trans-unit>
        <trans-unit id="a9dfe816f9d7068cb163a587c8942b7b0c372c47" translate="yes" xml:space="preserve">
          <source>In all cases, &lt;code&gt;pos&lt;/code&gt; must be greater than or equal to zero, and &lt;code&gt;pos&lt;/code&gt; must also be less than or equal to the target's arity.</source>
          <target state="translated">全ての場合において、 &lt;code&gt;pos&lt;/code&gt; 0以上でなければならず、 &lt;code&gt;pos&lt;/code&gt; また未満であるか、ターゲットのアリティに等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="09e47909f30bd0dae2adcaf9dec3e17da3c754a0" translate="yes" xml:space="preserve">
          <source>In all cases, arguments given to methods for these purposes need not fall within the indicated ranges; for example, a date may be specified as January 32 and is interpreted as meaning February 1.</source>
          <target state="translated">すべての場合において、これらの目的のためにメソッドに与えられる引数は、示された範囲内に収まる必要はありません;例えば、日付は1月32日と指定され、2月1日を意味すると解釈されます。</target>
        </trans-unit>
        <trans-unit id="710a1058addac3a4778571f2e89fe86199a733c7" translate="yes" xml:space="preserve">
          <source>In all cases, before this method can return the current thread must re-acquire the lock associated with this condition. When the thread returns it is &lt;em&gt;guaranteed&lt;/em&gt; to hold this lock.</source>
          <target state="translated">すべての場合において、このメソッドが戻る前に、現在のスレッドはこの条件に関連付けられているロックを再取得する必要があります。スレッドが戻ると、このロックを保持することが&lt;em&gt;保証さ&lt;/em&gt;れます。</target>
        </trans-unit>
        <trans-unit id="89452fe59efb654a902cd41128a35da921fe424a" translate="yes" xml:space="preserve">
          <source>In all cases, if the new value is outside the valid range of values for the field then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">すべての場合において、新しい値がフィールドの有効な値の範囲外である場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="81081b4ee2ad6edc756e2675593e859604468b70" translate="yes" xml:space="preserve">
          <source>In all cases, it is legal to return a more capable metadata object than strictly necessary. The format name and node names are merely hints that may be used to reduce the reader's workload.</source>
          <target state="translated">いずれの場合も、厳密には必要以上に有能なメタデータオブジェクトを返すことは合法である。フォーマット名やノード名は、読者の作業負荷を軽減するためのヒントにすぎません。</target>
        </trans-unit>
        <trans-unit id="3e386c1014f9389cd75e4097f8ba05b0eb55648f" translate="yes" xml:space="preserve">
          <source>In all cases, the result is a &lt;code&gt;long&lt;/code&gt; integer that, when given to the &lt;a href=&quot;double#longBitsToDouble-long-&quot;&gt;&lt;code&gt;longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; method, will produce a floating-point value the same as the argument to &lt;code&gt;doubleToLongBits&lt;/code&gt; (except all NaN values are collapsed to a single &quot;canonical&quot; NaN value).</source>
          <target state="translated">すべての場合において、結果は &lt;code&gt;long&lt;/code&gt; 整数であり、&lt;a href=&quot;double#longBitsToDouble-long-&quot;&gt; &lt;code&gt;longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt;メソッドに渡されると、doubleToLongBitsへの引数と同じ浮動小数点値が生成され &lt;code&gt;doubleToLongBits&lt;/code&gt; （すべてのNaN値が単一の「正規の」NaNに縮小される場合を除く）値）。</target>
        </trans-unit>
        <trans-unit id="94e816d46d03eaaedcfd4333b2b790c79aab00a5" translate="yes" xml:space="preserve">
          <source>In all cases, the result is a &lt;code&gt;long&lt;/code&gt; integer that, when given to the &lt;a href=&quot;double#longBitsToDouble-long-&quot;&gt;&lt;code&gt;longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; method, will produce a floating-point value the same as the argument to &lt;code&gt;doubleToRawLongBits&lt;/code&gt;.</source>
          <target state="translated">すべての場合において、結果は &lt;code&gt;long&lt;/code&gt; 整数であり、&lt;a href=&quot;double#longBitsToDouble-long-&quot;&gt; &lt;code&gt;longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt;メソッドに渡されると、doubleToRawLongBitsへの引数と同じ浮動小数点値を &lt;code&gt;doubleToRawLongBits&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8fa2f7b6b965b0569cfce25d70b8a9ac24c40131" translate="yes" xml:space="preserve">
          <source>In all cases, the result is an integer that, when given to the &lt;a href=&quot;float#intBitsToFloat-int-&quot;&gt;&lt;code&gt;intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; method, will produce a floating-point value the same as the argument to &lt;code&gt;floatToIntBits&lt;/code&gt; (except all NaN values are collapsed to a single &quot;canonical&quot; NaN value).</source>
          <target state="translated">すべての場合において、結果は整数であり、&lt;a href=&quot;float#intBitsToFloat-int-&quot;&gt; &lt;code&gt;intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt;メソッドに &lt;code&gt;floatToIntBits&lt;/code&gt; れると、floatToIntBitsへの引数と同じ浮動小数点値を生成します（すべてのNaN値が単一の「正規の」NaN値に縮小される場合を除く） ）。</target>
        </trans-unit>
        <trans-unit id="f8ae1992023cdf3fa87efe9d9a4061db37810e06" translate="yes" xml:space="preserve">
          <source>In all cases, the result is an integer that, when given to the &lt;a href=&quot;float#intBitsToFloat-int-&quot;&gt;&lt;code&gt;intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; method, will produce a floating-point value the same as the argument to &lt;code&gt;floatToRawIntBits&lt;/code&gt;.</source>
          <target state="translated">すべての場合において、結果は整数であり、&lt;a href=&quot;float#intBitsToFloat-int-&quot;&gt; &lt;code&gt;intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt;メソッドに &lt;code&gt;floatToRawIntBits&lt;/code&gt; れると、floatToRawIntBitsへの引数と同じ浮動小数点値を生成します。</target>
        </trans-unit>
        <trans-unit id="d859740a340aab2ef2df184897feb73868229deb" translate="yes" xml:space="preserve">
          <source>In all cases, what the target eventually returns is returned unchanged by the adapter.</source>
          <target state="translated">いずれの場合も、ターゲットが最終的に返すものはアダプタによって変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="3f9e867ee25c16d7f93432110c660aa7dfa2f352" translate="yes" xml:space="preserve">
          <source>In all methods of class &lt;code&gt;Date&lt;/code&gt; that accept or return year, month, date, hours, minutes, and seconds values, the following representations are used:</source>
          <target state="translated">年、月、日付、時間、分、秒の値を受け入れるまたは返すクラス &lt;code&gt;Date&lt;/code&gt; のすべてのメソッドでは、次の表現が使用されます。</target>
        </trans-unit>
        <trans-unit id="13fb9ca977fc45a075a964a2af1e52f78784083b" translate="yes" xml:space="preserve">
          <source>In all other cases the default persistence delegate is returned. The default persistence delegate assumes the type is a &lt;em&gt;JavaBean&lt;/em&gt;, implying that it has a default constructor and that its state may be characterized by the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods returned by the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; class. The default constructor is the constructor with the greatest number of parameters that has the &lt;a href=&quot;constructorproperties&quot;&gt;&lt;code&gt;ConstructorProperties&lt;/code&gt;&lt;/a&gt; annotation. If none of the constructors has the &lt;code&gt;ConstructorProperties&lt;/code&gt; annotation, then the nullary constructor (constructor with no parameters) will be used. For example, in the following code fragment, the nullary constructor for the &lt;code&gt;Foo&lt;/code&gt; class will be used, while the two-parameter constructor for the &lt;code&gt;Bar&lt;/code&gt; class will be used.</source>
          <target state="translated">その他の場合はすべて、デフォルトの永続デリゲートが返されます。デフォルトの永続デリゲートは、型が&lt;em&gt;JavaBean&lt;/em&gt;であると想定し、デフォルトのコンストラクターがあり、その状態は、&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt;クラスによって返される「setter」および「getter」メソッドの一致するペアによって特徴付けられることを意味します。デフォルトのコンストラクターは、&lt;a href=&quot;constructorproperties&quot;&gt; &lt;code&gt;ConstructorProperties&lt;/code&gt; &lt;/a&gt;アノテーションを持つパラメーターの数が最も多いコンストラクターです。どのコンストラクタにも &lt;code&gt;ConstructorProperties&lt;/code&gt; アノテーションがない場合は、nullaryコンストラクタ（パラメータのないコンストラクタ）が使用されます。たとえば、次のコードでは、 &lt;code&gt;Foo&lt;/code&gt; の nullコンストラクタークラスが使用され、 &lt;code&gt;Bar&lt;/code&gt; クラスの2つのパラメーターのコンストラクターが使用されます。</target>
        </trans-unit>
        <trans-unit id="4f080e0ee2b15b4c102aa7079a0aa7b6d0e55888" translate="yes" xml:space="preserve">
          <source>In all other cases, let</source>
          <target state="translated">それ以外の場合は</target>
        </trans-unit>
        <trans-unit id="a11fe3cb468743e49daade63ee6734a831ca51f6" translate="yes" xml:space="preserve">
          <source>In all other respects, this method does the same thing as the method &lt;a href=&quot;object#wait-long-&quot;&gt;&lt;code&gt;wait(long)&lt;/code&gt;&lt;/a&gt; of one argument. In particular, &lt;code&gt;wait(0, 0)&lt;/code&gt; means the same thing as &lt;code&gt;wait(0)&lt;/code&gt;.</source>
          <target state="translated">他のすべての点で、このメソッドは1つの引数のメソッド&lt;a href=&quot;object#wait-long-&quot;&gt; &lt;code&gt;wait(long)&lt;/code&gt; &lt;/a&gt;と同じことを行います。特に、 &lt;code&gt;wait(0, 0)&lt;/code&gt; は &lt;code&gt;wait(0)&lt;/code&gt; と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="effcf63c91f615a32cf1d9dcd223b04f78c7e609" translate="yes" xml:space="preserve">
          <source>In an application which requires dynamic call sites with individually mutable behaviors, their bootstrap methods should produce distinct &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; objects, one for each linkage request. Alternatively, an application can link a single &lt;code&gt;CallSite&lt;/code&gt; object to several &lt;code&gt;invokedynamic&lt;/code&gt; instructions, in which case a change to the target method will become visible at each of the instructions.</source>
          <target state="translated">個別に変更可能な動作を持つ動的な呼び出しサイトを必要とするアプリケーションでは、それらのブートストラップメソッドは、リンケージ要求ごとに1つずつ、別個の&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;オブジェクトを生成する必要があります。あるいは、アプリケーションは単一の &lt;code&gt;CallSite&lt;/code&gt; オブジェクトを複数の &lt;code&gt;invokedynamic&lt;/code&gt; 命令にリンクできます。その場合、ターゲットメソッドへの変更は各命令で可視になります。</target>
        </trans-unit>
        <trans-unit id="a6322785784db32ea230804c456ea63d59ad58e8" translate="yes" xml:space="preserve">
          <source>In an element representing a method named &quot;get&quot; taking one integer argument, the &quot;method&quot; attribute is replaced with an &quot;index&quot; attribute whose value the value of the first argument.</source>
          <target state="translated">整数の引数を一つ取る get という名前のメソッドを表す要素では、method 属性は第一引数の値を値とする index 属性に置き換えられる。</target>
        </trans-unit>
        <trans-unit id="c3d66182f526cc1c3711397e1bc8a88caa07d70f" translate="yes" xml:space="preserve">
          <source>In an element representing a method named &quot;set&quot; taking two arguments, the first of which is an integer, the &quot;method&quot; attribute is replaced with an &quot;index&quot; attribute whose value the value of the first argument.</source>
          <target state="translated">二つの引数を持つ set という名前のメソッドを表す要素において、最初の引数の値が整数である場合、&quot;method&quot; 属性は、最初の引数の値を値とする index 属性に置き換えられる。</target>
        </trans-unit>
        <trans-unit id="3defc8fdafc7a95d821ad6a2e72f02a3b02b057c" translate="yes" xml:space="preserve">
          <source>In an element representing a monadic method whose name starts with &quot;set&quot;, the &quot;method&quot; attribute is replaced with a &quot;property&quot; attribute whose value is given by removing the &quot;set&quot; prefix and decapitalizing the result.</source>
          <target state="translated">名前が &quot;set &quot;で始まるモナディックメソッドを表す要素では、&quot;method &quot;属性を &quot;property &quot;属性に置き換え、接頭辞 &quot;set &quot;を削除して結果をデシタライズすることで値を与えます。</target>
        </trans-unit>
        <trans-unit id="c9402abdb3bb2eff2c83147b78c26d50aa2578b7" translate="yes" xml:space="preserve">
          <source>In an element representing a nullary method whose name starts with &quot;get&quot;, the &quot;method&quot; attribute is replaced with a &quot;property&quot; attribute whose value is given by removing the &quot;get&quot; prefix and decapitalizing the result.</source>
          <target state="translated">名前が &quot;get &quot;で始まるnullaryなメソッドを表す要素では、&quot;method &quot;属性は &quot;property &quot;属性に置き換えられ、その値は &quot;get &quot;の接頭辞を削除して結果をデシタライズすることで与えられます。</target>
        </trans-unit>
        <trans-unit id="f680341ae630eeaec6f425095320e0e5baed727c" translate="yes" xml:space="preserve">
          <source>In another example, if a search() method was invoked with a specified size limit of 'n'. If the answer consists of more than 'n' results, search() would first return a NamingEnumeration. When the n'th result has been returned by invoking next() on the NamingEnumeration, a SizeLimitExceedException would then thrown when hasMore() is invoked.</source>
          <target state="translated">別の例では、指定されたサイズの制限が 'n' である search()メソッドが呼び出されたとします。答えが 'n' 以上の結果からなる場合、search()は最初に NamingEnumeration を返します。NamingEnumeration の next()を呼び出して n 番目の結果が返された場合、hasMore()が呼び出されたときに SizeLimitExceedException がスローされます。</target>
        </trans-unit>
        <trans-unit id="63473c669373298ff8b126a800c3c9be701d8f25" translate="yes" xml:space="preserve">
          <source>In any case, byte order marks occurring after the first element of an input sequence are not omitted since the same code is used to represent &lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;.</source>
          <target state="translated">いずれの場合も、同じコードが&lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;を表すために使用されるため、入力シーケンスの最初の要素の後に発生するバイトオーダーマークは省略されません。</target>
        </trans-unit>
        <trans-unit id="ec213efaa5103b31dfaf4a45519f35d0934bea15" translate="yes" xml:space="preserve">
          <source>In any case, if this method is to be reinvoked in the same decoding operation then care should be taken to preserve any bytes remaining in the input buffer so that they are available to the next invocation.</source>
          <target state="translated">いずれにしても、このメソッドが同じデコード処理で再起動される場合は、入力バッファに残っているバイトを保存して、次の呼び出しで利用できるように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="de7b4cedf7b1b3605cbb4d5e220c17ec91cfeb27" translate="yes" xml:space="preserve">
          <source>In any case, if this method is to be reinvoked in the same encoding operation then care should be taken to preserve any characters remaining in the input buffer so that they are available to the next invocation.</source>
          <target state="translated">いずれにしても、同じエンコーディング操作でこのメソッドを再起動する場合は、入力バッファに残っている文字を保存して、次の起動時に利用できるように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b7c25745d87214e8c648f8952d20a0f3e9a240b8" translate="yes" xml:space="preserve">
          <source>In any other part of the system, where a date must be manipulated in a calendar system other than ISO, the use case will generally specify the calendar system to use. For example, an application may need to calculate the next Islamic or Hebrew holiday which may require manipulating the date. This kind of use case can be handled as follows:</source>
          <target state="translated">システムの他の部分で、ISO以外のカレンダシステムで日付を操作しなければならない場合、一般的には使用するカレンダシステムが指定されます。例えば、あるアプリケーションは、次のイスラム教やヘブライ教の祝日を計算する必要があるかもしれませんが、これは日付を操作する必要があるかもしれません。このようなユースケースは、以下のように扱うことができます。</target>
        </trans-unit>
        <trans-unit id="6bfb37bc0f12d7bd938335d6fa2308caf29415db" translate="yes" xml:space="preserve">
          <source>In attribute subclassing, attributes are defined in a class hierarchy. In some directories, for example, the &quot;name&quot; attribute might be the superclass of all name-related attributes, including &quot;commonName&quot; and &quot;surName&quot;. Asking for the &quot;name&quot; attribute might return both the &quot;commonName&quot; and &quot;surName&quot; attributes.</source>
          <target state="translated">属性のサブクラス化では、属性はクラス階層で定義されます。例えば、いくつかのディレクトリでは、&quot;name&quot; 属性は、&quot;commonName&quot; と &quot;surName&quot; を含む全ての名前関連の属性のスーパークラスになっているかもしれません。name&quot; 属性を求めると、&quot;commonName&quot; と &quot;surName&quot; 属性の両方が返ってくるかもしれません。</target>
        </trans-unit>
        <trans-unit id="db07d9eddd1469a03a0d4523aef982ea0329c470" translate="yes" xml:space="preserve">
          <source>In both cases, if a complete &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; or &lt;code&gt;Instant&lt;/code&gt; is parsed, then the excess days are added to the date part. As a result, this query will return a zero period.</source>
          <target state="translated">どちらの場合も、完全な &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; または &lt;code&gt;Instant&lt;/code&gt; が解析されると、超過した日数が日付部分に追加されます。その結果、このクエリはゼロ期間を返します。</target>
        </trans-unit>
        <trans-unit id="2f636f886ea66f4a3a9afd96f753e53de19a4e47" translate="yes" xml:space="preserve">
          <source>In both string form and array form, each successive integer group gives a range of integers to be included in the set. The first integer in each group gives the lower bound of the range; the second integer in each group gives the upper bound of the range; if there is only one integer in the group, the upper bound is the same as the lower bound. If the upper bound is less than the lower bound, it denotes a null range (no values). If the upper bound is equal to the lower bound, it denotes a range consisting of a single value. If the upper bound is greater than the lower bound, it denotes a range consisting of more than one value. The ranges may appear in any order and are allowed to overlap. The union of all the ranges gives the set's contents. Once a SetOfIntegerSyntax instance is constructed, its value is immutable.</source>
          <target state="translated">文字列形式でも配列形式でも、各連続する整数群は、集合に含まれる整数の範囲を与えます。各グループの最初の整数が範囲の下限を与え、各グループの2番目の整数が範囲の上限を与えます。 グループ内に1つの整数しかない場合、上限は下限と同じです。上界が下界より小さい場合は、ヌル範囲(値がありません)を表します。上界が下界と等しい場合は、1つの値からなる範囲を表します。上限が下限より大きい場合は、複数の値からなる範囲を表します。範囲は任意の順序で出現し、重複しても構いません。すべての範囲の和がセットの内容を表します。SetOfIntegerSyntaxインスタンスが構築されると、その値は不変です。</target>
        </trans-unit>
        <trans-unit id="a484bdc7d644636e56b6e425fca8f967f78e3d13" translate="yes" xml:space="preserve">
          <source>In case of exceptional completion with a CompletionException, methods &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;completablefuture#get-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;get(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; throw an &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt; with the same cause as held in the corresponding CompletionException. To simplify usage in most contexts, this class also defines methods &lt;a href=&quot;completablefuture#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;completablefuture#getNow-T-&quot;&gt;&lt;code&gt;getNow(T)&lt;/code&gt;&lt;/a&gt; that instead throw the CompletionException directly in these cases.</source>
          <target state="translated">CompletionExceptionによる例外的な完了の場合、メソッド&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;completablefuture#get-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;get(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;は、対応するCompletionExceptionに保持されているのと同じ原因で&lt;a href=&quot;executionexception&quot;&gt; &lt;code&gt;ExecutionException&lt;/code&gt; &lt;/a&gt;をスローします。ほとんどのコンテキストでの使用を簡略化するために、このクラスは、代わりにこれらの場合にCompletionExceptionを直接スローするメソッド&lt;a href=&quot;completablefuture#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;completablefuture#getNow-T-&quot;&gt; &lt;code&gt;getNow(T)&lt;/code&gt; &lt;/a&gt;も定義します。</target>
        </trans-unit>
        <trans-unit id="6b30498fac7ace93c84b231cbf2811b4209e3742" translate="yes" xml:space="preserve">
          <source>In case the client does not explicitly initialize the AlgorithmParameterGenerator (via a call to an &lt;code&gt;engineInit&lt;/code&gt; method), each provider must supply (and document) a default initialization. For example, the Sun provider uses a default modulus prime size of 1024 bits for the generation of DSA parameters.</source>
          <target state="translated">クライアントが（ &lt;code&gt;engineInit&lt;/code&gt; メソッドの呼び出しを介して）AlgorithmParameterGeneratorを明示的に初期化しない場合、各プロバイダーはデフォルトの初期化を提供（および文書化）する必要があります。たとえば、Sunプロバイダーは、DSAパラメータの生成に1024ビットのデフォルトの係数素数サイズを使用します。</target>
        </trans-unit>
        <trans-unit id="a37d2611d020aa41b4751a0d8cd1144f2acda07a" translate="yes" xml:space="preserve">
          <source>In case the client does not explicitly initialize the AlgorithmParameterGenerator (via a call to an &lt;code&gt;init&lt;/code&gt; method), each provider must supply (and document) a default initialization. For example, the Sun provider uses a default modulus prime size of 1024 bits for the generation of DSA parameters.</source>
          <target state="translated">クライアントが明示的にAlgorithmParameterGeneratorを初期化しない場合（ &lt;code&gt;init&lt;/code&gt; メソッドの呼び出しを介して）、各プロバイダーはデフォルトの初期化を提供（および文書化）する必要があります。たとえば、Sunプロバイダーは、DSAパラメータの生成に1024ビットのデフォルトの係数素数サイズを使用します。</target>
        </trans-unit>
        <trans-unit id="5eb2b1a734ed185b35dd6d539f47ccd18d6fa259" translate="yes" xml:space="preserve">
          <source>In case the client does not explicitly initialize the KeyGenerator (via a call to an &lt;code&gt;init&lt;/code&gt; method), each provider must supply (and document) a default initialization.</source>
          <target state="translated">クライアントが（ &lt;code&gt;init&lt;/code&gt; メソッドの呼び出しを介して）KeyGeneratorを明示的に初期化しない場合、各プロバイダーはデフォルトの初期化を提供（および文書化）する必要があります。</target>
        </trans-unit>
        <trans-unit id="debfe51230845fafd7d09cad852623660ca1f4b3" translate="yes" xml:space="preserve">
          <source>In case the client does not explicitly initialize the KeyPairGenerator (via a call to an &lt;code&gt;initialize&lt;/code&gt; method), each provider must supply (and document) a default initialization. For example, the</source>
          <target state="translated">クライアントが（ &lt;code&gt;initialize&lt;/code&gt; メソッドの呼び出しを介して）KeyPairGeneratorを明示的に初期化しない場合、各プロバイダーはデフォルトの初期化を提供（および文書化）する必要があります。たとえば、</target>
        </trans-unit>
        <trans-unit id="9941fbe4a1552d799e92803cbaeb391d95bf7051" translate="yes" xml:space="preserve">
          <source>In cases where the given member is of variable arity (i.e., a method or constructor) the returned method handle will also be of &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt;. In all other cases, the returned method handle will be of fixed arity.</source>
          <target state="translated">指定されたメンバーが可変アリティ（つまり、メソッドまたはコンストラクター）である場合、返されるメソッドハンドルも&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティになります&lt;/a&gt;。他のすべての場合では、返されるメソッドハンドルは固定されたアリティになります。</target>
        </trans-unit>
        <trans-unit id="b23a675004466dd2b4cbce7eda7eaf631095a71f" translate="yes" xml:space="preserve">
          <source>In cases where the inherited channel represents a network socket then the &lt;a href=&quot;../channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; type returned by this method is determined as follows:</source>
          <target state="translated">継承されたチャネルがネットワークソケットを表す場合、このメソッドによって返される&lt;a href=&quot;../channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;タイプは次のように決定されます。</target>
        </trans-unit>
        <trans-unit id="e96745c8c1f08936c49bcea65ee1327783f9c9d0" translate="yes" xml:space="preserve">
          <source>In cases where the lookup object is &lt;a href=&quot;methodhandles#publicLookup--&quot;&gt;&lt;code&gt;publicLookup()&lt;/code&gt;&lt;/a&gt;, or some other lookup object without &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt;, the lookup class is disregarded. In such cases, no caller-sensitive method handle can be created, access is forbidden, and the lookup fails with an &lt;code&gt;IllegalAccessException&lt;/code&gt;.</source>
          <target state="translated">ルックアップオブジェクトが&lt;a href=&quot;methodhandles#publicLookup--&quot;&gt; &lt;code&gt;publicLookup()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;プライベートアクセスの&lt;/a&gt;ないその他のルックアップオブジェクトである場合、ルックアップクラスは無視されます。このような場合、呼び出し側に依存するメソッドハンドルは作成できず、アクセスは禁止され、検索は &lt;code&gt;IllegalAccessException&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="77f68deaa108cb1537a1eec87f3fc8ea57159538" translate="yes" xml:space="preserve">
          <source>In client mode, unless the return &lt;a href=&quot;../../../java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; is empty, the client should use the requested server names to guide its endpoint identification of the peer's identity, and/or other aspects of security policy.</source>
          <target state="translated">クライアントモードでは、戻り&lt;a href=&quot;../../../java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;が空でない限り、クライアントは要求されたサーバー名を使用して、ピアのアイデンティティのエンドポイント識別やセキュリティポリシーの他の側面をガイドする必要があります。</target>
        </trans-unit>
        <trans-unit id="79b29a8711f23dff025211e81b749f6713301187" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;a href=&quot;printermoreinfo&quot;&gt;&lt;code&gt;PrinterMoreInfo&lt;/code&gt;&lt;/a&gt; attribute is used to find out more information about this specific printer rather than this general kind of printer.</source>
          <target state="translated">対照的に、&lt;a href=&quot;printermoreinfo&quot;&gt; &lt;code&gt;PrinterMoreInfo&lt;/code&gt; &lt;/a&gt;属性は、この一般的な種類のプリンターではなく、この特定のプリンターに関する詳細情報を見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="9caffca4032e0bb867acc7983198b345a565191b" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;a href=&quot;printermoreinfomanufacturer&quot;&gt;&lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;&lt;/a&gt; attribute is used to find out more information about this general kind of printer rather than this specific printer.</source>
          <target state="translated">対照的に、&lt;a href=&quot;printermoreinfomanufacturer&quot;&gt; &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; &lt;/a&gt;属性は、この特定のプリンターではなく、この一般的な種類のプリンターに関する詳細情報を見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="060627d2546f44e2eb02a70e34bf6f73812e4991" translate="yes" xml:space="preserve">
          <source>In dotall mode, the expression &lt;code&gt;.&lt;/code&gt; matches any character, including a line terminator. By default this expression does not match line terminators.</source>
          <target state="translated">dotallモードでは、式 &lt;code&gt;.&lt;/code&gt; 行末記号を含む任意の文字に一致します。デフォルトでは、この式は行末記号と一致しません。</target>
        </trans-unit>
        <trans-unit id="d88997d2890c678dab9000d415f1fe8afb3e8043" translate="yes" xml:space="preserve">
          <source>In either case, if the host was specified using the &lt;code&gt;[...]&lt;/code&gt; syntax for numeric IPv6 addresses, the square brackets are not included in the return value here.</source>
          <target state="translated">どちらの場合でも、ホストが数値IPv6アドレスの &lt;code&gt;[...]&lt;/code&gt; 構文を使用して指定された場合、角括弧はここでの戻り値には含まれません。</target>
        </trans-unit>
        <trans-unit id="4f9f1eeccbc325e134332f21c771ad94fb506cd0" translate="yes" xml:space="preserve">
          <source>In either case, language ranges are sorted in descending order in the Language Priority List based on priority or weight. If a language range appears in the given &lt;code&gt;ranges&lt;/code&gt; more than once, only the first one is included on the Language Priority List.</source>
          <target state="translated">どちらの場合も、言語の範囲は、優先順位または重みに基づいて、言語優先順位リストで降順にソートされます。言語範囲が指定された &lt;code&gt;ranges&lt;/code&gt; 複数回出現する場合、最初の言語範囲のみが言語優先リストに含まれます。</target>
        </trans-unit>
        <trans-unit id="55b6c09f46927e3b4d92afe1b61f0c38ea762b03" translate="yes" xml:space="preserve">
          <source>In either case, the class</source>
          <target state="translated">いずれの場合も、クラス</target>
        </trans-unit>
        <trans-unit id="236fdad6a9437be057f2da47354343f51080d4cd" translate="yes" xml:space="preserve">
          <source>In either case, the code that instantiates an X.509 certificate consults the value of the &lt;code&gt;cert.provider.x509v1&lt;/code&gt; security property to locate the actual implementation or instantiates a default implementation.</source>
          <target state="translated">どちらの場合も、X.509証明書をインスタンス化するコードは、 &lt;code&gt;cert.provider.x509v1&lt;/code&gt; セキュリティプロパティの値を調べて実際の実装を見つけるか、デフォルトの実装をインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="45f7d360a66191e21bd373f5aba227e8c0490155" translate="yes" xml:space="preserve">
          <source>In either case, the quality setting in an &lt;code&gt;ImageWriteParam&lt;/code&gt; has the same meaning as for the underlying library: 1.00 means a quantization table of all 1's, 0.75 means the &quot;standard&quot;, visually lossless quantization table, and 0.00 means aquantization table of all 255's.</source>
          <target state="translated">どちらの場合でも、 &lt;code&gt;ImageWriteParam&lt;/code&gt; の品質設定は、基になるライブラリと同じ意味です。1.00はすべて1の量子化テーブルを意味し、0.75は「標準」の視覚的に損失のない量子化テーブルを意味し、0.00はすべて255の量子化テーブルを意味します。</target>
        </trans-unit>
        <trans-unit id="eb55847a08d18a4afa181d4462c2342b7398dcea" translate="yes" xml:space="preserve">
          <source>In environments in which the delegation model is not strictly hierarchical, class loaders need to be parallel capable, otherwise class loading can lead to deadlocks because the loader lock is held for the duration of the class loading process (see &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; methods).</source>
          <target state="translated">委譲モデルが厳密に階層的ではない環境では、クラスローダーは並列対応である必要があります。そうでない場合、ローダーのロックがクラスの読み込みプロセスの間保持されるため、クラスの読み込みがデッドロックにつながる可能性があります（&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="76b01c569fddbef2fd279870bf0626c68e22edb7" translate="yes" xml:space="preserve">
          <source>In every case, elements &lt;code&gt;b[0]&lt;/code&gt; through &lt;code&gt;b[off]&lt;/code&gt; and elements &lt;code&gt;b[off+len]&lt;/code&gt; through &lt;code&gt;b[b.length-1]&lt;/code&gt; are unaffected.</source>
          <target state="translated">どの場合でも、要素 &lt;code&gt;b[0]&lt;/code&gt; から &lt;code&gt;b[off]&lt;/code&gt; および要素 &lt;code&gt;b[off+len]&lt;/code&gt; から &lt;code&gt;b[b.length-1]&lt;/code&gt; は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="801d9d22e0c396affe549d48580efe1c12d56b6f" translate="yes" xml:space="preserve">
          <source>In every other case, an &lt;code&gt;OpenType&lt;/code&gt; is assignable from another &lt;code&gt;OpenType&lt;/code&gt; only if they are equal.</source>
          <target state="translated">他のすべてのケースでは、 &lt;code&gt;OpenType&lt;/code&gt; は、それらが等しい場合にのみ別の &lt;code&gt;OpenType&lt;/code&gt; から割り当て可能です。</target>
        </trans-unit>
        <trans-unit id="7180b2cd8aff78dc10263ca1b56b42ba5afd94b5" translate="yes" xml:space="preserve">
          <source>In fixed-delay execution, each execution is scheduled relative to the actual execution time of the previous execution. If an execution is delayed for any reason (such as garbage collection or other background activity), subsequent executions will be delayed as well. In the long run, the frequency of execution will generally be slightly lower than the reciprocal of the specified period (assuming the system clock underlying &lt;code&gt;Object.wait(long)&lt;/code&gt; is accurate).</source>
          <target state="translated">固定遅延実行では、各実行は前の実行の実際の実行時間に関連してスケジュールされます。何らかの理由（ガベージコレクションやその他のバックグラウンドアクティビティなど）で実行が遅延した場合、後続の実行も遅延されます。長期的には、実行頻度は通常、指定された期間の逆数よりわずかに低くなります（ &lt;code&gt;Object.wait(long)&lt;/code&gt; の基礎となるシステムクロックが正確であると想定）。</target>
        </trans-unit>
        <trans-unit id="06dd4ce58b291cfcd7c050a8ac56352c9904d7d1" translate="yes" xml:space="preserve">
          <source>In fixed-delay execution, each execution is scheduled relative to the actual execution time of the previous execution. If an execution is delayed for any reason (such as garbage collection or other background activity), subsequent executions will be delayed as well. In the long run, the frequency of execution will generally be slightly lower than the reciprocal of the specified period (assuming the system clock underlying &lt;code&gt;Object.wait(long)&lt;/code&gt; is accurate). As a consequence of the above, if the scheduled first time is in the past, it is scheduled for immediate execution.</source>
          <target state="translated">固定遅延実行では、各実行は前の実行の実際の実行時間に関連してスケジュールされます。何らかの理由（ガベージコレクションやその他のバックグラウンドアクティビティなど）で実行が遅延した場合、後続の実行も遅延します。長期的には、実行の頻度は通常、指定された期間の逆数よりわずかに低くなります（ &lt;code&gt;Object.wait(long)&lt;/code&gt; の基礎となるシステムクロックが正確であると想定）。上記の結果として、スケジュールされた初回が過去の場合、即時実行がスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="38f4d1c31bc026707af439dd64fd16f577250fa5" translate="yes" xml:space="preserve">
          <source>In fixed-rate execution, each execution is scheduled relative to the scheduled execution time of the initial execution. If an execution is delayed for any reason (such as garbage collection or other background activity), two or more executions will occur in rapid succession to &quot;catch up.&quot; In the long run, the frequency of execution will be exactly the reciprocal of the specified period (assuming the system clock underlying &lt;code&gt;Object.wait(long)&lt;/code&gt; is accurate).</source>
          <target state="translated">固定レート実行では、各実行は、最初の実行のスケジュールされた実行時間に関連してスケジュールされます。なんらかの理由（ガベージコレクションやその他のバックグラウンドアクティビティなど）で実行が遅延した場合、2つ以上の実行が「追いつく」ために連続して急速に発生します。長期的には、実行頻度は指定された期間の逆数になります（ &lt;code&gt;Object.wait(long)&lt;/code&gt; の基礎となるシステムクロックが正確であると想定）。</target>
        </trans-unit>
        <trans-unit id="6c5dab1a04b2f64b424e450784bf531fabb4f1ec" translate="yes" xml:space="preserve">
          <source>In fixed-rate execution, each execution is scheduled relative to the scheduled execution time of the initial execution. If an execution is delayed for any reason (such as garbage collection or other background activity), two or more executions will occur in rapid succession to &quot;catch up.&quot; In the long run, the frequency of execution will be exactly the reciprocal of the specified period (assuming the system clock underlying &lt;code&gt;Object.wait(long)&lt;/code&gt; is accurate). As a consequence of the above, if the scheduled first time is in the past, then any &quot;missed&quot; executions will be scheduled for immediate &quot;catch up&quot; execution.</source>
          <target state="translated">固定レート実行では、各実行は、最初の実行のスケジュールされた実行時間に関連してスケジュールされます。なんらかの理由（ガベージコレクションやその他のバックグラウンドアクティビティなど）で実行が遅延した場合、2つ以上の実行が迅速に連続して発生し、「追いつき」ます。長期的には、実行頻度は指定された期間の逆数になります（ &lt;code&gt;Object.wait(long)&lt;/code&gt; の基礎となるシステムクロックが正確であると仮定）。上記の結果として、最初にスケジュールされた時間が過去の場合、「実行されなかった」実行はすぐに「追いつき」実行されるようにスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="377721e57496fed42d1cae3373a6f0668f7794a9" translate="yes" xml:space="preserve">
          <source>In general SEVERE messages should describe events that are of considerable importance and which will prevent normal program execution. They should be reasonably intelligible to end users and to system administrators. This level is initialized to &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">一般に、SEVEREメッセージは、非常に重要であり、通常のプログラムの実行を妨げるイベントを説明する必要があります。それらは、エンドユーザーおよびシステム管理者にとって合理的に理解できるものである必要があります。このレベルは &lt;code&gt;1000&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="ca89517b7bed3fbab9bcbe3cd835aaae375b5494" translate="yes" xml:space="preserve">
          <source>In general WARNING messages should describe events that will be of interest to end users or system managers, or which indicate potential problems. This level is initialized to &lt;code&gt;900&lt;/code&gt;.</source>
          <target state="translated">一般に、警告メッセージは、エンドユーザーまたはシステム管理者にとって重要なイベント、または潜在的な問題を示すイベントを説明する必要があります。このレベルは &lt;code&gt;900&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="52ab12fc5c3f521826991557e9ca1a023d1a3454" translate="yes" xml:space="preserve">
          <source>In general the FINE level should be used for information that will be broadly interesting to developers who do not have a specialized interest in the specific subsystem.</source>
          <target state="translated">一般にFINEレベルは、特定のサブシステムに専門的な関心を持たない開発者に広く興味を持ってもらえるような情報を提供するために使用されるべきである。</target>
        </trans-unit>
        <trans-unit id="1963e8a87e697420d77d12336068a0b78ee8491b" translate="yes" xml:space="preserve">
          <source>In general the rounding modes and precision setting determine how operations return results with a limited number of digits when the exact result has more digits (perhaps infinitely many in the case of division) than the number of digits returned. First, the total number of digits to return is specified by the &lt;code&gt;MathContext&lt;/code&gt;'s &lt;code&gt;precision&lt;/code&gt; setting; this determines the result's</source>
          <target state="translated">一般に、丸めモードと精度設定は、正確な結果が返される桁数よりも桁数が多い場合（除算の場合はおそらく無限に多い）に、制限された桁数で演算が結果を返す方法を決定します。まず、返される総桁数は &lt;code&gt;MathContext&lt;/code&gt; の &lt;code&gt;precision&lt;/code&gt; 設定で指定されます。これは結果を決定します</target>
        </trans-unit>
        <trans-unit id="7903ecabcfca49b9b51c9a6417d726476aff19c9" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;string#toLowerCase--&quot;&gt;&lt;code&gt;String.toLowerCase()&lt;/code&gt;&lt;/a&gt; should be used to map characters to lowercase. &lt;code&gt;String&lt;/code&gt; case mapping methods have several benefits over &lt;code&gt;Character&lt;/code&gt; case mapping methods. &lt;code&gt;String&lt;/code&gt; case mapping methods can perform locale-sensitive mappings, context-sensitive mappings, and 1:M character mappings, whereas the &lt;code&gt;Character&lt;/code&gt; case mapping methods cannot.</source>
          <target state="translated">一般に、文字を小文字にマップするには、&lt;a href=&quot;string#toLowerCase--&quot;&gt; &lt;code&gt;String.toLowerCase()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。 &lt;code&gt;String&lt;/code&gt; 大文字と小文字のマッピング方法には、 &lt;code&gt;Character&lt;/code&gt; 大文字と小文字のマッピング方法に比べていくつかの利点があります。 &lt;code&gt;String&lt;/code&gt; に対し、Mの文字マッピング：ケースマッピングメソッドは、ロケールに依存マッピング、コンテキスト依存のマッピング、および1を実行することができる &lt;code&gt;Character&lt;/code&gt; ケースマッピング方法ができません。</target>
        </trans-unit>
        <trans-unit id="e84c348879217d2774b2e6f52daa41be1dbd7647" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; should be used to map characters to uppercase. &lt;code&gt;String&lt;/code&gt; case mapping methods have several benefits over &lt;code&gt;Character&lt;/code&gt; case mapping methods. &lt;code&gt;String&lt;/code&gt; case mapping methods can perform locale-sensitive mappings, context-sensitive mappings, and 1:M character mappings, whereas the &lt;code&gt;Character&lt;/code&gt; case mapping methods cannot.</source>
          <target state="translated">一般に、文字を大文字にマップするには、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。 &lt;code&gt;String&lt;/code&gt; 大文字と小文字のマッピング方法には、 &lt;code&gt;Character&lt;/code&gt; 大文字と小文字のマッピング方法に比べていくつかの利点があります。 &lt;code&gt;String&lt;/code&gt; に対し、Mの文字マッピング：ケースマッピングメソッドは、ロケールに依存マッピング、コンテキスト依存のマッピング、および1を実行することができる &lt;code&gt;Character&lt;/code&gt; ケースマッピング方法ができません。</target>
        </trans-unit>
        <trans-unit id="d7e17baf4657b727413c0aba5c861df347a6bdea" translate="yes" xml:space="preserve">
          <source>In general, a URL can be broken into several parts. Consider the following example:</source>
          <target state="translated">一般的に、URLはいくつかの部分に分割することができます。次の例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="bdd376741f3d8082da9a304e1c250753cd486c5b" translate="yes" xml:space="preserve">
          <source>In general, a Writer sends its output immediately to the underlying character or byte stream. Unless prompt output is required, it is advisable to wrap a BufferedWriter around any Writer whose write() operations may be costly, such as FileWriters and OutputStreamWriters. For example,</source>
          <target state="translated">一般的に、ライターはその出力を基になっている文字またはバイト・ストリームに直ちに送信します。プロンプト出力が必要な場合を除き、FileWriterやOutputStreamWriterのようなwrite()操作がコストのかかるWriterには、BufferedWriterをラップすることをお勧めします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2098f901fe353218eb3766afcbda6c9dd9a40b32" translate="yes" xml:space="preserve">
          <source>In general, each read request made of a Reader causes a corresponding read request to be made of the underlying character or byte stream. It is therefore advisable to wrap a BufferedReader around any Reader whose read() operations may be costly, such as FileReaders and InputStreamReaders. For example,</source>
          <target state="translated">一般的に、リーダーの各読み取り要求は、その下にある文字またはバイト・ストリームの対応する読み取り要求を引き起こします。したがって、FileReadersやInputStreamReadersのように、read()操作にコストがかかるReaderの周りにBufferedReaderをラップすることをお勧めします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3316f354198c51080a3833552e7b39608bce991e" translate="yes" xml:space="preserve">
          <source>In general, if sb refers to an instance of a &lt;code&gt;StringBuffer&lt;/code&gt;, then &lt;code&gt;sb.append(x)&lt;/code&gt; has the same effect as &lt;code&gt;sb.insert(sb.length(), x)&lt;/code&gt;.</source>
          <target state="translated">SBはのインスタンスを参照する場合、一般的に、 &lt;code&gt;StringBuffer&lt;/code&gt; の次に、 &lt;code&gt;sb.append(x)&lt;/code&gt; と同様の効果を有する &lt;code&gt;sb.insert(sb.length(), x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="915babbb9e40489175934fdd5d39ee98d92d2ac1" translate="yes" xml:space="preserve">
          <source>In general, if sb refers to an instance of a &lt;code&gt;StringBuilder&lt;/code&gt;, then &lt;code&gt;sb.append(x)&lt;/code&gt; has the same effect as &lt;code&gt;sb.insert(sb.length(), x)&lt;/code&gt;.</source>
          <target state="translated">SBはのインスタンスを参照する場合、一般的に、 &lt;code&gt;StringBuilder&lt;/code&gt; を、次いで &lt;code&gt;sb.append(x)&lt;/code&gt; と同様の効果を有する &lt;code&gt;sb.insert(sb.length(), x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bd60088580eccde556a63506e5f80dae1b4ac3c" translate="yes" xml:space="preserve">
          <source>In general, it is preferable to use a &lt;code&gt;FileCacheImageInputStream&lt;/code&gt; when reading from a regular &lt;code&gt;InputStream&lt;/code&gt;. This class is provided for cases where it is not possible to create a writable temporary file.</source>
          <target state="translated">通常、通常の &lt;code&gt;InputStream&lt;/code&gt; から読み取る場合は、 &lt;code&gt;FileCacheImageInputStream&lt;/code&gt; を使用することをお勧めします。このクラスは、書き込み可能な一時ファイルを作成できない場合のために提供されています。</target>
        </trans-unit>
        <trans-unit id="21e5e3c075e0b11cb1e347193c00ff4d2551bbce" translate="yes" xml:space="preserve">
          <source>In general, manipulating a date, and even querying a date, is wide open to bugs when the calendar system is unknown at development time. This is why it is essential that code using this interface is subjected to additional code reviews. It is also why an architectural decision to avoid this interface type is usually the correct one.</source>
          <target state="translated">一般的に、日付を操作したり、日付を照会したりすることは、開発時にカレンダーシステムが不明な場合、バグが発生する可能性があります。このため、このインターフェイスを使用するコードは、追加のコードレビューを受けることが不可欠です。また、このインターフェイスタイプを避けるというアーキテクチャ上の決定が、通常は正しいものである理由でもあります。</target>
        </trans-unit>
        <trans-unit id="fde684fe3ce7e630fddfb34fcb022e3e0a8c906d" translate="yes" xml:space="preserve">
          <source>In general, preformatted PDL print data is provided in a byte oriented representation class (byte array, InputStream, URL).</source>
          <target state="translated">一般的に、あらかじめフォーマットされたPDL印刷データは、バイト指向の表現クラス(バイト配列、InputStream、URL)で提供されます。</target>
        </trans-unit>
        <trans-unit id="a1a70f78ea99c155d3ce2eddde22908dd11fa016" translate="yes" xml:space="preserve">
          <source>In general, preformatted image print data is provided in a byte oriented representation class (byte array, InputStream, URL).</source>
          <target state="translated">一般に、あらかじめフォーマットされた画像印刷データは、バイト指向の表現クラス(バイト配列、InputStream、URL)で提供される。</target>
        </trans-unit>
        <trans-unit id="8f59090f50a6fbd17d3d80f0442b0770cb6823af" translate="yes" xml:space="preserve">
          <source>In general, preformatted text print data is provided either in a character oriented representation class (character array, String, Reader) or in a byte oriented representation class (byte array, InputStream, URL).</source>
          <target state="translated">一般的に、フォーマット済みのテキスト印刷データは、文字指向の表現クラス(文字配列、String、Reader)、またはバイト指向の表現クラス(バイト配列、InputStream、URL)のいずれかで提供される。</target>
        </trans-unit>
        <trans-unit id="e174721fc57e1470b14637e03eed9bd9757b2c64" translate="yes" xml:space="preserve">
          <source>In general, processors must not knowingly attempt to overwrite existing files that were not generated by some processor. A &lt;code&gt;Filer&lt;/code&gt; may reject attempts to open a file corresponding to an existing type, like &lt;code&gt;java.lang.Object&lt;/code&gt;. Likewise, the invoker of the annotation processing tool must not knowingly configure the tool such that the discovered processors will attempt to overwrite existing files that were not generated.</source>
          <target state="translated">一般に、プロセッサーは、あるプロセッサーによって生成されなかった既存のファイルを故意に上書きしようと試みてはなりません。A &lt;code&gt;Filer&lt;/code&gt; 同様に、既存のタイプに対応するファイルを開くしようとする試み拒否できる &lt;code&gt;java.lang.Object&lt;/code&gt; 上位を。同様に、注釈処理ツールの呼び出し元は、検出されたプロセッサが生成されなかった既存のファイルを上書きしようとするように、ツールを意図的に構成してはなりません。</target>
        </trans-unit>
        <trans-unit id="431a353f97c38c8d198b7fc7b29758a7a00dead2" translate="yes" xml:space="preserve">
          <source>In general, the best results will be achieved when format-specific metadata objects can be created to encapsulate as much information about the image and its associated metadata as possible, in terms that are understood by the specific &lt;code&gt;ImageWriter&lt;/code&gt; used to perform the encoding.</source>
          <target state="translated">一般的に、最良の結果が得られるのは、フォーマット固有のメタデータオブジェクトを作成して、画像とそれに関連するメタデータに関する情報をできるだけ多くカプセル化して、エンコードの実行に使用される特定の &lt;code&gt;ImageWriter&lt;/code&gt; が理解できる場合です。</target>
        </trans-unit>
        <trans-unit id="53eade6b2898bdabeab389a3447d258d06173156" translate="yes" xml:space="preserve">
          <source>In general, the conditions under which a method handle may be looked up for a method &lt;code&gt;M&lt;/code&gt; are no more restrictive than the conditions under which the lookup class could have compiled, verified, and resolved a call to &lt;code&gt;M&lt;/code&gt;. Where the JVM would raise exceptions like &lt;code&gt;NoSuchMethodError&lt;/code&gt;, a method handle lookup will generally raise a corresponding checked exception, such as &lt;code&gt;NoSuchMethodException&lt;/code&gt;. And the effect of invoking the method handle resulting from the lookup is &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;exactly equivalent&lt;/a&gt; to executing the compiled, verified, and resolved call to &lt;code&gt;M&lt;/code&gt;. The same point is true of fields and constructors.</source>
          <target state="translated">一般に、メソッドハンドルがメソッド &lt;code&gt;M&lt;/code&gt; に対してルックアップされる条件は、ルックアップクラスが &lt;code&gt;M&lt;/code&gt; への呼び出しをコンパイル、検証、および解決できる条件よりも制限的ではありません。 JVMが &lt;code&gt;NoSuchMethodError&lt;/code&gt; のような例外を発生させる場合、メソッドハンドルのルックアップは、通常、対応するチェック済み例外（ &lt;code&gt;NoSuchMethodException&lt;/code&gt; など）を発生させます。そして、ルックアップの結果としてのメソッドハンドルを呼び出すことの効果は、コンパイル、検証、および解決された &lt;code&gt;M&lt;/code&gt; の呼び出しを実行することと&lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;まったく同じ&lt;/a&gt;です。フィールドとコンストラクターについても同じことが言えます。</target>
        </trans-unit>
        <trans-unit id="7e29aefc51ddd907e426422b3411bda4d27c9e92" translate="yes" xml:space="preserve">
          <source>In general, this method is a lightweight operation for getting an approximate memory usage. For some memory pools, for example, when objects are not packed contiguously, this method may be an expensive operation that requires some computation to determine the current memory usage. An implementation should document when this is the case.</source>
          <target state="translated">一般的に、このメソッドは、おおよそのメモリ使用量を取得するための軽量な操作です。いくつかのメモリプール、例えばオブジェクトが連続してパックされていない場合、このメソッドは、現在のメモリ使用量を決定するためにいくつかの計算を必要とする高価な操作になるかもしれません。このような場合は、実装で文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec36e3e2d136d0a7304c8a66d67a23e51eac0920" translate="yes" xml:space="preserve">
          <source>In general, unless otherwise noted in the javadoc, methods and constructors will throw NullPointerException if passed a null argument. The one broad exception to this rule is that the logging convenience methods in the Logger class (the config, entering, exiting, fine, finer, finest, log, logp, logrb, severe, throwing, and warning methods) will accept null values for all arguments except for the initial Level argument (if any).</source>
          <target state="translated">一般的に、javadocで特に指定がない限り、メソッドやコンストラクタはNull引数を渡すとNullPointerExceptionをスローします。このルールに対する1つの広範な例外は、Loggerクラスのロギング便利メソッド(config、entry、exiting、fine、finer、finest、log、logp、logrb、sterior、throwing、およびwarningメソッド)が、初期Level引数(もしあれば)を除くすべての引数に対してNull値を受け付けることです。</target>
        </trans-unit>
        <trans-unit id="7192acbc6c0b02d808beb4e0437459650d042c65" translate="yes" xml:space="preserve">
          <source>In general, user-written adjusters should be static constants:</source>
          <target state="translated">一般的に、ユーザーが書いたアジャスターは静的な定数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9d5425a3de90c437c3b6df07d4a422e34dce646a" translate="yes" xml:space="preserve">
          <source>In implementation terms, this method behaves as follows. The result of the parsing phase can be considered to be a map of field to value. The behavior of this method is to cause that map to be filtered between phase 1 and 2, removing all fields other than those specified as arguments to this method.</source>
          <target state="translated">実装上では、このメソッドは以下のように動作します。解析フェーズの結果は、フィールドから値へのマップと考えることができます。このメソッドの動作は、そのマップがフェーズ1とフェーズ2の間でフィルタリングされ、このメソッドの引数として指定されたフィールド以外のすべてのフィールドが削除されます。</target>
        </trans-unit>
        <trans-unit id="1352cdc6280239b4d087354bb36004ed465fd5c1" translate="yes" xml:space="preserve">
          <source>In its more general form, a &lt;code&gt;reduce&lt;/code&gt; operation on elements of type &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; yielding a result of type &lt;code&gt;&amp;lt;U&amp;gt;&lt;/code&gt; requires three parameters:</source>
          <target state="translated">より一般的な形式では、タイプ &lt;code&gt;&amp;lt;U&amp;gt;&lt;/code&gt; の結果を生成するタイプ &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; の要素に対する &lt;code&gt;reduce&lt;/code&gt; 操作には、3つのパラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="d236b645a588e6e29bda92b7b1d5fa7a8b31381c" translate="yes" xml:space="preserve">
          <source>In many common situations, for example when working URIs that are known to be either URNs or URLs, the hierarchical URIs being used will always be server-based. They therefore must either be parsed as such or treated as an error. In these cases a statement such as</source>
          <target state="translated">多くの一般的な状況、例えば、URNやURLであることがわかっているURIを扱う場合、 使用される階層的なURIは常にサーバーベースである。そのため、それらはそのように解析されるか、エラーとして扱われなければなりません。このような場合には</target>
        </trans-unit>
        <trans-unit id="0e2934043ae8a161cfa924a72c9b0eec317155f8" translate="yes" xml:space="preserve">
          <source>In most cases, an instance of a &lt;code&gt;URLStreamHandler&lt;/code&gt; subclass is not created directly by an application. Rather, the first time a protocol name is encountered when constructing a &lt;code&gt;URL&lt;/code&gt;, the appropriate stream protocol handler is automatically loaded.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;URLStreamHandler&lt;/code&gt; サブクラスのインスタンスは、アプリケーションによって直接作成されません。代わりに、 &lt;code&gt;URL&lt;/code&gt; の作成時に初めてプロトコル名が検出されると、適切なストリームプロトコルハンドラが自動的にロードされます。</target>
        </trans-unit>
        <trans-unit id="f03c583c4f9a187f67c9d5064698de3c6ba9e5f8" translate="yes" xml:space="preserve">
          <source>In most cases, applications should use &lt;a href=&quot;temporalqueries#zone--&quot;&gt;&lt;code&gt;zone()&lt;/code&gt;&lt;/a&gt; as this query is too strict.</source>
          <target state="translated">このクエリは厳密すぎるため、ほとんどの場合、アプリケーションは&lt;a href=&quot;temporalqueries#zone--&quot;&gt; &lt;code&gt;zone()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8bced82c06bec9c190b301d0f390306ca5fd209" translate="yes" xml:space="preserve">
          <source>In most cases, applications should use this query rather than &lt;code&gt;#zoneId()&lt;/code&gt;.</source>
          <target state="translated">ほとんどの場合、アプリケーションは &lt;code&gt;#zoneId()&lt;/code&gt; ではなくこのクエリを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="05534aa8b63ec4048eccf7a07834ab90e9df5565" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;../temporal/temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;../temporal/temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にすると明確になります。</target>
        </trans-unit>
        <trans-unit id="5ca0f70a9b9175c2c2fe451007859b67358fa814" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;../temporal/temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;../temporal/temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にする方が明確です。</target>
        </trans-unit>
        <trans-unit id="4cc6b9a301072df7f4a3865fb76f7c4481348a1a" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にすると明確になります。</target>
        </trans-unit>
        <trans-unit id="8187c2e6793a987f620d69a1063da034bcf390bd" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;temporal/temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;temporal/temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にすると明確になります。</target>
        </trans-unit>
        <trans-unit id="0561b8f397e2afe69a4c02418cf7771d9bd7c4a0" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;temporal/temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;temporal/temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にする方が明確です。</target>
        </trans-unit>
        <trans-unit id="56f3a9f6060c00fbd937e2e83c6bfc005f30256c" translate="yes" xml:space="preserve">
          <source>In most cases, it is clearer to reverse the calling pattern by using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用して呼び出しパターンを逆にすると明確になります。</target>
        </trans-unit>
        <trans-unit id="4dc8fca0cd4dde7b02954c863b88c3a8c6cd211a" translate="yes" xml:space="preserve">
          <source>In most cases, the exact pages to be printed will be generated by a device driver and this attribute would not be required. However, when printing an archived document which has already been formatted, the end user may elect to print just a subset of the pages contained in the document. In this case, if a page range of &lt;code&gt;&quot;&lt;i&gt;n&lt;/i&gt;-&lt;i&gt;m&lt;/i&gt;&quot;&lt;/code&gt; is specified, the first page to be printed will be page</source>
          <target state="translated">ほとんどの場合、印刷される正確なページはデバイスドライバーによって生成され、この属性は必要ありません。ただし、すでにフォーマットされたアーカイブ済みドキュメントを印刷する場合、エンドユーザーはドキュメントに含まれるページのサブセットのみを印刷することを選択できます。この場合、 &lt;code&gt;&quot;&lt;i&gt;n&lt;/i&gt;-&lt;i&gt;m&lt;/i&gt;&quot;&lt;/code&gt; ページ範囲を指定すると、最初に印刷されるページがページになります。</target>
        </trans-unit>
        <trans-unit id="228fae619d417827abbff2695d0e3ef18a476bdf" translate="yes" xml:space="preserve">
          <source>In most cases, the methods defined here will delegate to the associated file system provider to perform the file operations.</source>
          <target state="translated">ほとんどの場合、ここで定義されているメソッドは、ファイル操作を実行するために関連するファイルシステムプロバイダに委任します。</target>
        </trans-unit>
        <trans-unit id="400b1753d04b7af8e5783d26598d8e066c54a2d8" translate="yes" xml:space="preserve">
          <source>In most cases, the transition duration is one hour, however this is not always the case. The duration will be positive for a gap and negative for an overlap. Time-zones are second-based, so the nanosecond part of the duration will be zero.</source>
          <target state="translated">ほとんどの場合、移行時間は1時間ですが、必ずしもそうとは限りません。持続時間は、ギャップがある場合は正の値になり、オーバーラップがある場合は負の値になります。タイムゾーンは秒単位なので、持続時間のナノ秒部分はゼロになります。</target>
        </trans-unit>
        <trans-unit id="e7ed0da15e8a41892d662dc53e44bec661e54f79" translate="yes" xml:space="preserve">
          <source>In most cases, there is only one valid offset for a local date-time. In the case of an overlap, there are two valid offsets, and the earlier one is used, corresponding to the first occurrence of midnight on the date. In the case of a gap, the zoned date-time will represent the instant just after the gap.</source>
          <target state="translated">ほとんどの場合、ローカルな日付時刻に対して有効なオフセットは1つしかありません。重複している場合、2つの有効なオフセットがあり、日付の最初の真夜中に対応する早い方のオフセットが使用されます。ギャップがある場合、ゾーン化された日付時刻は、ギャップの直後の瞬間を表します。</target>
        </trans-unit>
        <trans-unit id="625ac3988fae19a7227d921594f35e99f65364f8" translate="yes" xml:space="preserve">
          <source>In most cases, there is only one valid offset for a local date-time. In the case of an overlap, when clocks are set back, there are two valid offsets. This method uses the earlier offset typically corresponding to &quot;summer&quot;.</source>
          <target state="translated">ほとんどの場合、ローカルの日付時刻に対して有効なオフセットは1つしかありません。オーバーラップしている場合、時計がセットバックされているときには、2つの有効なオフセットがあります。この方法では、一般的に &quot;夏 &quot;に対応する早い方のオフセットを使用します。</target>
        </trans-unit>
        <trans-unit id="c2b939591e64208fc1e25691b062275e7929457a" translate="yes" xml:space="preserve">
          <source>In most cases, there is only one valid offset for a local date-time. In the case of an overlap, where clocks are set back, there are two valid offsets. If the preferred offset is one of the valid offsets then it is used. Otherwise the earlier valid offset is used, typically corresponding to &quot;summer&quot;.</source>
          <target state="translated">ほとんどの場合、ローカルの日付時刻に対して有効なオフセットは1つしかありません。オーバーラップの場合、時計がセットバックされている場合、2つの有効なオフセットがあります。優先されるオフセットが有効なオフセットの1つである場合、それが使用されます。そうでない場合は、早い方の有効なオフセットが使用され、通常は &quot;summer &quot;に対応します。</target>
        </trans-unit>
        <trans-unit id="cd9baba77f7578454bd94a07cc240ce1b5e694d3" translate="yes" xml:space="preserve">
          <source>In most cases, there is only one valid offset for a local date-time. In the case of an overlap, where clocks are set back, there are two valid offsets. This method uses the earlier offset typically corresponding to &quot;summer&quot;.</source>
          <target state="translated">ほとんどの場合、ローカルの日付時刻に対して有効なオフセットは1つしかありません。オーバーラップしている場合、時計が後ろにセットバックされている場合は、2つの有効なオフセットがあります。この方法では、一般的に &quot;夏 &quot;に対応する早い方のオフセットを使用します。</target>
        </trans-unit>
        <trans-unit id="1ba29f0eb3427ba3bc8f620c7fd7795c4d04cb6f" translate="yes" xml:space="preserve">
          <source>In multiline mode the expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; match just after or just before, respectively, a line terminator or the end of the input sequence. By default these expressions only match at the beginning and the end of the entire input sequence.</source>
          <target state="translated">複数行モードでは、式 &lt;code&gt;^&lt;/code&gt; および &lt;code&gt;$&lt;/code&gt; は、それぞれ行末記号または入力シーケンスの終わりの直後または直前に一致します。デフォルトでは、これらの式は入力シーケンス全体の最初と最後でのみ一致します。</target>
        </trans-unit>
        <trans-unit id="8cd3059f796b099e853c5ec37ef7ff133f0e47a7" translate="yes" xml:space="preserve">
          <source>In naming systems for which the notion of full name does not apply to this binding an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; is thrown. This exception is also thrown when a service provider written before the introduction of the method is in use.</source>
          <target state="translated">フルネームの概念がこのバインディングに適用されないネーミングシステムでは、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。この例外は、メソッドの導入前に作成されたサービスプロバイダーが使用されている場合にもスローされます。</target>
        </trans-unit>
        <trans-unit id="2a34c892345a3ff0220626c939a8b01b18ac6ead" translate="yes" xml:space="preserve">
          <source>In negative patterns, the minimum and maximum counts are ignored; these are presumed to be set in the positive pattern.</source>
          <target state="translated">ネガティブパターンでは、最小カウントと最大カウントは無視され、これらはポジティブパターンに設定されていると推定されます。</target>
        </trans-unit>
        <trans-unit id="027f5f7c874f0b05685665c2baaf2e4a0856aaaa" translate="yes" xml:space="preserve">
          <source>In order for persistence mechanisms to function properly on BeanContextChild instances across a broad variety of scenarios, implementing classes of this interface are required to define as transient, any or all fields, or instance variables, that may contain, or represent, references to the nesting BeanContext instance or other resources obtained from the BeanContext via any unspecified mechanisms.</source>
          <target state="translated">様々なシナリオにおいてBeanContextChildインスタンス上で永続化機構が適切に機能するために,このインタフェースの実装クラスは,入れ子のBeanContextインスタンスへの参照を含むか,表現するかもしれない,または,不特定の機構を介してBeanContextから取得された他のリソースを一時的なものとして定義することが要求される。</target>
        </trans-unit>
        <trans-unit id="0ba893cd9f06a3e56a7d28781c82514ba4b91f11" translate="yes" xml:space="preserve">
          <source>In order to be used with a selector, an instance of this class must first be</source>
          <target state="translated">セレクタで使用するためには、まずこのクラスのインスタンスが</target>
        </trans-unit>
        <trans-unit id="b98e8db6ce4d9f52c1ffa4b7dff7087581ce0c75" translate="yes" xml:space="preserve">
          <source>In order to create a Cipher object, the application calls the Cipher's &lt;code&gt;getInstance&lt;/code&gt; method, and passes the name of the requested</source>
          <target state="translated">Cipherオブジェクトを作成するために、アプリケーションはCipherの &lt;code&gt;getInstance&lt;/code&gt; メソッドを呼び出し、要求された名前を渡します</target>
        </trans-unit>
        <trans-unit id="31c0dc79be70085d164b878d4cb4d45a32f8f726" translate="yes" xml:space="preserve">
          <source>In order to create a collecting adapter which collects a predetermined number of arguments, and whose type reflects this predetermined number, use &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;&lt;code&gt;asCollector&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">所定の数の引数を収集し、タイプがこの所定の数を反映する収集アダプターを作成するには、代わりに&lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt; &lt;code&gt;asCollector&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="53922bd99347421945f987d026bbbefad691f64a" translate="yes" xml:space="preserve">
          <source>In order to create a collecting adapter which is not restricted to a particular number of collected arguments, use &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;&lt;code&gt;asVarargsCollector&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">特定の数の収集された引数に制限されない収集アダプターを作成するには、代わりに&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt; &lt;code&gt;asVarargsCollector&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="d50236bff40706c4ebaf917ac3e33937a82d5dd3" translate="yes" xml:space="preserve">
          <source>In order to create an empty keystore, or if the keystore cannot be initialized from a stream, pass &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;stream&lt;/code&gt; argument.</source>
          <target state="translated">空のキーストアを作成するには、またはキーストアをストリームから初期化できない場合は、 &lt;code&gt;stream&lt;/code&gt; 引数として &lt;code&gt;null&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="7b607b82a2b60c884e3dbe9e1575c5d5d265ec4d" translate="yes" xml:space="preserve">
          <source>In order to create an instance of &lt;code&gt;Cipher&lt;/code&gt;, which encapsulates an instance of this &lt;code&gt;CipherSpi&lt;/code&gt; class, an application calls one of the &lt;a href=&quot;cipher#getInstance-java.lang.String-&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; factory methods of the &lt;a href=&quot;cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; engine class and specifies the requested</source>
          <target state="translated">この &lt;code&gt;CipherSpi&lt;/code&gt; クラスのインスタンスをカプセル化する &lt;code&gt;Cipher&lt;/code&gt; のインスタンスを作成するために、アプリケーションは&lt;a href=&quot;cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt;エンジンクラスの&lt;a href=&quot;cipher#getInstance-java.lang.String-&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt;ファクトリメソッドの1つを呼び出し、要求された</target>
        </trans-unit>
        <trans-unit id="64007bb6dc6fcb0629d5ca08ad2441e78ed9b545" translate="yes" xml:space="preserve">
          <source>In order to do matching a user's preferred locales to a set of language tags, &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt; defines two mechanisms: filtering and lookup. &lt;em&gt;Filtering&lt;/em&gt; is used to get all matching locales, whereas &lt;em&gt;lookup&lt;/em&gt; is to choose the best matching locale. Matching is done case-insensitively. These matching mechanisms are described in the following sections.</source>
          <target state="translated">ユーザーの優先ロケールと言語タグのセットを照合するために、&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647言語タグの照合では、&lt;/a&gt;フィルタリングとルックアップという2つのメカニズムが定義されています。&lt;em&gt;フィルタリング&lt;/em&gt;はすべての一致するロケールを取得するために使用され&lt;em&gt;ます&lt;/em&gt;が、&lt;em&gt;ルックアップ&lt;/em&gt;は最も一致するロケールを選択することです。マッチングは大文字と小文字を区別せずに行われます。これらの一致メカニズムについては、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="f843ab19b8395ea6dc81b7d0ba4b053d8211f31d" translate="yes" xml:space="preserve">
          <source>In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call &lt;code&gt;super.postDeregister()&lt;/code&gt; in its own &lt;code&gt;postDeregister&lt;/code&gt; implementation.</source>
          <target state="translated">RequireModelMBeanの適切な実行時セマンティクスを保証するために、このメソッドをオーバーロードまたはオーバーライドするRequiredModelMBeanのサブクラスは、独自の &lt;code&gt;postDeregister&lt;/code&gt; 実装で &lt;code&gt;super.postDeregister()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b37a3f7800e5557d0d455028524d0c955aed3436" translate="yes" xml:space="preserve">
          <source>In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call &lt;code&gt;super.postRegister(registrationDone)&lt;/code&gt; in its own &lt;code&gt;postRegister&lt;/code&gt; implementation.</source>
          <target state="translated">RequireModelMBeanの適切な実行時セマンティクスを保証するために、このメソッドをオーバーロードまたはオーバーライドするRequiredModelMBeanのサブクラスは、独自の &lt;code&gt;postRegister&lt;/code&gt; 実装で &lt;code&gt;super.postRegister(registrationDone)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2e25f9de51dfcb2d1f611315c4d8da31e3829630" translate="yes" xml:space="preserve">
          <source>In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call &lt;code&gt;super.preDeregister()&lt;/code&gt; in its own &lt;code&gt;preDeregister&lt;/code&gt; implementation.</source>
          <target state="translated">RequireModelMBeanの適切な実行時セマンティクスを保証するために、このメソッドをオーバーロードまたはオーバーライドするRequiredModelMBeanのサブクラスは、独自の &lt;code&gt;preDeregister&lt;/code&gt; 実装でsuper.preDeregister &lt;code&gt;super.preDeregister()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8be29ac641af15071548526b32a215df98b96343" translate="yes" xml:space="preserve">
          <source>In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call &lt;code&gt;super.preRegister(server, name)&lt;/code&gt; in its own &lt;code&gt;preRegister&lt;/code&gt; implementation.</source>
          <target state="translated">RequireModelMBeanの適切な実行時セマンティクスを保証するために、このメソッドをオーバーロードまたはオーバーライドするRequiredModelMBeanのサブクラスは、独自の &lt;code&gt;preRegister&lt;/code&gt; 実装でsuper.preRegister &lt;code&gt;super.preRegister(server, name)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="1d55e2199f2b3cc24d9c9bff8ece9cf2b2665ec8" translate="yes" xml:space="preserve">
          <source>In order to ensure that a reclaimable object remains so, the referent of a phantom reference may not be retrieved: The &lt;code&gt;get&lt;/code&gt; method of a phantom reference always returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">再利用可能なオブジェクトが確実に残るようにするために、ファントム参照のリファレントは取得されない場合があり &lt;code&gt;null&lt;/code&gt; 。ファントム参照の &lt;code&gt;get&lt;/code&gt; メソッドは常にnullを返します。</target>
        </trans-unit>
        <trans-unit id="a8da3317d1bcb4070918ebd341897147e3ca33b9" translate="yes" xml:space="preserve">
          <source>In order to explain the interaction between &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; calls, we must model the state transitions of a class value to take into account the alternation between uninitialized and initialized states. To do this, number these states sequentially from zero, and note that uninitialized (or removed) states are numbered with even numbers, while initialized (or re-initialized) states have odd numbers.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 呼び出しと &lt;code&gt;remove&lt;/code&gt; 呼び出しの間の相互作用を説明するために、クラス値の状態遷移をモデル化して、初期化されていない状態と初期化された状態の変化を考慮する必要があります。これを行うには、これらの状態にゼロから順番に番号を付けます。初期化されていない（または削除された）状態には偶数の番号が付けられ、初期化された（または再初期化された）状態の番号は奇数になります。</target>
        </trans-unit>
        <trans-unit id="b805d69ab19ad3f3d3727f4943dc0a7712be9ed2" translate="yes" xml:space="preserve">
          <source>In order to maintain backward compatibility, the pack file's version is set to accommodate the class files present in the input JAR file. In other words, the pack file version will be the latest, if the class files are the latest and conversely the pack file version will be the oldest if the class file versions are also the oldest. For intermediate class file versions the corresponding pack file version will be used. For example: If the input JAR-files are solely comprised of 1.5 (or lesser) class files, a 1.5 compatible pack file is produced. This will also be the case for archives that have no class files. If the input JAR-files contains a 1.6 class file, then the pack file version will be set to 1.6.</source>
          <target state="translated">後方互換性を維持するために、パックファイルのバージョンは入力JARファイルに存在するクラスファイルに対応するように設定されています。言い換えれば、クラスファイルのバージョンが最新であればパックファイルのバージョンは最新のものになり、逆にクラスファイルのバージョンも最古であればパックファイルのバージョンは最古のものになります。クラスファイルのバージョンが中間の場合は、対応するパックファイルのバージョンが使用されます。例えば、以下のようになります。入力された JAR ファイルが 1.5 (またはそれ以下)のクラスファイルのみで構成されている場合、1.5 互換のパックファイルが生成されます。これはクラスファイルを持たないアーカイブの場合も同様です。入力 JAR ファイルに 1.6 クラスファイルが含まれている場合、パックファイルのバージョンは 1.6 に設定されます。</target>
        </trans-unit>
        <trans-unit id="d3d65dfde4a90052c0dc072e889d8e093b67722e" translate="yes" xml:space="preserve">
          <source>In order to maintain compatibility with existing usage, Locale's constructors retain their behavior prior to the Java Runtime Environment version 1.7. The same is largely true for the &lt;code&gt;toString&lt;/code&gt; method. Thus Locale objects can continue to be used as they were. In particular, clients who parse the output of toString into language, country, and variant fields can continue to do so (although this is strongly discouraged), although the variant field will have additional information in it if script or extensions are present.</source>
          <target state="translated">既存の使用法との互換性を維持するために、ロケールのコンストラクターは、Javaランタイム環境バージョン1.7より前の動作を保持します。同じことが &lt;code&gt;toString&lt;/code&gt; メソッドにもほぼ当てはまります。したがって、Localeオブジェクトは従来どおり使用できます。特に、toStringの出力を言語、国、バリアントフィールドに解析するクライアントは、これを続行できます（ただし、これは強くお勧めしません）。ただし、スクリプトまたは拡張機能が存在する場合、バリアントフィールドには追加情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="8c341ab99b93cd08ae1cd8fe6f9e4f20ad47ad03" translate="yes" xml:space="preserve">
          <source>In order to obtain an invoker method for a particular type descriptor, use &lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.invoker&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt; API is also able to return a method handle to call &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt;, for any specified type descriptor .</source>
          <target state="translated">特定の型記述子の呼び出しメソッドを取得するには、&lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.invoker&lt;/code&gt; を&lt;/a&gt;使用します。&lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; &lt;/a&gt; APIも呼び出すメソッドハンドル返すことができる &lt;code&gt;invokeExact&lt;/code&gt; またはプレーン &lt;code&gt;invoke&lt;/code&gt; 任意の指定された型記述子のために、。</target>
        </trans-unit>
        <trans-unit id="21171aa5fee1cb0c9ac069787ce53f4fb32d4b2d" translate="yes" xml:space="preserve">
          <source>In order to supply localized descriptions of elements and attributes, a &lt;code&gt;ResourceBundle&lt;/code&gt; with a base name of &lt;code&gt;this.getClass().getName() + &quot;Resources&quot;&lt;/code&gt; should be supplied via the usual mechanism used by &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;. Briefly, the subclasser supplies one or more additional classes according to a naming convention (by default, the fully-qualified name of the subclass extending &lt;code&gt;IIMetadataFormatImpl&lt;/code&gt;, plus the string &quot;Resources&quot;, plus the country, language, and variant codes separated by underscores). At run time, calls to &lt;code&gt;getElementDescription&lt;/code&gt; or &lt;code&gt;getAttributeDescription&lt;/code&gt; will attempt to load such classes dynamically according to the supplied locale, and will use either the element name, or the element name followed by a '/' character followed by the attribute name as a key. This key will be supplied to the &lt;code&gt;ResourceBundle&lt;/code&gt;'s &lt;code&gt;getString&lt;/code&gt; method, and the resulting localized description of the node or attribute is returned.</source>
          <target state="translated">要素と属性のローカライズされた説明を提供するには、 &lt;code&gt;this.getClass().getName() + &quot;Resources&quot;&lt;/code&gt; ベース名を持つ &lt;code&gt;ResourceBundle&lt;/code&gt; を、ResourceBundle.getBundleで使用される通常のメカニズムを介して提供する必要があり &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 。簡単に言うと、サブクラス作成者は、命名規則に従って、1つ以上の追加クラスを提供します（デフォルトでは、 &lt;code&gt;IIMetadataFormatImpl&lt;/code&gt; を拡張するサブクラスの完全修飾名、文字列「Resources」、国、言語、およびアンダースコアで区切られたバリアントコード）。 。実行時に、 &lt;code&gt;getElementDescription&lt;/code&gt; または &lt;code&gt;getAttributeDescription&lt;/code&gt; の呼び出し提供されたロケールに従って動的にそのようなクラスをロードしようとし、要素名、または要素名の後に「/」文字が続き、その後に属性名がキーとして使用されます。このキーは &lt;code&gt;ResourceBundle&lt;/code&gt; の &lt;code&gt;getString&lt;/code&gt; メソッドに提供され、ノードまたは属性の結果のローカライズされた説明が返されます。</target>
        </trans-unit>
        <trans-unit id="b948f84b10418ce16ffc2d20202029b8cb2b47a0" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the specialized CRL format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the elements in the returned collection can be typecast to the &lt;code&gt;X509CRL&lt;/code&gt; class.</source>
          <target state="translated">この証明書ファクトリでサポートされている特殊なCRL形式を利用するために、返されたコレクションビューの各要素を対応するCRLクラスに型キャストできます。たとえば、この証明書ファクトリがX.509 CRLを実装している場合、返されたコレクションの要素を &lt;code&gt;X509CRL&lt;/code&gt; クラスに型キャストできます。</target>
        </trans-unit>
        <trans-unit id="80e182cdf13fd4175ed2ea3f937aa79716e1a63a" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the specialized CRL format supported by this certificate factory, the returned CRL object can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the returned CRL object can be typecast to the &lt;code&gt;X509CRL&lt;/code&gt; class.</source>
          <target state="translated">この証明書ファクトリでサポートされている特殊なCRL形式を利用するために、返されたCRLオブジェクトを対応するCRLクラスに型キャストできます。たとえば、この証明書ファクトリがX.509 CRLを実装している場合、返されたCRLオブジェクトを &lt;code&gt;X509CRL&lt;/code&gt; クラスに型キャストできます。</target>
        </trans-unit>
        <trans-unit id="01401a15feb01ba8cb6b8c41aeda0f7926741999" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the specialized certificate format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the elements in the returned collection can be typecast to the &lt;code&gt;X509Certificate&lt;/code&gt; class.</source>
          <target state="translated">この証明書ファクトリによってサポートされる特殊な証明書形式を利用するために、返されるコレクションビューの各要素を、対応する証明書クラスに型キャストできます。たとえば、この証明書ファクトリがX.509証明書を実装している場合、返されたコレクションの要素を &lt;code&gt;X509Certificate&lt;/code&gt; クラスに型キャストできます。</target>
        </trans-unit>
        <trans-unit id="dbcefe87046aa2f225b01d92aac3ff3e9e108c45" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the specialized certificate format supported by this certificate factory, the returned certificate object can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the returned certificate object can be typecast to the &lt;code&gt;X509Certificate&lt;/code&gt; class.</source>
          <target state="translated">この証明書ファクトリでサポートされている特殊な証明書形式を利用するために、返された証明書オブジェクトを対応する証明書クラスに型キャストできます。たとえば、この証明書ファクトリがX.509証明書を実装している場合、返される証明書オブジェクトは &lt;code&gt;X509Certificate&lt;/code&gt; クラスに型キャストできます。</target>
        </trans-unit>
        <trans-unit id="9662b58c0cd62c1e89334c9b72a6441f78201246" translate="yes" xml:space="preserve">
          <source>In other respects, a &lt;code&gt;VolatileCallSite&lt;/code&gt; is interchangeable with &lt;code&gt;MutableCallSite&lt;/code&gt;.</source>
          <target state="translated">他の点では、 &lt;code&gt;VolatileCallSite&lt;/code&gt; は &lt;code&gt;MutableCallSite&lt;/code&gt; と交換可能です。</target>
        </trans-unit>
        <trans-unit id="460f5295687a3c368d02873df1172a34752df226" translate="yes" xml:space="preserve">
          <source>In other words, an invocation of this method has exactly the same effect as invoking &lt;code&gt;new String(encode(src), StandardCharsets.ISO_8859_1)&lt;/code&gt;.</source>
          <target state="translated">つまり、このメソッドを呼び出すと、 &lt;code&gt;new String(encode(src), StandardCharsets.ISO_8859_1)&lt;/code&gt; を呼び出すのとまったく同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="61a5057b103f32156f27c9e72a6cd22cf425b56f" translate="yes" xml:space="preserve">
          <source>In other words, an invocation of this method of the form &lt;code&gt;dst.put(src)&lt;/code&gt; has exactly the same effect as the loop</source>
          <target state="translated">つまり、 &lt;code&gt;dst.put(src)&lt;/code&gt; という形式のこのメソッドを呼び出すと、ループとまったく同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="4a97cb7c262be521a458a66846dc006d3685b23d" translate="yes" xml:space="preserve">
          <source>In other words, an invocation of this method of the form &lt;code&gt;dst.put(src, off, len)&lt;/code&gt; has exactly the same effect as the loop</source>
          <target state="translated">つまり、このメソッドを &lt;code&gt;dst.put(src, off, len)&lt;/code&gt; という形式で呼び出すと、ループとまったく同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="12ad70fe4669e051fdd06980e62705cee95c894a" translate="yes" xml:space="preserve">
          <source>In other words, an invocation of this method of the form &lt;code&gt;dst.put(src, start, end)&lt;/code&gt; has exactly the same effect as the loop</source>
          <target state="translated">つまり、このメソッドを &lt;code&gt;dst.put(src, start, end)&lt;/code&gt; という形式で呼び出すと、ループとまったく同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="1a3bcb813c7ffe2873d728a358d0e842e6cd293f" translate="yes" xml:space="preserve">
          <source>In other words, an invocation of this method of the form &lt;code&gt;src.get(dst, off, len)&lt;/code&gt; has exactly the same effect as the loop</source>
          <target state="translated">つまり、このメソッドを &lt;code&gt;src.get(dst, off, len)&lt;/code&gt; の形式で呼び出すと、ループとまったく同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="aea96e5b08f931cbd38dfab20fcd644c9067f3df" translate="yes" xml:space="preserve">
          <source>In other words, it does not follow symbolic links, and visits all levels of the file tree.</source>
          <target state="translated">言い換えれば、シンボリックリンクには従わず、ファイルツリーのすべてのレベルを訪問します。</target>
        </trans-unit>
        <trans-unit id="c6ec43bec0b5d5c5060ec2f33c0616c173c9f676" translate="yes" xml:space="preserve">
          <source>In other words, it visits all levels of the file tree.</source>
          <target state="translated">言い換えれば、ファイルツリーのすべてのレベルを訪問します。</target>
        </trans-unit>
        <trans-unit id="1c26574665b279451ba4a488577fb7d302c5b7eb" translate="yes" xml:space="preserve">
          <source>In other words, the result is the same as the value of the expression:</source>
          <target state="translated">つまり、結果は式の値と同じになります。</target>
        </trans-unit>
        <trans-unit id="505244a8ed297e57506cfc02395be44d1d47281d" translate="yes" xml:space="preserve">
          <source>In other words, this method returns a &lt;code&gt;Byte&lt;/code&gt; object equal to the value of:</source>
          <target state="translated">つまり、このメソッドは次の値に等しい &lt;code&gt;Byte&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="1369f9d282c98b0db1a38a7bb381cd40063821b2" translate="yes" xml:space="preserve">
          <source>In other words, this method returns a &lt;code&gt;Long&lt;/code&gt; object equal to the value of:</source>
          <target state="translated">つまり、このメソッドは次の値に等しい &lt;code&gt;Long&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ba6028b1e1ba371422242dcd6a746ef6b3d2d511" translate="yes" xml:space="preserve">
          <source>In other words, this method returns a &lt;code&gt;Short&lt;/code&gt; object equal to the value of:</source>
          <target state="translated">つまり、このメソッドは次の値に等しい &lt;code&gt;Short&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="9a00355912a405656ac89583daae0b5f9ae8b495" translate="yes" xml:space="preserve">
          <source>In other words, this method returns an &lt;code&gt;Integer&lt;/code&gt; object equal to the value of:</source>
          <target state="translated">つまり、このメソッドは次の値に等しい &lt;code&gt;Integer&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="41833e830e1de28bbdb99be4725e3eef06b2861c" translate="yes" xml:space="preserve">
          <source>In particular this class implements certain required semantics of the Doc specification as follows:</source>
          <target state="translated">特に、このクラスは、以下のようにDoc仕様に必要なセマンティクスを実装しています。</target>
        </trans-unit>
        <trans-unit id="81bb4c56da829ee7121302c977f07bc6625c5153" translate="yes" xml:space="preserve">
          <source>In particular, if the two ObjectName instances have different domains then their order is the lexicographical order of the domains. The ordering of the key property list remains unspecified.</source>
          <target state="translated">特に、2つのObjectNameインスタンスが異なるドメインを持つ場合、その順序はドメインの辞書順となります。キー・プロパティ・リストの順序は未指定のままです。</target>
        </trans-unit>
        <trans-unit id="5894ea611cab3c030c00283ed49599698fcfcfad" translate="yes" xml:space="preserve">
          <source>In particular, operations on collection-views do</source>
          <target state="translated">特に、コレクションビューに対する操作は</target>
        </trans-unit>
        <trans-unit id="8661f32f8775daadf95377f956a10599c2e08e36" translate="yes" xml:space="preserve">
          <source>In particular, the current thread is required to issue a fresh read of the target from memory, and must not fail to see a recent update to the target by another thread.</source>
          <target state="translated">特に、現在のスレッドは、メモリからターゲットの新しい読み込みを発行する必要があり、他のスレッドによるターゲットの最近の更新を見落としてはいけません。</target>
        </trans-unit>
        <trans-unit id="005c3ba59a8712aeaee68de4ef1f56b993202750" translate="yes" xml:space="preserve">
          <source>In particular, the current thread may choose to reuse the result of a previous read of the target from memory, and may fail to see a recent update to the target by another thread.</source>
          <target state="translated">特に、現在のスレッドは、メモリからターゲットを以前に読み込んだ結果を再利用することを選択し、別のスレッドによるターゲットの最近の更新を見ることができないかもしれません。</target>
        </trans-unit>
        <trans-unit id="397ea1619f838bf6759858af4a9e7980654e1c14" translate="yes" xml:space="preserve">
          <source>In particular, the model makes a distinction between static language constructs, like the &lt;a href=&quot;element/package-summary&quot;&gt;element&lt;/a&gt; representing &lt;code&gt;java.util.Set&lt;/code&gt;, and the family of &lt;a href=&quot;type/package-summary&quot;&gt;types&lt;/a&gt; that may be associated with an element, like the raw type &lt;code&gt;java.util.Set&lt;/code&gt;, &lt;code&gt;java.util.Set&amp;lt;String&amp;gt;&lt;/code&gt;, and &lt;code&gt;java.util.Set&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">特に、モデルは、 &lt;code&gt;java.util.Set&lt;/code&gt; を表す&lt;a href=&quot;element/package-summary&quot;&gt;要素&lt;/a&gt;などの静的言語構成要素と、生の型 &lt;code&gt;java.util.Set&lt;/code&gt; 、 &lt;code&gt;java.util.Set&amp;lt;String&amp;gt;&lt;/code&gt; などの要素に関連付けられる可能性のある&lt;a href=&quot;type/package-summary&quot;&gt;型&lt;/a&gt;のファミリーを区別します。 Set &amp;lt;String&amp;gt;、および &lt;code&gt;java.util.Set&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d59d813a2d2c234fbceea2f8ac2972003697777" translate="yes" xml:space="preserve">
          <source>In particular, this class handles most or all of the details of byte order interpretation, buffering, mark/reset, discarding, closing, and disposing.</source>
          <target state="translated">特に、このクラスは、バイトオーダーの解釈、バッファリング、マーク/リセット、破棄、終了、廃棄のほとんどまたはすべての詳細を処理します。</target>
        </trans-unit>
        <trans-unit id="9e3426680847347aed69bf7f9bd9aa973db72a2e" translate="yes" xml:space="preserve">
          <source>In particular, this interface is intended to be a common abstraction for constructs that have different formats but important common uses. For example, different types of certificates, such as X.509 certificates and PGP certificates, share general certificate functionality (the need to encode and decode certificates) and some types of information, such as a public key, the principal whose key it is, and the guarantor guaranteeing that the public key is that of the specified principal. So an implementation of X.509 certificates and an implementation of PGP certificates can both utilize the Certificate interface, even though their formats and additional types and amounts of information stored are different.</source>
          <target state="translated">特に、このインタフェースは、形式は異なるが重要な共通の用途を持つ構成要素のための共通の抽象化であることを意図している。例えば、X.509 証明書や PGP 証明書などの異なるタイプの証明書は、一般的な証明書機能(証明書をエンコードしてデコードする必要がある)と、公開鍵、その鍵を持つプリンシパル、公開鍵が指定されたプリンシパルのものであることを保証する保証人などの情報を共有しています。したがって、X.509 証明書の実装と PGP 証明書の実装は、形式や保存される情報の種類や量が異なっていても、証明書インターフェイスを利用することができる。</target>
        </trans-unit>
        <trans-unit id="2e10efdd6b0f7e97bb954a45d7a40fb01f574c42" translate="yes" xml:space="preserve">
          <source>In particular, unrelated threads may fail to see the updated target until they perform a read from memory. Stronger guarantees can be created by putting appropriate operations into the bootstrap method and/or the target methods used at any given call site.</source>
          <target state="translated">特に、関係のないスレッドは、メモリからの読み込みを実行するまで、更新されたターゲットを見ることができないかもしれません。より強力な保証は、任意のコールサイトで使用されるブートストラップメソッドおよび/またはターゲットメソッドに適切な操作を入れることによって作成することができます。</target>
        </trans-unit>
        <trans-unit id="b8f69fa80998eb9c6dbcb7b318ca2c3c6434c7cd" translate="yes" xml:space="preserve">
          <source>In passing these statements to the output stream, where they will be executed, side effects are made to the &lt;code&gt;newInstance&lt;/code&gt;. In most cases this allows the problem of properties whose values depend on each other to actually help the serialization process by making the number of statements that need to be written to the output smaller. In general, the problem of handling interdependent properties is reduced to that of finding an order for the properties in a class such that no property value depends on the value of a subsequent property.</source>
          <target state="translated">これらのステートメントを実行する出力ストリームに渡す際に、 &lt;code&gt;newInstance&lt;/code&gt; に副作用が発生します。ほとんどの場合、これにより、値が相互に依存するプロパティの問題が、出力に書き込む必要のあるステートメントの数を少なくすることにより、シリアル化プロセスを実際に支援できます。一般に、相互依存プロパティの処理の問題は、クラス内のプロパティの順序を見つけることの問題にまで減少し、プロパティ値は後続のプロパティの値に依存しません。</target>
        </trans-unit>
        <trans-unit id="4594727a51da542b6483bfc22c69e4100582700e" translate="yes" xml:space="preserve">
          <source>In performing an operation on a name that spans multiple namespaces, a context from one naming system may need to pass the operation on to the next naming system. The context implementation does this by first constructing a &lt;code&gt;CannotProceedException&lt;/code&gt; containing information pinpointing how far it has proceeded. It then obtains a continuation context from JNDI by calling &lt;code&gt;getContinuationContext&lt;/code&gt;. The context implementation should then resume the context operation by invoking the same operation on the continuation context, using the remainder of the name that has not yet been resolved.</source>
          <target state="translated">複数の名前空間にまたがる名前で操作を実行する場合、1つのネーミングシステムのコンテキストが次のネーミングシステムに操作を渡す必要がある場合があります。コンテキスト実装は、最初に、それがどこまで進んだかを正確に示す情報を含む &lt;code&gt;CannotProceedException&lt;/code&gt; を作成することによってこれを行います。次に、 &lt;code&gt;getContinuationContext&lt;/code&gt; を呼び出して、JNDIから継続コンテキストを取得します。次に、コンテキスト実装は、まだ解決されていない残りの名前を使用して、継続コンテキストで同じ操作を呼び出すことにより、コンテキスト操作を再開する必要があります。</target>
        </trans-unit>
        <trans-unit id="12abb72312e94f1909297d8e075f5705219a1c91" translate="yes" xml:space="preserve">
          <source>In practical terms, the &lt;code&gt;Chronology&lt;/code&gt; instance also acts as a factory. The &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt; method allows an instance to be looked up by identifier, while the &lt;a href=&quot;chronology#ofLocale-java.util.Locale-&quot;&gt;&lt;code&gt;ofLocale(Locale)&lt;/code&gt;&lt;/a&gt; method allows lookup by locale.</source>
          <target state="translated">実際には、 &lt;code&gt;Chronology&lt;/code&gt; インスタンスはファクトリーとしても機能します。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;ながら方法は、インスタンス識別子によって参照されることを可能にする&lt;a href=&quot;chronology#ofLocale-java.util.Locale-&quot;&gt; &lt;code&gt;ofLocale(Locale)&lt;/code&gt; &lt;/a&gt;メソッドは、ロケールによって参照可能。</target>
        </trans-unit>
        <trans-unit id="796f045d0c1c5aaebd129b5c1ce4d6bab163576c" translate="yes" xml:space="preserve">
          <source>In practice, the difference between a plain &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt;, etc, does not show up because operations in the JMX API are always on Java objects, not primitives. However, the difference &lt;em&gt;does&lt;/em&gt; show up with arrays.</source>
          <target state="translated">実際には、JMX APIの操作は常にプリミティブではなくJavaオブジェクトに対して行われるため、プレーンな &lt;code&gt;int&lt;/code&gt; と &lt;code&gt;Integer&lt;/code&gt; などの違いはわかりません。ただし、違い&lt;em&gt;は&lt;/em&gt;配列で現れます。</target>
        </trans-unit>
        <trans-unit id="8ae5216b4c4be405db42d2e5ded9009a76bacd15" translate="yes" xml:space="preserve">
          <source>In rare cases, TCP servers need to act in the SSL client mode on newly accepted connections. For example, FTP clients acquire server sockets and listen there for reverse connections from the server. An FTP client would use an SSLServerSocket in &quot;client&quot; mode to accept the reverse connection while the FTP server uses an SSLSocket with &quot;client&quot; mode disabled to initiate the connection. During the resulting handshake, existing SSL sessions may be reused.</source>
          <target state="translated">まれに、TCP サーバが新たに受け付けた接続に対して SSL クライアントモードで動作する必要があります。例えば、FTPクライアントはサーバのソケットを取得し、サーバからの逆接続をリッスンします。FTPクライアントは &quot;client &quot;モードのSSLServerSocketを使って逆接続を受け入れ、FTPサーバは &quot;client &quot;モードを無効にしたSSLSocketを使って接続を開始します。結果のハンドシェイク中に、既存のSSLセッションを再利用することができます。</target>
        </trans-unit>
        <trans-unit id="7834b390e944da71c10ffa54e9f786537a580ef7" translate="yes" xml:space="preserve">
          <source>In rare circumstances the virtual machine may</source>
          <target state="translated">まれな状況では、仮想マシンは</target>
        </trans-unit>
        <trans-unit id="177a25f922fe44253f5e5b34f55196c5dbfa3006" translate="yes" xml:space="preserve">
          <source>In server mode, unless the return &lt;a href=&quot;../../../java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; is empty, the server should use the requested server names to guide its selection of an appropriate authentication certificate, and/or other aspects of security policy.</source>
          <target state="translated">サーバーモードでは、戻り&lt;a href=&quot;../../../java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;が空でない限り、サーバーは要求されたサーバー名を使用して、適切な認証証明書やセキュリティポリシーの他の側面の選択をガイドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9b3839dadf4c5e906a621c1be0df22a48774d481" translate="yes" xml:space="preserve">
          <source>In some cases use of this permission may affect other applications because manipulation of a mixer affects the audio for all lines using that mixer. This permission can enable an applet or application to eavesdrop on a user.</source>
          <target state="translated">ミキサーを操作すると、そのミキサーを使用しているすべてのラインのオーディオに影響を与えるため、このパーミッションを使用すると他のアプリケーションに影響を与える場合があります。このパーミッションを使用すると、アプレットやアプリケーションがユーザーを盗聴できるようになります。</target>
        </trans-unit>
        <trans-unit id="a848177f0354f031651d0cc5a0c1339e1883a198" translate="yes" xml:space="preserve">
          <source>In some cases use of this permission may affect other applications because the audio from one line may be mixed with other audio being played on the system, or because manipulation of a mixer affects the audio for all lines using that mixer.</source>
          <target state="translated">あるラインのオーディオがシステムで再生されている他のオーディオと混ざってしまったり、ミキサーを操作するとそのミキサーを使用しているすべてのラインのオーディオに影響を与えるため、この許可を使用すると他のアプリケーションに影響を与える場合があります。</target>
        </trans-unit>
        <trans-unit id="5afcd4bc923f5719f106155a0a4d4e2a58c6b53a" translate="yes" xml:space="preserve">
          <source>In some cases, a non-blocking read (or skip) may appear to be blocked when it is merely slow, for example when reading large files over slow networks.</source>
          <target state="translated">場合によっては、例えば遅いネットワーク上で大きなファイルを読む場合など、単に遅いだけの場合には、ノンブロッキングの読み取り(またはスキップ)がブロックされているように見えることがあります。</target>
        </trans-unit>
        <trans-unit id="e3fa68306b77ec8a7b03a1c5eb53b2702e05a9e8" translate="yes" xml:space="preserve">
          <source>In some cases, access between nested classes is obtained by the Java compiler by creating an wrapper method to access a private method of another class in the same top-level declaration. For example, a nested class &lt;code&gt;C.D&lt;/code&gt; can access private members within other related classes such as &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;C.D.E&lt;/code&gt;, or &lt;code&gt;C.B&lt;/code&gt;, but the Java compiler may need to generate wrapper methods in those related classes. In such cases, a &lt;code&gt;Lookup&lt;/code&gt; object on &lt;code&gt;C.E&lt;/code&gt; would be unable to those private members. A workaround for this limitation is the &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;&lt;code&gt;Lookup.in&lt;/code&gt;&lt;/a&gt; method, which can transform a lookup on &lt;code&gt;C.E&lt;/code&gt; into one on any of those other classes, without special elevation of privilege.</source>
          <target state="translated">場合によっては、ネストされたクラス間のアクセスは、同じトップレベル宣言内の別のクラスのプライベートメソッドにアクセスするラッパーメソッドを作成することにより、Javaコンパイラーによって取得されます。たとえば、ネストされたクラス &lt;code&gt;C.D&lt;/code&gt; は、 &lt;code&gt;C&lt;/code&gt; 、 &lt;code&gt;C.D.E&lt;/code&gt; 、 &lt;code&gt;C.B&lt;/code&gt; などの他の関連クラス内のプライベートメンバーにアクセスできますが、Javaコンパイラーはそれらの関連クラスでラッパーメソッドを生成する必要がある場合があります。そのような場合、 &lt;code&gt;C.E&lt;/code&gt; &lt;code&gt;Lookup&lt;/code&gt; オブジェクトはそれらのプライベートメンバーにはできません。この制限の回避策は&lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt; &lt;code&gt;Lookup.in&lt;/code&gt; &lt;/a&gt;メソッドです。このメソッドは、特別な特権の昇格なしで、 &lt;code&gt;C.E&lt;/code&gt; ルックアップを他のクラスのいずれかに変換できます。</target>
        </trans-unit>
        <trans-unit id="d5cbaf96fc9f77ef0b3f4f97b798f3b481096d3a" translate="yes" xml:space="preserve">
          <source>In some cases, adding the amount can cause the resulting date to become invalid. For example, adding one month to 31st January would result in 31st February. In cases like this, the unit is responsible for resolving the date. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">場合によっては、金額を足すと、結果の日付が無効になることがあります。例えば、1月31日に1ヶ月分を足すと2月31日になってしまいます。このような場合、ユニットは日付を解決する責任があります。通常、この例では2月の最後の有効日である前の有効な日付が選択されます。</target>
        </trans-unit>
        <trans-unit id="79dbde154ada935a1511e0a5ad056015e1ce81bb" translate="yes" xml:space="preserve">
          <source>In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then adding one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">フィールドの変更が完全に定義されていない場合があります。例えば、対象のオブジェクトが1月31日を表す日付であれば、1ヶ月を追加しても不明瞭になります。このような場合、フィールドは結果を解決する責任があります。通常、この例では2月の最終有効日である前の有効な日付が選択されます。</target>
        </trans-unit>
        <trans-unit id="bd10444116ccb781851e313beb7e47d91bc0acac" translate="yes" xml:space="preserve">
          <source>In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then changing the month to February would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">フィールドの変更が完全に定義されていない場合があります。例えば、対象のオブジェクトが1月31日を表す日付であれば、月を2月に変更しても不明瞭になります。このような場合、フィールドは結果を解決する責任があります。通常、この例では2月の最終有効日である前の有効な日付が選択されます。</target>
        </trans-unit>
        <trans-unit id="d624716cd77a5fbae34ea08ee2b7ffe4d4819511" translate="yes" xml:space="preserve">
          <source>In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then changing the month to February would be unclear. In cases like this, the implementation is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">フィールドの変更が完全に定義されていない場合があります。例えば、対象のオブジェクトが1月31日を表す日付である場合、月を2月に変更しても不明瞭になってしまいます。このような場合、実装は結果を解決する責任があります。通常、実装は前の有効な日付を選択しますが、この例では2月の最終有効日となります。</target>
        </trans-unit>
        <trans-unit id="c3b9cc17b785ff40a460004eb2e4df03a0601252" translate="yes" xml:space="preserve">
          <source>In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st March, then subtracting one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">フィールドの変更が完全に定義されていない場合があります。例えば、対象のオブジェクトが3月31日を表す日付であれば、1ヶ月分を引いても不明瞭になってしまいます。このような場合、フィールドは結果を解決する責任があります。通常は前の有効な日付を選択しますが、この例では2月の最終有効日となります。</target>
        </trans-unit>
        <trans-unit id="9633ad6bd00dc94ae7a6b39be76eec4e5fff7990" translate="yes" xml:space="preserve">
          <source>In some cases, changing the specified field can cause the resulting date to become invalid, such as changing the month from 31st January to February would make the day-of-month invalid. In cases like this, the field is responsible for resolving the date. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">場合によっては、指定したフィールドを変更すると、結果の日付が無効になってしまうことがあります。このような場合、フィールドは日付を解決する責任があります。通常は前の有効な日付が選択され、この例では2月の最後の有効な日になります。</target>
        </trans-unit>
        <trans-unit id="463fb2df4e64e20bb07cdf986fe873e31fa41b06" translate="yes" xml:space="preserve">
          <source>In some cases, changing the specified field can cause the resulting date-time to become invalid, such as changing the month from 31st January to February would make the day-of-month invalid. In cases like this, the field is responsible for resolving the date. Typically it will choose the previous valid date, which would be the last valid day of February in this example.</source>
          <target state="translated">場合によっては、指定されたフィールドを変更すると、結果の日付時刻が無効になることがあります。例えば、1月31日から2月に変更すると、月の曜日が無効になるなどです。このような場合、フィールドは日付を解決する責任があります。通常は前の有効な日付が選択され、この例では2月の最後の有効な日になります。</target>
        </trans-unit>
        <trans-unit id="76ad22f41ac4d331fd71edfa827b6a2c78d142d0" translate="yes" xml:space="preserve">
          <source>In some cases, initialization parameters other than a keystore and password may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; as defined by the provider. The provider can then call the specified methods in the &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; implementation to obtain the needed information.</source>
          <target state="translated">プロバイダーによっては、キーストアとパスワード以外の初期化パラメーターが必要な場合があります。その特定のプロバイダーのユーザーは、プロバイダーによって定義された適切な &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; の実装を渡す必要があります。次に、プロバイダーは &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; 実装の指定されたメソッドを呼び出して、必要な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="3ec5bdcecc9af12d3c9fc36893ac4dcc77cab3ee" translate="yes" xml:space="preserve">
          <source>In some cases, initialization parameters other than a keystore and password may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; as defined by the provider. The provider can then call the specified methods in the ManagerFactoryParameters implementation to obtain the needed information.</source>
          <target state="translated">プロバイダーによっては、キーストアとパスワード以外の初期化パラメーターが必要な場合があります。その特定のプロバイダーのユーザーは、プロバイダーによって定義された適切な &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; の実装を渡す必要があります。次に、プロバイダーはManagerFactoryParameters実装の指定されたメソッドを呼び出して、必要な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="5ee40fd23ac237d6d567e29c474e7a44c66c598d" translate="yes" xml:space="preserve">
          <source>In some cases, initialization parameters other than a keystore may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; as defined by the provider. The provider can then call the specified methods in the &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; implementation to obtain the needed information.</source>
          <target state="translated">プロバイダーによっては、キーストア以外の初期化パラメーターが必要な場合があります。その特定のプロバイダーのユーザーは、プロバイダーによって定義された適切な &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; の実装を渡す必要があります。次に、プロバイダーは &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; 実装の指定されたメソッドを呼び出して、必要な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="3943e5fcf21e0c58931ef360cbd3da2eb118dd9f" translate="yes" xml:space="preserve">
          <source>In some cases, initialization parameters other than keystores may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate sub-interface of this class as defined by the provider. The provider can then call the specified methods in the &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; implementation to obtain the needed information.</source>
          <target state="translated">プロバイダーによっては、キーストア以外の初期化パラメーターが必要な場合があります。その特定のプロバイダーのユーザーは、プロバイダーによって定義されたこのクラスの適切なサブインターフェースの実装を渡すことが期待されています。次に、プロバイダーは &lt;code&gt;ManagerFactoryParameters&lt;/code&gt; 実装の指定されたメソッドを呼び出して、必要な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="908a46abad9690abd6da29405c9fa1fb549231ef" translate="yes" xml:space="preserve">
          <source>In some contexts, an attribute set is read-only, which means that the client is only allowed to examine an attribute set's contents but not change them. In other contexts, the attribute set is read-write, which means that the client is allowed both to examine and to change an attribute set's contents. For a read-only attribute set, calling a mutating operation throws an &lt;code&gt;UnmodifiableSetException&lt;/code&gt;.</source>
          <target state="translated">一部のコンテキストでは、属性セットは読み取り専用です。つまり、クライアントは属性セットの内容を調べることのみが許可され、変更はできません。他のコンテキストでは、属性セットは読み書き可能です。つまり、クライアントは属性セットの内容を調べて変更することができます。読み取り専用の属性セットの場合、変更操作を呼び出すと &lt;code&gt;UnmodifiableSetException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="ce412aedb62ca8d47d285d3295efb33f716cb96d" translate="yes" xml:space="preserve">
          <source>In some contexts, the client is only allowed to examine an attribute set's contents but not change them (the set is read-only). In other places, the client is allowed both to examine and to change an attribute set's contents (the set is read-write). For a read-only attribute set, calling a mutating operation throws an UnmodifiableSetException.</source>
          <target state="translated">いくつかの文脈では、クライアントは属性セットの内容を調べることはできても、変更することはできません (セットは読み取り専用です)。他の場所では、クライアントは属性セットの内容を調べることと変更することの両方を許可されています(セットは読み書き可能です)。読み取り専用の属性セットの場合、突然変異操作を呼び出すと UnmodifiableSetException が発生します。</target>
        </trans-unit>
        <trans-unit id="885ee299391385d6ba4dabda1e81289629f68f72" translate="yes" xml:space="preserve">
          <source>In source code, a call to a signature polymorphic method will compile, regardless of the requested symbolic type descriptor. As usual, the Java compiler emits an &lt;code&gt;invokevirtual&lt;/code&gt; instruction with the given symbolic type descriptor against the named method. The unusual part is that the symbolic type descriptor is derived from the actual argument and return types, not from the method declaration.</source>
          <target state="translated">ソースコードでは、要求されたシンボリックタイプ記述子に関係なく、シグネチャポリモーフィックメソッドの呼び出しがコンパイルされます。いつものように、Javaコンパイラーは、指定されたメソッドに対して、指定されたシンボリック型記述子を持つ &lt;code&gt;invokevirtual&lt;/code&gt; 命令を発行します。異常な部分は、シンボリック型記述子がメソッド宣言からではなく、実際の引数と戻り値の型から派生していることです。</target>
        </trans-unit>
        <trans-unit id="1b915bf0ccf792776f6e76bfd8e1c08e30939ddb" translate="yes" xml:space="preserve">
          <source>In strict parsing mode, the minimum number of parsed digits is &lt;code&gt;minWidth&lt;/code&gt; and the maximum is &lt;code&gt;maxWidth&lt;/code&gt;. In lenient parsing mode, the minimum number of parsed digits is one and the maximum is 19 (except as limited by adjacent value parsing).</source>
          <target state="translated">厳密な解析モードでは、解析される数字の最小数は &lt;code&gt;minWidth&lt;/code&gt; で、最大数は &lt;code&gt;maxWidth&lt;/code&gt; です。緩やかな解析モードでは、解析される数字の最小数は1で、最大数は19です（隣接する値の解析によって制限される場合を除く）。</target>
        </trans-unit>
        <trans-unit id="e32a1c5a51d2f15051e0db94aa6b8b5a7875526d" translate="yes" xml:space="preserve">
          <source>In strict parsing, any sign will be rejected. In lenient parsing, any sign will be accepted unless the width is fixed.</source>
          <target state="translated">厳密なパースでは、どのような符号も拒否されます。甘い構文解析では、幅が固定されていない限り、どのような符号も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="b74dc38e8b9a0ecab2c681d95be38243e38c6415" translate="yes" xml:space="preserve">
          <source>In strict parsing, the absence of a sign will be rejected. In lenient parsing, any sign will be accepted, with the absence of a sign treated as a positive number.</source>
          <target state="translated">厳密な構文解析では、符号がない場合は拒否されます。甘い構文解析では、符号がない場合は正の数として扱われ、どのような符号も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="5c8071a6cb7a80c6d715aae673f0d54a56ce4046" translate="yes" xml:space="preserve">
          <source>In strict parsing, the negative sign will be accepted and the positive sign rejected. In lenient parsing, any sign will be accepted.</source>
          <target state="translated">厳密な解析では、負の符号は受け入れられ、正の符号は拒否されます。甘い構文解析では、どのような符号も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="67fe828640d1605e5d14133978083d2888d9dcd4" translate="yes" xml:space="preserve">
          <source>In strict parsing, the sign will be rejected unless the pad width is exceeded. In lenient parsing, any sign will be accepted, with the absence of a sign treated as a positive number.</source>
          <target state="translated">厳密な解析では、パッド幅を超えない限り符号は拒否されます。甘い構文解析では、符号がない場合は正の数として扱われ、どのような符号も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="214ba9516aa4a0067c4a338c78f5324a4ab75fa7" translate="yes" xml:space="preserve">
          <source>In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このような場合、例外がスローされます。例外の正確な性質はシステムに依存しますが、常に&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; の&lt;/a&gt;サブクラスになります。</target>
        </trans-unit>
        <trans-unit id="8067decfb6c0c5c43694b67ad35b84389b8af373" translate="yes" xml:space="preserve">
          <source>In summary, implementations must behave in a manner equivalent to this pseudo-code:</source>
          <target state="translated">要約すると、実装はこの擬似コードと同等の動作をしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed941580cb00e2437d3c9ed1b978822bc3ddf2fb" translate="yes" xml:space="preserve">
          <source>In terms of design, this class should be viewed primarily as the combination of a &lt;code&gt;LocalDateTime&lt;/code&gt; and a &lt;code&gt;ZoneId&lt;/code&gt;. The &lt;code&gt;ZoneOffset&lt;/code&gt; is a vital, but secondary, piece of information, used to ensure that the class represents an instant, especially during a daylight savings overlap.</source>
          <target state="translated">設計の面では、このクラスは主に &lt;code&gt;LocalDateTime&lt;/code&gt; とZoneIdの組み合わせと見なす必要があり &lt;code&gt;ZoneId&lt;/code&gt; 。 &lt;code&gt;ZoneOffset&lt;/code&gt; は、特に貯蓄が重なる日光中、クラスが瞬間を表していることを確認するために使用される情報の重要な、しかし二次片、です。</target>
        </trans-unit>
        <trans-unit id="76eb19d7c964e4c05ae134c3d7adb2c9eb092b77" translate="yes" xml:space="preserve">
          <source>In terms of the Java Memory Model, this operation performs a synchronization action which is comparable in effect to the writing of a volatile variable by the current thread, and an eventual volatile read by every other thread that may access one of the affected call sites.</source>
          <target state="translated">Javaメモリ・モデルの観点からは、この操作は、現在のスレッドによる揮発性変数の書き込みと、影響を受けるコール・サイトの1つにアクセスする可能性のある他のすべてのスレッドによる最終的な揮発性の読み取りに匹敵する同期動作を実行します。</target>
        </trans-unit>
        <trans-unit id="835cfd0b944daf64dbddb89f8c199c78f037cfd7" translate="yes" xml:space="preserve">
          <source>In that case it is up to the user to call it to maintain the consistency of the relations. To be kept in mind that if an MBean is unregistered and the purge not done immediately, if the ObjectName is reused and assigned to another MBean referenced in a relation, calling manually this purgeRelations() method will cause trouble, as will consider the ObjectName as corresponding to the unregistered MBean, not seeing the new one.</source>
          <target state="translated">この場合、リレーションの整合性を維持するためには、ユーザーがこれを呼び出す必要があります。注意すべき点は、MBean が未登録で、すぐにパージが行われない場合、ObjectName が再利用され、リレーションで参照されている別の MBean に割り当てられている場合、この purgeRelations()メソッドを手動で呼び出すと、ObjectName が未登録の MBean に対応しているとみなされ、新しい MBean が表示されないという問題が発生するということです。</target>
        </trans-unit>
        <trans-unit id="8ebc8aa5c940b2b5ec99046211ecd0bca8ea5a52" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../nio/channels/package-summary&quot;&gt;&lt;code&gt;channels&lt;/code&gt;&lt;/a&gt; package, the &lt;a href=&quot;../nio/channels/networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface defines the &lt;a href=&quot;../nio/channels/networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../nio/channels/networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query the channel's socket options.</source>
          <target state="translated">で&lt;a href=&quot;../nio/channels/package-summary&quot;&gt; &lt;code&gt;channels&lt;/code&gt; &lt;/a&gt;パッケージ、&lt;a href=&quot;../nio/channels/networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; の&lt;/a&gt;インターフェースが定義されて&lt;a href=&quot;../nio/channels/networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;し、&lt;a href=&quot;../nio/channels/networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; コマンド&lt;/a&gt;セットにする方法と、クエリチャネルのソケットオプションを。</target>
        </trans-unit>
        <trans-unit id="b62cb44c2b6302f47dd64bfc710a64f101a0b462" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;getAttributes()&lt;/code&gt; and &lt;code&gt;search()&lt;/code&gt; methods, you can specify that all attributes associated with the requested objects be returned by supply &lt;code&gt;null&lt;/code&gt; as the list of attributes to return. The attributes returned do &lt;em&gt;not&lt;/em&gt; include operational attributes. In order to retrieve operational attributes, you must name them explicitly.</source>
          <target state="translated">&lt;code&gt;getAttributes()&lt;/code&gt; と &lt;code&gt;search()&lt;/code&gt; 方法を、あなたは要求されたオブジェクトに関連付けられたすべての属性が供給によって返されるように指定することができ &lt;code&gt;null&lt;/code&gt; 復帰への属性のリストとして。返される属性には、操作属性&lt;em&gt;は&lt;/em&gt;含まれませ&lt;em&gt;ん&lt;/em&gt;。運用属性を取得するには、明示的に名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="65574745feadc55e1e05a1c122606bd23b2ae9c4" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;getAttributes()&lt;/code&gt; and &lt;code&gt;search()&lt;/code&gt; methods, you can supply the attributes to return by supplying a list of attribute names (strings). The attributes that you get back might not have the same names as the attribute names you have specified. This is because some directories support features that cause them to return other attributes. Such features include attribute subclassing, attribute name synonyms, and attribute language codes.</source>
          <target state="translated">中 &lt;code&gt;getAttributes()&lt;/code&gt; および &lt;code&gt;search()&lt;/code&gt; メソッドは、あなたは属性名（文字列）のリストを供給することによって返すように属性を供給することができます。返される属性は、指定した属性名と同じ名前ではない可能性があります。これは、一部のディレクトリが他の属性を返す機能をサポートしているためです。このような機能には、属性のサブクラス化、属性名の同義語、および属性の言語コードが含まれます。</target>
        </trans-unit>
        <trans-unit id="bbbf3a71704058ced1b5b8411ec253780bd68226" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;JNDI form&lt;/em&gt;, the URL indicates &lt;em&gt;where to find an RMI stub for the connector&lt;/em&gt;. This RMI stub is a Java object of type &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; that gives remote access to the connector server. With this address form, the RMI stub is obtained from an external directory entry included in the URL. An external directory is any directory recognized by &lt;a href=&quot;../../../naming/package-summary&quot;&gt;&lt;code&gt;JNDI&lt;/code&gt;&lt;/a&gt;, typically the RMI registry, LDAP, or COS Naming.</source>
          <target state="translated">で&lt;em&gt;JNDIフォーム&lt;/em&gt;、URLを示し&lt;em&gt;、コネクタのRMIスタブを検索する場所&lt;/em&gt;。このRMIスタブは、コネクタサーバーへのリモートアクセスを提供するタイプ&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; の&lt;/a&gt; Javaオブジェクトです。このアドレス形式では、RMIスタブはURLに含まれる外部ディレクトリエントリから取得されます。外部ディレクトリは、&lt;a href=&quot;../../../naming/package-summary&quot;&gt; &lt;code&gt;JNDI&lt;/code&gt; &lt;/a&gt;によって認識される任意のディレクトリであり、通常はRMIレジストリ、LDAP、またはCOSネーミングです。</target>
        </trans-unit>
        <trans-unit id="da195228b955a3ad9cf4e29226a227ba11eca748" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;encoded form&lt;/em&gt;, the URL directly includes the information needed to connect to the connector server. When using RMI/JRMP, the encoded form is the serialized RMI stub for the server object, encoded using BASE64 without embedded newlines. When using RMI/IIOP, the encoded form is the CORBA IOR for the server object.</source>
          <target state="translated">で&lt;em&gt;エンコードされた形式&lt;/em&gt;、URLを直接コネクタサーバーに接続するために必要な情報が含まれています。RMI / JRMPを使用する場合、エンコードされた形式は、埋め込まれた改行なしでBASE64を使用してエンコードされた、サーバーオブジェクトのシリアル化されたRMIスタブです。RMI / IIOPを使用する場合、エンコードされた形式はサーバーオブジェクトのCORBA IORです。</target>
        </trans-unit>
        <trans-unit id="a77ab9d4544f54d35b2613f822310c541fff6180" translate="yes" xml:space="preserve">
          <source>In the Java Print Service API, an attribute category is represented by a Java class implementing the &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt; interface. Attribute values are instances of such a class or one of its subclasses. For example, to specify the number of copies, an application constructs an instance of the &lt;a href=&quot;standard/copies&quot;&gt;Copies&lt;/a&gt; class with the number of desired copies and uses the &lt;code&gt;Copies&lt;/code&gt; instance as part of the print request. In this case, the &lt;code&gt;Copies&lt;/code&gt; class represents the attribute category, and the &lt;code&gt;Copies&lt;/code&gt; instance represents the attribute value.</source>
          <target state="translated">Java Print Service APIでは、属性カテゴリは、&lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;インターフェースを実装するJavaクラスによって表されます。属性値は、そのようなクラスまたはそのサブクラスの1つのインスタンスです。たとえば、アプリケーションは部数を指定するために、必要な部数で&lt;a href=&quot;standard/copies&quot;&gt;Copies&lt;/a&gt;クラスのインスタンスを作成し、印刷要求の一部として &lt;code&gt;Copies&lt;/code&gt; インスタンスを使用します。この場合、 &lt;code&gt;Copies&lt;/code&gt; クラスは属性カテゴリを表し、 &lt;code&gt;Copies&lt;/code&gt; インスタンスは属性値を表します。</target>
        </trans-unit>
        <trans-unit id="67a8902a6ba14e2b0903baaddb1578c58648db1e" translate="yes" xml:space="preserve">
          <source>In the Java SE API documentation, &lt;em&gt;Unicode code point&lt;/em&gt; is used for character values in the range between U+0000 and U+10FFFF, and &lt;em&gt;Unicode code unit&lt;/em&gt; is used for 16-bit &lt;code&gt;char&lt;/code&gt; values that are code units of the &lt;em&gt;UTF-16&lt;/em&gt; encoding. For more information on Unicode terminology, refer to the &lt;a href=&quot;http://www.unicode.org/glossary/&quot;&gt;Unicode Glossary&lt;/a&gt;.</source>
          <target state="translated">Java SE APIドキュメントでは、&lt;em&gt;Unicodeコードポイント&lt;/em&gt;はU + 0000からU + 10FFFFまでの範囲の文字値に使用され、&lt;em&gt;Unicodeコード単位&lt;/em&gt;は&lt;em&gt;UTF-16&lt;/em&gt;エンコーディングのコード単位である16ビット &lt;code&gt;char&lt;/code&gt; 値に使用されます。Unicodeの用語の詳細については、&lt;a href=&quot;http://www.unicode.org/glossary/&quot;&gt;Unicode Glossaryを&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d6c6f9ca13ab5451799666ab96c66ed377dbd22" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;remove&lt;/code&gt; calls, a class value has a simple state diagram: uninitialized and initialized. When &lt;code&gt;remove&lt;/code&gt; calls are made, the rules for value observation are more complex. See the documentation for &lt;a href=&quot;classvalue#remove-java.lang.Class-&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; 呼び出しがない場合、クラス値には単純な状態図（初期化されていない状態と初期化されている状態）があります。ときに &lt;code&gt;remove&lt;/code&gt; コールが行われ、値の観測のための規則は、より複雑です。詳細については、&lt;a href=&quot;classvalue#remove-java.lang.Class-&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a254ee0af676fe77ed6ba824317943df316a8c7a" translate="yes" xml:space="preserve">
          <source>In the absence of other alternatives, the method may throw an unchecked &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;, which will be propagated to the caller of &lt;code&gt;execute&lt;/code&gt;.</source>
          <target state="translated">他の選択肢がない場合、メソッドは未チェックの&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; を&lt;/a&gt;スローする場合があり、それは &lt;code&gt;execute&lt;/code&gt; の呼び出し元に伝播されます。</target>
        </trans-unit>
        <trans-unit id="e0fcd323662ee68a5bf74deb7c77fe408fd53411" translate="yes" xml:space="preserve">
          <source>In the addition to &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt;, the following options may be present:</source>
          <target state="translated">&lt;code&gt;READ&lt;/code&gt; および &lt;code&gt;WRITE&lt;/code&gt; に加えて、次のオプションが存在する場合があります。</target>
        </trans-unit>
        <trans-unit id="82201373a2610441e998008c462731da12155c0d" translate="yes" xml:space="preserve">
          <source>In the case of &lt;a href=&quot;deflater#FULL_FLUSH&quot;&gt;&lt;code&gt;FULL_FLUSH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;SYNC_FLUSH&lt;/code&gt;&lt;/a&gt;, if the return value is &lt;code&gt;len&lt;/code&gt;, the space available in output buffer &lt;code&gt;b&lt;/code&gt;, this method should be invoked again with the same &lt;code&gt;flush&lt;/code&gt; parameter and more output space.</source>
          <target state="translated">以下の場合に&lt;a href=&quot;deflater#FULL_FLUSH&quot;&gt; &lt;code&gt;FULL_FLUSH&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;SYNC_FLUSH&lt;/code&gt; &lt;/a&gt;戻り値がされた場合、 &lt;code&gt;len&lt;/code&gt; は、出力バッファ内の利用可能なスペース &lt;code&gt;b&lt;/code&gt; 、この方法は同じで再び呼び出されるべき &lt;code&gt;flush&lt;/code&gt; パラメータ及び複数の出力領域。</target>
        </trans-unit>
        <trans-unit id="08a4a6b6701bb5e9bce132b1aa14d72ca141be81" translate="yes" xml:space="preserve">
          <source>In the case of &lt;a href=&quot;standardwatcheventkinds#ENTRY_CREATE&quot;&gt;&lt;code&gt;ENTRY_CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardwatcheventkinds#ENTRY_DELETE&quot;&gt;&lt;code&gt;ENTRY_DELETE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt;&lt;code&gt;ENTRY_MODIFY&lt;/code&gt;&lt;/a&gt; events the context is a &lt;code&gt;Path&lt;/code&gt; that is the &lt;a href=&quot;path#relativize-java.nio.file.Path-&quot;&gt;&lt;code&gt;relative&lt;/code&gt;&lt;/a&gt; path between the directory registered with the watch service, and the entry that is created, deleted, or modified.</source>
          <target state="translated">以下の場合に&lt;a href=&quot;standardwatcheventkinds#ENTRY_CREATE&quot;&gt; &lt;code&gt;ENTRY_CREATE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardwatcheventkinds#ENTRY_DELETE&quot;&gt; &lt;code&gt;ENTRY_DELETE&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt; &lt;code&gt;ENTRY_MODIFY&lt;/code&gt; の&lt;/a&gt;イベントコンテキストで &lt;code&gt;Path&lt;/code&gt; で&lt;a href=&quot;path#relativize-java.nio.file.Path-&quot;&gt; &lt;code&gt;relative&lt;/code&gt; &lt;/a&gt;時計サービスに登録ディレクトリ、および、作成、削除、または変更されたエントリとの間の経路。</target>
        </trans-unit>
        <trans-unit id="0141b656cd010a95045e183f56a7350cc6b6fbd6" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;invokeExact&lt;/code&gt;, the type descriptor of the invocation (after resolving symbolic type names) must exactly match the method type of the receiving method handle. In the case of plain, inexact &lt;code&gt;invoke&lt;/code&gt;, the resolved type descriptor must be a valid argument to the receiver's &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; method. Thus, plain &lt;code&gt;invoke&lt;/code&gt; is more permissive than &lt;code&gt;invokeExact&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; の場合、呼び出しのタイプ記述子（シンボリックタイプ名を解決した後）は、受信メソッドハンドルのメソッドタイプと正確に一致する必要があります。単純な不正確な &lt;code&gt;invoke&lt;/code&gt; の場合、解決された型記述子は、受信者の&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;メソッドへの有効な引数でなければなりません。したがって、単純な &lt;code&gt;invoke&lt;/code&gt; は &lt;code&gt;invokeExact&lt;/code&gt; よりも寛容です。</target>
        </trans-unit>
        <trans-unit id="ab2ee1acf84658ca3734ba1e3885215a35ed71a6" translate="yes" xml:space="preserve">
          <source>In the case of a certificate factory for X.509 CRLs, &lt;code&gt;inStream&lt;/code&gt; may contain a sequence of DER-encoded CRLs. In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 CRL set. This is a PKCS#7</source>
          <target state="translated">X.509 CRLの証明書ファクトリの場合、 &lt;code&gt;inStream&lt;/code&gt; にはDERエンコードされたCRLのシーケンスが含まれる場合があります。さらに、 &lt;code&gt;inStream&lt;/code&gt; にはPKCS＃7 CRLセットが含まれる場合があります。これはPKCS＃7です</target>
        </trans-unit>
        <trans-unit id="08ac21be0ad130188c9cac95e7929ab7e554db46" translate="yes" xml:space="preserve">
          <source>In the case of a certificate factory for X.509 CRLs, &lt;code&gt;inStream&lt;/code&gt; may contain a single DER-encoded CRL. In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 CRL set. This is a PKCS#7</source>
          <target state="translated">X.509 CRLの証明書ファクトリの場合、 &lt;code&gt;inStream&lt;/code&gt; には1つのDERエンコードされたCRLが含まれる場合があります。さらに、 &lt;code&gt;inStream&lt;/code&gt; にはPKCS＃7 CRLセットが含まれる場合があります。これはPKCS＃7です</target>
        </trans-unit>
        <trans-unit id="1fc2160b4adf857b1556e09bd5dd1ba9ce62d01b" translate="yes" xml:space="preserve">
          <source>In the case of a certificate factory for X.509 certificates, &lt;code&gt;inStream&lt;/code&gt; may contain a sequence of DER-encoded certificates in the formats described for &lt;a href=&quot;certificatefactory#generateCertificate-java.io.InputStream-&quot;&gt;&lt;code&gt;generateCertificate&lt;/code&gt;&lt;/a&gt;. In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 certificate chain. This is a PKCS#7</source>
          <target state="translated">X.509証明書の証明書ファクトリの場合、 &lt;code&gt;inStream&lt;/code&gt; にはについて記載形式のDER符号化された証明書の配列含有していてもよい&lt;a href=&quot;certificatefactory#generateCertificate-java.io.InputStream-&quot;&gt; &lt;code&gt;generateCertificate&lt;/code&gt; を&lt;/a&gt;。さらに、 &lt;code&gt;inStream&lt;/code&gt; にはPKCS＃7証明書チェーンが含まれる場合があります。これはPKCS＃7です</target>
        </trans-unit>
        <trans-unit id="9dc29d2259ad105e7403a0727eb82c65459584a5" translate="yes" xml:space="preserve">
          <source>In the case of a certificate factory for X.509 certificates, &lt;code&gt;inStream&lt;/code&gt; may contain a single DER-encoded certificate in the formats described for &lt;a href=&quot;certificatefactory#generateCertificate-java.io.InputStream-&quot;&gt;&lt;code&gt;generateCertificate&lt;/code&gt;&lt;/a&gt;. In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 certificate chain. This is a PKCS#7</source>
          <target state="translated">X.509証明書の証明書ファクトリの場合、 &lt;code&gt;inStream&lt;/code&gt; にはについて記載形式で単一DER符号化された証明書が含まれていてもよい&lt;a href=&quot;certificatefactory#generateCertificate-java.io.InputStream-&quot;&gt; &lt;code&gt;generateCertificate&lt;/code&gt; を&lt;/a&gt;。さらに、 &lt;code&gt;inStream&lt;/code&gt; にはPKCS＃7証明書チェーンが含まれる場合があります。これはPKCS＃7です</target>
        </trans-unit>
        <trans-unit id="50da2fff261ef006a8b616c0bf4d45a215566afb" translate="yes" xml:space="preserve">
          <source>In the case of a certificate factory for X.509 certificates, the certificate provided in &lt;code&gt;inStream&lt;/code&gt; must be DER-encoded and may be supplied in binary or printable (Base64) encoding. If the certificate is provided in Base64 encoding, it must be bounded at the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at the end by -----END CERTIFICATE-----.</source>
          <target state="translated">X.509証明書の証明書ファクトリの場合、 &lt;code&gt;inStream&lt;/code&gt; で提供される証明書はDERエンコードする必要があり、バイナリまたは印刷可能な（Base64）エンコードで提供できます。証明書がBase64エンコードで提供されている場合は、最初に----- BEGIN CERTIFICATE -----でバインドし、最後に----- END CERTIFICATE -----でバインドする必要があります。 。</target>
        </trans-unit>
        <trans-unit id="19a2051fd0e5e72f45a371eb872d31545b4adfc3" translate="yes" xml:space="preserve">
          <source>In the case of a channel to an &lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; socket, the underlying operating system supports &lt;a href=&quot;http://www.ietf.org/rfc/rfc2236.txt&quot;&gt; &lt;i&gt;RFC 2236: Internet Group Management Protocol, Version 2 (IGMPv2)&lt;/i&gt;&lt;/a&gt;. It may optionally support source filtering as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3376.txt&quot;&gt; &lt;i&gt;RFC 3376: Internet Group Management Protocol, Version 3 (IGMPv3)&lt;/i&gt;&lt;/a&gt;. For channels to an &lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket, the equivalent standards are &lt;a href=&quot;http://www.ietf.org/rfc/rfc2710.txt&quot;&gt; &lt;i&gt;RFC 2710: Multicast Listener Discovery (MLD) for IPv6&lt;/i&gt;&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc3810.txt&quot;&gt; &lt;i&gt;RFC 3810: Multicast Listener Discovery Version 2 (MLDv2) for IPv6&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;ソケットへのチャネルの場合、基盤となるオペレーティングシステムは&lt;a href=&quot;http://www.ietf.org/rfc/rfc2236.txt&quot;&gt;&lt;i&gt;RFC 2236：インターネットグループ管理プロトコル、バージョン2（IGMPv2）を&lt;/i&gt;&lt;/a&gt;サポートし&lt;i&gt;ます&lt;/i&gt;。&lt;a href=&quot;http://www.ietf.org/rfc/rfc3376.txt&quot;&gt;&lt;i&gt;RFC 3376：Internet Group Management Protocol、Version 3（IGMPv3）で&lt;/i&gt;&lt;/a&gt;指定され&lt;i&gt;ている&lt;/i&gt;ソースフィルタリングをオプションでサポートする場合があります。&lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;ソケットへのチャネルの場合、同等の標準は&lt;a href=&quot;http://www.ietf.org/rfc/rfc2710.txt&quot;&gt;&lt;i&gt;RFC 2710：IPv6のマルチキャストリスナーディスカバリ（MLD）&lt;/i&gt;&lt;/a&gt;および&lt;a href=&quot;http://www.ietf.org/rfc/rfc3810.txt&quot;&gt;&lt;i&gt;RFC 3810：&lt;/i&gt;&lt;/a&gt;&lt;i&gt;IPv6の&lt;/i&gt;&lt;i&gt;マルチキャストリスナーディスカバリーバージョン2（MLDv2）です&lt;/i&gt;。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="e531c3c2e234b2ee1973c771c135218a06466ad9" translate="yes" xml:space="preserve">
          <source>In the case of a gap, when clocks jump forward, there is no valid offset. Instead, the local date-time is adjusted to be later by the length of the gap. For a typical one hour daylight savings change, the local date-time will be moved one hour later into the offset typically corresponding to &quot;summer&quot;.</source>
          <target state="translated">ギャップがある場合、時計が前方にジャンプしても有効なオフセットはありません。その代わり、ローカルの日付時刻は、ギャップの長さ分だけ遅くなるように調整されます。典型的な1時間のサマータイムの変更の場合、ローカルの日付時刻は、通常「夏」に対応するオフセットに1時間遅れて移動します。</target>
        </trans-unit>
        <trans-unit id="9fb01ead713905f1c81d4e6999c70b57340a9655" translate="yes" xml:space="preserve">
          <source>In the case of a gap, where clocks jump forward, there is no valid offset. Instead, the local date-time is adjusted to be later by the length of the gap. For a typical one hour daylight savings change, the local date-time will be moved one hour later into the offset typically corresponding to &quot;summer&quot;.</source>
          <target state="translated">クロックが前方にジャンプするギャップの場合、有効なオフセットはありません。その代わり、ローカルの日付時刻は、ギャップの長さ分だけ遅くなるように調整されます。典型的な1時間のサマータイムの変更の場合、ローカルの日付時刻は、通常「夏」に対応するオフセットに1時間遅れて移動します。</target>
        </trans-unit>
        <trans-unit id="b86e31d3309c9966888d1ce571949f78da06b9f0" translate="yes" xml:space="preserve">
          <source>In the case of a periodic notification, the value of parameter</source>
          <target state="translated">定期通知の場合は、パラメータ</target>
        </trans-unit>
        <trans-unit id="96af2556cfa1cd3f7eb8b73ee624b6aaa0970cfe" translate="yes" xml:space="preserve">
          <source>In the case of a periodic notification, uses a</source>
          <target state="translated">定期的な通知の場合は</target>
        </trans-unit>
        <trans-unit id="c9d56fa1d686e2f987ac2bf8aff1d4833e84b98f" translate="yes" xml:space="preserve">
          <source>In the case of a stored entry, the compressed size will be the same as the uncompressed size of the entry.</source>
          <target state="translated">格納されたエントリの場合、圧縮されたサイズは、エントリの非圧縮サイズと同じになります。</target>
        </trans-unit>
        <trans-unit id="db9e1ca64bffdeb509e25f717c03ee7e37e961d7" translate="yes" xml:space="preserve">
          <source>In the case of jar: and file: URLs, it also closes any files that were opened by it. If another thread is loading a class when the &lt;code&gt;close&lt;/code&gt; method is invoked, then the result of that load is undefined.</source>
          <target state="translated">jar：およびfile：URLの場合、それによって開かれたすべてのファイルも閉じます。 &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されたときに別のスレッドがクラスをロードしている場合、そのロードの結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="4807dcb176adbdc605239808fd2a7d991465460a" translate="yes" xml:space="preserve">
          <source>In the case of stream-oriented sockets and the TCP/IP protocol, the size of the socket receive buffer may be used when advertising the size of the TCP receive window to the remote peer.</source>
          <target state="translated">ストリーム指向ソケットとTCP/IPプロトコルの場合、TCP受信ウィンドウのサイズをリモートピアに広告する際に、ソケット受信バッファのサイズを使用してもよい。</target>
        </trans-unit>
        <trans-unit id="1564f388d1bc3d2b047f3cec6463a2aca746fb14" translate="yes" xml:space="preserve">
          <source>In the case of stream-oriented sockets, this socket option will usually determine whether the socket can be bound to a socket address when a previous connection involving that socket address is in the &lt;em&gt;TIME_WAIT&lt;/em&gt; state. On implementations where the semantics differ, and the socket option is not required to be enabled in order to bind the socket when a previous connection is in this state, then the implementation may choose to ignore this option.</source>
          <target state="translated">ストリーム指向のソケットの場合、このソケットオプションは通常、そのソケットアドレスを含む以前の接続が&lt;em&gt;TIME_WAIT&lt;/em&gt;状態にあるときに、ソケットをソケットアドレスにバインドできるかどうかを決定します。セマンティクスが異なり、以前の接続がこの状態のときにソケットをバインドするためにソケットオプションを有効にする必要がない実装では、実装はこのオプションを無視することを選択できます。</target>
        </trans-unit>
        <trans-unit id="dbce8b76773e0924f547ca32e02c138abec61f0c" translate="yes" xml:space="preserve">
          <source>In the case of the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt;, and a security manager is set, then the permission checks are performed using the path obtained by resolving the given relative path against the</source>
          <target state="translated">デフォルト&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;場合、セキュリティマネージャーが設定されていると、指定された相対パスを解決することによって取得されたパスを使用して、権限チェックが実行されます。</target>
        </trans-unit>
        <trans-unit id="9d2512a124feacc9023efa7b4655feac56aa98d5" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, and a security manager is installed, the security manager is invoked to check &lt;a href=&quot;../../lang/runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&quot;getFileStoreAttributes&quot;)&lt;/code&gt;. If denied, then no file stores are returned by the iterator. In addition, the security manager's &lt;a href=&quot;../../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method is invoked to check read access to the file store's &lt;em&gt;top-most&lt;/em&gt; directory. If denied, the file store is not returned by the iterator. It is system dependent if the permission checks are done when the iterator is obtained or during iteration.</source>
          <target state="translated">デフォルトプロバイダーの場合、セキュリティマネージャーがインストールされていると、セキュリティマネージャーが呼び出され、&lt;a href=&quot;../../lang/runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&quot;getFileStoreAttributes&quot;)&lt;/code&gt; がチェックされます。拒否された場合、イテレータから返されるファイルストアはありません。さらに、セキュリティマネージャーの&lt;a href=&quot;../../lang/securitymanager#checkRead-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、ファイルストアの&lt;em&gt;最上位&lt;/em&gt;ディレクトリへの読み取りアクセスがチェックされます。拒否された場合、ファイルストアはイテレータから返されません。イテレーターを取得するとき、または反復中に許可検査が行われるかどうかは、システムに依存します。</target>
        </trans-unit>
        <trans-unit id="f4b5c76d8aaed40c475f832a5a54a3692fea75a4" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, identified by the URI scheme &quot;file&quot;, the given URI has a non-empty path component, and undefined query and fragment components. Whether the authority component may be present is platform specific. The returned &lt;code&gt;Path&lt;/code&gt; is associated with the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system.</source>
          <target state="translated">URIスキーム「ファイル」で識別されるデフォルトのプロバイダーの場合、指定されたURIには空ではないパスコンポーネント、未定義のクエリおよびフラグメントコンポーネントがあります。権限コンポーネントが存在するかどうかは、プラットフォーム固有です。返される &lt;code&gt;Path&lt;/code&gt; は、&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステムに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="99df03667bc9a4291eea54f38aa6ac17e53c146f" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, path strings are parsed based on the definition of paths at the platform or virtual file system level. For example, an operating system may not allow specific characters to be present in a file name, but a specific underlying file store may impose different or additional restrictions on the set of legal characters.</source>
          <target state="translated">デフォルトのプロバイダの場合、パス文字列は、プラットフォームまたは仮想ファイルシステムレベルでのパスの定義に基づいて解析されます。例えば、オペレーティング・システムはファイル名に特定の文字が存在することを許可しないかもしれませんが、特定の基礎となるファイル・ストアは、合法的な文字のセットに異なる、または追加の制限を課すかもしれません。</target>
        </trans-unit>
        <trans-unit id="a898e5309a9ca4566bd5a4562ddfa9fccc431258" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, the URI is hierarchical with a &lt;a href=&quot;../../net/uri#getPath--&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; component that is absolute. The query and fragment components are undefined. Whether the authority component is defined or not is implementation dependent. There is no guarantee that the &lt;code&gt;URI&lt;/code&gt; may be used to construct a &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;java.io.File&lt;/code&gt;&lt;/a&gt;. In particular, if this path represents a Universal Naming Convention (UNC) path, then the UNC server name may be encoded in the authority component of the resulting URI. In the case of the default provider, and the file exists, and it can be determined that the file is a directory, then the resulting &lt;code&gt;URI&lt;/code&gt; will end with a slash.</source>
          <target state="translated">デフォルトのプロバイダーの場合、URI は絶対的な&lt;a href=&quot;../../net/uri#getPath--&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;コンポーネントを持つ階層型です。クエリとフラグメントのコンポーネントは未定義です。権限コンポーネントが定義されているかどうかは、実装によって異なります。 &lt;code&gt;URI&lt;/code&gt; を使用して&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;java.io.File&lt;/code&gt; &lt;/a&gt;を構築できるという保証はありません。特に、このパスが汎用名前付け規則（UNC）パスを表す場合、UNCサーバー名は、結果のURIの機関コンポーネントでエンコードされる場合があります。デフォルトのプロバイダーの場合、ファイルが存在し、ファイルがディレクトリーであると判断できる場合、結果の &lt;code&gt;URI&lt;/code&gt; はスラッシュで終わります。</target>
        </trans-unit>
        <trans-unit id="4e1f93856d74c7fdd21e5edb4105cb0eea03c3e1" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, the returned seekable byte channel is a &lt;a href=&quot;../channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトのプロバイダーの場合、返されるシーク可能なバイトチャネルは&lt;a href=&quot;../channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e6297028bcf457506860f8e5340cbccdf1009eaa" translate="yes" xml:space="preserve">
          <source>In the case of the default provider, this method returns the same separator as &lt;a href=&quot;../../io/file#separator&quot;&gt;&lt;code&gt;File.separator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトのプロバイダーの場合、このメソッドは&lt;a href=&quot;../../io/file#separator&quot;&gt; &lt;code&gt;File.separator&lt;/code&gt; &lt;/a&gt;と同じセパレーターを返します。</target>
        </trans-unit>
        <trans-unit id="3d33ebb7e876e61c518f2ef8d424778898f27226" translate="yes" xml:space="preserve">
          <source>In the case that the variant contains one or more underscores ('_'), a sequence of bundle names generated by truncating the last underscore and the part following it is inserted after a candidate bundle name with the original variant. For example, for a locale with language &quot;en&quot;, script &quot;Latn, country &quot;US&quot; and variant &quot;WINDOWS_VISTA&quot;, and bundle base name &quot;MyResource&quot;, the list of candidate bundle names below is generated:</source>
          <target state="translated">バリアントが 1 つ以上のアンダースコア ('_')を含む場合、最後のアンダースコアとそれに続く部分を切り詰めることで生成された一連のバンドル名が、元のバリアントを持つ候補のバンドル名の後に挿入されます。例えば、言語が &quot;en&quot;、スクリプトが &quot;Latn&quot;、国名が &quot;US&quot;、バリアントが &quot;WINDOWS_VISTA&quot;、バンドルベース名が &quot;MyResource&quot; のロケールの場合、以下の候補バンドル名のリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="b7b93472fb0fb86fea81d8d8443ed8bdc46acd42" translate="yes" xml:space="preserve">
          <source>In the case where multiple LoginModules fail, this method propagates the exception raised by the first &lt;code&gt;LoginModule&lt;/code&gt; which failed.</source>
          <target state="translated">複数のLoginModuleが失敗した場合、このメソッドは、失敗した最初の &lt;code&gt;LoginModule&lt;/code&gt; によって発生した例外を伝達します。</target>
        </trans-unit>
        <trans-unit id="a70c45e6aeb095e66dfd74054e5938ceea08a232" translate="yes" xml:space="preserve">
          <source>In the common case, all of the pre-connection parameters and general request properties can be ignored: the pre-connection parameters and request properties default to sensible values. For most clients of this interface, there are only two interesting methods: &lt;code&gt;getInputStream&lt;/code&gt; and &lt;code&gt;getContent&lt;/code&gt;, which are mirrored in the &lt;code&gt;URL&lt;/code&gt; class by convenience methods.</source>
          <target state="translated">一般的なケースでは、接続前のパラメーターと一般的なリクエストプロパティはすべて無視できます。接続前のパラメーターとリクエストプロパティはデフォルトで適切な値に設定されています。このインターフェイスのほとんどのクライアントには、2つの興味深いメソッド、 &lt;code&gt;getInputStream&lt;/code&gt; と &lt;code&gt;getContent&lt;/code&gt; しかありません。これらは、便利なメソッドによって &lt;code&gt;URL&lt;/code&gt; クラスにミラーリングされます。</target>
        </trans-unit>
        <trans-unit id="fc4e72373a72929421b52e76471660916eb25cad" translate="yes" xml:space="preserve">
          <source>In the context of &lt;a href=&quot;../../../annotation/processing/processingenvironment&quot;&gt;annotation processing&lt;/a&gt;, the guarantees for &quot;the same&quot; implementation must include contexts where the &lt;a href=&quot;../../../annotation/processing/package-summary&quot;&gt;API mediated&lt;/a&gt; side effects of &lt;a href=&quot;../../../annotation/processing/processor&quot;&gt;processors&lt;/a&gt; could be visible to each other, including successive annotation processing &lt;a href=&quot;../../../annotation/processing/roundenvironment&quot;&gt;rounds&lt;/a&gt;.</source>
          <target state="translated">文脈で&lt;a href=&quot;../../../annotation/processing/processingenvironment&quot;&gt;注釈処理&lt;/a&gt;、「同じ」実装のための保証はコンテキスト含まなければならない&lt;a href=&quot;../../../annotation/processing/package-summary&quot;&gt;API媒介性&lt;/a&gt;の副作用&lt;a href=&quot;../../../annotation/processing/processor&quot;&gt;プロセッサは、&lt;/a&gt;連続した注釈処理を含む相互に見えるかもしれない、&lt;a href=&quot;../../../annotation/processing/roundenvironment&quot;&gt;ラウンド&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0fc226575948bc5d8749aeade7f2700d90dccef" translate="yes" xml:space="preserve">
          <source>In the default &lt;a href=&quot;threadpoolexecutor.abortpolicy&quot;&gt;&lt;code&gt;ThreadPoolExecutor.AbortPolicy&lt;/code&gt;&lt;/a&gt;, the handler throws a runtime &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt; upon rejection.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;threadpoolexecutor.abortpolicy&quot;&gt; &lt;code&gt;ThreadPoolExecutor.AbortPolicy&lt;/code&gt; &lt;/a&gt;では、ハンドラーは&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;時にランタイムRejectedExecutionExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="48bb0c8e4f3b335269acf6c1e788fce51afc4c47" translate="yes" xml:space="preserve">
          <source>In the default ISO calendar system, June 2012 would have the value &lt;code&gt;(2012 * 12 + 6 - 1)&lt;/code&gt;. This field is primarily for internal use.</source>
          <target state="translated">デフォルトのISOカレンダーシステムでは、2012年6月の値は &lt;code&gt;(2012 * 12 + 6 - 1)&lt;/code&gt; ます。このフィールドは主に内部で使用されます。</target>
        </trans-unit>
        <trans-unit id="e85a59438f2ed3bcea699be96233c620667aa495" translate="yes" xml:space="preserve">
          <source>In the default ISO calendar system, there are two eras defined, 'BCE' and 'CE'. The era 'CE' is the one currently in use and year-of-era runs from 1 to the maximum value. The era 'BCE' is the previous era, and the year-of-era runs backwards.</source>
          <target state="translated">デフォルトのISOカレンダーシステムでは、'BCE'と'CE'の2つの時代が定義されています。時代 'CE' は現在使用されているもので、年号は 1 から最大値までの間で実行されます。時代「BCE」は前の時代で、時代の年号は逆になります。</target>
        </trans-unit>
        <trans-unit id="b2989432ae07e543d739ca5a5f8fcc5927ec8aa7" translate="yes" xml:space="preserve">
          <source>In the default ISO calendar system, there are two eras defined, 'BCE' and 'CE'. The era 'CE' is the one currently in use and year-of-era runs from 1 to the maximum value. The era 'BCE' is the previous era, and the year-of-era runs backwards. See &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;&lt;code&gt;YEAR_OF_ERA&lt;/code&gt;&lt;/a&gt; for a full example.</source>
          <target state="translated">デフォルトのISOカレンダーシステムでは、「BCE」と「CE」の2つの時代が定義されています。時代 'CE'は現在使用されている時代であり、年の年は1から最大値までです。時代 'BCE'は前の時代であり、年号は逆算されます。完全な例については、&lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt; &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bd780fa87d177f6d0024f4d49192abdd1c6c63cd" translate="yes" xml:space="preserve">
          <source>In the definitions below, an annotation</source>
          <target state="translated">以下の定義では、アノテーション</target>
        </trans-unit>
        <trans-unit id="09bc6c63a67020bf7c2978262bc3265e74344acb" translate="yes" xml:space="preserve">
          <source>In the detailed explanations below, if &quot;&lt;code&gt;a&lt;/code&gt;&quot; represents an instance of document data, then the result of processing the data in document &quot;&lt;code&gt;a&lt;/code&gt;&quot; is a sequence of media sheets represented by &quot;&lt;code&gt;a(*)&lt;/code&gt;&quot;.</source>
          <target state="translated">以下の詳細な説明で、「 &lt;code&gt;a&lt;/code&gt; 」がドキュメントデータのインスタンスを表す場合、ドキュメント「 &lt;code&gt;a&lt;/code&gt; 」のデータを処理した結果は、「 &lt;code&gt;a(*)&lt;/code&gt; 」で表されるメディアシートのシーケンスになります。</target>
        </trans-unit>
        <trans-unit id="b0f79dec8b3ab7b6c24fbe11e1ac1e7891ecced8" translate="yes" xml:space="preserve">
          <source>In the event that multiple package defaults apply to a given class, the package default pertaining to the most specific package takes precedence over the others. For example, if &lt;code&gt;javax.lang&lt;/code&gt; and &lt;code&gt;javax.lang.reflect&lt;/code&gt; both have package defaults associated with them, the latter package default applies to classes in &lt;code&gt;javax.lang.reflect&lt;/code&gt;.</source>
          <target state="translated">特定のクラスに複数のパッケージのデフォルトが適用される場合、最も具体的なパッケージに関するパッケージのデフォルトが他のパッケージよりも優先されます。たとえば、 &lt;code&gt;javax.lang&lt;/code&gt; と &lt;code&gt;javax.lang.reflect&lt;/code&gt; の両方にパッケージのデフォルトが関連付けられている場合、後者のパッケージのデフォルトは &lt;code&gt;javax.lang.reflect&lt;/code&gt; のクラスに適用されます。</target>
        </trans-unit>
        <trans-unit id="6debf46fe39f4012b9544dd84da9e6f547b36977" translate="yes" xml:space="preserve">
          <source>In the final case, it is exactly as if the target method handle were temporarily adapted with a &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;fixed arity collector&lt;/a&gt; to the arity required by the caller type. (As with &lt;code&gt;asCollector&lt;/code&gt;, if the array length is zero, a shared constant may be used instead of a new array. If the implied call to &lt;code&gt;asCollector&lt;/code&gt; would throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; or &lt;code&gt;WrongMethodTypeException&lt;/code&gt;, the call to the variable arity adapter must throw &lt;code&gt;WrongMethodTypeException&lt;/code&gt;.)</source>
          <target state="translated">最後のケースでは、ターゲットメソッドハンドルが、&lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;固定アリティコレクターで&lt;/a&gt;呼び出し元のタイプに必要なアリティに一時的に適応された場合とまったく同じです。 （と同様 &lt;code&gt;asCollector&lt;/code&gt; 配列の長さがゼロの場合、共有定数は、新しいアレイの代わりに使用することができる。暗黙に呼び出し場合 &lt;code&gt;asCollector&lt;/code&gt; がスローする &lt;code&gt;IllegalArgumentException&lt;/code&gt; または &lt;code&gt;WrongMethodTypeException&lt;/code&gt; 、スローしなければならない変数アリティアダプタへの呼び出し &lt;code&gt;WrongMethodTypeException&lt;/code&gt; します。）</target>
        </trans-unit>
        <trans-unit id="0b39f33db050daf5a8b13214fd8a45e5e32089c0" translate="yes" xml:space="preserve">
          <source>In the first case the global color table in the stream metadata is used, in the second the local color table in the image metadata is used, and in the third a global color table is created from the ColorModel or SampleModel of the (first) image.</source>
          <target state="translated">第一の場合はストリームメタデータのグローバルカラーテーブルが使用され、第二の場合は画像メタデータのローカルカラーテーブルが使用され、第三の場合は(第一の)画像のColorModelまたはSampleModelからグローバルカラーテーブルが作成されます。</target>
        </trans-unit>
        <trans-unit id="13e8476783a96421ed140a44cbc492ba23ff9c6b" translate="yes" xml:space="preserve">
          <source>In the first form, the methods defined by the &lt;a href=&quot;../../util/concurrent/future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; interface may be used to check if the operation has completed, wait for its completion, and to retrieve the result. In the second form, a &lt;a href=&quot;completionhandler&quot;&gt;&lt;code&gt;CompletionHandler&lt;/code&gt;&lt;/a&gt; is invoked to consume the result of the I/O operation when it completes or fails.</source>
          <target state="translated">最初の形式では、&lt;a href=&quot;../../util/concurrent/future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;インターフェースによって定義されたメソッドを使用して、操作が完了したかどうかを確認し、その完了を待機して、結果を取得できます。2番目の形式では、完了または失敗したときにI / O操作の結果を消費するために&lt;a href=&quot;completionhandler&quot;&gt; &lt;code&gt;CompletionHandler&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d4cbe4ad6c13a6890ddfa89884e27c69d70708df" translate="yes" xml:space="preserve">
          <source>In the foregoing description, the notation &lt;code&gt;sgn(&lt;/code&gt;</source>
          <target state="translated">前述の説明では、 &lt;code&gt;sgn(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c882c4c59e8bbed8641ffa48e67f786f75689b9" translate="yes" xml:space="preserve">
          <source>In the map, a key represents a language range whereas a value is a list of equivalents of it. &lt;code&gt;'*'&lt;/code&gt; cannot be used in the map. Each equivalent language range has the same weight value as its original language range.</source>
          <target state="translated">マップでは、キーは言語の範囲を表し、値はそれに相当するもののリストです。 &lt;code&gt;'*'&lt;/code&gt; はマップでは使用できません。同等の各言語範囲には、元の言語範囲と同じ重み値があります。</target>
        </trans-unit>
        <trans-unit id="c8ff356c3bba211a0f9b734c9401b44d64508002" translate="yes" xml:space="preserve">
          <source>In the most typical usages, a fork-join pair act like a call (fork) and return (join) from a parallel recursive function. As is the case with other forms of recursive calls, returns (joins) should be performed innermost-first. For example, &lt;code&gt;a.fork();
 b.fork(); b.join(); a.join();&lt;/code&gt; is likely to be substantially more efficient than joining &lt;code&gt;a&lt;/code&gt; before &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">最も一般的な使用法では、fork-joinペアは、並列再帰関数からの呼び出し（fork）とreturn（join）のように機能します。他の形式の再帰呼び出しの場合と同様に、戻り（結合）は最も内側から実行する必要があります。たとえば、 &lt;code&gt;a.fork(); b.fork(); b.join(); a.join();&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 前にaに参加するよりも実質的に効率的です。</target>
        </trans-unit>
        <trans-unit id="4124b8dc169b038e575762eafe60863f09ee476b" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a Julian Day field. In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt; and &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt; the Julian Day value is validated against the range of valid values. In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt; no validation occurs.</source>
          <target state="translated">解析の解決フェーズでは、ユリウス日フィールドから日付を作成できます。で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;と&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;スマートモード&lt;/a&gt;ユリウス日の値が有効な値の範囲に対して検証されます。で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;検証は行われません。</target>
        </trans-unit>
        <trans-unit id="a2a922c0ee008a9be6c940866c2a10fbd2cdf2cd" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a Modified Julian Day field. In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt; and &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt; the Modified Julian Day value is validated against the range of valid values. In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt; no validation occurs.</source>
          <target state="translated">解析の解決フェーズでは、修正ユリウス日フィールドから日付を作成できます。で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;と&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;スマートモード&lt;/a&gt;修正ユリウス日の値が有効な値の範囲に対して検証されます。で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;検証は行われません。</target>
        </trans-unit>
        <trans-unit id="f6f852fbde5cc2ca88d160cde722d602e256ed36" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a Rata Die field. In &lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strict mode&lt;/a&gt; and &lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;smart mode&lt;/a&gt; the Rata Die value is validated against the range of valid values. In &lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;lenient mode&lt;/a&gt; no validation occurs.</source>
          <target state="translated">解析の解決フェーズでは、ラタダイフィールドから日付を作成できます。で&lt;a href=&quot;../format/resolverstyle#STRICT&quot;&gt;strictモード&lt;/a&gt;と&lt;a href=&quot;../format/resolverstyle#SMART&quot;&gt;スマートモード&lt;/a&gt;ラタダイ値が有効な値の範囲に対して検証されます。で&lt;a href=&quot;../format/resolverstyle#LENIENT&quot;&gt;緩いモード&lt;/a&gt;検証は行われません。</target>
        </trans-unit>
        <trans-unit id="5b20abaab49f8da86e12af6dbc29b49308c16819" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a week-based-year, week-of-week-based-year and day-of-week.</source>
          <target state="translated">解析の解決段階では、週ベースの年、週ベースの年、曜日から日付を作成することができます。</target>
        </trans-unit>
        <trans-unit id="bdf7403d000aaea210215adeeb6a46be01f8d76f" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a week-based-year, week-of-week-based-year and day-of-week. See &lt;a href=&quot;isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_WEEK_BASED_YEAR&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">解析の解決フェーズでは、週ベースの年、週ベースの年、および曜日から日付を作成できます。詳細については、&lt;a href=&quot;isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_WEEK_BASED_YEAR&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="84410ab58516150fbc8db498e561458f97766283" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a week-based-year, week-of-year and day-of-week.</source>
          <target state="translated">解析の解決段階では、週を基準とした年、週を基準とした年、週を基準とした曜日から日付を作成することができます。</target>
        </trans-unit>
        <trans-unit id="b39a2e6ee173bfc886b3404b2577117e26d1cf6d" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a year, quarter-of-year and day-of-quarter.</source>
          <target state="translated">解析の解決段階では、年、四半期、曜日から日付を作成することができます。</target>
        </trans-unit>
        <trans-unit id="9211a4f83ceedceb836e18a497bc19b7625f3563" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a year, quarter-of-year and day-of-quarter. See &lt;a href=&quot;isofields#DAY_OF_QUARTER&quot;&gt;&lt;code&gt;DAY_OF_QUARTER&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">解析の解決フェーズでは、年、四半期、および日付から日付を作成できます。詳細については、&lt;a href=&quot;isofields#DAY_OF_QUARTER&quot;&gt; &lt;code&gt;DAY_OF_QUARTER&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1e5f25d0d54f0550fbf9d2e181359a8968474730" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a year, week-of-month, month-of-year and day-of-week.</source>
          <target state="translated">解析の解決段階では、年、週、月、月、曜日から日付を作成することができます。</target>
        </trans-unit>
        <trans-unit id="75940fac89a1739add9ac1cc303e4379ce1aa35b" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a date can be created from a year, week-of-year and day-of-week.</source>
          <target state="translated">解析の解決段階では、年、週、曜日から日付を作成することができます。</target>
        </trans-unit>
        <trans-unit id="d796a10d2d6aedb2663bb96172f9692e2b93290a" translate="yes" xml:space="preserve">
          <source>In the resolving phase of parsing, a localized day-of-week will be converted to a standardized &lt;code&gt;ChronoField&lt;/code&gt; day-of-week. The day-of-week must be in the valid range 1 to 7. Other fields in this class build dates using the standardized day-of-week.</source>
          <target state="translated">解析の解決フェーズでは、ローカライズされた曜日が標準化された &lt;code&gt;ChronoField&lt;/code&gt; の曜日に変換されます。曜日は有効な範囲1〜7である必要があります。このクラスの他のフィールドは、標準化された曜日を使用して日付を作成します。</target>
        </trans-unit>
        <trans-unit id="390685e2818a0e35011dcc474219688cf97611cb" translate="yes" xml:space="preserve">
          <source>In the retransform and redefine cases, the transformer must support the redefinition semantics: if a class that the transformer changed during initial definition is later retransformed or redefined, the transformer must insure that the second class output class file is a legal redefinition of the first output class file.</source>
          <target state="translated">再変換と再定義のケースでは、トランスフォーマは再定義セマンティクスをサポートしていなければなりません。</target>
        </trans-unit>
        <trans-unit id="db383673567be7d2ec797e169698a7aca3ed907b" translate="yes" xml:space="preserve">
          <source>In the second phase, if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded), then the &lt;code&gt;commit&lt;/code&gt; method for the &lt;code&gt;LoginModule&lt;/code&gt; gets invoked. The &lt;code&gt;commit&lt;/code&gt; method for a &lt;code&gt;LoginModule&lt;/code&gt; checks its privately saved state to see if its own authentication succeeded. If the overall &lt;code&gt;LoginContext&lt;/code&gt; authentication succeeded and the LoginModule's own authentication succeeded, then the &lt;code&gt;commit&lt;/code&gt; method associates the relevant Principals (authenticated identities) and Credentials (authentication data such as cryptographic keys) with the &lt;code&gt;Subject&lt;/code&gt; located within the &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="translated">LoginContextの認証全体が成功した場合には、第2段階では、（関連するREQUIRED、REQUISITEを、十分かつOPTIONALの各LoginModuleが成功した）、そして &lt;code&gt;commit&lt;/code&gt; する方法 &lt;code&gt;LoginModule&lt;/code&gt; 呼び出されます。 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;commit&lt;/code&gt; メソッドは、プライベートに保存された状態をチェックして、独自の認証が成功したかどうかを確認します。 &lt;code&gt;LoginContext&lt;/code&gt; 認証全体が成功し、LoginModule自体の認証が成功した場合、 &lt;code&gt;commit&lt;/code&gt; メソッドは、関連するプリンシパル（認証されたID）と資格情報（暗号鍵などの認証データ）を &lt;code&gt;LoginModule&lt;/code&gt; 内にある &lt;code&gt;Subject&lt;/code&gt; に関連付けます。</target>
        </trans-unit>
        <trans-unit id="57d427b7244122df77daa4831775224b6dd479a3" translate="yes" xml:space="preserve">
          <source>In the simplest and most typical usage, the value of the &lt;code&gt;type&lt;/code&gt; parameter will simply be the class or interface directly enclosing &lt;code&gt;overrider&lt;/code&gt; (the possibly-overriding method). For example, suppose &lt;code&gt;m1&lt;/code&gt; represents the method &lt;code&gt;String.hashCode&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; represents &lt;code&gt;Object.hashCode&lt;/code&gt;. We can then ask whether &lt;code&gt;m1&lt;/code&gt; overrides &lt;code&gt;m2&lt;/code&gt; within the class &lt;code&gt;String&lt;/code&gt; (it does):</source>
          <target state="translated">最も単純で最も一般的な使用法では、 &lt;code&gt;type&lt;/code&gt; パラメータの値は、 &lt;code&gt;overrider&lt;/code&gt; するオブジェクト（オーバーライドされる可能性のあるメソッド）を直接囲むクラスまたはインターフェイスになります。たとえば、 &lt;code&gt;m1&lt;/code&gt; がメソッド &lt;code&gt;String.hashCode&lt;/code&gt; を表し、 &lt;code&gt;m2&lt;/code&gt; が &lt;code&gt;Object.hashCode&lt;/code&gt; を表すとします。次に、 &lt;code&gt;m1&lt;/code&gt; がクラス &lt;code&gt;String&lt;/code&gt; 内の &lt;code&gt;m2&lt;/code&gt; をオーバーライドするかどうかを確認できます（そうです）。</target>
        </trans-unit>
        <trans-unit id="d7df6bb5179547c80d776dc0aafd98bdd8b5e175" translate="yes" xml:space="preserve">
          <source>In the simplest case, there is only one descriptor and the returned &lt;code&gt;ImmutableDescriptor&lt;/code&gt; is a copy of its fields at the time this method is called:</source>
          <target state="translated">最も単純なケースでは、記述子が1つだけあり、返される &lt;code&gt;ImmutableDescriptor&lt;/code&gt; は、このメソッドが呼び出されたときのフィールドのコピーです。</target>
        </trans-unit>
        <trans-unit id="93fc6f6665bc8e14ad256aa3e40fbe2fc160ba10" translate="yes" xml:space="preserve">
          <source>In the standard usage of the JMX API, MBeans are implemented as Java objects. However, as explained below, these objects are not usually referenced directly.</source>
          <target state="translated">JMX APIの標準的な使い方では、MBeansはJavaオブジェクトとして実装されています。しかし、以下で説明するように、これらのオブジェクトは通常直接参照されません。</target>
        </trans-unit>
        <trans-unit id="4fb02047e34ddf08451892b3ff429e03dda69b67" translate="yes" xml:space="preserve">
          <source>In theory, it is possible for there to be more than two valid offsets. This would happen if clocks to be put back more than once in quick succession. This has never happened in the history of time-zones and thus has no special handling. However, if it were to happen, then the list would return more than 2 entries.</source>
          <target state="translated">理論的には、2つ以上の有効なオフセットが存在する可能性があります。これは、時計を素早く連続して2回以上戻す場合に起こります。これはタイムゾーンの歴史の中で一度も起こったことがないので、特別な処理はありません。しかし、もしこのようなことが起こった場合、リストは2つ以上のエントリを返すことになります。</target>
        </trans-unit>
        <trans-unit id="f0557f2e43744a697a7ec3609cc994bb84fbaf06" translate="yes" xml:space="preserve">
          <source>In these examples, the host name &lt;code&gt;ignoredhost&lt;/code&gt; is not used by the connector server or its clients. It can be omitted, for example:</source>
          <target state="translated">これらの例では、ホスト名 &lt;code&gt;ignoredhost&lt;/code&gt; は、コネクタサーバーまたはそのクライアントによって使用されていません。たとえば、省略できます。</target>
        </trans-unit>
        <trans-unit id="a96cc0da1bc8d97002fb7d683d8490c870b59b2b" translate="yes" xml:space="preserve">
          <source>In this &lt;code&gt;JMXServiceURL&lt;/code&gt;, the first &lt;code&gt;rmi:&lt;/code&gt; specifies the RMI connector, while the second &lt;code&gt;rmi:&lt;/code&gt; specifies the RMI registry into which the RMI connector server has stored its stub.</source>
          <target state="translated">この &lt;code&gt;JMXServiceURL&lt;/code&gt; では、最初の &lt;code&gt;rmi:&lt;/code&gt; はRMIコネクタを指定し、2番目の &lt;code&gt;rmi:&lt;/code&gt; はRMIコネクタサーバーがそのスタブを格納したRMIレジストリを指定します。</target>
        </trans-unit>
        <trans-unit id="7200a056d70dbcee507cbef0f2945debea8015ef" translate="yes" xml:space="preserve">
          <source>In this &lt;code&gt;JMXServiceURL&lt;/code&gt;, the first &lt;code&gt;rmi:&lt;/code&gt; specifies the RMI connector, while the second &lt;code&gt;rmi:&lt;/code&gt; specifies the RMI registry.</source>
          <target state="translated">この &lt;code&gt;JMXServiceURL&lt;/code&gt; では、最初の &lt;code&gt;rmi:&lt;/code&gt; がRMIコネクタを指定し、2番目の &lt;code&gt;rmi:&lt;/code&gt; がRMIレジストリを指定します。</target>
        </trans-unit>
        <trans-unit id="dfe617178689a36792645af523da4c25dc32fea7" translate="yes" xml:space="preserve">
          <source>In this approach, the &lt;code&gt;getObject&lt;/code&gt; method creates a cipher object for the appropriate decryption algorithm and initializes it with the given decryption key and the algorithm parameters (if any) that were stored in the sealed object.</source>
          <target state="translated">このアプローチでは、 &lt;code&gt;getObject&lt;/code&gt; メソッドは適切な復号化アルゴリズムの暗号オブジェクトを作成し、封印されたオブジェクトに格納された特定の復号化キーとアルゴリズムパラメータ（存在する場合）でそれを初期化します。</target>
        </trans-unit>
        <trans-unit id="6348e3c77ca44896104904d8e87da80a3b45af65" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;serviceURL&lt;/code&gt; has one of these two forms:</source>
          <target state="translated">この場合、 &lt;code&gt;serviceURL&lt;/code&gt; は次の2つの形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="720c350da9963fee529988e5b52df9757023ef03" translate="yes" xml:space="preserve">
          <source>In this class, the format of &quot;&amp;lt;name type&amp;gt;&quot; is &quot;[LITERAL] (INTEGER)&quot;, where the optional &quot;LITERAL&quot; is the literal name, and INTEGER is the integer value of the name type. The format of &quot;&amp;lt;name value&amp;gt;&quot; is &quot;XX:...:XX&quot;, where &quot;XX&quot; is the hexadecimal digit representation of a byte value. For example, a returned value of an pseudo server name may look like:</source>
          <target state="translated">このクラスでは、「&amp;lt;name type&amp;gt;」の形式は「[LITERAL]（INTEGER）」です。オプションの「LITERAL」はリテラル名で、INTEGERは名前タイプの整数値です。&quot;&amp;lt;名前の値&amp;gt;&quot;の形式は &quot;XX：...：XX&quot;です。 &quot;XX&quot;はバイト値の16進数表現です。たとえば、擬似サーバー名の戻り値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="e193ba75e02e845c525d4e0f2f9ef5c3a18416dc" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;widgets&lt;/code&gt; is a &lt;code&gt;Collection&amp;lt;Widget&amp;gt;&lt;/code&gt;. We create a stream of &lt;code&gt;Widget&lt;/code&gt; objects via &lt;a href=&quot;../collection#stream--&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt;, filter it to produce a stream containing only the red widgets, and then transform it into a stream of &lt;code&gt;int&lt;/code&gt; values representing the weight of each red widget. Then this stream is summed to produce a total weight.</source>
          <target state="translated">この例では、 &lt;code&gt;widgets&lt;/code&gt; は &lt;code&gt;Collection&amp;lt;Widget&amp;gt;&lt;/code&gt; です。&lt;a href=&quot;../collection#stream--&quot;&gt; &lt;code&gt;Collection.stream()&lt;/code&gt; &lt;/a&gt;を介して &lt;code&gt;Widget&lt;/code&gt; オブジェクトのストリームを作成し、それをフィルタリングして赤いウィジェットのみを含むストリームを生成し、それを各赤いウィジェットの重みを表す &lt;code&gt;int&lt;/code&gt; 値のストリームに変換します。次に、このストリームが合計されて総重量が生成されます。</target>
        </trans-unit>
        <trans-unit id="42c7030ce66b22acc98ef41e2d30078538ce049c" translate="yes" xml:space="preserve">
          <source>In this example, as well as others in which tasks have no other effects except to compareAndSet a common result, the trailing unconditional invocation of &lt;code&gt;tryComplete&lt;/code&gt; could be made conditional (&lt;code&gt;if (result.get() == null) tryComplete();&lt;/code&gt;) because no further bookkeeping is required to manage completions once the root task completes.</source>
          <target state="translated">この例では、同様のタスクがのcompareAndSetを除いて共通の結果を他の効果を有していないような他の末尾無条件呼び出し &lt;code&gt;tryComplete&lt;/code&gt; は（条件作ることができる &lt;code&gt;if (result.get() == null) tryComplete();&lt;/code&gt; ）のでルートタスクが完了すると、完了を管理するための追加の簿記は必要ありません。</target>
        </trans-unit>
        <trans-unit id="2ed4d9d662cc61c638b4d92ccc9834b600d7f5a3" translate="yes" xml:space="preserve">
          <source>In this implementation only &quot;ObjectReference&quot; is supported.</source>
          <target state="translated">この実装では、「ObjectReference」のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8ac51afe4aa630110440e2c63eec26125f1f704d" translate="yes" xml:space="preserve">
          <source>In this implementation, all field values will be created as Strings. If the field values are not Strings, the programmer will have to reset or convert these fields correctly.</source>
          <target state="translated">この実装では、すべてのフィールド値は文字列として作成されます。フィールド値が文字列でない場合、プログラマはこれらのフィールドをリセットするか、正しく変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="21158219378c10a796461357849e0275a40caa35" translate="yes" xml:space="preserve">
          <source>In this implementation, as this method is an explicit interruption point, preference is given to responding to the interrupt over normal or reentrant acquisition of the lock, and over reporting the elapse of the waiting time.</source>
          <target state="translated">本実施形態では、このメソッドは明示的な割り込みポイントであるため、通常のロック取得やリエントラント取得よりも割り込みへの応答を優先し、待ち時間の経過を報告することを優先しています。</target>
        </trans-unit>
        <trans-unit id="c5302763fc0d8960fc55215843ee5ec52f822951" translate="yes" xml:space="preserve">
          <source>In this implementation, as this method is an explicit interruption point, preference is given to responding to the interrupt over normal or reentrant acquisition of the lock.</source>
          <target state="translated">本実施形態では、このメソッドは明示的な割り込みポイントであるため、通常のロック取得やリエントラント取得よりも割り込みへの応答を優先しています。</target>
        </trans-unit>
        <trans-unit id="612b61e7520baf5be9280167c708d75c2a29f2da" translate="yes" xml:space="preserve">
          <source>In this implementation, in every case where the getMethod needs to be called, because the method is invoked through the standard &quot;invoke&quot; method and thus needs operationInfo, an operation must be specified for that getMethod so that the invocation works correctly.</source>
          <target state="translated">この実装では、getMethodを呼び出す必要があるすべてのケースで、メソッドは標準の &quot;invoke &quot;メソッドから呼び出されるため、operationInfoを必要とするため、その呼び出しが正しく動作するようにgetMethodにオペレーションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd76f0260287d2e19c39ba47eadf0810b4116015" translate="yes" xml:space="preserve">
          <source>In this implementation, this operation normally returns in constant time, but may iterate upon contention if other threads are concurrently modifying the queue.</source>
          <target state="translated">この実装では、この操作は通常一定時間で戻りますが、他のスレッドが同時にキューを修正している場合には、 競合が発生した場合に反復処理を行うことがあります。</target>
        </trans-unit>
        <trans-unit id="3874a026e998a68cfe10cb30d80404e212be7c42" translate="yes" xml:space="preserve">
          <source>In this implementation, this operation returns in constant time.</source>
          <target state="translated">この実施形態では、この操作は一定時間で戻ります。</target>
        </trans-unit>
        <trans-unit id="509c198f1eb4bea0ca54a83e5429b1062f361cc1" translate="yes" xml:space="preserve">
          <source>In this managed object, there is an attribute called &lt;code&gt;Usage&lt;/code&gt; of type &lt;a href=&quot;../../java/lang/management/memoryusage&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;. The point of an attribute like this is that it gives a coherent snapshot of a set of data items. For example, it might include the current amount of used memory in the memory pool, and the current maximum of the memory pool. If these were separate items, obtained with separate &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; calls, then we could get values seen at different times that were not consistent. We might get a &lt;code&gt;used&lt;/code&gt; value that was greater than the &lt;code&gt;max&lt;/code&gt; value.</source>
          <target state="translated">この管理対象オブジェクトには、タイプ&lt;a href=&quot;../../java/lang/management/memoryusage&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Usage&lt;/code&gt; と呼ばれる属性があります。このような属性のポイントは、データ項目のセットの一貫したスナップショットを提供することです。たとえば、メモリプールで現在使用されているメモリの量や、メモリプールの現在の最大値が含まれる場合があります。これらが別々のアイテムであり、別々の&lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;呼び出しで取得された場合、一貫性のないさまざまな時点で表示される値を取得できます。 &lt;code&gt;max&lt;/code&gt; 値を超える &lt;code&gt;used&lt;/code&gt; 値が得られる場合があります。</target>
        </trans-unit>
        <trans-unit id="c9bb16eff62e8a4890d3e6d5ddedab29c6e1f909" translate="yes" xml:space="preserve">
          <source>In this mode, only the &lt;code&gt;'\n'&lt;/code&gt; line terminator is recognized in the behavior of &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, and &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">このモードでは、 &lt;code&gt;'\n'&lt;/code&gt; 動作では'\ n'行ターミネーターのみが認識され &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、および &lt;code&gt;$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3374b2d183e8e771791997734eb25b8d51f2d147" translate="yes" xml:space="preserve">
          <source>In this mode, whitespace is ignored, and embedded comments starting with &lt;code&gt;#&lt;/code&gt; are ignored until the end of a line.</source>
          <target state="translated">このモードでは、空白は無視され、 &lt;code&gt;#&lt;/code&gt; で始まる埋め込みコメントは行末まで無視されます。</target>
        </trans-unit>
        <trans-unit id="0626765b8b7f93f195506a9a554f3ba7a731ae7c" translate="yes" xml:space="preserve">
          <source>In this release, the socket options defined here are used by &lt;a href=&quot;../nio/channels/networkchannel&quot;&gt;&lt;code&gt;network&lt;/code&gt;&lt;/a&gt; channels in the &lt;a href=&quot;../nio/channels/package-summary&quot;&gt;&lt;code&gt;channels&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">このリリースでは、ここで定義されたソケットオプションは、&lt;a href=&quot;../nio/channels/package-summary&quot;&gt; &lt;code&gt;channels&lt;/code&gt; &lt;/a&gt;パッケージの&lt;a href=&quot;../nio/channels/networkchannel&quot;&gt; &lt;code&gt;network&lt;/code&gt; &lt;/a&gt;チャネルで使用されます。</target>
        </trans-unit>
        <trans-unit id="af2e209ec1d36f3651d0339f82067f5ec4405a5b" translate="yes" xml:space="preserve">
          <source>In this release, this class does not define flags related to &lt;a href=&quot;aclentrytype#AUDIT&quot;&gt;&lt;code&gt;AclEntryType.AUDIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;aclentrytype#ALARM&quot;&gt;&lt;code&gt;AclEntryType.ALARM&lt;/code&gt;&lt;/a&gt; entry types.</source>
          <target state="translated">このリリースでは、このクラスは&lt;a href=&quot;aclentrytype#AUDIT&quot;&gt; &lt;code&gt;AclEntryType.AUDIT&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;aclentrytype#ALARM&quot;&gt; &lt;code&gt;AclEntryType.ALARM&lt;/code&gt; &lt;/a&gt;エントリタイプに関連するフラグを定義していません。</target>
        </trans-unit>
        <trans-unit id="d348bc258fa5471dd4feba0df1adf6c0a216acda" translate="yes" xml:space="preserve">
          <source>In this release, this path locates a directory that exists. The directory is registered with the watch service so that entries in the directory can be watched. The &lt;code&gt;events&lt;/code&gt; parameter is the events to register and may contain the following events:</source>
          <target state="translated">このリリースでは、このパスは存在するディレクトリを特定します。ディレクトリは、ディレクトリ内のエントリを監視できるように監視サービスに登録されます。 &lt;code&gt;events&lt;/code&gt; パラメータが登録するイベントで、次のイベントが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="584ea83317f49d753e6e129a9301fca7c46ac607" translate="yes" xml:space="preserve">
          <source>In this way, each service provider developer can specify a list of factories to use with that service provider. These can be modified by the application resources specified by the deployer of the application or applet, which in turn can be modified by the user.</source>
          <target state="translated">このようにして、各サービスプロバイダの開発者は、そのサービスプロバイダで使用する工場のリストを指定することができる。これらは、アプリケーションまたはアプレットのデプロイヤーによって指定されたアプリケーションリソースによって変更することができ、その結果、ユーザによって変更することができる。</target>
        </trans-unit>
        <trans-unit id="0be5675df50dd25ab65b5c69facc9bc4c80be0bf" translate="yes" xml:space="preserve">
          <source>In typical programs, method handle type matching will usually succeed. But if a match fails, the JVM will throw a &lt;a href=&quot;wrongmethodtypeexception&quot;&gt;&lt;code&gt;WrongMethodTypeException&lt;/code&gt;&lt;/a&gt;, either directly (in the case of &lt;code&gt;invokeExact&lt;/code&gt;) or indirectly as if by a failed call to &lt;code&gt;asType&lt;/code&gt; (in the case of &lt;code&gt;invoke&lt;/code&gt;).</source>
          <target state="translated">通常のプログラムでは、メソッドハンドルの型のマッチングは通常成功します。マッチが失敗した場合でも、JVMがスローされます&lt;a href=&quot;wrongmethodtypeexception&quot;&gt; &lt;code&gt;WrongMethodTypeException&lt;/code&gt; を&lt;/a&gt;（の場合は、直接、 &lt;code&gt;invokeExact&lt;/code&gt; ）または間接的に失敗したコールたかのよう &lt;code&gt;asType&lt;/code&gt; （の場合の &lt;code&gt;invoke&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ec5ce79bf5c9aeab471a655d25e1f23b698d1912" translate="yes" xml:space="preserve">
          <source>IncompatibleClassChangeError</source>
          <target state="translated">IncompatibleClassChangeError</target>
        </trans-unit>
        <trans-unit id="b71a8097720ca7e39baa6fc8bd7086b3f2f0f63f" translate="yes" xml:space="preserve">
          <source>IncompleteAnnotationException</source>
          <target state="translated">IncompleteAnnotationException</target>
        </trans-unit>
        <trans-unit id="b3e81cf9e254013fae74d31f8485a8e7966c052f" translate="yes" xml:space="preserve">
          <source>IncompleteAnnotationException.annotationType()</source>
          <target state="translated">IncompleteAnnotationException.annotationType()</target>
        </trans-unit>
        <trans-unit id="5ff327d06ca5563ba28dc2b2a8ce0b122f69c0df" translate="yes" xml:space="preserve">
          <source>IncompleteAnnotationException.elementName()</source>
          <target state="translated">IncompleteAnnotationException.elementName()</target>
        </trans-unit>
        <trans-unit id="811b3e993fff4c4e24e727d562fc0cbab47a7dc1" translate="yes" xml:space="preserve">
          <source>Increases the capacity of and internally reorganizes this hashtable, in order to accommodate and access its entries more efficiently. This method is called automatically when the number of keys in the hashtable exceeds this hashtable's capacity and load factor.</source>
          <target state="translated">このハッシュテーブルの容量を増やし、内部的に再編成することで、エントリをより効率的に収容し、アクセスできるようにします。このメソッドは、ハッシュテーブル内のキーの数がこのハッシュテーブルの容量と負荷率を超えた場合に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2749fa91d98241d94826ae9468da3bb699b70eb9" translate="yes" xml:space="preserve">
          <source>Increases the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.</source>
          <target state="translated">必要に応じて、この &lt;code&gt;ArrayList&lt;/code&gt; インスタンスの容量を増やし、少なくとも最小容量引数で指定された数の要素を確実に保持できるようにします。</target>
        </trans-unit>
        <trans-unit id="b416f51bf4071361ae235d04374d29e7c1e797df" translate="yes" xml:space="preserve">
          <source>Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.</source>
          <target state="translated">必要に応じてこのベクトルの容量を増加させ、最小容量引数で指定された成分の数以上を保持できるようにします。</target>
        </trans-unit>
        <trans-unit id="063a9d5d76a62351f3d663393414765289060711" translate="yes" xml:space="preserve">
          <source>Increasing SO_RCVBUF may allow the network implementation to buffer multiple packets when packets arrive faster than are being received using &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive(DatagramPacket)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SO_RCVBUFを増やすと、&lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive(DatagramPacket)&lt;/code&gt; &lt;/a&gt;を使用して受信するよりも速くパケットが到着したときに、ネットワーク実装で複数のパケットをバッファリングできる場合があります。</target>
        </trans-unit>
        <trans-unit id="86e5495f1c55d97bf090214a11948196cb4c04e4" translate="yes" xml:space="preserve">
          <source>Increasing the buffer size may allow multiple outgoing packets to be queued by the network implementation when the send rate is high.</source>
          <target state="translated">バッファサイズを大きくすると、送信レートが高い場合に、ネットワーク実装によって複数の送信パケットをキューに入れることができるかもしれません。</target>
        </trans-unit>
        <trans-unit id="545296f7af60f368373d1a74b422473b56dd9334" translate="yes" xml:space="preserve">
          <source>Increasing the receive buffer size can increase the performance of network I/O for high-volume connection, while decreasing it can help reduce the backlog of incoming data.</source>
          <target state="translated">受信バッファサイズを大きくすると、大容量接続のネットワークI/Oのパフォーマンスが向上し、逆に小さくすると受信データのバックログを減らすことができます。</target>
        </trans-unit>
        <trans-unit id="460cbd8a405fdccf7a30aff989894ea4b8f09525" translate="yes" xml:space="preserve">
          <source>Increments the iterator's index by one and returns the character at the new index. If the resulting index is greater or equal to getEndIndex(), the current index is reset to getEndIndex() and a value of DONE is returned.</source>
          <target state="translated">イテレータのインデックスを 1 つインクリメントし、新しいインデックスの文字を返します。結果のインデックスが getEndIndex()以上の場合、現在のインデックスは getEndIndex()にリセットされ、DONE の値が返されます。</target>
        </trans-unit>
        <trans-unit id="83f705f84f3e506a637956b9907406ba6fe9f41e" translate="yes" xml:space="preserve">
          <source>IndexOutOfBoundsException</source>
          <target state="translated">IndexOutOfBoundsException</target>
        </trans-unit>
        <trans-unit id="7da0d5e5d5e41aceb9fc5572f2c4bd87d87e45c3" translate="yes" xml:space="preserve">
          <source>IndexedPropertyChangeEvent</source>
          <target state="translated">IndexedPropertyChangeEvent</target>
        </trans-unit>
        <trans-unit id="df25893fe7549ca820960bff3e24c9e500adbaf6" translate="yes" xml:space="preserve">
          <source>IndexedPropertyChangeEvent.getIndex()</source>
          <target state="translated">IndexedPropertyChangeEvent.getIndex()</target>
        </trans-unit>
        <trans-unit id="bbf8d2273e1c47e832de8097c623b372a3751c82" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor</source>
          <target state="translated">IndexedPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="150bf0893aded2a44c8153e5875e4e520f2bbe80" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.equals()</source>
          <target state="translated">IndexedPropertyDescriptor.equals()</target>
        </trans-unit>
        <trans-unit id="ecdf68d2ffc7c84a71c12a126e5aa8ed5319d9e1" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.getIndexedPropertyType()</source>
          <target state="translated">IndexedPropertyDescriptor.getIndexedPropertyType()</target>
        </trans-unit>
        <trans-unit id="7abc769e2cc7c1a3a6fed61b4456363e87d61649" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.getIndexedReadMethod()</source>
          <target state="translated">IndexedPropertyDescriptor.getIndexedReadMethod()</target>
        </trans-unit>
        <trans-unit id="78bb188fbba9c5b541d92de6cfe7aa7e7dddd1e8" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.getIndexedWriteMethod()</source>
          <target state="translated">IndexedPropertyDescriptor.getIndexedWriteMethod()</target>
        </trans-unit>
        <trans-unit id="8d8cb1dcdb90fc616b22092c66ef0f352c38e102" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.hashCode()</source>
          <target state="translated">IndexedPropertyDescriptor.hashCode()</target>
        </trans-unit>
        <trans-unit id="a341aabe6b80eda116b7f9a10329fa97feff6860" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.setIndexedReadMethod()</source>
          <target state="translated">IndexedPropertyDescriptor.setIndexedReadMethod()</target>
        </trans-unit>
        <trans-unit id="5700c1dc64c9fb7c0f2122956fb215fe4d781d1e" translate="yes" xml:space="preserve">
          <source>IndexedPropertyDescriptor.setIndexedWriteMethod()</source>
          <target state="translated">IndexedPropertyDescriptor.setIndexedWriteMethod()</target>
        </trans-unit>
        <trans-unit id="28dc2a188d940f41302bba6b95ddc1e5cac32a27" translate="yes" xml:space="preserve">
          <source>Indicates a &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; detected an attempt to open a file that would violate the guarantees provided by the &lt;code&gt;Filer&lt;/code&gt;.</source>
          <target state="translated">示し&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;で提供保証違反するファイルを開くしようとする試みが検出 &lt;code&gt;Filer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26f0addc1e1d1c33ed32457b1afcbb49bb61990f" translate="yes" xml:space="preserve">
          <source>Indicates a &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; detected an attempt to open a file that would violate the guarantees provided by the &lt;code&gt;Filer&lt;/code&gt;. Those guarantees include not creating the same file more than once, not creating multiple files corresponding to the same type, and not creating files for types with invalid names.</source>
          <target state="translated">示し&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;で提供保証違反するファイルを開くしようとする試みが検出 &lt;code&gt;Filer&lt;/code&gt; 。これらの保証には、同じファイルを2回以上作成しないこと、同じタイプに対応する複数のファイルを作成しないこと、無効な名前のタイプのファイルを作成しないことが含まれます。</target>
        </trans-unit>
        <trans-unit id="6b20c257077ffcd07e164a1f34e70ffaf0cbb163" translate="yes" xml:space="preserve">
          <source>Indicates a critical control. The value of this constant is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">重要なコントロールを示します。この定数の値は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1a7eaf949b18050516624c8c2fe247af37a1bd94" translate="yes" xml:space="preserve">
          <source>Indicates a non-critical control. The value of this constant is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">重要ではないコントロールを示します。この定数の値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="165f6fea24667a86b0164e0d23f269dc8d2287ff" translate="yes" xml:space="preserve">
          <source>Indicates any kind of problem not specifically identified by the other reasons.</source>
          <target state="translated">他の理由で特定されていない問題の種類を示します。</target>
        </trans-unit>
        <trans-unit id="2d63b336001ab7795dd39e350ba06a87b017a618" translate="yes" xml:space="preserve">
          <source>Indicates end of input stream.</source>
          <target state="translated">入力ストリームの終了を示す。</target>
        </trans-unit>
        <trans-unit id="ca7e5c92a22cab2a4aa239a01246f3a198952cf1" translate="yes" xml:space="preserve">
          <source>Indicates how long annotations with the annotated type are to be retained.</source>
          <target state="translated">注釈付きタイプの注釈をどのくらいの期間保持するかを示します。</target>
        </trans-unit>
        <trans-unit id="adc4f367747cb0101cf9290040b4b437c8f85a44" translate="yes" xml:space="preserve">
          <source>Indicates how long annotations with the annotated type are to be retained. If no Retention annotation is present on an annotation type declaration, the retention policy defaults to &lt;code&gt;RetentionPolicy.CLASS&lt;/code&gt;.</source>
          <target state="translated">注釈付きタイプの注釈が保持される期間を示します。アノテーション型宣言にRetentionアノテーションが存在しない場合、保持ポリシーはデフォルトで &lt;code&gt;RetentionPolicy.CLASS&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b7be5feb3806c18137e5897136c05b52d7116771" translate="yes" xml:space="preserve">
          <source>Indicates if forward checking is supported. Forward checking refers to the ability of the &lt;code&gt;CertPathChecker&lt;/code&gt; to perform its checks when certificates are presented to the &lt;code&gt;check&lt;/code&gt; method in the forward direction (from target to trust anchor).</source>
          <target state="translated">前方検査がサポートされているかどうかを示します。転送チェックとは、 &lt;code&gt;CertPathChecker&lt;/code&gt; 書が &lt;code&gt;check&lt;/code&gt; メソッドに転送方向（ターゲットからトラストアンカーへ）で提示されたときに、CertPathCheckerがチェックを実行する機能を指します。</target>
        </trans-unit>
        <trans-unit id="a58b4d092d4c74838198f26861094c4e848ddd40" translate="yes" xml:space="preserve">
          <source>Indicates if forward checking is supported. Forward checking refers to the ability of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; to perform its checks when certificates are presented to the &lt;code&gt;check&lt;/code&gt; method in the forward direction (from target to most-trusted CA).</source>
          <target state="translated">前方検査がサポートされているかどうかを示します。フォワードチェックとは、証明書が &lt;code&gt;check&lt;/code&gt; メソッドにフォワード方向（ターゲットから最も信頼できるCAへ）で提示されたときにチェックを実行する &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; の機能を指します。</target>
        </trans-unit>
        <trans-unit id="f47bf305daf3669d6ed1f2fbb1c46adb755598c2" translate="yes" xml:space="preserve">
          <source>Indicates if the &lt;code&gt;X509Certificate&lt;/code&gt; must contain all or at least one of the subjectAlternativeNames specified in the &lt;a href=&quot;x509certselector#setSubjectAlternativeNames-java.util.Collection-&quot;&gt;&lt;code&gt;setSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName&lt;/code&gt;&lt;/a&gt; methods. If &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain all of the specified subject alternative names. If &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain at least one of the specified subject alternative names.</source>
          <target state="translated">どうかを示し &lt;code&gt;X509Certificate&lt;/code&gt; にはで指定されたsubjectAlternativeNamesのすべて、または少なくとも一つ含まれている必要があります&lt;a href=&quot;x509certselector#setSubjectAlternativeNames-java.util.Collection-&quot;&gt; &lt;code&gt;setSubjectAlternativeNames&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt; &lt;code&gt;addSubjectAlternativeName&lt;/code&gt; の&lt;/a&gt;方法を。場合は &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;X509Certificate&lt;/code&gt; には、指定されたサブジェクト代替名のすべてを含んでいなければなりません。場合 &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;X509Certificate&lt;/code&gt; には、指定されたサブジェクト代替名の少なくとも一方が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="41b33b71ce9130c056524677cefb65454475e597" translate="yes" xml:space="preserve">
          <source>Indicates if the connection is going through a proxy.</source>
          <target state="translated">接続がプロキシを経由しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="179ca2719ce2220e0d6f413e025a1f9302f186b5" translate="yes" xml:space="preserve">
          <source>Indicates if this attribute has an &quot;is&quot; getter.</source>
          <target state="translated">この属性が &quot;is &quot;ゲッターを持つかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="facbfdea40b0041797b286a7ad6bf915b5095a19" translate="yes" xml:space="preserve">
          <source>Indicates some kind of error detected by an SSL subsystem.</source>
          <target state="translated">SSLサブシステムによって検出された何らかのエラーを示します。</target>
        </trans-unit>
        <trans-unit id="6854e20d83b237a78364f666548c9af3251ecd3a" translate="yes" xml:space="preserve">
          <source>Indicates some kind of error detected by an SSL subsystem. This class is the general class of exceptions produced by failed SSL-related operations.</source>
          <target state="translated">SSLサブシステムによって検出された何らかのエラーを示します。このクラスは、失敗したSSL関連の操作によって生成される例外の一般的なクラスです。</target>
        </trans-unit>
        <trans-unit id="e6d949394508f4eef96d0c72003ec705630cb78e" translate="yes" xml:space="preserve">
          <source>Indicates that a field defining a constant value may be referenced from native code.</source>
          <target state="translated">定数値を定義するフィールドがネイティブ・コードから参照される可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="fff44be69e61c83b9b710e9c33f38dfd547b54f7" translate="yes" xml:space="preserve">
          <source>Indicates that a field defining a constant value may be referenced from native code. The annotation may be used as a hint by tools that generate native header files to determine whether a header file is required, and if so, what declarations it should contain.</source>
          <target state="translated">定数値を定義するフィールドがネイティブコードから参照される可能性があることを示します。このアノテーションは、ネイティブヘッダファイルを生成するツールが、ヘッダファイルが必要かどうか、必要な場合はどのような宣言を含むべきかを判断するためのヒントとして使用されます。</target>
        </trans-unit>
        <trans-unit id="41f44e114b7049ec439d0c22a1f51f53c7e4e91c" translate="yes" xml:space="preserve">
          <source>Indicates that a file should be passed through bytewise, with no compression. Multiple files may be specified by specifying additional properties with distinct strings appended, to make a family of properties with the common prefix.</source>
          <target state="translated">ファイルを圧縮せずに 1 ずつ通過させることを示します。複数のファイルを指定する場合は、プロパティに文字列を付加して指定することで、 共通のプレフィックスを持つプロパティ群を作成することができます。</target>
        </trans-unit>
        <trans-unit id="a4495069dc064c9ce8d0ad937b51004ef0628edd" translate="yes" xml:space="preserve">
          <source>Indicates that a method declaration is intended to override a method declaration in a supertype.</source>
          <target state="translated">メソッド宣言がスーパータイプのメソッド宣言をオーバーライドすることを示します。</target>
        </trans-unit>
        <trans-unit id="4ee040acc839f534b3b93742a83a963110b09eb1" translate="yes" xml:space="preserve">
          <source>Indicates that a method declaration is intended to override a method declaration in a supertype. If a method is annotated with this annotation type compilers are required to generate an error message unless at least one of the following conditions hold:</source>
          <target state="translated">メソッド宣言がスーパータイプのメソッド宣言をオーバーライドすることを示します。メソッドがこのアノテーション型でアノテーションされている場合、コンパイラは以下の条件のうち少なくとも1つが満たされない限り、エラーメッセージを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="9774f88bfcc45d9390f521d042c12f84f08cd272" translate="yes" xml:space="preserve">
          <source>Indicates that an annotation type is automatically inherited.</source>
          <target state="translated">注釈タイプが自動的に継承されることを示します。</target>
        </trans-unit>
        <trans-unit id="cf52a2aa91cf71693f505ccf2e90ba428beeee82" translate="yes" xml:space="preserve">
          <source>Indicates that an annotation type is automatically inherited. If an Inherited meta-annotation is present on an annotation type declaration, and the user queries the annotation type on a class declaration, and the class declaration has no annotation for this type, then the class's superclass will automatically be queried for the annotation type. This process will be repeated until an annotation for this type is found, or the top of the class hierarchy (Object) is reached. If no superclass has an annotation for this type, then the query will indicate that the class in question has no such annotation.</source>
          <target state="translated">注釈型が自動的に継承されることを示します。アノテーション・タイプ宣言に Inherited メタアノテーションが存在し、ユーザーがクラス宣言でアノテーション・タイプをクエリし、クラス宣言にこのタイプのアノテーションがない場合、クラスのスーパークラスが自動的にアノテーション・タイプをクエリします。この処理は、この型のアノテーションが見つかるか、クラス階層の最上位(オブジェクト)に到達するまで繰り返されます。この型のアノテーションを持つスーパークラスがない場合、クエリは問題のクラスがそのようなアノテーションを持たないことを示します。</target>
        </trans-unit>
        <trans-unit id="ec63b28a6cc351c7495f267898be589e59987a21" translate="yes" xml:space="preserve">
          <source>Indicates that an attribute called &quot;transient&quot; should be declared with the given &lt;code&gt;value&lt;/code&gt; when the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; constructs a &lt;a href=&quot;propertydescriptor&quot;&gt;&lt;code&gt;PropertyDescriptor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eventsetdescriptor&quot;&gt;&lt;code&gt;EventSetDescriptor&lt;/code&gt;&lt;/a&gt; classes associated with the annotated code element.</source>
          <target state="translated">&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt;が注釈付きコード要素に関連付けられた&lt;a href=&quot;propertydescriptor&quot;&gt; &lt;code&gt;PropertyDescriptor&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;eventsetdescriptor&quot;&gt; &lt;code&gt;EventSetDescriptor&lt;/code&gt; &lt;/a&gt;クラスを構築するときに、「transient」と呼ばれる属性を指定された &lt;code&gt;value&lt;/code&gt; 宣言する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="728fe6835c114a86c8f69a88f6aded382a8c359c" translate="yes" xml:space="preserve">
          <source>Indicates that an attribute called &quot;transient&quot; should be declared with the given &lt;code&gt;value&lt;/code&gt; when the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; constructs a &lt;a href=&quot;propertydescriptor&quot;&gt;&lt;code&gt;PropertyDescriptor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eventsetdescriptor&quot;&gt;&lt;code&gt;EventSetDescriptor&lt;/code&gt;&lt;/a&gt; classes associated with the annotated code element. A &lt;code&gt;true&lt;/code&gt; value for the &quot;transient&quot; attribute indicates to encoders derived from &lt;a href=&quot;encoder&quot;&gt;&lt;code&gt;Encoder&lt;/code&gt;&lt;/a&gt; that this feature should be ignored.</source>
          <target state="translated">&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt;が注釈付きコード要素に関連付けられた&lt;a href=&quot;propertydescriptor&quot;&gt; &lt;code&gt;PropertyDescriptor&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;eventsetdescriptor&quot;&gt; &lt;code&gt;EventSetDescriptor&lt;/code&gt; &lt;/a&gt;クラスを構築するときに、「transient」と呼ばれる属性を指定された &lt;code&gt;value&lt;/code&gt; 宣言する必要があることを示します。 &lt;code&gt;true&lt;/code&gt; 「一時」属性の値が由来エンコーダに示し&lt;a href=&quot;encoder&quot;&gt; &lt;code&gt;Encoder&lt;/code&gt; &lt;/a&gt;この機能は無視されるべきであるということ。</target>
        </trans-unit>
        <trans-unit id="c53e479ae0fec5bdde495533b05d322fd53a3d50" translate="yes" xml:space="preserve">
          <source>Indicates that an error has occurred.</source>
          <target state="translated">エラーが発生したことを示します。</target>
        </trans-unit>
        <trans-unit id="8b032135d1db5c605f7925bb2fa3ac1cf4d6f4f0" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of annotation value was encountered.</source>
          <target state="translated">未知の種類のアノテーション値が見つかったことを示します。</target>
        </trans-unit>
        <trans-unit id="33477cc3e886332ff848d11d4613233c3bd1f12e" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of annotation value was encountered. This can occur if the language evolves and new kinds of annotation values can be stored in an annotation. May be thrown by an &lt;a href=&quot;annotationvaluevisitor&quot;&gt;annotation value visitor&lt;/a&gt; to indicate that the visitor was created for a prior version of the language.</source>
          <target state="translated">不明な種類の注釈値が検出されたことを示します。これは、言語が進化し、新しい種類の注釈値を注釈に格納できる場合に発生する可能性があります。&lt;a href=&quot;annotationvaluevisitor&quot;&gt;注釈値ビジター&lt;/a&gt;によってスローされ、ビジターが以前のバージョンの言語用に作成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="6bc9a195a04bc2bda6b69e7c9287ba7baa4cb543" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of element was encountered.</source>
          <target state="translated">未知の種類の要素があったことを示します。</target>
        </trans-unit>
        <trans-unit id="662a19634a5d36517c28f329ef97540078bc1d8f" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of element was encountered. This can occur if the language evolves and new kinds of elements are added to the &lt;code&gt;Element&lt;/code&gt; hierarchy. May be thrown by an &lt;a href=&quot;elementvisitor&quot;&gt;element visitor&lt;/a&gt; to indicate that the visitor was created for a prior version of the language.</source>
          <target state="translated">不明な種類の要素が検出されたことを示します。これは、言語が進化し、新しい種類の要素が &lt;code&gt;Element&lt;/code&gt; 階層に追加された場合に発生します。&lt;a href=&quot;elementvisitor&quot;&gt;要素のビジター&lt;/a&gt;によってスローされ、ビジターが以前のバージョンの言語用に作成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="d01c8c093c906bae30897c7371c8deb42235e4cd" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of type was encountered.</source>
          <target state="translated">不明な種類のタイプが発生したことを示します。</target>
        </trans-unit>
        <trans-unit id="186b8db700cd2d5927bae6f8f732863fe3f56d4f" translate="yes" xml:space="preserve">
          <source>Indicates that an unknown kind of type was encountered. This can occur if the language evolves and new kinds of types are added to the &lt;code&gt;TypeMirror&lt;/code&gt; hierarchy. May be thrown by a &lt;a href=&quot;typevisitor&quot;&gt;type visitor&lt;/a&gt; to indicate that the visitor was created for a prior version of the language.</source>
          <target state="translated">不明な種類のタイプが検出されたことを示します。これは、言語が進化し、新しいタイプのタイプが &lt;code&gt;TypeMirror&lt;/code&gt; 階層に追加された場合に発生する可能性があります。&lt;a href=&quot;typevisitor&quot;&gt;タイプビジター&lt;/a&gt;によってスローされ、ビジターが以前のバージョンの言語用に作成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="19bf99b2207aec108abee8503bcf62b5a6378fdb" translate="yes" xml:space="preserve">
          <source>Indicates that annotations with a type are to be documented by javadoc and similar tools by default.</source>
          <target state="translated">型を持つアノテーションがデフォルトで javadoc や類似のツールによって文書化されることを示します。</target>
        </trans-unit>
        <trans-unit id="c42e5d0fda8f28f92d65070b8a667091196bf745" translate="yes" xml:space="preserve">
          <source>Indicates that annotations with a type are to be documented by javadoc and similar tools by default. This type should be used to annotate the declarations of types whose annotations affect the use of annotated elements by their clients. If a type declaration is annotated with Documented, its annotations become part of the public API of the annotated elements.</source>
          <target state="translated">ある型のアノテーションがデフォルトで javadoc や類似のツールによって文書化されることを示します。この型は、アノテーションがクライアントによるアノテーションされた要素の使用に影響を与える型の宣言にアノテーションを付けるために使われるべきです。型宣言がDocumentedでアノテーションされている場合、そのアノテーションはアノテーションされた要素のパブリックAPIの一部となります。</target>
        </trans-unit>
        <trans-unit id="3be5a85bf8dcc1933718187a970f3502fa5edcb4" translate="yes" xml:space="preserve">
          <source>Indicates that jobs are processing; new jobs will wait before processing.</source>
          <target state="translated">ジョブが処理中であることを示します。</target>
        </trans-unit>
        <trans-unit id="e5426995755b64e0604c1245e2f9077d4c77e630" translate="yes" xml:space="preserve">
          <source>Indicates that new jobs can start processing without waiting.</source>
          <target state="translated">新しいジョブが待たずに処理を開始できることを示します。</target>
        </trans-unit>
        <trans-unit id="00efc2714cabe593aecbaf8b57305ac8cccd6cfd" translate="yes" xml:space="preserve">
          <source>Indicates that no jobs can be processed and intervention is required.</source>
          <target state="translated">ジョブを処理できず、介入が必要であることを示します。</target>
        </trans-unit>
        <trans-unit id="57a9c1d193a1032f06d02b869826f7eef37cdc4b" translate="yes" xml:space="preserve">
          <source>Indicates that one or more deserialized objects failed validation tests.</source>
          <target state="translated">1つ以上のデシリアライズされたオブジェクトが検証テストに失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="eee7116f1e2b47c2d99445cf14a802ec4732d36e" translate="yes" xml:space="preserve">
          <source>Indicates that one or more deserialized objects failed validation tests. The argument should provide the reason for the failure.</source>
          <target state="translated">1つ以上のデシリアライズされたオブジェクトが検証テストに失敗したことを示します。引数には失敗の理由を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="0b3747b0d97025731cace25f20347f62a3c4b733" translate="yes" xml:space="preserve">
          <source>Indicates that other requests to the server are unlikely in the near future. Calling disconnect() should not imply that this HttpURLConnection instance can be reused for other requests.</source>
          <target state="translated">近い将来、サーバへの他の要求が発生する可能性が低いことを示します。disconnect()を呼び出しても、この HttpURLConnection インスタンスが他の要求で再利用できることを意味するものではありません。</target>
        </trans-unit>
        <trans-unit id="013479d3269ec2a49d62b9ddb33b7eb115d48d76" translate="yes" xml:space="preserve">
          <source>Indicates that subprocess I/O source or destination will be the same as those of the current process. This is the normal behavior of most operating system command interpreters (shells).</source>
          <target state="translated">サブプロセスのI/Oソースまたはデスティネーションが現在のプロセスのものと同じになることを示します。これは、ほとんどのオペレーティングシステムのコマンドインタプリタ(シェル)の通常の動作です。</target>
        </trans-unit>
        <trans-unit id="18495cc6ad349b94be2ebf894f0653067b2aec25" translate="yes" xml:space="preserve">
          <source>Indicates that subprocess I/O will be connected to the current Java process over a pipe. This is the default handling of subprocess standard I/O.</source>
          <target state="translated">サブプロセスI/Oがパイプを介して現在のJavaプロセスに接続されることを示します。これは、サブプロセス標準I/Oのデフォルトの処理です。</target>
        </trans-unit>
        <trans-unit id="4547fd46168e86fba8f28cc66b223506aa060953" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; is a &quot;report&quot; (least severe). An implementation may choose to omit some or all reports. Some reports specify finer granularity about the printer state; others serve as a precursor to a warning. A report must contain nothing that could affect the printed output.</source>
          <target state="translated">&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;が &quot;レポート&quot;（重大度が最も低い）であることを示します。実装では、一部またはすべてのレポートを省略することを選択できます。一部のレポートでは、プリンターの状態についてより細かい細分性を指定しています。他のものは警告の前兆として機能します。レポートには、印刷出力に影響を与える可能性のあるものを含めないでください。</target>
        </trans-unit>
        <trans-unit id="0082fc1e2c12b576732a935aa15e40204262b7e8" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; is a &quot;warning.&quot; An implementation may choose to omit some or all warnings. Warnings serve as a precursor to an error. A warning must contain nothing that prevents a job from completing, though in some cases the output may be of lower quality.</source>
          <target state="translated">&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;が「警告」であることを示します。実装では、一部またはすべての警告を省略することを選択できます。警告はエラーの前兆となります。警告には、ジョブの完了を妨げるものを含めないでください。ただし、出力の品質が低下する場合があります。</target>
        </trans-unit>
        <trans-unit id="dfc1d0c55b433047bf0f03bdcf9e6a41c5f68430" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; is an &quot;error&quot; (most severe). An implementation must include all errors. If this attribute contains one or more errors, the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; must be STOPPED.</source>
          <target state="translated">&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;が「エラー」（最も深刻）であることを示します。実装にはすべてのエラーを含める必要があります。この属性に1つ以上のエラーが含まれている場合、プリンターの&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; を&lt;/a&gt; STOPPEDにする必要があります。</target>
        </trans-unit>
        <trans-unit id="fd238065eba571411f7f180df09479a2147daee6" translate="yes" xml:space="preserve">
          <source>Indicates that the application has finished using the receiver, and that limited resources it requires may be released or made available.</source>
          <target state="translated">アプリケーションが受信機の使用を終了し、必要とする限られたリソースが解放または利用可能になる可能性があることを示す。</target>
        </trans-unit>
        <trans-unit id="7619d677f054282ae173b1234124cceaf2db1c2f" translate="yes" xml:space="preserve">
          <source>Indicates that the application has finished using the transmitter, and that limited resources it requires may be released or made available.</source>
          <target state="translated">アプリケーションが送信機の使用を終了し、必要とする限られたリソースが解放されるか、利用可能になる可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="fde3bffca44e5e63c538ef06e66ad85ebd59ed09" translate="yes" xml:space="preserve">
          <source>Indicates that the client and server could not negotiate the desired level of security.</source>
          <target state="translated">クライアントとサーバーが希望するセキュリティレベルをネゴシエートできなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="7775cc22f0197f92f2343ef3bcbc7896a7d7bf9c" translate="yes" xml:space="preserve">
          <source>Indicates that the client and server could not negotiate the desired level of security. The connection is no longer usable.</source>
          <target state="translated">クライアントとサーバーが希望のセキュリティレベルをネゴシエートできなかったことを示します。接続が使用できなくなりました。</target>
        </trans-unit>
        <trans-unit id="5ae67e94f616bc1ac423fbc74686ac6de54eee2f" translate="yes" xml:space="preserve">
          <source>Indicates that the collection operation does not commit to preserving the encounter order of input elements. (This might be true if the result container has no intrinsic order, such as a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">コレクション操作が、入力要素の出現順序の保持にコミットしないことを示します。（これは、結果コンテナーに&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;などの固有の順序がない場合に当てはまる可能性があります。）</target>
        </trans-unit>
        <trans-unit id="044b78a99884d26992f804f861c2e122d6f4612e" translate="yes" xml:space="preserve">
          <source>Indicates that the finisher function is the identity function and can be elided. If set, it must be the case that an unchecked cast from A to R will succeed.</source>
          <target state="translated">フィニッシャー関数が同一性関数であり、省略可能であることを示す。セットされている場合は、チェックが入っていないAからRへのキャストが成功する場合でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b8ecb0f9a488d6ec1b2caacc4c6b8c04a01ebb3d" translate="yes" xml:space="preserve">
          <source>Indicates that the impact of the operation is unknown or cannot be expressed using one of the other values.</source>
          <target state="translated">操作の影響が不明であるか、他の値で表現できないことを示す。</target>
        </trans-unit>
        <trans-unit id="1d43f18c061c919bc9ae828de6e9aa4480ab9158" translate="yes" xml:space="preserve">
          <source>Indicates that the named compiler warnings should be suppressed in the annotated element (and in all program elements contained in the annotated element).</source>
          <target state="translated">注釈付き要素(および注釈付き要素に含まれるすべてのプログラム要素)で、名前付きコンパイラの警告を抑制する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="480e1d7b111511605a173ae852f568cd093f9a98" translate="yes" xml:space="preserve">
          <source>Indicates that the named compiler warnings should be suppressed in the annotated element (and in all program elements contained in the annotated element). Note that the set of warnings suppressed in a given element is a superset of the warnings suppressed in all containing elements. For example, if you annotate a class to suppress one warning and annotate a method to suppress another, both warnings will be suppressed in the method.</source>
          <target state="translated">指定されたコンパイラの警告を、注釈付き要素(および注釈付き要素に含まれるすべてのプログラム要素)で抑制することを示します。指定された要素で抑制される警告のセットは、含まれるすべての要素で抑制される警告のスーパーセットであることに注意してください。例えば、ある警告を抑制するクラスをアノテーションし、別の警告を抑制するメソッドをアノテーションした場合、両方の警告がそのメソッドで抑制されます。</target>
        </trans-unit>
        <trans-unit id="41fb562684c8dc11d02b07c78d014d36b7f24ed9" translate="yes" xml:space="preserve">
          <source>Indicates that the operation is both read-like and write-like: it has an effect, and it also returns information from the MBean.</source>
          <target state="translated">この操作が読み込み型と書き込み型の両方であることを示します:効果があり、MBeanからの情報も返されます。</target>
        </trans-unit>
        <trans-unit id="6f1803030f206edf867c96bfc792d43489294aca" translate="yes" xml:space="preserve">
          <source>Indicates that the operation is read-like: it returns information but does not change any state.</source>
          <target state="translated">操作が読み取りに似ていることを示します:情報を返しますが、状態は変化しません。</target>
        </trans-unit>
        <trans-unit id="37b371befd1c3a3f5d5f251d8d04d0d1c49656db" translate="yes" xml:space="preserve">
          <source>Indicates that the operation is write-like: it has an effect but does not return any information from the MBean.</source>
          <target state="translated">この操作が書き込み型であることを示します。</target>
        </trans-unit>
        <trans-unit id="3a2dea7e9f785687e467423447522fc7e3ae5110" translate="yes" xml:space="preserve">
          <source>Indicates that the peer's identity has not been verified.</source>
          <target state="translated">相手の身元が確認されていないことを示します。</target>
        </trans-unit>
        <trans-unit id="d410341ff9067e04b5b5165ee0524bfdf8ba26a6" translate="yes" xml:space="preserve">
          <source>Indicates that the printer cannot access the URI address. For example, the printer might report this error if it goes to get the print data and cannot even establish a connection to the URI address.</source>
          <target state="translated">プリンタがURIアドレスにアクセスできないことを示す。例えば、印刷データを取得しようとしても、URIアドレスへの接続を確立することさえできない場合、プリンタはこのエラーを報告するかもしれない。</target>
        </trans-unit>
        <trans-unit id="5b15a6838f5d0f995fa00a8afadf31bcde95e4d2" translate="yes" xml:space="preserve">
          <source>Indicates that the printer does not support the URI scheme (&quot;http&quot;, &quot;ftp&quot;, etc.) in the URI address.</source>
          <target state="translated">プリンタがURIアドレスのURIスキーム(&quot;http&quot;、&quot;ftp &quot;など)をサポートしていないことを示します。</target>
        </trans-unit>
        <trans-unit id="28ae6d583c3f23329271fd41104be3061c919f6b" translate="yes" xml:space="preserve">
          <source>Indicates that this collector is &lt;em&gt;concurrent&lt;/em&gt;, meaning that the result container can support the accumulator function being called concurrently with the same result container from multiple threads.</source>
          <target state="translated">このコレクターが&lt;em&gt;並行&lt;/em&gt;であることを示します。つまり、結果コンテナーは、複数のスレッドから同じ結果コンテナーと同時に呼び出されるアキュムレーター関数をサポートできます。</target>
        </trans-unit>
        <trans-unit id="86ca118ba8e8fdd3f441856f5c6e820870903a5b" translate="yes" xml:space="preserve">
          <source>Indicates that this object has no longer changed, or that it has already notified all of its observers of its most recent change, so that the &lt;code&gt;hasChanged&lt;/code&gt; method will now return &lt;code&gt;false&lt;/code&gt;. This method is called automatically by the &lt;code&gt;notifyObservers&lt;/code&gt; methods.</source>
          <target state="translated">このオブジェクトが変更されていないこと、またはすべてのオブザーバーに最新の変更がすでに通知されているため、 &lt;code&gt;hasChanged&lt;/code&gt; メソッドが &lt;code&gt;false&lt;/code&gt; を返すことを示します。このメソッドは、 &lt;code&gt;notifyObservers&lt;/code&gt; メソッドによって自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="81f3fcf5e97aa8d8ff3ab673fe66136c34e57fd7" translate="yes" xml:space="preserve">
          <source>Indicates the &lt;em&gt;containing annotation type&lt;/em&gt; for the repeatable annotation type.</source>
          <target state="translated">繰り返し可能なアノテーションタイプの&lt;em&gt;包含アノテーションタイプ&lt;/em&gt;を示します。</target>
        </trans-unit>
        <trans-unit id="383d0030749d82c858823c18115cfc2d913f6153" translate="yes" xml:space="preserve">
          <source>Indicates the action to take when a class-file containing an unknown attribute is encountered. Possible values are the strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不明な属性を含むクラスファイルが見つかったときに実行するアクションを示します。可能な値は、ストリング&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="a033617bc7cdf3cd16baa1ab795b6ac33eecf5cf" translate="yes" xml:space="preserve">
          <source>Indicates the caching policy for successful name lookups from the name service. The value is specified as as integer to indicate the number of seconds to cache the successful lookup. The default setting is to cache for an implementation specific period of time.</source>
          <target state="translated">ネームサービスからの名前検索に成功した場合のキャッシュポリシーを示します。値は整数で指定され、検索に成功した名前をキャッシュする秒数を示します。デフォルトの設定では、実装固有の期間だけキャッシュする。</target>
        </trans-unit>
        <trans-unit id="632f130868745856eca6384b5d08b00fa6f53560" translate="yes" xml:space="preserve">
          <source>Indicates the caching policy for un-successful name lookups from the name service. The value is specified as as integer to indicate the number of seconds to cache the failure for un-successful lookups.</source>
          <target state="translated">ネームサービスからの名前検索に失敗した場合のキャッシュポリシーを示します。値は整数で指定され、失敗した名前検索に対するキャッシュの秒数を示します。</target>
        </trans-unit>
        <trans-unit id="9fc3b5f02c5fa9d44867eba430d27aa88b4f4adf" translate="yes" xml:space="preserve">
          <source>Indicates the contexts in which an annotation type is applicable.</source>
          <target state="translated">注釈タイプが適用可能なコンテキストを示します。</target>
        </trans-unit>
        <trans-unit id="1832be718ffc5342becf804225b78291d5c187a7" translate="yes" xml:space="preserve">
          <source>Indicates the contexts in which an annotation type is applicable. The declaration contexts and type contexts in which an annotation type may be applicable are specified in JLS 9.6.4.1, and denoted in source code by enum constants of &lt;a href=&quot;elementtype&quot;&gt;&lt;code&gt;java.lang.annotation.ElementType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注釈型が適用されるコンテキストを示します。注釈型を適用できる宣言コンテキストと型コンテキストは、JLS 9.6.4.1で指定されており、ソースコードでは&lt;a href=&quot;elementtype&quot;&gt; &lt;code&gt;java.lang.annotation.ElementType&lt;/code&gt; の&lt;/a&gt;列挙型定数によって示されています。</target>
        </trans-unit>
        <trans-unit id="703c274e784135885c6f0d99968b783d0678feab" translate="yes" xml:space="preserve">
          <source>Indicates the end of a batch of search results.</source>
          <target state="translated">検索結果のバッチの終了を示します。</target>
        </trans-unit>
        <trans-unit id="ca1961b063214aaa0662893c9be12659ff734e76" translate="yes" xml:space="preserve">
          <source>Indicates the end of a batch of search results. Contains an estimate of the total number of entries in the result set and an opaque cookie. The cookie must be supplied to the next search operation in order to get the next batch of results.</source>
          <target state="translated">検索結果のバッチの終了を示します。結果セットのエントリの合計数の推定値と不透明なクッキーを含みます。次の検索結果のバッチを取得するためには、クッキーを次の検索操作に提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d59d8dbf92a7daf5b554c02c2fc147d0401bf0ef" translate="yes" xml:space="preserve">
          <source>Indicates whether a MIDI file of the file type specified can be written from the sequence indicated.</source>
          <target state="translated">指定されたファイルタイプのMIDIファイルを、指定されたシーケンスから書き込めるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="8287a636d62ea84c08dc51c1db2bc790ccfabe70" translate="yes" xml:space="preserve">
          <source>Indicates whether an audio file of the specified file type can be written from the indicated audio input stream.</source>
          <target state="translated">指定されたファイルタイプの音声ファイルを、指定された音声入力ストリームから書き込めるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="6b3a6bd260e533ad1065293dbd041f03cd42aeba" translate="yes" xml:space="preserve">
          <source>Indicates whether an audio file of the type specified can be written from the audio input stream indicated.</source>
          <target state="translated">指定された音声入力ストリームから、指定されたタイプの音声ファイルを書き込めるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="94980cd5bbe3663b958927b222acdea5c569a5ba" translate="yes" xml:space="preserve">
          <source>Indicates whether an audio input stream of a specified format can be obtained from an audio input stream of another specified format.</source>
          <target state="translated">指定されたフォーマットの音声入力ストリームが、他の指定されたフォーマットの音声入力ストリームから取得できるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="5dad7a388b24b170a1718def658f865bd5d87411" translate="yes" xml:space="preserve">
          <source>Indicates whether an audio input stream of the specified encoding can be obtained from an audio input stream that has the specified format.</source>
          <target state="translated">指定されたフォーマットを持つ音声入力ストリームから、指定されたエンコーディングの音声入力ストリームを取得できるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="4385c4e950bdc667b30360b75cc7586984d7f9f5" translate="yes" xml:space="preserve">
          <source>Indicates whether file writing support for the specified MIDI file type is provided by the system.</source>
          <target state="translated">指定されたMIDIファイルタイプのファイル書き込みがシステムでサポートされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="cb289e5c25926abb977a9f317a7a65902d68e3f4" translate="yes" xml:space="preserve">
          <source>Indicates whether file writing support for the specified MIDI file type is provided by this file writer.</source>
          <target state="translated">指定されたMIDIファイルタイプのファイル書き込みがこのファイルライターでサポートされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="901630aef0a1c3d96255184104d13dbca00c122c" translate="yes" xml:space="preserve">
          <source>Indicates whether file writing support for the specified file type is provided by the system.</source>
          <target state="translated">指定されたファイルタイプのファイル書き込みをシステムがサポートしているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="ea87f1cfceb1610fed8b39e1e871030c4c9190bc" translate="yes" xml:space="preserve">
          <source>Indicates whether file writing support for the specified file type is provided by this audio file writer.</source>
          <target state="translated">指定されたファイルタイプのファイル書き込みがこのオーディオファイルライタでサポートされているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="825fcbc51c43920e5456fcaa9a530679ffb38925" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this Optional. The other object is considered equal if:</source>
          <target state="translated">他のオブジェクトがこのオプションと &quot;等しい &quot;かどうかを示す。他のオブジェクトが「等しい」場合には、他のオブジェクトは「等しい」とみなされます。</target>
        </trans-unit>
        <trans-unit id="bc5b0ac436cc0c4cd248e0a4bee67155e4260d8b" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this OptionalDouble. The other object is considered equal if:</source>
          <target state="translated">他のオブジェクトがこの OptionalDouble と &quot;等しい&quot; かどうかを示します.他のオブジェクトがこの OptionalDouble と &quot;等しい&quot; かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="d452b121ad797aa246ec0d726d26b68d55ea34a2" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this OptionalInt. The other object is considered equal if:</source>
          <target state="translated">他のオブジェクトがこの OptionalInt と &quot;等しい&quot; かどうかを示します。の場合、他のオブジェクトは等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="acaca358dad9ff31a804e5f48cc6c5aa1d4befd1" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this OptionalLong. The other object is considered equal if:</source>
          <target state="translated">他のオブジェクトがこのOptionalLongと &quot;等しい &quot;かどうかを示します。他のオブジェクトがこの OptionalLong と &quot;等しい&quot; かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="8abce6ab5d95accf1c0b4731dd7f4307f7dbb673" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this comparator. This method must obey the general contract of &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;. Additionally, this method can return &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">他のオブジェクトがこのコンパレータと「等しい」かどうかを示します。このメソッドは、&lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; の&lt;/a&gt;一般規約に従う必要があります。さらに、このメソッドは &lt;code&gt;true&lt;/code&gt; を返すことができます</target>
        </trans-unit>
        <trans-unit id="3d7ca37b34bf0b4c07aa13e30e0972d68ab74459" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this one.</source>
          <target state="translated">他のオブジェクトがこのオブジェクトと &quot;等しい &quot;かどうかを示す。</target>
        </trans-unit>
        <trans-unit id="fe56c12187678a4ce19c98ebac602e5825caa05c" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is &quot;equal to&quot; this server name.</source>
          <target state="translated">他のオブジェクトがこのサーバー名と &quot;等しい &quot;かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="67914f3ab3baa8ce0624a5d1408d57f66bcdcb29" translate="yes" xml:space="preserve">
          <source>Indicates whether some other object is equal to this one. This method returns true if and only if &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;JMXServiceURL&lt;/code&gt; whose &lt;a href=&quot;jmxserviceurl#getProtocol--&quot;&gt;&lt;code&gt;getProtocol()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;jmxserviceurl#getURLPath--&quot;&gt;&lt;code&gt;getURLPath()&lt;/code&gt;&lt;/a&gt; methods return the same values as for this object. The values for &lt;a href=&quot;jmxserviceurl#getProtocol--&quot;&gt;&lt;code&gt;getProtocol()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt; can differ in case without affecting equality.</source>
          <target state="translated">他のオブジェクトがこのオブジェクトと等しいかどうかを示します。場合にのみ場合、このメソッドはtrueを返し &lt;code&gt;obj&lt;/code&gt; がインスタンスである &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;a href=&quot;jmxserviceurl#getProtocol--&quot;&gt; &lt;code&gt;getProtocol()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;jmxserviceurl#getURLPath--&quot;&gt; &lt;code&gt;getURLPath()&lt;/code&gt; &lt;/a&gt;メソッドは、このオブジェクトと同じ値を返します。&lt;a href=&quot;jmxserviceurl#getProtocol--&quot;&gt; &lt;code&gt;getProtocol()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;の値は、等価性に影響を与えることなく大文字と小文字が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="d29602ca11e693fb03a041ec7da7689469978f3c" translate="yes" xml:space="preserve">
          <source>Indicates whether the Sequencer is currently recording. The default is &lt;code&gt;false&lt;/code&gt;. The Sequencer begins recording when &lt;code&gt;&lt;a href=&quot;sequencer#startRecording--&quot;&gt;&lt;code&gt;startRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called, and then returns &lt;code&gt;true&lt;/code&gt; until &lt;code&gt;&lt;a href=&quot;sequencer#stop--&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;sequencer#stopRecording--&quot;&gt;&lt;code&gt;stopRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">シーケンサーが現在録音中かどうかを示します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。シーケンサは、 &lt;code&gt;&lt;a href=&quot;sequencer#startRecording--&quot;&gt;&lt;code&gt;startRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が呼び出されると記録を開始し、 &lt;code&gt;&lt;a href=&quot;sequencer#stop--&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;sequencer#stopRecording--&quot;&gt;&lt;code&gt;stopRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が呼び出されるまで &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ad9af34496753b6557c5cbde106c725f5527b9b3" translate="yes" xml:space="preserve">
          <source>Indicates whether the Sequencer is currently running. The default is &lt;code&gt;false&lt;/code&gt;. The Sequencer starts running when either &lt;code&gt;&lt;a href=&quot;sequencer#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;sequencer#startRecording--&quot;&gt;&lt;code&gt;startRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called. &lt;code&gt;isRunning&lt;/code&gt; then returns &lt;code&gt;true&lt;/code&gt; until playback of the sequence completes or &lt;code&gt;&lt;a href=&quot;sequencer#stop--&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">シーケンサーが現在実行されているかどうかを示します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。シーケンサは、 &lt;code&gt;&lt;a href=&quot;sequencer#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;sequencer#startRecording--&quot;&gt;&lt;code&gt;startRecording()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が呼び出されると実行を開始します。次に、シーケンスの再生が完了するか、 &lt;code&gt;&lt;a href=&quot;sequencer#stop--&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が呼び出されるまで、 &lt;code&gt;isRunning&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="53eebb9527857a3022fbf46570cb3e85d95a33c8" translate="yes" xml:space="preserve">
          <source>Indicates whether the audio data is stored in big-endian or little-endian byte order. If the sample size is not more than one byte, the return value is irrelevant.</source>
          <target state="translated">オーディオデータがビッグエンディアンかリトルエンディアンのバイト順で格納されているかを示す。サンプルサイズが1バイト以下の場合、戻り値は無関係である。</target>
        </trans-unit>
        <trans-unit id="1dc60c1775ccd306108e6458ebb8fe6e605f9b83" translate="yes" xml:space="preserve">
          <source>Indicates whether the audio data is stored in big-endian or little-endian order.</source>
          <target state="translated">オーディオデータがビッグエンディアンかリトルエンディアンのどちらの順番で格納されているかを示す。</target>
        </trans-unit>
        <trans-unit id="736746b650117941a354e884ce382c39e1f46473" translate="yes" xml:space="preserve">
          <source>Indicates whether the cookie should be considered HTTP Only. If set to &lt;code&gt;true&lt;/code&gt; it means the cookie should not be accessible to scripting engines like javascript.</source>
          <target state="translated">CookieをHTTPのみと見なすかどうかを示します。 &lt;code&gt;true&lt;/code&gt; に設定されている場合は、JavaScriptのようなスクリプトエンジンがCookieにアクセスできないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="f4b0772623f4250bc3045060dcd4fa8cf637a74a" translate="yes" xml:space="preserve">
          <source>Indicates whether the cookie should only be sent using a secure protocol, such as HTTPS or SSL.</source>
          <target state="translated">クッキーがHTTPSやSSLなどの安全なプロトコルを使用してのみ送信されるべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="09406b824a6c32a110d9f57bc53df68a3caad56e" translate="yes" xml:space="preserve">
          <source>Indicates whether the device provider supports the device represented by the specified device info object.</source>
          <target state="translated">デバイスプロバイダが、指定されたデバイス情報オブジェクトが表すデバイスをサポートしているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="b07c436be250680af09066fc888517e1fffbc4e0" translate="yes" xml:space="preserve">
          <source>Indicates whether the format converter supports conversion from the specified source format encoding.</source>
          <target state="translated">フォーマットコンバータが指定されたソースフォーマットのエンコーディングからの変換をサポートしているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="1d9fecbbc1ae6b6d8f569e9e066925fda1eaf04b" translate="yes" xml:space="preserve">
          <source>Indicates whether the format converter supports conversion to a particular encoding from a particular format.</source>
          <target state="translated">フォーマットコンバータが特定のフォーマットから特定のエンコーディングへの変換をサポートしているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="8a2526a4c1395c23dd046f65f2fd2326fda486e5" translate="yes" xml:space="preserve">
          <source>Indicates whether the format converter supports conversion to one particular format from another.</source>
          <target state="translated">フォーマットコンバータが他のフォーマットから特定のフォーマットへの変換をサポートしているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="583bd31898fe801a8977a3620ef774bc3c21d0e3" translate="yes" xml:space="preserve">
          <source>Indicates whether the format converter supports conversion to the specified target format encoding.</source>
          <target state="translated">フォーマットコンバータが指定されたターゲットフォーマットのエンコーディングへの変換をサポートしているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="573cfed8f15859c95b2f16253d7a3e469944a69c" translate="yes" xml:space="preserve">
          <source>Indicates whether the line is engaging in active I/O (such as playback or capture). When an inactive line becomes active, it sends a &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event to its listeners. Similarly, when an active line becomes inactive, it sends a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">ラインがアクティブなI / O（再生やキャプチャなど）を行っているかどうかを示します。非アクティブなラインがアクティブになると、そのリスナーに &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; イベントが送信されます。同様に、アクティブなラインが非アクティブになると、 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; イベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="9dd3bf6d28a406afa590f5ac06abb5a6bda080f2" translate="yes" xml:space="preserve">
          <source>Indicates whether the line is open, meaning that it has reserved system resources and is operational, although it might not currently be playing or capturing sound.</source>
          <target state="translated">つまり、システムリソースが予約されており、動作中であることを意味しますが、現在はサウンドの再生やキャプチャを行っていないかもしれません。</target>
        </trans-unit>
        <trans-unit id="d3a9c765889ca2d20fe8adf536de95d4d7dc7810" translate="yes" xml:space="preserve">
          <source>Indicates whether the line is running. The default is &lt;code&gt;false&lt;/code&gt;. An open line begins running when the first data is presented in response to an invocation of the &lt;code&gt;start&lt;/code&gt; method, and continues until presentation ceases in response to a call to &lt;code&gt;stop&lt;/code&gt; or because playback completes.</source>
          <target state="translated">回線が稼働しているかどうかを示します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。オープンラインは、 &lt;code&gt;start&lt;/code&gt; メソッドの呼び出しに応じて最初のデータが提示されると実行を開始し、 &lt;code&gt;stop&lt;/code&gt; 呼び出しに応じて、または再生が完了するために提示が終了するまで続きます。</target>
        </trans-unit>
        <trans-unit id="0c2f9db031817d1d7996fefdf2574302ebaa7f25" translate="yes" xml:space="preserve">
          <source>Indicates whether the line supports a control of the specified type. Some controls may only be available when the line is open.</source>
          <target state="translated">行が指定されたタイプのコントロールをサポートしているかどうかを示します。コントロールの中には、行が開いているときにしか利用できないものがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="4fa57f2bb776f862e93545f816e2cc605854bc7e" translate="yes" xml:space="preserve">
          <source>Indicates whether the mixer provider supports the mixer represented by the specified mixer info object.</source>
          <target state="translated">ミキサープロバイダが、指定されたミキサー情報オブジェクトで表されるミキサーをサポートしているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="5dc403c022d3d4bfefee604aeb012f7df4d93df2" translate="yes" xml:space="preserve">
          <source>Indicates whether the mixer supports a line (or lines) that match the specified &lt;code&gt;Line.Info&lt;/code&gt; object. Some lines may only be supported when this mixer is open.</source>
          <target state="translated">指定された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトに一致するラインをミキサーがサポートするかどうかを示します。一部のラインは、このミキサーが開いているときにのみサポートされる場合があります。</target>
        </trans-unit>
        <trans-unit id="0fc98384b99715768482d27c96cbcb1c1f0161ac" translate="yes" xml:space="preserve">
          <source>Indicates whether the port is a source or a target for its mixer.</source>
          <target state="translated">ポートがミキサーのソースかターゲットかを示します。</target>
        </trans-unit>
        <trans-unit id="235655a025f21f407fe40be60b7b92006bbc5951" translate="yes" xml:space="preserve">
          <source>Indicates whether the requested sort of search results was successful or not.</source>
          <target state="translated">要求されたソートの検索結果が成功したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2346ce4db04d53aa4eb8c5113b052856aac4c0ad" translate="yes" xml:space="preserve">
          <source>Indicates whether the requested sort of search results was successful or not. When the result code indicates success then the results have been sorted as requested. Otherwise the sort was unsuccessful and additional details regarding the cause of the error may have been provided by the server.</source>
          <target state="translated">要求された検索結果のソートが成功したかどうかを示します。結果コードが成功を示している場合、結果は要求された通りにソートされたことになります。そうでない場合は、ソートに失敗しており、エラーの原因に関する追加の詳細がサーバから提供されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="b114a197b1c095f6313272c0b0b9e20014646eb2" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified info object matches this one. To match, the specified object must be identical to or a special case of this one. The specified info object must be either an instance of the same class as this one, or an instance of a sub-type of this one. In addition, the attributes of the specified object must be compatible with the capabilities of this one. Specifically, the routing configuration for the specified info object must be compatible with that of this one. Subclasses may add other criteria to determine whether the two objects match.</source>
          <target state="translated">指定された情報オブジェクトがこの情報オブジェクトと一致するかどうかを示します。一致するためには、指定されたオブジェクトがこのオブジェクトと同じか、このオブジェクトの特殊なケースでなければなりません。指定されたinfoオブジェクトは、このオブジェクトと同じクラスのインスタンスか、このオブジェクトのサブタイプのインスタンスでなければなりません。また、指定されたオブジェクトの属性は、本オブジェクトの機能と互換性があるものでなければならない。具体的には、指定されたinfoオブジェクトのルーティング設定は、このオブジェクトのそれと互換性がなければならない。サブクラスは、2つのオブジェクトが一致するかどうかを判断するために他の基準を追加することができます。</target>
        </trans-unit>
        <trans-unit id="ef08d5d84868585c36d695a4af5242138216c24c" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified object is equal to this event type, returning &lt;code&gt;true&lt;/code&gt; if the objects are identical.</source>
          <target state="translated">指定されたオブジェクトがこのイベントタイプと等しいかどうかを示し、オブジェクトが同一の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c3f771326069adfadd5f4a62df61ebe737aaa1a1" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified object is equal to this reverb type, returning &lt;code&gt;true&lt;/code&gt; if the objects are identical.</source>
          <target state="translated">指定されたオブジェクトがこのリバーブタイプと等しいかどうかを示し、オブジェクトが同一の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1c893972b1038af56c59a170889fb4fc126e1f81" translate="yes" xml:space="preserve">
          <source>Indicates whether the system supports any lines that match the specified &lt;code&gt;Line.Info&lt;/code&gt; object. A line is supported if any installed mixer supports it.</source>
          <target state="translated">指定された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトに一致するラインがシステムでサポートされているかどうかを示します。インストールされているミキサーがサポートしている場合、ラインはサポートされます。</target>
        </trans-unit>
        <trans-unit id="71dc4d7baa09aa7336696bcbe7353353fde169b4" translate="yes" xml:space="preserve">
          <source>Indicates whether the voice is currently processing a MIDI note. See the explanation of &lt;a href=&quot;#description_of_active&quot;&gt;active and inactive voices&lt;/a&gt;.</source>
          <target state="translated">ボイスが現在MIDIノートを処理しているかどうかを示します。&lt;a href=&quot;#description_of_active&quot;&gt;アクティブボイスと非アクティブボイスの&lt;/a&gt;説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="76d79e84d7342c63959a04c4cda6f5f113fe292c" translate="yes" xml:space="preserve">
          <source>Indicates whether this data line supports a particular audio format. The default implementation of this method simply returns &lt;code&gt;true&lt;/code&gt; if the specified format matches any of the supported formats.</source>
          <target state="translated">このデータラインが特定のオーディオ形式をサポートするかどうかを示します。このメソッドのデフォルトの実装は、指定された形式がサポートされている形式のいずれかに一致する場合、単に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5b396ad573575d6843583004f21ffc2d50e9953e" translate="yes" xml:space="preserve">
          <source>Indicates whether this format matches the one specified. To match, two formats must have the same encoding, and consistent values of the number of channels, sample rate, sample size, frame rate, and frame size. The values of the property are consistent if they are equal or the specified format has the property value &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;. The byte order (big-endian or little-endian) must be the same if the sample size is greater than one byte.</source>
          <target state="translated">この形式が指定した形式と一致するかどうかを示します。一致させるには、2つのフォーマットが同じエンコーディングであり、チャネル数、サンプルレート、サンプルサイズ、フレームレート、フレームサイズの値が一致している必要があります。プロパティの値が等しい場合、または指定された形式のプロパティ値が &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; である場合、プロパティの値は一貫しています。サンプルサイズが1バイトより大きい場合、バイトオーダー（ビッグエンディアンまたはリトルエンディアン）は同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="61f64e25955db82cd6e12cfa1242359e6c1590d7" translate="yes" xml:space="preserve">
          <source>Indicates whether this info object specified matches this one. To match, the match requirements of the superclass must be met and the types must be equal.</source>
          <target state="translated">指定された情報オブジェクトがこの情報オブジェクトにマッチするかどうかを示します。マッチするためには、スーパークラスのマッチ要件を満たし、型が等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="f7e4c7219cb87fc14df1ea1c0f3ded0253e1f64d" translate="yes" xml:space="preserve">
          <source>Indicates whether this resource can be shared between this component and other components. This may be specified for resources representing a connection factory of any supported type, and must not be specified for resources of other types.</source>
          <target state="translated">このリソースをこのコンポーネントと他のコンポーネント間で共有できるかどうかを示します。これは、サポートされている任意のタイプの接続ファクトリを表すリソースに対して指定することができ、他のタイプのリソースに対しては指定してはならない。</target>
        </trans-unit>
        <trans-unit id="a3c2dfaac905e70923f73b1dc8c2cdcbf2a0d26a" translate="yes" xml:space="preserve">
          <source>Indicates whether two info objects are equal, returning &lt;code&gt;true&lt;/code&gt; if they are identical.</source>
          <target state="translated">2つの情報オブジェクトが等しいかどうかを示し、同一で &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="e7be277a82f2f9a6df70f6362c7cfd9e3f4a12c4" translate="yes" xml:space="preserve">
          <source>Indirect access to the behavior specified by the provided &lt;code&gt;MethodHandle&lt;/code&gt; proceeds in order through three phases:</source>
          <target state="translated">提供された &lt;code&gt;MethodHandle&lt;/code&gt; によって指定された動作への間接アクセスは、次の3つのフェーズを順に実行します。</target>
        </trans-unit>
        <trans-unit id="327e00b83989d7a0fb90ee649bfbaf657eafb8c0" translate="yes" xml:space="preserve">
          <source>Indirectly Present</source>
          <target state="translated">間接的に現在</target>
        </trans-unit>
        <trans-unit id="7902f55397526cfbd8342f96367783ec96d9776a" translate="yes" xml:space="preserve">
          <source>Individual features such as tiling, progressive encoding, and compression may be set in one of four modes. &lt;code&gt;MODE_DISABLED&lt;/code&gt; disables the features; &lt;code&gt;MODE_DEFAULT&lt;/code&gt; enables the feature with writer-controlled parameter values; &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; enables the feature and allows the use of a &lt;code&gt;set&lt;/code&gt; method to provide additional parameters; and &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; copies relevant parameter values from the stream and image metadata objects passed to the writer. The default for all features is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;. Non-standard features supplied in subclasses are encouraged, but not required to use a similar scheme.</source>
          <target state="translated">タイリング、プログレッシブエンコーディング、圧縮などの個々の機能は、4つのモードのいずれかで設定できます。 &lt;code&gt;MODE_DISABLED&lt;/code&gt; は機能を無効にします。 &lt;code&gt;MODE_DEFAULT&lt;/code&gt; は、ライターが制御するパラメーター値で機能を有効にします。 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; はこの機能を有効にし、 &lt;code&gt;set&lt;/code&gt; メソッドを使用して追加のパラメーターを提供できるようにします。そして &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; は、コピー、関連するストリームからのパラメータ値とライターに渡された画像のメタデータ・オブジェクトを。すべての機能のデフォルトは &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; です。サブクラスで提供される非標準の機能は推奨されますが、同様のスキームを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="540c467e66ddd838c1967a80b3e4941b4bd168b4" translate="yes" xml:space="preserve">
          <source>Individual permissions always override permissions of the group(s) to which the individual belongs. That is, individual negative permissions (specific denial of permissions) override the groups' positive permissions. And individual positive permissions override the groups' negative permissions.</source>
          <target state="translated">個人のパーミッションは常にその個人が属するグループのパーミッションを上書きします。つまり、個々の否定的な許可(許可の特定の拒否)は、グループの肯定的な許可を上書きします。そして、個々の正のパーミッションは、グループの負のパーミッションを上書きします。</target>
        </trans-unit>
        <trans-unit id="40377ff9aa4ec5ea5472ee4fda72c953597aa9e1" translate="yes" xml:space="preserve">
          <source>Individual plug-ins may return an instance of &lt;code&gt;ImageWriteParam&lt;/code&gt; with additional optional features enabled, or they may return an instance of a plug-in specific subclass of &lt;code&gt;ImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">個々のプラグインは、のインスタンスを返すことができる &lt;code&gt;ImageWriteParam&lt;/code&gt; 有効追加のオプション機能で、またはそれらは、特定のプラグイン・サブクラスのインスタンスを返すことができる &lt;code&gt;ImageWriteParam&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="191c50821aa48fadf99a647cc4adc218e45087a3" translate="yes" xml:space="preserve">
          <source>Inet4Address</source>
          <target state="translated">Inet4Address</target>
        </trans-unit>
        <trans-unit id="2c66b0937c64a5fc0dbd1a2f9be5cfbdce3071ef" translate="yes" xml:space="preserve">
          <source>Inet4Address.equals()</source>
          <target state="translated">Inet4Address.equals()</target>
        </trans-unit>
        <trans-unit id="c8f564bb849de9a33bfab99cb9322065319bc3cf" translate="yes" xml:space="preserve">
          <source>Inet4Address.getAddress()</source>
          <target state="translated">Inet4Address.getAddress()</target>
        </trans-unit>
        <trans-unit id="4ed86c91ff4cf8b4d285207097fb181aa8464cc5" translate="yes" xml:space="preserve">
          <source>Inet4Address.getHostAddress()</source>
          <target state="translated">Inet4Address.getHostAddress()</target>
        </trans-unit>
        <trans-unit id="d2946ef070dca0ad645f1669f2ca7e4f266241b2" translate="yes" xml:space="preserve">
          <source>Inet4Address.hashCode()</source>
          <target state="translated">Inet4Address.hashCode()</target>
        </trans-unit>
        <trans-unit id="c08249562182f996c33464a7f7d3ba97513a3a08" translate="yes" xml:space="preserve">
          <source>Inet4Address.isAnyLocalAddress()</source>
          <target state="translated">Inet4Address.isAnyLocalAddress()</target>
        </trans-unit>
        <trans-unit id="81c24d920ead58d2d0b1bb162db0b5c48b29ff77" translate="yes" xml:space="preserve">
          <source>Inet4Address.isLinkLocalAddress()</source>
          <target state="translated">Inet4Address.isLinkLocalAddress()</target>
        </trans-unit>
        <trans-unit id="c08e28df3603d0c8616d71d737facab1a718b664" translate="yes" xml:space="preserve">
          <source>Inet4Address.isLoopbackAddress()</source>
          <target state="translated">Inet4Address.isLoopbackAddress()</target>
        </trans-unit>
        <trans-unit id="dd5f95ace019507170212d70fbb7489921c32112" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMCGlobal()</source>
          <target state="translated">Inet4Address.isMCGlobal()</target>
        </trans-unit>
        <trans-unit id="69355f611912fbea9721a5f2c31a218dfe66ed86" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMCLinkLocal()</source>
          <target state="translated">Inet4Address.isMCLinkLocal()</target>
        </trans-unit>
        <trans-unit id="98142fabbd0f331d2945a18becb7ed9f6cc24154" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMCNodeLocal()</source>
          <target state="translated">Inet4Address.isMCNodeLocal()</target>
        </trans-unit>
        <trans-unit id="5571de59238d099d7f90057373bb8be879ac882e" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMCOrgLocal()</source>
          <target state="translated">Inet4Address.isMCOrgLocal()</target>
        </trans-unit>
        <trans-unit id="7b9cf583a02ba2093490b7444781c650c47bd8c6" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMCSiteLocal()</source>
          <target state="translated">Inet4Address.isMCSiteLocal()</target>
        </trans-unit>
        <trans-unit id="9c57112954f3e2128bee10c9e0f902fa90cb2706" translate="yes" xml:space="preserve">
          <source>Inet4Address.isMulticastAddress()</source>
          <target state="translated">Inet4Address.isMulticastAddress()</target>
        </trans-unit>
        <trans-unit id="68bff7072004370280678735230d09245dd2546f" translate="yes" xml:space="preserve">
          <source>Inet4Address.isSiteLocalAddress()</source>
          <target state="translated">Inet4Address.isSiteLocalAddress()</target>
        </trans-unit>
        <trans-unit id="3618b3775d67bec01f35d35a0155ddf739ee5e88" translate="yes" xml:space="preserve">
          <source>Inet6Address</source>
          <target state="translated">Inet6Address</target>
        </trans-unit>
        <trans-unit id="21927255d2d0018f75f322ff95824cd46daf6005" translate="yes" xml:space="preserve">
          <source>Inet6Address.equals()</source>
          <target state="translated">Inet6Address.equals()</target>
        </trans-unit>
        <trans-unit id="1fcdbca21f7efae257f9549eba758a8d3cb619b3" translate="yes" xml:space="preserve">
          <source>Inet6Address.getAddress()</source>
          <target state="translated">Inet6Address.getAddress()</target>
        </trans-unit>
        <trans-unit id="8eab52644b23d78b261c53b6e72ac8bff2902f94" translate="yes" xml:space="preserve">
          <source>Inet6Address.getByAddress()</source>
          <target state="translated">Inet6Address.getByAddress()</target>
        </trans-unit>
        <trans-unit id="215f2b0c2ef02f03a3eb0db90f102c96ce7a26f0" translate="yes" xml:space="preserve">
          <source>Inet6Address.getHostAddress()</source>
          <target state="translated">Inet6Address.getHostAddress()</target>
        </trans-unit>
        <trans-unit id="d5b70d38ca4ebe37e2c23d79609d10e6b9055bd4" translate="yes" xml:space="preserve">
          <source>Inet6Address.getScopeId()</source>
          <target state="translated">Inet6Address.getScopeId()</target>
        </trans-unit>
        <trans-unit id="53bcd9e12435ce5dfbd375818eab58ac4f89f787" translate="yes" xml:space="preserve">
          <source>Inet6Address.getScopedInterface()</source>
          <target state="translated">Inet6Address.getScopedInterface()</target>
        </trans-unit>
        <trans-unit id="d384caa10879750494576056091115f2db9a217d" translate="yes" xml:space="preserve">
          <source>Inet6Address.hashCode()</source>
          <target state="translated">Inet6Address.hashCode()</target>
        </trans-unit>
        <trans-unit id="d1d2d7e3b08ce921fde3e9300c2124789d47da94" translate="yes" xml:space="preserve">
          <source>Inet6Address.isAnyLocalAddress()</source>
          <target state="translated">Inet6Address.isAnyLocalAddress()</target>
        </trans-unit>
        <trans-unit id="08f2a8ecd3ed02c42c753a80522d9eba0ff3e64f" translate="yes" xml:space="preserve">
          <source>Inet6Address.isIPv4CompatibleAddress()</source>
          <target state="translated">Inet6Address.isIPv4CompatibleAddress()</target>
        </trans-unit>
        <trans-unit id="522d40c162cd31aa50c66736f93a59d90b364958" translate="yes" xml:space="preserve">
          <source>Inet6Address.isLinkLocalAddress()</source>
          <target state="translated">Inet6Address.isLinkLocalAddress()</target>
        </trans-unit>
        <trans-unit id="2f23736799342cb86511e09d78f2b20b10130d19" translate="yes" xml:space="preserve">
          <source>Inet6Address.isLoopbackAddress()</source>
          <target state="translated">Inet6Address.isLoopbackAddress()</target>
        </trans-unit>
        <trans-unit id="7d80822f6d5ada7e882e3748eeb0ea99975d872a" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMCGlobal()</source>
          <target state="translated">Inet6Address.isMCGlobal()</target>
        </trans-unit>
        <trans-unit id="5d2e7824360fed202880fd444c7b02ae8fd7aa67" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMCLinkLocal()</source>
          <target state="translated">Inet6Address.isMCLinkLocal()</target>
        </trans-unit>
        <trans-unit id="f629f7d65aa8e19488039926d80ec066ce183954" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMCNodeLocal()</source>
          <target state="translated">Inet6Address.isMCNodeLocal()</target>
        </trans-unit>
        <trans-unit id="57f8efb8ca8af7d0a2e4c238c44bf14e6473d690" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMCOrgLocal()</source>
          <target state="translated">Inet6Address.isMCOrgLocal()</target>
        </trans-unit>
        <trans-unit id="b26625659a04ba99271c343b091e4813fa330e80" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMCSiteLocal()</source>
          <target state="translated">Inet6Address.isMCSiteLocal()</target>
        </trans-unit>
        <trans-unit id="dade4b6d7a8fea4e61eb1762ded6b7056f8bd361" translate="yes" xml:space="preserve">
          <source>Inet6Address.isMulticastAddress()</source>
          <target state="translated">Inet6Address.isMulticastAddress()</target>
        </trans-unit>
        <trans-unit id="bb56e3eb0d201bd480b074cbee154863f151911f" translate="yes" xml:space="preserve">
          <source>Inet6Address.isSiteLocalAddress()</source>
          <target state="translated">Inet6Address.isSiteLocalAddress()</target>
        </trans-unit>
        <trans-unit id="c6769be52a5df54a536b9a244792ef0dd1161862" translate="yes" xml:space="preserve">
          <source>InetAddress</source>
          <target state="translated">InetAddress</target>
        </trans-unit>
        <trans-unit id="29fb54f5f1885c0702ddfd1dfe6dc77fc98aec66" translate="yes" xml:space="preserve">
          <source>InetAddress Caching</source>
          <target state="translated">InetAddress キャッシング</target>
        </trans-unit>
        <trans-unit id="bafedf6a7f4e35647308844ba34b92c3e9517f31" translate="yes" xml:space="preserve">
          <source>InetAddress.equals()</source>
          <target state="translated">InetAddress.equals()</target>
        </trans-unit>
        <trans-unit id="c835d88e37cbb4722b017cf4e5a852719c2e6d96" translate="yes" xml:space="preserve">
          <source>InetAddress.getAddress()</source>
          <target state="translated">InetAddress.getAddress()</target>
        </trans-unit>
        <trans-unit id="384d02efc5de47a0ec3445f3da4a6846bf9f6677" translate="yes" xml:space="preserve">
          <source>InetAddress.getAllByName()</source>
          <target state="translated">InetAddress.getAllByName()</target>
        </trans-unit>
        <trans-unit id="a1ef103c10661c8b5d79ebc95ab8726fedd3dec6" translate="yes" xml:space="preserve">
          <source>InetAddress.getByAddress()</source>
          <target state="translated">InetAddress.getByAddress()</target>
        </trans-unit>
        <trans-unit id="ec3c0b66e33e89a646c5c9bd2c7fb659af586c06" translate="yes" xml:space="preserve">
          <source>InetAddress.getByName()</source>
          <target state="translated">InetAddress.getByName()</target>
        </trans-unit>
        <trans-unit id="fd8035bcbad09a610c8a583f0230b78db0124264" translate="yes" xml:space="preserve">
          <source>InetAddress.getCanonicalHostName()</source>
          <target state="translated">InetAddress.getCanonicalHostName()</target>
        </trans-unit>
        <trans-unit id="933df0c33c0311c2d16a1be8c4d645cc9eff1fee" translate="yes" xml:space="preserve">
          <source>InetAddress.getHostAddress()</source>
          <target state="translated">InetAddress.getHostAddress()</target>
        </trans-unit>
        <trans-unit id="3af8c4082ffa917cd34fd0239d64b1940d45dfd8" translate="yes" xml:space="preserve">
          <source>InetAddress.getHostName()</source>
          <target state="translated">InetAddress.getHostName()</target>
        </trans-unit>
        <trans-unit id="8b85a6b94fd81bd740d6dae79ab1fed3ed5bdb51" translate="yes" xml:space="preserve">
          <source>InetAddress.getLocalHost()</source>
          <target state="translated">InetAddress.getLocalHost()</target>
        </trans-unit>
        <trans-unit id="fbfbe98301ce284124a16c2ffaa880cbf93dd527" translate="yes" xml:space="preserve">
          <source>InetAddress.getLoopbackAddress()</source>
          <target state="translated">InetAddress.getLoopbackAddress()</target>
        </trans-unit>
        <trans-unit id="db3c22f3c67a3886008b9f796931b24dae90a9c2" translate="yes" xml:space="preserve">
          <source>InetAddress.hashCode()</source>
          <target state="translated">InetAddress.hashCode()</target>
        </trans-unit>
        <trans-unit id="dad10909c17ad257fbb40607817aa5ad9df196f4" translate="yes" xml:space="preserve">
          <source>InetAddress.isAnyLocalAddress()</source>
          <target state="translated">InetAddress.isAnyLocalAddress()</target>
        </trans-unit>
        <trans-unit id="4e19926d4a0e8d5660e049888475a4f8b562d618" translate="yes" xml:space="preserve">
          <source>InetAddress.isLinkLocalAddress()</source>
          <target state="translated">InetAddress.isLinkLocalAddress()</target>
        </trans-unit>
        <trans-unit id="534692d6e22b041217f9a423a67c7ae6cc85b477" translate="yes" xml:space="preserve">
          <source>InetAddress.isLoopbackAddress()</source>
          <target state="translated">InetAddress.isLoopbackAddress()</target>
        </trans-unit>
        <trans-unit id="e01d1209a481e445fec391c5fd33bcbcf2eb2cc8" translate="yes" xml:space="preserve">
          <source>InetAddress.isMCGlobal()</source>
          <target state="translated">InetAddress.isMCGlobal()</target>
        </trans-unit>
        <trans-unit id="9f6eac0828ed06fb1feed47529daf6aed39b52c0" translate="yes" xml:space="preserve">
          <source>InetAddress.isMCLinkLocal()</source>
          <target state="translated">InetAddress.isMCLinkLocal()</target>
        </trans-unit>
        <trans-unit id="e72110aa977bfe2db80c91e8e8f6d1997256c1d4" translate="yes" xml:space="preserve">
          <source>InetAddress.isMCNodeLocal()</source>
          <target state="translated">InetAddress.isMCNodeLocal()</target>
        </trans-unit>
        <trans-unit id="61b3ee27e46a99c6499c4d44cd40fd525c53272f" translate="yes" xml:space="preserve">
          <source>InetAddress.isMCOrgLocal()</source>
          <target state="translated">InetAddress.isMCOrgLocal()</target>
        </trans-unit>
        <trans-unit id="88ace049a123eec69c7c486c2f9c44ce56e9fa20" translate="yes" xml:space="preserve">
          <source>InetAddress.isMCSiteLocal()</source>
          <target state="translated">InetAddress.isMCSiteLocal()</target>
        </trans-unit>
        <trans-unit id="e2304344bdf570f363de2d3eeae107160b5a4ba0" translate="yes" xml:space="preserve">
          <source>InetAddress.isMulticastAddress()</source>
          <target state="translated">InetAddress.isMulticastAddress()</target>
        </trans-unit>
        <trans-unit id="d93fb6762643ac9d83610f4c4b8b3b034cb407d9" translate="yes" xml:space="preserve">
          <source>InetAddress.isReachable()</source>
          <target state="translated">InetAddress.isReachable()</target>
        </trans-unit>
        <trans-unit id="eba4ea736624a867c5003ae12996926b944e5f92" translate="yes" xml:space="preserve">
          <source>InetAddress.isSiteLocalAddress()</source>
          <target state="translated">InetAddress.isSiteLocalAddress()</target>
        </trans-unit>
        <trans-unit id="c4b20fd36411d9effb634ca94d70b79369082fb4" translate="yes" xml:space="preserve">
          <source>InetAddress.toString()</source>
          <target state="translated">InetAddress.toString()</target>
        </trans-unit>
        <trans-unit id="4444f62dc5492a6a4c8e0847f9d6f6eb30e09da5" translate="yes" xml:space="preserve">
          <source>InetSocketAddress</source>
          <target state="translated">InetSocketAddress</target>
        </trans-unit>
        <trans-unit id="eed17ec0e8e9bd491313650bc8ab77cd7f678089" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.createUnresolved()</source>
          <target state="translated">InetSocketAddress.createUnresolved()</target>
        </trans-unit>
        <trans-unit id="91ad0d678b567dcdc030fd77c6104710aa9ea7c7" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.equals()</source>
          <target state="translated">InetSocketAddress.equals()</target>
        </trans-unit>
        <trans-unit id="f070a98aeba4558ddcf91356124cb61736e16490" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.getAddress()</source>
          <target state="translated">InetSocketAddress.getAddress()</target>
        </trans-unit>
        <trans-unit id="60d687fb4daa8bd9e2b915276a5e12812c1e1665" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.getHostName()</source>
          <target state="translated">InetSocketAddress.getHostName()</target>
        </trans-unit>
        <trans-unit id="6d19ecbe1f9b8351298fd6e9576844ee22af4d63" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.getHostString()</source>
          <target state="translated">InetSocketAddress.getHostString()</target>
        </trans-unit>
        <trans-unit id="93bc0b3e367c4e5cfa2eb57e715f433316f4efe9" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.getPort()</source>
          <target state="translated">InetSocketAddress.getPort()</target>
        </trans-unit>
        <trans-unit id="0b87424d8f84f93abeeb097d842100cb6637021c" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.hashCode()</source>
          <target state="translated">InetSocketAddress.hashCode()</target>
        </trans-unit>
        <trans-unit id="a13f8ca8c8bfe023f2838cd216e1d5510244a504" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.isUnresolved()</source>
          <target state="translated">InetSocketAddress.isUnresolved()</target>
        </trans-unit>
        <trans-unit id="6c1d76964069239a4dddb0312aa4186e2d1dd560" translate="yes" xml:space="preserve">
          <source>InetSocketAddress.toString()</source>
          <target state="translated">InetSocketAddress.toString()</target>
        </trans-unit>
        <trans-unit id="58150217c889a01c16e6fcc577d6da57131a544f" translate="yes" xml:space="preserve">
          <source>Infers a binary name of a file object based on a location. The binary name returned might not be a valid binary name according to</source>
          <target state="translated">場所に基づいてファイルオブジェクトのバイナリ名を推定します。返されたバイナリ名は</target>
        </trans-unit>
        <trans-unit id="c43bf61288f4a15400a95cddfcd75feb7d3cea78" translate="yes" xml:space="preserve">
          <source>Infinity is formatted as a string, which typically has a single character &lt;code&gt;\u221E&lt;/code&gt;, with the positive or negative prefixes and suffixes applied. The infinity string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object.</source>
          <target state="translated">Infinityは文字列としてフォーマットされ、通常は1文字の &lt;code&gt;\u221E&lt;/code&gt; で、正または負の接頭辞と接尾辞が適用されます。無限文字列は、 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトによって決定されます。</target>
        </trans-unit>
        <trans-unit id="9f97a77ad81e9b6a3053d9ff79c1fe2334dfbac9" translate="yes" xml:space="preserve">
          <source>Inflater</source>
          <target state="translated">Inflater</target>
        </trans-unit>
        <trans-unit id="c7d4abf12ec384365bef7790884ac3991b2e5080" translate="yes" xml:space="preserve">
          <source>Inflater.end()</source>
          <target state="translated">Inflater.end()</target>
        </trans-unit>
        <trans-unit id="54e9fef63589e4fbece394d74bc612242761e713" translate="yes" xml:space="preserve">
          <source>Inflater.finalize()</source>
          <target state="translated">Inflater.finalize()</target>
        </trans-unit>
        <trans-unit id="3bd4463c43b31bf36a4da712b606bb0a7be3880a" translate="yes" xml:space="preserve">
          <source>Inflater.finished()</source>
          <target state="translated">Inflater.finished()</target>
        </trans-unit>
        <trans-unit id="ab6bb7067544b189821e79a7353810fd90543c0d" translate="yes" xml:space="preserve">
          <source>Inflater.getAdler()</source>
          <target state="translated">Inflater.getAdler()</target>
        </trans-unit>
        <trans-unit id="e4d237829f33e5485f32103995e560a14cee4a6e" translate="yes" xml:space="preserve">
          <source>Inflater.getBytesRead()</source>
          <target state="translated">Inflater.getBytesRead()</target>
        </trans-unit>
        <trans-unit id="a9a81ea663d06f6ceae75d6ccf222a44e39a3eda" translate="yes" xml:space="preserve">
          <source>Inflater.getBytesWritten()</source>
          <target state="translated">Inflater.getBytesWritten()</target>
        </trans-unit>
        <trans-unit id="1eab2c6083a28e775f5459d1236d825eb240f842" translate="yes" xml:space="preserve">
          <source>Inflater.getRemaining()</source>
          <target state="translated">Inflater.getRemaining()</target>
        </trans-unit>
        <trans-unit id="aac2da7c76b9b5c84cb35b3fd097c7465aafbeaf" translate="yes" xml:space="preserve">
          <source>Inflater.getTotalIn()</source>
          <target state="translated">Inflater.getTotalIn()</target>
        </trans-unit>
        <trans-unit id="af644727c2623d20d03701062d3f0f6605191fb7" translate="yes" xml:space="preserve">
          <source>Inflater.getTotalOut()</source>
          <target state="translated">Inflater.getTotalOut()</target>
        </trans-unit>
        <trans-unit id="51cf2d071cfe65cec498c7950a6cc12101a4d6ff" translate="yes" xml:space="preserve">
          <source>Inflater.inflate()</source>
          <target state="translated">Inflater.inflate()</target>
        </trans-unit>
        <trans-unit id="24357e7c05fab23a59cee40c301b9a699d08bcb8" translate="yes" xml:space="preserve">
          <source>Inflater.needsDictionary()</source>
          <target state="translated">Inflater.needsDictionary()</target>
        </trans-unit>
        <trans-unit id="aa76e9562a74ca4497ff1d81971792398e87e045" translate="yes" xml:space="preserve">
          <source>Inflater.needsInput()</source>
          <target state="translated">Inflater.needsInput()</target>
        </trans-unit>
        <trans-unit id="453fed59c9d97a4e80143008db8ff2fd8586f44d" translate="yes" xml:space="preserve">
          <source>Inflater.reset()</source>
          <target state="translated">Inflater.reset()</target>
        </trans-unit>
        <trans-unit id="d73dd87d5ec20d141e0a9fe84edcf68cc47d733b" translate="yes" xml:space="preserve">
          <source>Inflater.setDictionary()</source>
          <target state="translated">Inflater.setDictionary()</target>
        </trans-unit>
        <trans-unit id="17f54c35799849f2362e95bb57b9cfee02b60021" translate="yes" xml:space="preserve">
          <source>Inflater.setInput()</source>
          <target state="translated">Inflater.setInput()</target>
        </trans-unit>
        <trans-unit id="2e99a06359c28158a5b9cb15dd211e134f5f67e0" translate="yes" xml:space="preserve">
          <source>InflaterInputStream</source>
          <target state="translated">InflaterInputStream</target>
        </trans-unit>
        <trans-unit id="67f13583c527fb0421af4de5d9b28ec2fa0ba3a9" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.available()</source>
          <target state="translated">InflaterInputStream.available()</target>
        </trans-unit>
        <trans-unit id="860dd363fae82b503bd069e3d9ac0d50b1795a2f" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.close()</source>
          <target state="translated">InflaterInputStream.close()</target>
        </trans-unit>
        <trans-unit id="6c03f8d38cf8e1be157cfcc223c246ddf9f75bf2" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.fill()</source>
          <target state="translated">InflaterInputStream.fill()</target>
        </trans-unit>
        <trans-unit id="19bf55ac0a2912904f56e8401313ec22ff0b8b7b" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.mark()</source>
          <target state="translated">InflaterInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="68f252447e5168e2af7fb8b727f2b5fe7047644e" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.markSupported()</source>
          <target state="translated">InflaterInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="0580a33d66fae3a2edfb5294f430492bfcbadf76" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.read()</source>
          <target state="translated">InflaterInputStream.read()</target>
        </trans-unit>
        <trans-unit id="c6dfd1fccc5001a3b17f32670e2f75cdc737a86b" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.reset()</source>
          <target state="translated">InflaterInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="efd992ddea57404a0b1ccae58dd93c0483423e92" translate="yes" xml:space="preserve">
          <source>InflaterInputStream.skip()</source>
          <target state="translated">InflaterInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="bee6cace419f3522fdba16ffa583756b77e17a3b" translate="yes" xml:space="preserve">
          <source>InflaterOutputStream</source>
          <target state="translated">InflaterOutputStream</target>
        </trans-unit>
        <trans-unit id="36c9f9f1e574682e8692d7323c5829d80f10cbd1" translate="yes" xml:space="preserve">
          <source>InflaterOutputStream.close()</source>
          <target state="translated">InflaterOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="6f9d94e61f743eece06d9489396e636da75e20f4" translate="yes" xml:space="preserve">
          <source>InflaterOutputStream.finish()</source>
          <target state="translated">InflaterOutputStream.finish()</target>
        </trans-unit>
        <trans-unit id="0d6c4cb3036ffe0c55a6e67066c371396e2d8684" translate="yes" xml:space="preserve">
          <source>InflaterOutputStream.flush()</source>
          <target state="translated">InflaterOutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="2978b5de77ba829085ffc255fe350eb6e6a7071a" translate="yes" xml:space="preserve">
          <source>InflaterOutputStream.write()</source>
          <target state="translated">InflaterOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="4b631f69842530d659306c8f06dbad594a6b1807" translate="yes" xml:space="preserve">
          <source>Info</source>
          <target state="translated">Info</target>
        </trans-unit>
        <trans-unit id="3326535bbabe3954d83c922e1009e07c41222c50" translate="yes" xml:space="preserve">
          <source>Informally, the file object returned by this method is located in the concatenation of the location, package name, and relative name or next to the sibling argument. See &lt;a href=&quot;javafilemanager#getFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getFileForInput&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">非公式には、このメソッドによって返されるファイルオブジェクトは、場所、パッケージ名、相対名の連結、または兄弟引数の隣にあります。例については、&lt;a href=&quot;javafilemanager#getFileForInput-javax.tools.JavaFileManager.Location-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getFileForInput&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="25a2f339687ef13700ee6245b44bd4990971e102" translate="yes" xml:space="preserve">
          <source>Informally, the file object returned by this method is located in the concatenation of the location, package name, and relative name. For example, to locate the properties file &quot;resources/compiler.properties&quot; in the package &quot;com.sun.tools.javac&quot; in the &lt;a href=&quot;standardlocation#SOURCE_PATH&quot;&gt;SOURCE_PATH&lt;/a&gt; location, this method might be called like so:</source>
          <target state="translated">非公式には、このメソッドによって返されるファイルオブジェクトは、場所、パッケージ名、および相対名の連結にあります。たとえば、&lt;a href=&quot;standardlocation#SOURCE_PATH&quot;&gt;SOURCE_PATHの&lt;/a&gt;場所にあるパッケージ「com.sun.tools.javac」のプロパティファイル「resources / compiler.properties」を見つけるには、このメソッドを次のように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c2c6861203b31f182592b4af7f24ff73271dd63e" translate="yes" xml:space="preserve">
          <source>Information about a &lt;em&gt;lock&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;に関する情報。</target>
        </trans-unit>
        <trans-unit id="22c5aa35e73efb19fa9f3e72da3e08cb9d40de39" translate="yes" xml:space="preserve">
          <source>Information about a &lt;em&gt;lock&lt;/em&gt;. A lock can be a built-in object monitor, an &lt;em&gt;ownable synchronizer&lt;/em&gt;, or the &lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; object associated with synchronizers.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;に関する情報。ロックは、組み込みのオブジェクトモニター、&lt;em&gt;所有可能なシンクロナイザー&lt;/em&gt;、または&lt;em&gt;シンクロナイザー&lt;/em&gt;に関連付けられた&lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;オブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="e4404105202678def27a1d0dd9d0462196a8cb26" translate="yes" xml:space="preserve">
          <source>Information about an object monitor lock.</source>
          <target state="translated">オブジェクトモニターロックに関する情報です。</target>
        </trans-unit>
        <trans-unit id="dd9937fe5c66591ac2b56e4205e03198fc9d3854" translate="yes" xml:space="preserve">
          <source>Information about an object monitor lock. An object monitor is locked when entering a synchronization block or method on that object.</source>
          <target state="translated">オブジェクト・モニタのロックに関する情報。オブジェクトモニタは、そのオブジェクト上の同期ブロックまたはメソッドに入るとロックされます。</target>
        </trans-unit>
        <trans-unit id="cf45fa4f00003dc78d786019fd27808dc26fab1c" translate="yes" xml:space="preserve">
          <source>Information about method parameters.</source>
          <target state="translated">メソッドのパラメータに関する情報です。</target>
        </trans-unit>
        <trans-unit id="698f8e4674cacd0e53a781fd09c2fd8d27dfeba7" translate="yes" xml:space="preserve">
          <source>Information about method parameters. A &lt;code&gt;Parameter&lt;/code&gt; provides information about method parameters, including its name and modifiers. It also provides an alternate means of obtaining attributes for the parameter.</source>
          <target state="translated">メソッドパラメータに関する情報。A &lt;code&gt;Parameter&lt;/code&gt; 、その名前と修飾子を含むメソッドのパラメータに関する情報を提供します。また、パラメーターの属性を取得する代替手段も提供します。</target>
        </trans-unit>
        <trans-unit id="ddcc813d1a55a45f3f695147ceccd22331ec4b4a" translate="yes" xml:space="preserve">
          <source>Information message.</source>
          <target state="translated">メッセージ情報です。</target>
        </trans-unit>
        <trans-unit id="e7c9e25f8f66548de384b9dbe38fbe63699b7d8f" translate="yes" xml:space="preserve">
          <source>Informative message from the tool.</source>
          <target state="translated">ツールからの有益なメッセージ。</target>
        </trans-unit>
        <trans-unit id="35814c2af09dd6d06610f8d4adf179ab13bcc8cb" translate="yes" xml:space="preserve">
          <source>Informs the caller whether this synthesizer is capable of loading instruments from the specified soundbank. If the soundbank is unsupported, any attempts to load instruments from it will result in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">このシンセサイザが指定されたサウンドバンクから音源をロードできるかどうかを呼び出し元に通知します。サウンドバンクがサポートされていない場合、サウンドバンクから音源をロードしようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="aef887cf4126464abe0eb6178d53818b5d777f4b" translate="yes" xml:space="preserve">
          <source>Informs the listener that a line's state has changed. The listener can then invoke &lt;code&gt;LineEvent&lt;/code&gt; methods to obtain information about the event.</source>
          <target state="translated">ラインの状態が変化したことをリスナーに通知します。その後、リスナーは &lt;code&gt;LineEvent&lt;/code&gt; メソッドを呼び出して、イベントに関する情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="b9197b9103f0e7ee8d5f6a5d4baba9b8dfd6b9ca" translate="yes" xml:space="preserve">
          <source>Inheritable thread-local variables are used in preference to ordinary thread-local variables when the per-thread-attribute being maintained in the variable (e.g., User ID, Transaction ID) must be automatically transmitted to any child threads that are created.</source>
          <target state="translated">継承可能なスレッドローカル変数は、通常のスレッドローカル変数よりも優先して使用されます。変数に保持されているスレッドごとの属性(例:ユーザID、トランザクションID)が、作成された子スレッドに自動的に送信されなければならない場合です。</target>
        </trans-unit>
        <trans-unit id="b75e1b29c51c7da8a1e837dedbcdb029c87e8ef9" translate="yes" xml:space="preserve">
          <source>InheritableThreadLocal</source>
          <target state="translated">InheritableThreadLocal</target>
        </trans-unit>
        <trans-unit id="136a1359c682112f02f3741bbd3b70bedd6be50d" translate="yes" xml:space="preserve">
          <source>InheritableThreadLocal.childValue()</source>
          <target state="translated">InheritableThreadLocal.childValue()</target>
        </trans-unit>
        <trans-unit id="58823af05ebe1ba3ff034e5ec492dcbd5b2f86cc" translate="yes" xml:space="preserve">
          <source>Inherited</source>
          <target state="translated">Inherited</target>
        </trans-unit>
        <trans-unit id="4060350fcef7ace17a94203e418755e177dbb33a" translate="yes" xml:space="preserve">
          <source>Initial Handshake - The initial handshake is a procedure by which the two peers exchange communication parameters until an SSLSession is established. Application data can not be sent during this phase.</source>
          <target state="translated">初期ハンドシェイク-初期ハンドシェイクは、SSLSessionが確立されるまでの間、2つのピアが通信パラメータを交換する手順です。このフェーズではアプリケーションデータを送信することはできません。</target>
        </trans-unit>
        <trans-unit id="7139ef263155d8dc4166a8c75fcf4e772c23ea11" translate="yes" xml:space="preserve">
          <source>InitialContext</source>
          <target state="translated">InitialContext</target>
        </trans-unit>
        <trans-unit id="bff209d473abcf6dd72a8a2b553cf5b7bdb797ef" translate="yes" xml:space="preserve">
          <source>InitialContext.addToEnvironment()</source>
          <target state="translated">InitialContext.addToEnvironment()</target>
        </trans-unit>
        <trans-unit id="cacef3b23f3b122159470fb81be9a8d37b6fdbc4" translate="yes" xml:space="preserve">
          <source>InitialContext.bind()</source>
          <target state="translated">InitialContext.bind()</target>
        </trans-unit>
        <trans-unit id="c4657293b558a561ba99b6d53189f3bae59783e9" translate="yes" xml:space="preserve">
          <source>InitialContext.close()</source>
          <target state="translated">InitialContext.close()</target>
        </trans-unit>
        <trans-unit id="ead57b92886e68a61e339ccfcd8b06c087c52714" translate="yes" xml:space="preserve">
          <source>InitialContext.composeName()</source>
          <target state="translated">InitialContext.composeName()</target>
        </trans-unit>
        <trans-unit id="60827134bc50e7e4bf844555f0a6e96574c21fc0" translate="yes" xml:space="preserve">
          <source>InitialContext.createSubcontext()</source>
          <target state="translated">InitialContext.createSubcontext()</target>
        </trans-unit>
        <trans-unit id="df19b13557dc191f99d7252b276dd45509b54842" translate="yes" xml:space="preserve">
          <source>InitialContext.destroySubcontext()</source>
          <target state="translated">InitialContext.destroySubcontext()</target>
        </trans-unit>
        <trans-unit id="eac1145e0058ff11972e5dd4d78426f2a387a8ed" translate="yes" xml:space="preserve">
          <source>InitialContext.doLookup()</source>
          <target state="translated">InitialContext.doLookup()</target>
        </trans-unit>
        <trans-unit id="6487754f24c288cb5f20f35688d570519549ee52" translate="yes" xml:space="preserve">
          <source>InitialContext.getDefaultInitCtx()</source>
          <target state="translated">InitialContext.getDefaultInitCtx()</target>
        </trans-unit>
        <trans-unit id="e5e6a3896507b5b0e1fb49fc57076ce19a5814a9" translate="yes" xml:space="preserve">
          <source>InitialContext.getEnvironment()</source>
          <target state="translated">InitialContext.getEnvironment()</target>
        </trans-unit>
        <trans-unit id="a95a87e1f3369921cb4ec5d9bf0782ae8852cee5" translate="yes" xml:space="preserve">
          <source>InitialContext.getNameInNamespace()</source>
          <target state="translated">InitialContext.getNameInNamespace()</target>
        </trans-unit>
        <trans-unit id="cc0e4ab9d3ebba8aa4e2084724c59de60f6577c5" translate="yes" xml:space="preserve">
          <source>InitialContext.getNameParser()</source>
          <target state="translated">InitialContext.getNameParser()</target>
        </trans-unit>
        <trans-unit id="bf644890fe3fa1ea01c29034952d557939f06948" translate="yes" xml:space="preserve">
          <source>InitialContext.getURLOrDefaultInitCtx()</source>
          <target state="translated">InitialContext.getURLOrDefaultInitCtx()</target>
        </trans-unit>
        <trans-unit id="a0fcb300e5555eab1d2587e5cb8f1883c8fc8d37" translate="yes" xml:space="preserve">
          <source>InitialContext.init()</source>
          <target state="translated">InitialContext.init()</target>
        </trans-unit>
        <trans-unit id="c1373e54a881b32df71d4f61c749a95de88027a2" translate="yes" xml:space="preserve">
          <source>InitialContext.list()</source>
          <target state="translated">InitialContext.list()</target>
        </trans-unit>
        <trans-unit id="9d7a9dfbacb8b81e9193b1c39723b24f8629b989" translate="yes" xml:space="preserve">
          <source>InitialContext.listBindings()</source>
          <target state="translated">InitialContext.listBindings()</target>
        </trans-unit>
        <trans-unit id="cc4a81809b93c4b67efa0d7dd02a07c7cab6676d" translate="yes" xml:space="preserve">
          <source>InitialContext.lookup()</source>
          <target state="translated">InitialContext.lookup()</target>
        </trans-unit>
        <trans-unit id="36989eda3fee9727f6a6668a461545d32c067361" translate="yes" xml:space="preserve">
          <source>InitialContext.lookupLink()</source>
          <target state="translated">InitialContext.lookupLink()</target>
        </trans-unit>
        <trans-unit id="06573bb73562895da5deb2db17b4ad16ba36922d" translate="yes" xml:space="preserve">
          <source>InitialContext.rebind()</source>
          <target state="translated">InitialContext.rebind()</target>
        </trans-unit>
        <trans-unit id="adf359649dc3d93d19c4266d93e70d90f2c00561" translate="yes" xml:space="preserve">
          <source>InitialContext.removeFromEnvironment()</source>
          <target state="translated">InitialContext.removeFromEnvironment()</target>
        </trans-unit>
        <trans-unit id="d2b4fd712bc0139982cd73e1a8755d3bdfd5ac68" translate="yes" xml:space="preserve">
          <source>InitialContext.rename()</source>
          <target state="translated">InitialContext.rename()</target>
        </trans-unit>
        <trans-unit id="f48064006f024124cf8500f3080e221ed1f3b0e7" translate="yes" xml:space="preserve">
          <source>InitialContext.unbind()</source>
          <target state="translated">InitialContext.unbind()</target>
        </trans-unit>
        <trans-unit id="0076959cfba22bdfa9c3282def6a1e1e02268067" translate="yes" xml:space="preserve">
          <source>InitialContextFactory</source>
          <target state="translated">InitialContextFactory</target>
        </trans-unit>
        <trans-unit id="d663b342f96ccb072ac03d07e50635107d73f1a9" translate="yes" xml:space="preserve">
          <source>InitialContextFactory.getInitialContext()</source>
          <target state="translated">InitialContextFactory.getInitialContext()</target>
        </trans-unit>
        <trans-unit id="a935cc13f482130e7efaeb6c4fa688fc1c110d02" translate="yes" xml:space="preserve">
          <source>InitialContextFactoryBuilder</source>
          <target state="translated">InitialContextFactoryBuilder</target>
        </trans-unit>
        <trans-unit id="e73651005f7efb6f466c73796843a657520630f5" translate="yes" xml:space="preserve">
          <source>InitialContextFactoryBuilder.createInitialContextFactory()</source>
          <target state="translated">InitialContextFactoryBuilder.createInitialContextFactory()</target>
        </trans-unit>
        <trans-unit id="8a2d85a719be078e72ce73395465042989339025" translate="yes" xml:space="preserve">
          <source>InitialDirContext</source>
          <target state="translated">InitialDirContext</target>
        </trans-unit>
        <trans-unit id="bc17c994ef149a0c681d894cdac9817c6775e762" translate="yes" xml:space="preserve">
          <source>InitialDirContext.bind()</source>
          <target state="translated">InitialDirContext.bind()</target>
        </trans-unit>
        <trans-unit id="ed4e6b9fdc48556f2b215daeb4c387831898a1bd" translate="yes" xml:space="preserve">
          <source>InitialDirContext.createSubcontext()</source>
          <target state="translated">InitialDirContext.createSubcontext()</target>
        </trans-unit>
        <trans-unit id="50957cb2fb33130948e38492fa9ee396862f0147" translate="yes" xml:space="preserve">
          <source>InitialDirContext.getAttributes()</source>
          <target state="translated">InitialDirContext.getAttributes()</target>
        </trans-unit>
        <trans-unit id="d0208f807ead7882c246c04d81cc8265e28a7d42" translate="yes" xml:space="preserve">
          <source>InitialDirContext.getSchema()</source>
          <target state="translated">InitialDirContext.getSchema()</target>
        </trans-unit>
        <trans-unit id="c23b0b9087be7462c8670d0e544dc9e114f4b366" translate="yes" xml:space="preserve">
          <source>InitialDirContext.getSchemaClassDefinition()</source>
          <target state="translated">InitialDirContext.getSchemaClassDefinition()</target>
        </trans-unit>
        <trans-unit id="bb2fdd6014c0270269ef60b3e127a379c1c84cda" translate="yes" xml:space="preserve">
          <source>InitialDirContext.modifyAttributes()</source>
          <target state="translated">InitialDirContext.modifyAttributes()</target>
        </trans-unit>
        <trans-unit id="6e28fb005beb51d051a450a83cf8a9d4321d031d" translate="yes" xml:space="preserve">
          <source>InitialDirContext.rebind()</source>
          <target state="translated">InitialDirContext.rebind()</target>
        </trans-unit>
        <trans-unit id="4ed8e2cfe4efb4b6bc7edc7b0838e0080b281c93" translate="yes" xml:space="preserve">
          <source>InitialDirContext.search()</source>
          <target state="translated">InitialDirContext.search()</target>
        </trans-unit>
        <trans-unit id="098f4d4324c3e8791d179fd05ecf3855bbd17223" translate="yes" xml:space="preserve">
          <source>InitialLdapContext</source>
          <target state="translated">InitialLdapContext</target>
        </trans-unit>
        <trans-unit id="02fb3792f19e0b254d3969cf4cd78bd4d7f90e42" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.extendedOperation()</source>
          <target state="translated">InitialLdapContext.extendedOperation()</target>
        </trans-unit>
        <trans-unit id="7528f40a1165594dec2d67951f755b710d18e0d2" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.getConnectControls()</source>
          <target state="translated">InitialLdapContext.getConnectControls()</target>
        </trans-unit>
        <trans-unit id="8a6697923d890f9b8e40453e9c340a326aad5753" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.getRequestControls()</source>
          <target state="translated">InitialLdapContext.getRequestControls()</target>
        </trans-unit>
        <trans-unit id="56160b70fa64b06684431ab6f6ea6581dd15af9d" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.getResponseControls()</source>
          <target state="translated">InitialLdapContext.getResponseControls()</target>
        </trans-unit>
        <trans-unit id="117e968e6bd8206be47ba451fcd0a3039837f9b1" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.newInstance()</source>
          <target state="translated">InitialLdapContext.newInstance()</target>
        </trans-unit>
        <trans-unit id="66acb59b4386a6b23bc62ad08ee124502b246fc1" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.reconnect()</source>
          <target state="translated">InitialLdapContext.reconnect()</target>
        </trans-unit>
        <trans-unit id="63d45ffdf59ad40b8736184626cdc3c6e2c95f7c" translate="yes" xml:space="preserve">
          <source>InitialLdapContext.setRequestControls()</source>
          <target state="translated">InitialLdapContext.setRequestControls()</target>
        </trans-unit>
        <trans-unit id="65e7512c70d7cf2511e9650efe9bcd753938e7ad" translate="yes" xml:space="preserve">
          <source>Initialization, with either</source>
          <target state="translated">初期化は、以下のいずれかで行います。</target>
        </trans-unit>
        <trans-unit id="6f9612cea31e1bd3260c9aa7c3dd2ebeeedd4d88" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;FileHandler&lt;/code&gt; to write to a set of files with optional append. When (approximately) the given limit has been written to one file, another file will be opened. The output will cycle through a set of count files.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; を初期化して、オプションの追加でファイルのセットに書き込みます。（およそ）与えられた制限が1つのファイルに書き込まれると、別のファイルが開かれます。出力は、一連のカウントファイルを循環します。</target>
        </trans-unit>
        <trans-unit id="318371bbe5409c34ea950448eb1b503d563d523c" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;FileHandler&lt;/code&gt; to write to a set of files. When (approximately) the given limit has been written to one file, another file will be opened. The output will cycle through a set of count files.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; を初期化して、一連のファイルに書き込みます。（およそ）与えられた制限が1つのファイルに書き込まれると、別のファイルが開かれます。出力は、一連のカウントファイルを循環します。</target>
        </trans-unit>
        <trans-unit id="e611d27a5eea4fa6d38eb9da782a7edae1acc288" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;FileHandler&lt;/code&gt; to write to the given filename, with optional append.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; を初期化して、指定したファイル名に書き込み、オプションで追加します。</target>
        </trans-unit>
        <trans-unit id="80e74e9bc9358e21090015aaa1957bd6037a4ff7" translate="yes" xml:space="preserve">
          <source>Initialize a &lt;code&gt;FileHandler&lt;/code&gt; to write to the given filename.</source>
          <target state="translated">&lt;code&gt;FileHandler&lt;/code&gt; を初期化して、指定されたファイル名に書き込みます。</target>
        </trans-unit>
        <trans-unit id="8af0a74ec55296b48a8ef0b76f640ca047c365f1" translate="yes" xml:space="preserve">
          <source>Initialize a new instance of this class.</source>
          <target state="translated">このクラスの新しいインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="e924151e685f7a8adc8f76ef1bb3f51b6b36abe8" translate="yes" xml:space="preserve">
          <source>Initialize the generator by casting the result to a DSAKeyPairGenerator and calling one of the &lt;code&gt;initialize&lt;/code&gt; methods from this DSAKeyPairGenerator interface.</source>
          <target state="translated">結果をDSAKeyPairGeneratorにキャストし、このDSAKeyPairGeneratorインターフェースから &lt;code&gt;initialize&lt;/code&gt; メソッドの1つを呼び出すことにより、ジェネレーターを初期化します。</target>
        </trans-unit>
        <trans-unit id="901ab5fdbdaa874bec875a144ebd70266c68ca1b" translate="yes" xml:space="preserve">
          <source>Initialize this LoginModule.</source>
          <target state="translated">このLoginModuleを初期化します。</target>
        </trans-unit>
        <trans-unit id="f75ce13703304bad8fed806307bf1ccf1d56f296" translate="yes" xml:space="preserve">
          <source>Initialize this object for signing. If this method is called again with a different argument, it negates the effect of this call.</source>
          <target state="translated">署名のためにこのオブジェクトを初期化します。もしこのメソッドが別の引数で再度呼ばれた場合、この呼び出しの効果は無効になります。</target>
        </trans-unit>
        <trans-unit id="93a5c2350a0632f8755f13f4f24e6dd02ce30b22" translate="yes" xml:space="preserve">
          <source>Initializes a ModelMBean object using ModelMBeanInfo passed in. This method makes it possible to set a customized ModelMBeanInfo on the ModelMBean as long as it is not registered with the MBeanServer.</source>
          <target state="translated">渡された ModelMBeanInfo を使用して ModelMBean オブジェクトを初期化します。このメソッドは、MBeanServerに登録されていない限り、カスタマイズされたModelMBeanInfoをModelMBeanに設定することができます。</target>
        </trans-unit>
        <trans-unit id="53394982eebe2676d85cd98648461917a0cd025c" translate="yes" xml:space="preserve">
          <source>Initializes a new charset provider.</source>
          <target state="translated">新しい文字セットプロバイダを初期化します。</target>
        </trans-unit>
        <trans-unit id="92a94c64be7a285d2117c3566a4eff048f98fb9d" translate="yes" xml:space="preserve">
          <source>Initializes a new charset with the given canonical name and alias set.</source>
          <target state="translated">与えられた正準名とエイリアスセットで新しい文字セットを初期化します。</target>
        </trans-unit>
        <trans-unit id="c3ddc2a276ec0c8dabdd9e039fed96ad192d2717" translate="yes" xml:space="preserve">
          <source>Initializes a new decoder. The new decoder will have the given chars-per-byte values and its replacement will be the string &lt;code&gt;&quot;\uFFFD&quot;&lt;/code&gt;.</source>
          <target state="translated">新しいデコーダを初期化します。新しいデコーダーは指定されたバイトあたりの &lt;code&gt;&quot;\uFFFD&quot;&lt;/code&gt; 値を持ち、その置き換えは文字列&quot;\ uFFFD&quot;になります。</target>
        </trans-unit>
        <trans-unit id="023a709b62ac98a24ab0bb77d33e4d352d90eea8" translate="yes" xml:space="preserve">
          <source>Initializes a new encoder. The new encoder will have the given bytes-per-char and replacement values.</source>
          <target state="translated">新しいエンコーダを初期化します。新しいエンコーダは、与えられた 1 文字あたりのバイト数と置換値を持ちます。</target>
        </trans-unit>
        <trans-unit id="dbececf0a9e2332482473e09ca117af8727c0d2c" translate="yes" xml:space="preserve">
          <source>Initializes a new encoder. The new encoder will have the given bytes-per-char values and its replacement will be the byte array &lt;code&gt;{&lt;/code&gt;&lt;code&gt;(byte)'?'&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">新しいエンコーダを初期化します。新しいエンコーダーは指定されたchars-per-char値を持ち、その置換はバイト配列 &lt;code&gt;{&lt;/code&gt; &lt;code&gt;(byte)'?'&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c2c6c013915694c75eff4b616add2a629d3fc99" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of this class.</source>
          <target state="translated">このクラスの新しいインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="e1a14b7ef6fc3a9ed2de365ed0375d1f9f005024" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the argument, which must be an &lt;code&gt;Enumeration&lt;/code&gt; that produces objects whose run-time type is &lt;code&gt;InputStream&lt;/code&gt;. The input streams that are produced by the enumeration will be read, in order, to provide the bytes to be read from this &lt;code&gt;SequenceInputStream&lt;/code&gt;. After each input stream from the enumeration is exhausted, it is closed by calling its &lt;code&gt;close&lt;/code&gt; method.</source>
          <target state="translated">引数を覚えて、新しく作成された &lt;code&gt;SequenceInputStream&lt;/code&gt; を初期化します。引数は、ランタイムタイプが &lt;code&gt;InputStream&lt;/code&gt; であるオブジェクトを生成する &lt;code&gt;Enumeration&lt;/code&gt; である必要があります。列挙によって生成された入力ストリームは、この &lt;code&gt;SequenceInputStream&lt;/code&gt; から読み取られるバイトを提供するために、順に読み取られます。列挙からの各入力ストリームが使い果たされた後、その &lt;code&gt;close&lt;/code&gt; メソッドを呼び出すことによって閉じられます。</target>
        </trans-unit>
        <trans-unit id="44030db17202c944200801ebabc72fcac8c15233" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the two arguments, which will be read in order, first &lt;code&gt;s1&lt;/code&gt; and then &lt;code&gt;s2&lt;/code&gt;, to provide the bytes to be read from this &lt;code&gt;SequenceInputStream&lt;/code&gt;.</source>
          <target state="translated">最初に &lt;code&gt;s1&lt;/code&gt; 、次に &lt;code&gt;s2&lt;/code&gt; の順に読み取られる2つの引数を記憶することにより、新しく作成された &lt;code&gt;SequenceInputStream&lt;/code&gt; を初期化して、この &lt;code&gt;SequenceInputStream&lt;/code&gt; から読み取られるバイトを提供します。</target>
        </trans-unit>
        <trans-unit id="220d5ddf9123dde312c1714c126f01fa1fa80566" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents an empty character sequence. Note that use of this constructor is unnecessary since Strings are immutable.</source>
          <target state="translated">空の文字シーケンスを表すように、新しく作成された &lt;code&gt;String&lt;/code&gt; オブジェクトを初期化します。文字列は不変なので、このコンストラクタを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c57cfc3830f56b3bcce88e35eb379aaf1a525607" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string. Unless an explicit copy of &lt;code&gt;original&lt;/code&gt; is needed, use of this constructor is unnecessary since Strings are immutable.</source>
          <target state="translated">新しく作成された &lt;code&gt;String&lt;/code&gt; オブジェクトを初期化して、引数と同じ文字シーケンスを表すようにします。つまり、新しく作成された文字列は引数文字列のコピーです。 &lt;code&gt;original&lt;/code&gt; 明示的なコピーが必要でない限り、文字列は不変であるため、このコンストラクタの使用は不要です。</target>
        </trans-unit>
        <trans-unit id="942aa368dea7adcf620059ee8e5f6419d297fc67" translate="yes" xml:space="preserve">
          <source>Initializes an instance of this class.</source>
          <target state="translated">このクラスのインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="b32daa20373338f2bb3b01ff7242d28abd825e91" translate="yes" xml:space="preserve">
          <source>Initializes internal state after construction but before processing any tasks. If you override this method, you must invoke &lt;code&gt;super.onStart()&lt;/code&gt; at the beginning of the method. Initialization requires care: Most fields must have legal default values, to ensure that attempted accesses from other threads work correctly even before this thread starts processing tasks.</source>
          <target state="translated">構築後、タスクを処理する前に内部状態を初期化します。このメソッドをオーバーライドする場合は、メソッドの最初で &lt;code&gt;super.onStart()&lt;/code&gt; を呼び出す必要があります。初期化には注意が必要です。このスレッドがタスクの処理を開始する前でも、他のスレッドからのアクセス試行が正しく機能するように、ほとんどのフィールドには正当なデフォルト値が必要です。</target>
        </trans-unit>
        <trans-unit id="3ed19383d0a866bf81dc2a8bf40d1563412b85cf" translate="yes" xml:space="preserve">
          <source>Initializes the</source>
          <target state="translated">を初期化します。</target>
        </trans-unit>
        <trans-unit id="7101cfc50758a101d987342b5e460bfcc786c8bd" translate="yes" xml:space="preserve">
          <source>Initializes the MAC with the given (secret) key and algorithm parameters.</source>
          <target state="translated">与えられた(秘密の)キーとアルゴリズム・パラメータでMACを初期化する。</target>
        </trans-unit>
        <trans-unit id="dfeacd6b4b49eb8aaf2589e1846b0e448ccd3865" translate="yes" xml:space="preserve">
          <source>Initializes the cause of this exception to the specified value. The cause is the throwable that caused this naming exception to be thrown.</source>
          <target state="translated">この例外の原因を指定した値に初期化します。この原因は、この命名例外がスローされる原因となった throwable です。</target>
        </trans-unit>
        <trans-unit id="41561109df18ef33f010d3d94ef0a446f60b6e7d" translate="yes" xml:space="preserve">
          <source>Initializes the initial context using the supplied environment. Environment properties are discussed in the class description.</source>
          <target state="translated">与えられた環境を使用して初期コンテキストを初期化します。環境のプロパティについてはクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e562232f746f072ab366d783820d9c05cffe9e7" translate="yes" xml:space="preserve">
          <source>Initializes the internal state of this &lt;code&gt;CertPathChecker&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;CertPathChecker&lt;/code&gt; の内部状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="fa034bf27787f58e23acb0853600e276404d6783" translate="yes" xml:space="preserve">
          <source>Initializes the internal state of this &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; の内部状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="5a200147bcb84e9da595588be4e6923bdd0e97fb" translate="yes" xml:space="preserve">
          <source>Initializes the key generator with the specified parameter set and a user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザが提供するランダム性のソースでキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="128fefe8183d4f87085d3fbeac9c28f3366a7e95" translate="yes" xml:space="preserve">
          <source>Initializes the key generator.</source>
          <target state="translated">キージェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="6e61f534e2796655e8a496e2077cf90f57118496" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize using a default parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">デフォルトのパラメーターセットと、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装を使用して、特定のキーサイズのキーペアジェネレーターを初期化します。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="f74ebc75fa4bdabb92751bfa35969c96808a1d9a" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize with the given source of randomness (and a default parameter set).</source>
          <target state="translated">特定の鍵サイズの鍵ペア生成器を、与えられたランダム性のソース(およびデフォルトのパラメータセット)で初期化します。</target>
        </trans-unit>
        <trans-unit id="0fe6ed05ee313726b9862a33ef21a9938da8600d" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize, using the default parameter set.</source>
          <target state="translated">デフォルトのパラメータ設定を使用して、特定の鍵サイズの鍵ペア生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="2a75c13afd92cb77c637cf91b0e0938ac05e9b5a" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a given modulus length (instead of parameters), and an optional SecureRandom bit source. If a SecureRandom bit source is needed but not supplied, i.e. null, a default SecureRandom instance will be used.</source>
          <target state="translated">指定されたモジュラス長 (パラメータの代わりに)と、オプションの SecureRandom ビットソースについて、鍵ペア生成器を初期化します。SecureRandom ビットソースが必要だが供給されない場合 (つまり null)、デフォルトの SecureRandom インスタンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="3885a51fd48d40fd11bd4f75de7b90fecb70a2a9" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the DSA family parameters (p,q and g) and an optional SecureRandom bit source. If a SecureRandom bit source is needed but not supplied, i.e. null, a default SecureRandom instance will be used.</source>
          <target state="translated">DSA ファミリのパラメータ (p、q、g)とオプションの SecureRandom ビットソースを使用して、鍵ペア生成器を初期化します。SecureRandom ビットソースが必要だが供給されていない場合 (つまり null)、デフォルトの SecureRandom インスタンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="074ffc030e571b3342cbefc511914966618535b9" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.).</source>
          <target state="translated">指定されたパラメーターセットと、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装を使用して、キーペアジェネレーターを初期化します。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="0c74be0af9edccd027dd7945ff1bccd4266b5c35" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザーが提供するランダム性のソースを使用して、キー・ペア・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="9d9a66d3f3a781759ea52824532d9a08714c86e2" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator with the given parameter set and source of randomness.</source>
          <target state="translated">与えられたパラメータセットとランダム性のソースでキーペア生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="4715dc8fb40fcb882175f96e5919fd7a2dc030ca" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment by setting the &lt;code&gt;processingEnv&lt;/code&gt; field to the value of the &lt;code&gt;processingEnv&lt;/code&gt; argument. An &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown if this method is called more than once on the same object.</source>
          <target state="translated">&lt;code&gt;processingEnv&lt;/code&gt; フィールドを &lt;code&gt;processingEnv&lt;/code&gt; 引数の値に設定することにより、処理環境でプロセッサーを初期化します。アン &lt;code&gt;IllegalStateException&lt;/code&gt; がこのメソッドがより同じオブジェクト上で何度も呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="fc81e3d28ad794ef19650bc823bf9073354b69f7" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment.</source>
          <target state="translated">処理環境でプロセッサを初期化します。</target>
        </trans-unit>
        <trans-unit id="251f6ba99188ab07fc590aabecf16f20756bb1e6" translate="yes" xml:space="preserve">
          <source>Initializes the reference to the MBean server.</source>
          <target state="translated">MBean サーバへの参照を初期化します。</target>
        </trans-unit>
        <trans-unit id="86017086da180d7d8b5519a24aeb4afcfe0cf582" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;Mac&lt;/code&gt; object with the given key and algorithm parameters.</source>
          <target state="translated">指定されたキーとアルゴリズムパラメータでこの &lt;code&gt;Mac&lt;/code&gt; オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="da9a94df08b63435dae6a0e5a290a5de8bcd51a3" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;Mac&lt;/code&gt; object with the given key.</source>
          <target state="translated">この &lt;code&gt;Mac&lt;/code&gt; オブジェクトを指定されたキーで初期化します。</target>
        </trans-unit>
        <trans-unit id="7079744b3e558702bda3bc77d0a93b9270749574" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key and a set of algorithm parameters.</source>
          <target state="translated">鍵とアルゴリズムパラメータのセットでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="76e1853a530d0d05f2e8dc2f9ccfdbd34b8f0f0b" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key and a source of randomness.</source>
          <target state="translated">この暗号を鍵とランダム性のソースで初期化します。</target>
        </trans-unit>
        <trans-unit id="7c3cfb664c319979808c95df6387ee1cefbcf3a9" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key, a set of algorithm parameters, and a source of randomness.</source>
          <target state="translated">鍵、アルゴリズムパラメータのセット、ランダム性のソースでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="ebaea3d101ad3d548e9502e556b0291924ec5963" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key.</source>
          <target state="translated">この暗号を鍵で初期化します。</target>
        </trans-unit>
        <trans-unit id="29defc486f75b65544936a6a5922c0e7b711bf2d" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with the public key from the given certificate and a source of randomness.</source>
          <target state="translated">与えられた証明書からの公開鍵とランダム性のソースでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="b34e5d2657962e455f94df7f6126b52a17af67f0" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with the public key from the given certificate.</source>
          <target state="translated">与えられた証明書の公開鍵でこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="a80ad84d154a0b7904cac42f0975a5970ca8dbf2" translate="yes" xml:space="preserve">
          <source>Initializes this context.</source>
          <target state="translated">このコンテキストを初期化します。</target>
        </trans-unit>
        <trans-unit id="7a57c455e402cd8cbf65e54f28ebdbbdfea87fcf" translate="yes" xml:space="preserve">
          <source>Initializes this context. Either of the first two parameters may be null in which case the installed security providers will be searched for the highest priority implementation of the appropriate factory. Likewise, the secure random parameter may be null in which case the default implementation will be used.</source>
          <target state="translated">このコンテキストを初期化します。最初の 2 つのパラメータのいずれかが null の場合、インストールされているセキュリティプロバイダが適切なファクトリーの最優先実装を検索します。同様に、secure random パラメータが null の場合はデフォルトの実装が使用されます。</target>
        </trans-unit>
        <trans-unit id="bfd8849459a65d74992a90bb842675d49a578a08" translate="yes" xml:space="preserve">
          <source>Initializes this exemption mechanism with a key and a set of algorithm parameters.</source>
          <target state="translated">この免除メカニズムを、キーとアルゴリズムパラメータのセットで初期化します。</target>
        </trans-unit>
        <trans-unit id="d385a2adb9e1aa31c6b8207cf397aaa8dafbb420" translate="yes" xml:space="preserve">
          <source>Initializes this exemption mechanism with a key.</source>
          <target state="translated">この免除メカニズムをキーで初期化します。</target>
        </trans-unit>
        <trans-unit id="a0c3ef4f4cf173719ffff0bc52d11096c2e944bf" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of certificate authorities and related trust material.</source>
          <target state="translated">認証局および関連する信頼材料のソースで、この工場を初期化する。</target>
        </trans-unit>
        <trans-unit id="a510ec1c9a98e34b9cacf3d76dfd55f389f89f00" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of key material.</source>
          <target state="translated">この工場をキーマテリアルのソースで初期化します。</target>
        </trans-unit>
        <trans-unit id="b251664597cb56e03343ee141cc379a6706fb834" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of provider-specific key material.</source>
          <target state="translated">プロバイダ固有のキーマテリアルのソースでこのファクトリーを初期化する。</target>
        </trans-unit>
        <trans-unit id="e71e5fe2339c1da6ae1e0c0451a946ca45b878b8" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of provider-specific trust material.</source>
          <target state="translated">プロバイダ固有の信頼材料のソースでこの工場を初期化します。</target>
        </trans-unit>
        <trans-unit id="6942a3ed8c25f39cce260bd1c879d3599056ecc0" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key and set of algorithm parameters.</source>
          <target state="translated">与えられたキーとアルゴリズムパラメータのセットで、このキーの一致を初期化します。</target>
        </trans-unit>
        <trans-unit id="c54f383f1927146f57870b970bc370b60112ab52" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key and source of randomness. The given key is required to contain all the algorithm parameters required for this key agreement.</source>
          <target state="translated">与えられた鍵とランダム性のソースを用いて、この鍵の一致を初期化します。与えられた鍵には、この鍵の一致に必要なすべてのアルゴリズムパラメータが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="6a8a3c2a330aeee19912ae19e3a80123781fc074" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key, set of algorithm parameters, and source of randomness.</source>
          <target state="translated">与えられた鍵、アルゴリズムパラメータのセット、およびランダム性のソースで、この鍵の一致を初期化します。</target>
        </trans-unit>
        <trans-unit id="c0b1de47bdbb8fca238bc9381c28ed7809db102e" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key, which is required to contain all the algorithm parameters required for this key agreement.</source>
          <target state="translated">与えられた鍵でこの鍵合意を初期化します。この鍵合意に必要なすべてのアルゴリズムパラメータを含む必要があります。</target>
        </trans-unit>
        <trans-unit id="668e0a26489b2a9c3e3a252bfbdd5aa3979a9e7a" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize, using a user-provided source of randomness.</source>
          <target state="translated">ユーザーが提供したランダム性のソースを使用して、特定の鍵サイズの鍵生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="6c4159b32e5a97447d8e06c41c82e30aeded00aa" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize, using the given source of randomness.</source>
          <target state="translated">与えられたランダム性のソースを用いて、特定の鍵サイズの鍵生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="85441adb8426dc422c610d76abe9b38d4b63f960" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize.</source>
          <target state="translated">特定の鍵サイズの鍵生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="711e871f3ae5fd33f12add8941fc53219ac4ecd1" translate="yes" xml:space="preserve">
          <source>Initializes this key generator with the specified parameter set and a user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザが提供するランダム性のソースで、このキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="cbde385e1ecd25044d6b3e0c5ca8db45feb0a46e" translate="yes" xml:space="preserve">
          <source>Initializes this key generator with the specified parameter set.</source>
          <target state="translated">指定されたパラメータセットでこのキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="226e8392f7a356798f6b407dd16da240fffe3a95" translate="yes" xml:space="preserve">
          <source>Initializes this key generator.</source>
          <target state="translated">このキージェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="10658fe5124e5e479ec3d94b0fa2f70147e5f168" translate="yes" xml:space="preserve">
          <source>Initializes this object for verification, using the public key from the given certificate.</source>
          <target state="translated">与えられた証明書の公開鍵を使用して、検証のためにこのオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="d054f89ca19f803fcfa4d8e10109ac76f8d576b4" translate="yes" xml:space="preserve">
          <source>Initializes this object for verification. If this method is called again with a different argument, it negates the effect of this call.</source>
          <target state="translated">検証のためにこのオブジェクトを初期化します。このメソッドが別の引数で再度呼び出された場合、この呼び出しの効果は否定されます。</target>
        </trans-unit>
        <trans-unit id="4027f26a8d1d2edecbc43453f724a1f40cd65251" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator for a certain size and source of randomness.</source>
          <target state="translated">特定のサイズとランダム性のソースに対して、このパラメータジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="3cf727134da584c62c9ad2f77c5e7cb40d601cc2" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator for a certain size. To create the parameters, the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider is used as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">このパラメータジェネレータを特定のサイズに初期化します。パラメータを作成するために、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装がランダム性のソースとして使用されます。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="dea52d2710b3645ebe63b3b4899c33db0fa56e9a" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator with a set of algorithm-specific parameter generation values.</source>
          <target state="translated">アルゴリズム固有のパラメータ生成値のセットで、このパラメータ生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="23a5e3be619fa9c34834c4256f4f6525c56567ad" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator with a set of algorithm-specific parameter generation values. To generate the parameters, the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider is used as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">アルゴリズム固有のパラメーター生成値のセットを使用して、このパラメータージェネレーターを初期化します。パラメータを生成するために、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装がランダム性のソースとして使用されます。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
