<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="8576c5a3fc4ecf47e4a0d11fd6e03315dba7c325" translate="yes" xml:space="preserve">
          <source>A non-horizontal whitespace character: &lt;code&gt;[^\h]&lt;/code&gt;</source>
          <target state="translated">非水平空白文字： &lt;code&gt;[^\h]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d58c0f6e6b46f4925dee1a29c717b5cd776d604" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;DirContext&lt;/code&gt; object for continuing the operation.</source>
          <target state="translated">操作を続行するためのnull以外の &lt;code&gt;DirContext&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="29be16e17e34f62bfdebf51ad0e122d23c628721" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;LdapContext&lt;/code&gt; instance.</source>
          <target state="translated">null以外の &lt;code&gt;LdapContext&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="a64ff7fe321a188f5c04bb6cdea604c663889254" translate="yes" xml:space="preserve">
          <source>A non-null Context object for continuing the operation.</source>
          <target state="translated">操作を継続するための非 null でないコンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c1b55005a4d78a4f993dfd1b675db095e662505c" translate="yes" xml:space="preserve">
          <source>A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (&lt;code&gt;obj&lt;/code&gt;) itself with the original attributes.</source>
          <target state="translated">バインドされるオブジェクトと属性を含むnull以外のDirStateFactory.Result。状態ファクトリがnull以外の回答を返さない場合、結果には元の属性を持つオブジェクト（ &lt;code&gt;obj&lt;/code&gt; ）自体が含まれます。</target>
        </trans-unit>
        <trans-unit id="f705e9073287cf92793fe2b86b035e32a5be310b" translate="yes" xml:space="preserve">
          <source>A non-null array containing a IANA-registered SASL mechanism names.</source>
          <target state="translated">IANAに登録されたSASLメカニズム名を含む非NULL配列。</target>
        </trans-unit>
        <trans-unit id="a10e64472867840475c1ab4209b86ea2f64b0ad1" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the decoded bytes.</source>
          <target state="translated">デコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="256fd2e37df2c810fe693bf60b371e4fae6dc77b" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the encoded bytes.</source>
          <target state="translated">エンコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="f52a76285fcf3e42442c6aa14b1b84b86a9555fd" translate="yes" xml:space="preserve">
          <source>A non-null copy of the attribute.</source>
          <target state="translated">属性の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="c350742e8171824a76f2140a837bb27a02d36bfd" translate="yes" xml:space="preserve">
          <source>A non-null copy of this attribute set.</source>
          <target state="translated">この属性セットの非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="2834f16d4197dd5885969de3f6e1c06d9fe27c3e" translate="yes" xml:space="preserve">
          <source>A non-null copy of this composite name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="a28c689ba0a9cd3cad130669a4a31f8d6e1c8750" translate="yes" xml:space="preserve">
          <source>A non-null copy of this compound name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="680d7ced3578bebfbe3b008f6d9acabd436bed7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0931c1e3c651dc8eb96435df64758f9fd1218389" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0d1e9cc0831144a125442fbc119f960b9a802adc" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attribute's values. Each element of the enumeration is a possibly null Object. The object's class is the class of the attribute value. The element is null if the attribute's value is null. If the attribute has zero values, an empty enumeration is returned.</source>
          <target state="translated">属性の値の非 null 列挙。列挙の各要素は、nullの可能性のあるObjectです。オブジェクトのクラスは属性値のクラスです。属性の値がnullの場合、要素はnullになります。属性の値がゼロの場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="7363de214e3d6c461c5bb6736dc9ee64e081aa40" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class &lt;code&gt;Attribute&lt;/code&gt;. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のnull以外の列挙。列挙の各要素は &lt;code&gt;Attribute&lt;/code&gt; クラスです。属性セットに属性がない場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="afe8669ca17e96be8a453b66dfc469a28ebe6a0d" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes' ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のidの非ヌルの列挙。列挙の各要素は String クラスです。属性集合がゼロの属性を持つ場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="5f1cbc6763def1c45342a437b1a688c40133ab7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String.</source>
          <target state="translated">このLDAP名のコンポーネントの非ヌルの列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="ebf81c0a1c1c74ed4f4d400b71c358f46266c099" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this composite name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="2340ea0fb4f1270c0668eb4bfc3dc9c9cf277715" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this compound name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="8bfa2f9be14187c9f14ce39d8d833d7f1175f5dc" translate="yes" xml:space="preserve">
          <source>A non-null initial context factory.</source>
          <target state="translated">非 null ではない初期コンテキストファクトリー。</target>
        </trans-unit>
        <trans-unit id="1e608221c5c5ea8c18e363465c0a5d025612f0d6" translate="yes" xml:space="preserve">
          <source>A non-null initial context object that implements the Context interface.</source>
          <target state="translated">Context インターフェースを実装した非 null の初期コンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="37954dbe9bab921b1deb6369decc49588a641fb7" translate="yes" xml:space="preserve">
          <source>A non-null initial context.</source>
          <target state="translated">非 null ではない初期コンテキスト。</target>
        </trans-unit>
        <trans-unit id="4730b465f4124443538b5e1770c8811274893fee" translate="yes" xml:space="preserve">
          <source>A non-null new instance of an ObjectFactory.</source>
          <target state="translated">ObjectFactory の非 null の新規インスタンス。</target>
        </trans-unit>
        <trans-unit id="c59410b08adf864ea948e598b03f608227631233" translate="yes" xml:space="preserve">
          <source>A non-null object.</source>
          <target state="translated">非 null オブジェクト。</target>
        </trans-unit>
        <trans-unit id="1f31f2d546f056d9729de73a8c0cafbb3add9b69" translate="yes" xml:space="preserve">
          <source>A non-null parsed form of the name using the naming convention of this parser.</source>
          <target state="translated">このパーサの命名規則を使用して、名前をヌルではない形でパースしたものです。</target>
        </trans-unit>
        <trans-unit id="a5e68f3dd8aaf605a6de850303de002c47d88269" translate="yes" xml:space="preserve">
          <source>A non-null string listing the contents of this attribute set.</source>
          <target state="translated">この属性セットの内容をリストアップした非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="caf496ddea9cd135d401dcca1f2054b18dc2ecf2" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this composite name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="15ce034bc6811eedfe9b677a32692e3f0462b11c" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this compound name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="08d28ae2c79b56daa709959f3d79d9d06c131b29" translate="yes" xml:space="preserve">
          <source>A non-null string representing the IANA-registered mechanism name.</source>
          <target state="translated">IANAに登録された機構名を表す非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="78220fa45f4e95f9c02602526ce9d9ddf420ba59" translate="yes" xml:space="preserve">
          <source>A non-static method consumes an extra argument for the object on which the method is called.</source>
          <target state="translated">非静的メソッドは、メソッドが呼び出されるオブジェクトの余分な引数を消費します。</target>
        </trans-unit>
        <trans-unit id="fcf1b695e4b7e1236a6443caec6fe36bb0b9f17e" translate="yes" xml:space="preserve">
          <source>A non-vertical whitespace character: &lt;code&gt;[^\v]&lt;/code&gt;</source>
          <target state="translated">非垂直空白文字： &lt;code&gt;[^\v]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d3d3ab514a35cbfee9f849f4b37cf780906329" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method.</source>
          <target state="translated">特定の仮想メソッド実装への非仮想メソッドハンドルも作成できます。これらは、レシーバータイプに基づく仮想ルックアップを実行しません。このようなメソッドハンドルは、同じメソッドに対する &lt;code&gt;invokespecial&lt;/code&gt; 命令の効果をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="490d23f83a66805dcb270127052997bab3cbcef3" translate="yes" xml:space="preserve">
          <source>A non-whitespace character: &lt;code&gt;[^\s]&lt;/code&gt;</source>
          <target state="translated">空白以外の文字： &lt;code&gt;[^\s]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71faa00612f3246b69dff10b33a7b4956ad1ded0" translate="yes" xml:space="preserve">
          <source>A non-word boundary</source>
          <target state="translated">単語以外の境界</target>
        </trans-unit>
        <trans-unit id="5a3963613c4e2b85a2160538fa0a3ebf78d4cb53" translate="yes" xml:space="preserve">
          <source>A non-word character: &lt;code&gt;[^\w]&lt;/code&gt;</source>
          <target state="translated">非単語文字： &lt;code&gt;[^\w]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27473e4260d3933f83b4103875121ed003b122d3" translate="yes" xml:space="preserve">
          <source>A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time.</source>
          <target state="translated">ゼロ以外の値を指定すると、グリニッジ標準時の1970年1月1日からのミリ秒数として時間を指定します。オブジェクトは、その時間よりも最近に変更された場合にのみ取得されます。</target>
        </trans-unit>
        <trans-unit id="bd0bbc8c17597d3479d33d00df124b35420e9bee" translate="yes" xml:space="preserve">
          <source>A normalized path will begin with one or more &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments if there were insufficient non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segments preceding them to allow their removal. A normalized path will begin with a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment if one was inserted by step 3 above. Otherwise, a normalized path will not contain any &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments.</source>
          <target state="translated">正規化されたパスは、その前に非 &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントが不足していて削除できない場合、1つ以上の &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントで始まります。正規化されたパスは &lt;code&gt;&quot;.&quot;&lt;/code&gt; 始まります。上記のステップ3で挿入された場合はセグメント。それ以外の場合、正規化されたパスには &lt;code&gt;&quot;.&quot;&lt;/code&gt; が含まれません。または &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメント。</target>
        </trans-unit>
        <trans-unit id="c3a10557374749dd3612c700569d8d4fbfff6337" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上であり、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーと、通知を受け入れるフィルターを登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="6f81cc48a1476843cb589c0a6edfffa3c877abc8" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上であり、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーと、通知を受け入れるフィルターを登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="eb2316273427642a12c2dde2fb02858156d5200b" translate="yes" xml:space="preserve">
          <source>A notification emitted by an MBean will be forwarded by the MBeanServer to the listener. If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">MBean から発せられた通知は、MBeanServer によってリスナーに転送されます。通知のソースが MBean オブジェクトへの参照である場合、MBean サーバはそれを MBean の ObjectName で置き換えます。それ以外の場合、ソースは変更されません。</target>
        </trans-unit>
        <trans-unit id="9fbf4137e454e66ee8d25e83c4c38921d7f02cf7" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service.</source>
          <target state="translated">リレーションサービスの変更通知。</target>
        </trans-unit>
        <trans-unit id="74b1df702f3bc581785499dd02ae0b69bee54ca0" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service.</source>
          <target state="translated">Relation Service の変更の通知。RelationNotification通知は、Relation Service経由でリレーションが作成されたとき、または、Relation ServiceでMBeanがリレーションとして追加されたとき、または、リレーションでロールが更新されたとき、または、リレーションがRelation Serviceから削除されたときに送信されます。</target>
        </trans-unit>
        <trans-unit id="43f0f3abe1ddd97507c9365666da42e829d29184" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class description.</source>
          <target state="translated">多くの &lt;code&gt;ShortMessage&lt;/code&gt; メソッドには、MIDIステータスまたはデータバイトを指定する整数パラメーターがあります。数値がわかれば直接表現できます。システム共通メッセージとシステムリアルタイムメッセージの場合、多くの場合、&lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;ShortMessage&lt;/code&gt; の対応するフィールドを使用できます。チャネルメッセージの場合、ステータスバイトの上位4ビットはコマンド値で指定され、下位4ビットはMIDIチャネル番号で指定されます。Javaの署名付きバイト形式の着信MIDIデータバイトを変換するには、 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの説明で提供されている&lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;変換コードを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="88ef82d7a1acf5551302d1f421428c6310badc2a" translate="yes" xml:space="preserve">
          <source>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network. The classes are:</source>
          <target state="translated">java.netパッケージ内のいくつかのクラスは、はるかに高い抽象化レベルを提供し、ネットワーク上のリソースへの容易なアクセスを可能にします。クラスは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="26a5315e56bbc0b1a41c272ad0788f786e5e99a8" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API containing the plug-in interfaces for readers, writers, transcoders, and streams, and a runtime registry.</source>
          <target state="translated">Java Image I/O API のパッケージで、リーダ、ライタ、トランスコーダ、ストリーム用のプラグインインタフェースとランタイムレジストリが含まれています。</target>
        </trans-unit>
        <trans-unit id="3d1474ec8064f4048b349e060bd17d481f91abb7" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with low-level I/O from files and streams.</source>
          <target state="translated">ファイルやストリームからの低レベルI/Oを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="fcd25d02098be8fe912d200eda69fa86ba44c8a4" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with reading and writing metadata.</source>
          <target state="translated">メタデータの読み書きを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="1e50c13e656800213a2b38221ce5d3c67a302d08" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with synchronous notification of events during the reading and writing of images.</source>
          <target state="translated">画像の読み書き中のイベントの同期通知を扱うJava Image I/O APIのパッケージです。</target>
        </trans-unit>
        <trans-unit id="75aceaead5894b1564163cdca6dffc56df070c4d" translate="yes" xml:space="preserve">
          <source>A package.</source>
          <target state="translated">パッケージです。</target>
        </trans-unit>
        <trans-unit id="9c561483e1216a136545d701b9a0c6a84ebc7b7e" translate="yes" xml:space="preserve">
          <source>A pair of channels that implements a unidirectional pipe.</source>
          <target state="translated">一方向パイプを実装したチャンネルのペア。</target>
        </trans-unit>
        <trans-unit id="394c92f3379723469af1d8636c4eaf9565783905" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029&lt;/code&gt;).</source>
          <target state="translated">段落区切り文字（ &lt;code&gt;'\u2029&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="79368f8d53ce66ea9334edbe3b72f58f6e497a54" translate="yes" xml:space="preserve">
          <source>A parameter of a method or constructor.</source>
          <target state="translated">メソッドまたはコンストラクタのパラメータ。</target>
        </trans-unit>
        <trans-unit id="58b36826d2d44021fe02b6a2abe751fe9a54079c" translate="yes" xml:space="preserve">
          <source>A parameter of an exception handler.</source>
          <target state="translated">例外ハンドラのパラメータ。</target>
        </trans-unit>
        <trans-unit id="3585600fff66d07c254c460c9422920ddb647135" translate="yes" xml:space="preserve">
          <source>A parameter that contains a URI pointing to data intended for a PolicySpi or ConfigurationSpi implementation.</source>
          <target state="translated">PolicySpi または ConfigurationSpi の実装を目的としたデータを指す URI を含むパラメータ。</target>
        </trans-unit>
        <trans-unit id="d63cf425fcd35e454243a434211b0e6d1a9b20cd" translate="yes" xml:space="preserve">
          <source>A parameter's name is &quot;&quot;, or contains an illegal character</source>
          <target state="translated">パラメータ名が&quot;&quot;であるか、不正な文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="a6e2c142abe93ec8b1941b8de767b406102f08b5" translate="yes" xml:space="preserve">
          <source>A parameterized type is created the first time it is needed by a reflective method, as specified in this package. When a parameterized type p is created, the generic type declaration that p instantiates is resolved, and all type arguments of p are created recursively. See &lt;a href=&quot;typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt; for details on the creation process for type variables. Repeated creation of a parameterized type has no effect.</source>
          <target state="translated">パラメータ化された型は、このパッケージで指定されているように、リフレクティブメソッドで初めて必要になったときに作成されます。パラメータ化された型pが作成されると、pがインスタンス化するジェネリック型宣言が解決され、pのすべての型引数が再帰的に作成されます。参照してください。&lt;a href=&quot;typevariable&quot;&gt; &lt;code&gt;TypeVariable&lt;/code&gt; の&lt;/a&gt;型変数の作成プロセスの詳細については。パラメータ化された型を繰り返し作成しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="207968ed3b02650fd3f0f90772b619beb100c1b9" translate="yes" xml:space="preserve">
          <source>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</source>
          <target state="translated">KeyStore.Buildersのリストをカプセル化したX509KeyManagers用のパラメータオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="725b605d7b96e538c4444b6cc65519d2a9564a59" translate="yes" xml:space="preserve">
          <source>A partially complete temporal is used to allow the chronology and zone to be queried. In general, only the chronology will be needed. Querying items other than the zone or chronology is undefined and must not be relied on. The behavior of other methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;isSupported&lt;/code&gt; is unpredictable and the results undefined.</source>
          <target state="translated">部分的に完全な時相を使用して、年表とゾーンを照会できます。一般的に、年表だけが必要になります。ゾーンまたは年表以外のアイテムのクエリは定義されておらず、依存することはできません。 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getLong&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; 、 &lt;code&gt;isSupported&lt;/code&gt; などの他のメソッドの動作は予測できず、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="231fb54b3d3de5027a6b56f9c783ef40b879816a" translate="yes" xml:space="preserve">
          <source>A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a &lt;code&gt;root&lt;/code&gt; directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely &lt;code&gt;&quot;/&quot;&lt;/code&gt;. The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives.</source>
          <target state="translated">特定のJavaプラットフォームは、ゼロ個以上の階層的に編成されたファイルシステムをサポートする場合があります。各ファイルシステムには、そのファイルシステム内の他のすべてのファイルにアクセスできる &lt;code&gt;root&lt;/code&gt; ディレクトリがあります。たとえば、Windowsプラットフォームには、アクティブなドライブごとにルートディレクトリがあります。UNIXプラットフォームには、 &lt;code&gt;&quot;/&quot;&lt;/code&gt; という単一のルートディレクトリがあります。使用可能なファイルシステムルートのセットは、リムーバブルメディアの挿入または取り出し、物理ディスクドライブまたは仮想ディスクドライブの切断またはアンマウントなど、さまざまなシステムレベルの操作の影響を受けます。</target>
        </trans-unit>
        <trans-unit id="71a0ac78cd9ceaa2a9fc0b0cb9d6019ef6ea7cf1" translate="yes" xml:space="preserve">
          <source>A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device), or to check the integrity of the keystore data. If a password is not given for integrity checking, then integrity checking is not performed.</source>
          <target state="translated">パスワードは、鍵ストアのロックを解除するため(鍵ストアがハードウェア・トークン・デバイス上に存在する場合など)、または鍵ストア・データの完全性をチェックするために与えられることがある。完全性チェックのためにパスワードが与えられない場合、完全性チェックは実行されない。</target>
        </trans-unit>
        <trans-unit id="b6843fa2f0f5e030f8851019b802cd205df0f080" translate="yes" xml:space="preserve">
          <source>A password-based implementation of &lt;code&gt;ProtectionParameter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProtectionParameter&lt;/code&gt; のパスワードベースの実装。</target>
        </trans-unit>
        <trans-unit id="908320b79b8166bd80f9cebf314b01f668d00b9a" translate="yes" xml:space="preserve">
          <source>A path matcher that may be used to match paths against the pattern</source>
          <target state="translated">パターンに対してパスをマッチさせるためのパスマッチツール。</target>
        </trans-unit>
        <trans-unit id="495e2a31b97782811793ec1239e0bd3fee0e7177" translate="yes" xml:space="preserve">
          <source>A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">単一の &quot;*&quot;からなるパス名は、カレントディレクトリ内のすべてのファイルを示し、単一の&quot;-&quot;からなるパス名は、カレントディレクトリ内のすべてのファイルと、カレントディレクトリに含まれるすべてのファイルとサブディレクトリを(再帰的に)示します。</target>
        </trans-unit>
        <trans-unit id="3ef23e9c497a7b25e957caaacc361e940805dd1a" translate="yes" xml:space="preserve">
          <source>A pathname containing an empty string represents an empty path.</source>
          <target state="translated">空の文字列を含むパス名は、空のパスを表します。</target>
        </trans-unit>
        <trans-unit id="46eef1d82fd391592dc0d8c3e69cce9707760548" translate="yes" xml:space="preserve">
          <source>A pathname that ends in &quot;/*&quot; (where &quot;/&quot; is the file separator character, &lt;code&gt;File.separatorChar&lt;/code&gt;) indicates all the files and directories contained in that directory. A pathname that ends with &quot;/-&quot; indicates (recursively) all files and subdirectories contained in that directory. The special pathname &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches any file.</source>
          <target state="translated">「/ *」で終わるパス名（「/」はファイル区切り文字 &lt;code&gt;File.separatorChar&lt;/code&gt; です）は、そのディレクトリに含まれるすべてのファイルとディレクトリを示します。 「/-」で終わるパス名は、そのディレクトリに含まれるすべてのファイルとサブディレクトリを（再帰的に）示します。特別なパス名 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;はすべてのファイルに一致します。</target>
        </trans-unit>
        <trans-unit id="572f17ed8ee918ab0ba5d0eea653f440ba45e9f6" translate="yes" xml:space="preserve">
          <source>A pathname, whether abstract or in string form, may be either &lt;em&gt;absolute&lt;/em&gt; or &lt;em&gt;relative&lt;/em&gt;. An absolute pathname is complete in that no other information is required in order to locate the file that it denotes. A relative pathname, in contrast, must be interpreted in terms of information taken from some other pathname. By default the classes in the &lt;code&gt;java.io&lt;/code&gt; package always resolve relative pathnames against the current user directory. This directory is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, and is typically the directory in which the Java virtual machine was invoked.</source>
          <target state="translated">パス名は、抽象形式でも文字列形式でも、&lt;em&gt;絶対&lt;/em&gt;パスでも&lt;em&gt;相対&lt;/em&gt;パスでもかまいません。絶対パス名は完全であるため、それが示すファイルを見つけるために他の情報は必要ありません。対照的に、相対パス名は、他のパス名から取得した情報に関して解釈する必要があります。デフォルトでは、 &lt;code&gt;java.io&lt;/code&gt; パッケージのクラスは常に現在のユーザーディレクトリに対する相対パス名を解決します。このディレクトリは、システムプロパティ &lt;code&gt;user.dir&lt;/code&gt; によって名前が付けられ、通常、Java仮想マシンが呼び出されたディレクトリです。</target>
        </trans-unit>
        <trans-unit id="885061eeba719408d460722e0592847141de0a81" translate="yes" xml:space="preserve">
          <source>A pattern consists of a string that includes the following special components that will be replaced at runtime:</source>
          <target state="translated">パターンは、実行時に置き換えられる以下の特別なコンポーネントを含む文字列で構成されています。</target>
        </trans-unit>
        <trans-unit id="877d121efe20f3c4d49a6cefb7ce0cdf6c5af580" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;sslengine#closeInbound--&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">ピアは、独自のクロージャハンドシェイクメッセージを送信することで、閉じる意図を通知します。このメッセージは、ローカルで受信され、処理された後 &lt;code&gt;SSLEngine&lt;/code&gt; の &lt;code&gt;unwrap()&lt;/code&gt; 呼び出し、アプリケーションが呼び出すことでクローズを検出することができます &lt;code&gt;unwrap()&lt;/code&gt; と探し &lt;code&gt;SSLEngineResult&lt;/code&gt; の状態で『CLOSED』、または場合&lt;a href=&quot;sslengine#isInboundDone--&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; は&lt;/a&gt; trueを返します。何らかの理由でピアが適切なSSL / TLSクロージャメッセージを送信せずに通信リンクを閉じた場合、アプリケーションはストリームの終わりを検出し、&lt;a href=&quot;sslengine#closeInbound--&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; を&lt;/a&gt;介してエンジンに信号を送ることができます処理するインバウンドメッセージがなくなること。一部のアプリケーションは、ピアからの正常なシャットダウンメッセージを要求することを選択する場合があります。その場合、ストリームの終わりの状態ではなく、ハンドシェイクメッセージによってクロージャが生成されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="969bb0afd4cc1ecb553f172a9b57b2ef0c780de7" translate="yes" xml:space="preserve">
          <source>A permission that includes the &lt;code&gt;queryMBeans&lt;/code&gt; action is considered to include &lt;code&gt;queryNames&lt;/code&gt; as well.</source>
          <target state="translated">含ま許可 &lt;code&gt;queryMBeans&lt;/code&gt; アクションを含むと考えられる &lt;code&gt;queryNames&lt;/code&gt; をうまくとして。</target>
        </trans-unit>
        <trans-unit id="4a747ab8a03910b849e698f017fbb3fba8116a99" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">次に、永続デリゲートは、指定されたタイプの完全修飾名と「PersistenceDelegate」接尾辞で構成される名前によって検索されます。たとえば、 &lt;code&gt;Bean&lt;/code&gt; クラスの永続デリゲートは &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; という名前で、同じパッケージに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="06a66f678af1d95ca12f674489cbec8275ebe7ad" translate="yes" xml:space="preserve">
          <source>A persistence delegate, may take control of all aspects of the persistence of an object including:</source>
          <target state="translated">永続デリゲートは、以下のようなオブジェクトの永続性のすべての側面を制御することができます。</target>
        </trans-unit>
        <trans-unit id="c10812bf1787199ce6eca01fbb20d15dd5f8ea49" translate="yes" xml:space="preserve">
          <source>A physical duration could be of infinite length. For practicality, the duration is stored with constraints similar to &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The duration uses nanosecond resolution with a maximum value of the seconds that can be held in a &lt;code&gt;long&lt;/code&gt;. This is greater than the current estimated age of the universe.</source>
          <target state="translated">物理的な期間は、無限の長さになる可能性があります。実用性のために、期間は&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;と同様の制約付きで保存されます。持続時間は、ナノ秒の解像度を使用し、 &lt;code&gt;long&lt;/code&gt; 保持できる最大秒数を使用します。これは、現在の宇宙の推定年齢よりも大きいです。</target>
        </trans-unit>
        <trans-unit id="474cd8ad0927115718f8e3c65460d787fc470758" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from source channel in exactlyAthe order in which they were written.</source>
          <target state="translated">パイプは、書き込み可能な&lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt;チャネルと読み取り可能な&lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt;チャネルの2つのチャネルで構成されます。いくつかのバイトがシンクチャネルに書き込まれると、それらは書き込まれた順序で正確にソースチャネルから読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="92f903dde552d28725344ada00e056a459750979" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.</source>
          <target state="translated">パイプライン入力ストリームは、パイプライン出力ストリームに接続されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3a7a8e42632b42753977c34a60b9299f0d427714" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">パイプで連結された入力ストリームは、パイプで連結された出力ストリームに接続する必要があります。パイプで連結された入力ストリームは、パイプで連結された出力ストリームに書き込まれるデータバイトを提供します。通常、データは1つのスレッドによって &lt;code&gt;PipedInputStream&lt;/code&gt; オブジェクトから読み取られ、データは他のスレッドによって対応する &lt;code&gt;PipedOutputStream&lt;/code&gt; に書き込まれます。スレッドをデッドロックする可能性があるため、単一のスレッドから両方のオブジェクトを使用することはお勧めしません。パイプで連結された入力ストリームにはバッファーが含まれ、制限内で読み取り操作と書き込み操作を分離します。接続されているパイプで連結された出力ストリームにデータバイトを提供していたスレッドが&lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;無効&lt;/i&gt;&lt;/a&gt;になっ&lt;i&gt;た&lt;/i&gt;場合、パイプは&lt;i&gt;破損して&lt;/i&gt;いると言います。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="cd38b92f37a0ada0b98eaec7dc581aa518272443" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe.</source>
          <target state="translated">パイプラインされた出力ストリームを、パイプラインされた入力ストリームに接続して、通信パイプを作成することができます。</target>
        </trans-unit>
        <trans-unit id="34df202afec2bc7805e61d26ed892f959fd0e25d" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">パイプで連結された出力ストリームをパイプで連結された入力ストリームに接続して、通信パイプを作成できます。パイプで連結された出力ストリームは、パイプの送信側です。通常、データは1つのスレッドによって &lt;code&gt;PipedOutputStream&lt;/code&gt; オブジェクトに書き込まれ、データは他のスレッドによって接続された &lt;code&gt;PipedInputStream&lt;/code&gt; から読み取られます。スレッドをデッドロックする可能性があるため、単一のスレッドから両方のオブジェクトを使用することはお勧めしません。接続されているパイプで連結された入力ストリームからデータバイトを読み取っていたスレッドが生きていない場合、パイプは&lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;壊れて&lt;/i&gt;&lt;/a&gt;いると言います。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ef8f66f756ed31cd7f35ff8fc4b2aca2a5dba0b2" translate="yes" xml:space="preserve">
          <source>A place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">コードジェネレーターが生成されたコードに含めたいコメントのプレースホルダー。</target>
        </trans-unit>
        <trans-unit id="aac89ff6b50355b8985ee22ca69704cd3ffe07e5" translate="yes" xml:space="preserve">
          <source>A platform MXBean is a</source>
          <target state="translated">プラットフォームMXBeanは</target>
        </trans-unit>
        <trans-unit id="ae7baf93b58a02927f0c5ac6c93762b9d4eb05d5" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform.</source>
          <target state="translated">プラットフォーム管理オブジェクトは、Javaプラットフォームのコンポーネントを監視および管理するための&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8ac220ef46f8e70af4b6538f40d0a40b8ec9c7a3" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">プラットフォーム管理オブジェクトは、Javaプラットフォームのコンポーネントを監視および管理するための&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt;です。各プラットフォーム管理オブジェクトには、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;プラットフォームMBeanServer&lt;/a&gt;アクセス用の一意の&lt;a href=&quot;managementfactory#MXBean&quot;&gt;オブジェクト名&lt;/a&gt;があります。すべてのプラットフォームMXBeanがこのインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="3f604f47af08bbf1b066c304748b624ec493c21d" translate="yes" xml:space="preserve">
          <source>A plug-in for a specific image format may define a subclass of this class, and return objects of that class from the &lt;code&gt;getDefaultWriteParam&lt;/code&gt; method of its &lt;code&gt;ImageWriter&lt;/code&gt; implementation. For example, the built-in JPEG writer plug-in will return instances of &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">特定の画像フォーマットのプラグインは、このクラスのサブクラスを定義し、 &lt;code&gt;ImageWriter&lt;/code&gt; 実装の &lt;code&gt;getDefaultWriteParam&lt;/code&gt; メソッドからそのクラスのオブジェクトを返す場合があります。たとえば、組み込みのJPEGライタープラグインは、 &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt; のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="165a4c2f23d394915829e76b0aa46e76c935e20d" translate="yes" xml:space="preserve">
          <source>A pool of strings, initially empty, is maintained privately by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">文字列のプールは、最初は空でしたが、クラス &lt;code&gt;String&lt;/code&gt; によってプライベートに維持されます。</target>
        </trans-unit>
        <trans-unit id="b2b519b0588855194323e10504c01bce562add21" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads will be &lt;code&gt;shutdown&lt;/code&gt; automatically. If you would like to ensure that unreferenced pools are reclaimed even if users forget to call &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt;, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">もはやプログラムで参照されているプール&lt;em&gt;と&lt;/em&gt;何の残りのスレッドができなくなります持って &lt;code&gt;shutdown&lt;/code&gt; 自動的に。ユーザーが&lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; の&lt;/a&gt;呼び出しを忘れた場合でも、参照されていないプールが再利用されるようにするには、適切なキープアライブ時間を設定し、ゼロコアスレッドの下限を使用して、未使用のスレッドが最終的に停止するようにする必要があります。&lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="00aa3f03debf8302deefd1c78bcc91a3181918cc" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;-1&lt;/code&gt; indicates that the calling method is attempting to determine the IP address of the specified host name.</source>
          <target state="translated">ポート番号 &lt;code&gt;-1&lt;/code&gt; は、呼び出しメソッドが指定されたホスト名のIPアドレスを判別しようとしていることを示します。</target>
        </trans-unit>
        <trans-unit id="f80ddc74f8958b7e436c32feec5a751ce8a69e52" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;0&lt;/code&gt; creates a socket on any free port.</source>
          <target state="translated">ポート番号 &lt;code&gt;0&lt;/code&gt; は、空きポートにソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="e8b0b7e20e8e674dbd959f23bbf61c572c82ceaa" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">位置は、ファイルの先頭からのゼロから始まる文字オフセットです。負の値（&lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt;を除く）は有効な位置ではありません。</target>
        </trans-unit>
        <trans-unit id="e6aaa4c5ca50c97ca7f61bd39daf4cf6ca61d72d" translate="yes" xml:space="preserve">
          <source>A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the</source>
          <target state="translated">正の値は、その何秒も経過した後にクッキーが期限切れになることを示します。値が</target>
        </trans-unit>
        <trans-unit id="d2705dcae935877bd3fe557ef24f1985c8bb781a" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslClientFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslClient&lt;/code&gt; 。nullの場合、それを生成する &lt;code&gt;SaslClientFactory&lt;/code&gt; を見つけることができません。</target>
        </trans-unit>
        <trans-unit id="66f5e7d6cc182293efa2a5e37b7d7d480692c79f" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslClient&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslClient&lt;/code&gt; 。nullの場合、このファクトリは指定されたパラメーターを使用して &lt;code&gt;SaslClient&lt;/code&gt; を作成できません。</target>
        </trans-unit>
        <trans-unit id="0b05743f60c3de6a64646f3c940516bebe032910" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslServerFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslServer&lt;/code&gt; 。nullの場合、それを生成する &lt;code&gt;SaslServerFactory&lt;/code&gt; を見つけることができません。</target>
        </trans-unit>
        <trans-unit id="91226546474985c1813acbe9067ef1cb7e39da27" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslServer&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslServer&lt;/code&gt; 。nullの場合、このファクトリは指定されたパラメーターを使用して &lt;code&gt;SaslServer&lt;/code&gt; を作成できません。</target>
        </trans-unit>
        <trans-unit id="1635e9f91cb5a2fc226360f1e119ac246ca5d453" translate="yes" xml:space="preserve">
          <source>A possibly null Control.</source>
          <target state="translated">ヌルの可能性のあるコントロール。</target>
        </trans-unit>
        <trans-unit id="62cc797a2835818cc3df56acf7ab8b6325cb3231" translate="yes" xml:space="preserve">
          <source>A possibly null array of &lt;code&gt;Control&lt;/code&gt; objects.</source>
          <target state="translated">nullの可能性がある &lt;code&gt;Control&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="3eaf96564ec411ef60ad1fd3b372e06ddcd7849e" translate="yes" xml:space="preserve">
          <source>A possibly null array of controls. If null, the previous method invoked on this context did not produce any controls.</source>
          <target state="translated">null の可能性があるコントロールの配列。null の場合、このコンテキストで呼び出された前のメソッドは何のコントロールも生成しませんでした。</target>
        </trans-unit>
        <trans-unit id="10560282de64ca60d43ecb4532547224bfd08f41" translate="yes" xml:space="preserve">
          <source>A possibly null array of referrals, each of which is represented by a URL string. If null, no referral was sent by the server.</source>
          <target state="translated">各リファラルは URL 文字列で表されます。null の場合、サーバから送信されたリファラルはありません。</target>
        </trans-unit>
        <trans-unit id="548f5fe8a9ae8019a49683831f0b805ce09abf74" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; コンポーネントのASN.1 BERエンコードされたコンテンツを表すnullの可能性があるバイト配列。</target>
        </trans-unit>
        <trans-unit id="92c9a272a4d931c152db068d54ac6953b393b197" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; コンポーネントのASN.1 BERエンコードされたコンテンツを表すnullの可能性があるバイト配列。</target>
        </trans-unit>
        <trans-unit id="ff87ab073a8cd5077c343bb00b812a40971e003c" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded value of the LDAP control.</source>
          <target state="translated">LDAPコントロールのASN.1 BERエンコードされた値を表すNULLバイト配列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="3cb6aa987b78522dc1bd9466de9d784c88462a4d" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the control's ASN.1 BER encoded value. It is not cloned - any changes to the returned value will affect the contents of the control.</source>
          <target state="translated">コントロールのASN.1 BERエンコードされた値を表すヌルの可能性のあるバイト配列。これはクローン化されません-返される値を変更すると、コントロールの内容に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="6f4c5a21811c6ddca2738adff04cd26dfcb12c23" translate="yes" xml:space="preserve">
          <source>A possibly null exception as constructed using information sent by the server. If null, a &quot;success&quot; status was indicated by the server.</source>
          <target state="translated">サーバーから送信された情報を使用して構築された、null の可能性のある例外。null の場合は、サーバによって &quot;成功&quot; ステータスが示されました。</target>
        </trans-unit>
        <trans-unit id="0f7fa00e800c3389f9a5a0fd2fa9263309a7211d" translate="yes" xml:space="preserve">
          <source>A possibly null object identifier string representing the LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; component.</source>
          <target state="translated">nullの可能性がある、LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; コンポーネントを表すオブジェクト識別子の文字列。</target>
        </trans-unit>
        <trans-unit id="f670ba264fb7faa8a1f0ec6bd95fc42234981c4c" translate="yes" xml:space="preserve">
          <source>A possibly null object representing one of the attribute's value. It is null if the attribute's value is null.</source>
          <target state="translated">属性の値の一つを表すヌルの可能性のあるオブジェクト。属性の値がNULLの場合はNULLです。</target>
        </trans-unit>
        <trans-unit id="75864d255d1129c4e9ba827299b5b1f56ddbef6d" translate="yes" xml:space="preserve">
          <source>A possibly null server-generated cookie. It is not cloned - any changes to the cookie will update the control's state and thus are not recommended.</source>
          <target state="translated">ヌルの可能性があるサーバー生成クッキー。これはクローン化されません-クッキーへの変更はコントロールの状態を更新するので、推奨されません。</target>
        </trans-unit>
        <trans-unit id="d289ab04881c9cc6e50eeaa00f1d309da5a304b2" translate="yes" xml:space="preserve">
          <source>A possibly null string containing class name of object bound.</source>
          <target state="translated">オブジェクトバインドのクラス名を含むヌル文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="f338409feb2fbcb63d411bfd4c693f31bbca7bb3" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no connect controls have been set for this context.</source>
          <target state="translated">null の可能性があるコントロールの配列。</target>
        </trans-unit>
        <trans-unit id="7fa4b5a7bed1fba6b58d93ff7e5647f0aeb57e8f" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no request controls have been set for this context.</source>
          <target state="translated">null の可能性があるコントロールの配列。</target>
        </trans-unit>
        <trans-unit id="2cd88c57d871d10e3857456422efd3a1926101bc" translate="yes" xml:space="preserve">
          <source>A printable area attribute's values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">印刷可能領域属性の値は、マイクロメートル（&amp;micro;m）単位の整数として内部的に保存されます。1マイクロメートル= 10 &lt;sup&gt;-6&lt;/sup&gt;メートル= 1/1000ミリメートル= 1/25400インチ。これにより、寸法を1/1000 mm（= 1 &amp;micro;m）または1/100インチ（= 254 &amp;micro;m）の精度で正確に表すことができます。小数インチが2の負の累乗で表される場合、これにより、寸法は1/8インチ（= 3175 &amp;micro;m）の精度で正確に表されますが、1/16インチでは表されません（1/16インチは、 &amp;micro;m）。</target>
        </trans-unit>
        <trans-unit id="be66df4e815359ec0b5eef7a696fe6041abe763a" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</source>
          <target state="translated">印刷可能な文字： &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8c4ade06a319d7219ac2d5f3da9ef84eb8f62b6" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</source>
          <target state="translated">印刷可能な文字： &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b011c8875e9789d560b27f5f5612aab64a93b938" translate="yes" xml:space="preserve">
          <source>A printing client application will typically not need to use all the printing attribute classes in package javax.print.attribute.standard, just the ones that pertain to the application.</source>
          <target state="translated">印刷クライアントアプリケーションは、通常、パッケージ javax.print.attribute.standard にあるすべての印刷属性クラスを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="662af875884ebefa284b1a1e34a6e15368a2d6e9" translate="yes" xml:space="preserve">
          <source>A priority queue is unbounded, but has an internal</source>
          <target state="translated">優先度キューは束縛されていませんが、内部に</target>
        </trans-unit>
        <trans-unit id="381989bf2d570f7f1f4f7b1b95948985c86b2aae" translate="yes" xml:space="preserve">
          <source>A private key.</source>
          <target state="translated">秘密鍵です。</target>
        </trans-unit>
        <trans-unit id="80cd6ff76b285191349b9609ddca29ae75c86455" translate="yes" xml:space="preserve">
          <source>A private key. The purpose of this interface is to group (and provide type safety for) all private key interfaces.</source>
          <target state="translated">秘密鍵です。このインターフェイスの目的は、すべての秘密鍵インターフェイスをグループ化すること(および型安全性を提供すること)である。</target>
        </trans-unit>
        <trans-unit id="18e6596f2d36107df44bd1e141716f0c3c917709" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;から&lt;/em&gt; Java型&lt;em&gt;への&lt;/em&gt;オープンタイプがで通知され&lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; &lt;/a&gt;。これは、MXBeanインターフェースが分析されているときに発生する可能性があります。たとえば、getterのない&lt;a href=&quot;../../java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; の&lt;/a&gt;ような型を参照している場合などです。変換するとき、インスタンスは、例えば、（のMXBeanにメソッドまたはMXBeanプロキシ内のメソッドへのパラメータからの戻り値）に変換されている場合、またはそれが起こることができ &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; に &lt;code&gt;String[]&lt;/code&gt; 場合 &lt;code&gt;SortedSet&lt;/code&gt; 有しますnull以外の &lt;code&gt;Comparator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="608ca4427acb530ce5f60d17ee3ff5bf4f6bb7c2" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;への&lt;/em&gt; Javaの型&lt;em&gt;から&lt;/em&gt;オープンタイプは、と知らされる&lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; を&lt;/a&gt;。これは、MXBeanインターフェースが分析されているときに発生する可能性があります。たとえば、再構築可能な型が必要なコンテキストで、上記のルールに従って&lt;em&gt;再構築&lt;/em&gt;できない型を参照している場合などです。または、インスタンスが変換されているときに発生する可能性があります（MXBeanのメソッドへのパラメーターまたはMXBeanプロキシのメソッドからの戻り値）。たとえば、その名前のEnum定数がない場合にStringからEnumに。</target>
        </trans-unit>
        <trans-unit id="863a7b5ff487b000efd9430f609d5071a7879a4c" translate="yes" xml:space="preserve">
          <source>A product specific name that this resource should be mapped to. The name of this resource, as defined by the &lt;code&gt;name&lt;/code&gt; element or defaulted, is a name that is local to the application component using the resource. (It's a name in the JNDI &lt;code&gt;java:comp/env&lt;/code&gt; namespace.) Many application servers provide a way to map these local names to names of resources known to the application server. This mapped name is often a</source>
          <target state="translated">このリソースをマップする必要がある製品固有の名前。このリソースの名前は、 &lt;code&gt;name&lt;/code&gt; 要素で定義されるか、デフォルトで使用される場合、リソースを使用するアプリケーションコンポーネントに対してローカルな名前です。（これは、JNDI &lt;code&gt;java:comp/env&lt;/code&gt; 名前空間の名前です。）多くのアプリケーションサーバーは、これらのローカル名をアプリケーションサーバーに既知のリソースの名前にマップする方法を提供します。このマッピングされた名前はしばしば</target>
        </trans-unit>
        <trans-unit id="8804679a0fee9a658ffe4f33c5d2ed6e2e4fd43d" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists.</source>
          <target state="translated">Deprecated」と注釈されたプログラム要素は、プログラマーが使用しないように推奨しているもので、一般的には危険だから、あるいはより良い代替案が存在するからです。</target>
        </trans-unit>
        <trans-unit id="c4be47f7b0b0635e030d8f171a0806ef7b2856b7" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. Compilers warn when a deprecated program element is used or overridden in non-deprecated code.</source>
          <target state="translated">Deprecatedとアノテーションされたプログラム要素は、プログラマが使用しないように推奨されているものです。コンパイラは、非非推奨のプログラム要素が使用されたり、非推奨のコードでオーバーライドされたりすると警告します。</target>
        </trans-unit>
        <trans-unit id="2de66be4819f2c9dcd7bc09e76cc228c9194121b" translate="yes" xml:space="preserve">
          <source>A program would use then these classes as follows:</source>
          <target state="translated">プログラムは以下のように、これらのクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="f199fddb7cb98fec44ccf9e86b3406817feca422" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter.</source>
          <target state="translated">アノテーションされたメソッドやコンストラクタのボディが varargs パラメータに対して安全でない可能性のある操作を行わないというプログラマのアサーション。</target>
        </trans-unit>
        <trans-unit id="8f5e77f61722434f91b66e7d1bdf03aa10ba7a2a" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a</source>
          <target state="translated">アノテーションされたメソッドやコンストラクタのボディが varargs パラメータに対して安全でない可能性のある操作を行わないというプログラマのアサーション。このアノテーションをメソッドやコンストラクタに適用することで</target>
        </trans-unit>
        <trans-unit id="cc64b915a35a6cb9d915399919c9c32d2a394819" translate="yes" xml:space="preserve">
          <source>A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth. The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content.</source>
          <target state="translated">プログレッシブパスとは、画像全体を再エンコードすることで、一般的には有効解像度が徐々に高くなりますが、より大きな伝送帯域幅を必要とします。プログレッシブエンコーディングの最も一般的な使用法はJPEG形式で、連続したパスには高周波数の画像内容のより詳細な表現が含まれています。</target>
        </trans-unit>
        <trans-unit id="e86c918437b0ef4c87896f835e92bc1ba37fb22a" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers&quot;. This defines a whitespace or comma separated list of class names for handlers classes to load and register as handlers to the specified logger. Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">プロパティ &quot;&amp;lt;logger&amp;gt; .handlers&quot;。これは、指定されたロガーにハンドラーとしてロードおよびハンドラーとして登録するハンドラークラスのクラス名の空白またはカンマ区切りのリストを定義します。各クラス名は、デフォルトのコンストラクターを持つハンドラークラスの名前でなければなりません。これらのハンドラーは、最初に使用されるときに、遅延して作成される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9b8333a093b6d7d47a6c333412eb84aa3f692950" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.useParentHandlers&quot;. This defines a boolean value. By default every logger calls its parent in addition to handling the logging message itself, this often result in messages being handled by the root logger as well. When setting this property to false a Handler needs to be configured for this logger otherwise no logging messages are delivered.</source>
          <target state="translated">プロパティ &quot;&amp;lt;logger&amp;gt; .useParentHandlers&quot;。これはブール値を定義します。デフォルトでは、すべてのロガーはロギングメッセージ自体の処理に加えてその親を呼び出します。これにより、多くの場合、メッセージはルートロガーでも処理されます。このプロパティをfalseに設定する場合、このロガーに対してハンドラーを構成する必要があります。そうでない場合、ロギングメッセージは配信されません。</target>
        </trans-unit>
        <trans-unit id="a48195330c65c4b01249ae0f45a46a4b74f2ba95" translate="yes" xml:space="preserve">
          <source>A property &quot;config&quot;. This property is intended to allow arbitrary configuration code to be run. The property defines a whitespace or comma separated list of class names. A new instance will be created for each named class. The default constructor of each class may execute arbitrary code to update the logging configuration, such as setting logger levels, adding handlers, adding filters, etc.</source>
          <target state="translated">プロパティ「config」。このプロパティは、任意の設定コードを実行できるようにすることを目的としています。このプロパティは、クラス名のホワイトスペースまたはカンマで区切られたリストを定義します。名前のついたクラスごとに新しいインスタンスが作成されます。各クラスのデフォルト コンストラクタは、ロガー レベルの設定、ハンドラの追加、フィルタの追加など、ロギング構成を更新するための任意のコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="afdce71ac9851b08feb1aedc934d6974d465ffd9" translate="yes" xml:space="preserve">
          <source>A property &quot;handlers&quot;. This defines a whitespace or comma separated list of class names for handler classes to load and register as handlers on the root Logger (the Logger named &quot;&quot;). Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">プロパティ &quot;handlers&quot;。これは、ルート ロガー(&quot;&quot;という名前のロガー)上でハンドラーとしてロードし登録するハンドラー クラスのクラス名のホワイトスペースまたはカンマ区切りのリストを定義します。各クラス名は、デフォルト コンストラクタを持つハンドラ クラスのものでなければなりません。これらのハンドラは、最初に使用されるときに、怠惰に作成される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="40cd905b82ea9f19a546d51718933bdbbabbbf69" translate="yes" xml:space="preserve">
          <source>A property list can contain another property list as its &quot;defaults&quot;; this second property list is searched if the property key is not found in the original property list.</source>
          <target state="translated">プロパティ・リストは、その「デフォルト」として別のプロパティ・リストを含むことができ、この2番目のプロパティ・リストは、プロパティ・キーが元のプロパティ・リストに見つからない場合に検索されます。</target>
        </trans-unit>
        <trans-unit id="f2eed07f01afb2d91e36f7bb664109ed92d22708" translate="yes" xml:space="preserve">
          <source>A property list that contains default values for any keys not found in this property list.</source>
          <target state="translated">このプロパティ・リストにないキーのデフォルト値を含むプロパティ・リスト。</target>
        </trans-unit>
        <trans-unit id="f41aeb00b26c7224e4373696562512e945d54b66" translate="yes" xml:space="preserve">
          <source>A protocol library such as one for LDAP gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslClient&lt;/code&gt; instance process challenges and create responses according to the SASL mechanism implemented by the &lt;code&gt;SaslClient&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL client's authentication exchange.</source>
          <target state="translated">LDAP用のプロトコルライブラリなどは、特定のSASLメカニズムで定義された認証を実行するために、このクラスのインスタンスを取得します。上のメソッド呼び出し &lt;code&gt;SaslClient&lt;/code&gt; インスタンスプロセスの課題をとすることにより実現SASL機構に従って応答を作成し &lt;code&gt;SaslClient&lt;/code&gt; 。認証が進むにつれて、インスタンスはSASLクライアントの認証交換の状態をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="580caa29929fc4de9f05bdba16e0354f5e586e20" translate="yes" xml:space="preserve">
          <source>A provider cannot be added if it is already installed.</source>
          <target state="translated">すでにインストールされている場合は、プロバイダを追加することはできません。</target>
        </trans-unit>
        <trans-unit id="e63d614e8049932752e3aebb56b8bccf35052ea3" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol.</source>
          <target state="translated">指定されたプロトコルを使用して JMX API コネクタクライアントを作成するためのプロバイダです。</target>
        </trans-unit>
        <trans-unit id="614fb95349aea53f10863cad93d2aa6c404516c9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMX APIコネクタクライアントを作成するためのプロバイダー。このインタフェースのインスタンスは、&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="bae1e5320493d0b1d17c1ed489f2965c61b5f471" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol.</source>
          <target state="translated">指定されたプロトコルを使用して JMX API コネクタサーバを作成するためのプロバイダです。</target>
        </trans-unit>
        <trans-unit id="36ad26d0e92f5776ffe09050557ac6b961677cf9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMX APIコネクタサーバーを作成するためのプロバイダー。このインターフェースのインスタンスは、&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="17b083606c40562aa588292f9a8978d30059dfc5" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">プロバイダーは、1つ以上の&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;インスタンスのファクトリです。各ファイルシステムは &lt;code&gt;URI&lt;/code&gt; で識別され、URIのスキームはプロバイダーの&lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;一致します。たとえば、デフォルトのファイルシステムは、URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; で識別されます。たとえば、メモリベースのファイルシステムは、 &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; などのURIで識別できます。&lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; の&lt;/a&gt;方法は、ファイルシステムを作成するために使用されてもよく、&lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;メソッドは、プロバイダーによって作成された既存のファイルシステムへの参照を取得するために使用できます。プロバイダーが単一のファイルシステムのファクトリである場合、プロバイダーの初期化時にファイルシステムが作成されるか、後で &lt;code&gt;newFileSystem&lt;/code&gt; メソッドが呼び出されるときに、プロバイダーに依存します。デフォルトのプロバイダーの場合、プロバイダーの初期化時に &lt;code&gt;FileSystem&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="c8661e42b7c7bc483d855be05578549a86088067" translate="yes" xml:space="preserve">
          <source>A provider may supply a separate class for each combination of</source>
          <target state="translated">プロバイダは、以下の各組み合わせに対して個別のクラスを提供してもよい。</target>
        </trans-unit>
        <trans-unit id="a60a915be1b89d2839a779fb959759ac9c3b3cb4" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type.</source>
          <target state="translated">特定のタイプのミキサーの供給者または工場。</target>
        </trans-unit>
        <trans-unit id="44f8d9d0aaa9571934a90484486f900c4a13b7b8" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type. This mechanism allows the implementation to determine how resources are managed in creation / management of a mixer.</source>
          <target state="translated">特定のミキサータイプのためのプロバイダーまたはファクトリー。このメカニズムにより、ミキサーの作成/管理においてリソースがどのように管理されるかを決定することができます。</target>
        </trans-unit>
        <trans-unit id="4878c3885cb6d9f28d6699e6f5ecb8e8c822919b" translate="yes" xml:space="preserve">
          <source>A provider satisfies the specified selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">プロバイダは,指定された暗号サービスのために指定されたアルゴリズムまたは型を実装している場合に,指定された選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="ef46e43cda72b7adf9af9a571bcf11a8355d0f12" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">プロバイダは,指定された暗号サービスに対して,指定されたアルゴリズムまたは型を実装し,その実装が,指定された属性名と値の組で表される制約条件を満たす場合に,この選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="fc949cead6b5737ed8a2378bb803e40cc0308221" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">プロバイダは,指定された暗号サービスのために指定されたアルゴリズムまたは型を実装していれば,この選択基準を満たす.</target>
        </trans-unit>
        <trans-unit id="e6ced3920c677959d9711013953a9334773b2c03" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its key factory.</source>
          <target state="translated">プロバイダは、そのキー工場でサポートされているすべてのキー仕様を文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="26b19895da8d88f1c088d3d43c523eea1300e61e" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">プロバイダーは、その秘密鍵ファクトリによってサポートされるすべての鍵仕様を文書化する必要があります。たとえば、「SunJCE」プロバイダが提供するDES秘密鍵ファクトリは、 &lt;code&gt;DESKeySpec&lt;/code&gt; をDES鍵の透過的な表現としてサポートし、トリプルDES鍵のそのプロバイダの秘密鍵ファクトリは、トリプルDES鍵の透過的な表現として &lt;code&gt;DESedeKeySpec&lt;/code&gt; をサポートします。</target>
        </trans-unit>
        <trans-unit id="b667809afd8c34cefc7f762bfd6fab51fb3ce561" translate="yes" xml:space="preserve">
          <source>A proxy class extends &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt;.</source>
          <target state="translated">プロキシクラスは &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt; を拡張します。</target>
        </trans-unit>
        <trans-unit id="615f960dcbdaeb0ef796b32f2cd08b6cb43be786" translate="yes" xml:space="preserve">
          <source>A proxy class has the following properties:</source>
          <target state="translated">プロキシクラスは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="a2869cfe379beab005c79c443e4b3f14fb769af4" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order.</source>
          <target state="translated">プロキシクラスは、その作成時に指定されたインターフェイスを同じ順番で正確に実装します。</target>
        </trans-unit>
        <trans-unit id="4d78fbca7a5f7f9302beb9340d42fda5f7c8acaa" translate="yes" xml:space="preserve">
          <source>A proxy instance has the following properties:</source>
          <target state="translated">プロキシインスタンスは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="c8123f85683d160c7b20d5bea816c6a9cdd93243" translate="yes" xml:space="preserve">
          <source>A proxy is typically used to access an MXBean in a remote Java virtual machine. An alternative way to create an MXBean proxy is:</source>
          <target state="translated">プロキシは通常、リモートJava仮想マシンのMXBeanにアクセスするために使用されます。MXBeanプロキシを作成する別の方法としては、以下のものがあります。</target>
        </trans-unit>
        <trans-unit id="f354b17dc51832b6d211186d5cf971a120bb6b70" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying. Used, for instance, to create sockets bypassing any other global proxy settings (like SOCKS):</source>
          <target state="translated">&lt;code&gt;DIRECT&lt;/code&gt; 接続を表すプロキシ設定。基本的に、プロトコルハンドラーにプロキシを使用しないように指示します。たとえば、他のグローバルプロキシ設定（SOCKSなど）をバイパスするソケットを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b46f91bed61e24e029ef85159c86eda25e3a71d6" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a package element.</source>
          <target state="translated">パッケージ要素に対応する疑似型。</target>
        </trans-unit>
        <trans-unit id="b486b8bfaac8ddad76cc95e09326ce8a1f46face" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate.</source>
          <target state="translated">実際の型が適切でない場合に使用される疑似型。</target>
        </trans-unit>
        <trans-unit id="52de26ecb9825b14655caee56f2634bb6a83b2cb" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate. The kinds of &lt;code&gt;NoType&lt;/code&gt; are:</source>
          <target state="translated">実際のタイプが適切でない場合に使用される疑似タイプ。 &lt;code&gt;NoType&lt;/code&gt; の種類は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1e90dd032f01e32199ad98aa872c3903457e7668" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">擬似ランダム &lt;code&gt;double&lt;/code&gt; 値は、次のメソッドをoriginおよびboundで呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="75364c69974740760e2102258d4f572653c09fb6" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextDouble--&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">擬似ランダム &lt;code&gt;double&lt;/code&gt; 値は、&lt;a href=&quot;random#nextDouble--&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="8c5dd8c02c45a4aab3524fd4b010df013ea9b7dd" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">擬似乱数の &lt;code&gt;int&lt;/code&gt; 値は、オリジンとバインドされた次のメソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="a03e42a450e90fb0c78448bd8feae33961e15d83" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;int&lt;/code&gt; 値は、&lt;a href=&quot;random#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="eb87283f032efcc5874617e4e0bcc58f671273aa" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">オリジンとバインドされた次のメソッドを呼び出した結果であるかのように、疑似乱数 &lt;code&gt;long&lt;/code&gt; 値が生成されます。</target>
        </trans-unit>
        <trans-unit id="9449755c8e0ca71a1c153368e6816b2ee3278550" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextLong--&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似乱数 &lt;code&gt;long&lt;/code&gt; 値は、&lt;a href=&quot;random#nextLong--&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="4f1ff8a1809138d2eb69bc96f4ac2d5f1cf560bd" translate="yes" xml:space="preserve">
          <source>A public key.</source>
          <target state="translated">公開鍵です。</target>
        </trans-unit>
        <trans-unit id="a5d3e3595d61df29206b582a495aec470cfa967b" translate="yes" xml:space="preserve">
          <source>A public key. This interface contains no methods or constants. It merely serves to group (and provide type safety for) all public key interfaces. Note: The specialized public key interfaces extend this interface. See, for example, the DSAPublicKey interface in &lt;code&gt;java.security.interfaces&lt;/code&gt;.</source>
          <target state="translated">公開鍵。このインターフェイスには、メソッドや定数は含まれていません。すべての公開鍵インターフェースをグループ化（およびタイプセーフを提供）するだけです。注：専用の公開鍵インターフェースは、このインターフェースを拡張します。たとえば、 &lt;code&gt;java.security.interfaces&lt;/code&gt; のDSAPublicKeyインターフェースを参照してください。</target>
        </trans-unit>
        <trans-unit id="fa53fec930a563b793cfb3b06ebddd3b17d2fcf1" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">句読文字： &lt;code&gt;p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e9bc11f3589016e70368844a4f5c6189fa59bdb" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">文字列引数に対するマッチング制約を表すクエリ式。返されるオブジェクトは、非公開クラス javax.management.MatchQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="fd87aace87b360fadc902a07b6f6724a955ccd18" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalDate&lt;/code&gt; returning null if not found.</source>
          <target state="translated">見つからない場合にnull を &lt;code&gt;LocalDate&lt;/code&gt; のクエリ。</target>
        </trans-unit>
        <trans-unit id="9c5fdb320f9fd010e6fc84437fd7efbd9ae2a4f3" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalTime&lt;/code&gt; returning null if not found.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; が見つからない場合にnullを返すクエリ。</target>
        </trans-unit>
        <trans-unit id="ac9a2eb18e7bfdca419913ea159a721ab7b01523" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;ZoneOffset&lt;/code&gt; returning null if not found.</source>
          <target state="translated">見つからない場合にnull を &lt;code&gt;ZoneOffset&lt;/code&gt; のクエリ。</target>
        </trans-unit>
        <trans-unit id="3e78bc82f9e8f94bc5a735382871c83937265df6" translate="yes" xml:space="preserve">
          <source>A query for the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; クエリ。</target>
        </trans-unit>
        <trans-unit id="39ef1890e85fb1c7facf128d46625e4303c5b931" translate="yes" xml:space="preserve">
          <source>A query for the smallest supported unit.</source>
          <target state="translated">サポートされている最小単位のクエリ。</target>
        </trans-unit>
        <trans-unit id="3f82a322a0e451ead6caf980f1c2ed3196a64f4a" translate="yes" xml:space="preserve">
          <source>A query that provides access to the excess days that were parsed.</source>
          <target state="translated">解析された超過日数へのアクセスを提供するクエリ。</target>
        </trans-unit>
        <trans-unit id="5678eed1c14504f0290f034574f9688caebd613d" translate="yes" xml:space="preserve">
          <source>A query that provides access to whether a leap-second was parsed.</source>
          <target state="translated">うるう秒が解析されたかどうかにアクセスできるクエリ。</target>
        </trans-unit>
        <trans-unit id="af8411cd20f4aa32f91510c63957b78c82b0ec10" translate="yes" xml:space="preserve">
          <source>A question mark ('?') is replaced by a backslash (\) followed by a question mark.</source>
          <target state="translated">クエスチョンマーク('?')は、バックスラッシュ(\)の後にクエスチョンマークが続きます。</target>
        </trans-unit>
        <trans-unit id="e084d41cca85f9090522df2231bb663388166177" translate="yes" xml:space="preserve">
          <source>A question mark (?) or asterisk (*). The two characters represent a question mark or asterisk respectively.</source>
          <target state="translated">クエスチョンマーク(?)またはアスタリスク(*)。この2つの文字はそれぞれクエスチョンマークまたはアスタリスクを表します。</target>
        </trans-unit>
        <trans-unit id="c991703c3435fc38e1efa1e781b165d3a35e83cc" translate="yes" xml:space="preserve">
          <source>A quote ('&quot;') is replaced by a backslash (\) followed by a quote.</source>
          <target state="translated">引用符('&quot;&quot;')は、バックスラッシュ(\)の後に引用符が続きます。</target>
        </trans-unit>
        <trans-unit id="65e06fc75c0ec78c2fc622e557a9e1f653f35d84" translate="yes" xml:space="preserve">
          <source>A quote may not appear inside a quoted value except immediately after an odd number of consecutive backslashes.</source>
          <target state="translated">引用符は、奇数個のバックスラッシュの直後を除いて、引用符の中には表示されません。</target>
        </trans-unit>
        <trans-unit id="b264de8abb8722f7f6da9ae38453e8ae94eeb0aa" translate="yes" xml:space="preserve">
          <source>A quote. The two characters represent a quote, and that quote is not considered to terminate the quoted value. An ending closing quote must be present for the quoted value to be valid.</source>
          <target state="translated">引用符のこと。2つの文字は引用符を表し、その引用符は引用符の値を終了させるものとはみなされません。引用符の値を有効にするためには、終了する引用符が存在しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9a2d077ef11a8cc558d4862f60b67ce7ff22169" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread.</source>
          <target state="translated">現在のスレッドに分離された乱数発生器。</target>
        </trans-unit>
        <trans-unit id="33185ac95e8bc4fa75b311844397235baffc14d0" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread. Like the global &lt;a href=&quot;../random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; generator used by the &lt;a href=&quot;../../lang/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; class, a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is initialized with an internally generated seed that may not otherwise be modified. When applicable, use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; rather than shared &lt;code&gt;Random&lt;/code&gt; objects in concurrent programs will typically encounter much less overhead and contention. Use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is particularly appropriate when multiple tasks (for example, each a &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;) use random numbers in parallel in thread pools.</source>
          <target state="translated">現在のスレッドに分離された乱数ジェネレータ。&lt;a href=&quot;../../lang/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt;クラスで使用されるグローバル&lt;a href=&quot;../random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;ジェネレーターと同様に、 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; は、内部で生成されたシードで初期化されます。該当する場合、並行プログラムで共有 &lt;code&gt;Random&lt;/code&gt; オブジェクトではなく &lt;code&gt;ThreadLocalRandom&lt;/code&gt; を使用すると、通常、発生するオーバーヘッドと競合がはるかに少なくなります。 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; の使用は、複数のタスク（各&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; など&lt;/a&gt;）がスレッドプールで乱数を並列で使用する場合に特に適切です。</target>
        </trans-unit>
        <trans-unit id="488c64596c97d4a88323f5f0259654cb1b84108c" translate="yes" xml:space="preserve">
          <source>A randomly generated &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">ランダムに生成された &lt;code&gt;UUID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a4c830c8ae43497d1af863a0e08fd5560aa7cb" translate="yes" xml:space="preserve">
          <source>A read operation might not fill the buffer, and in fact it might not read any bytes at all. Whether or not it does so depends upon the nature and state of the channel. A socket channel in non-blocking mode, for example, cannot read any more bytes than are immediately available from the socket's input buffer; similarly, a file channel cannot read any more bytes than remain in the file. It is guaranteed, however, that if a channel is in blocking mode and there is at least one byte remaining in the buffer then this method will block until at least one byte is read.</source>
          <target state="translated">読み取り操作はバッファを満たさないかもしれませんし、実際には全くバイトを読み込まないかもしれません。読み込みを行うかどうかは、チャネルの性質と状態に依存する。例えば、ノンブロッキングモードのソケットチャネルは、ソケットの入力バッファからすぐに利用可能なバイト数以上のバイトを読み込むことはできません。しかし、ブロッキングモードの場合、バッファに少なくとも1バイト以上のバイトが残っている場合、この方法は少なくとも1バイトが読み込まれるまでブロッキングすることが保証されている。</target>
        </trans-unit>
        <trans-unit id="9d0a9dce3565a63964117ea0a8dfaa902858d525" translate="yes" xml:space="preserve">
          <source>A read-only empty PermissionCollection instance.</source>
          <target state="translated">読み取り専用の空のPermissionCollectionインスタンス。</target>
        </trans-unit>
        <trans-unit id="3c1a14e276d6d75e03c30962d46fa74775569f4b" translate="yes" xml:space="preserve">
          <source>A read-write lock allows for a greater level of concurrency in accessing shared data than that permitted by a mutual exclusion lock. It exploits the fact that while only a single thread at a time (a &lt;em&gt;writer&lt;/em&gt; thread) can modify the shared data, in many cases any number of threads can concurrently read the data (hence &lt;em&gt;reader&lt;/em&gt; threads). In theory, the increase in concurrency permitted by the use of a read-write lock will lead to performance improvements over the use of a mutual exclusion lock. In practice this increase in concurrency will only be fully realized on a multi-processor, and then only if the access patterns for the shared data are suitable.</source>
          <target state="translated">読み取り/書き込みロックにより、共有データへのアクセスにおいて、相互排他ロックで許可されるよりも高いレベルの同時実行性が可能になります。それは時間（時、一方のみの単一スレッドという事実利用&lt;em&gt;ライター&lt;/em&gt;（したがってスレッド）が共有データを変更することができるが、多くの場合、スレッドの任意の数が同時にデータを読み取ることができる&lt;em&gt;リーダ&lt;/em&gt;スレッド）。理論的には、読み取り/書き込みロックの使用により許可される同時実行性の増加により、相互排他ロックの使用よりもパフォーマンスが向上します。実際には、この同時実行性の増加は、マルチプロセッサでのみ完全に実現され、共有データのアクセスパターンが適切である場合にのみ実現されます。</target>
        </trans-unit>
        <trans-unit id="6a884474a7fd8fa15566b3c46e080db6b54715b1" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to be tiled, or are guaranteed not to be tiled, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">すべての画像がタイリングされることが保証されている、またはタイリングされないことが保証されているリーダーは、画像データにアクセスせずにそれぞれ &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返す場合があります。このような場合、入力ソースが設定されていなかったり、画像インデックスが範囲外であっても、例外をスローする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a119cfd299dd82f3eb2b90d7f7893712a9085897" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to support easy random access, or are guaranteed not to support easy random access, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">すべての画像が簡単なランダムアクセスをサポートすることが保証されている、または簡単なランダムアクセスをサポートしないことが保証されているリーダーは、画像データにアクセスせずにそれぞれ &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返す場合があります。このような場合、入力ソースが設定されていなかったり、画像インデックスが範囲外であっても、例外をスローする必要はありません。</target>
        </trans-unit>
        <trans-unit id="35dcd41910e274aca3f1af552f0db2276e3cea66" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid X offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">タイルグリッドXオフセットが常に同じ値(通常は0)であるリーダは、画像データにアクセスせずに値を返すことがあります。このような場合、入力ソースが設定されていなかったり、画像インデックスが圏外であっても例外を投げる必要はありません。</target>
        </trans-unit>
        <trans-unit id="bbd67a5d6af16685ac4e9d2bf54d0e78864b1b1b" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid Y offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">タイルグリッド Y オフセットが常に同じ値(通常は 0)であるリーダは、画像データにアクセスせずに値を返すことがあります。この場合、入力ソースが設定されていなかったり、画像インデックスが圏外であっても例外を投げる必要はありません。</target>
        </trans-unit>
        <trans-unit id="867f5bd8fc867c56578d5a8159e1e056b1f3cc25" translate="yes" xml:space="preserve">
          <source>A reader plug-in may choose whether or not to expose tiling that is present in the image as it is stored. It may even choose to advertise tiling when none is explicitly present. In general, tiling should only be advertised if there is some advantage (in speed or space) to accessing individual tiles. Regardless of whether the reader advertises tiling, it must be capable of reading an arbitrary rectangular region specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">リーダープラグインは、画像が保存されているときに画像に存在するタイリングを公開するかどうかを選択できます。明示的に何も存在しない場合は、タイリングをアドバタイズすることもできます。一般に、タイリングは、個々のタイルへのアクセスに（速度またはスペースで）いくつかの利点がある場合にのみアドバタイズされます。リーダーがタイリングをアドバタイズするかどうかに関係なく、リーダーは &lt;code&gt;ImageReadParam&lt;/code&gt; で指定された任意の矩形領域を読み取ることができる必要があります。</target>
        </trans-unit>
        <trans-unit id="651daf6a92d260dfff9f7294e86a24dc3c2c6a16" translate="yes" xml:space="preserve">
          <source>A reader that does not support thumbnails need not implement any of the thumbnail-related methods.</source>
          <target state="translated">サムネイルをサポートしていないリーダーは、サムネイル関連のメソッドを実装する必要はありません。</target>
        </trans-unit>
        <trans-unit id="0be2b7ed75dd5db4a77d4eb6f31175f72790f46b" translate="yes" xml:space="preserve">
          <source>A recursive result-bearing &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再帰的な結果を持つ&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a81fc059d2c4f24cc38eba91bff7746f9766fc6" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再帰的な結果のない&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6300992022ef59137e609e78d48653dc142fae21" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;. This class establishes conventions to parameterize resultless actions as &lt;code&gt;Void&lt;/code&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;s. Because &lt;code&gt;null&lt;/code&gt; is the only valid value of type &lt;code&gt;Void&lt;/code&gt;, methods such as &lt;code&gt;join&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt; upon completion.</source>
          <target state="translated">再帰的な結果のない&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。このクラスは、結果のないアクションを &lt;code&gt;Void&lt;/code&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; としてパラメーター化するための規則を確立します。 &lt;code&gt;null&lt;/code&gt; は &lt;code&gt;Void&lt;/code&gt; 型の唯一の有効な値であるため、 &lt;code&gt;join&lt;/code&gt; などのメソッドは、完了時に常に &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1cb5a53925a15d8d640449158f0ca3038779f2ad" translate="yes" xml:space="preserve">
          <source>A reentrant mutual exclusion &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; with the same basic behavior and semantics as the implicit monitor lock accessed using &lt;code&gt;synchronized&lt;/code&gt; methods and statements, but with extended capabilities.</source>
          <target state="translated">基本的な動作とセマンティクスが、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントを使用してアクセスされる暗黙のモニターロックと同じですが、拡張機能を備えた、再入可能な相互排他&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ecfdbafe40a0c89cc49b68848d977d5074ada4" translate="yes" xml:space="preserve">
          <source>A reference object, blocking until one becomes available</source>
          <target state="translated">参照オブジェクトで、利用可能になるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="672ba6654ac391d503ee81be4f5c402100ae4a62" translate="yes" xml:space="preserve">
          <source>A reference object, if one was available within the specified timeout period, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">指定されたタイムアウト期間内に参照オブジェクトが使用可能であった場合は参照オブジェクト、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06af76cd96533be1c41483691d0275d471641b26" translate="yes" xml:space="preserve">
          <source>A reference object, if one was immediately available, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">すぐに利用できる場合は参照オブジェクト、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8919f8790ed9d4c040586b362295a1be11a5f8d5" translate="yes" xml:space="preserve">
          <source>A reference to a java class is written in the form &amp;lt;class&amp;gt;javax.swing.JButton&amp;lt;/class&amp;gt;.</source>
          <target state="translated">Javaクラスへの参照は、&amp;lt;class&amp;gt; javax.swing.JButton &amp;lt;/ class&amp;gt;の形式で記述されます。</target>
        </trans-unit>
        <trans-unit id="350f2c6afc92d7c05299564aab42eafe038acf67" translate="yes" xml:space="preserve">
          <source>A reference to an array is written using the &quot;array&quot; tag. The &quot;class&quot; and &quot;length&quot; attributes specify the sub-type of the array and its length respectively.</source>
          <target state="translated">配列への参照は、&quot;array &quot;タグを使って書き込まれます。class&quot; と &quot;length&quot; 属性は、それぞれ配列のサブタイプと長さを指定します。</target>
        </trans-unit>
        <trans-unit id="fce9f2f5a454ee93f2c297c9ee7fb38e95a6dd71" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;Appendable&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;Appendable&lt;/code&gt; への参照</target>
        </trans-unit>
        <trans-unit id="40f77ba4ee06e2db8298d41927f9ba32b14c39a0" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile int&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="7e2b53980b1820a7ffe2d6d89f81034a3f52c1d8" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile int&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかのフィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="62ef22f6088afcedd2b57259a251e15a91d2a19a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile long&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="f64d3fe565b074349f8d34af10a23fad8d736a9d" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile long&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかのフィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="c5bba777cabc2754604b16f480628e723025c315" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile&lt;/code&gt; 参照フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="00892eb028af7eaca0b0c67c0879a21e04e9cf9a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes. This class is designed for use in atomic data structures in which several reference fields of the same node are independently subject to atomic updates. For example, a tree node might be declared as</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile&lt;/code&gt; 参照フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかの参照フィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。たとえば、ツリーノードは次のように宣言されます。</target>
        </trans-unit>
        <trans-unit id="7aef73b938bec112bb6e27f046c620bbab3f13f5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">ファイルの領域は、他のプログラムによるアクセスに対して&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="986e19cabf09c2b5bb8f5bb41c5057eff866eba5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">ファイルの領域は、メモリに直接&lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。大きなファイルの場合、これは通常の &lt;code&gt;read&lt;/code&gt; または &lt;code&gt;write&lt;/code&gt; メソッドを呼び出すよりもはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="6ed5fce3c0b65ae32c0e5d7426d44ead13fd5ca7" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">ファイルの領域は、他のプログラムによるアクセスに対して&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="3b5ff16856ff2869ff88908e4046d1b1be295d7f" translate="yes" xml:space="preserve">
          <source>A region of a file may be mapped into memory in one of three modes:</source>
          <target state="translated">ファイルの領域は、3つのモードのうちの1つでメモリにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="e9f74d623670ef8ac431e94f0bb98af4e602455a" translate="yes" xml:space="preserve">
          <source>A registered listener becomes deregistered when:</source>
          <target state="translated">登録されたリスナーが登録を解除された時点で、リスナーは登録を解除された状態になります。</target>
        </trans-unit>
        <trans-unit id="796ce01fe357cfe1131906cfe0da8f399d6b1c53" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances.</source>
          <target state="translated">サービスプロバイダインスタンスのレジストリ。</target>
        </trans-unit>
        <trans-unit id="8cc7ea1f17a9b34b3a301d78fcc3206b01129af0" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances. Service provider classes may be detected at run time by means of meta-information in the JAR files containing them. The intent is that it be relatively inexpensive to load and inspect all available service provider classes. These classes may them be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">サービスプロバイダーインスタンスのレジストリ。サービスプロバイダークラスは、それらを含むJARファイル内のメタ情報によって実行時に検出される場合があります。その目的は、使用可能なすべてのサービスプロバイダークラスをロードして検査するのが比較的安価であることです。これらのクラスは、実際の作業を &lt;code&gt;ImageTranscoder&lt;/code&gt; より &lt;code&gt;ImageInputStream&lt;/code&gt; クラス（この場合は &lt;code&gt;ImageReader&lt;/code&gt; 、 &lt;code&gt;ImageWriter&lt;/code&gt; 、ImageTranscoder、ImageInputStream、および &lt;code&gt;ImageOutputStream&lt;/code&gt; のインスタンス）を見つけてインスタンス化するために使用できます。</target>
        </trans-unit>
        <trans-unit id="b06c31cba6df7f439a79aa3ae1390ce3824b0549" translate="yes" xml:space="preserve">
          <source>A regular expression, specified as a string, must first be compiled into an instance of this class. The resulting pattern can then be used to create a &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; object that can match arbitrary &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequences&lt;/a&gt; against the regular expression. All of the state involved in performing a match resides in the matcher, so many matchers can share the same pattern.</source>
          <target state="translated">文字列として指定された正規表現は、最初にこのクラスのインスタンスにコンパイルされる必要があります。結果のパターンを使用して、任意の&lt;a href=&quot;../../lang/charsequence&quot;&gt;文字シーケンス&lt;/a&gt;を正規表現と照合できる&lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。マッチの実行に関係するすべての状態はマッチャーに存在するため、多くのマッチャーが同じパターンを共有できます。</target>
        </trans-unit>
        <trans-unit id="84baa6ec0a9b50f4bedf3f108bed7c1a5d83f975" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;インスタンスは、Relationインターフェースを実装するオブジェクト（通常は&lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt;）として明示的に作成できます。（ &lt;code&gt;RelationSupport&lt;/code&gt; 自体は有効なMBeanなので、MBeanサーバーに登録できますが、これは必須ではありません。）または、関係サービスの&lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt;メソッドを使用して、関係インスタンスを暗黙的に作成できます。</target>
        </trans-unit>
        <trans-unit id="e34ea165e026e514c6feec0e60a888d6555eca96" translate="yes" xml:space="preserve">
          <source>A relation or reset character not followed by a text-argument (e.g. &quot;a &amp;lt; ,b&quot;).</source>
          <target state="translated">テキスト引数が続かない関係またはリセット文字（例： &quot;a &amp;lt;、b&quot;）。</target>
        </trans-unit>
        <trans-unit id="9b5292f74c4969e9f524b42a1578d24ee29625b3" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">関係タイプは、&lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトとして、通常は&lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; &lt;/a&gt;として明示的に作成できます。または、関係サービスの&lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt;メソッドを使用して暗黙的に作成することもできます。</target>
        </trans-unit>
        <trans-unit id="cca4085b34ffc8b6117aabd0f662f58af45f6ef2" translate="yes" xml:space="preserve">
          <source>A relation type has to be declared in the Relation Service:</source>
          <target state="translated">リレーションサービスでは、リレーション型を宣言しなければなりません。</target>
        </trans-unit>
        <trans-unit id="7f4eb7687a7b917a5f779c8905e8aba99535587f" translate="yes" xml:space="preserve">
          <source>A relation type includes a relation type name and a list of role infos (represented by RoleInfo objects).</source>
          <target state="translated">リレーション型には、リレーション型名とロール情報(RoleInfoオブジェクトで表される)のリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="e416d1b9bbad3251aba861210072b4207a2080fc" translate="yes" xml:space="preserve">
          <source>A replacement is legal if, and only if, it is a legal sequence of bytes in this encoder's charset; that is, it must be possible to decode the replacement into one or more sixteen-bit Unicode characters.</source>
          <target state="translated">置換は、このエンコーダの文字セット内のバイトの正規のシーケンスである場合にのみ、正規のものとなります。</target>
        </trans-unit>
        <trans-unit id="9621585bd05248c7bbaa827c2bc4c50cf8bb5e38" translate="yes" xml:space="preserve">
          <source>A representation of</source>
          <target state="translated">の表現</target>
        </trans-unit>
        <trans-unit id="21ca3ddcf1176e64b427cc5f56e932899f576fbd" translate="yes" xml:space="preserve">
          <source>A reserved key, &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt;, whose value describes the behavior of the engine with respect to concurrent execution of scripts and maintenance of state is also defined. These values for the &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; key are:</source>
          <target state="translated">スクリプトの同時実行と状態の維持に関するエンジンの動作を説明する値である予約済みキー &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; も定義されています。 &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; キーのこれらの値は次の&lt;b&gt;とおり&lt;/b&gt;です。</target>
        </trans-unit>
        <trans-unit id="590b8281eb0b5afdb158b730620721f0d18ca9e1" translate="yes" xml:space="preserve">
          <source>A reset where the text-argument (or an initial substring of the text-argument) is not already in the sequence. (e.g. &quot;a &amp;lt; b &amp;amp; e &amp;lt; f&quot;)</source>
          <target state="translated">テキスト引数（またはテキスト引数の最初のサブストリング）がまだシーケンスにないリセット。（例 &quot;a &amp;lt;b＆e &amp;lt;f&quot;）</target>
        </trans-unit>
        <trans-unit id="50daa7cabce84af2b1a2640df3c79d87fb279761" translate="yes" xml:space="preserve">
          <source>A resolution attribute's cross feed direction resolution and feed direction resolution values are stored internally using units of dots per 100 inches (dphi). Storing the values in dphi rather than, say, metric units allows precise integer arithmetic conversions between dpi and dphi and between dpcm and dphi: 1 dpi = 100 dphi, 1 dpcm = 254 dphi. Thus, the values can be stored into and retrieved back from a resolution attribute in either units with no loss of precision. This would not be guaranteed if a floating point representation were used. However, roundoff error will in general occur if a resolution attribute's values are created in one units and retrieved in different units; for example, 600 dpi will be rounded to 236 dpcm, whereas the true value (to five figures) is 236.22 dpcm.</source>
          <target state="translated">解像度属性のクロスフィード方向の解像度とフィード方向の解像度の値は、100 インチあたりのドット数(dphi)の単位を使用して内部的に保存されます。メトリック単位ではなく dphi で値を保存することで、dpi と dphi の間、また dpcm と dphi の間の正確な整数演算変換が可能になります。1 dpi=100 dphi,1 dpcm=254 dphi となります。このように、値は、精度を損なうことなく、どちらの単位でも分解能属性に格納したり、分解能属性から取得したりすることができます。これは、浮動小数点表現を使用した場合には保証されません。しかし、解像度属性の値が1つの単位で作成され、異なる単位で取得された場合、一般的にはラウンドオフエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="232557dedfb9f95c832486a5c16bc160b4258876" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">解像度属性の値は、横送り方向の解像度と送り方向の解像度の2つの項目で構成されます。解像度属性は、2つの値を提供し、値が測定される単位を示すことによって構築できます。解決属性の値を返すメソッドが提供され、値が返される単位を示します。最も一般的な2つの解像度の単位は、1インチあたりのドット数（dpi）と1センチあたりのドット数（dpcm）です。これらの単位を示すために、エクスポートされた定数&lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt;が用意されています。</target>
        </trans-unit>
        <trans-unit id="8d19983ed6e851519af2fba1e14038db814cbf99" translate="yes" xml:space="preserve">
          <source>A resource key for the description of this element. In conjunction with the &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt;, this can be used to find a localized version of the description. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself.</source>
          <target state="translated">この要素の説明のリソースキー。 &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt; と組み合わせて使用すると、ローカライズされたバージョンの説明を見つけることができます。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体によって設定または使用されません。</target>
        </trans-unit>
        <trans-unit id="a1c92d012b2d6d045733551835589fbd0dda258c" translate="yes" xml:space="preserve">
          <source>A resource variable.</source>
          <target state="translated">リソース変数。</target>
        </trans-unit>
        <trans-unit id="7b1f23249fe7b4699a5516b95a8bf7b0e266b418" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">戻り値 &lt;code&gt;null&lt;/code&gt; ません</target>
        </trans-unit>
        <trans-unit id="e67060fc3a5c293f1477fca093e79e4ac15cb79a" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の戻り値は、マップがキーのマッピングを含まないことを&lt;em&gt;必ずしも&lt;/em&gt;示すわけでは&lt;em&gt;あり&lt;/em&gt;ません。マップがキーを明示的に &lt;code&gt;null&lt;/code&gt; にマップすることも可能です。&lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; の&lt;/a&gt;動作は、これら2つの場合を区別するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="abc6e6f41022bd529fd1b135f0a016d0d7518def" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this buffer is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the buffer's content is not resident in physical memory.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の戻り値は、このバッファ内のすべてのデータが物理メモリに常駐している可能性が高いため、仮想メモリページフォールトやI / O操作を発生させることなくアクセスできることを意味します。 &lt;code&gt;false&lt;/code&gt; の戻り値は、バッファのコンテンツが物理メモリに常駐していないことを必ずしも意味しません。</target>
        </trans-unit>
        <trans-unit id="e09ce668b6b379eac10e99c1ee1b21763ceab49e" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; is not an absolute guarantee of successful encoding; the encoding process may still produce errors due to factors such as I/O errors, inconsistent or malformed data structures, etc. The intent is that a reasonable inspection of the basic structure of the image be performed in order to determine if it is within the scope of the encoding format. For example, a service provider for a format that can only encode greyscale would return &lt;code&gt;false&lt;/code&gt; if handed an RGB &lt;code&gt;BufferedImage&lt;/code&gt;. Similarly, a service provider for a format that can encode 8-bit RGB imagery might refuse to encode an image with an associated alpha channel.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の戻り値は、正常なエンコーディングの絶対的な保証ではありません。エンコードプロセスは、I / Oエラー、一貫性のない、または形式が正しくないデータ構造などの要因により、依然としてエラーを生成する可能性があります。その目的は、画像の基本構造の妥当な検査を実行して、それがエンコード形式の範囲。たとえば、グレースケールのみをエンコードできる形式のサービスプロバイダーは、RGB &lt;code&gt;BufferedImage&lt;/code&gt; を渡すと &lt;code&gt;false&lt;/code&gt; を返します。同様に、8ビットRGB画像をエンコードできる形式のサービスプロバイダーは、関連するアルファチャネルを持つ画像のエンコードを拒否する場合があります。</target>
        </trans-unit>
        <trans-unit id="51198ce5afdd2d38acd4913a60836bf4bdde059f" translate="yes" xml:space="preserve">
          <source>A reusable synchronization barrier, similar in functionality to &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;countdownlatch&quot;&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;&lt;/a&gt; but supporting more flexible usage.</source>
          <target state="translated">&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;countdownlatch&quot;&gt; &lt;code&gt;CountDownLatch&lt;/code&gt; &lt;/a&gt;と機能的に似ていますが、より柔軟な使用法をサポートする、再利用可能な同期バリア。</target>
        </trans-unit>
        <trans-unit id="ceba2bc58203f255151640dbd994659d2a124026" translate="yes" xml:space="preserve">
          <source>A rule expressing how to create a transition.</source>
          <target state="translated">遷移の作り方を表現したルール。</target>
        </trans-unit>
        <trans-unit id="fbe2fbe6bac379ab6561e26f9691cc3c401e88ae" translate="yes" xml:space="preserve">
          <source>A rule implementation may or may not store full information about historic and future transitions, and the information stored is only as accurate as that supplied to the implementation by the rules provider. Applications should treat the data provided as representing the best information available to the implementation of this rule.</source>
          <target state="translated">ルールの実装は、過去と将来の移行に関する完全な情報を保存してもしなくてもよく、保存される情報は、ルール提供者が実装に提供したものと同じくらいの正確さしかない。アプリケーションは、提供されたデータを、このルールの実装に利用可能な最善の情報を表すものとして扱うべきである。</target>
        </trans-unit>
        <trans-unit id="f28f01779dec56117901078530808f10f343aa0d" translate="yes" xml:space="preserve">
          <source>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</source>
          <target state="translated">プロバイダの例外 (設定ミスや回復不可能な内部エラーなど)のための実行時例外で、プロバイダによってサブクラス化され、プロバイダ固有の特殊な実行時エラーを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="81c10e58416fe365c33722061e35ff0670d87792" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; に&lt;/a&gt;基づくスケーラブルな並行&lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="372f3a18469e872de04d341a2be746f10cb1c924" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. The elements of the set are kept sorted according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at set creation time, depending on which constructor is used.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; に&lt;/a&gt;基づくスケーラブルな並行&lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;実装。セットの要素は、使用されるコンストラクターに応じて、&lt;a href=&quot;../../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはセットの作成時に提供される&lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;レーターによってソートされたままになります。</target>
        </trans-unit>
        <trans-unit id="39408f44242f692b61c660267d1f4eb72674c1a2" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">スケーラブルな並行&lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="d12e6fbfc6ba72b83d61bd03fcce224dcf14db27" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">スケーラブルな並行&lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt;実装。マップは、使用されるコンストラクターに応じて、キーの&lt;a href=&quot;../../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはマップの作成時に提供される&lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;レーターによってソートされます。</target>
        </trans-unit>
        <trans-unit id="7f38edc3f196c2ee8906d274bacf229a64607e0e" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;scanner#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">スキャナーは、&lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;インターフェースを実装する任意のオブジェクトからテキストを読み取ることができます。基になる読み取り可能の&lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; を&lt;/a&gt;スローした場合、スキャナーは入力の終わりに到達したと見なします。基になる読み取り可能&lt;a href=&quot;scanner#ioException--&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt;によってスローされた最新の &lt;code&gt;IOException&lt;/code&gt; は、ioException（）メソッドを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="ffcbdc51bd89316399f57b450091b94d78f24a31" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;scanner#useRadix-int-&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">スキャナーは、&lt;a href=&quot;scanner#useRadix-int-&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt;メソッドを使用して異なる基数が設定されていない限り、デフォルトで数値を10進数として解釈します。&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドは、スキャナの基数の値をリセットする &lt;code&gt;10&lt;/code&gt; かかわらず、それが以前に変更されたかどうか。</target>
        </trans-unit>
        <trans-unit id="4823d12d1bfba50c42ac074f1c596841b76be69c" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">スキャナーは、現在の位置を超えて &lt;code&gt;horizon&lt;/code&gt; コードポイント以上を検索することはありません。一致は地平線によって切り取られる場合があることに注意してください。つまり、ホライズンが大きければ、任意の一致結果が異なる可能性があります。スキャナーは地平線を透明な非アンカー境界として扱います（&lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="920c53cb62be380ece95aa01040d89688a85bb11" translate="yes" xml:space="preserve">
          <source>A scanner's locale affects many elements of its default primitive matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">スキャナーのロケールは、デフォルトのプリミティブマッチング正規表現の多くの要素に影響します。上記の&lt;a href=&quot;#localized-numbers&quot;&gt;ローカライズされた数値を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de441a89b0a90c8710d2440914bdcf80aaf3748e" translate="yes" xml:space="preserve">
          <source>A scanner's radix affects elements of its default number matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">スキャナーの基数は、デフォルトの数値一致正規表現の要素に影響します。上記の&lt;a href=&quot;#localized-numbers&quot;&gt;ローカライズされた数値を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="463f9dc1adcec0b3ab8ad69db9ae10fbeb89d5de" translate="yes" xml:space="preserve">
          <source>A scanning operation may block waiting for input.</source>
          <target state="translated">スキャン動作は、入力待ちをブロックすることがあります。</target>
        </trans-unit>
        <trans-unit id="d3f0091492e10ac229bb434cc10a5fde50bc5549" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="852306c9c7b8cbb47df106edc4f858eeb5e9d7a0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることで、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="3489191155cf64520e82e726b24cf95135015862" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="668bcc88064b6a81b73a0380b603d056d1e1f1b0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることで、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="6b9c02b84b9c03296e920e9a1becaeb673d23b06" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="8fbec827facc498332d8a19639919f86b254ab3f" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることで、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="b5c03eca2ae7ca372fa888d6c322d4d60b58c453" translate="yes" xml:space="preserve">
          <source>A second is represented by an integer from 0 to 61; the values 60 and 61 occur only for leap seconds and even then only in Java implementations that actually track leap seconds correctly. Because of the manner in which leap seconds are currently introduced, it is extremely unlikely that two leap seconds will occur in the same minute, but this specification follows the date and time conventions for ISO C.</source>
          <target state="translated">1秒は0から61までの整数で表されます。値60と61はうるう秒のためにのみ発生し、実際にうるう秒を正しく追跡するJava実装でのみ発生します。現在のうるう秒の導入方法のため、同じ1分間に2つのうるう秒が発生することは極めて稀ですが、この仕様ではISO Cの日付と時刻の規則に従います。</target>
        </trans-unit>
        <trans-unit id="87438e78fd5bcd6ab505456e32aa2e20beacb314" translate="yes" xml:space="preserve">
          <source>A second reason that a throwable may have a cause is that the method that throws it must conform to a general-purpose interface that does not permit the method to throw the cause directly. For example, suppose a persistent collection conforms to the &lt;a href=&quot;../util/collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface, and that its persistence is implemented atop &lt;code&gt;java.io&lt;/code&gt;. Suppose the internals of the &lt;code&gt;add&lt;/code&gt; method can throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. The implementation can communicate the details of the &lt;code&gt;IOException&lt;/code&gt; to its caller while conforming to the &lt;code&gt;Collection&lt;/code&gt; interface by wrapping the &lt;code&gt;IOException&lt;/code&gt; in an appropriate unchecked exception. (The specification for the persistent collection should indicate that it is capable of throwing such exceptions.)</source>
          <target state="translated">スロー可能オブジェクトに原因がある2番目の理由は、スロー可能オブジェクトをスローするメソッドが、メソッドが原因を直接スローすることを許可しない汎用インターフェースに準拠する必要があることです。たとえば、永続的なコレクションが&lt;a href=&quot;../util/collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;インターフェースに準拠し、その永続性が &lt;code&gt;java.io&lt;/code&gt; の上に実装されているとします。 &lt;code&gt;add&lt;/code&gt; メソッドの内部が&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローできると仮定します。実装は、の詳細通信可能 &lt;code&gt;IOException&lt;/code&gt; に適合しながら、その呼び出し側に &lt;code&gt;Collection&lt;/code&gt; インターフェースラップによって &lt;code&gt;IOException&lt;/code&gt; がチェックされていない適切な例外。（永続コレクションの仕様は、そのような例外をスローできることを示す必要があります。）</target>
        </trans-unit>
        <trans-unit id="a817d2be903587b47f518798cb8077cc06c4f5b5" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key.</source>
          <target state="translated">秘密の(対称的な)鍵。</target>
        </trans-unit>
        <trans-unit id="c237bbe6413c8ab00dab0a0e7d560d3daf37974b" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key. The purpose of this interface is to group (and provide type safety for) all secret key interfaces.</source>
          <target state="translated">秘密鍵 (対称鍵)。このインターフェイスの目的は、すべての秘密鍵インターフェイスをグループ化すること(および型安全性を提供すること)です。</target>
        </trans-unit>
        <trans-unit id="c3d2644a9159ed5f5bb5808e4cc0a44de2991792" translate="yes" xml:space="preserve">
          <source>A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslClientFactory 用のセキュリティプロバイダは、JCA セキュリティプロバイダフレームワークのキーを使用して登録します。</target>
        </trans-unit>
        <trans-unit id="49483787f2aaf0382ae93042774782d1f84f67d3" translate="yes" xml:space="preserve">
          <source>A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslServerFactory のセキュリティプロバイダは、JCA セキュリティプロバイダフレームワークのキーを使用して登録します。</target>
        </trans-unit>
        <trans-unit id="e3b98fbb0484864c2f0ee936ac85470708e6b590" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">シーク可能なバイトチャネルは、読み取りと書き込みが可能な可変長のバイトシーケンスを含むエンティティ（通常はファイル）に接続されます。現在の位置を&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。チャネルはまた、現在の</target>
        </trans-unit>
        <trans-unit id="0dafd90c42f612ddec3147173ec7fc806e70baca" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; で使用するシーク可能な入力ストリームインターフェイス。</target>
        </trans-unit>
        <trans-unit id="ba782d2a1d637b5de1068ad44a37d773d8474b58" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s. Various input sources, such as &lt;code&gt;InputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O sources may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; で使用するシーク可能な入力ストリームインターフェイス。 &lt;code&gt;InputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などのさまざまな入力ソース、および将来の高速I / Oソースは、Image I / O APIで使用するために、このインターフェースの適切な実装によって「ラップ」される場合があります。</target>
        </trans-unit>
        <trans-unit id="420b8375b8044645c2b87d9f7d013503ade55328" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; で使用するシーク可能な出力ストリームインターフェイス。</target>
        </trans-unit>
        <trans-unit id="0559d0aab7f214134c5d385a37d401994991c253" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s. Various output destinations, such as &lt;code&gt;OutputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O destinations may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; で使用するシーク可能な出力ストリームインターフェイス。 &lt;code&gt;OutputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などのさまざまな出力宛先、および将来の高速I / O宛先は、Image I / O APIで使用するために、このインターフェースの適切な実装によって「ラップ」される場合があります。</target>
        </trans-unit>
        <trans-unit id="64d400f849295bb1951332f2c7b335031cd5c6d5" translate="yes" xml:space="preserve">
          <source>A selectable channel for datagram-oriented sockets.</source>
          <target state="translated">データグラム指向ソケット用の選択可能なチャネル。</target>
        </trans-unit>
        <trans-unit id="294cc4bcb77e12b57025cbb0ece7e211718e94a6" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented connecting sockets.</source>
          <target state="translated">ストリーム指向の接続ソケットのための選択可能なチャネル。</target>
        </trans-unit>
        <trans-unit id="b728ffbec5c64eeb349e6de4c123ad56b7acf105" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented listening sockets.</source>
          <target state="translated">ストリーム指向のリスニングソケット用の選択可能なチャンネル。</target>
        </trans-unit>
        <trans-unit id="9362a7bc4fca8f31f56d56d236671209b1da656c" translate="yes" xml:space="preserve">
          <source>A selectable channel is either in</source>
          <target state="translated">選択可能なチャンネルは</target>
        </trans-unit>
        <trans-unit id="636e98895c2a95d724549916a54492420384f6e4" translate="yes" xml:space="preserve">
          <source>A selectable channel's registration with a selector is represented by a &lt;a href=&quot;selectionkey&quot;&gt;&lt;code&gt;SelectionKey&lt;/code&gt;&lt;/a&gt; object. A selector maintains three sets of selection keys:</source>
          <target state="translated">セレクターを使用した選択可能なチャネルの登録は、&lt;a href=&quot;selectionkey&quot;&gt; &lt;code&gt;SelectionKey&lt;/code&gt; &lt;/a&gt;オブジェクトによって表されます。セレクターは、3セットの選択キーを保持します。</target>
        </trans-unit>
        <trans-unit id="1ba1a20d34aca94b42a82eaad99a53440fc17d0c" translate="yes" xml:space="preserve">
          <source>A selection key contains two</source>
          <target state="translated">選択キーには、次の 2 つのキーが含まれます。</target>
        </trans-unit>
        <trans-unit id="ebb61dbc6918d903ead46334d746e8f148efb98c" translate="yes" xml:space="preserve">
          <source>A selection key is created each time a channel is registered with a selector. A key remains valid until it is</source>
          <target state="translated">選択キーは、チャンネルがセレクタに登録されるたびに作成されます。キーは</target>
        </trans-unit>
        <trans-unit id="81e316e458dc6a879ab3f16d5fd137968705200d" translate="yes" xml:space="preserve">
          <source>A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">一般的な調整の選択は&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。主要な日時クラスは、&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;TemporalAdjuster&lt;/code&gt; インターフェースも実装します。アジャスターは、さまざまな長さの月やうるう年など、特別な場合の処理​​を担当します。</target>
        </trans-unit>
        <trans-unit id="529eabf472953fee9eac462096b584cb588e3f87" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;selector#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">セレクタは、このクラスの&lt;a href=&quot;selector#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成できます。このメソッドは、システムのデフォルトの&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt;を使用して新しいセレクタを作成します。セレクターは、カスタムセレクタープロバイダーの&lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して作成することもできます。セレクターは、&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドで閉じるまで開いたままです。</target>
        </trans-unit>
        <trans-unit id="b8e91fb710d83f831c9944823f9ccb9a3dcf00f6" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;selectorprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">セレクタープロバイダーは、このクラスの具象サブクラスであり、引数のないコンストラクターを持ち、以下で指定する抽象メソッドを実装します。Java仮想マシンの特定の呼び出しは、&lt;a href=&quot;selectorprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;メソッドによって返される単一のシステム全体のデフォルトプロバイダーインスタンスを維持します。そのメソッドの最初の呼び出しは、以下に指定されているデフォルトのプロバイダーを見つけます。</target>
        </trans-unit>
        <trans-unit id="f16d692c1bed5dbaa178690d4f26577abbfa32bb" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; を選択するための一連の基準を定義するセレクター。</target>
        </trans-unit>
        <trans-unit id="96dcfefce65daa4016e98d79692d6ef1eadcc6d1" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;CRL&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; を選択するための一連の基準を定義するセレクター。このインタフェースを実装するクラスは、 &lt;code&gt;CertStore&lt;/code&gt; から取得する &lt;code&gt;CRL&lt;/code&gt; を指定するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="5efa2476c58d33df64d3c36e52bfb9214af66291" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; を選択するための一連の基準を定義するセレクター。</target>
        </trans-unit>
        <trans-unit id="1ef721d9efbaa77ffd30a26a6c943321c341cb56" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;Certificate&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; を選択するための一連の基準を定義するセレクター。このインタフェースを実装するクラスは、 &lt;code&gt;CertStore&lt;/code&gt; から取得する必要のある &lt;code&gt;Certificate&lt;/code&gt; を指定するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="f22a4ab2da39ad855ad083364d5b62eb28dc3380" translate="yes" xml:space="preserve">
          <source>A selector's key and selected-key sets are not, in general, safe for use by multiple concurrent threads. If such a thread might modify one of these sets directly then access should be controlled by synchronizing on the set itself. The iterators returned by these sets' &lt;a href=&quot;../../util/set#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">セレクターのキーと選択されたキーのセットは、一般に、複数の並行スレッドによる使用には安全ではありません。そのようなスレッドがこれらのセットの1つを直接変更する可能性がある場合は、セット自体で同期することによってアクセスを制御する必要があります。これらのセットの&lt;a href=&quot;../../util/set#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドによって返される反復子は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5b623b9a65e5387b97a4845cffc20bddeb53b2c2" translate="yes" xml:space="preserve">
          <source>A semaphore initialized to one, and which is used such that it only has at most one permit available, can serve as a mutual exclusion lock. This is more commonly known as a &lt;em&gt;binary semaphore&lt;/em&gt;, because it only has two states: one permit available, or zero permits available. When used in this way, the binary semaphore has the property (unlike many &lt;a href=&quot;locks/lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations), that the &quot;lock&quot; can be released by a thread other than the owner (as semaphores have no notion of ownership). This can be useful in some specialized contexts, such as deadlock recovery.</source>
          <target state="translated">1に初期化されたセマフォは、使用可能な許可が1つだけになるように使用されるため、相互排他ロックとして機能できます。これは、&lt;em&gt;バイナリセマフォ&lt;/em&gt;としてより一般的に知られています。これは、2つの状態しかないためです。1つのパーミットが使用可能か、またはゼロのパーミットが使用可能です。この方法で使用すると、バイナリセマフォには、多くの&lt;a href=&quot;locks/lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装とは異なり、所有者以外のスレッドが「ロック」を解放できるという特性があります（セマフォには所有権の概念がないため）。これは、デッドロック回復などの一部の特殊なコンテキストで役立ちます。</target>
        </trans-unit>
        <trans-unit id="8a4024ca87b0e41c736b446c52d375fe63e34854" translate="yes" xml:space="preserve">
          <source>A separator that is escaped or appears between non-escaped quotes is treated as an ordinary string and not a separator.</source>
          <target state="translated">エスケープされているか、エスケープされていない引用符の間にあるセパレータは、通常の文字列として扱われ、セパレータではありません。</target>
        </trans-unit>
        <trans-unit id="01b124416a0a30f20b408c560dfe65358649bfaf" translate="yes" xml:space="preserve">
          <source>A separator, quote or escape is escaped if preceded immediately (on the left) by the escape.</source>
          <target state="translated">セパレータ、引用符、エスケープは、すぐ前に(左側に)エスケープがある場合にエスケープされます。</target>
        </trans-unit>
        <trans-unit id="5c095fc1ea1ab99d90aeb7439bb40d6d0578ec8d" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">シーケンシャル・アグリゲート操作とパラレル・アグリゲート操作をサポートする要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="74d541b5fb0fc977f7e96dec6427dfabfa44bb9f" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">順次および並列集約操作をサポートする一連の要素。次の例は、&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;を使用した集計操作を示しています。</target>
        </trans-unit>
        <trans-unit id="358da7cc7e138c726dddf5d6bf791a177ee226e4" translate="yes" xml:space="preserve">
          <source>A sequence of escaped octets is</source>
          <target state="translated">エスケープされたオクテットのシーケンスは</target>
        </trans-unit>
        <trans-unit id="3118269324fb4d8a0f521763d19e0c888308cb53" translate="yes" xml:space="preserve">
          <source>A sequence of paged-results can be abandoned by setting the pageSize to zero and setting the cookie to the last cookie received from the server.</source>
          <target state="translated">ページ化された結果のシーケンスは、ページサイズをゼロに設定し、クッキーをサーバから受け取った最後のクッキーに設定することで放棄することができます。</target>
        </trans-unit>
        <trans-unit id="dab07824e99cfb5e02e843ed82bbe3b25e18cd89" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">逐次および並列集約演算をサポートする原始的な二重値要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="dd38ae6cbee6c6c6706f6ce740cdd0b1045aa7f7" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;double&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列の集約操作をサポートするプリミティブな2値要素のシーケンス。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;double&lt;/code&gt; 原始的な特殊化です。</target>
        </trans-unit>
        <trans-unit id="b0bc9099810c1c57955f5aca4c4eb7d70a76615d" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">シーケンシャルおよびパラレルアグリゲート演算をサポートするプリミティブなint-value要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="8fee8c2b13ede73fce1cfe060f8001dafa9861cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;int&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列集約操作をサポートする一連のプリミティブint値要素。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;int&lt;/code&gt; プリミティブな特殊化です。</target>
        </trans-unit>
        <trans-unit id="6de23a8a2d8e62c995b4c353905c0b49141b77cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">逐次および並列集約演算をサポートする原始的な長値要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="cc36d24e0030ab7c2344629316bea9f22cd8fbb5" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;long&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列の集約操作をサポートするプリミティブなlong-valued要素のシーケンス。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;long&lt;/code&gt; プリミティブな特殊化です。</target>
        </trans-unit>
        <trans-unit id="2cf40afdb4242b7b337744c3ab9d56c266f5d8f2" translate="yes" xml:space="preserve">
          <source>A sequence of the form &quot;</source>
          <target state="translated">形式のシーケンス &quot;</target>
        </trans-unit>
        <trans-unit id="a5efd38607b007cf2b67f23ed31a731c1e8122d7" translate="yes" xml:space="preserve">
          <source>A sequence of zero or more string &lt;em&gt;names&lt;/em&gt;.</source>
          <target state="translated">0個以上の文字列&lt;em&gt;名の&lt;/em&gt;シーケンス。</target>
        </trans-unit>
        <trans-unit id="620944fe500ad55b62f932ecb24120b5a1cd6b81" translate="yes" xml:space="preserve">
          <source>A sequencer's loop end point defaults to -1, meaning the end of the sequence.</source>
          <target state="translated">シーケンサのループの終了点のデフォルトは -1 で、これはシーケンスの終了を意味します。</target>
        </trans-unit>
        <trans-unit id="1eb517c15a6e4b5522f6f202e23a3b2d5ae47666" translate="yes" xml:space="preserve">
          <source>A sequencer's loop start point defaults to start of the sequence.</source>
          <target state="translated">シーケンサのループ開始点のデフォルトはシーケンスの開始点です。</target>
        </trans-unit>
        <trans-unit id="5382e3c4e988e005dbe0a0c61116b3b66567fc0b" translate="yes" xml:space="preserve">
          <source>A sequential implementation of a reduction using a collector would create a single result container using the supplier function, and invoke the accumulator function once for each input element. A parallel implementation would partition the input, create a result container for each partition, accumulate the contents of each partition into a subresult for that partition, and then use the combiner function to merge the subresults into a combined result.</source>
          <target state="translated">コレクターを使用したリダクションの逐次実装では、サプライヤ関数を使用して1つの結果コンテナを作成し、各入力要素に対してアキュムレータ関数を1回呼び出します。並列実装では、入力を分割し、各分割ごとに結果コンテナを作成し、各分割の内容をその分割のサブ結果に蓄積し、コンバイナ関数を使用してサブ結果を結合した結果にマージします。</target>
        </trans-unit>
        <trans-unit id="c4cb95a3c7de9058ef04032fddc913b35b387ce7" translate="yes" xml:space="preserve">
          <source>A server socket associated with this channel</source>
          <target state="translated">このチャネルに関連付けられたサーバソケット</target>
        </trans-unit>
        <trans-unit id="19b8fedb1f2e7f8b6be482b6484af0b393aefcd5" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">サーバーソケットは、&lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt;メソッドを介してチャネル自体が作成された場合にのみチャネルを持ちます。</target>
        </trans-unit>
        <trans-unit id="217ca6ed6eb7e56975f986b6bacb1cc86c4191fb" translate="yes" xml:space="preserve">
          <source>A server such an LDAP server gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslServer&lt;/code&gt; instance generates challenges according to the SASL mechanism implemented by the &lt;code&gt;SaslServer&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL server's authentication exchange.</source>
          <target state="translated">LDAPサーバーなどのサーバーは、特定のSASLメカニズムによって定義された認証を実行するために、このクラスのインスタンスを取得します。上のメソッドを呼び出し &lt;code&gt;SaslServer&lt;/code&gt; インスタンスすることにより実現さSASL機構に従ってチャレンジを生成し &lt;code&gt;SaslServer&lt;/code&gt; 。認証が進むにつれて、インスタンスはSASLサーバーの認証交換の状態をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="249a63a83f63482c4009b60fb838c05f9e627d36" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;serversocketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;serversocketchannel#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">サーバーソケットチャネルは、このクラスの&lt;a href=&quot;serversocketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。任意の既存の&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; の&lt;/a&gt;チャネルを作成することはできません。新しく作成されたサーバーソケットチャネルは開いていますが、まだバインドされていません。バインドされていないサーバーソケットチャネルの&lt;a href=&quot;serversocketchannel#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドを呼び出そうとすると、&lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;がスローされます。このクラスで定義された&lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことにより、サーバーソケットチャネルをバインドできます。</target>
        </trans-unit>
        <trans-unit id="ea781e133d496aaae66b4384fc8cf8471b5ed3e7" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked. Subclasses may override this method in order to implement their own behaviors.</source>
          <target state="translated">ネスティングBeanContextによって提供されたサービスは,取り消されました。サブクラスは、独自の振る舞いを実装するためにこのメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="650fe805b03811763c088b57de06f81516067f20" translate="yes" xml:space="preserve">
          <source>A service provider provides a subclass of &lt;code&gt;ReferralException&lt;/code&gt; by providing implementations for &lt;code&gt;getReferralInfo()&lt;/code&gt; and &lt;code&gt;getReferralContext()&lt;/code&gt; (and appropriate constructors and/or corresponding &quot;set&quot; methods).</source>
          <target state="translated">サービスプロバイダーは、 &lt;code&gt;getReferralInfo()&lt;/code&gt; および &lt;code&gt;getReferralContext()&lt;/code&gt; （および適切なコンストラクターや対応する「set」メソッド）の実装を提供することにより、 &lt;code&gt;ReferralException&lt;/code&gt; のサブクラスを提供します。</target>
        </trans-unit>
        <trans-unit id="d4bc2d0b97b8b122ac6e9b670e174b403a866ed9" translate="yes" xml:space="preserve">
          <source>A service provider supports connection and context request controls in the following ways. Context request controls must be associated on a per context instance basis while connection request controls must be associated on a per connection instance basis. The service provider must look for the connection request controls in the environment property &quot;java.naming.ldap.control.connect&quot; and pass this environment property on to context instances that it creates.</source>
          <target state="translated">サービスプロバイダは、以下の方法で接続制御とコンテキスト要求制御をサポートします。コンテキスト要求コントロールはコンテキスト・インスタンスごとに関連付けられなければならず、一方、接続要求コントロールは接続インスタンスごとに関連付けられなければなりません。サービス・プロバイダは、環境プロパティ &quot;java.naming.ldap.control.connect &quot;の中にある接続要求コントロールを探し、作成するコンテキスト・インスタンスにこの環境プロパティを渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="21de0eefa91f1991f4ee8f78f789abc2d6a632c8" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks.</source>
          <target state="translated">新しい非同期タスクの生成と、完了したタスクの結果の消費を切り離すサービス。</target>
        </trans-unit>
        <trans-unit id="4fc784edd2a04b2cf1ba0e1aff303c3c41157426" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks. Producers &lt;code&gt;submit&lt;/code&gt; tasks for execution. Consumers &lt;code&gt;take&lt;/code&gt; completed tasks and process their results in the order they complete. A &lt;code&gt;CompletionService&lt;/code&gt; can for example be used to manage asynchronous I/O, in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.</source>
          <target state="translated">新しい非同期タスクの生成を、完了したタスクの結果の消費から切り離すサービス。プロデューサーはタスクを実行のために &lt;code&gt;submit&lt;/code&gt; ます。消費者 &lt;code&gt;take&lt;/code&gt; 完了したタスクを取り、完了した順に結果を処理します。A &lt;code&gt;CompletionService&lt;/code&gt; は、例えば、非同期I / Oを管理するために使用することができるAはおそらく、完全に読み取るときに、プログラムの異なる部分の際、プログラムまたはシステムの一部に提出し、次いで作用さ読み出し実行するタスク彼らが要求されたものとは異なる順序。</target>
        </trans-unit>
        <trans-unit id="7bdaf453a964a1c776e674e18188b8bca8aaecb7" translate="yes" xml:space="preserve">
          <source>A session can be retrieved based on its session id, and all session id's in a &lt;code&gt;SSLSessionContext&lt;/code&gt; can be listed.</source>
          <target state="translated">セッションはそのセッションIDに基づいて取得でき、 &lt;code&gt;SSLSessionContext&lt;/code&gt; 内のすべてのセッションIDをリストできます。</target>
        </trans-unit>
        <trans-unit id="b6646ee6a4df183df2ff9597fe94d2c392713265" translate="yes" xml:space="preserve">
          <source>A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created.</source>
          <target state="translated">ロードされた m-let テキストファイルの MLET タグごとに 1 つのエントリを含むセットです。各エントリは、作成されたMBeanのObjectInstanceか、MBeanを作成できなかった場合のthrowableオブジェクト(エラーや例外)を指定します。</target>
        </trans-unit>
        <trans-unit id="823c29ca4332f839f05f46d7bec1bff3ba2dfd93" translate="yes" xml:space="preserve">
          <source>A set containing the &lt;code&gt;ObjectInstance&lt;/code&gt; objects for the selected MBeans. If no MBean satisfies the query an empty list is returned.</source>
          <target state="translated">選択したMBeanの &lt;code&gt;ObjectInstance&lt;/code&gt; オブジェクトを含むセット。クエリを満たすMBeanがない場合は、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="18f09420b43907da1e09c08ba83a8436b485f82a" translate="yes" xml:space="preserve">
          <source>A set containing the ObjectNames for the MBeans selected. If no MBean satisfies the query, an empty list is returned.</source>
          <target state="translated">選択された MBeans の ObjectNames を含むセット。クエリを満たす MBean がない場合は、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="4e23b85f028bc038f2d1717150dfac0e8f5e8889" translate="yes" xml:space="preserve">
          <source>A set of date fields that provide access to Julian Days.</source>
          <target state="translated">ユリウスの日へのアクセスを提供する日付フィールドのセット。</target>
        </trans-unit>
        <trans-unit id="3817554a50f654a740b263526282ded9c6886b68" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">メソッドのセットは、代わりに「msg」引数の代わりに「msgSupplier」を取ります。これらのメソッドは、有効なログレベルに基づいてメッセージが実際にログに記録される場合にのみ必要なログメッセージを構築するために呼び出される&lt;a href=&quot;../function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 関数を使用するため、不要なメッセージの構築を排除できます。たとえば、開発者が診断のためにシステムのヘルスステータスをログに記録したい場合、文字列を受け入れるバージョンでは、コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="e66d63e3312e34b5660af451cc8fa239aa214c82" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this channel</source>
          <target state="translated">このチャンネルがサポートするソケットオプションのセット</target>
        </trans-unit>
        <trans-unit id="409fae66175b060955443e215504e840fd35b167" translate="yes" xml:space="preserve">
          <source>A shared superclass for the common functionality of &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; の&lt;/a&gt;共通機能の共有スーパークラス。</target>
        </trans-unit>
        <trans-unit id="9b8b7e58b2a0c688355809db08681d6a34f0257c" translate="yes" xml:space="preserve">
          <source>A short buffer is not comparable to any other type of object.</source>
          <target state="translated">ショートバッファは、他のどのタイプのオブジェクトとも比較できません。</target>
        </trans-unit>
        <trans-unit id="220cedae5cee73eb5e77033cce955a3ec7558f65" translate="yes" xml:space="preserve">
          <source>A short buffer is not equal to any other type of object.</source>
          <target state="translated">ショートバッファは、他のどのタイプのオブジェクトとも同じではありません。</target>
        </trans-unit>
        <trans-unit id="ac3d240d57cfeafb5db637c36dbd59837d8c439c" translate="yes" xml:space="preserve">
          <source>A short buffer.</source>
          <target state="translated">短いバッファです。</target>
        </trans-unit>
        <trans-unit id="0a0590d6a1827598168fafe48b6065118e07ebb4" translate="yes" xml:space="preserve">
          <source>A significant part of dealing with dates and times is the localization. This class acts as a central point for accessing the information.</source>
          <target state="translated">日付と時刻を扱う上で重要なのは、ローカリゼーションです。このクラスは、情報にアクセスするための中心的な役割を果たします。</target>
        </trans-unit>
        <trans-unit id="4ebcbcfb752d1d5a18e55afabc1c6fe6cefc14a1" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an</source>
          <target state="translated">同様の手法を使用して</target>
        </trans-unit>
        <trans-unit id="b81bc43037857ed85f56a7ae603dd69e2aeafc77" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an &lt;em&gt;open range&lt;/em&gt; (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in &lt;code&gt;m&lt;/code&gt; whose keys are between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, exclusive:</source>
          <target state="translated">同様の手法を使用して、（どちらのエンドポイントも含まない）&lt;em&gt;公開範囲&lt;/em&gt;を生成できます。次のイディオムは、キーが &lt;code&gt;low&lt;/code&gt; と &lt;code&gt;high&lt;/code&gt; の間にある &lt;code&gt;m&lt;/code&gt; のすべてのキーと値のマッピングを含むビューを取得します。</target>
        </trans-unit>
        <trans-unit id="3d57dee7a20af84e7fe2e9596414a5131168b917" translate="yes" xml:space="preserve">
          <source>A similar, but simpler, situation occurs for the Japanese calendar system. The locale &quot;jp_JP_JP&quot; has previously been used to access the calendar. However, unlike the Thai locale, &quot;ja_JP_JP&quot; is automatically converted by &lt;code&gt;Locale&lt;/code&gt; to the modern and recommended form of &quot;ja-JP-u-ca-japanese&quot;. Thus, there is no difference in behavior between this method and &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt;.</source>
          <target state="translated">日本のカレンダーシステムでも、同様の、しかしより単純な状況が発生します。ロケール「jp_JP_JP」は、以前はカレンダーへのアクセスに使用されていました。ただし、タイ語のロケールとは異なり、「ja_JP_JP」は &lt;code&gt;Locale&lt;/code&gt; によって自動的に「ja-JP-u-ca-japanese」の最新の推奨形式に変換されます。したがって、このメソッドと &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt; の動作に違いはありません。</target>
        </trans-unit>
        <trans-unit id="12a111d3d26ed80b7a5d0975eed77cb4f5b76771" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the hour field. A more complex adjuster might set the time to the last hour of the day.</source>
          <target state="translated">単純なアジャスターは、時間フィールドのようなフィールドの一つを設定するだけかもしれません。より複雑なアジャスターでは、時間をその日の最後の時間に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="23a02b1085ad689bf3c6002c5e392214239fa5f6" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month.</source>
          <target state="translated">単純なアジャスターであれば、年のようなフィールドの1つを設定するだけかもしれません。より複雑なアジャスターでは、日付を月の最終日に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="a318603867fd35924e66b179c67d0767587c5ec3" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">単純なアジャスターは、年フィールドなどのフィールドの1つを設定するだけの場合があります。より複雑な調整機能では、日付を月の最終日に設定する場合があります。一般的な調整の選択は&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。主要な日時クラスは、&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;TemporalAdjuster&lt;/code&gt; インターフェースも実装します。アジャスターは、さまざまな長さの月やうるう年など、特殊なケースの処理を担当します。</target>
        </trans-unit>
        <trans-unit id="fa3fc5f3d04680138bbeab26dcb646d5fbc7391e" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the year-month to the next month that Halley's comet will pass the Earth.</source>
          <target state="translated">単純なアジャスターは、単に年のフィールドのようなフィールドの一つを設定するだけかもしれない。より複雑な調整器では、年月をハレー彗星が地球を通過する次の月に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="9de12e02d5d783055af2cac617c1cf13b79e9aa4" translate="yes" xml:space="preserve">
          <source>A simple container class to aggregate an image, a set of thumbnail (preview) images, and an object representing metadata associated with the image.</source>
          <target state="translated">画像、サムネイル(プレビュー)画像のセット、画像に関連付けられたメタデータを表すオブジェクトを集約するためのシンプルなコンテナクラスです。</target>
        </trans-unit>
        <trans-unit id="af4d653de33053860dff4b70bc99a12fe289e16b" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion.</source>
          <target state="translated">任意の基準に一致するプロバイダーを選択するために &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; によって使用される単純なフィルターインターフェイス。</target>
        </trans-unit>
        <trans-unit id="44205ac3fc78148a74f195a9ff2af55f58512ea8" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion. Classes that implement this interface should be defined in order to make use of the &lt;code&gt;getServiceProviders&lt;/code&gt; method of &lt;code&gt;ServiceRegistry&lt;/code&gt; that takes a &lt;code&gt;Filter&lt;/code&gt;.</source>
          <target state="translated">任意の基準に一致するプロバイダーを選択するために &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; によって使用される単純なフィルターインターフェイス。 &lt;code&gt;Filter&lt;/code&gt; をとる &lt;code&gt;ServiceRegistry&lt;/code&gt; の &lt;code&gt;getServiceProviders&lt;/code&gt; メソッドを利用するには、このインターフェイスを実装するクラスを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="74fccd3ff6f46074f0af84c8344a7d990571dd3b" translate="yes" xml:space="preserve">
          <source>A simple implementation of Bindings backed by a &lt;code&gt;HashMap&lt;/code&gt; or some other specified &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; または他の指定された &lt;code&gt;Map&lt;/code&gt; によってサポートされるBindingsの単純な実装。</target>
        </trans-unit>
        <trans-unit id="044c6c729ff49ba0ec97fdf1cefbf0c1c70b1c60" translate="yes" xml:space="preserve">
          <source>A simple interface which provides a mechanism to map between a file name and a MIME type string.</source>
          <target state="translated">ファイル名と MIME タイプ文字列の間でマップするメカニズムを提供するシンプルなインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="dacb2fcc771630cbdcbfdcac18166570cba477e7" translate="yes" xml:space="preserve">
          <source>A simple service-provider loading facility.</source>
          <target state="translated">簡易的なサービス提供者のローディング施設です。</target>
        </trans-unit>
        <trans-unit id="9897440ed3077a40719adee1662c352b9509dee5" translate="yes" xml:space="preserve">
          <source>A simple text scanner which can parse primitive types and strings using regular expressions.</source>
          <target state="translated">正規表現を使ってプリミティブ型や文字列を解析できるシンプルなテキストスキャナ。</target>
        </trans-unit>
        <trans-unit id="b4993ee4561a785ce855a86900bd6ffb63898f32" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="74d2b0cb45a8d6b85ec8418c78bfe850754e1244" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。Visitメソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt;を呼び出して、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="3a340b7d1f1ecb42981a58df07ae2fdd15745b96" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="4b125219b094017b502ca392996fc23070ae3133" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。訪問メソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出して、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="ce1c8160aa409675b3e7293b8a25c0f8f37af5fa" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="370ae61f068e3d0befb7ba82b76e41070cc91849" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。訪問メソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出して、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="adf4c935c49a215c1522962a622225250ad8f65f" translate="yes" xml:space="preserve">
          <source>A simple visitor of files with default behavior to visit all files and to re-throw I/O errors.</source>
          <target state="translated">すべてのファイルを訪問し、I/Oエラーを再スローするデフォルトの動作を持つ、シンプルなファイルの訪問者です。</target>
        </trans-unit>
        <trans-unit id="fb2d80e9354651a601d59bd203681f6387e39885" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="dfd6c813f680eb0eb2b148ef59c82b8c4e4359c4" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構成では、代わりに &lt;code&gt;visitUnknown&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e3373e9dccc63693aae9881930a32a20b82e9811" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="5a9e01744c954dab0e145fbb2c53749ff339a922" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="b099cc857f551b44dc082f6a80406e3138ee957d" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="e7d6a229b08e1e44605fe070804b3ddce33409b5" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="bd6b288f070274c1f886b7e33f653c4e09d1dc67" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="14f78ab027f770fa626cdd8b7cc1dd584ae81dc9" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構成では、代わりに &lt;code&gt;visitUnknown&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="12025ce7a60019adcb9c20a5090ddc6e37570ea8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="849853eaa5c273ebf168ac87e3f6a56a25686a1c" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="25f34fa41739f34143ba43abe69ed1d5a4dc9fcb" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_8&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="37f2833a23b911df059b18a6bb18e4f13e04daa4" translate="yes" xml:space="preserve">
          <source>A single switch point may be used to control any number of method handles. (Indirectly, therefore, it can control any number of call sites.) This is done by using the single switch point as a factory for combining any number of guarded method handle pairs into guarded delegators.</source>
          <target state="translated">1つのスイッチポイントを使用して、任意の数のメソッドハンドルを制御することができます(したがって、間接的に、それは任意の数のコールサイトを制御することができます)。これは、単一のスイッチポイントを、任意の数のガードされたメソッドハンドルのペアをガードされたデリゲータに結合するためのファクトリーとして使用することによって行われる。</target>
        </trans-unit>
        <trans-unit id="d7c2fd6b3301b8d285d0ce1608b58da62b7dae7d" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性のある、 &lt;code&gt;package&lt;/code&gt; アクセス（デフォルトアクセス）を表す単一ビットマスク。値は &lt;code&gt;0x08&lt;/code&gt; で、特定の&lt;a href=&quot;../reflect/modifier&quot;&gt;修飾ビットに&lt;/a&gt;意味的に対応していません。</target>
        </trans-unit>
        <trans-unit id="aab2c145c9e99fcde58657d8b8993565ce707011" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性がある &lt;code&gt;private&lt;/code&gt; アクセスを表す単一ビットマスク。値 &lt;code&gt;0x02&lt;/code&gt; は、たまたま &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;修飾ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="75861a8addccd707397aa313351031da0f3eeb06" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; アクセスを表す単一ビットマスク。これは、&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性があります。値 &lt;code&gt;0x04&lt;/code&gt; は、 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;修飾ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="33a784f92c517ec5da50f4e97141428b4852cfe0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; アクセスを表す単一ビットマスク。これは、&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性があります。値 &lt;code&gt;0x01&lt;/code&gt; は、たまたま &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;修飾ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="ed214545845c4b26dd59fcb0bad818698aade4f2" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageInputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;.</source>
          <target state="translated">最初は &lt;code&gt;ImageInputStream.class&lt;/code&gt; を含み、 &lt;code&gt;getInputTypes&lt;/code&gt; から返される単一要素の配列。</target>
        </trans-unit>
        <trans-unit id="f0e479a9e928d59e951c78a85ad7039004c2e049" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;.</source>
          <target state="translated">最初に &lt;code&gt;ImageOutputStream.class&lt;/code&gt; を含み、 &lt;code&gt;getOutputTypes&lt;/code&gt; から返される単一要素の配列。</target>
        </trans-unit>
        <trans-unit id="aefe0d2395a63e490922c441c227d14b1061d43a" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">単一メソッドインターフェイスは、一意に名前が付けられたメソッドを宣言するインターフェイスです。単一メソッドインターフェースの一意に名前が付けられたメソッドを決定する場合、パブリック &lt;code&gt;Object&lt;/code&gt; メソッド（ &lt;code&gt;toString&lt;/code&gt; 、 &lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; ）は無視されます。たとえば、&lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;Object.equals&lt;/code&gt; メソッドを再宣言しても、単一メソッドのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="f9756371d6371d1875d5c52f3bf36b1d5637b9b5" translate="yes" xml:space="preserve">
          <source>A size .</source>
          <target state="translated">Aサイズ。</target>
        </trans-unit>
        <trans-unit id="5e4099f3970266bb2672ded3b9721ca4be35f299" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="fe7dbc5fcfbb5518a6b2081de359d0acd5e86643" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="a2017f2e2ac05aab0d403430f762896858b4c682" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="9307a4ceb72047be9ae3a464dbe44f28b90d69c5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つプログラム要素のスケルトンビジター。</target>
        </trans-unit>
        <trans-unit id="3278982ce3a0d89dd554e31ba1ce085478d3a6b9" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つプログラム要素のスケルトンビジター。</target>
        </trans-unit>
        <trans-unit id="1b223a614c421d2601113b086894e657c8559978" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つプログラム要素の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="c99f60fd511f2c8ae0a0571a970bd393c978acef" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つタイプの骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="c456378d5401b0103f60f735b417ee2a8997eea5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つタイプの骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="8f9c75545b9c54baa317d6cf1ef93251b7ba46aa" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="6f523c1601fe9d3ec05661481a921ebcba24760b" translate="yes" xml:space="preserve">
          <source>A slave synchronization mode indicating that no timing information should be sent to the receiver. This is not a legal master sync mode.</source>
          <target state="translated">受信機にタイミング情報を送信しないことを示すスレーブ同期モード。これは正規のマスター同期モードではありません。</target>
        </trans-unit>
        <trans-unit id="235837953a95d0ee1e23c7d3e5323efc8b89ad80" translate="yes" xml:space="preserve">
          <source>A small number of Java methods have a special property called caller sensitivity. A &lt;em&gt;caller-sensitive&lt;/em&gt; method can behave differently depending on the identity of its immediate caller.</source>
          <target state="translated">少数のJavaメソッドには、呼び出し元の感度と呼ばれる特別なプロパティがあります。&lt;em&gt;呼び出し側に敏感な&lt;/em&gt;方法は、その直前の呼び出し元のIDに応じて異なる動作をすることができます。</target>
        </trans-unit>
        <trans-unit id="26b48e63383c94641c1601c2f66ccc5bbf578039" translate="yes" xml:space="preserve">
          <source>A small toolkit of classes that support lock-free thread-safe programming on single variables.</source>
          <target state="translated">単一変数でのロックフリーなスレッドセーフプログラミングをサポートするクラスの小さなツールキットです。</target>
        </trans-unit>
        <trans-unit id="9dcf5287dfade3f453189fae045005b450891939" translate="yes" xml:space="preserve">
          <source>A small toolkit of classes that support lock-free thread-safe programming on single variables. In essence, the classes in this package extend the notion of &lt;code&gt;volatile&lt;/code&gt; values, fields, and array elements to those that also provide an atomic conditional update operation of the form:</source>
          <target state="translated">単一の変数でロックフリーのスレッドセーフプログラミングをサポートするクラスの小さなツールキット。本質的に、このパッケージのクラスは、 &lt;code&gt;volatile&lt;/code&gt; 値、フィールド、および配列要素の概念を、次の形式のアトミックな条件付き更新操作も提供するものに拡張します。</target>
        </trans-unit>
        <trans-unit id="985b5dcff0e29cb7fcd379bc33e5fde1679bfb6b" translate="yes" xml:space="preserve">
          <source>A socket associated with this channel</source>
          <target state="translated">このチャネルに関連付けられたソケット</target>
        </trans-unit>
        <trans-unit id="99703bb4ed8af8b61476a9c6f9e0fd0d00572c0c" translate="yes" xml:space="preserve">
          <source>A socket channel is created by invoking one of the &lt;a href=&quot;socketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing socket. A newly-created socket channel is open but not yet connected. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown. A socket channel can be connected by invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a socket channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;socketchannel#isConnected--&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ソケットチャネルは、このクラスの&lt;a href=&quot;socketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによって作成されます。任意の既存のソケットのチャネルを作成することはできません。新しく作成されたソケットチャネルは開いていますが、まだ接続されていません。接続されていないチャネルでI / O操作を呼び出そうとすると、&lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt;がスローされます。ソケットチャネルは、その&lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって接続できます。接続されると、ソケットチャネルは閉じられるまで接続されたままになります。ソケットチャネルが接続されているかどうかは、その&lt;a href=&quot;socketchannel#isConnected--&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="8a5309f5dfedcbc87faa41850548a960fac45243" translate="yes" xml:space="preserve">
          <source>A socket channel may be created and the process of establishing the link to the remote socket may be initiated via the &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method for later completion by the &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method. Whether or not a connection operation is in progress may be determined by invoking the &lt;a href=&quot;socketchannel#isConnectionPending--&quot;&gt;&lt;code&gt;isConnectionPending&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ソケットチャネルを作成し、リモートソケットへのリンクを確立するプロセスを、&lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを介して開始し、後で&lt;a href=&quot;socketchannel#finishConnect--&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt;メソッドで完了することができます。接続操作が進行中かどうかは、&lt;a href=&quot;socketchannel#isConnectionPending--&quot;&gt; &lt;code&gt;isConnectionPending&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="a393c47a8f9a22158a545116e82751665622c8aa" translate="yes" xml:space="preserve">
          <source>A socket option associated with a socket.</source>
          <target state="translated">ソケットに関連付けられたソケットオプション。</target>
        </trans-unit>
        <trans-unit id="a13675b56733c412c2034f1ffc2b8b7c360d4545" translate="yes" xml:space="preserve">
          <source>A socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/socketchannel#open--&quot;&gt;&lt;code&gt;SocketChannel.open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../nio/channels/serversocketchannel#accept--&quot;&gt;&lt;code&gt;ServerSocketChannel.accept&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">ソケット自体に&lt;a href=&quot;../nio/channels/socketchannel#open--&quot;&gt; &lt;code&gt;SocketChannel.open&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../nio/channels/serversocketchannel#accept--&quot;&gt; &lt;code&gt;ServerSocketChannel.accept&lt;/code&gt; &lt;/a&gt;メソッドを介してチャネル自体が作成された場合に限り、ソケットはチャネルを持ちます。</target>
        </trans-unit>
        <trans-unit id="db9b7f9419f57856a156605079d80126ad125b93" translate="yes" xml:space="preserve">
          <source>A socket's client authentication setting is one of the following:</source>
          <target state="translated">ソケットのクライアント認証設定は以下のいずれかである。</target>
        </trans-unit>
        <trans-unit id="c13e40d7ca0d3fa87f01536ebe19e0b616da73dc" translate="yes" xml:space="preserve">
          <source>A sort key and its associated sort parameters.</source>
          <target state="translated">ソートキーとそれに関連するソートパラメータ。</target>
        </trans-unit>
        <trans-unit id="48e11c9e35a542756e81bed3454c445f9326a2fe" translate="yes" xml:space="preserve">
          <source>A sort key and its associated sort parameters. This class implements a sort key which is used by the LDAPv3 Control for server-side sorting of search results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;.</source>
          <target state="translated">ソートキーとそれに関連するソートパラメーター。このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891で&lt;/a&gt;定義されているサーバー側の検索結果の並べ替えのためにLDAPv3コントロールによって使用される並べ替えキーを実装します。</target>
        </trans-unit>
        <trans-unit id="6b62a9d075ce030a412d1107aeb16696cb74e792" translate="yes" xml:space="preserve">
          <source>A sorted association of option key strings to option values.</source>
          <target state="translated">オプシ ョ ンのキー文字列をオプシ ョ ン値に ソ ー ト さ れたア ソ シエーシ ョ ン。</target>
        </trans-unit>
        <trans-unit id="7073b3a5b7697daf9a650c291579d5d189e62349" translate="yes" xml:space="preserve">
          <source>A sorted association of property key strings to property values.</source>
          <target state="translated">プロパティのキー文字列とプロパティ値のソートされた関連付け。</target>
        </trans-unit>
        <trans-unit id="cbf82458abb32b6ed8e7db9444e599b22a05c148" translate="yes" xml:space="preserve">
          <source>A source data line can be obtained from a mixer by invoking the &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">ソースデータラインは、適切な &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトを使用して &lt;code&gt;Mixer&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことにより、ミキサーから取得できます。</target>
        </trans-unit>
        <trans-unit id="575b867ae75ecc7b05fd19afeffea2d89677bbbd" translate="yes" xml:space="preserve">
          <source>A source data line is a data line to which data may be written.</source>
          <target state="translated">ソースデータラインとは、データが書き込まれる可能性のあるデータラインのことです。</target>
        </trans-unit>
        <trans-unit id="5e112703567fcba8cae6b94642cff0db67da8d8c" translate="yes" xml:space="preserve">
          <source>A source data line is a data line to which data may be written. It acts as a source to its mixer. An application writes audio bytes to a source data line, which handles the buffering of the bytes and delivers them to the mixer. The mixer may mix the samples with those from other sources and then deliver the mix to a target such as an output port (which may represent an audio output device on a sound card).</source>
          <target state="translated">ソースデータラインは、データが書き込まれるデータラインです。ミキサーへのソースとして機能します。アプリケーションはオーディオバイトをソースデータラインに書き込み、ミキサーはバイトのバッファリングを処理してミキサーに配信します。ミキサーは、他のソースからのサンプルとミックスして、出力ポート(サウンドカードのオーディオ出力デバイスを表す場合もあります)などのターゲットにミックスを配信することができます。</target>
        </trans-unit>
        <trans-unit id="d54e774e9f0e630725603e8821ce3919e0687286" translate="yes" xml:space="preserve">
          <source>A space</source>
          <target state="translated">スペース</target>
        </trans-unit>
        <trans-unit id="ab4f5f83b17bc6fc8d4185144ac6f76006a6fb22" translate="yes" xml:space="preserve">
          <source>A space or a tab: &lt;code&gt;[ \t]&lt;/code&gt;</source>
          <target state="translated">スペースまたはタブ： &lt;code&gt;[ \t]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f66c7cc9d6d602b85e47a0893212f830415160c" translate="yes" xml:space="preserve">
          <source>A space or a tab: &lt;code&gt;[\p{IsWhite_Space}&amp;amp;&amp;amp;[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]&lt;/code&gt;</source>
          <target state="translated">スペースまたはタブ： &lt;code&gt;[\p{IsWhite_Space}&amp;amp;&amp;amp;[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00db6ce2c8b2b78da46fe93e5c2cd1a31ae2887f" translate="yes" xml:space="preserve">
          <source>A special &lt;a href=&quot;linkedhashmap#LinkedHashMap-int-float-boolean-&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; is provided to create a linked hash map whose order of iteration is the order in which its entries were last accessed, from least-recently accessed to most-recently (</source>
          <target state="translated">リンクのハッシュマップを作成するために特別な&lt;a href=&quot;linkedhashmap#LinkedHashMap-int-float-boolean-&quot;&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;/a&gt;が提供されます。その反復順序は、そのエントリーが最後にアクセスされた順序であり、最近アクセスされたものから最近アクセスされたものまで（</target>
        </trans-unit>
        <trans-unit id="062c9646342de2d0d23168970b64bed6ffdbbc73" translate="yes" xml:space="preserve">
          <source>A special event to indicate that events may have been lost or discarded.</source>
          <target state="translated">イベントが無くなったり捨てられたりしている可能性があることを示す特別なイベント。</target>
        </trans-unit>
        <trans-unit id="64ac2a626257a602e225ffa64bccb317b0cb67c5" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; implementation for use with enum type keys.</source>
          <target state="translated">列挙型キーで使用するための特殊な&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="ef7144d5d12fa85ba778d98c73438a61a7d801da" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; implementation for use with enum type keys. All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created. Enum maps are represented internally as arrays. This representation is extremely compact and efficient.</source>
          <target state="translated">列挙型キーで使用するための特殊な&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;実装。enumマップのすべてのキーは、マップの作成時に明示的または暗黙的に指定された単一のenumタイプから取得する必要があります。列挙マップは、内部的に配列として表されます。この表現は非常にコンパクトで効率的です。</target>
        </trans-unit>
        <trans-unit id="c2ba29a85e83ff942b507d1315a7c4f9965a585a" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; implementation for use with enum types.</source>
          <target state="translated">列挙型で使用するための特殊な&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="038445caa048ac83106a572bbcb7020c71636520" translate="yes" xml:space="preserve">
          <source>A specialized &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; implementation for use with enum types. All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created. Enum sets are represented internally as bit vectors. This representation is extremely compact and efficient. The space and time performance of this class should be good enough to allow its use as a high-quality, typesafe alternative to traditional &lt;code&gt;int&lt;/code&gt;-based &quot;bit flags.&quot; Even bulk operations (such as &lt;code&gt;containsAll&lt;/code&gt; and &lt;code&gt;retainAll&lt;/code&gt;) should run very quickly if their argument is also an enum set.</source>
          <target state="translated">列挙型で使用するための特殊な&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;実装。enumセット内のすべての要素は、セットの作成時に明示的または暗黙的に指定された単一のenumタイプから取得する必要があります。列挙セットは、ビットベクトルとして内部的に表現されます。この表現は非常にコンパクトで効率的です。このクラスの空間と時間のパフォーマンスは、従来の &lt;code&gt;int&lt;/code&gt; ベースの「ビットフラグ」に代わる高品質でタイプセーフな代替として使用できるほど十分に優れている必要があります。引数も列挙型セットである場合、一括操作（ &lt;code&gt;containsAll&lt;/code&gt; や &lt;code&gt;retainAll&lt;/code&gt; など）でも非常に高速に実行されます。</target>
        </trans-unit>
        <trans-unit id="79146575912fbe531b0ffef6318e2f3982b1c17f" translate="yes" xml:space="preserve">
          <source>A specification of &lt;code&gt;CertStore&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; パラメータの仕様。</target>
        </trans-unit>
        <trans-unit id="1539715c569c2cf17e264c41021904dedacc9176" translate="yes" xml:space="preserve">
          <source>A specification of certification path algorithm parameters.</source>
          <target state="translated">認証パスのアルゴリズムパラメータの指定。</target>
        </trans-unit>
        <trans-unit id="5ba2c65fd6a0942e64287df2ad5e42f8e9606ce7" translate="yes" xml:space="preserve">
          <source>A specification of certification path algorithm parameters. The purpose of this interface is to group (and provide type safety for) all &lt;code&gt;CertPath&lt;/code&gt; parameter specifications. All &lt;code&gt;CertPath&lt;/code&gt; parameter specifications must implement this interface.</source>
          <target state="translated">証明書パスアルゴリズムパラメータの仕様。このインターフェイスの目的は、すべての &lt;code&gt;CertPath&lt;/code&gt; パラメータ仕様をグループ化（およびタイプセーフを提供）することです。すべての &lt;code&gt;CertPath&lt;/code&gt; パラメータ仕様は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="d2e18dfc7c9f562a948a0bd4b8070f27f2e7bf18" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path builder algorithm.</source>
          <target state="translated">認証パスビルダーアルゴリズムの結果の指定。</target>
        </trans-unit>
        <trans-unit id="d67467cde8bad01d11eed78a1f707890cabef0cc" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path builder algorithm. All results returned by the &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathBuilder.build&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">証明書パスビルダーアルゴリズムの結果の仕様。&lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathBuilder.build&lt;/code&gt; &lt;/a&gt;メソッドによって返されるすべての結果は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="a99aeb8cebebd5855a4df32490e58ae4a7cac639" translate="yes" xml:space="preserve">
          <source>A specification of the result of a certification path validator algorithm.</source>
          <target state="translated">認証パスバリデータアルゴリズムの結果の指定。</target>
        </trans-unit>
        <trans-unit id="57d5bba359580227b394d681c7f3d697048aee2b" translate="yes" xml:space="preserve">
          <source>A spliterator for an array</source>
          <target state="translated">配列のスプリッタ</target>
        </trans-unit>
        <trans-unit id="ad774ccadd09164c271dd5a01dced776c2649d24" translate="yes" xml:space="preserve">
          <source>A spliterator from an iterator</source>
          <target state="translated">イテレータからのスプリッタ</target>
        </trans-unit>
        <trans-unit id="3818a97468bbc85c3377256fd92e4b8cebee0798" translate="yes" xml:space="preserve">
          <source>A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes.</source>
          <target state="translated">別のCompletionStageが完了したときにアクションを実行したり、値を計算したりする非同期計算の可能性のあるステージ。</target>
        </trans-unit>
        <trans-unit id="b8eb898b5e05c6a74b95e105a6e3af6bf9b2cb17" translate="yes" xml:space="preserve">
          <source>A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes. A stage completes upon termination of its computation, but this may in turn trigger other dependent stages. The functionality defined in this interface takes only a few basic forms, which expand out to a larger set of methods to capture a range of usage styles:</source>
          <target state="translated">別のCompletionStageが完了したときにアクションを実行したり、値を計算したりする非同期計算の可能性のあるステージ。ステージは計算の終了時に完了しますが、これにより他の従属ステージが起動されることもあります。このインターフェイスで定義されている機能は、いくつかの基本的な形をとっているに過ぎませんが、これらの機能は、より多くのメソッドセットに拡張され、さまざまな使用スタイルに対応できるようになっています。</target>
        </trans-unit>
        <trans-unit id="82833bfc45899e852833688a569a1692f724784e" translate="yes" xml:space="preserve">
          <source>A standalone carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;),</source>
          <target state="translated">スタンドアロンの復帰文字（ &lt;code&gt;'\r'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="2b2d87a7913339ea370b88636f02f6e46ef2eaba" translate="yes" xml:space="preserve">
          <source>A standard canonical string form of the &lt;code&gt;BigDecimal&lt;/code&gt; is created as though by the following steps: first, the absolute value of the unscaled value of the &lt;code&gt;BigDecimal&lt;/code&gt; is converted to a string in base ten using the characters &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt; with no leading zeros (except if its value is zero, in which case a single &lt;code&gt;'0'&lt;/code&gt; character is used).</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; の標準的な正規の文字列形式は、次の手順のように作成されます。最初に、 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールなしの値の絶対値が、先頭に &lt;code&gt;'0'&lt;/code&gt; から &lt;code&gt;'9'&lt;/code&gt; までの文字を使用して10を底とする文字列に変換されます。ゼロ（その値がゼロの場合を除く。この場合、単一の &lt;code&gt;'0'&lt;/code&gt; 文字が使用されます）。</target>
        </trans-unit>
        <trans-unit id="b1ebe163c834134e8afaae0bd577bb6a7a2dfee8" translate="yes" xml:space="preserve">
          <source>A standard set of date periods units.</source>
          <target state="translated">日付期間の単位の標準的なセット。</target>
        </trans-unit>
        <trans-unit id="bc4a4cc1174f46e9b3b9cf5f3e4b7174225cb839" translate="yes" xml:space="preserve">
          <source>A standard set of fields.</source>
          <target state="translated">フィールドの標準セット。</target>
        </trans-unit>
        <trans-unit id="657a0a616df370741617e71498ebbdfb9e594862" translate="yes" xml:space="preserve">
          <source>A standard week is seven days long, but cultures have different definitions for some other aspects of a week. This class represents the definition of the week, for the purpose of providing &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">標準的な週は7日間ですが、文化によっては、週の他のいくつかの側面について異なる定義があります。このクラスは、&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;インスタンスを提供するための週の定義を表します。</target>
        </trans-unit>
        <trans-unit id="e877c544e0c188e53596b585d28b1461217921c6" translate="yes" xml:space="preserve">
          <source>A state factory must implement the &lt;code&gt;StateFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters.</source>
          <target state="translated">状態ファクトリは &lt;code&gt;StateFactory&lt;/code&gt; インターフェースを実装する必要があります。さらに、ファクトリー・クラスはパブリックでなければならず、パラメーターを受け入れないパブリック・コンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="8c52b8be0c80eab2f5613d70032fef63aa6851d2" translate="yes" xml:space="preserve">
          <source>A state object for collecting statistics such as count, min, max, sum, and average.</source>
          <target state="translated">count,min,max,sum,averageなどの統計情報を収集するためのステートオブジェクト。</target>
        </trans-unit>
        <trans-unit id="fc00732cd8cb972f0d1036f29ff4ad75551e3303" translate="yes" xml:space="preserve">
          <source>A static &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; is available and appropriate for most applications. The common pool is used by any ForkJoinTask that is not explicitly submitted to a specified pool. Using the common pool normally reduces resource usage (its threads are slowly reclaimed during periods of non-use, and reinstated upon subsequent use).</source>
          <target state="translated">静的な&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt;が利用可能で、ほとんどのアプリケーションに適しています。共通プールは、指定されたプールに明示的に送信されていないForkJoinTaskによって使用されます。通常、共通プールを使用すると、リソースの使用量が減少します（そのスレッドは、非使用期間中はゆっくりと再利用され、その後の使用時に回復されます）。</target>
        </trans-unit>
        <trans-unit id="3757a3143362118ba8f42d8adcb8b4f52629d779" translate="yes" xml:space="preserve">
          <source>A static class for creating SASL clients and servers.</source>
          <target state="translated">SASL クライアントとサーバを作成するための静的クラスです。</target>
        </trans-unit>
        <trans-unit id="4f04bdfa5d6a5f7d0a680c93baf5e42ca9d2a30a" translate="yes" xml:space="preserve">
          <source>A static initializer.</source>
          <target state="translated">静的なイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="08328104ca65eea64d0597033428298306829065" translate="yes" xml:space="preserve">
          <source>A static method to retrieve the named object. See &lt;a href=&quot;initialcontext#doLookup-javax.naming.Name-&quot;&gt;&lt;code&gt;doLookup(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">名前付きオブジェクトを取得する静的メソッド。詳細については、&lt;a href=&quot;initialcontext#doLookup-javax.naming.Name-&quot;&gt; &lt;code&gt;doLookup(Name)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cc9b79c7f389fa47df0ed4a735ca8d18b7726b34" translate="yes" xml:space="preserve">
          <source>A static method to retrieve the named object. This is a shortcut method equivalent to invoking:</source>
          <target state="translated">指定したオブジェクトを取得する静的メソッドです。呼び出しに相当するショートカットメソッドです。</target>
        </trans-unit>
        <trans-unit id="5004e03ec905ad655935dd211564118df7d4da4e" translate="yes" xml:space="preserve">
          <source>A static set of permissions can be bound to a ProtectionDomain when it is constructed; such permissions are granted to the domain regardless of the Policy in force. However, to support dynamic security policies, a ProtectionDomain can also be constructed such that it is dynamically mapped to a set of permissions by the current Policy whenever a permission is checked.</source>
          <target state="translated">ProtectionDomain を構築する際には、静的な権限セットを ProtectionDomain にバインドすることができます。ただし、動的なセキュリティポリシーをサポートするために、ProtectionDomain を構築して、パーミッションがチェックされるたびに、現在のポリシーによってパーミッションのセットに動的にマッピングされるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="1fba8c334b6fe0bc107c227a57d676aa3a515366" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins begins when the &lt;a href=&quot;longstream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">ストリームビルダーにはライフサイクルがあり、これは構築フェーズで始まり、その間に要素を追加できます。その後、構築フェーズに移行します。その後、要素を追加できません。ビルドフェーズは、&lt;a href=&quot;longstream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに始まり、要素がストリームビルダーに追加された要素である順序付けされたストリームを、追加された順序で作成します。</target>
        </trans-unit>
        <trans-unit id="cd544e7aad00f9aec1a856018f44d05b5aa3f804" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;doublestream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">ストリームビルダーにはライフサイクルがあり、これは構築フェーズで始まり、その間に要素を追加できます。その後、構築フェーズに移行します。その後、要素を追加できません。ビルドフェーズは、&lt;a href=&quot;doublestream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに始まります。このメソッドは、要素がストリームビルダーに追加された要素である順序付けされたストリームを、追加された順序で作成します。</target>
        </trans-unit>
        <trans-unit id="a3e4f88d7c30dc2a2c7488b721246cba9361e090" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;intstream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered stream whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">ストリームビルダーにはライフサイクルがあり、これは構築フェーズで始まり、その間に要素を追加できます。その後、構築フェーズに移行します。その後、要素を追加できません。ビルドフェーズは、&lt;a href=&quot;intstream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに始まります。このメソッドは、要素がストリームビルダーに追加された要素である順序付けされたストリームを、追加された順序で作成します。</target>
        </trans-unit>
        <trans-unit id="b64887b0ed22abd1e5a248bdb390293d0fcfd885" translate="yes" xml:space="preserve">
          <source>A stream builder has a lifecycle, which starts in a building phase, during which elements can be added, and then transitions to a built phase, after which elements may not be added. The built phase begins when the &lt;a href=&quot;stream.builder#build--&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method is called, which creates an ordered &lt;code&gt;Stream&lt;/code&gt; whose elements are the elements that were added to the stream builder, in the order they were added.</source>
          <target state="translated">ストリームビルダーにはライフサイクルがあり、これは構築フェーズで始まり、その間に要素を追加できます。その後、構築フェーズに移行します。その後、要素を追加できません。ときに構築フェーズが開始され&lt;a href=&quot;stream.builder#build--&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt;メソッドを注文作成する、と呼ばれる &lt;code&gt;Stream&lt;/code&gt; 要素がそれらが追加された順に、ストリームビルダーに追加された要素ですが。</target>
        </trans-unit>
        <trans-unit id="c8876207542721cef97b8445864587390c7ae4dd" translate="yes" xml:space="preserve">
          <source>A stream pipeline, like the &quot;widgets&quot; example above, can be viewed as a &lt;em&gt;query&lt;/em&gt; on the stream source. Unless the source was explicitly designed for concurrent modification (such as a &lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt;), unpredictable or erroneous behavior may result from modifying the stream source while it is being queried.</source>
          <target state="translated">上記の「ウィジェット」の例のようなストリームパイプラインは、ストリームソースの&lt;em&gt;クエリ&lt;/em&gt;として表示できます。ソースが並行変更用に明示的に設計されていない限り（&lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;など）、クエリ中にストリームソースを変更すると、予測できない動作や誤った動作が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f7b7a3727d647af7160aa25a5bdddb720132ae40" translate="yes" xml:space="preserve">
          <source>A stream should be operated on (invoking an intermediate or terminal stream operation) only once. This rules out, for example, &quot;forked&quot; streams, where the same source feeds two or more pipelines, or multiple traversals of the same stream. A stream implementation may throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if it detects that the stream is being reused. However, since some stream operations may return their receiver rather than a new stream object, it may not be possible to detect reuse in all cases.</source>
          <target state="translated">ストリームの操作（中間または最終ストリーム操作の呼び出し）は1回だけです。これは、たとえば、同じソースが2つ以上のパイプラインにフィードする「分岐」ストリーム、または同じストリームの複数のトラバーサルを除外します。ストリームの実装は、ストリームが再利用されていることを検出すると、&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローする場合があります。ただし、一部のストリーム操作は新しいストリームオブジェクトではなくレシーバーを返す場合があるため、すべての場合で再利用を検出できるとは限りません。</target>
        </trans-unit>
        <trans-unit id="fd4ec10f8a34881ebf4389386c45a348aba1af0a" translate="yes" xml:space="preserve">
          <source>A strict query for the &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ZoneId&lt;/code&gt; の厳密なクエリ。</target>
        </trans-unit>
        <trans-unit id="843c5f7bec6cbce2c9a32d0290756e96042834b2" translate="yes" xml:space="preserve">
          <source>A string comprising the date and time of the timestamp and its signer's certificate.</source>
          <target state="translated">タイムスタンプの日時と署名者の証明書からなる文字列。</target>
        </trans-unit>
        <trans-unit id="f0d3bb87d6c99c6d13263194799e75e8e6bc1431" translate="yes" xml:space="preserve">
          <source>A string comprising the signer's certificate and a timestamp, if present.</source>
          <target state="translated">署名者の証明書とタイムスタンプ(存在する場合)からなる文字列。</target>
        </trans-unit>
        <trans-unit id="e5fcefe1123ee605f91dabe31ecfe51398cb3674" translate="yes" xml:space="preserve">
          <source>A string containing the line read from the console, not including any line-termination characters, or &lt;code&gt;null&lt;/code&gt; if an end of stream has been reached.</source>
          <target state="translated">コンソールから読み取られた行を含む文字列。行終端文字は含まれません。ストリームの終わりに達した場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="752e7e61ddc720f22422f244f4f07222d6341ec8" translate="yes" xml:space="preserve">
          <source>A string describing the parse error</source>
          <target state="translated">パースエラーを記述する文字列</target>
        </trans-unit>
        <trans-unit id="7fa344b0c8bc360e6aa5346757388abcfc0204c7" translate="yes" xml:space="preserve">
          <source>A string describing this charset</source>
          <target state="translated">この文字セットを記述する文字列</target>
        </trans-unit>
        <trans-unit id="eb8b62295a458b0fab98cf99fb5bfeff77721a5a" translate="yes" xml:space="preserve">
          <source>A string monitor sends notifications as follows:</source>
          <target state="translated">文字列モニタは、以下のように通知を送信します。</target>
        </trans-unit>
        <trans-unit id="7eaba0804067b01222c18df1f99a0c0745906143" translate="yes" xml:space="preserve">
          <source>A string reference address is immutable: once created, it cannot be changed. Multithreaded access to a single StringRefAddr need not be synchronized.</source>
          <target state="translated">文字列参照アドレスは不変です:一度作成されたアドレスは変更できません。単一のStringRefAddrへのマルチスレッドアクセスは同期化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c6b8f4fe0882b9c7e19f321882c21b2c1abb170d" translate="yes" xml:space="preserve">
          <source>A string representation of the Locale, for debugging.</source>
          <target state="translated">デバッグ用のロケールの文字列表現。</target>
        </trans-unit>
        <trans-unit id="672efd361c2e2091027c3cedaae44846424fc4ae" translate="yes" xml:space="preserve">
          <source>A string representation of the parameter and associated information.</source>
          <target state="translated">パラメータと関連する情報の文字列表現。</target>
        </trans-unit>
        <trans-unit id="7aebee07a8675f4ad0f790ae3090062b6d6082c9" translate="yes" xml:space="preserve">
          <source>A string representation of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; の文字列表現</target>
        </trans-unit>
        <trans-unit id="5e7f796c187ec09ebd2a9cbe95a9eec689390157" translate="yes" xml:space="preserve">
          <source>A string representation of this &lt;code&gt;WeekFields&lt;/code&gt; instance.</source>
          <target state="translated">この &lt;code&gt;WeekFields&lt;/code&gt; インスタンスの文字列表現。</target>
        </trans-unit>
        <trans-unit id="ba0d08603152b0355d1b691cd24e6acc89441e0f" translate="yes" xml:space="preserve">
          <source>A string representation of this duration using ISO-8601 seconds based representation, such as &lt;code&gt;PT8H6M12.345S&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PT8H6M12.345S&lt;/code&gt; など、ISO-8601秒ベースの表現を使用した、この継続時間の文字列表現。</target>
        </trans-unit>
        <trans-unit id="2212e082e9948e828c4aa03b6e3ebfbba91de424" translate="yes" xml:space="preserve">
          <source>A string representation of this instant using ISO-8601 representation.</source>
          <target state="translated">ISO-8601表現を使用したこの瞬間の文字列表現。</target>
        </trans-unit>
        <trans-unit id="d5e4e23c1c1edee635c35763f4d13b8ea0f47465" translate="yes" xml:space="preserve">
          <source>A string representing the abbreviation for the time zone. This value will be adjusted as necessary for Daylight Saving Time. For &lt;code&gt;long&lt;/code&gt;, &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; the time zone used is the &lt;a href=&quot;timezone#getDefault--&quot;&gt;default time zone&lt;/a&gt; for this instance of the Java virtual machine. The Formatter's locale will supersede the locale of the argument (if any).</source>
          <target state="translated">タイムゾーンの略称を表す文字列。この値は、夏時間の必要に応じて調整されます。以下のために &lt;code&gt;long&lt;/code&gt; 、&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;、そして&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;使用される時間帯は、&lt;a href=&quot;timezone#getDefault--&quot;&gt;デフォルトのタイムゾーン&lt;/a&gt;のJava仮想マシンのこのインスタンスの。フォーマッタのロケールは、引数のロケール（存在する場合）に取って代わります。</target>
        </trans-unit>
        <trans-unit id="c73cc59eeb3e1a1b69c67392046c214b309ac6af" translate="yes" xml:space="preserve">
          <source>A string value is represented as a String and binary value as a byte array.</source>
          <target state="translated">文字列の値をString、バイナリの値をバイト配列で表現します。</target>
        </trans-unit>
        <trans-unit id="3d30e413258fa11bf763d272e67eb9d136835f16" translate="yes" xml:space="preserve">
          <source>A string value will be DER-encoded as an ASN.1 UTF8String and a binary value will be DER-encoded as an ASN.1 Octet String.</source>
          <target state="translated">文字列値はASN.1 UTF8StringとしてDER-encodedされ、バイナリ値はASN.1 Octet StringとしてDER-encodedされます。</target>
        </trans-unit>
        <trans-unit id="8cd70bfc7aa3e3f6f2811efe832415d0d234a86c" translate="yes" xml:space="preserve">
          <source>A string whose value is this string, with any leading and trailing white space removed, or this string if it has no leading or trailing white space.</source>
          <target state="translated">値がこの文字列で、先頭と末尾の空白が取り除かれている場合はこの文字列、先頭と末尾の空白がない場合はこの文字列。</target>
        </trans-unit>
        <trans-unit id="cc01a457dd22e8c9a9f01a9beff05c84d6fbd5c2" translate="yes" xml:space="preserve">
          <source>A structural modification is any operation that adds or deletes one or more mappings or, in the case of access-ordered linked hash maps, affects iteration order. In insertion-ordered linked hash maps, merely changing the value associated with a key that is already contained in the map is not a structural modification. &lt;strong&gt;In access-ordered linked hash maps, merely querying the map with &lt;code&gt;get&lt;/code&gt; is a structural modification. &lt;/strong&gt;)</source>
          <target state="translated">構造変更は、1つまたは複数のマッピングを追加または削除する操作です。アクセス順のリンクされたハッシュマップの場合は、反復順序に影響します。挿入順のリンクされたハッシュマップでは、マップに既に含まれているキーに関連付けられた値を変更するだけでは、構造的な変更は行われません。&lt;strong&gt;アクセス順のリンクされたハッシュマップでは、 &lt;code&gt;get&lt;/code&gt; でマップをクエリするだけで構造が変更されます。&lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="55a7222ac59b1ad4409f1c5aa286de66624edd41" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; equivalent to &lt;a href=&quot;calendar#LONG_FORMAT&quot;&gt;&lt;code&gt;LONG_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#LONG_FORMAT&quot;&gt; &lt;code&gt;LONG_FORMAT&lt;/code&gt; &lt;/a&gt;と同等の&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。</target>
        </trans-unit>
        <trans-unit id="ca2a76917b8ad075c7efdce1e137cd5e848b9a65" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; equivalent to &lt;a href=&quot;calendar#SHORT_FORMAT&quot;&gt;&lt;code&gt;SHORT_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#SHORT_FORMAT&quot;&gt; &lt;code&gt;SHORT_FORMAT&lt;/code&gt; &lt;/a&gt;と同等の&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。</target>
        </trans-unit>
        <trans-unit id="246a89bb010c408d7f72df90be5e68a2dd48a176" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a long name used for format.</source>
          <target state="translated">&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。フォーマットに使用される長い名前を示します。</target>
        </trans-unit>
        <trans-unit id="b3d4a9db43c4147ff29aba182d60143560a36285" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a long name used independently, such as a month name as calendar headers.</source>
          <target state="translated">&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。カレンダーヘッダーとしての月の名前など、個別に使用される長い名前を示します。</target>
        </trans-unit>
        <trans-unit id="8177ae2c98acd09c5e76b14475920b79de0353a1" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a narrow name independently. Narrow names are typically single character strings, such as &quot;M&quot; for Monday.</source>
          <target state="translated">狭い名前を個別に示す&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。狭い名前は通常、月曜日の「M」などの単一文字の文字列です。</target>
        </trans-unit>
        <trans-unit id="833adb7c751937e07bc93a19b4fd27fd3664eba9" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a narrow name used for format. Narrow names are typically single character strings, such as &quot;M&quot; for Monday.</source>
          <target state="translated">&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。フォーマットに使用される狭い名前を示します。狭い名前は通常、月曜日の「M」などの単一文字の文字列です。</target>
        </trans-unit>
        <trans-unit id="2b519cbcb1e5773dfe1ed727fd6af0c74264a21a" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a short name used for format.</source>
          <target state="translated">&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子で、フォーマットに使用される短い名前を示します。</target>
        </trans-unit>
        <trans-unit id="e8e223e7c1622c3fc65fdaac2d1c896c8c6d61b8" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating a short name used independently, such as a month abbreviation as calendar headers.</source>
          <target state="translated">&lt;a href=&quot;calendar#getDisplayName-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; の&lt;/a&gt;スタイル指定子。カレンダーヘッダーとしての月の省略形など、個別に使用される短い名前を示します。</target>
        </trans-unit>
        <trans-unit id="7c8504f60ec8dc38b2e14f9724c185730961deef" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayNames&lt;/code&gt;&lt;/a&gt; indicating names in all styles, such as &quot;January&quot; and &quot;Jan&quot;.</source>
          <target state="translated">&quot;January&quot;や &quot;Jan&quot;など、すべてのスタイルの名前を示す&lt;a href=&quot;calendar#getDisplayNames-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayNames&lt;/code&gt; &lt;/a&gt;のスタイル指定子。</target>
        </trans-unit>
        <trans-unit id="9baadedb971887f9b082c52a2c928d5d299d43ac" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;code&gt;getDisplayName()&lt;/code&gt; indicating a long name, such as &quot;Pacific Standard Time.&quot;</source>
          <target state="translated">「太平洋標準時」などの長い名前を示す &lt;code&gt;getDisplayName()&lt;/code&gt; のスタイル指定子。</target>
        </trans-unit>
        <trans-unit id="94cf876e129037f9ee4dc05409b19885a307def3" translate="yes" xml:space="preserve">
          <source>A style specifier for &lt;code&gt;getDisplayName()&lt;/code&gt; indicating a short name, such as &quot;PST.&quot;</source>
          <target state="translated">「PST」などの短い名前を示す &lt;code&gt;getDisplayName()&lt;/code&gt; のスタイル指定子。</target>
        </trans-unit>
        <trans-unit id="ed93ac2675a81160fe0ca5522cbca4b68d573c15" translate="yes" xml:space="preserve">
          <source>A sub-interface, &lt;a href=&quot;temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt;, extends this definition to one that also supports adjustment and manipulation on more complete temporal objects.</source>
          <target state="translated">サブインターフェース&lt;a href=&quot;temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; は&lt;/a&gt;、この定義を拡張して、より完全なTemporalオブジェクトの調整と操作もサポートするようにします。</target>
        </trans-unit>
        <trans-unit id="9d85142f371f427f95bfb3a0d5bfa8630041001e" translate="yes" xml:space="preserve">
          <source>A subclass may choose its own localization mechanism, if so desired, by overriding the supplied implementations of &lt;code&gt;getElementDescription&lt;/code&gt; and &lt;code&gt;getAttributeDescription&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、必要に応じて、提供された &lt;code&gt;getElementDescription&lt;/code&gt; および &lt;code&gt;getAttributeDescription&lt;/code&gt; の実装をオーバーライドすることにより、独自のローカリゼーションメカニズムを選択できます。</target>
        </trans-unit>
        <trans-unit id="44b8ca1ec56193bcff8a3ad4822f95f207866d43" translate="yes" xml:space="preserve">
          <source>A subclass must provide an implementation of this method.</source>
          <target state="translated">サブクラスはこのメソッドの実装を提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="97ea4734061b1170d6d1a667b4807baa5c8a6ba0" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;code&gt;ImageWriteParam&lt;/code&gt; for encoding images in the BMP format.</source>
          <target state="translated">BMP形式で画像をエンコードするための &lt;code&gt;ImageWriteParam&lt;/code&gt; のサブクラス。</target>
        </trans-unit>
        <trans-unit id="189048470b34a0d7586fa9c0d40bd96d37a05e43" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;code&gt;Statement&lt;/code&gt; used for methods that return a value.</source>
          <target state="translated">値を返すメソッドに使用される &lt;code&gt;Statement&lt;/code&gt; のサブクラス。</target>
        </trans-unit>
        <trans-unit id="8ca9601be9e9ee9ba1a926589f22d3b2f252fb63" translate="yes" xml:space="preserve">
          <source>A subclass overrides the &lt;code&gt;log&lt;/code&gt; method and scans each incoming &lt;code&gt;LogRecord&lt;/code&gt; and calls &lt;code&gt;push&lt;/code&gt; if a record matches some desired criteria.</source>
          <target state="translated">サブクラスは &lt;code&gt;log&lt;/code&gt; メソッドをオーバーライドし、各着信 &lt;code&gt;LogRecord&lt;/code&gt; をスキャンし、レコードが目的の基準に一致 &lt;code&gt;push&lt;/code&gt; 場合はpushを呼び出します。</target>
        </trans-unit>
        <trans-unit id="2b2353802e63c0bf087dc7931924752b3443fe1c" translate="yes" xml:space="preserve">
          <source>A subclass' implementation of this method may choose to throw an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; if this input stream has been closed by invoking the &lt;a href=&quot;inputstream#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドのサブクラスの実装は、この入力ストリームが&lt;a href=&quot;inputstream#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって閉じられている場合、&lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローすることを選択できます。</target>
        </trans-unit>
        <trans-unit id="37e03a71d2ec5aaddcb23b4194a7df0182ae1b9a" translate="yes" xml:space="preserve">
          <source>A subpackage of a package named p is any package whose name begins with &quot;&lt;code&gt;p.&lt;/code&gt;&quot;. For example, &lt;code&gt;javax.swing.text&lt;/code&gt; is a subpackage of &lt;code&gt;javax.swing&lt;/code&gt;, and both &lt;code&gt;java.util&lt;/code&gt; and &lt;code&gt;java.lang.reflect&lt;/code&gt; are subpackages of &lt;code&gt;java&lt;/code&gt;.</source>
          <target state="translated">pという名前のパッケージのサブパッケージは、名前が「 &lt;code&gt;p.&lt;/code&gt; 」で始まるパッケージです。例えば &lt;code&gt;javax.swing.text&lt;/code&gt; のサブパッケージで &lt;code&gt;javax.swing&lt;/code&gt; で、両方 &lt;code&gt;java.util&lt;/code&gt; と &lt;code&gt;java.lang.reflect&lt;/code&gt; では、のサブパッケージされ &lt;code&gt;java&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56fc0cfb4528635037924844e44901768d8b5856" translate="yes" xml:space="preserve">
          <source>A substring of this &lt;code&gt;String&lt;/code&gt; object is compared to a substring of the argument &lt;code&gt;other&lt;/code&gt;. The result is &lt;code&gt;true&lt;/code&gt; if these substrings represent character sequences that are the same, ignoring case if and only if &lt;code&gt;ignoreCase&lt;/code&gt; is true. The substring of this &lt;code&gt;String&lt;/code&gt; object to be compared begins at index &lt;code&gt;toffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The substring of &lt;code&gt;other&lt;/code&gt; to be compared begins at index &lt;code&gt;ooffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The result is &lt;code&gt;false&lt;/code&gt; if and only if at least one of the following is true:</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトの部分文字列は、引数 &lt;code&gt;other&lt;/code&gt; の部分文字列と比較されます。これらの部分文字列が同じ文字シーケンスを表す場合、結果は &lt;code&gt;true&lt;/code&gt; です &lt;code&gt;ignoreCase&lt;/code&gt; がtrueの場合に限り、大文字と小文字は区別されません。比較されるこの &lt;code&gt;String&lt;/code&gt; オブジェクトのサブストリングは、インデックス &lt;code&gt;toffset&lt;/code&gt; で始まり、長さ &lt;code&gt;len&lt;/code&gt; です。比較される &lt;code&gt;other&lt;/code&gt; の部分文字列は、インデックス &lt;code&gt;ooffset&lt;/code&gt; で始まり、長さ &lt;code&gt;len&lt;/code&gt; です。次の少なくとも1つがtrueの場合にのみ、結果は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ccd855001a6b80dae8efc1581759226d625bde88" translate="yes" xml:space="preserve">
          <source>A substring of this &lt;code&gt;String&lt;/code&gt; object is compared to a substring of the argument other. The result is true if these substrings represent identical character sequences. The substring of this &lt;code&gt;String&lt;/code&gt; object to be compared begins at index &lt;code&gt;toffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The substring of other to be compared begins at index &lt;code&gt;ooffset&lt;/code&gt; and has length &lt;code&gt;len&lt;/code&gt;. The result is &lt;code&gt;false&lt;/code&gt; if and only if at least one of the following is true:</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトのサブストリングは、引数otherのサブストリングと比較されます。これらの部分文字列が同一の文字シーケンスを表す場合、結果はtrueです。比較されるこの &lt;code&gt;String&lt;/code&gt; オブジェクトのサブストリングは、インデックス &lt;code&gt;toffset&lt;/code&gt; で始まり、長さ &lt;code&gt;len&lt;/code&gt; です。比較される他の部分文字列は、インデックス &lt;code&gt;ooffset&lt;/code&gt; で始まり、長さ &lt;code&gt;len&lt;/code&gt; です。次の少なくとも1つがtrueの場合にのみ、結果は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a35a15a956e685139a86641886b2392f0518d6f5" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;lock&lt;/code&gt; operation has the same memory synchronization effects as a successful &lt;em&gt;Lock&lt;/em&gt; action.</source>
          <target state="translated">成功した &lt;code&gt;lock&lt;/code&gt; 操作には、成功した&lt;em&gt;ロック&lt;/em&gt;アクションと同じメモリ同期効果があります。</target>
        </trans-unit>
        <trans-unit id="b2202e21009497dd3d948f413d3ec0caa19ceeda" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;unlock&lt;/code&gt; operation has the same memory synchronization effects as a successful &lt;em&gt;Unlock&lt;/em&gt; action.</source>
          <target state="translated">&lt;code&gt;unlock&lt;/code&gt; 操作が成功すると、&lt;em&gt;ロック解除&lt;/em&gt;アクションが成功した場合と同じメモリ同期効果があります。</target>
        </trans-unit>
        <trans-unit id="8afb5d1d346a534b00455d9ec869d8a8d769864e" translate="yes" xml:space="preserve">
          <source>A suggested &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;completion&lt;/em&gt;&lt;/a&gt; for an annotation.</source>
          <target state="translated">注釈の推奨&lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;補完&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80ec1e066416b3024bc04cd383f76984a0c0e51d" translate="yes" xml:space="preserve">
          <source>A suggested &lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;completion&lt;/em&gt;&lt;/a&gt; for an annotation. A completion is text meant to be inserted into a program as part of an annotation.</source>
          <target state="translated">注釈の推奨&lt;a href=&quot;processor#getCompletions-javax.lang.model.element.Element-javax.lang.model.element.AnnotationMirror-javax.lang.model.element.ExecutableElement-java.lang.String-&quot;&gt;&lt;em&gt;補完&lt;/em&gt;&lt;/a&gt;。補完とは、注釈の一部としてプログラムに挿入されるテキストです。</target>
        </trans-unit>
        <trans-unit id="40098ee757a5aa9e501a57f46e8b3968b39913b7" translate="yes" xml:space="preserve">
          <source>A summary string</source>
          <target state="translated">要約文字列</target>
        </trans-unit>
        <trans-unit id="16cdd39f71deb995f141a605be50b72bc105004c" translate="yes" xml:space="preserve">
          <source>A superclass containing instance variables and methods common to &lt;code&gt;ImageReaderSpi&lt;/code&gt; and &lt;code&gt;ImageWriterSpi&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReaderSpi&lt;/code&gt; と &lt;code&gt;ImageWriterSpi&lt;/code&gt; に共通のインスタンス変数とメソッドを含むスーパークラス。</target>
        </trans-unit>
        <trans-unit id="3390590119172b49577808c5ce8dd138f47dbc66" translate="yes" xml:space="preserve">
          <source>A superclass of all classes describing how streams should be decoded or encoded.</source>
          <target state="translated">ストリームがどのようにデコードまたはエンコードされるべきかを記述するすべてのクラスのスーパークラス。</target>
        </trans-unit>
        <trans-unit id="f667d3a0f0b341d171cd9d5355029a150c8905a0" translate="yes" xml:space="preserve">
          <source>A superclass of all classes describing how streams should be decoded or encoded. This class contains all the variables and methods that are shared by &lt;code&gt;ImageReadParam&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">ストリームをデコードまたはエンコードする方法を説明するすべてのクラスのスーパークラス。このクラスには、 &lt;code&gt;ImageReadParam&lt;/code&gt; および &lt;code&gt;ImageWriteParam&lt;/code&gt; によって共有されるすべての変数とメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="a3047a8eebd86803bb57b2e2c93a3b650162f472" translate="yes" xml:space="preserve">
          <source>A superinterface for functionality common to all Image I/O service provider interfaces (SPIs).</source>
          <target state="translated">すべての Image I/O サービスプロバイダインタフェース(SPI)に共通する機能のためのスーパーインタフェース。</target>
        </trans-unit>
        <trans-unit id="31be060d44d7e6c7eb88314246fb5febac46c2bc" translate="yes" xml:space="preserve">
          <source>A superinterface for functionality common to all Image I/O service provider interfaces (SPIs). For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">すべての画像I / Oサービスプロバイダーインターフェイス（SPI）に共通する機能のスーパーインターフェイス。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8741b2c4586fe28ac43f3f682be7c646d0ff2aa7" translate="yes" xml:space="preserve">
          <source>A supported print request can then be created by removing all unsupported attributes from the original attribute set, except in the case that the DocFlavor is unsupported.</source>
          <target state="translated">そして、サポートされている印刷要求は、DocFlavorがサポートされていない場合を除いて、サポートされていないすべての属性を元の属性セットから削除することによって作成することができる。</target>
        </trans-unit>
        <trans-unit id="d4ed6a2e37389c00ff184142da318763cf13f2f1" translate="yes" xml:space="preserve">
          <source>A supported-value attribute indicates the legal values for another attribute that a print service supports. A supported-values attribute class implements interface &lt;a href=&quot;../supportedvaluesattribute&quot;&gt; SupportedValuesAttribute&lt;/a&gt;. However, supported-values attributes never appear in attribute sets, so there is no restricted &lt;a href=&quot;../attributeset&quot;&gt; AttributeSet&lt;/a&gt; subinterface for them.</source>
          <target state="translated">supported-value属性は、印刷サービスがサポートする別の属性の有効な値を示します。サポートされる値の属性クラスは、インターフェイス&lt;a href=&quot;../supportedvaluesattribute&quot;&gt;SupportedValuesAttributeを&lt;/a&gt;実装します。ただし、サポートされている値の属性が属性セットに表示されることはないため、それらに制限された&lt;a href=&quot;../attributeset&quot;&gt;AttributeSet&lt;/a&gt;サブインターフェースはありません。</target>
        </trans-unit>
        <trans-unit id="caad1613e01dd8f38c36351aa12d94cac21a7db2" translate="yes" xml:space="preserve">
          <source>A symbolic reference obtained by cracking a direct method handle into its consitutent symbolic parts.</source>
          <target state="translated">直接メソッドのハンドルを、それに付随する記号部分に分解して得られる記号参照。</target>
        </trans-unit>
        <trans-unit id="cfd98e5f4341c4c30973385ed1093dba663d82c8" translate="yes" xml:space="preserve">
          <source>A symbolic reference obtained by cracking a direct method handle into its consitutent symbolic parts. To crack a direct method handle, call &lt;a href=&quot;methodhandles.lookup#revealDirect-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;Lookup.revealDirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">直接メソッドハンドルを構成するシンボリックパーツにクラックすることによって取得されるシンボリックリファレンス。直接メソッドハンドルをクラックするには、&lt;a href=&quot;methodhandles.lookup#revealDirect-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;Lookup.revealDirect&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="039fe62da332003bb7ff223a5d6024a235762c2e" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point.</source>
          <target state="translated">一組のスレッドが共通のバリアポイントに到達するまで、すべてのスレッドがお互いを待つことを可能にする同期化支援。</target>
        </trans-unit>
        <trans-unit id="b2819661ab8dc01deca63400d2ecd2758db1168a" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. The barrier is called &lt;em&gt;cyclic&lt;/em&gt; because it can be re-used after the waiting threads are released.</source>
          <target state="translated">一連のスレッドがすべてお互いが共通のバリアポイントに到達するまで待機することを可能にする同期補助。CyclicBarriersは、時々お互いに待たなければならない固定サイズのスレッドのパーティを含むプログラムで役立ちます。バリアは、待機中のスレッドが解放された後に再利用できるため、&lt;em&gt;循環型&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="2dd17e55180091ad70522d91d40125c6a025834d" translate="yes" xml:space="preserve">
          <source>A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</source>
          <target state="translated">1つ以上のスレッドが他のスレッドで実行されている操作のセットが完了するまで待機することを可能にする同期化支援。</target>
        </trans-unit>
        <trans-unit id="42875a7c649220cb056097bc1461142c65ab30e9" translate="yes" xml:space="preserve">
          <source>A synchronization point at which threads can pair and swap elements within pairs.</source>
          <target state="translated">スレッドがペアを組んで、ペア内の要素を交換できる同期ポイント。</target>
        </trans-unit>
        <trans-unit id="193d8d7b39955d84e6c2d6db8fe65bf3dc91625e" translate="yes" xml:space="preserve">
          <source>A synchronization point at which threads can pair and swap elements within pairs. Each thread presents some object on entry to the &lt;a href=&quot;exchanger#exchange-V-&quot;&gt;&lt;code&gt;exchange&lt;/code&gt;&lt;/a&gt; method, matches with a partner thread, and receives its partner's object on return. An Exchanger may be viewed as a bidirectional form of a &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;. Exchangers may be useful in applications such as genetic algorithms and pipeline designs.</source>
          <target state="translated">スレッドがペアになり、ペア内の要素を交換できる同期ポイント。各スレッドは、&lt;a href=&quot;exchanger#exchange-V-&quot;&gt; &lt;code&gt;exchange&lt;/code&gt; &lt;/a&gt;メソッドへのエントリ時にいくつかのオブジェクトを提示し、パートナースレッドと一致し、戻り時にパートナーのオブジェクトを受け取ります。Exchangerは、&lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; の&lt;/a&gt;双方向形式と見なすことができます。交換器は、遺伝的アルゴリズムやパイプライン設計などのアプリケーションで役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="cdfde4527cc89cc7810b424646b8cd57dd1ff21d" translate="yes" xml:space="preserve">
          <source>A synchronizer that may be exclusively owned by a thread.</source>
          <target state="translated">スレッドが独占的に所有している可能性のあるシンクロナイザー。</target>
        </trans-unit>
        <trans-unit id="ea15022e50e506b1ad42b93716fcd72cce9f2398" translate="yes" xml:space="preserve">
          <source>A synchronizer that may be exclusively owned by a thread. This class provides a basis for creating locks and related synchronizers that may entail a notion of ownership. The &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; class itself does not manage or use this information. However, subclasses and tools may use appropriately maintained values to help control and monitor access and provide diagnostics.</source>
          <target state="translated">スレッドによって排他的に所有される可能性があるシンクロナイザ。このクラスは、所有権の概念を伴う可能性があるロックおよび関連するシンクロナイザーを作成するための基礎を提供します。 &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; のクラス自体は、この情報を管理したり、使用していません。ただし、サブクラスとツールは、適切に維持された値を使用して、アクセスの制御と監視、および診断の提供を支援します。</target>
        </trans-unit>
        <trans-unit id="39699d57501ebf8d824433b38ebeb57482c1ace5" translate="yes" xml:space="preserve">
          <source>A system-wide CookieHandler that to used by the HTTP protocol handler can be registered by doing a CookieHandler.setDefault(CookieHandler). The currently registered CookieHandler can be retrieved by calling CookieHandler.getDefault(). For more information on HTTP state management, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;&lt;i&gt;RFC 2965: HTTP State Management Mechanism&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">HTTPプロトコルハンドラーで使用されるシステム全体のCookieHandlerは、CookieHandler.setDefault（CookieHandler）を実行することで登録できます。現在登録されているCookieHandlerは、CookieHandler.getDefault（）を呼び出すことで取得できます。HTTP状態管理の詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;&lt;i&gt;RFC 2965：HTTP状態管理メカニズムを&lt;/i&gt;&lt;/a&gt;参照してください。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a4f6d24c10fa964f01d5103b594f6c27259f64a6" translate="yes" xml:space="preserve">
          <source>A tagging interface that all event listener interfaces must extend.</source>
          <target state="translated">すべてのイベントリスナーインターフェースが拡張しなければならないタグ付けインターフェース。</target>
        </trans-unit>
        <trans-unit id="97d08ca39761a0c4c0d769c664caa78585ebc6df" translate="yes" xml:space="preserve">
          <source>A target data line is a type of &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; from which audio data can be read.</source>
          <target state="translated">ターゲットデータラインは、オーディオデータを読み取ることができる &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; の一種です。</target>
        </trans-unit>
        <trans-unit id="5d359b673fd41403645d05ff40b08831867c7994" translate="yes" xml:space="preserve">
          <source>A target data line is a type of &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; from which audio data can be read. The most common example is a data line that gets its data from an audio capture device. (The device is implemented as a mixer that writes to the target data line.)</source>
          <target state="translated">ターゲットデータラインは、オーディオデータを読み取ることができる &lt;code&gt;&lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; の一種です。最も一般的な例は、オーディオキャプチャデバイスからデータを取得するデータラインです。（デバイスは、ターゲットデータラインに書き込むミキサーとして実装されます。）</target>
        </trans-unit>
        <trans-unit id="8096a3c92a05a033e7874064d057fb6b030976fe" translate="yes" xml:space="preserve">
          <source>A task that can be scheduled for one-time or repeated execution by a Timer.</source>
          <target state="translated">タイマーで一度だけの実行や繰り返しの実行をスケジューリングできるタスク。</target>
        </trans-unit>
        <trans-unit id="cc7f4b86d4fe8947abdf8ac4948c2ae58856a21d" translate="yes" xml:space="preserve">
          <source>A task that returns a result and may throw an exception.</source>
          <target state="translated">結果を返し、例外を投げる可能性のあるタスク。</target>
        </trans-unit>
        <trans-unit id="6ec5e4974a5a970e946a8362e12d9573c6b388bf" translate="yes" xml:space="preserve">
          <source>A task that returns a result and may throw an exception. Implementors define a single method with no arguments called &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">結果を返し、例外をスローするタスク。実装者は &lt;code&gt;call&lt;/code&gt; と呼ばれる引数なしで単一のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="2589233383b789a311064a7fba0a546438ae60f1" translate="yes" xml:space="preserve">
          <source>A temporary file is used as a cache. If &lt;code&gt;cacheDir&lt;/code&gt;is non-&lt;code&gt;null&lt;/code&gt; and is a directory, the file will be created there. If it is &lt;code&gt;null&lt;/code&gt;, the system-dependent default temporary-file directory will be used (see the documentation for &lt;code&gt;File.createTempFile&lt;/code&gt; for details).</source>
          <target state="translated">一時ファイルはキャッシュとして使用されます。場合 &lt;code&gt;cacheDir&lt;/code&gt; 非で &lt;code&gt;null&lt;/code&gt; とディレクトリで、ファイルが作成されます。それがある場合は &lt;code&gt;null&lt;/code&gt; を、システムに依存するデフォルトの一時ファイルディレクトリには、（のドキュメント参照に使用されます &lt;code&gt;File.createTempFile&lt;/code&gt; 詳細を）。</target>
        </trans-unit>
        <trans-unit id="30925a19cb952e0f37a51e16804861e07d99a221" translate="yes" xml:space="preserve">
          <source>A text-argument contains unquoted punctuation symbols (e.g. &quot;a &amp;lt; b-c &amp;lt; d&quot;).</source>
          <target state="translated">テキスト引数には、引用符で囲まれていない句読記号が含まれています（「a &amp;lt;bc &amp;lt;d」など）。</target>
        </trans-unit>
        <trans-unit id="a7d080072993e4c0db22f83098e159f024b9c9cf" translate="yes" xml:space="preserve">
          <source>A thread blocked in one of the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt; methods may be interrupted by some other thread in one of three ways:</source>
          <target state="translated">&lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;メソッドのいずれかでブロックされたスレッドは、次の3つの方法のいずれかで他のスレッドによって中断される場合があります。</target>
        </trans-unit>
        <trans-unit id="d75b5042eb9ab9f516af220f6459d96cfcc33ebb" translate="yes" xml:space="preserve">
          <source>A thread can also wake up without being notified, interrupted, or timing out, a so-called</source>
          <target state="translated">スレッドは、通知されたり、中断されたり、タイミングアウトされたりすることなくウェイクアップすることもできます。</target>
        </trans-unit>
        <trans-unit id="ddca25370fd78ebbf20b84ff10d66fd3a2f6cf81" translate="yes" xml:space="preserve">
          <source>A thread can be in only one state at a given point in time. These states are virtual machine states which do not reflect any operating system thread states.</source>
          <target state="translated">スレッドは、ある時点で1つの状態にしかなりません。これらの状態は、オペレーティングシステムのスレッドの状態を反映しない仮想マシンの状態です。</target>
        </trans-unit>
        <trans-unit id="585e2dbacd4992b1f6e7b30fb8c051ba6a22da00" translate="yes" xml:space="preserve">
          <source>A thread can take full control of how it responds to uncaught exceptions by having its uncaught exception handler explicitly set. If no such handler is set then the thread's &lt;code&gt;ThreadGroup&lt;/code&gt; object acts as its handler.</source>
          <target state="translated">スレッドは、キャッチされていない例外ハンドラーを明示的に設定することで、キャッチされていない例外に応答する方法を完全に制御できます。そのようなハンドラーが設定されていない場合、スレッドの &lt;code&gt;ThreadGroup&lt;/code&gt; オブジェクトはそのハンドラーとして機能します。</target>
        </trans-unit>
        <trans-unit id="1b78cd526d6ac90e1eacc797eaaa4ef4882f82d5" translate="yes" xml:space="preserve">
          <source>A thread executing in the Java virtual machine is in this state.</source>
          <target state="translated">Java仮想マシンで実行しているスレッドがこの状態になっています。</target>
        </trans-unit>
        <trans-unit id="e5d47d1a76dcba5b90b826f49487b6b3c89b2d54" translate="yes" xml:space="preserve">
          <source>A thread group represents a set of threads.</source>
          <target state="translated">スレッドグループはスレッドの集合を表します。</target>
        </trans-unit>
        <trans-unit id="95d041a4e6a8bd235c1298538d87c91f142cbef5" translate="yes" xml:space="preserve">
          <source>A thread group represents a set of threads. In addition, a thread group can also include other thread groups. The thread groups form a tree in which every thread group except the initial thread group has a parent.</source>
          <target state="translated">スレッドグループはスレッドの集合を表します。さらに、スレッドグループは他のスレッドグループを含むこともできます。スレッドグループは、最初のスレッドグループを除くすべてのスレッドグループが親を持つツリーを形成します。</target>
        </trans-unit>
        <trans-unit id="892380172ee89fe877c4650f436372d6cccbda2c" translate="yes" xml:space="preserve">
          <source>A thread has a hold on a lock for each lock action that is not matched by an unlock action.</source>
          <target state="translated">スレッドは、アンロックアクションでは一致しないロックアクションごとにロックのホールドを持っています。</target>
        </trans-unit>
        <trans-unit id="bb8a3491bca7c7fd731f9c95602bd2c30b238522" translate="yes" xml:space="preserve">
          <source>A thread in the waiting state is waiting for another thread to perform a particular action. For example, a thread that has called &lt;code&gt;Object.wait()&lt;/code&gt; on an object is waiting for another thread to call &lt;code&gt;Object.notify()&lt;/code&gt; or &lt;code&gt;Object.notifyAll()&lt;/code&gt; on that object. A thread that has called &lt;code&gt;Thread.join()&lt;/code&gt; is waiting for a specified thread to terminate.</source>
          <target state="translated">待機状態のスレッドは、別のスレッドが特定のアクションを実行するのを待機しています。たとえば、オブジェクトで &lt;code&gt;Object.wait()&lt;/code&gt; を呼び出したスレッドは、別のスレッドがそのオブジェクトで &lt;code&gt;Object.notify()&lt;/code&gt; または &lt;code&gt;Object.notifyAll()&lt;/code&gt; を呼び出すのを待機しています。 &lt;code&gt;Thread.join()&lt;/code&gt; を呼び出したスレッドは、指定されたスレッドが終了するのを待っています。</target>
        </trans-unit>
        <trans-unit id="fa7366fb55e0b9dc48143f395cddf39e1f5e44ba" translate="yes" xml:space="preserve">
          <source>A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false.</source>
          <target state="translated">割り込み時にスレッドがアライブではなかったために無視されたスレッドの割り込みは、このメソッドがfalseを返すことで反映されます。</target>
        </trans-unit>
        <trans-unit id="da5824f7219e6684675210cdfff6e7d78a6bc68f" translate="yes" xml:space="preserve">
          <source>A thread is allowed to access information about its own thread group, but not to access information about its thread group's parent thread group or any other thread groups.</source>
          <target state="translated">スレッドは自分のスレッドグループに関する情報にアクセスすることができますが、スレッドグループの親スレッドグループや他のスレッドグループに関する情報にアクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="dd9e26592eb7410d0987e724afcb3fcfe43667ab" translate="yes" xml:space="preserve">
          <source>A thread managed by a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, which executes &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;を実行する&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;によって管理されるスレッド。</target>
        </trans-unit>
        <trans-unit id="ac970f4f0ea5786ae640fa799ef4b728eba4ae76" translate="yes" xml:space="preserve">
          <source>A thread managed by a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, which executes &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s. This class is subclassable solely for the sake of adding functionality -- there are no overridable methods dealing with scheduling or execution. However, you can override initialization and termination methods surrounding the main task processing loop. If you do create such a subclass, you will also need to supply a custom &lt;a href=&quot;forkjoinpool.forkjoinworkerthreadfactory&quot;&gt;&lt;code&gt;ForkJoinPool.ForkJoinWorkerThreadFactory&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;forkjoinpool#ForkJoinPool-int-java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory-java.lang.Thread.UncaughtExceptionHandler-int-java.lang.String-&quot;&gt;use it&lt;/a&gt; in a &lt;code&gt;ForkJoinPool&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;を実行する&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;によって管理されるスレッド。このクラスは、機能を追加するためだけにサブクラス化できます。スケジューリングや実行を処理するオーバーライド可能なメソッドはありません。ただし、メインタスク処理ループを囲む初期化メソッドと終了メソッドをオーバーライドできます。あなたは、このようなサブクラスを作成した場合は、あなたもカスタム用意する必要があります&lt;a href=&quot;forkjoinpool.forkjoinworkerthreadfactory&quot;&gt; &lt;code&gt;ForkJoinPool.ForkJoinWorkerThreadFactory&lt;/code&gt; &lt;/a&gt;する&lt;a href=&quot;forkjoinpool#ForkJoinPool-int-java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory-java.lang.Thread.UncaughtExceptionHandler-int-java.lang.String-&quot;&gt;、それを使用&lt;/a&gt;して &lt;code&gt;ForkJoinPool&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="9b816a60dc194b56b130d21de3a879fddc441488" translate="yes" xml:space="preserve">
          <source>A thread state.</source>
          <target state="translated">スレッドの状態。</target>
        </trans-unit>
        <trans-unit id="9fe95823afee1dbcc06b4543ab0ad0dcc826b19d" translate="yes" xml:space="preserve">
          <source>A thread state. A thread can be in one of the following states:</source>
          <target state="translated">スレッドの状態。スレッドは以下のいずれかの状態になります。</target>
        </trans-unit>
        <trans-unit id="6842aeca8d8d5114edda2e86700755add8754e0e" translate="yes" xml:space="preserve">
          <source>A thread that has exited is in this state.</source>
          <target state="translated">抜け出したスレッドがこの状態です。</target>
        </trans-unit>
        <trans-unit id="84e7a0859d00a7e46eae755d7f2a29a8da5729b4" translate="yes" xml:space="preserve">
          <source>A thread that has not yet started is in this state.</source>
          <target state="translated">まだ始まっていないスレッドがこの状態です。</target>
        </trans-unit>
        <trans-unit id="a662855fd86e2424ce462a3770a3db817bd77b54" translate="yes" xml:space="preserve">
          <source>A thread that is blocked waiting for a monitor lock is in this state.</source>
          <target state="translated">モニターロック待ちでブロックされているスレッドがこの状態になっています。</target>
        </trans-unit>
        <trans-unit id="02fbead1cda97aa08be28b28708cf591303853a9" translate="yes" xml:space="preserve">
          <source>A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state.</source>
          <target state="translated">指定された待ち時間までの間、他のスレッドがアクションを実行するのを待っているスレッドがこの状態になっています。</target>
        </trans-unit>
        <trans-unit id="002b0be4abc15e3f02ebade9b59e62fe5b669dbd" translate="yes" xml:space="preserve">
          <source>A thread that is waiting indefinitely for another thread to perform a particular action is in this state.</source>
          <target state="translated">他のスレッドが特定のアクションを実行するのを無期限に待っているスレッドは、この状態です。</target>
        </trans-unit>
        <trans-unit id="0258e448ca87c340c46139b21f216322673258a0" translate="yes" xml:space="preserve">
          <source>A thread that tries to acquire a fair read lock (non-reentrantly) will block if either the write lock is held, or there is a waiting writer thread. The thread will not acquire the read lock until after the oldest currently waiting writer thread has acquired and released the write lock. Of course, if a waiting writer abandons its wait, leaving one or more reader threads as the longest waiters in the queue with the write lock free, then those readers will be assigned the read lock.</source>
          <target state="translated">公正なリードロックを取得しようとするスレッドは (非再帰的に)書き込みロックが保持されているか、待機中のライタースレッドがある場合にブロックされます。そのスレッドは、現在最も古い待機中のライタースレッドが書き込みロックを取得して解放するまで、読み込みロックを取得しません。もちろん、待ち受け中のライタが待ちを放棄して、書き込みロックが解放された状態で待ち行列の中で最も長い待ち人として 1 つ以上のリーダースレッドを残した場合、それらのリーダには読み取りロックが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="9a2ec4f75b588dede82c5805c28b7a8a86668942" translate="yes" xml:space="preserve">
          <source>A thread that tries to acquire a fair write lock (non-reentrantly) will block unless both the read lock and write lock are free (which implies there are no waiting threads). (Note that the non-blocking &lt;a href=&quot;reentrantreadwritelock.readlock#tryLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.ReadLock.tryLock()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reentrantreadwritelock.writelock#tryLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.WriteLock.tryLock()&lt;/code&gt;&lt;/a&gt; methods do not honor this fair setting and will immediately acquire the lock if it is possible, regardless of waiting threads.)</source>
          <target state="translated">読み取りロックと書き込みロックの両方が解放されていない（待機中のスレッドがないことを意味する）場合を除き、公平な書き込みロックを（再入不可に）取得しようとするスレッドはブロックされます。（非ブロッキングの&lt;a href=&quot;reentrantreadwritelock.readlock#tryLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.ReadLock.tryLock()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;reentrantreadwritelock.writelock#tryLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.WriteLock.tryLock()&lt;/code&gt; &lt;/a&gt;メソッドはこの公平な設定を尊重せず、待機中のスレッドに関係なく、可能であればすぐにロックを取得します。</target>
        </trans-unit>
        <trans-unit id="6291225ffcc4d85c817a068d1948e977dcf528f1" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;../arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; in which all mutative operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and so on) are implemented by making a fresh copy of the underlying array.</source>
          <target state="translated">基になる配列の新しいコピーを作成することにより、すべての変更操作（ &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; など）が実装される&lt;a href=&quot;../arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; の&lt;/a&gt;スレッドセーフなバリアント。</target>
        </trans-unit>
        <trans-unit id="cc34521320daf7ba82b9dc75a235c94939e2ee53" translate="yes" xml:space="preserve">
          <source>A thread-safe, mutable sequence of characters.</source>
          <target state="translated">スレッドセーフで、突然変異可能な文字列。</target>
        </trans-unit>
        <trans-unit id="ea628a80acde8e671413c1f38e4f18fddafb0925" translate="yes" xml:space="preserve">
          <source>A thread-safe, mutable sequence of characters. A string buffer is like a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, but can be modified. At any point in time it contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.</source>
          <target state="translated">スレッドセーフで変更可能な文字のシーケンス。文字列バッファは&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;に似ていますが、変更することができます。いつでも特定の文字シーケンスが含まれますが、シーケンスの長さと内容は、特定のメソッド呼び出しを通じて変更できます。</target>
        </trans-unit>
        <trans-unit id="24d7a9c5f465c988ea212c5d9635dfd2cdab580f" translate="yes" xml:space="preserve">
          <source>A three-letter abbreviation of this locale's country.</source>
          <target state="translated">このロケールの国の3文字の略語。</target>
        </trans-unit>
        <trans-unit id="3f4945905337dbda8bfc802300ad7b6d83ece4c2" translate="yes" xml:space="preserve">
          <source>A three-letter abbreviation of this locale's language.</source>
          <target state="translated">この地域の言語の3文字の略語。</target>
        </trans-unit>
        <trans-unit id="c62ae97500529e3eeeb2b2f16bc264d307b078c3" translate="yes" xml:space="preserve">
          <source>A throwable contains a snapshot of the execution stack of its thread at the time it was created. It can also contain a message string that gives more information about the error. Over time, a throwable can &lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;suppress&lt;/a&gt; other throwables from being propagated. Finally, the throwable can also contain a</source>
          <target state="translated">スロー可能オブジェクトには、作成時のスレッドの実行スタックのスナップショットが含まれています。エラーに関する詳細情報を示すメッセージ文字列を含めることもできます。時間の経過とともに、スロー可能オブジェクトは他のスロー可能オブジェクトの伝搬を&lt;a href=&quot;throwable#addSuppressed-java.lang.Throwable-&quot;&gt;抑制&lt;/a&gt;できます。最後に、スロー可能オブジェクトには、</target>
        </trans-unit>
        <trans-unit id="844e3b37e96fa731b7906e7b43b4d23edb37db98" translate="yes" xml:space="preserve">
          <source>A time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as &lt;code&gt;10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">ISO-8601カレンダーシステムのUTC /グリニッジからのオフセットのある時刻（10：15：30 &lt;code&gt;10:15:30+01:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44d7d356271e2af3ac760a90efcb2cad007aa461" translate="yes" xml:space="preserve">
          <source>A time without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;10:15:30&lt;/code&gt;.</source>
          <target state="translated">ISO-8601カレンダーシステムでタイムゾーンのない時間（ &lt;code&gt;10:15:30&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="c14465e8db9f9f940e2b35e21227a185415be9c0" translate="yes" xml:space="preserve">
          <source>A time-based amount of time, such as '34.5 seconds'.</source>
          <target state="translated">'34.5秒'のような時間的な量。</target>
        </trans-unit>
        <trans-unit id="3b4ffad2ef91c64d69380dc05fa577572afb357c" translate="yes" xml:space="preserve">
          <source>A time-zone ID, such as &lt;code&gt;Europe/Paris&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Europe/Paris&lt;/code&gt; などのタイムゾーンID 。</target>
        </trans-unit>
        <trans-unit id="38bf9430f15ab68aa39ece1ffeb834911301e750" translate="yes" xml:space="preserve">
          <source>A time-zone can be invalid if it is deserialized in a Java Runtime which does not have the same rules loaded as the Java Runtime that stored it. In this case, calling this method will throw a &lt;code&gt;ZoneRulesException&lt;/code&gt;.</source>
          <target state="translated">タイムゾーンは、それを格納したJavaランタイムと同じルールがロードされていないJavaランタイムで逆シリアル化されると無効になる可能性があります。この場合、このメソッドを呼び出すと &lt;code&gt;ZoneRulesException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="3e0b53d50a23078544418a172178f83aeebf59ea" translate="yes" xml:space="preserve">
          <source>A time-zone offset from Greenwich/UTC, such as &lt;code&gt;+02:00&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+02:00&lt;/code&gt; など、グリニッジ/ UTCからのタイムゾーンオフセット。</target>
        </trans-unit>
        <trans-unit id="209738376b4561d2bcb16ca6d698d25bca7f5476" translate="yes" xml:space="preserve">
          <source>A time-zone offset is the amount of time that a time-zone differs from Greenwich/UTC. This is usually a fixed number of hours and minutes.</source>
          <target state="translated">タイムゾーンオフセットとは、タイムゾーンがグリニッジ/UTCと異なる時間の量のことです。これは通常、時間と分の固定数です。</target>
        </trans-unit>
        <trans-unit id="9b7e4f7bc8f0043d06b5f5927770ec6755bed14e" translate="yes" xml:space="preserve">
          <source>A token is returned by taking a substring of the string that was used to create the &lt;code&gt;StringTokenizer&lt;/code&gt; object.</source>
          <target state="translated">トークンは、 &lt;code&gt;StringTokenizer&lt;/code&gt; オブジェクトの作成に使用された文字列の部分文字列を取得することによって返されます。</target>
        </trans-unit>
        <trans-unit id="813280b36eeae178180e9b38b1461d14a8da96c5" translate="yes" xml:space="preserve">
          <source>A token representing a lock on a region of a file.</source>
          <target state="translated">ファイルの領域のロックを表すトークン。</target>
        </trans-unit>
        <trans-unit id="7dcd368898f84119fb11dd23cbfef5dae26a428a" translate="yes" xml:space="preserve">
          <source>A token representing the membership of an Internet Protocol (IP) multicast group.</source>
          <target state="translated">インターネット プロトコル (IP)マルチキャスト グループのメンバーシップを表すトークン。</target>
        </trans-unit>
        <trans-unit id="c296fb90c74609a8957110aa69c3a79a79b36082" translate="yes" xml:space="preserve">
          <source>A token representing the registration</source>
          <target state="translated">登録を表すトークン</target>
        </trans-unit>
        <trans-unit id="3a9fe0d9b3f30b588f6d14a77d1fc43be807e446" translate="yes" xml:space="preserve">
          <source>A token representing the registration of a &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; の&lt;/a&gt;登録を表すトークン。</target>
        </trans-unit>
        <trans-unit id="88b5b5e192f45736fe90cca90c7a8b6c800660c0" translate="yes" xml:space="preserve">
          <source>A token representing the registration of a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;watchable&lt;/code&gt;&lt;/a&gt; object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; による監視&lt;/a&gt;&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;watchable&lt;/code&gt; &lt;/a&gt;オブジェクトの登録を表すトークン。</target>
        </trans-unit>
        <trans-unit id="845b62c25607213fef5a19d4e61f6ef6db6330e6" translate="yes" xml:space="preserve">
          <source>A tool might use this information to determine if any options provided by a user are unrecognized by any processor, in which case it may wish to report a warning.</source>
          <target state="translated">ツールはこの情報を使って、ユーザによって提供されたオプションがどのプロセッサによっても認識されていないかどうかを判断することがあります。</target>
        </trans-unit>
        <trans-unit id="df852f683d2a1bba8335378fbd0db948a848eff4" translate="yes" xml:space="preserve">
          <source>A top-level Spliterator should not report both &lt;code&gt;CONCURRENT&lt;/code&gt; and &lt;code&gt;SIZED&lt;/code&gt;, since the finite size, if known, may change if the source is concurrently modified during traversal. Such a Spliterator is inconsistent and no guarantees can be made about any computation using that Spliterator. Sub-spliterators may report &lt;code&gt;SIZED&lt;/code&gt; if the sub-split size is known and additions or removals to the source are not reflected when traversing.</source>
          <target state="translated">トラバース中にソースが同時に変更された場合、有限サイズがわかっている場合は変更される可能性があるため、トップレベルのSpliteratorは &lt;code&gt;CONCURRENT&lt;/code&gt; と &lt;code&gt;SIZED&lt;/code&gt; の両方を報告しないでください。このようなSpliteratorは一貫性がなく、そのSpliteratorを使用した計算については保証できません。サブspliteratorsを報告することができる &lt;code&gt;SIZED&lt;/code&gt; サブ分割サイズが知られており、トラバース時にソースへの追加または削除が反映されていない場合。</target>
        </trans-unit>
        <trans-unit id="388345443d8366b32e7123dc1c2098627e077749" translate="yes" xml:space="preserve">
          <source>A top-level type, not contained within another type.</source>
          <target state="translated">トップレベルの型で、他の型には含まれていません。</target>
        </trans-unit>
        <trans-unit id="eb474dd1f2b80e5f5359081cf5359e68279e7772" translate="yes" xml:space="preserve">
          <source>A transformation is of the form:</source>
          <target state="translated">変形とは、形のことです。</target>
        </trans-unit>
        <trans-unit id="897a6080a7da5b7b84eb4bb261c7b1a25f1b48e8" translate="yes" xml:space="preserve">
          <source>A transition between two offsets caused by a discontinuity in the local time-line.</source>
          <target state="translated">局所的な時間軸の不連続性によって引き起こされる2つのオフセット間の遷移。</target>
        </trans-unit>
        <trans-unit id="4ddea8c1995b8f7a692287ad79cac41ec6df23ac" translate="yes" xml:space="preserve">
          <source>A transition between two offsets is normally the result of a daylight savings cutover. The discontinuity is normally a gap in spring and an overlap in autumn. &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; models the transition between the two offsets.</source>
          <target state="translated">2つのオフセット間の移行は通常、夏時間の切り替えの結果です。不連続は通常、春のギャップであり、秋のオーバーラップです。 &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; は、2つのオフセット間の遷移をモデル化します。</target>
        </trans-unit>
        <trans-unit id="f3b2166861c3e49166b5a9efa9027a2043e969b1" translate="yes" xml:space="preserve">
          <source>A transition is used to model the cases of a Gap or Overlap. The Normal case will return null.</source>
          <target state="translated">トランジションは、GapやOverlapのケースをモデル化するために使用されます。Normal の場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="6ac35618f1dc34cf64aaee6456c149972fbe3b79" translate="yes" xml:space="preserve">
          <source>A transparent parameter specification is obtained from an &lt;code&gt;AlgorithmParameters&lt;/code&gt; object via a call to &lt;code&gt;getParameterSpec&lt;/code&gt;, and a byte encoding of the parameters is obtained via a call to &lt;code&gt;getEncoded&lt;/code&gt;.</source>
          <target state="translated">透明なパラメーター仕様は、 &lt;code&gt;getParameterSpec&lt;/code&gt; の呼び出しを介して &lt;code&gt;AlgorithmParameters&lt;/code&gt; オブジェクトから取得され、パラメーターのバイトエンコーディングは &lt;code&gt;getEncoded&lt;/code&gt; の呼び出しを介して取得されます。</target>
        </trans-unit>
        <trans-unit id="7d4ed2b72944ec65bc489ad9dfa116b67dce25da" translate="yes" xml:space="preserve">
          <source>A transparent stream that updates the associated message digest using the bits going through the stream.</source>
          <target state="translated">ストリームを通過するビットを使用して、関連するメッセージダイジェストを更新する透過型ストリーム。</target>
        </trans-unit>
        <trans-unit id="e420bcbbeb1462aea26de977cbcd4d1a99419a11" translate="yes" xml:space="preserve">
          <source>A tray has run out of media.</source>
          <target state="translated">トレイのメディアがなくなった。</target>
        </trans-unit>
        <trans-unit id="19de919b12a24578a5112c348d454ad4af1981b1" translate="yes" xml:space="preserve">
          <source>A trust anchor or most-trusted Certification Authority (CA).</source>
          <target state="translated">トラストアンカーまたは最も信頼されている認証局(CA)。</target>
        </trans-unit>
        <trans-unit id="9b1b6eb0db135bd107443d324235d42a6e65e809" translate="yes" xml:space="preserve">
          <source>A two-dimensional size attribute's X and Y dimension values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">2次元のサイズ属性のXとYの寸法値は、マイクロメートル（&amp;micro;m）の単位で整数として内部的に格納されます。1マイクロメートル= 10 &lt;sup&gt;-6&lt;/sup&gt;メートル= 1/1000ミリメートル= 1/25400インチ。これにより、寸法を1/1000 mm（= 1 &amp;micro;m）または1/100インチ（= 254 &amp;micro;m）の精度で正確に表すことができます。小数インチが2の負の累乗で表される場合、これにより、寸法を1/8インチ（= 3175 &amp;micro;m）の精度で正確に表すことができますが、1/16インチではできません（1/16インチは、 &amp;micro;m）。</target>
        </trans-unit>
        <trans-unit id="6af0ea5ed773abf8a618cca26180be5e309bd6fa" translate="yes" xml:space="preserve">
          <source>A two-dimensional size attribute's value consists of two items, the X dimension and the Y dimension. A two-dimensional size attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a two-dimensional size attribute's values, indicating the units in which the values are to be returned. The two most common size units are inches (in) and millimeters (mm), and exported constants &lt;a href=&quot;size2dsyntax#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;size2dsyntax#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">2次元のサイズ属性の値は、X次元とY次元の2つの項目で構成されます。2次元のサイズ属性は、2つの値を提供し、値が測定される単位を示すことによって構築できます。2次元のサイズ属性の値を返すメソッドが提供され、値が返される単位を示します。最も一般的な2つのサイズ単位は、インチ（in）とミリメートル（mm）です。これらの単位を示すために、エクスポートされた定数&lt;a href=&quot;size2dsyntax#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;size2dsyntax#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt;が提供されています。</target>
        </trans-unit>
        <trans-unit id="a1589ca1adc837ae5628057c8ce7a3932d1f2632" translate="yes" xml:space="preserve">
          <source>A two-element array with the X dimension at index 0 and the Y dimension at index 1.</source>
          <target state="translated">X 次元をインデックス 0、Y 次元をインデックス 1 とした 2 要素の配列.</target>
        </trans-unit>
        <trans-unit id="1e69f6f1132af4fbadcfb62539e96a8b114b1270" translate="yes" xml:space="preserve">
          <source>A two-element array with the cross feed direction resolution at index 0 and the feed direction resolution at index 1.</source>
          <target state="translated">クロスフィード方向の分解能をインデックス0に、フィード方向の分解能をインデックス1に持つ2つの要素のアレイ。</target>
        </trans-unit>
        <trans-unit id="d57173a2b77351586eddfe5d33bd50e670f61d6d" translate="yes" xml:space="preserve">
          <source>A type Q is considered adaptable to S as follows:</source>
          <target state="translated">タイプQは、以下のようにSに適応可能と考えられています。</target>
        </trans-unit>
        <trans-unit id="67e13e4b14d00f981f86166ef81f0e900ec8fd76" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line begins to engage in active input or output of audio data in response to a &lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">&lt;a href=&quot;dataline#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;要求に応答して、ラインがオーディオデータのアクティブな入力または出力を開始するときに送信されるイベントのタイプ。</target>
        </trans-unit>
        <trans-unit id="4f8baa6a39c7763b8605d146836404fbeaaa331c" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line ceases active input or output of audio data in response to a &lt;a href=&quot;dataline#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; request, or because the end of media has been reached.</source>
          <target state="translated">&lt;a href=&quot;dataline#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;要求に応答して、またはメディアの終わりに達したために、ラインがオーディオデータのアクティブな入力または出力を停止したときに送信されるイベントのタイプ。</target>
        </trans-unit>
        <trans-unit id="9c164cc473efaf1cd9f28153c4ba8ec17d4aec8d" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line closes, freeing the system resources it had obtained when it was opened.</source>
          <target state="translated">回線が閉じたときに送られるイベントの一種で、開通時に取得していたシステムリソースが解放されます。</target>
        </trans-unit>
        <trans-unit id="7cfe673373c81efaaf12554915dee4875bb26384" translate="yes" xml:space="preserve">
          <source>A type of event that is sent when a line opens, reserving system resources for itself.</source>
          <target state="translated">行が開いたときに送信されるイベントの一種で、システムリソースをそれ自身のために確保します。</target>
        </trans-unit>
        <trans-unit id="95fc5608fbb2102542ca13e9798a5da14bfe52ae" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a CD-ROM drive.</source>
          <target state="translated">CD-ROMドライブから音声を取得するポートのタイプ。</target>
        </trans-unit>
        <trans-unit id="9aa462ce751d598b65e535fa8d257d8473a850f2" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a built-in microphone or a microphone jack.</source>
          <target state="translated">内蔵マイクやマイクジャックから音声を取得するポートのタイプ。</target>
        </trans-unit>
        <trans-unit id="d0c7232b58a7129e1cb2f5a054b3632dffc6cec1" translate="yes" xml:space="preserve">
          <source>A type of port that gets audio from a line-level audio input jack.</source>
          <target state="translated">ラインレベルのオーディオ入力ジャックからオーディオを取得するポートのタイプ。</target>
        </trans-unit>
        <trans-unit id="d87f355e0d7ada50b56b6473112041c2eec51100" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a built-in speaker or a speaker jack.</source>
          <target state="translated">内蔵スピーカーやスピーカージャックに音声を送るポートの一種。</target>
        </trans-unit>
        <trans-unit id="6c1ac4f7c51b156a36dfece9a5366fa3391a1968" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a headphone jack.</source>
          <target state="translated">ヘッドホンジャックに音声を送るポートの一種。</target>
        </trans-unit>
        <trans-unit id="dc9a7914a6d90a6a766836264a93c2963bb35ce4" translate="yes" xml:space="preserve">
          <source>A type of port that sends audio to a line-level audio output jack.</source>
          <target state="translated">ラインレベルのオーディオ出力ジャックにオーディオを送るポートのタイプ。</target>
        </trans-unit>
        <trans-unit id="e7b9b1e0322db70d0799ca7453bd8697791978d8" translate="yes" xml:space="preserve">
          <source>A type parameter.</source>
          <target state="translated">型のパラメータ。</target>
        </trans-unit>
        <trans-unit id="d2f5d6d14a20dd6ded9b5c2c60e6932c122f8834" translate="yes" xml:space="preserve">
          <source>A type that is a named member of another type.</source>
          <target state="translated">別の型の名前付きメンバーである型。</target>
        </trans-unit>
        <trans-unit id="6ca958f1089d3d1582d1c30aba329c8223832dd9" translate="yes" xml:space="preserve">
          <source>A type variable.</source>
          <target state="translated">型変数です。</target>
        </trans-unit>
        <trans-unit id="f568e44d9db43475aea4448ec4843fd3c5f84703" translate="yes" xml:space="preserve">
          <source>A type without a name.</source>
          <target state="translated">名前のないタイプ。</target>
        </trans-unit>
        <trans-unit id="7fc5812b75947de2fdfa2d358b559863a2fa00f8" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for byte orders.</source>
          <target state="translated">バイトオーダーのためのタイプセーフ列挙。</target>
        </trans-unit>
        <trans-unit id="9629c5a227b607fb8623c45ae1131d853a64a7cb" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for coding-error actions.</source>
          <target state="translated">コーディングエラーアクションのためのタイプセーフの列挙。</target>
        </trans-unit>
        <trans-unit id="7f3c566c8799b0e94bae351a8e89d02a585b6be2" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration for file-mapping modes.</source>
          <target state="translated">ファイルマッピングモードのためのタイプセーフの列挙。</target>
        </trans-unit>
        <trans-unit id="d70f54c91e23d0b34102cac6eaa6aa2e7a445388" translate="yes" xml:space="preserve">
          <source>A typesafe enumeration of the access control entry types.</source>
          <target state="translated">アクセス制御エントリのタイプセーフの列挙。</target>
        </trans-unit>
        <trans-unit id="8080e730ad4d6c9c785c23fed1387406a8a5ba86" translate="yes" xml:space="preserve">
          <source>A typical application first constructs an instance of this class, sets up the syntax tables, and then repeatedly loops calling the &lt;code&gt;nextToken&lt;/code&gt; method in each iteration of the loop until it returns the value &lt;code&gt;TT_EOF&lt;/code&gt;.</source>
          <target state="translated">典型的なアプリケーションは、まず、このクラスのインスタンスを構築し、構文テーブルを設定した後、繰り返し呼び出すループ &lt;code&gt;nextToken&lt;/code&gt; が値を返すまで、ループの各反復における方法を &lt;code&gt;TT_EOF&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="24013956705f21b593efd49ea8111d4997859f82" translate="yes" xml:space="preserve">
          <source>A typical application using the Java Print Service API performs these steps to process a print request:</source>
          <target state="translated">Java Print Service APIを使用する一般的なアプリケーションは、印刷要求を処理するために以下の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="eb92878024bdeb885f850332f5eafb6288cbdf73" translate="yes" xml:space="preserve">
          <source>A typical caller instantiates a LoginContext with a</source>
          <target state="translated">典型的な呼び出し元は、LoginContext のインスタンスを</target>
        </trans-unit>
        <trans-unit id="8bb858b81365a754f63869f8b31e6ed74a47e097" translate="yes" xml:space="preserve">
          <source>A typical invocation sequence is thus</source>
          <target state="translated">典型的な呼び出しシーケンスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="b3760c59903b17ed7e822701eba23c9e8f3f4859" translate="yes" xml:space="preserve">
          <source>A typical printing application uses the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; because print-request attributes are the types of attributes that client usually specifies. This example demonstrates creating an attribute set of print-request attributes and locating a printer that can print the document according to the specified attributes:</source>
          <target state="translated">典型的な印刷アプリケーションは &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; を使用します。これは、印刷要求属性がクライアントが通常指定するタイプの属性であるためです。この例は、印刷要求属性の属性セットを作成し、指定された属性に従ってドキュメントを印刷できるプリンターを見つける方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a5baf190db84e781f436ff0342abd236c45cde41" translate="yes" xml:space="preserve">
          <source>A typical usage for verification is the following (having received SignedObject &lt;code&gt;so&lt;/code&gt;):</source>
          <target state="translated">検証の一般的な使用法は次のとおりです（SignedObjectを受け取っている &lt;code&gt;so&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="df1c300409e9fddfaa70cfa048dd7347e9ff1a9b" translate="yes" xml:space="preserve">
          <source>A typical usage idiom for this method would be:</source>
          <target state="translated">この方法の典型的な用法熟語は、次のようなものでしょう。</target>
        </trans-unit>
        <trans-unit id="44ad60b85be1c19ee78caaa45318e44f0e4981da" translate="yes" xml:space="preserve">
          <source>A typical use of this class is</source>
          <target state="translated">このクラスの典型的な使用法は</target>
        </trans-unit>
        <trans-unit id="30f8cba8a91891fa687c8bee46d2c007bbd38145" translate="yes" xml:space="preserve">
          <source>A typical way to use this class is to add extra items to the &lt;code&gt;CompositeData&lt;/code&gt; in addition to the ones that are declared in the &lt;code&gt;CompositeType&lt;/code&gt; supplied by the MXBean framework. To do this, you must create another &lt;code&gt;CompositeType&lt;/code&gt; that has all the same items, plus your extra items.</source>
          <target state="translated">このクラスを使用する一般的な方法は、MXBeanフレームワークによって提供される &lt;code&gt;CompositeType&lt;/code&gt; で宣言されているものに加えて、追加の項目を &lt;code&gt;CompositeData&lt;/code&gt; に追加することです。これを行うには、すべて同じアイテムと追加のアイテムを含む別の &lt;code&gt;CompositeType&lt;/code&gt; を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2821ba8382bbfaba7957f8204c9e3724448d3469" translate="yes" xml:space="preserve">
          <source>A union type.</source>
          <target state="translated">ユニオン型。</target>
        </trans-unit>
        <trans-unit id="f3cbc7c2e1b4690eec46471ec2cf375131e0b8cd" translate="yes" xml:space="preserve">
          <source>A unit is time-based if it can be used to imply meaning from a time. It must have a &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">ユニットは、時間からの意味を示すために使用できる場合、時間ベースです。それは、残りのない標準的な日の長さに分割する&lt;a href=&quot;temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;を持つ必要があります。36時間などの単位を表す場合など、 &lt;code&gt;isDateBased()&lt;/code&gt; と &lt;code&gt;isTimeBased()&lt;/code&gt; の両方がfalseを返すことは有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e3708e385e552e65926cc647c32e6751099cb62" translate="yes" xml:space="preserve">
          <source>A unit of date-time, such as Days or Hours.</source>
          <target state="translated">日や時間などの日付時間の単位。</target>
        </trans-unit>
        <trans-unit id="f0aa4f4ecba8e585fad499cc15cee0c26a1a51d3" translate="yes" xml:space="preserve">
          <source>A url which identifies a specific (single) resource</source>
          <target state="translated">特定の (単一の)リソースを識別する URL</target>
        </trans-unit>
        <trans-unit id="073a4e8e455b2fb6727d1d657f673bc9b06278a4" translate="yes" xml:space="preserve">
          <source>A useful property of a &lt;code&gt;CountDownLatch&lt;/code&gt; is that it doesn't require that threads calling &lt;code&gt;countDown&lt;/code&gt; wait for the count to reach zero before proceeding, it simply prevents any thread from proceeding past an &lt;a href=&quot;countdownlatch#await--&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; until all threads could pass.</source>
          <target state="translated">&lt;code&gt;CountDownLatch&lt;/code&gt; の便利なプロパティは、 &lt;code&gt;countDown&lt;/code&gt; を呼び出すスレッドが続行する前にカウントがゼロに達するのを待つ必要がないことです。これは、すべてのスレッドが通過できるようになるまで、スレッドが&lt;a href=&quot;countdownlatch#await--&quot;&gt; &lt;code&gt;await&lt;/code&gt; を&lt;/a&gt;超えて進むのを防ぐだけです。</target>
        </trans-unit>
        <trans-unit id="7cf05b3f80a64c6ebd8b80e0b56804e343da5264" translate="yes" xml:space="preserve">
          <source>A user principal representing the owner of the file</source>
          <target state="translated">ファイルの所有者を代表するユーザープリンシパル</target>
        </trans-unit>
        <trans-unit id="17500e43a7b3429f95353e1a9e8b72d6c5997ef5" translate="yes" xml:space="preserve">
          <source>A user's preference is called a &lt;em&gt;Language Priority List&lt;/em&gt; and is expressed as a list of language ranges. There are syntactically two types of language ranges: basic and extended. See &lt;a href=&quot;locale.languagerange&quot;&gt;&lt;code&gt;Locale.LanguageRange&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">ユーザーの設定は&lt;em&gt;言語優先リスト&lt;/em&gt;と呼ばれ、言語範囲のリストとして表現されます。言語範囲には、基本的に拡張と拡張の2つのタイプがあります。詳細については、&lt;a href=&quot;locale.languagerange&quot;&gt; &lt;code&gt;Locale.LanguageRange&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="19354f13c4554512ea8c9ff697e0cf0ca655dbc4" translate="yes" xml:space="preserve">
          <source>A user-chosen password that can be used with password-based encryption (</source>
          <target state="translated">パスワードベースの暗号化で使用できるユーザが選択したパスワード (</target>
        </trans-unit>
        <trans-unit id="921b97d7c95086329eba490ad2a12b68388f6557" translate="yes" xml:space="preserve">
          <source>A utility method that may be used by readers to compute the region of the source image that should be read, taking into account any source region and subsampling offset settings in the supplied &lt;code&gt;ImageReadParam&lt;/code&gt;. The actual subsampling factors, destination size, and destination offset are &lt;em&gt;not&lt;/em&gt; taken into consideration, thus further clipping must take place. The &lt;a href=&quot;imagereader#computeRegions-javax.imageio.ImageReadParam-int-int-java.awt.image.BufferedImage-java.awt.Rectangle-java.awt.Rectangle-&quot;&gt;&lt;code&gt;computeRegions&lt;/code&gt;&lt;/a&gt; method performs all necessary clipping.</source>
          <target state="translated">提供された &lt;code&gt;ImageReadParam&lt;/code&gt; のソース領域とサブサンプリングオフセット設定を考慮して、読み取る必要があるソース画像の領域を計算するためにリーダーが使用できるユーティリティメソッド。実際のサブサンプリング係数、宛先サイズ、および宛先オフセットは考慮され&lt;em&gt;ない&lt;/em&gt;ため、さらにクリッピングを行う必要があります。&lt;a href=&quot;imagereader#computeRegions-javax.imageio.ImageReadParam-int-int-java.awt.image.BufferedImage-java.awt.Rectangle-java.awt.Rectangle-&quot;&gt; &lt;code&gt;computeRegions&lt;/code&gt; のの&lt;/a&gt;方法は、必要なすべてのクリッピングを実行します。</target>
        </trans-unit>
        <trans-unit id="a9a6bdf08f1b0ab03487e46de957f3578b45b822" translate="yes" xml:space="preserve">
          <source>A utility method that may be used by readers to test the validity of the source and destination band settings of an &lt;code&gt;ImageReadParam&lt;/code&gt;. This method may be called as soon as the reader knows both the number of bands of the source image as it exists in the input stream, and the number of bands of the destination image that being written.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; のソースおよび宛先バンド設定の有効性をテストするためにリーダーが使用できるユーティリティメソッド。このメソッドは、入力ストリームに存在するソースイメージのバンド数と、書き込まれる宛先イメージのバンド数の両方をリーダーが認識するとすぐに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f1e4892d125ac7897799da348616485fdf2f5e6e" translate="yes" xml:space="preserve">
          <source>A utility method to return a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt;s representing the metadata contained within this object according to the conventions of the standard &lt;code&gt;javax_imageio_1.0&lt;/code&gt; metadata format.</source>
          <target state="translated">標準の &lt;code&gt;javax_imageio_1.0&lt;/code&gt; メタデータ形式の規則に従って、このオブジェクトに含まれるメタデータを表す &lt;code&gt;IIOMetadataNode&lt;/code&gt; のツリーを返すユーティリティメソッド。</target>
        </trans-unit>
        <trans-unit id="9dacfe50470089b46edadf73c4aac74e6c78e49b" translate="yes" xml:space="preserve">
          <source>A valid port value is between 0 and 65535. A port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up an ephemeral port in a &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">有効なポート値は0〜65535です。ポート番号が &lt;code&gt;zero&lt;/code&gt; 、システムは &lt;code&gt;bind&lt;/code&gt; 操作で一時ポートを取得します。</target>
        </trans-unit>
        <trans-unit id="397f66f490d10d4494ae7ada8a13a16d92963dab" translate="yes" xml:space="preserve">
          <source>A value indicating that looping should continue indefinitely rather than complete after a specific number of loops.</source>
          <target state="translated">特定の数のループの後に完了するのではなく、無限にループを継続することを示す値。</target>
        </trans-unit>
        <trans-unit id="734d9ff491c0d859200ef8fb1cd332001b1816fa" translate="yes" xml:space="preserve">
          <source>A value of -1 for the ending point indicates the last tick of the sequence. Otherwise, the ending point must be greater than or equal to the starting point, and it must fall within the size of the loaded sequence.</source>
          <target state="translated">終了点に -1 を指定する と 、 シーケ ン ス の最後の目盛りを示します。それ以外の場合は、終了点は開始点以上でなければならず、読み込まれたシーケンスのサイズ内に収まっていなければなりません。</target>
        </trans-unit>
        <trans-unit id="d1092465ce164e39995d49dd04806e5c57ff7e31" translate="yes" xml:space="preserve">
          <source>A value of -1 indicates &quot;cache forever&quot;.</source>
          <target state="translated">値が-1の場合は「永遠にキャッシュされる」ことを示します。</target>
        </trans-unit>
        <trans-unit id="3e29cd02f1a2a0ae106b890e88ef163df1b38aab" translate="yes" xml:space="preserve">
          <source>A value of 0 for the starting point means the beginning of the loaded sequence. The starting point must be lower than or equal to the ending point, and it must fall within the size of the loaded sequence.</source>
          <target state="translated">開始点に 0 を指定すると、読み込まれたシーケンスの開始点を意味します。始点は終点以下でなければならず,ロードされたシーケンスのサイズ内に収まっていなければなりません.</target>
        </trans-unit>
        <trans-unit id="d23a5fcadef3315ee9d8f3adb654f09eb3e1b05d" translate="yes" xml:space="preserve">
          <source>A value of 0 implies that the path can only contain a single certificate. A value of -1 implies that the path length is unconstrained (i.e. there is no maximum). The default maximum path length, if not specified, is 5. Setting a value less than -1 will cause an exception to be thrown.</source>
          <target state="translated">0 の値は、パスが単一の証明書のみを含むことができることを意味する。値 -1 を指定すると、パスの長さに制約がない (すなわち最大値がない)ことを意味する。デフォルトの最大パス長は、指定されていない場合は 5 である。 -1 未満の値を設定すると例外が発生する。</target>
        </trans-unit>
        <trans-unit id="5a3ccc5dabaf68e72fa9a2fa0a9718d5b78030ab" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates &quot;never cache&quot;. A value of -1 indicates &quot;cache forever&quot;.</source>
          <target state="translated">0 の値は、&quot;決してキャッシュしない &quot;ことを示します。値 -1 は「永遠にキャッシュする」ことを示します。</target>
        </trans-unit>
        <trans-unit id="6f2b8b1a219b8caa0a897a446039194d7965bf99" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;sourceRegion&lt;/code&gt; will remove any region specification, causing the entire image to be used.</source>
          <target state="translated">値が &lt;code&gt;null&lt;/code&gt; のための &lt;code&gt;sourceRegion&lt;/code&gt; 画像全体が使用させる、任意の領域の指定を削除します。</target>
        </trans-unit>
        <trans-unit id="d5d709613ee1d97dc74be552e9e5d3099242c0ca" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;numPasses&lt;/code&gt; of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; indicates that all passes from &lt;code&gt;minPass&lt;/code&gt; forward should be read. Otherwise, the index of the last pass (</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の &lt;code&gt;numPasses&lt;/code&gt; の値は、minPass以降のすべてのパスを &lt;code&gt;minPass&lt;/code&gt; 必要があることを示します。それ以外の場合、最後のパスのインデックス（</target>
        </trans-unit>
        <trans-unit id="9e8fcfc5ec5fee8c49ddd7265d996ccc35063572" translate="yes" xml:space="preserve">
          <source>A value of null indicates that all attributes will be returned. An empty array indicates that no attributes are to be returned.</source>
          <target state="translated">null の値は、すべての属性が返されることを示します。空の配列は、返される属性がないことを示します。</target>
        </trans-unit>
        <trans-unit id="dc161feede49f354b5ca68878b3b4601bcb56359" translate="yes" xml:space="preserve">
          <source>A value of true denotes that JavaBeans should behave in design time mode, a value of false denotes runtime behavior.</source>
          <target state="translated">trueの値はJavaBeansがデザインタイムモードで動作することを示し、falseの値はランタイムモードで動作することを示します。</target>
        </trans-unit>
        <trans-unit id="8e820288caa155ad5314478455aa16be47938cea" translate="yes" xml:space="preserve">
          <source>A value that may be or'ed with &lt;code&gt;VALUE_RANGE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt;, and with &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VALUE_RANGE&lt;/code&gt; を使用してVALUE_RANGE_MAX_INCLUSIVEを取得し &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; 、 &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; を使用してVALUE_RANGE_MIN_MAX_INCLUSIVEを取得したりすることができる &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49b77ef96694a16b89d3d52e503460882d9a38a7" translate="yes" xml:space="preserve">
          <source>A value that may be or'ed with &lt;code&gt;VALUE_RANGE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt;, and with &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; to obtain &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">ORで結合することができる値 &lt;code&gt;VALUE_RANGE&lt;/code&gt; 得るため &lt;code&gt;VALUE_RANGE_MIN_INCLUSIVE&lt;/code&gt; を、とを有する &lt;code&gt;VALUE_RANGE_MAX_INCLUSIVE&lt;/code&gt; 得ること &lt;code&gt;VALUE_RANGE_MIN_MAX_INCLUSIVE&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="c92f5f2b459e941a062e03f430e7f1c53b17c8f4" translate="yes" xml:space="preserve">
          <source>A vector of &lt;code&gt;Integer&lt;/code&gt; objects containing all the identifiers of timer notifications with the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;type&lt;/code&gt; タイマー通知のすべての識別子を含む &lt;code&gt;Integer&lt;/code&gt; オブジェクトのベクター。</target>
        </trans-unit>
        <trans-unit id="da3ae676e9d48322e4ec01b47cf4298b06d325f7" translate="yes" xml:space="preserve">
          <source>A vector of &lt;code&gt;Integer&lt;/code&gt; objects containing all the timer notification identifiers.</source>
          <target state="translated">すべてのタイマー通知識別子を含む &lt;code&gt;Integer&lt;/code&gt; オブジェクトのベクター。</target>
        </trans-unit>
        <trans-unit id="4e9b68cae028564799adc866902925edc53bae49" translate="yes" xml:space="preserve">
          <source>A version of &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; in which synchronization state is maintained as a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">同期状態が &lt;code&gt;long&lt;/code&gt; として維持される&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt;のバージョン。</target>
        </trans-unit>
        <trans-unit id="045598eec75eadc3a758e620f8e1c3507464d9c2" translate="yes" xml:space="preserve">
          <source>A version of &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; in which synchronization state is maintained as a &lt;code&gt;long&lt;/code&gt;. This class has exactly the same structure, properties, and methods as &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; with the exception that all state-related parameters and results are defined as &lt;code&gt;long&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;. This class may be useful when creating synchronizers such as multilevel locks and barriers that require 64 bits of state.</source>
          <target state="translated">同期状態が &lt;code&gt;long&lt;/code&gt; として維持される&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt;のバージョン。このクラスの構造、プロパティ、メソッドは、 &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; とまったく同じですが、状態関連のすべてのパラメーターと結果が &lt;code&gt;int&lt;/code&gt; ではなく &lt;code&gt;long&lt;/code&gt; として定義されている点が異なります。このクラスは、64ビットの状態を必要とするマルチレベルロックやバリアなどのシンクロナイザを作成するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="6c3e83a464741100a4422a7fb3de3ba81dd21eb1" translate="yes" xml:space="preserve">
          <source>A vertical offset to be applied to the subsampling grid before subsampling. The first pixel to be used will be offset this amount from the origin of the region, or of the image if no region is specified.</source>
          <target state="translated">サブサンプリング前にサブサンプリンググリッドに適用される垂直オフセット。最初に使われるピクセルは,領域の原点から,領域が指定されていない場合は画像の原点から,この量だけオフセットされます.</target>
        </trans-unit>
        <trans-unit id="0ef02e9260eecbb4126ec548112db19226ea1369" translate="yes" xml:space="preserve">
          <source>A vertical whitespace character: &lt;code&gt;[\n\x0B\f\r\x85\u2028\u2029]&lt;/code&gt;</source>
          <target state="translated">縦の空白文字： &lt;code&gt;[\n\x0B\f\r\x85\u2028\u2029]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="927719dee94a71d5a9f74df0c06ad6e05bc9f8e8" translate="yes" xml:space="preserve">
          <source>A view buffer is indexed not in terms of bytes but rather in terms of the type-specific size of its values;</source>
          <target state="translated">ビューバッファはバイト数ではなく、その値の型固有のサイズでインデックス化されます。</target>
        </trans-unit>
        <trans-unit id="f447f389089f82f2c6f2377154338fc56842867c" translate="yes" xml:space="preserve">
          <source>A view buffer is potentially much more efficient because it will be direct if, and only if, its backing byte buffer is direct.</source>
          <target state="translated">ビューバッファは、そのバッキングバイトバッファがダイレクトである場合にのみダイレクトになるため、潜在的にはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="b8cdf2084d621439141a629b13a92f21d8b7901d" translate="yes" xml:space="preserve">
          <source>A view buffer provides relative bulk</source>
          <target state="translated">ビューバッファは相対的なバルクを提供します。</target>
        </trans-unit>
        <trans-unit id="f01e9969cb0173a7bb4a0bee8dfca43d604d2174" translate="yes" xml:space="preserve">
          <source>A view of a ConcurrentHashMap as a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; of keys, in which additions may optionally be enabled by mapping to a common value.</source>
          <target state="translated">キーの&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;としてのConcurrentHashMapのビュー。共通の値にマッピングすることにより、オプションで追加を有効にできます。</target>
        </trans-unit>
        <trans-unit id="4d58ba505dc4bc668f0b075ce54b020cc0b3e100" translate="yes" xml:space="preserve">
          <source>A view of a ConcurrentHashMap as a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; of keys, in which additions may optionally be enabled by mapping to a common value. This class cannot be directly instantiated. See &lt;a href=&quot;concurrenthashmap#keySet--&quot;&gt;&lt;code&gt;keySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt;&lt;code&gt;keySet(V)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt;&lt;code&gt;newKeySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt;&lt;code&gt;newKeySet(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーの&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;としてのConcurrentHashMapのビュー。共通の値にマッピングすることにより、オプションで追加を有効にできます。このクラスは直接インスタンス化できません。&lt;a href=&quot;concurrenthashmap#keySet--&quot;&gt; &lt;code&gt;keySet()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt; &lt;code&gt;keySet(V)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt; &lt;code&gt;newKeySet()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt; &lt;code&gt;newKeySet(int)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="82b334fb7554948cb878b26ba0814402aa40b6bf" translate="yes" xml:space="preserve">
          <source>A visible character: &lt;code&gt;[\p{Alnum}\p{Punct}]&lt;/code&gt;</source>
          <target state="translated">表示される文字： &lt;code&gt;[\p{Alnum}\p{Punct}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b1377af8439bcbdd5059990bb9254da34501b93" translate="yes" xml:space="preserve">
          <source>A visible character: &lt;code&gt;[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]&lt;/code&gt;</source>
          <target state="translated">表示される文字： &lt;code&gt;[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9475caaba7968f792bd2225146d20763c5d9914b" translate="yes" xml:space="preserve">
          <source>A visitor of files.</source>
          <target state="translated">ファイルの訪問者。</target>
        </trans-unit>
        <trans-unit id="715321356c51a911092fc7e41a7971967b6690bf" translate="yes" xml:space="preserve">
          <source>A visitor of files. An implementation of this interface is provided to the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;Files.walkFileTree&lt;/code&gt;&lt;/a&gt; methods to visit each file in a file tree.</source>
          <target state="translated">ファイルの訪問者。このインターフェイスの実装は、ファイルツリー内の各ファイルにアクセスするために、&lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;Files.walkFileTree&lt;/code&gt; &lt;/a&gt;メソッドに提供されます。</target>
        </trans-unit>
        <trans-unit id="2bcd45daab5a8cf3fa594cbcbc276b7b875272ef" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ、その&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。</target>
        </trans-unit>
        <trans-unit id="1c639abb3f3ff17ce66201eae9dd8026939af6dd" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ、その&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。以下のための&lt;a href=&quot;../element/element&quot;&gt;要素&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZの&lt;/i&gt;このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKindの&lt;/i&gt;最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt;メソッドが呼び出す&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="e6c05e6e836bf51f2323b2c5a0eba7afe3e3ccb2" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を備えた、&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。</target>
        </trans-unit>
        <trans-unit id="fbb41b53ca6a0d5a95ad47da10ecf0c0515f627f" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を備えた、&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。以下のための&lt;a href=&quot;../element/element&quot;&gt;要素&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZの&lt;/i&gt;このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKindの&lt;/i&gt;最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt;メソッドが呼び出す&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bb2a59a51a5f01f3aa5a41dfc9caf2d9292c79a7" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ、その&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。</target>
        </trans-unit>
        <trans-unit id="597c2376ab43b0981c7ae1b589925de68eb314c9" translate="yes" xml:space="preserve">
          <source>A visitor of program elements based on their &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../element/element&quot;&gt;elements&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ、その&lt;a href=&quot;../element/elementkind&quot;&gt;種類に&lt;/a&gt;基づくプログラム要素のビジター。以下のための&lt;a href=&quot;../element/element&quot;&gt;要素&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZの&lt;/i&gt;このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKindの&lt;/i&gt;最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; &lt;i&gt;XYZKind&lt;/i&gt;メソッドが呼び出す&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="8d0b037a1a8b463a56a996735029777d15eb73e9" translate="yes" xml:space="preserve">
          <source>A visitor of program elements, in the style of the visitor design pattern.</source>
          <target state="translated">プログラム要素の訪問者、訪問者のデザインパターンのスタイル。</target>
        </trans-unit>
        <trans-unit id="797c2e3e0dd467c206b23e05f3bba3fc4614e85c" translate="yes" xml:space="preserve">
          <source>A visitor of program elements, in the style of the visitor design pattern. Classes implementing this interface are used to operate on an element when the kind of element is unknown at compile time. When a visitor is passed to an element's &lt;a href=&quot;element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method most applicable to that element is invoked.</source>
          <target state="translated">訪問者のデザインパターンのスタイルのプログラム要素の訪問者。このインターフェイスを実装するクラスは、コンパイル時に要素の種類が不明な場合に、要素を操作するために使用されます。訪問者が要素の&lt;a href=&quot;element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに渡されると、その要素に最も適切な &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d275eb91054335ab9edc07a77a75c761ea77c304" translate="yes" xml:space="preserve">
          <source>A visitor of the values of annotation type elements, using a variant of the visitor design pattern.</source>
          <target state="translated">ビジターデザインパターンのバリエーションを使用した、注釈型要素の値のビジター。</target>
        </trans-unit>
        <trans-unit id="7152ddda771dda1f517ba96bed8a5f81bbbc67d9" translate="yes" xml:space="preserve">
          <source>A visitor of the values of annotation type elements, using a variant of the visitor design pattern. Unlike a standard visitor which dispatches based on the concrete type of a member of a type hierarchy, this visitor dispatches based on the type of data stored; there are no distinct subclasses for storing, for example, &lt;code&gt;boolean&lt;/code&gt; values versus &lt;code&gt;int&lt;/code&gt; values. Classes implementing this interface are used to operate on a value when the type of that value is unknown at compile time. When a visitor is passed to a value's &lt;a href=&quot;annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method applicable to that value is invoked.</source>
          <target state="translated">訪問者の設計パターンのバリアントを使用した、注釈型要素の値の訪問者。タイプ階層のメンバーの具体的なタイプに基づいてディスパッチする標準のビジターとは異なり、このビジターは格納されているデータのタイプに基づいてディスパッチします。たとえば、 &lt;code&gt;boolean&lt;/code&gt; 値と &lt;code&gt;int&lt;/code&gt; 値を格納するための明確なサブクラスはありません。このインターフェイスを実装するクラスは、コンパイル時にその値のタイプが不明な場合に、その値を操作するために使用されます。訪問者が値の&lt;a href=&quot;annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに渡されると、その値に適用可能な &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fc244c4efbcf5ace8c5e2600755583ca11d1ddc9" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; の&lt;/a&gt;ソースバージョン。</target>
        </trans-unit>
        <trans-unit id="786f7d40d976fda20436c7f8eb1bfb920231404d" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; の&lt;/a&gt;ソースバージョン。用&lt;a href=&quot;../type/typemirror&quot;&gt;タイプ&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; メソッドが呼び出す&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。</target>
        </trans-unit>
        <trans-unit id="24890907bcffb021d881b912df95eb21b4909058" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; の&lt;/a&gt;ソースバージョン。</target>
        </trans-unit>
        <trans-unit id="624b5778af810bf160af515f880565b0fb6e8f76" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; の&lt;/a&gt;ソースバージョン。用&lt;a href=&quot;../type/typemirror&quot;&gt;タイプ&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; メソッドが呼び出す&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。</target>
        </trans-unit>
        <trans-unit id="b7f26a466095168b7ee159d810b3e69036459a27" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; の&lt;/a&gt;ソースバージョン。</target>
        </trans-unit>
        <trans-unit id="8055d9c29189ba19de88b3c7c44fa4ab2a208b08" translate="yes" xml:space="preserve">
          <source>A visitor of types based on their &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. For &lt;a href=&quot;../type/typemirror&quot;&gt;types&lt;/a&gt;&lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; that may have more than one kind, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class delegate to the &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; method corresponding to the first argument's kind. The &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; methods call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">彼らに基づくタイプの訪問者の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のデフォルト動作の適切なと&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; の&lt;/a&gt;ソースバージョン。用&lt;a href=&quot;../type/typemirror&quot;&gt;タイプ&lt;/a&gt; &lt;code&gt;&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 複数の種類、持って &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのデリゲートのメソッド &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; 最初の引数の種類に応じた方法を。 &lt;code&gt;visit&lt;i&gt;XYZKind&lt;/i&gt;&lt;/code&gt; メソッドが呼び出す&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;する彼らの引数を渡す、 &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメータ。</target>
        </trans-unit>
        <trans-unit id="4a3d93fce445f340304018db3f5d1dd924d70bf2" translate="yes" xml:space="preserve">
          <source>A visitor of types, in the style of the visitor design pattern.</source>
          <target state="translated">タイプの訪問者、訪問者のデザインパターンのスタイル。</target>
        </trans-unit>
        <trans-unit id="95cb601bdc3b5075414907f7ffdddeff2efcdc3b" translate="yes" xml:space="preserve">
          <source>A visitor of types, in the style of the visitor design pattern. Classes implementing this interface are used to operate on a type when the kind of type is unknown at compile time. When a visitor is passed to a type's &lt;a href=&quot;typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method, the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method most applicable to that type is invoked.</source>
          <target state="translated">訪問者のデザインパターンのスタイルのタイプの訪問者。このインターフェイスを実装するクラスは、コンパイル時に型の種類が不明な場合に、その型を操作するために使用されます。訪問者が型の&lt;a href=&quot;typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに渡されると、その型に最も適切な &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 訪問&lt;i&gt;&lt;/i&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aefe47f662773fadbc52658f9ecb8355ae59e760" translate="yes" xml:space="preserve">
          <source>A void (no arguments) constructor, which creates an empty sorted map sorted according to the natural ordering of its keys.</source>
          <target state="translated">void (引数なし)のコンストラクタで、キーの自然な順序に従ってソートされた空のソートマップを作成します。</target>
        </trans-unit>
        <trans-unit id="ef96da9fc00f955033bcfddcf4bfc03d910b7fec" translate="yes" xml:space="preserve">
          <source>A watch key has a state. When initially created the key is said to be &lt;em&gt;ready&lt;/em&gt;. When an event is detected then the key is &lt;em&gt;signalled&lt;/em&gt; and queued so that it can be retrieved by invoking the watch service's &lt;a href=&quot;watchservice#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;watchservice#take--&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; methods. Once signalled, a key remains in this state until its &lt;a href=&quot;watchkey#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method is invoked to return the key to the ready state. Events detected while the key is in the signalled state are queued but do not cause the key to be re-queued for retrieval from the watch service. Events are retrieved by invoking the key's &lt;a href=&quot;watchkey#pollEvents--&quot;&gt;&lt;code&gt;pollEvents&lt;/code&gt;&lt;/a&gt; method. This method retrieves and removes all events accumulated for the object. When initially created, a watch key has no pending events. Typically events are retrieved when the key is in the signalled state leading to the following idiom:</source>
          <target state="translated">ウォッチキーには状態があります。最初に作成されたとき、キーは&lt;em&gt;準備&lt;/em&gt;が&lt;em&gt;できて&lt;/em&gt;いると言われます。イベントが検出されると、キーが&lt;em&gt;通知され&lt;/em&gt;てキューに入れられるため、監視サービスの&lt;a href=&quot;watchservice#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;watchservice#take--&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してキーを取得できます。通知されると、キーは、&lt;a href=&quot;watchkey#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されてキーを準備完了状態に戻すまで、この状態のままになります。キーがシグナル状態にある間に検出されたイベントはキューに入れられますが、監視サービスから取得するためにキーが再度キューに入れられることはありません。イベントは、キーの&lt;a href=&quot;watchkey#pollEvents--&quot;&gt; &lt;code&gt;pollEvents&lt;/code&gt; &lt;/a&gt;を呼び出すことによって取得されます方法。このメソッドは、オブジェクトに蓄積されたすべてのイベントを取得して削除します。最初に作成されたとき、監視キーには保留中のイベントはありません。通常、イベントは、キーがシグナル状態にあるときに取得され、次のイディオムにつながります。</target>
        </trans-unit>
        <trans-unit id="1732eaf655c716f70be6c471c9dcc915577de096" translate="yes" xml:space="preserve">
          <source>A watch key is created when a watchable object is registered with a watch service. The key remains &lt;a href=&quot;watchkey#isValid--&quot;&gt;&lt;code&gt;valid&lt;/code&gt;&lt;/a&gt; until:</source>
          <target state="translated">監視キーは、監視可能なオブジェクトが監視サービスに登録されるときに作成されます。キーは次の&lt;a href=&quot;watchkey#isValid--&quot;&gt; &lt;code&gt;valid&lt;/code&gt; &lt;/a&gt;まで有効です。</target>
        </trans-unit>
        <trans-unit id="66d47911700d1fb27fb187b7850579da3221a160" translate="yes" xml:space="preserve">
          <source>A watch key is valid upon creation and remains until it is cancelled, or its watch service is closed.</source>
          <target state="translated">ウォッチキーは作成時に有効で、キャンセルされるか、ウォッチサービスが終了するまで有効です。</target>
        </trans-unit>
        <trans-unit id="b81abc9ac87e5f962a54ed986af3255e26951ea9" translate="yes" xml:space="preserve">
          <source>A watch service is safe for use by multiple concurrent consumers. To ensure that only one consumer processes the events for a particular object at any time then care should be taken to ensure that the key's &lt;code&gt;reset&lt;/code&gt; method is only invoked after its events have been processed. The &lt;a href=&quot;watchservice#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method may be invoked at any time to close the service causing any threads waiting to retrieve keys, to throw &lt;code&gt;ClosedWatchServiceException&lt;/code&gt;.</source>
          <target state="translated">監視サービスは、複数の同時コンシューマが安全に使用できます。特定のオブジェクトのイベントを常に1つのコンシューマーのみが処理するようにするには、キーの &lt;code&gt;reset&lt;/code&gt; メソッドがそのイベントの処理後にのみ呼び出されるように注意する必要があります。&lt;a href=&quot;watchservice#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法はスローするように、キーを取得するために待機しているスレッドを引き起こしてサービスを閉鎖するために、いつでも呼び出すことができ &lt;code&gt;ClosedWatchServiceException&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="39291bcc6f30964e83b8c9dc052d942ade47c3cd" translate="yes" xml:space="preserve">
          <source>A watch service that &lt;em&gt;watches&lt;/em&gt; registered objects for changes and events.</source>
          <target state="translated">登録されたオブジェクトの変更とイベントを&lt;em&gt;監視&lt;/em&gt;する監視サービス。</target>
        </trans-unit>
        <trans-unit id="038de69f86f977453cf3f3cc79d9684afc1ee0aa" translate="yes" xml:space="preserve">
          <source>A watch service that &lt;em&gt;watches&lt;/em&gt; registered objects for changes and events. For example a file manager may use a watch service to monitor a directory for changes so that it can update its display of the list of files when files are created or deleted.</source>
          <target state="translated">登録されたオブジェクトの変更とイベントを&lt;em&gt;監視&lt;/em&gt;する監視サービス。たとえば、ファイルマネージャーは、監視サービスを使用してディレクトリの変更を監視し、ファイルが作成または削除されたときにファイルのリストの表示を更新できます。</target>
        </trans-unit>
        <trans-unit id="469284cfabdd53890baf7ac417da61eebdad99e5" translate="yes" xml:space="preserve">
          <source>A web server should return an HTTP 404 (Not Found) response when a requested resource does not exist. Sometimes, however, web servers are erroneously configured to return an HTTP 200 (OK) response along with a helpful HTML error page in such cases. This will cause a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; to be thrown when this class attempts to parse the HTML page as a provider-configuration file. The best solution to this problem is to fix the misconfigured web server to return the correct response code (HTTP 404) along with the HTML error page.</source>
          <target state="translated">リクエストされたリソースが存在しない場合、ウェブサーバーはHTTP 404（Not Found）レスポンスを返す必要があります。ただし、このような場合、Webサーバーが誤ってHTTP 200（OK）応答と役立つHTMLエラーページを返すように設定されていることがあります。これにより、このクラスがHTMLページをプロバイダー構成ファイルとして解析しようとしたときに、&lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt;がスローされます。この問題の最善の解決策は、誤って構成されたWebサーバーを修正して、HTMLエラーページとともに正しい応答コード（HTTP 404）を返すことです。</target>
        </trans-unit>
        <trans-unit id="53e6e335b8f72338e37336349c52061b4b8c3d97" translate="yes" xml:space="preserve">
          <source>A week is defined by:</source>
          <target state="translated">1週間の定義は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="70c33091963445ce91b96e8149efce44f2116672" translate="yes" xml:space="preserve">
          <source>A well-formed locale key has the form &lt;code&gt;[0-9a-zA-Z]{2}&lt;/code&gt;. A well-formed locale type has the form &lt;code&gt;&quot;&quot; | [0-9a-zA-Z]{3,8} ('-' [0-9a-zA-Z]{3,8})*&lt;/code&gt; (it can be empty, or a series of subtags 3-8 alphanums in length). A well-formed locale attribute has the form &lt;code&gt;[0-9a-zA-Z]{3,8}&lt;/code&gt; (it is a single subtag with the same form as a locale type subtag).</source>
          <target state="translated">整形式のロケールキーの形式は &lt;code&gt;[0-9a-zA-Z]{2}&lt;/code&gt; です。整形式のロケールタイプの形式は &lt;code&gt;&quot;&quot; | [0-9a-zA-Z]{3,8} ('-' [0-9a-zA-Z]{3,8})*&lt;/code&gt; （空、または一連のサブタグ3〜8の英数字長さ）。整形式のロケール属性の形式は &lt;code&gt;[0-9a-zA-Z]{3,8}&lt;/code&gt; です（これは、ロケールタイプのサブタグと同じ形式の単一のサブタグです）。</target>
        </trans-unit>
        <trans-unit id="ba9a1f8046602ef3fc5ba4e1f08de646ec6829cc" translate="yes" xml:space="preserve">
          <source>A whitespace character: &lt;code&gt;[ \t\n\x0B\f\r]&lt;/code&gt;</source>
          <target state="translated">空白文字： &lt;code&gt;[ \t\n\x0B\f\r]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3ffa0eff49beb603cb27ef3ab283ff05cd98006" translate="yes" xml:space="preserve">
          <source>A whitespace character: &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</source>
          <target state="translated">空白文字： &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="641b61af855025b3eba42d42f9e10f4a762fb02f" translate="yes" xml:space="preserve">
          <source>A whitespace character:&lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</source>
          <target state="translated">空白文字： &lt;code&gt;\p{IsWhite_Space}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a084736fb1263ee882ed0a1ac854e5692c2d6d" translate="yes" xml:space="preserve">
          <source>A wildcard may have its upper bound explicitly set by an &lt;code&gt;extends&lt;/code&gt; clause, its lower bound explicitly set by a &lt;code&gt;super&lt;/code&gt; clause, or neither (but not both).</source>
          <target state="translated">ワイルドカードは、 &lt;code&gt;extends&lt;/code&gt; 句によって明示的に設定された上限、 &lt;code&gt;super&lt;/code&gt; 句によって明示的に設定された下限、または両方（両方ではない）を持つことができます。</target>
        </trans-unit>
        <trans-unit id="94ce0d030c8468745fe9ef7cc745e90ab1dd0c6f" translate="yes" xml:space="preserve">
          <source>A wildcard type argument.</source>
          <target state="translated">ワイルドカード型の引数。</target>
        </trans-unit>
        <trans-unit id="63529e898a6b0c5caf8622738240b134fed23022" translate="yes" xml:space="preserve">
          <source>A word boundary</source>
          <target state="translated">単語の境界</target>
        </trans-unit>
        <trans-unit id="4bcd0152a738763da859829e6da73cdd90548cd4" translate="yes" xml:space="preserve">
          <source>A word character: &lt;code&gt;[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]&lt;/code&gt;</source>
          <target state="translated">単語文字： &lt;code&gt;[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aeb4f38f3d0810500e811c853f4eb95b4db74c18" translate="yes" xml:space="preserve">
          <source>A word character: &lt;code&gt;[a-zA-Z_0-9]&lt;/code&gt;</source>
          <target state="translated">単語文字： &lt;code&gt;[a-zA-Z_0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccc1a18d4562993e82e404b0551b7f8cc50c22c4" translate="yes" xml:space="preserve">
          <source>A word that matches &lt;code&gt;AM&lt;/code&gt;, ignoring case, is ignored (but the parse fails if an hour has not been recognized or is less than &lt;code&gt;1&lt;/code&gt; or greater than &lt;code&gt;12&lt;/code&gt;).</source>
          <target state="translated">一致する単語 &lt;code&gt;AM&lt;/code&gt; は、ケースを無視し、無視される（ただし、時間が認識未満であるれていない場合、解析は失敗 &lt;code&gt;1&lt;/code&gt; 又はより大きい &lt;code&gt;12&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="35310a6d848c08bea0cfeae4619e0fdc8cd4002f" translate="yes" xml:space="preserve">
          <source>A word that matches &lt;code&gt;PM&lt;/code&gt;, ignoring case, adds &lt;code&gt;12&lt;/code&gt; to the hour (but the parse fails if an hour has not been recognized or is less than &lt;code&gt;1&lt;/code&gt; or greater than &lt;code&gt;12&lt;/code&gt;).</source>
          <target state="translated">一致する単語 &lt;code&gt;PM&lt;/code&gt; は、ケースを無視して、追加 &lt;code&gt;12&lt;/code&gt; 時間まで（ただし、時間が認識または未満であるされていない場合、構文解析は失敗 &lt;code&gt;1&lt;/code&gt; またはより大きい &lt;code&gt;12&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="35a7a5ab7c179c9af52658078f9b7ae60774d63f" translate="yes" xml:space="preserve">
          <source>A wrapper for CertPathParameters.</source>
          <target state="translated">CertPathParametersのラッパーです。</target>
        </trans-unit>
        <trans-unit id="359776b71f1489b617b70679e40ba5f44ce654dc" translate="yes" xml:space="preserve">
          <source>A wrapper for CertPathParameters. This class is used to pass validation settings to CertPath based &lt;a href=&quot;trustmanager&quot;&gt;&lt;code&gt;TrustManager&lt;/code&gt;&lt;/a&gt;s using the &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;TrustManagerFactory.init()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">CertPathParametersのラッパー。このクラスは、&lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;TrustManagerFactory.init()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、検証設定をCertPathベースの&lt;a href=&quot;trustmanager&quot;&gt; &lt;code&gt;TrustManager&lt;/code&gt; &lt;/a&gt;に渡すために使用されます。</target>
        </trans-unit>
        <trans-unit id="b916eaa9e274acb5b9940f88f6f6e4a52fb6804a" translate="yes" xml:space="preserve">
          <source>A write to a &lt;code&gt;volatile&lt;/code&gt; field</source>
          <target state="translated">&lt;code&gt;volatile&lt;/code&gt; フィールドへの書き込み</target>
        </trans-unit>
        <trans-unit id="d8259e6d77fdc0cec17b7543dfe811545cff1a71" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image insertion may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">画像の挿入をサポートしないライターは、インデックスの境界チェックを実行せずに &lt;code&gt;false&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="45910823e1b155d300a4f28050e4eece7a321691" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image metadata replacement may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">画像メタデータ置換をサポートしないライターは、インデックスの境界チェックを実行せずに &lt;code&gt;false&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="bbb475cd29a1095762cb2d4ad48445ba58f78c53" translate="yes" xml:space="preserve">
          <source>A writer that does not support any image removal may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">画像の削除をサポートしていないライターは、インデックスの境界チェックを実行せずに &lt;code&gt;false&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="6367042c77c0de87991d058c5b2f3bf56fcbd33e" translate="yes" xml:space="preserve">
          <source>A writer that does not support any pixel replacement may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">ピクセル置換をサポートしないライターは、インデックスの境界チェックを実行せずに &lt;code&gt;false&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="a7f9dabbe1007e9384cde03cc697500375069f62" translate="yes" xml:space="preserve">
          <source>A writer that does not support insertion of empty images may return &lt;code&gt;false&lt;/code&gt; without performing bounds checking on the index.</source>
          <target state="translated">空の画像の挿入をサポートしないライターは、インデックスの境界チェックを実行せずに &lt;code&gt;false&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="666e3178ad2146a658df19bed1a0a803d4ffdeea" translate="yes" xml:space="preserve">
          <source>A year</source>
          <target state="translated">一年</target>
        </trans-unit>
        <trans-unit id="84c7423f7263edd61ddf383b50bd8a49daada7d8" translate="yes" xml:space="preserve">
          <source>A year in the ISO-8601 calendar system, such as &lt;code&gt;2007&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007&lt;/code&gt; など、ISO-8601カレンダーシステムでの1 年。</target>
        </trans-unit>
        <trans-unit id="51df692a87c748ff8e94febb4fb6252608c34f04" translate="yes" xml:space="preserve">
          <source>A year-month in the ISO-8601 calendar system, such as &lt;code&gt;2007-12&lt;/code&gt;.</source>
          <target state="translated">ISO-8601カレンダーシステムでの年月（ &lt;code&gt;2007-12&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="a744440bc8fce008a3988c636038355305832aac" translate="yes" xml:space="preserve">
          <source>A zero period has the value zero for the years, months and days units.</source>
          <target state="translated">ゼロ期間は、年、月、日の単位で値がゼロになります。</target>
        </trans-unit>
        <trans-unit id="e88e144d60989a829e3661bcfd4b898e3e832b2d" translate="yes" xml:space="preserve">
          <source>A.e</source>
          <target state="translated">A.e</target>
        </trans-unit>
        <trans-unit id="b8c4ed32039755356ab5eaf0878516ef63ab96f8" translate="yes" xml:space="preserve">
          <source>A0</source>
          <target state="translated">A0</target>
        </trans-unit>
        <trans-unit id="458188d80a319f5f123df91e5eb4f45748bfde53" translate="yes" xml:space="preserve">
          <source>A0 size.</source>
          <target state="translated">A0サイズ。</target>
        </trans-unit>
        <trans-unit id="1ffd4ba3eb9ffadf4db3c3ff4c1bbcf94a64cc59" translate="yes" xml:space="preserve">
          <source>A1</source>
          <target state="translated">A1</target>
        </trans-unit>
        <trans-unit id="501709b063bd57a62a69ae849e007d730d5b47a1" translate="yes" xml:space="preserve">
          <source>A1 size.</source>
          <target state="translated">A1サイズ。</target>
        </trans-unit>
        <trans-unit id="6e39d6b2c00645551860ff90fe750984a0b3ae38" translate="yes" xml:space="preserve">
          <source>A10</source>
          <target state="translated">A10</target>
        </trans-unit>
        <trans-unit id="0584732afedaf9a1d6cb63f3c64ccf71732f951e" translate="yes" xml:space="preserve">
          <source>A10 size.</source>
          <target state="translated">A10サイズ。</target>
        </trans-unit>
        <trans-unit id="b62a4d0e1ffcf6bec6f8cf548d49a2b469943e34" translate="yes" xml:space="preserve">
          <source>A2</source>
          <target state="translated">A2</target>
        </trans-unit>
        <trans-unit id="a71b2f6624ec135aa1e4fc79358273596801e271" translate="yes" xml:space="preserve">
          <source>A2 size.</source>
          <target state="translated">A2サイズ。</target>
        </trans-unit>
        <trans-unit id="842f4ac15c5e237ca4c7a77d13e8756cefaf9898" translate="yes" xml:space="preserve">
          <source>A3</source>
          <target state="translated">A3</target>
        </trans-unit>
        <trans-unit id="f0c37868ee46f0593e8d8c00ab6f9ccaacaffe6e" translate="yes" xml:space="preserve">
          <source>A3 size.</source>
          <target state="translated">A3サイズです。</target>
        </trans-unit>
        <trans-unit id="de69a629f9c30af3f481110f0f42a7c0c5efacfb" translate="yes" xml:space="preserve">
          <source>A4</source>
          <target state="translated">A4</target>
        </trans-unit>
        <trans-unit id="d1ff5495752a2e238ee0fd885a67092cd8fa614e" translate="yes" xml:space="preserve">
          <source>A4 size.</source>
          <target state="translated">A4サイズ。</target>
        </trans-unit>
        <trans-unit id="9a81a0239ba9cea92791c32132b9590ed2eb07c0" translate="yes" xml:space="preserve">
          <source>A4 transparency.</source>
          <target state="translated">A4透明。</target>
        </trans-unit>
        <trans-unit id="c40e0e23516f1d6a0739aeebb738bbc8495a5e08" translate="yes" xml:space="preserve">
          <source>A5</source>
          <target state="translated">A5</target>
        </trans-unit>
        <trans-unit id="f5fb29b4cbc20c0743a1ab26126378e955f956b5" translate="yes" xml:space="preserve">
          <source>A5 size.</source>
          <target state="translated">A5サイズ。</target>
        </trans-unit>
        <trans-unit id="65487dce049502313e51550ad57a1a5fbd574a24" translate="yes" xml:space="preserve">
          <source>A6</source>
          <target state="translated">A6</target>
        </trans-unit>
        <trans-unit id="f13280b9c69afeac47766aaea42a7c9f6b16a513" translate="yes" xml:space="preserve">
          <source>A6 size.</source>
          <target state="translated">A6サイズ。</target>
        </trans-unit>
        <trans-unit id="b33edd8ff267441c1fb78143fc091c53e86ee211" translate="yes" xml:space="preserve">
          <source>A7</source>
          <target state="translated">A7</target>
        </trans-unit>
        <trans-unit id="9ae3af5d2f7d35b9ddfa94d4a1cb89c5727572c6" translate="yes" xml:space="preserve">
          <source>A7 size.</source>
          <target state="translated">A7サイズ。</target>
        </trans-unit>
        <trans-unit id="099e1f1eb47d200538412efd1b5980ecdf3551ed" translate="yes" xml:space="preserve">
          <source>A8</source>
          <target state="translated">A8</target>
        </trans-unit>
        <trans-unit id="3384b66f19d6fe02f1b8049d042021917373ac1b" translate="yes" xml:space="preserve">
          <source>A8 size.</source>
          <target state="translated">A8サイズ。</target>
        </trans-unit>
        <trans-unit id="b598e0c328fdf3a207a7d03c5ad6925fde311003" translate="yes" xml:space="preserve">
          <source>A9</source>
          <target state="translated">A9</target>
        </trans-unit>
        <trans-unit id="d66b4e95f7000b9c89c26e14dbc5664328868498" translate="yes" xml:space="preserve">
          <source>A9 size.</source>
          <target state="translated">A9サイズ。</target>
        </trans-unit>
        <trans-unit id="b5363e9c8712ef90435ed05974a46637c81d0b17" translate="yes" xml:space="preserve">
          <source>AA_COMPROMISE</source>
          <target state="translated">AA_COMPROMISE</target>
        </trans-unit>
        <trans-unit id="4e0145ebbcfefd89f4ce32e5a5dbc6d146d44670" translate="yes" xml:space="preserve">
          <source>ABORTED</source>
          <target state="translated">ABORTED</target>
        </trans-unit>
        <trans-unit id="78897769890adaae1cf98c64421065dac6e25bfa" translate="yes" xml:space="preserve">
          <source>ABORTED_BY_SYSTEM</source>
          <target state="translated">ABORTED_BY_SYSTEM</target>
        </trans-unit>
        <trans-unit id="e82ed4276d157806565f101be0b8ad19d85c344b" translate="yes" xml:space="preserve">
          <source>ABOUT_UIROLE</source>
          <target state="translated">ABOUT_UIROLE</target>
        </trans-unit>
        <trans-unit id="e29c6cbd184a79deb8c1a9f477b3e3ad1f42e851" translate="yes" xml:space="preserve">
          <source>ABSTRACT</source>
          <target state="translated">ABSTRACT</target>
        </trans-unit>
        <trans-unit id="995783128d94a67594a095263770a525a3d149b9" translate="yes" xml:space="preserve">
          <source>ACCEPTING_JOBS</source>
          <target state="translated">ACCEPTING_JOBS</target>
        </trans-unit>
        <trans-unit id="caa738e173e88876ec8e5c98a4b0144becdab1ad" translate="yes" xml:space="preserve">
          <source>ACCEPT_ALL</source>
          <target state="translated">ACCEPT_ALL</target>
        </trans-unit>
        <trans-unit id="79a0c07a94fe412d90b64af18f2474ce4476d731" translate="yes" xml:space="preserve">
          <source>ACCEPT_NONE</source>
          <target state="translated">ACCEPT_NONE</target>
        </trans-unit>
        <trans-unit id="9d141fb1814c3ea6fc8ee01b0451c42cb98963f4" translate="yes" xml:space="preserve">
          <source>ACCEPT_ORIGINAL_SERVER</source>
          <target state="translated">ACCEPT_ORIGINAL_SERVER</target>
        </trans-unit>
        <trans-unit id="7300f5c4baf1b21ca95ca47513a23926510644ba" translate="yes" xml:space="preserve">
          <source>ACL entries are created using an associated &lt;a href=&quot;aclentry.builder&quot;&gt;&lt;code&gt;AclEntry.Builder&lt;/code&gt;&lt;/a&gt; object by invoking its &lt;a href=&quot;aclentry.builder#build--&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ACLエントリは、&lt;a href=&quot;aclentry.builder#build--&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、関連する&lt;a href=&quot;aclentry.builder&quot;&gt; &lt;code&gt;AclEntry.Builder&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="b5415d299711ebc171cab14f6921f904d758e0bc" translate="yes" xml:space="preserve">
          <source>ACL entries are immutable and are safe for use by multiple concurrent threads.</source>
          <target state="translated">ACL エントリは不変であり、複数の並行スレッドで使用しても安全です。</target>
        </trans-unit>
        <trans-unit id="e67d0e2533c23415f32bd8363872bbe789d31012" translate="yes" xml:space="preserve">
          <source>ACLs are used to specify access rights to file system objects. An ACL is an ordered list of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;access-control-entries&lt;/code&gt;&lt;/a&gt;, each specifying a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and the level of access for that user principal. This file attribute view defines the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; methods to read and write ACLs based on the ACL model specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. This file attribute view is intended for file system implementations that support the NFSv4 ACL model or have a &lt;em&gt;well-defined&lt;/em&gt; mapping between the NFSv4 ACL model and the ACL model used by the file system. The details of such mapping are implementation dependent and are therefore unspecified.</source>
          <target state="translated">ACLは、ファイルシステムオブジェクトへのアクセス権を指定するために使用されます。 ACLは&lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;access-control-entries&lt;/code&gt; の&lt;/a&gt;順序付きリストで、それぞれが&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;とそのユーザープリンシパルのアクセスレベルを指定します。このファイル属性ビューを定義&lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;、そして&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt; ACLモデルに基づいてACLを読み書きする方法がで指定された&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：ネットワーク・ファイル・システム（NFS）バージョン4プロトコル&lt;/i&gt;&lt;/a&gt;。このファイル属性ビューは、NFSv4 ACLモデルをサポートするか、NFSv4 ACLモデルとファイルシステムで使用されるACLモデルの間の&lt;em&gt;明確に定義された&lt;/em&gt;マッピングを持つファイルシステム実装を対象としています。このようなマッピングの詳細は実装に依存するため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="26a4a0c6656568c29d50fbb334cad96a542d940a" translate="yes" xml:space="preserve">
          <source>ACT - Australia/Darwin</source>
          <target state="translated">ACT-オーストラリア/ダーウィン</target>
        </trans-unit>
        <trans-unit id="2b9f1cf5c4d33807129af3dcb41af0a491f4cda7" translate="yes" xml:space="preserve">
          <source>ACTION</source>
          <target state="translated">ACTION</target>
        </trans-unit>
        <trans-unit id="04e015cde86c5c39582d9ae4da3c0220ab2e76a9" translate="yes" xml:space="preserve">
          <source>ACTION_INFO</source>
          <target state="translated">ACTION_INFO</target>
        </trans-unit>
        <trans-unit id="cd0e8af9b9470e3119d3ce9a7b437c8bb7c270e2" translate="yes" xml:space="preserve">
          <source>ACTIVE_SENSING</source>
          <target state="translated">ACTIVE_SENSING</target>
        </trans-unit>
        <trans-unit id="6d95c1847219c633950f8f1ceca9761315abfc19" translate="yes" xml:space="preserve">
          <source>AD</source>
          <target state="translated">AD</target>
        </trans-unit>
        <trans-unit id="1d8cbddf0d21e774deb59574ec71608e2d4d74e5" translate="yes" xml:space="preserve">
          <source>ADD_ATTRIBUTE</source>
          <target state="translated">ADD_ATTRIBUTE</target>
        </trans-unit>
        <trans-unit id="0945bdd4fcf18aeaa6a0633c7b7b76e709061a66" translate="yes" xml:space="preserve">
          <source>ADD_FILE</source>
          <target state="translated">ADD_FILE</target>
        </trans-unit>
        <trans-unit id="06f5056ca9ed1f482fe6f6b5cbee02f5b55f6488" translate="yes" xml:space="preserve">
          <source>ADD_SUBDIRECTORY</source>
          <target state="translated">ADD_SUBDIRECTORY</target>
        </trans-unit>
        <trans-unit id="445e0d25fa4203c13f5bf8ff87d875bcc80379ca" translate="yes" xml:space="preserve">
          <source>ADMIN_UIROLE</source>
          <target state="translated">ADMIN_UIROLE</target>
        </trans-unit>
        <trans-unit id="984be3fb8fdd9dbceac508953f044e27b461c73a" translate="yes" xml:space="preserve">
          <source>AEAD modes such as GCM/CCM perform all AAD authenticity calculations before starting the ciphertext authenticity calculations. To avoid implementations having to internally buffer ciphertext, all AAD data must be supplied to GCM/CCM implementations (via the &lt;code&gt;updateAAD&lt;/code&gt; methods) &lt;b&gt;before&lt;/b&gt; the ciphertext is processed (via the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt; methods).</source>
          <target state="translated">GCM / CCMなどのAEADモードは、暗号文の信頼性計算を開始する前に、すべてのAAD信頼性計算を実行します。実装が暗号文をバッファリングする必要がないように&lt;b&gt;するに&lt;/b&gt;は、暗号文が（ &lt;code&gt;update&lt;/code&gt; および &lt;code&gt;doFinal&lt;/code&gt; メソッドを介して）処理される&lt;b&gt;前に&lt;/b&gt;、すべてのAADデータを（ &lt;code&gt;updateAAD&lt;/code&gt; メソッドを介して）GCM / CCM実装に提供する必要があります。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="39abe41a2b86194e96962a5242145e3d715c4687" translate="yes" xml:space="preserve">
          <source>AEADBadTagException</source>
          <target state="translated">AEADBadTagException</target>
        </trans-unit>
        <trans-unit id="c678019122e64df66a311cc12aa4e6f1c8390e1e" translate="yes" xml:space="preserve">
          <source>AEGEAN_NUMBERS</source>
          <target state="translated">AEGEAN_NUMBERS</target>
        </trans-unit>
        <trans-unit id="0f6bcc5a998f37d080f93b7f1a3d186f32348e67" translate="yes" xml:space="preserve">
          <source>AET - Australia/Sydney</source>
          <target state="translated">AET-オーストラリア/シドニー</target>
        </trans-unit>
        <trans-unit id="187ac8a3f318da00ff37f1e05544befe533d1b2b" translate="yes" xml:space="preserve">
          <source>AFFILIATION_CHANGED</source>
          <target state="translated">AFFILIATION_CHANGED</target>
        </trans-unit>
        <trans-unit id="742e262ca50b0ea6eb171d2f89f987ddb88811d2" translate="yes" xml:space="preserve">
          <source>AGT - America/Argentina/Buenos_Aires</source>
          <target state="translated">AGT-アメリカ/アルゼンチン/ブエノスアイレス</target>
        </trans-unit>
        <trans-unit id="bd4b01946d29a04b84f9d1306289b7687d01b8c2" translate="yes" xml:space="preserve">
          <source>AH</source>
          <target state="translated">AH</target>
        </trans-unit>
        <trans-unit id="daeda9ad465a14cc21e5bd3b445d1168c6219a95" translate="yes" xml:space="preserve">
          <source>AIFC</source>
          <target state="translated">AIFC</target>
        </trans-unit>
        <trans-unit id="cc4b343bcef1684847873e6e496f1fbaea6f94ad" translate="yes" xml:space="preserve">
          <source>AIFF</source>
          <target state="translated">AIFF</target>
        </trans-unit>
        <trans-unit id="614a5cdcdeb3920bff738f0cf610cf16c16c53b7" translate="yes" xml:space="preserve">
          <source>ALARM</source>
          <target state="translated">ALARM</target>
        </trans-unit>
        <trans-unit id="126224f8d7ba7b69069f78068fff36921ad6dd82" translate="yes" xml:space="preserve">
          <source>ALAW</source>
          <target state="translated">ALAW</target>
        </trans-unit>
        <trans-unit id="3c21229b70752c55217a3cdccd2dafe54e79a9d0" translate="yes" xml:space="preserve">
          <source>ALCHEMICAL_SYMBOLS</source>
          <target state="translated">ALCHEMICAL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="6b36b817195a01ed19e0c2adf4cc66e63fdec6c0" translate="yes" xml:space="preserve">
          <source>ALGORITHM_CONSTRAINED</source>
          <target state="translated">ALGORITHM_CONSTRAINED</target>
        </trans-unit>
        <trans-unit id="e55e07a9fade04a6bee34fd5c03cc83c9560596b" translate="yes" xml:space="preserve">
          <source>ALIGNED_DAY_OF_WEEK_IN_MONTH</source>
          <target state="translated">ALIGNED_DAY_OF_WEEK_IN_MONTH</target>
        </trans-unit>
        <trans-unit id="f0c1371e72dc6c0567f01d497300746bbcf0fd98" translate="yes" xml:space="preserve">
          <source>ALIGNED_DAY_OF_WEEK_IN_YEAR</source>
          <target state="translated">ALIGNED_DAY_OF_WEEK_IN_YEAR</target>
        </trans-unit>
        <trans-unit id="f24a0631bb4495ceb294befef5f24e36896ed724" translate="yes" xml:space="preserve">
          <source>ALIGNED_WEEK_OF_MONTH</source>
          <target state="translated">ALIGNED_WEEK_OF_MONTH</target>
        </trans-unit>
        <trans-unit id="1f1e368a9d754c6ebf15d413e7f218ae3733592a" translate="yes" xml:space="preserve">
          <source>ALIGNED_WEEK_OF_YEAR</source>
          <target state="translated">ALIGNED_WEEK_OF_YEAR</target>
        </trans-unit>
        <trans-unit id="6b42874e3cd20771d93096ec5ce36307a1f2ba14" translate="yes" xml:space="preserve">
          <source>ALL</source>
          <target state="translated">ALL</target>
        </trans-unit>
        <trans-unit id="116e128f4e0dd980dab5fb341cf6a33345f51815" translate="yes" xml:space="preserve">
          <source>ALL indicates that all messages should be logged. This level is initialized to &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">ALLは、すべてのメッセージをログに記録する必要があることを示します。このレベルは &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="2b95120ccbbd332ef01603e165785d73fc537d8a" translate="yes" xml:space="preserve">
          <source>ALLOW</source>
          <target state="translated">ALLOW</target>
        </trans-unit>
        <trans-unit id="d6ea590cb99baaf8cd9f2a54d3b813ea18594a95" translate="yes" xml:space="preserve">
          <source>ALLOWED_CLASSNAMES</source>
          <target state="translated">ALLOWED_CLASSNAMES</target>
        </trans-unit>
        <trans-unit id="4b470682767c5719eb74ad2559fdfbb7bdcb3b01" translate="yes" xml:space="preserve">
          <source>ALLOWED_CLASSNAMES_LIST</source>
          <target state="translated">ALLOWED_CLASSNAMES_LIST</target>
        </trans-unit>
        <trans-unit id="791733d60ef39d52c2d80b0c10eb431734c89c19" translate="yes" xml:space="preserve">
          <source>ALLOW_UNASSIGNED</source>
          <target state="translated">ALLOW_UNASSIGNED</target>
        </trans-unit>
        <trans-unit id="7efb0141b0d687d1d02d03ce47f0484690305979" translate="yes" xml:space="preserve">
          <source>ALL_STYLES</source>
          <target state="translated">ALL_STYLES</target>
        </trans-unit>
        <trans-unit id="93bb319c8a48fa8e7f1f6df21ea94faf3e7029c4" translate="yes" xml:space="preserve">
          <source>ALPHABETIC_PRESENTATION_FORMS</source>
          <target state="translated">ALPHABETIC_PRESENTATION_FORMS</target>
        </trans-unit>
        <trans-unit id="bff37fd419e970ae0915434d825066cffbe1a293" translate="yes" xml:space="preserve">
          <source>ALTERNATE</source>
          <target state="translated">ALTERNATE</target>
        </trans-unit>
        <trans-unit id="ae0ecf3287dbfbb668b86fe771af6cf210ce9334" translate="yes" xml:space="preserve">
          <source>ALWAYS</source>
          <target state="translated">ALWAYS</target>
        </trans-unit>
        <trans-unit id="80d305c58f97edfae92a3627f5a66d9bef4d8d46" translate="yes" xml:space="preserve">
          <source>AM</source>
          <target state="translated">AM</target>
        </trans-unit>
        <trans-unit id="73444bf257d54bff604a6903f4825e7824851c2c" translate="yes" xml:space="preserve">
          <source>AMPM_OF_DAY</source>
          <target state="translated">AMPM_OF_DAY</target>
        </trans-unit>
        <trans-unit id="92d9e7ee1347f2e5ad9402e1f6d4a10966e83887" translate="yes" xml:space="preserve">
          <source>AM_PM</source>
          <target state="translated">AM_PM</target>
        </trans-unit>
        <trans-unit id="ce48f748ef72ed3327f39a556c1ef059edc84483" translate="yes" xml:space="preserve">
          <source>AM_PM_FIELD</source>
          <target state="translated">AM_PM_FIELD</target>
        </trans-unit>
        <trans-unit id="bf6477cc0a8d3d89aa94d68f54ee52c6159dfd51" translate="yes" xml:space="preserve">
          <source>ANCIENT_GREEK_MUSICAL_NOTATION</source>
          <target state="translated">ANCIENT_GREEK_MUSICAL_NOTATION</target>
        </trans-unit>
        <trans-unit id="09ae9da7cd39117b8e76350b9d4dad449817286e" translate="yes" xml:space="preserve">
          <source>ANCIENT_GREEK_NUMBERS</source>
          <target state="translated">ANCIENT_GREEK_NUMBERS</target>
        </trans-unit>
        <trans-unit id="93147d1c64ef65fc82d1491e103823357d07864f" translate="yes" xml:space="preserve">
          <source>ANCIENT_SYMBOLS</source>
          <target state="translated">ANCIENT_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="c2f934cb8cab6c1b3af0d4f2fdd824eabafb6bf4" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">AND</target>
        </trans-unit>
        <trans-unit id="c5c284397a439aabcf52dd54d3120baa24eab2e0" translate="yes" xml:space="preserve">
          <source>ANNOTATION_PROCESSOR_PATH</source>
          <target state="translated">ANNOTATION_PROCESSOR_PATH</target>
        </trans-unit>
        <trans-unit id="80599450acc043eda2c6d7977f2f5f31df3001ab" translate="yes" xml:space="preserve">
          <source>ANNOTATION_TYPE</source>
          <target state="translated">ANNOTATION_TYPE</target>
        </trans-unit>
        <trans-unit id="9b2473d04fc51348aa20d1fedf5e629c43a0ada9" translate="yes" xml:space="preserve">
          <source>ANONYMOUS</source>
          <target state="translated">ANONYMOUS</target>
        </trans-unit>
        <trans-unit id="83a7df38b639e6ee13f1380269c668b8f2899302" translate="yes" xml:space="preserve">
          <source>API Note:</source>
          <target state="translated">API Note.</target>
        </trans-unit>
        <trans-unit id="025e07020e93e25579c1a9621d736dca0c1f26de" translate="yes" xml:space="preserve">
          <source>APPEND</source>
          <target state="translated">APPEND</target>
        </trans-unit>
        <trans-unit id="6c6a88b67a60e27d395f8f99eb3359773c0852ee" translate="yes" xml:space="preserve">
          <source>APPEND_DATA</source>
          <target state="translated">APPEND_DATA</target>
        </trans-unit>
        <trans-unit id="66cb73900908daf9646bfc07cc6175194c4dacf5" translate="yes" xml:space="preserve">
          <source>APPLET</source>
          <target state="translated">APPLET</target>
        </trans-unit>
        <trans-unit id="1842ed16b292822d88f1a661995a7a566df5ea6b" translate="yes" xml:space="preserve">
          <source>APPLICATION</source>
          <target state="translated">APPLICATION</target>
        </trans-unit>
        <trans-unit id="6c88a2401cf34241cc9e89158a211a897eee675a" translate="yes" xml:space="preserve">
          <source>APPLY_REVERB</source>
          <target state="translated">APPLY_REVERB</target>
        </trans-unit>
        <trans-unit id="944df80ebcd49d17fa62a8e0c860ab9d9874eabf" translate="yes" xml:space="preserve">
          <source>APRIL</source>
          <target state="translated">APRIL</target>
        </trans-unit>
        <trans-unit id="03d133da93012831796ffc8ff5b4255844c75565" translate="yes" xml:space="preserve">
          <source>ARABIC</source>
          <target state="translated">ARABIC</target>
        </trans-unit>
        <trans-unit id="338ad4cb8f40840fc1bbac843471c9ec0dbfd611" translate="yes" xml:space="preserve">
          <source>ARABIC_EXTENDED_A</source>
          <target state="translated">ARABIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="ef45a04690c6c58f1b1871b5f4adfb242b020a14" translate="yes" xml:space="preserve">
          <source>ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</source>
          <target state="translated">ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="aa56cc2282489e08bbff6cb4195752bf0870e5e5" translate="yes" xml:space="preserve">
          <source>ARABIC_PRESENTATION_FORMS_A</source>
          <target state="translated">ARABIC_PRESENTATION_FORMS_A</target>
        </trans-unit>
        <trans-unit id="d2985f63688dd9c0585c7524f0d046d821ebf077" translate="yes" xml:space="preserve">
          <source>ARABIC_PRESENTATION_FORMS_B</source>
          <target state="translated">ARABIC_PRESENTATION_FORMS_B</target>
        </trans-unit>
        <trans-unit id="22067cbc08bc5f601aaafc28f82b8cdda2e32266" translate="yes" xml:space="preserve">
          <source>ARABIC_SUPPLEMENT</source>
          <target state="translated">ARABIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="d2a8b4f2260ca5da9545853c3c2e9c5c0777a776" translate="yes" xml:space="preserve">
          <source>ARGUMENT</source>
          <target state="translated">ARGUMENT</target>
        </trans-unit>
        <trans-unit id="3669288cabd0e6c21385584c21cb897733b8578f" translate="yes" xml:space="preserve">
          <source>ARGV</source>
          <target state="translated">ARGV</target>
        </trans-unit>
        <trans-unit id="ceefe3be9431dff6aaeff5d30e8fb1ec45650490" translate="yes" xml:space="preserve">
          <source>ARMENIAN</source>
          <target state="translated">ARMENIAN</target>
        </trans-unit>
        <trans-unit id="3e36d1ca2adf5962801ee67544d6b213480d0743" translate="yes" xml:space="preserve">
          <source>ARRAY</source>
          <target state="translated">ARRAY</target>
        </trans-unit>
        <trans-unit id="0e0c0cbc44449ce442e1ae9b0a4b121fc6a92c02" translate="yes" xml:space="preserve">
          <source>ARROWS</source>
          <target state="translated">ARROWS</target>
        </trans-unit>
        <trans-unit id="c9e98c1bd5797a7ecef9ab5cc0ab35d8a3e9cf22" translate="yes" xml:space="preserve">
          <source>ART - Africa/Cairo</source>
          <target state="translated">アート-アフリカ/カイロ</target>
        </trans-unit>
        <trans-unit id="c4fc963a07655bac4da89f1c8d668e8017556757" translate="yes" xml:space="preserve">
          <source>AST - America/Anchorage</source>
          <target state="translated">AST-アメリカ/アンカレッジ</target>
        </trans-unit>
        <trans-unit id="031fd11ba8734ab304116a023b5216306b246bee" translate="yes" xml:space="preserve">
          <source>AT</source>
          <target state="translated">AT</target>
        </trans-unit>
        <trans-unit id="8f375509317e9fbcc7473cbee693b57706fb8f8e" translate="yes" xml:space="preserve">
          <source>ATC</source>
          <target state="translated">ATC</target>
        </trans-unit>
        <trans-unit id="f0a6a916e4276d6b3c3814bc2eb873e2d74b8c73" translate="yes" xml:space="preserve">
          <source>ATOMIC_MOVE</source>
          <target state="translated">ATOMIC_MOVE</target>
        </trans-unit>
        <trans-unit id="2c0668b4119a28d3b8d21f376c9df47716f9bf7a" translate="yes" xml:space="preserve">
          <source>ATTEMPTED</source>
          <target state="translated">ATTEMPTED</target>
        </trans-unit>
        <trans-unit id="98130b2a4c8794cbbed43a65aa471d22b8ced399" translate="yes" xml:space="preserve">
          <source>ATTRIBUTE_CHANGE</source>
          <target state="translated">ATTRIBUTE_CHANGE</target>
        </trans-unit>
        <trans-unit id="acdf41735f790252eae39bee834dcad0de587e3d" translate="yes" xml:space="preserve">
          <source>AU</source>
          <target state="translated">AU</target>
        </trans-unit>
        <trans-unit id="5c762e0265b19d486d4dd015510bbc3af061410f" translate="yes" xml:space="preserve">
          <source>AUDIT</source>
          <target state="translated">AUDIT</target>
        </trans-unit>
        <trans-unit id="9754d6dfc639d295f5bdd4f6cc70159ea0c48e8a" translate="yes" xml:space="preserve">
          <source>AUGUST</source>
          <target state="translated">AUGUST</target>
        </trans-unit>
        <trans-unit id="724540f5024f1e2f23a4bb75e59c8f97f6addf06" translate="yes" xml:space="preserve">
          <source>AUTHENTICATOR</source>
          <target state="translated">AUTHENTICATOR</target>
        </trans-unit>
        <trans-unit id="f7f4ecb9c05704153e4b3b388e319183a16df5a3" translate="yes" xml:space="preserve">
          <source>AUTHORITATIVE</source>
          <target state="translated">AUTHORITATIVE</target>
        </trans-unit>
        <trans-unit id="7833ba886675cf3ba0c45e4d9fcfadfecd29d4ac" translate="yes" xml:space="preserve">
          <source>AUTOSELECT_FILTERING</source>
          <target state="translated">AUTOSELECT_FILTERING</target>
        </trans-unit>
        <trans-unit id="75d392492121ee3f2c8d8d5a60b325566760716c" translate="yes" xml:space="preserve">
          <source>AUTOSENSE</source>
          <target state="translated">AUTOSENSE</target>
        </trans-unit>
        <trans-unit id="e9e60c6e9f0996b02aefc6bdeb1fa2bbc3634c71" translate="yes" xml:space="preserve">
          <source>AUX_RETURN</source>
          <target state="translated">AUX_RETURN</target>
        </trans-unit>
        <trans-unit id="1871fa6627fad1d90847379595b4ba53e91ac32c" translate="yes" xml:space="preserve">
          <source>AUX_SEND</source>
          <target state="translated">AUX_SEND</target>
        </trans-unit>
        <trans-unit id="9d71368fe0bb53b1a094b2ee1f09f8b8009f6c5b" translate="yes" xml:space="preserve">
          <source>AVESTAN</source>
          <target state="translated">AVESTAN</target>
        </trans-unit>
        <trans-unit id="90b84a7343843ece0c502b19c94f6829901b2006" translate="yes" xml:space="preserve">
          <source>Ability to add an existing file to a directory. This is sometimes known as creating a link, or hard link.</source>
          <target state="translated">既存のファイルをディレクトリに追加する機能。これは、リンクの作成、またはハードリンクとして知られていることがあります。</target>
        </trans-unit>
        <trans-unit id="573e894a7fc920c54b89125f9468b364f2b78886" translate="yes" xml:space="preserve">
          <source>Ability to control the runtime characteristics of the Java virtual machine, for example, enabling and disabling the verbose output for the class loading or memory system, setting the threshold of a memory pool, and enabling and disabling the thread contention monitoring support. Some actions controlled by this permission can disclose information about the running application, like the -verbose:class flag.</source>
          <target state="translated">Java 仮想マシンの実行時特性を制御する機能。例えば、クラスの読み込みやメモリシステムの冗長出力の有効化と無効化、メモリプールのしきい値の設定、スレッド競合監視サポートの有効化と無効化などです。この許可によって制御されるいくつかのアクションは、-verbose:class フラグのように、実行中のアプリケーションに関する情報を開示することができます。</target>
        </trans-unit>
        <trans-unit id="03c7f50a69f5ba45cbf411d488ab5d629d03b2a1" translate="yes" xml:space="preserve">
          <source>Ability to create symbolic links.</source>
          <target state="translated">シンボリックリンクを作成する能力</target>
        </trans-unit>
        <trans-unit id="eff8ce592848a560f89e2cf1520ddb6e43d53e79" translate="yes" xml:space="preserve">
          <source>Ability to retrieve runtime information about the Java virtual machine such as thread stack trace, a list of all loaded class names, and input arguments to the Java virtual machine.</source>
          <target state="translated">スレッドスタックトレース、ロードされたすべてのクラス名のリスト、Java仮想マシンへの入力引数など、Java仮想マシンに関するランタイム情報を取得する機能。</target>
        </trans-unit>
        <trans-unit id="abfb4abf51021868e0f1a08bf350656a33c58b3c" translate="yes" xml:space="preserve">
          <source>AbortPolicy</source>
          <target state="translated">AbortPolicy</target>
        </trans-unit>
        <trans-unit id="eeb2c202054f0550cd477d4d6591b6d6a0a84d77" translate="yes" xml:space="preserve">
          <source>Aborts the attempt to cache the response. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be abandoned.</source>
          <target state="translated">レスポンスのキャッシュの試みを中止します。レスポンスの読み込み中やキャッシュへの書き込み中に IOException が発生した場合、現在のキャッシュストア操作は中止されます。</target>
        </trans-unit>
        <trans-unit id="a6c5f081b3addee364af1c8cdb84853f49dc8e07" translate="yes" xml:space="preserve">
          <source>Absolute</source>
          <target state="translated">Absolute</target>
        </trans-unit>
        <trans-unit id="2aeab4c203a69538a18c2c1e91f75d70cb98ce42" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;bytebuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#put-byte-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single bytes;</source>
          <target state="translated">1バイトを読み書きする絶対および相対の&lt;a href=&quot;bytebuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bytebuffer#put-byte-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="fac3a35b5c460faca0dd716a922e9128260ec50c" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;bytebuffer#getChar--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#putChar-char-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write values of other primitive types, translating them to and from sequences of bytes in a particular byte order;</source>
          <target state="translated">他のプリミティブ型の値を読み書きする絶対および相対&lt;a href=&quot;bytebuffer#getChar--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bytebuffer#putChar-char-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。特定のバイトオーダーのバイトシーケンスとの間で値を変換します。</target>
        </trans-unit>
        <trans-unit id="08b9f87c3ec4e79171a14f2289a478f4f1e977db" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;charbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charbuffer#put-char-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single chars;</source>
          <target state="translated">単一の文字を読み書きする絶対および相対の&lt;a href=&quot;charbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;charbuffer#put-char-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="b7b6cfc69e16fb63af3daa8cdf79e7c556e0c8ff" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;doublebuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublebuffer#put-double-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single doubles;</source>
          <target state="translated">単一のdoubleを読み書きする絶対および相対の&lt;a href=&quot;doublebuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;doublebuffer#put-double-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="0b42a9f349d6ebc2cd8ea0fa1d096761600a3000" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;floatbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;floatbuffer#put-float-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single floats;</source>
          <target state="translated">単一の浮動小数点数を読み書きする絶対および相対&lt;a href=&quot;floatbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;floatbuffer#put-float-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="7f3a10bd4849f06edaec8dc65a229da9b071769f" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;intbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intbuffer#put-int-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single ints;</source>
          <target state="translated">単一の整数を読み書きする絶対および相対の&lt;a href=&quot;intbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;intbuffer#put-int-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="80a7399b78b3237df1e0641107fd34899a81e8ec" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;longbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longbuffer#put-long-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single longs;</source>
          <target state="translated">単一のlongを読み書きする絶対および相対の&lt;a href=&quot;longbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;longbuffer#put-long-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="9e6ecf821df50c53acd282793181f662ea0642c0" translate="yes" xml:space="preserve">
          <source>Absolute and relative &lt;a href=&quot;shortbuffer#get--&quot;&gt;&lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shortbuffer#put-short-&quot;&gt;&lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that read and write single shorts;</source>
          <target state="translated">単一のショートを読み書きする絶対および相対&lt;a href=&quot;shortbuffer#get--&quot;&gt; &lt;code&gt;&lt;i&gt;get&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;shortbuffer#put-short-&quot;&gt; &lt;code&gt;&lt;i&gt;put&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="13c434a163ba17d0a2efa9387cdab8a8c1575e06" translate="yes" xml:space="preserve">
          <source>Abstract base class for reference objects.</source>
          <target state="translated">参照オブジェクトの抽象基底クラス。</target>
        </trans-unit>
        <trans-unit id="75128c4d43c35e92d61e47473a18fa723492428b" translate="yes" xml:space="preserve">
          <source>Abstract base class for reference objects. This class defines the operations common to all reference objects. Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly.</source>
          <target state="translated">参照オブジェクトの抽象基底クラス。このクラスは、すべての参照オブジェクトに共通する操作を定義します。参照オブジェクトはガベージコレクタと密接に連携して実装されているため、このクラスを直接サブクラス化することはできません。</target>
        </trans-unit>
        <trans-unit id="0d4c653a18f685389e590da94380989631dbe31c" translate="yes" xml:space="preserve">
          <source>Abstract base class for tasks that run within a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;内で実行されるタスクの抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="cddfb274f5f6825444b71f4c271c41cf6d0691d2" translate="yes" xml:space="preserve">
          <source>Abstract base class for tasks that run within a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;ForkJoinTask&lt;/code&gt; is a thread-like entity that is much lighter weight than a normal thread. Huge numbers of tasks and subtasks may be hosted by a small number of actual threads in a ForkJoinPool, at the price of some usage limitations.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;内で実行されるタスクの抽象基本クラス。A &lt;code&gt;ForkJoinTask&lt;/code&gt; は、通常のスレッドよりもはるかに軽量である糸状エンティティです。非常に多くのタスクとサブタスクが、いくつかの使用上の制限を犠牲にして、ForkJoinPool内の少数の実際のスレッドによってホストされる場合があります。</target>
        </trans-unit>
        <trans-unit id="689923b3122e25098a4b1f86006db57a6a7b5345" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 certificates.</source>
          <target state="translated">X.509 証明書の抽象クラス。</target>
        </trans-unit>
        <trans-unit id="d0a9e7f8405267e8539079c54bf5b6c055a488c2" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 certificates. This provides a standard way to access all the attributes of an X.509 certificate.</source>
          <target state="translated">X.509 証明書の抽象クラス。これは、X.509 証明書のすべての属性にアクセスするための標準的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="d920cb3e5fd0f8367b5e72aa8ab6883b26fab307" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 v1 certificates.</source>
          <target state="translated">X.509 v1 証明書の抽象クラス。</target>
        </trans-unit>
        <trans-unit id="40b75db3e5fb5c4597d3fdeb46775791785c9f84" translate="yes" xml:space="preserve">
          <source>Abstract class for X.509 v1 certificates. This provides a standard way to access all the version 1 attributes of an X.509 certificate. Attributes that are specific to X.509 v2 or v3 are not available through this interface. Future API evolution will provide full access to complete X.509 v3 attributes.</source>
          <target state="translated">X.509 v1 証明書の抽象クラス。これは、X.509 証明書のすべてのバージョン 1 属性にアクセスするための標準的な方法を提供します。X.509 v2 または v3 に固有の属性は、このインターフェイスからは利用できません。将来の API の進化により、完全な X.509 v3 属性へのフルアクセスが提供される予定である。</target>
        </trans-unit>
        <trans-unit id="922da9909d630e8d798ad7d31e1cf672d3ec14c9" translate="yes" xml:space="preserve">
          <source>Abstract class for a revoked certificate in a CRL (Certificate Revocation List).</source>
          <target state="translated">CRL(Certificate Revocation List)で失効した証明書の抽象クラス。</target>
        </trans-unit>
        <trans-unit id="eb2a20325aa0174164ed2f653fa683ed6c84dfab" translate="yes" xml:space="preserve">
          <source>Abstract class for a revoked certificate in a CRL (Certificate Revocation List). The ASN.1 definition for &lt;em&gt;revokedCertificates&lt;/em&gt; is:</source>
          <target state="translated">CRL（証明書失効リスト）で失効した証明書の抽象クラス。&lt;em&gt;revokedCertificates&lt;/em&gt;のASN.1定義は&lt;em&gt;次のとおり&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="bd19c16d99837f2d76822a9b70e0698f77c9abdf" translate="yes" xml:space="preserve">
          <source>Abstract class for an X.509 Certificate Revocation List (CRL).</source>
          <target state="translated">X.509 証明書失効リスト (CRL)の抽象クラス。</target>
        </trans-unit>
        <trans-unit id="8a1174b852fdedd26f190c2396d2d185f4b44517" translate="yes" xml:space="preserve">
          <source>Abstract class for an X.509 Certificate Revocation List (CRL). A CRL is a time-stamped list identifying revoked certificates. It is signed by a Certificate Authority (CA) and made freely available in a public repository.</source>
          <target state="translated">X.509 証明書失効リスト (CRL)の抽象クラス。CRL は、失効した証明書を識別するタイムスタンプ付きのリストです。CRL は認証局 (CA)によって署名され、パブリックリポジトリで自由に利用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="33fc88ee3618c4b0e19247406adb148217fdbf44" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates.</source>
          <target state="translated">様々なID証明書を管理するための抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="7ea80b0937bae10dec41f85ec007585c8083be97" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates. An identity certificate is a binding of a principal to a public key which is vouched for by another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">さまざまな ID 証明書を管理するための抽象クラス。ID 証明書は、プリンシパルが別のプリンシパルによって保証された公開鍵にプリンシパルをバインドするものである(プリンシパルとは、 個人ユーザ、グループ、または企業などのエンティティを表す)。(プリンシパルは、個人ユーザ、グループ、または企業などのエンティティを表す)。</target>
        </trans-unit>
        <trans-unit id="b2e3ee65eaf5eb6ab23c01d46d434925842b9b8e" translate="yes" xml:space="preserve">
          <source>Abstract class for managing a variety of identity certificates. An identity certificate is a guarantee by a principal that a public key is that of another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">さまざまな ID 証明書を管理するための抽象クラス。ID 証明書とは、公開鍵が他のプリンシパルのものであることをプリンシパルが保証するものである。(プリンシパルは、個人ユーザ、グループ、または企業などのエンティティを表す)。</target>
        </trans-unit>
        <trans-unit id="19e1446a1b5a0440111b2ac7906682ae2514d4e5" translate="yes" xml:space="preserve">
          <source>Abstract class for reading character streams.</source>
          <target state="translated">文字ストリームを読み取るための抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="b77d29f71063c6b733503e4606291b1c6da23bb4" translate="yes" xml:space="preserve">
          <source>Abstract class for reading character streams. The only methods that a subclass must implement are read(char[], int, int) and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</source>
          <target state="translated">文字ストリームを読み込むための抽象クラスです。サブクラスが実装しなければならないメソッドは read(char[],int,int)と close()だけです。しかし、ほとんどのサブクラスは、より高い効率性、追加機能、あるいはその両方を提供するために、ここで定義されているメソッドのいくつかをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="97ec747c3b727a901a3e375f88f6b64ef61c3034" translate="yes" xml:space="preserve">
          <source>Abstract class for reading filtered character streams.</source>
          <target state="translated">フィルタリングされた文字ストリームを読み取るための抽象クラス.</target>
        </trans-unit>
        <trans-unit id="d28abad97045352de99047fbc5a0ca7270a6fec0" translate="yes" xml:space="preserve">
          <source>Abstract class for reading filtered character streams. The abstract class &lt;code&gt;FilterReader&lt;/code&gt; itself provides default methods that pass all requests to the contained stream. Subclasses of &lt;code&gt;FilterReader&lt;/code&gt; should override some of these methods and may also provide additional methods and fields.</source>
          <target state="translated">フィルタリングされた文字ストリームを読み取るための抽象クラス。抽象クラス &lt;code&gt;FilterReader&lt;/code&gt; 自体は、含まれるストリームにすべての要求を渡すデフォルトのメソッドを提供します。サブクラス &lt;code&gt;FilterReader&lt;/code&gt; は、これらのメソッドの一部をオーバーライドする必要がありますし、また、追加のメソッドやフィールドを提供することができます。</target>
        </trans-unit>
        <trans-unit id="c714dd0137e8095aa4d4b6da99c89e0c6f4e6e6b" translate="yes" xml:space="preserve">
          <source>Abstract class for representing access to a system resource.</source>
          <target state="translated">システムリソースへのアクセスを表現するための抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="a4215330b6b435884a5ea8b00f7664eaabffd7ad" translate="yes" xml:space="preserve">
          <source>Abstract class for representing access to a system resource. All permissions have a name (whose interpretation depends on the subclass), as well as abstract functions for defining the semantics of the particular Permission subclass.</source>
          <target state="translated">システムリソースへのアクセスを表す抽象クラスです。すべてのパーミッションには名前(その解釈はサブクラスに依存します)と、特定のパーミッションサブクラスのセマンティクスを定義するための抽象関数があります。</target>
        </trans-unit>
        <trans-unit id="70979c7cb17f66fa15f85a8bbced6bb717f7226c" translate="yes" xml:space="preserve">
          <source>Abstract class for writing filtered character streams.</source>
          <target state="translated">フィルタリングされた文字ストリームを書き込むための抽象クラス.</target>
        </trans-unit>
        <trans-unit id="9b392b3d7217a08ec52cd6ba7a2c7fc9a4e67f82" translate="yes" xml:space="preserve">
          <source>Abstract class for writing filtered character streams. The abstract class &lt;code&gt;FilterWriter&lt;/code&gt; itself provides default methods that pass all requests to the contained stream. Subclasses of &lt;code&gt;FilterWriter&lt;/code&gt; should override some of these methods and may also provide additional methods and fields.</source>
          <target state="translated">フィルタリングされた文字ストリームを書き込むための抽象クラス。抽象クラス &lt;code&gt;FilterWriter&lt;/code&gt; 自体は、含まれているストリームにすべての要求を渡すデフォルトのメソッドを提供します。 &lt;code&gt;FilterWriter&lt;/code&gt; のサブクラスは、これらのメソッドの一部をオーバーライドする必要があり、追加のメソッドとフィールドを提供することもあります。</target>
        </trans-unit>
        <trans-unit id="6dad3da70c2b788d3e662954f1cc1877a62cd4cf" translate="yes" xml:space="preserve">
          <source>Abstract class for writing to character streams.</source>
          <target state="translated">文字ストリームに書き込むための抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="108e80eb9c48a4e0505d79a4fb042868cfcd2487" translate="yes" xml:space="preserve">
          <source>Abstract class for writing to character streams. The only methods that a subclass must implement are write(char[], int, int), flush(), and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</source>
          <target state="translated">文字ストリームに書き込むための抽象クラスです。サブクラスが実装しなければならないメソッドは write(char[],int,int)、flush()、close()だけです。しかし、ほとんどのサブクラスは、より高い効率性、追加機能、またはその両方を提供するために、ここで定義されているメソッドのいくつかをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="bbad90f4fbe3028d70e867982fa19c705f3f70d8" translate="yes" xml:space="preserve">
          <source>Abstract class representing a collection of Permission objects.</source>
          <target state="translated">Permissionオブジェクトの集合を表す抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="8de43baf30148d14ef6d982218eba04a0f736fac" translate="yes" xml:space="preserve">
          <source>Abstract class that provides for extension of the X509KeyManager interface.</source>
          <target state="translated">X509KeyManagerインタフェースの拡張を提供する抽象クラス。</target>
        </trans-unit>
        <trans-unit id="ef9818a8141c5c7474b416d3067379a41ea1fa46" translate="yes" xml:space="preserve">
          <source>Abstract datagram and multicast socket implementation base class.</source>
          <target state="translated">抽象的なデータグラムおよびマルチキャストソケット実装の基底クラスです。</target>
        </trans-unit>
        <trans-unit id="e2326f7c491400b3ed9fc99f4aeacb18465f372d" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6</source>
          <target state="translated">AbstractAnnotationValueVisitor6</target>
        </trans-unit>
        <trans-unit id="08937be0df9d7dfe5bc78800980e7821479abc29" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6.visit()</source>
          <target state="translated">AbstractAnnotationValueVisitor6.visit()</target>
        </trans-unit>
        <trans-unit id="319534f59f140806ceb1d1d805b7c33a1f5c5857" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor6.visitUnknown()</source>
          <target state="translated">AbstractAnnotationValueVisitor6.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="44cda9c2fe6cb5afb08ed48c47c34d8278e4b4c0" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor7</source>
          <target state="translated">AbstractAnnotationValueVisitor7</target>
        </trans-unit>
        <trans-unit id="45c34f5d09c1b2528df3a5dc2383798b1f5800c8" translate="yes" xml:space="preserve">
          <source>AbstractAnnotationValueVisitor8</source>
          <target state="translated">AbstractAnnotationValueVisitor8</target>
        </trans-unit>
        <trans-unit id="d47eed55b8f52c1421f3d4348017846498bec342" translate="yes" xml:space="preserve">
          <source>AbstractChronology</source>
          <target state="translated">AbstractChronology</target>
        </trans-unit>
        <trans-unit id="01d422c2368103a33f2bc980626692ca8835baaf" translate="yes" xml:space="preserve">
          <source>AbstractChronology.compareTo()</source>
          <target state="translated">AbstractChronology.compareTo()</target>
        </trans-unit>
        <trans-unit id="27abdfc0d3d045b0b52e0b351d67989d11225a88" translate="yes" xml:space="preserve">
          <source>AbstractChronology.equals()</source>
          <target state="translated">AbstractChronology.equals()</target>
        </trans-unit>
        <trans-unit id="a458e428692edfb0ac737f0d49161e193aaaee4d" translate="yes" xml:space="preserve">
          <source>AbstractChronology.hashCode()</source>
          <target state="translated">AbstractChronology.hashCode()</target>
        </trans-unit>
        <trans-unit id="530b17bba56745d1ee88a45688dcc3f507cb8977" translate="yes" xml:space="preserve">
          <source>AbstractChronology.resolveDate()</source>
          <target state="translated">AbstractChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="c250730ee53ba9b753e791b9ce33f1fea3d3793e" translate="yes" xml:space="preserve">
          <source>AbstractChronology.toString()</source>
          <target state="translated">AbstractChronology.toString()</target>
        </trans-unit>
        <trans-unit id="62deadea5aa50c02c734a956de1e99c71e45bf05" translate="yes" xml:space="preserve">
          <source>AbstractCollection</source>
          <target state="translated">AbstractCollection</target>
        </trans-unit>
        <trans-unit id="d820e338865aee0a98c35532d15df42b18f32044" translate="yes" xml:space="preserve">
          <source>AbstractCollection.add()</source>
          <target state="translated">AbstractCollection.add()</target>
        </trans-unit>
        <trans-unit id="5a20bbc63421709887f61cef08be4906c632e24b" translate="yes" xml:space="preserve">
          <source>AbstractCollection.addAll()</source>
          <target state="translated">AbstractCollection.addAll()</target>
        </trans-unit>
        <trans-unit id="2e6fb968e19fb6492294cf92dced5bae9d9988b7" translate="yes" xml:space="preserve">
          <source>AbstractCollection.clear()</source>
          <target state="translated">AbstractCollection.clear()</target>
        </trans-unit>
        <trans-unit id="d4e2f4802b53c17b7cb6cace5837687c93dd0782" translate="yes" xml:space="preserve">
          <source>AbstractCollection.contains()</source>
          <target state="translated">AbstractCollection.contains()</target>
        </trans-unit>
        <trans-unit id="c99542a9ae4eef9a983ca2c6cc84b493b48986d5" translate="yes" xml:space="preserve">
          <source>AbstractCollection.containsAll()</source>
          <target state="translated">AbstractCollection.containsAll()</target>
        </trans-unit>
        <trans-unit id="fe0508acdec587c9fd09baac5f84f525849b54b7" translate="yes" xml:space="preserve">
          <source>AbstractCollection.isEmpty()</source>
          <target state="translated">AbstractCollection.isEmpty()</target>
        </trans-unit>
        <trans-unit id="17e41a7d6a2e1a2cfc0197deb8bf365315e97e11" translate="yes" xml:space="preserve">
          <source>AbstractCollection.iterator()</source>
          <target state="translated">AbstractCollection.iterator()</target>
        </trans-unit>
        <trans-unit id="b9494fa66a0e4f0e858499b280a75069a449dd84" translate="yes" xml:space="preserve">
          <source>AbstractCollection.remove()</source>
          <target state="translated">AbstractCollection.remove()</target>
        </trans-unit>
        <trans-unit id="26c529ec8fb256ca9d1eb5ef68fec26966887b2d" translate="yes" xml:space="preserve">
          <source>AbstractCollection.removeAll()</source>
          <target state="translated">AbstractCollection.removeAll()</target>
        </trans-unit>
        <trans-unit id="2e49243e11c6980058f82e10236bc1db79475542" translate="yes" xml:space="preserve">
          <source>AbstractCollection.retainAll()</source>
          <target state="translated">AbstractCollection.retainAll()</target>
        </trans-unit>
        <trans-unit id="ee4a676ca6f800b7f25c6505851a1ea34aee3fb2" translate="yes" xml:space="preserve">
          <source>AbstractCollection.size()</source>
          <target state="translated">AbstractCollection.size()</target>
        </trans-unit>
        <trans-unit id="3eeb3cb57ae85bb0b2d02ee57aff506dc8a43b98" translate="yes" xml:space="preserve">
          <source>AbstractCollection.toArray()</source>
          <target state="translated">AbstractCollection.toArray()</target>
        </trans-unit>
        <trans-unit id="975be995b97b4660a224a3cfeeb95f5ecc4c3aa1" translate="yes" xml:space="preserve">
          <source>AbstractCollection.toString()</source>
          <target state="translated">AbstractCollection.toString()</target>
        </trans-unit>
        <trans-unit id="db72873f181ac5d1902a8988868002d66f13f130" translate="yes" xml:space="preserve">
          <source>AbstractDoubleSpliterator</source>
          <target state="translated">AbstractDoubleSpliterator</target>
        </trans-unit>
        <trans-unit id="1af1430e07faf6bafbaf715e016c66a53ea8a5ad" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6</source>
          <target state="translated">AbstractElementVisitor6</target>
        </trans-unit>
        <trans-unit id="75f58417f1413cc9dbba05a901a7d6df4d01aeeb" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6.visit()</source>
          <target state="translated">AbstractElementVisitor6.visit()</target>
        </trans-unit>
        <trans-unit id="598ce80a36fd07e65f237ae0b0f44027999b5af8" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor6.visitUnknown()</source>
          <target state="translated">AbstractElementVisitor6.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="4397bd66970cb822d7cfc448d45b5ab95f37d1a4" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor7</source>
          <target state="translated">AbstractElementVisitor7</target>
        </trans-unit>
        <trans-unit id="99993defdab9ef844947e88b57cc340c8abe0dc0" translate="yes" xml:space="preserve">
          <source>AbstractElementVisitor8</source>
          <target state="translated">AbstractElementVisitor8</target>
        </trans-unit>
        <trans-unit id="6a3cfc179104cd33f7b11cd0a55283537408e529" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService</source>
          <target state="translated">AbstractExecutorService</target>
        </trans-unit>
        <trans-unit id="49b6355f70fcb580045c580b9b880e6f1839b443" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.invokeAll()</source>
          <target state="translated">AbstractExecutorService.invokeAll()</target>
        </trans-unit>
        <trans-unit id="92172ae501fca41777f12b537c155b7de7d2717a" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.invokeAny()</source>
          <target state="translated">AbstractExecutorService.invokeAny()</target>
        </trans-unit>
        <trans-unit id="3e225d74ab27dad0bfaf11c86f343b2202509aa0" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.newTaskFor()</source>
          <target state="translated">AbstractExecutorService.newTaskFor()</target>
        </trans-unit>
        <trans-unit id="29f7314ccab6f279d5fd1488c7652428dcd0ebfa" translate="yes" xml:space="preserve">
          <source>AbstractExecutorService.submit()</source>
          <target state="translated">AbstractExecutorService.submit()</target>
        </trans-unit>
        <trans-unit id="931085ce9d9a6f3267035eb2742c737d0afb2ad7" translate="yes" xml:space="preserve">
          <source>AbstractIntSpliterator</source>
          <target state="translated">AbstractIntSpliterator</target>
        </trans-unit>
        <trans-unit id="baa028c903570184edf2283df0ab511dc9e824ae" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel</source>
          <target state="translated">AbstractInterruptibleChannel</target>
        </trans-unit>
        <trans-unit id="e013d68b69632997b0cfbfc1575ccd0e75679b20" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.begin()</source>
          <target state="translated">AbstractInterruptibleChannel.begin()</target>
        </trans-unit>
        <trans-unit id="6217b4ed45aad4c8ded6b11d7f787df30428441d" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.close()</source>
          <target state="translated">AbstractInterruptibleChannel.close()</target>
        </trans-unit>
        <trans-unit id="6160eecb5e9b7ad5f2c0f75891480c538787c549" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.end()</source>
          <target state="translated">AbstractInterruptibleChannel.end()</target>
        </trans-unit>
        <trans-unit id="0c2af7b0c1f5cfe7ace58f98ffecd1372d8396b7" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.implCloseChannel()</source>
          <target state="translated">AbstractInterruptibleChannel.implCloseChannel()</target>
        </trans-unit>
        <trans-unit id="56bb56dc288004eb1652cdc0bacce3d3a0bab707" translate="yes" xml:space="preserve">
          <source>AbstractInterruptibleChannel.isOpen()</source>
          <target state="translated">AbstractInterruptibleChannel.isOpen()</target>
        </trans-unit>
        <trans-unit id="80b25eb6b4fc66c38a02c0db0db4701efc036bfe" translate="yes" xml:space="preserve">
          <source>AbstractList</source>
          <target state="translated">AbstractList</target>
        </trans-unit>
        <trans-unit id="a6c12269d4df42c1ef503e436f2daaae6308aead" translate="yes" xml:space="preserve">
          <source>AbstractList.add()</source>
          <target state="translated">AbstractList.add()</target>
        </trans-unit>
        <trans-unit id="0b50c0f3d9c3eebc36d55e70ae905ec10fb2516d" translate="yes" xml:space="preserve">
          <source>AbstractList.addAll()</source>
          <target state="translated">AbstractList.addAll()</target>
        </trans-unit>
        <trans-unit id="409ce5925a36b3ed439cb799150c6320078fc44c" translate="yes" xml:space="preserve">
          <source>AbstractList.clear()</source>
          <target state="translated">AbstractList.clear()</target>
        </trans-unit>
        <trans-unit id="e6496c140fcf633ae36d8e2e6f484efcb417a8cd" translate="yes" xml:space="preserve">
          <source>AbstractList.equals()</source>
          <target state="translated">AbstractList.equals()</target>
        </trans-unit>
        <trans-unit id="cce231efa7d7cc0cdfdfe2c5108489d66876b201" translate="yes" xml:space="preserve">
          <source>AbstractList.get()</source>
          <target state="translated">AbstractList.get()</target>
        </trans-unit>
        <trans-unit id="42b57beb996b3a24bd2be104d331784d69e9c58d" translate="yes" xml:space="preserve">
          <source>AbstractList.hashCode()</source>
          <target state="translated">AbstractList.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d5b208feb4f489fd4403afe5da867fc03d06967" translate="yes" xml:space="preserve">
          <source>AbstractList.indexOf()</source>
          <target state="translated">AbstractList.indexOf()</target>
        </trans-unit>
        <trans-unit id="2e4073a408c4d1fc092544f0850629fb782c359f" translate="yes" xml:space="preserve">
          <source>AbstractList.iterator()</source>
          <target state="translated">AbstractList.iterator()</target>
        </trans-unit>
        <trans-unit id="bda44373adc31d10f20d8134f5521b3241e008a0" translate="yes" xml:space="preserve">
          <source>AbstractList.lastIndexOf()</source>
          <target state="translated">AbstractList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="5f9c374064888a84eaabbcd368935a4c3866f88f" translate="yes" xml:space="preserve">
          <source>AbstractList.listIterator()</source>
          <target state="translated">AbstractList.listIterator()</target>
        </trans-unit>
        <trans-unit id="dfc0b21bc5a1e59f388ef99533069fe51df64a3c" translate="yes" xml:space="preserve">
          <source>AbstractList.remove()</source>
          <target state="translated">AbstractList.remove()</target>
        </trans-unit>
        <trans-unit id="9133811e4573678c32a820b600c3a182b2b96f97" translate="yes" xml:space="preserve">
          <source>AbstractList.removeRange()</source>
          <target state="translated">AbstractList.removeRange()</target>
        </trans-unit>
        <trans-unit id="971b3e6f45c772b932a69d15f12c542e332c377f" translate="yes" xml:space="preserve">
          <source>AbstractList.set()</source>
          <target state="translated">AbstractList.set()</target>
        </trans-unit>
        <trans-unit id="090b24ae15b1c5d7fc9c1394251ae36795821174" translate="yes" xml:space="preserve">
          <source>AbstractList.subList()</source>
          <target state="translated">AbstractList.subList()</target>
        </trans-unit>
        <trans-unit id="595bb680a9d8c3eb501353e60fc96e4df64a4cc6" translate="yes" xml:space="preserve">
          <source>AbstractLongSpliterator</source>
          <target state="translated">AbstractLongSpliterator</target>
        </trans-unit>
        <trans-unit id="e5b1267bb3362c3d2609d08b1cc8a480c087ece8" translate="yes" xml:space="preserve">
          <source>AbstractMap</source>
          <target state="translated">AbstractMap</target>
        </trans-unit>
        <trans-unit id="218590503902f98d7cb731fbfdbe54efe5e76fca" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry</source>
          <target state="translated">AbstractMap.SimpleEntry</target>
        </trans-unit>
        <trans-unit id="2beb3bac7df944d384c92c07740a539d4e184b1c" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.equals()</source>
          <target state="translated">AbstractMap.SimpleEntry.equals()</target>
        </trans-unit>
        <trans-unit id="8c4bf4dbadd984156430c42a46f248984fa343b3" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.getKey()</source>
          <target state="translated">AbstractMap.SimpleEntry.getKey()</target>
        </trans-unit>
        <trans-unit id="91c3f0d69d2babac35cdcdae3c4052013201826f" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.getValue()</source>
          <target state="translated">AbstractMap.SimpleEntry.getValue()</target>
        </trans-unit>
        <trans-unit id="cefec1a4481f2c04f2f7e04b0cc8f0308bf11167" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.hashCode()</source>
          <target state="translated">AbstractMap.SimpleEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="a4071bdb9dc9dbcfe04feb0d00b4fc3989621ef1" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.setValue()</source>
          <target state="translated">AbstractMap.SimpleEntry.setValue()</target>
        </trans-unit>
        <trans-unit id="1215266c519be711d5ad4c63472e8f09f52cbc95" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleEntry.toString()</source>
          <target state="translated">AbstractMap.SimpleEntry.toString()</target>
        </trans-unit>
        <trans-unit id="11c24200aa0f879653789695cb2909993b5d3a0a" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry</target>
        </trans-unit>
        <trans-unit id="59c31ae082f06e59f9011ad9afefe86deba04bf3" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.equals()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.equals()</target>
        </trans-unit>
        <trans-unit id="b7cd93757b0c3dc964897953b05b4a79946de8ba" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.getKey()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.getKey()</target>
        </trans-unit>
        <trans-unit id="3824c7eec2fe5423b025064d910331fc8fbe89a5" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.getValue()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.getValue()</target>
        </trans-unit>
        <trans-unit id="9d9762eef87f5bcb1f7d914e8e85938ee3f2cf45" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.hashCode()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="4c848b0de48cad340810719767975d57456507b6" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.setValue()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.setValue()</target>
        </trans-unit>
        <trans-unit id="4af58129a72915c715df202b7d922657e16f097a" translate="yes" xml:space="preserve">
          <source>AbstractMap.SimpleImmutableEntry.toString()</source>
          <target state="translated">AbstractMap.SimpleImmutableEntry.toString()</target>
        </trans-unit>
        <trans-unit id="29fe743fc7c8f961c6dc75593ecaef74ad4a01e1" translate="yes" xml:space="preserve">
          <source>AbstractMap.clear()</source>
          <target state="translated">AbstractMap.clear()</target>
        </trans-unit>
        <trans-unit id="6278a2abd66c97ef3742e42cf79a378d0e6fce9f" translate="yes" xml:space="preserve">
          <source>AbstractMap.clone()</source>
          <target state="translated">AbstractMap.clone()</target>
        </trans-unit>
        <trans-unit id="941fa94974d461e0f37b29bc60548b675b3332dd" translate="yes" xml:space="preserve">
          <source>AbstractMap.containsKey()</source>
          <target state="translated">AbstractMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="657d78583b45a1b4e74d0f4b483217e8baaf2cc1" translate="yes" xml:space="preserve">
          <source>AbstractMap.containsValue()</source>
          <target state="translated">AbstractMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="7c941abe83c9ed230a0ce03620d762f05e99026c" translate="yes" xml:space="preserve">
          <source>AbstractMap.entrySet()</source>
          <target state="translated">AbstractMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="da1f0f43cba2c70499f8bec7058089db975c505d" translate="yes" xml:space="preserve">
          <source>AbstractMap.equals()</source>
          <target state="translated">AbstractMap.equals()</target>
        </trans-unit>
        <trans-unit id="32ac68c0a4778c7bb2e6d384cf2d4ea010d61960" translate="yes" xml:space="preserve">
          <source>AbstractMap.get()</source>
          <target state="translated">AbstractMap.get()</target>
        </trans-unit>
        <trans-unit id="2e4ea37b6941e2ec433a6f6d52b7e44c8ea0a15c" translate="yes" xml:space="preserve">
          <source>AbstractMap.hashCode()</source>
          <target state="translated">AbstractMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="196829dc6558aecbb91cb3e4176e223e3ed97d65" translate="yes" xml:space="preserve">
          <source>AbstractMap.isEmpty()</source>
          <target state="translated">AbstractMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="1389ef6a4deaed46912cab537c51d7d518593934" translate="yes" xml:space="preserve">
          <source>AbstractMap.keySet()</source>
          <target state="translated">AbstractMap.keySet()</target>
        </trans-unit>
        <trans-unit id="5c54d1693d5691034203064c6ce1d57133e6c947" translate="yes" xml:space="preserve">
          <source>AbstractMap.put()</source>
          <target state="translated">AbstractMap.put()</target>
        </trans-unit>
        <trans-unit id="58e6ed28ce261e15baf766ad401967ba324723c3" translate="yes" xml:space="preserve">
          <source>AbstractMap.putAll()</source>
          <target state="translated">AbstractMap.putAll()</target>
        </trans-unit>
        <trans-unit id="c70f12e5649de7fb3e621416db0bb441b620008b" translate="yes" xml:space="preserve">
          <source>AbstractMap.remove()</source>
          <target state="translated">AbstractMap.remove()</target>
        </trans-unit>
        <trans-unit id="267b67cd54e253783657216153f8bfee8d0f0c4c" translate="yes" xml:space="preserve">
          <source>AbstractMap.size()</source>
          <target state="translated">AbstractMap.size()</target>
        </trans-unit>
        <trans-unit id="6a6a79dedeb0affb187f5a0b56a2e4a8be5eb0d8" translate="yes" xml:space="preserve">
          <source>AbstractMap.toString()</source>
          <target state="translated">AbstractMap.toString()</target>
        </trans-unit>
        <trans-unit id="eb7b7408884cec0bca46b79b428b1f4a9355dc27" translate="yes" xml:space="preserve">
          <source>AbstractMap.values()</source>
          <target state="translated">AbstractMap.values()</target>
        </trans-unit>
        <trans-unit id="14a62a5e3d450b7fc1491a22c600974eef9c0339" translate="yes" xml:space="preserve">
          <source>AbstractMethodError</source>
          <target state="translated">AbstractMethodError</target>
        </trans-unit>
        <trans-unit id="1bdee4bb14a44fa3a24c8fec5d6e801c12351d3a" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer</source>
          <target state="translated">AbstractOwnableSynchronizer</target>
        </trans-unit>
        <trans-unit id="3c3a88dbb9bdb609e80a496391e0b219694ab0e9" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer.getExclusiveOwnerThread()</source>
          <target state="translated">AbstractOwnableSynchronizer.getExclusiveOwnerThread()</target>
        </trans-unit>
        <trans-unit id="d75bed044520cca60eef0e3366a00a76c6504762" translate="yes" xml:space="preserve">
          <source>AbstractOwnableSynchronizer.setExclusiveOwnerThread()</source>
          <target state="translated">AbstractOwnableSynchronizer.setExclusiveOwnerThread()</target>
        </trans-unit>
        <trans-unit id="d8166055f7afd1a55d9ad187b823246f65086bc4" translate="yes" xml:space="preserve">
          <source>AbstractPreferences</source>
          <target state="translated">AbstractPreferences</target>
        </trans-unit>
        <trans-unit id="5dbc10c6af403836c06e4357e9aa25a7b2b2d79d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.absolutePath()</source>
          <target state="translated">AbstractPreferences.absolutePath()</target>
        </trans-unit>
        <trans-unit id="e7ff7bf474c21006877591ff06ea595bf068e158" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.addNodeChangeListener()</source>
          <target state="translated">AbstractPreferences.addNodeChangeListener()</target>
        </trans-unit>
        <trans-unit id="24a3ba4ea33d467911502c73ce7eaf3aecdc713c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.addPreferenceChangeListener()</source>
          <target state="translated">AbstractPreferences.addPreferenceChangeListener()</target>
        </trans-unit>
        <trans-unit id="31cd691757f090d85980884ce4cce8ef33e6e365" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.cachedChildren()</source>
          <target state="translated">AbstractPreferences.cachedChildren()</target>
        </trans-unit>
        <trans-unit id="576f69ddb0648a5ce3ceec6934bcecab7a98a79c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childSpi()</source>
          <target state="translated">AbstractPreferences.childSpi()</target>
        </trans-unit>
        <trans-unit id="e2562384c78cc84f53486e0ebcbb2d3102053b82" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childrenNames()</source>
          <target state="translated">AbstractPreferences.childrenNames()</target>
        </trans-unit>
        <trans-unit id="9caf1d010c8d5d06a6cf9cb75ebc62ec71f4c792" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.childrenNamesSpi()</source>
          <target state="translated">AbstractPreferences.childrenNamesSpi()</target>
        </trans-unit>
        <trans-unit id="38fea32341d906e8262dc7e27e59fd7edfcf00ee" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.clear()</source>
          <target state="translated">AbstractPreferences.clear()</target>
        </trans-unit>
        <trans-unit id="8b5bcd12cc7a0ea578af60db2ad9e9bbf623c0d6" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.exportNode()</source>
          <target state="translated">AbstractPreferences.exportNode()</target>
        </trans-unit>
        <trans-unit id="9fe13afbfd2f0b01be2a1a0f295b8be5c24f039e" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.exportSubtree()</source>
          <target state="translated">AbstractPreferences.exportSubtree()</target>
        </trans-unit>
        <trans-unit id="d1a85d855f351f9c13990bd4c962622f79145c80" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.flush()</source>
          <target state="translated">AbstractPreferences.flush()</target>
        </trans-unit>
        <trans-unit id="6ae62800ba7cdf97885a832a7e9da0401714cfdd" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.flushSpi()</source>
          <target state="translated">AbstractPreferences.flushSpi()</target>
        </trans-unit>
        <trans-unit id="a4a852efc57c45f1c46f0eb7064db00b4adfba23" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.get()</source>
          <target state="translated">AbstractPreferences.get()</target>
        </trans-unit>
        <trans-unit id="fe2626c3b6abc22ce2f9d3b60b133418cb73195a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getBoolean()</source>
          <target state="translated">AbstractPreferences.getBoolean()</target>
        </trans-unit>
        <trans-unit id="246e6c9dd167f959b68a8a3bce4e4fb8fed3891a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getByteArray()</source>
          <target state="translated">AbstractPreferences.getByteArray()</target>
        </trans-unit>
        <trans-unit id="32722ea3d12738877c96f684e7105bd0ff2b290f" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getChild()</source>
          <target state="translated">AbstractPreferences.getChild()</target>
        </trans-unit>
        <trans-unit id="98adefbce72072e04f10c28789a2e3a010bb8c99" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getDouble()</source>
          <target state="translated">AbstractPreferences.getDouble()</target>
        </trans-unit>
        <trans-unit id="071b02d416fa44f507dd2a6e926494d5cc33aa8d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getFloat()</source>
          <target state="translated">AbstractPreferences.getFloat()</target>
        </trans-unit>
        <trans-unit id="dfb355e4fc8e3797156b98d4d4b72857924d7577" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getInt()</source>
          <target state="translated">AbstractPreferences.getInt()</target>
        </trans-unit>
        <trans-unit id="8bf051ce2a3a388a0238eabe6644d65e787bc859" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getLong()</source>
          <target state="translated">AbstractPreferences.getLong()</target>
        </trans-unit>
        <trans-unit id="a87025499a9c8ad5ab51a1bcadf25d74389ec0db" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.getSpi()</source>
          <target state="translated">AbstractPreferences.getSpi()</target>
        </trans-unit>
        <trans-unit id="f02eed7a6abfa2b5b19214edb73b3b2fa7c5c632" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.isRemoved()</source>
          <target state="translated">AbstractPreferences.isRemoved()</target>
        </trans-unit>
        <trans-unit id="b0ab8c88320681e30ca1b5060cc888030c5c66eb" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.isUserNode()</source>
          <target state="translated">AbstractPreferences.isUserNode()</target>
        </trans-unit>
        <trans-unit id="dda1cef54196185a375189e36bc9a2fc30b9a04c" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.keys()</source>
          <target state="translated">AbstractPreferences.keys()</target>
        </trans-unit>
        <trans-unit id="9254f47eebf9302ec3a9b0b07b8344d20aec8467" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.keysSpi()</source>
          <target state="translated">AbstractPreferences.keysSpi()</target>
        </trans-unit>
        <trans-unit id="1a28642d919d9984118b7026829ef151ecd99062" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.name()</source>
          <target state="translated">AbstractPreferences.name()</target>
        </trans-unit>
        <trans-unit id="3ad3048e859f133585035aa563192aea380a7e45" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.node()</source>
          <target state="translated">AbstractPreferences.node()</target>
        </trans-unit>
        <trans-unit id="5cdb9c6b4a48713e710e3a9561fc04d9b969d1b1" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.nodeExists()</source>
          <target state="translated">AbstractPreferences.nodeExists()</target>
        </trans-unit>
        <trans-unit id="f5f04c80d4d279252ff55784a2833eaaac0d97ad" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.parent()</source>
          <target state="translated">AbstractPreferences.parent()</target>
        </trans-unit>
        <trans-unit id="eb5fb3c02e920f59bf603ff8165cbc81dc1e7ad8" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.put()</source>
          <target state="translated">AbstractPreferences.put()</target>
        </trans-unit>
        <trans-unit id="70bda80cd944ff4cd0683521145271c2fdd039fe" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putBoolean()</source>
          <target state="translated">AbstractPreferences.putBoolean()</target>
        </trans-unit>
        <trans-unit id="8aefeb50fefb75da14b99c15978354611062b4ab" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putByteArray()</source>
          <target state="translated">AbstractPreferences.putByteArray()</target>
        </trans-unit>
        <trans-unit id="3f0ac4508cd40a684d883a8f2e2f0adcbe5791f1" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putDouble()</source>
          <target state="translated">AbstractPreferences.putDouble()</target>
        </trans-unit>
        <trans-unit id="8c6e1119caaab4e3e44f5be1db9a058679a34e44" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putFloat()</source>
          <target state="translated">AbstractPreferences.putFloat()</target>
        </trans-unit>
        <trans-unit id="6f1112de74ca998f406dd0877d9fb9d1d7a09ae5" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putInt()</source>
          <target state="translated">AbstractPreferences.putInt()</target>
        </trans-unit>
        <trans-unit id="9b3e6e36649b5ae67a5054174a59f7ed13b34422" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putLong()</source>
          <target state="translated">AbstractPreferences.putLong()</target>
        </trans-unit>
        <trans-unit id="565bbff95a10105be7f833764b2f9bd65c201c6d" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.putSpi()</source>
          <target state="translated">AbstractPreferences.putSpi()</target>
        </trans-unit>
        <trans-unit id="fedd6dde9cfb8c70cf1a2504037340bbc4474165" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.remove()</source>
          <target state="translated">AbstractPreferences.remove()</target>
        </trans-unit>
        <trans-unit id="dea9c5dca3865f7210acdeee58edae4f2bc6a0af" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNode()</source>
          <target state="translated">AbstractPreferences.removeNode()</target>
        </trans-unit>
        <trans-unit id="db273327b14bb7bdda0dea4cee7658ef5df08a75" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNodeChangeListener()</source>
          <target state="translated">AbstractPreferences.removeNodeChangeListener()</target>
        </trans-unit>
        <trans-unit id="dd82bb344e5371e3d8875a79608c1372feaab48b" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeNodeSpi()</source>
          <target state="translated">AbstractPreferences.removeNodeSpi()</target>
        </trans-unit>
        <trans-unit id="ff2749ee7342abca3d033236181c86898473fc05" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removePreferenceChangeListener()</source>
          <target state="translated">AbstractPreferences.removePreferenceChangeListener()</target>
        </trans-unit>
        <trans-unit id="debef7d93552074030af7865f22c86f4c3c3eb89" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.removeSpi()</source>
          <target state="translated">AbstractPreferences.removeSpi()</target>
        </trans-unit>
        <trans-unit id="84f91d8016c28d9d1ba84b421593361013f8b96b" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.sync()</source>
          <target state="translated">AbstractPreferences.sync()</target>
        </trans-unit>
        <trans-unit id="3da0e517eebb4d0d73a4aa85ccb11784c1a6e3c9" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.syncSpi()</source>
          <target state="translated">AbstractPreferences.syncSpi()</target>
        </trans-unit>
        <trans-unit id="2d317cb3c8d782a453efb93e29fc194bb91d4e4a" translate="yes" xml:space="preserve">
          <source>AbstractPreferences.toString()</source>
          <target state="translated">AbstractPreferences.toString()</target>
        </trans-unit>
        <trans-unit id="5ec07fdc7d4510ee0f99dcdc1114c0862f4f0aeb" translate="yes" xml:space="preserve">
          <source>AbstractProcessor</source>
          <target state="translated">AbstractProcessor</target>
        </trans-unit>
        <trans-unit id="409de9fa45abe176c71331b11eb58456ba5d03ab" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getCompletions()</source>
          <target state="translated">AbstractProcessor.getCompletions()</target>
        </trans-unit>
        <trans-unit id="04c1a7d21d8609952492cd486cc146c4a7d396d5" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedAnnotationTypes()</source>
          <target state="translated">AbstractProcessor.getSupportedAnnotationTypes()</target>
        </trans-unit>
        <trans-unit id="e5cb617b22032cfeb2fbce71aabf4fc6a04fc3cd" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedOptions()</source>
          <target state="translated">AbstractProcessor.getSupportedOptions()</target>
        </trans-unit>
        <trans-unit id="ebe3667ede509d7e0bccaeda9026beeb6d292b54" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.getSupportedSourceVersion()</source>
          <target state="translated">AbstractProcessor.getSupportedSourceVersion()</target>
        </trans-unit>
        <trans-unit id="2f1c29fe7d63fdbd5c2539aa4def386b053fdf3f" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.init()</source>
          <target state="translated">AbstractProcessor.init()</target>
        </trans-unit>
        <trans-unit id="da3878017323c2f6981d7f4cded9127512e5a1bf" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.isInitialized()</source>
          <target state="translated">AbstractProcessor.isInitialized()</target>
        </trans-unit>
        <trans-unit id="1f71e76ca9900d79870151c47b4ab5ec6fe8f2e2" translate="yes" xml:space="preserve">
          <source>AbstractProcessor.process()</source>
          <target state="translated">AbstractProcessor.process()</target>
        </trans-unit>
        <trans-unit id="8115677f90bb136a3ae891e22cf8e36aa1a5a5d4" translate="yes" xml:space="preserve">
          <source>AbstractQueue</source>
          <target state="translated">AbstractQueue</target>
        </trans-unit>
        <trans-unit id="203f33b7067e3ae5b794852618968ddd6ea90475" translate="yes" xml:space="preserve">
          <source>AbstractQueue.add()</source>
          <target state="translated">AbstractQueue.add()</target>
        </trans-unit>
        <trans-unit id="dac32c6477239e85dc8af02638568333cdbbf436" translate="yes" xml:space="preserve">
          <source>AbstractQueue.addAll()</source>
          <target state="translated">AbstractQueue.addAll()</target>
        </trans-unit>
        <trans-unit id="c0b9868ba10715cdb5e98e5b5b8d00904defead4" translate="yes" xml:space="preserve">
          <source>AbstractQueue.clear()</source>
          <target state="translated">AbstractQueue.clear()</target>
        </trans-unit>
        <trans-unit id="761cc90544bfe576e663c33be1c8c820ee8e862f" translate="yes" xml:space="preserve">
          <source>AbstractQueue.element()</source>
          <target state="translated">AbstractQueue.element()</target>
        </trans-unit>
        <trans-unit id="6225b1d43687a73cf484f4ea5f3692488a34a2eb" translate="yes" xml:space="preserve">
          <source>AbstractQueue.remove()</source>
          <target state="translated">AbstractQueue.remove()</target>
        </trans-unit>
        <trans-unit id="04013b7955a0c340346cec75a5926152d696bae2" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer</source>
          <target state="translated">AbstractQueuedLongSynchronizer</target>
        </trans-unit>
        <trans-unit id="6e0a8d1d9d8fa180979b98ce3d65f4c0272ed09b" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject</target>
        </trans-unit>
        <trans-unit id="b69b88266226f29583ca95c3cc5a00fae4617825" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.await()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.await()</target>
        </trans-unit>
        <trans-unit id="6c70cd60e423c177b840231944f14992b967a315" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitNanos()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitNanos()</target>
        </trans-unit>
        <trans-unit id="f8999122886d58e4602271109afebf1aaa153ddf" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitUninterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitUninterruptibly()</target>
        </trans-unit>
        <trans-unit id="524e2a7011d8aa86cd165ea6425735ef30df6602" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.awaitUntil()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.awaitUntil()</target>
        </trans-unit>
        <trans-unit id="e296c4238ec43e22d3e3563c6e8ed13a1737bd54" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.getWaitQueueLength()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.getWaitQueueLength()</target>
        </trans-unit>
        <trans-unit id="826b1f9f191de3dbb81e74fc28082dfd5c5ed228" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.getWaitingThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.getWaitingThreads()</target>
        </trans-unit>
        <trans-unit id="82d789cf89bbf64efda9329a54415275b835e7e5" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.hasWaiters()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.hasWaiters()</target>
        </trans-unit>
        <trans-unit id="e643e92a43817dadd15c5cc9e36762ba64667742" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.signal()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.signal()</target>
        </trans-unit>
        <trans-unit id="dc3163b2bafe215bc4c6eb404d082b075e6f4279" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.ConditionObject.signalAll()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.ConditionObject.signalAll()</target>
        </trans-unit>
        <trans-unit id="2f50f3f8c73cae2598915bafc4ac11fda6050c9c" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquire()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquire()</target>
        </trans-unit>
        <trans-unit id="6f93cc89c8ec1629b6ac346a12888cca95b3e31b" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireInterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireInterruptibly()</target>
        </trans-unit>
        <trans-unit id="4d71f71c4d38cc2089052ddea42d31cbd06ea79d" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireShared()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireShared()</target>
        </trans-unit>
        <trans-unit id="09948d21ffa6a152a431ba89bc8b5732797ad4cf" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.acquireSharedInterruptibly()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.acquireSharedInterruptibly()</target>
        </trans-unit>
        <trans-unit id="8f61bc426556daeccf0812973f8aa5f249de6c6e" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.compareAndSetState()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.compareAndSetState()</target>
        </trans-unit>
        <trans-unit id="6655324e1b902bf2ba0845dd5a84cc1e2be40a05" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="fe8d5872867aeb0c0f3a9448b3f2dcf61dbd1b24" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getFirstQueuedThread()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getFirstQueuedThread()</target>
        </trans-unit>
        <trans-unit id="d065c79b53b3df154b03906da3f48f38d6eddcd5" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getQueueLength()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getQueueLength()</target>
        </trans-unit>
        <trans-unit id="1ed21ddb79c61c5bba52f3cda5b6270ee6a7d373" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="c8f5478697f5f573b87a8011d757d532e95e0210" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getSharedQueuedThreads()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getSharedQueuedThreads()</target>
        </trans-unit>
        <trans-unit id="c643f4ce2d10b5ce35c24ebb2b87afc55350b6ba" translate="yes" xml:space="preserve">
          <source>AbstractQueuedLongSynchronizer.getState()</source>
          <target state="translated">AbstractQueuedLongSynchronizer.getState()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
