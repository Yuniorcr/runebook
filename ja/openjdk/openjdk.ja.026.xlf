<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="42eb4bbae3f9ef6ea11c82bbc13281ab0e4c2588" translate="yes" xml:space="preserve">
          <source>An absolute path is complete in that it doesn't need to be combined with other path information in order to locate a file.</source>
          <target state="translated">絶対パスは、ファイルを見つけるために他のパス情報と組み合わせる必要がないという点で完全なパスです。</target>
        </trans-unit>
        <trans-unit id="bffef8734765daab63d0b5ecd1dfdc4896413c2b" translate="yes" xml:space="preserve">
          <source>An absolute, hierarchical URI with a scheme equal to &lt;code&gt;&quot;file&quot;&lt;/code&gt;, a path representing this abstract pathname, and undefined authority, query, and fragment components</source>
          <target state="translated">&lt;code&gt;&quot;file&quot;&lt;/code&gt; に等しいスキーム、この抽象的なパス名を表すパス、および未定義の権限、クエリ、フラグメントコンポーネントを持つ絶対的な階層URI</target>
        </trans-unit>
        <trans-unit id="aaf73b27871ad2dcf58fe937c4251128a2c44fc2" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfDouble&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">制限された並列 &lt;code&gt;trySplit&lt;/code&gt; を許可するために &lt;code&gt;Spliterator.OfDouble&lt;/code&gt; を実装する抽象Spliterator.OfDouble。</target>
        </trans-unit>
        <trans-unit id="c2fa2c5de4495301c17f9c874474b9be3f8f2cfc" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfInt&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">制限された並列 &lt;code&gt;trySplit&lt;/code&gt; を許可するために &lt;code&gt;Spliterator.OfInt&lt;/code&gt; を実装する抽象Spliterator.OfInt。</target>
        </trans-unit>
        <trans-unit id="6076f97f545a7e444ef14f7c17630cb19e7b3a86" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfLong&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">制限された並列 &lt;code&gt;trySplit&lt;/code&gt; を許可するために &lt;code&gt;Spliterator.OfLong&lt;/code&gt; を実装する抽象Spliterator.OfLong。</target>
        </trans-unit>
        <trans-unit id="ec618e04c159f3233d9d95ebe020e1a095fa7e09" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">制限された並列 &lt;code&gt;trySplit&lt;/code&gt; を許可するために &lt;code&gt;Spliterator&lt;/code&gt; を実装する抽象Spliterator。</target>
        </trans-unit>
        <trans-unit id="1725ec70c594bf6143b68d0d3f69604ee103f163" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving print job events.</source>
          <target state="translated">印刷ジョブイベントを受信するための抽象アダプタクラス。</target>
        </trans-unit>
        <trans-unit id="4962c7979856b07aa0561bb05b61d8eb8f071ac0" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving print job events. The methods in this class are empty. This class exists as a convenience for creating listener objects. Extend this class to create a &lt;a href=&quot;printjobevent&quot;&gt;&lt;code&gt;PrintJobEvent&lt;/code&gt;&lt;/a&gt; listener and override the methods for the events of interest. Unlike the &lt;a href=&quot;/openjdk~8_gui/java/awt/event/componentlistener&quot;&gt;&lt;code&gt;ComponentListener&lt;/code&gt;&lt;/a&gt; interface, this abstract interface provides null methods so that you only need to define the methods you need, rather than all of the methods.</source>
          <target state="translated">印刷ジョブイベントを受け取るための抽象アダプタークラス。このクラスのメソッドは空です。このクラスは、リスナーオブジェクトを作成するための便宜として存在します。このクラスを拡張して&lt;a href=&quot;printjobevent&quot;&gt; &lt;code&gt;PrintJobEvent&lt;/code&gt; &lt;/a&gt;リスナーを作成し、対象のイベントのメソッドをオーバーライドします。&lt;a href=&quot;/openjdk~8_gui/java/awt/event/componentlistener&quot;&gt; &lt;code&gt;ComponentListener&lt;/code&gt; &lt;/a&gt;インターフェースとは異なり、この抽象インターフェースはnullメソッドを提供するため、すべてのメソッドではなく、必要なメソッドのみを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="a80d551f3b11dff11019244e6d437ea72995aadb" translate="yes" xml:space="preserve">
          <source>An abstract annotation processor designed to be a convenient superclass for most concrete annotation processors.</source>
          <target state="translated">ほとんどの具象注釈プロセッサのための便利なスーパークラスとして設計された抽象注釈プロセッサ。</target>
        </trans-unit>
        <trans-unit id="e5702bfe60fe98c79f1e7d3ecec398a4727eeb65" translate="yes" xml:space="preserve">
          <source>An abstract annotation processor designed to be a convenient superclass for most concrete annotation processors. This class examines annotation values to compute the &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;options&lt;/a&gt;, &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;annotation types&lt;/a&gt;, and &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;source version&lt;/a&gt; supported by its subtypes.</source>
          <target state="translated">ほとんどの具象アノテーションプロセッサにとって便利なスーパークラスになるように設計された抽象アノテーションプロセッサ。このクラスは、注釈値を調べて、そのサブタイプでサポートされている&lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;オプション&lt;/a&gt;、&lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;注釈タイプ&lt;/a&gt;、および&lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;ソースバージョン&lt;/a&gt;を計算します。</target>
        </trans-unit>
        <trans-unit id="009646b2f615da0514565567d20f108ce6f7a605" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../breakiterator&quot;&gt;&lt;code&gt;BreakIterator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../breakiterator&quot;&gt; &lt;code&gt;BreakIterator&lt;/code&gt; &lt;/a&gt;クラスの具体的な実装を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="b764d8e0dd1b7d278f74e81b97506264a244b6bf" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;クラスの具体的な実装を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="c571755642cefdb0beb7220506bf1152322336ff" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt;クラスの具体的な実装を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="8da2e0907e0b8e895f3071cd44922aefbb842799" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;クラスの具体的な実装を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="2c06f3dee5f3cf3918d735d064a37ba3b1c2f5ba" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;../dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="ade1ba7e233bfd984e9f78cab1f28fbf7f6fa058" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;../decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="690c2e1d1018a05068138aed006eaec9ccd9482c" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide locale-dependent &lt;a href=&quot;../calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">ロケールに依存する&lt;a href=&quot;../calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;パラメータを提供するサービスプロバイダの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="15118c33856866098bb2758cd887dfb0942afe80" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized currency symbols and display names for the &lt;a href=&quot;../currency&quot;&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">ローカライズされた通貨記号と&lt;a href=&quot;../currency&quot;&gt; &lt;code&gt;Currency&lt;/code&gt; &lt;/a&gt;クラスの表示名を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="cc07eaa2a48ef427eda6417dde036890767564e5" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized currency symbols and display names for the &lt;a href=&quot;../currency&quot;&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/a&gt; class. Note that currency symbols are considered names when determining behaviors described in the &lt;a href=&quot;localeserviceprovider&quot;&gt;&lt;code&gt;LocaleServiceProvider&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">ローカライズされた通貨記号と&lt;a href=&quot;../currency&quot;&gt; &lt;code&gt;Currency&lt;/code&gt; &lt;/a&gt;クラスの表示名を提供するサービスプロバイダーの抽象クラス。&lt;a href=&quot;localeserviceprovider&quot;&gt; &lt;code&gt;LocaleServiceProvider&lt;/code&gt; &lt;/a&gt;仕様で説明されている動作を決定する場合、通貨記号は名前と見なされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="108fcb539c49163d7fbd58a0d0e0c4844a08df47" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized names for the &lt;a href=&quot;../locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;クラスのローカライズされた名前を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="8b256820ed22b57293b577b7d443706b1918e366" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized string representations (display names) of &lt;code&gt;Calendar&lt;/code&gt; field values.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; フィールド値のローカライズされた文字列表現（表示名）を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="0b978f1331fba49efd486686b9de04f717be9c60" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;../timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスのローカライズされたタイムゾーン名を提供するサービスプロバイダーの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="b79e07cc378372a1f54085a60400b522e9d8e1bd" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;../timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class. The localized time zone names available from the implementations of this class are also the source for the &lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings--&quot;&gt;&lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスのローカライズされたタイムゾーン名を提供するサービスプロバイダーの抽象クラス。このクラスの実装から利用可能なローカライズされたタイムゾーン名は、&lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings--&quot;&gt; &lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt; &lt;/a&gt;メソッドのソースでもあります。</target>
        </trans-unit>
        <trans-unit id="1f458cc8e441b88433ddd7e555407de6e6f4d215" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageInputStream&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; インターフェースを実装する抽象クラス。</target>
        </trans-unit>
        <trans-unit id="49343ad1181b51e3671145c945c3b03b831bb8b5" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageInputStream&lt;/code&gt; interface. This class is designed to reduce the number of methods that must be implemented by subclasses.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; インターフェースを実装する抽象クラス。このクラスは、サブクラスで実装する必要のあるメソッドの数を減らすように設計されています。</target>
        </trans-unit>
        <trans-unit id="476d7596e90918fe5ce80c2b2b437360aa326e2a" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageOutputStream&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; インターフェースを実装する抽象クラス。</target>
        </trans-unit>
        <trans-unit id="151c68ec149d25e9b76337087ed8e3618ec31ab9" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageOutputStream&lt;/code&gt; interface. This class is designed to reduce the number of methods that must be implemented by subclasses.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; インターフェースを実装する抽象クラス。このクラスは、サブクラスで実装する必要のあるメソッドの数を減らすように設計されています。</target>
        </trans-unit>
        <trans-unit id="9f4ccadec92f3d6b659e6ebe5ca8e35b4179e48f" translate="yes" xml:space="preserve">
          <source>An abstract class that performs one or more checks on an &lt;code&gt;X509Certificate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X509Certificate&lt;/code&gt; で 1つ以上のチェックを実行する抽象クラス。</target>
        </trans-unit>
        <trans-unit id="cdc1078a2fabb344fe1cd8c3c00c1d40b579e900" translate="yes" xml:space="preserve">
          <source>An abstract class to be extended by objects that represent metadata (non-image data) associated with images and streams.</source>
          <target state="translated">画像やストリームに関連付けられたメタデータ(非画像データ)を表現するオブジェクトによって拡張される抽象クラス。</target>
        </trans-unit>
        <trans-unit id="dd0ebcda77af4d0f30eb7405b6592dcce230b3fb" translate="yes" xml:space="preserve">
          <source>An abstract class to be extended by objects that represent metadata (non-image data) associated with images and streams. Plug-ins represent metadata using opaque, plug-in specific objects. These objects, however, provide the ability to access their internal information as a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt; objects that support the XML DOM interfaces as well as additional interfaces for storing non-textual data and retrieving information about legal data values. The format of such trees is plug-in dependent, but plug-ins may choose to support a plug-in neutral format described below. A single plug-in may support multiple metadata formats, whose names maybe determined by calling &lt;code&gt;getMetadataFormatNames&lt;/code&gt;. The plug-in may also support a single special format, referred to as the &quot;native&quot; format, which is designed to encode its metadata losslessly. This format will typically be designed specifically to work with a specific file format, so that images may be loaded and saved in the same format with no loss of metadata, but may be less useful for transferring metadata between an &lt;code&gt;ImageReader&lt;/code&gt; and an &lt;code&gt;ImageWriter&lt;/code&gt; for different image formats. To convert between two native formats as losslessly as the image file formats will allow, an &lt;code&gt;ImageTranscoder&lt;/code&gt; object must be used.</source>
          <target state="translated">画像とストリームに関連付けられたメタデータ（非画像データ）を表すオブジェクトによって拡張される抽象クラス。プラグインは、不透明なプラグイン固有のオブジェクトを使用してメタデータを表します。ただし、これらのオブジェクトは、XML DOMインターフェースをサポートする &lt;code&gt;IIOMetadataNode&lt;/code&gt; オブジェクトのツリーとして内部情報にアクセスする機能と、非テキストデータを格納し、正当なデータ値に関する情報を取得するための追加インターフェースを提供します。このようなツリーのフォーマットはプラグインに依存しますが、プラグインは、以下で説明するプラグインニュートラルフォーマットをサポートすることを選択できます。単一のプラグインが複数のメタデータ形式をサポートする場合があり、その名前は &lt;code&gt;getMetadataFormatNames&lt;/code&gt; を呼び出すことによって決定される場合があります。。プラグインは、「ネイティブ」フォーマットと呼ばれる単一の特別なフォーマットもサポートする場合があります。これは、メタデータをロスレスでエンコードするように設計されています。この形式は通常、特定のファイル形式で動作するように特別に設計されているため、メタデータを失うことなく画像を同じ形式でロードして保存できますが、異なる画像の &lt;code&gt;ImageReader&lt;/code&gt; と &lt;code&gt;ImageWriter&lt;/code&gt; の間でメタデータを転送するのにはあまり役立ちません。フォーマット。 2つのネイティブ形式を画像ファイル形式で可能な限りロスレスに &lt;code&gt;ImageTranscoder&lt;/code&gt; するには、ImageTranscoderオブジェクトを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fbc238f52e9b0369d8d6feac585f532fe3c79392" translate="yes" xml:space="preserve">
          <source>An abstract implementation of a calendar system, used to organize and identify dates.</source>
          <target state="translated">カレンダーシステムの抽象的な実装で、日付を整理して識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7b673aa232f472e900373570c4b210073bade5b3" translate="yes" xml:space="preserve">
          <source>An abstract pathname denoting a newly-created empty file</source>
          <target state="translated">新しく作成された空のファイルを表す抽象パス名</target>
        </trans-unit>
        <trans-unit id="83b31a7b61002c7d0f84ed3f8d96a8a46141936d" translate="yes" xml:space="preserve">
          <source>An abstract representation of file and directory pathnames.</source>
          <target state="translated">ファイルとディレクトリのパス名を抽象的に表現したもの。</target>
        </trans-unit>
        <trans-unit id="e0f679c55894b5892fa60675f66c243d1d8b3ec2" translate="yes" xml:space="preserve">
          <source>An abstract superclass for encoding and writing images.</source>
          <target state="translated">画像をエンコードして書き込むための抽象的なスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="48c806f3edb65492962375f9ceccf41f068921f8" translate="yes" xml:space="preserve">
          <source>An abstract superclass for encoding and writing images. This class must be subclassed by classes that write out images in the context of the Java Image I/O framework.</source>
          <target state="translated">画像をエンコードして書き出すための抽象的なスーパークラス。このクラスは、Java Image I/O フレームワークのコンテキストで画像を書き出すクラスによってサブクラス化されなければなりません。</target>
        </trans-unit>
        <trans-unit id="d1c16b9886fcbee0d8fe48ece5dfb8fb96ec7a5b" translate="yes" xml:space="preserve">
          <source>An abstract superclass for parsing and decoding of images.</source>
          <target state="translated">画像の解析とデコードのための抽象的なスーパークラス.</target>
        </trans-unit>
        <trans-unit id="7d0189d2489db5e3511b17ed06bfc874d45e8dc5" translate="yes" xml:space="preserve">
          <source>An abstract superclass for parsing and decoding of images. This class must be subclassed by classes that read in images in the context of the Java Image I/O framework.</source>
          <target state="translated">画像の解析とデコードのための抽象的なスーパークラスです。このクラスは、Java Image I/O フレームワークのコンテキストで画像を読み込むクラスによってサブクラス化されなければなりません。</target>
        </trans-unit>
        <trans-unit id="c596146e8da9e7a6ca55d13ebcccbd3439a4fcf9" translate="yes" xml:space="preserve">
          <source>An abstract wrapper class for an &lt;code&gt;EventListener&lt;/code&gt; class which associates a set of additional parameters with the listener.</source>
          <target state="translated">追加パラメーターのセットをリスナーに関連付ける &lt;code&gt;EventListener&lt;/code&gt; クラスの抽象ラッパークラス。</target>
        </trans-unit>
        <trans-unit id="6da126755702abead0fc328ffed9b176b2437d17" translate="yes" xml:space="preserve">
          <source>An abstract wrapper class for an &lt;code&gt;EventListener&lt;/code&gt; class which associates a set of additional parameters with the listener. Subclasses must provide the storage and accessor methods for the additional arguments or parameters.</source>
          <target state="translated">追加パラメーターのセットをリスナーに関連付ける &lt;code&gt;EventListener&lt;/code&gt; クラスの抽象ラッパークラス。サブクラスは、追加の引数またはパラメーター用のストレージおよびアクセサーメソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="87d9498487ae22638db2c1507e7adfbd2ab35666" translate="yes" xml:space="preserve">
          <source>An agent provides an implementation of this interface in order to transform class files.</source>
          <target state="translated">エージェントは、クラスファイルを変換するために、このインターフェイスの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="87d0888fa7c65da6fccada4341b5a807b948902e" translate="yes" xml:space="preserve">
          <source>An agent provides an implementation of this interface in order to transform class files. The transformation occurs before the class is defined by the JVM.</source>
          <target state="translated">エージェントは、クラスファイルを変換するために、このインタフェースの実装を提供します。変換は、クラスがJVMによって定義される前に行われます。</target>
        </trans-unit>
        <trans-unit id="604cb2d9140d6a6048804ee6cdf5bc9c601f218a" translate="yes" xml:space="preserve">
          <source>An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains algorithm parameter specifications for parameters used with the Diffie-Hellman, DES, Triple DES, PBE, RC2 and RC5 algorithms.</source>
          <target state="translated">アルゴリズムのパラメータ仕様は、アルゴリズムで使用されるパラメータのセットを透過的に表現したものです。本パッケージには、Diffie-Hellman、DES、Triple DES、PBE、RC2、RC5 アルゴリズムで使用されるパラメータのアルゴリズムパラメータ仕様が含まれています。</target>
        </trans-unit>
        <trans-unit id="053397605f9db7fc2042b2238d7785c0706e1c43" translate="yes" xml:space="preserve">
          <source>An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains an algorithm parameter specification for parameters used with the DSA algorithm.</source>
          <target state="translated">アルゴリズムパラメータ仕様は、アルゴリズムで使用されるパラメータのセットを透過的に表現したものです。本パッケージには、DSA アルゴリズムで使用されるパラメータのアルゴリズム・パラメータ仕様が含まれます。</target>
        </trans-unit>
        <trans-unit id="ef9af4ca138f115407607c3b7d84581e03c84cb3" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided long edge&quot; (see &lt;a href=&quot;sides#TWO_SIDED_LONG_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">「両側長辺」のエイリアス（&lt;a href=&quot;sides#TWO_SIDED_LONG_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8b37d6159a9bdd97f7d3c1960ee5753f16618b62" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided short edge&quot; (see &lt;a href=&quot;sides#TWO_SIDED_SHORT_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">「両側短辺」のエイリアス（&lt;a href=&quot;sides#TWO_SIDED_SHORT_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="0cec8f4c8316cb9ae751b7e70e52b1cd0ebd923d" translate="yes" xml:space="preserve">
          <source>An alphabetic character (&lt;a href=&quot;#ubpc&quot;&gt;binary property&lt;/a&gt;)</source>
          <target state="translated">英字（&lt;a href=&quot;#ubpc&quot;&gt;バイナリプロパティ&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7ce8c43e64a39d3100c6fa7ef95283df115ca794" translate="yes" xml:space="preserve">
          <source>An alphabetic character:&lt;code&gt;[\p{Lower}\p{Upper}]&lt;/code&gt;</source>
          <target state="translated">アルファベット文字： &lt;code&gt;[\p{Lower}\p{Upper}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68497dca612686ff23e0de730e5d394c71e4efea" translate="yes" xml:space="preserve">
          <source>An alphabetic character:&lt;code&gt;\p{IsAlphabetic}&lt;/code&gt;</source>
          <target state="translated">英字： &lt;code&gt;\p{IsAlphabetic}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01bae5e119df9571fe53de2b4e015bb858374054" translate="yes" xml:space="preserve">
          <source>An alphanumeric character:&lt;code&gt;[\p{Alpha}\p{Digit}]&lt;/code&gt;</source>
          <target state="translated">英数字： &lt;code&gt;[\p{Alpha}\p{Digit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f93f2b6877cd8e093f0fc8be34e5e7da7d63657b" translate="yes" xml:space="preserve">
          <source>An alphanumeric character:&lt;code&gt;[\p{IsAlphabetic}\p{IsDigit}]&lt;/code&gt;</source>
          <target state="translated">英数字： &lt;code&gt;[\p{IsAlphabetic}\p{IsDigit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cdb53a3b6bd22f0d34b46ad6ec4a7e7798d55" translate="yes" xml:space="preserve">
          <source>An alternative form that is sometimes more convenient when dealing with a mixed environment of IPv4 and IPv6 nodes is x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of the six high-order 16-bit pieces of the address, and the 'd's are the decimal values of the four low-order 8-bit pieces of the standard IPv4 representation address, for example,</source>
          <target state="translated">IPv4とIPv6ノードの混在環境を扱う場合に便利な代替形式は、x:x:x:x:x:x:x:x:d.d.d.d.dであり、「x」はアドレスの6つの高次16ビット部分の16進数値であり、「d」は標準IPv4表現アドレスの4つの低次8ビット部分の10進数値である。</target>
        </trans-unit>
        <trans-unit id="083958913c8349ff856a6a31a6ab26c418405a16" translate="yes" xml:space="preserve">
          <source>An alternative to this method is to format/parse the instant as a single epoch-seconds value. That is achieved using &lt;code&gt;appendValue(INSTANT_SECONDS)&lt;/code&gt;.</source>
          <target state="translated">この方法の代替方法は、インスタントを単一のエポック秒値としてフォーマット/解析することです。これは、 &lt;code&gt;appendValue(INSTANT_SECONDS)&lt;/code&gt; を使用して実現されます。</target>
        </trans-unit>
        <trans-unit id="b1d963055d377ae73238a3fcaf60406dc89690eb" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.Iterator-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class, such as when there is already an iterator available to use.</source>
          <target state="translated">このクラスを使用する代わりに、並列処理を制限することもできますが、イテレーターからSpliteratorを作成すること&lt;a href=&quot;spliterators#spliterator-java.util.Iterator-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt; &lt;/a&gt;参照）。イテレーターを使用する状況によっては、これを拡張するよりも簡単または便利な場合があります使用可能なイテレータがすでにある場合など。</target>
        </trans-unit>
        <trans-unit id="ce1c77f733ad4ab08c17256908e33a35b3aac8bb" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfDouble-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">このクラスを使用する代わりに、並列処理を制限することもできますが、イテレーターからスプリッターを作成すること&lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfDouble-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt; &lt;/a&gt;。イテレーターを使用する状況によっては、より簡単になる場合があります。たとえば、このクラスを拡張するよりも便利です。たとえば、使用できるイテレータがすでにある場合は、このクラスを拡張する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9867f0c7b196e2e6f09d53e33ea9a2c2cd678c54" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfInt-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">このクラスを使用する代わりに、並列処理を制限することもできますが、イテレーターからスプリッターを作成すること&lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfInt-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt; &lt;/a&gt;。イテレーターを使用する状況によっては、より簡単になる場合があります。たとえば、このクラスを拡張するよりも便利です。たとえば、使用できるイテレータがすでにある場合は、このクラスを拡張する必要はありません。</target>
        </trans-unit>
        <trans-unit id="aef6f9ffa1f8a2d7438871b437f7fa6fac738a89" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfLong-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">このクラスを使用する代わりに、並列処理を制限することもできますが、イテレータからスプリテレータを作成すること&lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfLong-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt; &lt;/a&gt;。イテレータを使用する状況によっては、より簡単になる場合があります。たとえば、このクラスを拡張するよりも便利です。たとえば、使用できるイテレータがすでにある場合は、このクラスを拡張する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6450ce02ff2ddd2c7e118d5649cd28ea6722fb97" translate="yes" xml:space="preserve">
          <source>An annotation</source>
          <target state="translated">アノテーション</target>
        </trans-unit>
        <trans-unit id="f5734ec0c21b484a464b6c058a863248b0ec82e2" translate="yes" xml:space="preserve">
          <source>An annotation element to be converted into a descriptor field can be of any type allowed by the Java language, except an annotation or an array of annotations. The value of the field is derived from the value of the annotation element as follows:</source>
          <target state="translated">記述子フィールドに変換される注釈要素は,注釈または注釈の配列を除き,Java言語で許可されている任意の型をとることができる。フィールドの値は,次のように注釈要素の値から導出される。</target>
        </trans-unit>
        <trans-unit id="88dbabf4d218c33507c48f49c53826848a61d2d1" translate="yes" xml:space="preserve">
          <source>An annotation is present if it meets the definition of being present given in &lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt;&lt;code&gt;AnnotatedConstruct&lt;/code&gt;&lt;/a&gt;. In brief, an annotation is considered present for the purposes of discovery if it is directly present or present via inheritance. An annotation is &lt;em&gt;not&lt;/em&gt; considered present by virtue of being wrapped by a container annotation. Operationally, this is equivalent to an annotation being present on an element if and only if it would be included in the results of &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt;&lt;/a&gt; called on that element. Since annotations inside container annotations are not considered present, to properly process &lt;a href=&quot;../../../java/lang/annotation/repeatable&quot;&gt;repeatable annotation types&lt;/a&gt;, processors are advised to include both the repeatable annotation type and its containing annotation type in the set of &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;supported annotation types&lt;/a&gt; of a processor.</source>
          <target state="translated">&lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt; &lt;code&gt;AnnotatedConstruct&lt;/code&gt; で&lt;/a&gt;指定された存在の定義と一致する場合、注釈は存在します。簡単に言うと、注釈が直接存在するか、継承を介して存在する場合、注釈は発見の目的で存在すると見なされます。アノテーションは、コンテナアノテーションによってラップされているため、存在すると&lt;em&gt;は&lt;/em&gt;見なされ&lt;em&gt;ません&lt;/em&gt;。操作上、これは、要素で呼び出された&lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt; の&lt;/a&gt;結果に含まれる場合にのみ、要素に存在する注釈と同等です。コンテナアノテーション内のアノテーションは存在するとは見なされないため、&lt;a href=&quot;../../../java/lang/annotation/repeatable&quot;&gt;繰り返し可能なアノテーションタイプ&lt;/a&gt;を適切に処理する、プロセッサは、プロセッサの&lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;サポートされている注釈タイプの&lt;/a&gt;セットに、反復可能な注釈タイプとそれを含む注釈タイプの両方を含めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d592d8db7f59b40201b85bc8b8b68b5038e10571" translate="yes" xml:space="preserve">
          <source>An annotation of type</source>
          <target state="translated">型のアノテーション</target>
        </trans-unit>
        <trans-unit id="210c41a9b3e705c1fb284be5821159ae62174d20" translate="yes" xml:space="preserve">
          <source>An annotation on a constructor that shows how the parameters of that constructor correspond to the constructed object's getter methods.</source>
          <target state="translated">コンストラクタのアノテーションで、そのコンストラクタのパラメータが構築されたオブジェクトのゲッターメソッドにどのように対応しているかを示します。</target>
        </trans-unit>
        <trans-unit id="eefaa37f9e0c544c9a81690204c518d2ff2f4d2f" translate="yes" xml:space="preserve">
          <source>An annotation on a constructor that shows how the parameters of that constructor correspond to the constructed object's getter methods. For example:</source>
          <target state="translated">コンストラクタのアノテーションで、そのコンストラクタのパラメータが構築されたオブジェクトのゲッターメソッドにどのように対応しているかを示します。たとえば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="f74cfaa213e89d66c4289b69d7b8d430381f0284" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#init-javax.annotation.processing.ProcessingEnvironment-&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so the processor can use facilities provided by the framework to write new files, report error messages, and find other utilities.</source>
          <target state="translated">注釈処理ツールフレームワークは&lt;a href=&quot;processor#init-javax.annotation.processing.ProcessingEnvironment-&quot;&gt;、このインターフェイスを実装するオブジェクトを注釈プロセッサに提供するため、プロセッサは、&lt;/a&gt;フレームワークが提供する機能を使用して、新しいファイルの書き込み、エラーメッセージの報告、およびその他のユーティリティの検索を行うことができます。</target>
        </trans-unit>
        <trans-unit id="524e047ff62f709be208951e5ef19c0a1d9c3ef1" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so that the processor can query for information about a round of annotation processing.</source>
          <target state="translated">注釈処理ツールフレームワークは&lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;、注釈プロセッサにこのインターフェイスを実装するオブジェクト&lt;/a&gt;を提供し、プロセッサが一連の注釈処理に関する情報を照会できるようにします。</target>
        </trans-unit>
        <trans-unit id="8a4458ea6ca9543231479be25a4283c86fadd141" translate="yes" xml:space="preserve">
          <source>An annotation such as &lt;code&gt;@Units&lt;/code&gt; can be applied to:</source>
          <target state="translated">&lt;code&gt;@Units&lt;/code&gt; などの注釈は、以下に適用できます。</target>
        </trans-unit>
        <trans-unit id="8b6df1660030d3e87e06eed015ee71e977deaa5e" translate="yes" xml:space="preserve">
          <source>An annotation type is considered present if there is at least one annotation of that type present on an element enclosed within the root elements of a round. For this purpose, a type parameter is considered to be enclosed by its &lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement--&quot;&gt;generic element&lt;/a&gt;. Annotations on &lt;a href=&quot;../../../java/lang/annotation/elementtype#TYPE_USE&quot;&gt;type uses&lt;/a&gt;, as opposed to annotations on elements, are ignored when computing whether or not an annotation type is present.</source>
          <target state="translated">ラウンドのルート要素で囲まれた要素にそのタイプの注釈が少なくとも1つ存在する場合、注釈タイプは存在すると見なされます。この目的のために、型パラメーターはその&lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement--&quot;&gt;総称要素で&lt;/a&gt;囲まれていると見なされます。上の注釈&lt;a href=&quot;../../../java/lang/annotation/elementtype#TYPE_USE&quot;&gt;タイプの用途は&lt;/a&gt;注釈型が存在するか否かを計算するとき、要素上の注釈とは対照的に、無視されます。</target>
        </trans-unit>
        <trans-unit id="14e63b563a5a2a3136f10849cb425c952686e9de" translate="yes" xml:space="preserve">
          <source>An annotation type.</source>
          <target state="translated">アノテーションタイプ。</target>
        </trans-unit>
        <trans-unit id="5acf22469336e91ec7942742a86f8fb00dd7e069" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate the latest source version an annotation processor supports.</source>
          <target state="translated">アノテーション・プロセッサがサポートする最新のソース・バージョンを示すために使用されるアノテーション。</target>
        </trans-unit>
        <trans-unit id="75a22bca3d43b7e0045022a54654e9232487a478" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate the latest source version an annotation processor supports. The &lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt;&lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注釈プロセッサがサポートする最新のソースバージョンを示すために使用される注釈。&lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt; &lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt;によって行われた方法は、この注釈の値から、その結果を構築することができる&lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4031e4bf917fdf8281946e5549b65817c6e956cf" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what annotation types an annotation processor supports.</source>
          <target state="translated">アノテーションプロセッサがサポートするアノテーションタイプを示すために使用されるアノテーション。</target>
        </trans-unit>
        <trans-unit id="9c6b615866c974b486b01e734a1db2e9117def2e" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what annotation types an annotation processor supports. The &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;&lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">注釈プロセッサがサポートする注釈タイプを示すために使用される注釈。&lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt; &lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt;によって行われた方法は、この注釈の値から、その結果を構築することができる&lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt;。値として使用できるの&lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;は、文法に準拠した文字列&lt;/a&gt;のみです。</target>
        </trans-unit>
        <trans-unit id="f60174ffc1f6b3c4b12023190798b68e02120e59" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what options an annotation processor supports.</source>
          <target state="translated">アノテーションプロセッサがサポートするオプションを示すために使用されるアノテーション。</target>
        </trans-unit>
        <trans-unit id="e1dd2d1ae6f44b3ce4963b186b86ccaef326db35" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what options an annotation processor supports. The &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;&lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">注釈プロセッサがサポートするオプションを示すために使用される注釈。&lt;a href=&quot;processor#getSupportedOptions--&quot;&gt; &lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt;によって行われた方法は、この注釈の値から、その結果を構築することができる&lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt;。値として使用できるの&lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;は、文法に準拠した文字列&lt;/a&gt;のみです。</target>
        </trans-unit>
        <trans-unit id="fc0124064e76c2d95eff56f01c731d039597afbe" translate="yes" xml:space="preserve">
          <source>An application can access a platform MXBean in the following ways:</source>
          <target state="translated">アプリケーションは、以下の方法でプラットフォームMXBeanにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1727be2804c6184e0af4d6ab5dd3aa80267da524" translate="yes" xml:space="preserve">
          <source>An application can also specify a &quot;relative URL&quot;, which contains only enough information to reach the resource relative to another URL. Relative URLs are frequently used within HTML pages. For example, if the contents of the URL:</source>
          <target state="translated">アプリケーションは「相対 URL」を指定することもでき、これは別の URL から相対的にリソースに到達するための十分な情報のみを含んでいます。相対 URL は、HTML ページ内で頻繁に使用されます。例えば、URLの内容が</target>
        </trans-unit>
        <trans-unit id="115e820fd6fddc9f896d73ad580483a2f6d34311" translate="yes" xml:space="preserve">
          <source>An application can continuously monitor its memory usage by calling either the &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method for all memory pools or the &lt;a href=&quot;memorypoolmxbean#isUsageThresholdExceeded--&quot;&gt;&lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt;&lt;/a&gt; method for those memory pools that support a usage threshold. Below is example code that has a thread dedicated for task distribution and processing. At every interval, it will determine if it should receive and process new tasks based on its memory usage. If the memory usage exceeds its usage threshold, it will redistribute all outstanding tasks to other VMs and stop receiving new tasks until the memory usage returns below its usage threshold.</source>
          <target state="translated">アプリケーションは、すべてのメモリプールに対して&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、使用量のしきい値をサポートするメモリプールに対して&lt;a href=&quot;memorypoolmxbean#isUsageThresholdExceeded--&quot;&gt; &lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、メモリ使用量を継続的に監視できます。以下は、タスクの分散と処理専用のスレッドを持つコード例です。間隔ごとに、メモリ使用量に基づいて新しいタスクを受信して​​処理する必要があるかどうかを判断します。メモリ使用量がその使用量しきい値を超えると、すべての未処理のタスクが他のVMに再分配され、メモリ使用量が使用量しきい値を下回るまで新しいタスクの受信が停止されます。</target>
        </trans-unit>
        <trans-unit id="66fc3bccd62c8102da3996580d8b65f0059250a1" translate="yes" xml:space="preserve">
          <source>An application can increase the capacity of an &lt;code&gt;ArrayList&lt;/code&gt; instance before adding a large number of elements using the &lt;code&gt;ensureCapacity&lt;/code&gt; operation. This may reduce the amount of incremental reallocation.</source>
          <target state="translated">アプリケーションは、 &lt;code&gt;ensureCapacity&lt;/code&gt; 操作を使用して多数の要素を追加する前に、 &lt;code&gt;ArrayList&lt;/code&gt; インスタンスの容量を増やすことができます。これにより、増分再割り当ての量が削減される場合があります。</target>
        </trans-unit>
        <trans-unit id="091a5d260c75e604688568fbefd6e2d812988aa0" translate="yes" xml:space="preserve">
          <source>An application can monitor the instrumentation of the Java virtual machine and the runtime in the following ways:</source>
          <target state="translated">アプリケーションは、以下の方法でJava仮想マシンとランタイムのインストルメンテーションを監視することができます。</target>
        </trans-unit>
        <trans-unit id="95ca80e3187e793ccf9eeb8bfbb650ebc2101454" translate="yes" xml:space="preserve">
          <source>An application can use the method &lt;code&gt;targetMustExist()&lt;/code&gt; to check whether a &lt;code&gt;EventContext&lt;/code&gt; supports registration of nonexistent targets.</source>
          <target state="translated">アプリケーションは、メソッド &lt;code&gt;targetMustExist()&lt;/code&gt; を使用して、 &lt;code&gt;EventContext&lt;/code&gt; が存在しないターゲットの登録をサポートしているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="90ef8a309089eacf6ad4cc4d7c0a38bbfa3a99e3" translate="yes" xml:space="preserve">
          <source>An application cannot create its own instance of this class.</source>
          <target state="translated">アプリケーションは、このクラスの独自のインスタンスを作成することはできません。</target>
        </trans-unit>
        <trans-unit id="8a6df7d151a5d6f20800947f9d0709eba3db671b" translate="yes" xml:space="preserve">
          <source>An application does not generally call the &lt;code&gt;getContent&lt;/code&gt; method in this class directly. Instead, an application calls the &lt;code&gt;getContent&lt;/code&gt; method in class &lt;code&gt;URL&lt;/code&gt; or in &lt;code&gt;URLConnection&lt;/code&gt;. The application's content handler factory (an instance of a class that implements the interface &lt;code&gt;ContentHandlerFactory&lt;/code&gt; set up by a call to &lt;code&gt;setContentHandler&lt;/code&gt;) is called with a &lt;code&gt;String&lt;/code&gt; giving the MIME type of the object being received on the socket. The factory returns an instance of a subclass of &lt;code&gt;ContentHandler&lt;/code&gt;, and its &lt;code&gt;getContent&lt;/code&gt; method is called to create the object.</source>
          <target state="translated">通常、アプリケーションはこのクラスの &lt;code&gt;getContent&lt;/code&gt; メソッドを直接呼び出しません。代わりに、アプリケーションはクラス &lt;code&gt;URL&lt;/code&gt; または &lt;code&gt;URLConnection&lt;/code&gt; で &lt;code&gt;getContent&lt;/code&gt; メソッドを呼び出します。アプリケーションのコンテンツハンドラファクトリ（ &lt;code&gt;setContentHandler&lt;/code&gt; の呼び出しによって設定された &lt;code&gt;ContentHandlerFactory&lt;/code&gt; インタフェースを実装するクラスのインスタンス）は、ソケットで受信されるオブジェクトのMIMEタイプを示す &lt;code&gt;String&lt;/code&gt; 呼び出されます。ファクトリは &lt;code&gt;ContentHandler&lt;/code&gt; のサブクラスのインスタンスを返し、その &lt;code&gt;getContent&lt;/code&gt; メソッドが呼び出されてオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="87b5d029599758045135722547430a9d62275c1a" translate="yes" xml:space="preserve">
          <source>An application implements a &lt;code&gt;CallbackHandler&lt;/code&gt; and passes it to underlying security services so that they may interact with the application to retrieve specific authentication data, such as usernames and passwords, or to display certain information, such as error and warning messages.</source>
          <target state="translated">アプリケーションは &lt;code&gt;CallbackHandler&lt;/code&gt; を実装し、それを基盤のセキュリティサービスに渡して、アプリケーションと対話してユーザー名やパスワードなどの特定の認証データを取得したり、エラーや警告メッセージなどの特定の情報を表示したりできるようにします。</target>
        </trans-unit>
        <trans-unit id="c22cdb38f7fb3493695f954fef42383114c4d79a" translate="yes" xml:space="preserve">
          <source>An application invokes the static methods of the abstract class &lt;a href=&quot;printservicelookup&quot;&gt;&lt;code&gt;PrintServiceLookup&lt;/code&gt;&lt;/a&gt; to locate print services that have the capabilities to satisfy the application's print request. For example, to print a double-sided document, the application first needs to find printers that have the double-sided printing capability.</source>
          <target state="translated">アプリケーションは、抽象クラス&lt;a href=&quot;printservicelookup&quot;&gt; &lt;code&gt;PrintServiceLookup&lt;/code&gt; &lt;/a&gt;の静的メソッドを呼び出して、アプリケーションの印刷要求を満たす機能を持つ印刷サービスを見つけます。たとえば、両面ドキュメントを印刷するには、アプリケーションは最初に両面印刷機能を持つプリンタを見つける必要があります。</target>
        </trans-unit>
        <trans-unit id="de9e08aefd69e9f5ddcc0c29e20fb0e6d24be178" translate="yes" xml:space="preserve">
          <source>An application is guaranteed that a read or write operation of up to the number of bytes returned from &lt;code&gt;available()&lt;/code&gt; will not block; however, there is no guarantee that attempts to read or write more data will block.</source>
          <target state="translated">アプリケーションは、 &lt;code&gt;available()&lt;/code&gt; から返される最大バイト数の読み取りまたは書き込み操作がブロックされないことが保証されています。ただし、それ以上のデータの読み取りまたは書き込みを試みてもブロックされる保証はありません。</target>
        </trans-unit>
        <trans-unit id="968d5a5fff5cc194ef1dd6be86456eb4c6c94e48" translate="yes" xml:space="preserve">
          <source>An application may customize the contents of a registry as it sees fit, so long as it has the appropriate runtime permission.</source>
          <target state="translated">アプリケーションは、適切なランタイム権限を持っている限り、レジストリの内容を適切にカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="5f934c6948f61c9b624106e8b500f0eeb8ab4b49" translate="yes" xml:space="preserve">
          <source>An application may optionally pass in the flavor to be printed. If this is non-null choices presented to the user can be better validated against those supported by the services. An application must pass in a PrintRequestAttributeSet for returning user choices. On calling the PrintRequestAttributeSet may be empty, or may contain application-specified values.</source>
          <target state="translated">アプリケーションは、オプションで印刷するフレーバーを渡すことができます。これが非 null の場合、ユーザに提示される選択肢は、サービスがサポートしているものと比較してより適切に検証することができます。アプリケーションはユーザの選択肢を返すためにPrintRequestAttributeSetを渡さなければなりません。PrintRequestAttributeSetの呼び出し時には、空であってもよいし、アプリケーションが指定した値を含んでいてもよい。</target>
        </trans-unit>
        <trans-unit id="9dafe0eaf8756d624939acbe220b2060edebc94a" translate="yes" xml:space="preserve">
          <source>An application may pass in a PrintService to be initially displayed. A non-null parameter must be included in the array of browsable services. If this parameter is null a service is chosen by the implementation.</source>
          <target state="translated">アプリケーションは、最初に表示するPrintServiceを渡すことができます。NULLでないパラメータは、ブラウズ可能なサービスの配列に含まれていなければなりません。このパラメータがnullの場合は、実装によってサービスが選択されます。</target>
        </trans-unit>
        <trans-unit id="b8cebfcf947cef653ead61b4b25fb704b3e1458a" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;thread#activeCount--&quot;&gt;activeCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">ただし、アプリケーションは&lt;a href=&quot;thread#activeCount--&quot;&gt;activeCount&lt;/a&gt;メソッドを使用して、配列の大きさの概算を取得できます。</target>
        </trans-unit>
        <trans-unit id="c43b25ce39e541a3ce9b52903fee93e798ca80a1" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;threadgroup#activeCount--&quot;&gt;activeCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">ただし、アプリケーションは&lt;a href=&quot;threadgroup#activeCount--&quot;&gt;activeCount&lt;/a&gt;メソッドを使用して、配列の大きさの概算を取得できます。</target>
        </trans-unit>
        <trans-unit id="71db00cc8d994789c137e61873d70534d3240b28" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;threadgroup#activeGroupCount--&quot;&gt;activeGroupCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">ただし、アプリケーションは&lt;a href=&quot;threadgroup#activeGroupCount--&quot;&gt;activeGroupCount&lt;/a&gt;メソッドを使用して、配列の大きさの概算を取得できます。</target>
        </trans-unit>
        <trans-unit id="9e8913034682b04eada59ac157696312403c2e9f" translate="yes" xml:space="preserve">
          <source>An application must pass in an array of print services to browse. The array must be non-null and non-empty. Typically an application will pass in only PrintServices capable of printing a particular document flavor.</source>
          <target state="translated">アプリケーションは、参照する印刷サービスの配列を渡す必要があります。この配列は、非 null で空でなければなりません。通常、アプリケーションは、特定の文書のフレーバーを印刷できる PrintServices のみを渡します。</target>
        </trans-unit>
        <trans-unit id="2654ccde0ee418a0ddc05fbfc9f140d72a0de785" translate="yes" xml:space="preserve">
          <source>An application opening a device explicitly with this call has to close the device by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. This is necessary to release system resources and allow applications to exit cleanly.</source>
          <target state="translated">この呼び出しで明示的にデバイスを開くアプリケーションは、&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出してデバイスを閉じる必要があります。これは、システムリソースを解放し、アプリケーションを正常に終了させるために必要です。</target>
        </trans-unit>
        <trans-unit id="50eb92a41ad11a218880f81a1296f8b8fdf101a1" translate="yes" xml:space="preserve">
          <source>An application should catch instances of this class only if it must clean up after being terminated asynchronously. If &lt;code&gt;ThreadDeath&lt;/code&gt; is caught by a method, it is important that it be rethrown so that the thread actually dies.</source>
          <target state="translated">アプリケーションは、非同期的に終了した後にクリーンアップする必要がある場合にのみ、このクラスのインスタンスをキャッチする必要があります。 &lt;code&gt;ThreadDeath&lt;/code&gt; がメソッドによってキャッチされた場合、スレッドが実際に停止するように再スローすることが重要です。</target>
        </trans-unit>
        <trans-unit id="c49fd5a8dd636e52dd68846105d011fd47eb26ee" translate="yes" xml:space="preserve">
          <source>An application should not normally try to catch &lt;code&gt;ThreadDeath&lt;/code&gt; unless it must do some extraordinary cleanup operation (note that the throwing of &lt;code&gt;ThreadDeath&lt;/code&gt; causes &lt;code&gt;finally&lt;/code&gt; clauses of &lt;code&gt;try&lt;/code&gt; statements to be executed before the thread officially dies). If a &lt;code&gt;catch&lt;/code&gt; clause catches a &lt;code&gt;ThreadDeath&lt;/code&gt; object, it is important to rethrow the object so that the thread actually dies.</source>
          <target state="translated">アプリケーションが正常にキャッチしようとするべきではない &lt;code&gt;ThreadDeath&lt;/code&gt; 、それは（の投げることをメモして、いくつかの特別なクリーンアップ操作を行う必要がありますしない限り &lt;code&gt;ThreadDeath&lt;/code&gt; 原因 &lt;code&gt;finally&lt;/code&gt; の節 &lt;code&gt;try&lt;/code&gt; スレッドが公式に死ぬ前に実行するステートメントを）。 &lt;code&gt;catch&lt;/code&gt; 節が &lt;code&gt;ThreadDeath&lt;/code&gt; オブジェクトをキャッチする場合、スレッドを実際に停止させるためにオブジェクトを再スローすることが重要です。</target>
        </trans-unit>
        <trans-unit id="b509256c238d72c9c7d490a01e3a6dee12555a68" translate="yes" xml:space="preserve">
          <source>An application typically does not deal directly with these interfaces. Instead, it deals with classes that &lt;em&gt;implement&lt;/em&gt; these interfaces. The application gets these classes either as part of a repertoire of extended operations standardized through the IETF, or from directory vendors for vendor-specific extended operations. The request classes should have constructors that accept arguments in a type-safe and user-friendly manner, while the response classes should have access methods for getting the data of the response in a type-safe and user-friendly manner. Internally, the request/response classes deal with encoding and decoding BER values.</source>
          <target state="translated">通常、アプリケーションはこれらのインターフェースを直接処理しません。代わりに、これらのインターフェースを&lt;em&gt;実装&lt;/em&gt;するクラスを扱います。アプリケーションは、IETFを通じて標準化された拡張操作のレパートリーの一部として、またはベンダー固有の拡張操作のためにディレクトリベンダーからこれらのクラスを取得します。リクエストクラスにはタイプセーフでユーザーフレンドリーな方法で引数を受け入れるコンストラクターが必要ですが、レスポンスクラスにはタイプセーフでユーザーフレンドリーな方法でレスポンスのデータを取得するためのアクセスメソッドが必要です。内部的には、要求/応答クラスはBER値のエンコードとデコードを処理します。</target>
        </trans-unit>
        <trans-unit id="cf87097b1d5a717b4f2ac33f62d029328ac00d54" translate="yes" xml:space="preserve">
          <source>An application typically does not deal directly with this interface. Instead, it deals with classes that &lt;em&gt;implement&lt;/em&gt; this interface. The application gets control classes either as part of a repertoire of controls standardized through the IETF, or from directory vendors for vendor-specific controls. The request control classes should have constructors that accept arguments in a type-safe and user-friendly manner, while the response control classes should have access methods for getting the data of the response in a type-safe and user-friendly manner. Internally, the request/response control classes deal with encoding and decoding BER values.</source>
          <target state="translated">通常、アプリケーションはこのインターフェースを直接処理しません。代わりに、このインターフェイスを&lt;em&gt;実装&lt;/em&gt;するクラスを扱います。アプリケーションは、IETFを通じて標準化されたコントロールのレパートリーの一部として、またはベンダー固有のコントロールのディレクトリベンダーからコントロールクラスを取得します。リクエストコントロールクラスには、タイプセーフでユーザーフレンドリーな方法で引数を受け入れるコンストラクターが必要ですが、レスポンスコントロールクラスには、タイプセーフでユーザーフレンドリーな方法でレスポンスのデータを取得するためのアクセスメソッドが必要です。内部的には、要求/応答制御クラスはBER値のエンコードとデコードを処理します。</target>
        </trans-unit>
        <trans-unit id="a3d727468a5dad82ca2729c7404152e5156ac534" translate="yes" xml:space="preserve">
          <source>An application, for example, can register its interest in changes to objects in a context as follows:</source>
          <target state="translated">例えば、アプリケーションは、以下のようにコンテキスト内のオブジェクトの変更に関心を登録することができます。</target>
        </trans-unit>
        <trans-unit id="8c9caf20fe0e31da145fef005b6b411b2f51e161" translate="yes" xml:space="preserve">
          <source>An appropriate response in this case is to either return an empty list of completions,</source>
          <target state="translated">この場合の適切な応答は、空の補完リストを返すことです。</target>
        </trans-unit>
        <trans-unit id="3375b2b67d9fbf3014f9194bef73b350e41d04a8" translate="yes" xml:space="preserve">
          <source>An array of (Notification,listenerID) pairs corresponding to the returned notifications and the listeners they correspond to.</source>
          <target state="translated">返された通知とそれに対応するリスナーに対応する (Notification,listenerID)ペアの配列。</target>
        </trans-unit>
        <trans-unit id="3d3e5b5413218d15a0eaa8ef1a80ddeb592d3cb6" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Class&lt;/code&gt; objects to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getInputTypes&lt;/code&gt; から返される &lt;code&gt;Class&lt;/code&gt; オブジェクトの配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="134d246dade1f3b91ae7d4322f377b540dc09583" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Class&lt;/code&gt; objects to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getOutputTypes&lt;/code&gt; から返される &lt;code&gt;Class&lt;/code&gt; オブジェクトの配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="986642b0e80eb019e10cb87b0f61b946091b07ae" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;File&lt;/code&gt; objects denoting the available filesystem roots, or &lt;code&gt;null&lt;/code&gt; if the set of roots could not be determined. The array will be empty if there are no filesystem roots.</source>
          <target state="translated">利用可能なファイルシステムのルートを示す &lt;code&gt;File&lt;/code&gt; オブジェクトの配列。ルートのセットを特定できなかった場合は &lt;code&gt;null&lt;/code&gt; 。ファイルシステムのルートがない場合、配列は空になります。</target>
        </trans-unit>
        <trans-unit id="2f452eecd6bde221a71b85ba04b3ebcc45d28a9c" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Locale&lt;/code&gt;s that may be used to localize warning messages and compression setting values, or &lt;code&gt;null&lt;/code&gt; if localization is not supported. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">警告メッセージと圧縮設定値のローカライズに使用できる &lt;code&gt;Locale&lt;/code&gt; の配列。ローカライズがサポートされていない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトでは &lt;code&gt;null&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="f5828ac1272e6af9b447a80ae8aa023505636997" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Locale&lt;/code&gt;s which may be used to localize warning messages, or &lt;code&gt;null&lt;/code&gt; if localization is not supported.</source>
          <target state="translated">警告メッセージのローカライズに使用できる &lt;code&gt;Locale&lt;/code&gt; の配列。ローカライズがサポートされていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ef7312b21040e50977465666bf0eb762b161e14" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanAttributeInfo&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="97cb0ffca3f9a79bde835c8f0514bf86a9f9fd2b" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanConstructorInfo&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="099025ea477af03698be0f937824d72208a3d9c4" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanNotificationInfo&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="d037385b928aee7ba03da85148233e55db4d3e27" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanOperationInfo&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="857b8e7db26743b5bf509c5ad095fe8a81853346" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanParameterInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanParameterInfo&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="439c241981cb9b98bf4921d2be030bb41a831385" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Method&lt;/code&gt; objects for the target methods within the target listener interface that will get called when events are fired.</source>
          <target state="translated">イベントが発生したときに呼び出されるターゲットリスナーインターフェース内のターゲット &lt;code&gt;Method&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="a11f54d296a121e0d0a900e2e862c8be1025eb1e" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MethodDescriptor&lt;/code&gt; objects for the target methods within the target listener interface that will get called when events are fired.</source>
          <target state="translated">イベントが発生したときに呼び出されるターゲットリスナーインターフェイス内のターゲットメソッドの &lt;code&gt;MethodDescriptor&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="09bfd33147144d479ed0cedfcc852f06a19d8e48" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the class names of any additional image metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このプラグインでサポートされる追加の画像メタデータ形式のクラス名を含む &lt;code&gt;String&lt;/code&gt; の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0c6bf3507b6a0a635ddcff11b09f3f52d92b7b1b" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the class names of any additional stream metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このプラグインでサポートされる追加のストリームメタデータ形式のクラス名を含む &lt;code&gt;String&lt;/code&gt; の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c0d1beebcc982c07a604b60c0fa883229539afcf" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of any additional image metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このプラグインでサポートされている追加の画像メタデータ形式の名前を含む &lt;code&gt;String&lt;/code&gt; の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="47280e838c730e2ac9ec606b3328a9cb7b71d05c" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of any additional stream metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このプラグインでサポートされる追加のストリームメタデータ形式の名前を含む &lt;code&gt;String&lt;/code&gt; の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8c26aaacf7ce2995c9bfe1424377ba6a51a90ec4" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of the available compression types. Subclasses must set the value manually.</source>
          <target state="translated">使用可能な圧縮タイプの名前を含む &lt;code&gt;String&lt;/code&gt; の配列。サブクラスは手動で値を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="da4e0abf0506b17739ce4bb8e037ed106b77be54" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;int&lt;/code&gt;s indicating which source bands will be used, or &lt;code&gt;null&lt;/code&gt;. If &lt;code&gt;null&lt;/code&gt;, the set of source bands to be used is as described in the comment for the &lt;code&gt;setSourceBands&lt;/code&gt; method. No value should be allowed to be negative.</source>
          <target state="translated">使用されるソースバンドを示す &lt;code&gt;int&lt;/code&gt; の配列、または &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;null&lt;/code&gt; の場合、使用されるソースバンドのセットは、 &lt;code&gt;setSourceBands&lt;/code&gt; メソッドのコメントで説明されているとおりです。負の値は許可されません。</target>
        </trans-unit>
        <trans-unit id="5f8a9f14e2ca1c5025b6a7ff7497a534a4b2b0cb" translate="yes" xml:space="preserve">
          <source>An array of ISO 3166 two-letter country codes.</source>
          <target state="translated">ISO 3166の2文字の国コードの配列。</target>
        </trans-unit>
        <trans-unit id="1a685af7760d947395e5088cc9d1ca76b1336256" translate="yes" xml:space="preserve">
          <source>An array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname. The array will be empty if the directory is empty. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">この抽象パス名が示すディレクトリ内のファイルとディレクトリを示す抽象パス名の配列。ディレクトリが空の場合、配列は空になります。この抽象パス名がディレクトリを示していない場合、またはI / Oエラーが発生した場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1247249a019a2d31c63bafe6198d962bc2529d9e" translate="yes" xml:space="preserve">
          <source>An array of all locales for which this locale service provider can provide localized objects or names.</source>
          <target state="translated">このロケールサービスプロバイダが地域化されたオブジェクトや名前を提供できるすべてのロケールの配列。</target>
        </trans-unit>
        <trans-unit id="84f751c7debce4343e28a7b0cd27fb91761da472" translate="yes" xml:space="preserve">
          <source>An array of attribute ids identifying the attributes that will be returned. Can be null.</source>
          <target state="translated">返される属性を識別する属性 ID の配列。null を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="50c3bc608966755e1f6382a14ef162f78ffc304c" translate="yes" xml:space="preserve">
          <source>An array of bytes that was provided by the creator of the stream. Elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]&lt;/code&gt; are the only bytes that can ever be read from the stream; element &lt;code&gt;buf[pos]&lt;/code&gt; is the next byte to be read.</source>
          <target state="translated">ストリームの作成者によって提供されたバイトの配列。要素 &lt;code&gt;buf[0]&lt;/code&gt; から &lt;code&gt;buf[count-1]&lt;/code&gt; までは、ストリームから読み取ることができる唯一のバイトです。要素 &lt;code&gt;buf[pos]&lt;/code&gt; は、次に読み込まれるバイトです。</target>
        </trans-unit>
        <trans-unit id="a729d0bda2fade78392b6c8a928179fcd1324c3e" translate="yes" xml:space="preserve">
          <source>An array of installed locales.</source>
          <target state="translated">インストールされたロケールの配列。</target>
        </trans-unit>
        <trans-unit id="d6d58003ce8b767e2e48a2867e197eb64fc51b57" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;BreakIterator&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;BreakIterator&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="c66081e2ced3ad8c4f8f67af5cdf49b57dab5365" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;Calendar&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;Calendar&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="68c4f2a7d55fe9d1e74aa99805ef5cf0eaad9bd9" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;Collator&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;Collator&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="9f8979fff6f18828e2e07a3db6852fccd5c6cb11" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;DateFormat&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;DateFormat&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="fa4683de0abf7aaba311b8aff3f5bb67c183e839" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;DateFormatSymbols&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;DateFormatSymbols&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="6bb475e666ac44ef2833bf2636d6095cb9b550d0" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;NumberFormat&lt;/code&gt; instances are available.</source>
          <target state="translated">ローカライズされた &lt;code&gt;NumberFormat&lt;/code&gt; インスタンスが利用可能なロケールの配列。</target>
        </trans-unit>
        <trans-unit id="e96a8e8e65d8956d86c828401e17dbce9341139a" translate="yes" xml:space="preserve">
          <source>An array of names of classes implementing &lt;code&gt;IIOMetadataFormat&lt;/code&gt; and representing the metadata formats, other than the standard and native formats, that are supported by this plug-in, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; を実装し、このプラグインでサポートされる、標準およびネイティブ形式以外のメタデータ形式を表すクラスの名前の配列。nullに初期化され、コンストラクターを介して設定され &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="262378c5aa6d3817b25ebd77f5c879a438a3423c" translate="yes" xml:space="preserve">
          <source>An array of names of formats, other than the standard and native formats, that are supported by this plug-in, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">このプラグインでサポートされている、標準およびネイティブ形式以外の形式の名前の配列。nullに初期化され、コンストラクターを介して設定され &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2897df0b726ebc23204e3fea548a13dccf63622e" translate="yes" xml:space="preserve">
          <source>An array of object references in which elements may be updated atomically.</source>
          <target state="translated">要素が原子的に更新される可能性のあるオブジェクト参照の配列。</target>
        </trans-unit>
        <trans-unit id="fd0bb8c414320ed0f0c3a97caa9a14007a27cde2" translate="yes" xml:space="preserve">
          <source>An array of object references in which elements may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">要素をアトミックに更新できるオブジェクト参照の配列。アトミック変数のプロパティの説明については、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;パッケージ仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="823ae1f2066fcedd303f568ca8bac961a002dfa5" translate="yes" xml:space="preserve">
          <source>An array of preferred tile size range pairs. The default value is &lt;code&gt;null&lt;/code&gt;, which indicates that there are no preferred sizes. If the value is non-&lt;code&gt;null&lt;/code&gt;, it must have an even length of at least two.</source>
          <target state="translated">推奨されるタイルサイズ範囲のペアの配列。デフォルト値は &lt;code&gt;null&lt;/code&gt; です。これは、適切なサイズがないことを示します。値が &lt;code&gt;null&lt;/code&gt; 以外の場合は、長さが少なくとも2である必要があります。</target>
        </trans-unit>
        <trans-unit id="f381ae0c3269444d63257e301d2361d80ac7d062" translate="yes" xml:space="preserve">
          <source>An array of primitive type such as &lt;code&gt;long[]&lt;/code&gt; can be represented directly as an Open Type. Thus, &lt;em&gt;openType(&lt;/em&gt;&lt;code&gt;long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;long[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;long[]&lt;/code&gt; などのプリミティブ型の配列は、オープン型として直接表現できます。したがって、&lt;em&gt;openType（&lt;/em&gt; &lt;code&gt;long[]&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt; &lt;em&gt;。class &lt;/em&gt;）であり、&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long[]&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;long[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="761f07384d65aa2a3aa21cda74da36e773f992d1" translate="yes" xml:space="preserve">
          <source>An array of strings naming the files and directories in the directory denoted by this abstract pathname that were accepted by the given &lt;code&gt;filter&lt;/code&gt;. The array will be empty if the directory is empty or if no names were accepted by the filter. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">指定された &lt;code&gt;filter&lt;/code&gt; によって受け入れられた、この抽象パス名が示すディレクトリ内のファイルとディレクトリを指定する文字列の配列。ディレクトリーが空の場合、またはフィルターが名前を受け入れなかった場合、配列は空になります。この抽象パス名がディレクトリを示していない場合、またはI / Oエラーが発生した場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4dcd76d7d8936c701b86c8f0d5d00d1e579f5d22" translate="yes" xml:space="preserve">
          <source>An array of strings naming the files and directories in the directory denoted by this abstract pathname. The array will be empty if the directory is empty. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">この抽象パス名が示すディレクトリ内のファイルとディレクトリを指定する文字列の配列。ディレクトリが空の場合、配列は空になります。この抽象パス名がディレクトリを示していない場合、またはI / Oエラーが発生した場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="10dc6859e8526130416f7152e9a4491502d2247c" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getFileSuffixes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getFileSuffixes&lt;/code&gt; から返される文字列の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="030bd4856055ab04cbf48a78751b8b2ae10b21e0" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getFormatNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;. Constructors should set this to a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;getFormatNames&lt;/code&gt; から返される文字列の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。コンストラクタはこれを &lt;code&gt;null&lt;/code&gt; 以外の値に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="dd83c0c428a941cf564206213fb272be4e98e0f3" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getImageReaderSpiNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getImageReaderSpiNames&lt;/code&gt; から返される文字列の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="809ddbc54d6752597f0e6989721cf6e2270ecd80" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getImageWriterSpiNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getImageWriterSpiNames&lt;/code&gt; から返される文字列の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cafa442855686f22c535a31c64a7ed2dd61b5332" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getMIMETypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMIMETypes&lt;/code&gt; から返される文字列の配列で、最初は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="13c3c10ec355da687f48ba12684b50cb9ab66121" translate="yes" xml:space="preserve">
          <source>An array of supported signature algorithms, in descending order of preference. The return value is an empty array if no signature algorithm is supported.</source>
          <target state="translated">サポートされている署名アルゴリズムの配列。返り値は、サポートされている署名アルゴリズムがない場合は空の配列となります。</target>
        </trans-unit>
        <trans-unit id="9899ef2c113960b5b4a6da8b82115c9bef30b63b" translate="yes" xml:space="preserve">
          <source>An array of supported signature algorithms, in descending order of preference. The return value is an empty array if the peer has not sent the supported signature algorithms.</source>
          <target state="translated">サポートされている署名アルゴリズムの配列。相手がサポートされている署名アルゴリズムを送信していない場合、戻り値は空の配列となります。</target>
        </trans-unit>
        <trans-unit id="4965093f8d91780dfb936cd2f5084d7b6a6afd3c" translate="yes" xml:space="preserve">
          <source>An array type.</source>
          <target state="translated">配列型。</target>
        </trans-unit>
        <trans-unit id="ae1f55e24b18c4a7636f2709627cceb24145520e" translate="yes" xml:space="preserve">
          <source>An asterisk ('*') is replaced by a backslash (\) followed by an asterisk.</source>
          <target state="translated">アスタリスク('*')は、バックスラッシュ('*')の後にアスタリスクが続きます。</target>
        </trans-unit>
        <trans-unit id="b6c9768ff7e6901ac92020f4184af0011ee5f826" translate="yes" xml:space="preserve">
          <source>An asterisk may appear by itself, or if immediately preceded by a &quot;.&quot; may appear at the end of the target name, to signify a wildcard match.</source>
          <target state="translated">アスタリスクは単独で表示されることもあれば、ワイルドカードマッチを示すためにターゲット名の最後に「.</target>
        </trans-unit>
        <trans-unit id="f73a650d8b0b2abdf91d7c6e87e134a597a8c0fc" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for reading, writing, and manipulating a file</source>
          <target state="translated">ファイルの読み取り、書き込み、操作を行うための非同期チャネル。</target>
        </trans-unit>
        <trans-unit id="04ce0049fb979587f008bb0f36fca66b858bdff8" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for reading, writing, and manipulating a file.</source>
          <target state="translated">ファイルの読み取り、書き込み、操作を行うための非同期チャネル。</target>
        </trans-unit>
        <trans-unit id="3f05dfda8e00180392ad1ed2fdbdcc48784a0d25" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for stream-oriented connecting sockets.</source>
          <target state="translated">ストリーム指向の接続ソケット用の非同期チャネル。</target>
        </trans-unit>
        <trans-unit id="eb34342605bb5ebb5f8ddb606c74b8b2735a46c8" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for stream-oriented listening sockets.</source>
          <target state="translated">ストリーム指向のリスニングソケット用の非同期チャネル。</target>
        </trans-unit>
        <trans-unit id="fc1ddd80b2747203b083590f5f367717ba6df71b" translate="yes" xml:space="preserve">
          <source>An asynchronous channel group encapsulates the mechanics required to handle the completion of I/O operations initiated by &lt;a href=&quot;asynchronouschannel&quot;&gt;&lt;code&gt;asynchronous channels&lt;/code&gt;&lt;/a&gt; that are bound to the group. A group has an associated thread pool to which tasks are submitted to handle I/O events and dispatch to &lt;a href=&quot;completionhandler&quot;&gt;&lt;code&gt;completion-handlers&lt;/code&gt;&lt;/a&gt; that consume the result of asynchronous operations performed on channels in the group. In addition to handling I/O events, the pooled threads may also execute other tasks required to support the execution of asynchronous I/O operations.</source>
          <target state="translated">非同期チャネルグループは、グループにバインドされている&lt;a href=&quot;asynchronouschannel&quot;&gt; &lt;code&gt;asynchronous channels&lt;/code&gt; &lt;/a&gt;によって開始されたI / O操作の完了を処理するために必要なメカニズムをカプセル化します。グループには、関連付けられたスレッドプールがあり、I / Oイベントを処理し、グループ内のチャネルで実行された非同期操作の結果を使用する&lt;a href=&quot;completionhandler&quot;&gt; &lt;code&gt;completion-handlers&lt;/code&gt; &lt;/a&gt;ディスパッチするタスクが送信されます。I / Oイベントの処理に加えて、プールされたスレッドは、非同期I / O操作の実行をサポートするために必要な他のタスクも実行できます。</target>
        </trans-unit>
        <trans-unit id="1bd1578649e7815696b6734d360713fe6bd7c8c9" translate="yes" xml:space="preserve">
          <source>An asynchronous channel group is created by invoking the &lt;a href=&quot;asynchronouschannelgroup#withFixedThreadPool-int-java.util.concurrent.ThreadFactory-&quot;&gt;&lt;code&gt;withFixedThreadPool&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt; methods defined here. Channels are bound to a group by specifying the group when constructing the channel. The associated thread pool is &lt;em&gt;owned&lt;/em&gt; by the group; termination of the group results in the shutdown of the associated thread pool.</source>
          <target state="translated">非同期チャネルグループは、ここで定義された&lt;a href=&quot;asynchronouschannelgroup#withFixedThreadPool-int-java.util.concurrent.ThreadFactory-&quot;&gt; &lt;code&gt;withFixedThreadPool&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。チャネルは、チャネルを構築するときにグループを指定することにより、グループにバインドされます。関連するスレッドプールはグループによって&lt;em&gt;所有&lt;/em&gt;されます。グループが終了すると、関連するスレッドプールがシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="3d23c4c5494404dae3bfa4153bf162b06bccf6ea" translate="yes" xml:space="preserve">
          <source>An asynchronous channel provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;asynchronouschannelprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">非同期チャネルプロバイダーは、このクラスの具象サブクラスであり、引数のないコンストラクターを持ち、以下に指定する抽象メソッドを実装します。Java仮想マシンの特定の呼び出しは、&lt;a href=&quot;asynchronouschannelprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;メソッドによって返される単一のシステム全体のデフォルトプロバイダーインスタンスを維持します。そのメソッドの最初の呼び出しは、以下に指定されているデフォルトのプロバイダーを見つけます。</target>
        </trans-unit>
        <trans-unit id="187bfcc3c4e185a9fc4302c4c0a15c24daca9dcd" translate="yes" xml:space="preserve">
          <source>An asynchronous channel that can read and write bytes.</source>
          <target state="translated">バイトの読み書きが可能な非同期チャネル。</target>
        </trans-unit>
        <trans-unit id="25891c7e23ee0f01652a03630a94a2a7bcc400a1" translate="yes" xml:space="preserve">
          <source>An asynchronous channel to a stream-oriented connecting socket</source>
          <target state="translated">ストリーム指向の接続ソケットへの非同期チャネル</target>
        </trans-unit>
        <trans-unit id="0edfec2733989f66055163921cdee57e8f6c5f29" translate="yes" xml:space="preserve">
          <source>An asynchronous channel to a stream-oriented listening socket</source>
          <target state="translated">ストリーム指向のリスニングソケットへの非同期チャネル</target>
        </trans-unit>
        <trans-unit id="4dfab20de9c8516ae3347ab7d78fc643ad5817fb" translate="yes" xml:space="preserve">
          <source>An asynchronous file channel does not have a</source>
          <target state="translated">非同期ファイルチャネルには</target>
        </trans-unit>
        <trans-unit id="695c04a2c0d232f881caa8c269a0c45d720196e0" translate="yes" xml:space="preserve">
          <source>An asynchronous file channel is created when a file is opened by invoking one of the &lt;a href=&quot;asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. The file contains a variable-length sequence of bytes that can be read and written and whose current size can be &lt;a href=&quot;asynchronousfilechannel#size--&quot;&gt;&lt;code&gt;queried&lt;/code&gt;&lt;/a&gt;. The size of the file increases when bytes are written beyond its current size; the size of the file decreases when it is &lt;a href=&quot;asynchronousfilechannel#truncate-long-&quot;&gt;&lt;code&gt;truncated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非同期ファイルチャネルは、このクラスで定義されている&lt;a href=&quot;asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによってファイルが開かれたときに作成されます。ファイルには、読み取りと&lt;a href=&quot;asynchronousfilechannel#size--&quot;&gt; &lt;code&gt;queried&lt;/code&gt; &lt;/a&gt;が可能で、現在のサイズを照会できる可変長のバイトシーケンスが含まれています。現在のサイズを超えてバイトが書き込まれると、ファイルのサイズが増加します。ファイルが&lt;a href=&quot;asynchronousfilechannel#truncate-long-&quot;&gt; &lt;code&gt;truncated&lt;/code&gt; &lt;/a&gt;と、ファイルのサイズが小さくなります。</target>
        </trans-unit>
        <trans-unit id="35a9dd1f670fedc81c6f0cde0250688df213724f" translate="yes" xml:space="preserve">
          <source>An asynchronous server-socket channel is created by invoking the &lt;a href=&quot;asynchronousserversocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. A newly-created asynchronous server-socket channel is open but not yet bound. It can be bound to a local address and configured to listen for connections by invoking the &lt;a href=&quot;asynchronousserversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method. Once bound, the &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method is used to initiate the accepting of connections to the channel's socket. An attempt to invoke the &lt;code&gt;accept&lt;/code&gt; method on an unbound channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">このクラスの&lt;a href=&quot;asynchronousserversocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、非同期サーバーソケットチャネルが作成されます。新しく作成された非同期サーバーソケットチャネルは開いていますが、まだバインドされていません。&lt;a href=&quot;asynchronousserversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで、ローカルアドレスにバインドし、接続をリッスンするように構成できます。バインドされると、チャネルのソケットへの接続の受け入れを開始するために、&lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドが使用されます。非バインドチャネルで &lt;code&gt;accept&lt;/code&gt; メソッドを呼び出そうとすると、&lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="0e040a1ab54d2ff79e25ff6a5d352d99c7751808" translate="yes" xml:space="preserve">
          <source>An attached object may later be retrieved via the &lt;a href=&quot;selectionkey#attachment--&quot;&gt;&lt;code&gt;attachment&lt;/code&gt;&lt;/a&gt; method. Only one object may be attached at a time; invoking this method causes any previous attachment to be discarded. The current attachment may be discarded by attaching &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">アタッチされたオブジェクトは、&lt;a href=&quot;selectionkey#attachment--&quot;&gt; &lt;code&gt;attachment&lt;/code&gt; &lt;/a&gt;メソッドを介して後で取得できます。一度に1つのオブジェクトのみをアタッチできます。このメソッドを呼び出すと、以前の添付が破棄されます。現在の添付ファイルは &lt;code&gt;null&lt;/code&gt; を添付することで破棄できます。</target>
        </trans-unit>
        <trans-unit id="f618be52cf8841eaf7f441b5431fec11eb692eb4" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to</source>
          <target state="translated">まで読もうとしています。</target>
        </trans-unit>
        <trans-unit id="afaed010a71b05b31348e2fb4e9852a2e9b230d1" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to &lt;code&gt;count&lt;/code&gt; bytes from the source channel and write them to this channel's file starting at the given &lt;code&gt;position&lt;/code&gt;. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes will be transferred if the source channel has fewer than &lt;code&gt;count&lt;/code&gt; bytes remaining, or if the source channel is non-blocking and has fewer than &lt;code&gt;count&lt;/code&gt; bytes immediately available in its input buffer.</source>
          <target state="translated">ソースチャネルから最大 &lt;code&gt;count&lt;/code&gt; バイトを読み取って、指定された &lt;code&gt;position&lt;/code&gt; からこのチャネルのファイルに書き込みを試みます。このメソッドの呼び出しは、要求されたすべてのバイトを転送する場合と転送しない場合があります。そうかどうかは、チャネルの性質と状態に依存します。ソースチャネルの残りのバイト数が &lt;code&gt;count&lt;/code&gt; バイトより少ない場合、またはソースチャネルが非ブロッキングであり、入力バッファですぐに利用できるバイト数が &lt;code&gt;count&lt;/code&gt; より少ない場合、要求されたバイト数よりも少なく転送されます。</target>
        </trans-unit>
        <trans-unit id="b466afdab2763a9692f1fd28697bb624e4f30d43" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to &lt;code&gt;count&lt;/code&gt; bytes starting at the given &lt;code&gt;position&lt;/code&gt; in this channel's file and write them to the target channel. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes are transferred if this channel's file contains fewer than &lt;code&gt;count&lt;/code&gt; bytes starting at the given &lt;code&gt;position&lt;/code&gt;, or if the target channel is non-blocking and it has fewer than &lt;code&gt;count&lt;/code&gt; bytes free in its output buffer.</source>
          <target state="translated">このチャネルのファイル内の指定された &lt;code&gt;position&lt;/code&gt; から始まる &lt;code&gt;count&lt;/code&gt; バイトまで読み取り、それらをターゲットチャネルに書き込みます。このメソッドの呼び出しは、要求されたすべてのバイトを転送する場合と転送しない場合があります。そうかどうかは、チャネルの性質と状態に依存します。このチャネルのファイルに指定された &lt;code&gt;position&lt;/code&gt; から始まる &lt;code&gt;count&lt;/code&gt; バイトより少ない場合、またはターゲットチャネルが非ブロッキングで、出力バッファの空きが &lt;code&gt;count&lt;/code&gt; バイトより少ない場合は、要求されたバイト数よりも少なく転送されます。</target>
        </trans-unit>
        <trans-unit id="722aa7ce50f34b6a706302fb44f8a4ddcbcbe4a6" translate="yes" xml:space="preserve">
          <source>An attempt is made to write up to</source>
          <target state="translated">まで書き込もうとする試みがなされています。</target>
        </trans-unit>
        <trans-unit id="daa493fc78c87a1d23c019a31321dea082987cfd" translate="yes" xml:space="preserve">
          <source>An attempt to construct an MXBean that does not conform to the above rules will produce an exception.</source>
          <target state="translated">上記のルールに準拠しないMXBeanを構築しようとすると、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="3cceca5092588d88b6efd29b07df7c52a16bbb9c" translate="yes" xml:space="preserve">
          <source>An attempt was made to read an object when the next element in the stream is primitive data. In this case, the OptionalDataException's length field is set to the number of bytes of primitive data immediately readable from the stream, and the eof field is set to false.</source>
          <target state="translated">ストリームの次の要素がプリミティブ・データであるときに、オブジェクトの読み取りを試みました。この場合、OptionalDataException の length フィールドには、ストリームからすぐに読み込めるプリミティブ・データのバイト数が設定され、eof フィールドには false が設定されます。</target>
        </trans-unit>
        <trans-unit id="6760262c20614bbc00dcf1a227400dd2ef092e20" translate="yes" xml:space="preserve">
          <source>An attempt was made to read past the end of data consumable by a class-defined readObject or readExternal method. In this case, the OptionalDataException's eof field is set to true, and the length field is set to 0.</source>
          <target state="translated">クラス定義の readObject または readExternal メソッドで消費可能なデータの終端を越えて読み込もうとしました。この場合、OptionalDataException の eof フィールドが true に設定され、length フィールドが 0 に設定されます。</target>
        </trans-unit>
        <trans-unit id="16aa56556c9f579c2709f92998d373096c035221" translate="yes" xml:space="preserve">
          <source>An attempt will be made to resolve the hostname into an InetAddress. If that attempt fails, the address will be flagged as</source>
          <target state="translated">ホスト名を InetAddress に解決する試みが行われます。この試みが失敗した場合、アドレスは</target>
        </trans-unit>
        <trans-unit id="279f3bdf2c9f38de29ce0a27e68895d399181119" translate="yes" xml:space="preserve">
          <source>An attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; in &lt;code&gt;matchingAttributes&lt;/code&gt; is considered to match an attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; of an object if &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; and &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; have the same identifier, and each value of &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; is equal to some value of &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;. This implies that the order of values is not significant, and that &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; may contain &quot;extra&quot; values not found in &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; without affecting the comparison. It also implies that if &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; has no values, then testing for a match is equivalent to testing for the presence of an attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; with the same identifier.</source>
          <target state="translated">&lt;code&gt;matchingAttributes&lt;/code&gt; の属性&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;は、&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;と&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;が同じ識別子を持ち、&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1の&lt;/sub&gt;各値が&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2の&lt;/sub&gt;ある値と等しい場合、オブジェクトの属性&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;と一致すると見なされます。これは、値の順序は重要ではなく、&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2に&lt;/sub&gt;は、比較に影響を与えずに&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1に&lt;/sub&gt;はない「余分な」値が含まれる可能性があることを意味します。また、&lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;に値がない場合、一致のテストは属性&lt;em&gt;Aの&lt;/em&gt;存在のテストと同等であることも意味します&lt;em&gt;。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;同じ識別子を持つ&lt;sub&gt;2&lt;/sub&gt;。</target>
        </trans-unit>
        <trans-unit id="0ce7e6287bdf694dcae3c1cb3483102721e3aeea" translate="yes" xml:space="preserve">
          <source>An attribute associated with a PKCS12 keystore entry.</source>
          <target state="translated">PKCS12 キーストアエントリに関連付けられた属性。</target>
        </trans-unit>
        <trans-unit id="7b8a62f3bbe006040eef0aaf0d414a85f523129e" translate="yes" xml:space="preserve">
          <source>An attribute associated with a PKCS12 keystore entry. The attribute name is an ASN.1 Object Identifier and the attribute value is a set of ASN.1 types.</source>
          <target state="translated">PKCS12 キーストアエントリに関連付けられた属性。属性名はASN.1オブジェクト識別子であり、属性値はASN.1タイプのセットである。</target>
        </trans-unit>
        <trans-unit id="b16f2f4d30434202d0727a48b1a9c2241e0fb243" translate="yes" xml:space="preserve">
          <source>An attribute associated with a keystore entry.</source>
          <target state="translated">キーストア・エントリに関連付けられた属性。</target>
        </trans-unit>
        <trans-unit id="8ea421495bfbf0fe9812b4798e82485b433e6378" translate="yes" xml:space="preserve">
          <source>An attribute associated with a keystore entry. It comprises a name and one or more values.</source>
          <target state="translated">キーストア・エントリに関連付けられた属性。名前と1つ以上の値で構成されます。</target>
        </trans-unit>
        <trans-unit id="c9e3847509c7ebe3cea18e6a71d27093cd8dab9d" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; という名前の属性の属性式。</target>
        </trans-unit>
        <trans-unit id="ef81256df94075f9fe820e5d4a8366ff423b01ba" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named name. The returned object will be serialized as an instance of the non-public class  javax.management.QualifiedAttributeValueExp.</source>
          <target state="translated">nameという名前の属性の属性式。返されるオブジェクトは、非公開クラス javax.management.QualifiedAttributeValueExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="2ff164eb6c8c4747f4ec9c5a66581cf576a5ba9d" translate="yes" xml:space="preserve">
          <source>An attribute is a key/value pair, identified by the key. No two attributes on a given character can have the same key.</source>
          <target state="translated">属性はキーと値のペアであり、キーによって識別されます。与えられた文字の2つの属性が同じキーを持つことはできません。</target>
        </trans-unit>
        <trans-unit id="4bab69b71afc252a91bb7b8eef477f66804094f7" translate="yes" xml:space="preserve">
          <source>An attribute represents a printing feature that a print service can provide. For each attribute, a print service either does or does not support the attribute. For each possible value of a supported attribute, a print service either does or does not support the value.</source>
          <target state="translated">属性は、印刷サービスが提供できる印刷機能を表す。各属性について,印刷サービスはその属性をサポートしないか,またはサポートしない。サポートされている属性の各可能な値に対して,印刷サービスはその値をサポートしないか,またはサポートしないかのどちらかである。</target>
        </trans-unit>
        <trans-unit id="7af7806d02935fed73ab539df0b07c01ee57ebc0" translate="yes" xml:space="preserve">
          <source>An attribute set contains a group of</source>
          <target state="translated">属性セットには</target>
        </trans-unit>
        <trans-unit id="2bcc1293de4c5c865a78f34a613ff37bf6e5d9f9" translate="yes" xml:space="preserve">
          <source>An attribute value is a small, atomic data item, such as an integer or an enumerated value. The Java Print Service API does not use primitive data types, such as int, to represent attribute values for these reasons:</source>
          <target state="translated">属性値は、整数や列挙値などの小さなアトミックなデータ項目です。Java Print Service APIでは、これらの理由からintなどのプリミティブデータ型を属性値の表現に使用しない。</target>
        </trans-unit>
        <trans-unit id="98905b6e28df8109ba3188a3fca8b623c82a47e1" translate="yes" xml:space="preserve">
          <source>An attribute view provides a read-only or updatable view of the non-opaque values, or &lt;em&gt;metadata&lt;/em&gt;, associated with objects in a file system. The &lt;a href=&quot;fileattributeview&quot;&gt;&lt;code&gt;FileAttributeView&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces that that views to specific sets of file attributes. &lt;code&gt;FileAttributeViews&lt;/code&gt; are selected by invoking the &lt;a href=&quot;../files#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt;&lt;/a&gt; method with a &lt;em&gt;type-token&lt;/em&gt; to identify the required view. Views can also be identified by name. The &lt;a href=&quot;filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; interface provides access to file store attributes. A &lt;code&gt;FileStoreAttributeView&lt;/code&gt; of a given type is obtained by invoking the &lt;a href=&quot;../filestore#getFileStoreAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">属性ビューは、ファイルシステム内のオブジェクトに関連付けられた不透明でない値、つまり&lt;em&gt;メタデータの&lt;/em&gt;読み取り専用または更新可能なビューを提供します。&lt;a href=&quot;fileattributeview&quot;&gt; &lt;code&gt;FileAttributeView&lt;/code&gt; の&lt;/a&gt;インタフェースは、いくつかの他のインタフェースによって拡張されたファイル属性の特定のセットへのビューこと。 &lt;code&gt;FileAttributeViews&lt;/code&gt; は、&lt;a href=&quot;../files#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt; &lt;/a&gt;メソッドを&lt;em&gt;タイプトークンで&lt;/em&gt;呼び出して選択し、必要なビューを識別します。ビューは名前で識別することもできます。&lt;a href=&quot;filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; の&lt;/a&gt;インタフェースは、ファイルストアの属性へのアクセスを提供します。 &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 所与のタイプのを呼び出すことによって得られます。&lt;a href=&quot;../filestore#getFileStoreAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="2930bb7b14477a29250d830f64bd20a221ca55dc" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of non-opaque values associated with a file in a filesystem.</source>
          <target state="translated">ファイルシステム内のファイルに関連付けられた不透明でない値の読み取り専用または更新可能な属性ビュー。</target>
        </trans-unit>
        <trans-unit id="c83eda9be05b6815e3caae6bb31b34563a602715" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of non-opaque values associated with a file in a filesystem. This interface is extended or implemented by specific file attribute views that define methods to read and/or update the attributes of a file.</source>
          <target state="translated">ファイルシステム内のファイルに関連付けられた不透明でない値の読み取り専用または更新可能なビューである属性ビュー。このインターフェイスは、ファイルの属性を読み込んだり更新したりするためのメソッドを定義する特定のファイル属性ビューによって拡張または実装されます。</target>
        </trans-unit>
        <trans-unit id="10f2cc0e36538e551032569affb5d2ad93a7724d" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of the attributes of a &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; の&lt;/a&gt;属性の読み取り専用または更新可能なビューである属性ビュー。</target>
        </trans-unit>
        <trans-unit id="065071a9cea28782c8d56a7c04d9729427684e3a" translate="yes" xml:space="preserve">
          <source>An audio input stream is an input stream with a specified audio format and length.</source>
          <target state="translated">音声入力ストリームとは、指定された音声フォーマットと長さを持つ入力ストリームのことです。</target>
        </trans-unit>
        <trans-unit id="3c20d5cd5008578e867d47cb7d115185299d7288" translate="yes" xml:space="preserve">
          <source>An audio input stream is an input stream with a specified audio format and length. The length is expressed in sample frames, not bytes. Several methods are provided for reading a certain number of bytes from the stream, or an unspecified number of bytes. The audio input stream keeps track of the last byte that was read. You can skip over an arbitrary number of bytes to get to a later position for reading. An audio input stream may support marks. When you set a mark, the current position is remembered so that you can return to it later.</source>
          <target state="translated">オーディオ入力ストリームとは、指定されたオーディオフォーマットと長さを持つ入力ストリームのことです。長さは、バイトではなくサンプルフレームで表される。ストリームから特定の数のバイト、または指定されていない数のバイトを読み出すために、いくつかの方法が提供されています。オーディオ入力ストリームは、最後に読み込まれたバイトを追跡します。任意のバイト数をスキップして、後から読み込んだ位置に到達することができます。オーディオ入力ストリームはマークをサポートしている場合があります。マークを設定すると、現在の位置が記憶され、後で戻ることができるようになります。</target>
        </trans-unit>
        <trans-unit id="9001907d31c670e08850b8d941b22960419a094a" translate="yes" xml:space="preserve">
          <source>An editor object for the given target class. The result is null if no suitable editor can be found.</source>
          <target state="translated">指定されたターゲットクラスのエディタオブジェクト。適切なエディタが見つからない場合、結果はnullとなります。</target>
        </trans-unit>
        <trans-unit id="7b4adaaf349e9a6d56f2419e9fc23094b38e3205" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace--&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace--&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt;によって返される、スタックトレースの要素。</target>
        </trans-unit>
        <trans-unit id="2aeaf37346a0119e0a2542e610c09c1631725bf7" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace--&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace--&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt;によって返される、スタックトレースの要素。各要素は単一のスタックフレームを表します。スタックの一番上にあるものを除くすべてのスタックフレームは、メソッド呼び出しを表します。スタックの一番上のフレームは、スタックトレースが生成された実行ポイントを表します。通常、これは、スタックトレースに対応するスロー可能オブジェクトが作成されたポイントです。</target>
        </trans-unit>
        <trans-unit id="2dc511c7d6d460e0a652766b02ebf90d4dcba461" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Name&lt;/code&gt; has a length of zero.</source>
          <target state="translated">空の &lt;code&gt;Name&lt;/code&gt; の長さはゼロです。</target>
        </trans-unit>
        <trans-unit id="f72c63c44cf51008dc34fdff857ba1e4747a5a58" translate="yes" xml:space="preserve">
          <source>An empty authority component is permitted as long as it is followed by a non-empty path, a query component, or a fragment component. This allows the parsing of URIs such as &lt;code&gt;&quot;file:///foo/bar&quot;&lt;/code&gt;, which seems to be the intent of RFC 2396 although the grammar does not permit it. If the authority component is empty then the user-information, host, and port components are undefined.</source>
          <target state="translated">空の権限コンポーネントの後には、空でないパス、クエリコンポーネント、またはフラグメントコンポーネントが続く限り許可されます。これにより、 &lt;code&gt;&quot;file:///foo/bar&quot;&lt;/code&gt; などのURIの解析が可能になります。これは、文法では許可されていませんが、RFC 2396の意図によるものと思われます。権限コンポーネントが空の場合、ユーザー情報、ホスト、およびポートのコンポーネントは未定義です。</target>
        </trans-unit>
        <trans-unit id="601abb570af5aeb2e85519d110e87efe802695f6" translate="yes" xml:space="preserve">
          <source>An empty descriptor.</source>
          <target state="translated">空のディスクリプタ。</target>
        </trans-unit>
        <trans-unit id="5f51af07fd2f1e8cc0095411f511c255ffd87b92" translate="yes" xml:space="preserve">
          <source>An empty enum set of the specified type.</source>
          <target state="translated">指定された型の空の列挙集合。</target>
        </trans-unit>
        <trans-unit id="d9f588e1348b4e6edb1faa7f2109de7f3c2edf31" translate="yes" xml:space="preserve">
          <source>An empty spliterator</source>
          <target state="translated">空のスプリレータ</target>
        </trans-unit>
        <trans-unit id="d1999014eee90b29a9e9069792c7b68fbd921276" translate="yes" xml:space="preserve">
          <source>An encapsulation of the result state produced by &lt;code&gt;SSLEngine&lt;/code&gt; I/O calls.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; I / O呼び出しによって生成された結果状態のカプセル化。</target>
        </trans-unit>
        <trans-unit id="0b5fb5adb98ff53ab0b22026150efd1300b16db6" translate="yes" xml:space="preserve">
          <source>An engine that can transform a sequence of bytes in a specific charset into a sequence of sixteen-bit Unicode characters.</source>
          <target state="translated">特定の文字セットのバイト列を16ビットのUnicode文字列に変換できるエンジン。</target>
        </trans-unit>
        <trans-unit id="601670f3715d20387b85d02a07415902a33cf14e" translate="yes" xml:space="preserve">
          <source>An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of bytes in a specific charset.</source>
          <target state="translated">16 ビットの Unicode 文字のシーケンスを、特定の文字セットのバイトのシーケンスに変換できるエンジン。</target>
        </trans-unit>
        <trans-unit id="53fd123c4636a6a5e1914f5a8d86c760c4b83c3d" translate="yes" xml:space="preserve">
          <source>An engine that performs match operations on a &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequence&lt;/a&gt; by interpreting a &lt;a href=&quot;pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; を&lt;/a&gt;解釈する&lt;a href=&quot;../../lang/charsequence&quot;&gt;こと&lt;/a&gt;により、文字シーケンスに対して照合操作を実行するエンジン。</target>
        </trans-unit>
        <trans-unit id="91c43c4cf223cc700bdc4ee248611a2f1fbc3732" translate="yes" xml:space="preserve">
          <source>An engine's client authentication setting is one of the following:</source>
          <target state="translated">エンジンのクライアント認証設定は、以下のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="dc54b5ec8f2ff867547e4902f8d04acc1615fdf4" translate="yes" xml:space="preserve">
          <source>An entry in an access control list (ACL).</source>
          <target state="translated">アクセス制御リスト (ACL)のエントリ。</target>
        </trans-unit>
        <trans-unit id="c102da04921e3d086db5e5398bc9772d0da5484e" translate="yes" xml:space="preserve">
          <source>An enum constant.</source>
          <target state="translated">列挙定数。</target>
        </trans-unit>
        <trans-unit id="80c93847e6f20f4e14d799783360509535c0ce8d" translate="yes" xml:space="preserve">
          <source>An enum set containing all the elements in the specified type.</source>
          <target state="translated">指定された型に含まれるすべての要素を含む列挙集合。</target>
        </trans-unit>
        <trans-unit id="4bce9a83b482251b2f473409d159c9a2669708e0" translate="yes" xml:space="preserve">
          <source>An enum set initialized from the given collection.</source>
          <target state="translated">与えられたコレクションから初期化された列挙集合。</target>
        </trans-unit>
        <trans-unit id="d356106b14fd8afd2c1e7ef6c8ff2ade51eb6a8e" translate="yes" xml:space="preserve">
          <source>An enum type.</source>
          <target state="translated">列挙型。</target>
        </trans-unit>
        <trans-unit id="19d4879fdd9884be95a7abfe28f6df1dd96e2fb0" translate="yes" xml:space="preserve">
          <source>An enumeration &lt;em&gt;E&lt;/em&gt;</source>
          <target state="translated">列挙&lt;em&gt;E&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7589ba0898ba3e956a397cd45699cb51b23be578" translate="yes" xml:space="preserve">
          <source>An enumeration of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects for the resource. If no resources could be found, the enumeration will be empty. Resources that the class loader doesn't have access to will not be in the enumeration.</source>
          <target state="translated">リソースの&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;オブジェクトの列挙。リソースが見つからなかった場合、列挙は空になります。クラスローダーがアクセスできないリソースは列挙されません。</target>
        </trans-unit>
        <trans-unit id="e9e9197121ea9b8184b303ebe921bf469eb207cb" translate="yes" xml:space="preserve">
          <source>An enumeration of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects for the resources</source>
          <target state="translated">リソースの&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;オブジェクトの列挙</target>
        </trans-unit>
        <trans-unit id="c4aa7c7e628d57532a1c1360001ee6ef0f7ef010" translate="yes" xml:space="preserve">
          <source>An enumeration of URL to the resource. If no resources could be found, the enumeration will be empty. Resources that cannot be accessed will not be in the enumeration.</source>
          <target state="translated">リソースへのURLの列挙。リソースが見つからなかった場合、列挙は空になります。アクセスできなかったリソースは列挙に含まれません。</target>
        </trans-unit>
        <trans-unit id="c7c82bf812c482004d1f9302f36864a703f8a452" translate="yes" xml:space="preserve">
          <source>An enumeration of cryptographic primitives.</source>
          <target state="translated">暗号プリミティブの列挙。</target>
        </trans-unit>
        <trans-unit id="beb61a541e74ed1490f0ce4684e113edb340aa12" translate="yes" xml:space="preserve">
          <source>An enumeration of resource &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">リソース&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;オブジェクトの列挙</target>
        </trans-unit>
        <trans-unit id="5b1bbcd62e9dcad9208070b0e973cdfb3e7928f4" translate="yes" xml:space="preserve">
          <source>An enumeration of the locale-independent names of any attributes that have been registered with setValue.</source>
          <target state="translated">setValueで登録された属性のロケールに依存しない名前の列挙。</target>
        </trans-unit>
        <trans-unit id="e1cf31d30f0363d049af71ea9bc4b7662716d534" translate="yes" xml:space="preserve">
          <source>An environment parameter passed to the &lt;code&gt;getReferralContext()&lt;/code&gt; method is owned by the caller. The service provider will not modify the object or keep a reference to it, but may keep a reference to a clone of it.</source>
          <target state="translated">&lt;code&gt;getReferralContext()&lt;/code&gt; メソッドに渡される環境パラメーターは、呼び出し元が所有します。サービスプロバイダーは、オブジェクトを変更したり、オブジェクトへの参照を保持したりしませんが、そのクローンへの参照を保持する場合があります。</target>
        </trans-unit>
        <trans-unit id="b22a21850580a5551005539ab74ecbda9d89d23e" translate="yes" xml:space="preserve">
          <source>An equivalent sequence of increasing values can be produced sequentially using a &lt;code&gt;for&lt;/code&gt; loop as follows:</source>
          <target state="translated">次のように &lt;code&gt;for&lt;/code&gt; ループを使用して、値が増加する同等のシーケンスを順次生成できます。</target>
        </trans-unit>
        <trans-unit id="b6c23e72efac7e28cf201277fb81153f3033c863" translate="yes" xml:space="preserve">
          <source>An era in the Hijrah calendar system.</source>
          <target state="translated">ヒジュラ暦の時代。</target>
        </trans-unit>
        <trans-unit id="8a0fe9ecc4a131e9eec25ea069d34eb24113bc18" translate="yes" xml:space="preserve">
          <source>An era in the ISO calendar system.</source>
          <target state="translated">ISOカレンダーシステムの時代。</target>
        </trans-unit>
        <trans-unit id="62bcbe9eaf8ff0c4c4424e1daeeaa0dddaa8dc82" translate="yes" xml:space="preserve">
          <source>An era in the Japanese Imperial calendar system.</source>
          <target state="translated">日本の皇室暦制度の時代。</target>
        </trans-unit>
        <trans-unit id="839edb94c79947e4491762b5f14252c9ed3b9c74" translate="yes" xml:space="preserve">
          <source>An era in the Minguo calendar system.</source>
          <target state="translated">みんぐう暦制度の時代。</target>
        </trans-unit>
        <trans-unit id="a2374e18a681c155a680850c562b80c5a765732f" translate="yes" xml:space="preserve">
          <source>An era in the Thai Buddhist calendar system.</source>
          <target state="translated">タイ仏教暦制度の一時代。</target>
        </trans-unit>
        <trans-unit id="b31f80db4176959ff8dccbf954da32e245c253aa" translate="yes" xml:space="preserve">
          <source>An era of the time-line.</source>
          <target state="translated">時系列の時代。</target>
        </trans-unit>
        <trans-unit id="45f317061a9a0c7b57fdd2378c1b7dca9f0e2867" translate="yes" xml:space="preserve">
          <source>An escape string that does not precede a meta string (quotes or separator) and is not at the end of a component is treated as an ordinary string.</source>
          <target state="translated">メタ文字列(引用符や区切り文字)の前になく、コンポーネントの最後にないエスケープ文字列は、通常の文字列として扱われます。</target>
        </trans-unit>
        <trans-unit id="8f5d7c9f85be083f62fb0eb6020e241a7825b015" translate="yes" xml:space="preserve">
          <source>An escape string within a quoted component acts as an escape only when followed by the corresponding end-quote string. This can be used to embed an escaped quote within a quoted component.</source>
          <target state="translated">引用符で囲まれたコンポーネント内のエスケープ文字列は、対応する引用符終了文字列の後に続く場合にのみ、エスケープとして動作します。これは、引用符で囲まれたコンポーネント内にエスケープされた引用符を埋め込むために使用することができます。</target>
        </trans-unit>
        <trans-unit id="257eb29f69cca491172de9ea2a2e994ea6f408de" translate="yes" xml:space="preserve">
          <source>An escaped escape string is not treated as an escape string.</source>
          <target state="translated">エスケープされたエスケープ文字列は、エスケープ文字列としては扱われません。</target>
        </trans-unit>
        <trans-unit id="756ecddad80be9fd79fa4f500d3a0c72a53e4d6c" translate="yes" xml:space="preserve">
          <source>An estimate of the area that will be updated by the pass is indicated by the &lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; parameters. If the pass is interlaced, that is, it only updates selected rows or columns, the &lt;code&gt;periodX&lt;/code&gt; and &lt;code&gt;periodY&lt;/code&gt; parameters will indicate the degree of subsampling. The set of bands that may be affected is indicated by the value of &lt;code&gt;bands&lt;/code&gt;.</source>
          <target state="translated">パスによって更新される領域の推定値は、 &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、および &lt;code&gt;height&lt;/code&gt; パラメーターで示されます。パスがインターレースされている場合、つまり選択された行または列のみが更新される場合、 &lt;code&gt;periodX&lt;/code&gt; および &lt;code&gt;periodY&lt;/code&gt; パラメータはサブサンプリングの程度を示します。影響を受ける可能性があるバンドのセットは、の値で示される &lt;code&gt;bands&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aec68a524e95cbe65d72e0400144f46b19e4f5b" translate="yes" xml:space="preserve">
          <source>An estimate of the memory that the Java virtual machine is using for this buffer pool in bytes, or &lt;code&gt;-1L&lt;/code&gt; if an estimate of the memory usage is not available</source>
          <target state="translated">Java仮想マシンがこのバッファー・プールに使用しているメモリーの見積もり（バイト単位）、またはメモリー使用量の見積もりが使用できない場合は &lt;code&gt;-1L&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35a86aad05409a4443ef8f7c26a0ae5b2623f6c1" translate="yes" xml:space="preserve">
          <source>An estimate of the number of buffers in this pool</source>
          <target state="translated">このプールのバッファの数の推定値</target>
        </trans-unit>
        <trans-unit id="9c7be5f46b9993beedafe18d1daa7444f7e43eb1" translate="yes" xml:space="preserve">
          <source>An estimate of the total capacity of the buffers in this pool in bytes</source>
          <target state="translated">このプール内のバッファの総容量をバイト単位で推定したもの。</target>
        </trans-unit>
        <trans-unit id="6c81d97c6dccc30340a15355e34ff8e97b7403ed" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a child of that node has been added or removed.</source>
          <target state="translated">&lt;code&gt;Preferences&lt;/code&gt; ノードによって発行され、そのノードの子が追加または削除されたことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="06c96077886494750aabd7c2320ccfb76b17746e" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a preference has been added, removed or has had its value changed.</source>
          <target state="translated">&lt;code&gt;Preferences&lt;/code&gt; が追加、削除、または値が変更されたことを示すためにPreferencesノードによって発行されるイベント。</target>
        </trans-unit>
        <trans-unit id="9f5e54c6bf6e5cb8c0aad4f8bf44cffe32722464" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;watchevent#kind--&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">イベントはその&lt;a href=&quot;watchevent#kind--&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;によって分類され、イベントが観測された&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;を示すカウントがあります。これにより、繰り返しイベントを効率的に表現できます。&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;方法は、イベントに関連付けられた任意のコンテキストを返します。繰り返しイベントの場合、コンテキストはすべてのイベントで同じです。</target>
        </trans-unit>
        <trans-unit id="e419c0a367c0952c77049429cb02258e2eeee887" translate="yes" xml:space="preserve">
          <source>An event kind, for the purposes of identification.</source>
          <target state="translated">識別のためのイベントの種類。</target>
        </trans-unit>
        <trans-unit id="15f065001a5c026588b520e089120d59c698781d" translate="yes" xml:space="preserve">
          <source>An event modifier that qualifies how a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">格、どのようにした場合修飾子&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt;に登録されている&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3c2026b10e715c2c07e83b29999c1d04110c221" translate="yes" xml:space="preserve">
          <source>An event or a repeated event for an object that is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; に&lt;/a&gt;登録されているオブジェクトのイベントまたは繰り返しイベント。</target>
        </trans-unit>
        <trans-unit id="d686f847c2b54ec5ed578041a97ae28c8f068475" translate="yes" xml:space="preserve">
          <source>An event source may send a null object as the name to indicate that an arbitrary set of if its properties have changed. In this case the old and new values should also be null.</source>
          <target state="translated">イベントソースは、そのプロパティが変更された場合の任意のセットを示すために、名前としてヌルオブジェクトを送信することがあります。この場合、古い値と新しい値もNULLでなければなりません。</target>
        </trans-unit>
        <trans-unit id="1c58667598e54fdb2f24f8569a3872e9e89ca801" translate="yes" xml:space="preserve">
          <source>An example is grammatical information attached to a sentence: For the previous sentence, you can say that &quot;an example&quot; is the subject, but you cannot say the same about &quot;an&quot;, &quot;example&quot;, or &quot;exam&quot;. When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</source>
          <target state="translated">例文とは、文に付けられた文法的な情報のことです。前の文では、「例題」が主語であると言えますが、「an」「例題」「試験」については同じことは言えません。文章が変わると、通常は文法情報が無効になります。もう一つの例として、日本語の読解情報(ヨミ)があります。</target>
        </trans-unit>
        <trans-unit id="8314e4f5c5e80547f95424d5dfb5afb0daf701ff" translate="yes" xml:space="preserve">
          <source>An example of a binary reference address is an BER X.500 presentation address. Another example of a binary reference address is a serialized form of a service's object handle.</source>
          <target state="translated">バイナリ参照アドレスの例としては、BER X.500 プレゼンテーションアドレスがあります。バイナリ参照アドレスのもう一つの例は、サービスのオブジェクトハンドルのシリアライズされた形式です。</target>
        </trans-unit>
        <trans-unit id="c422262ad662671c77308969717b4f574d8e6288" translate="yes" xml:space="preserve">
          <source>An example of a string reference address is a host name. Another example of a string reference address is a URL.</source>
          <target state="translated">文字列参照アドレスの例は、ホスト名です。文字列参照アドレスのもう一つの例は、URLです。</target>
        </trans-unit>
        <trans-unit id="db5da4ac02ef7c65a5dc16ef28a9ba5d3add4e7d" translate="yes" xml:space="preserve">
          <source>An example of using this method on a legacy throwable type without other support for setting the cause is:</source>
          <target state="translated">原因を設定するための他のサポートがないレガシーな throwable 型でこのメソッドを使用した例があります。</target>
        </trans-unit>
        <trans-unit id="9135abf2557d130e528a795718b735e7528d8a4c" translate="yes" xml:space="preserve">
          <source>An excellent tutorial and overview of regular expressions is &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997.&lt;/a&gt;</source>
          <target state="translated">正規表現の優れたチュートリアルと概要は、&lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;、Jeffrey EF Friedl、O'Reilly and Associates、1997です。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e585cb095bdaba25a8339e18cc96d48bcd0f705" translate="yes" xml:space="preserve">
          <source>An exception can have both a cause and one or more suppressed exceptions:</source>
          <target state="translated">例外は、原因となる例外と、抑制された例外の両方を持つことができます。</target>
        </trans-unit>
        <trans-unit id="2c76da232b28c630a45be3d12fbb935c81a92db4" translate="yes" xml:space="preserve">
          <source>An exception class used for signaling run-time failure of reading and writing operations.</source>
          <target state="translated">読み書き操作の実行時の失敗を通知するために使用される例外クラス。</target>
        </trans-unit>
        <trans-unit id="36426bb10473750780024705d86e053d5bf31ab5" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when building a certification path with a &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertPathBuilder&lt;/code&gt; で証明書パスを構築するときに発生したさまざまな問題の1つを示す例外。</target>
        </trans-unit>
        <trans-unit id="01bff7fd7d4a32814d6a5362737e0607d8446049" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when validating a certification path.</source>
          <target state="translated">認証パスを検証する際に発生した様々な問題の一つを示す例外。</target>
        </trans-unit>
        <trans-unit id="827b6a6c54d1f1c48aecd7390decd0af34678563" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems retrieving certificates and CRLs from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; から証明書とCRLを取得する際のさまざまな問題の1つを示す例外。</target>
        </trans-unit>
        <trans-unit id="539a0257d7fb54af59d0655a04e9605a2871fae6" translate="yes" xml:space="preserve">
          <source>An exception is thrown while collecting information about the events. That is, when the listener receives a &lt;code&gt;NamingExceptionEvent&lt;/code&gt;.</source>
          <target state="translated">イベントに関する情報の収集中に例外がスローされます。つまり、リスナーが &lt;code&gt;NamingExceptionEvent&lt;/code&gt; を受け取ったときです。</target>
        </trans-unit>
        <trans-unit id="a0d0592d1b01dc12413c57ea90c27fe3a483f573" translate="yes" xml:space="preserve">
          <source>An exception may have suppressed exceptions while also being caused by another exception. Whether or not an exception has a cause is semantically known at the time of its creation, unlike whether or not an exception will suppress other exceptions which is typically only determined after an exception is thrown.</source>
          <target state="translated">例外は、他の例外によって引き起こされた例外を抑制している可能性があります。例外に原因があるかどうかは、例外が他の例外を抑制するかどうかは、通常は例外が投げられた後にのみ決定されるのとは異なり、例外が作成された時点で意味的にわかります。</target>
        </trans-unit>
        <trans-unit id="53beaa837ddc7ceb7ee67f542711dcb85c2b2b5a" translate="yes" xml:space="preserve">
          <source>An exception occurred during the introspection of an MBean.</source>
          <target state="translated">MBeanの内観中に例外が発生しました。</target>
        </trans-unit>
        <trans-unit id="d875fe6048b3e5126d3cdd14afc5d8aa9a9088b5" translate="yes" xml:space="preserve">
          <source>An exception of type &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown if any of the following situations occurs:</source>
          <target state="translated">次のいずれかの状況が発生した場合は、 &lt;code&gt;NumberFormatException&lt;/code&gt; タイプの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="26e5ef4037e4c60c7276617440fb680055be6bd6" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked.</source>
          <target state="translated">X.509 証明書が失効したことを示す例外。</target>
        </trans-unit>
        <trans-unit id="eb2cb5367acdec595b1cf7be61b81bd4e9f62194" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked. A &lt;code&gt;CertificateRevokedException&lt;/code&gt; contains additional information about the revoked certificate, such as the date on which the certificate was revoked and the reason it was revoked.</source>
          <target state="translated">X.509証明書が取り消されたことを示す例外。A &lt;code&gt;CertificateRevokedException&lt;/code&gt; は、そのような証明書が失効した日付と、それが取り消された理由として、取り消された証明書に関する追加情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="2f160d97246c78d81ce29bd33cee54f7227c87cc" translate="yes" xml:space="preserve">
          <source>An exception thrown when an error occurs during parsing.</source>
          <target state="translated">解析中にエラーが発生した場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="568073553e60a50c6f3c7444d5cb67c4ef8ab555" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if the application attempts to write more data than the indicated content-length, or if the application closes the OutputStream before writing the indicated amount.</source>
          <target state="translated">アプリケーションが指定されたコンテンツ長よりも多くのデータを書き込もうとした場合、または指定された量を書き込む前にアプリケーションがOutputStreamを閉じた場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="93a26116f3df8d3f260ee17d5c240a1a6577cc24" translate="yes" xml:space="preserve">
          <source>An explicit close always closes the device, even if it also has been opened implicitly. A subsequent implicit close has no further effect.</source>
          <target state="translated">明示的なクローズは、暗黙的にオープンされていたとしても、常にデバイスをクローズします。それ以降の暗黙のクローズはそれ以上の効果はありません。</target>
        </trans-unit>
        <trans-unit id="e3986466cb3d0bca4cf9d2636b3186e85275a4aa" translate="yes" xml:space="preserve">
          <source>An expression whose value is &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;oldInstance&lt;/code&gt; である式。</target>
        </trans-unit>
        <trans-unit id="5eb6c2a45ba0c27df9207c6ea74c881a9c847b7d" translate="yes" xml:space="preserve">
          <source>An extending class need only implement &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">拡張クラスは、&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; を&lt;/a&gt;実装するだけで済みます。拡張クラスは、よりパフォーマンスの高い実装を提供できる場合、&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9171732ddcc7644c3065146d75395b18ad8d6f3e" translate="yes" xml:space="preserve">
          <source>An external class calls the &lt;code&gt;push&lt;/code&gt; method explicitly.</source>
          <target state="translated">外部クラスは、 &lt;code&gt;push&lt;/code&gt; メソッドを明示的に呼び出します。</target>
        </trans-unit>
        <trans-unit id="033bf48169520099efc15604736ebca1567af09f" translate="yes" xml:space="preserve">
          <source>An hour is represented by an integer from 0 to 23. Thus, the hour from midnight to 1 a.m. is hour 0, and the hour from noon to 1 p.m. is hour 12.</source>
          <target state="translated">1時間は0から23までの整数で表されます。したがって、午前0時から午前1時までの時間は0時間、正午から午後1時までの時間は12時間となります。</target>
        </trans-unit>
        <trans-unit id="b79a12129245be08c85e4cc35ed8664d573a28c7" translate="yes" xml:space="preserve">
          <source>An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt;trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</source>
          <target state="translated">理想的な &lt;code&gt;trySplit&lt;/code&gt; メソッドは、（トラバーサルなしで）効率的に要素を半分に分割し、バランスの取れた並列計算を可能にします。この理想からの多くの逸脱は、依然として非常に効果的です。たとえば、近似的にバランスの取れたツリーを近似的に分割するだけ、またはリーフノードに1つまたは2つの要素が含まれる可能性があるツリーの場合、これらのノードをさらに分割することはできません。ただし、バランスの大きな偏差や過度に非効率的な &lt;code&gt;trySplit&lt;/code&gt; メカニズムは、通常、並列パフォーマンスの低下につながります。</target>
        </trans-unit>
        <trans-unit id="41d0c98191c8e0cd3f8eae5d99c11cbb42071020" translate="yes" xml:space="preserve">
          <source>An identifier for a set of interfaces (typically belonging to different nodes). A packet sent to a multicast address is delivered to all interfaces identified by that address.</source>
          <target state="translated">インターフェイスのセット(通常は異なるノードに属する)の識別子。マルチキャストアドレスに送信されたパケットは、そのアドレスによって識別されるすべてのインタフェースに配信されます。</target>
        </trans-unit>
        <trans-unit id="4dcf1db7e714dcdb9b3413181423df3a906152b8" translate="yes" xml:space="preserve">
          <source>An identifier for a single interface. A packet sent to a unicast address is delivered to the interface identified by that address.</source>
          <target state="translated">単一インタフェースの識別子。ユニキャストアドレスに送信されたパケットは、そのアドレスで識別されたインタフェースに配信されます。</target>
        </trans-unit>
        <trans-unit id="c7b3ff5ff9fb693f688e56288aa4f3c2362b1456" translate="yes" xml:space="preserve">
          <source>An illegal character is</source>
          <target state="translated">違法なキャラクターは</target>
        </trans-unit>
        <trans-unit id="1e56c26e424d69f528048e3514f89769c7494760" translate="yes" xml:space="preserve">
          <source>An image encoded as part of a file or stream may be thought of extending out in multiple dimensions: the spatial dimensions of width and height, a number of bands, and a number of progressive decoding passes. This class allows a contiguous (hyper)rectangular subarea of the image in all of these dimensions to be selected for decoding. Additionally, the spatial dimensions may be subsampled discontinuously. Finally, color and format conversions may be specified by controlling the &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; of the destination image, either by providing a &lt;code&gt;BufferedImage&lt;/code&gt; or by using an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;.</source>
          <target state="translated">ファイルまたはストリームの一部としてエンコードされた画像は、幅と高さの空間的次元、多数のバンド、多数のプログレッシブデコードパスなど、複数の次元に拡張すると考えることができます。このクラスを使用すると、これらのすべての次元の画像の隣接する（ハイパー）長方形のサブエリアをデコード用に選択できます。さらに、空間次元は不連続にサブサンプリングされる場合があります。最後に、色とフォーマットの変換は、 &lt;code&gt;BufferedImage&lt;/code&gt; を提供するか、または &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; を使用して、宛先イメージの &lt;code&gt;ColorModel&lt;/code&gt; と &lt;code&gt;SampleModel&lt;/code&gt; を制御することによって指定できます。</target>
        </trans-unit>
        <trans-unit id="fe0553838112e0cf625c3b61ad5d079c23786605" translate="yes" xml:space="preserve">
          <source>An immutable Map from response header field names to lists of field values. The status line has null as its field name.</source>
          <target state="translated">レスポンスヘッダーのフィールド名からフィールド値のリストへの不変のマップ。ステータス行のフィールド名には null が含まれています。</target>
        </trans-unit>
        <trans-unit id="309749b311138b7f3bec40d7451870c2df26158a" translate="yes" xml:space="preserve">
          <source>An immutable descriptor.</source>
          <target state="translated">不変の記述子。</target>
        </trans-unit>
        <trans-unit id="2111ab463a21040ddacb00a296f71ac5f3327414" translate="yes" xml:space="preserve">
          <source>An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo structure.</source>
          <target state="translated">ASN.1 PolicyQualifierInfo構造体で表される不変のポリシー修飾子。</target>
        </trans-unit>
        <trans-unit id="2393eb39797e342496739136a00756f2eb32faa0" translate="yes" xml:space="preserve">
          <source>An immutable sequence of certificates (a certification path).</source>
          <target state="translated">証明書の不変のシーケンス(認証パス)。</target>
        </trans-unit>
        <trans-unit id="2cbbbd823fdfe74ee0208df70396dc16cfefa5d9" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters.</source>
          <target state="translated">不変の文字列。</target>
        </trans-unit>
        <trans-unit id="d488a1fff9862fa2cfb517a44dc0a8320f94ea54" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt;s from different implementations may not work properly in collections.</source>
          <target state="translated">不変の文字シーケンス。同じ実装で作成された場合、このインターフェースを実装するオブジェクトは、互いに比較する場合、一般的な&lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;等号規約&lt;/a&gt;に従う必要があります。したがって、 &lt;code&gt;Name&lt;/code&gt; ながら同じ実装からオブジェクトをコレクションに使用可能である &lt;code&gt;Name&lt;/code&gt; の異なる実装からは、コレクションに正常に動作しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="bfe828311e3aadf4efbe903c5a4d3dae8f803152" translate="yes" xml:space="preserve">
          <source>An immutable set of this charset's aliases</source>
          <target state="translated">この文字セットのエイリアスの不変セット</target>
        </trans-unit>
        <trans-unit id="86774acac7eb69d01bec215a163a97ba1edd8cd1" translate="yes" xml:space="preserve">
          <source>An immutable valid policy tree node as defined by the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX 認証パス検証アルゴリズムで定義された、不変の有効なポリシーツリーノード。</target>
        </trans-unit>
        <trans-unit id="11def7fe2970e531f4ea239ac44939945341968a" translate="yes" xml:space="preserve">
          <source>An immutable, case-insensitive map from canonical charset names to charset objects</source>
          <target state="translated">正準文字セット名から文字セットオブジェクトへの大文字小文字を区別しない不変のマップ</target>
        </trans-unit>
        <trans-unit id="c5e4c656812f06ae210159024d8f8491f2ba594c" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect. The default value of this socket option is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケットオプションの値を変更しても影響はありません。ソケットオプションのデフォルト値はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="13b0ed2338768498271a0575928eef5780873aab" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket receive buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケット受信バッファを変更できるかどうかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="5677116f123d9765077b0c39d1986e1989e1d683" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket send buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケット送信バッファを変更できるかどうかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="efc8d388f194b1630ca29c5a6c8bc7749a3434e1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the elapse of the specified waiting time. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">実装では、シグナルに応答して通常のメソッドを返すよりも、指定された待ち時間の経過を示すよりも、割込みに応答する方が有利になることがあります。いずれの場合も、シグナルが他の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f982d4312ab2106d3754d438d5420cf313e7b9f9" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the passing of the specified deadline. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">実装では、シグナルに応答して通常のメソッドを返すよりも、指定されたデッドラインの通過を示すよりも、割込みに応答する方が有利になることがあります。いずれの場合も、シグナルが別の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9a5e48fc4c01a2371f770cac59b3f2c703b41ac3" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal. In that case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">ある実装では、シグナルに反応して通常のメソッドを返すよりも割込みに反応した方が良い場合があります。その場合、シグナルが別の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f4df28dda59592a04017409234d63cb3dd6b1727" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return, or reporting a timeout.</source>
          <target state="translated">実装では、通常のメソッドのリターンよりも割込みに応答したり、タイムアウトを報告したりすることができます。</target>
        </trans-unit>
        <trans-unit id="9e7cc878bc068e369c8f0fc0e46fc6a6baeef6c1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return.</source>
          <target state="translated">実装では、通常のメソッドの戻り値よりも割り込みへの応答を優先することができます。</target>
        </trans-unit>
        <trans-unit id="5858553ccba5ec8f867c82d8df384e89f65bed29" translate="yes" xml:space="preserve">
          <source>An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods, and when an implementation does support interruption of thread suspension then it must obey the interruption semantics as defined in this interface.</source>
          <target state="translated">実装は、各待ち行列メソッドによって提供されるセマンティクスと保証を明確に文書化することが要求され、実装がスレッド停止の中断をサポートする場合、このインタフェースで定義されている中断セマンティクスに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="0806c07fac13f63c8b1e90d2d509f3dc707dff61" translate="yes" xml:space="preserve">
          <source>An implementation is required to read XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">「 &lt;code&gt;UTF-8&lt;/code&gt; 」または「 &lt;code&gt;UTF-16&lt;/code&gt; 」エンコーディングを使用するXMLドキュメントを読み取るための実装が必要です。実装は、追加のエンコーディングをサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="f45e1c3ce65854544563be57c2c76070474b3489" translate="yes" xml:space="preserve">
          <source>An implementation is required to support writing of XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">「 &lt;code&gt;UTF-8&lt;/code&gt; 」または「 &lt;code&gt;UTF-16&lt;/code&gt; 」エンコーディングを使用するXMLドキュメントの書き込みをサポートするには、実装が必要です。実装は、追加のエンコーディングをサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="be6da1cc0616bc7c03ac504057b911b61246909d" translate="yes" xml:space="preserve">
          <source>An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt;Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">実装では、このメソッドが呼び出されたときに、現在のスレッドがこの &lt;code&gt;Condition&lt;/code&gt; に関連付けられたロックを保持する必要がある場合があります（通常は必要です）。実装では、この前提条件と、ロックが保持されていない場合に実行されるアクションを文書化する必要があります。通常、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;などの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5674f0612dc6454a818f8c8028668e0f78a363f5" translate="yes" xml:space="preserve">
          <source>An implementation may also recognize additional address syntaxes, for example:</source>
          <target state="translated">実装は、例えば、追加のアドレス構文を認識してもよい。</target>
        </trans-unit>
        <trans-unit id="db29138847f18d7621c563e7db7a5d5353025aeb" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional implementation specific options.</source>
          <target state="translated">実装は、追加の実装固有のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="49ba47636f3a8455cca62c8db213ba1b0cdfad7d" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional options.</source>
          <target state="translated">実装は、追加のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="7563b4f7798b6925941631e4c4b01cffff67feb7" translate="yes" xml:space="preserve">
          <source>An implementation may offer better algorithmic performance when &lt;code&gt;val == this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val == this&lt;/code&gt; 場合、実装によってアルゴリズムのパフォーマンスが向上する場合があります。</target>
        </trans-unit>
        <trans-unit id="91f70497f45992b4879cd204e0d29502a43966f1" translate="yes" xml:space="preserve">
          <source>An implementation may require to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="translated">実装では、ファイルがディレクトリであるかどうかを判断するために、ファイルを調べる必要があるかもしれません。その結果、このメソッドは他のファイルシステム操作に関してはアトミックではないかもしれません。ファイルがシンボリックリンクの場合は、シンボリックリンク自体が削除され、リンクの最終ターゲットは削除されません。</target>
        </trans-unit>
        <trans-unit id="02efbc7035ebd990de6c92ec623b7b7ebaa5ca50" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; supporting similar semantics to &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;と同様のセマンティクスをサポートする&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt;の実装。</target>
        </trans-unit>
        <trans-unit id="9c6f6844bf601599a7869871061f029063cd1eb3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="059bd6ffc3f987d067381ad60a8520569cc67527" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;. The file contents are assumed to be stable during the lifetime of the object.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。ファイルの内容は、オブジェクトの存続期間中は安定していると見なされます。</target>
        </trans-unit>
        <trans-unit id="457993776e649ccb2e8fc664bf34b54846ba04c4" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="4daf5309026dfdbfacc05ada44d49361ca2d6e6d" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A file is used to cache previously read data.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。ファイルは、以前に読み取ったデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="a229238fcd71b555a42b98e4ade47edb39ab3d74" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current read position.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。メモリバッファは、少なくとも破棄位置と現在の読み取り位置の間のデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="1715700fc056d15ae81a2b83b6833150a0a8b005" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output directly to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">出力を直接 &lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="1c6863765c682444215abf8678d6537ccb4b2a2e" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="836f27e664c9096fb0c70651125110bfbc6cc92a" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A file is used to cache data until it is flushed to the output stream.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。ファイルは、出力ストリームにフラッシュされるまでデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="c31a52b9996547c44a62ef393d4ed635876f5dc6" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current write position. The only constructor takes an &lt;code&gt;OutputStream&lt;/code&gt;, so this class may not be used for read/modify/write operations. Reading can occur only on parts of the stream that have already been written to the cache and not yet flushed.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。メモリバッファは、少なくとも破棄位置と現在の書き込み位置の間のデータをキャッシュするために使用されます。唯一のコンストラクタは &lt;code&gt;OutputStream&lt;/code&gt; を受け取るため、このクラスは読み取り/変更/書き込み操作には使用できません。読み取りは、すでにキャッシュに書き込まれていてまだフラッシュされていないストリームの部分でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="6cde0f952178cceb7ef2b91373a41819902268a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is responsible for adding the ignored exceptions to the list.</source>
          <target state="translated">&lt;code&gt;PKIXRevocationChecker&lt;/code&gt; の実装は、無視された例外をリストに追加する責任があります。</target>
        </trans-unit>
        <trans-unit id="5756aff0e44958a2c776a7455c2712790e18167b" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may prohibit truncation when connected to an entity, typically a file, opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">このインターフェースの実装は、&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;オプションで開かれたエンティティ（通常はファイル）に接続されている場合、切り捨てを禁止する場合があります。</target>
        </trans-unit>
        <trans-unit id="3ba7010f6739cb6575395956999483b72deadec7" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may support additional implementation specific options.</source>
          <target state="translated">このインタフェースの実装は、追加の実装固有のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="9987dbb34795ed4f7e78e9ccc836ab83c4edcc75" translate="yes" xml:space="preserve">
          <source>An implementation of this interface must define a &lt;code&gt;compareTo&lt;/code&gt; method that provides an ordering consistent with its &lt;code&gt;getDelay&lt;/code&gt; method.</source>
          <target state="translated">このインターフェイスの実装は、 &lt;code&gt;getDelay&lt;/code&gt; メソッドと一貫性のある順序を提供する &lt;code&gt;compareTo&lt;/code&gt; メソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="351575b04c66e198d4cc717d82c655e6119d7292" translate="yes" xml:space="preserve">
          <source>An implementation of this method may perform arbitrary lookahead by returning &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; until it receives sufficient input.</source>
          <target state="translated">このメソッドの実装は、十分な入力を受け取るまで&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;を返すことにより、任意の先読みを実行できます。</target>
        </trans-unit>
        <trans-unit id="dac848b4c389f4f581fc3bdf751e940dc491fd9b" translate="yes" xml:space="preserve">
          <source>An implementation of this method might remove/destroy a Subject's Principals and Credentials.</source>
          <target state="translated">このメソッドの実装では、サブジェクトのプリンシパルとクレデンシャルを削除/破壊することができます。</target>
        </trans-unit>
        <trans-unit id="7ff47ed40388a7cf01eea84e2772e1cb2fe9d5a0" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドの実装は、このセレクターの選択操作でブロックされた他のスレッドが、&lt;a href=&quot;../selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したかのようにすぐに戻るように調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="38484a30e2ef54b7a5a25f0a9d10fcdf555fdf96" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in an I/O operation upon this channel to return immediately, either by throwing an exception or by returning normally.</source>
          <target state="translated">このメソッドの実装では、このチャネル上の I/O 操作でブロックされた他のスレッドが、例外を投げるか、通常通りに返すかのいずれかで、すぐに戻るように手配しなければなりません。</target>
        </trans-unit>
        <trans-unit id="58fda3455b3a038c0f6e68de6cb19fc938bbe7ea" translate="yes" xml:space="preserve">
          <source>An implementation-reserved element. This is not the element you are looking for.</source>
          <target state="translated">実装で保存されている要素です。これはあなたが探している要素ではありません。</target>
        </trans-unit>
        <trans-unit id="8bd0e138fb5948f3b621a84e0a7a6553ab374e64" translate="yes" xml:space="preserve">
          <source>An implementation-reserved type. This is not the type you are looking for.</source>
          <target state="translated">実装で保存された型です。これはお探しの型ではありません。</target>
        </trans-unit>
        <trans-unit id="68522838b88bf64e4e84ba893135c5e8bf4b299d" translate="yes" xml:space="preserve">
          <source>An important method that must be implemented by each subclass is the &lt;code&gt;implies&lt;/code&gt; method to compare Permissions. Basically, &quot;permission p1 implies permission p2&quot; means that if one is granted permission p1, one is naturally granted permission p2. Thus, this is not an equality test, but rather more of a subset test.</source>
          <target state="translated">各サブクラスで実装する必要がある重要なメソッドは、権限を比較する &lt;code&gt;implies&lt;/code&gt; メソッドです。基本的に、「許可p1は許可p2を意味する」とは、許可p1が付与された場合、当然許可p2が付与されることを意味します。したがって、これは同等性テストではなく、サブセットテストの詳細です。</target>
        </trans-unit>
        <trans-unit id="266b129cb42c0c5ae325fff8527f94dd650750e2" translate="yes" xml:space="preserve">
          <source>An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">ディレクトリストリームの &lt;code&gt;Iterator&lt;/code&gt; の重要なプロパティは、その&lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;メソッドが少なくとも1つの要素によって先読みされることが保証されていることです。 &lt;code&gt;hasNext&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;next&lt;/code&gt; メソッドの呼び出しが続く場合、I / Oエラーまたはストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;ているため、 &lt;code&gt;next&lt;/code&gt; メソッドが例外をスローしないことが保証されます。 &lt;code&gt;Iterator&lt;/code&gt; サポートしていません。&lt;a href=&quot;../../util/iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;操作を。</target>
        </trans-unit>
        <trans-unit id="5f2d5128152fd4379f7fdc6772521870216ccc2b" translate="yes" xml:space="preserve">
          <source>An incoming &lt;code&gt;LogRecord&lt;/code&gt; has a type that is greater than a pre-defined level, the &lt;code&gt;pushLevel&lt;/code&gt;.</source>
          <target state="translated">着信 &lt;code&gt;LogRecord&lt;/code&gt; には、事前定義されたレベルである &lt;code&gt;pushLevel&lt;/code&gt; よりも大きいタイプがあります。</target>
        </trans-unit>
        <trans-unit id="661e7a84e5a7fe4804ae49cc3aa7fd00e80e1b93" translate="yes" xml:space="preserve">
          <source>An independent &lt;code&gt;ImageTranscoder&lt;/code&gt; essentially takes on the same role as the writer plug-in in the above examples. It must be familiar with the private interfaces used by both the reader and writer plug-ins, and manually instantiate an object that will be usable by the writer. The resulting metadata objects may be used by the writer directly.</source>
          <target state="translated">独立した &lt;code&gt;ImageTranscoder&lt;/code&gt; は基本的に、上記の例のライタープラグインと同じ役割を果たします。リーダープラグインとライタープラグインの両方で使用されるプライベートインターフェースに精通し、ライターが使用できるオブジェクトを手動でインスタンス化する必要があります。結果のメタデータオブジェクトは、ライターが直接使用できます。</target>
        </trans-unit>
        <trans-unit id="8c180fe4b44c4db4386f2c8f4fb4fbde76583571" translate="yes" xml:space="preserve">
          <source>An indexed property may also provide simple non-indexed read and write methods. If these are present, they read and write arrays of the type returned by the indexed read method.</source>
          <target state="translated">インデックス付きプロパティは、インデックス付きではない単純な読み書きメソッドを提供することもあります。これらが存在する場合、これらはインデックス化された読み込みメソッドによって返される型の配列を読み書きします。</target>
        </trans-unit>
        <trans-unit id="1909650ffded906938461fc87443840f926f9fd9" translate="yes" xml:space="preserve">
          <source>An indication that this element of the information model is no longer recommended for use. A set of MBeans defined by an application is collectively called an &lt;em&gt;information model&lt;/em&gt;. The convention is for the value of this field to contain a string that is the version of the model in which the element was first deprecated, followed by a space, followed by an explanation of the deprecation, for example &lt;code&gt;&quot;1.3 Replaced by the Capacity
 attribute&quot;&lt;/code&gt;.</source>
          <target state="translated">情報モデルのこの要素の使用が推奨されなくなったことを示します。アプリケーションによって定義されたMBeanのセットは、まとめて&lt;em&gt;情報モデル&lt;/em&gt;と呼ばれます。慣例では、このフィールドの値には、要素が最初に非推奨になったモデルのバージョンである文字列が含まれ、その後にスペースが続き、非推奨の説明が続きます。たとえば、 &lt;code&gt;&quot;1.3 Replaced by the Capacity attribute&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84111983447f98a00f462c48c3a8b61889803fe8" translate="yes" xml:space="preserve">
          <source>An informative annotation type used to indicate that an interface type declaration is intended to be a</source>
          <target state="translated">インターフェイス型宣言が</target>
        </trans-unit>
        <trans-unit id="89b936e093f962e369dc465cd09398f51ef3fd1f" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found</source>
          <target state="translated">リソースを読み取るための入力ストリーム。リソースが見つからなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fe4f71a0cdebcdad9e0bd3113ba606830111696" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or null if the resource could not be found</source>
          <target state="translated">リソースを読み込むための入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="c63b970bd0ed0ceae17f2ea9684a00b977d2a1c2" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read.</source>
          <target state="translated">読み込まれるデータのチェックサムも保持する入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="b046fe3a3ebcdbc149d1ebd516a7345ecba04d64" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read. The checksum can then be used to verify the integrity of the input data.</source>
          <target state="translated">読み込まれるデータのチェックサムも保持する入力ストリーム。このチェックサムは、入力データの整合性を検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="10e0ef8fdd647a154368b89804fb15cd0997512e" translate="yes" xml:space="preserve">
          <source>An instance implementing this interface must conform to</source>
          <target state="translated">このインターフェイスを実装するインスタンスは</target>
        </trans-unit>
        <trans-unit id="33f9efa50517c9254c9fa7703576b4056122b7d8" translate="yes" xml:space="preserve">
          <source>An instance initializer.</source>
          <target state="translated">インスタンスのイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="19a2366adf07d053397df3b88416af72bf0c1d9e" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;HashMap&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; のインスタンスには、そのパフォーマンスに影響を与える2つのパラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="c9ef1be25739cbfd11c07da46cd5070a585fc279" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Hashtable&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;Hashtable&lt;/code&gt; のインスタンスには、そのパフォーマンスに影響を与える2つのパラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="6e271d20b1969fdb8d1f5d3487af29f542ed5b34" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [0,posn). If posn is zero, an empty LDAP name is returned.</source>
          <target state="translated">範囲[0、posn）のインデックスにあるコンポーネントで構成される &lt;code&gt;LdapName&lt;/code&gt; のインスタンス。posnがゼロの場合、空のLDAP名が返されます。</target>
        </trans-unit>
        <trans-unit id="efb5b0e591a40b3a51301a06032e298cfe247108" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty LDAP name is returned.</source>
          <target state="translated">[posn、size（））の範囲のインデックスにあるコンポーネントで構成される &lt;code&gt;LdapName&lt;/code&gt; のインスタンス。posnがsize（）と等しい場合、空のLDAP名が返されます。</target>
        </trans-unit>
        <trans-unit id="922ca83f5ecb090d0fb6534bfc5bb215b81d10ae" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing all attributes and actions exposed by this Dynamic MBean to be retrieved.</source>
          <target state="translated">この動的MBeanによって公開されるすべての属性とアクションを &lt;code&gt;MBeanInfo&lt;/code&gt; できるMBeanInfoのインスタンス。</target>
        </trans-unit>
        <trans-unit id="f94f9a1e7ef6be69efac27449c54ac8552f8c170" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing the retrieval of all attributes and operations of this MBean.</source>
          <target state="translated">このMBeanのすべての属性と操作を取得できる &lt;code&gt;MBeanInfo&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="51a9d945754f6a0b885d5b7571460016bbef00a4" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;StringTokenizer&lt;/code&gt; behaves in one of two ways, depending on whether it was created with the &lt;code&gt;returnDelims&lt;/code&gt; flag having the value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">インスタンス &lt;code&gt;StringTokenizer&lt;/code&gt; はは、それが使用して作成されたかどうかに応じて、次のいずれかの方法で振る舞う &lt;code&gt;returnDelims&lt;/code&gt; の値を有するフラグを &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5841bfa5594bb54259f2a2f9bb9a7e4a3e8d76" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop--&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">&lt;code&gt;ThreadDeath&lt;/code&gt; のインスタンスは、（非推奨の）&lt;a href=&quot;thread#stop--&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、犠牲スレッドにスローされます。</target>
        </trans-unit>
        <trans-unit id="47ac091b99d498a0cb4fc92e75e5628fa385361d" translate="yes" xml:space="preserve">
          <source>An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt;. The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt;, given that this &lt;code&gt;CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt;. If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</source>
          <target state="translated">&lt;em&gt;J&lt;/em&gt;のインスタンスは、 &lt;code&gt;CompositeData&lt;/code&gt; から適切に再構築されたアイテムを使用してコンストラクターを呼び出すことによって再構築されます。呼び出されるコンストラクターは、この &lt;code&gt;CompositeData&lt;/code&gt; がすべての項目が存在しなかった以前のバージョンの&lt;em&gt;J&lt;/em&gt;からのものである場合、実行時に &lt;code&gt;CompositeData&lt;/code&gt; に実際に存在する項目に基づいて決定されます。コンストラクターは、その &lt;code&gt;ConstructorProperties&lt;/code&gt; アノテーションで指定されたすべてのプロパティが &lt;code&gt;CompositeData&lt;/code&gt; のアイテムとして存在&lt;em&gt;する&lt;/em&gt;場合に&lt;em&gt;適用さ&lt;/em&gt;れます。適用できるコンストラクタがない場合、&lt;em&gt;J&lt;/em&gt;を再構築する試みは失敗します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="829ed3db20241841f89453dc963921956452ce30" translate="yes" xml:space="preserve">
          <source>An instance of ModelMBeanInfo allowing retrieval all attributes, operations, and Notifications of this MBean.</source>
          <target state="translated">このMBeanのすべての属性、操作、通知を取得できるModelMBeanInfoのインスタンス。</target>
        </trans-unit>
        <trans-unit id="ab3d2c174495ec561e6dabbe574b8bbe2b8f2270" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;code&gt;Name&lt;/code&gt; may not be synchronized against concurrent multithreaded access if that access is not read-only.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; のインスタンスは、そのアクセスが読み取り専用でない場合、同時マルチスレッドアクセスに対して同期されない場合があります。</target>
        </trans-unit>
        <trans-unit id="dfba31fab178a2825633d83dd9c4b41758948065" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of its &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">サブクラスのインスタンス &lt;code&gt;CompiledScript&lt;/code&gt; 後ののいずれかを使用して実行される &lt;code&gt;eval&lt;/code&gt; 方法 &lt;code&gt;CompiledScript&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e32bd5f78d7ce6e5bd2dde8ae781793f9a5cfe68" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of the &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">サブクラスのインスタンス &lt;code&gt;CompiledScript&lt;/code&gt; は、後のいずれかを使用して実行される &lt;code&gt;eval&lt;/code&gt; 方法 &lt;code&gt;CompiledScript&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12670c655454d6cc906c7e42fdf38c2307aa12de" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled functions in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">要求されたインターフェイスのインスタンス-要求されたインターフェイスが利用できない場合、つまり、 &lt;code&gt;ScriptEngine&lt;/code&gt; のコンパイルされた関数が要求されたインターフェイスの関数と一致しない場合はnull 。</target>
        </trans-unit>
        <trans-unit id="36803e60de529456b8ea1571671498d8c810d8d5" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled methods in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">要求されたインターフェイスのインスタンス-要求されたインターフェイスが使用できない場合、つまり、 &lt;code&gt;ScriptEngine&lt;/code&gt; のコンパイルされたメソッドが要求されたインターフェイスのメソッドと一致しない場合はnull 。</target>
        </trans-unit>
        <trans-unit id="8e86ce0b7fec5deeecf8ca3a5100e75b8b0fb6c4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; class represents a regular expression that is specified in string form in a syntax similar to that used by Perl.</source>
          <target state="translated">&lt;a href=&quot;pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、Perlで使用されるのと同様の構文で文字列形式で指定される正規表現を表します。</target>
        </trans-unit>
        <trans-unit id="829975f1f8d6e054d19ccd326eb7be36519c42b0" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class, by contrast, represents the syntactic components of a URL together with some of the information required to access the resource that it describes. A URL must be absolute, that is, it must always specify a scheme. A URL string is parsed according to its scheme. A stream handler is always established for a URL, and in fact it is impossible to create a URL instance for a scheme for which no handler is available. Equality and hashing depend upon both the scheme and the Internet address of the host, if any; comparison is not defined. In other words, a URL is a structured string that supports the syntactic operation of resolution as well as the network I/O operations of looking up the host and opening a connection to the specified resource.</source>
          <target state="translated">対照的に、&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、URLの構文コンポーネントと、それが記述するリソースにアクセスするために必要な情報の一部を表します。 URLは絶対である必要があります。つまり、常にスキームを指定する必要があります。 URL文字列は、そのスキームに従って解析されます。ストリームハンドラーは常にURLに対して確立されます。実際、ハンドラーが利用できないスキームに対してURLインスタンスを作成することは不可能です。等価性とハッシュは、スキームとホストのインターネットアドレス（存在する場合）の両方に依存します。比較は定義されていません。つまり、URLは、解決の構文操作と、ホストを検索して指定されたリソースへの接続を開くネットワークI / O操作をサポートする構造化された文字列です。</target>
        </trans-unit>
        <trans-unit id="8d8b348576ef3a363f54463b191b10c2fe34cbf3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;AudioFileFormat&lt;/code&gt; class describes an audio file, including the file type, the file's length in bytes, the length in sample frames of the audio data contained in the file, and the format of the audio data.</source>
          <target state="translated">&lt;code&gt;AudioFileFormat&lt;/code&gt; クラスのインスタンスは、ファイルタイプ、ファイルの長さ（バイト）、ファイルに含まれるオーディオデータのサンプルフレームの長さ、オーディオデータの形式など、オーディオファイルを記述します。</target>
        </trans-unit>
        <trans-unit id="a25922f31e1f2c2c824dd4d7100eaf591f63a2e4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; クラスのインスタンスは、1種類のブールコントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="dcb763debf3b5ee573b97b18af18a45a2f427519" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; クラスのインスタンスは、1種類のブールコントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="340f53d7be605024230df931e122f021460e07bd" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類の複合コントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="9037c8dcbd6d04c236d0a37b55011fae1af01ae8" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類の複合コントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="c8fc9b324b216b7afb95cfe339c3befeb519150d" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 内部クラスのインスタンスは、列挙されたコントロールの1種類を識別します。</target>
        </trans-unit>
        <trans-unit id="75545e40aa5c53d8773e5c01cd0e585b5868df57" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 内部クラスのインスタンスは、列挙されたコントロールの1種類を識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="0e3cd6bc4a528475f8bbff9c32494251819c2131" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類のフロートコントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="c705d7a2e420aa5361515c55beee571e48109dc2" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類のフロートコントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="ecd45e4b9d53ccaa53d9a3356b79820e8be583f1" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、オーディオファイルの標準タイプの1つを表します。</target>
        </trans-unit>
        <trans-unit id="d4ea4b1285ed5bd1ba43f4bd5f18b0d928041f68" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、オーディオファイルの標準タイプの1つを表します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="327b4d9c3db6a3abd8fb05e940d637f8eb455eb3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、コントロールのタイプを表します。</target>
        </trans-unit>
        <trans-unit id="07eccc9b35085aee1266610ec826ac1783b928ca" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、コントロールのタイプを表します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="d76dd5b485ada222054050140b9c0c8104672a0d" translate="yes" xml:space="preserve">
          <source>An instance of this class can be used to represent:</source>
          <target state="translated">このクラスのインスタンスを使って表現することができます。</target>
        </trans-unit>
        <trans-unit id="2724595f32e58a6ac42e1786a7aa387f2ad61c6f" translate="yes" xml:space="preserve">
          <source>An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore()&lt;/a&gt; method is called.</source>
          <target state="translated">このクラスのインスタンスは、KeyStoreオブジェクトをインスタンス化して初期化するために必要な情報をカプセル化します。このプロセスは、&lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore（）&lt;/a&gt;メソッドが呼び出されるとトリガーされます。</target>
        </trans-unit>
        <trans-unit id="1317216bbeb3dff374e60ed4cee85c92ce39d700" translate="yes" xml:space="preserve">
          <source>An instance of this class is capable of scanning numbers in the standard formats as well as in the formats of the scanner's locale. A scanner's &lt;a name=&quot;initial-locale&quot;&gt;initial locale &lt;/a&gt;is the value returned by the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt;&lt;/a&gt; method; it may be changed via the &lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt;&lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's locale to the initial locale regardless of whether it was previously changed.</source>
          <target state="translated">このクラスのインスタンスは、標準形式およびスキャナーのロケールの形式で数値をスキャンできます。スキャナーの&lt;a name=&quot;initial-locale&quot;&gt;初期ロケール&lt;/a&gt;は、&lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt; &lt;/a&gt;メソッドによって返される値です。&lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt; &lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt; &lt;/a&gt;メソッドを使用して変更できます。&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドに関係なく、それが以前に変更されたかどうかの最初のロケールにスキャナのロケールの値をリセットします。</target>
        </trans-unit>
        <trans-unit id="4ae8f72aaf1e5f6296834affcdbb30c205b9e0b4" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers.</source>
          <target state="translated">このクラスのインスタンスは、疑似乱数のストリームを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d39558516c859afad90cc4d1dc1323cc6b3d6721" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers. The class uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth,</source>
          <target state="translated">このクラスのインスタンスは、疑似乱数のストリームを生成するために使用されます。このクラスは48ビットのシードを使用しますが、これは線形整合式を用いて修正されます。Donald Knuthを参照のこと。</target>
        </trans-unit>
        <trans-unit id="28f83ccf2a715e519fc03e240f1b5b775b12be7c" translate="yes" xml:space="preserve">
          <source>An instance of this class represents a URI reference in the syntactic sense defined by RFC 2396. A URI may be either absolute or relative. A URI string is parsed according to the generic syntax without regard to the scheme, if any, that it specifies. No lookup of the host, if any, is performed, and no scheme-dependent stream handler is constructed. Equality, hashing, and comparison are defined strictly in terms of the character content of the instance. In other words, a URI instance is little more than a structured string that supports the syntactic, scheme-independent operations of comparison, normalization, resolution, and relativization.</source>
          <target state="translated">このクラスのインスタンスは、RFC2396で定義されている構文的な意味でのURI参照を表す。URIは絶対値または相対値のいずれかである。URI文字列は、それが指定するスキーム(もしあれば)に関係なく、一般的な構文に従って解析される。ホストの検索(もしあれば)は実行されず、スキームに依存するストリーム ハンドラも構築されない。等価、ハッシュ、および比較は、インスタンスの文字内容の観点から厳密に定義される。言い換えれば、URIインスタンスは、構文的に、比較、正規化、解決、相対化のスキー ムに依存しない操作をサポートする構造化された文字列にすぎない。</target>
        </trans-unit>
        <trans-unit id="7db157449a4bd8c71ffcdbcd29cbdf95c91b7f80" translate="yes" xml:space="preserve">
          <source>An instance of this concrete sub-class is then registered with the system by calling &lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt;&lt;code&gt;setDefault(Authenticator)&lt;/code&gt;&lt;/a&gt;. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object.</source>
          <target state="translated">次に、この具象サブクラスのインスタンスは、&lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt; &lt;code&gt;setDefault(Authenticator)&lt;/code&gt; を&lt;/a&gt;呼び出してシステムに登録されます。認証が必要な場合、システムはrequestPasswordAuthentication（）メソッドの1つを呼び出し、次にそれが登録されたオブジェクトのgetPasswordAuthentication（）メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c982a64b6639cd335370d5f6441f493f10b35c3b" translate="yes" xml:space="preserve">
          <source>An instance of this interface represents the unit itself, rather than an amount of the unit. See &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for a class that represents an amount in terms of the common units.</source>
          <target state="translated">このインターフェースのインスタンスは、ユニットの量ではなく、ユニット自体を表します。共通単位で金額を表すクラスについては、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d94759c354f168b793821326256dda20d0d04793" translate="yes" xml:space="preserve">
          <source>An instantaneous point on the time-line.</source>
          <target state="translated">時間軸上の瞬間的な点。</target>
        </trans-unit>
        <trans-unit id="7158fc9acc202c4cf5095b847cad9b1065934a82" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect.</source>
          <target state="translated">インストゥルメントとは、特定のパラメータ設定を持つサウンドシンセシスアルゴリズムのことで、通常は特定の現実世界の楽器をエミュレートしたり、特定の種類のサウンドエフェクトを実現するように設計されています。</target>
        </trans-unit>
        <trans-unit id="97992030c3ea768748c4bdeea51f69ffae9a4afb" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect. Instruments are typically stored in collections called soundbanks. Before the instrument can be used to play notes, it must first be loaded onto a synthesizer, and then it must be selected for use on one or more channels, via a program-change command. MIDI notes that are subsequently received on those channels will be played using the sound of the selected instrument.</source>
          <target state="translated">インストゥルメントとは、特定のパラメータを設定したサウンドシンセシスアルゴリズムのことで、通常は実在する特定の楽器をエミュレートしたり、特定の種類のサウンドエフェクトを実現したりするように設計されています。インストゥルメントは通常、サウンドバンクと呼ばれるコレクションに保存されます。インストゥルメントを使用してノートを演奏するには、まずシンセサイザーにロードしてから、プログラムチェンジコマンドを使って1つまたは複数のチャンネルで使用するように選択する必要があります。その後、これらのチャンネルで受信されたMIDIノートは、選択されたインストゥルメントのサウンドを使って演奏されます。</target>
        </trans-unit>
        <trans-unit id="56ea8c144840715d69a960aeb55ec5417f7c23c9" translate="yes" xml:space="preserve">
          <source>An int buffer.</source>
          <target state="translated">int バッファ。</target>
        </trans-unit>
        <trans-unit id="adecc75be41392880cba1ab1c43f1140e74a9554" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this Rdn.</source>
          <target state="translated">この Rdn のハッシュコードを表す int。</target>
        </trans-unit>
        <trans-unit id="f46c446cab1141d9642aaa8704b1fb79b9b9cd49" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this name.</source>
          <target state="translated">この名前のハッシュコードを表すint。</target>
        </trans-unit>
        <trans-unit id="0f02c72f761f7b569b3ba5ae42abbad4a0d5abe1" translate="yes" xml:space="preserve">
          <source>An integer hashcode</source>
          <target state="translated">整数のハッシュコード</target>
        </trans-unit>
        <trans-unit id="69bfe90e2bce383610cf905b6db7ea9336e5f593" translate="yes" xml:space="preserve">
          <source>An integer that stands for an unknown numeric value. This value is appropriate only for signed quantities that do not normally take negative values. Examples include file sizes, frame sizes, buffer sizes, and sample rates. A number of Java Sound constructors accept a value of &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; for such parameters. Other methods may also accept or return this value, as documented.</source>
          <target state="translated">不明な数値を表す整数。この値は、通常負の値をとらない符号付き数量にのみ適しています。たとえば、ファイルサイズ、フレームサイズ、バッファサイズ、サンプルレートなどです。多くのJava Soundコンストラクターは、そのようなパラメーターの &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; の値を受け入れます。ドキュメントに記載されているように、他のメソッドもこの値を受け入れるか返す場合があります。</target>
        </trans-unit>
        <trans-unit id="ea3f725adfeb6b59c89c6dc71c97ee20fd66fbdf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; のインスタンスを作成するためのインターフェース。</target>
        </trans-unit>
        <trans-unit id="3e70918611d207981e2b3ebda02810f8197697d4" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; のインスタンスを作成するためのインターフェース。このインターフェースを実装するクラスは、スレッドセーフで、複数の同時リクエストを処理する必要があります。また、引数を受け入れないパブリックコンストラクタも必要です。</target>
        </trans-unit>
        <trans-unit id="fe1107bf7a74cb228073a4fd38a65ab1ac9cc7bf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; のインスタンスを作成するためのインターフェース。</target>
        </trans-unit>
        <trans-unit id="fc5ac59285f38f4e202a2d8b65c366fd57798cff" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; のインスタンスを作成するためのインターフェース。このインターフェースを実装するクラスは、スレッドセーフで、複数の同時リクエストを処理する必要があります。また、引数を受け入れないパブリックコンストラクタも必要です。</target>
        </trans-unit>
        <trans-unit id="a981bf36813561e61b68482771213f0f7f36b1d2" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダーのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="115bb31c1d259eeea81bb4a6b2e448ffe36f0308" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;default resource bundle loading behavior&lt;/a&gt; of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods that take no &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; instance can be modified with &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダーのインターフェイス。&lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;デフォルトのリソースバンドルロード動作&lt;/a&gt;の &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 一切かかりませんファクトリメソッド&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;インスタンスをして変更でき &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; 実装。</target>
        </trans-unit>
        <trans-unit id="5792c6841af96adda012e355035f6475f4b57d5c" translate="yes" xml:space="preserve">
          <source>An interface method invocation on a proxy instance will be encoded and dispatched to the invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method as described in the documentation for that method.</source>
          <target state="translated">プロキシインスタンスでのインターフェースメソッドの呼び出しはエンコードされ、そのメソッドのドキュメントで説明されているように、呼び出しハンドラの&lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="b812301ff3bad4a7e52cd7f68461ee3bd3b53697" translate="yes" xml:space="preserve">
          <source>An interface not described by a more specific kind (like &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;).</source>
          <target state="translated">より具体的な種類で記述されていないインターフェース（ &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="ba9e40d4336ce336c4f7cdd70f4185fa8bf68762" translate="yes" xml:space="preserve">
          <source>An interface providing metadata transcoding capability.</source>
          <target state="translated">メタデータのトランスコード機能を提供するインターフェースです。</target>
        </trans-unit>
        <trans-unit id="587dba713ea99dac60c398f96852ddc5d90dbffb" translate="yes" xml:space="preserve">
          <source>An interface representing a data checksum.</source>
          <target state="translated">データチェックサムを表すインターフェース。</target>
        </trans-unit>
        <trans-unit id="65020abdc59d5f06255e2eaa3210edca3ee4b442" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered.</source>
          <target state="translated">ディレクトリエントリを受け入れるかフィルタリングするかを決定するオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="213f4f0b9107046878b9b259b674746876a69b64" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A &lt;code&gt;Filter&lt;/code&gt; is passed as the parameter to the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt;&lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method when opening a directory to iterate over the entries in the directory.</source>
          <target state="translated">ディレクトリエントリを受け入れるかフィルタリングするかを決定するオブジェクトによって実装されるインターフェイス。 &lt;code&gt;Filter&lt;/code&gt; へのパラメータとして渡され&lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt; &lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt;ディレクトリ内のエントリを反復するディレクトリを開くときの方法。</target>
        </trans-unit>
        <trans-unit id="1adc466cfc9b43998c9a1ad60f52d2b00c0d0f84" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that perform match operations on paths.</source>
          <target state="translated">パスに対するマッチ操作を行うオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="e1903fd7150010bfbc980ed8d61474219e48a6e7" translate="yes" xml:space="preserve">
          <source>An interface to an object capable of generating DSA key pairs.</source>
          <target state="translated">DSA キーペアを生成することができるオブジェクトへのインターフェース。</target>
        </trans-unit>
        <trans-unit id="1a178a3c731cebf9a3ef5d36850578656dedcae8" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動することによって、またはその他の手段によって、 &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="2831b22b41e665a79ed547f74e4bf773b5fa2fb9" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動することによって、またはその他の手段によって、 &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。このインターフェイスは、コントローラーが値を取得する方法に関係なく、コントローラーを呼び出す汎用の &lt;code&gt;activate&lt;/code&gt; メソッドを指定するだけです（</target>
        </trans-unit>
        <trans-unit id="c072fd163a223eb059d12c6bf22f968e1bd8d08f" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動するか、その他の方法で &lt;code&gt;IIOParam&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="704614bcc91fbb9d9d9d8aa837b4790c38756fef" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動するか、その他の方法で &lt;code&gt;IIOParam&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。このインターフェイスは、コントローラーが値を取得する方法に関係なく、コントローラーを呼び出す汎用の &lt;code&gt;activate&lt;/code&gt; メソッドを指定するだけです（</target>
        </trans-unit>
        <trans-unit id="958b0e201b12034deea574084c623f01786e64b4" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of pixel updates.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装によって使用されるインターフェイス。呼び出し元に画像とサムネイルの読み取り方法を通知し、ピクセルの更新を通知します。</target>
        </trans-unit>
        <trans-unit id="5d421100f8ff77e709f5a29de3f264cd0725ab7a" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、呼び出し元に画像とサムネイルの読み取り方法を通知します。</target>
        </trans-unit>
        <trans-unit id="8c69e1e6c460866a883a4d9f5a86b0213afc74b1" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。</target>
        </trans-unit>
        <trans-unit id="e9184487a9ba25caed0da69072956f441d66d8dd" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。致命的なエラーが発生すると、関連する読み取りメソッドが &lt;code&gt;IIOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4999dd91a8ac2dbce03e6e230634b78004e7043f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 実装が使用するインターフェースで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。</target>
        </trans-unit>
        <trans-unit id="16fd410b089b3792b23fa854a31a1000a4975534" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 実装が使用するインターフェースで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。致命的なエラーが発生すると、関連する読み取りメソッドが &lt;code&gt;IIOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="8095214fd7fa66bb3c5c13b76c917e45bbb8dc4f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image writing methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; の実装によって使用されるインターフェイスで、呼び出し元にイメージ書き込みメソッドの進行状況を通知します。</target>
        </trans-unit>
        <trans-unit id="c679ec33508648309245518691c0555b479d3a43" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings.</source>
          <target state="translated">printf形式のフォーマット文字列のためのインタプリタ。</target>
        </trans-unit>
        <trans-unit id="1be3701be43fb57dc89fa26d9a9b2eb934eb287f" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings. This class provides support for layout justification and alignment, common formats for numeric, string, and date/time data, and locale-specific output. Common Java types such as &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; are supported. Limited formatting customization for arbitrary user types is provided through the &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">printfスタイルのフォーマット文字列のインタプリタ。このクラスは、レイアウトの位置揃えと配置、数値、文字列、日付/時刻データの一般的な形式、およびロケール固有の出力をサポートします。 &lt;code&gt;byte&lt;/code&gt; 、&lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;などの一般的なJavaタイプがサポートされています。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; &lt;/a&gt;インターフェイスを介して、任意のユーザータイプの限定的なフォーマットカスタマイズが提供されます。</target>
        </trans-unit>
        <trans-unit id="b2bc212b1f9739b742dda5b63173a4389d4313d8" translate="yes" xml:space="preserve">
          <source>An interpreter resource is unavailable (e.g., font, form).</source>
          <target state="translated">インタプリタリソースが利用できません(フォント、フォームなど)。</target>
        </trans-unit>
        <trans-unit id="b70efde1e9f9def01cc58530942fe1eb9d3337d2" translate="yes" xml:space="preserve">
          <source>An intersection type can be either implicitly or explicitly declared in a program. For example, the bound of the type parameter &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; is an (implicit) intersection type. As of &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, this is represented by an &lt;code&gt;IntersectionType&lt;/code&gt; with &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; as its bounds.</source>
          <target state="translated">交差タイプは、プログラムで暗黙的または明示的に宣言できます。たとえば、型パラメーター &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; の境界は（暗黙の）交差型です。以下のよう&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;、これは表される &lt;code&gt;IntersectionType&lt;/code&gt; と &lt;code&gt;Number&lt;/code&gt; と &lt;code&gt;Runnable&lt;/code&gt; その境界として。</target>
        </trans-unit>
        <trans-unit id="5a0034aa1f871363656f40b2d647a5fa4c475af2" translate="yes" xml:space="preserve">
          <source>An intersection type.</source>
          <target state="translated">交差点タイプ。</target>
        </trans-unit>
        <trans-unit id="18e4f95ce83cbdf52576efe50401011128c2e385" translate="yes" xml:space="preserve">
          <source>An invocation of the &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, or &lt;code&gt;toString&lt;/code&gt; methods declared in &lt;code&gt;java.lang.Object&lt;/code&gt; on a proxy instance will be encoded and dispatched to the invocation handler's &lt;code&gt;invoke&lt;/code&gt; method in the same manner as interface method invocations are encoded and dispatched, as described above. The declaring class of the &lt;code&gt;Method&lt;/code&gt; object passed to &lt;code&gt;invoke&lt;/code&gt; will be &lt;code&gt;java.lang.Object&lt;/code&gt;. Other public methods of a proxy instance inherited from &lt;code&gt;java.lang.Object&lt;/code&gt; are not overridden by a proxy class, so invocations of those methods behave like they do for instances of &lt;code&gt;java.lang.Object&lt;/code&gt;.</source>
          <target state="translated">プロキシインスタンスの &lt;code&gt;java.lang.Object&lt;/code&gt; で宣言された &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;equals&lt;/code&gt; 、または &lt;code&gt;toString&lt;/code&gt; メソッドの &lt;code&gt;invoke&lt;/code&gt; は、上記のように、インターフェースメソッドの呼び出しがエンコードおよびディスパッチされるのと同じ方法でエンコードされ、呼び出しハンドラのinvokeメソッドにディスパッチされます。 &lt;code&gt;invoke&lt;/code&gt; に渡される &lt;code&gt;Method&lt;/code&gt; オブジェクトの宣言クラスは &lt;code&gt;java.lang.Object&lt;/code&gt; になります。 &lt;code&gt;java.lang.Object&lt;/code&gt; から継承されたプロキシインスタンスの他のパブリックメソッドは、プロキシクラスによってオーバーライドされないため、これらのメソッドの呼び出しは、 &lt;code&gt;java.lang.Object&lt;/code&gt; のインスタンスの場合と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="02084ccd089fb9ba5b34684811be92c7932968bb" translate="yes" xml:space="preserve">
          <source>An invocation of this convenience method of the form</source>
          <target state="translated">この便利なメソッドを呼び出すと、以下のような形式になります。</target>
        </trans-unit>
        <trans-unit id="064f9f6a19cc9c72a3813d06f85698074abdf4d5" translate="yes" xml:space="preserve">
          <source>An invocation of this method attempts to read up to</source>
          <target state="translated">このメソッドの呼び出しは</target>
        </trans-unit>
        <trans-unit id="2082ad63b5802a83d96d686800f26ae018172330" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same manner as the invocation:</source>
          <target state="translated">このメソッドの呼び出しは、呼び出しと全く同じように振る舞います。</target>
        </trans-unit>
        <trans-unit id="914d92637999d05b5f5ecc129be8343bcdbb2cd1" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの呼び出しは、このメソッドの呼び出しと全く同じように動作します。</target>
        </trans-unit>
        <trans-unit id="cbe9ce1edab8686cdc43a5ccce3acb01a0faf5a4" translate="yes" xml:space="preserve">
          <source>An invocation of this method has exactly the same effect as invoking &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt;</source>
          <target state="translated">このメソッドの呼び出しは、 &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt; の呼び出しとまったく同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="7caa32a4808cce065e4e67e7f8d27283bfccb723" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to (but may be more efficient than):</source>
          <target state="translated">このメソッドの呼び出しは、(より効率的になるかもしれませんが)と同等です。</target>
        </trans-unit>
        <trans-unit id="ee88916f6b06f87c913bca5d248ecc94b669f687" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to the following:</source>
          <target state="translated">このメソッドの呼び出しは次のようになります。</target>
        </trans-unit>
        <trans-unit id="1a2f1bee3ab00a9d52855db99b989f2944f21f97" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form</source>
          <target state="translated">このメソッドの呼び出しは</target>
        </trans-unit>
        <trans-unit id="1d1056e77880b717013e83c03c632b834d5cf7bb" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.read(dsts)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;c.read(dsts)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="4c20b726689975f079a92979ce6e5fe5611cb235" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.write(srcs)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;c.write(srcs)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="fda405a4af30c2b03897dcc6cc855f80942b96dc" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.lock(att,handler)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式である &lt;code&gt;ch.lock(att,handler)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9d5dfcd8417b5ff81efec1d6ae8b29ed3601a18c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;ch.tryLock()&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2380cd4d3291f9c4d72c90298c350afad394f8f6" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;con.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation of</source>
          <target state="translated">このメソッドの &lt;code&gt;con.printf(format, args)&lt;/code&gt; の呼び出しは、次の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="825b80b9cfc2f18e17ab5a08098b4e1e2da5e131" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;dst.append(c)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9896ff401379f09fbde427b627bab0e00790374f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;dst.append(csq)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ab71ff13231d956725be26918c42cd1489165111" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のdst.append &lt;code&gt;dst.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ee689af01b8cc0aa10d632365cc4ab2b45e2e2c7" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.lock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.lock()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f377deea6a4f8bbc62edf414a6c182fd4c6bbb9c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.tryLock()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します</target>
        </trans-unit>
        <trans-unit id="4ddf845efd15bb861512809660e2c070a8b138f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setExcutable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setExcutable(arg)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9451e2d715a0fc54ac9ec4934e338274cd043a56" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setReadable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setReadable(arg)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="a93d60baf3849e3dd8ae08e1f3ca220670edba3f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setWritable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドを &lt;code&gt;file.setWritable(arg)&lt;/code&gt; 形式で呼び出すと、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="65b93562e93cd954b7c6ef7537a13a065d128669" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findInLine(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;findInLine(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2f473aa7c335182d7080b89c3e57c9a2e57017ea" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f9b7f1b8e4b46490a2a029e1e7ea5416d8963aa9" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;hasNext(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">この形式のこのメソッドの &lt;code&gt;hasNext(pattern)&lt;/code&gt; の呼び出しは、呼び出し &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="70aae180cd60cc8ded23f320fe8576b655ce52b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isAcceptable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドを &lt;code&gt;k.isAcceptable()&lt;/code&gt; 形式で呼び出すと、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="d578285c972d7adc4e4be45a2ecd03e40cee60b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isConnectable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの &lt;code&gt;k.isConnectable()&lt;/code&gt; 形式の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="1ced57ab5937e0f66c8de408564c99106fd4f148" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isReadable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの &lt;code&gt;k.isReadable()&lt;/code&gt; 形式の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="0bf7e78e722c8d1bd930c76c36c947e4667debb8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isWritable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの &lt;code&gt;k.isWritable()&lt;/code&gt; 形式の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="036d6cd9a12f156945ebdc197bdfa4fa439c5531" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;next(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;next(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="34fe06dc7aca7204f15104b3ee1a52a6e98dec05" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextBigInteger()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextBigInteger(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextBigInteger()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextBigInteger(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="472566cc72fdeb223f84db15e98f11bc1e99c972" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextByte()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextByte(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextByte()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextByte(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="dedac706fed45923934acf3a9494812d3bbaa943" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextInt()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextInt(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">このメソッドの &lt;code&gt;nextInt()&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;nextInt(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="7c3f3951a44b5a3e4ec43bd770efb6d214085940" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextLong()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextLong(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextLong()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextLong(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="afd5481a1c02a9b69e6e566cb3371754672cea3d" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextShort()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextShort(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">このメソッドの &lt;code&gt;nextShort()&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;nextShort(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="893399664374adc89d8dfe7abbae4a835e1e9862" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;out.append(c)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2548c2b619458b8bafd604b0b872b084b8292f78" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;out.append(csq)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="d1ee2fe3ba11afd1b66036ed9094637f79174c89" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のout.append &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="78af4601a4ce79cffb952b57d010bfe36afa6733" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のout.append &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="6a46581a8ed3a280aaf0b0a8f51523b4742cdfa8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;out.printf(format, args)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ddb522558fd6be4d10499d897876d013e970f368" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(l, format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;out.printf(l, format, args)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="4f1f4ec34f54274c3c3a16a3253635894d21da2c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;props.storeToXML(os, comment)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt;.</source>
          <target state="translated">このメソッドのメソッド &lt;code&gt;props.storeToXML(os, comment)&lt;/code&gt; の呼び出しは、呼び出し &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt; とまったく同じように動作します。。</target>
        </trans-unit>
        <trans-unit id="5c396b3c9e7518659888b7c624ec71d35ec4afe5" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;scanner.reset()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;scanner.reset()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="11038a7482ef7ed4c1596f8daf3aafdfed957002" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;skip(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;skip(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="39ff8d11d6f443b74aed3b92fe6fdf4ee20f7674" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;useDelimiter(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;useDelimiter(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2268c27779cfcec451ddef119960d7558d618889" translate="yes" xml:space="preserve">
          <source>An invocation of this method upon a charset &lt;code&gt;cs&lt;/code&gt; returns the same result as the expression</source>
          <target state="translated">文字セット &lt;code&gt;cs&lt;/code&gt; に対するこのメソッドの呼び出しは、式と同じ結果を返します</target>
        </trans-unit>
        <trans-unit id="067cfb030a3c6a3432a1c639d9a8ee76c48dc1f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method will block until the region can be locked, this channel is closed, or the invoking thread is interrupted, whichever comes first.</source>
          <target state="translated">このメソッドの呼び出しは、領域がロックされるか、このチャネルが閉じられるか、または呼び出したスレッドが中断されるまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="46a2f4efe8282faea0a43bc45ee5cde11de48441" translate="yes" xml:space="preserve">
          <source>An iterator</source>
          <target state="translated">イテレータ</target>
        </trans-unit>
        <trans-unit id="30c01ec48c8c3133042063ed2bec050cbe411f81" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list.</source>
          <target state="translated">プログラマがリストをどちらの方向にも走査し、反復中にリストを修正し、リスト内でのイテレータの現在位置を取得することができるリスト用のイテレータです。</target>
        </trans-unit>
        <trans-unit id="7163e2066dcdc4e7346bf1c7042e31171b6beb79" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list. A &lt;code&gt;ListIterator&lt;/code&gt; has no current element; its</source>
          <target state="translated">プログラマがリストをいずれかの方向にトラバースし、反復中にリストを変更し、リスト内のイテレータの現在の位置を取得できるようにするリストのイテレータ。A &lt;code&gt;ListIterator&lt;/code&gt; いない現在の要素を持っています。その</target>
        </trans-unit>
        <trans-unit id="7b40a777cfe8e56812070cdfa36c6603ecb5508e" translate="yes" xml:space="preserve">
          <source>An iterator over a collection.</source>
          <target state="translated">コレクションに対するイテレータ。</target>
        </trans-unit>
        <trans-unit id="c65f0de922f07a3303c77f47ed4081799ddd53b0" translate="yes" xml:space="preserve">
          <source>An iterator over a collection. &lt;code&gt;Iterator&lt;/code&gt; takes the place of &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; in the Java Collections Framework. Iterators differ from enumerations in two ways:</source>
          <target state="translated">コレクションに対するイテレータ。 &lt;code&gt;Iterator&lt;/code&gt; は、Javaコレクションフレームワークの&lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt;の代わりになります。イテレータは、次の2つの点で列挙と異なります。</target>
        </trans-unit>
        <trans-unit id="7a65630601f41a0c9113e2d5b5206c583073dfc0" translate="yes" xml:space="preserve">
          <source>An iterator providing access to the text and its attributes.</source>
          <target state="translated">テキストとその属性へのアクセスを提供するイテレータ。</target>
        </trans-unit>
        <trans-unit id="3f76c08e46cf2960a1257a02fdadfd7779d2904e" translate="yes" xml:space="preserve">
          <source>An iterator that lazily loads providers for this loader's service</source>
          <target state="translated">このローダーのサービスのためにプロバイダを怠惰にロードするイテレータ</target>
        </trans-unit>
        <trans-unit id="c3857a07c2fe4bc7a3d37d27ab1a441e369abaf1" translate="yes" xml:space="preserve">
          <source>An non-null enumeration of the addresses (&lt;code&gt;RefAddr&lt;/code&gt;) in this reference. If this reference has zero addresses, an enumeration with zero elements is returned.</source>
          <target state="translated">この参照のアドレスの非null列挙（ &lt;code&gt;RefAddr&lt;/code&gt; ）。この参照のアドレスがゼロの場合、要素がゼロの列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="f4e0656df485f239fd79a7e41b58a4c00eebb2fd" translate="yes" xml:space="preserve">
          <source>An object can be registered to listen to multiple lines. The event it receives in its &lt;code&gt;update&lt;/code&gt; method will specify which line created the event, what type of event it was (&lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;CLOSE&lt;/code&gt;, &lt;code&gt;START&lt;/code&gt;, or &lt;code&gt;STOP&lt;/code&gt;), and how many sample frames the line had processed at the time the event occurred.</source>
          <target state="translated">オブジェクトを登録して、複数の回線をリッスンできます。 &lt;code&gt;update&lt;/code&gt; メソッドで受け取るイベントは、イベントを作成したライン、イベントのタイプ（ &lt;code&gt;OPEN&lt;/code&gt; 、 &lt;code&gt;CLOSE&lt;/code&gt; 、 &lt;code&gt;START&lt;/code&gt; 、または &lt;code&gt;STOP&lt;/code&gt; ）、およびイベント発生時にラインが処理したサンプルフレームの数を指定します。</target>
        </trans-unit>
        <trans-unit id="44d1ab8265abc27d4c2b33ceead8243e2955e00f" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created by a factory.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; および &lt;code&gt;attrs&lt;/code&gt; を使用して作成されたオブジェクト。または &lt;code&gt;refInfo&lt;/code&gt; オブジェクトは、ファクトリで作成することができない場合。</target>
        </trans-unit>
        <trans-unit id="378e15d1e59f59f0e04a9fb9f800f5ea92710fd2" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; を使用して作成されたオブジェクト。あるいは &lt;code&gt;refInfo&lt;/code&gt; の目的は、上述のアルゴリズムを使用して作成することができない場合。</target>
        </trans-unit>
        <trans-unit id="4be5a63b4d53c1802650fc0935a9efa7af1aeb66" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; から返され、 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; および &lt;code&gt;mergeTree&lt;/code&gt; に渡されるメタデータドキュメントの構造を説明するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7b3264c7f6084a3ed78f6fe84f90435fb80c17e2" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;. Document structures are described by a set of constraints on the type and number of child elements that may belong to a given parent element type, the names, types, and values of attributes that may belong to an element, and the type and values of &lt;code&gt;Object&lt;/code&gt; reference that may be stored at a node.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; から返され、 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; および &lt;code&gt;mergeTree&lt;/code&gt; に渡されるメタデータドキュメントの構造を説明するオブジェクト。ドキュメント構造は、特定の親要素タイプに属している可能性のある子要素のタイプと数、要素に属している可能性のある属性の名前、タイプ、値、および &lt;code&gt;Object&lt;/code&gt; タイプと値に対する一連の制約によって記述されます。ノードに格納できる参照。</target>
        </trans-unit>
        <trans-unit id="e013aacb044b75863c3c6acea31e44936e2953c3" translate="yes" xml:space="preserve">
          <source>An object factory must implement the &lt;code&gt;ObjectFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters.</source>
          <target state="translated">オブジェクトファクトリは、 &lt;code&gt;ObjectFactory&lt;/code&gt; インターフェイスを実装する必要があります。さらに、ファクトリー・クラスはパブリックでなければならず、パラメーターを受け入れないパブリック・コンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="089ae733cee7448ee497359bd6a4038caf4d787a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source.</source>
          <target state="translated">ソースの要素をトラバースして分割するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ec4893d8dba0a2ced11efda016fb64cd6463063a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source. The source of elements covered by a Spliterator could be, for example, an array, a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;, an IO channel, or a generator function.</source>
          <target state="translated">ソースの要素をトラバースおよびパーティション化するためのオブジェクト。Spliteratorがカバーする要素のソースは、たとえば、配列、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;、IOチャネル、またはジェネレーター関数などです。</target>
        </trans-unit>
        <trans-unit id="822c4cff800d653b1d1750b80615e8884e56a9e9" translate="yes" xml:space="preserve">
          <source>An object implementing this interface might not have an address at a given moment. This is indicated by a null return value from &lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスを実装するオブジェクトは、特定の時点でアドレスを持たない場合があります。これは、&lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt;からのnull戻り値によって示されます。</target>
        </trans-unit>
        <trans-unit id="b5e76341f33e31cb5825ebfd987cffad5cfcfff6" translate="yes" xml:space="preserve">
          <source>An object name</source>
          <target state="translated">オブジェクト名</target>
        </trans-unit>
        <trans-unit id="433c19c3e71b265e5f820d8f91a6f1feddfb77c3" translate="yes" xml:space="preserve">
          <source>An object name consists of two parts, the domain and the key properties.</source>
          <target state="translated">オブジェクト名は、ドメインとキープロパティの2つの部分から構成されます。</target>
        </trans-unit>
        <trans-unit id="fd629ac5ff0470aa5c363300117872323e52e0a0" translate="yes" xml:space="preserve">
          <source>An object name is a pattern if its domain contains a wildcard or if the object name is a property pattern.</source>
          <target state="translated">オブジェクト名は、そのドメインにワイルドカードが含まれている場合、またはオブジェクト名がプロパティ・パターンである場合にパターンとなります。</target>
        </trans-unit>
        <trans-unit id="05470ddffcb8a35ab6b96946eef277986e02cfcd" translate="yes" xml:space="preserve">
          <source>An object name is a pattern on the key properties if it is a pattern on the key property list (e.g. &quot;d:k=v,*&quot;) or on the property values (e.g. &quot;d:k=*&quot;) or on both (e.g. &quot;d:k=*,*&quot;).</source>
          <target state="translated">オブジェクト名は、キープロパティリスト上のパターン(例:&quot;d:k=v,*&quot;)、またはプロパティ値(例:&quot;d:k=*&quot;)、またはその両方(例:&quot;d:k=*,*&quot;)であれば、キープロパティ上のパターンとなります。</target>
        </trans-unit>
        <trans-unit id="1cf02b2bea44bfe8dfb70b6e7da917173f69cf17" translate="yes" xml:space="preserve">
          <source>An object name pattern, within the context of a query</source>
          <target state="translated">クエリのコンテキスト内でのオブジェクト名パターン</target>
        </trans-unit>
        <trans-unit id="8cb0d83d9f78c2d1fb7ca4ca8d0a5dc38abb04ac" translate="yes" xml:space="preserve">
          <source>An object obtained from the &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;createMBeanServer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;newMBeanServer&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class applies security checks to its methods, as follows.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;createMBeanServer&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;newMBeanServer&lt;/code&gt; &lt;/a&gt;メソッドから取得したオブジェクトは、次のように、そのメソッドにセキュリティチェックを適用します。</target>
        </trans-unit>
        <trans-unit id="dd1deddcc8809957374bc776a45093ed0177833e" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface.</source>
          <target state="translated">このクラスのオブジェクトは MBeanServer インターフェースを実装し、そのインターフェースを実装した別のオブジェクトをラップします。</target>
        </trans-unit>
        <trans-unit id="0dce6e4c3869afcda8eddc6634096332fbd35bbb" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface. Typically, an implementation of this interface performs some action in some or all methods of the &lt;code&gt;MBeanServer&lt;/code&gt; interface before and/or after forwarding the method to the wrapped object. Examples include security checking and logging.</source>
          <target state="translated">このクラスのオブジェクトはMBeanServerインターフェースを実装し、そのインターフェースを実装する別のオブジェクトをラップします。通常、このインターフェースの実装は、ラップされたオブジェクトにメソッドを転送する前または後に、 &lt;code&gt;MBeanServer&lt;/code&gt; インターフェースの一部またはすべてのメソッドで何らかのアクションを実行します。例としては、セキュリティチェックやロギングなどがあります。</target>
        </trans-unit>
        <trans-unit id="240a8f206940b1e43169eefe880290b86f0b943d" translate="yes" xml:space="preserve">
          <source>An object of this interface is not required to support multi-threaded access, that is, be synchronized. However, it must support concurrent access to different file objects created by this object.</source>
          <target state="translated">このインタフェースのオブジェクトは、マルチスレッドアクセスをサポートする必要はありません。しかし、このオブジェクトによって作成された異なるファイルオブジェクトへの同時アクセスをサポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="53e1907bb5670cf7de3b399b28ac0c952d32b275" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically.</source>
          <target state="translated">アトミックに更新される可能性のあるオブジェクト参照。</target>
        </trans-unit>
        <trans-unit id="f67a5489963349154cda78c5255744fe3bf0a4c8" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">アトミックに更新できるオブジェクト参照。アトミック変数のプロパティの説明については、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;パッケージ仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="b73a5104122da833a98317f27239fc3e4154b0ba" translate="yes" xml:space="preserve">
          <source>An object that configures how to copy or move a file.</source>
          <target state="translated">ファイルをコピーまたは移動する方法を設定するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0c5a8aa3a347dba34a3344510991043eb9879ec6" translate="yes" xml:space="preserve">
          <source>An object that configures how to open or create a file.</source>
          <target state="translated">ファイルを開く、または作成する方法を設定するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="baa73d9cb6577c25eeaf1bbcdbea53e363a73739" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand.</source>
          <target state="translated">必要に応じて新しいスレッドを作成するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="fecb9ccdca9a57efe7bf24ddea3d86d99e52eaad" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to &lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;new Thread&lt;/code&gt;&lt;/a&gt;, enabling applications to use special thread subclasses, priorities, etc.</source>
          <target state="translated">オンデマンドで新しいスレッドを作成するオブジェクト。スレッドファクトリを使用すると、&lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;/a&gt;への呼び出しのハードワイヤリングが削除され、アプリケーションが特別なスレッドサブクラスや優先順位などを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="68795f2f7e60b01783194bdbeb5daaf7c88c509a" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the value of a file attribute that can be set atomically when creating a new file or directory by invoking the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">起動して、新しいファイルやディレクトリの作成時にアトミックに設定することができ、ファイルの属性の値がカプセル化するオブジェクト&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="7e8ced9a706b96ed0aa5b962f302609cb380b77d" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks.</source>
          <target state="translated">送信された&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;タスクを実行するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2e4b40b397a01cef4b65e5f0953de042b9dd08a3" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An &lt;code&gt;Executor&lt;/code&gt; is normally used instead of explicitly creating threads. For example, rather than invoking &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; for each of a set of tasks, you might use:</source>
          <target state="translated">送信された&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;タスクを実行するオブジェクト。このインターフェイスは、スレッドの使用、スケジューリングなどの詳細を含む、各タスクの実行方法のメカニズムからタスクの送信を分離する方法を提供します。通常、明示的にスレッドを作成する代わりに &lt;code&gt;Executor&lt;/code&gt; が使用されます。たとえば、一連のタスクごとに &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; を呼び出すのではなく、次のものを使用できます。</target>
        </trans-unit>
        <trans-unit id="fbb8ac550e63caad681d90c054d0fa20987b5087" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time.</source>
          <target state="translated">Enumeration インターフェースを実装したオブジェクトは、一連の要素を一度に一つずつ生成します。</target>
        </trans-unit>
        <trans-unit id="99c80014816ae83e53dc8ddea1c90482dd825a2c" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the &lt;code&gt;nextElement&lt;/code&gt; method return successive elements of the series.</source>
          <target state="translated">Enumerationインターフェースを実装するオブジェクトは、一度に1つずつ一連の要素を生成します。 &lt;code&gt;nextElement&lt;/code&gt; メソッドを連続して呼び出すと、系列の連続する要素が返されます。</target>
        </trans-unit>
        <trans-unit id="c62fc483de76bbde6310a4b617fe933a48084fd9" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values.</source>
          <target state="translated">キーを値にマップするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bba440e18e500e6a4eb82cadff113d789d16d140" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value.</source>
          <target state="translated">キーを値にマップするオブジェクト。マップには重複したキーを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="95b6564de4e961b7d6860dcbd492ab6718ccccd5" translate="yes" xml:space="preserve">
          <source>An object that may be registered with a watch service so that it can be &lt;em&gt;watched&lt;/em&gt; for changes and events.</source>
          <target state="translated">変更やイベントを&lt;em&gt;監視&lt;/em&gt;できるように監視サービスに登録できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c85afa040116ca1b1324df2e9f54a59ea1660f59" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system.</source>
          <target state="translated">ファイルシステム内のファイルの位置を特定するために使用される可能性のあるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f62715cd392fb8062bde89dca57a59b321bb38f2" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system. It will typically represent a system dependent file path.</source>
          <target state="translated">ファイルシステム内のファイルの位置を特定するために使用される可能性のあるオブジェクト。これは通常、システム依存のファイルパスを表します。</target>
        </trans-unit>
        <trans-unit id="383ddb1c9e1c609174e1d6571a912022d6ee489a" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed.</source>
          <target state="translated">リソース(ファイルやソケットハンドルなど)をクローズするまで保持することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="65c7adf181c0da78229a911c614313de0051416f" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed. The &lt;a href=&quot;autocloseable#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of an &lt;code&gt;AutoCloseable&lt;/code&gt; object is called automatically when exiting a &lt;code&gt;try&lt;/code&gt;-with-resources block for which the object has been declared in the resource specification header. This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.</source>
          <target state="translated">閉じられるまでリソース（ファイルまたはソケットハンドルなど）を保持できるオブジェクト。 &lt;code&gt;AutoCloseable&lt;/code&gt; オブジェクトの&lt;a href=&quot;autocloseable#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドは、リソース仕様ヘッダーでオブジェクトが宣言されている &lt;code&gt;try&lt;/code&gt; -with-resourcesブロックを終了すると自動的に呼び出されます。この構造により、迅速なリリースが保証され、リソース不足の例外や、そうでなければ発生する可能性のあるエラーが回避されます。</target>
        </trans-unit>
        <trans-unit id="b6b1fd0c0c3293cf8862df8dfdfd80a0d0a4a12a" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem.</source>
          <target state="translated">ファイルシステム内のオブジェクトに関連付けられた不透明でない値の読み取り専用または更新可能な&lt;em&gt;ビュー&lt;/em&gt;を提供するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3ba87fb1d278ad83f994b8b49e0132de8a36d1f5" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem. This interface is extended or implemented by specific attribute views that define the attributes supported by the view. A specific attribute view will typically define type-safe methods to read or update the attributes that it supports.</source>
          <target state="translated">ファイルシステム内のオブジェクトに関連付けられた不透明でない値の読み取り専用または更新可能な&lt;em&gt;ビュー&lt;/em&gt;を提供するオブジェクト。このインターフェースは、ビューでサポートされる属性を定義する特定の属性ビューによって拡張または実装されます。特定の属性ビューは、通常、サポートする属性を読み取りまたは更新するためのタイプセーフメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="12ce0520bbb14ca92b232fc62a665ddcefde91f2" translate="yes" xml:space="preserve">
          <source>An object to iterate over the backing file stores</source>
          <target state="translated">バッキングファイルを反復処理するためのオブジェクトが格納されています。</target>
        </trans-unit>
        <trans-unit id="c17dbb394b4d9793e9e3fb0adb29084e11852761" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory.</source>
          <target state="translated">ディレクトリ内のエントリを反復処理するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1c3bffd48c68457858c84b5a158500e905f2b872" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory. A directory stream allows for the convenient use of the for-each construct to iterate over a directory.</source>
          <target state="translated">ディレクトリ内のエントリを反復処理するためのオブジェクト。ディレクトリストリームでは、ディレクトリを反復処理するための for-each 構成を便利に使うことができます。</target>
        </trans-unit>
        <trans-unit id="a65c99705d1233884e767c156f9a0bfc18083b83" translate="yes" xml:space="preserve">
          <source>An object to iterate over the root directories</source>
          <target state="translated">ルートディレクトリを反復処理するオブジェクト</target>
        </trans-unit>
        <trans-unit id="010152e0daeec860f12dd25c1c67742eb288570b" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name.</source>
          <target state="translated">ユーザーおよびグループのプリンシパルを名前で検索するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3484639742f489dbbabdc989d42eb70f9eba3ef3" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name. A &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; represents an identity that may be used to determine access rights to objects in a file system. A &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; represents a &lt;em&gt;group identity&lt;/em&gt;. A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; defines methods to lookup identities by name or group name (which are typically user or account names). Whether names and group names are case sensitive or not depends on the implementation. The exact definition of a group is implementation specific but typically a group represents an identity created for administrative purposes so as to determine the access rights for the members of the group. In particular it is implementation specific if the &lt;em&gt;namespace&lt;/em&gt; for names and groups is the same or is distinct. To ensure consistent and correct behavior across platforms it is recommended that this API be used as if the namespaces are distinct. In other words, the &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt; should be used to lookup users, and &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt;&lt;/a&gt; should be used to lookup groups.</source>
          <target state="translated">ユーザーとグループのプリンシパルを名前で検索するオブジェクト。 A &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;ファイルシステム内のオブジェクトへのアクセス権を決定するために使用されるアイデンティティを表します。 A &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;表し&lt;em&gt;グループのアイデンティティを&lt;/em&gt;。 A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; は、（典型的には、ユーザまたはアカウント名である）名またはグループ名でIDを検索するためのメソッドを定義します。名前とグループ名で大文字と小文字が区別されるかどうかは、実装によって異なります。グループの正確な定義は実装固有ですが、通常、グループは、グループのメンバーのアクセス権を決定するために管理目的で作成されたIDを表します。特に、&lt;em&gt;名前空間が&lt;/em&gt;名前とグループは同じか、または異なります。プラットフォーム間で一貫した正しい動作を確保するには、名前空間が異なるかのようにこのAPIを使用することをお勧めします。つまり、ユーザーの検索には&lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt;を使用し、グループの検索には&lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="959444642dc2ceda55ae42142da09ad092051bd9" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; シーケンスと値を追加できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2b4af51a3c1eeeded7c6a1d69e220f5e26d511ce" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended. The &lt;code&gt;Appendable&lt;/code&gt; interface must be implemented by any class whose instances are intended to receive formatted output from a &lt;a href=&quot;../util/formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; シーケンスと値を追加できるオブジェクト。 &lt;code&gt;Appendable&lt;/code&gt; インターフェースは、そのインスタンスからのフォーマットされた出力を受け取るように意図されている任意のクラスによって実装されなければならない&lt;a href=&quot;../util/formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="867fa1c5780093cb05521a0541ff91f691ce18cf" translate="yes" xml:space="preserve">
          <source>An object whose monitor is used to lock this node. This object is used in preference to the node itself to reduce the likelihood of intentional or unintentional denial of service due to a locked node. To avoid deadlock, a node is</source>
          <target state="translated">このノードをロックするためにモニタが使用されるオブジェクト。このオブジェクトは、ロックされたノードによる意図的または意図しないサービス拒否の可能性を減らすために、ノード自体よりも優先的に使用されます。デッドロックを回避するために、ノードは</target>
        </trans-unit>
        <trans-unit id="5156ec2dbf3a7eb9898018cb7d1ff204869b419f" translate="yes" xml:space="preserve">
          <source>An object written via writeUnshared is always serialized in the same manner as a newly appearing object (an object that has not been written to the stream yet), regardless of whether or not the object has been written previously.</source>
          <target state="translated">writeUnshared経由で書き込まれたオブジェクトは、以前に書き込まれたかどうかに関わらず、常に新たに現れたオブジェクト(まだストリームに書き込まれていないオブジェクト)と同じ方法でシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="05dede121dec23068bf7dc7aa4bc5b63031d767f" translate="yes" xml:space="preserve">
          <source>An object/attributes pair for returning the result of DirStateFactory.getStateToBind().</source>
          <target state="translated">DirStateFactory.getStateToBind()の結果を返すオブジェクトと属性のペア。</target>
        </trans-unit>
        <trans-unit id="4b3b6f73f430dfd37dfc4895f39308be277b8ca8" translate="yes" xml:space="preserve">
          <source>An observable object can have one or more observers. An observer may be any object that implements interface &lt;code&gt;Observer&lt;/code&gt;. After an observable instance changes, an application calling the &lt;code&gt;Observable&lt;/code&gt;'s &lt;code&gt;notifyObservers&lt;/code&gt; method causes all of its observers to be notified of the change by a call to their &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">オブザーバブルオブジェクトには、1つ以上のオブザーバーを含めることができます。オブザーバーは、 &lt;code&gt;Observer&lt;/code&gt; インターフェースを実装する任意のオブジェクトです。オブザーバブルインスタンスが変更された後、アプリケーションが &lt;code&gt;Observable&lt;/code&gt; の &lt;code&gt;notifyObservers&lt;/code&gt; メソッドを呼び出すと、すべてのオブザーバーに &lt;code&gt;update&lt;/code&gt; メソッドの呼び出しによって変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="0e95bd79d2b4a37c8eeeee3e6d367466571f50fa" translate="yes" xml:space="preserve">
          <source>An open square bracket '['.</source>
          <target state="translated">開いた四角い括弧'['。</target>
        </trans-unit>
        <trans-unit id="ceda6b4c7e200993657f9f718217dfb49ccd97e1" translate="yes" xml:space="preserve">
          <source>An operator or function &lt;code&gt;op&lt;/code&gt; is &lt;em&gt;associative&lt;/em&gt; if the following holds:</source>
          <target state="translated">次の条件が当てはまる場合、演算子または関数 &lt;code&gt;op&lt;/code&gt; は&lt;em&gt;結合的&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="3cd6d9f79ed5b612f637bc441858d525f27504d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the image metadata.</source>
          <target state="translated">画像メタデータの構造に影響を与える可能性がある場合は、オプションの &lt;code&gt;ImageWriteParam&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="d843bc323fd59eb5d77b8c7220aa652604db68bc" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the stream metadata.</source>
          <target state="translated">ストリームメタデータの構造に影響を与える可能性がある場合は、オプションの &lt;code&gt;ImageWriteParam&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="02f257627119dfd12596e5337d8d99969e1d9c38" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; に登録されるサービスプロバイダーオブジェクトによって提供されるオプションのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="9b921ecdde7eeae6029b64068f26048a77e8b061" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;. If this interface is present, notification of registration and deregistration will be performed.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; に登録されるサービスプロバイダーオブジェクトによって提供されるオプションのインターフェイス。このインターフェースが存在する場合、登録および登録解除の通知が実行されます。</target>
        </trans-unit>
        <trans-unit id="84208ed60f2ce35a01ff406ec29db5c927a5a583" translate="yes" xml:space="preserve">
          <source>An optional system-dependent &lt;em&gt;prefix&lt;/em&gt; string, such as a disk-drive specifier, &lt;code&gt;&quot;/&quot;&lt;/code&gt; for the UNIX root directory, or &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; for a Microsoft Windows UNC pathname, and</source>
          <target state="translated">ディスクドライブ指定子、UNIXルートディレクトリの場合は &lt;code&gt;&quot;/&quot;&lt;/code&gt; 、Microsoft Windows UNCパス名の場合は &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; など、オプションのシステム依存の&lt;em&gt;プレフィックス&lt;/em&gt;文字列</target>
        </trans-unit>
        <trans-unit id="ad286a3bc8ddc6906b24395b9d3aa1a01523ec8d" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingdeque&quot;&gt;blocking deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく、オプションで境界付きの&lt;a href=&quot;blockingdeque&quot;&gt;ブロッキング両端キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72e104385ffe4e121f6dd8458bfde27cb89dd0ad" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく、オプションの境界付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b7cf7d68de5564c1d07ba461e999de0f387a708" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. Linked queues typically have higher throughput than array-based queues but less predictable performance in most concurrent applications.</source>
          <target state="translated">リンクされたノードに基づく、オプションの境界付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。このキューは、要素をFIFO（先入れ先出し）で注文します。キューの&lt;em&gt;先頭&lt;/em&gt;は、キューに最も長い間存在していた要素です。キューの&lt;em&gt;末尾&lt;/em&gt;は、キューに最も短い時間存在していた要素です。新しい要素はキューの末尾に挿入され、キューの取得操作はキューの先頭にある要素を取得します。リンクされたキューは、通常、アレイベースのキューよりもスループットは高くなりますが、ほとんどの並行アプリケーションでは予測できないパフォーマンスになります。</target>
        </trans-unit>
        <trans-unit id="51fdf42d83ac859a6bd23e4d46714fe53b369d93" translate="yes" xml:space="preserve">
          <source>An ordered collection (also known as a</source>
          <target state="translated">注文されたコレクション(別名</target>
        </trans-unit>
        <trans-unit id="bc0cfb544beabd824a9b068e3577ef63414cd145" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written.</source>
          <target state="translated">書き込まれたデータのチェックサムも保持する出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="ebc7a8ace7bfe211d1f520cf563d36c675003f7c" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written. The checksum can then be used to verify the integrity of the output data.</source>
          <target state="translated">書き込まれるデータのチェックサムも保持する出力ストリーム。チェックサムは、出力データの整合性を検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2e3ff4c6d5a29267c7491ef773098b6d20617bcd" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired.</source>
          <target state="translated">無制限&lt;a href=&quot;blockingqueue&quot;&gt;のブロッキングキュー&lt;/a&gt;の &lt;code&gt;Delayed&lt;/code&gt; 、その遅延が満了したときに素子のみ取ることが可能な要素。</target>
        </trans-unit>
        <trans-unit id="607e41e984edd66f6d58df72af9fb617e35f2405" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired. The &lt;em&gt;head&lt;/em&gt; of the queue is that &lt;code&gt;Delayed&lt;/code&gt; element whose delay expired furthest in the past. If no delay has expired there is no head and &lt;code&gt;poll&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. Expiration occurs when an element's &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; method returns a value less than or equal to zero. Even though unexpired elements cannot be removed using &lt;code&gt;take&lt;/code&gt; or &lt;code&gt;poll&lt;/code&gt;, they are otherwise treated as normal elements. For example, the &lt;code&gt;size&lt;/code&gt; method returns the count of both expired and unexpired elements. This queue does not permit null elements.</source>
          <target state="translated">無制限&lt;a href=&quot;blockingqueue&quot;&gt;のブロッキングキュー&lt;/a&gt;の &lt;code&gt;Delayed&lt;/code&gt; 、その遅延が満了したときに素子のみ取ることが可能な要素。キューの&lt;em&gt;先頭&lt;/em&gt;は、遅延が最も過去に期限切れになった &lt;code&gt;Delayed&lt;/code&gt; 要素です。遅延の期限が切れていない場合、ヘッドはなく、 &lt;code&gt;poll&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を返します。有効期限は、要素の &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; メソッドがゼロ以下の値を返したときに発生します。有効期限が切れていない要素は、 &lt;code&gt;take&lt;/code&gt; または &lt;code&gt;poll&lt;/code&gt; を使用して削除することはできませんが、それ以外は通常の要素として扱われます。たとえば、 &lt;code&gt;size&lt;/code&gt; メソッドは、有効期限が切れた要素と有効期限が切れていない要素の両方の数を返します。このキューはnull要素を許可しません。</target>
        </trans-unit>
        <trans-unit id="4867f0af45dc7bd49cf8437f6b72d1e8876f3b4c" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations.</source>
          <target state="translated">クラス&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt;と同じ順序付けルールを使用し、ブロッキング取得操作を提供する無制限の&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d095c9bb69381950ab2d46bf615aa051a67635d" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations. While this queue is logically unbounded, attempted additions may fail due to resource exhaustion (causing &lt;code&gt;OutOfMemoryError&lt;/code&gt;). This class does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; also does not permit insertion of non-comparable objects (doing so results in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">クラス&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt;と同じ順序付けルールを使用し、ブロッキング取得操作を提供する無制限の&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。このキューは論理的に無制限ですが、リソースの枯渇（ &lt;code&gt;OutOfMemoryError&lt;/code&gt; の原因）が原因で追加を試みても失敗する可能性があります。このクラスは &lt;code&gt;null&lt;/code&gt; 要素を許可しません。&lt;a href=&quot;../../lang/comparable&quot;&gt;自然順序付けに&lt;/a&gt;依存する優先度キューも、比較不可能なオブジェクトの挿入を許可しません（そうすると、 &lt;code&gt;ClassCastException&lt;/code&gt; が発生します）。</target>
        </trans-unit>
        <trans-unit id="fcaf51b05fe12df113e579d4ccb39654b56971e5" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限の&lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b74d3cb04027b36108a5a8e923b773d7c06be9f" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out) with respect to any given producer. The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time for some producer. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time for some producer.</source>
          <target state="translated">リンクされたノードに基づく無制限の&lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;。このキューは、特定のプロデューサーに関して、要素をFIFO（先入れ先出し）で順序付けします。キューの&lt;em&gt;先頭&lt;/em&gt;は、一部のプロデューサーにとって最も長い間キューに存在していた要素です。&lt;em&gt;テール&lt;/em&gt;キューのキューにいくつかのプロデューサーのための最短時間となっているその要素です。</target>
        </trans-unit>
        <trans-unit id="4afa63dbafd71f3f862f6b0c0f513d766954929c" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限の同時&lt;a href=&quot;../deque&quot;&gt;両端キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8fa2b6fe53f815e6194eb30fd512618a3c74f17" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes. Concurrent insertion, removal, and access operations execute safely across multiple threads. A &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">リンクされたノードに基づく無制限の同時&lt;a href=&quot;../deque&quot;&gt;両端キュー&lt;/a&gt;。同時挿入、削除、およびアクセス操作は、複数のスレッドにわたって安全に実行されます。A &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; は、多くのスレッドが共通のコレクションへのアクセスを共有する適切な選択です。他のほとんどの並行コレクション実装と同様に、このクラスは &lt;code&gt;null&lt;/code&gt; 要素の使用を許可しません。</target>
        </trans-unit>
        <trans-unit id="e6addc60c8c5b238985f15c71d8cd178652b1298" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap.</source>
          <target state="translated">優先ヒープに基づく無制限の優先&lt;a href=&quot;queue&quot;&gt;キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f856f7007f7cacf437367979c243adb01380a5" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap. The elements of the priority queue are ordered according to their &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at queue construction time, depending on which constructor is used. A priority queue does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on natural ordering also does not permit insertion of non-comparable objects (doing so may result in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">優先ヒープに基づく無制限の優先&lt;a href=&quot;queue&quot;&gt;キュー&lt;/a&gt;。優先キューの要素は、使用されるコンストラクターに応じて、&lt;a href=&quot;../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはキューの構築時に提供される&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;によって順序付けられます。優先度キューは &lt;code&gt;null&lt;/code&gt; 要素を許可しません。自然順序付けに依存する優先度キューも、比較できないオブジェクトの挿入を許可しません（そうすると、 &lt;code&gt;ClassCastException&lt;/code&gt; が発生する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="ab9ac02fa6477cb6f322a4ea3ea620ecacb4bb53" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限のスレッドセーフ&lt;a href=&quot;../queue&quot;&gt;キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7cfdd27caa4bf67980b26f0622aa9f9b07b86b3" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. A &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">リンクされたノードに基づく無制限のスレッドセーフ&lt;a href=&quot;../queue&quot;&gt;キュー&lt;/a&gt;。このキューは、要素をFIFO（先入れ先出し）で注文します。キューの&lt;em&gt;先頭&lt;/em&gt;は、キューに最も長い間存在していた要素です。キューの&lt;em&gt;末尾&lt;/em&gt;は、キューに最も短い時間存在していた要素です。新しい要素はキューの末尾に挿入され、キューの取得操作はキューの先頭にある要素を取得します。 A &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; は、多くのスレッドが共通のコレクションへのアクセスを共有する適切な選択です。他のほとんどの並行コレクション実装と同様に、このクラスは &lt;code&gt;null&lt;/code&gt; 要素の使用を許可しません。</target>
        </trans-unit>
        <trans-unit id="1fd4a8a201c5545e3e616e856ea3623043d3957b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;OK&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;OK&lt;/code&gt; または &lt;code&gt;CANCEL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94cb18ef2e4f46eb678ef7c3adb087a6261a1efb" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;YES&lt;/code&gt; または &lt;code&gt;NO&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b96889588e816039c27b1ab683976945061fb20b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;YES&lt;/code&gt; 、 &lt;code&gt;NO&lt;/code&gt; または &lt;code&gt;CANCEL&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="94a8c907e991acf161c329a51612fdbe263dfdaf" translate="yes" xml:space="preserve">
          <source>An unlock (&lt;code&gt;synchronized&lt;/code&gt; block or method exit) of a monitor</source>
          <target state="translated">モニターのアンロック（ &lt;code&gt;synchronized&lt;/code&gt; ブロックまたはメソッド出口）</target>
        </trans-unit>
        <trans-unit id="f65cbc25e935ca91c24a63ae0eba8ef13873e820" translate="yes" xml:space="preserve">
          <source>An unmodifiable list containing the names of the file's user-defined</source>
          <target state="translated">ファイルのユーザー定義の名前を含む変更不可能なリスト</target>
        </trans-unit>
        <trans-unit id="010ce5af1d40f9caf0f78742b228aa248647626b" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of the installed file system providers. The list contains at least one element, that is the default file system provider</source>
          <target state="translated">インストールされているファイルシステムプロバイダの変更不可能なリスト。このリストには少なくとも一つの要素が含まれ、それはデフォルトのファイルシステムプロバイダである</target>
        </trans-unit>
        <trans-unit id="c70df95edff16a6ccc9d6fe69ee837c0c57b6ae2" translate="yes" xml:space="preserve">
          <source>An unmodifiable set of the names of the supported file attribute views</source>
          <target state="translated">サポートされているファイル属性ビューの名前の変更不可能なセット</target>
        </trans-unit>
        <trans-unit id="15ac5ee269410a4e8ddf82762d6d56660b43a988" translate="yes" xml:space="preserve">
          <source>An upper-case alphabetic character:&lt;code&gt;[A-Z]&lt;/code&gt;</source>
          <target state="translated">大文字の英字： &lt;code&gt;[A-Z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ee4ae8773db8655dc7d2b77c08252af7f35fda0" translate="yes" xml:space="preserve">
          <source>An uppercase character:&lt;code&gt;\p{IsUppercase}&lt;/code&gt;</source>
          <target state="translated">大文字： &lt;code&gt;\p{IsUppercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="836e938c8248e1c4c050bd6b99b16892ca02bd24" translate="yes" xml:space="preserve">
          <source>An uppercase letter (&lt;a href=&quot;#ucc&quot;&gt;category&lt;/a&gt;)</source>
          <target state="translated">大文字（&lt;a href=&quot;#ucc&quot;&gt;カテゴリー&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5b483df2f7efcdbdb7b4c015fd7882889db8ce6f" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">Analagous &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt; 、この方法では可能に &lt;code&gt;BeanContext&lt;/code&gt; 子との間にインターポーザ行動に実装する &lt;code&gt;Component&lt;/code&gt; 基礎となる &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34f7b411e1213aeb51e56648278e0b9efcd1de1b" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">Analagous &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt; 、この方法では可能に &lt;code&gt;BeanContext&lt;/code&gt; 子との間にインターポーザ行動に実装する &lt;code&gt;Component&lt;/code&gt; 基礎となる &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d596b903fde7a868a8caa87f3d1f291d2d69b2fb" translate="yes" xml:space="preserve">
          <source>Analogous to how NamingException captures name resolution information, LinkException captures &quot;link&quot;-name resolution information pinpointing the problem encountered while resolving a link. All these fields may be null.</source>
          <target state="translated">NamingException が名前解決情報を取得するのと同様に、LinkException はリンクを解決する際に発生した問題をピンポイントで特定する &quot;link&quot; の名前解決情報を取得します。これらのフィールドはすべて NULL の場合があります。</target>
        </trans-unit>
        <trans-unit id="9457b6e00d2879454343feb2509c157b3a5fb9d0" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt;&lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt;&lt;/a&gt; method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case:</source>
          <target state="translated">組み込みのモニターロックの&lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt; &lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt; &lt;/a&gt;メソッドと同様に、このメソッドは通常、デバッグとテストに使用されます。たとえば、ロックが保持されている間だけ呼び出す必要があるメソッドは、これが事実であることを表明できます。</target>
        </trans-unit>
        <trans-unit id="9c4d0e91d63250fc01a00067c5dc48ab711d7212" translate="yes" xml:space="preserve">
          <source>And finally subclasses may define a set of constants to identify the various fields in the formatted output. These constants are used to create a FieldPosition object which identifies what information is contained in the field and its position in the formatted result. These constants should be named &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; where &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; identifies the field. For examples of these constants, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そして最後に、サブクラスは、フォーマットされた出力のさまざまなフィールドを識別するために、定数のセットを定義できます。これらの定数は、フィールドに含まれる情報とフォーマットされた結果におけるその位置を識別するFieldPositionオブジェクトを作成するために使用されます。これらの定数は、指定されなければならない &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; フィールドを識別します。これらの定数の例については、&lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;ERA_FIELD&lt;/code&gt; およびその仲間を参照してください。</target>
        </trans-unit>
        <trans-unit id="58759bfd2892e37bb3901e696b6c651fee68a315" translate="yes" xml:space="preserve">
          <source>And in German,</source>
          <target state="translated">しかもドイツ語で。</target>
        </trans-unit>
        <trans-unit id="3b7aa00a81c72b8aecaff1e5f4972131bf3dd875" translate="yes" xml:space="preserve">
          <source>And the file &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; should have a line such as:</source>
          <target state="translated">また、ファイル &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; には次のような行が必要です。</target>
        </trans-unit>
        <trans-unit id="6e5610006c9239d4cb336c2c7d577aba9f78227d" translate="yes" xml:space="preserve">
          <source>And the following piece of code which is equivalent to the one listed above would also produce the same output:</source>
          <target state="translated">また、上に挙げたものと同等の以下のコードでも同じ出力が得られます。</target>
        </trans-unit>
        <trans-unit id="eadfc00610c56c5450e03359483df454e3c7b3ae" translate="yes" xml:space="preserve">
          <source>And the following produces a &lt;code&gt;Map&lt;/code&gt; mapping a unique identifier to students:</source>
          <target state="translated">そして、以下は、一意の識別子を学生にマッピングする &lt;code&gt;Map&lt;/code&gt; 生成します。</target>
        </trans-unit>
        <trans-unit id="ebfeebb6a2ed5661409db202d47594952d75a6a8" translate="yes" xml:space="preserve">
          <source>And the output result would be like the following:</source>
          <target state="translated">そして、出力結果は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="88fac44e867c1873c40382241256375ba9f8ae23" translate="yes" xml:space="preserve">
          <source>Annex C: Compatibility Properties</source>
          <target state="translated">付属書C:互換性特性</target>
        </trans-unit>
        <trans-unit id="d1443be703d91abac6a85fe311fc11e9f8658347" translate="yes" xml:space="preserve">
          <source>Anno Hijrah (AH)</source>
          <target state="translated">アノヒジュラ</target>
        </trans-unit>
        <trans-unit id="39a3c021a6592dfd08c18bc0f34ba1f7c10d56d9" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType</source>
          <target state="translated">AnnotatedArrayType</target>
        </trans-unit>
        <trans-unit id="89ab8136e9a5ba18bc9f00db735c01db3596a810" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType.getAnnotatedGenericComponentType()</source>
          <target state="translated">AnnotatedArrayType.getAnnotatedGenericComponentType()</target>
        </trans-unit>
        <trans-unit id="898c7a7c1fc4017ba193ae0d14c7ba2693d10175" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct</source>
          <target state="translated">AnnotatedConstruct</target>
        </trans-unit>
        <trans-unit id="e918d82cbd1ba19481047d349462baec2df8ab3a" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotation()</source>
          <target state="translated">AnnotatedConstruct.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="95613154ff1651f054757fad1337dcb6c703b6eb" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationMirrors()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="6df52c0d2731e865cb51147bf7bc635087e2e034" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationsByType()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="6584aa691c0cadc0b86fb3490fd9ae2ba540e603" translate="yes" xml:space="preserve">
          <source>AnnotatedElement</source>
          <target state="translated">AnnotatedElement</target>
        </trans-unit>
        <trans-unit id="1e47eef6a22a56a5262567dd4bdbad6e88c744d0" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotation()</source>
          <target state="translated">AnnotatedElement.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="58532747f94ef8fd11ad6f1399270b2d661604af" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotations()</source>
          <target state="translated">AnnotatedElement.getAnnotations()</target>
        </trans-unit>
        <trans-unit id="2110e67d2c7ca30804040720a5465fe95719121a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="b95fe124533e0be817be43ef3f607ae91fd69b6e" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotation()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotation()</target>
        </trans-unit>
        <trans-unit id="c2b3e852cda8e3d2a83088a97d848ddf44f9df00" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotations()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotations()</target>
        </trans-unit>
        <trans-unit id="d5695304cf5abbea91a53fbc07f24c4aaa5d193a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="c42bff3a16d7811a0b3d0f50dc0c32d58614e6b8" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.isAnnotationPresent()</source>
          <target state="translated">AnnotatedElement.isAnnotationPresent()</target>
        </trans-unit>
        <trans-unit id="4100e35c02e1ed895766f501d3b6456edef792d2" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType</source>
          <target state="translated">AnnotatedParameterizedType</target>
        </trans-unit>
        <trans-unit id="40b578a952041350afde6fadd54a76ffa696f218" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</source>
          <target state="translated">AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</target>
        </trans-unit>
        <trans-unit id="58aa1b064819f6773e9b52c96e210a9a393b17fc" translate="yes" xml:space="preserve">
          <source>AnnotatedType</source>
          <target state="translated">AnnotatedType</target>
        </trans-unit>
        <trans-unit id="85da65647ba9a5b3dcab9b7610fb9c943879abfa" translate="yes" xml:space="preserve">
          <source>AnnotatedType.getType()</source>
          <target state="translated">AnnotatedType.getType()</target>
        </trans-unit>
        <trans-unit id="9ded471795dd45492f925c4e5632633221f1c52b" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable</source>
          <target state="translated">AnnotatedTypeVariable</target>
        </trans-unit>
        <trans-unit id="be86402646208c2da6911b25b33ad677c6bd9b65" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable.getAnnotatedBounds()</source>
          <target state="translated">AnnotatedTypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="fea2f58a0d3ec33ace7f258ab7a46dcfd7705830" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType</source>
          <target state="translated">AnnotatedWildcardType</target>
        </trans-unit>
        <trans-unit id="27ab6888c5a54622d2ab697cb51ece28dc887dbb" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedLowerBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedLowerBounds()</target>
        </trans-unit>
        <trans-unit id="417220be86907df18ec684a1b12e08edcccfcd25" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedUpperBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedUpperBounds()</target>
        </trans-unit>
        <trans-unit id="de3b78b64190965365f72568ffbe049d4ba32c22" translate="yes" xml:space="preserve">
          <source>Annotation</source>
          <target state="translated">Annotation</target>
        </trans-unit>
        <trans-unit id="1dad3896014873ba94c10c7fa13561327e7f8704" translate="yes" xml:space="preserve">
          <source>Annotation Type</source>
          <target state="translated">アノテーションタイプ</target>
        </trans-unit>
        <trans-unit id="5e7309dbabddcdae19191dd9f02369f0c7352ff8" translate="yes" xml:space="preserve">
          <source>Annotation Type ConstructorProperties</source>
          <target state="translated">アノテーション型 ConstructorProperties</target>
        </trans-unit>
        <trans-unit id="0973863efc52d8a4673cbc271c706041689e63b2" translate="yes" xml:space="preserve">
          <source>Annotation Type Deprecated</source>
          <target state="translated">アノテーションタイプ 非推奨</target>
        </trans-unit>
        <trans-unit id="6bbe1f4e8bf695876324ef0c6bc3c2b2c3217906" translate="yes" xml:space="preserve">
          <source>Annotation Type DescriptorKey</source>
          <target state="translated">アノテーションタイプDescriptorKey</target>
        </trans-unit>
        <trans-unit id="4cd10749e72864bb37da45e69f73ed72cae7b0d1" translate="yes" xml:space="preserve">
          <source>Annotation Type Documented</source>
          <target state="translated">注釈の種類 文書化されている</target>
        </trans-unit>
        <trans-unit id="03d417f6d05e2c064e12f9f18fa1c01eab72a891" translate="yes" xml:space="preserve">
          <source>Annotation Type FunctionalInterface</source>
          <target state="translated">アノテーション型FunctionalInterface</target>
        </trans-unit>
        <trans-unit id="117f7536bb0626bf476eaedf75423d02ca0894f4" translate="yes" xml:space="preserve">
          <source>Annotation Type Generated</source>
          <target state="translated">生成されたアノテーションの種類</target>
        </trans-unit>
        <trans-unit id="9e2518c862c81f112d8515353db31490e21cece6" translate="yes" xml:space="preserve">
          <source>Annotation Type Inherited</source>
          <target state="translated">アノテーションタイプ 継承</target>
        </trans-unit>
        <trans-unit id="98b657a4a671b6d18319992ce70cd2a2f11b917b" translate="yes" xml:space="preserve">
          <source>Annotation Type MXBean</source>
          <target state="translated">アノテーション型MXBean</target>
        </trans-unit>
        <trans-unit id="70621484999741d9f315043f8570d4aba80962ef" translate="yes" xml:space="preserve">
          <source>Annotation Type Native</source>
          <target state="translated">アノテーションの種類 ネイティブ</target>
        </trans-unit>
        <trans-unit id="7c033aecd1b5c11b0d69bb685063a683d9613c94" translate="yes" xml:space="preserve">
          <source>Annotation Type Override</source>
          <target state="translated">アノテーションタイプのオーバーライド</target>
        </trans-unit>
        <trans-unit id="3ef21c93cf4a092920e6ff2de215611e1628a787" translate="yes" xml:space="preserve">
          <source>Annotation Type PostConstruct</source>
          <target state="translated">アノテーション型 PostConstruct</target>
        </trans-unit>
        <trans-unit id="d2cd78a6e8de7a472ef52824e6191f52951087e6" translate="yes" xml:space="preserve">
          <source>Annotation Type PreDestroy</source>
          <target state="translated">アノテーションタイプ PreDestroy</target>
        </trans-unit>
        <trans-unit id="ed08037a1c561f837dfeead83fc5c657f1d27616" translate="yes" xml:space="preserve">
          <source>Annotation Type Repeatable</source>
          <target state="translated">アノテーションタイプ 再現性</target>
        </trans-unit>
        <trans-unit id="4b2eb3ae86e651034661ca2cfda35d2b601d9f98" translate="yes" xml:space="preserve">
          <source>Annotation Type Resource</source>
          <target state="translated">アノテーションタイプ リソース</target>
        </trans-unit>
        <trans-unit id="da7f20358dc7ccc13073c2c513d22507af6d51a0" translate="yes" xml:space="preserve">
          <source>Annotation Type Resources</source>
          <target state="translated">アノテーションの種類 資源</target>
        </trans-unit>
        <trans-unit id="522b30d04006bf09c1e705a865739b1be10e2407" translate="yes" xml:space="preserve">
          <source>Annotation Type Retention</source>
          <target state="translated">アノテーションタイプの保持</target>
        </trans-unit>
        <trans-unit id="5fcf6454526e1e7187b20dbefdd90612de4ded80" translate="yes" xml:space="preserve">
          <source>Annotation Type SafeVarargs</source>
          <target state="translated">アノテーション型 SafeVarargs</target>
        </trans-unit>
        <trans-unit id="3fb381fd9596294abd9697d5d0b277feded00621" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedAnnotationTypes</source>
          <target state="translated">アノテーションタイプ SupportedAnnotationTypes</target>
        </trans-unit>
        <trans-unit id="4edf3467cb5f0a661bf135b2c8839cf0a3817b99" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedOptions</source>
          <target state="translated">アノテーションタイプ SupportedOptions</target>
        </trans-unit>
        <trans-unit id="4680725098084c8006daca170fba946d1a1fb0f7" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedSourceVersion</source>
          <target state="translated">アノテーションタイプ SupportedSourceVersion</target>
        </trans-unit>
        <trans-unit id="4614b646799fcfc4639d9396b7093414b63a4a6d" translate="yes" xml:space="preserve">
          <source>Annotation Type SuppressWarnings</source>
          <target state="translated">アノテーション型 SuppressWarnings</target>
        </trans-unit>
        <trans-unit id="928166330dec85307dd2322795148f4d3e93e3af" translate="yes" xml:space="preserve">
          <source>Annotation Type Target</source>
          <target state="translated">アノテーションタイプ ターゲット</target>
        </trans-unit>
        <trans-unit id="4cf6f7c37998b022a9ac6a66e99ccba885fe437d" translate="yes" xml:space="preserve">
          <source>Annotation Type Transient</source>
          <target state="translated">アノテーションタイプ トランジェント</target>
        </trans-unit>
        <trans-unit id="451ef479320c3e9eb4b5bc9bfe70003464bef8ad" translate="yes" xml:space="preserve">
          <source>Annotation Types Summary</source>
          <target state="translated">アノテーションタイプの概要</target>
        </trans-unit>
        <trans-unit id="47b3096e195e22b59f31814830a501e220efb3a8" translate="yes" xml:space="preserve">
          <source>Annotation element</source>
          <target state="translated">アノテーション要素</target>
        </trans-unit>
        <trans-unit id="be50acfea380665f34607b8c61b0962e638cd617" translate="yes" xml:space="preserve">
          <source>Annotation processing happens in a sequence of &lt;a href=&quot;roundenvironment&quot;&gt;rounds&lt;/a&gt;. On each round, a processor may be asked to &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;process&lt;/a&gt; a subset of the annotations found on the source and class files produced by a prior round. The inputs to the first round of processing are the initial inputs to a run of the tool; these initial inputs can be regarded as the output of a virtual zeroth round of processing. If a processor was asked to process on a given round, it will be asked to process on subsequent rounds, including the last round, even if there are no annotations for it to process. The tool infrastructure may also ask a processor to process files generated implicitly by the tool's operation.</source>
          <target state="translated">注釈処理は一連の&lt;a href=&quot;roundenvironment&quot;&gt;ラウンド&lt;/a&gt;で行われます。各ラウンドで、プロセッサは、前のラウンドで生成されたソースファイルとクラスファイルで見つかった注釈のサブセットを&lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;処理&lt;/a&gt;するように求められる場合があります。最初の処理への入力は、ツールの実行への初期入力です。これらの初期入力は、仮想的な第0ラウンドの処理の出力と見なすことができます。プロセッサが特定のラウンドでの処理を要求された場合、処理する注釈がない場合でも、最後のラウンドを含む後続のラウンドでの処理を要求されます。ツールインフラストラクチャは、ツールの操作によって暗黙的に生成されたファイルを処理するようにプロセッサに要求する場合もあります。</target>
        </trans-unit>
        <trans-unit id="36032bca93b9fd303800cf36031e61dda7d83a46" translate="yes" xml:space="preserve">
          <source>Annotation retention policy.</source>
          <target state="translated">アノテーションの保持方針。</target>
        </trans-unit>
        <trans-unit id="68bab41822f51e69130a0f167746a4786a92e23e" translate="yes" xml:space="preserve">
          <source>Annotation retention policy. The constants of this enumerated type describe the various policies for retaining annotations. They are used in conjunction with the &lt;a href=&quot;retention&quot;&gt;&lt;code&gt;Retention&lt;/code&gt;&lt;/a&gt; meta-annotation type to specify how long annotations are to be retained.</source>
          <target state="translated">アノテーション保持ポリシー。この列挙型の定数は、注釈を保持するためのさまざまなポリシーを記述します。これらは&lt;a href=&quot;retention&quot;&gt; &lt;code&gt;Retention&lt;/code&gt; &lt;/a&gt;メタアノテーションタイプと組み合わせて使用​​され、アノテーションを保持する期間を指定します。</target>
        </trans-unit>
        <trans-unit id="7d9e15e21739f0c37df18fe55093427929a50ed4" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface.</source>
          <target state="translated">インターフェースを明示的に MXBean インターフェースであること、または MXBean インターフェースではないことをマークするアノテーション。</target>
        </trans-unit>
        <trans-unit id="7b83e64a16ac8cf35bd04e39f1d8331bd14a60ab" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface. By default, an interface is an MXBean interface if it is public and its name ends with &lt;code&gt;MXBean&lt;/code&gt;, as in &lt;code&gt;SomethingMXBean&lt;/code&gt;. The following interfaces are MXBean interfaces:</source>
          <target state="translated">インターフェースを明示的にMXBeanインターフェースとして、またはMXBeanインターフェースとしてマークしないための注釈。 &lt;code&gt;SomethingMXBean&lt;/code&gt; のように、デフォルトでは、インターフェースがパブリックで、名前が &lt;code&gt;MXBean&lt;/code&gt; で終わる場合、インターフェースはMXBeanインターフェースです。次のインターフェースはMXBeanインターフェースです。</target>
        </trans-unit>
        <trans-unit id="025e39182f3ae2735d0e2ea25030ac8165d4b17d" translate="yes" xml:space="preserve">
          <source>Annotation type declaration</source>
          <target state="translated">アノテーション型宣言</target>
        </trans-unit>
        <trans-unit id="cdafcdb0e1b335218cd9bc9be4f7136516e71436" translate="yes" xml:space="preserve">
          <source>Annotation.annotationType()</source>
          <target state="translated">Annotation.annotationType()</target>
        </trans-unit>
        <trans-unit id="5d9365cab2f09820f22553419c174082c8d89589" translate="yes" xml:space="preserve">
          <source>Annotation.equals()</source>
          <target state="translated">Annotation.equals()</target>
        </trans-unit>
        <trans-unit id="69c0da2206576aeac601bff1fc4a41f210c1bf90" translate="yes" xml:space="preserve">
          <source>Annotation.getValue()</source>
          <target state="translated">Annotation.getValue()</target>
        </trans-unit>
        <trans-unit id="1bd37ef007a85a0f0456532cba2f6c45fe9fc8cf" translate="yes" xml:space="preserve">
          <source>Annotation.hashCode()</source>
          <target state="translated">Annotation.hashCode()</target>
        </trans-unit>
        <trans-unit id="6aabb1fd40179c01b8df7e2b9959dbafbb5cc444" translate="yes" xml:space="preserve">
          <source>Annotation.toString()</source>
          <target state="translated">Annotation.toString()</target>
        </trans-unit>
        <trans-unit id="3613b17c28715389eeed5fce4e5a109bd2347db1" translate="yes" xml:space="preserve">
          <source>AnnotationFormatError</source>
          <target state="translated">AnnotationFormatError</target>
        </trans-unit>
        <trans-unit id="df37178bdef41ca29b231974228a2c68e5e69896" translate="yes" xml:space="preserve">
          <source>AnnotationMirror</source>
          <target state="translated">AnnotationMirror</target>
        </trans-unit>
        <trans-unit id="07ba8e6efa3764e78a8b59af7fea8ba432d96ef2" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getAnnotationType()</source>
          <target state="translated">AnnotationMirror.getAnnotationType()</target>
        </trans-unit>
        <trans-unit id="6a8327d9b5d300413d53669b7adfd12b0df65347" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getElementValues()</source>
          <target state="translated">AnnotationMirror.getElementValues()</target>
        </trans-unit>
        <trans-unit id="f3517af06b31fb4f89a1525ec83ea9eb9b874f31" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException</source>
          <target state="translated">AnnotationTypeMismatchException</target>
        </trans-unit>
        <trans-unit id="7c01e67f70dc87eb9c4b52854c3698cde397c1ed" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.element()</source>
          <target state="translated">AnnotationTypeMismatchException.element()</target>
        </trans-unit>
        <trans-unit id="eae418a343bf145d24e68c5d69f35c3f5055b886" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.foundType()</source>
          <target state="translated">AnnotationTypeMismatchException.foundType()</target>
        </trans-unit>
        <trans-unit id="960198ba8987994e62e70b303ff3d860fd2ab3ba" translate="yes" xml:space="preserve">
          <source>AnnotationValue</source>
          <target state="translated">AnnotationValue</target>
        </trans-unit>
        <trans-unit id="acea91a385d6f873924c6a0f8b6b8f75d1fa0fb7" translate="yes" xml:space="preserve">
          <source>AnnotationValue.accept()</source>
          <target state="translated">AnnotationValue.accept()</target>
        </trans-unit>
        <trans-unit id="16ea73c05fb0c14b4bdce70d38231ac5e125bf4c" translate="yes" xml:space="preserve">
          <source>AnnotationValue.getValue()</source>
          <target state="translated">AnnotationValue.getValue()</target>
        </trans-unit>
        <trans-unit id="6c81782afcd998c9b0af20135bdb018242411ec5" translate="yes" xml:space="preserve">
          <source>AnnotationValue.toString()</source>
          <target state="translated">AnnotationValue.toString()</target>
        </trans-unit>
        <trans-unit id="1ed8eaf9a8bef688d61b799cc07602c070e82f6f" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor</source>
          <target state="translated">AnnotationValueVisitor</target>
        </trans-unit>
        <trans-unit id="6a45e78e4c0c5d01c00a83b95c8dbe76498db4ae" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visit()</source>
          <target state="translated">AnnotationValueVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="523b83e220960acffd30ba65228e79f35b1965d8" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitAnnotation()</source>
          <target state="translated">AnnotationValueVisitor.visitAnnotation()</target>
        </trans-unit>
        <trans-unit id="8b1df36003a32e4d36f0ffd338ecf7f692f77b5c" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitArray()</source>
          <target state="translated">AnnotationValueVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="d740dbc376935b262567b7c3135ccfd30a40065b" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitBoolean()</source>
          <target state="translated">AnnotationValueVisitor.visitBoolean()</target>
        </trans-unit>
        <trans-unit id="6a89ce619973c8ba110a8c38753c1030adccef84" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitByte()</source>
          <target state="translated">AnnotationValueVisitor.visitByte()</target>
        </trans-unit>
        <trans-unit id="394ae0210ea79c54bd391fe46cc2b38160110c98" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitChar()</source>
          <target state="translated">AnnotationValueVisitor.visitChar()</target>
        </trans-unit>
        <trans-unit id="13ae0fd2b031485a2d1390a2927d8b6d9a432945" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitDouble()</source>
          <target state="translated">AnnotationValueVisitor.visitDouble()</target>
        </trans-unit>
        <trans-unit id="ffa372abefce66f565ea0bc6974940d06e30dd99" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitEnumConstant()</source>
          <target state="translated">AnnotationValueVisitor.visitEnumConstant()</target>
        </trans-unit>
        <trans-unit id="e67dc62a6441cab770ef1bc955bb582ed726f5dc" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitFloat()</source>
          <target state="translated">AnnotationValueVisitor.visitFloat()</target>
        </trans-unit>
        <trans-unit id="bca97cecf5f8a531ef04bf8fa2a79389e4b0c906" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitInt()</source>
          <target state="translated">AnnotationValueVisitor.visitInt()</target>
        </trans-unit>
        <trans-unit id="9f49821481e0d17a1d85975f1bd965b7b089f9bb" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitLong()</source>
          <target state="translated">AnnotationValueVisitor.visitLong()</target>
        </trans-unit>
        <trans-unit id="344a5f99e63230e5b051089d7ca38f5f0c44c571" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitShort()</source>
          <target state="translated">AnnotationValueVisitor.visitShort()</target>
        </trans-unit>
        <trans-unit id="cd9118788c44c75a89de5a225225446a0d5e9f48" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitString()</source>
          <target state="translated">AnnotationValueVisitor.visitString()</target>
        </trans-unit>
        <trans-unit id="c9f06379c4f791e847fa15ef16498f0827682c08" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitType()</source>
          <target state="translated">AnnotationValueVisitor.visitType()</target>
        </trans-unit>
        <trans-unit id="f06a4569c4dcb83da0d6e5422c4b19c872fd738e" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitUnknown()</source>
          <target state="translated">AnnotationValueVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="e8b5bd27f3a36c748abdedba1f16ff6c9c2678a1" translate="yes" xml:space="preserve">
          <source>Annotations are to be discarded by the compiler.</source>
          <target state="translated">アノテーションはコンパイラによって破棄されます。</target>
        </trans-unit>
        <trans-unit id="fcc96b27c544d1550c22513fdbd0edf50def224f" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler and retained by the VM at run time, so they may be read reflectively.</source>
          <target state="translated">アノテーションは、コンパイラによってクラスファイルに記録され、実行時にVMによって保持されるため、反射的に読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="9d8124fad57e48f0e3ee85e7c849ccd8f9f98d49" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler but need not be retained by the VM at run time. This is the default behavior.</source>
          <target state="translated">アノテーションはコンパイラによってクラスファイルに記録されますが、実行時にVMが保持する必要はありません。これがデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="5b257d13a4cb5ee69822d716a40f9b26917338f8" translate="yes" xml:space="preserve">
          <source>Annotations should be compared using the &lt;code&gt;equals&lt;/code&gt; method. There is no guarantee that any particular annotation will always be represented by the same object.</source>
          <target state="translated">注釈は、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用して比較する必要があります。特定の注釈が常に同じオブジェクトによって表されるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="7d269679a5e554dfd36b51d1e8f021933d74b3b4" translate="yes" xml:space="preserve">
          <source>Anonymous (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt;). This mechanism is anonymous authentication in which no credentials are necessary.</source>
          <target state="translated">匿名（&lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt;）。このメカニズムは匿名認証で、資格情報は必要ありません。</target>
        </trans-unit>
        <trans-unit id="278caaf450748a718e3292c7dc0d8d1844dc77fc" translate="yes" xml:space="preserve">
          <source>Another backslash. The second backslash has no special meaning and the two characters represent a single backslash.</source>
          <target state="translated">もう一つのバックスラッシュ。2つ目のバックスラッシュには特別な意味はなく、2つの文字が1つのバックスラッシュを表しています。</target>
        </trans-unit>
        <trans-unit id="dc4a3301cd9c4d3efdf3b80d753c3d4f2e526481" translate="yes" xml:space="preserve">
          <source>Another provider may implement a class for each of the above modes (i.e., one class for</source>
          <target state="translated">別のプロバイダは、上記の各モードのためのクラスを実装してもよい(すなわち、1つのクラスが</target>
        </trans-unit>
        <trans-unit id="5e1c5b1e5bb69ff0cf31d51e349c75af553a6629" translate="yes" xml:space="preserve">
          <source>Another thread notifies threads waiting on this object's monitor to wake up either through a call to the &lt;code&gt;notify&lt;/code&gt; method or the &lt;code&gt;notifyAll&lt;/code&gt; method.</source>
          <target state="translated">別のスレッドが、このオブジェクトのモニターでウェイクアップするのを待機しているスレッドに、 &lt;code&gt;notify&lt;/code&gt; メソッドまたは &lt;code&gt;notifyAll&lt;/code&gt; メソッドの呼び出しを介して通知します。</target>
        </trans-unit>
        <trans-unit id="ef72d3480b46154c6b0f3e93a6925ade124026af" translate="yes" xml:space="preserve">
          <source>Another typical usage would be to divide a problem into N parts, describe each part with a Runnable that executes that portion and counts down on the latch, and queue all the Runnables to an Executor. When all sub-parts are complete, the coordinating thread will be able to pass through await. (When threads must repeatedly count down in this way, instead use a &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">別の典型的な使用法は、問題をNの部分に分割し、その部分を実行してラッチをカウントダウンするRunnableで各部分を記述し、すべてのRunnableをエグゼキューターにキューイングすることです。すべてのサブパートが完了すると、調整スレッドは待機を通過できます。（スレッドがこのように繰り返しカウントダウンする必要がある場合は、代わりに&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;を使用してください。）</target>
        </trans-unit>
        <trans-unit id="d411ee31ab6712a63ad89e9b23b92978ad7f9d9c" translate="yes" xml:space="preserve">
          <source>Another use of dynamically typesafe views is debugging. Suppose a program fails with a &lt;code&gt;ClassCastException&lt;/code&gt;, indicating that an incorrectly typed element was put into a parameterized collection. Unfortunately, the exception can occur at any time after the erroneous element is inserted, so it typically provides little or no information as to the real source of the problem. If the problem is reproducible, one can quickly determine its source by temporarily modifying the program to wrap the collection with a dynamically typesafe view. For example, this declaration:</source>
          <target state="translated">動的に型保証されたビューのもう1つの用途はデバッグです。誤って型指定された要素がパラメーター化されたコレクションに入れられたことを示す &lt;code&gt;ClassCastException&lt;/code&gt; でプログラムが失敗したとします。残念ながら、例外はエラーのある要素が挿入された後はいつでも発生する可能性があるため、通常、問題の実際の原因に関する情報はほとんどまたはまったく提供されません。問題が再現可能な場合は、プログラムを一時的に変更して、コレクションを動的に型保証されたビューでラップすることにより、問題の原因をすばやく特定できます。たとえば、次の宣言は：</target>
        </trans-unit>
        <trans-unit id="9a9d24a4302c6890a261ac379b2ab6b218b70ead" translate="yes" xml:space="preserve">
          <source>Another way to reference arguments by position is to use the &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;code&gt;'\u003c'&lt;/code&gt;) flag, which causes the argument for the previous format specifier to be re-used. For example, the following two statements would produce identical strings:</source>
          <target state="translated">引数を位置で参照する別の方法は、 &lt;code&gt;'&amp;lt;'&lt;/code&gt; （ &lt;code&gt;'\u003c'&lt;/code&gt; ）フラグを使用することです。これにより、前のフォーマット指定子の引数が再利用されます。たとえば、次の2つのステートメントは同じ文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="1c7b3876d1999e760b72c75a1e6a3ce121a0a890" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dateformat#isLenient--&quot;&gt;leniency&lt;/a&gt; values that have previously been set are overwritten by &lt;code&gt;newCalendar&lt;/code&gt;'s values.</source>
          <target state="translated">任意の&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;dateformat#isLenient--&quot;&gt;寛大&lt;/a&gt;以前に設定された値がで上書きされ &lt;code&gt;newCalendar&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="2b3256f0600177855700faf9f163b41812c45a5f" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; may be used to transfer and hold submitted tasks. The use of this queue interacts with pool sizing:</source>
          <target state="translated">任意の&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;を使用して、送信されたタスクを転送および保持できます。このキューの使用は、プールのサイズ設定と相互作用します。</target>
        </trans-unit>
        <trans-unit id="e7fc9ad7ac0770ee3d5715933ad7bf4aa69c504f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; or any of its parent classes will be ignored.</source>
          <target state="translated">指定された &lt;code&gt;beanClass&lt;/code&gt; またはその親クラスのいずれかに関連付けられているBeanInfoはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="f2d5679ee729395da001ae24b1893709e43f6232" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; will be ignored.</source>
          <target state="translated">指定された &lt;code&gt;beanClass&lt;/code&gt; に関連付けられたBeanInfoはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="36b34d235f90d366fbbaab3130d43207599fb97f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo that can be discovered will be used.</source>
          <target state="translated">発見できるBeanInfoはすべて使用されます。</target>
        </trans-unit>
        <trans-unit id="91fc4fe270878de4be10043a0f7d6405fc46ffdd" translate="yes" xml:space="preserve">
          <source>Any Java object of a class that implements the &lt;a href=&quot;dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; interface is a Dynamic MBean.</source>
          <target state="translated">&lt;a href=&quot;dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; &lt;/a&gt;インターフェースを実装するクラスのJavaオブジェクトは、動的MBeanです。</target>
        </trans-unit>
        <trans-unit id="878dd2b27c0d7871e861dcee06c80435d7ef637a" translate="yes" xml:space="preserve">
          <source>Any Unicode linebreak sequence, is equivalent to &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029] &lt;/code&gt;</source>
          <target state="translated">Unicodeの改行シーケンスは、 &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029] &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fc08c383238f31e74ec6a951c51dbf45488276e" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファーに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="d89160ec853025a7dd13ded262eb18b4ba5238af" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファーに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="a8934b5a18a25867373a75d27592862e54f3f40d" translate="yes" xml:space="preserve">
          <source>Any algorithm parameters that may be used in the encryption operation are stored inside of the new &lt;code&gt;SealedObject&lt;/code&gt;.</source>
          <target state="translated">暗号化操作で使用できるアルゴリズムパラメータはすべて、新しい &lt;code&gt;SealedObject&lt;/code&gt; 内に格納されます。</target>
        </trans-unit>
        <trans-unit id="28217249ea650a59594510440b99e6b2835b9e11" translate="yes" xml:space="preserve">
          <source>Any arbitrary value used to indicate a variation of a &lt;code&gt;Locale&lt;/code&gt;. Where there are two or more variant values each indicating its own semantics, these values should be ordered by importance, with most important first, separated by underscore('_'). The variant field is case sensitive.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; バリエーションを示すために使用される任意の値。それぞれが独自のセマンティクスを示す2つ以上のバリアント値がある場合、これらの値は重要度の順に並べる必要があります。バリアントフィールドでは大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="89fc821443d8cad046dd54102e3989ffae181623" translate="yes" xml:space="preserve">
          <source>Any array elements following the last element in the Vector are null.</source>
          <target state="translated">Vectorの最後の要素に続く配列要素はすべてNULLです。</target>
        </trans-unit>
        <trans-unit id="8d95a184a347e367ac7b88c589e32e30708dd89e" translate="yes" xml:space="preserve">
          <source>Any attempt to modify the resulting buffer will cause a &lt;a href=&quot;../readonlybufferexception&quot;&gt;&lt;code&gt;ReadOnlyBufferException&lt;/code&gt;&lt;/a&gt; to be thrown. (&lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt;&lt;code&gt;MapMode.READ_ONLY&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">結果のバッファーを変更しようとすると、&lt;a href=&quot;../readonlybufferexception&quot;&gt; &lt;code&gt;ReadOnlyBufferException&lt;/code&gt; &lt;/a&gt;がスローされます。（&lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt; &lt;code&gt;MapMode.READ_ONLY&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="33fa846a103fcbcc838ecd8d6c108c0babb01059" translate="yes" xml:space="preserve">
          <source>Any attempt to read object data which exceeds the boundaries of the custom data written by the corresponding writeObject method will cause an OptionalDataException to be thrown with an eof field value of true. Non-object reads which exceed the end of the allotted data will reflect the end of data in the same way that they would indicate the end of the stream: bytewise reads will return -1 as the byte read or number of bytes read, and primitive reads will throw EOFExceptions. If there is no corresponding writeObject method, then the end of default serialized data marks the end of the allotted data.</source>
          <target state="translated">対応する writeObject メソッドによって書き込まれたカスタム データの境界を超えてオブジェクト データを読み出そうとすると、eof フィールドの値が true の OptionalDataException がスローされます。割り当てられたデータの終端を超えてオブジェクト以外のデータを読み出そうとすると、ストリームの終端を示すのと同じ方法でデータの終端が反映されます:バイト単位の読み取りでは読み取りバイト数または読み取りバイト数として -1 が返され、プリミティブな読み取りでは EOFException がスローされます。対応する writeObject メソッドがない場合、デフォルトのシリアル化データの終了は、割り当てられたデータの終了を示します。</target>
        </trans-unit>
        <trans-unit id="d03391cf9563966b46dad3f5b96b7ea721c93a92" translate="yes" xml:space="preserve">
          <source>Any attributes associated with the name are removed. Intermediate contexts are not changed.</source>
          <target state="translated">名前に関連付けられた属性はすべて削除されます。中間コンテキストは変更されません。</target>
        </trans-unit>
        <trans-unit id="138d1be4feab75eed27dc6edb1cbf148dd5f2c2c" translate="yes" xml:space="preserve">
          <source>Any bytes buffered by the encapsulated cipher and waiting to be processed by it will not be written out. For example, if the encapsulated cipher is a block cipher, and the total number of bytes written using one of the &lt;code&gt;write&lt;/code&gt; methods is less than the cipher's block size, no bytes will be written out.</source>
          <target state="translated">カプセル化された暗号によってバッファリングされ、暗号による処理を待っているバイトは書き出されません。たとえば、カプセル化された暗号がブロック暗号であり、 &lt;code&gt;write&lt;/code&gt; メソッドの1つを使用して書き込まれた合計バイト数が暗号のブロックサイズより小さい場合、バイトは書き込まれません。</target>
        </trans-unit>
        <trans-unit id="36abd7da00f31ca22008ea2a36d64beb6a6bb085" translate="yes" xml:space="preserve">
          <source>Any character (may or may not match &lt;a href=&quot;#lt&quot;&gt;line terminators&lt;/a&gt;)</source>
          <target state="translated">任意の文字（&lt;a href=&quot;#lt&quot;&gt;行末記号と&lt;/a&gt;一致する場合と一致しない場合があります）</target>
        </trans-unit>
        <trans-unit id="dd877acbce59891c71e45cab4d13e03529950c59" translate="yes" xml:space="preserve">
          <source>Any character except &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, or &lt;code&gt;c&lt;/code&gt; (negation)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、または &lt;code&gt;c&lt;/code&gt; 以外の任意の文字（否定）</target>
        </trans-unit>
        <trans-unit id="6eb20b4b210d809cc20ecc02e27a12d61731ee77" translate="yes" xml:space="preserve">
          <source>Any character except one in the Greek block (negation)</source>
          <target state="translated">ギリシャ語のブロック内の1つを除く任意の文字(否定)</target>
        </trans-unit>
        <trans-unit id="2100078a047c7a03eb060da42289872c8a92cf81" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が次の場合、最初の文字がマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002D'&lt;/code&gt; ）またはプラス記号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合を除いて、文字列の文字は指定された基数の数字ではありません。長さ1より長い。</target>
        </trans-unit>
        <trans-unit id="24d5c44faeee009aacd3ba1efed06335674ee1c9" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が指定された基数の数字ではない場合を除き、文字列の任意の文字は、最初の文字がマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）またはプラス記号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）の場合、長さ1より長い。</target>
        </trans-unit>
        <trans-unit id="848625b2dffb8bb084ffcf88acbefa1cfb501ea3" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が長さ1より長い場合、最初の文字が正符号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合を除いて、文字列のどの文字も指定された基数の数字ではありません。</target>
        </trans-unit>
        <trans-unit id="db7ee7ebd2a4d171b9dfb2df75389b650d4d615e" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions are illegal and are reserved for future extensions.</source>
          <target state="translated">変換として明示的に定義されていない文字はすべて不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="4ec3cbd03ef7918daa50cbb2d1828b3a04a0f027" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions, date/time conversion suffixes, or flags are illegal and are reserved for future extensions. Use of such a character in a format string will cause an &lt;a href=&quot;unknownformatconversionexception&quot;&gt;&lt;code&gt;UnknownFormatConversionException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;unknownformatflagsexception&quot;&gt;&lt;code&gt;UnknownFormatFlagsException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">変換、日付/時刻変換サフィックス、またはフラグとして明示的に定義されていない文字はすべて無効であり、将来の拡張のために予約されています。このような文字をフォーマット文字列で使用すると、&lt;a href=&quot;unknownformatconversionexception&quot;&gt; &lt;code&gt;UnknownFormatConversionException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;unknownformatflagsexception&quot;&gt; &lt;code&gt;UnknownFormatFlagsException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="8e7c8cf885c250b76bb650597023d16c94098393" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as date/time conversion suffixes are illegal and are reserved for future extensions.</source>
          <target state="translated">日付/時刻変換サフィックスとして明示的に定義されていない文字はすべて不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="e0fcbabc5347d639b48a80ddb7365cfb03683852" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as flags are illegal and are reserved for future extensions.</source>
          <target state="translated">フラグとして明示的に定義されていない文字は不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="fd779da135d1030729e05b50fff842ff80101eac" translate="yes" xml:space="preserve">
          <source>Any class name provided as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be a binary name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のメソッドに&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;パラメータとして提供されるクラス名は、以下で定義されているバイナリ名である必要があります</target>
        </trans-unit>
        <trans-unit id="5aa26838f6fdb18f70bc359cbf6cb2b658203c68" translate="yes" xml:space="preserve">
          <source>Any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.</source>
          <target state="translated">同じ属性(同じ属性/値のペア)を持つ連続したテキストセグメントは、それらのテキストセグメントに別々に属性が与えられている場合、別々の実行として扱われます。</target>
        </trans-unit>
        <trans-unit id="56c62a3f42717964cceae562372d37a55e105932" translate="yes" xml:space="preserve">
          <source>Any curly braces within an unquoted pattern must be balanced. For example, &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; and &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; are valid patterns, but &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt;, &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; and &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; are not.</source>
          <target state="translated">引用符で囲まれていないパターン内の中括弧は、バランスをとる必要があります。たとえば、 &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; と &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; は有効なパターンですが、 &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; は無効です。</target>
        </trans-unit>
        <trans-unit id="2294e2ac17f729acd480ef14e8d0abe7327b68c1" translate="yes" xml:space="preserve">
          <source>Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.</source>
          <target state="translated">観測された属性の値を取得しようとすると、例外(上記の場合を除く)が発生します。</target>
        </trans-unit>
        <trans-unit id="7d6302a0f2db1ce6581d2d3299da1c1a422b7bc0" translate="yes" xml:space="preserve">
          <source>Any exception that occurs while deserializing an object will be caught by the ObjectInputStream and abort the reading process.</source>
          <target state="translated">オブジェクトのデシリアライズ中に発生した例外は、ObjectInputStreamによってキャッチされ、読み込み処理を中止します。</target>
        </trans-unit>
        <trans-unit id="2f1f820dee5a20c4c2c6dd0ca8b217f346302256" translate="yes" xml:space="preserve">
          <source>Any exception thrown by the &lt;code&gt;finalize&lt;/code&gt; method causes the finalization of this object to be halted, but is otherwise ignored.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; メソッドによって例外がスローされると、このオブジェクトの終了処理が停止しますが、それ以外の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="2a97358d1fb1964469bc5111d160cf25063c2721" translate="yes" xml:space="preserve">
          <source>Any exception thrown by this method will be ignored by the Java Virtual Machine.</source>
          <target state="translated">このメソッドがスローする例外は、Java 仮想マシンによって無視されます。</target>
        </trans-unit>
        <trans-unit id="bbe7d65e4ad502738d3dc8e64c4affcb97f035da" translate="yes" xml:space="preserve">
          <source>Any exceptions thrown during evaluation of either predicate are relayed to the caller; if evaluation of this predicate throws an exception, the &lt;code&gt;other&lt;/code&gt; predicate will not be evaluated.</source>
          <target state="translated">いずれかの述語の評価中にスローされた例外は、呼び出し元に中継されます。この述部の評価が例外をスローした場合、 &lt;code&gt;other&lt;/code&gt; 述部は評価されません。</target>
        </trans-unit>
        <trans-unit id="c41eebe53d771812bc41581b7c863684efc0c724" translate="yes" xml:space="preserve">
          <source>Any existing binding using the same &lt;code&gt;name&lt;/code&gt; is replaced. If the new (or existing) &lt;code&gt;value&lt;/code&gt; implements the &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; interface, the object represented by &lt;code&gt;value&lt;/code&gt; is notified appropriately.</source>
          <target state="translated">同じ &lt;code&gt;name&lt;/code&gt; を使用している既存のバインディングは置き換えられます。新しい（または既存の） &lt;code&gt;value&lt;/code&gt; が &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; インターフェースを実装している場合、 &lt;code&gt;value&lt;/code&gt; で表されるオブジェクトは適切に通知されます。</target>
        </trans-unit>
        <trans-unit id="d71ed851abc3904241c5eefda5d469bce8ffc3ab" translate="yes" xml:space="preserve">
          <source>Any explicit PropertyEditor Class that has been registered for this property. Normally this will return &quot;null&quot;, indicating that no special editor has been registered, so the PropertyEditorManager should be used to locate a suitable PropertyEditor.</source>
          <target state="translated">このプロパティに登録されている明示的なPropertyEditorクラス。通常、これは特別なエディタが登録されていないことを示す &quot;null&quot; を返すので、PropertyEditorManager を使用して適切な PropertyEditor を探す必要があります。</target>
        </trans-unit>
        <trans-unit id="53a4eb722044afd1ba5b140da6b8e460dd218ac9" translate="yes" xml:space="preserve">
          <source>Any failure results in an &lt;code&gt;IllegalArgumentException&lt;/code&gt; being thrown; success results in the method returning silently.</source>
          <target state="translated">失敗すると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。成功すると、メソッドはサイレントに戻ります。</target>
        </trans-unit>
        <trans-unit id="43a1cff76d61261e59675bd5733a3761511cfbef" translate="yes" xml:space="preserve">
          <source>Any fields that are not &lt;code&gt;ChronoField&lt;/code&gt; are processed. This is achieved using &lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;TemporalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; ではないフィールドは処理されます。これは&lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して実現されます。フィールド解決に関するドキュメントは、 &lt;code&gt;TemporalField&lt;/code&gt; の実装にあります。</target>
        </trans-unit>
        <trans-unit id="45b3bab1075ac8e42b42283e784fd96fea9bed27" translate="yes" xml:space="preserve">
          <source>Any image may be transcoded (written to a different format than the one it was originally stored in) simply by performing a read operation followed by a write operation. However, loss of data may occur in this process due to format differences.</source>
          <target state="translated">どのような画像であっても、読み取り操作の後に書き込み操作を行うだけで、トランスコード(元々保存されていたフォーマットとは異なるフォーマットに書き込まれる)されることがあります。ただし、この場合、フォーマットの違いによりデータが失われることがあります。</target>
        </trans-unit>
        <trans-unit id="8bb94b9736316750211463bb48dfecb25de6b533" translate="yes" xml:space="preserve">
          <source>Any letter except an uppercase letter (subtraction)</source>
          <target state="translated">大文字以外の文字(引き算</target>
        </trans-unit>
        <trans-unit id="107e845776e2ec9d398888797921f4899d010ba7" translate="yes" xml:space="preserve">
          <source>Any listener can throw a &lt;code&gt;PropertyVetoException&lt;/code&gt; to veto the update. If one of the listeners vetoes the update, this method passes a new &quot;undo&quot; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; that reverts to the old value to all listeners that already confirmed this update and throws the &lt;code&gt;PropertyVetoException&lt;/code&gt; again.</source>
          <target state="translated">どのリスナーも、更新を拒否するために &lt;code&gt;PropertyVetoException&lt;/code&gt; をスローできます。リスナーの1つが更新を拒否した場合、このメソッドは、この更新をすでに確認しているすべてのリスナーに古い値に戻る新しい「元に戻す」 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; を渡し、 &lt;code&gt;PropertyVetoException&lt;/code&gt; を再度スローします。</target>
        </trans-unit>
        <trans-unit id="c218a420e7a7272f5f9f2950987da9ef7a7468d9" translate="yes" xml:space="preserve">
          <source>Any log level definitions in the new configuration file will be applied using Logger.setLevel(), if the target Logger exists.</source>
          <target state="translated">新しい構成ファイル内のログ レベル定義は、ターゲット ロガーが存在する場合、Logger.setLevel()を使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="d9989a669eff20f7f8dfd94edbd772da8a73e9b3" translate="yes" xml:space="preserve">
          <source>Any method that converts directly or implicitly from a local date-time to an instant by obtaining the offset has the potential to be complicated.</source>
          <target state="translated">オフセットを取得することで、直接または暗黙のうちにローカルな日時から瞬時に変換する方法は、複雑になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7e5ee0c44d1728d11cbb240937d0fd20878a15fb" translate="yes" xml:space="preserve">
          <source>Any methods/properties/events in the &lt;code&gt;stopClass&lt;/code&gt; or in its parent classes will be ignored in the analysis.</source>
          <target state="translated">&lt;code&gt;stopClass&lt;/code&gt; またはその親クラスのメソッド/プロパティ/イベントは、分析では無視されます。</target>
        </trans-unit>
        <trans-unit id="adffc5f0c791cef37b5f4d963df7ea1ffcf34345" translate="yes" xml:space="preserve">
          <source>Any non-ASCII characters in the filter string should be represented by the appropriate Java (Unicode) characters, and not encoded as UTF-8 octets. Alternately, the &quot;backslash-hexcode&quot; notation described in RFC 2254 may be used.</source>
          <target state="translated">フィルタ文字列内の非ASCII文字は、適切なJava(Unicode)文字で表現しなければならず、UTF-8オクテットとしてエンコードしてはいけません。別の方法として、RFC 2254に記載されている「バックスラッシュ-ヘクスコード」表記法を使用してもよい。</target>
        </trans-unit>
        <trans-unit id="300191ca8fb6c66816fbb3f73db3afa08a125eba" translate="yes" xml:space="preserve">
          <source>Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.</source>
          <target state="translated">このメソッドが返す値以下の非負の整数は、このマッチャの有効なグループインデックスであることが保証されます。</target>
        </trans-unit>
        <trans-unit id="9f683bf3bc4218bc8c956b780518408ebd4b0368" translate="yes" xml:space="preserve">
          <source>Any number of listeners can be added with this method. The same listener can be added more than once with the same or different values for the filter and handback. There is no special treatment of a duplicate entry. For example, if a listener is registered twice with no filter, then its &lt;code&gt;handleNotification&lt;/code&gt; method will be called twice for each notification.</source>
          <target state="translated">このメソッドでは、任意の数のリスナーを追加できます。フィルターとハンドバックに同じ値または異なる値を使用して、同じリスナーを複数回追加できます。重複したエントリの特別な扱いはありません。たとえば、リスナーがフィルターなしで2回登録されている場合、その &lt;code&gt;handleNotification&lt;/code&gt; メソッドは、通知ごとに2回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4ea5d57e1412c6f0ff23fd2f5e9d40128335d2ea" translate="yes" xml:space="preserve">
          <source>Any object with a reference to a context may examine that context's environment. Sensitive information such as clear-text passwords should not be stored there unless the implementation is known to protect it.</source>
          <target state="translated">コンテキストへの参照を持つオブジェクトは、そのコンテキストの環境を調べることができます。明文のパスワードのような機密情報は、実装が保護することが知られていない限り、そこに保存されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="96ec2551dee0560db77417e8e7ac1460fc24f71f" translate="yes" xml:space="preserve">
          <source>Any occurrence of a leading quote, an escape preceding any meta character, an escape at the end of a component, or a component separator character in an unquoted component must be preceded by an escape character when that component is being composed into a composite name string. Alternatively, to avoid adding escape characters as described, the entire component can be quoted using matching single quotes or matching double quotes. A single quote occurring within a double-quoted component is not considered a meta character (and need not be escaped), and vice versa.</source>
          <target state="translated">引用符で囲まれていないコンポーネントに先頭の引用符、メタ文字の前のエスケープ、コンポーネントの最後のエスケープ、またはコンポーネントの区切り文字が出現した場合は、そのコンポーネントを合成名文字列に合成する際に、エスケープ文字を前に付けなければなりません。あるいは、前述のようなエスケープ文字の追加を避けるために、コンポーネント全体を一致する単一引用符または一致する二重引用符を使用して引用することもできます。二重引用符で囲まれたコンポーネントの中にある単一引用符はメタ文字とはみなされません(エスケープされる必要はありません)。</target>
        </trans-unit>
        <trans-unit id="cf65ceb97fa17d8693f3c92ccbda2a56f1101545" translate="yes" xml:space="preserve">
          <source>Any option can be disabled using this method with a Boolean(false):</source>
          <target state="translated">任意のオプションは、このメソッドを使用して Boolean(false)で無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="83222d6a6a8be24824517f515b053860a796eb09" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the characters in the specified range are cleared.</source>
          <target state="translated">指定した範囲の文字の他の属性設定はクリアされます。</target>
        </trans-unit>
        <trans-unit id="9efddb73bbf24fe55be9d68529e3d46d5f711dac" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the specified character are cleared.</source>
          <target state="translated">指定した文字の他の属性設定はクリアされます。</target>
        </trans-unit>
        <trans-unit id="1f78004cd873ef1a410b3680ee50209be7ffeeb6" translate="yes" xml:space="preserve">
          <source>Any other kind.</source>
          <target state="translated">他の種類でも</target>
        </trans-unit>
        <trans-unit id="d9c86e4eb6f621b42958b1a843ad72185d41b2ef" translate="yes" xml:space="preserve">
          <source>Any other type</source>
          <target state="translated">その他のタイプ</target>
        </trans-unit>
        <trans-unit id="851fbda97d1409c17bdb24e7ea6918c7d4aa30c9" translate="yes" xml:space="preserve">
          <source>Any other value of scope defined in the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; のデフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; で定義されているスコープの他の値。</target>
        </trans-unit>
        <trans-unit id="dedeb302c3a6428810deb8991543f254ecef1760" translate="yes" xml:space="preserve">
          <source>Any out of range field values are either normalized in lenient mode or detected as an invalid value in non-lenient mode.</source>
          <target state="translated">範囲外のフィールド値は、lenient モードで正規化されるか、non-lenient モードでは無効な値として検出されます。</target>
        </trans-unit>
        <trans-unit id="041c0ffef05e50b7d6de996b906938b626d2c58a" translate="yes" xml:space="preserve">
          <source>Any outstanding asynchronous operations upon this channel will complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. After a channel is closed, further attempts to initiate asynchronous I/O operations complete immediately with cause &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルでの未処理の非同期操作は、例外&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; で&lt;/a&gt;完了します。チャネルが閉じられた後、非同期I / O操作を開始するためのさらなる試行は、原因&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; で&lt;/a&gt;直ちに完了します。</target>
        </trans-unit>
        <trans-unit id="53c63060d7bd1b7bfcd91dd7d32915aac6b137c5" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter.</source>
          <target state="translated">設定されていない（または &lt;code&gt;null&lt;/code&gt; に設定されている）パラメーターは、そのパラメーターのデフォルト値に設定されます。</target>
        </trans-unit>
        <trans-unit id="2a775b13110119846aa06fa7be3ccd97e1c6e616" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter. The default value for the &lt;code&gt;date&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;, which indicates the current time when the path is validated. The default for the remaining parameters is the least constrained.</source>
          <target state="translated">設定されていない（または &lt;code&gt;null&lt;/code&gt; に設定されている）パラメーターは、そのパラメーターのデフォルト値に設定されます。 &lt;code&gt;date&lt;/code&gt; パラメーターのデフォルト値は &lt;code&gt;null&lt;/code&gt; で、パスが検証される現在の時刻を示します。残りのパラメーターのデフォルトは、最も制約が少ないパラメーターです。</target>
        </trans-unit>
        <trans-unit id="db628c194bd82b19e213d28412a78c7e9fed989e" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;imageStarted&lt;/code&gt; method, followed by calls to their &lt;code&gt;imageProgress&lt;/code&gt; method as the read progresses. Finally their &lt;code&gt;imageComplete&lt;/code&gt; method will be called. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、 &lt;code&gt;imageStarted&lt;/code&gt; メソッドを呼び出して通知され、読み取りの進行に &lt;code&gt;imageProgress&lt;/code&gt; てimageProgressメソッドが呼び出されます。最後に、それらの &lt;code&gt;imageComplete&lt;/code&gt; メソッドが呼び出されます。 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; オブジェクトは、ピクセルがデコードされるときに、読み取り中に別のときに更新される場合があります。最後に、 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; オブジェクトは、デコード中に発生した致命的でない警告の通知を受け取ります。</target>
        </trans-unit>
        <trans-unit id="62102b698a71e4c9c4abbbe7b44786ce0be217d2" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method once. Then, for each image decoded, there will be a call to &lt;code&gt;imageStarted&lt;/code&gt;, followed by calls to &lt;code&gt;imageProgress&lt;/code&gt; as the read progresses, and finally to &lt;code&gt;imageComplete&lt;/code&gt;. The &lt;code&gt;sequenceComplete&lt;/code&gt; method will be called after the last image has been decoded. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、それらの &lt;code&gt;sequenceStarted&lt;/code&gt; メソッドを1回呼び出すことによって通知されます。次に、デコードされた各イメージ &lt;code&gt;imageStarted&lt;/code&gt; 、imageStartedへの呼び出しがあり、続いて読み取りの進行に &lt;code&gt;imageProgress&lt;/code&gt; への呼び出しがあり、最後に &lt;code&gt;imageComplete&lt;/code&gt; への呼び出しがあります。 &lt;code&gt;sequenceComplete&lt;/code&gt; の最後の画像がデコードされた後にメソッドが呼び出されます。 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; オブジェクトは、ピクセルがデコードされるときに、読み取り中に別のときに更新される場合があります。最後に、 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; オブジェクトは、デコード中に発生した致命的でない警告の通知を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ca39857de74e7ac39381439fd87061deb726042b" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt;, &lt;code&gt;thumbnailProgress&lt;/code&gt;, and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、それらの &lt;code&gt;thumbnailStarted&lt;/code&gt; 、 &lt;code&gt;thumbnailProgress&lt;/code&gt; 、および &lt;code&gt;thumbnailComplete&lt;/code&gt; メソッドを呼び出すことによって通知されます。</target>
        </trans-unit>
        <trans-unit id="7f95041bb4c646e50368fd20b19a88ebfd0d55c8" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;readUpdateListener&lt;/code&gt;s are ignored, as there is no &lt;code&gt;BufferedImage&lt;/code&gt;, but all other listeners are called exactly as they are for the &lt;a href=&quot;imagereader#read-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; がないため、登録された &lt;code&gt;readUpdateListener&lt;/code&gt; は無視されますが、他のすべてのリスナーは、&lt;a href=&quot;imagereader#read-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドの場合とまったく同じように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="87d13eda094f0ad03e413e4b5c65a1a29a6cef8b" translate="yes" xml:space="preserve">
          <source>Any remaining unresolved fields are cross-checked against any date and/or time that was resolved. Thus, an earlier stage would resolve (year + month + day-of-month) to a date, and this stage would check that day-of-week was valid for the date.</source>
          <target state="translated">未解決のフィールドが残っている場合は、解決された日付および/または時間とクロスチェックされます。したがって、以前のステージでは(年+月+月の日)を日付に解決し、このステージでは曜日が日付に対して有効であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="dfd48c26a3b03a78e7860a060e2b4a38c377670f" translate="yes" xml:space="preserve">
          <source>Any sequence of letters not specified above, unrecognized letter or reserved character will throw an exception. Future versions may add to the set of patterns. It is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">上記で指定されていない文字列、認識されていない文字、予約されている文字は例外をスローします。将来のバージョンでは、パターンのセットに追加される可能性があります。将来の変更がアプリケーションを壊さないように、直接出力したいすべての文字の周りに単一引用符を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1e4b548423b731dfdca8d68f94ebd1cb5cfb2e28" translate="yes" xml:space="preserve">
          <source>Any string that conforms to these two rules is a valid path name.</source>
          <target state="translated">これら2つのルールに合致する文字列はすべて有効なパス名となります。</target>
        </trans-unit>
        <trans-unit id="9387c14f4843584ad117916bb7bbe50f5a1ee787" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt;&lt;/a&gt; upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットの&lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt; &lt;/a&gt;で現在ブロックされているスレッドは、&lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="c2cd774b4060d3bb9dddf39a9b8028c51a677bb5" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this channel will receive an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルのI / O操作で現在ブロックされているスレッドは、&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="72c0c2f205092d5072a2a22f3791eb0db65dc7f2" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットのI / O操作で現在ブロックされているスレッドは、&lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="0c7c34381609cdca760a9db8c60f4a96439aea3e" translate="yes" xml:space="preserve">
          <source>Any uncancelled keys still associated with this selector are invalidated, their channels are deregistered, and any other resources associated with this selector are released.</source>
          <target state="translated">このセレクタに関連付けられているキャンセルされていないキーは無効となり、そのチャンネルは登録解除され、このセレクタに関連付けられているその他のリソースは解放されます。</target>
        </trans-unit>
        <trans-unit id="628ebfd2922c6acc3de30c04be5a4bf2c671e263" translate="yes" xml:space="preserve">
          <source>Any unmatched quote is treated as closed at the end of the given pattern. For example, pattern string &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; is treated as pattern &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt;.</source>
          <target state="translated">一致しない引用符は、指定されたパターンの最後で閉じられたものとして扱われます。たとえば、パターン文字列 &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; はパターン &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt; として扱われます。</target>
        </trans-unit>
        <trans-unit id="dd27d9a68564e0eae294e240b071760491439b1b" translate="yes" xml:space="preserve">
          <source>Any unrecognized letter is an error. Any non-letter character, other than '[', ']', '{', '}', '#' and the single quote will be output directly. Despite this, it is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">認識できない文字はエラーになります。'[',']'、'{','}','#' とシングルクォート以外の文字は直接出力されます。にもかかわらず、将来の変更がアプリケーションを壊さないようにするために、直接出力したいすべての文字の周りにシングルクォートを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="56e1bb417b1be069d45397dd523654de5fec992f" translate="yes" xml:space="preserve">
          <source>Any unsupported key read from the keytab is ignored and not included in the result.</source>
          <target state="translated">keytabから読み込まれたサポートされていないキーは無視され、結果には含まれません。</target>
        </trans-unit>
        <trans-unit id="0598d0c2ee3f195ed041631bfb7386ddfa3d1f2a" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;EST, CST, MST&lt;/code&gt;, or &lt;code&gt;PST&lt;/code&gt;, ignoring case, is recognized as referring to the time zone in North America that is five, six, seven, or eight hours west of Greenwich, respectively. Any word that matches &lt;code&gt;EDT, CDT, MDT&lt;/code&gt;, or &lt;code&gt;PDT&lt;/code&gt;, ignoring case, is recognized as referring to the same time zone, respectively, during daylight saving time.</source>
          <target state="translated">&lt;code&gt;EST, CST, MST&lt;/code&gt; 、または &lt;code&gt;PST&lt;/code&gt; に一致するすべての単語は、大文字と小文字を区別せずに、それぞれグリニッジの5、6、7、または8時間西にある北米のタイムゾーンを参照するものとして認識されます。大文字と小文字を区別せずに、 &lt;code&gt;EDT, CDT, MDT&lt;/code&gt; 、または &lt;code&gt;PDT&lt;/code&gt; に一致する単語は、夏時間の間、それぞれ同じタイムゾーンを参照していると認識されます。</target>
        </trans-unit>
        <trans-unit id="7030d1cd7acca10773e929a59ec13d7ff20286b7" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;GMT, UT&lt;/code&gt;, or &lt;code&gt;UTC&lt;/code&gt;, ignoring case, is treated as referring to UTC.</source>
          <target state="translated">&lt;code&gt;GMT, UT&lt;/code&gt; 、または &lt;code&gt;UTC&lt;/code&gt; に一致するすべての単語は、大文字と小文字を区別せずに、UTCを参照するものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="2123a2eaebb51f29f226114e59a7745c38e91e04" translate="yes" xml:space="preserve">
          <source>Any word that matches any prefix of &lt;code&gt;SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt;, or &lt;code&gt;SATURDAY&lt;/code&gt;, ignoring case, is ignored. For example, &lt;code&gt;sat, Friday, TUE&lt;/code&gt;, and &lt;code&gt;Thurs&lt;/code&gt; are ignored.</source>
          <target state="translated">&lt;code&gt;SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt; 、または &lt;code&gt;SATURDAY&lt;/code&gt; のいずれかの接頭辞と一致する単語は、大文字と小文字を区別せずに無視されます。たとえば、 &lt;code&gt;sat, Friday, TUE&lt;/code&gt; 、 &lt;code&gt;Thurs&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="616df408d0e2b2d9480d2eee4a38d314edf1739e" translate="yes" xml:space="preserve">
          <source>Apart from the checking of type descriptors, a method handle's capability to call its underlying method is unrestricted. If a method handle is formed on a non-public method by a class that has access to that method, the resulting handle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">型記述子のチェックとは別に、その下にあるメソッドを呼び出すためのメソッド・ハンドルの能力は制限されていません。メソッド・ハンドルが、そのメソッドにアクセスできるクラスによって非公開のメソッド上に形成されている場合、結果として得られたハンドルは、そのメソッドへの参照を受け取る呼び出し元であれば、どこでも使用することができます。</target>
        </trans-unit>
        <trans-unit id="aa35f1d1815459e2c58aacf0ac9c9edc56fedf53" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry</source>
          <target state="translated">AppConfigurationEntry</target>
        </trans-unit>
        <trans-unit id="6de33db1728597244fb7ba55a556b20fae04eacd" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag</target>
        </trans-unit>
        <trans-unit id="b7a0952a5172ce435de0ecaf57798e494da965f9" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag.toString()</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag.toString()</target>
        </trans-unit>
        <trans-unit id="69adaf2fe191bb0a039f8cac2bf5f99b1257d28e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getControlFlag()</source>
          <target state="translated">AppConfigurationEntry.getControlFlag()</target>
        </trans-unit>
        <trans-unit id="2e4d30a8a676f100270662efd541b4f9aa55b24e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getLoginModuleName()</source>
          <target state="translated">AppConfigurationEntry.getLoginModuleName()</target>
        </trans-unit>
        <trans-unit id="80a74f497ea859c38bc9ed5e62395b51d8a16d44" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getOptions()</source>
          <target state="translated">AppConfigurationEntry.getOptions()</target>
        </trans-unit>
        <trans-unit id="e96335f31dca923971fca83bb7d266b9f6649b68" translate="yes" xml:space="preserve">
          <source>Appendable</source>
          <target state="translated">Appendable</target>
        </trans-unit>
        <trans-unit id="11a860f1c6b7689ad6a213a9174bafe276cbd0d1" translate="yes" xml:space="preserve">
          <source>Appendable.append()</source>
          <target state="translated">Appendable.append()</target>
        </trans-unit>
        <trans-unit id="d53172897c9eb8037d26348365a16f64403f724a" translate="yes" xml:space="preserve">
          <source>Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface.</source>
          <target state="translated">アペンドブルは必ずしもマルチスレッドアクセスが安全とは限りません。スレッドの安全性は、このインターフェイスを拡張して実装するクラスの責任です。</target>
        </trans-unit>
        <trans-unit id="8f98fb3d99eb6387339869d14cad794715865769" translate="yes" xml:space="preserve">
          <source>Appends a character literal to the formatter.</source>
          <target state="translated">文字リテラルをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="281820819f429504ff3a6174eb989801d1b94191" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, new IIOImage(image,
 null, null), null)&lt;/code&gt;.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを持つ単一の画像で構成される完全な画像ストリームを出力に追加します。このメソッドは、 &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="082ed2fbeb6ea36a03039ae30cc1f13d37c03cf6" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output. Any necessary header information is included. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">単一の画像と関連するストリームを含む完全な画像ストリーム、および画像メタデータとサムネイルを出力に追加します。必要なヘッダー情報が含まれています。出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; の場合、現在のシーク位置より前の既存のコンテンツは影響を受けず、読み取りまたは書き込み可能である必要はありません。</target>
        </trans-unit>
        <trans-unit id="18ebb8ee6ccf16d140e00b450c04c71131d11a2b" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, image, null)&lt;/code&gt;.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを含む単一の画像を含む完全な画像ストリームを出力に追加します。このメソッドは、 &lt;code&gt;write(null, image, null)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="abca56478705acafda5962bca0f06124d244612d" translate="yes" xml:space="preserve">
          <source>Appends a default value for a field to the formatter for use in parsing.</source>
          <target state="translated">解析で使用するために、フィールドのデフォルト値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="6d0408587bdab66748506d5ccffef80210dda614" translate="yes" xml:space="preserve">
          <source>Appends a formatter to the builder which will optionally format/parse.</source>
          <target state="translated">ビルダーにフォーマッタを追加し、オプションでフォーマット/パースを行います。</target>
        </trans-unit>
        <trans-unit id="bb68160d57d05f66cb98ca9aaf61f00cc94fc06a" translate="yes" xml:space="preserve">
          <source>Appends a localized date-time pattern to the formatter.</source>
          <target state="translated">局所化された日時パターンをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="7246f1a135cf1661873c64195d4d1ddf2e277ebc" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the existing contents of the output prior to the current seek position may be flushed, and need not be readable or writable, unless the plug-in needs to be able to patch up the header information when &lt;code&gt;endWriteSequence&lt;/code&gt; is called (</source>
          <target state="translated">単一の画像と関連するメタデータとサムネイルを出力に追加します。出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; である場合、 &lt;code&gt;endWriteSequence&lt;/code&gt; が呼び出されたときにプラグインがヘッダー情報にパッチを適用できる必要がない限り、現在のシーク位置より前の出力の既存のコンテンツはフラッシュされる可能性があり、読み取りまたは書き込み可能である必要はありません。（</target>
        </trans-unit>
        <trans-unit id="32d3b6c48828d9d8a5d3b4841f37611b121fbd03" translate="yes" xml:space="preserve">
          <source>Appends a string literal to the formatter.</source>
          <target state="translated">文字列リテラルをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="f3de7accc40cc007982752ee97a632514266c812" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; のサブシーケンスをこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="0e356f7ac511797cc61434da9df3dfdcd3a70dd3" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字シーケンスのサブシーケンスをこの &lt;code&gt;Appendable&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="7befa15893242af110648efcab30eacc7923163f" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this buffer</source>
          <target state="translated">指定された文字列の一部をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="c3cf7e5ef845ab525de4a8d21ed77f112d2fe332" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this output stream.</source>
          <target state="translated">指定された文字列の一部をこの出力ストリームに追加します。</target>
        </trans-unit>
        <trans-unit id="f81662094bc46ddeeaa6f7e0f83ca0ae28c7e885" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer.</source>
          <target state="translated">指定された文字列の一部をこのライタに追加します。</target>
        </trans-unit>
        <trans-unit id="277fcdbc9374c81d3075ff361cb702c1a8a0e406" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer. &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字シーケンスのサブシーケンスをこのライターに追加します。 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0574c7f0a86f5650f0f8ef583a0603eae42daad2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)</source>
          <target state="translated">指定された Collection のすべての要素を、指定された Collection の Iterator が返す順に、この Vector の末尾に追加します。この操作の実行中に指定された Collection が変更された場合、この操作の動作は未定義です。(これは、指定された Collection がこの Vector であり、この Vector が空でない場合、この呼び出しの動作は未定義であることを意味します)。</target>
        </trans-unit>
        <trans-unit id="bb43596870d59b0e0d3cf29a0529c953b660e5d6" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションの要素のうち、このリストにまだ含まれていないものをすべて、指定されたコレクションのイテレータによって返された順に、このリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="dcda93a6791cda5e9c4f7954cfea2259b46bfd83" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a deque to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションの反復子によって返される順序で、この両端キューの末尾に追加します。両端キューの &lt;code&gt;addAll&lt;/code&gt; をそれ自体に追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="397d3730ee19812406d353adf8610e6cd03599c1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified collection is this list, and this list is nonempty.)</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定されたコレクションの Iterator から返された順に、このリストの末尾に追加します。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は未定義です (このことは、指定されたコレクションの Iterator によって返された順にこのリストの最後に要素を追加することを意味します)。(これは、指定されたコレクションがこのリストであり、このリストが空ではない場合、この呼び出しの動作は未定義であることを意味します)。</target>
        </trans-unit>
        <trans-unit id="95d62f71c6304dbb7e65e70d817dc7c858d790ce" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの末尾に追加します(オプションの操作)。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は不定です。(指定されたコレクションがこのリストであり、それが空でない場合に発生することに注意してください)。</target>
        </trans-unit>
        <trans-unit id="849f59f09a7e7d4b1d5f159fb019f744f182b6f2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="50dc125948b2483e5ca1254bc5728d97989acc9b" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの末尾に追加します。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は不定です。(指定されたコレクションがこのリストであり、それが空でない場合に発生することに注意してください)。</target>
        </trans-unit>
        <trans-unit id="fc09be9b9a0a1d52de670a92bd12013c7ad6f7f3" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションの反復子によって返される順序で、このキューの最後に追加します。キューの &lt;code&gt;addAll&lt;/code&gt; をそれ自体に追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="9fe0cf973e8832dacac57cf537cd2dab762e757b" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified to the end of the list, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">アペンド内のすべての要素 &lt;code&gt;AttributeList&lt;/code&gt; それらがの反復子によって返される順番で、リストの末尾に指定され &lt;code&gt;AttributeList&lt;/code&gt; 指定しました。</target>
        </trans-unit>
        <trans-unit id="c7ac69fdd545a8295e9282388ba7c224995c8342" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleList specified.</source>
          <target state="translated">指定された RoleList のすべての要素を、指定された RoleList の Iterator が返す順番でリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="b6eae929bd5fa510fc8fc2b75f2780993eb58230" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleUnresolvedList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.</source>
          <target state="translated">指定された RoleUnresolvedList のすべての要素を、指定された RoleUnresolvedList の Iterator が返す順序でリストの末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="45f1980f0df46580be48f61880766db0755d50d9" translate="yes" xml:space="preserve">
          <source>Appends all the elements of a formatter to the builder.</source>
          <target state="translated">フォーマッタのすべての要素をビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="31b641689af075ef5c48a0639be6ca8ac79d50a2" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits.</source>
          <target state="translated">ISO-8601を使用して、小数点以下の桁数を制御してフォーマッタに瞬間を追加します。</target>
        </trans-unit>
        <trans-unit id="57800dac739f3809ff175f6143b1b045f21851d4" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter, formatting fractional digits in groups of three.</source>
          <target state="translated">ISO-8601を使用した瞬間をフォーマッタに追加し、3つのグループに分けて小数点以下の数字をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b8b255024c76d062ff8b118ac6eca861d7631194" translate="yes" xml:space="preserve">
          <source>Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.</source>
          <target state="translated">ISO」や「ThaiBuddhist」などのクロノロジーIDをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="37cdd5a8434d4d4e821fd8cc820f46ad90144d63" translate="yes" xml:space="preserve">
          <source>Appends the chronology name to the formatter.</source>
          <target state="translated">フォーマッタに年表名を追加します。</target>
        </trans-unit>
        <trans-unit id="0c71eddcbc6b0d34240cdfe59e9946e4d6649e1f" translate="yes" xml:space="preserve">
          <source>Appends the element, if not present.</source>
          <target state="translated">要素が存在しない場合は追加します。</target>
        </trans-unit>
        <trans-unit id="6b894f08dc1016bbdc27bc779c7964129fbe006d" translate="yes" xml:space="preserve">
          <source>Appends the elements defined by the specified pattern to the builder.</source>
          <target state="translated">指定されたパターンで定義された要素をビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="e38b63f8db7af830809ba065e424033c6009df43" translate="yes" xml:space="preserve">
          <source>Appends the fractional value of a date-time field to the formatter.</source>
          <target state="translated">日付時間フィールドの端数値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="97d46862568414c0b9e367d4cdf281bea3e7e493" translate="yes" xml:space="preserve">
          <source>Appends the localized zone offset, such as 'GMT+01:00', to the formatter.</source>
          <target state="translated">地域化されたゾーンオフセット('GMT+01:00' など)をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="fd286ce1d15d7645892b282499aa1ecce4aa925e" translate="yes" xml:space="preserve">
          <source>Appends the reduced value of a date-time field to the formatter.</source>
          <target state="translated">日付-時刻フィールドの縮小値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="d23820a391259610c6b7bb21a498a57e376f2b05" translate="yes" xml:space="preserve">
          <source>Appends the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="403adf760efb7fe7cb1aa666063d328faf97f09e" translate="yes" xml:space="preserve">
          <source>Appends the specified &lt;code&gt;StringBuffer&lt;/code&gt; to this sequence.</source>
          <target state="translated">指定された &lt;code&gt;StringBuffer&lt;/code&gt; をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="5892314ebff890abad54a7a7be692ff3ea762427" translate="yes" xml:space="preserve">
          <source>Appends the specified URL to the list of URLs to search for classes and resources.</source>
          <target state="translated">クラスやリソースを検索するためのURLのリストに、指定したURLを追加します。</target>
        </trans-unit>
        <trans-unit id="73915bea68ba19ae72f33dc4bfdcc44636bc7108" translate="yes" xml:space="preserve">
          <source>Appends the specified char to this buffer</source>
          <target state="translated">指定した文字をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="f10b41fc51842242ba117d2c4f767a409a2c964a" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字シーケンスをこの &lt;code&gt;Appendable&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="3075ba4f49ae6a67e39b472af9bf812da0b2253e" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this buffer</source>
          <target state="translated">指定した文字列をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="e9b0b9ea35093bbab5cb3a27f2b9ffa8024c499c" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this output stream.</source>
          <target state="translated">指定された文字列をこの出力ストリームに追加します。</target>
        </trans-unit>
        <trans-unit id="887bf872fc6b7ed418b5e718d6b3a0388c2bead1" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this writer.</source>
          <target state="translated">指定された文字列をこのライタに追加します。</target>
        </trans-unit>
        <trans-unit id="ef647ab518b3e2a40fedf796692416afcaca78e0" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字をこの &lt;code&gt;Appendable&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="1ea8d81001eaf82780b763ae2e6dacaefa1698ce" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this output stream.</source>
          <target state="translated">指定した文字をこの出力ストリームに追加します。</target>
        </trans-unit>
        <trans-unit id="3d1e8b2d88ae00633bf4795273c255496c85aafe" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this writer.</source>
          <target state="translated">指定した文字をこのライターに追加します。</target>
        </trans-unit>
        <trans-unit id="6d6377ba64cf7e458515159c18b80a0099538be1" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this Vector.</source>
          <target state="translated">指定した要素をこのベクターの末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="c349afe5e41baabf619d250f973de2631a819363" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this list (optional operation).</source>
          <target state="translated">指定された要素をリストの末尾に追加します(任意の操作)。</target>
        </trans-unit>
        <trans-unit id="e786e7cc0f0900809cfabc8dff37ab88f2b0c507" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this list.</source>
          <target state="translated">指定した要素をリストの末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="89e15512a891a8fbf4db2f5714182d60f58c57f4" translate="yes" xml:space="preserve">
          <source>Appends the specified exception to the exceptions that were suppressed in order to deliver this exception. This method is thread-safe and typically called (automatically and implicitly) by the &lt;code&gt;try&lt;/code&gt;-with-resources statement.</source>
          <target state="translated">この例外を配信するために抑制された例外に、指定された例外を追加します。このメソッドはスレッドセーフであり、通常、 &lt;code&gt;try&lt;/code&gt; -with-resourcesステートメントによって（自動的かつ暗黙的に）呼び出されます。</target>
        </trans-unit>
        <trans-unit id="088a1f0d499d8b31f5099362a31c3a6d9606e250" translate="yes" xml:space="preserve">
          <source>Appends the specified string to this character sequence.</source>
          <target state="translated">指定した文字列をこの文字列に追加します。</target>
        </trans-unit>
        <trans-unit id="2f191e8e601e6a0d6d9bd5bf4260185658ef46f9" translate="yes" xml:space="preserve">
          <source>Appends the string representation of a subarray of the &lt;code&gt;char&lt;/code&gt; array argument to this sequence.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 配列引数のサブ配列の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="db66fd97a079558f509cf7046555fa67ead53369" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;Object&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 引数の文字列表現を追加します。</target>
        </trans-unit>
        <trans-unit id="fdcfe0a57ccfd59aff3e13b380b34851f14bb38c" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;boolean&lt;/code&gt; argument to the sequence.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 引数の文字列表現をシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="f1b024e4927c67af8f6fae9e55ee4a8f6dae7b79" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;char&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="74119a37c1afbfc043dc9e471cf7fb1a05613fd6" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;char&lt;/code&gt; array argument to this sequence.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 配列引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="01ef91fecec989cf22290887f3826204d3d68916" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;codePoint&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;codePoint&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="163ff8bd37d249d282af7c101be46c5e84506eaa" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;double&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="2ea5a8324ac302b185027ecfd9539501689e5aca" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;float&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="f57211745a2b4498fd6b12988fc604c40d01fadb" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;int&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="8841ab004de348406bc2339572b5dacb3dfabf83" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;long&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 引数の文字列表現をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="b76372942da5bbdb7456c730eef6450037742063" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter using the full text style.</source>
          <target state="translated">フルテキストスタイルを使用して、日付・時刻フィールドのテキストをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="6de64cb1814bcaa101564c20928a648a625492b9" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter using the specified map to supply the text.</source>
          <target state="translated">指定されたマップを使用してテキストを供給するために、日付-時刻フィールドのテキストをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="47624b2d52e60838e636d54e86d8d936e7a86c02" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter.</source>
          <target state="translated">日時フィールドのテキストをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="e144089807b8aec12ca52afc817e29d9c32a1ef6" translate="yes" xml:space="preserve">
          <source>Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter, using the best available zone ID.</source>
          <target state="translated">Europe/Paris」や「+02:00」などのタイムゾーンIDを、利用可能な最良のゾーンIDを使用してフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="c62c30d255541630177a168af30674da0f2bf39a" translate="yes" xml:space="preserve">
          <source>Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter.</source>
          <target state="translated">Europe/Paris」や「+02:00」などのタイムゾーンIDをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="ebec0377fec25d4e0ded182c38d98da4043d0b5a" translate="yes" xml:space="preserve">
          <source>Appends the time-zone name, such as 'British Summer Time', to the formatter.</source>
          <target state="translated">フォーマッタに「British Summer Time」などのタイムゾーン名を追加します。</target>
        </trans-unit>
        <trans-unit id="fce4d833a5294e5be507295337076318cc55f391" translate="yes" xml:space="preserve">
          <source>Appends the time-zone region ID, such as 'Europe/Paris', to the formatter, rejecting the zone ID if it is a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">'Europe / Paris'などのタイムゾーン地域IDをフォーマッタに &lt;code&gt;ZoneOffset&lt;/code&gt; 、ZoneOffsetの場合はゾーンIDを拒否します。</target>
        </trans-unit>
        <trans-unit id="46b5c41f6878511d79dc2357225f0f3c59199147" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter providing full control over formatting.</source>
          <target state="translated">フォーマットの完全なコントロールを提供するフォーマッタに日付-時刻フィールドの値を追加します。</target>
        </trans-unit>
        <trans-unit id="4c16af480b92b45ba43b0fc2b238944f9add2fe0" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter using a fixed width, zero-padded approach.</source>
          <target state="translated">固定幅でゼロパッドのアプローチを用いて、日付-時刻フィールドの値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="186f7ffe827c5f1a49eb2f747df751f27687bbe4" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter using a normal output style.</source>
          <target state="translated">通常の出力スタイルを使用して、日付-時刻フィールドの値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="db208587cb329f41f68ab69d38d81b63d7b0e039" translate="yes" xml:space="preserve">
          <source>Appends the zone offset, such as '+01:00', to the formatter.</source>
          <target state="translated">ゾーンオフセット('+01:00'など)をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="488b0304818d795d79ef00b876ed6c33abb17a19" translate="yes" xml:space="preserve">
          <source>AppletInitializer</source>
          <target state="translated">AppletInitializer</target>
        </trans-unit>
        <trans-unit id="a0e9a59fc6a8081eea334fc91e80fc293bfdb9d3" translate="yes" xml:space="preserve">
          <source>AppletInitializer.activate()</source>
          <target state="translated">AppletInitializer.activate()</target>
        </trans-unit>
        <trans-unit id="00640ab6965f79d693f1a39c2c2b63fe4721b903" translate="yes" xml:space="preserve">
          <source>AppletInitializer.initialize()</source>
          <target state="translated">AppletInitializer.initialize()</target>
        </trans-unit>
        <trans-unit id="1e49f01f985d37daacd5c2ac45cd785f57acc910" translate="yes" xml:space="preserve">
          <source>Application Data - Once the communication parameters have been established and the handshake is complete, application data may flow through the &lt;code&gt;SSLEngine&lt;/code&gt;. Outbound application messages are encrypted and integrity protected, and inbound messages reverse the process.</source>
          <target state="translated">アプリケーションデータ-通信パラメータが確立されてハンドシェイクが完了すると、アプリケーションデータが &lt;code&gt;SSLEngine&lt;/code&gt; を通過する場合があります。送信アプリケーションメッセージは暗号化されて整合性が保護され、受信メッセージはプロセスを逆にします。</target>
        </trans-unit>
        <trans-unit id="1c01bfbc616afd5a098ddde578a275ebbbf2b372" translate="yes" xml:space="preserve">
          <source>Application Resource Files</source>
          <target state="translated">アプリケーションリソースファイル</target>
        </trans-unit>
        <trans-unit id="3c888e08801297fc7c9a8c9e3373ba0d954cc1a4" translate="yes" xml:space="preserve">
          <source>Application code can also create a new MBean Server, or access already-created MBean Servers, using the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">アプリケーションコードは、&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;クラスを使用して、新しいMBeanサーバーを作成したり、作成済みのMBeanサーバーにアクセスしたりすることもできます。</target>
        </trans-unit>
        <trans-unit id="ecf48d008bc04c9fba8077398c4acbc137fa56a1" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Configuration to provide a custom implementation. In addition, an instance of a Configuration object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaLoginConfig&quot;. See the Configuration section in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Configuration&quot;&gt; Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt; for a list of standard Configuration types.</source>
          <target state="translated">アプリケーションコードは、Configurationを直接サブクラス化して、カスタム実装を提供できます。さらに、Configurationオブジェクトのインスタンスは、標準のタイプで &lt;code&gt;getInstance&lt;/code&gt; ファクトリメソッドの1つを呼び出すことによって構築できます。デフォルトのポリシータイプは「JavaLoginConfig」です。標準の構成タイプのリストについては、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Configuration&quot;&gt;Java暗号化アーキテクチャの標準アルゴリズム名のドキュメント&lt;/a&gt;の構成セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9d2e568ff7065c4954d0ca7cf3c6b38197e77f6e" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Policy to provide a custom implementation. In addition, an instance of a Policy object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaPolicy&quot;.</source>
          <target state="translated">アプリケーションコードは、Policyを直接サブクラス化して、カスタム実装を提供できます。また、標準タイプの &lt;code&gt;getInstance&lt;/code&gt; ファクトリメソッドの1つを呼び出すことにより、Policyオブジェクトのインスタンスを構築できます。デフォルトのポリシータイプは「JavaPolicy」です。</target>
        </trans-unit>
        <trans-unit id="771f3f889ff6ba3070f745a76dc87772ecf1dd69" translate="yes" xml:space="preserve">
          <source>Application data (also known as plaintext or cleartext) is data which is produced or consumed by an application. Its counterpart is network data, which consists of either handshaking and/or ciphertext (encrypted) data, and destined to be transported via an I/O mechanism. Inbound data is data which has been received from the peer, and outbound data is destined for the peer.</source>
          <target state="translated">アプリケーションデータ(平文または平文とも呼ばれる)は、アプリケーションによって生成または消費されるデータです。これに相当するのがネットワークデータで、ハンドシェイクや暗号文(暗号化された)データのいずれかで構成され、I/Oメカニズムを介して転送されることになっています。インバウンドデータは相手から受信したデータであり、アウトバウンドデータは相手に向けて送信される。</target>
        </trans-unit>
        <trans-unit id="e4731649856f6c1954ff4144c23e30b90b9f5f89" translate="yes" xml:space="preserve">
          <source>Application developers should refer to their provider's documentation to find out which key specifications are supported by the &lt;a href=&quot;secretkeyfactory#generateSecret-java.security.spec.KeySpec-&quot;&gt;&lt;code&gt;generateSecret&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;secretkeyfactory#getKeySpec-javax.crypto.SecretKey-java.lang.Class-&quot;&gt;&lt;code&gt;getKeySpec&lt;/code&gt;&lt;/a&gt; methods. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">アプリケーション開発者は、キーの仕様がによってサポートされているかを見つけるために、自分のプロバイダのドキュメントを参照してください&lt;a href=&quot;secretkeyfactory#generateSecret-java.security.spec.KeySpec-&quot;&gt; &lt;code&gt;generateSecret&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;secretkeyfactory#getKeySpec-javax.crypto.SecretKey-java.lang.Class-&quot;&gt; &lt;code&gt;getKeySpec&lt;/code&gt; &lt;/a&gt;メソッド。たとえば、「SunJCE」プロバイダが提供するDES秘密鍵ファクトリは、 &lt;code&gt;DESKeySpec&lt;/code&gt; をDES鍵の透過的な表現としてサポートし、トリプルDES鍵のそのプロバイダの秘密鍵ファクトリは、トリプルDES鍵の透過的な表現として &lt;code&gt;DESedeKeySpec&lt;/code&gt; をサポートします。</target>
        </trans-unit>
        <trans-unit id="05a10d262c8adc401cafe34e37c1a23c2b26d366" translate="yes" xml:space="preserve">
          <source>Application servers are not required to support any particular form or type of mapped name, nor the ability to use mapped names. The mapped name is product-dependent and often installation-dependent. No use of a mapped name is portable.</source>
          <target state="translated">アプリケーションサーバは、特定の形式やタイプのマップドネームをサポートする必要はありませんし、マップドネームを使用する機能も必要ありません。マップされた名前は製品に依存し、多くの場合インストールに依存します。マップされた名前の使用は移植性がありません。</target>
        </trans-unit>
        <trans-unit id="53b6e2473f35ddd610a148601726bc65198ce010" translate="yes" xml:space="preserve">
          <source>Application-specified source of randomness.</source>
          <target state="translated">アプリケーションで指定されたランダム性のソース。</target>
        </trans-unit>
        <trans-unit id="132e90c01e41cbf711e24fb6067cf1406ce4cfbe" translate="yes" xml:space="preserve">
          <source>Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should rely on the &lt;code&gt;implies&lt;/code&gt; method to perform policy checks.</source>
          <target state="translated">この操作はすべてのポリシー実装でサポートされているとは限らないため、アプリケーションはこのメソッドを呼び出さないでください。アプリケーションは、 &lt;code&gt;implies&lt;/code&gt; メソッドに依存してポリシーチェックを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="e723e9edd551fe7209bf1873036ec2ae65fd9842" translate="yes" xml:space="preserve">
          <source>Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should solely rely on the &lt;code&gt;implies&lt;/code&gt; method to perform policy checks. If an application absolutely must call a getPermissions method, it should call &lt;code&gt;getPermissions(ProtectionDomain)&lt;/code&gt;.</source>
          <target state="translated">この操作はすべてのポリシー実装でサポートされているとは限らないため、アプリケーションはこのメソッドを呼び出さないでください。アプリケーションは、 &lt;code&gt;implies&lt;/code&gt; メソッドのみに依存してポリシーチェックを実行する必要があります。アプリケーションが絶対にgetPermissionsメソッドを呼び出す必要がある場合は、 &lt;code&gt;getPermissions(ProtectionDomain)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="99ab44a57e9dc2d6d20f4b64c0c5db1c3f3f24ee" translate="yes" xml:space="preserve">
          <source>Applications can override this method in subclasses of &lt;code&gt;ThreadGroup&lt;/code&gt; to provide alternative handling of uncaught exceptions.</source>
          <target state="translated">アプリケーションは、 &lt;code&gt;ThreadGroup&lt;/code&gt; のサブクラスでこのメソッドをオーバーライドして、キャッチされない例外の代替処理を提供できます。</target>
        </trans-unit>
        <trans-unit id="3ed1edc0226a5b9fdb98ea718f5c59aef398e3b0" translate="yes" xml:space="preserve">
          <source>Applications can specify &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances returned by the &lt;code&gt;getControl&lt;/code&gt; factory methods or created from a subclass of &lt;code&gt;ResourceBundle.Control&lt;/code&gt; to customize the bundle loading process. The following are examples of changing the default bundle loading process.</source>
          <target state="translated">アプリケーションは、 &lt;code&gt;getControl&lt;/code&gt; ファクトリメソッドによって返される、または &lt;code&gt;ResourceBundle.Control&lt;/code&gt; のサブクラスから作成される &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンスを指定して、バンドルのロードプロセスをカスタマイズできます。以下は、デフォルトのバンドル読み込みプロセスを変更する例です。</target>
        </trans-unit>
        <trans-unit id="c0f4b582b88b3d6f1c2968f7d0f433534f21b7f4" translate="yes" xml:space="preserve">
          <source>Applications can subclass this class to indicate similar exceptions.</source>
          <target state="translated">アプリケーションは、同様の例外を示すためにこのクラスをサブクラス化することができます。</target>
        </trans-unit>
        <trans-unit id="b5639adf96080f7fa0d069edeab3220011ef933f" translate="yes" xml:space="preserve">
          <source>Applications can use a &lt;code&gt;StreamPrintService&lt;/code&gt; obtained from a factory in place of a &lt;code&gt;PrintService&lt;/code&gt; which represents a physical printer device.</source>
          <target state="translated">アプリケーションは、物理的なプリンターデバイスを表す &lt;code&gt;PrintService&lt;/code&gt; の代わりに、ファクトリから取得した &lt;code&gt;StreamPrintService&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="3963cd69ff2fadde570d87ead539525be2c79bb1" translate="yes" xml:space="preserve">
          <source>Applications implement subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; in order to extend the manner in which the Java virtual machine dynamically loads classes.</source>
          <target state="translated">アプリケーションは、Java仮想マシンがクラスを動的にロードする方法を拡張するために、 &lt;code&gt;ClassLoader&lt;/code&gt; のサブクラスを実装します。</target>
        </trans-unit>
        <trans-unit id="3c4bc5621eb479f9d5877f4770a5ce46653ea10b" translate="yes" xml:space="preserve">
          <source>Applications locate instances of this class by calling the &lt;a href=&quot;streamprintservicefactory#lookupStreamPrintServiceFactories-javax.print.DocFlavor-java.lang.String-&quot;&gt;&lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;streamprintservicefactory#lookupStreamPrintServiceFactories-javax.print.DocFlavor-java.lang.String-&quot;&gt; &lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、このクラスのインスタンスを見つけます。</target>
        </trans-unit>
        <trans-unit id="4b587573b858a58a96fa5abac5ee6d8933768d15" translate="yes" xml:space="preserve">
          <source>Applications may override any default GUIs and provide their own controllers embedded in their own framework. All that is required is that the&lt;code&gt;activate&lt;/code&gt; method behave modally (not returning until either cancelled or committed), though it need not put up an explicitly modal dialog. Such a non-modal GUI component would be coded roughly as follows:</source>
          <target state="translated">アプリケーションは、デフォルトのGUIをオーバーライドし、独自のフレームワークに埋め込まれた独自のコントローラーを提供できます。必要なことは、明示的にモーダルダイアログを表示する必要はありませんが、 &lt;code&gt;activate&lt;/code&gt; メソッドがモーダルで動作すること（キャンセルまたはコミットされるまで返らない）だけです。このような非モーダルGUIコンポーネントは、おおよそ次のようにコーディングされます。</target>
        </trans-unit>
        <trans-unit id="f8c1f1a0575644de66b4266591eea42ecef57ba2" translate="yes" xml:space="preserve">
          <source>Applications might choose to process delegated tasks in different threads. When an &lt;code&gt;SSLEngine&lt;/code&gt; is created, the current &lt;a href=&quot;../../../java/security/accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt; is saved. All future delegated tasks will be processed using this context: that is, all access control decisions will be made using the context captured at engine creation.</source>
          <target state="translated">アプリケーションは、委任されたタスクを異なるスレッドで処理することを選択する場合があります。とき &lt;code&gt;SSLEngine&lt;/code&gt; のが作成され、現在&lt;a href=&quot;../../../java/security/accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; &lt;/a&gt;保存されます。今後のすべての委任タスクは、このコンテキストを使用して処理されます。つまり、すべてのアクセス制御の決定は、エンジンの作成時にキャプチャされたコンテキストを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="4272d2b9f815f524c6f692c44d6448c0e43bc509" translate="yes" xml:space="preserve">
          <source>Applications or applets that use an exemption mechanism may be granted stronger encryption capabilities than those which don't.</source>
          <target state="translated">免責メカニズムを使用するアプリケーションやアプレットは、そうでないものよりも強力な暗号化機能が付与される場合があります。</target>
        </trans-unit>
        <trans-unit id="d34e45e56b7625b178f394ccedba2bf275358f9a" translate="yes" xml:space="preserve">
          <source>Applications should normally obtain an instance from &lt;a href=&quot;zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt;. This factory is only intended for use when creating &lt;a href=&quot;zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、アプリケーションは&lt;a href=&quot;zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt;からインスタンスを取得する必要があります。このファクトリは、&lt;a href=&quot;zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; の&lt;/a&gt;作成時にのみ使用することを目的としています。</target>
        </trans-unit>
        <trans-unit id="962732fa9130bc39a7c591ac82bbfe99253b366a" translate="yes" xml:space="preserve">
          <source>Applications should not create their own file descriptors.</source>
          <target state="translated">アプリケーションは、独自のファイルディスクリプタを作成してはいけません。</target>
        </trans-unit>
        <trans-unit id="011adffeaaf1e10d2cacbfcf3b993f3a66b5e494" translate="yes" xml:space="preserve">
          <source>Applications should not normally invoke this method directly.</source>
          <target state="translated">アプリケーションは通常、このメソッドを直接呼び出すべきではありません。</target>
        </trans-unit>
        <trans-unit id="1c6a7fe42dc9ff4200bf574b34466584498c0fd3" translate="yes" xml:space="preserve">
          <source>Applications should throw instances of this class to indicate other illegal uses of the &lt;code&gt;null&lt;/code&gt; object. &lt;code&gt;NullPointerException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">アプリケーションは、このクラスのインスタンスをスローして、 &lt;code&gt;null&lt;/code&gt; オブジェクトの他の不正な使用を示す必要があります。 &lt;code&gt;NullPointerException&lt;/code&gt; オブジェクトは、仮想マシンによって&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;抑制が無効になっているか、スタックトレースが書き込み不可である&lt;/a&gt;かのように構築される場合があります。</target>
        </trans-unit>
        <trans-unit id="fe25f35fb35beeb62ad61ab8f11a46b5fdc2ce40" translate="yes" xml:space="preserve">
          <source>Applications that need to define a subclass of &lt;code&gt;InputStream&lt;/code&gt; must always provide a method that returns the next byte of input.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; のサブクラスを定義する必要があるアプリケーションは、常に入力の次のバイトを返すメソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="31880f2fe972133fb48d5fdc09b7d923da0cb8a5" translate="yes" xml:space="preserve">
          <source>Applications that need to define a subclass of &lt;code&gt;OutputStream&lt;/code&gt; must always provide at least a method that writes one byte of output.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; のサブクラスを定義する必要があるアプリケーションは、常に少なくとも1バイトの出力を書き込むメソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="e8847b03a0b6b50f755539e3509745b4d6d7a081" translate="yes" xml:space="preserve">
          <source>Applications that override the &lt;code&gt;clone&lt;/code&gt; method can also throw this exception to indicate that an object could not or should not be cloned.</source>
          <target state="translated">&lt;code&gt;clone&lt;/code&gt; メソッドをオーバーライドするアプリケーションもこの例外をスローして、オブジェクトを複製できなかったか、または複製してはならないことを示します。</target>
        </trans-unit>
        <trans-unit id="bdfc5456438722c57e4af0077c329cc9dc195e2e" translate="yes" xml:space="preserve">
          <source>Applications that want a stricter policy should override this method. If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; permission, and if so, return silently. This is to ensure that code granted that permission (such as the JDK itself) is allowed to manipulate any thread.</source>
          <target state="translated">より厳しいポリシーが必要なアプリケーションは、このメソッドをオーバーライドする必要があります。このメソッドがオーバーライドされている場合、オーバーライドするメソッドは、呼び出し元のスレッドに &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; 権限があるかどうかをさらに確認し、そうである場合はサイレントに戻ります。これは、その権限を付与されたコード（JDK自体など）が任意のスレッドを操作できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="34e2d7454bea95269be25ddc380b555451ae0748" translate="yes" xml:space="preserve">
          <source>Applications that want a stricter policy should override this method. If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; permission, and if so, return silently. This is to ensure that code granted that permission (such as the JDK itself) is allowed to manipulate any thread.</source>
          <target state="translated">より厳しいポリシーが必要なアプリケーションは、このメソッドをオーバーライドする必要があります。このメソッドがオーバーライドされている場合、オーバーライドするメソッドは、呼び出し元のスレッドが &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; 権限を持っているかどうかをさらに確認し、持っている場合はサイレントに戻ります。これは、その権限を付与されたコード（JDK自体など）が任意のスレッドを操作できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="c5fcbc2973f8b1d1a961945bac1ca8ebc1df910f" translate="yes" xml:space="preserve">
          <source>Applications use only the static methods of this abstract class. The instance methods are implemented by a service provider in a subclass and the unification of the results from all installed lookup classes are reported by the static methods of this class when called by the application.</source>
          <target state="translated">アプリケーションは、この抽象クラスの静的メソッドのみを使用します。インスタンスメソッドはサブクラスのサービスプロバイダによって実装され、インストールされたすべてのルックアップクラスからの結果の統一は、アプリケーションによって呼び出されたときにこのクラスの静的メソッドによって報告されます。</target>
        </trans-unit>
        <trans-unit id="8085b2ec40f77a6963a9d772f8821a4a760738cb" translate="yes" xml:space="preserve">
          <source>Applications use this class by overriding &lt;a href=&quot;authenticator#getPasswordAuthentication--&quot;&gt;&lt;code&gt;getPasswordAuthentication()&lt;/code&gt;&lt;/a&gt; in a sub-class. This method will typically use the various getXXX() accessor methods to get information about the entity requesting authentication. It must then acquire a username and password either by interacting with the user or through some other non-interactive means. The credentials are then returned as a &lt;a href=&quot;passwordauthentication&quot;&gt;&lt;code&gt;PasswordAuthentication&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">アプリケーションは、サブクラスで&lt;a href=&quot;authenticator#getPasswordAuthentication--&quot;&gt; &lt;code&gt;getPasswordAuthentication()&lt;/code&gt; &lt;/a&gt;をオーバーライドすることにより、このクラスを使用します。このメソッドは通常、さまざまなgetXXX（）アクセサーメソッドを使用して、認証を要求するエンティティに関する情報を取得します。次に、ユーザーと対話するか、他の非対話的な方法でユーザー名とパスワードを取得する必要があります。次に、資格情報が&lt;a href=&quot;passwordauthentication&quot;&gt; &lt;code&gt;PasswordAuthentication&lt;/code&gt; の&lt;/a&gt;戻り値として返されます。</target>
        </trans-unit>
        <trans-unit id="d9af378508928918978a91b776f2d39c8dbd80a3" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing hints for an internal session reuse strategy.</source>
          <target state="translated">このファクトリーメソッドを使用するアプリケーションは、内部セッション再利用戦略のヒントを提供しています。</target>
        </trans-unit>
        <trans-unit id="ed7bfe89dc2287b744eafdd591732d2e9fb94e52" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;sslcontext#createSSLEngine-java.lang.String-int-&quot;&gt;&lt;code&gt;createSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">このファクトリメソッドを使用するアプリケーションは、内部セッションの再利用戦略のヒントを提供していません。ヒントが必要な場合は、&lt;a href=&quot;sslcontext#createSSLEngine-java.lang.String-int-&quot;&gt; &lt;code&gt;createSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6739fbed1280ca989694c5498cfd3c0394faccc4" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;sslcontextspi#engineCreateSSLEngine-java.lang.String-int-&quot;&gt;&lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">このファクトリメソッドを使用するアプリケーションは、内部セッションの再利用戦略のヒントを提供していません。ヒントが必要な場合は、&lt;a href=&quot;sslcontextspi#engineCreateSSLEngine-java.lang.String-int-&quot;&gt; &lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;を代わりに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7887c222c6fe399a39e8e8a65758153aeb03db5e" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to newly accepted connections.</source>
          <target state="translated">新しく受け入れた接続にSSLParametersを適用します。</target>
        </trans-unit>
        <trans-unit id="79ba78d7bcdd2ef1aa6315a8bc3d5a4431396b29" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to this engine.</source>
          <target state="translated">このエンジンにSSLParametersを適用します。</target>
        </trans-unit>
        <trans-unit id="e85201a8248d6af8e821fba56acc7387166ad503" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to this socket.</source>
          <target state="translated">このソケットにSSLパラメータを適用します。</target>
        </trans-unit>
        <trans-unit id="f70e5aa14b98d061b144c57c1d08e4e87dea1418" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this element.</source>
          <target state="translated">この要素に訪問者を適用します。</target>
        </trans-unit>
        <trans-unit id="69489835c4b5d6eb7e6d279c3ea83008ccf5e5c3" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this type.</source>
          <target state="translated">このタイプに訪問者を適用します。</target>
        </trans-unit>
        <trans-unit id="1411b1eda0cd57f82271f22c2d75ff3043a054c4" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this value.</source>
          <target state="translated">この値に訪問者を適用します。</target>
        </trans-unit>
        <trans-unit id="e8e3598101e8440656d941dd38f4235e12b1316f" translate="yes" xml:space="preserve">
          <source>Applies capture conversion to a type.</source>
          <target state="translated">型へのキャプチャ変換を適用します。</target>
        </trans-unit>
        <trans-unit id="90ba83081f32c8fadaa4c2055d819807f1fe71e0" translate="yes" xml:space="preserve">
          <source>Applies the &lt;code&gt;AttributeValueExp&lt;/code&gt; on an MBean. This method calls &lt;a href=&quot;attributevalueexp#getAttribute-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getAttribute(name)&lt;/code&gt;&lt;/a&gt; and wraps the result as a &lt;code&gt;ValueExp&lt;/code&gt;. The value returned by &lt;code&gt;getAttribute&lt;/code&gt; must be a &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, or &lt;code&gt;Boolean&lt;/code&gt;; otherwise this method throws a &lt;code&gt;BadAttributeValueExpException&lt;/code&gt;, which will cause the containing query to be false for this &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">MBeanに &lt;code&gt;AttributeValueExp&lt;/code&gt; を適用します。このメソッドは&lt;a href=&quot;attributevalueexp#getAttribute-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getAttribute(name)&lt;/code&gt; &lt;/a&gt;を呼び出し、結果を &lt;code&gt;ValueExp&lt;/code&gt; としてラップします。 &lt;code&gt;getAttribute&lt;/code&gt; によって返される値は、 &lt;code&gt;Number&lt;/code&gt; 、 &lt;code&gt;String&lt;/code&gt; 、または &lt;code&gt;Boolean&lt;/code&gt; である必要があります。そうでない場合、このメソッドは &lt;code&gt;BadAttributeValueExpException&lt;/code&gt; をスローします。これにより、この &lt;code&gt;name&lt;/code&gt; に対して含まれているクエリがfalseになります。</target>
        </trans-unit>
        <trans-unit id="3f54a850faf032d7ed918850b33bbeda8b2dd173" translate="yes" xml:space="preserve">
          <source>Applies the QueryExp on an MBean.</source>
          <target state="translated">MBean に QueryExp を適用します。</target>
        </trans-unit>
        <trans-unit id="a94f537ce9ac93295258fdd4457c71a11f2f575a" translate="yes" xml:space="preserve">
          <source>Applies the ValueExp on a MBean.</source>
          <target state="translated">MBean に ValueExp を適用します。</target>
        </trans-unit>
        <trans-unit id="68ea95622c17c3501a71d389933a811f354722ff" translate="yes" xml:space="preserve">
          <source>Applies the given localized pattern string to this date format.</source>
          <target state="translated">指定された地域化されたパターン文字列をこの日付フォーマットに適用します。</target>
        </trans-unit>
        <trans-unit id="97ba7da6b18d975571d7145878622f49090f5a6c" translate="yes" xml:space="preserve">
          <source>Applies the given pattern string to this date format.</source>
          <target state="translated">与えられたパターン文字列をこの日付フォーマットに適用します。</target>
        </trans-unit>
        <trans-unit id="092f9872dea41f81d6bea1b5c9bf378fd0d9503d" translate="yes" xml:space="preserve">
          <source>Applies this function to the given argument.</source>
          <target state="translated">この関数を与えられた引数に適用します。</target>
        </trans-unit>
        <trans-unit id="465e66a74ccd22473b9e814ef500f5fd24a7056c" translate="yes" xml:space="preserve">
          <source>Applies this function to the given arguments.</source>
          <target state="translated">この関数は、与えられた引数に適用されます。</target>
        </trans-unit>
        <trans-unit id="1c1cc9ca4c4938bb046e1f73de81d33c228fa5b1" translate="yes" xml:space="preserve">
          <source>Applies this operator to the given operand.</source>
          <target state="translated">与えられたオペランドにこの演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="09e5471b52d0066b4fed63fbe930ae9e7f66a7de" translate="yes" xml:space="preserve">
          <source>Applies this operator to the given operands.</source>
          <target state="translated">与えられたオペランドにこの演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="40ea6f9cf1dd9e76881f086c503ed2233392c4f8" translate="yes" xml:space="preserve">
          <source>Apply the given pattern to this Format object. A pattern is a short-hand specification for the various formatting properties. These properties can also be changed individually through the various setter methods.</source>
          <target state="translated">指定されたパターンをこのFormatオブジェクトに適用します。パターンとは、さまざまな書式設定プロパティを簡単に指定することができます。これらのプロパティは、さまざまなセッターメソッドを使って個別に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="d3394fe6ba8781f349e9d2e8a1f85bedbb590239" translate="yes" xml:space="preserve">
          <source>Apply the given pattern to this Format object. The pattern is assumed to be in a localized notation. A pattern is a short-hand specification for the various formatting properties. These properties can also be changed individually through the various setter methods.</source>
          <target state="translated">指定されたパターンをこの Format オブジェクトに適用します。パターンはローカライズされた記法であることを前提としています。パターンは、さまざまな書式設定プロパティのための短い手の仕様です。これらのプロパティは、さまざまなセッターメソッドを使って個別に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="473fe811ab475410322782e93567dece51e0b8ff" translate="yes" xml:space="preserve">
          <source>Applying the method &lt;a href=&quot;character#toLowerCase-char-&quot;&gt;&lt;code&gt;Character.toLowerCase(char)&lt;/code&gt;&lt;/a&gt; to each character produces the same result</source>
          <target state="translated">&lt;a href=&quot;character#toLowerCase-char-&quot;&gt; &lt;code&gt;Character.toLowerCase(char)&lt;/code&gt; &lt;/a&gt;メソッドを各文字に適用すると、同じ結果が生成されます</target>
        </trans-unit>
        <trans-unit id="c0925034ed84c1ba3f4ae2dd1afbf8cc66850ac7" translate="yes" xml:space="preserve">
          <source>Applying the method &lt;a href=&quot;character#toUpperCase-char-&quot;&gt;&lt;code&gt;Character.toUpperCase(char)&lt;/code&gt;&lt;/a&gt; to each character produces the same result</source>
          <target state="translated">メソッド&lt;a href=&quot;character#toUpperCase-char-&quot;&gt; &lt;code&gt;Character.toUpperCase(char)&lt;/code&gt; &lt;/a&gt;を各文字に適用すると、同じ結果が生成されます</target>
        </trans-unit>
        <trans-unit id="81774a3777584c094447787ba12a1651af131e47" translate="yes" xml:space="preserve">
          <source>Architectural issues to consider</source>
          <target state="translated">考慮すべき建築的な問題</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="6dee7863f0914f6588e2684aa82d8c428b414ed9" translate="yes" xml:space="preserve">
          <source>Argument Category</source>
          <target state="translated">引数カテゴリ</target>
        </trans-unit>
        <trans-unit id="c572b8e5f06f5529375df62562cb7b867061a307" translate="yes" xml:space="preserve">
          <source>Argument Index</source>
          <target state="translated">引数インデックス</target>
        </trans-unit>
        <trans-unit id="1cf417639cd88dca5ed348977db444c372780174" translate="yes" xml:space="preserve">
          <source>ArgumentIndex</source>
          <target state="translated">ArgumentIndex</target>
        </trans-unit>
        <trans-unit id="2e5bfc7efad8b45cdc934f7fa43f90adf2a2ea6e" translate="yes" xml:space="preserve">
          <source>Arguments that appear in the argument list for &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; have the same specification as in that method. The additional arguments are interpreted as follows:</source>
          <target state="translated">&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt;の引数リストに表示される引数は、そのメソッドと同じ仕様です。追加の引数は次のように解釈されます。</target>
        </trans-unit>
        <trans-unit id="2259330fb77de2bd8dc1911ad15baf0ac1663381" translate="yes" xml:space="preserve">
          <source>ArithmeticException</source>
          <target state="translated">ArithmeticException</target>
        </trans-unit>
        <trans-unit id="6705be38307e0ff0e31175e8f380d6014e23948e" translate="yes" xml:space="preserve">
          <source>Arity limits</source>
          <target state="translated">アリティの限界</target>
        </trans-unit>
        <trans-unit id="e6033304ba65c2bf03ba37405ffb4242d91c1c5f" translate="yes" xml:space="preserve">
          <source>Arranges for (asynchronous) execution of the given task.</source>
          <target state="translated">与えられたタスクの(非同期の)実行を手配します。</target>
        </trans-unit>
        <trans-unit id="71cba7686e4af3c9e7770e896be81d3174386480" translate="yes" xml:space="preserve">
          <source>Arranges to asynchronously execute this task in the pool the current task is running in, if applicable, or using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; if not &lt;a href=&quot;forkjointask#inForkJoinPool--&quot;&gt;&lt;code&gt;inForkJoinPool()&lt;/code&gt;&lt;/a&gt;. While it is not necessarily enforced, it is a usage error to fork a task more than once unless it has completed and been reinitialized. Subsequent modifications to the state of this task or any data it operates on are not necessarily consistently observable by any thread other than the one executing it unless preceded by a call to &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; or related methods, or a call to &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">現在のタスクが実行されているプールでこのタスクを非同期で実行するように&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;該当する場合）、またはinForkJoinPool（）でない場合は&lt;a href=&quot;forkjointask#inForkJoinPool--&quot;&gt; &lt;code&gt;inForkJoinPool()&lt;/code&gt; &lt;/a&gt;ます。これは必ずしも強制されているわけではありませんが、タスクが完了して再初期化されない限り、タスクを複数回フォークすると使用法エラーになります。&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;または関連メソッドの呼び出し、または&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; の&lt;/a&gt;呼び出しが &lt;code&gt;true&lt;/code&gt; を返すことが前にある場合を除き、このタスクまたは操作対象のデータに対するその後の変更は、必ずしもそれを実行しているスレッド以外のスレッドから一貫して監視できるとは限りません。。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="bb7ef34866c1c3791e0e32c3560fdda96203d676" translate="yes" xml:space="preserve">
          <source>Array of class constants or enum constants</source>
          <target state="translated">クラス定数または列挙定数の配列</target>
        </trans-unit>
        <trans-unit id="569807c2a3ec4f7f160eb054479694d8449216d8" translate="yes" xml:space="preserve">
          <source>Array of printing attribute categories that the client can specify as a doc-level or job-level attribute in a Print Request. Each element in the array is a &lt;a href=&quot;../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; that implements interface &lt;a href=&quot;attribute/attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt;. The array is empty if no categories are supported.</source>
          <target state="translated">クライアントが印刷要求でドキュメントレベルまたはジョブレベルの属性として指定できる印刷属性カテゴリの配列。配列の各要素は、インターフェース&lt;a href=&quot;attribute/attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;を実装する&lt;a href=&quot;../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;です。サポートされているカテゴリがない場合、配列は空です。</target>
        </trans-unit>
        <trans-unit id="acea35f9cae772bd6729ea0a91ba2e0d2e049d3b" translate="yes" xml:space="preserve">
          <source>Array of supported doc flavors, should have at least one element.</source>
          <target state="translated">サポートされているdocフレーバーの配列で、少なくとも一つの要素を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="67254b0229a4173b61140618f8507f28706cc74c" translate="yes" xml:space="preserve">
          <source>Array used for multiple resource declarations.</source>
          <target state="translated">複数のリソース宣言に使用される配列。</target>
        </trans-unit>
        <trans-unit id="4658726120ea2a76ab5f9db00569884eaf5c32c1" translate="yes" xml:space="preserve">
          <source>Array.get()</source>
          <target state="translated">Array.get()</target>
        </trans-unit>
        <trans-unit id="1169b0baca08e75ccd9d1d7d32fc92353347736e" translate="yes" xml:space="preserve">
          <source>Array.getBoolean()</source>
          <target state="translated">Array.getBoolean()</target>
        </trans-unit>
        <trans-unit id="45e230ecb81ecd9ebe58640f54af87cee473a1c7" translate="yes" xml:space="preserve">
          <source>Array.getByte()</source>
          <target state="translated">Array.getByte()</target>
        </trans-unit>
        <trans-unit id="9b247c6af24e2cac173bff15ce5dd20e7554ca39" translate="yes" xml:space="preserve">
          <source>Array.getChar()</source>
          <target state="translated">Array.getChar()</target>
        </trans-unit>
        <trans-unit id="8e241acaa4e7de56f4f6b06a9a2b69c8b3934a9c" translate="yes" xml:space="preserve">
          <source>Array.getDouble()</source>
          <target state="translated">Array.getDouble()</target>
        </trans-unit>
        <trans-unit id="d72cad2b167d638887c65cb8102a0842bdeef724" translate="yes" xml:space="preserve">
          <source>Array.getFloat()</source>
          <target state="translated">Array.getFloat()</target>
        </trans-unit>
        <trans-unit id="4a5e0617636097c95ddd3b26825b9fa630129bd0" translate="yes" xml:space="preserve">
          <source>Array.getInt()</source>
          <target state="translated">Array.getInt()</target>
        </trans-unit>
        <trans-unit id="b1ea126ae4a5892b65c8761706ebf577fa0b8447" translate="yes" xml:space="preserve">
          <source>Array.getLength()</source>
          <target state="translated">Array.getLength()</target>
        </trans-unit>
        <trans-unit id="b4e13c666fbd535053c99dc297ab35fb4f028144" translate="yes" xml:space="preserve">
          <source>Array.getLong()</source>
          <target state="translated">Array.getLong()</target>
        </trans-unit>
        <trans-unit id="5d172f7ac795870d2f898d4e0b36bea81b013a3f" translate="yes" xml:space="preserve">
          <source>Array.getShort()</source>
          <target state="translated">Array.getShort()</target>
        </trans-unit>
        <trans-unit id="e88fedaeae84f4fd50173a5bdd67c92f374f0d63" translate="yes" xml:space="preserve">
          <source>Array.newInstance()</source>
          <target state="translated">Array.newInstance()</target>
        </trans-unit>
        <trans-unit id="f6af3462971f6d30e9ec2c85b6f112b33661a48c" translate="yes" xml:space="preserve">
          <source>Array.set()</source>
          <target state="translated">Array.set()</target>
        </trans-unit>
        <trans-unit id="f91f1f89eedde88ec92a16f2690640ccc75db314" translate="yes" xml:space="preserve">
          <source>Array.setBoolean()</source>
          <target state="translated">Array.setBoolean()</target>
        </trans-unit>
        <trans-unit id="9a2dc485cb875a98afdbe9f1fc0af3ae91bc7d22" translate="yes" xml:space="preserve">
          <source>Array.setByte()</source>
          <target state="translated">Array.setByte()</target>
        </trans-unit>
        <trans-unit id="3bc6ded8b8303eae5d660be744937261f4fb655b" translate="yes" xml:space="preserve">
          <source>Array.setChar()</source>
          <target state="translated">Array.setChar()</target>
        </trans-unit>
        <trans-unit id="062ef285c7735737b8feec3b6018d5913746147a" translate="yes" xml:space="preserve">
          <source>Array.setDouble()</source>
          <target state="translated">Array.setDouble()</target>
        </trans-unit>
        <trans-unit id="b284650cdb4942518c61c9fb415d0f3273563e0b" translate="yes" xml:space="preserve">
          <source>Array.setFloat()</source>
          <target state="translated">Array.setFloat()</target>
        </trans-unit>
        <trans-unit id="eb2dd2165c3cdf2c0752876ae095f28dd88b60dc" translate="yes" xml:space="preserve">
          <source>Array.setInt()</source>
          <target state="translated">Array.setInt()</target>
        </trans-unit>
        <trans-unit id="da531263561c3c737792c93701185e9465b36a9c" translate="yes" xml:space="preserve">
          <source>Array.setLong()</source>
          <target state="translated">Array.setLong()</target>
        </trans-unit>
        <trans-unit id="0773afd66a6be3901682429b86107e92c0137d0b" translate="yes" xml:space="preserve">
          <source>Array.setShort()</source>
          <target state="translated">Array.setShort()</target>
        </trans-unit>
        <trans-unit id="1a283a038a4dcdb2e50b5ad5b7b9ab73e8033daf" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue</source>
          <target state="translated">ArrayBlockingQueue</target>
        </trans-unit>
        <trans-unit id="3d96acc37cd4954c931fa29a5de4124c31c1d3e9" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.add()</source>
          <target state="translated">ArrayBlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="3dbd1eb6fdbac03d7ef6563da0eb3a8180e79e61" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.clear()</source>
          <target state="translated">ArrayBlockingQueue.clear()</target>
        </trans-unit>
        <trans-unit id="d2b8c263fb51c1d3665002060e6cacb05b477a5f" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.contains()</source>
          <target state="translated">ArrayBlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="56496c2e552af45b7fe3d89c4a6e038dd024ffe1" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.drainTo()</source>
          <target state="translated">ArrayBlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="bb6a69f32e54e7f6e94d4b4a1f2502f19ab5e73c" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.iterator()</source>
          <target state="translated">ArrayBlockingQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="ae8981ef0588c86f5c55f27f5891a2639e002e80" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.offer()</source>
          <target state="translated">ArrayBlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="b2f039549dcdcef93e747e665aa28a510a467c06" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.peek()</source>
          <target state="translated">ArrayBlockingQueue.peek()</target>
        </trans-unit>
        <trans-unit id="6713c2584369c8ae5280831ce58bedae449bc270" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.poll()</source>
          <target state="translated">ArrayBlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="0ea6f79daf5205a896305d995a997675b14b3d2b" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.put()</source>
          <target state="translated">ArrayBlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="e75f62a1986ae83f920bebf8c1ac2bf450672d87" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.remainingCapacity()</source>
          <target state="translated">ArrayBlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="baffefbb01fe5b64bee2c1206365c66a2329aa74" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.remove()</source>
          <target state="translated">ArrayBlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="01039bfc283527758908b9a5697520991aa6a923" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.size()</source>
          <target state="translated">ArrayBlockingQueue.size()</target>
        </trans-unit>
        <trans-unit id="8f1266bf6b909b6efa0985bdf17784f5de67fbd2" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.spliterator()</source>
          <target state="translated">ArrayBlockingQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="babefc9596faf932dfa911f390aff3a971b2ccff" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.take()</source>
          <target state="translated">ArrayBlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="ecd956bb79ba9d156919269a43e7111bb0457368" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.toArray()</source>
          <target state="translated">ArrayBlockingQueue.toArray()</target>
        </trans-unit>
        <trans-unit id="ac7393cded22c6ae03dbbf5d496efe87f9cd2b60" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.toString()</source>
          <target state="translated">ArrayBlockingQueue.toString()</target>
        </trans-unit>
        <trans-unit id="a1d9626b2a8faf29b6417286fb8a6b3e1f9be338" translate="yes" xml:space="preserve">
          <source>ArrayDeque</source>
          <target state="translated">ArrayDeque</target>
        </trans-unit>
        <trans-unit id="bed2df06b552cca23f4d8af39984e1178eeb27a4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.add()</source>
          <target state="translated">ArrayDeque.add()</target>
        </trans-unit>
        <trans-unit id="d2701c9e24b7f41499b59cd658e03461d594b48d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addFirst()</source>
          <target state="translated">ArrayDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="e437dd06b166eda7b7de7a8002cf304b9b770bf4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addLast()</source>
          <target state="translated">ArrayDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="a352cf50a3d9d333f0cb4a879b607e249c258494" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clear()</source>
          <target state="translated">ArrayDeque.clear()</target>
        </trans-unit>
        <trans-unit id="9e84be1b39b7efeaa4ccb90aca05601634b0ddd9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clone()</source>
          <target state="translated">ArrayDeque.clone()</target>
        </trans-unit>
        <trans-unit id="7982354300300d171b3016130244329713b149cd" translate="yes" xml:space="preserve">
          <source>ArrayDeque.contains()</source>
          <target state="translated">ArrayDeque.contains()</target>
        </trans-unit>
        <trans-unit id="75b05cd9e1f69bc6dac6a81afad1a495b214d20e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.descendingIterator()</source>
          <target state="translated">ArrayDeque.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="e0a60bac2ddad41306d36b5b43bc5f77e1dc4781" translate="yes" xml:space="preserve">
          <source>ArrayDeque.element()</source>
          <target state="translated">ArrayDeque.element()</target>
        </trans-unit>
        <trans-unit id="a420aa718866ddb4a3a295fa14df62837dca90e0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.getFirst()</source>
          <target state="translated">ArrayDeque.getFirst()</target>
        </trans-unit>
        <trans-unit id="7dc95f4a9183134e5a977034584c9c29c0da84d0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.getLast()</source>
          <target state="translated">ArrayDeque.getLast()</target>
        </trans-unit>
        <trans-unit id="ea86c6721057aa21b774837669c804b2ae5ff14b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.isEmpty()</source>
          <target state="translated">ArrayDeque.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2778cf97463835ee87fdf389f420513adc88da5e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.iterator()</source>
          <target state="translated">ArrayDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="9a23b8f00c880c251e597a2828b54b13cf11591e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offer()</source>
          <target state="translated">ArrayDeque.offer()</target>
        </trans-unit>
        <trans-unit id="956983a0c043c9c5a1f7d323c7d758837dde02ba" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offerFirst()</source>
          <target state="translated">ArrayDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="4bb9d892b664791a921a331d941810f8b80c900b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offerLast()</source>
          <target state="translated">ArrayDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="f33bac0a172c3990700e65739fa16ef9abf2961f" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peek()</source>
          <target state="translated">ArrayDeque.peek()</target>
        </trans-unit>
        <trans-unit id="314c49c13bf4a77b621e7be5815bcd236146d330" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peekFirst()</source>
          <target state="translated">ArrayDeque.peekFirst()</target>
        </trans-unit>
        <trans-unit id="0f0b523e109dd965b5e3fd8f054173fa9acf9395" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peekLast()</source>
          <target state="translated">ArrayDeque.peekLast()</target>
        </trans-unit>
        <trans-unit id="b7d97e0cac420b8b46914f7eb4b9ff69a56f47f1" translate="yes" xml:space="preserve">
          <source>ArrayDeque.poll()</source>
          <target state="translated">ArrayDeque.poll()</target>
        </trans-unit>
        <trans-unit id="ec16ee31c4dc2bcd8f0f02b45cc335c86eb9fe4d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pollFirst()</source>
          <target state="translated">ArrayDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="8d134b459fc996a5e431c9e7ae608aeea0923492" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pollLast()</source>
          <target state="translated">ArrayDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="770e2003af764711664240954edb26b3268a95d5" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pop()</source>
          <target state="translated">ArrayDeque.pop()</target>
        </trans-unit>
        <trans-unit id="60fc19ac26e8d552fa9d36569e69afe123439d32" translate="yes" xml:space="preserve">
          <source>ArrayDeque.push()</source>
          <target state="translated">ArrayDeque.push()</target>
        </trans-unit>
        <trans-unit id="ca1078f7c4af77c9358b816a58b5ae37310f9fd6" translate="yes" xml:space="preserve">
          <source>ArrayDeque.remove()</source>
          <target state="translated">ArrayDeque.remove()</target>
        </trans-unit>
        <trans-unit id="16a4d68564ea8bca4be4f1174ceca9d5f7110b20" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeFirst()</source>
          <target state="translated">ArrayDeque.removeFirst()</target>
        </trans-unit>
        <trans-unit id="0ef19d078a9315e6fb282cd424c2059db93eaec0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeFirstOccurrence()</source>
          <target state="translated">ArrayDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="2ef2e331f8c0a6398215f9094fcd408191cde0d2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLast()</source>
          <target state="translated">ArrayDeque.removeLast()</target>
        </trans-unit>
        <trans-unit id="7c8b7e728f64463eb5ff97018c0f09518af8af5e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLastOccurrence()</source>
          <target state="translated">ArrayDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="a54b8c10adeb716e784d2ad7c4305438595619f7" translate="yes" xml:space="preserve">
          <source>ArrayDeque.size()</source>
          <target state="translated">ArrayDeque.size()</target>
        </trans-unit>
        <trans-unit id="50926f012e8f6d6654906ecf9aeced2678ec6965" translate="yes" xml:space="preserve">
          <source>ArrayDeque.spliterator()</source>
          <target state="translated">ArrayDeque.spliterator()</target>
        </trans-unit>
        <trans-unit id="4983ebbc8740047ee462627b80722151818752f9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.toArray()</source>
          <target state="translated">ArrayDeque.toArray()</target>
        </trans-unit>
        <trans-unit id="21484b74aa640458082fe4bb49601200afedc0f0" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBoundsException</source>
          <target state="translated">ArrayIndexOutOfBoundsException</target>
        </trans-unit>
        <trans-unit id="f5baaa4ad5d36710b8fed9d2bc4a53a86da5b55a" translate="yes" xml:space="preserve">
          <source>ArrayList</source>
          <target state="translated">ArrayList</target>
        </trans-unit>
        <trans-unit id="d1b38d91a4da43ea7d424a38ce96c626a121696b" translate="yes" xml:space="preserve">
          <source>ArrayList of ObjectName objects for referenced MBeans.</source>
          <target state="translated">参照される MBeans の ObjectName オブジェクトの ArrayList。</target>
        </trans-unit>
        <trans-unit id="a1d711fdf8512dbf9ae876dfaad2ed359350d906" translate="yes" xml:space="preserve">
          <source>ArrayList of RoleInfo.</source>
          <target state="translated">RoleInfoのArrayList。</target>
        </trans-unit>
        <trans-unit id="79f1f5f289d4a364472fcb60a9d57fe0207ae8ac" translate="yes" xml:space="preserve">
          <source>ArrayList of String</source>
          <target state="translated">文字列のArrayList</target>
        </trans-unit>
        <trans-unit id="f072bf434a8e4e92915b83b944e15e391db88282" translate="yes" xml:space="preserve">
          <source>ArrayList of relation type names (Strings)</source>
          <target state="translated">関係型名のArrayList(文字列</target>
        </trans-unit>
        <trans-unit id="0f47b6ff5f2eca03244dbd321baeb58760b3cf91" translate="yes" xml:space="preserve">
          <source>ArrayList.add()</source>
          <target state="translated">ArrayList.add()</target>
        </trans-unit>
        <trans-unit id="507a2eea358226004f14b71091689e5b0b3de625" translate="yes" xml:space="preserve">
          <source>ArrayList.addAll()</source>
          <target state="translated">ArrayList.addAll()</target>
        </trans-unit>
        <trans-unit id="082bae60cab9869e2405f845a57761031488cc85" translate="yes" xml:space="preserve">
          <source>ArrayList.clear()</source>
          <target state="translated">ArrayList.clear()</target>
        </trans-unit>
        <trans-unit id="088b969c19105c440fdadb5c6c028c09751f4524" translate="yes" xml:space="preserve">
          <source>ArrayList.clone()</source>
          <target state="translated">ArrayList.clone()</target>
        </trans-unit>
        <trans-unit id="8772045082c4ae7aa5b0cc2513d87c1dd3f0519c" translate="yes" xml:space="preserve">
          <source>ArrayList.contains()</source>
          <target state="translated">ArrayList.contains()</target>
        </trans-unit>
        <trans-unit id="696a156109972f7f27cb904a75eea4be0ca4edb5" translate="yes" xml:space="preserve">
          <source>ArrayList.ensureCapacity()</source>
          <target state="translated">ArrayList.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="a65347c40f0e485b54559608a032f6fcd888d79a" translate="yes" xml:space="preserve">
          <source>ArrayList.forEach()</source>
          <target state="translated">ArrayList.forEach()</target>
        </trans-unit>
        <trans-unit id="c6d0a301f9d31161a1449a9f575abf47243c5209" translate="yes" xml:space="preserve">
          <source>ArrayList.get()</source>
          <target state="translated">ArrayList.get()</target>
        </trans-unit>
        <trans-unit id="f494893c35f2e63cdd96ebe689dc06117c3036b3" translate="yes" xml:space="preserve">
          <source>ArrayList.indexOf()</source>
          <target state="translated">ArrayList.indexOf()</target>
        </trans-unit>
        <trans-unit id="68caef6bb721f87b173f7baf484b770b7fbf672e" translate="yes" xml:space="preserve">
          <source>ArrayList.isEmpty()</source>
          <target state="translated">ArrayList.isEmpty()</target>
        </trans-unit>
        <trans-unit id="6794ed7d20aaefcda7a3eaf86ab23508164d2d72" translate="yes" xml:space="preserve">
          <source>ArrayList.iterator()</source>
          <target state="translated">ArrayList.iterator()</target>
        </trans-unit>
        <trans-unit id="205270f883fc49ffa068c9a3dbe66852020bf3a2" translate="yes" xml:space="preserve">
          <source>ArrayList.lastIndexOf()</source>
          <target state="translated">ArrayList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="aa3f5f8a7bf8faa3ea051729f325aa4505c1a5f7" translate="yes" xml:space="preserve">
          <source>ArrayList.listIterator()</source>
          <target state="translated">ArrayList.listIterator()</target>
        </trans-unit>
        <trans-unit id="4acdb817b23096f50c66aac9c5e120b25d50ad5e" translate="yes" xml:space="preserve">
          <source>ArrayList.remove()</source>
          <target state="translated">ArrayList.remove()</target>
        </trans-unit>
        <trans-unit id="d3667e4b10100a95482cdb56bc6e0e42b4ec20f5" translate="yes" xml:space="preserve">
          <source>ArrayList.removeAll()</source>
          <target state="translated">ArrayList.removeAll()</target>
        </trans-unit>
        <trans-unit id="ab982c1457071db3d759d9fc8bb07db0f0568b23" translate="yes" xml:space="preserve">
          <source>ArrayList.removeIf()</source>
          <target state="translated">ArrayList.removeIf()</target>
        </trans-unit>
        <trans-unit id="566e74e2242ca7c9df417b51e91dabe7c34c143c" translate="yes" xml:space="preserve">
          <source>ArrayList.removeRange()</source>
          <target state="translated">ArrayList.removeRange()</target>
        </trans-unit>
        <trans-unit id="36bab2da55c0e9dc6a1f7f936fa8697fbbd75548" translate="yes" xml:space="preserve">
          <source>ArrayList.replaceAll()</source>
          <target state="translated">ArrayList.replaceAll()</target>
        </trans-unit>
        <trans-unit id="532a41b9f0e66f2a34cf7991c625b88a72eb406d" translate="yes" xml:space="preserve">
          <source>ArrayList.retainAll()</source>
          <target state="translated">ArrayList.retainAll()</target>
        </trans-unit>
        <trans-unit id="32fc31340174e6ddb82791777b34fbb197c55b26" translate="yes" xml:space="preserve">
          <source>ArrayList.set()</source>
          <target state="translated">ArrayList.set()</target>
        </trans-unit>
        <trans-unit id="f16daa8e32cf5bf5607ac82deb5cfb60765a4a90" translate="yes" xml:space="preserve">
          <source>ArrayList.size()</source>
          <target state="translated">ArrayList.size()</target>
        </trans-unit>
        <trans-unit id="fac2a946b847ab427216c071e3f0b3af92c4a36f" translate="yes" xml:space="preserve">
          <source>ArrayList.sort()</source>
          <target state="translated">ArrayList.sort()</target>
        </trans-unit>
        <trans-unit id="d148a99b7cd7829c476159cb3b6c744b0c5ee770" translate="yes" xml:space="preserve">
          <source>ArrayList.spliterator()</source>
          <target state="translated">ArrayList.spliterator()</target>
        </trans-unit>
        <trans-unit id="e0385a55c46be6d850fd057ec9a0d3a4cedea4c3" translate="yes" xml:space="preserve">
          <source>ArrayList.subList()</source>
          <target state="translated">ArrayList.subList()</target>
        </trans-unit>
        <trans-unit id="1fd2236a7851d3a0612dc24e53d2ac3991b3c237" translate="yes" xml:space="preserve">
          <source>ArrayList.toArray()</source>
          <target state="translated">ArrayList.toArray()</target>
        </trans-unit>
        <trans-unit id="1ff7df7831f0c607f6db81ba9f79b3b9239ceef3" translate="yes" xml:space="preserve">
          <source>ArrayList.trimToSize()</source>
          <target state="translated">ArrayList.trimToSize()</target>
        </trans-unit>
        <trans-unit id="70ce27f43d491914a500ad71f5cd62e7c63052b6" translate="yes" xml:space="preserve">
          <source>ArrayStoreException</source>
          <target state="translated">ArrayStoreException</target>
        </trans-unit>
        <trans-unit id="77e0a11af696ddb246c753fbf92cf343a2992b51" translate="yes" xml:space="preserve">
          <source>ArrayType</source>
          <target state="translated">ArrayType</target>
        </trans-unit>
        <trans-unit id="0ad6cfa3795c8768a161ec4d9565a1cb78765d05" translate="yes" xml:space="preserve">
          <source>ArrayType.equals()</source>
          <target state="translated">ArrayType.equals()</target>
        </trans-unit>
        <trans-unit id="b6cf1edc1e95c031c5a6ec52f87a88a439d88d8c" translate="yes" xml:space="preserve">
          <source>ArrayType.getArrayType()</source>
          <target state="translated">ArrayType.getArrayType()</target>
        </trans-unit>
        <trans-unit id="2d529dd9d80021b7d146f1cf42e0717a7cf4216a" translate="yes" xml:space="preserve">
          <source>ArrayType.getComponentType()</source>
          <target state="translated">ArrayType.getComponentType()</target>
        </trans-unit>
        <trans-unit id="03b3b6b244b2153b6b58e79a75359d327e3244e5" translate="yes" xml:space="preserve">
          <source>ArrayType.getDimension()</source>
          <target state="translated">ArrayType.getDimension()</target>
        </trans-unit>
        <trans-unit id="59d72720bddbebb8c69f72937b6908a569a0696a" translate="yes" xml:space="preserve">
          <source>ArrayType.getElementOpenType()</source>
          <target state="translated">ArrayType.getElementOpenType()</target>
        </trans-unit>
        <trans-unit id="229162e2aee70affd2dbe41528f566b00858fd60" translate="yes" xml:space="preserve">
          <source>ArrayType.getPrimitiveArrayType()</source>
          <target state="translated">ArrayType.getPrimitiveArrayType()</target>
        </trans-unit>
        <trans-unit id="3146cb41e5856b3709df762521839f1a446b3dcc" translate="yes" xml:space="preserve">
          <source>ArrayType.hashCode()</source>
          <target state="translated">ArrayType.hashCode()</target>
        </trans-unit>
        <trans-unit id="93d36cfaf61145695e080e5e742a56ce0312a81b" translate="yes" xml:space="preserve">
          <source>ArrayType.isPrimitiveArray()</source>
          <target state="translated">ArrayType.isPrimitiveArray()</target>
        </trans-unit>
        <trans-unit id="98cc545995e3dd73b4112c4ef40a1f05d7eaa3c0" translate="yes" xml:space="preserve">
          <source>ArrayType.isValue()</source>
          <target state="translated">ArrayType.isValue()</target>
        </trans-unit>
        <trans-unit id="f227b51b3a472ea46fad9e1babf056963137e266" translate="yes" xml:space="preserve">
          <source>ArrayType.toString()</source>
          <target state="translated">ArrayType.toString()</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="785112061d071a3b0f54a08c6eb7aef42d45601d" translate="yes" xml:space="preserve">
          <source>Arrays.asList()</source>
          <target state="translated">Arrays.asList()</target>
        </trans-unit>
        <trans-unit id="f3d9ec164d4d8a6008befbecb43760ebc32085f2" translate="yes" xml:space="preserve">
          <source>Arrays.binarySearch()</source>
          <target state="translated">Arrays.binarySearch()</target>
        </trans-unit>
        <trans-unit id="12502654ba05a3e6d53da76af059402cbb12044a" translate="yes" xml:space="preserve">
          <source>Arrays.copyOf()</source>
          <target state="translated">Arrays.copyOf()</target>
        </trans-unit>
        <trans-unit id="dbc9f4a9ab427ca23d1513d26347763e5b9209db" translate="yes" xml:space="preserve">
          <source>Arrays.copyOfRange()</source>
          <target state="translated">Arrays.copyOfRange()</target>
        </trans-unit>
        <trans-unit id="0e5aa98d7dcf419ac91cb5a6dd4cf0faff77b0f9" translate="yes" xml:space="preserve">
          <source>Arrays.deepEquals()</source>
          <target state="translated">Arrays.deepEquals()</target>
        </trans-unit>
        <trans-unit id="b8790dc370ceaac6a247f001d220325b8a9840f1" translate="yes" xml:space="preserve">
          <source>Arrays.deepHashCode()</source>
          <target state="translated">Arrays.deepHashCode()</target>
        </trans-unit>
        <trans-unit id="c14ee3f183bc78fa73dda4bc29af17be0e9d4c84" translate="yes" xml:space="preserve">
          <source>Arrays.deepToString()</source>
          <target state="translated">Arrays.deepToString()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
