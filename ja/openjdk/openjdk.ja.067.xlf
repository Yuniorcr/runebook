<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4679bfab8bdf1a02bfe30406e4c9f7a2085873a2" translate="yes" xml:space="preserve">
          <source>The ISO 3166-1 codes can be found on-line.</source>
          <target state="translated">ISO 3166-1のコードはオンラインで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="611dd8f9d48699c9411b9432a1cb2dc63863602c" translate="yes" xml:space="preserve">
          <source>The ISO calendar system behaves as follows:</source>
          <target state="translated">ISOカレンダーシステムは以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="6082f991bd981467ab45e2ffde3309b5e82f6280" translate="yes" xml:space="preserve">
          <source>The ISO calendar system defines an additional week-based division of years. This defines a year based on whole Monday to Monday weeks. This is modeled in &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ISOカレンダーシステムは、追加の週ベースの年の区分を定義します。これは、月曜日から月曜日の週全体に基づいて年を定義します。これは&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;でモデル化されています。</target>
        </trans-unit>
        <trans-unit id="4d077fd16854767d357096f809fb7b81bacb82c7" translate="yes" xml:space="preserve">
          <source>The ISO calendar system.</source>
          <target state="translated">ISOカレンダーシステム。</target>
        </trans-unit>
        <trans-unit id="58e26e3bf55479a8a5120fe45b369953d4715df2" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with an offset, such as '2011-12-03+01:00'.</source>
          <target state="translated">2011-12-03+01:00' のようなオフセットを持つ日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="6de9417addd60d61c439ecd60520ce653b7ff208" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with the offset if available, such as '2011-12-03' or '2011-12-03+01:00'.</source>
          <target state="translated">ISO 日付フォーマッタは、'2011-12-03' や '2011-12-03+01:00' のように、オフセットがある場合にはオフセットを使って日付をフォーマットしたり、パースしたりします。</target>
        </trans-unit>
        <trans-unit id="2bed7eaa4131a3fd0eed3c41b0dc86a015ca96db" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '2011-12-03'.</source>
          <target state="translated">2011-12-03' のようなオフセットのない日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="21efec4c9a9cd99bd7c37c45effa030d9f01c4ca" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '20111203'.</source>
          <target state="translated">20111203' のようなオフセットのない日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="5e79ab154ec99d657cac16998df6c24432d36bfb" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the ordinal date without an offset, such as '2012-337'.</source>
          <target state="translated">2012-337' のようなオフセットのない順序の日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="8947499950b72303579b6072a1f0f70410f938f9" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the week-based date without an offset, such as '2012-W48-6'.</source>
          <target state="translated">2012-W48-6' のように、週単位の日付をオフセットなしでフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="ad4a4f923ef1dd96afdbb263d3503d29224e8ce9" translate="yes" xml:space="preserve">
          <source>The ISO date of the first day of the minimum Hijrah year.</source>
          <target state="translated">最小ヒジュラー年の初日のISO日付。</target>
        </trans-unit>
        <trans-unit id="ab2094bfe0e934a818f591f8e39df5d0c0f5b428" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time with an offset, such as '2011-12-03T10:15:30+01:00'.</source>
          <target state="translated">2011-12-03T10:15:30+01:00' のようなオフセットを持つ日付時刻をフォーマットまたはパースする ISO 日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="b7f380848807763c304877a683626ef209b2dd72" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time without an offset, such as '2011-12-03T10:15:30'.</source>
          <target state="translated">2011-12-03T10:15:30' のようなオフセットのない日付時刻をフォーマットまたはパースする ISO 日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="bd2f9f3c47232e93e12ebe7e08b1617ed46664af" translate="yes" xml:space="preserve">
          <source>The ISO instant formatter that formats or parses an instant in UTC, such as '2011-12-03T10:15:30Z'.</source>
          <target state="translated">2011-12-03T10:15:30Z' のように UTC でインスタントをフォーマットまたはパースする ISO インスタントフォーマッタ。</target>
        </trans-unit>
        <trans-unit id="95a52b961a46e25216875fca80e6d411d7ab598a" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time with an offset, such as '10:15+01:00' or '10:15:30+01:00'.</source>
          <target state="translated">10:15+01:00」や「10:15:30+01:00」のようなオフセットを持つ時刻をフォーマットまたはパースするISO時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="df2987c695a53ce54ed87dd02ab3fbad12667817" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time without an offset, such as '10:15' or '10:15:30'.</source>
          <target state="translated">10:15' や '10:15:30' のようなオフセットのない時刻をフォーマットまたはパースする ISO 時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="d335e1639bd2cf2c6fa963a589bd508ea6cff667" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time, with the offset if available, such as '10:15', '10:15:30' or '10:15:30+01:00'.</source>
          <target state="translated">10:15'、'10:15:30'、'10:15:30+01:00' のように、オフセットがあればそれを用いて時刻をフォーマットまたはパースする ISO 時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="0a3f5206473b8e9b0e863ce6a87c607ec16d4baa" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">ISO-8601カレンダーシステムは、今日、世界のほとんどの国で使用されている近代的な民暦システムである。それは閏年のための今日の規則がすべての時間のために適用されるプロレプティックグレゴリオ暦システムと同等である。</target>
        </trans-unit>
        <trans-unit id="6b0753a83aa00ab66715a1d0bce536d311b35dee" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time. For most applications written today, the ISO-8601 rules are entirely suitable. However, any application that makes use of historical dates, and requires them to be accurate will find the ISO-8601 approach unsuitable.</source>
          <target state="translated">ISO-8601カレンダーシステムは、今日、世界のほとんどの国で使用されている近代的な民暦システムである。それは、うるう年のための今日の規則がすべての時間のために適用されるプロレプティック・グレゴリオ暦システムに相当します。今日書かれているほとんどのアプリケーションでは、ISO-8601の規則が完全に適しています。しかし、歴史的な日付を使用し、それらが正確であることを必要とする任意のアプリケーションでは、ISO-8601のアプローチは不適当であることがわかります。</target>
        </trans-unit>
        <trans-unit id="2b87b0b3d3f02384c82a8cdf0d2d60d19047ef46" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. This API assumes that all calendar systems use the same representation, this class, for time-of-day.</source>
          <target state="translated">ISO-8601 暦システムは、今日世界のほとんどの国で使用されている最新の民間暦システムです。この API は、すべてのカレンダーシステムが同じ表現であるこのクラスを使用することを前提としています。</target>
        </trans-unit>
        <trans-unit id="24cf4f50b66f15436634e4e63889e0eeb0811579" translate="yes" xml:space="preserve">
          <source>The ISO-8601 definition, where a week starts on Monday and the first week has a minimum of 4 days.</source>
          <target state="translated">週が月曜日から始まるISO-8601の定義で、最初の週は最低でも4日です。</target>
        </trans-unit>
        <trans-unit id="ea56e5764492774cbd5793c14b636ad2fff88f1f" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard defines a calendar system based on weeks. It uses the week-based-year and week-of-week-based-year concepts to split up the passage of days instead of the standard year/month/day.</source>
          <target state="translated">ISO-8601規格では、週を基準としたカレンダーシステムを定義しています。標準的な年/月/日の代わりに、週を基準とした年と週を基準とした年の概念を使用して、日の経過を分割します。</target>
        </trans-unit>
        <trans-unit id="cd8f2e4ef07a7ae4561e3a206df7d9c3194cc3bf" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard does not define eras. A definition has therefore been created with two eras - 'Current era' (CE) for years on or after 0001-01-01 (ISO), and 'Before current era' (BCE) for years before that.</source>
          <target state="translated">ISO-8601 規格では、時代を定義していない。そのため、0001-01-01(ISO)以降の年月は「現在の時代」(CE)、それ以前の年月は「現在の時代以前」(BCE)という2つの時代を定義しています。</target>
        </trans-unit>
        <trans-unit id="15f2960aca862d8387dbd45828c14f2ee1a23360" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard is based on the standard civic 12 month year. This is commonly divided into four quarters, often abbreviated as Q1, Q2, Q3 and Q4.</source>
          <target state="translated">ISO-8601規格は、標準的な公民12ヶ月年をベースにしています。これは一般的にQ1、Q2、Q3、Q4と略されることが多い4つの四半期に分けられています。</target>
        </trans-unit>
        <trans-unit id="6e18900e4d1930d96696f4d4906e19682a06d587" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard was originally intended as a data interchange format, defining a string format for dates and times. However, it also defines an alternate way of expressing the date, based on the concept of week-based-year.</source>
          <target state="translated">ISO-8601規格は元々、日付と時刻のための文字列フォーマットを定義するデータ交換フォーマットとして意図されていた。しかし、週を基準とした年の概念に基づいた日付の代替的な表現方法も定義されています。</target>
        </trans-unit>
        <trans-unit id="12da9e8bfa2848ec37f88ea0629d59e6306e0906" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with offset and zone, such as '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">2011-12-03T10:15:30+01:00[ヨーロッパ/パリ]のようなオフセットとゾーンを持つ日付時刻をフォーマットまたはパースするISOライクな日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="86afa3124f1aed75c36e4dd56bfce8c49977f732" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with the offset and zone if available, such as '2011-12-03T10:15:30', '2011-12-03T10:15:30+01:00' or '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">ISOライクな日付時刻フォーマッタで、'2011-12-03T10:15:30'、'2011-12-03T10:15:30+01:00'、'2011-12-03T10:15:30+01:00[ヨーロッパ/パリ]のように、利用可能であればオフセットとゾーンを指定して日付時刻をフォーマットまたはパースする。</target>
        </trans-unit>
        <trans-unit id="1770c1e43e10767defa4c018f5743b7b2d0ab296" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. Note that the size of the IV (block size), starting at &lt;code&gt;offset&lt;/code&gt; inclusive, must be twice the word size. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVは &lt;code&gt;iv&lt;/code&gt; から取得され、 &lt;code&gt;offset&lt;/code&gt; 含みます。IVのサイズ（ブロックサイズ）は、 &lt;code&gt;offset&lt;/code&gt; 含めて、ワードサイズの2倍でなければならないことに注意してください。IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="47f00745675042f6a724b595797a24a07101fd7a" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVは &lt;code&gt;iv&lt;/code&gt; から取得され、 &lt;code&gt;offset&lt;/code&gt; 含みます。IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="dd985ba4ac843c2aa13ce1073a3079fccc30b81d" translate="yes" xml:space="preserve">
          <source>The Id of the calendar in common usage</source>
          <target state="translated">一般的に使われているカレンダーのID</target>
        </trans-unit>
        <trans-unit id="faa9a0061bb28bf6c97cd39acf5b5a828ccf93f4" translate="yes" xml:space="preserve">
          <source>The InetAddress class has a cache to store successful as well as unsuccessful host name resolutions.</source>
          <target state="translated">InetAddress クラスは、成功したホスト名と失敗したホスト名の解決策を保存するためのキャッシュを持っています。</target>
        </trans-unit>
        <trans-unit id="b6bf2f6528348c5b02c604ad3248d294717b2a1b" translate="yes" xml:space="preserve">
          <source>The InetAddress class provides methods to resolve host names to their IP addresses and vice versa.</source>
          <target state="translated">InetAddress クラスは、ホスト名を IP アドレスに解決するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="65b8748cc6268fcd7ebec74a58229406dde9da72" translate="yes" xml:space="preserve">
          <source>The InetAddress returned will represent the IPv4 loopback address, 127.0.0.1, or the IPv6 loopback address, ::1. The IPv4 loopback address returned is only one of many in the form 127.*.*.*</source>
          <target state="translated">返される InetAddress は、IPv4 ループバックアドレス 127.0.0.0.1、または IPv6 ループバックアドレス ::1 を表します。返されるIPv4ループバックアドレスは、127.*.*.*.*.</target>
        </trans-unit>
        <trans-unit id="2152fa5309ac167073dd45954409ff4768fda7a1" translate="yes" xml:space="preserve">
          <source>The Initial Context</source>
          <target state="translated">初期文脈</target>
        </trans-unit>
        <trans-unit id="9ff6f766ad82286cf3b4ec81ad2977fb2af744de" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority maintains the &lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;official list of URI schemes&lt;/a&gt;.</source>
          <target state="translated">Internet Assigned Numbers Authorityは、&lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;URIスキームの公式リストを&lt;/a&gt;管理しています。</target>
        </trans-unit>
        <trans-unit id="d6529cb88cc0262a6e384c19547d019dbb6bed8b" translate="yes" xml:space="preserve">
          <source>The Introspector class provides a standard way for tools to learn about the properties, events, and methods supported by a target Java Bean.</source>
          <target state="translated">Introspectorクラスは,ターゲットJava Beanがサポートするプロパティ,イベント,メソッドについて学習するためのツールの標準的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="bb84f09030f91494fb9beb5357d12365eccba462" translate="yes" xml:space="preserve">
          <source>The JAR manifest file name.</source>
          <target state="translated">JAR マニフェストファイル名。</target>
        </trans-unit>
        <trans-unit id="7977a89a83ddfc3d655c3423c1d5cef0ff1b4d9d" translate="yes" xml:space="preserve">
          <source>The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt;. The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the  SPI JAR file specification.</source>
          <target state="translated">JDKには、標準プラットフォームのプリンターを見つけることができる &lt;code&gt;PrintServiceLookup&lt;/code&gt; 実装が含まれています。IPPプリンターやJINIプリンターなど、他のタイプのプリンターを見つけるために、印刷サービスプロバイダーは &lt;code&gt;PrintServiceLookup&lt;/code&gt; の実装を作成できます。印刷サービスプロバイダーは、SPI JARファイル仕様を使用して、これらの &lt;code&gt;PrintServiceLookup&lt;/code&gt; 実装を動的にインストールできます。</target>
        </trans-unit>
        <trans-unit id="adacbc5dc9ca937440df58f189dfa0a26e578715" translate="yes" xml:space="preserve">
          <source>The JMM specifically allows optimizing compilers to elide reads or writes of variables that are known to be useless. Such elided reads and writes have no effect on the happens-before relation. Regardless of this fact, the volatile &lt;code&gt;V&lt;/code&gt; will not be elided, even though its written value is indeterminate and its read value is not used.</source>
          <target state="translated">JMMを使用すると、最適化コンパイラーは、役に立たないことがわかっている変数の読み取りまたは書き込みを省略できます。このように省略された読み取りと書き込みは、発生前の関係には影響しません。この事実に関係なく、揮発性 &lt;code&gt;V&lt;/code&gt; は、書き込まれた値が不確定であり、その読み取り値が使用されていなくても、除外されません。</target>
        </trans-unit>
        <trans-unit id="245a29e6968c20703520c2a92906f5e9e0f071ea" translate="yes" xml:space="preserve">
          <source>The JMX API can also be used as part of a solution for managing systems, networks, and so on.</source>
          <target state="translated">また、JMX APIは、システムやネットワークなどを管理するためのソリューションの一部として利用することもできます。</target>
        </trans-unit>
        <trans-unit id="44195781584f2d466ba7e2c1a615da361d712792" translate="yes" xml:space="preserve">
          <source>The JMX Remote API also defines an optional connector called &lt;b&gt;JMXMP Connector&lt;/b&gt; implementing the JMX Message Protocol (JMXMP). As it is optional, it is not part of this bundle (see note below).</source>
          <target state="translated">JMXリモートAPIは、JMXメッセージプロトコル（JMXMP）を実装する&lt;b&gt;JMXMPコネクタ&lt;/b&gt;と呼ばれるオプションのコネクタも定義します。これはオプションであるため、このバンドルの一部ではありません（下記の注を参照）。</target>
        </trans-unit>
        <trans-unit id="49ce3ebe998d499efd4c77a77394ab17b1f03636" translate="yes" xml:space="preserve">
          <source>The JMX Remote API defines a standard connector, the &lt;b&gt;RMI Connector&lt;/b&gt;, which provides remote access to an MBeanServer through RMI.</source>
          <target state="translated">JMXリモートAPIは、&lt;b&gt;RMI&lt;/b&gt;を介してMBeanServerへのリモートアクセスを提供する標準コネクタである&lt;b&gt;RMIコネクタを&lt;/b&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="fd57cf73dfe60c2aa55ec8129a23ade5a302d5fa" translate="yes" xml:space="preserve">
          <source>The JMX specification also defines the notion of an &lt;em&gt;adaptor&lt;/em&gt;. An adaptor translates between requests in a protocol such as SNMP or HTML and accesses to an MBean Server. So for example an SNMP GET operation might result in a &lt;code&gt;getAttribute&lt;/code&gt; on the MBean Server.</source>
          <target state="translated">JMX仕様では、&lt;em&gt;アダプタ&lt;/em&gt;の概念も定義されています。アダプターは、SNMPやHTMLなどのプロトコルの要求間で変換を行い、MBeanサーバーにアクセスします。したがって、たとえば、SNMP GET操作は、MBeanサーバーで &lt;code&gt;getAttribute&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad7600c1b4c4869f0bb7b9d742500b17e728fe9b" translate="yes" xml:space="preserve">
          <source>The JMX specification defines the notion of &lt;b&gt;connectors&lt;/b&gt;. A connector is attached to a JMX API MBean server and makes it accessible to remote Java clients. The client end of a connector exports essentially the same interface as the MBean server, specifically the &lt;a href=&quot;../mbeanserverconnection&quot;&gt;&lt;code&gt;MBeanServerConnection&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">JMX仕様では、&lt;b&gt;コネクタ&lt;/b&gt;の概念を定義してい&lt;b&gt;ます&lt;/b&gt;。コネクタはJMX API MBeanサーバーに接続され、リモートJavaクライアントからアクセスできるようにします。コネクターのクライアント側は、基本的にMBeanサーバーと同じインターフェース、特に&lt;a href=&quot;../mbeanserverconnection&quot;&gt; &lt;code&gt;MBeanServerConnection&lt;/code&gt; &lt;/a&gt;インターフェースをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="33732f94d8d93f615200108becd1fb08f06a0bea" translate="yes" xml:space="preserve">
          <source>The JNDI class library reads the resource files and makes the property values freely available. Thus JNDI resource files should be considered to be &quot;world readable&quot;, and sensitive information such as clear-text passwords should not be stored there.</source>
          <target state="translated">JNDI クラスライブラリはリソースファイルを読み込んで、プロパティ値を自由に利用できるようにします。したがって、JNDIのリソースファイルは &quot;世界で読める &quot;ものとみなされるべきであり、クリアテキストパスワードのような機密情報はそこに保存されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="088d7c9d898f7a840b1256be8ddef986f15194cb" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. An initial context is created using an initial context factory. A program can install its own builder that creates initial context factories, thereby overriding the default policies used by the framework, by calling NamingManager.setInitialContextFactoryBuilder(). The InitialContextFactoryBuilder interface must be implemented by such a builder.</source>
          <target state="translated">JNDI フレームワークでは、実行時に異なる初期コンテキストの実装を指定することができます。初期コンテキストは初期コンテキストファクトリを使って作成されます。プログラムは、NamingManager.setInitialContextFactoryBuilder()を呼び出すことで、初期コンテキストファクトリを作成する独自のビルダをインストールし、フレームワークで使用されるデフォルトポリシーを上書きすることができます。InitialContextFactoryBuilder インターフェースは、そのようなビルダで実装されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="d098149f3977423197730ce483608b5d9c5ba323" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. The initial context is created using an &lt;em&gt;initial context factory&lt;/em&gt;. An initial context factory must implement the InitialContextFactory interface, which provides a method for creating instances of initial context that implement the Context interface. In addition, the factory class must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">JNDIフレームワークでは、さまざまな初期コンテキスト実装を実行時に指定できます。初期コンテキストは、&lt;em&gt;初期コンテキストファクトリ&lt;/em&gt;を使用して作成され&lt;em&gt;ます&lt;/em&gt;。初期コンテキストファクトリは、ContextContextを実装する初期コンテキストのインスタンスを作成するためのメソッドを提供するInitialContextFactoryインターフェースを実装する必要があります。さらに、ファクトリクラスはパブリックである必要があり、引数を受け入れないパブリックコンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="b9064bba67a68203f58a597fa1fa3afbedec89f6" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;code&gt;object factories&lt;/code&gt;.</source>
          <target state="translated">JNDIフレームワークでは、 &lt;code&gt;object factories&lt;/code&gt; を介してオブジェクト実装を動的にロードできます。</target>
        </trans-unit>
        <trans-unit id="134c5f63e690609e9c6a657638ccd21e3550dca4" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to &lt;code&gt;Reference&lt;/code&gt;s, the printer &lt;code&gt;Reference&lt;/code&gt; could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名を &lt;code&gt;Reference&lt;/code&gt; にバインドしている場合、プリンター &lt;code&gt;Reference&lt;/code&gt; を使用してプリンターオブジェクトを作成し、検索の呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。検索後。</target>
        </trans-unit>
        <trans-unit id="f3b7acec5238c7d2dd7fa0082fb8db71d5d2e9ed" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名をReferencesにバインドしている場合、プリンター参照を使用してプリンターオブジェクトを作成し、ルックアップの呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。ルックアップ。</target>
        </trans-unit>
        <trans-unit id="0f159102714c8eb7af6cff7ee4872dd30ee0cf55" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup. An ObjectFactory is responsible for creating objects of a specific type. JNDI uses a default policy for using and loading object factories. You can override this default policy by calling &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; with an ObjectFactoryBuilder, which contains the program-defined way of creating/loading object factories. Any &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; implementation must implement this interface that for creating object factories.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名をReferencesにバインドしている場合、プリンター参照を使用してプリンターオブジェクトを作成し、ルックアップの呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。ルックアップ。 ObjectFactoryは、特定のタイプのオブジェクトの作成を担当します。 JNDIは、オブジェクトファクトリの使用とロードにデフォルトのポリシーを使用します。オブジェクトファクトリを作成/ロードするプログラム定義の方法を含むObjectFactoryBuilder を使用して &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; を呼び出すことにより、このデフォルトポリシーをオーバーライドできます。どれ &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; は 実装は、オブジェクトファクトリを作成するためのこのインターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="88db5d84ce039b71278336e8b1b44b578aa0d61d" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. See &lt;code&gt;ObjectFactory&lt;/code&gt; for details.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。詳細については、 &lt;code&gt;ObjectFactory&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5669f05609b02ee4c44fdaa5adbcabc508864f50" translate="yes" xml:space="preserve">
          <source>The JNDI library will consult the provider resource file when determining the values of these properties. Properties other than these may be set in the provider resource file at the discretion of the service provider. The service provider's documentation should clearly state which properties are allowed; other properties in the file will be ignored.</source>
          <target state="translated">JNDI ライブラリは、これらのプロパティの値を決定する際に、プロバイダリソースファイルを参照します。これら以外のプロパティは、サービスプロバイダの判断でプロバイダリソースファイルに設定することができます。サービスプロバイダのドキュメントには、どのプロパティが許可されているかが明記されている必要があり、ファイル内の他のプロパティは無視されます。</target>
        </trans-unit>
        <trans-unit id="bec69931581644a1ef0084216dc02cc47be425fa" translate="yes" xml:space="preserve">
          <source>The JNDI name of the resource. For field annotations, the default is the field name. For method annotations, the default is the JavaBeans property name corresponding to the method. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">リソースのJNDI名。フィールド注釈の場合、デフォルトはフィールド名です。メソッドのアノテーションの場合、デフォルトは、メソッドに対応する JavaBeans プロパティ名です。クラス注釈の場合、デフォルトはなく、これを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="edc24d0f37d47900732cfdcdc56bc8ec2f6044ca" translate="yes" xml:space="preserve">
          <source>The JPS API is designed to be used in Java profiles which do not support AWT.</source>
          <target state="translated">JPS APIは、AWTをサポートしていないJavaプロファイルで使用することを想定しています。</target>
        </trans-unit>
        <trans-unit id="8578472fe170c11efcaca36252367b026245c2be" translate="yes" xml:space="preserve">
          <source>The JVM bytecode format supports immediate constants of the classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JVMバイトコード形式は、クラス&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; の&lt;/a&gt;即時定数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="423700bf3f40eb8f7ae2196876409f2568dcd9ca" translate="yes" xml:space="preserve">
          <source>The JVM imposes a similar requirement on &lt;code&gt;invokespecial&lt;/code&gt; instruction, that the receiver argument must match both the resolved method &lt;em&gt;and&lt;/em&gt; the current class. Again, this requirement is enforced by narrowing the type of the leading parameter to the resulting method handle. (See the Java Virtual Machine Specification, section 4.10.1.9.)</source>
          <target state="translated">JVMは、 &lt;code&gt;invokespecial&lt;/code&gt; 命令にも同様の要件を課しています。レシーバー引数は、解決されたメソッド&lt;em&gt;と&lt;/em&gt;現在のクラスの両方に一致する必要があります。繰り返しになりますが、この要件は、主要なパラメーターの型を結果のメソッドハンドルに狭めることによって適用されます。（Java仮想マシン仕様のセクション4.10.1.9を参照してください。）</target>
        </trans-unit>
        <trans-unit id="f6a937822298d3770df670d2d33f12a835018bdf" translate="yes" xml:space="preserve">
          <source>The JVM imposes on all methods and constructors of any kind an absolute limit of 255 stacked arguments. This limit can appear more restrictive in certain cases:</source>
          <target state="translated">JVMは、あらゆる種類のすべてのメソッドおよびコンストラクタに対して、スタックされた引数255個の絶対的な制限を課します。この制限は、特定のケースではより制限的に見えることがあります。</target>
        </trans-unit>
        <trans-unit id="dc6a5c598e3c5bccd4ab59217eeb5725b65103d3" translate="yes" xml:space="preserve">
          <source>The JVM represents constructors and static initializer blocks as internal methods with special names (&lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt;). The internal syntax of invocation instructions allows them to refer to such internal methods as if they were normal methods, but the JVM bytecode verifier rejects them. A lookup of such an internal method will produce a &lt;code&gt;NoSuchMethodException&lt;/code&gt;.</source>
          <target state="translated">JVMは、コンストラクターと静的初期化ブロックを、特別な名前（ &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; および &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt; ）を持つ内部メソッドとして表します。呼び出し命令の内部構文により、通常のメソッドのように内部メソッドを参照できますが、JVMバイトコードベリファイアはそれらを拒否します。そのような内部メソッドのルックアップは &lt;code&gt;NoSuchMethodException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="4bed2dbd7bc1a0a64894245adfbe5487e3761dab" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system is the same as the ISO calendar system apart from the era-based year numbering. The proleptic-year is defined to be equal to the ISO proleptic-year.</source>
          <target state="translated">日本の暦制度は、時代に基づく年号を除いて、ISOの暦制度と同じです。プロレプティックイヤーはISOのプロレプティックイヤーと同じと定義されています。</target>
        </trans-unit>
        <trans-unit id="1377cea6a56d5ed563cbb1106ccb49deee8306eb" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system.</source>
          <target state="translated">日本の皇室暦制度。</target>
        </trans-unit>
        <trans-unit id="7564ca9cd9ffac61a50b36479cc4d2f52a3b5c1f" translate="yes" xml:space="preserve">
          <source>The Japanese calendar system has multiple eras defined by &lt;a href=&quot;japaneseera&quot;&gt;&lt;code&gt;JapaneseEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日本の暦システムには、&lt;a href=&quot;japaneseera&quot;&gt; &lt;code&gt;JapaneseEra&lt;/code&gt; &lt;/a&gt;によって定義された複数の年号があります。</target>
        </trans-unit>
        <trans-unit id="265e051cf5be43bb91edb907b6aaa5aa90a2b761" translate="yes" xml:space="preserve">
          <source>The Japanese month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes. For example:</source>
          <target state="translated">日本の月と曜日は、ISOカレンダーシステムのものと同じです。これらは時代が変わってもリセットされません。例えば</target>
        </trans-unit>
        <trans-unit id="9a132e736768e81687dffdd4d971dcc6de9796ad" translate="yes" xml:space="preserve">
          <source>The Japanese proleptic year, month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes.</source>
          <target state="translated">日本のプロレプティックの年・月・日は、ISOカレンダーシステムのものと同じです。時代が変わってもリセットされない。</target>
        </trans-unit>
        <trans-unit id="61602e7596e12b632597fd4f988db4b318fd0d87" translate="yes" xml:space="preserve">
          <source>The Java Language Specification</source>
          <target state="translated">Java言語仕様書</target>
        </trans-unit>
        <trans-unit id="37d13fecff6728378da832d10b9051c944390c97" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX&lt;sup&gt;TM&lt;/sup&gt;) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">Java Management Extensions（JMX &lt;sup&gt;TM&lt;/sup&gt;）APIは、管理と監視のための標準APIです。一般的な用途は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8bef35235f701eb6de58ba31cfe59d2bb33aa8ff" translate="yes" xml:space="preserve">
          <source>The Java Platform provides a number of classes that perform locale-sensitive operations. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class formats numbers, currency, and percentages in a locale-sensitive manner. Classes such as &lt;code&gt;NumberFormat&lt;/code&gt; have several convenience methods for creating a default object of that type. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class provides these three convenience methods for creating a default &lt;code&gt;NumberFormat&lt;/code&gt; object:</source>
          <target state="translated">Javaプラットフォームは、ロケールに依存する操作を実行するいくつかのクラスを提供します。たとえば、 &lt;code&gt;NumberFormat&lt;/code&gt; クラスは、数値、通貨、およびパーセンテージをロケール依存の方法でフォーマットします。 &lt;code&gt;NumberFormat&lt;/code&gt; などのクラスには、そのタイプのデフォルトオブジェクトを作成するための便利なメソッドがいくつかあります。たとえば、 &lt;code&gt;NumberFormat&lt;/code&gt; クラスは、デフォルトの &lt;code&gt;NumberFormat&lt;/code&gt; オブジェクトを作成するための次の3つの便利なメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="3b60f629f49f10f4985e6a720af54abf514bac30" translate="yes" xml:space="preserve">
          <source>The Java Platform provides three specialized subclasses of &lt;code&gt;Format&lt;/code&gt;-- &lt;code&gt;DateFormat&lt;/code&gt;, &lt;code&gt;MessageFormat&lt;/code&gt;, and &lt;code&gt;NumberFormat&lt;/code&gt;--for formatting dates, messages, and numbers, respectively.</source>
          <target state="translated">Javaプラットフォームの3つの特殊なサブクラスを提供 &lt;code&gt;Format&lt;/code&gt; - &lt;code&gt;DateFormat&lt;/code&gt; の、 &lt;code&gt;MessageFormat&lt;/code&gt; の、と &lt;code&gt;NumberFormat&lt;/code&gt; 日付、メッセージ、数字をフォーマット--for、それぞれ。</target>
        </trans-unit>
        <trans-unit id="03ea0cad9aef11b637a3137ff4122043f3493aef" translate="yes" xml:space="preserve">
          <source>The Java Platform provides two subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt;, &lt;code&gt;ListResourceBundle&lt;/code&gt; and &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, that provide a fairly simple way to create resources. As you saw briefly in a previous example, &lt;code&gt;ListResourceBundle&lt;/code&gt; manages its resource as a list of key/value pairs. &lt;code&gt;PropertyResourceBundle&lt;/code&gt; uses a properties file to manage its resources.</source>
          <target state="translated">Javaプラットフォームは、の2つのサブクラスを提供 &lt;code&gt;ResourceBundle&lt;/code&gt; 、 &lt;code&gt;ListResourceBundle&lt;/code&gt; および &lt;code&gt;PropertyResourceBundle&lt;/code&gt; のリソースを作成するかなり簡単な方法を提供し、。前の例で簡単に見たように、 &lt;code&gt;ListResourceBundle&lt;/code&gt; はそのリソースをキーと値のペアのリストとして管理します。 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; は、プロパティファイルを使用してリソースを管理します。</target>
        </trans-unit>
        <trans-unit id="94f66170e9f1f394a5254a9fe89af973c28cd26f" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage javax.print.attribute.standard to keep the actual attribute classes conceptually separate from the generic apparatus defined in package javax.print.attribute.</source>
          <target state="translated">Java Print Service APIは,インターネット印刷プロトコル(IPP)バージョン1.1の属性をモデルにした標準属性クラス群を定義している。標準属性クラスは,実際の属性クラスをパッケージjavax.print.attributeで定義されている一般的な装置から概念的に分離しておくために,サブパッケージjavax.print.attribute.standardにあります。</target>
        </trans-unit>
        <trans-unit id="a818f0937d6870054c9657fd1853dbbf7260285b" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines these different kinds of attributes with five subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;:</source>
          <target state="translated">Java Print Service APIは、 &lt;code&gt;Attribute&lt;/code&gt; の 5つのサブインターフェースを使用して、これらの異なる種類の属性を定義します。</target>
        </trans-unit>
        <trans-unit id="fe3bd743981c387b2400e5d9b97f685293d95022" translate="yes" xml:space="preserve">
          <source>The Java Print Service API does not define any mandatorily supported DocFlavors. However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">Java Print Service APIは、強制的にサポートされるDocFlavorsを定義していない。しかし、Java Print Serviceインスタンスがクライアントフォーマットされた印刷データに対してサポートする可能性のあるMIMEタイプの例を以下に示す。クラスDocFlavor内のネストされたクラスは、これらの例のdocフレーバーに対して、定義済みの静的定数DocFlavorオブジェクトを宣言している。</target>
        </trans-unit>
        <trans-unit id="65c3c2c1fe707b0a8b3bdeea8d3461a62fcf7c49" translate="yes" xml:space="preserve">
          <source>The Java Print Service API is designed so that vendors can:</source>
          <target state="translated">Java Print Service APIは、ベンダーができるように設計されています。</target>
        </trans-unit>
        <trans-unit id="3f34c755601f30797b5c5b7d5b48474498065dd9" translate="yes" xml:space="preserve">
          <source>The Java Print Service API provides four specializations of an attribute set that are restricted to contain just one of the four kinds of attributes, as discussed in the &lt;a href=&quot;#role&quot;&gt;Attribute Roles&lt;/a&gt; section:</source>
          <target state="translated">Java Print Service APIは、&lt;a href=&quot;#role&quot;&gt;属性の役割の&lt;/a&gt;セクションで説明したように、4種類の属性の1つだけを含むように制限された属性セットの4つの特殊化を提供します。</target>
        </trans-unit>
        <trans-unit id="c2715c77dd34c70665dfad2f1923e173e786e209" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale divides each calendar day into exactly 86400 subdivisions, known as seconds. These seconds may differ from the SI second. It closely matches the de facto international civil time scale, the definition of which changes from time to time.</source>
          <target state="translated">Javaタイムスケールは、各暦日を秒と呼ばれる86400の細分化に分割しています。これらの秒は、SI秒とは異なる場合があります。これは、事実上の国際的な市民時間スケールと密接に一致しており、その定義は時々刻々と変化します。</target>
        </trans-unit>
        <trans-unit id="4bde9066215b58dffb03e10c8882b75db84e87a4" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale has slightly different definitions for different segments of the time-line, each based on the consensus international time scale that is used as the basis for civil time. Whenever the internationally-agreed time scale is modified or replaced, a new segment of the Java Time-Scale must be defined for it. Each segment must meet these requirements:</source>
          <target state="translated">Java時間尺度は,時間軸の異なるセグメントに対してわずかに異なる定義を持っており,それぞれが市民時間の基礎として使用されているコンセンサス国際時間尺度に基づいている。国際的に合意された時間尺度が修正されたり置き換えられたりするたびに、Java時間尺度の新しいセグメントが定義されなければならない。各セグメントは、これらの要件を満たさなければならない。</target>
        </trans-unit>
        <trans-unit id="4600970ab5dcc28d471a34b69880d44724af7c9c" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine Specification</source>
          <target state="translated">Java仮想マシン仕様</target>
        </trans-unit>
        <trans-unit id="e3cf148b298a0b996efd7f97bd7f2e6174fda315" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified.</source>
          <target state="translated">Java 仮想マシンは、ホスト環境に基づいて起動時のデフォルトロケールを設定します。これは、ロケールが明示的に指定されていない場合、多くのロケールに敏感なメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="d9d7a4ea102a2331058fd720ef77be5d28603b6b" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンは、ホスト環境に基づいて、起動時にデフォルトのロケールを設定します。ロケールが明示的に指定されていない場合、ロケールに依存する多くのメソッドで使用されます。&lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt;メソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="935b4a63d6ee5db34b9d75a511cfdfab0947e278" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault(Locale.Category, Locale) method.</source>
          <target state="translated">Java 仮想マシンは、ホスト環境に基づいて起動時のデフォルトロケールを設定します。これは、ロケールが明示的に指定されていない場合、多くのロケールセンシティブなメソッドで使用されます。setDefault(Locale.Category,Locale)メソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="0bf9c7a5833d85446736a0e1c4523720b0baa70e" translate="yes" xml:space="preserve">
          <source>The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">この複合型が表す複合データ値のJavaクラス名（つまり、&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドによって返されるクラス名）は、 &lt;code&gt;CompositeData.class.getName()&lt;/code&gt; によって返される文字列値に設定されます。</target>
        </trans-unit>
        <trans-unit id="bda12988aff6c0c6b0da57eda918cd7f7e41f2f4" translate="yes" xml:space="preserve">
          <source>The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">この表形式タイプが表す表形式データ値のJavaクラス名（つまり、&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドによって返されるクラス名）は、 &lt;code&gt;TabularData.class.getName()&lt;/code&gt; によって返される文字列値に設定されます。</target>
        </trans-unit>
        <trans-unit id="51863c4a757aa5599aa4ec4ebb6fdc59f85b517e" translate="yes" xml:space="preserve">
          <source>The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../java/lang/class#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">&lt;a href=&quot;../../java/lang/class#getName--&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;によって返される、標準MBeanまたはMXBeanのJavaインターフェース名。 MBeanサーバーに直接登録された、または&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して作成された標準MBeanまたはMXBean は、MBeanInfo記述子にこのフィールドを持ちます。</target>
        </trans-unit>
        <trans-unit id="1aedb6f153f14e307ee0a63ee1143e333aca4608" translate="yes" xml:space="preserve">
          <source>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. String concatenation is implemented through the &lt;code&gt;StringBuilder&lt;/code&gt;(or &lt;code&gt;StringBuffer&lt;/code&gt;) class and its &lt;code&gt;append&lt;/code&gt; method. String conversions are implemented through the method &lt;code&gt;toString&lt;/code&gt;, defined by &lt;code&gt;Object&lt;/code&gt; and inherited by all classes in Java. For additional information on string concatenation and conversion, see Gosling, Joy, and Steele,</source>
          <target state="translated">Java言語は、文字列連結演算子（+）、および他のオブジェクトから文字列への変換を特別にサポートしています。文字列の連結は、 &lt;code&gt;StringBuilder&lt;/code&gt; （または &lt;code&gt;StringBuffer&lt;/code&gt; ）クラスとその &lt;code&gt;append&lt;/code&gt; メソッドを介して実装されます。文字列変換は、メソッド &lt;code&gt;toString&lt;/code&gt; を介して実装され、 &lt;code&gt;Object&lt;/code&gt; によって定義され、Javaのすべてのクラスによって継承されます。文字列の連結と変換の詳細については、Gosling、Joy、およびSteeleを参照してください。</target>
        </trans-unit>
        <trans-unit id="e0998193a86cfe456d402b1f0c70a66b6cd6c11c" translate="yes" xml:space="preserve">
          <source>The Java math library is defined with respect to &lt;code&gt;fdlibm&lt;/code&gt; version 5.3. Where &lt;code&gt;fdlibm&lt;/code&gt; provides more than one definition for a function (such as &lt;code&gt;acos&lt;/code&gt;), use the &quot;IEEE 754 core function&quot; version (residing in a file whose name begins with the letter &lt;code&gt;e&lt;/code&gt;). The methods which require &lt;code&gt;fdlibm&lt;/code&gt; semantics are &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;log10&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt;, &lt;code&gt;pow&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;, and &lt;code&gt;log1p&lt;/code&gt;.</source>
          <target state="translated">Java数学ライブラリは、 &lt;code&gt;fdlibm&lt;/code&gt; バージョン5.3 に関して定義されています。どこ &lt;code&gt;fdlibm&lt;/code&gt; は（のような機能のために複数の定義を提供 &lt;code&gt;acos&lt;/code&gt; ）、（名前が文字で始まるファイルに存在する「IEEE 754コア機能」バージョンを使用 &lt;code&gt;e&lt;/code&gt; ）。必要とする方法 &lt;code&gt;fdlibm&lt;/code&gt; セマンティクスがある &lt;code&gt;sin&lt;/code&gt; 、 &lt;code&gt;cos&lt;/code&gt; 、 &lt;code&gt;tan&lt;/code&gt; 、 &lt;code&gt;asin&lt;/code&gt; 、 &lt;code&gt;acos&lt;/code&gt; 、 &lt;code&gt;atan&lt;/code&gt; 、 &lt;code&gt;exp&lt;/code&gt; 、 &lt;code&gt;log&lt;/code&gt; 、 &lt;code&gt;log10&lt;/code&gt; 、 &lt;code&gt;cbrt&lt;/code&gt; 、 &lt;code&gt;atan2&lt;/code&gt; 、 &lt;code&gt;pow&lt;/code&gt; 、 &lt;code&gt;sinh&lt;/code&gt; 、 &lt;code&gt;cosh&lt;/code&gt; 、 &lt;code&gt;tanh&lt;/code&gt; 、 &lt;code&gt;hypot&lt;/code&gt; 、 &lt;code&gt;expm1&lt;/code&gt; 、および &lt;code&gt;log1p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bc96f1b0cc70e1672a7ea3f62bf4ee8f43d325" translate="yes" xml:space="preserve">
          <source>The Java programming language does not guarantee which thread will invoke the &lt;code&gt;finalize&lt;/code&gt; method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates.</source>
          <target state="translated">Javaプログラミング言語は、どのスレッドが特定のオブジェクトの &lt;code&gt;finalize&lt;/code&gt; メソッドを呼び出すかを保証しません。ただし、finalizeを呼び出すスレッドは、finalizeが呼び出されたときに、ユーザーに表示される同期ロックを保持しないことが保証されています。キャッチされない例外がfinalizeメソッドによってスローされた場合、その例外は無視され、そのオブジェクトのファイナライズは終了します。</target>
        </trans-unit>
        <trans-unit id="af13f60de6a564a40dc8e97ebaf3a0143c84236a" translate="yes" xml:space="preserve">
          <source>The Java time-scale is used for all date-time classes. This includes &lt;code&gt;Instant&lt;/code&gt;, &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt;, &lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;code&gt;ZonedDateTime&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Javaタイムスケールは、すべての日時クラスに使用されます。これには、 &lt;code&gt;Instant&lt;/code&gt; 、 &lt;code&gt;LocalDate&lt;/code&gt; 、 &lt;code&gt;LocalTime&lt;/code&gt; 、 &lt;code&gt;OffsetDateTime&lt;/code&gt; 、 &lt;code&gt;ZonedDateTime&lt;/code&gt; 、 &lt;code&gt;Duration&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="b2da8a881d3a54f6e4f6b884054ec854ec43a1d9" translate="yes" xml:space="preserve">
          <source>The Java type of the resource. For field annotations, the default is the type of the field. For method annotations, the default is the type of the JavaBeans property. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">リソースのJava型。フィールド注釈の場合、デフォルトはフィールドのタイプです。メソッドのアノテーションの場合、デフォルトは JavaBeans プロパティの型です。クラス注釈の場合、デフォルトはなく、これを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="43d20fd86e33d070ee07b30fb6fd2637b8965aa6" translate="yes" xml:space="preserve">
          <source>The Java virtual machine</source>
          <target state="translated">Java仮想マシン</target>
        </trans-unit>
        <trans-unit id="9b5c7ce28420ae67114f39b12a0543341609a160" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a</source>
          <target state="translated">Java仮想マシンには</target>
        </trans-unit>
        <trans-unit id="8516f820bb05657121a79dd1bd0a5cddcc1f2f53" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a default provider that provides zone rules for the time-zones defined by IANA Time Zone Database (TZDB). If the system property &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete ZoneRulesProvider class to be loaded as the default provider, using the system class loader. If this system property is not defined, a system-default provider will be loaded to serve as the default provider.</source>
          <target state="translated">Java仮想マシンには、IANAタイムゾーンデータベース（TZDB）によって定義されたタイムゾーンのゾーンルールを提供するデフォルトプロバイダーがあります。システムプロパティ &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; が定義されている場合は、システムクラスローダーを使用して、デフォルトプロバイダーとして読み込まれる具体的なZoneRulesProviderクラスの完全修飾名と見なされます。このシステムプロパティが定義されていない場合、システムデフォルトプロバイダーがロードされ、デフォルトプロバイダーとして機能します。</target>
        </trans-unit>
        <trans-unit id="01e66a7f2f90bc990318958109b0d41e725d670b" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a heap for object allocation and also maintains non-heap memory for the method area and the Java virtual machine execution. The Java virtual machine can have one or more memory pools. Each memory pool represents a memory area of one of the following types:</source>
          <target state="translated">Java仮想マシンは、オブジェクトの割り当てのためのヒープを持ち、また、メソッド領域とJava仮想マシンの実行のための非ヒープメモリを維持します。Java 仮想マシンは、1 つ以上のメモリプールを持つことができます。各メモリプールは、以下のいずれかのタイプのメモリ領域を表します。</target>
        </trans-unit>
        <trans-unit id="20591611464f80238a71287e9fce3d26d00ecfac" translate="yes" xml:space="preserve">
          <source>The Java virtual machine implementation may use a high resolution timer to measure the elapsed time. This method may return the same value even if the collection count has been incremented if the collection elapsed time is very short.</source>
          <target state="translated">Java仮想マシンの実装では、高解像度のタイマーを使用して経過時間を測定することがあります。このメソッドは、コレクションの経過時間が非常に短い場合、コレクションカウントがインクリメントされていても同じ値を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="21c32d462e38386cb39051b42822e7568e72eaed" translate="yes" xml:space="preserve">
          <source>The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt;&lt;code&gt;getPeakUsage()&lt;/code&gt;&lt;/a&gt; method and reset by calling the &lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt;&lt;code&gt;resetPeakUsage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンは、仮想マシンが起動またはピークがリセットされてから、メモリプールのピークメモリ使用量を維持します。ピークのメモリ使用量が返される&lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt; &lt;code&gt;getPeakUsage()&lt;/code&gt; &lt;/a&gt;メソッドと呼び出すことによってリセット&lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt; &lt;code&gt;resetPeakUsage()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="1dd3f55b5efbf2036c2fe1ec00c3c49d3ddb4916" translate="yes" xml:space="preserve">
          <source>The Java virtual machine manages memory other than the heap (referred as</source>
          <target state="translated">Java仮想マシンはヒープ以外のメモリを管理しています(</target>
        </trans-unit>
        <trans-unit id="472437aa219a5ab5c682981b0f53bbaf388053c7" translate="yes" xml:space="preserve">
          <source>The Java virtual machine may measure the time with a high resolution timer. This statistic is reset when the thread contention monitoring is reenabled.</source>
          <target state="translated">Java 仮想マシンは、高解像度タイマーで時間を測定することがあります。この統計量は、スレッド競合監視が再有効化されるとリセットされます。</target>
        </trans-unit>
        <trans-unit id="7d5cc1c9e97c8fd121944655161d88c67a4b91ea" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification</source>
          <target state="translated">Java&amp;trade;言語仕様</target>
        </trans-unit>
        <trans-unit id="fff53af6e46bb1a4be8a5ab0a06369d5f80e1391" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, First Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、初版</target>
        </trans-unit>
        <trans-unit id="417681d10c199b472becfb181846b8f2351a0cd7" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Second Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、第2版</target>
        </trans-unit>
        <trans-unit id="a4154fea8bd8d5b8ca35ca7f9f31b5ca95523b77" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Third Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、第3版</target>
        </trans-unit>
        <trans-unit id="b01e874645c4aa3cc169adba9f26395f941d4bfb" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Virtual Machine Specification</source>
          <target state="translated">Java&amp;trade;仮想マシン仕様</target>
        </trans-unit>
        <trans-unit id="4cadba2d15fbb9804bf151281d2e05044e9bc484" translate="yes" xml:space="preserve">
          <source>The JavaBeans&amp;trade; specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction.</source>
          <target state="translated">JavaBeans&amp;trade;仕様は、JavaBeansがアプレット、アプリケーションの一部である場合の実行時ではなく、対話型の設計、構成、または構築ツールでの構成およびカスタマイズ中にJavaBeansインスタンスが機能するモードである設計時の概念を定義します。または他のライブJava実行可能抽象化。</target>
        </trans-unit>
        <trans-unit id="46152631e4488fac6b1cad7442ef7feac4ea4d12" translate="yes" xml:space="preserve">
          <source>The JobImpressions attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobImpressions attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobImpressions attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobImpressions attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobImpressions属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求でJobImpressions属性の値が提供されていない場合、プリンタはJobImpressions属性の値を計算しようとすることがある。クライアントが印刷要求でJobImpressions属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobImpressions属性の正しい値を決定することができるかもしれない。</target>
        </trans-unit>
        <trans-unit id="2eda45bce719c55226f8cb11330a3730a179a164" translate="yes" xml:space="preserve">
          <source>The JobImpressionsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobImpressionsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobImpressionsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobImpressionsCompleted value is the final value for the job.</source>
          <target state="translated">JobImpressionsCompleted属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobImpressionsCompleted値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobImpressionsCompleted値はジョブが処理されるにつれて増加することを目的としています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobImpressionsCompleted値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="23b552cbebfc9eeb6f00f5f7f1d577e52be27c5e" translate="yes" xml:space="preserve">
          <source>The JobKOctets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobKOctets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobKOctets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobKOctets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobKOctets属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求に JobKOctets 属性の値が提供されていない場合、プリンタは JobKOctets 属性の値を計算しようとすることがあります。クライアントが印刷要求でJobKOctets属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobKoctets属性の正しい値を決定することができる。</target>
        </trans-unit>
        <trans-unit id="10778b515020fa74e3922d67e4e4cfb07a6b5d4d" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the size of the source document data, rather than a measure of the hardcopy output to be produced.</source>
          <target state="translated">また、JobKOctets値には、文書データに埋め込まれた複製命令による乗算係数を含めてはならない。文書データが実際に文書データの複製を含む場合、この値はそのような複製を含む。言い換えれば、この値は、生成されるハードコピー出力の尺度ではなく、常にソース文書データのサイズである。</target>
        </trans-unit>
        <trans-unit id="4f8e193f841acdf58db4b152692036053ed12078" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and indicates the size of the document(s) measured in K octets independent of the number of copies.</source>
          <target state="translated">JobKOctets値には、デバイスがジョブまたはドキュメントデータに対して複数のパスを作成せずに複数のコピーを処理できるかどうか、および出力が照合されるかどうかとは無関係に、&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性で指定されたコピー数が寄与する乗法因子を含めないでください。 。したがって、値は実装とは無関係であり、コピーの数とは無関係にKオクテットで測定されたドキュメントのサイズを示します。</target>
        </trans-unit>
        <trans-unit id="860b972389f862538b6b997fd07b4c1c60636261" translate="yes" xml:space="preserve">
          <source>The JobKOctetsProcessed attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobKOctetsProcessed value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobKOctetsProcessed value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobKOctetsProcessed value is the final value for the job.</source>
          <target state="translated">JobKOctetsProcessed属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobKOctetsProcessed値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobKOctetsProcessed値はジョブが処理されるにつれて増加することを意図しています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobKOctetsProcessed値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="67c4f689dd8dce6456481d0861afa2eb83cc72f8" translate="yes" xml:space="preserve">
          <source>The JobMediaSheets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobMediaSheets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobMediaSheets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobMediaSheets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobMediaSheets属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求でJobMediaSheets属性の値が提供されない場合、プリンタはJobMediaSheets属性の値を計算しようとすることがあります。クライアントが印刷要求でJobMediaSheets属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobMediaSheets属性の正しい値を決定することができるかもしれない。</target>
        </trans-unit>
        <trans-unit id="27e40040d6353841f04365a16d249f070597a18a" translate="yes" xml:space="preserve">
          <source>The JobMediaSheetsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobMediaSheetsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobMediaSheetsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobMediaSheetsCompleted value is the final value for the job.</source>
          <target state="translated">JobMediaSheetsCompleted属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobMediaSheetsCompleted値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobMediaSheetsCompleted値は、ジョブが処理されるにつれて増加することを目的としています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobMediaSheetsCompleted値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="bc898aeb76a9f867124df93fc92a814fb7980188" translate="yes" xml:space="preserve">
          <source>The Julian Day is a standard way of expressing date and time commonly used in the scientific community. It is expressed as a decimal number of whole days where days start at midday. This class represents variations on Julian Days that count whole days from midnight.</source>
          <target state="translated">ユリウス日は、科学界で一般的に使用されている日付と時間の標準的な表現方法です。これは、日が真昼から始まる全日の十進数で表されます。このクラスは、真夜中からの全日を数えるユリウス日のバリエーションを表しています。</target>
        </trans-unit>
        <trans-unit id="b31c8a2b1469694c5596d8e7d24f8ca4168d3814" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">Kerberosネットワーク認証プロトコルは&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120で&lt;/a&gt;定義されています。Javaプラットフォームには、&lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt;パッケージによるKerberosのクライアント側のサポートが含まれています。Kerberosプリンシパルを認証するために&lt;a href=&quot;../spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt;を実装するログインモジュールが存在する場合もあります。</target>
        </trans-unit>
        <trans-unit id="1544cf9c5107663734ae872cc327b8154b4bc517" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys.</source>
          <target state="translated">キーインターフェースは、すべてのキーのトップレベルインターフェースです。</target>
        </trans-unit>
        <trans-unit id="0f7ba838a05da49357b31ae6823009d4f10f3dbe" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys. It defines the functionality shared by all key objects. All keys have three characteristics:</source>
          <target state="translated">キー・インターフェースは、すべてのキーのためのトップレベルのインターフェースです。これは、すべての鍵オブジェクトが共有する機能を定義します。すべての鍵には3つの特徴があります。</target>
        </trans-unit>
        <trans-unit id="cf548aaac46d4e0f0b562c298e02a26e9e223aa6" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys.</source>
          <target state="translated">KeyPairGenerator クラスは、公開鍵と秘密鍵のペアを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="84ce39b134b25304a741de41814f7513944cfe5b" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys. Key pair generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">KeyPairGeneratorクラスは、公開鍵と秘密鍵のペアを生成するために使用されます。キーペアジェネレータは、 &lt;code&gt;getInstance&lt;/code&gt; ファクトリメソッド（特定のクラスのインスタンスを返す静的メソッド）を使用して構築されます。</target>
        </trans-unit>
        <trans-unit id="15b0ebadd884d0b51462c94b77021fc226c8b293" translate="yes" xml:space="preserve">
          <source>The KeyStore is instantiated from &lt;code&gt;provider&lt;/code&gt; if non-null. Otherwise, all installed providers are searched.</source>
          <target state="translated">KeyStoreは、nullでない場合、 &lt;code&gt;provider&lt;/code&gt; からインスタンス化されます。それ以外の場合は、インストールされているすべてのプロバイダーが検索されます。</target>
        </trans-unit>
        <trans-unit id="ba0192d9ab92e21e9c2744dd9f7ef43296184075" translate="yes" xml:space="preserve">
          <source>The LDAPv3 protocol uses controls to send and receive additional data to affect the behavior of predefined operations. Controls can be sent along with any LDAP operation to the server. These are referred to as &lt;em&gt;request controls&lt;/em&gt;. For example, a &quot;sort&quot; control can be sent with an LDAP search operation to request that the results be returned in a particular order. Solicited and unsolicited controls can also be returned with responses from the server. Such controls are referred to as &lt;em&gt;response controls&lt;/em&gt;. For example, an LDAP server might define a special control to return change notifications.</source>
          <target state="translated">LDAPv3プロトコルは、コントロールを使用して追加のデータを送受信し、事前定義された操作の動作に影響を与えます。コントロールは、LDAP操作とともにサーバーに送信できます。これらは、&lt;em&gt;リクエストコントロール&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。たとえば、LDAP検索操作で「ソート」コントロールを送信して、特定の順序で結果を返すように要求できます。要請されたコントロールと要請されていないコントロールも、サーバーからの応答で返すことができます。このようなコントロールは、&lt;em&gt;応答コントロール&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。たとえば、LDAPサーバーは、変更通知を返す特別なコントロールを定義する場合があります。</target>
        </trans-unit>
        <trans-unit id="e247331a2fdfcd1f002adc01fbf899e2a1591f78" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output.</source>
          <target state="translated">Level クラスは、ロギング出力を制御するために使用できる標準ロギングレベルのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="5e0b0c714c17843fb551c38291dba43f83549e84" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output. The logging Level objects are ordered and are specified by ordered integers. Enabling logging at a given level also enables logging at all higher levels.</source>
          <target state="translated">Level クラスは、ロギング出力を制御するために使用できる標準ロギングレベルのセットを定義します。ロギングLevelオブジェクトは順序付きで、順序付き整数で指定されます。与えられたレベルでロギングを有効にすると、それより高いレベルのすべてのロギングも有効になります。</target>
        </trans-unit>
        <trans-unit id="23341604b8e30c5db6f5082ffe273ce643ebf866" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line.</source>
          <target state="translated">LineEvent.Type インナー・クラスは、ライン上でどのようなイベントが発生したかを識別します。</target>
        </trans-unit>
        <trans-unit id="f4515bae178db99e414cd4419e58ab70e3a4ab78" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line. Static instances are provided for the common types (OPEN, CLOSE, START, and STOP).</source>
          <target state="translated">LineEvent.Type インナー・クラスは、ライン上でどのようなイベントが発生したかを識別します。一般的なタイプ (OPEN、CLOSE、START、およびSTOP)に対してスタティック・インスタンスが提供されます。</target>
        </trans-unit>
        <trans-unit id="15a370cb868586ab99d868f607377364eaa66939" translate="yes" xml:space="preserve">
          <source>The Locale constructors have always specified that the language and the country param be two characters in length, although in practice they have accepted any length. The specification has now been relaxed to allow language codes of two to eight characters and country (region) codes of two to three characters, and in particular, three-letter language codes and three-digit region codes as specified in the IANA Language Subtag Registry. For compatibility, the implementation still does not impose a length constraint.</source>
          <target state="translated">Localeのコンストラクタでは、言語と国のパラメータの長さは常に2文字であることを指定してきましたが、実際には任意の長さを受け入れてきました。この仕様は、2文字から8文字の言語コードと2文字から3文字の国(地域)コード、特にIANA言語サブタグレジストリで指定されている3文字の言語コードと3桁の地域コードを許容するように緩和されました。互換性のために、この実装ではまだ長さの制約は課されていない。</target>
        </trans-unit>
        <trans-unit id="3bb20e6e58795891b26d0418b98b5c49029c3c3e" translate="yes" xml:space="preserve">
          <source>The LogManager defines two optional system properties that allow control over the initial configuration:</source>
          <target state="translated">LogManager は、初期設定の制御を可能にする 2 つのオプションのシステムプロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="3cca1e6f62e92b82a24f09973b67d35f6162ed74" translate="yes" xml:space="preserve">
          <source>The LogRecord class is serializable.</source>
          <target state="translated">LogRecord クラスはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="37b5ec8719483e5837405faf74d2042c53b0e061" translate="yes" xml:space="preserve">
          <source>The Logger factory methods call this method to register each newly created Logger.</source>
          <target state="translated">Logger factory メソッドは、このメソッドを呼び出して、新しく作成された各 Logger を登録します。</target>
        </trans-unit>
        <trans-unit id="16fa852d45e166564cfd7fb514ab7d4a6acfffbe" translate="yes" xml:space="preserve">
          <source>The Logging APIs offer both static and dynamic configuration control. Static control enables field service staff to set up a particular configuration and then re-launch the application with the new logging settings. Dynamic control allows for updates to the logging configuration within a currently running program. The APIs also allow for logging to be enabled or disabled for different functional areas of the system. For example, a field service engineer might be interested in tracing all AWT events, but might have no interest in socket events or memory management.</source>
          <target state="translated">ロギング API は、静的および動的な設定制御の両方を提供します。静的制御は、フィールドサービススタッフが特定の設定を設定し、新しいロギング設定でアプリケーションを再起動することを可能にします。動的制御では、現在実行中のプログラム内でロギング設定を更新することができます。また、APIは、システムの異なる機能領域に対してロギングを有効または無効にすることができます。例えば、フィールドサービスエンジニアはすべてのAWTイベントのトレースに興味があるかもしれませんが、ソケットイベントやメモリ管理には興味がないかもしれません。</target>
        </trans-unit>
        <trans-unit id="8d2c9dc56a0259f0e6bad38df059f2ef62f5a015" translate="yes" xml:space="preserve">
          <source>The LoginModule-specific options represent the options configured for this &lt;code&gt;LoginModule&lt;/code&gt; by an administrator or user in the login &lt;code&gt;Configuration&lt;/code&gt;. The options are defined by the &lt;code&gt;LoginModule&lt;/code&gt; itself and control the behavior within it. For example, a &lt;code&gt;LoginModule&lt;/code&gt; may define options to support debugging/testing capabilities. Options are defined using a key-value syntax, such as</source>
          <target state="translated">LoginModule固有のオプションは、ログイン &lt;code&gt;Configuration&lt;/code&gt; で管理者またはユーザーがこの &lt;code&gt;LoginModule&lt;/code&gt; 用に構成したオプションを表します。オプションは &lt;code&gt;LoginModule&lt;/code&gt; 自体によって定義され、LoginModule内の動作を制御します。たとえば、 &lt;code&gt;LoginModule&lt;/code&gt; は、デバッグ/テスト機能をサポートするオプションを定義できます。オプションは、次のようなKey-Value構文を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="873df94afa4e7ad82e48e9073fb806c35bb167b5" translate="yes" xml:space="preserve">
          <source>The MAC result is stored in &lt;code&gt;output&lt;/code&gt;, starting at &lt;code&gt;outOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">MACの結果は、 &lt;code&gt;outOffset&lt;/code&gt; から始まる &lt;code&gt;output&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="8e20974e279464971ac54f4c492ac718451f3fb7" translate="yes" xml:space="preserve">
          <source>The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt;&lt;code&gt;QueryExp&lt;/code&gt;&lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt;, but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</source>
          <target state="translated">MBeanサーバーは、その&lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;メソッドを使用して、特定の条件を満たすMBeanを照会できます。メソッドの&lt;a href=&quot;queryexp&quot;&gt; &lt;code&gt;QueryExp&lt;/code&gt; &lt;/a&gt;パラメータは、インターフェイス &lt;code&gt;QueryExp&lt;/code&gt; の任意の実装にすることができますが、通常は、このクラスの静的メソッドを呼び出して &lt;code&gt;QueryExp&lt;/code&gt; 値を取得するのが最善です。これは、リモートMBeanサーバーをクエリする場合に特に当てはまります &lt;code&gt;QueryExp&lt;/code&gt; インターフェースのカスタム実装がリモートMBeanサーバーに存在しない場合がありますが、このクラスのメソッドは、JMX実装の一部である標準クラスのみを返します。</target>
        </trans-unit>
        <trans-unit id="72d1d3a5c29db56a086580b10e87cee9417c2769" translate="yes" xml:space="preserve">
          <source>The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用されるMBeanサーバーは、&lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;によって返されるサーバーです。</target>
        </trans-unit>
        <trans-unit id="21324a38f03c31ace3a1e422ca3454c83ac8dbb8" translate="yes" xml:space="preserve">
          <source>The MBean is already registered in the repository.</source>
          <target state="translated">MBeanはすでにリポジトリに登録されています。</target>
        </trans-unit>
        <trans-unit id="43753879ff4a9ab9e94f41c105bc04ec605906f3" translate="yes" xml:space="preserve">
          <source>The MBean must have a listener that exactly matches the given &lt;code&gt;listener&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;handback&lt;/code&gt; parameters. If there is more than one such listener, only one is removed.</source>
          <target state="translated">MBeanには、指定された &lt;code&gt;listener&lt;/code&gt; 、 &lt;code&gt;filter&lt;/code&gt; 、および &lt;code&gt;handback&lt;/code&gt; パラメータと完全に一致するリスナーが必要です。そのようなリスナーが複数ある場合は、1つだけが削除されます。</target>
        </trans-unit>
        <trans-unit id="30152426051a3aa7c2787f9bb448c65fd9d96573" translate="yes" xml:space="preserve">
          <source>The MBean server connection through which the methods of a proxy using this handler are forwarded.</source>
          <target state="translated">このハンドラを使用したプロキシのメソッドが転送される MBean サーバ接続。</target>
        </trans-unit>
        <trans-unit id="5a6b667365181658d557141a79bdcd9ae1d79d48" translate="yes" xml:space="preserve">
          <source>The MBeanServer reference is internally kept. This will allow &lt;code&gt;findMBeanServer&lt;/code&gt; to return a reference to this MBeanServer object.</source>
          <target state="translated">MBeanServer参照は内部的に保持されます。これにより、 &lt;code&gt;findMBeanServer&lt;/code&gt; がこのMBeanServerオブジェクトへの参照を返すことができます。</target>
        </trans-unit>
        <trans-unit id="fce98176f741b29841e04388f314ecc341556fb9" translate="yes" xml:space="preserve">
          <source>The MBeanServerBuilder makes it possible to wrap the MBeanServers returned by the default MBeanServerBuilder implementation, for the purpose of e.g. adding an additional security layer.</source>
          <target state="translated">MBeanServerBuilder を使用すると、デフォルトの MBeanServerBuilder 実装で返された MBeanServers をラップして、セキュリティ層を追加することができます。</target>
        </trans-unit>
        <trans-unit id="c43e787474141d0bb72e21314b04491164ecd29c" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-1&quot; message digest.</source>
          <target state="translated">SHA-1 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="ded68968556406a67098d9312cb325eb7740b1a7" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-224&quot; message digest.</source>
          <target state="translated">SHA-224 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="30567a972c0ebfa4faa9759c8c4f5615d0736a78" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-256&quot; message digest.</source>
          <target state="translated">SHA-256 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="8f743fd5434a0de8774dcd2c54b80badfe4a3dec" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-384&quot; message digest.</source>
          <target state="translated">SHA-384 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="773fa0838097295208f32770a4edbdf66bd50a46" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512 message digest.</source>
          <target state="translated">SHA-512メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="516e21a61c986db4b650efb7f3b9edffb19e1c28" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 Specification defines both 7-bit controllers and 14-bit controllers. Continuous controllers, such as wheels and sliders, typically have 14 bits (two MIDI bytes), while discrete controllers, such as switches, typically have 7 bits (one MIDI byte). Refer to the specification to see the expected resolution for each type of control.</source>
          <target state="translated">MIDI 1.0 仕様では 7 ビットコントローラと 14 ビットコントローラの両方が定義されています。ホイールやスライダーなどの連続的なコントローラは通常 14 ビット(2 つの MIDI バイト)で、スイッチなどの個別のコントローラは通常 7 ビット(1 つの MIDI バイト)です。各タイプのコントロールの期待される解像度については、仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b90ca10823dacdb7ec1aff6e9c338eb2858be24" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 specification provides for 16 channels, so this method returns an array of at least 16 elements. However, if this synthesizer doesn't make use of all 16 channels, some of the elements of the array might be &lt;code&gt;null&lt;/code&gt;, so you should check each element before using it.</source>
          <target state="translated">MIDI 1.0仕様は16チャネルを提供するため、このメソッドは少なくとも16要素の配列を返します。ただし、このシンセサイザが16チャネルすべてを使用しない場合、配列の一部の要素が &lt;code&gt;null&lt;/code&gt; になる可能性があるため、使用する前に各要素を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="b52e6c1511e484eaf10f9c3556aee2243b42e67c" translate="yes" xml:space="preserve">
          <source>The MIDI channel on which this voice is playing. The value is a zero-based channel number if the voice is active, or unspecified if the voice is inactive.</source>
          <target state="translated">この音色が演奏されている MIDI チャンネル。ボイスがアクティブな場合はゼロベースのチャンネル番号、アクティブでない場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="72e471be8e18253cd2fa90755b2430be47a7c9c7" translate="yes" xml:space="preserve">
          <source>The MIDI message data. The first byte is the status byte for the message; subsequent bytes up to the length of the message are data bytes for this message.</source>
          <target state="translated">MIDI メッセージデータ。最初のバイトはメッセージのステータスバイトで、メッセージの長さまでの後続のバイトはこのメッセージのデータバイトです。</target>
        </trans-unit>
        <trans-unit id="09d0f1e1fda22537e5c3106cad4d736b151fe66f" translate="yes" xml:space="preserve">
          <source>The MIDI note that this voice is playing. The range for an active voice is from 0 to 127 in semitones, with 60 referring to Middle C. The value is unspecified if the voice is inactive.</source>
          <target state="translated">この音色が演奏しているMIDIノート。アクティブな音色の範囲は0から127までの半音で、60はミドルCを基準にしています。</target>
        </trans-unit>
        <trans-unit id="9f275ac1e77302fd1f9c984942071af0000235dd" translate="yes" xml:space="preserve">
          <source>The MIDI specification does not dictate whether notes that are already sounding should switch to the new instrument (timbre) or continue with their original timbre until terminated by a note-off.</source>
          <target state="translated">MIDI仕様では、既に鳴っている音符を新しい楽器(音色)に切り替えるか、ノートオフで終了するまで元の音色を維持するかは規定されていません。</target>
        </trans-unit>
        <trans-unit id="635898bd1d6ec018c38dd8a4feda9d061e0d6d2b" translate="yes" xml:space="preserve">
          <source>The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend). The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting. However, the General MIDI specification says that the default range should be two semitones up and down from center. It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setPitchBend&lt;/code&gt; was successful, use &lt;code&gt;getPitchBend&lt;/code&gt;.</source>
          <target state="translated">MIDI仕様では、ピッチベンドは14ビット値であることが規定されており、ゼロは最大の下向きのベンド、16383は最大の上向きのベンド、8192が中心（ピッチベンドなし）です。ピッチ変更の実際の量は指定されていません。ピッチベンド感度設定で変更できます。ただし、一般的なMIDI仕様では、デフォルトの範囲は中央から上下に2セミトーンにする必要があると規定されています。基になるシンセサイザがこのMIDIメッセージをサポートしていない可能性があります。 &lt;code&gt;setPitchBend&lt;/code&gt; が成功したことを確認するには、getPitchBendを使用し &lt;code&gt;getPitchBend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c526e09fb95606778bb5e764a54a0e9f208fc206" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java&lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt; uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;midimessage#getStatus--&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can can be converted to integers using this conversion:</source>
          <target state="translated">MIDI規格は、MIDIデータをバイト単位で表します。ただし、Java &lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt;は符号付きバイトを使用するため、Java Sound APIはMIDIデータを表現するときにバイトではなく整数を使用します。たとえば、 &lt;code&gt;MidiMessage&lt;/code&gt; の&lt;a href=&quot;midimessage#getStatus--&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;メソッドは、MIDIステータスバイトを整数として返します。 Java Soundの外部で発生し、現在符号付きバイトとしてエンコードされているMIDIデータを処理している場合、この変換を使用してバイトを整数に変換できます。</target>
        </trans-unit>
        <trans-unit id="0c8a2781b35fa31817c29abe30b50e8043af665c" translate="yes" xml:space="preserve">
          <source>The MIDI tracks in this sequence.</source>
          <target state="translated">このシーケンスのMIDIトラック。</target>
        </trans-unit>
        <trans-unit id="23a350af8445001f598c4651a4f45324e9f33c23" translate="yes" xml:space="preserve">
          <source>The MLet text file's base URL.</source>
          <target state="translated">MLetテキストファイルのベースURLです。</target>
        </trans-unit>
        <trans-unit id="db0ce9ae1e5d2f89a8f312663fdfbed2b32ba495" translate="yes" xml:space="preserve">
          <source>The MXBean concept provides a simple way to code an MBean that only references a predefined set of types, the ones defined by &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt;. In this way, you can be sure that your MBean will be usable by any client, including remote clients, without any requirement that the client have access to &lt;em&gt;model-specific classes&lt;/em&gt; representing the types of your MBeans.</source>
          <target state="translated">MXBeanの概念は、&lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; で&lt;/a&gt;定義されている定義済みのタイプのセットのみを参照するMBeanをコーディングする簡単な方法を提供します。このようにして、クライアントがMBeanのタイプを表す&lt;em&gt;モデル固有のクラスに&lt;/em&gt;アクセスする必要がなくても、リモートクライアントを含むすべてのクライアントがMBeanを確実に使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="d4a3d1afcec2a7b84cb429f3bcbbf430180a0aa8" translate="yes" xml:space="preserve">
          <source>The ManageReferral control's assigned object identifier is 2.16.840.1.113730.3.4.2.</source>
          <target state="translated">ManageReferrerral コントロールに割り当てられたオブジェクト識別子は 2.16.840.1.11730.3.4.2 です。</target>
        </trans-unit>
        <trans-unit id="f0c9875b8d07e007e2745fc0af6fe732b94df483" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes.</source>
          <target state="translated">マニフェスト・クラスは、マニフェスト・エントリ名とそれに関連する属性を維持するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0f91edbc800e6ebe0a97d46777ffeab5dd79019f" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the  Manifest format specification.</source>
          <target state="translated">Manifestクラスは、マニフェスト・エントリ名とそれに関連する属性を維持するために使用されます。Manifestの主要な属性と、エントリごとの属性があります。マニフェスト・フォーマットに関する情報は、マニフェスト・フォーマット仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="a14dcb9ffe833bd8ff0c3971c624e1ee8fa1ea44" translate="yes" xml:space="preserve">
          <source>The MediaSize is in turn used to locate the MediaSizeName object. This method may return null if the closest matching MediaSize has no corresponding Media instance.</source>
          <target state="translated">MediaSize は、MediaSizeName オブジェクトを見つけるために使用されます。最も近い一致する MediaSize に対応する Media インスタンスがない場合、このメソッドは null を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="875260bee7cb4b86188f6d5c14bdd4b99434b19c" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras, 'ROC' and 'BEFORE_ROC', defined by &lt;a href=&quot;minguoera&quot;&gt;&lt;code&gt;MinguoEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Minguoカレンダーシステムには、&lt;a href=&quot;minguoera&quot;&gt; &lt;code&gt;MinguoEra&lt;/code&gt; &lt;/a&gt;によって定義された「ROC」と「BEFORE_ROC」の2つの時代があります。</target>
        </trans-unit>
        <trans-unit id="8488e49133ae34f00360eaccd8da765934bd62e6" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras. The current era, for years from 1 onwards, is known as the 'Republic of China' era. All previous years, zero or earlier in the proleptic count or one and greater in the year-of-era count, are part of the 'Before Republic of China' era.</source>
          <target state="translated">民国暦には2つの時代があります。1年目以降の年を「中華民国時代」といいます。それ以前の年は「中華民国以前」と呼ばれていますが、それ以前の年は「中華民国以前」と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="82fefb5d3040f57efd3b63bb98ca09fc3ccfc0a0" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system.</source>
          <target state="translated">みんぐうカレンダーシステム。</target>
        </trans-unit>
        <trans-unit id="a545218db7a03aed04c1ac511afdb4cfed76973c" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo isReadable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo isReadable メソッドは 'false' を返します。</target>
        </trans-unit>
        <trans-unit id="622c5c9f064611bbc382eb21caab00da9baf69e6" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.</source>
          <target state="translated">ModelMBeanAttributeInfoオブジェクトは、ModelMBeanの属性を記述します。</target>
        </trans-unit>
        <trans-unit id="7515b956ff4baf3913874b737697b14e24efd566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean. It is a subclass of MBeanAttributeInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanAttributeInfo オブジェクトは、ModelMBean の属性を記述します。これはMBeanAttributeInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="0c7970e27c195e599aad6a1440a8c2fd34d10c3b" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo's isWritable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo の isWritable メソッドは 'false' を返します。</target>
        </trans-unit>
        <trans-unit id="ee6068579dec79a74358815593f8fb0ae992ddc8" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.</source>
          <target state="translated">ModelMBeanConstructorInfoオブジェクトは、ModelMBeanのコンストラクタを記述します。</target>
        </trans-unit>
        <trans-unit id="d6d0e1ffbdbc4b382742186b6969198f0e473566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean. It is a subclass of MBeanConstructorInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanConstructorInfo オブジェクトは、ModelMBean のコンストラクタを記述します。これはMBeanConstructorInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="9ea1fe7432118222c8edb7be56bce005b9d32202" translate="yes" xml:space="preserve">
          <source>The ModelMBeanInfo of the Model MBean is stored in a file.</source>
          <target state="translated">モデルMBeanのModelMBeanInfoは、ファイルに格納されています。</target>
        </trans-unit>
        <trans-unit id="be717043f5a4f39bd2bd5c39bd928fa423eadd62" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean.</source>
          <target state="translated">ModelMBeanNotificationInfoオブジェクトは、ModelMBeanによって発行される通知を記述します。</target>
        </trans-unit>
        <trans-unit id="0e87a04c7fd637b21db2de3d9c9f1aa8fb0a7e77" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean. It is a subclass of MBeanNotificationInfo with the addition of an associated Descriptor and an implementation of the Descriptor interface.</source>
          <target state="translated">ModelMBeanNotificationInfo オブジェクトは、ModelMBean によって発行される通知を記述します。これはMBeanNotificationInfoのサブクラスで、関連するDescriptorとDescriptorインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="fe7d736d21ad24599ca368ba9eda956e4fa29c39" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean.</source>
          <target state="translated">ModelMBeanOperationInfo オブジェクトは、ModelMBean の管理操作を記述します。</target>
        </trans-unit>
        <trans-unit id="f0a2617a3fc98a6c5d488b0a6049a4f3b639a203" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean. It is a subclass of MBeanOperationInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanOperationInfo オブジェクトは、ModelMBean の管理操作を記述します。これはMBeanOperationInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="513ceb059a7b6fcddfe05011f87eba04b0d4e534" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers.</source>
          <target state="translated">Modifierクラスは、クラスとメンバーのアクセス修飾子をデコードするための &lt;code&gt;static&lt;/code&gt; メソッドと定数を提供します。</target>
        </trans-unit>
        <trans-unit id="01b236d448fafe1eecbecf699e0dbd1752899ea4" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of</source>
          <target state="translated">Modifierクラスは、クラスとメンバーのアクセス修飾子をデコードするための &lt;code&gt;static&lt;/code&gt; メソッドと定数を提供します。修飾子のセットは、異なる修飾子を表す個別のビット位置を持つ整数として表されます。修飾子を表す定数の値は、セクション4.1、4.4、4.5、および4.7の表から取得されます。</target>
        </trans-unit>
        <trans-unit id="2333e86e53a0d2dc1db2ea3db8dcf5c9ff0df51f" translate="yes" xml:space="preserve">
          <source>The NUMERIC_SHAPING attribute in the text, if present, converts European digits to other decimal digits before running the bidi algorithm. This attribute, if present, must be applied to all the text in the paragraph.</source>
          <target state="translated">テキスト内の NUMERIC_SHAPING 属性が存在する場合は、bidi アルゴリズムを実行する前に欧文桁を他の 10 進数に変換します。この属性が存在する場合は、段落内のすべてのテキストに適用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="463ad161e211102811e3b4f729e92c59017920f0" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using OBJECT_SCOPE will contain one or zero element. The enumeration contains one element if the named object satisfies the search filter specified in search(). The element will have as its name the empty string because the names of elements in the NamingEnumeration are relative to the target context--in this case, the target context is the named object. It contains zero element if the named object does not satisfy the search filter specified in search().</source>
          <target state="translated">OBJECT_SCOPEを用いたsearch()の結果として得られるNamingEnumerationは、1つまたは0つの要素を含む。命名されたオブジェクトがsearch()で指定された検索フィルタを満たすならば、列挙は一つの要素を含みます。なぜなら、NamingEnumerationの中の要素の名前はターゲット・コンテキストからの相対的なものだからです--この場合、ターゲット・コンテキストは名前付きオブジェクトです。名前付きオブジェクトが search()で指定した検索フィルタを満たさない場合は、要素はゼロとなります。</target>
        </trans-unit>
        <trans-unit id="f597fd36413579878114afaa6d6023419e477bcb" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using ONELEVEL_SCOPE contains elements with objects in the named context that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are atomic names relative to the named context.</source>
          <target state="translated">ONELEVEL_SCOPE を使用した search()の結果として得られる NamingEnumeration には、 search()で指定された検索フィルタを満たす名前付きコンテキスト内のオブジェクトを持つ要素が含まれています。NamingEnumeration 内の要素の名前は、名前付きコンテキストからの相対的な原子名です。</target>
        </trans-unit>
        <trans-unit id="da9e1b040a45d5ff3225e516ec2f10b9b87c4fde" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using SUBTREE_SCOPE contains elements of objects from the subtree (including the named context) that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are either relative to the named context or is a URL string. If the named context satisfies the search filter, it is included in the enumeration with the empty string as its name.</source>
          <target state="translated">SUBTREE_SCOPE を使用した search()の結果として得られる NamingEnumeration には、search()で指定された検索フィルタを満たすサブツリー (名前付きコンテキストを含む)のオブジェクトの要素が含まれます。NamingEnumeration に含まれる要素の名前は、指定されたコンテキストからの相対的なものか、URL 文字列です。名前付きコンテキストが検索フィルタを満たす場合は、空の文字列を名前として列挙に含まれます。</target>
        </trans-unit>
        <trans-unit id="339f160048f54fde5fb16ed0dd770edbfb611d30" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean.</source>
          <target state="translated">Notification クラスは、MBean が発行する通知を表します。</target>
        </trans-unit>
        <trans-unit id="cf39ffb21a4256234c05b38d7bda0371c83db12a" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean. It contains a reference to the source MBean: if the notification has been forwarded through the MBean server, and the original source of the notification was a reference to the emitting MBean object, then the MBean server replaces it by the MBean's ObjectName. If the listener has registered directly with the MBean, this is either the object name or a direct reference to the MBean.</source>
          <target state="translated">Notification クラスは、MBean によって発行される通知を表します。通知が MBean サーバを介して転送された場合、通知の元のソースが発行された MBean オブジェクトへの参照であった場合、MBean サーバはそれを MBean の ObjectName で置き換えます。リスナーが MBean に直接登録している場合、これはオブジェクト名または MBean への直接の参照となります。</target>
        </trans-unit>
        <trans-unit id="21674881f205ff2b1ebde10ad56146b65e883a73" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text.</source>
          <target state="translated">NullCipherクラスは、平文を変換しない &quot;identity cipher &quot;を提供するクラスです。</target>
        </trans-unit>
        <trans-unit id="4eba459ac1063b013ecb05450cfc942330983956" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text. As a consequence, the ciphertext is identical to the plaintext. All initialization methods do nothing, while the blocksize is set to 1 byte.</source>
          <target state="translated">NullCipher クラスは、平文を変換しない「同一性暗号」を提供するクラスです。結果として、暗号文は平文と同じになります。すべての初期化メソッドは何もせず、ブロックサイズは 1 バイトに設定されます。</target>
        </trans-unit>
        <trans-unit id="af7f35dd7e76fe866932423b2aed6d1fb8aee4d0" translate="yes" xml:space="preserve">
          <source>The OAEP parameter set with all default values.</source>
          <target state="translated">すべてのデフォルト値が設定されたOAEPパラメータセット。</target>
        </trans-unit>
        <trans-unit id="d3c91484eda423d34310b6f683e8f9c4d38353ad" translate="yes" xml:space="preserve">
          <source>The OCSP responder returns one of the following errors specified in section 2.3 of RFC 2560: internalError or tryLater.</source>
          <target state="translated">OCSP レスポンダは、RFC 2560 のセクション 2.3 で指定された以下のエラー(internalError または tryLater)のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="590e9f81926a84b9e3f08b8204debee01bf90568" translate="yes" xml:space="preserve">
          <source>The Object to which resolution was successful. Cannot be null.</source>
          <target state="translated">解決に成功したオブジェクト。ヌルにすることはできません。</target>
        </trans-unit>
        <trans-unit id="2d9af7dd4afe4b3827fea167ae916792006d5495" translate="yes" xml:space="preserve">
          <source>The ObjectFactoryBuilder determines the policy used when trying to load object factories. See getObjectInstance() and class ObjectFactory for a description of the default policy. setObjectFactoryBuilder() overrides this default policy by installing an ObjectFactoryBuilder. Subsequent object factories will be loaded and created using the installed builder.</source>
          <target state="translated">ObjectFactoryBuilderは、オブジェクトファクトリをロードする際に使用するポリシーを決定します。デフォルトのポリシーについては getObjectInstance()と ObjectFactory クラスを参照してください。それ以降のオブジェクトファクトリは、インストールされたビルダーを使用してロードされ、作成されます。</target>
        </trans-unit>
        <trans-unit id="5419cd5a84f61ee5075bb1b79dcc22de8c464f19" translate="yes" xml:space="preserve">
          <source>The ObjectOutputStream.writeObject method takes a parameter of type Object (as opposed to type Serializable) to allow for cases where non-serializable objects are replaced by serializable ones.</source>
          <target state="translated">ObjectOutputStream.writeObject メソッドは、シリアライズ可能でないオブジェクトがシリアライズ可能なものに置き換えられる場合に対応するために、(シリアライズ可能な型ではなく)Object 型のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="d1e3e58b05fa221f0f71b1840e5fa4b72d867a75" translate="yes" xml:space="preserve">
          <source>The ObjectStreamField object of the named field or null if there is no such named field.</source>
          <target state="translated">指定されたフィールドのObjectStreamFieldオブジェクト、またはそのような指定されたフィールドがない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="14746a7869df9344bf3add89eda86eda0f27df41" translate="yes" xml:space="preserve">
          <source>The Open Type of this element. In the case of &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; and &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, this is the Open Type of the attribute or parameter. In the case of &lt;code&gt;MBeanOperationInfo&lt;/code&gt;, it is the Open Type of the return value. This field is set in the Descriptor for all instances of &lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;. It is also set for attributes, operations, and parameters of MXBeans.</source>
          <target state="translated">この要素の公開タイプ。 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; および &lt;code&gt;MBeanParameterInfo&lt;/code&gt; の場合、これは属性またはパラメーターのOpen Typeです。 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; の場合は、戻り値のOpen Typeです。このフィールドは、&lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスの記述子で設定されます。また、MXBeanの属性、操作、およびパラメーターに対しても設定されます。</target>
        </trans-unit>
        <trans-unit id="3d8ca0b1298715049081cc8a7ee921c31ef00c4d" translate="yes" xml:space="preserve">
          <source>The Open Type, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;a href=&quot;openmbean/arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(1, &lt;/code&gt;&lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.STRING&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, representing a 1-dimensional array of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">オープンタイプ&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は&lt;a href=&quot;openmbean/arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(1, &lt;/code&gt; &lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.STRING&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; で、 &lt;code&gt;String&lt;/code&gt; の1次元配列を表します。</target>
        </trans-unit>
        <trans-unit id="c8d2a39da861a7048f3bf16ac55acc32a5404839" translate="yes" xml:space="preserve">
          <source>The POSIX attributes of a file are retrieved using a &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; by invoking its &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルのPOSIX属性は、その&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;を使用して取得されます。</target>
        </trans-unit>
        <trans-unit id="b3ab28242caa847b286fc90013d2b0491ec3901c" translate="yes" xml:space="preserve">
          <source>The PSS parameter set with all default values.</source>
          <target state="translated">すべてのデフォルト値が設定された PSS パラメータセット。</target>
        </trans-unit>
        <trans-unit id="3d027f6c803d6758ba706e29a00afc1193bf2442" translate="yes" xml:space="preserve">
          <source>The ParameterDescriptor class allows bean implementors to provide additional information on each of their parameters, beyond the low level type information provided by the java.lang.reflect.Method class.</source>
          <target state="translated">ParameterDescriptorクラスは、ビーンの実装者が、java.lang.reflect.Methodクラスで提供される低レベルの型情報を超えて、それぞれのパラメータに関する追加情報を提供することを可能にします。</target>
        </trans-unit>
        <trans-unit id="b49db7c6419de0ed107d7d806648cd410319d193" translate="yes" xml:space="preserve">
          <source>The PasswordAuthentication collected from the user, or null if none is provided.</source>
          <target state="translated">ユーザから収集した PasswordAuthentication、または何も提供されていない場合は NULL。</target>
        </trans-unit>
        <trans-unit id="47162c3848702f346f4c344da14d624a5c12818f" translate="yes" xml:space="preserve">
          <source>The Permission class for reflective operations.</source>
          <target state="translated">リフレクト操作のためのパーミッションクラスです。</target>
        </trans-unit>
        <trans-unit id="2fe6df3634a9b58d388e16b81f2a5767b8a67a98" translate="yes" xml:space="preserve">
          <source>The PermissionCollection returned by the &lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; method is a homogeneous collection, which stores only Permission objects for a given Permission type. A PermissionCollection may also be heterogeneous. For example, Permissions is a PermissionCollection subclass that represents a collection of PermissionCollections. That is, its members are each a homogeneous PermissionCollection. For example, a Permissions object might have a FilePermissionCollection for all the FilePermission objects, a SocketPermissionCollection for all the SocketPermission objects, and so on. Its &lt;code&gt;add&lt;/code&gt; method adds a permission to the appropriate collection.</source>
          <target state="translated">&lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; メソッドによって返されるPermissionCollectionは、特定のPermissionタイプのPermissionオブジェクトのみを格納する同種のコレクションです。 PermissionCollectionは、異種の場合もあります。たとえば、Permissionsは、PermissionCollectionsのコレクションを表すPermissionCollectionサブクラスです。つまり、そのメンバーはそれぞれ同種のPermissionCollectionです。たとえば、Permissionsオブジェクトには、すべてのFilePermissionオブジェクトのFilePermissionCollection、すべてのSocketPermissionオブジェクトのSocketPermissionCollectionなどがあります。その &lt;code&gt;add&lt;/code&gt; メソッドは、適切なコレクションに権限を追加します。</target>
        </trans-unit>
        <trans-unit id="5b44fa11f797cda619a6aef640c6e5f1150da36c" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API.</source>
          <target state="translated">PersistenceDelegateクラスは、与えられたクラスのインスタンスの状態をクラスのパブリックAPIのメソッドで表現する責任を負います。</target>
        </trans-unit>
        <trans-unit id="fe7a2d34b2335b92e9d706d17e53c3f47d5a8dbf" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API. Instead of associating the responsibility of persistence with the class itself as is done, for example, by the &lt;code&gt;readObject&lt;/code&gt; and &lt;code&gt;writeObject&lt;/code&gt; methods used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;, streams like the &lt;code&gt;XMLEncoder&lt;/code&gt; which use this delegation model can have their behavior controlled independently of the classes themselves. Normally, the class is the best place to put such information and conventions can easily be expressed in this delegation scheme to do just that. Sometimes however, it is the case that a minor problem in a single class prevents an entire object graph from being written and this can leave the application developer with no recourse but to attempt to shadow the problematic classes locally or use alternative persistence techniques. In situations like these, the delegation model gives a relatively clean mechanism for the application developer to intervene in all parts of the serialization process without requiring that modifications be made to the implementation of classes which are not part of the application itself.</source>
          <target state="translated">PersistenceDelegateクラスは、クラスのパブリックAPIのメソッドに関して、特定のクラスのインスタンスの状態を表現する責任を負います。 &lt;code&gt;ObjectOutputStream&lt;/code&gt; で使用される &lt;code&gt;readObject&lt;/code&gt; メソッドや &lt;code&gt;writeObject&lt;/code&gt; メソッドなど、 &lt;code&gt;XMLEncoder&lt;/code&gt; のようなストリームによって行われるように、永続性の責任をクラス自体に関連付ける代わりにこの委任モデルを使用するクラスは、クラス自体とは独立して動作を制御できます。通常、クラスはそのような情報を配置するのに最適な場所であり、この委任スキームでは、それを行うための規則を簡単に表現できます。ただし、単一のクラスの軽微な問題が原因でオブジェクトグラフ全体を作成できない場合があるため、アプリケーション開発者は、問題のあるクラスをローカルでシャドウするか、代替の永続化手法を使用するしかありません。このような状況では、委任モデルは、アプリケーション開発者がアプリケーション自体の一部ではないクラスの実装に変更を加えることなく、シリアル化プロセスのすべての部分に介入できる比較的クリーンなメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="0f579bdcf97e6eb9cb7574a266fa66a89a905516" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization.</source>
          <target state="translated">PostConstruct アノテーションは、任意の初期化を行うために依存性注入が行われた後に実行する必要があるメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="663424111809ef7a25cf879a877b2f4c747a5c6b" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization. This method MUST be invoked before the class is put into service. This annotation MUST be supported on all classes that support dependency injection. The method annotated with PostConstruct MUST be invoked even if the class does not request any resources to be injected. Only one method can be annotated with this annotation. The method on which the PostConstruct annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PostConstruct アノテーションは、任意の初期化を実行するために依存性注入が行われた後に実行する必要のあるメソッドで使用されます。このメソッドは、クラスがサービスに投入される前に呼び出されなければなりません(MUST)。このアノテーションは、依存性注入をサポートするすべてのクラスでサポートされなければなりません(MUST)。PostConstruct でアノテーションされたメソッドは、クラスが注入するリソースを要求しない場合でも呼び出されなければなりません[MUST]。このアノテーションでアノテーションできるメソッドは 1 つだけです。PostConstruct アノテーションが適用されるメソッドは、以下の基準をすべて満たさなければなりません[MUST]。</target>
        </trans-unit>
        <trans-unit id="474d2291101f131bfdaaf8be9f4fb6c2d55ed0cb" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container.</source>
          <target state="translated">PreDestroy アノテーションは、コンテナによってインスタンスが削除される過程にあることを知らせるコールバック通知としてメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="3f4e141fe06f04a529a2ebb0a5d0f52a343eafc5" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container. The method annotated with PreDestroy is typically used to release resources that it has been holding. This annotation MUST be supported by all container managed objects that support PostConstruct except the application client container in Java EE 5. The method on which the PreDestroy annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PreDestroy アノテーションは、コンテナによってインスタンスが削除される過程にあることを知らせるコールバック通知としてメソッドで使用されます。PreDestroy でアノテーションされたメソッドは、通常は保持していたリソースを解放するために使用されます。このアノテーションは、Java EE 5 のアプリケーション・クライアント・コンテナを除く、PostConstruct をサポートするすべてのコンテナ管理オブジェクトでサポートされなければなりません(MUST)。PreDestroy アノテーションが適用されるメソッドは、以下の基準をすべて満たさなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="d1757e1a54444fb1f78c30c52a38118eeb762c87" translate="yes" xml:space="preserve">
          <source>The Principals and credentials from the specified Sets are copied into newly constructed Sets. These newly created Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions.</source>
          <target state="translated">指定されたセットのプリンシパルと資格情報が、新しく構築されたセットにコピーされます。これらの新しく作成されたセットは、後続の変更を許可する前に、この &lt;code&gt;Subject&lt;/code&gt; が読み取り専用に設定されているかどうかを確認します。また、新しく作成されたセットは、呼び出し元に十分な権限があることを保証することにより、違法な変更を防ぎます。</target>
        </trans-unit>
        <trans-unit id="5023e9c16aece2d432f4a46ffaa75c4a32d41d7b" translate="yes" xml:space="preserve">
          <source>The Print Service API provides one implementation of interface AttributeSet, class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt;. A client can use class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt; or provide its own implementation of interface AttributeSet. The Print Service API also provides implementations of interface AttributeSet's subinterfaces -- classes &lt;a href=&quot;hashdocattributeset&quot;&gt;&lt;code&gt;HashDocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintrequestattributeset&quot;&gt;&lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintjobattributeset&quot;&gt;&lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;hashprintserviceattributeset&quot;&gt;&lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Print Service APIは、インターフェースAttributeSetの1つの実装である&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;クラスを提供します。クライアントは、クラス&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;を使用するか、インターフェースAttributeSetの独自の実装を提供できます。 Print Service APIは、インターフェースAttributeSetのサブインターフェース（クラス&lt;a href=&quot;hashdocattributeset&quot;&gt; &lt;code&gt;HashDocAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintrequestattributeset&quot;&gt; &lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintjobattributeset&quot;&gt; &lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;hashprintserviceattributeset&quot;&gt; &lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt; )の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="113ca29dc8899124bef3d1bfa5bd50040ad1d06f" translate="yes" xml:space="preserve">
          <source>The Printer could not access one or more documents passed by reference (i.e., the print data representation object is a URL). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the ABORTED job state or prints all documents that are accessible and moves the job to the COMPLETED job state and adds the COMPLETED_WITH_ERRORS reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with URL print data representation objects.</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトはURLです）。この理由は、ファイルが存在せず、アクセス制御の問題のためにアクセスが拒否されたことを含む、ファイルアクセスの問題をカバーすることを目的としています。プリンターがジョブを中止してジョブをABORTEDジョブ状態に移行するか、アクセス可能なすべてのドキュメントを印刷してジョブをCOMPLETEDジョブ状態に移行し、COMPLETED_WITH_ERRORS理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加するかどうかは、実装やサイトポリシーによって異なります。この値は、プリンターがURL印刷データ表現オブジェクトでdocフレーバーをサポートする場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="fce18036495868d9659f03df3d44dfcec351c534" translate="yes" xml:space="preserve">
          <source>The Program</source>
          <target state="translated">プログラム</target>
        </trans-unit>
        <trans-unit id="79c5bed2e16f2a36efdbb26417f5d432d107c87f" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name.</source>
          <target state="translated">PropertyEditorManager を使用して、任意の型名のプロパティエディタを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="03f186ff2c81c37adab709c0e89d137a465a74c1" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name. This property editor must support the java.beans.PropertyEditor interface for editing a given object.</source>
          <target state="translated">PropertyEditorManager を使用して、任意の型名のプロパティエディタを見つけることができます。このプロパティエディタは、与えられたオブジェクトを編集するための java.bean.PropertyEditor インターフェースをサポートしていなければなりません。</target>
        </trans-unit>
        <trans-unit id="a2d11ff6fce664d384fd5b4cb99275a3053adfd8" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager uses three techniques for locating an editor for a given type. First, it provides a registerEditor method to allow an editor to be specifically registered for a given type. Second it tries to locate a suitable class by adding &quot;Editor&quot; to the full qualified classname of the given type (e.g. &quot;foo.bah.FozEditor&quot;). Finally it takes the simple classname (without the package name) adds &quot;Editor&quot; to it and looks in a search-path of packages for a matching class.</source>
          <target state="translated">PropertyEditorManager は、指定されたタイプのエディタを見つけるために 3 つのテクニックを使用します。第一に、与えられた型に対してエディタを特別に登録できるようにするための registerEditor メソッドを提供します。次に、与えられた型の完全修飾クラス名(例:&quot;foo.bah.FozEditor&quot;)に &quot;Editor&quot; を追加することで、適切なクラスを見つけようとします。最後に、(パッケージ名を除いた)単純なクラス名に &quot;Editor&quot; を追加して、一致するクラスをパッケージの検索パスから探します。</target>
        </trans-unit>
        <trans-unit id="dc1a13b023d0705e0b7b2456d0489a32905a21a8" translate="yes" xml:space="preserve">
          <source>The REVERSE_LANDSCAPE value was added because some applications rotate landscape -90 degrees from portrait, rather than +90 degrees.</source>
          <target state="translated">REVERSE_LANDSCAPEの値が追加されたのは、一部のアプリケーションでは縦から90度ではなく、横から-90度回転するためです。</target>
        </trans-unit>
        <trans-unit id="6db7050862750f47a0efb63666d6d145e9e68f0e" translate="yes" xml:space="preserve">
          <source>The REVERSE_PORTRAIT value was added for use with the &lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt; attribute in cases where the opposite edge is desired for finishing a portrait document on simple finishing devices that have only one finishing position. Thus a &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; portrait document can be stapled &quot;on the right&quot; by a simple finishing device as is common use with some Middle Eastern languages such as Hebrew.</source>
          <target state="translated">REVERSE_PORTRAIT値は、1つの仕上げ位置しかない単純な仕上げデバイスで縦向きのドキュメントを仕上げるために反対側のエッジが必要な場合に、&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;属性で使用するために追加されました。したがって、 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 縦長のドキュメントは、ヘブライ語など一部の中東言語で一般的に使用されているように、単純な仕上げ装置によって「右側」にホチキス止めできます。</target>
        </trans-unit>
        <trans-unit id="91344e6cf60e370413b5e41435a7570bf1602389" translate="yes" xml:space="preserve">
          <source>The RFC-1123 date-time formatter, such as 'Tue, 3 Jun 2008 11:05:30 GMT'.</source>
          <target state="translated">RFC-1123 の日付時間フォーマッタ、例えば 'Tue,3 Jun 2008 11:05:30 GMT' のようなものです。</target>
        </trans-unit>
        <trans-unit id="7bd6b6f1f0aee47728916c5bade09680616f86e1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server.</source>
          <target state="translated">RMIコネクタは、RMIを使用してクライアントのリクエストをリモートのMBeanサーバに送信するJMX Remote API用のコネクタです。</target>
        </trans-unit>
        <trans-unit id="82677ad477cb29bbe50c6cb2ef69c1f5f53feed1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server. This package defines the classes that the user of an RMI connector needs to reference directly, for both the client and server sides. It also defines certain classes that the user will not usually reference directly, but that must be defined so that different implementations of the RMI connector can interoperate.</source>
          <target state="translated">RMI コネクタは、リモート MBean サーバにクライアント要求を送信するために RMI を使用する JMX リモート API 用のコネクタです。本パッケージでは、RMI コネクタのユーザが直接参照する必要のあるクラスを、クライアント側とサーバ側の両方で定義します。また、通常は直接参照しませんが、RMI コネクタの異なる実装が相互運用できるように定義しなければならないクラスも定義されています。</target>
        </trans-unit>
        <trans-unit id="60f37692d373183aabc13cdc8073b22c431d845f" translate="yes" xml:space="preserve">
          <source>The RMI connector supports the JRMP transport for RMI, and optionally the IIOP transport.</source>
          <target state="translated">RMI コネクタは、RMI 用の JRMP トランスポートと、オプションで IIOP トランスポートをサポートしています。</target>
        </trans-unit>
        <trans-unit id="41b3ef650c3626ba1e54f00218353c90a916a9f7" translate="yes" xml:space="preserve">
          <source>The RUN_DIRECTION attribute in the text, if present, determines the base direction (left-to-right or right-to-left). If not present, the base direction is computes using the Unicode Bidirectional Algorithm, defaulting to left-to-right if there are no strong directional characters in the text. This attribute, if present, must be applied to all the text in the paragraph.</source>
          <target state="translated">テキス ト 内の RUN_DIRECTION 属性があれば、 基本方向 (左から右か右から左)を決定します。存在しない場合には、基底方向は Unicode 双方向アルゴリズムを用いて計算され、テキスト内に強い方向性のある文字がない場合にはデフォルトで左から右へとなります。この属性がある場合は、段落内のすべてのテキストに適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f60c0ed8c51e78726f1dd29af9cd9a1b5c043ca4" translate="yes" xml:space="preserve">
          <source>The Rdn class represents an RDN as attribute type/value mappings, which can be viewed using &lt;a href=&quot;../directory/attributes&quot;&gt;&lt;code&gt;Attributes&lt;/code&gt;&lt;/a&gt;. In addition, it contains convenience methods that allow easy retrieval of type and value when the Rdn consist of a single type/value pair, which is how it appears in a typical usage. It also contains helper methods that allow escaping of the unformatted attribute value and unescaping of the value formatted according to the escaping syntax defined in RFC2253. For methods that take or return attribute value as an Object, the value is either a String (in unescaped form) or a byte array.</source>
          <target state="translated">Rdnクラスは、RDNを属性のタイプ/値のマッピングとして表します。これは、&lt;a href=&quot;../directory/attributes&quot;&gt; &lt;code&gt;Attributes&lt;/code&gt; &lt;/a&gt;を使用して表示できます。さらに、Rdnが単一のタイプ/値のペアで構成されている場合にタイプと値を簡単に取得できる便利なメソッドが含まれています。また、フォーマットされていない属性値のエスケープと、RFC2253で定義されているエスケープ構文に従ってフォーマットされた値のエスケープ解除を可能にするヘルパーメソッドも含まれています。属性値をオブジェクトとして取得または返すメソッドの場合、値は文字列（エスケープされていない形式）またはバイト配列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="ef154a572a8dd8cfa5c8cd77b99196da2d668b74" translate="yes" xml:space="preserve">
          <source>The Relation Service is in charge of creating and deleting relation types and relations, of handling the consistency and of providing query mechanisms.</source>
          <target state="translated">関係サービスは、関係型や関係の作成・削除、整合性の処理、クエリ機構の提供などを担当しています。</target>
        </trans-unit>
        <trans-unit id="9b94248d10d22c5d522221db774ab1a81ba0ecb4" translate="yes" xml:space="preserve">
          <source>The Relation Service keeps track of the changes to keep the consistency of relations by handling referenced MBean deregistrations.</source>
          <target state="translated">リレーションサービスは、参照されたMBeanの登録解除を処理することで、リレーションの整合性を保つために変更を追跡します。</target>
        </trans-unit>
        <trans-unit id="c58fe2a5c62a124e8b18b80e2e230da01543a005" translate="yes" xml:space="preserve">
          <source>The Relation Service will call this method to let the relation take action to reflect the impact of such unregistration.</source>
          <target state="translated">関係サービスは、このメソッドを呼び出して、そのような登録解除の影響を反映したアクションを関係者に行わせます。</target>
        </trans-unit>
        <trans-unit id="674d8706acecd74bfff3ea199d92ca522dde4abd" translate="yes" xml:space="preserve">
          <source>The Relation Service will keep track of the change to keep the consistency of relations by handling referenced MBean deregistrations.</source>
          <target state="translated">リレーションサービスは、参照されたMBeanの登録解除を処理することで、リレーションの整合性を保つために変更を追跡します。</target>
        </trans-unit>
        <trans-unit id="7430d227a34803554e11c267caf31a7db4f67140" translate="yes" xml:space="preserve">
          <source>The RelationType interface has to be implemented by any class expected to represent a relation type.</source>
          <target state="translated">RelationTypeインタフェースは、関係型を表現することが期待されるすべてのクラスで実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="223356c4d1a561d92448c2d007a52122fdfdc7b7" translate="yes" xml:space="preserve">
          <source>The RequiredModelMBean's MBeanInfo and Descriptors can be customized using the &lt;a href=&quot;requiredmodelmbean#setModelMBeanInfo-javax.management.modelmbean.ModelMBeanInfo-&quot;&gt;&lt;code&gt;setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo)&lt;/code&gt;&lt;/a&gt; method. After the RequiredModelMBean's MBeanInfo and Descriptors are customized, the RequiredModelMBean can be registered with the MBeanServer.</source>
          <target state="translated">RequiredModelMBeanのMBeanInfoと記述子は、&lt;a href=&quot;requiredmodelmbean#setModelMBeanInfo-javax.management.modelmbean.ModelMBeanInfo-&quot;&gt; &lt;code&gt;setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo)&lt;/code&gt; &lt;/a&gt;メソッドを使用してカスタマイズできます。RequiredModelMBeanのMBeanInfoと記述子がカスタマイズされた後、MBeanServerにRequiredModelMBeanを登録できます。</target>
        </trans-unit>
        <trans-unit id="d0e463000d15f695be884764e6e32e805dc3c334" translate="yes" xml:space="preserve">
          <source>The Resolver interface contains methods that are implemented by contexts that do not support subtypes of Context, but which can act as intermediate contexts for resolution purposes.</source>
          <target state="translated">Resolver インターフェースには、Context のサブタイプをサポートしていないが、解決目的のための中間コンテキストとして機能することができるコンテキストによって実装されるメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="99887f811b190671c4ccc42930750f2de5fbdd99" translate="yes" xml:space="preserve">
          <source>The Resource annotation marks a resource that is needed by the application.</source>
          <target state="translated">リソースアノテーションは、アプリケーションが必要とするリソースをマークします。</target>
        </trans-unit>
        <trans-unit id="30acb209089a83083042aff0a92fb6de49bfdcc2" translate="yes" xml:space="preserve">
          <source>The Resource annotation marks a resource that is needed by the application. This annotation may be applied to an application component class, or to fields or methods of the component class. When the annotation is applied to a field or method, the container will inject an instance of the requested resource into the application component when the component is initialized. If the annotation is applied to the component class, the annotation declares a resource that the application will look up at runtime.</source>
          <target state="translated">リソース・アノテーションは、アプリケーションが必要とするリソースをマークします。このアノテーションは、アプリケーション・コンポーネント・クラス、またはコンポーネント・クラスのフィールドやメソッドに適用することができます。アノテーションがフィールドやメソッドに適用されている場合、コンテナは、コンポーネントが初期化されたときに、要求されたリソースのインスタンスをアプリケーション・コンポーネントに注入します。アノテーションがコンポーネント・クラスに適用されている場合、アノテーションはアプリケーションが実行時に検索するリソースを宣言します。</target>
        </trans-unit>
        <trans-unit id="f23f9e9a62bb221b645f78eb5486063e2b452cdf" translate="yes" xml:space="preserve">
          <source>The ResourceBundle is not transmitted as part of the serialized form, but the resource bundle name is, and the recipient object's readObject method will attempt to locate a suitable resource bundle.</source>
          <target state="translated">ResourceBundleはシリアライズされたフォームの一部としては送信されませんが、リソースバンドル名は送信され、受信者オブジェクトのreadObjectメソッドは適切なリソースバンドルを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="614f4429ada7f2ea49d4dd70089a45d01bafee6b" translate="yes" xml:space="preserve">
          <source>The ResponseCache implementation decides which resources should be cached, and for how long they should be cached. If a request resource cannot be retrieved from the cache, then the protocol handlers will fetch the resource from its original location. The settings for URLConnection#useCaches controls whether the protocol is allowed to use a cached response. For more information on HTTP caching, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;&lt;i&gt;RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">ResponseCache実装は、キャッシュする必要があるリソースと、それらをキャッシュする期間を決定します。リクエストリソースをキャッシュから取得できない場合、プロトコルハンドラはリソースを元の場所からフェッチします。URLConnection＃useCachesの設定は、プロトコルがキャッシュされた応答の使用を許可されるかどうかを制御します。HTTPキャッシングの詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;&lt;i&gt;RFC 2616：Hypertext Transfer Protocol-HTTP / 1.1を&lt;/i&gt;&lt;/a&gt;参照してください。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="8be8119ae420632d994ffa43dca6763be5bf54df" translate="yes" xml:space="preserve">
          <source>The SMPTE-based timing type with 24 frames per second (resolution is expressed in ticks per frame).</source>
          <target state="translated">1秒間に24フレームのSMPTEベースのタイミングタイプ(解像度は1フレームあたりのティック数で表現)。</target>
        </trans-unit>
        <trans-unit id="a87aead941ca1f4be07e3fb05a0f9f240ce25f4b" translate="yes" xml:space="preserve">
          <source>The SMPTE-based timing type with 25 frames per second (resolution is expressed in ticks per frame).</source>
          <target state="translated">1秒間に25フレームのSMPTEベースのタイミングタイプ(解像度は1フレームあたりのティック数で表す)。</target>
        </trans-unit>
        <trans-unit id="66c45c4346ca292d94c0c47d075fff0695e0d64c" translate="yes" xml:space="preserve">
          <source>The SMPTE-based timing type with 29.97 frames per second (resolution is expressed in ticks per frame).</source>
          <target state="translated">1秒間に29.97フレームのSMPTEベースのタイミングタイプ(解像度は1フレームあたりのティック数で表されます)。</target>
        </trans-unit>
        <trans-unit id="711626f5460469b9d83bfa23335e9135ed9a25b4" translate="yes" xml:space="preserve">
          <source>The SMPTE-based timing type with 30 frames per second (resolution is expressed in ticks per frame).</source>
          <target state="translated">1秒間に30フレームのSMPTEベースのタイミングタイプ(解像度は1フレームあたりのティック数で表す)。</target>
        </trans-unit>
        <trans-unit id="2df02aa64906f5064858d7196a521480f396ca2b" translate="yes" xml:space="preserve">
          <source>The SNI extension is a feature that extends the SSL/TLS protocols to indicate what server name the client is attempting to connect to during handshaking. See section 3, &quot;Server Name Indication&quot;, of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC 6066)&lt;/a&gt;.</source>
          <target state="translated">SNI拡張は、SSL / TLSプロトコルを拡張して、クライアントがハンドシェイク中に接続しようとしているサーバー名を示す機能です。&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions（RFC 6066）の&lt;/a&gt;セクション3「Server Name Indication」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e72c29b257096b441d7a94ae631930942e7eed15" translate="yes" xml:space="preserve">
          <source>The SPI methods fall into three groups concerning exception behavior. The &lt;code&gt;getSpi&lt;/code&gt; method should never throw exceptions, but it doesn't really matter, as any exception thrown by this method will be intercepted by &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;get(String,String)&lt;/code&gt;&lt;/a&gt;, which will return the specified default value to the caller. The &lt;code&gt;removeNodeSpi, keysSpi, childrenNamesSpi, syncSpi&lt;/code&gt; and &lt;code&gt;flushSpi&lt;/code&gt; methods are specified to throw &lt;a href=&quot;backingstoreexception&quot;&gt;&lt;code&gt;BackingStoreException&lt;/code&gt;&lt;/a&gt;, and the implementation is required to throw this checked exception if it is unable to perform the operation. The exception propagates outward, causing the corresponding API method to fail.</source>
          <target state="translated">SPIメソッドは、例外動作に関して3つのグループに分類されます。 &lt;code&gt;getSpi&lt;/code&gt; の方法は、例外をスローすることはありませんが、この方法によってスローされた例外はによって傍受されるように、それは、本当に問題ではない&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;get(String,String)&lt;/code&gt; &lt;/a&gt;呼び出し側に指定されたデフォルト値を返します。 &lt;code&gt;removeNodeSpi, keysSpi, childrenNamesSpi, syncSpi&lt;/code&gt; と &lt;code&gt;flushSpi&lt;/code&gt; 方法をスローするように指定され&lt;a href=&quot;backingstoreexception&quot;&gt; &lt;code&gt;BackingStoreException&lt;/code&gt; &lt;/a&gt;、および実装は、操作を実行することができない場合は、このチェック例外をスローする必要があります。例外は外側に伝播し、対応するAPIメソッドが失敗する原因になります。</target>
        </trans-unit>
        <trans-unit id="b6cde8fa0c00b8ce15c90873f656db7588e3214e" translate="yes" xml:space="preserve">
          <source>The SSL/TLS protocols employ ordered packets. Applications must take care to ensure that generated packets are delivered in sequence. If packets arrive out-of-order, unexpected or fatal results may occur.</source>
          <target state="translated">SSL/TLS プロトコルは順序のあるパケットを採用しています。アプリケーションは、生成されたパケットが順番に配信されるように注意しなければなりません。パケットが順不同で届いた場合、予期せぬ結果や致命的な結果が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6a5cbc0fa7d23029290836f25878e9b66351852c" translate="yes" xml:space="preserve">
          <source>The STAPLE_</source>
          <target state="translated">STAPLE_の</target>
        </trans-unit>
        <trans-unit id="eb7e3d36792b3be33972f8e4b880e172f779b82d" translate="yes" xml:space="preserve">
          <source>The Scope of a Multicast Address</source>
          <target state="translated">マルチキャストアドレスの範囲</target>
        </trans-unit>
        <trans-unit id="6fe02d845f0c88f5c76dd6ee524b87fdcbd0bcff" translate="yes" xml:space="preserve">
          <source>The ServcieProvider may always return the same instance, or it may construct a new instance for each request.</source>
          <target state="translated">ServcieProvider は常に同じインスタンスを返すこともあれば、リクエストごとに新しいインスタンスを構築することもあります。</target>
        </trans-unit>
        <trans-unit id="28b7987465eb7e220fbabc8609ba006f994d2083" translate="yes" xml:space="preserve">
          <source>The SetOfIntegerSyntax object's value is actually stored in &quot;</source>
          <target state="translated">SetOfIntegerSyntax オブジェクトの値は、実際には &quot;</target>
        </trans-unit>
        <trans-unit id="6c5041dd8df9ea9caf67044040d1ba01f76f902a" translate="yes" xml:space="preserve">
          <source>The SheetCollate attribute interacts with the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute. The &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute describes the collation of entire documents, and the SheetCollate attribute describes the semantics of collating individual pages within a document.</source>
          <target state="translated">SheetCollat​​e属性は、&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt;属性と相互作用します。&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; のの&lt;/a&gt;属性は、文書全体の照合について説明し、SheetCollat​​e属性はドキュメント内の個々のページを照合の意味を説明しています。</target>
        </trans-unit>
        <trans-unit id="bbab176333078e20d34f38e545765b360e204697" translate="yes" xml:space="preserve">
          <source>The Signature class is used to provide applications the functionality of a digital signature algorithm.</source>
          <target state="translated">署名クラスは、デジタル署名アルゴリズムの機能をアプリケーションに提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="80aa8cc11bad31a562a0297268322354d94eb7e4" translate="yes" xml:space="preserve">
          <source>The Signature class is used to provide applications the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data.</source>
          <target state="translated">署名クラスは、デジタル署名アルゴリズムの機能をアプリケーションに提供するために使用されます。デジタル署名は、デジタルデータの認証と完全性保証のために使用されます。</target>
        </trans-unit>
        <trans-unit id="aebb54655e0e730d9559b9dd9eb5dc0745cb12ec" translate="yes" xml:space="preserve">
          <source>The Start TLS extended request and response are used to establish a TLS connection over the existing LDAP connection associated with the JNDI context on which &lt;code&gt;extendedOperation()&lt;/code&gt; is invoked. Typically, a JNDI program uses the StartTLS extended request and response classes as follows.</source>
          <target state="translated">Start TLS拡張要求と応答は、 &lt;code&gt;extendedOperation()&lt;/code&gt; が呼び出されたJNDIコンテキストに関連付けられた既存のLDAP接続を介してTLS接続を確立するために使用されます。通常、JNDIプログラムは、次のようにStartTLS拡張要求および応答クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="35ff6607428d35279a8e24fbc8d925b3e95c9fcb" translate="yes" xml:space="preserve">
          <source>The StartTLS extended request's assigned object identifier is 1.3.6.1.4.1.1466.20037.</source>
          <target state="translated">StartTLS 拡張リクエストの割り当てられたオブジェクト識別子は 1.3.6.1.4.1.1466.20037 です。</target>
        </trans-unit>
        <trans-unit id="f63533d528c41767afbaa8d3a271f97753da5dd2" translate="yes" xml:space="preserve">
          <source>The StartTLS extended response object.</source>
          <target state="translated">StartTLS 拡張レスポンスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="23f3a42343c6b0cebaecc8d191002f4fb77f9cf4" translate="yes" xml:space="preserve">
          <source>The StartTLS extended response's assigned object identifier is 1.3.6.1.4.1.1466.20037.</source>
          <target state="translated">StartTLS 拡張レスポンスの割り当てられたオブジェクト識別子は 1.3.6.1.4.1.1466.20037 です。</target>
        </trans-unit>
        <trans-unit id="ac5f7218b83207bb23413d3351defe6e6d2953f5" translate="yes" xml:space="preserve">
          <source>The String &lt;code&gt;&quot;[George:Sally:Fred]&quot;&lt;/code&gt; may be constructed as follows:</source>
          <target state="translated">文字列 &lt;code&gt;&quot;[George:Sally:Fred]&quot;&lt;/code&gt; は、次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="4277b18bac7bf3deb5ddf1d71e76efde20397d80" translate="yes" xml:space="preserve">
          <source>The String has the format, &quot;LoginModuleControlFlag:</source>
          <target state="translated">この文字列は、&quot;LoginModuleControlFlag &quot;という形式になっています。</target>
        </trans-unit>
        <trans-unit id="d633506a68191ed3a5c157daa149f9cc24706511" translate="yes" xml:space="preserve">
          <source>The String used to invoke the method in the syntax of the scripting language.</source>
          <target state="translated">スクリプト言語の構文でメソッドを呼び出すために使用される文字列。</target>
        </trans-unit>
        <trans-unit id="0d6515747116f06f0b4ebe8765048b16a027c64c" translate="yes" xml:space="preserve">
          <source>The TSA's certificate path.</source>
          <target state="translated">TSAの証明書パス。</target>
        </trans-unit>
        <trans-unit id="0cf59134294aaac83b765e65055974c0b11987dd" translate="yes" xml:space="preserve">
          <source>The Thai Buddhist calendar system has two eras, 'BE' and 'BEFORE_BE', defined by &lt;a href=&quot;thaibuddhistera&quot;&gt;&lt;code&gt;ThaiBuddhistEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイ仏暦システムには、&lt;a href=&quot;thaibuddhistera&quot;&gt; &lt;code&gt;ThaiBuddhistEra&lt;/code&gt; &lt;/a&gt;によって定義された 'BE'と 'BEFORE_BE'の2つの時代があります。</target>
        </trans-unit>
        <trans-unit id="0ecc0e2cb52a9d0ca6c0b7fe7e98e97c74af1351" translate="yes" xml:space="preserve">
          <source>The Thai Buddhist calendar system has two eras. The current era, for years from 1 onwards, is known as the 'Buddhist' era. All previous years, zero or earlier in the proleptic count or one and greater in the year-of-era count, are part of the 'Before Buddhist' era.</source>
          <target state="translated">タイ仏教のカレンダーシステムには2つの時代があります。現在の時代は、1からの年のために、「仏教」の時代として知られています。すべての以前の年は、ゼロまたは以前のprolepticカウントまたは年の年のカウントで1つと大きい、'仏教の前に'時代の一部です。</target>
        </trans-unit>
        <trans-unit id="110e78cab6d0a551308dd194cfdb9cad42b2df2d" translate="yes" xml:space="preserve">
          <source>The Thai Buddhist calendar system.</source>
          <target state="translated">タイ仏教のカレンダーシステム。</target>
        </trans-unit>
        <trans-unit id="0b298fd2191bf011e3f43ce2df9992fad3a92ca5" translate="yes" xml:space="preserve">
          <source>The Type of Service (ToS) octet in the Internet Protocol (IP) header</source>
          <target state="translated">インターネットプロトコル(IP)ヘッダのサービスタイプ(ToS)オクテット</target>
        </trans-unit>
        <trans-unit id="f71c6d9015d5bc5b86df61acaea348d89e3cf6a7" translate="yes" xml:space="preserve">
          <source>The Type of Service (ToS) octet in the Internet Protocol (IP) header.</source>
          <target state="translated">インターネットプロトコル(IP)ヘッダのサービスタイプ(ToS)オクテット。</target>
        </trans-unit>
        <trans-unit id="cf6d22f3428bd802d71f25d5491e0567edb2b4a1" translate="yes" xml:space="preserve">
          <source>The UNICODE_CHARACTER_CLASS mode can also be enabled via the embedded flag expression &lt;code&gt;(?U)&lt;/code&gt;.</source>
          <target state="translated">UNICODE_CHARACTER_CLASSモードは、埋め込みフラグ式 &lt;code&gt;(?U)&lt;/code&gt; を介して有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="2eaff71d0d443b89396e5dd66fa648f0b90bc362" translate="yes" xml:space="preserve">
          <source>The URI scheme</source>
          <target state="translated">URIスキーム</target>
        </trans-unit>
        <trans-unit id="4ec678dde97f73fd23031533e67d7bb41d25cf06" translate="yes" xml:space="preserve">
          <source>The URL Path part of the Service URL. This is an empty string, or a string beginning with a slash (&lt;code&gt;/&lt;/code&gt;), or a string beginning with a semicolon (&lt;code&gt;;&lt;/code&gt;).</source>
          <target state="translated">サービスURLのURLパス部分。これは、空の文字列、またはスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で始まる文字列、またはセミコロン（ &lt;code&gt;;&lt;/code&gt; ）で始まる文字列です。</target>
        </trans-unit>
        <trans-unit id="39cdd25064bd89d0ba41d92df7b08df17d225061" translate="yes" xml:space="preserve">
          <source>The URL above indicates that the protocol to use is &lt;code&gt;http&lt;/code&gt; (HyperText Transfer Protocol) and that the information resides on a host machine named &lt;code&gt;www.example.com&lt;/code&gt;. The information on that host machine is named &lt;code&gt;/docs/resource1.html&lt;/code&gt;. The exact meaning of this name on the host machine is both protocol dependent and host dependent. The information normally resides in a file, but it could be generated on the fly. This component of the URL is called the</source>
          <target state="translated">上記のURLは、使用するプロトコルが &lt;code&gt;http&lt;/code&gt; （ハイパーテキスト転送プロトコル）であり、情報が &lt;code&gt;www.example.com&lt;/code&gt; という名前のホストマシンにあることを示しています。そのホストマシンに関する情報の名前は &lt;code&gt;/docs/resource1.html&lt;/code&gt; です。ホストマシンでのこの名前の正確な意味は、プロトコルとホストの両方に依存します。情報は通常ファイルにありますが、オンザフライで生成することもできます。 URLのこのコンポーネントは、</target>
        </trans-unit>
        <trans-unit id="5dda6bed3bc097d11c3c752b8ec21e906c5b5c6b" translate="yes" xml:space="preserve">
          <source>The URL class does not itself encode or decode any URL components according to the escaping mechanism defined in RFC2396. It is the responsibility of the caller to encode any fields, which need to be escaped prior to calling URL, and also to decode any escaped fields, that are returned from URL. Furthermore, because URL has no knowledge of URL escaping, it does not recognise equivalence between the encoded or decoded form of the same URL. For example, the two URLs:</source>
          <target state="translated">URL クラスは RFC2396 で定義されているエスケープ機構に従って URL コンポーネントをエンコードしたりデコードしたりすることはありません。URLを呼び出す前にエスケープされる必要のあるフィールドをエンコードし、URLから返されるエスケープされたフィールドをデコードするのは呼び出し側の責任です。さらに、URLはURLエスケープの知識がないので、同じURLのエンコードされた形式とデコードされた形式の間の同等性を認識しません。例えば、2つのURL。</target>
        </trans-unit>
        <trans-unit id="f1a13564394debd029b9191db3b513542cc43cd6" translate="yes" xml:space="preserve">
          <source>The URL represents the remote object on the World Wide Web to which this connection is opened.</source>
          <target state="translated">URL は、この接続が開かれる World Wide Web 上のリモートオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="2512db9d0f42c72fcc0e7d06aea9f96b3260a8c8" translate="yes" xml:space="preserve">
          <source>The US-ASCII alphabetic characters, &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt;</source>
          <target state="translated">US-ASCIIアルファベット文字、 &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; および &lt;code&gt;'a'&lt;/code&gt; から &lt;code&gt;'z'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ddab5d100cab95e4d1bbb59f061bb561cce4653" translate="yes" xml:space="preserve">
          <source>The US-ASCII decimal digit characters, &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt;</source>
          <target state="translated">US-ASCIIの10進数字、 &lt;code&gt;'0'&lt;/code&gt; から &lt;code&gt;'9'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12e3bf91f40d535acdcd4f7b782ae2318ee3eb7e" translate="yes" xml:space="preserve">
          <source>The UTC time-scale is a standard approach to bundle up all the additional fractions of a second from UT1 into whole seconds, known as</source>
          <target state="translated">UTCのタイムスケールは、UT1から全秒に追加されたすべての分数を束ねた標準的なアプローチです。</target>
        </trans-unit>
        <trans-unit id="2bad15b1f327afb2fe620089520eb64352143c23" translate="yes" xml:space="preserve">
          <source>The UTC type uses the UTC offset. The STANDARD type uses the standard offset. The WALL type returns the input date-time. The result is intended for use with the wall-offset.</source>
          <target state="translated">UTC タイプは UTC オフセットを使用します。STANDARD 型は標準オフセットを使用します。WALL 型は入力された日付時刻を返します。結果は、WALLオフセットでの使用を想定しています。</target>
        </trans-unit>
        <trans-unit id="30f27ccfa5d0569e8811312c5e589ba65ce5e892" translate="yes" xml:space="preserve">
          <source>The UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt; is used to decode the entry names and comments</source>
          <target state="translated">UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;は、エントリ名とコメントをデコードするために使用されます</target>
        </trans-unit>
        <trans-unit id="dc1d3d9d30059176fa63317d871ad36c396c8256" translate="yes" xml:space="preserve">
          <source>The UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt; is used to decode the entry names and comments.</source>
          <target state="translated">UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;は、エントリ名とコメントをデコードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="1a6dcf3103182b65318ead8734e909a9308659e2" translate="yes" xml:space="preserve">
          <source>The UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt; is used to decode the entry names.</source>
          <target state="translated">エントリ名のデコードには、UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="35058fd7e1cae4d49e6ba8bb36a8e490aefa08a7" translate="yes" xml:space="preserve">
          <source>The UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt; is used to encode the entry names and comments.</source>
          <target state="translated">UTF-8 &lt;a href=&quot;../../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;は、エントリ名とコメントをエンコードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="97b660089cda0a866df93a5f2e1fb2461fc59e7d" translate="yes" xml:space="preserve">
          <source>The UTF-8 character encoding will be used.</source>
          <target state="translated">文字コードはUTF-8になります。</target>
        </trans-unit>
        <trans-unit id="ba90dc4402c6ec2d6a6525f2ffe4acf21c1feb8f" translate="yes" xml:space="preserve">
          <source>The UUID string representation is as described by this BNF:</source>
          <target state="translated">UUID文字列表現は、本BNFで説明されている通りである。</target>
        </trans-unit>
        <trans-unit id="e675ff6fc3d5c45e1c9594760191e675eb31248d" translate="yes" xml:space="preserve">
          <source>The Unicode Standard, Version 4.0</source>
          <target state="translated">ユニコード標準、バージョン4.0</target>
        </trans-unit>
        <trans-unit id="855f6f6b04fe01a58122fa0578b047dec0b2396f" translate="yes" xml:space="preserve">
          <source>The Unicode characters that are not in the US-ASCII character set, are not control characters (according to the &lt;a href=&quot;../lang/character#isISOControl-char-&quot;&gt;&lt;code&gt;Character.isISOControl&lt;/code&gt;&lt;/a&gt; method), and are not space characters (according to the &lt;a href=&quot;../lang/character#isSpaceChar-char-&quot;&gt;&lt;code&gt;Character.isSpaceChar&lt;/code&gt;&lt;/a&gt; method)</source>
          <target state="translated">US-ASCII文字セットにないUnicode文字、（に応じて文字を制御していない&lt;a href=&quot;../lang/character#isISOControl-char-&quot;&gt; &lt;code&gt;Character.isISOControl&lt;/code&gt; の&lt;/a&gt;方法）、およびスペース文字ではありません（に従って&lt;a href=&quot;../lang/character#isSpaceChar-char-&quot;&gt; &lt;code&gt;Character.isSpaceChar&lt;/code&gt; の&lt;/a&gt;方法）</target>
        </trans-unit>
        <trans-unit id="f3dfcb36136372d42f03d3313790b203a822b063" translate="yes" xml:space="preserve">
          <source>The Unicode locale extension specifies optional behavior in locale-sensitive services. Although the LDML specification defines various keys and values, actual locale-sensitive service implementations in a Java Runtime Environment might not support any particular Unicode locale attributes or key/type pairs.</source>
          <target state="translated">Unicode ロケール拡張では、ロケール依存のサービスにおけるオプションの動作を指定しています。LDML仕様では様々なキーと値を定義していますが、実際のJavaランタイム環境におけるロケール依存型サービスの実装では、特定のUnicodeロケール属性やキー/タイプペアをサポートしていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="86012cec961e3da55accb740a355d0cd5b30a87a" translate="yes" xml:space="preserve">
          <source>The Unicode locale type associated with the key, or null if the locale does not define the key.</source>
          <target state="translated">キーに関連付けられた Unicode ロケールの型、あるいはロケールがキーを定義していない場合は null。</target>
        </trans-unit>
        <trans-unit id="d327177e0e897e771e7bf07ac35916baa4874517" translate="yes" xml:space="preserve">
          <source>The UnresolvedPermission class is used to hold Permissions that were &quot;unresolved&quot; when the Policy was initialized.</source>
          <target state="translated">UnresolvedPermission クラスは、ポリシーが初期化されたときに「未解決」だったパーミッションを保持するために使用されます。</target>
        </trans-unit>
        <trans-unit id="106451eadba0a3f499c5e0507a145120909609cc" translate="yes" xml:space="preserve">
          <source>The UnresolvedPermission class is used to hold Permissions that were &quot;unresolved&quot; when the Policy was initialized. An unresolved permission is one whose actual Permission class does not yet exist at the time the Policy is initialized (see below).</source>
          <target state="translated">UnresolvedPermission クラスは、ポリシーが初期化されたときに「未解決」であったパーミッションを保持するために使用されます。未解決のパーミッションとは、ポリシーが初期化された時点では実際のパーミッションクラスがまだ存在しないパーミッションのことです(以下を参照)。</target>
        </trans-unit>
        <trans-unit id="2df5d6a200c9fc79968c79ca58277554b4e41cb6" translate="yes" xml:space="preserve">
          <source>The Unspecified Address -- Also called anylocal or wildcard address. It must never be assigned to any node. It indicates the absence of an address. One example of its use is as the target of bind, which allows a server to accept a client connection on any interface, in case the server host has multiple interfaces.</source>
          <target state="translated">Unspecified Address --anylocalまたはワイルドカードアドレスとも呼ばれます。これは、どのノードにも絶対に割り当ててはいけません。これはアドレスが存在しないことを示します。これは、サーバホストが複数のインタフェースを持っている場合に、サーバが任意のインタフェースでクライアント接続を受け付けることを可能にする bind のターゲットとして使用されます。</target>
        </trans-unit>
        <trans-unit id="fddbcce63ee0a84bbd29b9306e28dc855a2a0ee4" translate="yes" xml:space="preserve">
          <source>The W3C generally recommends to exchange texts in NFC. Note also that most legacy character encodings use only precomposed forms and often do not encode any combining marks by themselves. For conversion to such character encodings the Unicode text needs to be normalized to NFC. For more usage examples, see the Unicode Standard Annex.</source>
          <target state="translated">W3C は一般的に NFC でテキストを交換することを推奨しています。ほとんどのレガシー文字エンコーディングは事前に結合された形式のみを使用し、多くの場合、それ自体ではいかなる結合マークもエンコードしていないことにも注意してください。そのような文字エンコーディングへの変換のために、Unicode テキストは NFC に正規化される必要があります。より多くの使用例については、Unicode 標準付属書を参照してください。</target>
        </trans-unit>
        <trans-unit id="18ef77b0858f46134ac7b482ee49bb629a564dee" translate="yes" xml:space="preserve">
          <source>The X.509 v2 CRL format is described below in ASN.1:</source>
          <target state="translated">X.509 v2 の CRL フォーマットは、ASN.1 で以下のように記述されています。</target>
        </trans-unit>
        <trans-unit id="b9fcd80872a7ab82bc8eeea007d48c23637dc911" translate="yes" xml:space="preserve">
          <source>The X3.274-1996 algorithm is:</source>
          <target state="translated">X3.274-1996のアルゴリズムです。</target>
        </trans-unit>
        <trans-unit id="cc613ef20555d504cf2e4f94f40c5f23bc8ce169" translate="yes" xml:space="preserve">
          <source>The XML document has the following DOCTYPE declaration:</source>
          <target state="translated">XML文書は以下のDOCTYPE宣言を持っています。</target>
        </trans-unit>
        <trans-unit id="d9e5faa87bff8499273f37dda3b048324b3c5c25" translate="yes" xml:space="preserve">
          <source>The XML document must have the following DOCTYPE declaration:</source>
          <target state="translated">XML文書は、以下のDOCTYPE宣言を持たなければならない。</target>
        </trans-unit>
        <trans-unit id="2ed02856deeab148266a90a042c02b0613dd709e" translate="yes" xml:space="preserve">
          <source>The XML document will have the following DOCTYPE declaration:</source>
          <target state="translated">XML文書は、次のようなDOCTYPE宣言を持つことになります。</target>
        </trans-unit>
        <trans-unit id="6b9f663ea5bf11d78ff348081d07ce6ea4fbf89a" translate="yes" xml:space="preserve">
          <source>The XML syntax uses the following conventions:</source>
          <target state="translated">XML 構文は以下の規約を使用しています。</target>
        </trans-unit>
        <trans-unit id="8446a8dce024b6c36553b2bd7e95801c55dc721f" translate="yes" xml:space="preserve">
          <source>The XMLFormatter can be used with arbitrary character encodings, but it is recommended that it normally be used with UTF-8. The character encoding can be set on the output Handler.</source>
          <target state="translated">XMLFormatter は任意の文字エンコーディングで使用することができますが、通常は UTF-8 で使用することを推奨します。文字エンコーディングは、出力ハンドラで設定することができます。</target>
        </trans-unit>
        <trans-unit id="94ac00d5f8bad09d25d989c532f0827c6c5a442b" translate="yes" xml:space="preserve">
          <source>The ability to ask the authenticator registered with the system for a password</source>
          <target state="translated">システムに登録されている認証者にパスワードを求める機能</target>
        </trans-unit>
        <trans-unit id="4f6c85667f40550ed984e7d465e987fb50b1cee5" translate="yes" xml:space="preserve">
          <source>The ability to get the SSLSessionContext of an SSLSession.</source>
          <target state="translated">SSLSessionのSSLSessionContextを取得する機能です。</target>
        </trans-unit>
        <trans-unit id="c08cb64a173c4838bf0ab57b143814354d1d878a" translate="yes" xml:space="preserve">
          <source>The ability to get the cookie handler that processes highly security sensitive cookie information for an Http session.</source>
          <target state="translated">セキュリティ上の機密性の高いクッキー情報を処理するクッキーハンドラを Http セッションで取得する機能。</target>
        </trans-unit>
        <trans-unit id="747dfd09cac650048472c89cdbbbf59e4084fb21" translate="yes" xml:space="preserve">
          <source>The ability to get the proxy selector used to make decisions on which proxies to use when making network connections.</source>
          <target state="translated">ネットワーク接続を行う際に使用するプロキシを決定するために使用されるプロキシセレクタを取得する機能。</target>
        </trans-unit>
        <trans-unit id="eb846b7dea720d16a96e23598e4c9f77568665c4" translate="yes" xml:space="preserve">
          <source>The ability to get the response cache that provides access to a local response cache.</source>
          <target state="translated">ローカルのレスポンスキャッシュへのアクセスを提供するレスポンスキャッシュを取得する機能。</target>
        </trans-unit>
        <trans-unit id="0101c8dcdd9124ae9e9dc071a563cf4befcd5dc2" translate="yes" xml:space="preserve">
          <source>The ability to interrupt a lock acquisition in some implementations may not be possible, and if possible may be an expensive operation. The programmer should be aware that this may be the case. An implementation should document when this is the case.</source>
          <target state="translated">一部の実装では、ロック取得を割込むことができない場合があり、可能であれば高価な操作になる可能性があります。プログラマは、このような場合があることを認識しておく必要があります。実装では、このような場合を文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6fad9c27e4f8a6493f7feabf035fe54852835fe" translate="yes" xml:space="preserve">
          <source>The ability to read (non-acl) file attributes.</source>
          <target state="translated">(non-acl)ファイル属性を読み取る能力。</target>
        </trans-unit>
        <trans-unit id="4dc25dabb4df1918d4e24db4d9c3ddb2ce955dbc" translate="yes" xml:space="preserve">
          <source>The ability to retrieve all information about local network interfaces.</source>
          <target state="translated">ローカルネットワークインターフェースに関するすべての情報を取得する機能。</target>
        </trans-unit>
        <trans-unit id="8d62361f7d663bbcd4ccf2897e33eedf52e2f92b" translate="yes" xml:space="preserve">
          <source>The ability to set a callback which can decide whether to allow a mismatch between the host being connected to by an HttpsURLConnection and the common name field in server certificate.</source>
          <target state="translated">HttpsURLConnection で接続されているホストとサーバ証明書の共通名フィールドの間の不一致を許可するかどうかを決定するコールバックを設定する機能。</target>
        </trans-unit>
        <trans-unit id="c8fd9ad3f015a0c63d2df8d095236f1dc4f764c2" translate="yes" xml:space="preserve">
          <source>The ability to set the cookie handler that processes highly security sensitive cookie information for an Http session.</source>
          <target state="translated">セキュリティ上の機密性の高いクッキー情報を処理するクッキーハンドラを Http セッションに設定する機能。</target>
        </trans-unit>
        <trans-unit id="728c49b4a4c3274c673e299fc6abf84bf96e38a8" translate="yes" xml:space="preserve">
          <source>The ability to set the default SSL context</source>
          <target state="translated">デフォルトのSSLコンテキストを設定する機能</target>
        </trans-unit>
        <trans-unit id="523d52b8be5bc53ba69bacce4312e572cfbcee19" translate="yes" xml:space="preserve">
          <source>The ability to set the proxy selector used to make decisions on which proxies to use when making network connections.</source>
          <target state="translated">ネットワーク接続を行う際に使用するプロキシを決定するために使用するプロキシセレクタを設定する機能。</target>
        </trans-unit>
        <trans-unit id="6a66a567e4af10bb233d87868b18a39623d36448" translate="yes" xml:space="preserve">
          <source>The ability to set the response cache that provides access to a local response cache.</source>
          <target state="translated">ローカルのレスポンスキャッシュへのアクセスを提供するレスポンスキャッシュを設定する機能。</target>
        </trans-unit>
        <trans-unit id="ea953d76621b3799d35d695029de5de0d988b3b4" translate="yes" xml:space="preserve">
          <source>The ability to set the subsampling grid to start somewhere other than the source region origin is useful if the region is being used to create subsampled tiles of a large image, where the tile width and height are not multiples of the subsampling periods. If the subsampling grid does not remain consistent from tile to tile, there will be artifacts at the tile boundaries. By adjusting the subsampling grid offset for each tile to compensate, these artifacts can be avoided. The tradeoff is that in order to avoid these artifacts, the tiles are not all the same size. The grid offset to use in this case is given by:</source>
          <target state="translated">タイルの幅と高さがサブサンプリング期間の倍数ではない大きな画像のサブサンプリング タイルを作成するために領域を使用している場合に、ソース領域の原点以外の場所からサブサンプリング グリッドを開始するように設定できる機能は便利です。サブサンプリング グリッドがタイル間で一貫していない場合、タイル境界にアーチファクトが発生します。各タイルのサブサンプリング・グリッド・オフセットを調整して補正することで、これらのアーチファクトを回避することができます。トレードオフは、これらのアーチファクトを回避するために、タイルはすべて同じサイズではないということです。この場合に使用するグリッドオフセットは次式で与えられます。</target>
        </trans-unit>
        <trans-unit id="d302e4f1c649bfc96b09fc919581ac270437619a" translate="yes" xml:space="preserve">
          <source>The ability to set the way authentication information is retrieved when a proxy or HTTP server asks for authentication</source>
          <target state="translated">プロキシや HTTP サーバが認証を求めてきたときの認証情報の取得方法を設定する機能</target>
        </trans-unit>
        <trans-unit id="89f72a0701e76fa12481a67aeda6de0afe701332" translate="yes" xml:space="preserve">
          <source>The ability to specify a stream handler when constructing a URL</source>
          <target state="translated">URL を構築する際にストリームハンドラを指定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="3b52910e750a521c4270f9ad1e92d1182fab62a3" translate="yes" xml:space="preserve">
          <source>The ability to use the HTTP TRACE method in HttpURLConnection.</source>
          <target state="translated">HttpURLConnectionでHTTP TRACEメソッドを使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6af3beb90f71de8d44827b35e1c4fa464ca9ab63" translate="yes" xml:space="preserve">
          <source>The ability to write (non-acl) file attributes.</source>
          <target state="translated">(non-acl)ファイル属性を書き込む機能。</target>
        </trans-unit>
        <trans-unit id="75a1e459161bc40b650d129db959cfadba7b7567" translate="yes" xml:space="preserve">
          <source>The above example does not differentiate the case where the memory usage has temporarily dropped below the usage threshold from the case where the memory usage remains above the threshold between two iterations. The usage threshold count returned by the &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;getUsageThresholdCount()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the memory usage has returned below the threshold between two polls.</source>
          <target state="translated">上記の例では、メモリ使用量が使用量のしきい値を一時的に下回った場合と、2回の反復間でメモリ使用量がしきい値を超えたままの場合とを区別していません。&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;getUsageThresholdCount()&lt;/code&gt; &lt;/a&gt;メソッドによって返される使用量しきい値カウントを使用して、メモリ使用量が2つのポーリング間でしきい値未満に戻ったかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="11a11e7a079a4b4c5ac0f002d2763bf2a39aa9e4" translate="yes" xml:space="preserve">
          <source>The above grants access to the private Credential, &quot;a.b.Credential&quot;, belonging to a &lt;code&gt;Subject&lt;/code&gt; with at least two associated Principals: &quot;a.b.Principal&quot; with the name, &quot;duke&quot;, and &quot;c.d.Principal&quot;, with the name, &quot;dukette&quot;.</source>
          <target state="translated">上記は、少なくとも2つの関連付けられたプリンシパルを持つ &lt;code&gt;Subject&lt;/code&gt; に属するプライベート資格情報「abCredential」へのアクセスを許可します。名前が「duke」である「abPrincipal」と「dukette」という名前の「cdPrincipal」です。</target>
        </trans-unit>
        <trans-unit id="edbd434347b519de487f2abd90d51adf485fdec2" translate="yes" xml:space="preserve">
          <source>The absolute abstract pathname denoting the same file or directory as this abstract pathname</source>
          <target state="translated">この抽象パス名と同じファイルまたはディレクトリを示す絶対抽象パス名</target>
        </trans-unit>
        <trans-unit id="ec2d2417f86515cab10b6adbdf408e19019363aa" translate="yes" xml:space="preserve">
          <source>The absolute path of the native library</source>
          <target state="translated">ネイティブライブラリの絶対パス</target>
        </trans-unit>
        <trans-unit id="e572ffca3dbcbc1dee7ecbdd936a165e89cf3f71" translate="yes" xml:space="preserve">
          <source>The absolute path of the native library.</source>
          <target state="translated">ネイティブライブラリの絶対パス。</target>
        </trans-unit>
        <trans-unit id="96304c31818a11d31d7bb72121ee4dcd82da0c5c" translate="yes" xml:space="preserve">
          <source>The absolute pathname string denoting the same file or directory as this abstract pathname</source>
          <target state="translated">この抽象パス名と同じファイルまたはディレクトリを表す絶対パス名文字列</target>
        </trans-unit>
        <trans-unit id="26ceb41a43a33e3dffbfc97a7a937681a96cef0a" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;ContentHandler&lt;/code&gt; is the superclass of all classes that read an &lt;code&gt;Object&lt;/code&gt; from a &lt;code&gt;URLConnection&lt;/code&gt;.</source>
          <target state="translated">抽象クラス &lt;code&gt;ContentHandler&lt;/code&gt; は、 &lt;code&gt;URLConnection&lt;/code&gt; から &lt;code&gt;Object&lt;/code&gt; を読み取るすべてのクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="ef4fe4e3d9f2f3d537889773b4af854337477934" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;Number&lt;/code&gt; is the superclass of platform classes representing numeric values that are convertible to the primitive types &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">抽象クラス &lt;code&gt;Number&lt;/code&gt; は、プリミティブ型 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; に変換可能な数値を表すプラットフォームクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="3cef21ebdb6ade078e43294abd142a0407b82a51" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;Number&lt;/code&gt; is the superclass of platform classes representing numeric values that are convertible to the primitive types &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;short&lt;/code&gt;. The specific semantics of the conversion from the numeric value of a particular &lt;code&gt;Number&lt;/code&gt; implementation to a given primitive type is defined by the &lt;code&gt;Number&lt;/code&gt; implementation in question. For platform classes, the conversion is often analogous to a narrowing primitive conversion or a widening primitive conversion as defining in</source>
          <target state="translated">抽象クラス &lt;code&gt;Number&lt;/code&gt; は、プリミティブ型 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; に変換可能な数値を表すプラットフォームクラスのスーパークラスです。特定の &lt;code&gt;Number&lt;/code&gt; 実装の数値から特定のプリミティブ型への変換の特定のセマンティクスは、問題の &lt;code&gt;Number&lt;/code&gt; 実装によって定義されます。プラットフォームクラスの場合、変換は多くの場合、次のように定義されるように、ナローイングプリミティブ変換またはワイドニングプリミティブ変換に類似しています。</target>
        </trans-unit>
        <trans-unit id="7471b19f604dcfd018473768425dd3d88567b855" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;SocketImpl&lt;/code&gt; is a common superclass of all classes that actually implement sockets.</source>
          <target state="translated">抽象クラス &lt;code&gt;SocketImpl&lt;/code&gt; は、実際にソケットを実装するすべてのクラスの共通スーパークラスです。</target>
        </trans-unit>
        <trans-unit id="61d7aa3ed568898a90d798649c3d36186093daf9" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;SocketImpl&lt;/code&gt; is a common superclass of all classes that actually implement sockets. It is used to create both client and server sockets.</source>
          <target state="translated">抽象クラス &lt;code&gt;SocketImpl&lt;/code&gt; は、実際にソケットを実装するすべてのクラスの共通スーパークラスです。クライアントとサーバーの両方のソケットを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="456bb9271567243e4cd050a468dafa3e449e2d3b" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;URLConnection&lt;/code&gt; is the superclass of all classes that represent a communications link between the application and a URL.</source>
          <target state="translated">抽象クラス &lt;code&gt;URLConnection&lt;/code&gt; は、アプリケーションとURLの間の通信リンクを表すすべてのクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="76cea7d35ffe4da75cc712cb986a9f4a981aee90" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;URLConnection&lt;/code&gt; is the superclass of all classes that represent a communications link between the application and a URL. Instances of this class can be used both to read from and to write to the resource referenced by the URL. In general, creating a connection to a URL is a multistep process:</source>
          <target state="translated">抽象クラス &lt;code&gt;URLConnection&lt;/code&gt; は、アプリケーションとURLの間の通信リンクを表すすべてのクラスのスーパークラスです。このクラスのインスタンスは、URLが参照するリソースの読み取りと書き込みの両方に使用できます。一般に、URLへの接続の作成は、複数のステップからなるプロセスです。</target>
        </trans-unit>
        <trans-unit id="30ca6e222c37a7c8793230b3a0c7767b66c517e7" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;URLStreamHandler&lt;/code&gt; is the common superclass for all stream protocol handlers.</source>
          <target state="translated">抽象クラス &lt;code&gt;URLStreamHandler&lt;/code&gt; は、すべてのストリームプロトコルハンドラに共通のスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="d07377ac8882b20ce73ef6e587a0c0d99b110d29" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;code&gt;URLStreamHandler&lt;/code&gt; is the common superclass for all stream protocol handlers. A stream protocol handler knows how to make a connection for a particular protocol type, such as &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt;.</source>
          <target state="translated">抽象クラス &lt;code&gt;URLStreamHandler&lt;/code&gt; は、すべてのストリームプロトコルハンドラに共通のスーパークラスです。ストリームプロトコルハンドラーは、 &lt;code&gt;http&lt;/code&gt; や &lt;code&gt;https&lt;/code&gt; などの特定のプロトコルタイプに接続する方法を知っています。</target>
        </trans-unit>
        <trans-unit id="4cc8e5427b10107c4b13456b30226c7cd3468de3" translate="yes" xml:space="preserve">
          <source>The abstract class from which all persistence delegates descend. Your subclass should use its knowledge of the bean's type to provide whatever &lt;code&gt;Statement&lt;/code&gt;s and &lt;code&gt;Expression&lt;/code&gt;s are necessary to create the bean and restore its state.</source>
          <target state="translated">すべての永続デリゲートがそこから派生する抽象クラス。サブクラスは、Beanのタイプの知識を使用して、Beanを作成し、その状態を復元するために必要なすべての &lt;code&gt;Statement&lt;/code&gt; および &lt;code&gt;Expression&lt;/code&gt; を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="e33bef79f2b898deb8cd8c8cf089745eb2108b2c" translate="yes" xml:space="preserve">
          <source>The abstract pathname of the parent directory named by this abstract pathname, or &lt;code&gt;null&lt;/code&gt; if this pathname does not name a parent</source>
          <target state="translated">この抽象パス名で指定された親ディレクトリの抽象パス名。このパス名が親を指定していない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80237c2613dc82633718c694ff63ccd5e8f49761" translate="yes" xml:space="preserve">
          <source>The abstract syntax classes are independent of the attributes that use them. In fact, applications that have nothing to do with printing can use the abstract syntax classes. Although most of the standard attribute classes extend one of the abstract syntax classes, no attribute class is required to extend one of these classes. The abstract syntax classes merely provide a convenient implementation that can be shared by many attribute classes.</source>
          <target state="translated">抽象構文クラスは、それを使用する属性とは独立しています。実際には、印刷とは何の関係もないアプリケーションは、抽象構文クラスを使用することができます。標準属性クラスの大部分は抽象構文クラスの一つを拡張するが、属性クラスはこれらのクラスの一つを拡張する必要はない。抽象構文クラスは、単に多くの属性クラスが共有できる便利な実装を提供するだけである。</target>
        </trans-unit>
        <trans-unit id="98f9919547d9e7324fbeace7ddfba4ce592d0afd" translate="yes" xml:space="preserve">
          <source>The access modifiers are placed in canonical order as specified by &quot;The Java Language Specification&quot;. This is &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt; first, and then other modifiers in the following order: &lt;code&gt;abstract&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;synchronized&lt;/code&gt;, &lt;code&gt;native&lt;/code&gt;, &lt;code&gt;strictfp&lt;/code&gt;.</source>
          <target state="translated">アクセス修飾子は、「Java言語仕様」で指定されている正規の順序で配置されます。これは最初に &lt;code&gt;public&lt;/code&gt; 、 &lt;code&gt;protected&lt;/code&gt; 、または &lt;code&gt;private&lt;/code&gt; であり、次に他の修飾子、次の順序で： &lt;code&gt;abstract&lt;/code&gt; 、 &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;static&lt;/code&gt; 、 &lt;code&gt;final&lt;/code&gt; 、 &lt;code&gt;synchronized&lt;/code&gt; 、 &lt;code&gt;native&lt;/code&gt; 、 &lt;code&gt;strictfp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df151d45df66db7ce016a4b7c1366a40643ea380" translate="yes" xml:space="preserve">
          <source>The accesses permitted to a given lookup object may be limited, according to its set of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, to a subset of members normally accessible to the lookup class. For example, the &lt;a href=&quot;methodhandles#publicLookup--&quot;&gt;&lt;code&gt;publicLookup&lt;/code&gt;&lt;/a&gt; method produces a lookup object which is only allowed to access public members in public classes. The caller sensitive method &lt;a href=&quot;methodhandles#lookup--&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; produces a lookup object with full capabilities relative to its caller class, to emulate all supported bytecode behaviors. Also, the &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;&lt;code&gt;Lookup.in&lt;/code&gt;&lt;/a&gt; method may produce a lookup object with fewer access modes than the original lookup object.</source>
          <target state="translated">特定の検索オブジェクトに許可されるアクセスは、その&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; の&lt;/a&gt;セットに従って、通常は検索クラスにアクセスできるメンバーのサブセットに制限される場合があります。たとえば、&lt;a href=&quot;methodhandles#publicLookup--&quot;&gt; &lt;code&gt;publicLookup&lt;/code&gt; &lt;/a&gt;メソッドは、パブリッククラスのパブリックメンバーへのアクセスのみが許可されているルックアップオブジェクトを生成します。呼び出し元に依存するメソッド&lt;a href=&quot;methodhandles#lookup--&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt;は、呼び出し元クラスに関連するすべての機能を備えた検索オブジェクトを生成し、サポートされているすべてのバイトコード動作をエミュレートします。また、&lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt; &lt;code&gt;Lookup.in&lt;/code&gt; &lt;/a&gt;メソッドは、元のルックアップオブジェクトよりもアクセスモードが少ないルックアップオブジェクトを生成する場合があります。</target>
        </trans-unit>
        <trans-unit id="336019016c9cfc89449e3197f835520dcb785799" translate="yes" xml:space="preserve">
          <source>The accumulated elapsed time that the thread has blocked for synchronization or waited for notification since &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;thread contention monitoring&lt;/code&gt;&lt;/a&gt; was enabled. Some Java virtual machine implementation may not support this. The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;ThreadMXBean.isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports this.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;thread contention monitoring&lt;/code&gt; &lt;/a&gt;が有効になってから、スレッドが同期をブロックしたか、通知を待機した累積経過時間。Java仮想マシンの実装によっては、これをサポートしていない場合があります。&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;ThreadMXBean.isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがこれをサポートしているかどうかを判断するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6c3240d64320b1f694103cbb6fbd69517a656609" translate="yes" xml:space="preserve">
          <source>The action is returned by &lt;a href=&quot;mbeanpermission#getActions--&quot;&gt;&lt;code&gt;getActions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションは&lt;a href=&quot;mbeanpermission#getActions--&quot;&gt; &lt;code&gt;getActions()&lt;/code&gt; &lt;/a&gt;によって返されます。</target>
        </trans-unit>
        <trans-unit id="fa53698de684065668ab67c1cd5cf7f587771eef" translate="yes" xml:space="preserve">
          <source>The action string (inherited from Permission) is unused. Thus, BasicPermission is commonly used as the base class for &quot;named&quot; permissions (ones that contain a name but no actions list; you either have the named permission or you don't.) Subclasses may implement actions on top of BasicPermission, if desired.</source>
          <target state="translated">アクション文字列 (Permission から継承されたもの)は未使用です。したがって、BasicPermissionは一般的に「名前付き」パーミッションのベースクラスとして使用されます(名前は含まれていますがアクションリストはありません。サブクラスは必要に応じて、BasicPermissionの上にアクションを実装することができます。</target>
        </trans-unit>
        <trans-unit id="a391d8169ef81029e091e136d4c09fc86d81e0fb" translate="yes" xml:space="preserve">
          <source>The action to be performed by this timer task.</source>
          <target state="translated">このタイマータスクが実行するアクション。</target>
        </trans-unit>
        <trans-unit id="f7096d2bffa5dec03522218205f50ac60f72bdfe" translate="yes" xml:space="preserve">
          <source>The actions parameter contains a comma-separated list of the desired actions granted on the target name. It must not be empty or null.</source>
          <target state="translated">actions パラメータには、ターゲット名に付与したいアクションのコンマ区切りリストが含まれます。空であったり、NULLであったりしてはいけません。</target>
        </trans-unit>
        <trans-unit id="c8cca4f8acc451307827a22daeee56bcf88f5e0c" translate="yes" xml:space="preserve">
          <source>The actions string is converted to lowercase before processing.</source>
          <target state="translated">アクション文字列は処理前に小文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="0a4a303a8ca535a1283105909db26fc04234c9e3" translate="yes" xml:space="preserve">
          <source>The actions string of a URLPermission is a concatenation of the</source>
          <target state="translated">URLPermissionのアクション文字列は</target>
        </trans-unit>
        <trans-unit id="b3c62e9495ee4ac46ead6ccca9eb89cb863dc5fd" translate="yes" xml:space="preserve">
          <source>The actions to be granted are passed to the constructor in a string containing a list of one or more comma-separated keywords. The possible keywords are &quot;read&quot; and &quot;write&quot;. Their meaning is defined as follows:</source>
          <target state="translated">コンストラクタに渡すアクションは、1 つ以上のキーワードをカンマで区切ったリストを含む文字列で指定します。可能なキーワードは &quot;read&quot; および &quot;write&quot; です。それらの意味は以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="d1b568cd9af613226967c935a47a44c2811969df" translate="yes" xml:space="preserve">
          <source>The actions to be granted are passed to the constructor in a string containing a list of one or more comma-separated keywords. The possible keywords are &quot;read&quot;, &quot;write&quot;, &quot;execute&quot;, &quot;delete&quot;, and &quot;readlink&quot;. Their meaning is defined as follows:</source>
          <target state="translated">コンストラクタに渡すアクションは、1 つ以上のキーワードをカンマで区切ったリストを含む文字列で指定します。可能なキーワードは、&quot;read&quot;、&quot;write&quot;、&quot;execute&quot;、&quot;delete&quot; および &quot;readlink&quot; です。これらの意味は以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="bc14d6c59502ef37434f04213e34e85f51e0fdc8" translate="yes" xml:space="preserve">
          <source>The actual &lt;code&gt;BufferedImage&lt;/code&gt; referenced by the returned &lt;code&gt;IIOImage&lt;/code&gt; will be chosen using the algorithm defined by the &lt;code&gt;getDestination&lt;/code&gt; method.</source>
          <target state="translated">返された &lt;code&gt;IIOImage&lt;/code&gt; によって参照される実際の &lt;code&gt;BufferedImage&lt;/code&gt; は、 &lt;code&gt;getDestination&lt;/code&gt; メソッドで定義されたアルゴリズムを使用して選択されます。</target>
        </trans-unit>
        <trans-unit id="aee4a0d5a3aed8d41f92b1bdfebee288637b4d1b" translate="yes" xml:space="preserve">
          <source>The actual &lt;code&gt;BufferedImage&lt;/code&gt; returned will be chosen using the algorithm defined by the &lt;code&gt;getDestination&lt;/code&gt; method.</source>
          <target state="translated">返される実際の &lt;code&gt;BufferedImage&lt;/code&gt; は、 &lt;code&gt;getDestination&lt;/code&gt; メソッドで定義されたアルゴリズムを使用して選択されます。</target>
        </trans-unit>
        <trans-unit id="6ed82671a5099d02bc4ad95bcdef0c774f23476b" translate="yes" xml:space="preserve">
          <source>The actual connection to the remote object is made, using the &lt;code&gt;connect&lt;/code&gt; method.</source>
          <target state="translated">リモートオブジェクトへの実際の接続は、 &lt;code&gt;connect&lt;/code&gt; メソッドを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="02600ea475ec423c00be1655967502d1587e439e" translate="yes" xml:space="preserve">
          <source>The actual installation of the value on the class is performed atomically. At that point, if several racing threads have computed values, one is chosen, and returned to all the racing threads.</source>
          <target state="translated">実際にクラスへの値のインストールはアトミックに行われます。その時点で、複数のレーシングスレッドが値を計算していた場合、1つが選択され、すべてのレーシングスレッドに返されます。</target>
        </trans-unit>
        <trans-unit id="af13a097906e4621821341553b5dbc08b523da1a" translate="yes" xml:space="preserve">
          <source>The actual number of bytes skipped is returned.</source>
          <target state="translated">実際にスキップされたバイト数が返されます。</target>
        </trans-unit>
        <trans-unit id="671467fba02c14caa04b6f11f619a6c32257e26e" translate="yes" xml:space="preserve">
          <source>The actual number of characters read, or -1 if the end of the stream has been reached</source>
          <target state="translated">実際に読み込まれた文字数、ストリームの終了に達している場合は -1</target>
        </trans-unit>
        <trans-unit id="059f9bec40ef8abe09f7c4c1f2b0e3a447ff1b0c" translate="yes" xml:space="preserve">
          <source>The actual number of passes to be decoded is determined during decoding, based on the number of actual passes available in the stream. Thus if &lt;code&gt;minPass + numPasses - 1&lt;/code&gt; is larger than the index of the last available passes, decoding will end with that pass.</source>
          <target state="translated">デコードされるパスの実際の数は、ストリームで使用可能な実際のパスの数に基づいて、デコード中に決定されます。したがって、 &lt;code&gt;minPass + numPasses - 1&lt;/code&gt; が最後に使用可能なパスのインデックスより大きい場合、デコードはそのパスで終了します。</target>
        </trans-unit>
        <trans-unit id="c82700f258fcadc84f9879bec102ae1591cfaca9" translate="yes" xml:space="preserve">
          <source>The actual output length of the next &lt;a href=&quot;exemptionmechanism#genExemptionBlob-byte:A-&quot;&gt;&lt;code&gt;genExemptionBlob&lt;/code&gt;&lt;/a&gt; call may be smaller than the length returned by this method.</source>
          <target state="translated">次の&lt;a href=&quot;exemptionmechanism#genExemptionBlob-byte:A-&quot;&gt; &lt;code&gt;genExemptionBlob&lt;/code&gt; &lt;/a&gt;呼び出しの実際の出力長は、このメソッドによって返される長さよりも短い場合があります。</target>
        </trans-unit>
        <trans-unit id="905d6033fae48670e75b261f56eb861a8b025e25" translate="yes" xml:space="preserve">
          <source>The actual output length of the next &lt;a href=&quot;exemptionmechanismspi#engineGenExemptionBlob-byte:A-int-&quot;&gt;&lt;code&gt;engineGenExemptionBlob&lt;/code&gt;&lt;/a&gt; call may be smaller than the length returned by this method.</source>
          <target state="translated">次の&lt;a href=&quot;exemptionmechanismspi#engineGenExemptionBlob-byte:A-int-&quot;&gt; &lt;code&gt;engineGenExemptionBlob&lt;/code&gt; &lt;/a&gt;呼び出しの実際の出力長は、このメソッドによって返される長さよりも短い場合があります。</target>
        </trans-unit>
        <trans-unit id="f0b999dc9952fdc4bc163efd809eb4b540035151" translate="yes" xml:space="preserve">
          <source>The actual output length of the next &lt;code&gt;update&lt;/code&gt; or &lt;code&gt;doFinal&lt;/code&gt; call may be smaller than the length returned by this method.</source>
          <target state="translated">次の &lt;code&gt;update&lt;/code&gt; または &lt;code&gt;doFinal&lt;/code&gt; 呼び出しの実際の出力長は、このメソッドによって返される長さよりも短い場合があります。</target>
        </trans-unit>
        <trans-unit id="5c672f3632d6634aa05d5efd1e829e67334a8823" translate="yes" xml:space="preserve">
          <source>The actual rules, describing when and how the offset changes, are defined by &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt;. This class is simply an ID used to obtain the underlying rules. This approach is taken because rules are defined by governments and change frequently, whereas the ID is stable.</source>
          <target state="translated">オフセットがいつどのように変化するかを説明する実際のルールは、&lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt;によって定義されます。このクラスは、基本的なルールを取得するために使用されるIDです。規則は政府によって定義され、頻繁に変更されるため、このアプローチが採用されていますが、IDは安定しています。</target>
        </trans-unit>
        <trans-unit id="8a8a6705f91238a61dfbbb0d224ce49b1650a684" translate="yes" xml:space="preserve">
          <source>The actual work of the server socket is performed by an instance of the &lt;code&gt;SocketImpl&lt;/code&gt; class. An application can change the socket factory that creates the socket implementation to configure itself to create sockets appropriate to the local firewall.</source>
          <target state="translated">サーバーソケットの実際の作業は、 &lt;code&gt;SocketImpl&lt;/code&gt; クラスのインスタンスによって実行されます。アプリケーションは、ソケット実装を作成するソケットファクトリを変更して、ローカルファイアウォールに適したソケットを作成するようにアプリケーション自体を構成できます。</target>
        </trans-unit>
        <trans-unit id="8b2d531952326e9ae5acc2e183a81fbf168e4f22" translate="yes" xml:space="preserve">
          <source>The actual work of the socket is performed by an instance of the &lt;code&gt;SocketImpl&lt;/code&gt; class. An application, by changing the socket factory that creates the socket implementation, can configure itself to create sockets appropriate to the local firewall.</source>
          <target state="translated">ソケットの実際の作業は、 &lt;code&gt;SocketImpl&lt;/code&gt; クラスのインスタンスによって実行されます。アプリケーションは、ソケット実装を作成するソケットファクトリを変更することにより、ローカルファイアウォールに適したソケットを作成するようにアプリケーションを構成できます。</target>
        </trans-unit>
        <trans-unit id="c52fcad8240289893d4eaf9e9bd3a09a6e65683c" translate="yes" xml:space="preserve">
          <source>The addition of the annotations of type</source>
          <target state="translated">型のアノテーションの追加</target>
        </trans-unit>
        <trans-unit id="7d1225e18c065ce8b5b65c6424eb1bdb34bfbf23" translate="yes" xml:space="preserve">
          <source>The additional stipulation on constructors is, not surprisingly, that all constructors must create a set that contains no duplicate elements (as defined above).</source>
          <target state="translated">コンストラクタに関する追加の規定は、驚くことではありませんが、すべてのコンストラクタは(上記で定義されているように)重複した要素を含まない集合を作成しなければならないということです。</target>
        </trans-unit>
        <trans-unit id="6d4d7fd7de63074cc28843a0d9ac3ddd2b5ab0c4" translate="yes" xml:space="preserve">
          <source>The address at the 0-based index posn. It must be in the range [0,getAddressCount()).</source>
          <target state="translated">0ベースのインデックスposnのアドレス。0,getAddressCount())の範囲内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="acf519d18f988e1d4f17bff6c076ffba8b178197" translate="yes" xml:space="preserve">
          <source>The address can instead indicate where to find an RMI stub through JNDI, using one of the following syntaxes:</source>
          <target state="translated">アドレスは、以下の構文のいずれかを使用して、JNDI を通して RMI スタブがどこにあるかを示すことができます。</target>
        </trans-unit>
        <trans-unit id="8c5756a8e726f896e4ca08c8947bb793ca198bf8" translate="yes" xml:space="preserve">
          <source>The address can refer directly to the connector server, using one of the following syntaxes:</source>
          <target state="translated">アドレスは、以下の構文のいずれかを使用して、コネクタサーバを直接参照することができます。</target>
        </trans-unit>
        <trans-unit id="73a61fe4e9ac93744841f28ec8ac19091292e962" translate="yes" xml:space="preserve">
          <source>The address in this reference with address type 'addrType; null if no such address exist.</source>
          <target state="translated">アドレスタイプ 'addrType' を持つこの参照内のアドレス。</target>
        </trans-unit>
        <trans-unit id="1ae2b9a5a8bb1f512366590bc69983d2d8d4b80c" translate="yes" xml:space="preserve">
          <source>The address is an &lt;em&gt;Abstract Service URL&lt;/em&gt; for SLP, as defined in RFC 2609 and amended by RFC 3111. It must look like this:</source>
          <target state="translated">このアドレスは、RFC 2609で定義され、RFC 3111で修正されたSLPの&lt;em&gt;抽象サービスURL&lt;/em&gt;です。次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="b2d8cc9e90317711c8a0f41b88e1676a7ca465b5" translate="yes" xml:space="preserve">
          <source>The address of a JMX API connector server.</source>
          <target state="translated">JMX API コネクタサーバのアドレスです。</target>
        </trans-unit>
        <trans-unit id="a4d7eacf72ff3ed3d8e0d07482c00d672118ff08" translate="yes" xml:space="preserve">
          <source>The address of a JMX API connector server. Instances of this class are immutable.</source>
          <target state="translated">JMX API コネクタ・サーバのアドレスです。このクラスのインスタンスは不変です。</target>
        </trans-unit>
        <trans-unit id="ba3c7b74f23c4583d4b444f591e20adf3f4aa41b" translate="yes" xml:space="preserve">
          <source>The address of this connector server.</source>
          <target state="translated">このコネクタサーバのアドレスです。</target>
        </trans-unit>
        <trans-unit id="e06cc9043fd1b212e6c9273048ab4a11862abe21" translate="yes" xml:space="preserve">
          <source>The address of this connector.</source>
          <target state="translated">このコネクタのアドレスです。</target>
        </trans-unit>
        <trans-unit id="bab9a87aaeb2101b2a58a43fae60b598d81efc1f" translate="yes" xml:space="preserve">
          <source>The address of this object.</source>
          <target state="translated">このオブジェクトのアドレスです。</target>
        </trans-unit>
        <trans-unit id="2d5c9fe06015caa29475e0490fe944507228cefb" translate="yes" xml:space="preserve">
          <source>The address removed.</source>
          <target state="translated">アドレスが削除されました。</target>
        </trans-unit>
        <trans-unit id="220e4c6a5e8db780a03f0ab0f7e8134a6d8babd4" translate="yes" xml:space="preserve">
          <source>The address returned may not be the exact original &lt;a href=&quot;../jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; that was supplied when creating the connector server, since the original address may not always be complete. For example the port number may be dynamically allocated when starting the connector server. Instead the address returned is the actual &lt;a href=&quot;../jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. This is the address that clients supply to &lt;a href=&quot;../jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect(JMXServiceURL)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるアドレスは、コネクタサーバーの作成時に提供された正確な元の&lt;a href=&quot;../jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;ではない場合があります。これは、元のアドレスが常に完全であるとは限らないためです。たとえば、ポート番号は、コネクタサーバーの起動時に動的に割り当てられる場合があります。代わりに、返されたアドレスは、実際のです&lt;a href=&quot;../jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;。これは、クライアントが&lt;a href=&quot;../jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect(JMXServiceURL)&lt;/code&gt; に&lt;/a&gt;提供するアドレスです。</target>
        </trans-unit>
        <trans-unit id="64e70a0a071f31f810c944e102a872232bd00f6d" translate="yes" xml:space="preserve">
          <source>The address returned may not be the exact original &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; that was supplied when creating the connector server, since the original address may not always be complete. For example the port number may be dynamically allocated when starting the connector server. Instead the address returned is the actual &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. This is the address that clients supply to &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect(JMXServiceURL)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるアドレスは、コネクタサーバーの作成時に提供された正確な元の&lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;ではない場合があります。これは、元のアドレスが常に完全であるとは限らないためです。たとえば、ポート番号は、コネクタサーバーの起動時に動的に割り当てられる場合があります。代わりに、返されたアドレスは、実際のです&lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;。これは、クライアントが&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect(JMXServiceURL)&lt;/code&gt; に&lt;/a&gt;提供するアドレスです。</target>
        </trans-unit>
        <trans-unit id="6241bef1e5fade87c6fb4134f49cb46aed6feb8c" translate="yes" xml:space="preserve">
          <source>The adjacent floating-point value closer to negative infinity.</source>
          <target state="translated">負の無限大に近い隣接する浮動小数点値。</target>
        </trans-unit>
        <trans-unit id="d7287ef5a420daf086005caedeba3f1999cd4f1b" translate="yes" xml:space="preserve">
          <source>The adjacent floating-point value closer to positive infinity.</source>
          <target state="translated">正の無限大に近い隣接する浮動小数点値。</target>
        </trans-unit>
        <trans-unit id="9660f4df915ae438aaa1ca69a926277eb5e438e2" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as the field.</source>
          <target state="translated">この調整は&lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;してChronoField.EPOCH_DAYをフィールドとして渡すことと同等です。</target>
        </trans-unit>
        <trans-unit id="1af39ea9e620defde8decc9abf70f8893f08effe" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt;&lt;code&gt;ChronoField.ERA&lt;/code&gt;&lt;/a&gt; as the field.</source>
          <target state="translated">この調整は&lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt; &lt;code&gt;ChronoField.ERA&lt;/code&gt; &lt;/a&gt;してChronoField.ERAをフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="fda27fe7600ef055a1fc731d1cae77fdc5cf2c6d" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; twice, passing &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as the fields.</source>
          <target state="translated">この調整は&lt;a href=&quot;../temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 2回使用して、&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="e44cad48b9827c5f480b34333f1a973611fd9388" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; as the field. Note that this adjusts forwards or backwards within a Monday to Sunday week. See &lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt;&lt;/a&gt; for localized week start days. See &lt;code&gt;TemporalAdjuster&lt;/code&gt; for other adjusters with more control, such as &lt;code&gt;next(MONDAY)&lt;/code&gt;.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;してChronoField.DAY_OF_WEEKをフィールドとして渡すことと同じです。これは、月曜日から日曜日の週の前後に調整されることに注意してください。ローカライズされた週の開始日については、&lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt; &lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt; &lt;/a&gt;を参照してください。 &lt;code&gt;next(MONDAY)&lt;/code&gt; など、より詳細に制御できる他のアジャスターについては、 &lt;code&gt;TemporalAdjuster&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b611d529bc1f3d60bbf9c910262c56861a5e1e8" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as the field.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;してChronoField.EPOCH_DAYをフィールドとして渡すことと同等です。</target>
        </trans-unit>
        <trans-unit id="257599f217c60f1b286ca03e73c123884296cb3b" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;ChronoField.MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; as the field. If the specified temporal object does not use the ISO calendar system then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">この調整は、フィールドとして&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;ChronoField.MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;を渡して&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。指定された一時オブジェクトがISOカレンダーシステムを使用しない場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="5802986909900e31119ae14ea5be02213c50d0be" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as the field.</source>
          <target state="translated">この調整は、フィールドとして&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;を渡して&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。</target>
        </trans-unit>
        <trans-unit id="88987ee5b08a8d2a074850d0b9773a025b06b4d1" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; as the field.</source>
          <target state="translated">この調整は、フィールドとして&lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;を渡して&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。</target>
        </trans-unit>
        <trans-unit id="98164a2c75da7f81c3334e95803d9d828422a751" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#PROLEPTIC_MONTH&quot;&gt;&lt;code&gt;ChronoField.PROLEPTIC_MONTH&lt;/code&gt;&lt;/a&gt; as the field. If the specified temporal object does not use the ISO calendar system then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;temporal/chronofield#PROLEPTIC_MONTH&quot;&gt; &lt;code&gt;ChronoField.PROLEPTIC_MONTH&lt;/code&gt; &lt;/a&gt;をフィールドとして渡してTemporal.with（TemporalField、long）を使用することと同等です。指定された一時オブジェクトがISOカレンダーシステムを使用しない場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a5129d3f5b2d1ff47e62137527b8ffc36da581cf" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; passing &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;ChronoField.YEAR&lt;/code&gt;&lt;/a&gt; as the field. If the specified temporal object does not use the ISO calendar system then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">この調整は、フィールドとして&lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;ChronoField.YEAR&lt;/code&gt; &lt;/a&gt;を渡して&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。指定された一時オブジェクトがISOカレンダーシステムを使用しない場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f2a30a7c22625abb73e11626e5ddcf7795b8d68d" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; three times, passing &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; as the fields.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 3回使用して、&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="e7da8868c418c745ff4cc22056878587f0c5e004" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; twice, passing &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as the fields.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 2回使用して、&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="fbe1b4b3b564d51f43b80e201aaa4bed1b896b23" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; twice, passing &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; as the fields.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 2回使用して、&lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="5eb1c9d6c698514069a9fa5a2aefedfa05f03d19" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; twice, passing &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;ChronoField.MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; as the fields. If the specified temporal object does not use the ISO calendar system then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 2回使用して、&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;ChronoField.MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。指定された一時オブジェクトがISOカレンダーシステムを使用しない場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="92d2244665cb53572ff5bdf04962e104a4097d36" translate="yes" xml:space="preserve">
          <source>The adjustment is equivalent to using &lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; twice, passing &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; as the fields.</source>
          <target state="translated">この調整は&lt;a href=&quot;temporal/temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; 2回使用して、&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;ChronoField.OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;をフィールドとして渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="c765c5d385607a3d8763df3c64f7ac4e847c83f3" translate="yes" xml:space="preserve">
          <source>The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the bootstrap class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behavior that is difficult to diagnose. For example, suppose there is a loader L, and L's parent for delegation is the bootstrap class loader. Furthermore, a method in class C, a class defined by L, makes reference to a non-public accessor class C$1. If the JAR file contains a class C$1 then the delegation to the bootstrap class loader will cause C$1 to be defined by the bootstrap class loader. In this example an &lt;code&gt;IllegalAccessError&lt;/code&gt; will be thrown that may cause the application to fail. One approach to avoiding these types of issues, is to use a unique package name for the instrumentation classes.</source>
          <target state="translated">エージェントは、インストルメンテーションの目的でブートストラップクラスローダーによって定義されるもの以外のクラスまたはリソースがJARに含まれないように注意する必要があります。この警告を守らないと、診断が難しい予期しない動作が発生する可能性があります。たとえば、ローダーLがあり、委任に対するLの親がブートストラップクラスローダーであるとします。さらに、Lによって定義されたクラスであるクラスCのメソッドは、非パブリックアクセサークラスC $ 1を参照します。 JARファイルにクラスC $ 1が含まれている場合、ブートストラップクラスローダーへの委任により、C $ 1がブートストラップクラスローダーによって定義されます。この例では、 &lt;code&gt;IllegalAccessError&lt;/code&gt; アプリケーションが失敗する原因となる可能性がありますがスローされます これらのタイプの問題を回避する1つの方法は、インスツルメンテーションクラスに一意のパッケージ名を使用することです。</target>
        </trans-unit>
        <trans-unit id="678b2dbe34d546f1b97104a1122aecca882d6d38" translate="yes" xml:space="preserve">
          <source>The agent should take care to ensure that the JAR does not contain any classes or resources other than those to be defined by the system class loader for the purpose of instrumentation. Failure to observe this warning could result in unexpected behavior that is difficult to diagnose (see &lt;a href=&quot;instrumentation#appendToBootstrapClassLoaderSearch-java.util.jar.JarFile-&quot;&gt;&lt;code&gt;appendToBootstrapClassLoaderSearch&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">エージェントは、インストルメンテーションの目的でシステムクラスローダーによって定義されるもの以外のクラスまたはリソースがJARに含まれないように注意する必要があります。この警告を守らないと、診断が困難な予期しない動作が発生する可能性があります（&lt;a href=&quot;instrumentation#appendToBootstrapClassLoaderSearch-java.util.jar.JarFile-&quot;&gt; &lt;code&gt;appendToBootstrapClassLoaderSearch&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="546cbc1f7664aeb26e996479ae09bc8d8a9e3a69" translate="yes" xml:space="preserve">
          <source>The alert (bell) character (&lt;code&gt;'\u0007'&lt;/code&gt;)</source>
          <target state="translated">警告（ベル）文字（ &lt;code&gt;'\u0007'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5626138a26257368698eb4794c202820b5b71ee2" translate="yes" xml:space="preserve">
          <source>The algorithm is slightly tricky. It rejects values that would result in an uneven distribution (due to the fact that 2^31 is not divisible by n). The probability of a value being rejected depends on n. The worst case is n=2^30+1, for which the probability of a reject is 1/2, and the expected number of iterations before the loop terminates is 2.</source>
          <target state="translated">このアルゴリズムは少しトリッキーです。これは不均一な分布になる値を拒否します(2^31がnで割り切れないという事実に起因します)。拒絶される値の確率はnに依存します。最悪のケースはn=2^30+1で、拒絶される確率は1/2で、ループが終了するまでの期待される反復回数は2です。</target>
        </trans-unit>
        <trans-unit id="93921a1e862ec851c3cf638cc9b61cb2cd976324" translate="yes" xml:space="preserve">
          <source>The algorithm name is determined from the &lt;code&gt;algorithm&lt;/code&gt; OID string.</source>
          <target state="translated">アルゴリズム名は、 &lt;code&gt;algorithm&lt;/code&gt; OID文字列から決定されます。</target>
        </trans-unit>
        <trans-unit id="a01ab90b6863321fb8006c5a10111bddcd7ece11" translate="yes" xml:space="preserve">
          <source>The algorithm to compute the SerialVersionUID is described in Object Serialization Specification, Section 4.6, Stream Unique Identifiers.</source>
          <target state="translated">SerialVersionUIDを計算するアルゴリズムは、Object Serialization Specificationのセクション4.6「Stream Unique Identifiers」で説明されています。</target>
        </trans-unit>
        <trans-unit id="9f567977a50b87c4c64f739289bf0274a0cee555" translate="yes" xml:space="preserve">
          <source>The algorithm treats the case where n is a power of two specially: it returns the correct number of high-order bits from the underlying pseudo-random number generator. In the absence of special treatment, the correct number of</source>
          <target state="translated">このアルゴリズムでは、n が 2 の累乗の場合を特別に扱います。特別な処理を行わない場合、正しい数の</target>
        </trans-unit>
        <trans-unit id="cfaae3f12961bc0e6e9294755ef603cdce9972b1" translate="yes" xml:space="preserve">
          <source>The algorithm used herein tests the BeanContextPeer, and its current children to determine if they are either Containers, Components, or if they implement Visibility and return needsGui() == true.</source>
          <target state="translated">ここで使用されるアルゴリズムは、BeanContextPeerとその現在の子プロセスをテストして、それらがコンテナ、コンポーネント、または可視性を実装しているかどうかを判断し、needsGui()==trueを返します。</target>
        </trans-unit>
        <trans-unit id="6cb3e1bfb6ce2cfa6d3a5700e0fc1aa8f7b1471d" translate="yes" xml:space="preserve">
          <source>The algorithm-independent approach uses the fact that all parameter generators share the concept of a &quot;size&quot; and a source of randomness. The measure of size is universally shared by all algorithm parameters, though it is interpreted differently for different algorithms. For example, in the case of parameters for the</source>
          <target state="translated">アルゴリズムに依存しないアプローチでは、すべてのパラメータ生成器が「サイズ」とランダム性の源の概念を共有しているという事実を利用します。サイズの尺度は、すべてのアルゴリズムのパラメータで普遍的に共有されていますが、異なるアルゴリズムでは解釈が異なります。例えば</target>
        </trans-unit>
        <trans-unit id="cf8486342f66f70d87128cfd826de9b0ef988360" translate="yes" xml:space="preserve">
          <source>The algorithms implemented by class &lt;code&gt;Random&lt;/code&gt; use a &lt;code&gt;protected&lt;/code&gt; utility method that on each invocation can supply up to 32 pseudorandomly generated bits.</source>
          <target state="translated">クラス &lt;code&gt;Random&lt;/code&gt; によって実装されたアルゴリズムは、 &lt;code&gt;protected&lt;/code&gt; ユーティリティメソッドを使用し、呼び出しごとに最大32の疑似ランダムに生成されたビットを提供できます。</target>
        </trans-unit>
        <trans-unit id="f935ac023e4757a422d3c1d9477a8b333c5e7e8b" translate="yes" xml:space="preserve">
          <source>The aligned day-of-week within a month.</source>
          <target state="translated">1ヶ月以内の整列曜日。</target>
        </trans-unit>
        <trans-unit id="5b65ab21d464a2cd9f17e050364212fad42369dd" translate="yes" xml:space="preserve">
          <source>The aligned day-of-week within a year.</source>
          <target state="translated">1年以内に揃えた曜日。</target>
        </trans-unit>
        <trans-unit id="8a31b06194c7afca8df2f57e58bdedb9af17f0a1" translate="yes" xml:space="preserve">
          <source>The aligned week within a month.</source>
          <target state="translated">1ヶ月以内に整列した週。</target>
        </trans-unit>
        <trans-unit id="36cc382669e126a3d83f765fd4596aa08b57e640" translate="yes" xml:space="preserve">
          <source>The aligned week within a year.</source>
          <target state="translated">1年以内に整列した週。</target>
        </trans-unit>
        <trans-unit id="e05b8cc0941345bc1cb1c86f03f948c5b63217be" translate="yes" xml:space="preserve">
          <source>The alphanumeric characters &quot;&lt;code&gt;a&lt;/code&gt;&quot; through &quot;&lt;code&gt;z&lt;/code&gt;&quot;, &quot;&lt;code&gt;A&lt;/code&gt;&quot; through &quot;&lt;code&gt;Z&lt;/code&gt;&quot; and &quot;&lt;code&gt;0&lt;/code&gt;&quot; through &quot;&lt;code&gt;9&lt;/code&gt;&quot; remain the same.</source>
          <target state="translated">英数字「 &lt;code&gt;a&lt;/code&gt; 」から「 &lt;code&gt;z&lt;/code&gt; 」、「 &lt;code&gt;A&lt;/code&gt; 」から「 &lt;code&gt;Z&lt;/code&gt; 」、および「 &lt;code&gt;0&lt;/code&gt; 」から「 &lt;code&gt;9&lt;/code&gt; 」は変わりません。</target>
        </trans-unit>
        <trans-unit id="7c0572c1c7ca3bf68a193c2c809c446abfe2afa3" translate="yes" xml:space="preserve">
          <source>The am-pm-of-day.</source>
          <target state="translated">アムプムオブデイ。</target>
        </trans-unit>
        <trans-unit id="74edaecf476996f8978f77b9b1cf0182dc658e02" translate="yes" xml:space="preserve">
          <source>The amount by which the capacity of the monitor arrays are automatically incremented when their size becomes greater than their capacity.</source>
          <target state="translated">モニターアレイのサイズが容量よりも大きくなったときに、モニターアレイの容量が自動的にインクリメントされる量です。</target>
        </trans-unit>
        <trans-unit id="9076e761c5f29e8f67b1371daf80d922283c4c18" translate="yes" xml:space="preserve">
          <source>The amount by which the capacity of the vector is automatically incremented when its size becomes greater than its capacity. If the capacity increment is less than or equal to zero, the capacity of the vector is doubled each time it needs to grow.</source>
          <target state="translated">ベクトルのサイズが容量より大きくなったときに、その容量が自動的に増加する量。容量の増加量がゼロ以下の場合、ベクトルの容量は成長するたびに2倍になります。</target>
        </trans-unit>
        <trans-unit id="f126ed1fd82891599e13c33def786ee88595c928" translate="yes" xml:space="preserve">
          <source>The amount by which the tile grid origin should be offset horizontally from the image origin if tiling has been set, or 0 otherwise. The initial value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">タイリングが設定されている場合は、タイルグリッドの原点を画像の原点から水平方向にオフセットする量。それ以外の場合は0。初期値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90dc34eb07729c8e77187523b54e04f1056c08b6" translate="yes" xml:space="preserve">
          <source>The amount by which the tile grid origin should be offset vertically from the image origin if tiling has been set, or 0 otherwise. The initial value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">タイルグリッドの原点を、タイルが設定されている場合は画像の原点から垂直にオフセットする量。それ以外の場合は0。初期値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f834737d8ddeb7615f0e64cb1071bcd66b90fc0e" translate="yes" xml:space="preserve">
          <source>The amount can be thought of as a &lt;code&gt;Map&lt;/code&gt; of &lt;a href=&quot;temporalunit&quot;&gt;&lt;code&gt;TemporalUnit&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;long&lt;/code&gt;, exposed via &lt;a href=&quot;temporalamount#getUnits--&quot;&gt;&lt;code&gt;getUnits()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporalamount#get-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;get(TemporalUnit)&lt;/code&gt;&lt;/a&gt;. A simple case might have a single unit-value pair, such as &quot;6 hours&quot;. A more complex case may have multiple unit-value pairs, such as &quot;7 years, 3 months and 5 days&quot;.</source>
          <target state="translated">この量は、&lt;a href=&quot;temporalamount#getUnits--&quot;&gt; &lt;code&gt;getUnits()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporalamount#get-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;get(TemporalUnit)&lt;/code&gt; を&lt;/a&gt;介して公開される、&lt;a href=&quot;temporalunit&quot;&gt; &lt;code&gt;TemporalUnit&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;long&lt;/code&gt; への &lt;code&gt;Map&lt;/code&gt; と考えることができます。単純なケースでは、「6時間」などの単位と値のペアが1つある場合があります。より複雑なケースでは、「7年、3か月、5日」などの複数の単位と値のペアが存在する場合があります。</target>
        </trans-unit>
        <trans-unit id="33d418714a49c19fb47687fd2e9fa81de86a9809" translate="yes" xml:space="preserve">
          <source>The amount of used memory in the returned memory usage is the amount of memory occupied by both live objects and garbage objects that have not been collected, if any.</source>
          <target state="translated">返されたメモリ使用量の中の使用済みメモリの量は、収集されていないライブオブジェクトとガーベージオブジェクトの両方が占有しているメモリの量であり、もしあれば、その量を示しています。</target>
        </trans-unit>
        <trans-unit id="57200acee95554fe9255e1ef5f8c2757f96f708f" translate="yes" xml:space="preserve">
          <source>The angle (vertical, horizontal, angled) of each staple with respect to the document depends on the implementation which may in turn depend on the value of the attribute.</source>
          <target state="translated">文書に対する各ステープルの角度(垂直、水平、角度)は、実装に依存しており、それは順番に属性の値に依存している可能性があります。</target>
        </trans-unit>
        <trans-unit id="56ebb191a856df2f8f893c582ce5c05707593b3e" translate="yes" xml:space="preserve">
          <source>The annotated type satisfies the requirements of a functional interface.</source>
          <target state="translated">注釈付きタイプは、機能インタフェースの要件を満たしています。</target>
        </trans-unit>
        <trans-unit id="30fd00f24b91bf4b27ca9bbed8fa14682d926579" translate="yes" xml:space="preserve">
          <source>The annotation returned by this method could contain an element whose value is of type &lt;code&gt;Class&lt;/code&gt;. This value cannot be returned directly: information necessary to locate and load a class (such as the class loader to use) is not available, and the class might not be loadable at all. Attempting to read a &lt;code&gt;Class&lt;/code&gt; object by invoking the relevant method on the returned annotation will result in a &lt;a href=&quot;../type/mirroredtypeexception&quot;&gt;&lt;code&gt;MirroredTypeException&lt;/code&gt;&lt;/a&gt;, from which the corresponding &lt;a href=&quot;../type/typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt; may be extracted. Similarly, attempting to read a &lt;code&gt;Class[]&lt;/code&gt;-valued element will result in a &lt;a href=&quot;../type/mirroredtypesexception&quot;&gt;&lt;code&gt;MirroredTypesException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される注釈には、値が &lt;code&gt;Class&lt;/code&gt; 型の要素を含めることができます。この値を直接返すことはできません。クラスを見つけてロードするために必要な情報（使用するクラスローダーなど）が利用できず、クラスをまったくロードできない可能性があります。読み取ろうとする &lt;code&gt;Class&lt;/code&gt; をもたらす返さ注釈に関連するメソッドを呼び出すことによって、オブジェクトを&lt;a href=&quot;../type/mirroredtypeexception&quot;&gt; &lt;code&gt;MirroredTypeException&lt;/code&gt; &lt;/a&gt;対応そこから、&lt;a href=&quot;../type/typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; を&lt;/a&gt;抽出することができます。同様に、 &lt;code&gt;Class[]&lt;/code&gt; 値の要素を読み取ろうとすると、&lt;a href=&quot;../type/mirroredtypesexception&quot;&gt; &lt;code&gt;MirroredTypesException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="b0a49070278463b21887a752144f83b535b48961" translate="yes" xml:space="preserve">
          <source>The annotation returned by this method could contain an element whose value is of type &lt;code&gt;Class&lt;/code&gt;. This value cannot be returned directly: information necessary to locate and load a class (such as the class loader to use) is not available, and the class might not be loadable at all. Attempting to read a &lt;code&gt;Class&lt;/code&gt; object by invoking the relevant method on the returned annotation will result in a &lt;a href=&quot;type/mirroredtypeexception&quot;&gt;&lt;code&gt;MirroredTypeException&lt;/code&gt;&lt;/a&gt;, from which the corresponding &lt;a href=&quot;type/typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt; may be extracted. Similarly, attempting to read a &lt;code&gt;Class[]&lt;/code&gt;-valued element will result in a &lt;a href=&quot;type/mirroredtypesexception&quot;&gt;&lt;code&gt;MirroredTypesException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される注釈には、値が &lt;code&gt;Class&lt;/code&gt; 型の要素を含めることができます。この値を直接返すことはできません。クラスを見つけてロードするために必要な情報（使用するクラスローダーなど）が利用できず、クラスをまったくロードできない可能性があります。読み取ろうとする &lt;code&gt;Class&lt;/code&gt; をもたらす返さ注釈に関連するメソッドを呼び出すことによって、オブジェクトを&lt;a href=&quot;type/mirroredtypeexception&quot;&gt; &lt;code&gt;MirroredTypeException&lt;/code&gt; &lt;/a&gt;対応そこから、&lt;a href=&quot;type/typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; を&lt;/a&gt;抽出することができます。同様に、 &lt;code&gt;Class[]&lt;/code&gt; 値の要素を読み取ろうとすると、&lt;a href=&quot;type/mirroredtypesexception&quot;&gt; &lt;code&gt;MirroredTypesException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1be4894a9e8c13443a271ac0ee4a590cf0278b93" translate="yes" xml:space="preserve">
          <source>The annotation shows that the first parameter of the constructor can be retrieved with the &lt;code&gt;getX()&lt;/code&gt; method and the second with the &lt;code&gt;getY()&lt;/code&gt; method. Since parameter names are not in general available at runtime, without the annotation there would be no way to know whether the parameters correspond to &lt;code&gt;getX()&lt;/code&gt; and &lt;code&gt;getY()&lt;/code&gt; or the other way around.</source>
          <target state="translated">アノテーションは、コンストラクタの最初のパラメータが &lt;code&gt;getX()&lt;/code&gt; メソッドで取得でき、2番目の &lt;code&gt;getY()&lt;/code&gt; がgetY（）メソッドで取得できることを示しています。パラメータ名は、実行時に一般利用可能ではないので、注釈なしのパラメータが対応するかどうかを知る方法がないことになる &lt;code&gt;getX()&lt;/code&gt; と &lt;code&gt;getY()&lt;/code&gt; 表示、又は他の方法で回避。</target>
        </trans-unit>
        <trans-unit id="c3e7f1b2fb83a88edaed871cf9cb4d36156ccd28" translate="yes" xml:space="preserve">
          <source>The annotation type &lt;code&gt;java.lang.annotation.Repeatable&lt;/code&gt; is used to indicate that the annotation type whose declaration it (meta-)annotates is &lt;em&gt;repeatable&lt;/em&gt;.</source>
          <target state="translated">アノテーション型 &lt;code&gt;java.lang.annotation.Repeatable&lt;/code&gt; は、その宣言が（メタ）アノテーションを付けるアノテーション型が&lt;em&gt;反復可能である&lt;/em&gt;ことを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="3c8eb831e645e1ed4e3178ca8da9b0533b5263c4" translate="yes" xml:space="preserve">
          <source>The annotation type &lt;code&gt;java.lang.annotation.Repeatable&lt;/code&gt; is used to indicate that the annotation type whose declaration it (meta-)annotates is &lt;em&gt;repeatable&lt;/em&gt;. The value of &lt;code&gt;@Repeatable&lt;/code&gt; indicates the &lt;em&gt;containing annotation type&lt;/em&gt; for the repeatable annotation type.</source>
          <target state="translated">アノテーション型 &lt;code&gt;java.lang.annotation.Repeatable&lt;/code&gt; は、宣言が（メタ）アノテーションを付けるアノテーション型が&lt;em&gt;反復可能である&lt;/em&gt;ことを示すために使用されます。 &lt;code&gt;@Repeatable&lt;/code&gt; の値は、反復可能なアノテーションタイプの&lt;em&gt;包含アノテーションタイプ&lt;/em&gt;を示します。</target>
        </trans-unit>
        <trans-unit id="124cefaf63ca067dbef195779acbe222323d7001" translate="yes" xml:space="preserve">
          <source>The annotations returned by this method could contain an element whose value is of type &lt;code&gt;Class&lt;/code&gt;. This value cannot be returned directly: information necessary to locate and load a class (such as the class loader to use) is not available, and the class might not be loadable at all. Attempting to read a &lt;code&gt;Class&lt;/code&gt; object by invoking the relevant method on the returned annotation will result in a &lt;a href=&quot;type/mirroredtypeexception&quot;&gt;&lt;code&gt;MirroredTypeException&lt;/code&gt;&lt;/a&gt;, from which the corresponding &lt;a href=&quot;type/typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt; may be extracted. Similarly, attempting to read a &lt;code&gt;Class[]&lt;/code&gt;-valued element will result in a &lt;a href=&quot;type/mirroredtypesexception&quot;&gt;&lt;code&gt;MirroredTypesException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される注釈には、値が &lt;code&gt;Class&lt;/code&gt; 型の要素を含めることができます。この値を直接返すことはできません。クラスを見つけてロードするために必要な情報（使用するクラスローダーなど）が利用できず、クラスをまったくロードできない可能性があります。読み取ろうとする &lt;code&gt;Class&lt;/code&gt; をもたらす返さ注釈に関連するメソッドを呼び出すことによって、オブジェクトを&lt;a href=&quot;type/mirroredtypeexception&quot;&gt; &lt;code&gt;MirroredTypeException&lt;/code&gt; &lt;/a&gt;対応そこから、&lt;a href=&quot;type/typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; を&lt;/a&gt;抽出することができます。同様に、 &lt;code&gt;Class[]&lt;/code&gt; 値の要素を読み取ろうとすると、&lt;a href=&quot;type/mirroredtypesexception&quot;&gt; &lt;code&gt;MirroredTypesException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="d0e7f0049df502b987281c3346589bd6cffbab2b" translate="yes" xml:space="preserve">
          <source>The application is responsible for reliably obtaining the network data from the peer, and for invoking unwrap() on the data in the order it was received. The application must properly synchronize multiple calls to this method.</source>
          <target state="translated">アプリケーションは、ピアからネットワーク・データを確実に取得し、データを受信した順に unwrap()を起動する責任があります。アプリケーションは、このメソッドへの複数の呼び出しを適切に同期させる必要があります。</target>
        </trans-unit>
        <trans-unit id="9a9de3f971900bc689d7e04c1be8704459fc234c" translate="yes" xml:space="preserve">
          <source>The application is responsible for reliably transporting the network data to the peer, and for ensuring that data created by multiple calls to wrap() is transported in the same order in which it was generated. The application must properly synchronize multiple calls to this method.</source>
          <target state="translated">アプリケーションは、ネットワーク・データを確実にピアに転送し、複数回の wrap()の呼び出しによって生成されたデータが、生成された順番通りに転送されるようにする責任があります。アプリケーションは、このメソッドへの複数の呼び出しを適切に同期させる必要があります。</target>
        </trans-unit>
        <trans-unit id="430098f5fdc52060873446cbe704ed4ec2f907a5" translate="yes" xml:space="preserve">
          <source>The application resource files (&lt;code&gt;jndi.properties&lt;/code&gt;).</source>
          <target state="translated">アプリケーションリソースファイル（ &lt;code&gt;jndi.properties&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e17b5b526cb20504035514498f620be9bcb8a571" translate="yes" xml:space="preserve">
          <source>The application should retain its own reference to the Logger object to avoid it being garbage collected. The LogManager may only retain a weak reference.</source>
          <target state="translated">アプリケーションは、ガベージコレクションされるのを避けるために、Logger オブジェクトへの独自の参照を保持する必要があります。LogManagerは弱い参照のみを保持することができます。</target>
        </trans-unit>
        <trans-unit id="3fcee94e7e9528705654f860965116639d53c580" translate="yes" xml:space="preserve">
          <source>The approximate index in the pattern of the error, or &lt;code&gt;-1&lt;/code&gt; if the index is not known</source>
          <target state="translated">エラーのパターンにおけるおおよそのインデックス、またはインデックスが不明の場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d18258b8a09318c0fe716980f2513c6b7d689eb8" translate="yes" xml:space="preserve">
          <source>The argument becomes the current set of system properties for use by the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;getProperty(String)&lt;/code&gt;&lt;/a&gt; method. If the argument is &lt;code&gt;null&lt;/code&gt;, then the current set of system properties is forgotten.</source>
          <target state="translated">引数は、&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;getProperty(String)&lt;/code&gt; &lt;/a&gt;メソッドで使用するシステムプロパティの現在のセットになります。引数が &lt;code&gt;null&lt;/code&gt; の場合、システムプロパティの現在のセットは忘れられます。</target>
        </trans-unit>
        <trans-unit id="3eda6b061d52f9633b11dd4adf55839255cf403b" translate="yes" xml:space="preserve">
          <source>The argument index is a decimal integer indicating the position of the argument in the argument list. The first argument is referenced by &quot;&lt;code&gt;1$&lt;/code&gt;&quot;, the second by &quot;&lt;code&gt;2$&lt;/code&gt;&quot;, etc.</source>
          <target state="translated">引数インデックスは、引数リスト内の引数の位置を示す10進整数です。最初の引数は「 &lt;code&gt;1$&lt;/code&gt; 」で参照され、2番目の引数は「 &lt;code&gt;2$&lt;/code&gt; 」で参照されます。</target>
        </trans-unit>
        <trans-unit id="99ae0b95c82d7e5d456a4b05f7772782c73566c3" translate="yes" xml:space="preserve">
          <source>The argument is appended to the contents of this sequence. The length of this sequence increases by &lt;a href=&quot;character#charCount-int-&quot;&gt;&lt;code&gt;Character.charCount(codePoint)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数はこのシーケンスの内容に追加されます。このシーケンスの長さは、&lt;a href=&quot;character#charCount-int-&quot;&gt; &lt;code&gt;Character.charCount(codePoint)&lt;/code&gt; だけ&lt;/a&gt;増加します。</target>
        </trans-unit>
        <trans-unit id="530578e360d335fe358bf50135b12bdaa9833c94" translate="yes" xml:space="preserve">
          <source>The argument is appended to the contents of this sequence. The length of this sequence increases by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">引数はこのシーケンスの内容に追加されます。このシーケンスの長さは &lt;code&gt;1&lt;/code&gt; ずつ増加します。</target>
        </trans-unit>
        <trans-unit id="2f6d8165e4787ec54c7633c17f8460e647d868e0" translate="yes" xml:space="preserve">
          <source>The argument list for this method includes three fixed parameters, corresponding to the parameters automatically stacked by the VM for the bootstrap method in an &lt;code&gt;invokedynamic&lt;/code&gt; invocation, and an &lt;code&gt;Object[]&lt;/code&gt; parameter that contains additional parameters. The declared argument list for this method is:</source>
          <target state="translated">このメソッドの引数リストには、 &lt;code&gt;invokedynamic&lt;/code&gt; 呼び出しのブートストラップメソッドのVMによって自動的にスタックされるパラメーターに対応する3つの固定パラメーターと、追加パラメーターを含む &lt;code&gt;Object[]&lt;/code&gt; パラメーターが含まれます。このメソッドの宣言された引数リストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5fb9985f7d13d4b1f9cd222839ca8db9be97981a" translate="yes" xml:space="preserve">
          <source>The argument list of the implementation method and the argument list of the interface method(s) may differ in several ways. The implementation methods may have additional arguments to accommodate arguments captured by the lambda expression; there may also be differences resulting from permitted adaptations of arguments, such as casting, boxing, unboxing, and primitive widening. (Varargs adaptations are not handled by the metafactories; these are expected to be handled by the caller.)</source>
          <target state="translated">実装メソッドの引数リストとインタフェースメソッドの引数リストは、いくつかの方法で異なる場合があります。実装メソッドは、ラムダ式によって捕捉された引数に対応するために追加の引数を持つかもしれません。また、キャスティング、ボックス化、アンボックス化、プリミティブの拡張など、引数の許容される適応の結果としての違いもあるかもしれません。(Varargs の適応はメタファクトリーでは処理されません。)</target>
        </trans-unit>
        <trans-unit id="dba085c7b50d6043549c3ebae9230f8d1dc02715" translate="yes" xml:space="preserve">
          <source>The argument string may consist of either a level name or an integer value.</source>
          <target state="translated">引数文字列は、レベル名または整数値のいずれかで構成されます。</target>
        </trans-unit>
        <trans-unit id="a409707495e7aa4d57fd8347009cb66d93f0721f" translate="yes" xml:space="preserve">
          <source>The argument types (if any) of the filter replace zero or one argument types of the target, at position &lt;code&gt;pos&lt;/code&gt;, in the resulting adapted method handle. The return type of the filter (if any) must be identical to the argument type of the target at position &lt;code&gt;pos&lt;/code&gt;, and that target argument is supplied by the return value of the filter.</source>
          <target state="translated">フィルターの引数タイプ（存在する場合）は、結果の適応メソッドハンドルの位置 &lt;code&gt;pos&lt;/code&gt; で、ターゲットの0または1つの引数タイプを置き換えます。フィルターの戻りタイプ（存在する場合）は、位置 &lt;code&gt;pos&lt;/code&gt; にあるターゲットの引数タイプと同じでなければならず、そのターゲット引数はフィルターの戻り値によって提供されます。</target>
        </trans-unit>
        <trans-unit id="c7a1affcb922dffb08b9bc26f38f2fcd2ff544f2" translate="yes" xml:space="preserve">
          <source>The arguments to this method provide the state of the phaser prevailing for the current transition. The effects of invoking arrival, registration, and waiting methods on this phaser from within &lt;code&gt;onAdvance&lt;/code&gt; are unspecified and should not be relied on.</source>
          <target state="translated">このメソッドの引数は、現在の遷移で一般的なフェイザーの状態を提供します。 &lt;code&gt;onAdvance&lt;/code&gt; 内からこのフェイザーの到着、登録、および待機メソッドを呼び出すことの影響は特定されておらず、依存するべきではありません。</target>
        </trans-unit>
        <trans-unit id="6a5780e32ca901cbb32b194668ffd8aed9709eb9" translate="yes" xml:space="preserve">
          <source>The arguments' type in the argument list should be a Java primitive type or a Java basic type (&lt;code&gt;java.lang.Boolean, java.lang.Byte, java.lang.Short, java.lang.Long, java.lang.Integer, java.lang.Float, java.lang.Double, java.lang.String&lt;/code&gt;).</source>
          <target state="translated">引数リスト内の引数の型は、Javaプリミティブ型またはJava基本型（ &lt;code&gt;java.lang.Boolean, java.lang.Byte, java.lang.Short, java.lang.Long, java.lang.Integer, java.lang.Float, java.lang.Double, java.lang.String&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e3eff702de68d57af015cf4b99e531b32b5ea13c" translate="yes" xml:space="preserve">
          <source>The arithmetic mean of values, or zero if none</source>
          <target state="translated">値の算術平均。</target>
        </trans-unit>
        <trans-unit id="e46894470d324ef2c838dfa52d4db4c7490f2a91" translate="yes" xml:space="preserve">
          <source>The array buffer into which the components of the vector are stored. The capacity of the vector is the length of this array buffer, and is at least large enough to contain all the vector's elements.</source>
          <target state="translated">ベクトルの構成要素が格納される配列バッファ.ベクトルの容量は,この配列バッファの長さであり,少なくともベクトルの全要素を格納するのに十分な大きさです.</target>
        </trans-unit>
        <trans-unit id="df96b8a4607fb626cc5f918559d4d97edf1931c5" translate="yes" xml:space="preserve">
          <source>The array of &lt;code&gt;Package&lt;/code&gt; objects defined by this &lt;code&gt;ClassLoader&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;ClassLoader&lt;/code&gt; によって定義された &lt;code&gt;Package&lt;/code&gt; オブジェクトの配列</target>
        </trans-unit>
        <trans-unit id="705218ba2f4229324522ac940a920cb455e867d6" translate="yes" xml:space="preserve">
          <source>The array of attributes that were set, with their new values in Attribute instances.</source>
          <target state="translated">設定された属性の配列と、Attribute インスタンスの新しい値。</target>
        </trans-unit>
        <trans-unit id="ece62f0c726122c250dc236e28fb201902c1b37c" translate="yes" xml:space="preserve">
          <source>The array of notification types returned by &lt;a href=&quot;mbeaninfo#getNotifications--&quot;&gt;&lt;code&gt;MBeanInfo.getNotifications()&lt;/code&gt;&lt;/a&gt; for an MXBean that is directly registered in the MBean Server will be empty if the MXBean does not implement the &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; interface. Otherwise, it will be the result of calling &lt;a href=&quot;notificationbroadcaster#getNotificationInfo--&quot;&gt;&lt;code&gt;NotificationBroadcaster.getNotificationInfo()&lt;/code&gt;&lt;/a&gt; at the time the MXBean was registered. Even if the result of this method changes subsequently, the result of &lt;code&gt;MBeanInfo.getNotifications()&lt;/code&gt; will not. The list returned for an MXBean that is constructed using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;standardemittermbean&quot;&gt;&lt;code&gt;StandardEmitterMBean&lt;/code&gt;&lt;/a&gt; class is derived in the same way as for Standard MBeans.</source>
          <target state="translated">MXBeanが&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;インターフェースを実装していない場合、MBeanサーバーに直接登録されているMXBeanに対して&lt;a href=&quot;mbeaninfo#getNotifications--&quot;&gt; &lt;code&gt;MBeanInfo.getNotifications()&lt;/code&gt; &lt;/a&gt;によって返される通知タイプの配列は空になります。それ以外の場合は、MXBeanの登録時に&lt;a href=&quot;notificationbroadcaster#getNotificationInfo--&quot;&gt; &lt;code&gt;NotificationBroadcaster.getNotificationInfo()&lt;/code&gt; &lt;/a&gt;を呼び出した結果になります。このメソッドの結果が &lt;code&gt;MBeanInfo.getNotifications()&lt;/code&gt; 変更されても、MBeanInfo.getNotifications（）の結果は変更されません。&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;standardemittermbean&quot;&gt; &lt;code&gt;StandardEmitterMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して構築されたMXBeanに対して返されるリストは、標準MBeanの場合と同じ方法で導出されます。</target>
        </trans-unit>
        <trans-unit id="8033f974991351ace5422d567e6168d796751594" translate="yes" xml:space="preserve">
          <source>The array of package names that will be searched in order to find BeanInfo classes. The default value for this array is implementation-dependent; e.g. Sun implementation initially sets to {&quot;sun.beans.infos&quot;}.</source>
          <target state="translated">BeanInfoクラスを検索するために検索されるパッケージ名の配列。この配列のデフォルト値は実装に依存します;例えば、Sunの実装では、最初は{&quot;sun.bean.infos&quot;}に設定されます。</target>
        </trans-unit>
        <trans-unit id="ea0e9468c9d76c117ad93cb29d44a9ac61c3edbb" translate="yes" xml:space="preserve">
          <source>The array of package names that will be searched in order to find property editors.</source>
          <target state="translated">プロパティエディタを探すために検索されるパッケージ名の配列。</target>
        </trans-unit>
        <trans-unit id="928ffa64af02531e697e049765f39cfb4189454d" translate="yes" xml:space="preserve">
          <source>The array of public constructors returned by &lt;a href=&quot;mbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;MBeanInfo.getConstructors()&lt;/code&gt;&lt;/a&gt; for an MXBean that is directly registered in the MBean Server will contain all of the public constructors of that MXBean. If the class of the MXBean is not public then its constructors are not considered public either. The list returned for an MXBean that is constructed using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class is derived in the same way as for Standard MBeans. Regardless of how the MXBean was constructed, its constructor parameters are not subject to MXBean mapping rules and do not have a corresponding &lt;code&gt;OpenType&lt;/code&gt;.</source>
          <target state="translated">MBeanサーバーに直接登録されているMXBeanの&lt;a href=&quot;mbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;MBeanInfo.getConstructors()&lt;/code&gt; &lt;/a&gt;によって返されるパブリックコンストラクターの配列には、そのMXBeanのすべてのパブリックコンストラクターが含まれます。 MXBeanのクラスがパブリックでない場合、そのコンストラクターもパブリックとは見なされません。&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して構築されたMXBeanに対して返されるリストは、Standard MBeanの場合と同じ方法で導出されます。 MXBeanがどのように構築されたかに関係なく、そのコンストラクターパラメーターはMXBeanマッピングルールの対象ではなく、対応する &lt;code&gt;OpenType&lt;/code&gt; はありません。</target>
        </trans-unit>
        <trans-unit id="db434f017939a212924ae8b2ae76ae4c1e7e5572" translate="yes" xml:space="preserve">
          <source>The array of strings computed by splitting the input around matches of this pattern</source>
          <target state="translated">このパターンにマッチするものを中心に入力を分割して計算される文字列の配列.</target>
        </trans-unit>
        <trans-unit id="21e99c99c3f91ab24ab86736735d1d0c34a806e4" translate="yes" xml:space="preserve">
          <source>The array of the retrieved attributes.</source>
          <target state="translated">取得した属性の配列。</target>
        </trans-unit>
        <trans-unit id="d4bac7b4df1de55c6f27580125aa0401038db85c" translate="yes" xml:space="preserve">
          <source>The array returned by &lt;a href=&quot;standardemittermbean#getNotificationInfo--&quot;&gt;&lt;code&gt;getNotificationInfo()&lt;/code&gt;&lt;/a&gt; on the new MBean is a copy of the array returned by &lt;code&gt;emitter.&lt;/code&gt;&lt;a href=&quot;notificationbroadcaster#getNotificationInfo--&quot;&gt;&lt;code&gt;getNotificationInfo()&lt;/code&gt;&lt;/a&gt; at the time of construction. If the array returned by &lt;code&gt;emitter.getNotificationInfo()&lt;/code&gt; later changes, that will have no effect on this object's &lt;code&gt;getNotificationInfo()&lt;/code&gt;.</source>
          <target state="translated">返される配列&lt;a href=&quot;standardemittermbean#getNotificationInfo--&quot;&gt; &lt;code&gt;getNotificationInfo()&lt;/code&gt; &lt;/a&gt;新しいMBeanには、返される配列のコピーである &lt;code&gt;emitter.&lt;/code&gt; 構築時の&lt;a href=&quot;notificationbroadcaster#getNotificationInfo--&quot;&gt; &lt;code&gt;getNotificationInfo()&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;emitter.getNotificationInfo()&lt;/code&gt; によって返された配列が後で変更されても、このオブジェクトの &lt;code&gt;getNotificationInfo()&lt;/code&gt; には影響しません。</target>
        </trans-unit>
        <trans-unit id="e92705f378bd923a26c73b7355c18555646036fe" translate="yes" xml:space="preserve">
          <source>The array returned by this method contains each substring of the input sequence that is terminated by another subsequence that matches this pattern or is terminated by the end of the input sequence. The substrings in the array are in the order in which they occur in the input. If this pattern does not match any subsequence of the input then the resulting array has just one element, namely the input sequence in string form.</source>
          <target state="translated">このメソッドによって返される配列は、入力シーケンスの各部分文字列を含み、このパターンにマッチする別の部分文字列によって終端されるか、または入力シーケンスの終端によって終端される。配列の部分文字列は、入力の中で出現した順に並べられます。もしこのパターンが入力のどの部分配列にもマッチしない場合は、結果として得られる配列は1つの要素、すなわち文字列形式の入力配列だけを持ちます。</target>
        </trans-unit>
        <trans-unit id="f71572fbf727c562642b1ff0c2f9fbfecd555f50" translate="yes" xml:space="preserve">
          <source>The array returned by this method contains each substring of this string that is terminated by another substring that matches the given expression or is terminated by the end of the string. The substrings in the array are in the order in which they occur in this string. If the expression does not match any part of the input then the resulting array has just one element, namely this string.</source>
          <target state="translated">このメソッドが返す配列は、与えられた式にマッチする別の部分文字列で 終わるか、文字列の終わりで終わる文字列の各部分文字列を含みます。配列の部分文字列は、この文字列の中で出現した順に並べられます。式が入力のどの部分にもマッチしない場合は、結果として得られる配列の要素はただ一つ、つまりこの文字列だけです。</target>
        </trans-unit>
        <trans-unit id="fd8e2a59c6f597467816fcfb0a55337513d7ca3b" translate="yes" xml:space="preserve">
          <source>The array returned by this method should not include two or more &lt;code&gt;Locale&lt;/code&gt; objects only differing in their extensions.</source>
          <target state="translated">このメソッドによって返される配列には、拡張子のみが異なる2つ以上の &lt;code&gt;Locale&lt;/code&gt; オブジェクトを含めないでください。</target>
        </trans-unit>
        <trans-unit id="127b2b126ce707a25ed2dfc831df19ca1f0f57ef" translate="yes" xml:space="preserve">
          <source>The array that backs this buffer</source>
          <target state="translated">このバッファをバックアップする配列</target>
        </trans-unit>
        <trans-unit id="55ad773221907d42c4b5de9996c45dad816d6669" translate="yes" xml:space="preserve">
          <source>The associated &lt;code&gt;Bindings&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if it has not been set.</source>
          <target state="translated">関連する &lt;code&gt;Bindings&lt;/code&gt; 。設定されていない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="17debbc5f42393fd96f9ca2904b4a3088a73d0b0" translate="yes" xml:space="preserve">
          <source>The associativity constraint says that splitting the computation must produce an equivalent result. That is, for any input elements &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, the results &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; in the computation below must be equivalent:</source>
          <target state="translated">関連性制約は、計算を分割すると同等の結果が生成される必要があることを示しています。つまり、任意の入力要素 &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; について、以下の計算の結果 &lt;code&gt;r1&lt;/code&gt; および &lt;code&gt;r2&lt;/code&gt; は同等でなければなりません。</target>
        </trans-unit>
        <trans-unit id="67ec3ad0e3e68650ab013d136deb39b2f3be1878" translate="yes" xml:space="preserve">
          <source>The asynchronous channels defined in this package allow a completion handler to be specified to consume the result of an asynchronous operation. The &lt;a href=&quot;completionhandler#completed-V-A-&quot;&gt;&lt;code&gt;completed&lt;/code&gt;&lt;/a&gt; method is invoked when the I/O operation completes successfully. The &lt;a href=&quot;completionhandler#failed-java.lang.Throwable-A-&quot;&gt;&lt;code&gt;failed&lt;/code&gt;&lt;/a&gt; method is invoked if the I/O operations fails. The implementations of these methods should complete in a timely manner so as to avoid keeping the invoking thread from dispatching to other completion handlers.</source>
          <target state="translated">このパッケージで定義された非同期チャネルを使用すると、完了ハンドラーを指定して、非同期操作の結果を利用できます。&lt;a href=&quot;completionhandler#completed-V-A-&quot;&gt; &lt;code&gt;completed&lt;/code&gt; &lt;/a&gt;たI / O操作が正常に完了したときにメソッドが呼び出されます。&lt;a href=&quot;completionhandler#failed-java.lang.Throwable-A-&quot;&gt; &lt;code&gt;failed&lt;/code&gt; &lt;/a&gt; I / O操作が失敗した場合メソッドが呼び出されます。これらのメソッドの実装は、呼び出しスレッドが他の完了ハンドラにディスパッチされないようにするために、タイムリーに完了する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2643efcacf971e061ea507c97d7776dc8feca47" translate="yes" xml:space="preserve">
          <source>The atomic classes also support method &lt;code&gt;weakCompareAndSet&lt;/code&gt;, which has limited applicability. On some platforms, the weak version may be more efficient than &lt;code&gt;compareAndSet&lt;/code&gt; in the normal case, but differs in that any given invocation of the &lt;code&gt;weakCompareAndSet&lt;/code&gt; method may return &lt;code&gt;false&lt;/code&gt;&lt;em&gt;spuriously&lt;/em&gt; (that is, for no apparent reason). A &lt;code&gt;false&lt;/code&gt; return means only that the operation may be retried if desired, relying on the guarantee that repeated invocation when the variable holds &lt;code&gt;expectedValue&lt;/code&gt; and no other thread is also attempting to set the variable will eventually succeed. (Such spurious failures may for example be due to memory contention effects that are unrelated to whether the expected and current values are equal.) Additionally &lt;code&gt;weakCompareAndSet&lt;/code&gt; does not provide ordering guarantees that are usually needed for synchronization control. However, the method may be useful for updating counters and statistics when such updates are unrelated to the other happens-before orderings of a program. When a thread sees an update to an atomic variable caused by a &lt;code&gt;weakCompareAndSet&lt;/code&gt;, it does not necessarily see updates to any &lt;em&gt;other&lt;/em&gt; variables that occurred before the &lt;code&gt;weakCompareAndSet&lt;/code&gt;. This may be acceptable when, for example, updating performance statistics, but rarely otherwise.</source>
          <target state="translated">アトミッククラスは、適用範囲が限定された &lt;code&gt;weakCompareAndSet&lt;/code&gt; メソッドもサポートします。いくつかのプラットフォームでは、弱いバージョンがより効率的である &lt;code&gt;compareAndSet&lt;/code&gt; 通常の場合、しかし、任意の所与の呼び出し点で異なる &lt;code&gt;weakCompareAndSet&lt;/code&gt; の方法は、返すことができる &lt;code&gt;false&lt;/code&gt; &lt;em&gt;擬似&lt;/em&gt;（明白な理由のために、です）。 &lt;code&gt;false&lt;/code&gt; 必要に応じて、操作は、変数が保持している場合、呼び出しを繰り返し保証に頼って、再試行することができるだけで復帰手段 &lt;code&gt;expectedValue&lt;/code&gt; そして、変数を設定しようとしている他のスレッドも最終的には成功しません。 （このような偽の失敗は、たとえば、期待値と現在の値が等しいかどうかに関係のないメモリ競合の影響が原因である可能性があります。）また、 &lt;code&gt;weakCompareAndSet&lt;/code&gt; は、同期制御に通常必要な順序の保証を提供しません。ただし、この方法は、そのような更新がプログラムの他の発生前の順序付けと無関係である場合に、カウンターと統計を更新するのに役立ちます。スレッドは、 &lt;code&gt;weakCompareAndSet&lt;/code&gt; によって引き起こされたアトミック変数の更新を確認しても、 &lt;code&gt;weakCompareAndSet&lt;/code&gt; の前に発生した&lt;em&gt;他の&lt;/em&gt;変数の更新を確認する必要はありません。。これは、たとえばパフォーマンス統計を更新する場合などは許容できますが、それ以外の場合はまれです。</target>
        </trans-unit>
        <trans-unit id="ac4d2ba6afc8f8ee440138a683ef1064620a944b" translate="yes" xml:space="preserve">
          <source>The attribute being observed.</source>
          <target state="translated">観察されている属性。</target>
        </trans-unit>
        <trans-unit id="ae483aeff395b3de4d450d6d9ace753544821cfa" translate="yes" xml:space="preserve">
          <source>The attribute classes in package javax.print.attribute.standard are based on the Internet Printing Protocol (IPP) attributes as defined in the Internet RFC document,</source>
          <target state="translated">package javax.print.attribute.standardに含まれる属性クラスは、インターネットRFC文書で定義されているインターネット印刷プロトコル(IPP)属性に基づいています。</target>
        </trans-unit>
        <trans-unit id="e05558897f0a001d5208b09a07d6aa1c98e2cd44" translate="yes" xml:space="preserve">
          <source>The attribute identified by attrID; null if not found.</source>
          <target state="translated">attrIDによって識別される属性。</target>
        </trans-unit>
        <trans-unit id="14f0f29c3610d7bdbde3a9395cb830c538b88095" translate="yes" xml:space="preserve">
          <source>The attribute information returned by &lt;a href=&quot;../mbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;MBeanInfo.getAttributes&lt;/code&gt;&lt;/a&gt; for an Open MBean is an array of objects implementing &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, usually instances of &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;. In addition to the usual information about attributes, an &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; specifies the &lt;a href=&quot;opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; of the attribute. The possible &lt;code&gt;OpenType&lt;/code&gt; values are predefined, which is what ensures that remote managers will understand them.</source>
          <target state="translated">Open MBeanの&lt;a href=&quot;../mbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;MBeanInfo.getAttributes&lt;/code&gt; &lt;/a&gt;によって返される属性情報は、&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; を&lt;/a&gt;実装するオブジェクトの配列であり、通常は&lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; の&lt;/a&gt;インスタンスです。属性に関する通常の情報に加えて、 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; は属性の&lt;a href=&quot;opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt;を指定します。可能な &lt;code&gt;OpenType&lt;/code&gt; 値は事前定義されています。これにより、リモートマネージャーが値を理解できるようになります。</target>
        </trans-unit>
        <trans-unit id="1a34ae87a4441eaa7165be74012804b6e6e4684c" translate="yes" xml:space="preserve">
          <source>The attribute is not described in terms of the distance from the edge of the paper, in part to emphasise that this attribute is not independent of a particular media, but must be described within the context of a choice of other attributes. Additionally it is usually more convenient for a client to use the printable area.</source>
          <target state="translated">この属性は、この属性が特定の媒体から独立したものではなく、他の属性の選択の文脈の中で記述されなければならないことを強調するために、紙の端からの距離という観点では記述されていない。さらに、通常、クライアントが印刷可能な領域を使用した方が便利である。</target>
        </trans-unit>
        <trans-unit id="9468efb616ab2d3e6fc89d10bca6b8e41e4686d0" translate="yes" xml:space="preserve">
          <source>The attribute name</source>
          <target state="translated">属性名</target>
        </trans-unit>
        <trans-unit id="982ed456989e65fdd484ae4e5cc16efdb533dab0" translate="yes" xml:space="preserve">
          <source>The attribute name-value mappings.</source>
          <target state="translated">属性名と値のマッピング。</target>
        </trans-unit>
        <trans-unit id="0e520d7f76b80d19d6afab265e6113914f902be7" translate="yes" xml:space="preserve">
          <source>The attribute or its value usually do no longer apply if the underlying text is changed.</source>
          <target state="translated">属性やその値は、基礎となるテキストが変更された場合、通常は適用されなくなります。</target>
        </trans-unit>
        <trans-unit id="6f0189c1a4a9f3d326e775b5da3b0b10bb82b286" translate="yes" xml:space="preserve">
          <source>The attribute type and value pairs of the RDNs are lined up against each other and compared lexicographically. The order of components in multi-valued Rdns (such as &quot;ou=Sales+cn=Bob&quot;) is not significant.</source>
          <target state="translated">RDN の属性型と値のペアを互いに並べ、語彙的に比較する。多値Rdnsの構成要素の順序(&quot;ou=Sales+cn=Bob &quot;のような)は重要ではない。</target>
        </trans-unit>
        <trans-unit id="6d2a41c58f84b983c4307e184fcf2882ccbdc7cf" translate="yes" xml:space="preserve">
          <source>The attribute value</source>
          <target state="translated">属性値</target>
        </trans-unit>
        <trans-unit id="1dd4ad63a087a507070b2c6d348bcb8ed887c556" translate="yes" xml:space="preserve">
          <source>The attribute value in the given attribute category contained in this attribute set, or &lt;code&gt;null&lt;/code&gt; if this attribute set does not contain any attribute value in the given attribute category.</source>
          <target state="translated">この属性セットに含まれる指定された属性カテゴリの属性値。この属性セットに指定された属性カテゴリの属性値が含まれていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd99275c284235d7cf7a419987d70ea2029d7722" translate="yes" xml:space="preserve">
          <source>The attribute's syntax definition. Null if the implementation supports schemas but this particular attribute does not have any schema information.</source>
          <target state="translated">属性の構文定義。実装がスキーマをサポートしているが、この特定の属性がスキーマ情報を持っていない場合はNull。</target>
        </trans-unit>
        <trans-unit id="3b4fb6a472a0a1c0664b9c45a0e5bd747e2f2099" translate="yes" xml:space="preserve">
          <source>The attributes for this connector server.</source>
          <target state="translated">このコネクタサーバの属性。</target>
        </trans-unit>
        <trans-unit id="96a7dc35d5c6ff09c07ad1bfd51ce24fab766779" translate="yes" xml:space="preserve">
          <source>The attributes/value from the underlying &lt;code&gt;Format&lt;/code&gt; instances that &lt;code&gt;MessageFormat&lt;/code&gt; uses will also be placed in the resulting &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. This allows you to not only find where an argument is placed in the resulting String, but also which fields it contains in turn.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; が使用する基になる &lt;code&gt;Format&lt;/code&gt; インスタンスからの属性/値も、結果の &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; に配置されます。これにより、結果の文字列内で引数が配置されている場所だけでなく、引数に含まれているフィールドを順番に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="c6c9bdf9ddd1d7bebd18e501edcfe1c5e07915f2" translate="yes" xml:space="preserve">
          <source>The audio encoding technique used by this format.</source>
          <target state="translated">このフォーマットで使用されている音声符号化技術。</target>
        </trans-unit>
        <trans-unit id="3ee0fa3c0794117f8475306ae21eb1f01db34317" translate="yes" xml:space="preserve">
          <source>The authentication id to check.</source>
          <target state="translated">チェックする認証ID。</target>
        </trans-unit>
        <trans-unit id="b4dbd2e0b17a4fa9c9109e46037e682fe9637ca2" translate="yes" xml:space="preserve">
          <source>The authentication type is determined by the actual certificate used. For instance, if RSAPublicKey is used, the authType should be &quot;RSA&quot;. Checking is case-sensitive.</source>
          <target state="translated">認証タイプは、実際に使用される証明書によって決定されます。例えば、RSAPublicKeyを使用している場合、authTypeは &quot;RSA &quot;にする必要があります。チェックは大文字と小文字を区別します。</target>
        </trans-unit>
        <trans-unit id="40ca0bf39b10369e774c84090c9b0218a501eccc" translate="yes" xml:space="preserve">
          <source>The authentication type is the key exchange algorithm portion of the cipher suites represented as a String, such as &quot;RSA&quot;, &quot;DHE_DSS&quot;. Note: for some exportable cipher suites, the key exchange algorithm is determined at run time during the handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5, the authType should be RSA_EXPORT when an ephemeral RSA key is used for the key exchange, and RSA when the key from the server certificate is used. Checking is case-sensitive.</source>
          <target state="translated">認証タイプは、「RSA」、「DHE_DSS」などの文字列で表される暗号スイートの鍵交換アルゴリズム部分です。注意:一部のエクスポート可能な暗号化スイートでは、鍵交換アルゴリズムはハンドシェイク中に実行時に決定されます。例えば、TLS_RSA_EXPORT_WITH_RC4_40_MD5 の場合、鍵交換にエフェメラル RSA 鍵を使用する場合は RSA_EXPORT、サーバ証明書の鍵を使用する場合は RSA とする。チェックは大文字と小文字を区別する。</target>
        </trans-unit>
        <trans-unit id="da52d0384721ee0710abc385996af9e46a62ac13" translate="yes" xml:space="preserve">
          <source>The authentication type to use for this resource. This may be specified for resources representing a connection factory of any supported type, and must not be specified for resources of other types.</source>
          <target state="translated">このリソースで使用する認証タイプ。これは、サポートされている任意のタイプの接続ファクトリを表すリソースに対して指定することができ、他のタイプのリソースに対しては指定してはいけません。</target>
        </trans-unit>
        <trans-unit id="2a4a45fa984ec8bf14546e0f53e88faedba04946" translate="yes" xml:space="preserve">
          <source>The authority component of a URI, if defined, only contains the commercial-at character (&lt;code&gt;'@'&lt;/code&gt;) and characters in the</source>
          <target state="translated">URIの機関コンポーネントは、定義されている場合、コマーシャルアットマーク（ &lt;code&gt;'@'&lt;/code&gt; ）と</target>
        </trans-unit>
        <trans-unit id="a6af6b54b90269c0178a9319b6ac6d1d5547a316" translate="yes" xml:space="preserve">
          <source>The authority component of a hierarchical URI is, if specified, either</source>
          <target state="translated">階層型URIの権限コンポーネントは、指定された場合、以下のいずれかである。</target>
        </trans-unit>
        <trans-unit id="ee24e9771cc2c195ad59121d1a3d3bba72a163ad" translate="yes" xml:space="preserve">
          <source>The authorization ID of the client.</source>
          <target state="translated">クライアントの認証ID。</target>
        </trans-unit>
        <trans-unit id="384af224756a5ae102067cba3f04e5f5aec1f4e8" translate="yes" xml:space="preserve">
          <source>The average is a special case of a &lt;a href=&quot;package-summary#Reduction&quot;&gt;reduction&lt;/a&gt;.</source>
          <target state="translated">平均は&lt;a href=&quot;package-summary#Reduction&quot;&gt;削減の&lt;/a&gt;特別なケースです。</target>
        </trans-unit>
        <trans-unit id="bb72a1ed708709d8af323cafd1c14f03fc2702fe" translate="yes" xml:space="preserve">
          <source>The average number of bytes produced per character of input</source>
          <target state="translated">入力の1文字あたりの平均生成バイト数</target>
        </trans-unit>
        <trans-unit id="61e1e4d7a028374e193be9a8bb07584ca34ed0c2" translate="yes" xml:space="preserve">
          <source>The average number of characters produced per byte of input</source>
          <target state="translated">入力の1バイトあたりの平均生成文字数</target>
        </trans-unit>
        <trans-unit id="63d8732752ab98346e8809a4b5543eeb11a12175" translate="yes" xml:space="preserve">
          <source>The average returned can vary depending upon the order in which values are recorded, due to accumulated rounding error in addition of values of differing magnitudes. Values sorted by increasing absolute magnitude tend to yield more accurate results. If any recorded value is a &lt;code&gt;NaN&lt;/code&gt; or the sum is at any point a &lt;code&gt;NaN&lt;/code&gt; then the average will be &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">返される平均値は、異なる大きさの値に加えて累積された丸め誤差が原因で、値が記録される順序によって異なる場合があります。絶対値を大きくしてソートされた値は、より正確な結果をもたらす傾向があります。記録された値が &lt;code&gt;NaN&lt;/code&gt; である場合、または合計がいずれかの時点で &lt;code&gt;NaN&lt;/code&gt; である場合、平均は &lt;code&gt;NaN&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="0994cf127413fed7f22b3a2b60b751f5b71c9f67" translate="yes" xml:space="preserve">
          <source>The average returned can vary depending upon the order in which values are recorded. This method may be implemented using compensated summation or other technique to reduce the error bound in the &lt;a href=&quot;doublestream#sum--&quot;&gt;&lt;code&gt;numerical sum&lt;/code&gt;&lt;/a&gt; used to compute the average.</source>
          <target state="translated">返される平均値は、値が記録される順序によって異なります。この方法は、平均を計算するために使用される&lt;a href=&quot;doublestream#sum--&quot;&gt; &lt;code&gt;numerical sum&lt;/code&gt; &lt;/a&gt;誤差範囲を減らすために、補償された合計または他の手法を使用して実装できます。</target>
        </trans-unit>
        <trans-unit id="1c0a64799c5be05a53a7a6b2d455ab60be8b27d5" translate="yes" xml:space="preserve">
          <source>The average returned can vary depending upon the order in which values are recorded. This method may be implemented using compensated summation or other technique to reduce the error bound in the &lt;a href=&quot;doublesummarystatistics#getSum--&quot;&gt;&lt;code&gt;numerical sum&lt;/code&gt;&lt;/a&gt; used to compute the average.</source>
          <target state="translated">返される平均値は、値が記録される順序によって異なります。この方法は、平均を計算するために使用される&lt;a href=&quot;doublesummarystatistics#getSum--&quot;&gt; &lt;code&gt;numerical sum&lt;/code&gt; &lt;/a&gt;誤差範囲を減らすために、補償された合計または他の手法を使用して実装できます。</target>
        </trans-unit>
        <trans-unit id="df4fb0a2f2eee660620ab243296b5b926ea78b61" translate="yes" xml:space="preserve">
          <source>The awakened thread will not be able to proceed until the current thread relinquishes the lock on this object. The awakened thread will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened thread enjoys no reliable privilege or disadvantage in being the next thread to lock this object.</source>
          <target state="translated">目覚められたスレッドは、現在のスレッドがこのオブジェクトに対するロックを放棄するまで、 進むことができません。例えば、目覚めたスレッドは、このオブジェクトをロックする次のスレッドになることで信頼できる特権や不利益を享受しません。</target>
        </trans-unit>
        <trans-unit id="b5974bbfcd5ae065e5d3709711a9478f3485161b" translate="yes" xml:space="preserve">
          <source>The awakened threads will not be able to proceed until the current thread relinquishes the lock on this object. The awakened threads will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened threads enjoy no reliable privilege or disadvantage in being the next thread to lock this object.</source>
          <target state="translated">覚醒したスレッドは、現在のスレッドがこのオブジェクトに対するロックを放棄するまで、 進むことができません。例えば、目覚めたスレッドは、このオブジェクトをロックする次のスレッドになることで信頼できる特権や不利益を享受しません。</target>
        </trans-unit>
        <trans-unit id="ffe3bc3630669ac9a0d1cced2c0acfc7fe9a5bcc" translate="yes" xml:space="preserve">
          <source>The backreference constructs, &lt;code&gt;\g{&lt;/code&gt;</source>
          <target state="translated">後方参照構文、 &lt;code&gt;\g{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba7183c765033aa363e3f66588a84ad98b740066" translate="yes" xml:space="preserve">
          <source>The backslash character</source>
          <target state="translated">バックスラッシュ文字</target>
        </trans-unit>
        <trans-unit id="c54d456d477cda60e00f39118969acd00278ac3c" translate="yes" xml:space="preserve">
          <source>The backslash character (&lt;code&gt;'\'&lt;/code&gt;) serves to introduce escaped constructs, as defined in the table above, as well as to quote characters that otherwise would be interpreted as unescaped constructs. Thus the expression &lt;code&gt;\\&lt;/code&gt; matches a single backslash and &lt;code&gt;\{&lt;/code&gt; matches a left brace.</source>
          <target state="translated">バックスラッシュ文字（ &lt;code&gt;'\'&lt;/code&gt; ）は、上記の表で定義されているエスケープされた構成を導入するのに役立つほか、エスケープされていない構成として解釈される文字を引用するのにも役立ちます。したがって、式 &lt;code&gt;\\&lt;/code&gt; は単一のバックスラッシュと一致し、 &lt;code&gt;\{&lt;/code&gt; は左中括弧と一致します。</target>
        </trans-unit>
        <trans-unit id="23aae77df11f01ad715953290d7bfdadcde657dc" translate="yes" xml:space="preserve">
          <source>The backslash character (&lt;code&gt;\&lt;/code&gt;) is used to escape characters that would otherwise be interpreted as special characters. The expression &lt;code&gt;\\&lt;/code&gt; matches a single backslash and &quot;\{&quot; matches a left brace for example.</source>
          <target state="translated">バックスラッシュ文字（ &lt;code&gt;\&lt;/code&gt; ）は、特殊文字として解釈される文字をエスケープするために使用されます。たとえば、式 &lt;code&gt;\\&lt;/code&gt; は単一のバックスラッシュに一致し、「\ {」は左中括弧に一致します。</target>
        </trans-unit>
        <trans-unit id="173f1752d2ba0fc408c016b82a7acf729f9be4f0" translate="yes" xml:space="preserve">
          <source>The backtrace for a throwable with an initialized, non-null cause should generally include the backtrace for the cause. The format of this information depends on the implementation, but the following example may be regarded as typical:</source>
          <target state="translated">初期化された非ヌル原因を持つ throwable のバックトレースには、一般的に原因のバックトレースが含まれていなければなりません。この情報の形式は実装に依存しますが、以下の例は典型的なものと考えてよいでしょう。</target>
        </trans-unit>
        <trans-unit id="f7a908d77eceb25de71b84720c94aed1fee43c91" translate="yes" xml:space="preserve">
          <source>The bank number of the instrument that this voice is currently using. This is a number dictated by the MIDI bank-select message; it does not refer to a &lt;code&gt;SoundBank&lt;/code&gt; object. The value ranges from 0 to 16383 if the voice is active, and is unspecified if the voice is inactive.</source>
          <target state="translated">このボイスが現在使用している楽器のバンク番号。これは、MIDIバンク選択メッセージによって指示される番号です。 &lt;code&gt;SoundBank&lt;/code&gt; オブジェクトは参照しません。この値の範囲は、音声がアクティブな場合は0〜16383で、音声が非アクティブな場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="3ab8a2ea7c84500b3dbb48c10ba75066f2c5af4f" translate="yes" xml:space="preserve">
          <source>The base &lt;code&gt;MidiMessage&lt;/code&gt; class provides access to three types of information about a MIDI message:</source>
          <target state="translated">基本 &lt;code&gt;MidiMessage&lt;/code&gt; クラスは、MIDIメッセージに関する3種類の情報へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="2d8ea37b9287753a5e0ba2a565a7f46956883b1c" translate="yes" xml:space="preserve">
          <source>The base date is used to calculate the full value during parsing. For example, if the base date is 1950-01-01 then parsed values for a two digit year parse will be in the range 1950-01-01 to 2049-12-31. Only the year would be extracted from the date, thus a base date of 1950-08-25 would also parse to the range 1950-01-01 to 2049-12-31. This behavior is necessary to support fields such as week-based-year or other calendar systems where the parsed value does not align with standard ISO years.</source>
          <target state="translated">基準日は、解析中に完全な値を計算するために使用されます。例えば、基準日が1950-01-01の場合、2桁の年のパース値は1950-01-01から2049-12-31の範囲になります。年だけが日付から抽出されるので、1950-08-25を基準日とすると、1950-01-01から2049-12-31の範囲でパースされます。この動作は、週ベースの年や、パースされた値が標準のISO年と一致しない他のカレンダーシステムのようなフィールドをサポートするために必要です。</target>
        </trans-unit>
        <trans-unit id="db101bc81e018a709756e424cfa5aecef7b94b31" translate="yes" xml:space="preserve">
          <source>The base name for the &lt;a href=&quot;../../java/util/resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; in which the key given in the &lt;code&gt;descriptionResourceKey&lt;/code&gt; field can be found, for example &lt;code&gt;&quot;com.example.myapp.MBeanResources&quot;&lt;/code&gt;. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself.</source>
          <target state="translated">&lt;code&gt;descriptionResourceKey&lt;/code&gt; フィールドで指定されたキーが見つかる&lt;a href=&quot;../../java/util/resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt;のベース名（例： &lt;code&gt;&quot;com.example.myapp.MBeanResources&quot;&lt;/code&gt; )。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。</target>
        </trans-unit>
        <trans-unit id="0f3860eb6983917dd41e74b2471fbc7e734a2839" translate="yes" xml:space="preserve">
          <source>The base name of the resource bundle, as provided to and expected by the &lt;code&gt;ResourceBundle.getBundle(...)&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.getBundle(...)&lt;/code&gt; メソッドによって提供され、期待されるリソースバンドルのベース名。</target>
        </trans-unit>
        <trans-unit id="9b8c08a8db8d8c053315eb0ddb9eabf15da05825" translate="yes" xml:space="preserve">
          <source>The base-independent settings are:</source>
          <target state="translated">ベースに依存しない設定になっています。</target>
        </trans-unit>
        <trans-unit id="22c030ed5821c260423b1c4753dbb8e2a6a8f1d5" translate="yes" xml:space="preserve">
          <source>The basic X.509 format was defined by ISO/IEC and ANSI X9 and is described below in ASN.1:</source>
          <target state="translated">基本的なX.509フォーマットはISO/IECとANSI X9で定義されており、ASN.1では以下のように記述されています。</target>
        </trans-unit>
        <trans-unit id="0785d4b501d4138551df284c612b88d563d171dd" translate="yes" xml:space="preserve">
          <source>The basic constraints extension identifies whether the subject of the certificate is a Certificate Authority (CA) and how deep a certification path may exist through that CA. The &lt;code&gt;pathLenConstraint&lt;/code&gt; field (see below) is meaningful only if &lt;code&gt;cA&lt;/code&gt; is set to TRUE. In this case, it gives the maximum number of CA certificates that may follow this certificate in a certification path. A value of zero indicates that only an end-entity certificate may follow in the path.</source>
          <target state="translated">基本的な制約の拡張は、証明書のサブジェクトが認証局（CA）であるかどうか、およびそのCAを介して証明書パスがどれだけ深いかを識別します。 &lt;code&gt;pathLenConstraint&lt;/code&gt; のフィールドは、（以下を参照）場合にのみ意味がある &lt;code&gt;cA&lt;/code&gt; TRUEに設定されています。この場合、証明書パスでこの証明書に続くことができるCA証明書の最大数を示します。ゼロの値は、エンドエンティティ証明書のみがパスをたどることができることを示します。</target>
        </trans-unit>
        <trans-unit id="9d3e4470fb6fef2183cdb8feb8f069433d3267c8" translate="yes" xml:space="preserve">
          <source>The basic design intent is to allow applications to lazily locate and initialize services only when needed without any API dependencies except in an environment in which they are used.</source>
          <target state="translated">基本的な設計意図は、アプリケーションがサービスを使用する環境以外では、APIに依存することなく、必要なときだけサービスの場所を探して初期化することができるようにすることです。</target>
        </trans-unit>
        <trans-unit id="d9903103f8e3fb722ce3e381557a9ebadabbb1b5" translate="yes" xml:space="preserve">
          <source>The basic elements of date-time can all be added:</source>
          <target state="translated">日付時間の基本的な要素をすべて追加することができます。</target>
        </trans-unit>
        <trans-unit id="df730da662879ba7ad947e6e095591e4eb5f371c" translate="yes" xml:space="preserve">
          <source>The bean context.</source>
          <target state="translated">豆のコンテキスト。</target>
        </trans-unit>
        <trans-unit id="a7c9bd47e337bf8f0e24f3fd1a3997732c06fa62" translate="yes" xml:space="preserve">
          <source>The bean is created based on a name relative to a class-loader. This name should be a dot-separated name such as &quot;a.b.c&quot;.</source>
          <target state="translated">ビーンは,クラスローダからの相対的な名前に基づいて作成されます。この名前は &quot;a.b.c &quot;のようなドット区切りの名前でなければなりません。</target>
        </trans-unit>
        <trans-unit id="01fa9a9232e07d2331f9abf70122c26f44cb6dc7" translate="yes" xml:space="preserve">
          <source>The beginning of a line</source>
          <target state="translated">行の始まり</target>
        </trans-unit>
        <trans-unit id="84c05d7f91bdedeed5670ac539f8d7123633e4bf" translate="yes" xml:space="preserve">
          <source>The beginning of the input</source>
          <target state="translated">入力の先頭</target>
        </trans-unit>
        <trans-unit id="4bf4be7cd283b65eee1ee51c2ca2edc17597e0a0" translate="yes" xml:space="preserve">
          <source>The behavior depends on the cardinality of the role where the unregistered MBean is referenced:</source>
          <target state="translated">この動作は、未登録MBeanが参照されるロールのカーディナリティに依存します。</target>
        </trans-unit>
        <trans-unit id="5aab83b129a0c7ffdae67ec9a21f46443c7f36f5" translate="yes" xml:space="preserve">
          <source>The behavior is suitable for use with most calendar systems. It is equivalent to:</source>
          <target state="translated">この動作は、ほとんどのカレンダーシステムでの使用に適しています。と同等です。</target>
        </trans-unit>
        <trans-unit id="3fd6de2d8c10eb73ee592774720bf1e065b01d9b" translate="yes" xml:space="preserve">
          <source>The behavior is suitable for use with most calendar systems. It uses the &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields and the &lt;code&gt;DAYS&lt;/code&gt; unit, and assumes a seven day week.</source>
          <target state="translated">この動作は、ほとんどのカレンダーシステムでの使用に適しています。これは、使用しています &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドや &lt;code&gt;DAYS&lt;/code&gt; のユニットを、そして7日の週を前提としています。</target>
        </trans-unit>
        <trans-unit id="bdd6f3ee23355515e15e9110422cea8654165976" translate="yes" xml:space="preserve">
          <source>The behavior is suitable for use with most calendar systems. It uses the &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; field and the &lt;code&gt;DAYS&lt;/code&gt; unit, and assumes a seven day week.</source>
          <target state="translated">この動作は、ほとんどのカレンダーシステムでの使用に適しています。 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; フィールドと &lt;code&gt;DAYS&lt;/code&gt; ユニットを使用し、週7日を想定しています。</target>
        </trans-unit>
        <trans-unit id="c78a1d17ae0c3c3a48da69bd93f5bf924cfc22fc" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is also specialized for variable arity adapters, to maintain the invariant that plain, inexact &lt;code&gt;invoke&lt;/code&gt; is always equivalent to an &lt;code&gt;asType&lt;/code&gt; call to adjust the target type, followed by &lt;code&gt;invokeExact&lt;/code&gt;. Therefore, a variable arity adapter responds to an &lt;code&gt;asType&lt;/code&gt; request by building a fixed arity collector, if and only if the adapter and requested type differ either in arity or trailing argument type. The resulting fixed arity collector has its type further adjusted (if necessary) to the requested type by pairwise conversion, as if by another application of &lt;code&gt;asType&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;の動作は可変アリティアダプターにも特化しており、プレーンで不正確な &lt;code&gt;invoke&lt;/code&gt; は、ターゲットタイプを調整するための &lt;code&gt;asType&lt;/code&gt; 呼び出しと、それに続くinvokeExactが常に不変であることを維持し &lt;code&gt;invokeExact&lt;/code&gt; 。したがって、可変アリティアダプターは、アダプターと要求された型がアリティまたは後続の引数型のいずれかで異なる場合にのみ、固定アリティコレクターを構築することによって &lt;code&gt;asType&lt;/code&gt; 要求に応答します。結果の固定アリティコレクターは、 &lt;code&gt;asType&lt;/code&gt; の別のアプリケーションのように、ペアワイズ変換によって要求された型に（必要に応じて）さらに調整された型を持っています。</target>
        </trans-unit>
        <trans-unit id="9928e84708937d65d173868df25d6628e2c4c51b" translate="yes" xml:space="preserve">
          <source>The behavior of aforementioned conversion process can be adjusted by various flags:</source>
          <target state="translated">前記変換処理の動作は、各種フラグにより調整可能である。</target>
        </trans-unit>
        <trans-unit id="09786826b0bc4001e9b5554b263b6d5f4bb895ae" translate="yes" xml:space="preserve">
          <source>The behavior of radixes and the characters used as digits are the same as &lt;a href=&quot;integer#toString-int-int-&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基数と数字として使用される文字の動作は、&lt;a href=&quot;integer#toString-int-int-&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="2327f433d1a38b7e2e39780763df7142425c0d7a" translate="yes" xml:space="preserve">
          <source>The behavior of radixes and the characters used as digits are the same as &lt;a href=&quot;long#toString-long-int-&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基数と数字として使用される文字の動作は、&lt;a href=&quot;long#toString-long-int-&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="bc46c31b73f5a4c03e122bdac42a6357c999abe4" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;code&gt;WeakHashMap&lt;/code&gt; class depends in part upon the actions of the garbage collector, so several familiar (though not required) &lt;code&gt;Map&lt;/code&gt; invariants do not hold for this class. Because the garbage collector may discard keys at any time, a &lt;code&gt;WeakHashMap&lt;/code&gt; may behave as though an unknown thread is silently removing entries. In particular, even if you synchronize on a &lt;code&gt;WeakHashMap&lt;/code&gt; instance and invoke none of its mutator methods, it is possible for the &lt;code&gt;size&lt;/code&gt; method to return smaller values over time, for the &lt;code&gt;isEmpty&lt;/code&gt; method to return &lt;code&gt;false&lt;/code&gt; and then &lt;code&gt;true&lt;/code&gt;, for the &lt;code&gt;containsKey&lt;/code&gt; method to return &lt;code&gt;true&lt;/code&gt; and later &lt;code&gt;false&lt;/code&gt; for a given key, for the &lt;code&gt;get&lt;/code&gt; method to return a value for a given key but later return &lt;code&gt;null&lt;/code&gt;, for the &lt;code&gt;put&lt;/code&gt; method to return &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;remove&lt;/code&gt; method to return &lt;code&gt;false&lt;/code&gt; for a key that previously appeared to be in the map, and for successive examinations of the key set, the value collection, and the entry set to yield successively smaller numbers of elements.</source>
          <target state="translated">行動 &lt;code&gt;WeakHashMap&lt;/code&gt; （必須ではありませんが）クラスは、ガベージコレクタのアクションに部分的に依存して、身近なので、いくつかの &lt;code&gt;Map&lt;/code&gt; 不変量は、このクラスのために保有していません。ガベージコレクターはいつでもキーを破棄する可能性があるため、 &lt;code&gt;WeakHashMap&lt;/code&gt; は、不明なスレッドが静かにエントリを削除しているように動作する可能性があります。特に、 &lt;code&gt;WeakHashMap&lt;/code&gt; インスタンスで同期し、そのミューテーターメソッドを呼び出さない場合でも、 &lt;code&gt;size&lt;/code&gt; メソッドが小さい値を返し、 &lt;code&gt;isEmpty&lt;/code&gt; メソッドが &lt;code&gt;false&lt;/code&gt; を返し、次に &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;containsKey&lt;/code&gt; メソッドが返す可能性があります。 &lt;code&gt;true&lt;/code&gt; そして、後に &lt;code&gt;false&lt;/code&gt; のために、指定されたキーの &lt;code&gt;get&lt;/code&gt; メソッドは指定されたキーが、後の戻りの値を返すことが &lt;code&gt;null&lt;/code&gt; のために、 &lt;code&gt;put&lt;/code&gt; リターンの方法 &lt;code&gt;null&lt;/code&gt; と &lt;code&gt;remove&lt;/code&gt; 返すメソッド &lt;code&gt;false&lt;/code&gt; 以前のマップであるように思われたことをキーに、およびキーセット、値コレクション、およびエントリセットを連続的に検査して、連続してより少ない数の要素を生成します。</target>
        </trans-unit>
        <trans-unit id="3e02ad5d427f7e98147ba48075552194761f98de" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;code&gt;addAll()&lt;/code&gt; operation is unspecified if the specified set is modified while the operation is in progress.</source>
          <target state="translated">操作の進行中に指定されたセットが変更された場合の &lt;code&gt;addAll()&lt;/code&gt; 操作の動作は指定されていません。</target>
        </trans-unit>
        <trans-unit id="dd3a0b270d27c03418b33e302ccbdd164f36924b" translate="yes" xml:space="preserve">
          <source>The behavior of the returned map is system-dependent. A system may not allow modifications to environment variables or may forbid certain variable names or values. For this reason, attempts to modify the map may fail with &lt;a href=&quot;unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; if the modification is not permitted by the operating system.</source>
          <target state="translated">返されるマップの動作はシステムに依存します。システムは、環境変数の変更を許可しない場合や、特定の変数名または値を禁止する場合があります。このため、オペレーティングシステムで変更が許可されていない場合、&lt;a href=&quot;unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;でマップを変更しようとすると失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="1fe6e71635b80bfba7b21f293fdc2c363d272846" translate="yes" xml:space="preserve">
          <source>The behavior of this constructor when the given bytes are not valid in the default charset is unspecified. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">指定されたバイトがデフォルトの文字セットで無効な場合のこのコンストラクタの動作は指定されていません。&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; の&lt;/a&gt;デコード処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="ef46977efa30131184db5ba7badc7bce2b48869e" translate="yes" xml:space="preserve">
          <source>The behavior of this constructor when the given bytes are not valid in the given charset is unspecified. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">指定されたバイトが指定された文字セットで有効でない場合のこのコンストラクターの動作は指定されていません。&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; の&lt;/a&gt;デコード処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="c3d627d59df90697e2b554f3a55de8ccd2ce8753" translate="yes" xml:space="preserve">
          <source>The behavior of this method when called for the first time depends on the parameters that were supplied at construction, as described below.</source>
          <target state="translated">初めて呼び出されたときのこの方法の挙動は、後述するように、建設時に供給されたパラメータに依存します。</target>
        </trans-unit>
        <trans-unit id="4f973622f5301926870bc25f4502c72fb450009b" translate="yes" xml:space="preserve">
          <source>The behavior of this method when this string cannot be encoded in the default charset is unspecified. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">この文字列をデフォルトの文字セットでエンコードできない場合のこのメソッドの動作は指定されていません。&lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; の&lt;/a&gt;符号化処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="6473ebdc9f7cacf7ddaf2b7432bd6ab177ee9d47" translate="yes" xml:space="preserve">
          <source>The behavior of this method when this string cannot be encoded in the given charset is unspecified. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">この文字列を特定の文字セットでエンコードできない場合のこのメソッドの動作は指定されていません。&lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; の&lt;/a&gt;符号化処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="2ae57d2eaaf4445efb0e51f92a31f9d7f1d65948" translate="yes" xml:space="preserve">
          <source>The behavior of this operation is explicitly nondeterministic. For parallel stream pipelines, this operation does &lt;em&gt;not&lt;/em&gt; guarantee to respect the encounter order of the stream, as doing so would sacrifice the benefit of parallelism. For any given element, the action may be performed at whatever time and in whatever thread the library chooses. If the action accesses shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">この操作の動作は明示的に非決定的です。並列ストリームパイプラインの場合、並列化の利点が失われるため、この操作はストリームの遭遇順序を尊重することを保証しませ&lt;em&gt;ん&lt;/em&gt;。任意の要素について、ライブラリが選択した任意の時間およびスレッドでアクションを実行できます。アクションが共有状態にアクセスする場合、必要な同期を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="7523e5e5c512c923c9b5e8efbcae139dd68a3aac" translate="yes" xml:space="preserve">
          <source>The behavior of this operation is explicitly nondeterministic; it is free to select any element in the stream. This is to allow for maximal performance in parallel operations; the cost is that multiple invocations on the same source may not return the same result. (If a stable result is desired, use &lt;a href=&quot;doublestream#findFirst--&quot;&gt;&lt;code&gt;findFirst()&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">この操作の動作は明らかに非決定的です。ストリーム内の任意の要素を自由に選択できます。これは、並列操作で最大のパフォーマンスを可能にするためです。コストは、同じソースでの複数の呼び出しが同じ結果を返さない可能性があることです。（安定した結果が必要な場合は、代わりに&lt;a href=&quot;doublestream#findFirst--&quot;&gt; &lt;code&gt;findFirst()&lt;/code&gt; を&lt;/a&gt;使用してください。）</target>
        </trans-unit>
        <trans-unit id="c3ed65b77c994c2fc97e72428779c268f50ba7b6" translate="yes" xml:space="preserve">
          <source>The behavior of this operation is explicitly nondeterministic; it is free to select any element in the stream. This is to allow for maximal performance in parallel operations; the cost is that multiple invocations on the same source may not return the same result. (If a stable result is desired, use &lt;a href=&quot;intstream#findFirst--&quot;&gt;&lt;code&gt;findFirst()&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">この操作の動作は明らかに非決定的です。ストリーム内の任意の要素を自由に選択できます。これは、並列操作で最大のパフォーマンスを可能にするためです。コストは、同じソースでの複数の呼び出しが同じ結果を返さない可能性があることです。（安定した結果が必要な場合は、代わりに&lt;a href=&quot;intstream#findFirst--&quot;&gt; &lt;code&gt;findFirst()&lt;/code&gt; を&lt;/a&gt;使用してください。）</target>
        </trans-unit>
        <trans-unit id="91343b7a97cce9e49bf7bfd43ef77ddc9e9de3c1" translate="yes" xml:space="preserve">
          <source>The behavior of this operation is explicitly nondeterministic; it is free to select any element in the stream. This is to allow for maximal performance in parallel operations; the cost is that multiple invocations on the same source may not return the same result. (If a stable result is desired, use &lt;a href=&quot;longstream#findFirst--&quot;&gt;&lt;code&gt;findFirst()&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">この操作の動作は明らかに非決定的です。ストリーム内の任意の要素を自由に選択できます。これは、並列操作で最大のパフォーマンスを可能にするためです。コストは、同じソースでの複数の呼び出しが同じ結果を返さない可能性があることです。（安定した結果が必要な場合は、代わりに&lt;a href=&quot;longstream#findFirst--&quot;&gt; &lt;code&gt;findFirst()&lt;/code&gt; を&lt;/a&gt;使用してください。）</target>
        </trans-unit>
        <trans-unit id="ac4f8664629b9c54913b4e09c46aa5ed184dae26" translate="yes" xml:space="preserve">
          <source>The behavior of this operation is explicitly nondeterministic; it is free to select any element in the stream. This is to allow for maximal performance in parallel operations; the cost is that multiple invocations on the same source may not return the same result. (If a stable result is desired, use &lt;a href=&quot;stream#findFirst--&quot;&gt;&lt;code&gt;findFirst()&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">この操作の動作は明らかに非決定的です。ストリーム内の任意の要素を自由に選択できます。これは、並列操作で最大のパフォーマンスを可能にするためです。コストは、同じソースでの複数の呼び出しが同じ結果を返さない可能性があることです。（安定した結果が必要な場合は、代わりに&lt;a href=&quot;stream#findFirst--&quot;&gt; &lt;code&gt;findFirst()&lt;/code&gt; を&lt;/a&gt;使用してください。）</target>
        </trans-unit>
        <trans-unit id="de5bd53441d47c5af575e182bec3b83289b02191" translate="yes" xml:space="preserve">
          <source>The behavior of this socket option on a stream-oriented socket, or an &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket, is not defined in this release.</source>
          <target state="translated">ストリーム指向ソケットまたは&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;ソケットでのこのソケットオプションの動作は、このリリースでは定義されていません。</target>
        </trans-unit>
        <trans-unit id="1948fdb6e5f0e37d4d3127a1dee0880f5b26239c" translate="yes" xml:space="preserve">
          <source>The behavior when the URL path is neither empty nor a JNDI directory URL, or when the protocol is neither &lt;code&gt;rmi&lt;/code&gt; nor &lt;code&gt;iiop&lt;/code&gt;, is implementation defined, and may include throwing &lt;a href=&quot;../../../../java/net/malformedurlexception&quot;&gt;&lt;code&gt;MalformedURLException&lt;/code&gt;&lt;/a&gt; when the connector server is created or when it is started.</source>
          <target state="translated">URLパスが空でもJNDIディレクトリURLでもない場合、またはプロトコルが &lt;code&gt;rmi&lt;/code&gt; でも &lt;code&gt;iiop&lt;/code&gt; でもない場合の動作は実装定義であり、コネクタサーバーの作成時または起動時に&lt;a href=&quot;../../../../java/net/malformedurlexception&quot;&gt; &lt;code&gt;MalformedURLException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="52bb3f58a08177a0b2dccbcfe8b7621c236f7348" translate="yes" xml:space="preserve">
          <source>The behavior when this method is called more than once is unspecified.</source>
          <target state="translated">このメソッドが複数回呼び出された場合の動作は未指定です。</target>
        </trans-unit>
        <trans-unit id="cc00fc99ac6d19fed1822d5b36037c02e19215d2" translate="yes" xml:space="preserve">
          <source>The behaviour when &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is enabled or disabled after a socket is bound (See &lt;a href=&quot;serversocket#isBound--&quot;&gt;&lt;code&gt;isBound()&lt;/code&gt;&lt;/a&gt;) is not defined.</source>
          <target state="translated">ソケットがバインドされた後（&lt;a href=&quot;serversocket#isBound--&quot;&gt; &lt;code&gt;isBound()&lt;/code&gt; を&lt;/a&gt;参照）に&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;が有効または無効にされたときの動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="813b8a785ddc662d03b34c45ccd8c027a04fb706" translate="yes" xml:space="preserve">
          <source>The behaviour when &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is enabled or disabled after a socket is bound (See &lt;a href=&quot;socket#isBound--&quot;&gt;&lt;code&gt;isBound()&lt;/code&gt;&lt;/a&gt;) is not defined.</source>
          <target state="translated">ソケットがバインドされた後（&lt;a href=&quot;socket#isBound--&quot;&gt; &lt;code&gt;isBound()&lt;/code&gt; を&lt;/a&gt;参照）に&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;が有効または無効にされたときの動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="c3662286b844f4d43a48e82d7a61531172d3a7f6" translate="yes" xml:space="preserve">
          <source>The behaviour when &lt;code&gt;SO_REUSEADDR&lt;/code&gt; is enabled or disabled after a socket is bound (See &lt;a href=&quot;datagramsocket#isBound--&quot;&gt;&lt;code&gt;isBound()&lt;/code&gt;&lt;/a&gt;) is not defined.</source>
          <target state="translated">ソケットがバインドされた後（&lt;a href=&quot;datagramsocket#isBound--&quot;&gt; &lt;code&gt;isBound()&lt;/code&gt; を&lt;/a&gt;参照）に &lt;code&gt;SO_REUSEADDR&lt;/code&gt; が有効または無効にされたときの動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="ec8605f5932b60aa18480347bbe8295238cc8d8d" translate="yes" xml:space="preserve">
          <source>The best algorithms for manipulating random access lists (such as &lt;code&gt;ArrayList&lt;/code&gt;) can produce quadratic behavior when applied to sequential access lists (such as &lt;code&gt;LinkedList&lt;/code&gt;). Generic list algorithms are encouraged to check whether the given list is an &lt;code&gt;instanceof&lt;/code&gt; this interface before applying an algorithm that would provide poor performance if it were applied to a sequential access list, and to alter their behavior if necessary to guarantee acceptable performance.</source>
          <target state="translated">ランダムアクセスリスト（ &lt;code&gt;ArrayList&lt;/code&gt; など）を操作するための最適なアルゴリズムは、順次アクセスリスト（ &lt;code&gt;LinkedList&lt;/code&gt; など）に適用すると、2次の動作を生成できます。ジェネリックリストアルゴリズムでは、シーケンシャルアクセスリストに適用した場合にパフォーマンスが低下するアルゴリズムを適用する前に、指定したリストがこのインターフェイスの &lt;code&gt;instanceof&lt;/code&gt; かどうかを確認し、必要に応じて動作を変更して許容可能なパフォーマンスを保証することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="aa63c846ce6c63983851d6cc1315cae60e071eef" translate="yes" xml:space="preserve">
          <source>The best value of &lt;code&gt;TASKS_PER_PHASER&lt;/code&gt; depends mainly on expected synchronization rates. A value as low as four may be appropriate for extremely small per-phase task bodies (thus high rates), or up to hundreds for extremely large ones.</source>
          <target state="translated">&lt;code&gt;TASKS_PER_PHASER&lt;/code&gt; の最適な値は、主に予想される同期率に依存します。フェーズごとのタスクボディが非常に小さい場合（したがってレートが高い場合）には、4という低い値が適切であり、非常に大きい場合は数百までの値が適切です。</target>
        </trans-unit>
        <trans-unit id="e04209ad3d05621b8a42c0de27ff8910369553f0" translate="yes" xml:space="preserve">
          <source>The binding must be nonnull if the object existed after the change relative to the source context (&lt;code&gt;getEventContext()&lt;/code&gt;). That is, it must be nonnull for &lt;code&gt;OBJECT_ADDED&lt;/code&gt; and &lt;code&gt;OBJECT_CHANGED&lt;/code&gt;. For &lt;code&gt;OBJECT_RENAMED&lt;/code&gt;, it is null if the object after the rename is outside the scope for which the listener registered interest; it is nonnull if the object is inside the scope after the rename.</source>
          <target state="translated">オブジェクトがソースコンテキスト（ &lt;code&gt;getEventContext()&lt;/code&gt; ）からの変更後に存在した場合、バインディングはnull以外である必要があります。つまり、 &lt;code&gt;OBJECT_ADDED&lt;/code&gt; および &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; の場合は、null以外にする必要があります。ため &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; 名前変更後のオブジェクトがリスナーが関心を登録れる範囲外である場合、それはヌルです。名前の変更後、オブジェクトがスコープ内にある場合はnullではありません。</target>
        </trans-unit>
        <trans-unit id="47fe787308677096c8310117b4783e3ddb5d20ff" translate="yes" xml:space="preserve">
          <source>The binding must be nonnull if the object existed before the change relative to the source context (&lt;code&gt;getEventContext()&lt;/code&gt;). That is, it must be nonnull for &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; and &lt;code&gt;OBJECT_CHANGED&lt;/code&gt;. For &lt;code&gt;OBJECT_RENAMED&lt;/code&gt;, it is null if the object before the rename is outside of the scope for which the listener has registered interest; it is nonnull if the object is inside the scope before the rename.</source>
          <target state="translated">オブジェクトがソースコンテキスト（ &lt;code&gt;getEventContext()&lt;/code&gt; ）からの変更前に存在する場合、バインディングはnull以外である必要があります。つまり、 &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; および &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; の場合、それはnull以外である必要があります。ため &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; 名前変更前の目的は、リスナーが登録された関心を持っている範囲の外である場合、それはヌルです。名前の変更前にオブジェクトがスコープ内にある場合は、nullではありません。</target>
        </trans-unit>
        <trans-unit id="a540813c3623088162eddf8021387f816ab7189e" translate="yes" xml:space="preserve">
          <source>The binding of the changed object can be obtained using &lt;code&gt;evt.getNewBinding()&lt;/code&gt;. Its old binding (before the change) can be obtained using &lt;code&gt;evt.getOldBinding()&lt;/code&gt;.</source>
          <target state="translated">変更されたオブジェクトのバインディングは、 &lt;code&gt;evt.getNewBinding()&lt;/code&gt; を使用して取得できます。（変更前の）その古いバインディングは、 &lt;code&gt;evt.getOldBinding()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="00b0bb606f5c3ecd51111e3a9af417eb62109163" translate="yes" xml:space="preserve">
          <source>The binding of the newly added object can be obtained using &lt;code&gt;evt.getNewBinding()&lt;/code&gt;.</source>
          <target state="translated">新しく追加されたオブジェクトのバインディングは、 &lt;code&gt;evt.getNewBinding()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="97025602c1b0354a00b10c74a226ea38edab7a3f" translate="yes" xml:space="preserve">
          <source>The binding of the newly removed object can be obtained using &lt;code&gt;evt.getOldBinding()&lt;/code&gt;.</source>
          <target state="translated">新しく削除されたオブジェクトのバインディングは、 &lt;code&gt;evt.getOldBinding()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="db5d5c2755a2f75964c67f244f9ab71ecafaefa5" translate="yes" xml:space="preserve">
          <source>The binding of the renamed object can be obtained using &lt;code&gt;evt.getNewBinding()&lt;/code&gt;. Its old binding (before the rename) can be obtained using &lt;code&gt;evt.getOldBinding()&lt;/code&gt;. One of these may be null if the old/new binding was outside the scope in which the listener has registered interest.</source>
          <target state="translated">名前を変更したオブジェクトのバインディングは、 &lt;code&gt;evt.getNewBinding()&lt;/code&gt; を使用して取得できます。古い名前のバインディング（名前変更前）は、 &lt;code&gt;evt.getOldBinding()&lt;/code&gt; を使用して取得できます。古い/新しいバインディングがリスナーがインタレストを登録したスコープの外にあった場合、これらの1つはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="079c4a4960105f0bcb70c588ac7cf3a47369d2d9" translate="yes" xml:space="preserve">
          <source>The bit initially has the value &lt;code&gt;false&lt;/code&gt;, and the corresponding bit in the argument has the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ビットの初期値は &lt;code&gt;false&lt;/code&gt; で、引数の対応するビットの値は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e4610a19fe62a2028d5853d8b6146bdb1583011d" translate="yes" xml:space="preserve">
          <source>The bit initially has the value &lt;code&gt;true&lt;/code&gt;, and the corresponding bit in the argument has the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ビットの初期値は &lt;code&gt;true&lt;/code&gt; で、引数の対応するビットの値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ff50d0696df1c1a5ec402d78f6f92cd39d7bbb84" translate="yes" xml:space="preserve">
          <source>The bit offset is reset to zero.</source>
          <target state="translated">ビットオフセットはゼロにリセットされます。</target>
        </trans-unit>
        <trans-unit id="a4f3cc1d878069548160bce5242336d5060d3770" translate="yes" xml:space="preserve">
          <source>The bit offset is set to 0 when a stream is first opened, and is reset to 0 by calls to &lt;code&gt;seek&lt;/code&gt;, &lt;code&gt;skipBytes&lt;/code&gt;, or any &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;readFully&lt;/code&gt; method.</source>
          <target state="translated">ビットオフセットは、ストリームが最初に開かれたときに0に設定され、 &lt;code&gt;seek&lt;/code&gt; 、 &lt;code&gt;skipBytes&lt;/code&gt; 、または任意の &lt;code&gt;read&lt;/code&gt; または &lt;code&gt;readFully&lt;/code&gt; メソッドの呼び出しによって0にリセットされます。</target>
        </trans-unit>
        <trans-unit id="8c6a80445d0b4a5f294f45e1bc9db4bc04950ba0" translate="yes" xml:space="preserve">
          <source>The bit offset within the stream is ignored and treated as though it were zero.</source>
          <target state="translated">ストリーム内のビットオフセットは無視され、ゼロであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="60ed439e4fa50c248e920b1ada61a8fb85641cf5" translate="yes" xml:space="preserve">
          <source>The bit offset within the stream is reset to zero before the read occurs.</source>
          <target state="translated">ストリーム内のビットオフセットは、読み出しが発生する前にゼロにリセットされます。</target>
        </trans-unit>
        <trans-unit id="d25884e217e3d3f03765741523ec4f8df4d1e73e" translate="yes" xml:space="preserve">
          <source>The bit offset within the stream must be reset to zero before the read occurs.</source>
          <target state="translated">ストリーム内のビットオフセットは、読み出す前にゼロにリセットする必要があります。</target>
        </trans-unit>
        <trans-unit id="392be8ef692e481c422de130596efeb38786c416" translate="yes" xml:space="preserve">
          <source>The bit position used by the &lt;code&gt;readBits&lt;/code&gt; method is saved and restored by each pair of calls to &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;readBits&lt;/code&gt; メソッドで使用されるビット位置は、 &lt;code&gt;mark&lt;/code&gt; と &lt;code&gt;reset&lt;/code&gt; 呼び出しの各ペアによって保存および復元されます。</target>
        </trans-unit>
        <trans-unit id="e616b2a044370cc64835bc4bb4e31fc5edbf070f" translate="yes" xml:space="preserve">
          <source>The bit set must remain constant during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">このビットのセットは、ターミナルストリーム処理の実行中は一定でなければならない。そうでない場合、ターミナルストリーム操作の結果は不定である。</target>
        </trans-unit>
        <trans-unit id="5cb03212f5537c4a0b8ecd683f1339aea4a69290" translate="yes" xml:space="preserve">
          <source>The block names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid block names accepted and defined by &lt;a href=&quot;../../lang/character.unicodeblock#forName-java.lang.String-&quot;&gt;&lt;code&gt;UnicodeBlock.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; サポートされているブロック名は、&lt;a href=&quot;../../lang/character.unicodeblock#forName-java.lang.String-&quot;&gt; &lt;code&gt;UnicodeBlock.forName&lt;/code&gt; で&lt;/a&gt;受け入れられ、定義されている有効なブロック名です。</target>
        </trans-unit>
        <trans-unit id="c9151392927171f66644b3edff8dd9467431d179" translate="yes" xml:space="preserve">
          <source>The blocking-mode lock object</source>
          <target state="translated">ブロッキングモードロックオブジェクト</target>
        </trans-unit>
        <trans-unit id="c424f9ac5bce10e99f2c2880b959e00aa4b64679" translate="yes" xml:space="preserve">
          <source>The body of the default method is specified to be the code above.</source>
          <target state="translated">デフォルトメソッドのボディは上記のコードを指定します。</target>
        </trans-unit>
        <trans-unit id="11a6748648cf5b00019dda6cf54e2eb8f3bf8d61" translate="yes" xml:space="preserve">
          <source>The body of the method or constructor declaration performs potentially unsafe operations, such as an assignment to an element of the variable arity parameter's array that generates an unchecked warning. Some unsafe operations do not trigger an unchecked warning. For example, the aliasing in</source>
          <target state="translated">メソッドやコンストラクタの宣言の本体では、変数 arity パラメータの配列の要素への代入など、潜在的に安全でない操作が行われており、それによって未チェックの警告が発生します。安全でない操作の中には、チェックなしの警告が発生しないものもあります。例えば</target>
        </trans-unit>
        <trans-unit id="b4e40444f8fc152eb16ab3eaf704c842ce4a6de9" translate="yes" xml:space="preserve">
          <source>The bootstrap method is invoked on at least three values:</source>
          <target state="translated">ブートストラップメソッドは、少なくとも3つの値に対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cfae179ea42664d99bcc9a1d13b597aac8360806" translate="yes" xml:space="preserve">
          <source>The bottom input tray in the printer.</source>
          <target state="translated">プリンターの底面の入力トレイ。</target>
        </trans-unit>
        <trans-unit id="1f35df29ba4c1a160c83b07bf44b764120a88cd3" translate="yes" xml:space="preserve">
          <source>The buffer is then cleared.</source>
          <target state="translated">その後、バッファはクリアされます。</target>
        </trans-unit>
        <trans-unit id="4670c8f1cdd40c40a543b1304e16c713499f0559" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an IllegalArgumentException. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファーサイズでこのメソッドを呼び出すと、IllegalArgumentExceptionが発生する場合があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、続いて &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を呼び出すことによってクエリできます。</target>
        </trans-unit>
        <trans-unit id="e3a95695f406bd68814b7b0423d52d5848fcda1f" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an IllegalArgumentException. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファーサイズでこのメソッドを呼び出すと、IllegalArgumentExceptionが発生する場合があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、後で &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を呼び出すことによってクエリできます。</target>
        </trans-unit>
        <trans-unit id="42d1dfe3731b63adb6323291fca8d27b9b77331b" translate="yes" xml:space="preserve">
          <source>The buffer size may be specified, or the default size may be accepted. The default is large enough for most purposes.</source>
          <target state="translated">バッファサイズを指定することもできますし、デフォルトのサイズを受け入れることもできます。デフォルトは、ほとんどの目的には十分な大きさです。</target>
        </trans-unit>
        <trans-unit id="8a55978bf856d3f06d55763ba0704c1f8c5f25a9" translate="yes" xml:space="preserve">
          <source>The buffer size may be specified, or the default size may be used. The default is large enough for most purposes.</source>
          <target state="translated">バッファサイズを指定することもできますし、デフォルトのサイズを使用することもできます。デフォルトは、ほとんどの目的には十分な大きさです。</target>
        </trans-unit>
        <trans-unit id="1c56115fb03b357a45a3b5437c42a2575ecdf670" translate="yes" xml:space="preserve">
          <source>The buffer where data is stored.</source>
          <target state="translated">データが格納されているバッファ。</target>
        </trans-unit>
        <trans-unit id="054e837f56115320c3003e3d454659e29001c412" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of bytes copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされたバイト数に設定されます。</target>
        </trans-unit>
        <trans-unit id="188fa3815ba94bd3d52f1e5d7a2b576e266716ff" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of chars copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされた文字数に設定されています。</target>
        </trans-unit>
        <trans-unit id="268283661585dc5a43f5d101b5eb0cb7c4bd1ba0" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of doubles copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたダブルスの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="a818e9c80711ad62073fa38012777538062ecb70" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of floats copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたフロートの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="9b9ac4899062f4a8080e7bb42619ee1993a91107" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of ints copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされたイント数に設定されます。</target>
        </trans-unit>
        <trans-unit id="74b0cc21acda56fdd53c62463623d224a17371a3" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of longs copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたロング数に設定されます。</target>
        </trans-unit>
        <trans-unit id="750514a6ac223b844a07865b20d67f5ea7c24baf" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of shorts copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたショートの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="293bbf9dbaac98ff56c4b3e964c2a85c882bdba5" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファーの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="63913af10c4a2a952523c8a79b63028c30d3d4bb" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read, and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファーの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="7ea75e8b0576a0fab591f0e6c8cfa51a7d1af8b0" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファーの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="7363ecd6d3a0468acc64ed1a76fb03af75bdb558" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read, and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファーの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="0d6d45090b38927980128fdfc30c28845132395a" translate="yes" xml:space="preserve">
          <source>The builder can only be installed if the executing thread is allowed (by the security manager's checkSetFactory() method) to do so. Once installed, the builder cannot be replaced.</source>
          <target state="translated">ビルダーは、実行中のスレッドが (セキュリティマネージャの checkSetFactory()メソッドによって)許可されている場合にのみインストールすることができます。一度インストールされると、ビルダを置き換えることはできません。</target>
        </trans-unit>
        <trans-unit id="94162d4cf2c341f565021f495ec547084eb7ab50" translate="yes" xml:space="preserve">
          <source>The builder can only be installed if the executing thread is allowed by the security manager to do so. Once installed, the builder cannot be replaced.</source>
          <target state="translated">ビルダーは、実行中のスレッドがセキュリティ管理者によって許可されている場合にのみ、インストールすることができます。一度インストールされると、ビルダを置き換えることはできません。</target>
        </trans-unit>
        <trans-unit id="57bc2cca5ed13a9fc84b6171112f0807ef63a7e4" translate="yes" xml:space="preserve">
          <source>The bulk read operations &lt;a href=&quot;reader#read-char:A-&quot;&gt;&lt;code&gt;read(char[]) &lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read(char[], int, int) &lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reader#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; on the returned object will not read in characters beyond the line bound for each invocation, even if the destination buffer has space for more characters. The &lt;code&gt;Reader&lt;/code&gt;'s &lt;code&gt;read&lt;/code&gt; methods may block if a line bound has not been entered or reached on the console's input device. A line bound is considered to be any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), a carriage return followed immediately by a linefeed, or an end of stream.</source>
          <target state="translated">返されたオブジェクトに対する一括読み取り操作&lt;a href=&quot;reader#read-char:A-&quot;&gt; &lt;code&gt;read(char[]) &lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt; &lt;code&gt;read(char[], int, int) &lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;reader#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;は、呼び出しごとにバインドされた行を超える文字を読み取りません。宛先バッファには、さらに多くの文字のためのスペースがあります。 &lt;code&gt;Reader&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; 拘束ライン入力またはコンソールの入力デバイスに達していない場合の方法はブロックすることがあります。ラインバウンドは、ラインフィード（ &lt;code&gt;'\n'&lt;/code&gt; ）、キャリッジリターン（ &lt;code&gt;'\r'&lt;/code&gt; ）、キャリッジリターンの直後にラインフィードが続く、またはストリームの終わりのいずれかと見なされます。</target>
        </trans-unit>
        <trans-unit id="4906528df4e968c4a2fd97b5d59c3f8587333b5e" translate="yes" xml:space="preserve">
          <source>The bundle name is obtained by calling &lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;toBundleName(baseName,
 locale)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バンドル名は&lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;toBundleName(baseName, locale)&lt;/code&gt; &lt;/a&gt;呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="a4a52b4593f9a8a8dd2e70ebe00138c0d2b17c41" translate="yes" xml:space="preserve">
          <source>The byte array referenced by an &lt;code&gt;IIOByteBuffer&lt;/code&gt; will generally be part of an internal data structure belonging to an &lt;code&gt;ImageReader&lt;/code&gt; implementation; its contents should be considered read-only and must not be modified.</source>
          <target state="translated">&lt;code&gt;IIOByteBuffer&lt;/code&gt; によって参照されるバイト配列は、通常、 &lt;code&gt;ImageReader&lt;/code&gt; 実装に属する内部データ構造の一部になります。その内容は読み取り専用と見なされ、変更しないでください。</target>
        </trans-unit>
        <trans-unit id="1355d05c2748f9dfcf75dbdc8ead75958008b92d" translate="yes" xml:space="preserve">
          <source>The byte at the buffer's current position</source>
          <target state="translated">バッファの現在位置のバイト</target>
        </trans-unit>
        <trans-unit id="47ca471c96d31b5f0031a2837a68bf4083a1dc36" translate="yes" xml:space="preserve">
          <source>The byte at the given index</source>
          <target state="translated">指定されたインデックスのバイト</target>
        </trans-unit>
        <trans-unit id="deb4c87efe1222286df56bf2a615595a08fdcbc1" translate="yes" xml:space="preserve">
          <source>The byte buffer is not modified by this method, and no reference to the buffer is retained by the bit set.</source>
          <target state="translated">この方法ではバイトバッファは変更されず、ビットがセットされてもバッファへの参照は保持されません。</target>
        </trans-unit>
        <trans-unit id="1ccd18330dd5450f1b6655054edb6878c9c12957" translate="yes" xml:space="preserve">
          <source>The byte order has no effect on the results returned from the &lt;code&gt;readBits&lt;/code&gt; method (or the value written by &lt;code&gt;ImageOutputStream.writeBits&lt;/code&gt;).</source>
          <target state="translated">バイト順序は、 &lt;code&gt;readBits&lt;/code&gt; メソッドから返される結果（または &lt;code&gt;ImageOutputStream.writeBits&lt;/code&gt; によって書き込まれる値）には影響しません。</target>
        </trans-unit>
        <trans-unit id="14aafe7666eb5797f1333016b720d9c302895a7b" translate="yes" xml:space="preserve">
          <source>The byte order is used when reading or writing multibyte values, and when creating buffers that are views of this byte buffer. The order of a newly-created byte buffer is always &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイトオーダーは、マルチバイト値を読み書きするとき、およびこのバイトバッファーのビューであるバッファーを作成するときに使用されます。新しく作成されたバイトバッファの順序は常に&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9cc687ee55e65629bf7cb07b117a3609d5c3c138" translate="yes" xml:space="preserve">
          <source>The byte order of a char buffer created by allocation or by wrapping an existing &lt;code&gt;char&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a char buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;char&lt;/code&gt; 配列をラップすることによって作成されたcharバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたcharバッファーのバイトオーダーは、ビューが作成された時点のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="0b6816216a3e49126f17437c6afe4b84167bb241" translate="yes" xml:space="preserve">
          <source>The byte order of a double buffer created by allocation or by wrapping an existing &lt;code&gt;double&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a double buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;double&lt;/code&gt; 配列をラップすることによって作成されたdoubleバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたダブルバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="44939b5e6d7ee751fc60184ae79f1bdd2b79b9e1" translate="yes" xml:space="preserve">
          <source>The byte order of a float buffer created by allocation or by wrapping an existing &lt;code&gt;float&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a float buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;float&lt;/code&gt; 配列をラップすることによって作成されたフロートバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたフロートバッファのバイトオーダーは、ビューが作成された時点のバイトバッファのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="e097a7b495f686009fc938ec60647ad742832ccc" translate="yes" xml:space="preserve">
          <source>The byte order of a long buffer created by allocation or by wrapping an existing &lt;code&gt;long&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a long buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;long&lt;/code&gt; 配列をラップすることによって作成された長いバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成された長いバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="cfc5f284c55f0850787d4daf099cb8d1f252d53e" translate="yes" xml:space="preserve">
          <source>The byte order of a short buffer created by allocation or by wrapping an existing &lt;code&gt;short&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a short buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;short&lt;/code&gt; 配列をラップすることによって作成された短いバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたshortバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="d329e5f47c9a84dc8e2b980d1c0c0a36a749cba2" translate="yes" xml:space="preserve">
          <source>The byte order of a view buffer is fixed to be that of its byte buffer at the time that the view is created.</source>
          <target state="translated">ビューバッファのバイト順は、ビュー作成時のバイトバッファのバイト順に固定されています。</target>
        </trans-unit>
        <trans-unit id="7e6b38e4e4aefc9d62ff65054f43aab5864326e1" translate="yes" xml:space="preserve">
          <source>The byte order of an int buffer created by allocation or by wrapping an existing &lt;code&gt;int&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of an int buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;int&lt;/code&gt; 配列をラップすることによって作成されたintバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたintバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="922b6475bb7c93120f18c536157006a342e40842" translate="yes" xml:space="preserve">
          <source>The byte order of the stream as an instance of the enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt;, where &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; indicates network byte order and &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; indicates the reverse order. By default, the value is &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt;.</source>
          <target state="translated">列挙クラスのインスタンスとしてストリームのバイト順 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 、 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; はネットワークバイト順を示し、 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; は逆順を示しています。デフォルトでは、値は &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ac99f08420b0a24dc629e953b4fd8055fd1229b" translate="yes" xml:space="preserve">
          <source>The byte order of the stream has no effect on this method. The return value of this method is constructed as though the bits were read one at a time, and shifted into the right side of the return value, as shown by the following pseudo-code:</source>
          <target state="translated">ストリームのバイト順はこのメソッドには影響しません。このメソッドの戻り値は、以下の疑似コードで示されるように、ビットが1つずつ読み込まれたかのように構成され、戻り値の右側にシフトされています。</target>
        </trans-unit>
        <trans-unit id="e98750b98cb578117e4a7b03d9689b363791d254" translate="yes" xml:space="preserve">
          <source>The bytes between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the byte at index</source>
          <target state="translated">バッファの現在位置から限界までのバイトがある場合は、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="fdb617b55c781ce6016c87e15df5a36aff81d4fc" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer are processed, and the result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; バッファのバイトが処理され、結果が新しいバッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="c3be3ee4e2ba1705b0819316619d526cd4ca38d3" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; バッファー内のバイト、および前の &lt;code&gt;update&lt;/code&gt; 操作中にバッファーに入れられた可能性のある入力バイトが処理され、パディング（要求された場合）が適用されます。GCM / CCMなどのAEADモードが使用されている場合、暗号化の場合は認証タグが付加され、復号化の場合は認証タグが検証されます。結果は新しいバッファに保存されます。</target>
        </trans-unit>
        <trans-unit id="e8477b1431e21fbd46bb1ccf3bf62d71fd8b63b6" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DESキーを構成するバイトは、 &lt;code&gt;key[0]&lt;/code&gt; と &lt;code&gt;key[7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="a3f2da7875cad1eeed18f83a8d95ae13c715aa4e" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="f4fa0678e8609555f8143e63e8b2f158ff878621" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[23]&lt;/code&gt; inclusive</source>
          <target state="translated">DES-EDE鍵を構成するバイトの間のものである &lt;code&gt;key[0]&lt;/code&gt; および &lt;code&gt;key[23]&lt;/code&gt; 包括的な</target>
        </trans-unit>
        <trans-unit id="13305bd13aac1472ef1037068afe772ad0fb4273" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+23]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES-EDE鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+23]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="3067e974cc7fdd3a9dfe76018048100635f25890" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[0]&lt;/code&gt; and &lt;code&gt;iv[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVを構成するバイトは、 &lt;code&gt;iv[0]&lt;/code&gt; と &lt;code&gt;iv[7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="e88aa68f8ceb389a17299b0b745903e72581ad9c" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+len-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="c171e0871451b5bcb88b7ecb2eba3ec410b4a9a1" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the secret key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">秘密鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+len-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="a5b7d43b7dabc9df1454a8ff820a35700bfc1b23" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readChar&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;char&lt;/code&gt; equal to &lt;code&gt;(char)v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readChar&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;(char)v&lt;/code&gt; に等しい &lt;code&gt;char&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0b95387b94a86af5779949aa0a20e886731ea4d4" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readInt&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return an &lt;code&gt;int&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readInt&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;v&lt;/code&gt; に等しい &lt;code&gt;int&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b00736a5ccdb8c5c715cbbbfdd29b8aa3e9af1ac" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readLong&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;long&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readLong&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;v&lt;/code&gt; に等しい &lt;code&gt;long&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3565a4ba0097da0e53b33f2f269c8a9843ebdfdd" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readShort&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;short&lt;/code&gt; equal to &lt;code&gt;(short)v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readShort&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;(short)v&lt;/code&gt; に等しい &lt;code&gt;short&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="594b8e0f4367854f5fec1f1e47e81634970cee0b" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readUTF&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;String&lt;/code&gt; equal to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readUTF&lt;/code&gt; メソッドによって読み取られ、次に &lt;code&gt;s&lt;/code&gt; に等しい &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="31fa5f9fc9eed95eef4be0210ae43d26c7263f6c" translate="yes" xml:space="preserve">
          <source>The cache may reside in main memory or on disk. Setting this flag to &lt;code&gt;false&lt;/code&gt; disallows the use of disk for future streams, which may be advantageous when working with small images, as the overhead of creating and destroying files is removed.</source>
          <target state="translated">キャッシュはメインメモリまたはディスクに常駐する場合があります。このフラグを &lt;code&gt;false&lt;/code&gt; に設定すると、将来のストリームでディスクを使用できなくなります。これは、ファイルの作成と破棄のオーバーヘッドがなくなるため、小さな画像を扱うときに有利になる場合があります。</target>
        </trans-unit>
        <trans-unit id="2bc9e50f825b3431afd7e5a709accec3607181e7" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo for that MBean, if not null, or a newly built MBeanInfo if none was cached.</source>
          <target state="translated">null でない場合は、その MBean のキャッシュされた MBeanInfo、キャッシュされていない場合は新しくビルドされた MBeanInfo。</target>
        </trans-unit>
        <trans-unit id="0ab46aaa358cbc9d48861d7c404420fc26ce55fe" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo, or null if no MBeanInfo is cached.</source>
          <target state="translated">キャッシュされた MBeanInfo、または MBeanInfo がキャッシュされていない場合は null。</target>
        </trans-unit>
        <trans-unit id="b831b6b8d71a342113c94aa040943ab0817aea9b" translate="yes" xml:space="preserve">
          <source>The caching flag is designed to allow provider implementations to prevent the rules being cached in &lt;code&gt;ZoneId&lt;/code&gt;. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャッシングフラグは、プロバイダーの実装で、ルールが &lt;code&gt;ZoneId&lt;/code&gt; にキャッシュされないようにするために設計されています。通常の状況では、ゾーンルールのキャッシングは、パフォーマンスを向上させるため非常に望ましいです。ただし、キャッシュが望ましくないユースケースがあります&lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b0e896df123d4b65bbbe5a4dafe244dbddcdea17" translate="yes" xml:space="preserve">
          <source>The calculation for date and time units differ.</source>
          <target state="translated">日付と時間の単位の計算が異なります。</target>
        </trans-unit>
        <trans-unit id="3f9bfb97f566a996492a90ed855eda8eef86861b" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d36a13c282a1a0db204d6e433edc37043d6d0a0c" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="405fd7a334255c2eb1f7b060d385c4b26c0c094f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="337784a3c16463d8f2a1d05d69b5de99101c53f9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8944e4ffa7476e40cdbb6ed5d28a69895c14f3d9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5fc94b4fc685ed04a2ebd12ecf82c33d700c679e" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1cfef65ed1bb6a95bbe63ebf74cdcb10c5ecd139" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7e99f6027203570f1c45a91326691927a052b5f7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="994428485f2ea149263e9c2fb513da76194ad0b8" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="72beecfb4b4380d1395896cd556f2fd5f887329f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="63d8dfd01dd14bee40f150a8512f195b82961be7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="ef7bf705802a1c00c21142d8479c79f5ad4f4ad9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="9f83917a4b3043dc83a8a121229cd2c84588523d" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="9735318a5ee7c236f2a3824643d883272d024629" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="4678787b4640ffb19d6e0e843874079614a6c590" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="76574227f521761bf4b8e3a70c0d6e0fd5a48f77" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="6a606f8f745f376a82afb4bf3b9cfaaf4b5e04e7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="fb583766018df0a002e06f9ff6b85c52184760b5" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="1cd315c0454258ad07a59eebbecac5190d877bf3" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;../temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; should be supported by all implementations. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;../temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; 、および &lt;code&gt;ERAS&lt;/code&gt; は、すべての実装でサポートされている必要があります。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="2c40729f65e17fa53bc32e56e2b68deecbce35f4" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; および &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="19b9a5d378177e9c9b3a71840adcb16f0f886bde" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。ユニット &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; と &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e230aa95d014e34ceda792a8275bb6a6a1650561" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; および &lt;code&gt;HALF_DAYS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1507d23c8a6f8c72a31bd26e1e7810e4719336ab" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt;, &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; および &lt;code&gt;HALF_DAYS&lt;/code&gt; 、 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; および &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="a944bb9e5a6fb6bb71bb5754d803740edba2e7e6" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt;, &lt;code&gt;HALF_DAYS&lt;/code&gt; and &lt;code&gt;DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; 、 &lt;code&gt;HALF_DAYS&lt;/code&gt; および &lt;code&gt;DAYS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1d36fea63293e397176d95e77b5737ce1cf421eb" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。ユニット &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; と &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="de396f35f1beb4dec84fd96c5c0bc128000c53b5" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the ISO calendar system. If necessary, the input date will be converted to ISO.</source>
          <target state="translated">ISO カレンダーシステムを使用して計算を行います。必要に応じて、入力された日付をISOに変換します。</target>
        </trans-unit>
        <trans-unit id="5c8b7a9e75b18aac11374fa27a65860ce2cba5ee" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the chronology of this date. If necessary, the input date will be converted to match.</source>
          <target state="translated">この日付の年表を使って計算します。必要に応じて、入力された日付が一致するように変換されます。</target>
        </trans-unit>
        <trans-unit id="a18a3925fc70243cd9c7e703ff805ee959f8b1b2" translate="yes" xml:space="preserve">
          <source>The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.</source>
          <target state="translated">計算はプロレプティックである-同じルールを遠い未来と遠い過去に適用する。これは歴史的に不正確ですが、ISO-8601規格では正しいです。</target>
        </trans-unit>
        <trans-unit id="a77397163b78a04fe04dd941420d69ad173ac41a" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are added if non-zero, otherwise the combination of years and months is added if non-zero. Finally, any days are added.</source>
          <target state="translated">計算は以下のように動作します。最初に、テンポラリの年表がISO年表であるかヌルであるかをチェックします。第二に、月がゼロの場合、ゼロでない場合は年が追加され、ゼロでない場合は年と月の組み合わせが追加されます。最後に、日が追加されます。</target>
        </trans-unit>
        <trans-unit id="c263030716ce91a128cf8f90575be9c8fd437b13" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are subtracted if non-zero, otherwise the combination of years and months is subtracted if non-zero. Finally, any days are subtracted.</source>
          <target state="translated">計算は以下のように動作します。最初に、テンポラリの年表がISO年表であるかヌルであるかをチェックします。第二に、月がゼロの場合、ゼロでない場合は年が減算され、ゼロでない場合は年と月の組み合わせが減算されます。最後に、日が差し引かれます。</target>
        </trans-unit>
        <trans-unit id="fdb1636ed39215073f821c5aa121f59d7ee4d527" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00 and 2012-08-14T23:59 will only be one month as it is one minute short of two months.</source>
          <target state="translated">計算は、2つの日付間の完全な単位の数を表す整数を返します。例えば、2012-06-15T00:00から2012-08-14T23:59までの間の月の金額は、2ヶ月の1分足りないので1ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="ec9af07e807db86ba031ee502751cd0c38c69a71" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z will only be one month as it is one minute short of two months.</source>
          <target state="translated">計算は、2つの日付間の完全な単位の数を表す整数を返します。例えば、2012-06-15T00:00Z と 2012-08-14T23:59Z の間の月単位の金額は、2ヶ月のうち1分足りないので1ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="2a40c5deaf847238353378cb61b47570a274c9ac" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in months between 2012-06-15 and 2012-08-14 will only be one month as it is one day short of two months.</source>
          <target state="translated">計算は、2 つの日付間の完全な単位数を表す整数を返します。例えば、2012-06-15 と 2012-08-14 の間の月の金額は、2 ヶ月のうち 1 日足りないので 1 ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="4e4af59e77647dd6907c8a296e775e0a0d836e8c" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the amount in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">この計算は、2つの時間軸の間の完全な単位の数を表す整数を返します。例えば、11:30と13:29の間の時間は、2時間に1分足りないので、1時間となります。</target>
        </trans-unit>
        <trans-unit id="e6909d5ca1c4c3ff219ad8a02bf77193f0655754" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">計算は、2つの時間の間の完全な単位の数を表す整数を返します。例えば、11:30から13:29の間の時間は、2時間に1分足りないので、1時間にしかなりません。</target>
        </trans-unit>
        <trans-unit id="c9e0270c645839bc297b8d8461abd213cdea0773" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30Z and 13:29Z will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">計算は、2つの時間の間の完全な単位の数を表す整数を返します。例えば、11:30Zと13:29Zの間の時間単位は、2時間のうち1分足りないので、1時間になります。</target>
        </trans-unit>
        <trans-unit id="b40e1be73246aecc1325d0ab24225f79366c3cea" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two year-months. For example, the amount in decades between 2012-06 and 2032-05 will only be one decade as it is one month short of two decades.</source>
          <target state="translated">この計算は、2つの年月間の完全な単位の数を表す整数を返します。例えば、2012-06年から2032-05年の間の数十年分の金額は、20年分の1ヶ月分足りないので、10年分の金額は1つになります。</target>
        </trans-unit>
        <trans-unit id="ccc4ff471f21d9f7ba0907b139abcc2e7896bd76" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two years. For example, the amount in decades between 2012 and 2031 will only be one decade as it is one year short of two decades.</source>
          <target state="translated">この計算は、2年の間の完全な単位の数を表す整数を返します。例えば、2012年から2031年の間の数十年単位の金額は、20年のうち1年足りないので、1年単位にしかなりません。</target>
        </trans-unit>
        <trans-unit id="58e5423c597dc35b389e5d938496ce0de4d9778f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the week from Sunday to Monday. The specified period may be negative.</source>
          <target state="translated">日曜から月曜までの週の終わりを巻き込んで計算します。指定された期間は負の値になる場合があります。</target>
        </trans-unit>
        <trans-unit id="668d9a3e3fa4c9967805f1a3678a36f85651608a" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the year from December to January. The specified period may be negative.</source>
          <target state="translated">12月から1月までの年末を中心に計算します。指定された期間はマイナスになる場合があります。</target>
        </trans-unit>
        <trans-unit id="c563b5a653779db71d45290b934e9ad07e26260f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from January to December. The specified period may be negative.</source>
          <target state="translated">1月から12月までの年初を中心に計算します。指定された期間は負の場合もあります。</target>
        </trans-unit>
        <trans-unit id="e7212e045d02e1d66ae352530c884f838bcd75d4" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from Monday to Sunday. The specified period may be negative.</source>
          <target state="translated">計算は、月曜から日曜までの年の始まりをロールバックします。指定された期間は負の値になる場合があります。</target>
        </trans-unit>
        <trans-unit id="ec7c17cc8ccefb501b5beef5a7c7ae8a3150c74f" translate="yes" xml:space="preserve">
          <source>The calculation will add the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">計算では秒を加算し、次にナノを加算します。ゼロではない量だけが加算されます。</target>
        </trans-unit>
        <trans-unit id="16e7549a22a253997bf53ac9cf0c75a51b0bbc3b" translate="yes" xml:space="preserve">
          <source>The calculation will subtract the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">計算では秒数を引いてからナノスになります。ゼロではない量だけが加算されます。</target>
        </trans-unit>
        <trans-unit id="82a4f3f7a39babbf366ad326d064056956101ac1" translate="yes" xml:space="preserve">
          <source>The calendar field values can be set by calling the &lt;code&gt;set&lt;/code&gt; methods. Any field values set in a &lt;code&gt;Calendar&lt;/code&gt; will not be interpreted until it needs to calculate its time value (milliseconds from the Epoch) or values of the calendar fields. Calling the &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getTimeInMillis&lt;/code&gt;, &lt;code&gt;getTime&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;roll&lt;/code&gt; involves such calculation.</source>
          <target state="translated">カレンダフィールド値を呼び出すことによって設定することができ &lt;code&gt;set&lt;/code&gt; 方法を。 &lt;code&gt;Calendar&lt;/code&gt; 設定されたフィールド値は、時間値（エポックからのミリ秒）またはカレンダーフィールドの値を計算する必要があるまで解釈されません。 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getTimeInMillis&lt;/code&gt; 、 &lt;code&gt;getTime&lt;/code&gt; 、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;roll&lt;/code&gt; の呼び出しには、このような計算が含まれます。</target>
        </trans-unit>
        <trans-unit id="865d4b04e7b37220faeadf26dcf5654c73ef78a9" translate="yes" xml:space="preserve">
          <source>The calendar field values for the currently set time for this calendar. This is an array of &lt;code&gt;FIELD_COUNT&lt;/code&gt; integers, with index values &lt;code&gt;ERA&lt;/code&gt; through &lt;code&gt;DST_OFFSET&lt;/code&gt;.</source>
          <target state="translated">このカレンダーに現在設定されている時刻のカレンダーフィールド値。これは &lt;code&gt;FIELD_COUNT&lt;/code&gt; 整数の配列で、インデックス値は &lt;code&gt;ERA&lt;/code&gt; から &lt;code&gt;DST_OFFSET&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="77dba84a172780be492cbe77a232ee1219c79321" translate="yes" xml:space="preserve">
          <source>The calendar fields can be changed using three methods: &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;add()&lt;/code&gt;, and &lt;code&gt;roll()&lt;/code&gt;.</source>
          <target state="translated">カレンダーのフィールドは、 &lt;code&gt;set()&lt;/code&gt; 、 &lt;code&gt;add()&lt;/code&gt; 、および &lt;code&gt;roll()&lt;/code&gt; の 3つのメソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="93ce9ec5e026f012a845bb7044250795eb5e3784" translate="yes" xml:space="preserve">
          <source>The calendar system name will be output during a format. If the chronology cannot be obtained then an exception will be thrown.</source>
          <target state="translated">カレンダーシステム名は、フォーマット中に出力されます。年表が取得できない場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="962278d560a441566052e9e275cc29395fdebae6" translate="yes" xml:space="preserve">
          <source>The calendar type</source>
          <target state="translated">カレンダータイプ</target>
        </trans-unit>
        <trans-unit id="4446eadd3978a37be2e9479e866319a200f662b6" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダータイプは、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e9ed929db1a5de6f998e10698419063ed967ca06" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;. It can also be used as part of a locale, accessible via &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt; with the key 'ca'.</source>
          <target state="translated">カレンダータイプは、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。ロケールの一部として使用することもでき、キー「ca」を使用して&lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt;からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5fc183cf3291b70fe7d13ce84678bde8c535e01b" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the CLDR and &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specifications to uniquely identification a calendar. The &lt;code&gt;getCalendarType&lt;/code&gt; is the concatenation of the CLDR calendar type and the variant, if applicable, is appended separated by &quot;-&quot;. The calendar type is used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダータイプは、カレンダーを一意に識別するためにCLDRおよび&lt;em&gt;Unicodeロケールデータマークアップ言語（LDML）&lt;/em&gt;仕様で定義された識別子です。 &lt;code&gt;getCalendarType&lt;/code&gt; は「 - 」CLDRカレンダー型と変異体の連結であり、該当する場合、により分離添付されます。カレンダータイプは、&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bfa957c4639eb6b0b522562bf5068bd4ec5c04a3" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.exit(n)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.exit(n)&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="76511f462f4300cf033c5338feb8d0cddaa72576" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.gc()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.gc()&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="b690e13d2eb683913812a8e26357b9092be90125" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.load(name)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.load(name)&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="1eb7ec99c5609280be9a3083224b7fba9909e0ca" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.loadLibrary(name)&lt;/code&gt; is effectively equivalent to the call</source>
          <target state="translated">呼び出し &lt;code&gt;System.loadLibrary(name)&lt;/code&gt; は、呼び出しと実質的に同等です。</target>
        </trans-unit>
        <trans-unit id="44ca22e66f70469f3b06955ad110de6c45f398d4" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.runFinalization()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.runFinalization()&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="e36a0559239de87755b7f3e15a71516f5fc282f3" translate="yes" xml:space="preserve">
          <source>The call spuriously (that is, for no reason) returns.</source>
          <target state="translated">呼び出しはスプリアスで(つまり、理由もなく)返ってきます。</target>
        </trans-unit>
        <trans-unit id="d4d15ed9ec3b7821f87167a2d4c1dc15a7458567" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;reset&lt;/code&gt; may throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; を呼び出すと、 &lt;code&gt;IOException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="768c012ad804fb9a864a4db4525b259baaf8487d" translate="yes" xml:space="preserve">
          <source>The caller can use the result to determine if it should fallback to another mechanism to read the keys.</source>
          <target state="translated">呼び出し元はその結果を使用して、鍵を読み取るために別のメカニズムにフォールバックすべきかどうかを判断することができる。</target>
        </trans-unit>
        <trans-unit id="d04140412c1fb225a44054ba343d90b9017cec04" translate="yes" xml:space="preserve">
          <source>The caller must have permission to access all of the requested Credentials, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">呼び出し元は、要求されたすべての資格情報にアクセスする権限を持っている必要があります。そうしないと、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="aa92adff6514811ab419f1227d3ed5e4ce614299" translate="yes" xml:space="preserve">
          <source>The caller principal must be an owner of the ACL in order to invoke this method.</source>
          <target state="translated">このメソッドを呼び出すには、呼び出し元のプリンシパルが ACL の所有者でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9af10b071d26e95fd329201957fb34bf923bd4a9" translate="yes" xml:space="preserve">
          <source>The caller should not make any changes to the object returned: their effect on the context is undefined. The environment of this context may be changed using &lt;code&gt;addToEnvironment()&lt;/code&gt; and &lt;code&gt;removeFromEnvironment()&lt;/code&gt;.</source>
          <target state="translated">呼び出し元は、返されたオブジェクトに変更を加えないでください。コンテキストへの影響は定義されていません。このコンテキストの環境を使用して変更することができる &lt;code&gt;addToEnvironment()&lt;/code&gt; および &lt;code&gt;removeFromEnvironment()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cd6ba60b3eac7216be485ec7f97649dd91f55ac" translate="yes" xml:space="preserve">
          <source>The caller type must provides as least enough arguments, and of the correct type, to satisfy the target's requirement for positional arguments before the trailing array argument. Thus, the caller must supply, at a minimum, &lt;code&gt;N-1&lt;/code&gt; arguments, where &lt;code&gt;N&lt;/code&gt; is the arity of the target. Also, there must exist conversions from the incoming arguments to the target's arguments. As with other uses of plain &lt;code&gt;invoke&lt;/code&gt;, if these basic requirements are not fulfilled, a &lt;code&gt;WrongMethodTypeException&lt;/code&gt; may be thrown.</source>
          <target state="translated">呼び出し側の型は、末尾の配列引数の前に位置引数に関するターゲットの要件を満たすために、少なくとも十分な引数と正しい型の引数を提供する必要があります。したがって、呼び出し元は、少なくとも &lt;code&gt;N-1&lt;/code&gt; 個の引数を指定する必要があります。ここで、 &lt;code&gt;N&lt;/code&gt; はターゲットのアリティです。また、入力引数からターゲットの引数への変換が存在する必要があります。単純な &lt;code&gt;invoke&lt;/code&gt; の他の使用と同様に、これらの基本的な要件が満たされない場合、 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; がスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="295d4fb4a3cfad392bf258af4796a9b85656d164" translate="yes" xml:space="preserve">
          <source>The calling application sees the authentication process as a single operation. However, the authentication process within the &lt;code&gt;LoginModule&lt;/code&gt; proceeds in two distinct phases. In the first phase, the LoginModule's &lt;code&gt;login&lt;/code&gt; method gets invoked by the LoginContext's &lt;code&gt;login&lt;/code&gt; method. The &lt;code&gt;login&lt;/code&gt; method for the &lt;code&gt;LoginModule&lt;/code&gt; then performs the actual authentication (prompt for and verify a password for example) and saves its authentication status as private state information. Once finished, the LoginModule's &lt;code&gt;login&lt;/code&gt; method either returns &lt;code&gt;true&lt;/code&gt; (if it succeeded) or &lt;code&gt;false&lt;/code&gt; (if it should be ignored), or throws a &lt;code&gt;LoginException&lt;/code&gt; to specify a failure. In the failure case, the &lt;code&gt;LoginModule&lt;/code&gt; must not retry the authentication or introduce delays. The responsibility of such tasks belongs to the application. If the application attempts to retry the authentication, the LoginModule's &lt;code&gt;login&lt;/code&gt; method will be called again.</source>
          <target state="translated">呼び出し元のアプリケーションは、認証プロセスを単一の操作と見なします。ただし、 &lt;code&gt;LoginModule&lt;/code&gt; 内の認証プロセスは、2つの異なるフェーズで進行します。最初のフェーズでは、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドがLoginContextの &lt;code&gt;login&lt;/code&gt; メソッドによって呼び出されます。次に、 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;login&lt;/code&gt; メソッドは実際の認証を実行し（たとえば、パスワードの入力を求めて確認し）、その認証ステータスをプライベートステート情報として保存します。完了すると、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; （成功した場合）または &lt;code&gt;false&lt;/code&gt; （無視する必要がある場合）を返すか、 &lt;code&gt;LoginException&lt;/code&gt; をスローします。失敗を指定します。失敗した場合、 &lt;code&gt;LoginModule&lt;/code&gt; は認証を再試行したり、遅延を引き起こしたりしてはなりません。このようなタスクの責任はアプリケーションにあります。アプリケーションが認証を再試行しようとすると、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドが再度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1c3fe9fba10b534da227fa8d485a94dde30e127c" translate="yes" xml:space="preserve">
          <source>The cancelled-key set</source>
          <target state="translated">キャンセルされたキーセット</target>
        </trans-unit>
        <trans-unit id="7705f65a7bdd439c114a9df9b4c5a1d7648e03b2" translate="yes" xml:space="preserve">
          <source>The canonical form of the name.</source>
          <target state="translated">名前の正準形。</target>
        </trans-unit>
        <trans-unit id="a1104158561eadc7967dd83f5b89d12e9b6c57d4" translate="yes" xml:space="preserve">
          <source>The canonical key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">定型キー・プロパティ・リスト文字列。この文字列は、ObjectNameがパターンであるかどうかに依存しません。</target>
        </trans-unit>
        <trans-unit id="791454749861f9eb0692973f9cadb5f0f1a53c91" translate="yes" xml:space="preserve">
          <source>The canonical name of this charset</source>
          <target state="translated">この文字セットの正式名称</target>
        </trans-unit>
        <trans-unit id="210de0ba154cb7e2b8b0b68265e90339f4d9d26d" translate="yes" xml:space="preserve">
          <source>The canonical pathname of a file that resides on some other machine and is accessed via a remote-filesystem protocol such as SMB or NFS may or may not begin with one of the roots returned by this method. If the pathname of a remote file is syntactically indistinguishable from the pathname of a local file then it will begin with one of the roots returned by this method. Thus, for example, &lt;code&gt;File&lt;/code&gt; objects denoting the root directories of the mapped network drives of a Windows platform will be returned by this method, while &lt;code&gt;File&lt;/code&gt; objects containing UNC pathnames will not be returned by this method.</source>
          <target state="translated">他のマシンに常駐し、SMBやNFSなどのリモートファイルシステムプロトコルを介してアクセスされるファイルの正規のパス名は、このメソッドによって返されるルートの1つで始まる場合と始まらない場合があります。リモートファイルのパス名がローカルファイルのパス名と構文的に区別できない場合、このメソッドによって返されるルートの1つで始まります。したがって、たとえば、Windowsプラットフォームのマップされたネットワークドライブのルートディレクトリを示す &lt;code&gt;File&lt;/code&gt; オブジェクトはこのメソッドによって返されますが、UNCパス名を含む &lt;code&gt;File&lt;/code&gt; オブジェクトはこのメソッドによって返されません。</target>
        </trans-unit>
        <trans-unit id="de6a0ba5b090b016962ea6aeaab45878b7d009d1" translate="yes" xml:space="preserve">
          <source>The canonical pathname string denoting the same file or directory as this abstract pathname</source>
          <target state="translated">この抽象パス名と同じファイルやディレクトリを表す正準パス名文字列</target>
        </trans-unit>
        <trans-unit id="2dd69bbf6aa755d82287b8178393cdb4e9dc5d14" translate="yes" xml:space="preserve">
          <source>The capacity of this buffer</source>
          <target state="translated">このバッファの容量</target>
        </trans-unit>
        <trans-unit id="5f754be5b922ce10c49466dd844dfc855b60ce26" translate="yes" xml:space="preserve">
          <source>The captured input associated with a group is always the subsequence that the group most recently matched. If a group is evaluated a second time because of quantification then its previously-captured value, if any, will be retained if the second evaluation fails. Matching the string &lt;code&gt;&quot;aba&quot;&lt;/code&gt; against the expression &lt;code&gt;(a(b)?)+&lt;/code&gt;, for example, leaves group two set to &lt;code&gt;&quot;b&quot;&lt;/code&gt;. All captured input is discarded at the beginning of each match.</source>
          <target state="translated">グループに関連付けられたキャプチャされた入力は常に、グループが最後に一致したサブシーケンスです。定量化のためにグループが2回評価されると、2回目の評価が失敗した場合、以前に取得された値があればそれが保持されます。たとえば、文字列 &lt;code&gt;&quot;aba&quot;&lt;/code&gt; を式 &lt;code&gt;(a(b)?)+&lt;/code&gt; と照合すると、グループ2は &lt;code&gt;&quot;b&quot;&lt;/code&gt; に設定されたままになります。キャプチャされたすべての入力は、各一致の開始時に破棄されます。</target>
        </trans-unit>
        <trans-unit id="454d106b2ed5373abf97288cbbf46f7fa9aede72" translate="yes" xml:space="preserve">
          <source>The carriage-return character (&lt;code&gt;'\u000D'&lt;/code&gt;)</source>
          <target state="translated">復帰文字（ &lt;code&gt;'\u000D'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a336e54edba2db7b0d45359eec9f772478b631f0" translate="yes" xml:space="preserve">
          <source>The case of names is significant. All names should be treated as case-sensitive. For example, some file systems have case-insensitive, case-aware file names. File objects representing such files should take care to preserve case by using &lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt;&lt;code&gt;File.getCanonicalFile()&lt;/code&gt;&lt;/a&gt; or similar means. If the system is not case-aware, file objects must use other means to preserve case.</source>
          <target state="translated">名前の大文字と小文字は区別されます。すべての名前は大文字と小文字を区別するものとして扱う必要があります。たとえば、一部のファイルシステムでは、大文字と小文字が区別されず、大文字と小文字が区別されます。そのようなファイルを表すFileオブジェクトは、&lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt; &lt;code&gt;File.getCanonicalFile()&lt;/code&gt; &lt;/a&gt;または同様の手段を使用して大文字と小文字を保持するように注意する必要があります。システムで大文字と小文字が区別されない場合、ファイルオブジェクトは他の手段を使用して大文字と小文字を保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="a18ae82107d7074e97f5e1bfd9b5c68cb340a111" translate="yes" xml:space="preserve">
          <source>The central abstractions of the NIO APIs are:</source>
          <target state="translated">NIO APIの中心的な抽象化は、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="eea9d66af2319420cb90b9153a7f48fc60a2109b" translate="yes" xml:space="preserve">
          <source>The central authority, after computing the parameters, must send this information to the parties looking to agree on a secret key.</source>
          <target state="translated">中央機関は、パラメータを計算した後、この情報を秘密鍵に合意しようとする当事者に送らなければならない。</target>
        </trans-unit>
        <trans-unit id="c22f0301e2c96e02c998d11f05a81bda7ec13023" translate="yes" xml:space="preserve">
          <source>The certificate contains one or more unrecognized critical extensions.</source>
          <target state="translated">この証明書には、1 つ以上の認識されていない重要な拡張子が含まれています。</target>
        </trans-unit>
        <trans-unit id="b3f88fc74a60569eaa011ebfe60b8bb781fd8d80" translate="yes" xml:space="preserve">
          <source>The certificate does not chain correctly.</source>
          <target state="translated">証明書が正しくチェーンされていません。</target>
        </trans-unit>
        <trans-unit id="b25d26b01801270f07001113d7e2c75485deab07" translate="yes" xml:space="preserve">
          <source>The certificate is expired.</source>
          <target state="translated">証明書の有効期限が切れています。</target>
        </trans-unit>
        <trans-unit id="6e2ff8ce341f5930215309008c9e9de70d1648b6" translate="yes" xml:space="preserve">
          <source>The certificate is not a CA certificate.</source>
          <target state="translated">CAの証明書ではありません。</target>
        </trans-unit>
        <trans-unit id="8b796401164cf6fe5dbe9be3e622da059437350d" translate="yes" xml:space="preserve">
          <source>The certificate is not yet valid.</source>
          <target state="translated">証明書はまだ有効ではありません。</target>
        </trans-unit>
        <trans-unit id="ee1a1d0d8304f8fa5e5065bbc09eefcc09be7d06" translate="yes" xml:space="preserve">
          <source>The certificate is revoked.</source>
          <target state="translated">証明書は取り消されています。</target>
        </trans-unit>
        <trans-unit id="e3899819dea82e37e000988814aa79fa88a75e2d" translate="yes" xml:space="preserve">
          <source>The certificate's key usage is invalid.</source>
          <target state="translated">証明書の鍵の使用が無効です。</target>
        </trans-unit>
        <trans-unit id="b384fb743347a5a12dacd02a3d76e6f93ee0b1f3" translate="yes" xml:space="preserve">
          <source>The certificates supplied must be of a type supported by the &lt;code&gt;CertificateFactory&lt;/code&gt;. They will be copied out of the supplied &lt;code&gt;List&lt;/code&gt; object.</source>
          <target state="translated">提供される証明書は、 &lt;code&gt;CertificateFactory&lt;/code&gt; がサポートするタイプである必要があります。それらは、提供された &lt;code&gt;List&lt;/code&gt; オブジェクトからコピーされます。</target>
        </trans-unit>
        <trans-unit id="7b98e8e58f22b3caa2eb436eb57fa4ba86980758" translate="yes" xml:space="preserve">
          <source>The change to</source>
          <target state="translated">への変更</target>
        </trans-unit>
        <trans-unit id="3ef63324777b7b14fe754d2696b2ef9060c9840d" translate="yes" xml:space="preserve">
          <source>The channel</source>
          <target state="translated">チャンネル</target>
        </trans-unit>
        <trans-unit id="273f3a154b1e12746a05f884c9cef9ece2560ed9" translate="yes" xml:space="preserve">
          <source>The channel upon whose file this lock was acquired.</source>
          <target state="translated">このロックが取得されたファイルのチャンネル。</target>
        </trans-unit>
        <trans-unit id="1e0652fa3fbb3d765369e9f411541094bc17eda1" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it can receive datagrams from, and sends datagrams to, any remote address so long as the security manager, if installed, permits it.</source>
          <target state="translated">チャネルのソケットは、セキュリティマネージャがインストールされている場合、それが許可されている限り、任意のリモートアドレスからデータグラムを受信し、データグラムを送信できるように設定されています。</target>
        </trans-unit>
        <trans-unit id="118fc18fddf3f99946425aa7c2e5b6561b28a981" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it only receives datagrams from, and sends datagrams to, the given remote</source>
          <target state="translated">チャネルのソケットは、指定されたリモートの</target>
        </trans-unit>
        <trans-unit id="4c3b4f4f803181b3afa3181177892230a023a909" translate="yes" xml:space="preserve">
          <source>The channel's socket should be bound to the &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. If the socket is bound to a specific address, rather than the wildcard address then it is implementation specific if multicast datagrams are received by the socket.</source>
          <target state="translated">チャネルのソケットは&lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;アドレスにバインドする必要があります。ソケットがワイルドカードアドレスではなく特定のアドレスにバインドされている場合、マルチキャストデータグラムがソケットによって受信されるかどうかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="a699f56014d87844a8ee4bb207efd8389c233bcd" translate="yes" xml:space="preserve">
          <source>The channel, once created, is not dependent upon the directory stream used to create it. Closing this directory stream has no effect upon the channel.</source>
          <target state="translated">一度作成されたチャンネルは、その作成に使用されたディレクトリストリームに依存しません。このディレクトリストリームを閉じてもチャネルには何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="7290d5e1f93c0657c60681207491c9d4282f5969" translate="yes" xml:space="preserve">
          <source>The char at the buffer's current position</source>
          <target state="translated">バッファの現在位置の文字</target>
        </trans-unit>
        <trans-unit id="54b64de4dceefa74c52963cd7e8709b225830d3a" translate="yes" xml:space="preserve">
          <source>The char at the given index</source>
          <target state="translated">指定されたインデックスの文字</target>
        </trans-unit>
        <trans-unit id="0fb8540e46e037f0a55ee7cdb05c6a02e8b3244a" translate="yes" xml:space="preserve">
          <source>The char value at the buffer's current position</source>
          <target state="translated">バッファの現在位置の char 値</target>
        </trans-unit>
        <trans-unit id="38f5117adec7b8930b5b6167a3b737d62ce6af18" translate="yes" xml:space="preserve">
          <source>The char value at the given index</source>
          <target state="translated">指定されたインデックスの文字値</target>
        </trans-unit>
        <trans-unit id="861556c9f709a544627b4ec57f4cad7a37448510" translate="yes" xml:space="preserve">
          <source>The character</source>
          <target state="translated">キャラクター</target>
        </trans-unit>
        <trans-unit id="a31e6336561cb067818ee6d07b56859cf4a07e52" translate="yes" xml:space="preserve">
          <source>The character 'n'. The two characters represent a newline ('\n' in Java).</source>
          <target state="translated">文字'n'です。2つの文字は改行(Javaでは'\n')を表します。</target>
        </trans-unit>
        <trans-unit id="99fe90d5b42df4311043f886ab6c19c1e8b75bb8" translate="yes" xml:space="preserve">
          <source>The character at index</source>
          <target state="translated">インデックスの文字</target>
        </trans-unit>
        <trans-unit id="add7c9db1597ce73e7b64c0b4d75b5e5f46580e5" translate="yes" xml:space="preserve">
          <source>The character at index &lt;code&gt;position() + index&lt;/code&gt;</source>
          <target state="translated">インデックス &lt;code&gt;position() + index&lt;/code&gt; の文字（）+インデックス</target>
        </trans-unit>
        <trans-unit id="05cb1c2e1ff664b4468546f04c60b5ac72c5839e" translate="yes" xml:space="preserve">
          <source>The character at the specified index is set to &lt;code&gt;ch&lt;/code&gt;. This sequence is altered to represent a new character sequence that is identical to the old character sequence, except that it contains the character &lt;code&gt;ch&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定されたインデックスの文字が &lt;code&gt;ch&lt;/code&gt; に設定されます。このシーケンスは、位置 &lt;code&gt;index&lt;/code&gt; に文字 &lt;code&gt;ch&lt;/code&gt; が含まれていることを除いて、古い文字シーケンスと同一の新しい文字シーケンスを表すように変更されます。</target>
        </trans-unit>
        <trans-unit id="60ad5395dc1ff483a8ff68c1464584af5830cab2" translate="yes" xml:space="preserve">
          <source>The character buffer.</source>
          <target state="translated">文字バッファです。</target>
        </trans-unit>
        <trans-unit id="f53810bc7c23ad757010d0dee9a2d3f2d0f88c86" translate="yes" xml:space="preserve">
          <source>The character index of the first text boundary.</source>
          <target state="translated">最初のテキスト境界の文字インデックス。</target>
        </trans-unit>
        <trans-unit id="bf1cc285cf8f3350802731f918ab3a751880522f" translate="yes" xml:space="preserve">
          <source>The character index of the last text boundary.</source>
          <target state="translated">最後のテキスト境界の文字インデックス。</target>
        </trans-unit>
        <trans-unit id="fbb25d884c4b95970cd226381775257633d22616" translate="yes" xml:space="preserve">
          <source>The character index of the next text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the last text boundary. Equivalent to next(1).</source>
          <target state="translated">次のテキスト境界の文字インデックス、または現在の境界が最後のテキスト境界の場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。next（1）と同等です。</target>
        </trans-unit>
        <trans-unit id="8f936cd2ad0aa613f11cba5c34739fa3c3541469" translate="yes" xml:space="preserve">
          <source>The character index of the nth boundary from the current position or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if either first or last text boundary has been reached.</source>
          <target state="translated">現在の位置からn番目の境界の文字インデックス、または最初または最後のテキスト境界に達した場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e9038b2d54c15a81fe437312a391d350ec427b8" translate="yes" xml:space="preserve">
          <source>The character index of the previous text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the first text boundary.</source>
          <target state="translated">前のテキスト境界の文字インデックス、または現在の境界が最初のテキスト境界の場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85a238174f4550c34f72f6ae6bc1bc6a516a69c0" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、全角小文字のラテン文字a（ &lt;code&gt;'\uFF41'&lt;/code&gt; ）〜z（ &lt;code&gt;'\uFF5A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="393a621e1493451e2055126ad0ce9ab6f642949f" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、全角小文字のラテン文字a（ &lt;code&gt;'\uFF41'&lt;/code&gt; ）〜z（ &lt;code&gt;'\uFF5A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="57d9c7164d71a3374ba8edd927a1bf0f75b1189e" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は全角大文字のラテン文字A（ &lt;code&gt;'\uFF21'&lt;/code&gt; ）〜Z（ &lt;code&gt;'\uFF3A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="732e1fdb20043b7a30607a5f809fab9e87fcf502" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は全角大文字のラテン文字A（ &lt;code&gt;'\uFF21'&lt;/code&gt; ）〜Z（ &lt;code&gt;'\uFF3A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="1eb711d346697b7b7850b866e9e676aabf15ad34" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、小文字のラテン文字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'z'&lt;/code&gt; あり、そのコードは &lt;code&gt;radix + 'a' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - 'a' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d4985c1ad0a3e0ebca4f21ca205a752bc0f9e0b1" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、小文字のラテン文字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'z'&lt;/code&gt; あり、そのコードは &lt;code&gt;radix + 'a' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="68f10c8de5bc4401e5a790943a291b720bd020f5" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、大文字のラテン文字 &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; の 1つであり、そのコードは &lt;code&gt;radix + 'A' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - 'A' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="6fe9401de4bc97d32c2a8728ad43d7b3a78b4e99" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、大文字のラテン文字 &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; の 1つであり、そのコードは &lt;code&gt;radix + 'A' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e076b3a7eea32ed0dc7dc561e359383aa33f70c6" translate="yes" xml:space="preserve">
          <source>The character offset in the original text corresponding to the collation element that will be returned by the next call to next().</source>
          <target state="translated">next()の次の呼び出 し で返 さ れ る 照合要素に対応す る 元のテキス ト 内のキ ャ ラ ク タ オ フ セ ッ ト 。</target>
        </trans-unit>
        <trans-unit id="3a9b42a0d833d89c7e1ee55beda05f13b1e9a664" translate="yes" xml:space="preserve">
          <source>The character pair carriage return-line feed (CR-LF) means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">文字ペアキャリッジ戻り行送り(CR-LF)とは、&quot;次の行の1列目に行く &quot;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="b579f6aaeea5b3484a7d5e231a38a6bf7bee9f9b" translate="yes" xml:space="preserve">
          <source>The character read, as an integer in the range 0 to 65535 (&lt;code&gt;0x00-0xffff&lt;/code&gt;), or -1 if the end of the stream has been reached</source>
          <target state="translated">読み取った文字 &lt;code&gt;0x00-0xffff&lt;/code&gt; （0x00-0xffff）の範囲の整数、またはストリームの終わりに達した場合は-1</target>
        </trans-unit>
        <trans-unit id="b93b563951bc4c436a534356e0d109368effc806" translate="yes" xml:space="preserve">
          <source>The character read, or -1 if the end of the stream has been reached</source>
          <target state="translated">読み込まれた文字、またはストリームの終了に達した場合は -1</target>
        </trans-unit>
        <trans-unit id="062f61a88c5bf0196c78c2d594f19eddc5f72256" translate="yes" xml:space="preserve">
          <source>The character sequence &lt;code&gt;\b&lt;/code&gt; does</source>
          <target state="translated">文字シーケンス &lt;code&gt;\b&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="11959f2e3bfff894e61388267b4d1d1ae5d3c0ba" translate="yes" xml:space="preserve">
          <source>The character used for the decimal point,</source>
          <target state="translated">小数点以下に使用する文字です。</target>
        </trans-unit>
        <trans-unit id="54a8a31a27f0561fd4d1442ec2d72b795702bba8" translate="yes" xml:space="preserve">
          <source>The character used to represent a decimal point may vary by culture. This method specifies the character to use.</source>
          <target state="translated">小数点を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="b22f85c7da2590e363e7946610cf7ddeef47bdd8" translate="yes" xml:space="preserve">
          <source>The character used to represent a negative number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">負の数を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="c3ef2b6ccf9ecfa410067e8549aece2c7416b126" translate="yes" xml:space="preserve">
          <source>The character used to represent a positive number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">正の数を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="26f9cc43b601122c17d2fd77c4849184eb0350df" translate="yes" xml:space="preserve">
          <source>The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.</source>
          <target state="translated">桁を表すために使用される文字は、文化によって異なる場合があります。このメソッドでは、使用するゼロ文字を指定します。</target>
        </trans-unit>
        <trans-unit id="a005f0c7035b2bf5efb6b65407b084e0584a607c" translate="yes" xml:space="preserve">
          <source>The character used to separate thousands groups,</source>
          <target state="translated">数千のグループを分けるために使われる文字。</target>
        </trans-unit>
        <trans-unit id="1edb505c87a80b6cf210744640fa626208a69fbc" translate="yes" xml:space="preserve">
          <source>The character with hexadecimal value &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">16進値 &lt;code&gt;0x&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="c84b095cdf29086ff619529958524051e0271274" translate="yes" xml:space="preserve">
          <source>The character with octal value &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">8進値 &lt;code&gt;0&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="82172894cc0762c353026f8ba1c885f10551b86a" translate="yes" xml:space="preserve">
          <source>The character-to-digit mapping is provided by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit(char, int)&lt;/code&gt;&lt;/a&gt; set to convert to radix 10. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">文字から数字へのマッピングは、基数10に変換するように設定された&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit(char, int)&lt;/code&gt; &lt;/a&gt;によって提供されます。文字列には無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="435d5181f703f0ee95ddc2bbae114562f2df9834" translate="yes" xml:space="preserve">
          <source>The characteristics of a given spliterator before splitting may differ from the characteristics after splitting. For specific examples see the characteristic values &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分割前の特定のスプリッターの特性は、分割後の特性と異なる場合があります。特定の例については、特性値&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="28dbbf3eadec14e8427d691728ace1fef26d6786" translate="yes" xml:space="preserve">
          <source>The characters in the string &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt;</source>
          <target state="translated">文字列 &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="30cd469e4707a34de20913da0df9601ef8663134" translate="yes" xml:space="preserve">
          <source>The characters listed here are used in non-localized patterns. Localized patterns use the corresponding characters taken from this formatter's &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object instead, and these characters lose their special status. Two exceptions are the currency sign and quote, which are not localized.</source>
          <target state="translated">ここにリストされている文字は、ローカライズされていないパターンで使用されています。ローカライズされたパターンは、このフォーマッタの &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトから取得した対応する文字を代わりに使用し、これらの文字は特別なステータスを失います。2つの例外は、ローカライズされていない通貨記号と引用です。</target>
        </trans-unit>
        <trans-unit id="99f9de68302286576fe3ff6f67c73b8ba839df97" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 引数の文字が順番に追加され、引数の長さだけこのシーケンスの長さが増加します。</target>
        </trans-unit>
        <trans-unit id="131a3485d970889cbd1a189397eb208a790f9256" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument s.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 引数の文字は、指定されたオフセットでこのシーケンスに順番に挿入され、元の位置よりも上にある文字が上に移動し、引数の長さだけこのシーケンスの長さが増加します。</target>
        </trans-unit>
        <trans-unit id="f293b85c86723e9d3bf915086157971fe6916192" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 引数の文字が順番に追加され、このシーケンスの長さが引数の長さだけ増加します。 &lt;code&gt;str&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="4608ed44802d04c08139f51bfa64aeda4d30bd74" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted into this sequence.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 引数の文字は、指定されたオフセットでこのシーケンスに順番に挿入され、元の位置より上の文字を上に移動し、引数の長さだけこのシーケンスの長さを増やします。 &lt;code&gt;str&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこのシーケンスに挿入されます。</target>
        </trans-unit>
        <trans-unit id="79d83c330c94a3aa502af5b18cdbaab8bce643e4" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to the contents of this &lt;code&gt;StringBuffer&lt;/code&gt;, increasing the length of this &lt;code&gt;StringBuffer&lt;/code&gt; by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 引数の文字は、この &lt;code&gt;StringBuffer&lt;/code&gt; のコンテンツに順番に追加され、引数の長さだけこの &lt;code&gt;StringBuffer&lt;/code&gt; の長さが増加します。 &lt;code&gt;sb&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこの &lt;code&gt;StringBuffer&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="7edc50505e461cd6fdf61331e374acd6a8173601" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to this sequence, increasing the length of this sequence by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this sequence.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 引数の文字がこのシーケンスに順番に追加され、このシーケンスの長さが引数の長さだけ増加します。 &lt;code&gt;sb&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこのシーケンスに追加されます。</target>
        </trans-unit>
        <trans-unit id="5790ab1c515a529581222483c7c357bb2b14a2d7" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are appended, in order, to the contents of this sequence. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">配列の引数の文字は、このシーケンスの内容に順に追加されます。このシーケンスの長さは、引数の長さの分だけ長くなります。</target>
        </trans-unit>
        <trans-unit id="44ce3e7b31696b9d255c03623ddf7ab6eef4959a" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are inserted into the contents of this sequence at the position indicated by &lt;code&gt;offset&lt;/code&gt;. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">配列引数の文字は、このシーケンスのコンテンツの &lt;code&gt;offset&lt;/code&gt; で示される位置に挿入されます。このシーケンスの長さは、引数の長さだけ増加します。</target>
        </trans-unit>
        <trans-unit id="a2e130797df8bfbb83081b72694f55f678e4cdeb" translate="yes" xml:space="preserve">
          <source>The characters to be appended should be valid Unicode characters as described in &lt;a href=&quot;character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. Note that supplementary characters may be composed of multiple 16-bit &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">追加される文字は、「&lt;a href=&quot;character#unicode&quot;&gt;Unicode文字表現」で&lt;/a&gt;説明されているように、有効なUnicode文字である必要があります。補足文字は、複数の16ビット &lt;code&gt;char&lt;/code&gt; 値で構成される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2a2ed22fca7e3896fc3bc86e089e89c687ca7a5b" translate="yes" xml:space="preserve">
          <source>The chars between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the char at index</source>
          <target state="translated">バッファの現在位置から限界までの間の文字があれば、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="2eb67236cbfc275c0a8a4f77193881e74832ba7b" translate="yes" xml:space="preserve">
          <source>The charset detected by this auto-detecting decoder, or &lt;code&gt;null&lt;/code&gt; if the charset has not yet been determined</source>
          <target state="translated">この自動検出デコーダーによって検出された文字セット。文字セットがまだ決定されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="024b1b6be1629de97b24774ad57c6eda0415a449" translate="yes" xml:space="preserve">
          <source>The charset used is the &lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;default charset&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用される&lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;文字セット&lt;/a&gt;は、Java仮想マシンのこのインスタンスのデフォルトの文字セットです。</target>
        </trans-unit>
        <trans-unit id="c8fd2435042ade2989834d385b33d7983d058f57" translate="yes" xml:space="preserve">
          <source>The children of an element must conform to one of a few simple patterns, described in the documentation for the &lt;code&gt;CHILD_*&lt;/code&gt; constants;</source>
          <target state="translated">要素の子は、 &lt;code&gt;CHILD_*&lt;/code&gt; 定数のドキュメントで説明されているいくつかの単純なパターンのいずれかに準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ed4829be2fc8be2f19b67a2fdfd7c5f6f6f875e" translate="yes" xml:space="preserve">
          <source>The choice should be made based on which makes the code more readable.</source>
          <target state="translated">どちらがコードをより読みやすくするかに基づいて選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="81abce803b2b576873096c050698e84ce7b2adb3" translate="yes" xml:space="preserve">
          <source>The chronology is determined. The chronology of the result is either the chronology that was parsed, or if no chronology was parsed, it is the chronology set on this class, or if that is null, it is &lt;code&gt;IsoChronology&lt;/code&gt;.</source>
          <target state="translated">年表が決定されます。結果の年表は、解析された年表であるか、年表が解析されなかった場合はこのクラスに設定された年表であるか、それがnullの場合は &lt;code&gt;IsoChronology&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a16292e267ee8e923f5ad107d6d91fc2c30e6c22" translate="yes" xml:space="preserve">
          <source>The chronology may be a system chronology or a chronology provided by the application via ServiceLoader configuration.</source>
          <target state="translated">年表は、システム年表であってもよいし、ServiceLoader構成を介してアプリケーションから提供される年表であってもよい。</target>
        </trans-unit>
        <trans-unit id="de1734dbd2ea904560b6d9da0267c5e3bc7d2d75" translate="yes" xml:space="preserve">
          <source>The chronology of the first date is used. The chronology of the second date is ignored, with the date being converted to the target chronology system before the calculation starts.</source>
          <target state="translated">最初の日付の年表が使用されます。2 番目の日付の年表は無視され、計算開始前にターゲット年表システムに変換されます。</target>
        </trans-unit>
        <trans-unit id="782f61b1130e60fa0fb037f8e4955382779eb421" translate="yes" xml:space="preserve">
          <source>The chunk-length when using chunked encoding streaming mode for output. A value of &lt;code&gt;-1&lt;/code&gt; means chunked encoding is disabled for output.</source>
          <target state="translated">出力にチャンクエンコーディングストリーミングモードを使用する場合のチャンク長。値 &lt;code&gt;-1&lt;/code&gt; は、チャンクエンコーディングが出力に対して無効であることを意味します。</target>
        </trans-unit>
        <trans-unit id="b625f56a9aa5a9cfd0dba0b4ba26b41f91c3d8d0" translate="yes" xml:space="preserve">
          <source>The cipher is initialized for one of the following four operations: encryption, decryption, key wrapping or key unwrapping, depending on the value of &lt;code&gt;opmode&lt;/code&gt;.</source>
          <target state="translated">暗号は、 &lt;code&gt;opmode&lt;/code&gt; の値に応じて、暗号化、復号化、鍵のラップ、または鍵のラップ解除の4つの操作のいずれかで初期化されます。</target>
        </trans-unit>
        <trans-unit id="a7062f5c31a9aefcc821d9d0c94628fe97a3602f" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;a href=&quot;sslengine#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">使用される暗号スイートは、「ハンドシェイク」と呼ばれる交渉プロセスによって確立されます。このプロセスの目的は、「セッション」を作成または再結合することです。これにより、時間の経過とともに多くの接続を保護できます。ハンドシェイクが完了したら、&lt;a href=&quot;sslengine#getSession--&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt;メソッドを使用してセッション属性にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b4991f1ddbcd690dbea95abe4922ab873f65fad7" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;em&gt;getSession&lt;/em&gt; method. The initial handshake on this connection can be initiated in one of three ways:</source>
          <target state="translated">使用される暗号スイートは、「ハンドシェイク」と呼ばれる交渉プロセスによって確立されます。このプロセスの目的は、「セッション」を作成または再結合することです。これにより、時間の経過とともに多くの接続を保護できます。ハンドシェイクが完了したら、&lt;em&gt;getSession&lt;/em&gt;メソッドを使用してセッション属性にアクセスできます。この接続の初期ハンドシェイクは、次の3つの方法のいずれかで開始できます。</target>
        </trans-unit>
        <trans-unit id="83ac4045333504efe877655bdd2b37e50cb50200" translate="yes" xml:space="preserve">
          <source>The cipher suites must have been listed by getSupportedCipherSuites() as being supported. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">暗号スイートは、サポート対象としてgetSupportedCipherSuites（）によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;suites&lt;/code&gt; パラメーターにリストされているスイートのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="b1dff289b9d5493dc4b93e102227e4045f5c8b60" translate="yes" xml:space="preserve">
          <source>The circular buffer into which incoming data is placed.</source>
          <target state="translated">受信データが配置されるサーキュラーバッファ。</target>
        </trans-unit>
        <trans-unit id="b2f5972a5da0630a3ea1ce16a259ac7e2bc027c1" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; contains &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">クラス&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;には、タイプ記述子に関係なくリンクできる&lt;a href=&quot;methodhandle#sigpoly&quot;&gt;シグネチャポリモーフィックメソッド&lt;/a&gt;が含まれています。通常、メソッドのリンケージには、タイプ記述子の完全一致が必要です。</target>
        </trans-unit>
        <trans-unit id="eab9997c80610f9c64f20b81263d0bcfad837f30" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;requiredmodelmbean&quot;&gt;&lt;code&gt;RequiredModelMBean&lt;/code&gt;&lt;/a&gt; provides a standard Model MBean implementation.</source>
          <target state="translated">&lt;a href=&quot;requiredmodelmbean&quot;&gt; &lt;code&gt;RequiredModelMBean&lt;/code&gt; &lt;/a&gt;クラスは、標準のModel MBean実装を提供します。</target>
        </trans-unit>
        <trans-unit id="e2db3d1c22a729a290e85045bcd4bfe1eb80a35a" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;streamsupport&quot;&gt;&lt;code&gt;StreamSupport&lt;/code&gt;&lt;/a&gt; has a number of low-level methods for creating a stream, all using some form of a &lt;a href=&quot;../spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt;. A spliterator is the parallel analogue of an &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;; it describes a (possibly infinite) collection of elements, with support for sequentially advancing, bulk traversal, and splitting off some portion of the input into another spliterator which can be processed in parallel. At the lowest level, all streams are driven by a spliterator.</source>
          <target state="translated">&lt;a href=&quot;streamsupport&quot;&gt; &lt;code&gt;StreamSupport&lt;/code&gt; &lt;/a&gt;クラスには、ストリームを作成するためのいくつかの低レベルのメソッドがあり、すべて何らかの形式の&lt;a href=&quot;../spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; を使用してい&lt;/a&gt;ます。Spliteratorは&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; の&lt;/a&gt;類似物です。これは、要素の（場合によっては無限の）コレクションを記述し、順次前進、バルクトラバーサル、および並列で処理できる別のスプリッターへの入力の一部の分割をサポートします。最下位レベルでは、すべてのストリームはスプリッターによって駆動されます。</target>
        </trans-unit>
        <trans-unit id="684f89869c3a9936722182499d56cdcd4cbcf40a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Date&lt;/code&gt; represents a specific instant in time, with millisecond precision.</source>
          <target state="translated">クラス &lt;code&gt;Date&lt;/code&gt; は、特定の瞬間をミリ秒の精度で表します。</target>
        </trans-unit>
        <trans-unit id="f304ba88bc19705d6cbe2036bbfe4f2d2fdb0d77" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and any subclasses that are not also subclasses of &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;checked exceptions&lt;/em&gt;. Checked exceptions need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">クラス &lt;code&gt;Exception&lt;/code&gt; と、&lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; の&lt;/a&gt;サブクラスではないすべてのサブクラスは、&lt;em&gt;チェック例外&lt;/em&gt;です。チェックされた例外は、メソッドまたはコンストラクターの実行によってスローされ、メソッドまたはコンストラクターの境界の外に伝播できる場合、メソッドまたはコンストラクターの &lt;code&gt;throws&lt;/code&gt; 句で宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="b63ddbb8255c4c5cc301a4d4eeaca5eac941924c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and its subclasses are a form of &lt;code&gt;Throwable&lt;/code&gt; that indicates conditions that a reasonable application might want to catch.</source>
          <target state="translated">クラス &lt;code&gt;Exception&lt;/code&gt; およびそのサブクラスは、合理的なアプリケーションがキャッチする可能性のある条件を示す &lt;code&gt;Throwable&lt;/code&gt; の形式です。</target>
        </trans-unit>
        <trans-unit id="690c5f3da265a415109fd3011e41d9d5ea3c3c22" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;FilterOutputStream&lt;/code&gt; itself simply overrides all methods of &lt;code&gt;OutputStream&lt;/code&gt; with versions that pass all requests to the underlying output stream. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; may further override some of these methods as well as provide additional methods and fields.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; クラス自体は、基になる出力ストリームにすべてのリクエストを渡すバージョンで、 &lt;code&gt;OutputStream&lt;/code&gt; のすべてのメソッドを単にオーバーライドします。 &lt;code&gt;FilterOutputStream&lt;/code&gt; のサブクラスは、これらのメソッドの一部をさらにオーバーライドし、追加のメソッドとフィールドを提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="aa85724edba155c1163af251f7e5b2a8e32a3730" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; クラスには、基本的な指数演算、対数、平方根、三角関数などの基本的な数値演算を実行するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="e1871b5ab32d2e12a446537bb7460fb5726d74b1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; provides commonly used mathematical functions such as sine, cosine, and square root. The classes &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;StringBuffer&lt;/code&gt;, and &lt;code&gt;StringBuilder&lt;/code&gt; similarly provide commonly used operations on character strings.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; クラスは、サイン、コサイン、平方根などの一般的に使用される数学関数を提供します。 &lt;code&gt;String&lt;/code&gt; 、 &lt;code&gt;StringBuffer&lt;/code&gt; 、および &lt;code&gt;StringBuilder&lt;/code&gt; クラスは、同様に文字列に対して一般的に使用される操作を提供します。</target>
        </trans-unit>
        <trans-unit id="3791863b130a0f270b24ef71c5a66eb3739e86ed" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Object&lt;/code&gt; does not itself implement the interface &lt;code&gt;Cloneable&lt;/code&gt;, so calling the &lt;code&gt;clone&lt;/code&gt; method on an object whose class is &lt;code&gt;Object&lt;/code&gt; will result in throwing an exception at run time.</source>
          <target state="translated">クラス &lt;code&gt;Object&lt;/code&gt; 自体は &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していないため、クラスが &lt;code&gt;Object&lt;/code&gt; であるオブジェクトで &lt;code&gt;clone&lt;/code&gt; メソッドを呼び出すと、実行時に例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="0624cc2712e980f0b92fbdb7083e89abc8924f4c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;StrictMath&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">クラス &lt;code&gt;StrictMath&lt;/code&gt; には、基本指数、対数、平方根、三角関数などの基本的な数値演算を実行するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="0402c5931dd701f0cf78b33e69e39d00d48ee21d" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;String&lt;/code&gt; includes methods for examining individual characters of the sequence, for comparing strings, for searching strings, for extracting substrings, and for creating a copy of a string with all characters translated to uppercase or to lowercase. Case mapping is based on the Unicode Standard version specified by the &lt;a href=&quot;character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; クラスには、シーケンスの個々の文字を検査するため、文字列を比較するため、文字列を検索するため、部分文字列を抽出するため、すべての文字を大文字または小文字に変換した文字列のコピーを作成するためのメソッドが含まれます。大文字と小文字のマッピングは、&lt;a href=&quot;character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;クラスで指定されたUnicode標準バージョンに基づいています。</target>
        </trans-unit>
        <trans-unit id="4f0e14063482da03a9517e0315c86c6d5e0da2a1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;ThreadDeath&lt;/code&gt; is specifically a subclass of &lt;code&gt;Error&lt;/code&gt; rather than &lt;code&gt;Exception&lt;/code&gt;, even though it is a &quot;normal occurrence&quot;, because many applications catch all occurrences of &lt;code&gt;Exception&lt;/code&gt; and then discard the exception.</source>
          <target state="translated">多くのアプリケーションは &lt;code&gt;Exception&lt;/code&gt; のすべての発生をキャッチして例外を破棄するため、「通常の発生」であるにもかかわらず、 &lt;code&gt;ThreadDeath&lt;/code&gt; クラスは具体的には &lt;code&gt;Exception&lt;/code&gt; ではなく &lt;code&gt;Error&lt;/code&gt; のサブクラスです。</target>
        </trans-unit>
        <trans-unit id="0ed9f55caeaa2d309bd40ff62b6a14ba0f7f4c18" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection.</source>
          <target state="translated">Authenticator クラスは、ネットワーク接続の認証を取得する方法を知っているオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="73f3f95a1b4468727a1f47724f198e0b3a19ce9c" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information.</source>
          <target state="translated">クラス Authenticator は、ネットワーク接続の認証を取得する方法を知っているオブジェクトを表します。通常、これはユーザーに情報を要求することで行われます。</target>
        </trans-unit>
        <trans-unit id="3ec0063817bf0bc470163e5295aa4de585ae7fe9" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator.</source>
          <target state="translated">クラスPasswordAuthenticationは、Authenticatorが使用するデータホルダーです。</target>
        </trans-unit>
        <trans-unit id="5dab3bdf681d65e4650c5df8d97994c50a3f16e6" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator. It is simply a repository for a user name and a password.</source>
          <target state="translated">クラスPasswordAuthenticationはAuthenticatorが使用するデータホルダーです。これは単純にユーザー名とパスワードのリポジトリです。</target>
        </trans-unit>
        <trans-unit id="26afb3f34e19b6dd2d9b7a7cbd9df2a19bd4ff5c" translate="yes" xml:space="preserve">
          <source>The class also has methods for reading files, streams, and URLs that contain standard MIDI file data or soundbanks. You can query the &lt;code&gt;MidiSystem&lt;/code&gt; for the format of a specified MIDI file.</source>
          <target state="translated">このクラスには、標準のMIDIファイルデータまたはサウンドバンクを含むファイル、ストリーム、およびURLを読み取るためのメソッドもあります。 &lt;code&gt;MidiSystem&lt;/code&gt; に指定したMIDIファイルの形式を問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="8eec387ca6bcd129da5be587045e11a4e69c7d0e" translate="yes" xml:space="preserve">
          <source>The class also provides additional fields and methods for implementing a concrete calendar system outside the package. Those fields and methods are defined as &lt;code&gt;protected&lt;/code&gt;.</source>
          <target state="translated">このクラスは、パッケージの外部にある具体的なカレンダーシステムを実装するための追加のフィールドとメソッドも提供します。これらのフィールドとメソッドは、 &lt;code&gt;protected&lt;/code&gt; されていると定義されています。</target>
        </trans-unit>
        <trans-unit id="a83c31be57eb77d002f6fb8561dbfe1c5447ab07" translate="yes" xml:space="preserve">
          <source>The class also provides two methods to map between its constants and the corresponding Calendar constants.</source>
          <target state="translated">また、このクラスには、その定数と対応するカレンダ定数の間をマッピングするための2つのメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="9d313501a82f92b26a3e6cf1bf80484b0ab03c45" translate="yes" xml:space="preserve">
          <source>The class contains unknown datatypes</source>
          <target state="translated">クラスには未知のデータ型が含まれています</target>
        </trans-unit>
        <trans-unit id="13d93d9b734d66221117665181f602c5532671b0" translate="yes" xml:space="preserve">
          <source>The class declares methods with the name given by &lt;code&gt;invokedName&lt;/code&gt;, and the signature given by &lt;code&gt;samMethodType&lt;/code&gt; and additional signatures given by &lt;code&gt;bridges&lt;/code&gt;</source>
          <target state="translated">クラスは、によって与えられた名前のメソッド宣言 &lt;code&gt;invokedName&lt;/code&gt; 、によって与えられた署名 &lt;code&gt;samMethodType&lt;/code&gt; によって与えられ、追加の署名 &lt;code&gt;bridges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b60cd2a193307541db7fa376009f616ad9f49e04" translate="yes" xml:space="preserve">
          <source>The class does not have an accessible no-arg constructor</source>
          <target state="translated">このクラスにはアクセス可能な no-arg コンストラクタがありません。</target>
        </trans-unit>
        <trans-unit id="cff5ea3c8c8e7aecbb4dbea85724a31e5e8e8645" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility since J2SE 1.4.</source>
          <target state="translated">J2SE 1.4以降のシリアライズ互換性を示すために設定されているクラスフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="3e56e7ff07bb8781fefafcc3605938ed932d77d3" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility with a previous version of the class.</source>
          <target state="translated">以前のバージョンのクラスとのシリアライズ互換性を示すために設定されているクラスのフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="a00aa6be9da30f0a48df242c586c275d828683b4" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility.</source>
          <target state="translated">シリアライズ互換性を示すために設定されているクラスのフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="135e02082cd84a88b5861571042a7fe763a97717" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream.</source>
          <target state="translated">このクラスは、バッファリングされた出力ストリームを実装しています。</target>
        </trans-unit>
        <trans-unit id="8460a541a46a3829ad6445b112d205f85871207c" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream. By setting up such an output stream, an application can write bytes to the underlying output stream without necessarily causing a call to the underlying system for each byte written.</source>
          <target state="translated">このクラスは、バッファリングされた出力ストリームを実装しています。このような出力ストリームを設定することで、アプリケーションは、書き込まれたバイトごとに基礎となるシステムへの呼び出しを必ずしも発生させることなく、基礎となる出力ストリームにバイトを書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="3dfc1a1ea31b195bebaa4b8045733e43e88ceaec" translate="yes" xml:space="preserve">
          <source>The class implements the interface named by the return type of &lt;code&gt;invokedType&lt;/code&gt; and any interfaces named by &lt;code&gt;markerInterfaces&lt;/code&gt;</source>
          <target state="translated">クラス実装の戻り型によって指定インターフェース &lt;code&gt;invokedType&lt;/code&gt; によって命名任意インターフェイス &lt;code&gt;markerInterfaces&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89aaf05f9154c5d639e3b220e9a279db91a285c9" translate="yes" xml:space="preserve">
          <source>The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, which controls whether non-public members can be accessed.</source>
          <target state="translated">このクラスは最大レベルのアクセス許可を意味しますが、アクセス権は、非公開メンバーにアクセスできるかどうかを制御するビットマスク&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;によってさらに制限される場合があります。</target>
        </trans-unit>
        <trans-unit id="07a936057fd298f90ef4620016e6ba3d49dac02a" translate="yes" xml:space="preserve">
          <source>The class is designed so that there's never more than one &lt;code&gt;Currency&lt;/code&gt; instance for any given currency. Therefore, there's no public constructor. You obtain a &lt;code&gt;Currency&lt;/code&gt; instance using the &lt;code&gt;getInstance&lt;/code&gt; methods.</source>
          <target state="translated">このクラスは、特定の通貨に対して複数の &lt;code&gt;Currency&lt;/code&gt; インスタンスが存在しないように設計されています。したがって、パブリックコンストラクターはありません。 &lt;code&gt;getInstance&lt;/code&gt; メソッドを使用して &lt;code&gt;Currency&lt;/code&gt; インスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="4ba87f5fbbddbc4d6864e72595ed2ed1025acbc6" translate="yes" xml:space="preserve">
          <source>The class is examined for getters using the conventions &lt;a href=&quot;#naming-conv&quot;&gt;above&lt;/a&gt;. (Getters must be public instance methods.) If there are no getters, or if any getter has a type that is not convertible, then &lt;em&gt;J&lt;/em&gt; is not convertible.</source>
          <target state="translated">&lt;a href=&quot;#naming-conv&quot;&gt;上記&lt;/a&gt;の規則を使用して、クラスはゲッターについて検査されます。（ゲッターはパブリックインスタンスメソッドである必要があります。）ゲッターがない場合、またはゲッターに変換できない型がある場合、&lt;em&gt;J&lt;/em&gt;は変換できません。</target>
        </trans-unit>
        <trans-unit id="6a46a2bceba51e26038bcf8bf9c04983b0c81d03" translate="yes" xml:space="preserve">
          <source>The class may override methods from &lt;code&gt;Object&lt;/code&gt;, and may implement methods related to serialization.</source>
          <target state="translated">クラスは &lt;code&gt;Object&lt;/code&gt; のメソッドをオーバーライドし、シリアル化に関連するメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="b6eb7d47c9875da75274f0ffa32e24741e2b6b2d" translate="yes" xml:space="preserve">
          <source>The class name of the factory that creates the resulting context has the naming convention</source>
          <target state="translated">結果のコンテキストを作成するファクトリのクラス名には、命名規則があります。</target>
        </trans-unit>
        <trans-unit id="32fd5d586f202bbf77341f1d00fc8fc880091605" translate="yes" xml:space="preserve">
          <source>The class name, member and object name parameters define a target name of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. This will be the result of &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;Permission.getName()&lt;/code&gt;&lt;/a&gt; on the resultant MBeanPermission.</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名のパラメーターは、「 &lt;code&gt;className#member[objectName]&lt;/code&gt; 」という形式のターゲット名を定義します。各部分はオプションです。これは、結果のMBeanPermission に対する&lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;Permission.getName()&lt;/code&gt; &lt;/a&gt;の結果です。</target>
        </trans-unit>
        <trans-unit id="e7f527e6a2e74f94312874345a4b4bb09466dc5d" translate="yes" xml:space="preserve">
          <source>The class name, member, and object name can be written together as a single string, which is the &lt;em&gt;name&lt;/em&gt; of this permission. The name of the permission is the string returned by &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;. The format of the string is:</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名は、この権限の&lt;em&gt;名前&lt;/em&gt;である単一の文字列として一緒に書き込むことができます。権限の名前は、&lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;によって返される文字列です。文字列の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="24463e4dd2161bdd8170d4d26693be82652a2840" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when invoking a constructor or operation, or getting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when setting an attribute are specified by the field &lt;a href=&quot;#setExceptions&quot;&gt;&lt;code&gt;setExceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターまたは操作の呼び出し時、または属性の取得時にスローされる可能性のある例外のクラス名。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。属性の設定時にスローされる例外は、フィールド&lt;a href=&quot;#setExceptions&quot;&gt; &lt;code&gt;setExceptions&lt;/code&gt; で&lt;/a&gt;指定されます。</target>
        </trans-unit>
        <trans-unit id="4f558354362711f7f870366ca77457f25ec982e1" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when setting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when getting an attribute are specified by the field &lt;a href=&quot;#exceptions&quot;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性の設定時にスローされる可能性のある例外のクラス名。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。属性の取得時にスローされる&lt;a href=&quot;#exceptions&quot;&gt; &lt;code&gt;exceptions&lt;/code&gt; &lt;/a&gt;は、フィールドexceptionsで指定されます。</target>
        </trans-unit>
        <trans-unit id="67a17c362d3e1b1c120d30ec1c8988dcf8590e9f" translate="yes" xml:space="preserve">
          <source>The class of the implementation of this Standard MBean (or MXBean).</source>
          <target state="translated">この標準MBean(またはMXBean)の実装のクラス。</target>
        </trans-unit>
        <trans-unit id="aafaead25ed357736f7fa6d9e43fd8e44d23e040" translate="yes" xml:space="preserve">
          <source>The class of the mismatched argument</source>
          <target state="translated">不一致引数のクラス</target>
        </trans-unit>
        <trans-unit id="9f9c1e95a29aed3cd3487891bc5c2b07f99d1d46" translate="yes" xml:space="preserve">
          <source>The class or interface name</source>
          <target state="translated">クラスまたはインターフェイス名</target>
        </trans-unit>
        <trans-unit id="0429235745a3b457b0c546403aed40bddedcce9d" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; を含むクラスのみの形式の &lt;code&gt;List&lt;/code&gt; 。この &lt;code&gt;List&lt;/code&gt; は&lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;変更できません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="951f885ca705190ee66dda1a5c90080539c69c07" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">クラス&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;実装 &lt;code&gt;TemporalAdjuster&lt;/code&gt; を、したがって、この方法では、日付、時間またはオフセットを変更するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="91f35168bb8ac0d14680d3e7a283896058efa32f" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;クラスは &lt;code&gt;TemporalAdjuster&lt;/code&gt; を実装しているため、このメソッドを使用して、日付、時刻、またはオフセットを変更できます。</target>
        </trans-unit>
        <trans-unit id="667e2b33474bdab83bd95b94b5fc3ee8acc932ff" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the time or offset:</source>
          <target state="translated">クラス&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;TemporalAdjuster&lt;/code&gt; を実装しているため、このメソッドを使用して時間またはオフセットを変更できます。</target>
        </trans-unit>
        <trans-unit id="80a1b2807e3c199a522ca9fc26f06689a6f68c38" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package.</source>
          <target state="translated">本パッケージのクラスとインタフェースは、java.security パッケージのクラスに取って代わられています。</target>
        </trans-unit>
        <trans-unit id="ed5a6af1e3f7c3411e84709c3cbf34764ac2efbf" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package. See that package and, for example, java.security.Permission for details.</source>
          <target state="translated">本パッケージのクラスとインタフェースは、java.security パッケージのクラスに取って代わられています。詳細については、そのパッケージと、例えば java.security.Permission を参照してください。</target>
        </trans-unit>
        <trans-unit id="8cc8dc37d5486db6b4ddadb26ec74de8ff37fc86" translate="yes" xml:space="preserve">
          <source>The classes defined here represent the principle date-time concepts, including instants, durations, dates, times, time-zones and periods. They are based on the ISO calendar system, which is the</source>
          <target state="translated">ここで定義されているクラスは、インスタント、デュレーション、日付、時間、タイムゾーン、ピリオドなどの原則的な日付時間の概念を表しています。これらは、ISOのカレンダーシステムに基づいています。</target>
        </trans-unit>
        <trans-unit id="f1ddc966da7eb209890b6b98e471fd102a3dbfd7" translate="yes" xml:space="preserve">
          <source>The classes that are loaded are by default granted permission only to access the URLs specified when the URLClassLoader was created.</source>
          <target state="translated">ロードされるクラスは、デフォルトではURLClassLoaderが作成された際に指定されたURLへのアクセスのみが許可されています。</target>
        </trans-unit>
        <trans-unit id="a4f20c0c81d3fcf5f113e63defaf1a7e721b263f" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。コレクターは &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; を生成します。そのキーは、分類関数を入力要素に適用した結果の値であり、対応する値は、分類関数の下で関連するキーにマップする入力要素を含む &lt;code&gt;List&lt;/code&gt; です。 。</target>
        </trans-unit>
        <trans-unit id="f7b6ff72cdcfcbf34cc479a3dd8ccba88f465aff" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。コレクターは &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; を生成します。そのキーは分類要素を入力要素に適用した結果の値であり、対応する値は分類要素の下の関連するキーにマップする入力要素を含む &lt;code&gt;List&lt;/code&gt; です。 。</target>
        </trans-unit>
        <trans-unit id="8dcf0f47762fae0e87c464f9581d648ea3ae1c54" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The downstream collector operates on elements of type &lt;code&gt;T&lt;/code&gt; and produces a result of type &lt;code&gt;D&lt;/code&gt;. The resulting collector produces a &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。ダウンストリームコレクターは、タイプ &lt;code&gt;T&lt;/code&gt; の要素を操作し、タイプ &lt;code&gt;D&lt;/code&gt; の結果を生成します。結果のコレクターは &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d66802f538547bc49310f369abc46f7fe953b16a" translate="yes" xml:space="preserve">
          <source>The client can always specify any &lt;a href=&quot;jobpriority&quot;&gt;&lt;code&gt;JobPriority&lt;/code&gt;&lt;/a&gt; value from 1 to 100 for a job. However, the Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">クライアントは、ジョブに対して常に1〜100の任意の&lt;a href=&quot;jobpriority&quot;&gt; &lt;code&gt;JobPriority&lt;/code&gt; &lt;/a&gt;値を指定できます。ただし、Print Serviceインスタンスは100未満の異なるジョブ優先度レベルをサポートする場合があります。この場合、Print Serviceインスタンスは、クライアントが指定したジョブの優先度の値を、サポートされているジョブの優先度のレベルの1つに自動的にマッピングし、100のジョブの優先度の値を使用可能なジョブの優先度のレベルで均等に分割します。</target>
        </trans-unit>
        <trans-unit id="f54e74b6cf6d674d95124793f818122cb381114e" translate="yes" xml:space="preserve">
          <source>The client can always specify any job priority value from 1 to 100 for a job. However, a Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">クライアントは、ジョブに対して常に1から100までの任意のジョブ優先度値を指定することができる。しかし、プリントサービス・インスタンスでは、サポートされているジョブ優先度が100よりも少ない場合があります。このような場合、Print Serviceインスタンスは、クライアントが指定したジョブ優先度値をサポートされているジョブ優先度レベルの1つに自動的にマッピングし、100のジョブ優先度値を利用可能なジョブ優先度レベル間で均等に分割します。</target>
        </trans-unit>
        <trans-unit id="e36327ca2d0b7f027e93c0c6830f31c98a8858f0" translate="yes" xml:space="preserve">
          <source>The client code shown here is slightly more complicated for the MXBean client. But, if the client does in fact know the model, here the interface &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; and the class &lt;code&gt;MemoryUsage&lt;/code&gt;, then it can construct a &lt;em&gt;proxy&lt;/em&gt;. This is the recommended way to interact with managed objects when you know the model beforehand, regardless of whether you are using Standard MBeans or MXBeans:</source>
          <target state="translated">ここに示されているクライアントコードは、MXBeanクライアントでは少し複雑です。ただし、クライアントが実際にモデルを知っている場合（ここではインターフェース &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; およびクラス &lt;code&gt;MemoryUsage&lt;/code&gt; )、クライアントは&lt;em&gt;プロキシ&lt;/em&gt;を構築できます。これは、Standard MBeanとMXBeanのどちらを使用しているかに関係なく、モデルが事前にわかっている場合に管理対象オブジェクトと対話するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="c82a5d98728343602350f3acf815500ea1c5ee2c" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector.</source>
          <target state="translated">JMX APIコネクタのクライアントエンド。</target>
        </trans-unit>
        <trans-unit id="b4488646dd7bc568328ca00d7c96cdc5b511b54e" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector. An object of this type can be used to establish a connection to a connector server.</source>
          <target state="translated">JMX API コネクタのクライアント側。このタイプのオブジェクトは、コネクタサーバへの接続を確立するために使用できます。</target>
        </trans-unit>
        <trans-unit id="f6d8cb5abcc9dba2b35caaa1100aa8007bd4f05d" translate="yes" xml:space="preserve">
          <source>The client must itself perform all plain text print data formatting not addressed by the above requirements.</source>
          <target state="translated">クライアントは、上記の要件に対応していないすべてのプレーンテキスト印刷データの書式設定を自分自身で行わなければならない。</target>
        </trans-unit>
        <trans-unit id="61622044c23d1dc5bf6a5c87f1e0670101adac2f" translate="yes" xml:space="preserve">
          <source>The clock implementation provided here is based on &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;. That method provides little to no guarantee about the accuracy of the clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</source>
          <target state="translated">ここで提供されるクロックの実装は、&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; に&lt;/a&gt;基づいています。この方法では、クロックの精度についてほとんどまたはまったく保証されません。より正確なクロックを必要とするアプリケーションは、NTPサーバーなどの異なる外部クロックを使用して、この抽象クラス自体を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="25e6815aa00a334e2bd9ee8bdf69f008eb1d1606" translate="yes" xml:space="preserve">
          <source>The clock sequence of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のクロックシーケンス</target>
        </trans-unit>
        <trans-unit id="4927698d61ddc5d19e93d88deb9e42d15dbacd87" translate="yes" xml:space="preserve">
          <source>The clock sequence value associated with this UUID.</source>
          <target state="translated">このUUIDに関連付けられたクロックシーケンス値。</target>
        </trans-unit>
        <trans-unit id="5d1b1f6ea1a364b40310f013d2e4ede7c72b865f" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-am-pm.</source>
          <target state="translated">時計の時間帯の午前午後。</target>
        </trans-unit>
        <trans-unit id="d9d6945b9a1ccb1b98abde4cb5b49e528dae6fda" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-day.</source>
          <target state="translated">時計の時間帯のこと。</target>
        </trans-unit>
        <trans-unit id="67da0df2a20add6c7e78cab2dd3884834bc5386c" translate="yes" xml:space="preserve">
          <source>The close method will perform a &lt;code&gt;flush&lt;/code&gt; and then close the &lt;code&gt;Handler&lt;/code&gt;. After close has been called this &lt;code&gt;Handler&lt;/code&gt; should no longer be used. Method calls may either be silently ignored or may throw runtime exceptions.</source>
          <target state="translated">closeメソッドは、 &lt;code&gt;flush&lt;/code&gt; を実行してから &lt;code&gt;Handler&lt;/code&gt; を閉じます。closeが呼び出された後、この &lt;code&gt;Handler&lt;/code&gt; は使用されなくなります。メソッド呼び出しは、警告なしに無視されるか、実行時例外をスローする場合があります。</target>
        </trans-unit>
        <trans-unit id="b1433e4121635551dd14010c6b704bba7b5e5e75" translate="yes" xml:space="preserve">
          <source>The code base URL.</source>
          <target state="translated">コードベースのURLです。</target>
        </trans-unit>
        <trans-unit id="56ce6ef2114da8b3480773fc41a5bba91e0be358" translate="yes" xml:space="preserve">
          <source>The code fragment should be context free and must be a legal Java expression as specified by the JLS.</source>
          <target state="translated">コードフラグメントはコンテキストフリーであるべきであり、JLS で指定された合法的な Java 式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7551fda94d924a51c214eacfb5d20ee1569ef738" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;pagedresultscontrol&quot;&gt;&lt;code&gt;PagedResultsControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;pagedresultscontrol&quot;&gt; &lt;code&gt;PagedResultsControl&lt;/code&gt; &lt;/a&gt;のコードサンプルは、このクラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2d9000efa3a911a92cbde4578c40faa3825deb27" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;sortcontrol&quot;&gt;&lt;code&gt;SortControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;sortcontrol&quot;&gt; &lt;code&gt;SortControl&lt;/code&gt; &lt;/a&gt;のコードサンプルは、このクラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="30d83691e8c4e45b8fe52bdd6fd725a184c8ca07" translate="yes" xml:space="preserve">
          <source>The collation table is composed of a list of collation rules, where each rule is of one of three forms:</source>
          <target state="translated">照合テーブルは、照合規則のリストから構成され、各規則は3つの形態のうちの1つである。</target>
        </trans-unit>
        <trans-unit id="7c1827d597c9c77ae6e1e11339356cf0f6e7e02e" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">コレクションはマップに基づいているため、マップへの変更はコレクションに反映され、その逆も同様です。コレクションの反復処理の進行中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作を除く）、反復の結果は定義されていません。コレクションは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Collection.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="08a9f493e12bc421d71667070210c7e0b80be588" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">コレクションはマップに基づいているため、マップへの変更はコレクションに反映され、その逆も同様です。コレクションは、要素の削除をサポートします。これは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Collection.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除します。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="0ae6cac46e4d7c9b4fdc7934d10d1e2d1a73c597" translate="yes" xml:space="preserve">
          <source>The collection is created the first time this method is called, and returned in response to all subsequent calls. No synchronization is performed, so there is a slight chance that multiple calls to this method will not all return the same collection.</source>
          <target state="translated">コレクションは、このメソッドが最初に呼び出されたときに作成され、その後のすべての呼び出しに応答して返されます。同期は行われないので、このメソッドを複数回呼び出してもすべて同じコレクションが返されない可能性がわずかにあります。</target>
        </trans-unit>
        <trans-unit id="8bf124bacc13ad53500c93100391bd683fd0dda8" translate="yes" xml:space="preserve">
          <source>The collection usage threshold crossing checking is enabled in this memory pool if the threshold is set to a positive value. The collection usage threshold crossing checking is disabled if it is set to zero.</source>
          <target state="translated">このメモリプールでは、閾値が正の値に設定されている場合、コレクション使用閾値の交差チェックが有効になります。コレクション使用閾値の交差チェックは、ゼロに設定されている場合は無効になります。</target>
        </trans-unit>
        <trans-unit id="9156660a2ac7aa98ef313cabffe7060e8aa35409" translate="yes" xml:space="preserve">
          <source>The collection usage threshold is designed for monitoring the memory usage after the Java virtual machine has expended effort in reclaiming memory space. The collection usage could also be monitored by the polling and threshold notification mechanism described above for the &lt;a href=&quot;#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; in a similar fashion.</source>
          <target state="translated">コレクション使用量しきい値は、Java仮想マシンがメモリ領域の再利用に労力を費やした後のメモリ使用量を監視するために設計されています。コレクションの使用状況も、同様の方法で、&lt;a href=&quot;#UsageThreshold&quot;&gt;使用状況のしきい値&lt;/a&gt;について上記のポーリングおよびしきい値通知メカニズムによって監視できます。</target>
        </trans-unit>
        <trans-unit id="0e2883e94761fa22e846a8f32267f5142a06c8d2" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collection's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">コレクションの反復子は、対応するキーの昇順で値を返します。コレクションのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに対応するキーの昇順であるエンカウンター順で&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="ea1bd030966840638731efedafac9a0ec7782728" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collections's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">コレクションの反復子は、対応するキーの昇順で値を返します。コレクションのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;対応するキーの昇順ている出会いのために、。</target>
        </trans-unit>
        <trans-unit id="e274436db22ea8e689c8f92c1a625157a2ad4161" translate="yes" xml:space="preserve">
          <source>The collector has the &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; characteristic, and;</source>
          <target state="translated">コレクターには&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt; &lt;/a&gt;特性があり、</target>
        </trans-unit>
        <trans-unit id="91ec48482e2398b213123b4670de324887cddaf6" translate="yes" xml:space="preserve">
          <source>The colon character &lt;code&gt;':'&lt;/code&gt; (&lt;code&gt;'\u003a'&lt;/code&gt;, &lt;small&gt;COLON&lt;/small&gt;), and</source>
          <target state="translated">コロン文字 &lt;code&gt;':'&lt;/code&gt; （ &lt;code&gt;'\u003a'&lt;/code&gt; 、&lt;small&gt;COLON&lt;/small&gt;）、および</target>
        </trans-unit>
        <trans-unit id="9fd1379c9afe56acbb2fb69be0fad0a683d98a4f" translate="yes" xml:space="preserve">
          <source>The colon separator need not be present if the request headers list is empty. No white-space is permitted in the actions string. The action strings supplied to the URLPermission constructors are case-insensitive and are normalized by converting method names to upper-case and header names to the form defines in RFC2616 (lower case with initial letter of each word capitalized). Either list can contain a wild-card '*' character which signifies all request methods or headers respectively.</source>
          <target state="translated">リクエストヘッダリストが空の場合、コロン区切り文字は必要ありません。アクション文字列には空白は許されません。URLPermission コンストラクタに渡されるアクション文字列は大文字小文字を区別せず、 メソッド名を大文字に、ヘッダ名を RFC2616 で定義されている形式に変換することで正規化されます (小文字で各単語の頭文字を大文字にしたもの)。いずれのリストにも、ワイルドカードの '*' 文字を含めることができます。これはそれぞれすべてのリクエストメソッドやヘッダを意味します。</target>
        </trans-unit>
        <trans-unit id="2e641ea6fe64f0b8a19aa6317da464694488bcba" translate="yes" xml:space="preserve">
          <source>The column number. Returns -1 if a column number is unavailable.</source>
          <target state="translated">列番号。カラム番号が利用できない場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="f59b440a5dce5861e4bd83979917698dd94ef608" translate="yes" xml:space="preserve">
          <source>The combination day-of-week and day-of-month (&quot;Friday the 13th&quot;) should not implement this interface. It does not represent a contiguous set of fields, as days to weeks overlaps days to months.</source>
          <target state="translated">曜日と月の組み合わせ(「13日の金曜日」)は、このインタフェースを実装すべきではありません。日から週への日数が日から月への日数と重なるため、フィールドの連続したセットを表すものではありません。</target>
        </trans-unit>
        <trans-unit id="9a95804740becaea21fb0fb96083c1c9566eaf00" translate="yes" xml:space="preserve">
          <source>The combination of the 'before' date-time and offset represents the same instant as the 'after' date-time and offset.</source>
          <target state="translated">before」の日付時間とオフセットの組み合わせは、「after」の日付時間とオフセットの組み合わせと同じ瞬間を表します。</target>
        </trans-unit>
        <trans-unit id="eeb7f12dcdc1b38ae56fe22eab8edc4e52262d56" translate="yes" xml:space="preserve">
          <source>The combine method takes two arguments. The first argument represents an array of ProtectionDomains from the current execution Thread, since the most recent call to &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;. If no call to doPrivileged was made, then the first argument will contain all the ProtectionDomains from the current execution Thread. The second argument represents an array of inherited ProtectionDomains, which may be &lt;code&gt;null&lt;/code&gt;. ProtectionDomains may be inherited from a parent Thread, or from a privileged context. If no call to doPrivileged was made, then the second argument will contain the ProtectionDomains inherited from the parent Thread. If one or more calls to doPrivileged were made, and the most recent call was to doPrivileged(action, context), then the second argument will contain the ProtectionDomains from the privileged context. If the most recent call was to doPrivileged(action), then there is no privileged context, and the second argument will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Combineメソッドは2つの引数を取ります。最初の引数は、 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; の最新の呼び出し以降、現在の実行スレッドからのProtectionDomainsの配列を表します。doPrivilegedが呼び出されなかった場合、最初の引数には、現在の実行スレッドからのすべてのProtectionDomainが含まれます。2番目の引数は、 &lt;code&gt;null&lt;/code&gt; の可能性がある継承されたProtectionDomainの配列を表します。ProtectionDomainsは、親スレッドから、または特権付きコンテキストから継承できます。doPrivilegedが呼び出されなかった場合、2番目の引数には、親スレッドから継承されたProtectionDomainが含まれます。doPrivilegedへの1つ以上の呼び出しが行われ、最新の呼び出しがdoPrivileged（action、context）への呼び出しであった場合、2番目の引数には特権コンテキストからのProtectionDomainsが含まれます。最新の呼び出しがdoPrivileged（action）であった場合、特権コンテキストはなく、2番目の引数は &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="7a16f5e65d2f83a96835a56079d0447983bf6e15" translate="yes" xml:space="preserve">
          <source>The comment element is a place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">comment要素は、コード・ジェネレーターが生成されたコードに含めたいコメントのプレース・ホルダーです。</target>
        </trans-unit>
        <trans-unit id="7cc3e34fc55f9b2b57ce4d53e61e6d6e9418fed9" translate="yes" xml:space="preserve">
          <source>The common definition of a week that starts on Sunday and the first week has a minimum of 1 day.</source>
          <target state="translated">一般的な定義としては、日曜日から始まる週で、最初の週は最低でも1日はあるということです。</target>
        </trans-unit>
        <trans-unit id="54934fd2df13abeb43116e909517bf162f57134b" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types.</source>
          <target state="translated">すべてのアノテーション・タイプによって拡張された共通のインターフェイス。</target>
        </trans-unit>
        <trans-unit id="1314aec14eff7f99258639556043ab2235382bb2" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types. Note that an interface that manually extends this one does</source>
          <target state="translated">すべてのアノテーション・タイプによって拡張された共通のインターフェイス。このインターフェイスを手動で拡張したインターフェイスは</target>
        </trans-unit>
        <trans-unit id="be8eec3709c1b7ba220252bd3ee06454fbc63cce" translate="yes" xml:space="preserve">
          <source>The common pool is by default constructed with default parameters, but these may be controlled by setting three &lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;system properties&lt;/a&gt;:</source>
          <target state="translated">共通プールはデフォルトでデフォルトのパラメーターで構築されますが、これらは3つの&lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;システムプロパティを&lt;/a&gt;設定することで制御できます。</target>
        </trans-unit>
        <trans-unit id="40472696caa6671c3ae2d8a764be134346c666a2" translate="yes" xml:space="preserve">
          <source>The comparison is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="7544553cbef2741d51df7e2448ec9b3d30bfc038" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the UTC equivalent instant, then on the local time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初にUTCに相当する瞬間に基づいて行われ、次に現地時間に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="a9f1c042dcb61fa1cd287abce64f4635e9b92eae" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the instant, then on the local date-time, then on the zone ID, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初にインスタント、次にローカルの日時、次にゾーンID、次に年代順に基づいています。&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="ec2151de3ebbbe7f15e922252583edd296181fa3" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初に基になるタイムライン日付に基づいて行われ、次に年代順に行われます。これは、&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="85c7e6fc1e00fe1d64177c565a13d627754ef76f" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date-time, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初に基礎となるタイムラインの日時に基づいて行われ、次に年代順に行われます。これは、&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="bc9c161855c82e99812fb51724a912bec4af797a" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the value of the year, then on the value of the month. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初は年の値に基づいて行われ、次に月の値に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="a8022e23d05bb51e89c64c6b0e9af30219a8fdac" translate="yes" xml:space="preserve">
          <source>The comparison is based first on value of the month, then on the value of the day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、まず月の値に基づいて行われ、次に日の値に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="1235f74256f8786279bbc14ae61bc796d7600d41" translate="yes" xml:space="preserve">
          <source>The comparison is based on the ID.</source>
          <target state="translated">比較するのはIDを元にしています。</target>
        </trans-unit>
        <trans-unit id="fc65394da81a692e7946a055c22f7463a6a84557" translate="yes" xml:space="preserve">
          <source>The comparison is based on the amount of the offset in seconds. This is equivalent to a comparison by ID.</source>
          <target state="translated">秒単位のオフセット量で比較します。これはIDによる比較と同等です。</target>
        </trans-unit>
        <trans-unit id="b18c89c7d60fa0dae17d459068542c53d7e25964" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the object.</source>
          <target state="translated">比較は、対象物の全体の状態を基準にしています。</target>
        </trans-unit>
        <trans-unit id="5af66c17bf64182c96c3f385062b0126edaa4e54" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the rules, which is the first day-of-week and minimal days.</source>
          <target state="translated">比較するのは、最初の曜日と最低限の日をルールとして、全体の状態に基づいています。</target>
        </trans-unit>
        <trans-unit id="192da957c0f4b80479e196d424d4d3775beb904f" translate="yes" xml:space="preserve">
          <source>The comparison is based on the four values, minimum, largest minimum, smallest maximum and maximum. Only objects of type &lt;code&gt;ValueRange&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、最小、最大最小、最小最大、最大の4つの値に基づいています。タイプ &lt;code&gt;ValueRange&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="cba93eebbdf4e98ed715ba844e1f105f1a12c788" translate="yes" xml:space="preserve">
          <source>The comparison is based on the instant then on the local date-time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、インスタントに基づいてからローカルの日時に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="737cc9ee0e95935301bdbf824b243f30aec93c53" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;OffsetDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、ローカルの日時とオフセットに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt; を&lt;/a&gt;使用します。タイプが &lt;code&gt;OffsetDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="d5a831b02c02275b1518078d06b087841d7f2158" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt;&lt;code&gt;isEqual(OffsetTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、現地時間とオフセットに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt; &lt;code&gt;isEqual(OffsetTime)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="82e0667693e86c110e3044cc93f2d394e82a5c9b" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. Only objects of type &lt;code&gt;ZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、オフセット日時とゾーンに基づいています。タイプ &lt;code&gt;ZonedDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="33b5a7379f272963b1231d6f7fe31e6ce7f2e169" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. To compare for the same instant on the time-line, use &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、オフセット日時とゾーンに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;ます。タイプ &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="89ee64a765fb07b058f4c38bb5d7dd8adeb5ae39" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants.</source>
          <target state="translated">比較はインスタの時系列位置を基準にしています。</target>
        </trans-unit>
        <trans-unit id="16b8d94d368fe5302d9f95a3fac584848bf6c823" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、インスタントのタイムライン位置に基づいています。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="c62e4664e20e19bb86140431a4348f682732596c" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the local times within a day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、1日の中のローカル時刻のタイムライン位置に基づいています。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="596c353f32239015bd0dfaedc67872f34772e8a0" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the month-day within a year.</source>
          <target state="translated">1年以内の月日の時系列位置で比較しています。</target>
        </trans-unit>
        <trans-unit id="4d10c99bef52962cda140baf526e052de919b106" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the time within a day.</source>
          <target state="translated">1日の中での時間軸の位置を基準に比較しています。</target>
        </trans-unit>
        <trans-unit id="bc4d73aa624f4c73d652784336ae68fda81a83f5" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the year-months.</source>
          <target state="translated">年月の時系列位置を基準に比較しています。</target>
        </trans-unit>
        <trans-unit id="16bbd8a5d59cacd64bc82e497b6806c5905521a7" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the years.</source>
          <target state="translated">年の時系列位置で比較しています。</target>
        </trans-unit>
        <trans-unit id="687b4a5a03f3d03cd8074b28705f197dbd61474d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations.</source>
          <target state="translated">比較するのは、持続時間の合計の長さに基づいています。</target>
        </trans-unit>
        <trans-unit id="147c6ea90ff33076d2c31d50f28390aa314b97fa" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、期間の合計の長さに基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="dc1a66e5ec71f197e7d88a905f435f0152a887f3" translate="yes" xml:space="preserve">
          <source>The comparison is based on the type &lt;code&gt;Period&lt;/code&gt; and each of the three amounts. To be equal, the years, months and days units must be individually equal. Note that this means that a period of &quot;15 Months&quot; is not equal to a period of &quot;1 Year and 3 Months&quot;.</source>
          <target state="translated">比較は、 &lt;code&gt;Period&lt;/code&gt; タイプと3つの金額のそれぞれに基づいています。等しくするには、年、月、日の単位は個々に等しくなければなりません。これは、「15か月」の期間が「1年と3か月」の期間と等しくないことを意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="463960db060f3465393d7aee55fa6982b411192d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the value of the year. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は年の値に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="62f16067b7a90f0f4f245f000991fe2df5b1a555" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は主に、最も古いものから最も新しいものまでの日付に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="706f98b3cb9aba1254b020ff959b8465ce325b8c" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date-time, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は主に、最も早いものから最も新しいものまでの日時に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="0062aa5848822076fe3842237a04acbf5acbd21a" translate="yes" xml:space="preserve">
          <source>The comparison order first by the chronology ID string, then by any additional information specific to the subclass. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初に年代順ID文字列、次にサブクラスに固有の追加情報による比較順序。&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="3d38b5f16eb7a1039fb7fb049c7f6b1ebb31b6e6" translate="yes" xml:space="preserve">
          <source>The compiler might generate diagnostics during compilation (for example, error messages). If a diagnostic listener is provided, the diagnostics will be supplied to the listener. If no listener is provided, the diagnostics will be formatted in an unspecified format and written to the default output, which is &lt;code&gt;System.err&lt;/code&gt; unless otherwise specified. Even if a diagnostic listener is supplied, some diagnostics might not fit in a &lt;code&gt;Diagnostic&lt;/code&gt; and will be written to the default output.</source>
          <target state="translated">コンパイラーは、コンパイル中に診断（例えば、エラー・メッセージ）を生成する場合があります。診断リスナーが提供されている場合、診断はリスナーに提供されます。リスナーが指定されていない場合、診断は指定されていない形式でフォーマットされ、特に指定されていない限り、デフォルトの出力である &lt;code&gt;System.err&lt;/code&gt; に書き込まれます。診断リスナーが供給されている場合でも、いくつかの診断は内に収まらない可能性があります &lt;code&gt;Diagnostic&lt;/code&gt; し、デフォルトの出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="381f14496e56d0ef9908dc1f0d9bb14c74a2832d" translate="yes" xml:space="preserve">
          <source>The compiler relies on two services: &lt;a href=&quot;diagnosticlistener&quot;&gt;diagnostic listener&lt;/a&gt; and &lt;a href=&quot;javafilemanager&quot;&gt;file manager&lt;/a&gt;. Although most classes and interfaces in this package defines an API for compilers (and tools in general) the interfaces &lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;, &lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;, &lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt;, and &lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt; are not intended to be used in applications. Instead these interfaces are intended to be implemented and used to provide customized services for a compiler and thus defines an SPI for compilers.</source>
          <target state="translated">コンパイラーは、&lt;a href=&quot;diagnosticlistener&quot;&gt;診断リスナー&lt;/a&gt;と&lt;a href=&quot;javafilemanager&quot;&gt;ファイルマネージャーの&lt;/a&gt; 2つのサービスに依存しています。このパッケージのほとんどのクラスとインターフェースは、コンパイラー（およびツール全般）のAPIを定義していますが、&lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;、&lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;、&lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt;、および&lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt;のインターフェースは、アプリケーションでの使用を意図していません。代わりに、これらのインターフェースは、コンパイラーにカスタマイズされたサービスを提供するために実装および使用されることが意図されているため、コンパイラーのSPIを定義します。</target>
        </trans-unit>
        <trans-unit id="362286647cd635d5481f683398fcaef1fc4da1f8" translate="yes" xml:space="preserve">
          <source>The complement of the specified set in this set</source>
          <target state="translated">この集合で指定された集合の補数</target>
        </trans-unit>
        <trans-unit id="a5e446a959aa30fea4f31ea3c5f55e40725fce89" translate="yes" xml:space="preserve">
          <source>The complete date is expressed using three fields:</source>
          <target state="translated">完全な日付を3つのフィールドで表現しています。</target>
        </trans-unit>
        <trans-unit id="62ccc62c3b00948e20f42cc9c3131d69e90ab141" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt;&lt;code&gt;getTransitionRules()&lt;/code&gt;&lt;/a&gt;. This method returns those transitions that have been fully defined. These are typically historical, but may be in the future.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt; &lt;code&gt;getTransitionRules()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、完全に定義された遷移を返します。これらは通常、歴史的なものですが、将来的には可能性があります。</target>
        </trans-unit>
        <trans-unit id="3cbe2850875a6f72ed6ab4a88952848315078e96" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitions--&quot;&gt;&lt;code&gt;getTransitions()&lt;/code&gt;&lt;/a&gt;. This method returns instances of &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; that define an algorithm for when transitions will occur.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;zonerules#getTransitions--&quot;&gt; &lt;code&gt;getTransitions()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、遷移が発生するときのアルゴリズムを定義する&lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="524c842350764043be1381deb4e7a75d9303361c" translate="yes" xml:space="preserve">
          <source>The completion handler for an I/O operation initiated on a channel bound to a group is guaranteed to be invoked by one of the pooled threads in the group. This ensures that the completion handler is run by a thread with the expected &lt;em&gt;identity&lt;/em&gt;.</source>
          <target state="translated">グループにバインドされたチャネルで開始されたI / O操作の完了ハンドラーは、グループ内のプールされたスレッドの1つによって呼び出されることが保証されています。これにより、予期される&lt;em&gt;IDを&lt;/em&gt;持つスレッドによって完了ハンドラが確実に実行され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0d8a524b8f0bfc14d5b33c03393a926327201c05" translate="yes" xml:space="preserve">
          <source>The component at index posn.</source>
          <target state="translated">インデックス posn にあるコンポーネント。</target>
        </trans-unit>
        <trans-unit id="6353bf9fb6b5c395dc80e83b16932093c258f2dc" translate="yes" xml:space="preserve">
          <source>The component removed (a String).</source>
          <target state="translated">削除されたコンポーネント(文字列)。</target>
        </trans-unit>
        <trans-unit id="551e179ff0a1f6b74371033d523205c16478c234" translate="yes" xml:space="preserve">
          <source>The components of a LDAP name, that is, RDNs, are numbered. The indexes of a LDAP name with n RDNs range from 0 to n-1. This range may be written as [0,n). The right most RDN is at index 0, and the left most RDN is at index n-1. For example, the distinguished name: &quot;CN=Steve Kille, O=Isode Limited, C=GB&quot; is numbered in the following sequence ranging from 0 to 2: {C=GB, O=Isode Limited, CN=Steve Kille}. An empty LDAP name is represented by an empty RDN list.</source>
          <target state="translated">LDAP名の構成要素、つまりRDNには番号が付けられています。n個のRDNを持つLDAP名のインデックスは、0からn-1までの範囲である。この範囲は[0,n]と書くことができます。右端のRDNはインデックス0にあり、左端のRDNはインデックスn-1にある。例えば、識別名「CN=Steve Kille,O=Isode Limited,C=GB」は、0から2までの範囲で{C=GB,O=Isode Limited,CN=Steve Kille}のように番号が付けられている。空のLDAP名は、空のRDNリストで表される。</target>
        </trans-unit>
        <trans-unit id="5dc21cc1b67ef648051518375f8f7207d80d43fb" translate="yes" xml:space="preserve">
          <source>The components of a composite name are numbered. The indexes of a composite name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty composite name has no components.</source>
          <target state="translated">複合名の構成要素には番号が付けられている。N個の構成要素を持つ複合名のインデックスは、0からNまでの範囲であるが、Nを含まない。最も重要な構成要素はインデックス0にある。空の複合名は構成要素を持たない。</target>
        </trans-unit>
        <trans-unit id="14a1f972f1e3053de3d05dc8a5b4d01708c7f345" translate="yes" xml:space="preserve">
          <source>The components of a compound name are numbered. The indexes of a compound name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty compound name has no components.</source>
          <target state="translated">複合名の構成要素には番号が付けられています。N個の構成要素を持つ複合名のインデックスは、0からNまでの範囲ですが、Nは含まれていません。最も重要な構成要素はインデックス 0 にあります。空の複合名には構成要素がありません。</target>
        </trans-unit>
        <trans-unit id="3bfe595dae00ecadd506655e42ccf5b0136b9bf1" translate="yes" xml:space="preserve">
          <source>The components of a name are numbered. The indexes of a name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty name has no components.</source>
          <target state="translated">名前の構成要素には番号が付けられています。N個の構成要素を持つ名前のインデックスは、0からNまでの範囲ですが、Nは含まれません。最も重要な構成要素はインデックス0にあります。空の名前には構成要素がありません。</target>
        </trans-unit>
        <trans-unit id="5352c3728b0e0385e152a82e295d498e4fb174ac" translate="yes" xml:space="preserve">
          <source>The compression type strings and the image type(s) each supports are listed in the following table:</source>
          <target state="translated">圧縮タイプの文字列と、それぞれがサポートしている画像タイプを以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="de48d26fe33c726460e7d2fda077c5a4d41c831c" translate="yes" xml:space="preserve">
          <source>The computation of the value returned by this method is similar to that of the value returned by &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; on a list containing the same elements as &lt;code&gt;a&lt;/code&gt; in the same order, with one difference: If an element &lt;code&gt;e&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; is itself an array, its hash code is computed not by calling &lt;code&gt;e.hashCode()&lt;/code&gt;, but as by calling the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, or as by calling &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; recursively if &lt;code&gt;e&lt;/code&gt; is an array of a reference type. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値の計算は、によって返された値と同様である&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt;と同じ要素を含むリスト上の一つの違いで、同じ順序で：要素の場合 &lt;code&gt;e&lt;/code&gt; のそのものであります配列の場合、そのハッシュコードは &lt;code&gt;e.hashCode()&lt;/code&gt; を呼び出すのではなく、 &lt;code&gt;e&lt;/code&gt; がプリミティブ型の配列の場合は &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; の適切なオーバーロードを呼び出すことによって、または &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; を呼び出すことによって計算されます。 &lt;code&gt;e&lt;/code&gt; が参照型の配列の場合、再帰的に。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="214bb0bb62df51550823153b8ce29f6dab115c3a" translate="yes" xml:space="preserve">
          <source>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively) depending on whether it requires arguments and/or produces results. For example, &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt;
 System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt;. An additional form (&lt;em&gt;compose&lt;/em&gt;) applies functions of stages themselves, rather than their results.</source>
          <target state="translated">ステージによって実行される計算は、引数が必要か、結果を生成するかによって、関数、コンシューマー、または&lt;em&gt;実行可能&lt;/em&gt;として（それぞれ&lt;em&gt;apply&lt;/em&gt;、&lt;em&gt;accept&lt;/em&gt;、または&lt;em&gt;run&lt;/em&gt;を含む名前のメソッドを使用して）表すことができます。たとえば、 &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt; System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt; ます。追加のフォーム（&lt;em&gt;compose&lt;/em&gt;）は、結果ではなく、ステージ自体の関数を適用します。</target>
        </trans-unit>
        <trans-unit id="1691fd27bc6e097f4599ed6bb1fc28887a525083" translate="yes" xml:space="preserve">
          <source>The computations for day-of-week, week-of-month, and week-of-year are based on the &lt;a href=&quot;chronofield#YEAR&quot;&gt;proleptic-year&lt;/a&gt;, &lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;month-of-year&lt;/a&gt;, &lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;day-of-month&lt;/a&gt;, and &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISO day-of-week&lt;/a&gt; which are based on the &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;epoch-day&lt;/a&gt; and the chronology. The values may not be aligned with the &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;year-of-Era&lt;/a&gt; depending on the Chronology.</source>
          <target state="translated">曜日のための計算、週-の-月、週-の年はに基づいています&lt;a href=&quot;chronofield#YEAR&quot;&gt;proleptic年&lt;/a&gt;、&lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;月-の年&lt;/a&gt;、&lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;日のヶ月&lt;/a&gt;、および&lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISOの曜日&lt;/a&gt;であります&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;時代&lt;/a&gt;と年代に基づいています。年代順によっては、値が&lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;年号&lt;/a&gt;と一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="e0a314c28965a5184605c91a9dd77e2a63a6282c" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="778968ebec250a920a57d7938e53b3467b9d8fb1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければなりません。1つのパラメータが一定の場合、結果は他のパラメータで半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a6674b79e473f3879ed7bc38a2aea8ceb42331e7" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければならない。結果は半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a95667f460b33082c1f4875f29adeb6b10893583" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic. The result of &lt;code&gt;expm1&lt;/code&gt; for any finite input must be greater than or equal to &lt;code&gt;-1.0&lt;/code&gt;. Note that once the exact result of</source>
          <target state="translated">計算結果は、正確な結果の1 ulp以内である必要があります。結果は半単調でなければなりません。有限入力の &lt;code&gt;expm1&lt;/code&gt; の結果は、 &lt;code&gt;-1.0&lt;/code&gt; 以上でなければなりません。の正確な結果が</target>
        </trans-unit>
        <trans-unit id="051083ed8bd5eb53cc6b0a3e3e4e3a859c790084" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2 ulps of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">計算された結果は、正確な結果から2 ulps以内でなければならない。結果は半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e8d50f4531c22cdf1c57032345e12f930311bee" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result.</source>
          <target state="translated">計算された結果は、正確な結果から2.5 ulps以内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5716b70a97e32988d2cb0c294378ce7e42458ba1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result. The result of &lt;code&gt;tanh&lt;/code&gt; for any finite input must have an absolute value less than or equal to 1. Note that once the exact result of tanh is within 1/2 of an ulp of the limit value of &amp;plusmn;1, correctly signed &amp;plusmn;&lt;code&gt;1.0&lt;/code&gt; should be returned.</source>
          <target state="translated">計算結果は、正確な結果の2.5 ulp以内である必要があります。有限入力の &lt;code&gt;tanh&lt;/code&gt; の結果は、1以下の絶対値でなければなりません。tanhの正確な結果が&amp;plusmn;1の限界値のulpの1/2以内になったら、正しく符号付き&amp;plusmn; &lt;code&gt;1.0&lt;/code&gt; にする必要があります。戻ってきた。</target>
        </trans-unit>
        <trans-unit id="e44ba5b29ec6b29fa13a1c0b35b2b236c3e56f08" translate="yes" xml:space="preserve">
          <source>The concepts are easier to understand by comparison with the Standard MBean concept. Here is how a managed object might be represented as a Standard MBean, and as an MXBean:</source>
          <target state="translated">概念は Standard MBean の概念と比較すると理解しやすいです。ここでは、管理されたオブジェクトが標準MBeanとして、MXBeanとしてどのように表現されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="406e4cef7e07251a93d230aa3d12ee538ab9badb" translate="yes" xml:space="preserve">
          <source>The conceptual distinction between URIs and URLs is reflected in the differences between this class and the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">URIとURLの概念的な違いは、このクラスと&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;クラスの違いに反映されています。</target>
        </trans-unit>
        <trans-unit id="07517dfd669419de18de761dd5d44e2d407cd858" translate="yes" xml:space="preserve">
          <source>The concurrency properties of bulk operations follow from those of ConcurrentHashMap: Any non-null result returned from &lt;code&gt;get(key)&lt;/code&gt; and related access methods bears a happens-before relation with the associated insertion or update. The result of any bulk operation reflects the composition of these per-element relations (but is not necessarily atomic with respect to the map as a whole unless it is somehow known to be quiescent). Conversely, because keys and values in the map are never null, null serves as a reliable atomic indicator of the current lack of any result. To maintain this property, null serves as an implicit basis for all non-scalar reduction operations. For the double, long, and int versions, the basis should be one that, when combined with any other value, returns that other value (more formally, it should be the identity element for the reduction). Most common reductions have these properties; for example, computing a sum with basis 0 or a minimum with basis MAX_VALUE.</source>
          <target state="translated">一括操作の同時実行プロパティは、ConcurrentHashMapの同時実行プロパティに従います。get &lt;code&gt;get(key)&lt;/code&gt; から返されるnull以外の結果関連するアクセス方法は、関連する挿入または更新との前に発生する関係を担います。一括操作の結果は、これらの要素ごとの関係の構成を反映します（ただし、静止していることが何らかの形で知られている場合を除き、マップ全体に関して必ずしもアトミックではありません）。逆に、マップ内のキーと値がnullになることはないため、nullは現在の結果の欠如の信頼できるアトミックインジケーターとして機能します。このプロパティを維持するために、nullはすべての非スカラー縮約操作の暗黙的な基礎として機能します。 double、long、およびintバージョンの場合、基底は、他の値と組み合わせると、その他の値を返すものでなければなりません（より正式には、リダクションの単位要素でなければなりません）。最も一般的な削減にはこれらの特性があります。例えば、基底0の合計または基底MAX_VALUEの最小値を計算します。</target>
        </trans-unit>
        <trans-unit id="695bcb81bf8921f2b489db3866dc5c4b73eb01e2" translate="yes" xml:space="preserve">
          <source>The conditional constructs &lt;code&gt;(?(&lt;/code&gt;</source>
          <target state="translated">条件付き構文 &lt;code&gt;(?(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f9289d113f06c7752017512ddee95d8472dadf4" translate="yes" xml:space="preserve">
          <source>The configuration files and their corresponding implementation classes must be accessible to the calling thread's context class loader.</source>
          <target state="translated">設定ファイルとそれに対応する実装クラスは、呼び出し元のスレッドのコンテキストクラスローダからアクセス可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0bd8196d8a21097374666c4e69a129e9d0dc940d" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.AndQueryExp.</source>
          <target state="translated">2 つの引数の連結子。返されたオブジェクトは、非公開クラス javax.management.AndQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="fb86bc8294f16c5649875c6782a7b1a216e845cc" translate="yes" xml:space="preserve">
          <source>The connection ID to which this notification pertains.</source>
          <target state="translated">この通知が属する接続ID。</target>
        </trans-unit>
        <trans-unit id="f8ff508fdc1ac8bc4959ca20489757c5f0a674de" translate="yes" xml:space="preserve">
          <source>The connection object is created by invoking the &lt;code&gt;openConnection&lt;/code&gt; method on a URL.</source>
          <target state="translated">接続オブジェクトは、URLで &lt;code&gt;openConnection&lt;/code&gt; メソッドを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="c2f7f112153c54fb4cda2b130cddc1d8821a798f" translate="yes" xml:space="preserve">
          <source>The connection to the JAR file URL, if the connection has been initiated. This should be set by connect.</source>
          <target state="translated">接続が開始されている場合は、JARファイルのURLへの接続を指定します。これは connect で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2fdbc77cf21a62029729ae4d767690b0796a4208" translate="yes" xml:space="preserve">
          <source>The connector server will generate an &lt;code&gt;RMIServerImpl&lt;/code&gt; based on the protocol (&lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt;) and, for &lt;code&gt;rmi&lt;/code&gt;, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; if any. When the connector server is started, it will derive a stub from this object using its &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method and store the object using the given &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt;. The properties defined by the JNDI API are consulted as usual.</source>
          <target state="translated">コネクタサーバーは、プロトコル（ &lt;code&gt;rmi&lt;/code&gt; または &lt;code&gt;iiop&lt;/code&gt; ）に基づいて &lt;code&gt;RMIServerImpl&lt;/code&gt; を生成し、 &lt;code&gt;rmi&lt;/code&gt; の場合は、 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; あればそれを生成します。コネクター・サーバーが始動すると、&lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; &lt;/a&gt;メソッドを使用してこのオブジェクトからスタブを派生させ、指定された &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt; を使用してオブジェクトを保管します。JNDI APIによって定義されたプロパティは、通常どおり参照されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9dd5ae6d1e3cade50eb6caf2c268a1278764c4fb" translate="yes" xml:space="preserve">
          <source>The console-read methods return &lt;code&gt;null&lt;/code&gt; when the end of the console input stream is reached, for example by typing control-D on Unix or control-Z on Windows. Subsequent read operations will succeed if additional characters are later entered on the console's input device.</source>
          <target state="translated">コンソール入力ストリームの最後に到達すると、コンソール読み取りメソッドは &lt;code&gt;null&lt;/code&gt; を返します。たとえば、Unixではcontrol-D、Windowsではcontrol-Zを入力します。以降の読み取り操作は、後でコンソールの入力デバイスに追加の文字が入力された場合に成功します。</target>
        </trans-unit>
        <trans-unit id="bf3c6b7bb1907894e51344d6616a6e7cb10386dc" translate="yes" xml:space="preserve">
          <source>The constant &lt;a href=&quot;elementtype#TYPE_USE&quot;&gt;&lt;code&gt;TYPE_USE&lt;/code&gt;&lt;/a&gt; corresponds to the 15 type contexts in JLS 4.11, as well as to two declaration contexts: type declarations (including annotation type declarations) and type parameter declarations.</source>
          <target state="translated">定数&lt;a href=&quot;elementtype#TYPE_USE&quot;&gt; &lt;code&gt;TYPE_USE&lt;/code&gt; &lt;/a&gt;は、JLS 4.11の15の型コンテキストと、型宣言（注釈型宣言を含む）と型パラメーター宣言の2つの宣言コンテキストに対応しています。</target>
        </trans-unit>
        <trans-unit id="fd7d21b839d915be854999ae3895c9fc0775c58b" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the largest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\uFFFF'&lt;/code&gt;.</source>
          <target state="translated">このフィールドの定数値は、タイプ &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;'\uFFFF'&lt;/code&gt; の最大値です。</target>
        </trans-unit>
        <trans-unit id="13a3d4f9e90fafbe487863d61e2c681b40a76e07" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the smallest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\u0000'&lt;/code&gt;.</source>
          <target state="translated">このフィールドの定数値は、型の最小値である &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;'\u0000'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5c3ae86c80c0ffd5751f1bcac0fbdd026305053" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DES key in bytes.</source>
          <target state="translated">DESキーの長さをバイト単位で定義する定数。</target>
        </trans-unit>
        <trans-unit id="2c331109070150d080aecfe00c315900d5ffe214" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DESede key in bytes.</source>
          <target state="translated">DESedeキーの長さをバイト単位で定義する定数。</target>
        </trans-unit>
        <trans-unit id="e3144d771789e4d26a103912ef85edcf80e38dfe" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#TYPE&quot;&gt;&lt;code&gt;TYPE&lt;/code&gt;&lt;/a&gt; , and &lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</source>
          <target state="translated">定数&lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#TYPE&quot;&gt; &lt;code&gt;TYPE&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt;は、JLS 9.6.4.1の宣言コンテキストに対応しています。</target>
        </trans-unit>
        <trans-unit id="5c6db25e66548268914c017d479808b70cf00b1c" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program.</source>
          <target state="translated">この列挙型の定数は、Javaプログラム内でアノテーションが現れる構文上の場所を簡単に分類します。</target>
        </trans-unit>
        <trans-unit id="feb4cacf066dccc67c2a1e1cd57d17bf146fe670" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt;&lt;code&gt;java.lang.annotation.Target&lt;/code&gt;&lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</source>
          <target state="translated">この列挙型の定数は、Javaプログラムで注釈が表示される可能性がある構文上の場所を簡単に分類します。これらの定数は&lt;a href=&quot;target&quot;&gt; &lt;code&gt;java.lang.annotation.Target&lt;/code&gt; &lt;/a&gt; meta-annotationsで使用され、特定のタイプの注釈を書き込むことが正当な場所を指定します。</target>
        </trans-unit>
        <trans-unit id="ba3ca4b2e56262c71dbe0a15263e988db1d00eb8" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">返されたオブジェクトは、非公開クラス javax.management.MatchQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="6d919fe4516cb983d55f9db338ccc9c7dde1f1b9" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class  javax.management.BetweenQueryExp.</source>
          <target state="translated">v1 が v2 と v3 の間にあるという制約。返されたオブジェクトは、非公開クラス javax.management.BetweenQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="3d680dfab2d7cf7f3941527a50827dfaf79d9cb1" translate="yes" xml:space="preserve">
          <source>The constructor checks that all the constraints listed below for each parameter are satisfied, and throws the appropriate exception if they are not.</source>
          <target state="translated">コンストラクタは、各パラメータについて以下に示す制約がすべて満たされているかどうかをチェックし、満たされていない場合は適切な例外をスローします。</target>
        </trans-unit>
        <trans-unit id="55c1cac93e10dcceae66fd36ab495f0d17064a67" translate="yes" xml:space="preserve">
          <source>The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt;, under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;reentrantlock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</source>
          <target state="translated">このクラスのコンストラクターは、オプションの&lt;em&gt;公平性&lt;/em&gt;パラメーターを受け入れます。 &lt;code&gt;true&lt;/code&gt; に設定すると、競合下で、ロックは最も長く待機しているスレッドへのアクセスの許可を優先します。それ以外の場合、このロックは特定のアクセス順序を保証しません。多くのスレッドによってアクセスされる公平なロックを使用するプログラムは、デフォルト設定を使用するプログラムよりも全体的なスループットが低い（つまり、遅い、多くの場合はかなり遅い）場合がありますが、ロックを取得して飢餓の欠如を保証するための時間の変動は小さいです。ただし、ロックの公平性はスレッドスケジューリングの公平性を保証するものではないことに注意してください。したがって、他のアクティブなスレッドが進行中でなく、現在ロックを保持していない間に、フェアロックを使用する多くのスレッドの1つが連続して複数回取得する可能性があります。また、アン&lt;a href=&quot;reentrantlock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;も注意してください。メソッドは、公平性設定を尊重しません。他のスレッドが待機していても、ロックが利用可能であれば成功します。</target>
        </trans-unit>
        <trans-unit id="cabf2c65732e2de463fc3500f56a6de7aadab8e6" translate="yes" xml:space="preserve">
          <source>The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;semaphore#tryAcquire--&quot;&gt;&lt;code&gt;tryAcquire&lt;/code&gt;&lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</source>
          <target state="translated">このクラスのコンストラクターは、オプションで&lt;em&gt;公平性&lt;/em&gt;パラメーターを受け入れます。falseに設定すると、このクラスは、スレッドが許可を取得する順序を保証しません。特に、&lt;em&gt;割り込み&lt;/em&gt;は許可されます。つまり、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;を呼び出すスレッドには、待機していたスレッドの前にパーミットを割り当てることができます。論理的には、新しいスレッドは待機スレッドのキューの先頭に配置されます。公平性がtrueに設定されている場合、セマフォは、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;いずれかを呼び出すスレッドがメソッドは、それらのメソッドの呼び出しが処理された順序で許可を取得するように選択されます（先入れ先出し; FIFO）。FIFOの順序は、これらのメソッド内の特定の内部実行ポイントに必ず適用されることに注意してください。したがって、1つのスレッドが別のスレッドの前に &lt;code&gt;acquire&lt;/code&gt; を呼び出すことは可能ですが、次の順序で順序付けポイントに到達し、メソッドから戻ったときにも同様です。また、時間&lt;a href=&quot;semaphore#tryAcquire--&quot;&gt; &lt;code&gt;tryAcquire&lt;/code&gt; &lt;/a&gt;いないtryAcquireメソッドは、公平性の設定を尊重しませんが、使用可能な許可を取得します。</target>
        </trans-unit>
        <trans-unit id="2f82cef178c196bbec6e0156b69c44428cb62da4" translate="yes" xml:space="preserve">
          <source>The constructor to reflect is the public constructor of the class represented by this &lt;code&gt;Class&lt;/code&gt; object whose formal parameter types match those specified by &lt;code&gt;parameterTypes&lt;/code&gt;.</source>
          <target state="translated">反映するコンストラクターは、この &lt;code&gt;Class&lt;/code&gt; オブジェクトによって表されるクラスのパブリックコンストラクターであり、その仮パラメータータイプは &lt;code&gt;parameterTypes&lt;/code&gt; で指定されたものと一致します。</target>
        </trans-unit>
        <trans-unit id="dc091f884e5b69128c7db36ffbfe76ae011df98f" translate="yes" xml:space="preserve">
          <source>The content and representation of an attribute and its values is defined by the attribute's &lt;em&gt;schema&lt;/em&gt;. The schema contains information about the attribute's syntax and other properties about the attribute. See &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; for details regarding how to get schema information about an attribute if the underlying directory service supports schemas.</source>
          <target state="translated">属性とその値の内容と表現は、属性の&lt;em&gt;スキーマ&lt;/em&gt;によって定義され&lt;em&gt;ます&lt;/em&gt;。スキーマには、属性の構文に関する情報と、属性に関するその他のプロパティが含まれています。参照 &lt;code&gt;getAttributeDefinition()&lt;/code&gt; と &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; 基本となるディレクトリサービスがサポートするスキーマかの属性に関するスキーマ情報を取得する方法についての詳細については。</target>
        </trans-unit>
        <trans-unit id="fcaf947eb04b0f9c4537af81320b15e8bade372f" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの呼び出しによって設定されたコンテンツの長さは、&lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt;によって設定されたどの値よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="571ca938b3faeb08721ed17e39715453eb020c82" translate="yes" xml:space="preserve">
          <source>The content of a mapped byte buffer can change at any time, for example if the content of the corresponding region of the mapped file is changed by this program or another. Whether or not such changes occur, and when they occur, is operating-system dependent and therefore unspecified.</source>
          <target state="translated">例えば、マップされたファイルの対応する領域の内容がこのプログラムや他のプログラムによって変更された場合など、マップされたバイトバッファの内容はいつでも変更される可能性があります。このような変更が発生するかどうか、発生するタイミングはオペレーティングシステムに依存しているため特定できません。</target>
        </trans-unit>
        <trans-unit id="8ec1fd8ede78cb7ef9de2d4323ba7216c5e957fd" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容はこのバッファの内容となります。このバッファの内容の変更は新しいバッファにも表示され、その逆も同様に、2つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="b52924f0667cd93dbfd903475fcb1b22e1203c6d" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer; the new buffer itself, however, will be read-only and will not allow the shared content to be modified. The two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容はこのバッファの内容となります。このバッファの内容の変更は新しいバッファに表示されますが、新しいバッファ自体は読み込み専用となり、共有されている内容を変更することはできません。2 つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="8be5a548cfa9fe9bb9c255c2eb6075bfe2f8e059" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容は、このバッファの現在の位置から始まります。このバッファの内容の変更は新しいバッファにも表示され、その逆も同様に、2つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="cefde5877ed78f05c3cd681ed1cfc50dc6c6dc4c" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The buffer's capacity will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be &lt;code&gt;start&lt;/code&gt;, its limit will be &lt;code&gt;end&lt;/code&gt;, and its mark will be undefined.</source>
          <target state="translated">新しい読み取り専用バッファのコンテンツは、指定された文字シーケンスのコンテンツになります。バッファーの容量は &lt;code&gt;csq.length()&lt;/code&gt; であり、その位置は &lt;code&gt;start&lt;/code&gt; であり、その制限は &lt;code&gt;end&lt;/code&gt; であり、そのマークは未定義です。</target>
        </trans-unit>
        <trans-unit id="26c3cb709632b1f3d492bb30e289e528ee9018bc" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The new buffer's capacity and limit will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be zero, and its mark will be undefined.</source>
          <target state="translated">新しい読み取り専用バッファのコンテンツは、指定された文字シーケンスのコンテンツになります。新しいバッファの容量と制限は &lt;code&gt;csq.length()&lt;/code&gt; になり、その位置はゼロになり、マークは未定義になります。</target>
        </trans-unit>
        <trans-unit id="a7af81925356d9326d970998ba5413043e77043f" translate="yes" xml:space="preserve">
          <source>The content type of the file, or &lt;code&gt;null&lt;/code&gt; if the content type cannot be determined</source>
          <target state="translated">ファイルのコンテンツタイプ。コンテンツタイプを判別できない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fefa96213a0f4f4a20404355dc88109a3b19df22" translate="yes" xml:space="preserve">
          <source>The content type or &lt;code&gt;null&lt;/code&gt; if the file type is not recognized</source>
          <target state="translated">コンテンツタイプ、またはファイルタイプが認識されない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66f44833c6467f09c644d9346944666f84828bc6" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium, but in the opposite manner from landscape. Reverse-landscape is defined to be a rotation of the print-stream page to be imaged by -90 degrees with respect to the medium (i.e. clockwise) from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の長辺を横切ってイメージされるが、ランドスケープとは逆の方法でイメージされる。ランドスケープを逆にすることは、印刷ストリームのページを、媒体に対して縦向きから-90度(すなわち時計回りに)回転させてイメージ化することであると定義されている。</target>
        </trans-unit>
        <trans-unit id="a6abed47322b2de7552654f3f1b6131fb26ff966" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium. Landscape is defined to be a rotation of the print-stream page to be imaged by +90 degrees with respect to the medium (i.e. anti-clockwise) from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の長辺を横切ってイメージ化される。横向きとは、イメージ化される印刷ストリームページの回転を、縦向きから媒体に対して+90度(すなわち反時計回り)回転させることと定義されている。</target>
        </trans-unit>
        <trans-unit id="785e00c1b7145d81a8620ade1cef3fdb93caa602" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium, but in the opposite manner from portrait. Reverse-portrait is defined to be a rotation of the print-stream page to be imaged by 180 degrees with respect to the medium from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の短辺を横切ってイメージされるが、ポートレートとは逆の方法でイメージされる。逆ポートレートは、印刷ストリームページをポートレート方向から媒体に対して 180 度回転させてイメージ化することと定義されている。</target>
        </trans-unit>
        <trans-unit id="6852f939963698fc0410e778b02bf61dab00e768" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium.</source>
          <target state="translated">コンテンツは、媒体の短辺をまたいでイメージ化されます。</target>
        </trans-unit>
        <trans-unit id="bc28f755e5915277d2988d4a6013aea7ae1c7b98" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; の内容がコピーされるため、 &lt;code&gt;legalValues&lt;/code&gt; によって参照される配列のその後の変更は、この &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; インスタンスに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="1946580fff472131e18b708943cd99d690b0e519" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; の内容がコピーされるため、 &lt;code&gt;legalValues&lt;/code&gt; によって参照される配列のその後の変更は、この &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; インスタンスに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="c325ca178e48547f71dba766d1fb7d18b3def496" translate="yes" xml:space="preserve">
          <source>The contents of all files are valid (that is, public non-abstract subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt; for the &quot;.class&quot; files, syntactically correct &quot;.properties&quot; files). The default locale is &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt;.</source>
          <target state="translated">すべてのファイルの内容は有効です（つまり、「。class」ファイルの &lt;code&gt;ResourceBundle&lt;/code&gt; の非抽象サブクラス、構文的に正しい「.properties」ファイル）。デフォルトのロケールは &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ebac3c238a1391d9c3c39bf23e530a85063ac59c" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</source>
          <target state="translated">動的MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の内容は、その&lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt;メソッドによって決定されます。これには、動的MBeanの一種であるオープンMBeanとモデルMBeanが含まれます。</target>
        </trans-unit>
        <trans-unit id="d848a8a7bfa54e24e5b7fcaf3feddaaa4c47c842" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Standard MBean are determined by the MBean server as follows:</source>
          <target state="translated">標準MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の内容は、MBeanサーバーによって次のように決定されます。</target>
        </trans-unit>
        <trans-unit id="b0b4c7cdb43c1b320218f1d15b6496c67a3847fe" translate="yes" xml:space="preserve">
          <source>The contents of the located files indicate the names of actual implementation classes which implement the aforementioned service provider interfaces; the default class loader is then used to load each of these classes and to instantiate an instance of each class, which is then placed into the registry for later retrieval.</source>
          <target state="translated">配置されたファイルの内容は、前述のサービスプロバイダインタフェースを実装する実際の実装クラスの名前を示しています。デフォルトのクラスローダは、これらの各クラスをロードし、各クラスのインスタンスを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="388f439246bd0e7a4c23e29d7ee51483d463dcb8" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting enableContextClassLoaderOverride permission would allow a subclass of Thread to override the methods that are used to get or set the context class loader for a particular thread.</source>
          <target state="translated">コンテキストクラスローダは、システムコードや拡張機能がシステムクラスローダに存在しないかもしれないリソースを探す必要があるときに使用されます。enableContextClassLoaderOverride 権限を与えると、 Thread のサブクラスが特定のスレッドのコンテキストクラスローダを取得したり設定したりするために使用されるメソッドをオーバーライドできるようになります。</target>
        </trans-unit>
        <trans-unit id="590a02352e6b07386297ba1df528c88dc41306dc" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting setContextClassLoader permission would allow code to change which context class loader is used for a particular thread, including system threads.</source>
          <target state="translated">コンテキストクラスローダは、システムコードや拡張機能がシステムクラスローダに存在しないかもしれないリソースを探す必要があるときに使用されます。setContextClassLoader 権限を与えることで、システムスレッドを含む特定のスレッドで使用されるコンテキストクラスローダを変更することができます。</target>
        </trans-unit>
        <trans-unit id="5c382ea0f6e622d8b8b41c104555d098f7b132c4" translate="yes" xml:space="preserve">
          <source>The context in which the service has become available</source>
          <target state="translated">サービスが利用可能になったコンテキスト</target>
        </trans-unit>
        <trans-unit id="7e89d3aadd2fc133242406bab583a28ade056edc" translate="yes" xml:space="preserve">
          <source>The context relative to which &lt;code&gt;altName&lt;/code&gt; is named. If null, then the default initial context is implied.</source>
          <target state="translated">&lt;code&gt;altName&lt;/code&gt; の名前に関連するコンテキスト。nullの場合、デフォルトの初期コンテキストが暗示されます。</target>
        </trans-unit>
        <trans-unit id="9ce2783e4e5dd5cbc5de3a3c2791fe493d1b5b93" translate="yes" xml:space="preserve">
          <source>The control character corresponding to</source>
          <target state="translated">に対応する制御文字</target>
        </trans-unit>
        <trans-unit id="e74ab6fbf2fbd58d08490c2d7480131e843f9403" translate="yes" xml:space="preserve">
          <source>The control's ASN.1 BER encoded value.</source>
          <target state="translated">コントロールのASN.1 BERエンコード値。</target>
        </trans-unit>
        <trans-unit id="10a80369bf3b0a07e4be4b96341c9aa03850a503" translate="yes" xml:space="preserve">
          <source>The control's criticality.</source>
          <target state="translated">コントロールの臨界点。</target>
        </trans-unit>
        <trans-unit id="55775f89e5178f6ddda32a06da33c39badc6c01e" translate="yes" xml:space="preserve">
          <source>The control's object identifier string.</source>
          <target state="translated">コントロールのオブジェクト識別子文字列。</target>
        </trans-unit>
        <trans-unit id="5d6d978d47d58f71c7f1271ddd066ad095c8e7b6" translate="yes" xml:space="preserve">
          <source>The conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270e247fd88eb7860b4d0a63df4b9c814a6bf3d7" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Calendar&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;Calendar&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="efd60f8e9860e6d830f6fe82f385538e552bf494" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;Date&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="54a6f4f7aad035dfcc7a40e216ebf648682262d6" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;FileTime&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;FileTime&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="0d9ef9299b2fb831504cc2147231f846f711cd03" translate="yes" xml:space="preserve">
          <source>The conversion does not correspond to any argument.</source>
          <target state="translated">変換はどの引数にも対応していません。</target>
        </trans-unit>
        <trans-unit id="12582e3813a1ad56415e3e99c5a9269b04638260" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ChronoLocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;ChronoLocalDate&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。結果はこの年表を使用しています。</target>
        </trans-unit>
        <trans-unit id="4b54547f5841ed450737930c04beb5ec751b5128" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;LocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;LocalDate&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="70498ef0a69b6eab342c7fac47172341588c109c" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ZoneOffset&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="4b826735171361928b376c1342132346dd4ef147" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから年表と日付を抽出して結合します。この動作は、抽出された年表で&lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="6b3b87af7f6d662b2b8b6d102b13718c4e5b2e3a" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから時系列と日時を抽出して組み合わせます。この動作は、抽出された年表で&lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="bc0526ed650fd16edcc91d9d9d4f4c192d585a6f" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから年表、日付、時刻、およびゾーンを抽出して組み合わせます。この動作は、抽出された年表で&lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="d1d03bf26e9a6cb1c5b95c5f95bbe5b5411246d5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。</target>
        </trans-unit>
        <trans-unit id="fa783f0d9bec9cbce0330f54aae9cb879d9ade79" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; fields.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。</target>
        </trans-unit>
        <trans-unit id="0b804266d47675c8fff80578d89c9217652722e5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="81623a2ca823b67f80d520c5c052168f4c759622" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="9820f4411a835c958ac7328575c291589f31326f" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="41faf7243bccfcf6675028684c04068be4e78524" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により&lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;year&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="6499ccce5fd40cb40838d7075f78094ebeb01d21" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt; units to create a period. If any other units are found then an exception is thrown.</source>
          <target state="translated">変換では、金額から単位のセットをループし、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; の&lt;/a&gt;単位を使用して期間を作成します。他のユニットが見つかった場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d2027683d68cc5bd618e3f017b9f0057b1248599" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt;. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</source>
          <target state="translated">変換では、金額から単位のセットをループし、単位の&lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;を使用して、合計の &lt;code&gt;Duration&lt;/code&gt; を計算します。この方法では、ユニットのサブセットのみが受け入れられます。単位は&lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;正確な期間である&lt;/a&gt;か、24時間として扱われる&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; で&lt;/a&gt;ある必要があります。他のユニットが見つかった場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="adb8598ff9c8ce94abf829e4e923229b7296bb69" translate="yes" xml:space="preserve">
          <source>The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt;, and is made available in the public static fields &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</source>
          <target state="translated">パス名文字列と抽象パス名の間の変換は、本質的にシステムに依存しています。抽象パス名がパス名文字列に変換されるとき、各名前は、デフォルトの&lt;em&gt;区切り文字の&lt;/em&gt;単一のコピーによって次の名前から分離されます。デフォルトの名前区切り文字は、システムプロパティ &lt;code&gt;file.separator&lt;/code&gt; によって定義され、このクラスのパブリック静的フィールド &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; で使用可能になります。パス名文字列が抽象パス名に変換されるとき、その中の名前は、デフォルトの名前区切り文字、または基盤となるシステムでサポートされているその他の名前区切り文字で区切られます。</target>
        </trans-unit>
        <trans-unit id="0f9ba598909cafcafc84e677c238200abf9bf623" translate="yes" xml:space="preserve">
          <source>The conversion process is the reverse of that used by the URLEncoder class. It is assumed that all characters in the encoded string are one of the following: &quot;&lt;code&gt;a&lt;/code&gt;&quot; through &quot;&lt;code&gt;z&lt;/code&gt;&quot;, &quot;&lt;code&gt;A&lt;/code&gt;&quot; through &quot;&lt;code&gt;Z&lt;/code&gt;&quot;, &quot;&lt;code&gt;0&lt;/code&gt;&quot; through &quot;&lt;code&gt;9&lt;/code&gt;&quot;, and &quot;&lt;code&gt;-&lt;/code&gt;&quot;, &quot;&lt;code&gt;_&lt;/code&gt;&quot;, &quot;&lt;code&gt;.&lt;/code&gt;&quot;, and &quot;&lt;code&gt;*&lt;/code&gt;&quot;. The character &quot;&lt;code&gt;%&lt;/code&gt;&quot; is allowed but is interpreted as the start of a special escaped sequence.</source>
          <target state="translated">変換プロセスは、URLEncoderクラスで使用されるプロセスの逆です。エンコードされた文字列のすべての文字は、「 &lt;code&gt;a&lt;/code&gt; 」から「 &lt;code&gt;z&lt;/code&gt; 」、「 &lt;code&gt;A&lt;/code&gt; 」から「 &lt;code&gt;Z&lt;/code&gt; 」、「 &lt;code&gt;0&lt;/code&gt; 」から「 &lt;code&gt;9&lt;/code&gt; 」、および「 &lt;code&gt;-&lt;/code&gt; 」、「 &lt;code&gt;_&lt;/code&gt; 」、「」のいずれかであると想定されています。 &lt;code&gt;.&lt;/code&gt; &quot;、および&quot; &lt;code&gt;*&lt;/code&gt; &quot;。文字「 &lt;code&gt;%&lt;/code&gt; 」は許可されますが、特別なエスケープシーケンスの開始として解釈されます。</target>
        </trans-unit>
        <trans-unit id="fb1ff74c5aed55df321b5f69eb36786f520db7dc" translate="yes" xml:space="preserve">
          <source>The conversion typically uses the &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field, which is standardized across calendar systems.</source>
          <target state="translated">変換では通常、カレンダーシステム全体で標準化されている&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドを使用します。</target>
        </trans-unit>
        <trans-unit id="cbfdcd807f9acab66a49b1ca8f9b0af23d70ee42" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt;&lt;code&gt;TemporalQueries.localDate()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt; &lt;code&gt;TemporalQueries.localDate()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="dbddf0561d8a6eecdccec00ea1f9dc5a0286620b" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt;&lt;code&gt;TemporalQueries.localTime()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt; &lt;code&gt;TemporalQueries.localTime()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="3ab0f44ea5fc468726fdc2960c4ee1963521f34d" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="b208e5c531e20f8176aafb88407764919d7c63ff" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">変換では、最初に一時オブジェクトから &lt;code&gt;ZoneId&lt;/code&gt; を取得し、必要に応じて &lt;code&gt;ZoneOffset&lt;/code&gt; にフォールバックします。次に &lt;code&gt;Instant&lt;/code&gt; を取得しようとし、必要に応じて &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; にフォールバックします。結果は、 &lt;code&gt;ZoneId&lt;/code&gt; または &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;Instant&lt;/code&gt; または &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; の組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。結果はこの年表を使用しています。</target>
        </trans-unit>
        <trans-unit id="571d73d0d2e70c92b228d6825ccb709402d177e7" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;LocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;LocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、まず一時オブジェクトから &lt;code&gt;ZoneId&lt;/code&gt; を取得し、必要に応じて &lt;code&gt;ZoneOffset&lt;/code&gt; にフォールバックします。次に、必要に応じて &lt;code&gt;LocalDateTime&lt;/code&gt; にフォールバックして &lt;code&gt;Instant&lt;/code&gt; を取得しようとします。結果は、 &lt;code&gt;ZoneId&lt;/code&gt; または &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;Instant&lt;/code&gt; または &lt;code&gt;LocalDateTime&lt;/code&gt; の組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="a4e422bfc9d1ec4b2959561dc366330dfb858376" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneOffset&lt;/code&gt; from the temporal object. It will then try to obtain a &lt;code&gt;LocalDateTime&lt;/code&gt;, falling back to an &lt;code&gt;Instant&lt;/code&gt; if necessary. The result will be the combination of &lt;code&gt;ZoneOffset&lt;/code&gt; with either with &lt;code&gt;LocalDateTime&lt;/code&gt; or &lt;code&gt;Instant&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、最初に時間オブジェクトから &lt;code&gt;ZoneOffset&lt;/code&gt; を取得します。次に &lt;code&gt;LocalDateTime&lt;/code&gt; の取得を試み、必要に応じて &lt;code&gt;Instant&lt;/code&gt; フォールバックします。結果は、 &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;LocalDateTime&lt;/code&gt; または &lt;code&gt;Instant&lt;/code&gt; のいずれかとZoneOffsetの組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="6956bf86f5d6bf1d33c22f2f54c601f1ab0adbc0" translate="yes" xml:space="preserve">
          <source>The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">変換では、&lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt;を使用して年表を取得します。指定された一時オブジェクトに年表がない場合、&lt;a href=&quot;isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="fc6ad7ff706fd21e39acd2de086b03b0801af3a8" translate="yes" xml:space="preserve">
          <source>The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt;を使用して、オフセットベースのゾーンよりもリージョンベースのゾーンを優先する方法でゾーンを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="047a76b73af3eddf4a664a5aabf56f3f19a4cb48" translate="yes" xml:space="preserve">
          <source>The cookie is visible to all the pages in the directory you specify, and all the pages in that directory's subdirectories. A cookie's path must include the servlet that set the cookie, for example,</source>
          <target state="translated">クッキーは指定したディレクトリ内のすべてのページと、そのディレクトリのサブディレクトリ内のすべてのページに表示されます。クッキーのパスには、例えば、クッキーを設定したサーブレットが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="67cce5ff929f9bdadcc685d8ff1ecd96493940f0" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;Bindings&lt;/code&gt;.</source>
          <target state="translated">対応する &lt;code&gt;Bindings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b70155a38b4df111e6e3074a162bafc1ae94748e" translate="yes" xml:space="preserve">
          <source>The corresponding Open Type, &lt;em&gt;opentype(J)&lt;/em&gt;. This is an instance of a subclass of &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">対応するオープンタイプ&lt;em&gt;opentype（J）&lt;/em&gt;。これは&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="0c40dcf63722a8c192ee371c1356c058acb3b36f" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectInputStream&lt;/code&gt; is &lt;code&gt;resolveProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;resolveProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; must read any data or objects written by &lt;code&gt;annotateProxyClass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectInputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;resolveProxyClass&lt;/code&gt; です。このメソッドをオーバーライドする &lt;code&gt;ObjectOutputStream&lt;/code&gt; の特定のサブクラスの場合、 &lt;code&gt;ObjectInputStream&lt;/code&gt; の対応するサブクラスの &lt;code&gt;resolveProxyClass&lt;/code&gt; メソッドは、 &lt;code&gt;annotateProxyClass&lt;/code&gt; によって書き込まれたデータまたはオブジェクトを読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="c30c5d8c1a677f64708a87d05ecef9aaa2803beb" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateClass&lt;/code&gt;. This method will be invoked only once for each unique class in the stream. This method can be implemented by subclasses to use an alternate loading mechanism but must return a &lt;code&gt;Class&lt;/code&gt; object. Once returned, if the class is not an array class, its serialVersionUID is compared to the serialVersionUID of the serialized class, and if there is a mismatch, the deserialization fails and an &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;annotateClass&lt;/code&gt; です。このメソッドは、ストリーム内の一意のクラスごとに1回だけ呼び出されます。このメソッドは、代替読み込みメカニズムを使用するためにサブクラスによって実装できますが、 &lt;code&gt;Class&lt;/code&gt; オブジェクトを返す必要があります。返されると、クラスが配列クラスでない場合、そのserialVersionUIDがシリアル化されたクラスのserialVersionUIDと比較され、不一致があると、逆シリアル化は失敗し、&lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="3ac5720f125cacb45fafbd1b321034291ac3311a" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;annotateProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; must write any data or objects read by this method.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;annotateProxyClass&lt;/code&gt; です。このメソッドをオーバーライドする &lt;code&gt;ObjectInputStream&lt;/code&gt; の特定のサブクラスの場合、 &lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するサブクラスの &lt;code&gt;annotateProxyClass&lt;/code&gt; メソッドは、このメソッドによって読み取られたデータまたはオブジェクトを書き込む必要があります。</target>
        </trans-unit>
        <trans-unit id="0abe9c5fa30d544cee3d19e6e84e698aa8e83f99" translate="yes" xml:space="preserve">
          <source>The count must be at least 1.</source>
          <target state="translated">カウントは1以上であること。</target>
        </trans-unit>
        <trans-unit id="69acc6af217f96bcdf2f4de94a0523e36827c529" translate="yes" xml:space="preserve">
          <source>The count of pattern letters determine the format. See &lt;a href=&quot;datetimeformatter#patterns&quot;&gt;DateTimeFormatter&lt;/a&gt; for a user-focused description of the patterns. The following tables define how the pattern letters map to the builder.</source>
          <target state="translated">パターン文字の数がフォーマットを決定します。パターンのユーザー中心の説明については、&lt;a href=&quot;datetimeformatter#patterns&quot;&gt;DateTimeFormatter&lt;/a&gt;を参照してください。次の表は、パターン文字がビルダーにどのようにマッピングされるかを定義しています。</target>
        </trans-unit>
        <trans-unit id="fb5876d2502a179b75086c84bac845b92d02e1cc" translate="yes" xml:space="preserve">
          <source>The count of pattern letters determines the format.</source>
          <target state="translated">パターン文字の数でフォーマットが決まります。</target>
        </trans-unit>
        <trans-unit id="0f4c68175b99dff8a42643f2632dfba5adfcaeeb" translate="yes" xml:space="preserve">
          <source>The count reaches zero due to invocations of the &lt;a href=&quot;countdownlatch#countDown--&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt; method; or</source>
          <target state="translated">&lt;a href=&quot;countdownlatch#countDown--&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しにより、カウントがゼロに達します。または</target>
        </trans-unit>
        <trans-unit id="e4087c27faf9f64f3d727250d7f786fc190aa5fd" translate="yes" xml:space="preserve">
          <source>The country value in the &lt;code&gt;Locale&lt;/code&gt; created by the &lt;code&gt;Builder&lt;/code&gt; is always normalized to upper case.</source>
          <target state="translated">&lt;code&gt;Builder&lt;/code&gt; によって作成された &lt;code&gt;Locale&lt;/code&gt; の国の値は常に大文字に正規化されます。</target>
        </trans-unit>
        <trans-unit id="9202768045feae2a7883c716972bbd4862e06c8f" translate="yes" xml:space="preserve">
          <source>The country/region code, or the empty string if none is defined.</source>
          <target state="translated">国/地域コード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="66e77c53bc1dd645c582b4b8aa762d175e4a06eb" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成された &lt;code&gt;Spliterator&lt;/code&gt; は、さらにSpliterator.SIZEDを報告し&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3451a12989e9215713f45711d9e6be0a3b84602a" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成された &lt;code&gt;Spliterator&lt;/code&gt; はさらにSpliterator.SUBSIZEDを報告し&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f5fcb7852a2398a51db098b96f0e8d95c7c56a" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成された &lt;code&gt;Spliterator&lt;/code&gt; はSpliterator.SIZEDを報告し&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="690bf7556ab8654b5fd1284d20114a7176fdd25f" translate="yes" xml:space="preserve">
          <source>The creation of the channel should specify the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; that corresponds to the address type of the multicast groups that the channel will join. There is no guarantee that a channel to a socket in one protocol family can join and receive multicast datagrams when the address of the multicast group corresponds to another protocol family. For example, it is implementation specific if a channel to an &lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket can join an &lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; multicast group and receive multicast datagrams sent to the group.</source>
          <target state="translated">チャネルの作成では、チャネルが参加するマルチキャストグループのアドレスタイプに対応する&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;を指定する必要があります。マルチキャストグループのアドレスが別のプロトコルファミリに対応している場合、1つのプロトコルファミリのソケットへのチャネルがマルチキャストデータグラムに参加して受信できるという保証はありません。たとえば、&lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;ソケットへのチャネルが&lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;マルチキャストグループに参加し、グループに送信されたマルチキャストデータグラムを受信できるかどうかは、実装固有です。</target>
        </trans-unit>
        <trans-unit id="f42aa3178f37922aa46485101a1f963f93b83d8e" translate="yes" xml:space="preserve">
          <source>The creation time is from the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt; when read from a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">作成時間は、ZIPファイルまたはZIPファイル形式のストリームから読み取られたときのエントリの &lt;code&gt;optional extra data&lt;/code&gt; の拡張タイムスタンプフィールドから取得されます。</target>
        </trans-unit>
        <trans-unit id="76b2b21e25b895ed5e224699e62899bac9537aa3" translate="yes" xml:space="preserve">
          <source>The cryptographic parameters used by the sealing Cipher, encoded in the default format.</source>
          <target state="translated">封印暗号が使用する暗号化パラメータをデフォルトの形式でエンコードしたものです。</target>
        </trans-unit>
        <trans-unit id="a420c5b7dc176e9c8376b29f3b99362d7409dae9" translate="yes" xml:space="preserve">
          <source>The cryptographic service name must not contain any dots.</source>
          <target state="translated">暗号化サービス名にはドットを含んではいけません。</target>
        </trans-unit>
        <trans-unit id="5fac18c065a17ba110664a833562fea825e207c5" translate="yes" xml:space="preserve">
          <source>The cryptographic service name must not contain any dots. There must be one or more space characters between the</source>
          <target state="translated">暗号サービス名には、ドットを含んではならない。の間には、1つ以上のスペース文字がなければなりません。</target>
        </trans-unit>
        <trans-unit id="f9ff403eaee48d46144b5af3402e6cddd71fa7cb" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Locale&lt;/code&gt; to be used for localization, or &lt;code&gt;null&lt;/code&gt; if none has been set.</source>
          <target state="translated">ローカリゼーションに使用される現在の &lt;code&gt;Locale&lt;/code&gt; 。何も設定されていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19f45a48f0f52abbe57d28861906d21a733ea0ea" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Locale&lt;/code&gt; to be used for localization, or &lt;code&gt;null&lt;/code&gt; if none has been set. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ローカリゼーションに使用される現在の &lt;code&gt;Locale&lt;/code&gt; 。何も設定されていない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトでは &lt;code&gt;null&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="9afbc55d0f58a4928c1ac93362ed95025cad363f" translate="yes" xml:space="preserve">
          <source>The current MIDI volume level for the voice. The value ranges from 0 to 127 if the voice is active, and is unspecified if the voice is inactive.</source>
          <target state="translated">ボイスの現在の MIDI ボリュームレベル。ボイスがアクティブな場合は 0 から 127 までの値で、ボイスが非アクティブな場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="3ad35119f4d6b600ad01fb75ffdc7cbb41a4dda7" translate="yes" xml:space="preserve">
          <source>The current bit offset within the stream. Subclasses are responsible for keeping this value current from any method they override that alters the bit offset.</source>
          <target state="translated">ストリーム内の現在のビットオフセット。サブクラスは、ビットオフセットを変更するオーバーライドされたメソッドから、この値を現在の値に保つ責任があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
