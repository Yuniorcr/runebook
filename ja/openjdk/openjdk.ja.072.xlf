<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="1316aaf79aa8ed066c90c951ce69fdcd306a3f99" translate="yes" xml:space="preserve">
          <source>This class represents a Socket Address with no protocol attachment. As an abstract class, it is meant to be subclassed with a specific, protocol dependent, implementation.</source>
          <target state="translated">このクラスは、プロトコルに依存しないソケットアドレスを表します。抽象クラスであるため、特定のプロトコルに依存した実装でサブクラス化されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="b87ebd3f5b6b1ce876cdd22e38870c99fa39df28" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">このクラスは、デフォルトの&lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;実装を作成するビルダーを表します。</target>
        </trans-unit>
        <trans-unit id="b2a46dd854d82a07d4416b4b92a199cbbe5b71df" translate="yes" xml:space="preserve">
          <source>This class represents a builder that creates a default &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; implementation. The JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; allows applications to provide their custom MBeanServer implementation by providing a subclass of this class.</source>
          <target state="translated">このクラスは、デフォルトの&lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;実装を作成するビルダーを表します。JMX &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; を&lt;/a&gt;使用すると、アプリケーションはこのクラスのサブクラスを提供することにより、カスタムMBeanServer実装を提供できます。</target>
        </trans-unit>
        <trans-unit id="d3aadb5888413b5189a8637523b51a069a39530d" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces.</source>
          <target state="translated">このクラスは、複数のネームスペースにまたがるコンポーネント名のシーケンスである複合名を表します。</target>
        </trans-unit>
        <trans-unit id="0c9964d123ae70169128ba69f435316bc6d6e719" translate="yes" xml:space="preserve">
          <source>This class represents a composite name -- a sequence of component names spanning multiple namespaces. Each component is a string name from the namespace of a naming system. If the component comes from a hierarchical namespace, that component can be further parsed into its atomic parts by using the CompoundName class.</source>
          <target state="translated">このクラスは、複数の名前空間にまたがるコンポーネント名のシーケンスである複合名を表します。各コンポーネントは、命名システムの名前空間からの文字列名です。コンポーネントが階層的な名前空間から来ている場合は、CompoundName クラスを使用して、そのコンポーネントをさらに原子部分に解析することができます。</target>
        </trans-unit>
        <trans-unit id="b58d69688121f64751f830087f078a9f0dc6eaf6" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space.</source>
          <target state="translated">このクラスは複合名 --階層的な名前空間の名前 --を表します。</target>
        </trans-unit>
        <trans-unit id="4e7f905c66689d054fc2d3da806e4f5494d8dbcd" translate="yes" xml:space="preserve">
          <source>This class represents a compound name -- a name from a hierarchical name space. Each component in a compound name is an atomic name.</source>
          <target state="translated">このクラスは複合名 --階層的な名前空間の名前 --を表します。複合名の各構成要素は原子名です。</target>
        </trans-unit>
        <trans-unit id="7070f171f3fc726c6ecd3521f24ea6e3dcdef0bd" translate="yes" xml:space="preserve">
          <source>This class represents a datagram packet.</source>
          <target state="translated">このクラスは、データグラムパケットを表します。</target>
        </trans-unit>
        <trans-unit id="17470ad631260836eb75c7506c604373609c991d" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253で&lt;/a&gt;指定されている識別名を表します。</target>
        </trans-unit>
        <trans-unit id="e46441b22c9e980ce1d9c4925d4b185f7df9afdb" translate="yes" xml:space="preserve">
          <source>This class represents a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. A distinguished name, or DN, is composed of an ordered list of components called &lt;em&gt;relative distinguished name&lt;/em&gt;s, or RDNs. Details of a DN's syntax are described in RFC 2253.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253で&lt;/a&gt;指定されている識別名を表します。識別名（DN）は、&lt;em&gt;相対識別名&lt;/em&gt;（RDN）と呼ばれるコンポーネントの順序付きリストで構成されています。DNの構文の詳細は、RFC 2253で説明されています。</target>
        </trans-unit>
        <trans-unit id="4123c703847205565ff309b83324f6af0bd57e89" translate="yes" xml:space="preserve">
          <source>This class represents a factory for secret keys.</source>
          <target state="translated">このクラスは秘密鍵のファクトリを表します。</target>
        </trans-unit>
        <trans-unit id="2a79cf3f9125637abeb8c6c4a9c8dd6b2f360844" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions.</source>
          <target state="translated">このクラスは、異種のパーミッションのコレクションを表します。</target>
        </trans-unit>
        <trans-unit id="7cac7ca93555f6887e8043bef23dc35a20ce7561" translate="yes" xml:space="preserve">
          <source>This class represents a heterogeneous collection of Permissions. That is, it contains different types of Permission objects, organized into PermissionCollections. For example, if any &lt;code&gt;java.io.FilePermission&lt;/code&gt; objects are added to an instance of this class, they are all stored in a single PermissionCollection. It is the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the FilePermission class. Similarly, any &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; objects are stored in the PermissionCollection returned by a call to the &lt;code&gt;newPermissionCollection&lt;/code&gt; method in the RuntimePermission class. Thus, this class represents a collection of PermissionCollections.</source>
          <target state="translated">このクラスは、権限の異種のコレクションを表します。つまり、PermissionCollectionsに編成されたさまざまなタイプのPermissionオブジェクトが含まれています。たとえば、 &lt;code&gt;java.io.FilePermission&lt;/code&gt; オブジェクトがこのクラスのインスタンスに追加されると、それらはすべて1つのPermissionCollectionに格納されます。これは、FilePermissionクラスの &lt;code&gt;newPermissionCollection&lt;/code&gt; メソッドの呼び出しによって返されるPermissionCollection です。同様に、 &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt; オブジェクトは、RuntimePermissionクラスの &lt;code&gt;newPermissionCollection&lt;/code&gt; メソッドの呼び出しによって返されるPermissionCollectionに格納されます。したがって、このクラスはPermissionCollectionsのコレクションを表します。</target>
        </trans-unit>
        <trans-unit id="196aec2a3f42120cec5ed4d8a56bb2fee12941d9" translate="yes" xml:space="preserve">
          <source>This class represents a modification item.</source>
          <target state="translated">変更項目を表すクラスです。</target>
        </trans-unit>
        <trans-unit id="ed8cca684d581c46d5473f4486cfcf1d4e6d3c5a" translate="yes" xml:space="preserve">
          <source>This class represents a modification item. It consists of a modification code and an attribute on which to operate.</source>
          <target state="translated">修正項目を表すクラスです。変更コードと操作対象の属性から構成されます。</target>
        </trans-unit>
        <trans-unit id="e5b81e8b48823640d878d6aa01f1ee4dc0ba4995" translate="yes" xml:space="preserve">
          <source>This class represents a name-to-object binding found in a context.</source>
          <target state="translated">このクラスは、コンテキストで見つかる名前とオブジェクトのバインディングを表します。</target>
        </trans-unit>
        <trans-unit id="beb0e3a08a5745f02177b59fc85d03cc8b67bd41" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address.</source>
          <target state="translated">このクラスはプロキシの設定を表し、典型的には型 (http,socks)とソケットアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="e6b25c979d575eecf8dfc1ae8805f535fe0e97f2" translate="yes" xml:space="preserve">
          <source>This class represents a proxy setting, typically a type (http, socks) and a socket address. A &lt;code&gt;Proxy&lt;/code&gt; is an immutable object.</source>
          <target state="translated">このクラスは、プロキシ設定、通常はタイプ（http、socks）とソケットアドレスを表します。A &lt;code&gt;Proxy&lt;/code&gt; 不変オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="584a1ab504a2941aae8807e7242173adc00c09cc" translate="yes" xml:space="preserve">
          <source>This class represents a public or private key in encoded format.</source>
          <target state="translated">このクラスは、エンコードされた形式の公開鍵または秘密鍵を表します。</target>
        </trans-unit>
        <trans-unit id="ecbc41d04711c9c6d7b2547e265b1c6900bdb022" translate="yes" xml:space="preserve">
          <source>This class represents a reference to an object that is found outside of the naming/directory system.</source>
          <target state="translated">このクラスは、命名/ディレクトリシステムの外にあるオブジェクトへの参照を表します。</target>
        </trans-unit>
        <trans-unit id="71f3a9d828a7ec07b77c49c8041b7347841243b0" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253で&lt;/a&gt;指定されている識別名のコンポーネントである相対識別名（RDN）を表します。</target>
        </trans-unit>
        <trans-unit id="8573e6c2900df8bfdda96524318d1a680bb713e4" translate="yes" xml:space="preserve">
          <source>This class represents a relative distinguished name, or RDN, which is a component of a distinguished name as specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;. An example of an RDN is &quot;OU=Sales+CN=J.Smith&quot;. In this example, the RDN consist of multiple attribute type/value pairs. The RDN is parsed as described in the class description for &lt;a href=&quot;ldapname&quot;&gt;&lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253で&lt;/a&gt;指定されている識別名のコンポーネントである相対識別名（RDN）を表します。RDNの例は「OU = Sales + CN = J.Smith」です。この例では、RDNは複数の属性タイプ/値のペアで構成されています。RDNは、&lt;a href=&quot;ldapname&quot;&gt; &lt;code&gt;&lt;code&gt;LdapName&lt;/code&gt;&lt;/code&gt; の&lt;/a&gt;クラスの説明で説明されているように解析されます。</target>
        </trans-unit>
        <trans-unit id="a02a9f5fbadbb1f07365f04a62e23ad2829f8526" translate="yes" xml:space="preserve">
          <source>This class represents a scope for identities. It is an Identity itself, and therefore has a name and can have a scope. It can also optionally have a public key and associated certificates.</source>
          <target state="translated">このクラスは、アイデンティティのスコープを表します。これは Identity 自体であるため、名前があり、スコープを持つことができる。オプションで、公開鍵と関連する証明書を持つこともできます。</target>
        </trans-unit>
        <trans-unit id="ca95ec8feb051b649b867d0766ff6d4d848acea9" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Configuration&lt;/code&gt; クラスの &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; メソッドで指定されたアプリケーション用に構成された単一の &lt;code&gt;LoginModule&lt;/code&gt; エントリを表します。</target>
        </trans-unit>
        <trans-unit id="297e4a49730e6d2370114e300324dda6a37bf458" translate="yes" xml:space="preserve">
          <source>This class represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method in the &lt;code&gt;Configuration&lt;/code&gt; class. Each respective &lt;code&gt;AppConfigurationEntry&lt;/code&gt; contains a &lt;code&gt;LoginModule&lt;/code&gt; name, a control flag (specifying whether this &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific options. Please refer to the &lt;code&gt;Configuration&lt;/code&gt; class for more information on the different control flags and their semantics.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Configuration&lt;/code&gt; クラスの &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; メソッドで指定されたアプリケーション用に構成された単一の &lt;code&gt;LoginModule&lt;/code&gt; エントリを表します。それぞれの &lt;code&gt;AppConfigurationEntry&lt;/code&gt; には、 &lt;code&gt;LoginModule&lt;/code&gt; 名、制御フラグ（この &lt;code&gt;LoginModule&lt;/code&gt; がREQUIRED、REQUISITE、SUFFICIENT、OPTIONALのいずれであるかを指定）、およびLoginModule固有のオプションが含まれています。さまざまな制御フラグとそのセマンティクスの詳細については、 &lt;code&gt;Configuration&lt;/code&gt; クラスを参照してください。</target>
        </trans-unit>
        <trans-unit id="640d68686faefa0f361a378f82b1b0fc09bb4870" translate="yes" xml:space="preserve">
          <source>This class represents a socket for sending and receiving datagram packets.</source>
          <target state="translated">このクラスは,データグラムパケットを送受信するためのソケットを表します.</target>
        </trans-unit>
        <trans-unit id="05f074451aa9e736c72cd5d98547889c8f032150" translate="yes" xml:space="preserve">
          <source>This class represents a storage facility for cryptographic keys and certificates.</source>
          <target state="translated">このクラスは、暗号鍵と証明書の保管施設を表す。</target>
        </trans-unit>
        <trans-unit id="45fdf96d726479eab8566d09c1911463b0630c56" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory.</source>
          <target state="translated">このクラスは、ファイルやディレクトリへのアクセスを表します。</target>
        </trans-unit>
        <trans-unit id="96c9ed296b295e130368c10ce172ca29da14d27c" translate="yes" xml:space="preserve">
          <source>This class represents access to a file or directory. A FilePermission consists of a pathname and a set of actions valid for that pathname.</source>
          <target state="translated">このクラスは、ファイルやディレクトリへのアクセスを表します。FilePermission は、パス名とそのパス名に対して有効なアクションのセットから構成されます。</target>
        </trans-unit>
        <trans-unit id="6e35f7fc25369199a5888640962d3cf36c27158f" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets.</source>
          <target state="translated">このクラスは、ソケットを介したネットワークへのアクセスを表します。</target>
        </trans-unit>
        <trans-unit id="4fd26ad0b54898f528e3da0fd358463440e01702" translate="yes" xml:space="preserve">
          <source>This class represents access to a network via sockets. A SocketPermission consists of a host specification and a set of &quot;actions&quot; specifying ways to connect to that host. The host is specified as</source>
          <target state="translated">このクラスは、ソケットを介したネットワークへのアクセスを表します。SocketPermissionは、ホストの指定と、そのホストへの接続方法を指定する一連の「アクション」から構成されます。ホストは</target>
        </trans-unit>
        <trans-unit id="35c02ac1117024cec60ba5833d97c4503db7dbbd" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;.</source>
          <target state="translated">このクラスは &lt;code&gt;X500PrivateCredential&lt;/code&gt; を表します。</target>
        </trans-unit>
        <trans-unit id="597b1bf46aeb0968dd77f5a6c471fe96e4f74091" translate="yes" xml:space="preserve">
          <source>This class represents an &lt;code&gt;X500PrivateCredential&lt;/code&gt;. It associates an X.509 certificate, corresponding private key and the KeyStore alias used to reference that exact key pair in the KeyStore. This enables looking up the private credentials for an X.500 principal in a subject.</source>
          <target state="translated">このクラスは &lt;code&gt;X500PrivateCredential&lt;/code&gt; を表します。これは、X.509証明書、対応する秘密鍵、およびKeyStore内の正確な鍵ペアを参照するために使用されるKeyStoreエイリアスを関連付けます。これにより、サブジェクトのX.500プリンシパルのプライベート資格情報を検索できます。</target>
        </trans-unit>
        <trans-unit id="5da08fc27084a8aabc79a56c347ed1adb802e76d" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol (IP) address.</source>
          <target state="translated">このクラスは、インターネットプロトコル (IP)アドレスを表します。</target>
        </trans-unit>
        <trans-unit id="bef48e6b1ba57a7171d54341435b8a0f4108e35c" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address.</source>
          <target state="translated">このクラスは、インターネットプロトコルバージョン 4 (IPv4)アドレスを表します。</target>
        </trans-unit>
        <trans-unit id="4404510f4c4b02813ee1c30570ebef462e7dd942" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 4 (IPv4) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt; &lt;i&gt;RFC 790: Assigned Numbers&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt; &lt;i&gt;RFC 1918: Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt;, and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365: Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">このクラスは、インターネットプロトコルバージョン4（IPv4）アドレスを表します。&lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790：割り当てられた番号&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt;&lt;i&gt;RFC 1918：プライベートインターネットのアドレス割り当て&lt;/i&gt;&lt;/a&gt;、および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365：管理用スコープのIPマルチキャストで&lt;/i&gt;&lt;/a&gt;定義 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9ca47090f8419b40c56f70b0bafd476aff2a4973" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address.</source>
          <target state="translated">このクラスは、インターネットプロトコルバージョン 6 (IPv6)アドレスを表します。</target>
        </trans-unit>
        <trans-unit id="2d5bbebbe427bab598fb25281b3b248f813f1b40" translate="yes" xml:space="preserve">
          <source>This class represents an Internet Protocol version 6 (IPv6) address. Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt; &lt;i&gt;RFC 2373: IP Version 6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスは、インターネットプロトコルバージョン6（IPv6）アドレスを表します。&lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373：IP Version 6 Addressing Architectureで&lt;/i&gt;&lt;/a&gt;定義されてい&lt;i&gt;ます&lt;/i&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a8155b02899707f88ae3edafcc48b6656d828c0c" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;.</source>
          <target state="translated">このクラスはX.500 &lt;code&gt;Principal&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="ea8fd17c39f18d83341c0e789af157690cbf1fa2" translate="yes" xml:space="preserve">
          <source>This class represents an X.500 &lt;code&gt;Principal&lt;/code&gt;. &lt;code&gt;X500Principal&lt;/code&gt;s are represented by distinguished names such as &quot;CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US&quot;.</source>
          <target state="translated">このクラスはX.500 &lt;code&gt;Principal&lt;/code&gt; 表します。 &lt;code&gt;X500Principal&lt;/code&gt; は、「CN = Duke、OU = JavaSoft、O = Sun Microsystems、C = US」などの識別名で表されます。</target>
        </trans-unit>
        <trans-unit id="9c49cfbbfc4d25b023035a9ec5edf2c898f71c3c" translate="yes" xml:space="preserve">
          <source>This class represents an error that has occurred when using SASL.</source>
          <target state="translated">このクラスは、SASL を使用する際に発生したエラーを表します。</target>
        </trans-unit>
        <trans-unit id="b7718890ea368072fc569ea892e93571154c3cfc" translate="yes" xml:space="preserve">
          <source>This class represents an event fired by a naming/directory service.</source>
          <target state="translated">このクラスは、命名/ディレクトリサービスによって発生するイベントを表します。</target>
        </trans-unit>
        <trans-unit id="3b0fdd1a298d702aa16a46f65ffe68bf1ab3fe87" translate="yes" xml:space="preserve">
          <source>This class represents an event fired in response to an unsolicited notification sent by the LDAP server.</source>
          <target state="translated">このクラスは、LDAPサーバーから送信された未承諾の通知に応答して発生するイベントを表します。</target>
        </trans-unit>
        <trans-unit id="8daaad7e039d9492107335b3b2a5aa61683b8d41" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;NamingEvent&lt;/code&gt; のリスナーに通知するための情報を収集するために使用されるプロシージャ/プロセスが &lt;code&gt;NamingException&lt;/code&gt; をスローしたときに発生するイベントを表します。</target>
        </trans-unit>
        <trans-unit id="44004aad051bbbef9d2ee95d6412eee8c8b2110f" translate="yes" xml:space="preserve">
          <source>This class represents an event fired when the procedures/processes used to collect information for notifying listeners of &lt;code&gt;NamingEvent&lt;/code&gt;s threw a &lt;code&gt;NamingException&lt;/code&gt;. This can happen, for example, if the server which the listener is using aborts subsequent to the &lt;code&gt;addNamingListener()&lt;/code&gt; call.</source>
          <target state="translated">このクラスは、 &lt;code&gt;NamingEvent&lt;/code&gt; のリスナーに通知するための情報を収集するために使用されるプロシージャ/プロセスが &lt;code&gt;NamingException&lt;/code&gt; をスローしたときに発生するイベントを表します。これは、たとえば、リスナーが使用しているサーバーが &lt;code&gt;addNamingListener()&lt;/code&gt; 呼び出しの後で異常終了した場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6b447b0c5f978595c0b42ee443fd1873d2a5f1fa" translate="yes" xml:space="preserve">
          <source>This class represents an item in the NamingEnumeration returned as a result of the DirContext.search() methods.</source>
          <target state="translated">このクラスは、DirContext.search()メソッドの結果として返される NamingEnumeration の項目を表します。</target>
        </trans-unit>
        <trans-unit id="9d9fafa34e9b2f65d71ae93644092567545924f8" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm.</source>
          <target state="translated">このクラスは、モデルビューのパラダイムにおける観測可能なオブジェクト、つまり「データ」を表します。</target>
        </trans-unit>
        <trans-unit id="ad081c6f7a7669b9fcaeea37a39cc37f50a30806" translate="yes" xml:space="preserve">
          <source>This class represents an observable object, or &quot;data&quot; in the model-view paradigm. It can be subclassed to represent an object that the application wants to have observed.</source>
          <target state="translated">このクラスは、観測可能なオブジェクト、つまりモデルビューのパラダイムにおける「データ」を表します。このクラスは、アプリケーションが観測したいオブジェクトを表すためにサブクラス化することができます。</target>
        </trans-unit>
        <trans-unit id="83e1f6c7452b250bbcc17b56d13f0c1745763ae6" translate="yes" xml:space="preserve">
          <source>This class represents identities: real-world objects such as people, companies or organizations whose identities can be authenticated using their public keys. Identities may also be more abstract (or concrete) constructs, such as daemon threads or smart cards.</source>
          <target state="translated">このクラスは、アイデンティティを表します。 人や企業、組織などの実世界のオブジェクトで、公開鍵を使ってアイデンティティを認証することができます。識別子は、デーモンスレッドやスマートカードのような、より抽象的な (あるいは具体的な)構成物である場合もあります。</target>
        </trans-unit>
        <trans-unit id="c3d4a94307b5f9b3ebbdf2b235b7dc11b06744c9" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;.</source>
          <target state="translated">このクラスは、ASN.1タイプ &lt;code&gt;PrivateKeyInfo&lt;/code&gt; に従ってエンコードされた、秘密鍵のASN.1エンコードを表します。</target>
        </trans-unit>
        <trans-unit id="86e9b50884031de0a10cba5fe9d7ce0103ddb7c0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type &lt;code&gt;PrivateKeyInfo&lt;/code&gt;. The &lt;code&gt;PrivateKeyInfo&lt;/code&gt; syntax is defined in the PKCS#8 standard as follows:</source>
          <target state="translated">このクラスは、ASN.1タイプ &lt;code&gt;PrivateKeyInfo&lt;/code&gt; に従ってエンコードされた、秘密鍵のASN.1エンコードを表します。 &lt;code&gt;PrivateKeyInfo&lt;/code&gt; での次のような構文は、PKCS＃8標準で定義されます。</target>
        </trans-unit>
        <trans-unit id="60979597056c3ac16ebe813c087f2ea6ef60c9b0" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;.</source>
          <target state="translated">このクラスは、ASN.1タイプの &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; に従ってエンコードされた、公開鍵のASN.1エンコードを表します。</target>
        </trans-unit>
        <trans-unit id="f238e432344ac7eb0d323154e90ddb22b3a9be5e" translate="yes" xml:space="preserve">
          <source>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt;. The &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; syntax is defined in the X.509 standard as follows:</source>
          <target state="translated">このクラスは、ASN.1タイプの &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; に従ってエンコードされた、公開鍵のASN.1エンコードを表します。 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; での次のような構文は、X.509標準で定義されています。</target>
        </trans-unit>
        <trans-unit id="aec0b89cdf0c1c0c3879f8289fa96387f53ab0c1" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point.</source>
          <target state="translated">このクラスは、通信エンドポイントのアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="2cc0e4e13d261225d7d5ecad06612f2348dffe71" translate="yes" xml:space="preserve">
          <source>This class represents the address of a communications end-point. It consists of a type that describes the communication mechanism and an address contents determined by an RefAddr subclass.</source>
          <target state="translated">通信エンドポイントのアドレスを表すクラスである。通信機構を記述する型と RefAddr サブクラスで決定されたアドレス内容から構成される。</target>
        </trans-unit>
        <trans-unit id="09e8d15b311a50876d340865b118748ac086830c" translate="yes" xml:space="preserve">
          <source>This class represents the binary form of the address of a communications end-point.</source>
          <target state="translated">このクラスは、通信エンドポイントのアドレスのバイナリ形式を表します。</target>
        </trans-unit>
        <trans-unit id="544dd14dbdd06652ace8bec1484310b9c0ef055c" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">このクラスは、 &lt;code&gt;MLET&lt;/code&gt; タグのコンテンツを表します。</target>
        </trans-unit>
        <trans-unit id="ed8feef07eaf8295b20b9f1c888e6c0187c5e90a" translate="yes" xml:space="preserve">
          <source>This class represents the contents of the &lt;code&gt;MLET&lt;/code&gt; tag. It can be consulted by a subclass of &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; that overrides the &lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt;&lt;code&gt;MLet.check&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このクラスは、 &lt;code&gt;MLET&lt;/code&gt; タグのコンテンツを表します。これは、&lt;a href=&quot;mlet#check-java.lang.String-java.net.URL-java.lang.String-javax.management.loading.MLetContent-&quot;&gt; &lt;code&gt;MLet.check&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドする&lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; の&lt;/a&gt;サブクラスによって参照できます。</target>
        </trans-unit>
        <trans-unit id="fd25395d77c9ed85b0d3f717dd0fa00f0309743f" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans.</source>
          <target state="translated">このクラスはModelMBeansのメタデータを表します。</target>
        </trans-unit>
        <trans-unit id="2f2b34ddd37ace51ac7c93f6c996e35bd851f2f3" translate="yes" xml:space="preserve">
          <source>This class represents the meta data for ModelMBeans. Descriptors have been added on the meta data objects.</source>
          <target state="translated">ModelMBeansのメタデータを表すクラスです。メタデータオブジェクトにはディスクリプタが追加されています。</target>
        </trans-unit>
        <trans-unit id="9575a4ba849add0fd8b33418be3743a6834c7223" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element.</source>
          <target state="translated">このクラスは,ModelMBean要素のメタデータセットを表します.</target>
        </trans-unit>
        <trans-unit id="aae700f21e0212f303421dc3fee01f330acbdde1" translate="yes" xml:space="preserve">
          <source>This class represents the metadata set for a ModelMBean element. A descriptor is part of the ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, and ModelMBeanParameterInfo.</source>
          <target state="translated">このクラスは、ModelMBean要素のメタデータセットを表します。記述子は,ModelMBeanInfo,ModelMBeanNotificationInfo,ModelMBeanAttributeInfo,ModelMBeanConstructorInfo,およびModelMBeanParameterInfoの一部です.</target>
        </trans-unit>
        <trans-unit id="97fb072c064abfa1e2afc74067fead2f532be446" translate="yes" xml:space="preserve">
          <source>This class represents the object name and class name pair of a binding found in a context.</source>
          <target state="translated">このクラスは、コンテキストで見つかったバインディングのオブジェクト名とクラス名のペアを表します。</target>
        </trans-unit>
        <trans-unit id="ad812636f21fa9e17c4e941198e1db0bf39887b4" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name.</source>
          <target state="translated">このクラスは、名前の解決結果を表します。</target>
        </trans-unit>
        <trans-unit id="7c58737f3ddd4d9f5fe490a9a74bd744fdcfc663" translate="yes" xml:space="preserve">
          <source>This class represents the result of resolution of a name. It contains the object to which name was resolved, and the portion of the name that has not been resolved.</source>
          <target state="translated">このクラスは、名前の解決結果を表します。名前が解決されたオブジェクトと、解決されなかった名前の部分が含まれます。</target>
        </trans-unit>
        <trans-unit id="38ca9ed1a37cb7b84401c77cecbd410c3e8da0d4" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers.</source>
          <target state="translated">このクラスは、数値をフォーマットするために &lt;code&gt;DecimalFormat&lt;/code&gt; が必要とする記号のセット（小数点記号、グループ化記号など）を表します。</target>
        </trans-unit>
        <trans-unit id="48624c6e1d8a0bf6e9dc9ef7bc4796ae92729fe0" translate="yes" xml:space="preserve">
          <source>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;code&gt;DecimalFormat&lt;/code&gt; to format numbers. &lt;code&gt;DecimalFormat&lt;/code&gt; creates for itself an instance of &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; from its locale data. If you need to change any of these symbols, you can get the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object from your &lt;code&gt;DecimalFormat&lt;/code&gt; and modify it.</source>
          <target state="translated">このクラスは、数値をフォーマットするために &lt;code&gt;DecimalFormat&lt;/code&gt; が必要とする記号のセット（小数点記号、グループ化記号など）を表します。 &lt;code&gt;DecimalFormat&lt;/code&gt; は、自身のロケールデータから &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; のインスタンスを作成します。あなたはこれらの記号のいずれかを変更する必要がある場合は、あなたが得ることができ &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; あなたからオブジェクトを &lt;code&gt;DecimalFormat&lt;/code&gt; は、それを修正します。</target>
        </trans-unit>
        <trans-unit id="f265c252d89abef8cf04f968c72e0e26bf915c0c" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point.</source>
          <target state="translated">このクラスは、通信エンドポイントのアドレスを文字列形式で表現します。</target>
        </trans-unit>
        <trans-unit id="418dc123122202354a4ec878f1f0eea6e363c940" translate="yes" xml:space="preserve">
          <source>This class represents the string form of the address of a communications end-point. It consists of a type that describes the communication mechanism and a string contents specific to that communication mechanism. The format and interpretation of the address type and the contents of the address are based on the agreement of three parties: the client that uses the address, the object/server that can be reached using the address, and the administrator or program that creates the address.</source>
          <target state="translated">通信端点のアドレスの文字列形式を表すクラスである。通信機構を記述する型と、その通信機構に固有の文字列内容から構成される。アドレス型とアドレスの内容の形式と解釈は、アドレスを利用するクライアント、アドレスを利用して到達可能なオブジェク ト/サーバ、アドレスを作成する管理者やプログラムの三者の合意に基づいている。</target>
        </trans-unit>
        <trans-unit id="5ede9917186009ca67d63ddb4e5d9fccd64bd7c8" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm.</source>
          <target state="translated">このクラスは、PKIX 認証パス・ビルダー・アルゴリズムの成功した結果を表します。</target>
        </trans-unit>
        <trans-unit id="253d67fe79dd74684f247507a29b69b61f8d3228" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path builder algorithm. All certification paths that are built and returned using this algorithm are also validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">このクラスは、PKIX 認証パスビルダアルゴリズムの成功した結果を表します。このアルゴリズムを使用して構築され、返されるすべての認証パスは、PKIX 認証パス検証アルゴリズムに従って検証されます。</target>
        </trans-unit>
        <trans-unit id="4b74bcf11374b356b27f5f1ddc676aa0f16938c3" translate="yes" xml:space="preserve">
          <source>This class represents the successful result of the PKIX certification path validation algorithm.</source>
          <target state="translated">このクラスは、PKIX 認証パス検証アルゴリズムの成功した結果を表します。</target>
        </trans-unit>
        <trans-unit id="ca0589fc428b1844c4faa592c6b73c76d7d378bd" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1.</source>
          <target state="translated">このクラスは、PKCS#1 v2.1で定義されているRSAのOtherPrimeInfo構造体の中のトリプレット(素数、指数、係数)を表します。</target>
        </trans-unit>
        <trans-unit id="97545fe1e68962710e1bd66c03204757b9cf86bb" translate="yes" xml:space="preserve">
          <source>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. The ASN.1 syntax of RSA's OtherPrimeInfo is as follows:</source>
          <target state="translated">このクラスは、PKCS#1 v2.1で定義されたRSAのOtherPrimeInfo構造体の中のトリプレット(素数、指数、係数)を表します。RSAのOtherPrimeInfoのASN.1構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a68aa2cc3807b341c15bfb324b46d7e585e6933c" translate="yes" xml:space="preserve">
          <source>This class represents whether or not a &lt;code&gt;LoginModule&lt;/code&gt; is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL.</source>
          <target state="translated">このクラスは、 &lt;code&gt;LoginModule&lt;/code&gt; がREQUIRED、REQUISITE、SUFFICIENT、またはOPTIONALであるかどうかを表します。</target>
        </trans-unit>
        <trans-unit id="c480371d93b15aca7a52a5a2484c2f3c5d59e4d1" translate="yes" xml:space="preserve">
          <source>This class resolves a few ambiguities found in RFC 2253 as follows:</source>
          <target state="translated">このクラスは、RFC2253で見つかったいくつかの曖昧さを以下のように解決します。</target>
        </trans-unit>
        <trans-unit id="b56c8ce17df32424f6ebcf8e74cce7b8e442ec97" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; メソッドへのパラメーターブロックとして機能します。</target>
        </trans-unit>
        <trans-unit id="a413b0f033130fcf3cdb03a285fedcaeaaba2bf2" translate="yes" xml:space="preserve">
          <source>This class serves as a parameter block to the &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; method. Serves to bind the &lt;code&gt;Class&lt;/code&gt; that needs redefining together with the new class file bytes.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; メソッドへのパラメーターブロックとして機能します。新しいクラスファイルのバイトとともに再定義が必要な &lt;code&gt;Class&lt;/code&gt; をバインドするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="dbb2ac9bcc292de7a49627f09297504d25ad1355" translate="yes" xml:space="preserve">
          <source>This class specifies a DES key.</source>
          <target state="translated">DESキーを指定します。</target>
        </trans-unit>
        <trans-unit id="a22639d0bc164ea48c5f6b6d9fbfb81c97680ab6" translate="yes" xml:space="preserve">
          <source>This class specifies a DES-EDE (&quot;triple-DES&quot;) key.</source>
          <target state="translated">DES-EDE(&quot;triple-DES&quot;)キーを指定します。</target>
        </trans-unit>
        <trans-unit id="d036f6c85d6ab132366e279be5ea8806f95fa666" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA private key with its associated parameters.</source>
          <target state="translated">このクラスは、DSA 秘密鍵とそれに関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="879837524885c3416822b41b592eca3a48cd5b73" translate="yes" xml:space="preserve">
          <source>This class specifies a DSA public key with its associated parameters.</source>
          <target state="translated">このクラスは、DSA 公開鍵とそれに関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="c990731d51d6932fdac50479de4885a38e0ad644" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman private key with its associated parameters.</source>
          <target state="translated">このクラスは Diffie-Hellman の秘密鍵と関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="70d87f2742e4212f0245c4f128a7ca482ae2d761" translate="yes" xml:space="preserve">
          <source>This class specifies a Diffie-Hellman public key with its associated parameters.</source>
          <target state="translated">このクラスは Diffie-Hellman 公開鍵と関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="b07eae8d5a709cfc63b91114d0a65f4be8390196" translate="yes" xml:space="preserve">
          <source>This class specifies a parameter spec for RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS#1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS＃1 v2.1&lt;/a&gt;標準で定義されているRSA-PSS署名方式のパラメーター仕様を指定します。</target>
        </trans-unit>
        <trans-unit id="0f30e45b6bd9ba01d96d3b693a26a9eecb21ae5d" translate="yes" xml:space="preserve">
          <source>This class specifies a secret key in a provider-independent fashion.</source>
          <target state="translated">プロバイダに依存しない方法で秘密鍵を指定します。</target>
        </trans-unit>
        <trans-unit id="6e6f9f20a4372f1a3113774bba8591bfdc1c187f" translate="yes" xml:space="preserve">
          <source>This class specifies an</source>
          <target state="translated">このクラスは</target>
        </trans-unit>
        <trans-unit id="bff225c4f5c50177500c14e3122ea3b191a8e1fa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">本クラスは、PKCS#1 v2.1で定義されているRSAマルチプライム秘密鍵を、効率化のためにCRT(Chinese Remainder Theorem)情報値を用いて指定します。</target>
        </trans-unit>
        <trans-unit id="51a9f89f44a660b954a5a5090fa122412b242aaa" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.</source>
          <target state="translated">本クラスでは、PKCS#1標準で定義されているRSA秘密鍵を、効率化のための中国語リマインダー定理(CRT)の情報値を用いて規定しています。</target>
        </trans-unit>
        <trans-unit id="25a3fff78310776f3c57ad9dc099010bb1f07c85" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA private key.</source>
          <target state="translated">このクラスはRSA秘密鍵を指定します。</target>
        </trans-unit>
        <trans-unit id="6f74ff5a45662c8e1077df778118f2b36bd0b4da" translate="yes" xml:space="preserve">
          <source>This class specifies an RSA public key.</source>
          <target state="translated">このクラスはRSA公開鍵を指定します。</target>
        </trans-unit>
        <trans-unit id="df546476dac0952bae6f6791d4e51bef99a01aed" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2040.txt&quot;&gt;&lt;i&gt;RC5&lt;/i&gt;&lt;/a&gt;アルゴリズムで使用されるパラメーターを指定します。</target>
        </trans-unit>
        <trans-unit id="bd74cc66a6a970a8693e41e839c4e4f3662dfeb9" translate="yes" xml:space="preserve">
          <source>This class specifies the parameters used with the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt; algorithm.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt;アルゴリズムで使用されるパラメーターを指定します。</target>
        </trans-unit>
        <trans-unit id="d3de5faa338aac308b55709ac63b2509d7983990" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement.</source>
          <target state="translated">このクラスは、Diffie-Hellman 鍵契約で使用する Diffie-Hellman (システム)パラメータの生成に使用するパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="fc4c54ffe29216598c50a69d7344e92001db9de7" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. This is typically done by a central authority.</source>
          <target state="translated">このクラスは、Diffie-Hellman 鍵合意で使用する Diffie-Hellman (システム)パラメータを生成するために使用されるパラメータのセットを指定する。これは通常、中央管理者によって行われます。</target>
        </trans-unit>
        <trans-unit id="ad2627810d2178f25019cc742f2eacb5d89300e3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used to generate an RSA key pair.</source>
          <target state="translated">このクラスは、RSA 鍵ペアを生成するために使用されるパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="59688baa89e160b7da4dc74ad676b46fc232891e" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS＃1&lt;/a&gt;標準で定義されている、OAEPパディングで使用されるパラメーターのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="23c4dee6bc9d5e341557cc99be66e25944c63cb4" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard. Its ASN.1 definition in PKCS#1 standard is described below:</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS＃1&lt;/a&gt;標準で定義されている、OAEPパディングで使用されるパラメーターのセットを指定します。PKCS＃1標準でのASN.1の定義を以下に示します。</target>
        </trans-unit>
        <trans-unit id="3378f0ed1db83cd69750881faed95856190e5be3" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSA-PSS signature scheme, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1 v2.1&lt;/a&gt; standard.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS＃1 v2.1&lt;/a&gt;標準で定義されているように、OAEPパディングおよびRSA-PSS署名方式のマスク生成関数MGF1で使用されるパラメーターのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="cb98cf2f5a03d8cb731645b73a46758f7c6343cf" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with password-based encryption (PBE), as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS #5&lt;/a&gt; standard.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2898.txt&quot;&gt;PKCS＃5&lt;/a&gt;標準で定義されている、パスワードベースの暗号化（PBE）で使用されるパラメーターのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="f779550dfd201e58e835eac99e6346a3b80e876a" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the DSA algorithm.</source>
          <target state="translated">このクラスは、DSAアルゴリズムで使用されるパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="780f1d67c49fbd57bd69ce916873b1f0f2788244" translate="yes" xml:space="preserve">
          <source>This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3:</source>
          <target state="translated">このクラスは PKCS #3 で指定されている Diffie-Hellman アルゴリズムで使用されるパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="fc73b50a65060e1d01978b2c1c1a5dbc8c9cce7e" translate="yes" xml:space="preserve">
          <source>This class specifies the source for encoding input P in OAEP Padding, as defined in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS #1&lt;/a&gt; standard.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt;PKCS＃1&lt;/a&gt;標準で定義されているように、OAEPパディングで入力Pをエンコードするためのソースを指定します。</target>
        </trans-unit>
        <trans-unit id="38eac723fd377ef096b27f5047f49d7a2de02b87" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order.</source>
          <target state="translated">このクラスは、待機中のプロデューサースレッドとコンシューマースレッドを注文するためのオプションの公平性ポリシーをサポートします。デフォルトでは、この順序は保証されていません。ただし、フェアネスを &lt;code&gt;true&lt;/code&gt; に設定して構築されたキューは、FIFO順でスレッドアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="f201a98083a72ebd3d70c02e66219c8be455bc0b" translate="yes" xml:space="preserve">
          <source>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to &lt;code&gt;true&lt;/code&gt; grants threads access in FIFO order. Fairness generally decreases throughput but reduces variability and avoids starvation.</source>
          <target state="translated">このクラスは、待機中のプロデューサースレッドとコンシューマースレッドを注文するためのオプションの公平性ポリシーをサポートします。デフォルトでは、この順序は保証されていません。ただし、フェアネスを &lt;code&gt;true&lt;/code&gt; に設定して構築されたキューは、FIFO順でスレッドアクセスを許可します。公平性は一般にスループットを低下させますが、変動性を低下させ、飢餓を回避します。</target>
        </trans-unit>
        <trans-unit id="7a4fa431e4e01c9fba026d067052b3ae96e02766" translate="yes" xml:space="preserve">
          <source>This class supports either or both a default &lt;em&gt;exclusive&lt;/em&gt; mode and a &lt;em&gt;shared&lt;/em&gt; mode. When acquired in exclusive mode, attempted acquires by other threads cannot succeed. Shared mode acquires by multiple threads may (but need not) succeed. This class does not &quot;understand&quot; these differences except in the mechanical sense that when a shared mode acquire succeeds, the next waiting thread (if one exists) must also determine whether it can acquire as well. Threads waiting in the different modes share the same FIFO queue. Usually, implementation subclasses support only one of these modes, but both can come into play for example in a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;. Subclasses that support only exclusive or only shared modes need not define the methods supporting the unused mode.</source>
          <target state="translated">このクラスは、デフォルトの&lt;em&gt;排他&lt;/em&gt;モードと&lt;em&gt;共有&lt;/em&gt;モードのいずれかまたは両方をサポート&lt;em&gt;し&lt;/em&gt;ます。排他モードで取得した場合、他のスレッドによる取得の試みは成功しません。複数のスレッドによる共有モードの取得は成功する場合がありますが、成功する必要はありません。このクラスはこれらの違いを「理解」しませんが、共有モードの取得が成功した場合、次の待機スレッド（存在する場合）も取得できるかどうかを決定する必要があるという機械的な意味を除きます。異なるモードで待機しているスレッドは、同じFIFOキューを共有します。通常、実装サブクラスはこれらのモードの1つだけをサポートしますが、たとえば&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; の&lt;/a&gt;ように両方が機能する可能性があります。排他モードまたは共有モードのみをサポートするサブクラスは、未使用のモードをサポートするメソッドを定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="529c97d775197ce36fe32bbded9a4fc074a37a2a" translate="yes" xml:space="preserve">
          <source>This class supports methods to determine whether locks are held or contended. These methods are designed for monitoring system state, not for synchronization control.</source>
          <target state="translated">このクラスは、ロックが保持されているか競合しているかを判断するメソッドをサポートしています。これらのメソッドは、システムの状態を監視するために設計されており、同期制御のために設計されているわけではありません。</target>
        </trans-unit>
        <trans-unit id="66a8bbbebe358e0fbe3d930bb8c2f05e8919820e" translate="yes" xml:space="preserve">
          <source>This class tracks the validity of the key and implements cancellation.</source>
          <target state="translated">このクラスは、鍵の有効性を追跡し、キャンセルを実装します。</target>
        </trans-unit>
        <trans-unit id="623f0d21c34dbd1332bc7e6494861896918e8e80" translate="yes" xml:space="preserve">
          <source>This class uses &lt;code&gt;HostnameVerifier&lt;/code&gt; and &lt;code&gt;SSLSocketFactory&lt;/code&gt;. There are default implementations defined for both classes. However, the implementations can be replaced on a per-class (static) or per-instance basis. All new &lt;code&gt;HttpsURLConnection&lt;/code&gt;s instances will be assigned the &quot;default&quot; static values at instance creation, but they can be overriden by calling the appropriate per-instance set method(s) before &lt;code&gt;connect&lt;/code&gt;ing.</source>
          <target state="translated">このクラスは &lt;code&gt;HostnameVerifier&lt;/code&gt; と &lt;code&gt;SSLSocketFactory&lt;/code&gt; を使用します。両方のクラスに定義されたデフォルトの実装があります。ただし、実装はクラスごと（静的）またはインスタンスごとに置き換えることができます。すべての新しい &lt;code&gt;HttpsURLConnection&lt;/code&gt; のインスタンスには、インスタンスの作成時に「デフォルト」の静的値が割り当てられますが、 &lt;code&gt;connect&lt;/code&gt; する前にインスタンスごとの適切なsetメソッドを呼び出すことで、それらをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="e344db844026e2b475808bc6ac1c0833cbf91e6b" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathBuilder&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathBuilder&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">このクラスは、プロバイダーベースのアーキテクチャを使用します。 &lt;code&gt;CertPathBuilder&lt;/code&gt; を作成するには、静的な &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを呼び出し、必要な &lt;code&gt;CertPathBuilder&lt;/code&gt; のアルゴリズム名と、必要に応じて必要なプロバイダーの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="e0e1433a14c30e48be78e8a26ffc082e6109d09a" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertPathValidator&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the algorithm name of the &lt;code&gt;CertPathValidator&lt;/code&gt; desired and optionally the name of the provider desired.</source>
          <target state="translated">このクラスは、プロバイダーベースのアーキテクチャを使用します。 &lt;code&gt;CertPathValidator&lt;/code&gt; を作成するには、静的な &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを呼び出し、必要な &lt;code&gt;CertPathValidator&lt;/code&gt; のアルゴリズム名と、必要に応じて必要なプロバイダーの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="4720c3962d957b31beca254e0087dea38d660efd" translate="yes" xml:space="preserve">
          <source>This class uses a provider-based architecture. To create a &lt;code&gt;CertStore&lt;/code&gt;, call one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the type of &lt;code&gt;CertStore&lt;/code&gt; desired, any applicable initialization parameters and optionally the name of the provider desired.</source>
          <target state="translated">このクラスは、プロバイダーベースのアーキテクチャを使用します。 &lt;code&gt;CertStore&lt;/code&gt; を作成するには、静的 &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを呼び出し、必要な &lt;code&gt;CertStore&lt;/code&gt; のタイプ、適用可能な初期化パラメーター、およびオプションで必要なプロバイダーの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="718790074ad554ff47894786ac58cc51cec8e9fc" translate="yes" xml:space="preserve">
          <source>This clock is based on the best available system clock. This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">このクロックは、利用可能な最高のシステムクロックに基づいています。これは、&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;、または使用可能な場合はより高解像度のクロックを使用します。</target>
        </trans-unit>
        <trans-unit id="14e5b87996ff9a8dd71298e7805275d126fb13ec" translate="yes" xml:space="preserve">
          <source>This clock simply returns the specified instant. As such, it is not a clock in the conventional sense. The main use case for this is in testing, where the fixed clock ensures tests are not dependent on the current clock.</source>
          <target state="translated">この時計は、単に指定された瞬間を返すだけです。そのため、従来の意味でのクロックではありません。これの主な使用例はテストで、固定クロックはテストが現在のクロックに依存しないことを保証します。</target>
        </trans-unit>
        <trans-unit id="e6fe9db4a5da99e2df3c273110d5647ff1e4def9" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクロックでは、ナノ秒と分秒のフィールドが常にゼロに設定されます。これにより、表示される時間は分単位で刻みます。基になるクロックは、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt;を使用するのと同等の、利用可能な最良のシステムクロックです。</target>
        </trans-unit>
        <trans-unit id="60ec564e9e295871b9d49787cc5fdafc2077ed3b" translate="yes" xml:space="preserve">
          <source>This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクロックでは、ナノ秒フィールドが常にゼロに設定されます。これにより、表示される時間は1秒単位で刻みます。基になるクロックは、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system(ZoneId)&lt;/code&gt; &lt;/a&gt;を使用するのと同等の、利用可能な最良のシステムクロックです。</target>
        </trans-unit>
        <trans-unit id="d510a435ab22ef2589d57442fef73bc4a406f64c" translate="yes" xml:space="preserve">
          <source>This clock will only tick as per the specified duration. Thus, if the duration is half a second, the clock will return instants truncated to the half second.</source>
          <target state="translated">この時計は指定された時間だけ刻みます。したがって、持続時間が半秒の場合、クロックは半秒に切り捨てられたインスタンツを返します。</target>
        </trans-unit>
        <trans-unit id="f851b56e47e0dfdc6ddeff5ef11cf138236dbc54" translate="yes" xml:space="preserve">
          <source>This clock wraps another clock, returning instants that are later by the specified duration. If the duration is negative, the instants will be earlier than the current date and time. The main use case for this is to simulate running in the future or in the past.</source>
          <target state="translated">この時計は、別の時計をラップして、指定した持続時間よりも後のインスタンツを返します。持続時間が負の値の場合は、現在の日時よりも早くなります。主な使用例としては、未来や過去に実行するシミュレーションを行うことです。</target>
        </trans-unit>
        <trans-unit id="28ec5732d8d89a816659b79fc702a8decfa24c8a" translate="yes" xml:space="preserve">
          <source>This clock, rather than &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;systemDefaultZone()&lt;/code&gt;&lt;/a&gt;, should be used when you need the current instant without the date or time.</source>
          <target state="translated">&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;systemDefaultZone()&lt;/code&gt; &lt;/a&gt;ではなく、このクロックは、日付や時刻のない現在のインスタントが必要な場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="41c5cbe50ec9277c16fa152ebfeb28a2610f1af4" translate="yes" xml:space="preserve">
          <source>This code unnecessarily uses side-effects. If executed in parallel, the non-thread-safety of &lt;code&gt;ArrayList&lt;/code&gt; would cause incorrect results, and adding needed synchronization would cause contention, undermining the benefit of parallelism. Furthermore, using side-effects here is completely unnecessary; the &lt;code&gt;forEach()&lt;/code&gt; can simply be replaced with a reduction operation that is safer, more efficient, and more amenable to parallelization:</source>
          <target state="translated">このコードは不必要に副作用を使用しています。並行して実行した場合、 &lt;code&gt;ArrayList&lt;/code&gt; の非スレッドセーフは誤った結果を引き起こし、必要な同期を追加すると競合が発生し、並列処理の利点が損なわれます。さらに、ここでの副作用の使用は完全に不要です。 &lt;code&gt;forEach()&lt;/code&gt; 、単に並列に、より安全でより効率的に、より適しているリダクション演算に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="176099bc59c5b3661b28d294be7f4886f481e5f7" translate="yes" xml:space="preserve">
          <source>This combines the era and year-of-era into the single proleptic-year field.</source>
          <target state="translated">これは、時代と年号を単一のプロレプティックイヤーの分野に統合しています。</target>
        </trans-unit>
        <trans-unit id="881c19f887f555a349e53ab2479a3a4e1694b26e" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to calculate the epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z. Instants on the time-line after the epoch are positive, earlier are negative.</source>
          <target state="translated">これは、このローカルの日付時刻と指定されたオフセットを組み合わせて、1970-01-01T00:00:00Zからの経過秒数であるエポック秒の値を計算します。エポック後のタイムライン上のインスタンスは正の値、それ以前のインスタンスは負の値となります。</target>
        </trans-unit>
        <trans-unit id="40fe7b6100b5c8ae366a238823262ae618c2e5f5" translate="yes" xml:space="preserve">
          <source>This combines this local date-time and the specified offset to form an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">これは、このローカルの日時と指定されたオフセットを組み合わせて &lt;code&gt;Instant&lt;/code&gt; を形成します。</target>
        </trans-unit>
        <trans-unit id="2e211b34e33f383b28859eb5977a7c40e1249ab5" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date on the local time-line. The underlying comparison is equivalent to comparing the epoch-day.</source>
          <target state="translated">このコンパレータは、基になる日付のみを比較し、年表を比較しないという点で、&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。これにより、ローカルタイムライン上の日付の位置に基づいて、異なるカレンダーシステムの日付を比較できます。基礎となる比較は、エポック日の比較と同等です。</target>
        </trans-unit>
        <trans-unit id="69c8ba053698d42cd41df468e493abc5023ac240" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the local time-line. The underlying comparison is equivalent to comparing the epoch-day and nano-of-day.</source>
          <target state="translated">このコンパレータは、基になる日時のみを比較し、年表を比較しないという点で、&lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;比較とは異なります。これにより、ローカルタイムライン上の日時の位置に基づいて、異なるカレンダーシステムの日付を比較できます。基礎となる比較は、エポック日とナノ日の比較と同等です。</target>
        </trans-unit>
        <trans-unit id="bbdbc85ee0512dc3d74a6a8c6805ec1e19b5202c" translate="yes" xml:space="preserve">
          <source>This comparator differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant and not the chronology. This allows dates in different calendar systems to be compared based on the position of the date-time on the instant time-line. The underlying comparison is equivalent to comparing the epoch-second and nano-of-second.</source>
          <target state="translated">このコンパレータは、基になるインスタントのみを比較し、年表を比較しないという点で、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;比較とは異なります。これにより、インスタントタイムライン上の日時の位置に基づいて、異なるカレンダーシステムの日付を比較できます。基本的な比較は、エポック秒とナノ秒の比較と同じです。</target>
        </trans-unit>
        <trans-unit id="cc7ddcbc9574b53708e189a7991f2ab1c97c0b99" translate="yes" xml:space="preserve">
          <source>This compares the instants of each transition. The offsets are ignored, making this order inconsistent with equals.</source>
          <target state="translated">これは各遷移のインスタンスを比較します。オフセットは無視され、この順序は等号と矛盾します。</target>
        </trans-unit>
        <trans-unit id="214ac252c0ba044ee79ac7ac9ed06ac4e8d2e884" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their ages.</source>
          <target state="translated">これは、一回の処理で、人の数、年齢の最小値、最大値、合計値、平均値を計算します。</target>
        </trans-unit>
        <trans-unit id="8ecf7d1186beb739d844c2d1692dba4c31e96fd5" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their number of dependents.</source>
          <target state="translated">これは、1回のパスで、人の数、扶養家族の最小値、最大値、合計値、平均値を計算します。</target>
        </trans-unit>
        <trans-unit id="e9e2b0f514db47caa89ba0a091352dcd38c4c208" translate="yes" xml:space="preserve">
          <source>This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their weights.</source>
          <target state="translated">これは、1回のパスで、人の数、最小値、最大値、合計値、重みの平均値を計算します。</target>
        </trans-unit>
        <trans-unit id="094b5e7f02060fff345c5bf3b2095d3ceba5a72e" translate="yes" xml:space="preserve">
          <source>This concept can seem surprising at first, as the natural way to globalize an application might initially appear to be to abstract the calendar system. However, as explored below, abstracting the calendar system is usually the wrong approach, resulting in logic errors and hard to find bugs. As such, it should be considered an application-wide architectural decision to choose to use this interface as opposed to &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">アプリケーションをグローバル化する自然な方法は、最初はカレンダーシステムを抽象化するように見えるかもしれないので、この概念は最初は意外に思われるかもしれません。ただし、以下で説明するように、カレンダーシステムの抽象化は通常は間違ったアプローチであり、論理エラーが発生し、バグを見つけるのが困難になります。そのため、 &lt;code&gt;LocalDate&lt;/code&gt; ではなく、このインターフェイスを使用することを選択することは、アプリケーション全体のアーキテクチャ上の決定と見なされます。</target>
        </trans-unit>
        <trans-unit id="4bf133bfd39a456d1d621ff71ab70e928fb9770a" translate="yes" xml:space="preserve">
          <source>This concept is described in the cookie specification. To understand the concept, some terminologies need to be defined first:</source>
          <target state="translated">この概念はクッキーの仕様書に記述されています。この概念を理解するためには、いくつかの用語を最初に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="62df0191c16730ea81ebc52d605bc1802c0618e1" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.)</source>
          <target state="translated">この具体的なメソッドは、以前に定義されたこの抽象クラスに追加されています。(下位互換性のため、抽象化することはできません)。</target>
        </trans-unit>
        <trans-unit id="8a795a9e08058d23c3970c0ea2fda5e4ffc46a2b" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to initialize the key pair generator. Such an override is expected to throw an InvalidAlgorithmParameterException if a parameter is inappropriate for this key pair generator. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">この具体的なメソッドは、以前に定義されたこの抽象クラスに追加されました。(下位互換性のため、抽象化することはできません。)これは、キー・ペア・ジェネレータを初期化するためにプロバイダによってオーバーライドされることがあります。このようなオーバーライドは、パラメータがこのキー・ペア・ジェネレータに不適切な場合に InvalidAlgorithmParameterException をスローすることが期待されます。このメソッドがオーバーライドされていない場合は、常に UnsupportedOperationException をスローします。</target>
        </trans-unit>
        <trans-unit id="50c9e7a52fbb1068a2728a1333b3fa5892cd93d5" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to unwrap a previously wrapped key. Such an override is expected to throw an InvalidKeyException if the given wrapped key cannot be unwrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">この具体的なメソッドは、以前に定義されたこの抽象クラスに追加されました。(下位互換性のため、抽象化はできません。)このメソッドは、以前にラップされたキーをアンラップするために、プロバイダによってオーバーライドされる可能性があります。このようなオーバーライドを行うと、指定されたラッピングされたキーをアンラップできない場合に InvalidKeyException がスローされることが予想されます。このメソッドがオーバーライドされていない場合は、常に UnsupportedOperationException をスローします。</target>
        </trans-unit>
        <trans-unit id="3047c19464302f65c8c9f9c4b59ba3382c2f7e6d" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to wrap a key. Such an override is expected to throw an IllegalBlockSizeException or InvalidKeyException (under the specified circumstances), if the given key cannot be wrapped. If this method is not overridden, it always throws an UnsupportedOperationException.</source>
          <target state="translated">この具体的なメソッドは、以前に定義されたこの抽象クラスに追加されました。(下位互換性のため、抽象化はできません。)プロバイダがキーをラップするためにオーバーライドすることができます。このようなオーバーライドを行うと、指定されたキーをラップできない場合には、IllegalBlockSizeException または InvalidKeyException (指定された状況下で)がスローされることが期待されます。このメソッドがオーバーライドされていない場合は、常に UnsupportedOperationException をスローします。</target>
        </trans-unit>
        <trans-unit id="4bf8e8d4d64f80751e3c71f16623c031485b994e" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. It throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not overridden by the provider.</source>
          <target state="translated">この具象メソッドは、以前に定義されたこの抽象クラスに追加されました。プロバイダーによってオーバーライドされてい &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 場合は、UnsupportedOperationExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="07a7a6733f35c9bf5eaaa880a364b846a5809d2f" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt;. That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">この具象メソッドは、以前に定義されたこの抽象クラスに追加されました。このメソッドはKeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、それに &lt;code&gt;params&lt;/code&gt; と &lt;code&gt;random&lt;/code&gt; を渡します。その &lt;code&gt;initialize&lt;/code&gt; メソッドは、プロバイダーによってオーバーライドされない場合、常にUnsupportedOperationExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="d62db2387265a645a7720ab82cd02b48e61cde7c" translate="yes" xml:space="preserve">
          <source>This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt; method, passing it &lt;code&gt;params&lt;/code&gt; and a source of randomness (obtained from the highest-priority installed provider or system-provided if none of the installed providers supply one). That &lt;code&gt;initialize&lt;/code&gt; method always throws an UnsupportedOperationException if it is not overridden by the provider.</source>
          <target state="translated">この具象メソッドは、以前に定義されたこの抽象クラスに追加されました。このメソッドは、KeyPairGeneratorSpi &lt;a href=&quot;keypairgeneratorspi#initialize-java.security.spec.AlgorithmParameterSpec-java.security.SecureRandom-&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;params&lt;/code&gt; とランダム性のソースを渡します（インストールされているプロバイダーの中で最も優先度が高いか、インストールされているプロバイダーのいずれも提供しない場合はシステム提供）。その &lt;code&gt;initialize&lt;/code&gt; メソッドは、プロバイダーによってオーバーライドされない場合、常にUnsupportedOperationExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="e0c7037e79f3e9915b5f957edd500f9a2a5674bc" translate="yes" xml:space="preserve">
          <source>This console</source>
          <target state="translated">このコンソール</target>
        </trans-unit>
        <trans-unit id="6233171ae50e2dfd828ba014b8868853c98a3b51" translate="yes" xml:space="preserve">
          <source>This constant specifies to add an attribute with the specified values.</source>
          <target state="translated">この定数は、指定された値を持つ属性を追加することを指定します。</target>
        </trans-unit>
        <trans-unit id="cd8d44d26c5e133edddaa1329516bd7acc91d3b4" translate="yes" xml:space="preserve">
          <source>This constant specifies to delete the specified attribute values from the attribute.</source>
          <target state="translated">この定数は、指定された属性値を属性から削除することを指定します。</target>
        </trans-unit>
        <trans-unit id="f2dee89227b20ef81135afbe5b9bcd31150deccb" translate="yes" xml:space="preserve">
          <source>This constant specifies to replace an attribute with specified values.</source>
          <target state="translated">この定数は属性を指定した値に置き換えることを指定します。</target>
        </trans-unit>
        <trans-unit id="f6444007e8d10572a068abf1e3164f34cfdb5930" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must have a maxPathLen value greater than or equal to the number of certificates in the partial path.</source>
          <target state="translated">この制約は、(ターゲットからトラストアンカーに向かって)前方に認証パスを構築する際に有用である。部分パスが構築されている場合、どの証明書候補も、部分パス内の証明書の数以上のmaxPathLen値を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="d8e603d331114f1b7222de64c09552fe6ba8dac2" translate="yes" xml:space="preserve">
          <source>This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must not include name constraints that would prohibit building a path to any of the names in the partial path.</source>
          <target state="translated">この制約は、認証パスを前方(ターゲットからトラストアンカーに向かって)に構築する場合に有用である。部分パスが構築されている場合、どの証明書候補にも、部分パス内の名前へのパス構築を禁止する名前制約が含まれていてはなりません。</target>
        </trans-unit>
        <trans-unit id="56115faaedb5b196e05b129c1dc4a13bcbce5c42" translate="yes" xml:space="preserve">
          <source>This constructor constructs an IndexedPropertyDescriptor for a property that follows the standard Java conventions by having getFoo and setFoo accessor methods, for both indexed access and array access.</source>
          <target state="translated">このコンストラクタは、インデックス・アクセスと配列アクセスの両方に対して getFoo および setFoo アクセサ・メソッドを持つことで、標準的な Java の規約に従ったプロパティの IndexedPropertyDescriptor を構築します。</target>
        </trans-unit>
        <trans-unit id="323ef76e9090247addd862b027bcd8c1a9205ff8" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using java.lang.reflect.Method and java.lang.Class objects.</source>
          <target state="translated">このコンストラクタは、java.lang.reflect.Methodとjava.lang.Classオブジェクトを使って、一からEventSetDescriptorを作成します。</target>
        </trans-unit>
        <trans-unit id="55008209d693d36006b56a334b0fde816431fe7a" translate="yes" xml:space="preserve">
          <source>This constructor creates an EventSetDescriptor from scratch using string names.</source>
          <target state="translated">このコンストラクタは、文字列名を使用してゼロからEventSetDescriptorを作成します。</target>
        </trans-unit>
        <trans-unit id="f4752e6b60ccfb55bdef75a7c17a6e6626676b4d" translate="yes" xml:space="preserve">
          <source>This constructor does not attempt to check the class names for validity. Invalid class names may cause exceptions in subsequent calls to &lt;code&gt;getMetadataFormat&lt;/code&gt;.</source>
          <target state="translated">このコンストラクターは、クラス名の有効性をチェックしようとしません。無効なクラス名は、その後の &lt;code&gt;getMetadataFormat&lt;/code&gt; の呼び出しで例外を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="d2705af4ecd1bfd920175f17b4eb667109733cc5" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific</source>
          <target state="translated">このコンストラクタは、指定されたバイトが実際に指定されたアルゴリズムの秘密鍵を指定しているかどうかをチェックしません。たとえば、アルゴリズムがDESの場合、このコンストラクターは、 &lt;code&gt;key&lt;/code&gt; が8バイト長であるかどうかをチェックせず、弱いキーまたは半弱いキーもチェックしません。これらのチェックを実行するには、アルゴリズム固有の</target>
        </trans-unit>
        <trans-unit id="b17f077b15cc44e9cd314ba25ea55a7532a21498" translate="yes" xml:space="preserve">
          <source>This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if &lt;code&gt;key&lt;/code&gt; is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific key specification class (in this case: &lt;a href=&quot;deskeyspec&quot;&gt;&lt;code&gt;DESKeySpec&lt;/code&gt;&lt;/a&gt;) must be used.</source>
          <target state="translated">このコンストラクタは、指定されたバイトが実際に指定されたアルゴリズムの秘密鍵を指定しているかどうかをチェックしません。たとえば、アルゴリズムがDESの場合、このコンストラクターは、 &lt;code&gt;key&lt;/code&gt; が8バイト長であるかどうかをチェックせず、弱いキーまたは半弱いキーもチェックしません。これらのチェックを実行するには、アルゴリズム固有の鍵仕様クラス（この場合は&lt;a href=&quot;deskeyspec&quot;&gt; &lt;code&gt;DESKeySpec&lt;/code&gt; &lt;/a&gt;）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c768a68045529db78d1a3606a790d49cd038789b" translate="yes" xml:space="preserve">
          <source>This constructor does not throw an exception if &lt;code&gt;fdObj&lt;/code&gt; is &lt;a href=&quot;filedescriptor#valid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. However, if the methods are invoked on the resulting stream to attempt I/O on the stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;fdObj&lt;/code&gt; が&lt;a href=&quot;filedescriptor#valid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt;場合、このコンストラクタは例外をスローしません。ただし、結果のストリームでメソッドが呼び出されてストリームでI / Oが試行されると、 &lt;code&gt;IOException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c784e7233a0ce2a32fd493938b6d803074df8ffd" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI in string form using the given components as follows:</source>
          <target state="translated">このコンストラクタは、まず、以下のように与えられたコンポーネントを使用して文字列形式のURIを構築します。</target>
        </trans-unit>
        <trans-unit id="252fb9e182f5d6aff42e078c02f9aae69a59be6c" translate="yes" xml:space="preserve">
          <source>This constructor first builds a URI string from the given components according to the rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7:</source>
          <target state="translated">このコンストラクターは、最初に&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396の&lt;/a&gt;セクション5.2、ステップ7で指定された規則に従って、指定されたコンポーネントからURI文字列を構築します。</target>
        </trans-unit>
        <trans-unit id="306285cfeca440c55bdfa3feff55957327806e69" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the RelationSupport object will be registered as a MBean by the user, or when creating a user relation MBean whose class extends RelationSupport.</source>
          <target state="translated">このコンストラクタは、ユーザが RelationSupport オブジェクトを MBean として登録する場合や、 クラスが RelationSupport を継承したユーザリレーション MBean を作成する場合に使用します。</target>
        </trans-unit>
        <trans-unit id="bb0fbecfa5d0431c58452f14d3af289a6e9443fa" translate="yes" xml:space="preserve">
          <source>This constructor has to be used when the user relation MBean implements the interfaces expected to be supported by a relation by delegating to a RelationSupport object.</source>
          <target state="translated">このコンストラクタは、ユーザリレーションMBeanがRelationSupportオブジェクトにデリゲートすることで、リレーションがサポートすると予想されるインターフェースを実装する場合に使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="22bcfda538c6290e0a386aa15ad7778899bc56d6" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">このコンストラクタは &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="d316a5fa99ed6379096b014630ff693b699cd1c2" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt;.</source>
          <target state="translated">このコンストラクタは &lt;code&gt;MBeanTrustPermission(name,null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="0438d6be07086284ca144cebfd257e9304b48c8a" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to a call to the two-argument constructor with a &lt;code&gt;null&lt;/code&gt; first argument.</source>
          <target state="translated">このコンストラクタは、最初の引数が &lt;code&gt;null&lt;/code&gt; の 2つの引数を持つコンストラクタの呼び出しに相当します。</target>
        </trans-unit>
        <trans-unit id="db37d0145d7513f45a38a1fb3ad916bc05b8e177" translate="yes" xml:space="preserve">
          <source>This constructor is identical to &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;&lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt;&lt;/a&gt; with the exception of the fact that it allows the thread stack size to be specified. The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread's stack. &lt;b&gt;The effect of the &lt;code&gt;stackSize&lt;/code&gt; parameter, if any, is highly platform dependent.&lt;/b&gt;</source>
          <target state="translated">このコンストラクターは、スレッドスタックサイズを指定できることを除いて&lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt; &lt;code&gt;Thread(ThreadGroup,Runnable,String)&lt;/code&gt; &lt;/a&gt;と同じです。スタックサイズは、仮想マシンがこのスレッドのスタックに割り当てるアドレススペースのおおよそのバイト数です。&lt;b&gt; &lt;code&gt;stackSize&lt;/code&gt; &lt;/b&gt;&lt;b&gt;パラメータがある場合&lt;/b&gt;&lt;b&gt;、その影響はプラットフォームに大きく依存します。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a2810bbeef729a2adb8e1bef76df57c55ef3fc12" translate="yes" xml:space="preserve">
          <source>This constructor is not appropriate for an MXBean. Use &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection,
 ObjectName, boolean)&lt;/code&gt;&lt;/a&gt; for that. This constructor is equivalent to &lt;code&gt;new MBeanServerInvocationHandler(connection,
 objectName, false)&lt;/code&gt;.</source>
          <target state="translated">このコンストラクタはMXBeanには適していません。そのためには&lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler(MBeanServerConnection, ObjectName, boolean)&lt;/code&gt; &lt;/a&gt;を使用します。このコンストラクタは、 &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName, false)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="055c035fa3f9d9301582bc9012a5938b0e707ed3" translate="yes" xml:space="preserve">
          <source>This constructor is protected because most users should use a &lt;code&gt;CertificateFactory&lt;/code&gt; to create &lt;code&gt;CertPath&lt;/code&gt;s.</source>
          <target state="translated">ほとんどのユーザーは &lt;code&gt;CertificateFactory&lt;/code&gt; を使用して &lt;code&gt;CertPath&lt;/code&gt; を作成する必要があるため、このコンストラクタは保護されています。</target>
        </trans-unit>
        <trans-unit id="66eb1beb876cf1b7137667a69660279a6798a7bb" translate="yes" xml:space="preserve">
          <source>This constructor is provided to ease migration to &lt;code&gt;StringBuilder&lt;/code&gt;. Obtaining a string from a string builder via the &lt;code&gt;toString&lt;/code&gt; method is likely to run faster and is generally preferred.</source>
          <target state="translated">このコンストラクタは、 &lt;code&gt;StringBuilder&lt;/code&gt; への移行を容易にするために提供されています。 &lt;code&gt;toString&lt;/code&gt; メソッドを介して文字列ビルダーから文字列を取得すると、実行が速くなり、一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="987620ca649576825067a69d7a28cf013a048b8f" translate="yes" xml:space="preserve">
          <source>This constructor is typically used by &lt;a href=&quot;secureclassloader&quot;&gt;&lt;code&gt;ClassLoaders&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;domaincombiner&quot;&gt;&lt;code&gt;DomainCombiners&lt;/code&gt;&lt;/a&gt; which delegate to &lt;code&gt;Policy&lt;/code&gt; to actively associate the permissions granted to this domain. This constructor affords the Policy provider the opportunity to augment the supplied PermissionCollection to reflect policy changes.</source>
          <target state="translated">このコンストラクタは通常、 &lt;code&gt;Policy&lt;/code&gt; に委任する&lt;a href=&quot;secureclassloader&quot;&gt; &lt;code&gt;ClassLoaders&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;domaincombiner&quot;&gt; &lt;code&gt;DomainCombiners&lt;/code&gt; &lt;/a&gt;によって使用され、このドメインに付与されたアクセス許可をアクティブに関連付けます。このコンストラクターは、ポリシーの変更を反映するために、提供されたPermissionCollectionを拡張する機会をポリシープロバイダーに提供します。</target>
        </trans-unit>
        <trans-unit id="7184bcd5a1d86e2a9889b441339695840e27dc43" translate="yes" xml:space="preserve">
          <source>This constructor is used for serialization only and should not be used by subclasses.</source>
          <target state="translated">このコンストラクタはシリアライズのためにのみ使用され、サブクラスでは使用しないでください。</target>
        </trans-unit>
        <trans-unit id="6115dedad8a8d6721c1d38fc08d58ea3d49255a6" translate="yes" xml:space="preserve">
          <source>This constructor loads the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt; visible to the given &lt;code&gt;ClassLoader&lt;/code&gt; using the service provider mechanism.</source>
          <target state="translated">このコンストラクターは、サービスプロバイダーメカニズムを使用して、指定された &lt;code&gt;ClassLoader&lt;/code&gt; に可視の &lt;code&gt;ScriptEngineFactory&lt;/code&gt; の実装をロードします。</target>
        </trans-unit>
        <trans-unit id="29ab51245f25d24b9f280d47ce7dc3b64450b618" translate="yes" xml:space="preserve">
          <source>This constructor must be called from a subclass that implements the given &lt;code&gt;mbeanInterface&lt;/code&gt;.</source>
          <target state="translated">このコンストラクタは、指定された &lt;code&gt;mbeanInterface&lt;/code&gt; を実装するサブクラスから呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e142e8eef0812e41eb84ae79de6dff8c1c97d800" translate="yes" xml:space="preserve">
          <source>This constructor parses the given string exactly as specified by the grammar in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, Appendix A, &lt;b&gt;&lt;i&gt;except for the following deviations:&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">このコンストラクターは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396の&lt;/a&gt;付録Aの文法で指定されているとおりに、指定された文字列を解析します。&lt;b&gt;&lt;i&gt;ただし、以下の違いはあります。&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5829254936972f7741b38d97218bb3035bb5947f" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords defined in RFC 1779 and RFC 2253 (and listed in &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt;&lt;code&gt;getName(String format)&lt;/code&gt;&lt;/a&gt;), as well as the T, DNQ or DNQUALIFIER, SURNAME, GIVENNAME, INITIALS, GENERATION, EMAILADDRESS, and SERIALNUMBER keywords whose Object Identifiers (OIDs) are defined in RFC 3280 and its successor. Any other attribute type must be specified as an OID.</source>
          <target state="translated">このコンストラクターは、R​​FC 1779およびRFC 2253で定義された（&lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt; &lt;code&gt;getName(String format)&lt;/code&gt; に&lt;/a&gt;リストされている）属性タイプキーワード、およびT、DNQまたはDNQUALIFIER、SURNAME、GIVENNAME、INITIALS、GENERATION、EMAILADDRESS、およびSERIALNUMBERキーワードを認識します。識別子（OID）はRFC 3280およびその後継で定義されています。その他の属性タイプはOIDとして指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b3c4bdb4dbc7d87b249553f001825a33e95f8368" translate="yes" xml:space="preserve">
          <source>This constructor recognizes the attribute type keywords specified in &lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt;&lt;code&gt;X500Principal(String)&lt;/code&gt;&lt;/a&gt; and also recognizes additional keywords that have entries in the &lt;code&gt;keywordMap&lt;/code&gt; parameter. Keyword entries in the keywordMap take precedence over the default keywords recognized by &lt;code&gt;X500Principal(String)&lt;/code&gt;. Keywords MUST be specified in all upper-case, otherwise they will be ignored. Improperly specified keywords are ignored; however if a keyword in the name maps to an improperly specified Object Identifier (OID), an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. It is permissible to have 2 different keywords that map to the same OID.</source>
          <target state="translated">このコンストラクターは、&lt;a href=&quot;x500principal#X500Principal-java.lang.String-&quot;&gt; &lt;code&gt;X500Principal(String)&lt;/code&gt; で&lt;/a&gt;指定された属性タイプのキーワードを認識し、 &lt;code&gt;keywordMap&lt;/code&gt; パラメーターにエントリーを持つ追加のキーワードも認識します。keywordMapのキーワードエントリは、 &lt;code&gt;X500Principal(String)&lt;/code&gt; によって認識されるデフォルトのキーワードよりも優先されます。キーワードはすべて大文字で指定する必要があります。指定しない場合は無視されます。不適切に指定されたキーワードは無視されます。ただし、名前のキーワードが不適切に指定されたオブジェクト識別子（OID）にマップされている場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。同じOIDにマップする2つの異なるキーワードを使用することは許容されます。</target>
        </trans-unit>
        <trans-unit id="ec6d430953812becb925deb46d6cd0b93deb47f2" translate="yes" xml:space="preserve">
          <source>This constructor simply calls &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</source>
          <target state="translated">このコンストラクタは単に &lt;code&gt;this(tabularType, 101, 0.75f);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6df0fc7f5d7676292778fc231fad82f46fd588de" translate="yes" xml:space="preserve">
          <source>This constructor supports the creation of arrays of primitive types when &lt;code&gt;primitiveArray&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このコンストラクタは、 &lt;code&gt;primitiveArray&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、プリミティブ型の配列の作成をサポートします。</target>
        </trans-unit>
        <trans-unit id="a2bd749b772d5412d274ba42737fc115d4165831" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple attribute, and Method objects for reading and writing the attribute. The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; of the constructed object will include fields contributed by any annotations on the &lt;code&gt;Method&lt;/code&gt; objects that contain the &lt;a href=&quot;descriptorkey&quot;&gt;&lt;code&gt;DescriptorKey&lt;/code&gt;&lt;/a&gt; meta-annotation.</source>
          <target state="translated">このコンストラクターは、単純な属性の名前と、属性の読み取りと書き込みのためのMethodオブジェクトを受け取ります。構築されたオブジェクトの&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;には、&lt;a href=&quot;descriptorkey&quot;&gt; &lt;code&gt;DescriptorKey&lt;/code&gt; &lt;/a&gt;メタ注釈を含む &lt;code&gt;Method&lt;/code&gt; オブジェクトの注釈によって提供されるフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="60feeec4f3b0e05e826447d953796767286be805" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and Method objects for reading and writing the property.</source>
          <target state="translated">このコンストラクタは、単純なプロパティの名前と、プロパティを読み書きするためのメソッドオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="71ffdcd4bbda6f1adb0921f38324c01a7a58717f" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property, both indexed and non-indexed.</source>
          <target state="translated">このコンストラクタは、単純なプロパティの名前と、そのプロパティを読み書きするためのメソッド名 (インデックス付きとインデックスなしの両方)を受け取ります。</target>
        </trans-unit>
        <trans-unit id="f96bbea6e82d670a2960bdaee669e1a6561f3897" translate="yes" xml:space="preserve">
          <source>This constructor takes the name of a simple property, and method names for reading and writing the property.</source>
          <target state="translated">このコンストラクタは、単純なプロパティの名前と、プロパティを読み書きするためのメソッド名を受け取ります。</target>
        </trans-unit>
        <trans-unit id="2950627d050fbf4aacfb46652b359fe21e525577" translate="yes" xml:space="preserve">
          <source>This constructor traverses the list of registered security Providers, starting with the most preferred Provider. A new SecureRandom object encapsulating the SecureRandomSpi implementation from the first Provider that supports a SecureRandom (RNG) algorithm is returned. If none of the Providers support a RNG algorithm, then an implementation-specific default is returned.</source>
          <target state="translated">このコンストラクタは、最も好ましいプロバイダから順に、登録されたセキュリティプロバイダのリストをトラバースします。SecureRandom (RNG)アルゴリズムをサポートする最初のプロバイダから、SecureRandomSpi 実装をカプセル化した新しい SecureRandom オブジェクトが返されます。どのプロバイダも RNG アルゴリズムをサポートしていない場合は、実装固有のデフォルトが返されます。</target>
        </trans-unit>
        <trans-unit id="69338ec03b3ff4f12d4a0ea5976cc37e58d266a4" translate="yes" xml:space="preserve">
          <source>This constructor will create new cookie manager with default cookie store and accept policy. The effect is same as &lt;code&gt;CookieManager(null, null)&lt;/code&gt;.</source>
          <target state="translated">このコンストラクターは、デフォルトのCookieストアとポリシーを受け入れる新しいCookieマネージャーを作成します。効果は &lt;code&gt;CookieManager(null, null)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9dcde72d46b342f2e401974c393b36398fe41ec2" translate="yes" xml:space="preserve">
          <source>This constructor will not modify &lt;code&gt;environment&lt;/code&gt; or save a reference to it, but may save a clone. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">このコンストラクタは &lt;code&gt;environment&lt;/code&gt; 変更したり、環境への参照を保存したりしませんが、クローンを保存する場合があります。コンストラクターに渡された後、呼び出し元は &lt;code&gt;environment&lt;/code&gt; 内の変更可能なキーと値を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="e5239d419576815e6d3fd5a0280090c36494314f" translate="yes" xml:space="preserve">
          <source>This constructor will not modify its parameters or save references to them, but may save a clone or copy. Caller should not modify mutable keys and values in &lt;code&gt;environment&lt;/code&gt; after it has been passed to the constructor.</source>
          <target state="translated">このコンストラクターは、パラメーターを変更したり、それらへの参照を保存したりしませんが、クローンまたはコピーを保存する場合があります。コンストラクターに渡された後、呼び出し元は &lt;code&gt;environment&lt;/code&gt; 内の変更可能なキーと値を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="2a93bd5dd228a4f6e155855cce61f3b6dae8637f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null.</source>
          <target state="translated">このコンテキストは環境によっては利用できない場合があり、その場合はこのメソッドは null を返します。</target>
        </trans-unit>
        <trans-unit id="3a5469730aa079e01b52999e3d7a52e877df3f3f" translate="yes" xml:space="preserve">
          <source>This context may be unavailable in some environments, in which case this method returns null. For example, when the underlying SSL provider does not provide an implementation of SSLSessionContext interface, this method returns null. A non-null session context is returned otherwise.</source>
          <target state="translated">このコンテキストは環境によっては利用できない場合があり、その場合はこのメソッドはnullを返します。例えば、基礎となる SSL プロバイダが SSLSessionContext インターフェースの実装を提供していない場合、このメソッドは null を返します。そうでない場合は、NULL ではないセッションコンテキストが返されます。</target>
        </trans-unit>
        <trans-unit id="6a303455a8ad40e3d1dc7cd48ca709227da9c6d1" translate="yes" xml:space="preserve">
          <source>This continues until a result resource bundle is instantiated or the list of candidate bundle names is exhausted. If no matching resource bundle is found, the default control's &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called, which returns the current default locale. A new sequence of candidate locale names is generated using this locale and and searched again, as above.</source>
          <target state="translated">これは、結果のリソースバンドルがインスタンス化されるか、候補バンドル名のリストがなくなるまで続きます。一致するリソースバンドルが見つからない場合、デフォルトのコントロールの&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getFallbackLocale&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、現在のデフォルトのロケールが返されます。上記のように、候補ロケール名の新しいシーケンスがこのロケールを使用して生成され、再度検索されます。</target>
        </trans-unit>
        <trans-unit id="e43b55cf41f5a19a9cec030d4efb84aa99ae8707" translate="yes" xml:space="preserve">
          <source>This convenience constructor works as if by invoking the seven-argument constructor as follows:</source>
          <target state="translated">この便利なコンストラクタは、以下のように7引数のコンストラクタを呼び出すことで、あたかもそのように動作します。</target>
        </trans-unit>
        <trans-unit id="e2905c539276a08d74a854b790c4c1e5fc4554fa" translate="yes" xml:space="preserve">
          <source>This convenience factory method works as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; any &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; thrown by the constructor is caught and wrapped in a new &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; object, which is then thrown.</source>
          <target state="translated">この便利なファクトリメソッドは、&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出すかのように機能します。どの&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;のコンストラクタによってスローされるがキャッチし、新に包まれて&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;後、スローされたオブジェクト、。</target>
        </trans-unit>
        <trans-unit id="961aad3e67917d2801c0339f0973a3c223f4cd59" translate="yes" xml:space="preserve">
          <source>This convenience method simply locates the extension class loader, call it &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt;, and then returns</source>
          <target state="translated">この便利なメソッドは、拡張クラスローダーを特定し、それを &lt;code&gt;&lt;i&gt;extClassLoader&lt;/i&gt;&lt;/code&gt; と&lt;i&gt;呼ん&lt;/i&gt;で、次に返します。</target>
        </trans-unit>
        <trans-unit id="5c05518b3ead6f932cc65725d296d95a87175e51" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the &lt;a href=&quot;socketchannel#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method, invoking the &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method upon the resulting socket channel, passing it &lt;code&gt;remote&lt;/code&gt;, and then returning that channel.</source>
          <target state="translated">この便利なメソッドは、&lt;a href=&quot;socketchannel#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、結果のソケットチャネルで&lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、それを &lt;code&gt;remote&lt;/code&gt; に渡してから、そのチャネルを返すかのように機能します。</target>
        </trans-unit>
        <trans-unit id="0a4d2be12aeeb9ba8f11f546fe7ee8be73335282" translate="yes" xml:space="preserve">
          <source>This convenience method works as if by invoking the two-argument counterpart as follows:</source>
          <target state="translated">この便利なメソッドは、次のように2引数の相手を呼び出すことで、あたかも次のように動作します。</target>
        </trans-unit>
        <trans-unit id="d93db664b793b72aa6d1fccf0c7706670b6c7ee8" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(URI.&lt;/code&gt;&lt;a href=&quot;uri#create-java.lang.String-&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(str))&lt;/code&gt;.</source>
          <target state="translated">それは表現の評価と同等であった呼び出すかのように、この便利な方法は、働く&lt;a href=&quot;uri#resolve-java.net.URI-&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(URI.&lt;/code&gt; &lt;a href=&quot;uri#create-java.lang.String-&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(str))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15946e6fa2cad09afaf39bcdc23236ae9c3214ad" translate="yes" xml:space="preserve">
          <source>This convenience method works as if invoking it were equivalent to evaluating the expression &lt;code&gt;new URL(this.toString())&lt;/code&gt; after first checking that this URI is absolute.</source>
          <target state="translated">この便利なメソッドは、このURIが絶対であるかどうかを最初に確認した後、それを呼び出すのが式 &lt;code&gt;new URL(this.toString())&lt;/code&gt; を評価するのと同じであるかのように機能します。</target>
        </trans-unit>
        <trans-unit id="6c966a8c93fe8af2395da9d30bb726f76a7b3254" translate="yes" xml:space="preserve">
          <source>This convention does not apply to the unnamed package, whose associated preference node is &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt;. This node is not intended for long term use, but for convenience in the early development of programs that do not yet belong to a package, and for &quot;throwaway&quot; programs.</source>
          <target state="translated">この規則は、関連付けられた設定ノードが &lt;code&gt;&amp;lt;unnamed&amp;gt;&lt;/code&gt; である名前のないパッケージには適用されません。このノードは、長期的な使用を目的としたものではなく、パッケージにまだ属していないプログラムの初期開発の便宜と、「使い捨て」プログラムを目的としています。</target>
        </trans-unit>
        <trans-unit id="ce51ac5c1f1d9f1914dc00d376fab0eb5e451b82" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;char&lt;/code&gt; and &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;. It may also be applied to the types &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. If it returns &lt;code&gt;false&lt;/code&gt; then an &lt;a href=&quot;illegalformatcodepointexception&quot;&gt;&lt;code&gt;IllegalFormatCodePointException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">この変換は &lt;code&gt;char&lt;/code&gt; と&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; に&lt;/a&gt;適用できます。また、タイプに適用することができる &lt;code&gt;byte&lt;/code&gt; 、&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;short&lt;/code&gt; 、および&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;int&lt;/code&gt; 型と&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;際&lt;a href=&quot;../lang/character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;Character.isValidCodePoint(int)&lt;/code&gt; が&lt;/a&gt;返されます &lt;code&gt;true&lt;/code&gt; 。 &lt;code&gt;false&lt;/code&gt; が返された場合は、&lt;a href=&quot;illegalformatcodepointexception&quot;&gt; &lt;code&gt;IllegalFormatCodePointException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d4e6898eb36b95cab7a561633153c21d39223d0f" translate="yes" xml:space="preserve">
          <source>This conversion may be applied to &lt;code&gt;long&lt;/code&gt;, &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">この変換は、 &lt;code&gt;long&lt;/code&gt; 、&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../time/temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; に&lt;/a&gt;適用できます。</target>
        </trans-unit>
        <trans-unit id="517b8aa20552c61a91f79dd2c8f06ad04f21dd18" translate="yes" xml:space="preserve">
          <source>This copies attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">これにより、属性の値と &lt;code&gt;object&lt;/code&gt; の値が等しくなります。</target>
        </trans-unit>
        <trans-unit id="3af1152919c270dd3746bf00c4fdea0c682779b6" translate="yes" xml:space="preserve">
          <source>This copies supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">これにより、サポートされる属性のメンバーと &lt;code&gt;object&lt;/code&gt; のメンバーは同じコピーになります。</target>
        </trans-unit>
        <trans-unit id="fd5b477116333c062818d408dd687a171f4669fc" translate="yes" xml:space="preserve">
          <source>This corresponds to CIM Associators and AssociatorNames operations.</source>
          <target state="translated">これは、CIM Associators と AssociatorNames の操作に対応しています。</target>
        </trans-unit>
        <trans-unit id="ee5e4096d63d47ee9154103b2f601ede84042c5c" translate="yes" xml:space="preserve">
          <source>This corresponds to the CIM &quot;References&quot; and &quot;ReferenceNames&quot; operations.</source>
          <target state="translated">これは、CIMの「参照」と「参照名」の操作に対応しています。</target>
        </trans-unit>
        <trans-unit id="738c8cbd8e7c6c73686b87995d0815d68870584e" translate="yes" xml:space="preserve">
          <source>This could include setting a security provider or defining the location of the system-wide security policy. Malicious code that has permission to set a new security provider may set a rogue provider that steals confidential information such as cryptographic private keys. In addition, malicious code with permission to set the location of the system-wide security policy may point it to a security policy that grants the attacker all the necessary permissions it requires to successfully mount an attack on the system.</source>
          <target state="translated">これには、セキュリティ プロバイダの設定や、システム全体のセキュリティ ポリシーの場所の定義が含まれる可能性があります。新しいセキュリティプロバイダを設定する権限を持つ悪意のあるコードは、暗号秘密鍵などの機密情報を盗む不正なプロバイダを設定する可能性があります。さらに、システム全体のセキュリティポリシーの場所を設定する権限を持つ悪意のあるコードは、攻撃者がシステムへの攻撃を成功させるために必要なすべての権限を付与するセキュリティポリシーを指すことがあります。</target>
        </trans-unit>
        <trans-unit id="8d1f3f66bf6cd5f1484e44e133a329f3b237ecf4" translate="yes" xml:space="preserve">
          <source>This could print sensitive information to a printer, or simply waste paper.</source>
          <target state="translated">これは、プリンタに機密情報を印刷したり、単に紙を無駄にしたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="56059c121f9987e3f7ae9b88d2b190820643517b" translate="yes" xml:space="preserve">
          <source>This counts the AM/PM within the day, from 0 (AM) to 1 (PM). This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0 (AM)から 1 (PM)までの 1 日の中での AM/PM をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="e3ef439b9bf3ee683a33107641da83c71876df33" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 0 to 11. This is the hour that would be observed on a standard 12-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0から11までのAM/PM内の時間をカウントします。これは、標準的な12時間デジタル時計で観測される時間です。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="6fe80e8a8118bcfbe3a79872753265c046bd1b5b" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 12. This is the hour that would be observed on a standard 12-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">AM/PMの1から12までの時間をカウントします。これは、標準的な12時間アナログ壁掛け時計で観測される時間です。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="1c3e1a95914c08cc20e9ca89abd13423d42d4f17" translate="yes" xml:space="preserve">
          <source>This counts the hour within the AM/PM, from 1 to 24. This is the hour that would be observed on a 24-hour analog wall clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">AM/PMの中の1時間を1から24までカウントします。これは、24時間アナログ壁掛け時計で観測される時間です。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="93acc55f001469448a79a98bd583dba09908cbb3" translate="yes" xml:space="preserve">
          <source>This counts the hour within the day, from 0 to 23. This is the hour that would be observed on a standard 24-hour digital clock. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0から23までの1日の中の1時間をカウントします。これは、標準的な24時間デジタル時計で観測される時間です。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="aaaf34f2441fdf24228214e7e0fc4f00e0479120" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the day, from 0 to (24 * 60 * 60 * 1,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">このフィールドは、0から(24*60*60*1,000,000)-1までの1日の中のマイクロ秒をカウントします。 このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="ed9cd0e15650f622b83c25879c0c386438c1be2a" translate="yes" xml:space="preserve">
          <source>This counts the microsecond within the second, from 0 to 999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0 から 999,999 までの 1 秒以内のマイクロ秒をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="8c759c4bd143487bc003030cfe712876e38aadf0" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the day, from 0 to (24 * 60 * 60 * 1,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">このフィールドは、0から(24*60*60*1,000)-1までの1日のミリ秒をカウントします。 このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="be94fb9658ae99a66f454f2820f8c3e09301156d" translate="yes" xml:space="preserve">
          <source>This counts the millisecond within the second, from 0 to 999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0 から 999 までの範囲で、1 秒以内のミリ秒をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="43edac64e538d85f435f090811bae70930ae8db5" translate="yes" xml:space="preserve">
          <source>This counts the minute within the day, from 0 to (24 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">このフィールドは、0から(24*60)-1までの1日の中の分をカウントします。 このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="a8323702dacee178eecb33fed1d641d126ebb978" translate="yes" xml:space="preserve">
          <source>This counts the minute within the hour, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0から59までの1時間内の分をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="9f3c3d601c91ad5aa95c1303425e41e79db48027" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the day, from 0 to (24 * 60 * 60 * 1,000,000,000) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">このフィールドは、0から(24*60*60*1,000,000,000)-1までのナノ秒をカウントします。 このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="bfb02a38bb6f4039f42484bd49eb48f7c08dae23" translate="yes" xml:space="preserve">
          <source>This counts the nanosecond within the second, from 0 to 999,999,999. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0から999,999,999,999までの1秒以内のナノ秒をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="ab8b66611e87e40eefc297e069ff363056ed146a" translate="yes" xml:space="preserve">
          <source>This counts the second within the day, from 0 to (24 * 60 * 60) - 1. This field has the same meaning for all calendar systems.</source>
          <target state="translated">このフィールドは、0から(24*60*60)-1までの1日内の秒をカウントします。 このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="81631a2f635e111ef578d2ae44c5b510837d0a0a" translate="yes" xml:space="preserve">
          <source>This counts the second within the minute, from 0 to 59. This field has the same meaning for all calendar systems.</source>
          <target state="translated">これは、0 から 59 までの範囲で、1 分以内の秒をカウントします。このフィールドは、すべてのカレンダーシステムで同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="ce69caaa873db2922e22167e363b379f2568dbbb" translate="yes" xml:space="preserve">
          <source>This creates a local date-time based on the specified instant. First, the offset from UTC/Greenwich is obtained using the zone ID and instant, which is simple as there is only one valid offset for each instant. Then, the instant and offset are used to calculate the local date-time.</source>
          <target state="translated">これは、指定された瞬間に基づいてローカルの日付時刻を作成します。まず、ゾーン ID とインスタントを使って UTC/グリニッジからのオフセットを取得します。次に、このインスタントとオフセットを使ってローカル時刻を計算します。</target>
        </trans-unit>
        <trans-unit id="8bcea9f628768ea526e021b95c9f0c965440ecf6" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">これにより、指定されたテンポラルに基づいてゾーン化された日時が作成されます。A &lt;code&gt;TemporalAccessor&lt;/code&gt; は、この工場はのインスタンスに変換する日時情報の任意の集合を表し &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="1075baa34279992a9a891fe14095dfb63f09dd58" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time by &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;combining&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;ZoneOffset&lt;/code&gt;. This combination uniquely specifies an instant without ambiguity.</source>
          <target state="translated">これにより、 &lt;code&gt;LocalDateTime&lt;/code&gt; と &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;a href=&quot;chrono/chronolocaldatetime#toInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;combining&lt;/code&gt; &lt;/a&gt;て、ゾーン化された日時が作成されます。この組み合わせは、曖昧さのない瞬間を一意に指定します。</target>
        </trans-unit>
        <trans-unit id="d7bd41c1bc48ec1280338d5697120083dfd49092" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time ensuring that the offset is valid for the local date-time according to the rules of the specified zone. If the offset is invalid, an exception is thrown.</source>
          <target state="translated">これは、指定されたゾーンの規則に従って、オフセットがローカルの日付時刻に対して有効であることを保証する、ゾーン化された日付時刻を作成します。オフセットが無効な場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b7fd3ca00565a2d68e2676c388817128aadb75ff" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date and time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">これは、入力されたローカルの日付と時刻に可能な限り近づけて、ゾーン化された日付と時刻を作成します。サマータイムなどの時間帯の規則は、すべてのローカル日付が指定されたゾーンで有効というわけではないので、ローカル日付は調整されます。</target>
        </trans-unit>
        <trans-unit id="953a8135d4549ccac3a13d7e66097776f2155026" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the input local date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">これは、入力されたローカル時刻に可能な限り近づけて、ゾーン化された時刻を作成します。サマータイムのような時間帯の規則は、指定されたゾーンではすべてのローカル日付時刻が有効ではないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0e6f04a6cf3de17c5a71327d692cb29d03417486" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time matching the local date-time of the seven specified fields as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted.</source>
          <target state="translated">これにより、指定された7つのフィールドのローカル日付時刻と可能な限り一致するゾーン化された日付時刻が作成されます。サマータイムなどの時間帯の規則は、すべてのローカル日付が指定されたゾーンで有効というわけではないので、ローカル日付は調整されることがあります。</target>
        </trans-unit>
        <trans-unit id="ec637bbf2a108c08978e643f234e8091c4ff5af4" translate="yes" xml:space="preserve">
          <source>This creates a zoned date-time with the same instant as that specified. Calling &lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt;&lt;/a&gt; will return an instant equal to the one used here.</source>
          <target state="translated">これにより、指定されたものと同じ瞬間を持つゾーン化された日時が作成されます。&lt;a href=&quot;chrono/chronozoneddatetime#toInstant--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.toInstant()&lt;/code&gt; &lt;/a&gt;を呼び出すと、ここで使用されているものと等しいインスタントが返されます。</target>
        </trans-unit>
        <trans-unit id="3fab5c46a5121a4fea33b03ffa65d0ffb495eccf" translate="yes" xml:space="preserve">
          <source>This creates an instance based on years, months and days.</source>
          <target state="translated">これは、年、月、日に基づいてインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="0a4dbd162ddc2407fbd25bcb8835bfd225c4bd3f" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time using the local date-time and offset. The zone ID is ignored.</source>
          <target state="translated">これは、ローカルの日時とオフセットを使用してオフセット日時を作成する。ゾーンIDは無視されます。</target>
        </trans-unit>
        <trans-unit id="91124742156d682ef8b5ae91dc90e7ced43f48c5" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">これにより、指定された時刻と同じ時刻のオフセットが作成されます。UTC/グリニッジからのオフセットを見つけるのは簡単です。</target>
        </trans-unit>
        <trans-unit id="ee109c8a80a69358ebb8d236e545d87408ba6bc2" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the seven specified fields.</source>
          <target state="translated">これは、指定された7つのフィールドを持つオフセット日時を作成します。</target>
        </trans-unit>
        <trans-unit id="280ff15192faef86311adf588490a2dd4c2e4df0" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date, time and offset.</source>
          <target state="translated">これは、指定されたローカルの日付、時刻、オフセットを持つオフセット日時を作成します。</target>
        </trans-unit>
        <trans-unit id="0e142b1d221e02f3fbbd73e720e2868c0f523965" translate="yes" xml:space="preserve">
          <source>This creates an offset date-time with the specified local date-time and offset.</source>
          <target state="translated">これは、指定されたローカル日時とオフセットを持つオフセット日時を作成します。</target>
        </trans-unit>
        <trans-unit id="009cd056837bc464fa749ee52c6794f2888f836a" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the four specified fields.</source>
          <target state="translated">指定された4つのフィールドでオフセット時間を作成します。</target>
        </trans-unit>
        <trans-unit id="35745461f41c68ef806d542d5e2fcb1f3614a590" translate="yes" xml:space="preserve">
          <source>This creates an offset time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.</source>
          <target state="translated">これにより、指定された時刻と同じ時刻のオフセットが作成されます。UTC/グリニッジからのオフセットを見つけるのは簡単で、各瞬間に有効なオフセットは1つだけです。</target>
        </trans-unit>
        <trans-unit id="455f1f9ed7b865664c2f0e4e028ac4d8c817a274" translate="yes" xml:space="preserve">
          <source>This creates the simplest possible &lt;code&gt;ZonedDateTime&lt;/code&gt; using the offset as the zone ID.</source>
          <target state="translated">これにより、オフセットをゾーンIDとして使用して、最も単純な &lt;code&gt;ZonedDateTime&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="0e56342900728bd48a541f7a0579d9ced91ae984" translate="yes" xml:space="preserve">
          <source>This datagram channel</source>
          <target state="translated">このデータグラムチャネル</target>
        </trans-unit>
        <trans-unit id="0505f4ae4b37af933f4a494f1bd199f351093fb6" translate="yes" xml:space="preserve">
          <source>This date operates using one of several variants of the &lt;a href=&quot;hijrahchronology&quot;&gt;Hijrah calendar&lt;/a&gt;.</source>
          <target state="translated">この日付は、&lt;a href=&quot;hijrahchronology&quot;&gt;ヒジュラ暦の&lt;/a&gt;いくつかの変種の1つを使用して動作します。</target>
        </trans-unit>
        <trans-unit id="5d5cf5344795ddbee0592b8f5074a4decd99e8ab" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;japanesechronology&quot;&gt;Japanese Imperial calendar&lt;/a&gt;. This calendar system is primarily used in Japan.</source>
          <target state="translated">この日付は、&lt;a href=&quot;japanesechronology&quot;&gt;日本帝国暦&lt;/a&gt;を使用して動作します。このカレンダーシステムは主に日本で使用されています。</target>
        </trans-unit>
        <trans-unit id="e18cba966f2d91e0393d11d4baa965825e81cd17" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;minguochronology&quot;&gt;Minguo calendar&lt;/a&gt;. This calendar system is primarily used in the Republic of China, often known as Taiwan. Dates are aligned such that &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; is &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">この日付は&lt;a href=&quot;minguochronology&quot;&gt;Minguoカレンダー&lt;/a&gt;を使用して動作します。このカレンダーシステムは、主に中華民国で使用され、台湾とも呼ばれます。日付は、 &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; が &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt; ように調整されます。</target>
        </trans-unit>
        <trans-unit id="193b4b41c0bb17831b51c2083da42604be66508d" translate="yes" xml:space="preserve">
          <source>This date operates using the &lt;a href=&quot;thaibuddhistchronology&quot;&gt;Thai Buddhist calendar&lt;/a&gt;. This calendar system is primarily used in Thailand. Dates are aligned such that &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; is &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">この日付は、&lt;a href=&quot;thaibuddhistchronology&quot;&gt;タイ仏暦&lt;/a&gt;を使用しています。このカレンダーシステムは主にタイで使用されます。日付は、 &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; が &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt; ように調整されます。</target>
        </trans-unit>
        <trans-unit id="2833508e7b6ddb38abb8ca21e4e52f2be7d2502a" translate="yes" xml:space="preserve">
          <source>This date will be passed to the formatter to produce a string.</source>
          <target state="translated">この日付は、文字列を生成するためにフォーマッタに渡されます。</target>
        </trans-unit>
        <trans-unit id="03bbde6ad6f81f2897854a309baf844d646c3cee" translate="yes" xml:space="preserve">
          <source>This date-time at completed attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">この完了した日時属性の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;値と &lt;code&gt;object&lt;/code&gt; の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;値は同じです。</target>
        </trans-unit>
        <trans-unit id="065897994c9ec9c07686d203308d4d1170d84034" translate="yes" xml:space="preserve">
          <source>This date-time at creation attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">この作成時の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;属性の日付値と &lt;code&gt;object&lt;/code&gt; の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;値は同じです。</target>
        </trans-unit>
        <trans-unit id="f9f7fdb1a7ab5e22d18b273cca1aba15377835d6" translate="yes" xml:space="preserve">
          <source>This date-time at processing attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">この処理時の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;属性の日付値と &lt;code&gt;object&lt;/code&gt; の&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;値は同じです。</target>
        </trans-unit>
        <trans-unit id="6f5eb385ed9ad064f68018650b72f376e17d69df" translate="yes" xml:space="preserve">
          <source>This date-time attribute's &lt;code&gt;java.util.Date&lt;/code&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;java.util.Date&lt;/code&gt; value are equal.</source>
          <target state="translated">この日時属性の &lt;code&gt;java.util.Date&lt;/code&gt; 値と &lt;code&gt;object&lt;/code&gt; の &lt;code&gt;java.util.Date&lt;/code&gt; 値は同じです。</target>
        </trans-unit>
        <trans-unit id="c0c317e8a8948b79ea81d771f3ff6bfb718da2b4" translate="yes" xml:space="preserve">
          <source>This date-time will be passed to the formatter to produce a string.</source>
          <target state="translated">この日時は、文字列を生成するためにフォーマッタに渡されます。</target>
        </trans-unit>
        <trans-unit id="f6b70bbe903f9efaf8a84e0e3086ef40860d9b34" translate="yes" xml:space="preserve">
          <source>This decoder</source>
          <target state="translated">このデコーダ</target>
        </trans-unit>
        <trans-unit id="464b8e800fdc7710db841535acfd4202ccccb8d8" translate="yes" xml:space="preserve">
          <source>This decoder's charset</source>
          <target state="translated">このデコーダの文字セット</target>
        </trans-unit>
        <trans-unit id="8fba0c9757d30a0a89ef7b7bf21941af4bb567d3" translate="yes" xml:space="preserve">
          <source>This decoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">決してありません。このデコーダの現在の交換、 &lt;code&gt;null&lt;/code&gt; や空になることはありません</target>
        </trans-unit>
        <trans-unit id="c6e294c1ece1277c33e3a64c30a2a9b2adbf7b42" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;thenComparing(comparing(keyExtractor))&lt;/code&gt; のように動作します。</target>
        </trans-unit>
        <trans-unit id="a71730c8354af9adec6b7390ea8d92b2eb036a0e" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt;.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;thenComparing(comparing(keyExtractor, cmp))&lt;/code&gt; ように動作します。</target>
        </trans-unit>
        <trans-unit id="c1c6483c171dc8162f46c1935cdf11c66743ab54" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;thenComparing(comparingDouble(keyExtractor))&lt;/code&gt; のように動作します。</target>
        </trans-unit>
        <trans-unit id="79f281e08bd360780f8aa71ae3a4e5d8150955e3" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;thenComparing(comparingInt(keyExtractor))&lt;/code&gt; のように動作します。</target>
        </trans-unit>
        <trans-unit id="8fc9fbfb9f325a40e6150b7f43eb9fb01fbab52d" translate="yes" xml:space="preserve">
          <source>This default implementation behaves as if &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt;.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;thenComparing(comparingLong(keyExtractor))&lt;/code&gt; のように動作します。</target>
        </trans-unit>
        <trans-unit id="dc96d625b6603417a843fec478c20860cb744dc0" translate="yes" xml:space="preserve">
          <source>This default implementation calculates from the epoch-day of the date and the second-of-day of the time.</source>
          <target state="translated">このデフォルトの実装では、日付のエポック日と時刻の2日目から計算します。</target>
        </trans-unit>
        <trans-unit id="2e2abeadb86303864e3ae35f66cd65485be5379f" translate="yes" xml:space="preserve">
          <source>This default implementation calculates the duration from the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">このデフォルトの実装は、&lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt;オフセットと&lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt;オフセットから期間を計算します。</target>
        </trans-unit>
        <trans-unit id="169bfbd5e3ecb82129ede4262c00e34877c31b06" translate="yes" xml:space="preserve">
          <source>This default implementation checks if &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt;&lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt;&lt;/a&gt; contains the specified offset.</source>
          <target state="translated">このデフォルトの実装では、&lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt; &lt;code&gt;getValidOffsets(java.time.LocalDateTime)&lt;/code&gt; &lt;/a&gt;に指定されたオフセットが含まれているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="5a238cb286f4cf27357aa51ba2484d6935d2091f" translate="yes" xml:space="preserve">
          <source>This default implementation compares the &lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt;&lt;code&gt;actual&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/a&gt; offsets.</source>
          <target state="translated">このデフォルトの実装では、&lt;a href=&quot;zonerules#getOffset-java.time.Instant-&quot;&gt; &lt;code&gt;actual&lt;/code&gt; &lt;/a&gt;オフセットと&lt;a href=&quot;zonerules#getStandardOffset-java.time.Instant-&quot;&gt; &lt;code&gt;standard&lt;/code&gt; &lt;/a&gt;オフセットを比較します。</target>
        </trans-unit>
        <trans-unit id="f1faf19d3fdd99785d0886e0fc76b73324e814ac" translate="yes" xml:space="preserve">
          <source>This default implementation derives the value using &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このデフォルトの実装は、&lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用して値を導出します。</target>
        </trans-unit>
        <trans-unit id="d386d7057ca0a34151b0b0300d6a175876ee8422" translate="yes" xml:space="preserve">
          <source>This default implementation is suitable for all implementations.</source>
          <target state="translated">このデフォルトの実装は、すべての実装に適しています。</target>
        </trans-unit>
        <trans-unit id="8a8d4b1f4bfe64391e6db936ab202fb9eadb363a" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;initialize&lt;/code&gt; method assumes all state held in objects of this type is exposed via the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. If a property descriptor defines a &quot;transient&quot; attribute with a value equal to &lt;code&gt;Boolean.TRUE&lt;/code&gt; the property is ignored by this default implementation. Note that this use of the word &quot;transient&quot; is quite independent of the field modifier that is used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;initialize&lt;/code&gt; メソッドのデフォルトの実装では、このタイプのオブジェクトに保持されているすべての状態が、イントロスペクターから返される順序で「setter」および「getter」メソッドの対応するペアを介して公開されると想定しています。プロパティ記述子が &lt;code&gt;Boolean.TRUE&lt;/code&gt; に等しい値を持つ「一時的な」属性を定義する場合、このデフォルトの実装ではプロパティは無視されます。この「一時的」という言葉の使用は、 &lt;code&gt;ObjectOutputStream&lt;/code&gt; によって使用されるフィールド修飾子とはまったく関係がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c6d18fecb1892c769cfb818fd07f57c8d2d4b480" translate="yes" xml:space="preserve">
          <source>This default implementation of the &lt;code&gt;instantiate&lt;/code&gt; method returns an expression containing the predefined method name &quot;new&quot; which denotes a call to a constructor with the arguments as specified in the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt;'s constructor.</source>
          <target state="translated">この &lt;code&gt;instantiate&lt;/code&gt; メソッドのデフォルトの実装は、 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; のコンストラクターで指定された引数を持つコンストラクターへの呼び出しを示す、事前定義されたメソッド名「new」を含む式を返します。</target>
        </trans-unit>
        <trans-unit id="4e3ed3191a5dd8a7f450da1d42e2012fd1ba2f83" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day and nano-of-day.</source>
          <target state="translated">このデフォルトの実装では、エポックデイとナノオブデイに基づいて比較を行います。</target>
        </trans-unit>
        <trans-unit id="531f7403abecf5a94352ea24034062f99c5ba20f" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-day.</source>
          <target state="translated">このデフォルトの実装では、エポック日に基づいて比較を行います。</target>
        </trans-unit>
        <trans-unit id="24f3f70ac92394e68221670a6bfb85088be2f996" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison based on the epoch-second and nano-of-second.</source>
          <target state="translated">このデフォルトの実装では、エポック秒とナノ秒に基づいて比較を行います。</target>
        </trans-unit>
        <trans-unit id="f06750614dc9ea8bdb578b17b023fde237c84e95" translate="yes" xml:space="preserve">
          <source>This default implementation performs the comparison defined above.</source>
          <target state="translated">このデフォルトの実装は、上記で定義された比較を実行します。</target>
        </trans-unit>
        <trans-unit id="0b0b45e33e2905f3578d1870df294ef3cb1ea6b8" translate="yes" xml:space="preserve">
          <source>This default implementation queries the &lt;code&gt;EPOCH_DAY&lt;/code&gt; field.</source>
          <target state="translated">このデフォルトの実装は、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; フィールドをクエリします。</target>
        </trans-unit>
        <trans-unit id="7298671b0593fa5d649e9dcd7b938e4b73854028" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#eraOf-int-&quot;&gt;&lt;code&gt;Chronology.eraOf(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このデフォルトの実装では、&lt;a href=&quot;chronology#eraOf-int-&quot;&gt; &lt;code&gt;Chronology.eraOf(int)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4ee6f479f6b1fed2559699c8684f0851dbe3d3bd" translate="yes" xml:space="preserve">
          <source>This default implementation uses &lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt;&lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このデフォルトの実装では、&lt;a href=&quot;chronology#isLeapYear-long-&quot;&gt; &lt;code&gt;Chronology.isLeapYear(long)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="71192131c6d8b3bd7f25ec7b2065eaf9573350a8" translate="yes" xml:space="preserve">
          <source>This default policy of locating the initial context and URL context factories may be overridden by calling &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt;.</source>
          <target state="translated">初期コンテキストおよびURLコンテキストファクトリを見つけるこのデフォルトのポリシーは、 &lt;code&gt;NamingManager.setInitialContextFactoryBuilder()&lt;/code&gt; を呼び出すことによってオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="f33f15e845fa4ca24888166902444c0ee87d40af" translate="yes" xml:space="preserve">
          <source>This defines the level of protection provided to the data sent on the connection, including the kind of encryption used and most aspects of how authentication is done.</source>
          <target state="translated">これは、使用される暗号化の種類や認証方法のほとんどの側面を含む、接続上で送信されるデータに提供される保護のレベルを定義します。</target>
        </trans-unit>
        <trans-unit id="111a23a69d7d68d0e2d926039231ac3c3dc1dffa" translate="yes" xml:space="preserve">
          <source>This defines the point at infinity.</source>
          <target state="translated">これは無限大の点を定義しています。</target>
        </trans-unit>
        <trans-unit id="0832eacc47b98fb52bccbd73b04f58a50bb09410" translate="yes" xml:space="preserve">
          <source>This defines the protocol used in the connection.</source>
          <target state="translated">接続で使用するプロトコルを定義します。</target>
        </trans-unit>
        <trans-unit id="4115b8651bf03a14c989c86915d64b772401371e" translate="yes" xml:space="preserve">
          <source>This definition allows hash tables to operate properly.</source>
          <target state="translated">この定義により、ハッシュテーブルが適切に動作するようになります。</target>
        </trans-unit>
        <trans-unit id="d329d67ac47f002e6a5289bb2a9b171e6b41c225" translate="yes" xml:space="preserve">
          <source>This definition ignores leap seconds, but considers that Days vary due to daylight saving time and months have different lengths.</source>
          <target state="translated">この定義はうるう秒を無視していますが、サマータイムによる日の長さの違いや月の長さの違いを考慮しています。</target>
        </trans-unit>
        <trans-unit id="28b41138e83324a8820ab7ffd1eda3fc94f119b5" translate="yes" xml:space="preserve">
          <source>This definition should result in implementations comparing their entire state.</source>
          <target state="translated">この定義は、実装がその全体の状態を比較する結果になるはずです。</target>
        </trans-unit>
        <trans-unit id="8332acd4b87a9198ae6fac3c376315a3b8e63721" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of JMX, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of JMX 1.2, that functionality is approximated by using &lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">この非推奨のクラスは互換性のために維持されています。 JMXの以前のバージョンでは、すべてのMBeanサーバーで共有される1つの &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; がありました。 JMX 1.2以降、この機能は、&lt;a href=&quot;../mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用してすべての既知のMBeanサーバーを検索し、それぞれの&lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt;を調べることによって概算されます。 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; を参照するコードを書き直すことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="fca008d43a9dbe738b0a6610e8893a67d8faf707" translate="yes" xml:space="preserve">
          <source>This deprecated class is maintained for compatibility. In previous versions of the JMX API, there was one &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; shared by all MBean servers. As of version 1.2 of the JMX API, that functionality is approximated by using &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt; to find all known MBean servers, and consulting the &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; of each one. It is strongly recommended that code referencing &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; be rewritten.</source>
          <target state="translated">この非推奨のクラスは互換性のために維持されています。 JMX APIの以前のバージョンでは、すべてのMBeanサーバーで共有される1つの &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; がありました。 JMX APIのバージョン1.2以降、その機能は、&lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用してすべての既知のMBeanサーバーを検索し、それぞれの&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt;を調べることによって概算されます。 &lt;code&gt;DefaultLoaderRepository&lt;/code&gt; を参照するコードを書き直すことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="873206fbd8667f0d0d7ba7134a13368739a17945" translate="yes" xml:space="preserve">
          <source>This design can be improved by noticing that in the recursive case, the task has nothing to do after forking its right task, so can directly invoke its left task before returning. (This is an analog of tail recursion removal.) Also, because the task returns upon executing its left task (rather than falling through to invoke &lt;code&gt;tryComplete&lt;/code&gt;) the pending count is set to one:</source>
          <target state="translated">この設計は、再帰的な場合、タスクが正しいタスクをフォークした後は何もしないので、戻る前に直接左側のタスクを呼び出すことができることに気づくことで改善できます。（これは末尾再帰の削除に類似しています。）また、タスクは左側のタスクの実行時に（ &lt;code&gt;tryComplete&lt;/code&gt; を呼び出すためにフォールスルーするのではなく）戻るため、保留中のカウントは1に設定されます。</target>
        </trans-unit>
        <trans-unit id="4b0a9b0fc7f5e860560b2b99270b343bd48dce52" translate="yes" xml:space="preserve">
          <source>This destination attribute's URI and &lt;code&gt;object&lt;/code&gt;'s URI are equal.</source>
          <target state="translated">この宛先属性のURIと &lt;code&gt;object&lt;/code&gt; のURIは同じです。</target>
        </trans-unit>
        <trans-unit id="57cee4c838a296b3745f14f6eeea64b1c29f9e68" translate="yes" xml:space="preserve">
          <source>This determines whether the temporal accessor supports this field. If this returns false, then the temporal cannot be queried for this field.</source>
          <target state="translated">これは、テンポラリアクセサがこのフィールドをサポートしているかどうかを決定します。これがfalseを返した場合、テンポラリはこのフィールドを問い合わせることができません。</target>
        </trans-unit>
        <trans-unit id="3adfc4c68ca3c64ed288024ec369c1cc1dc8c36c" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. They are no longer accessible due to removal of the properties specifying their names and locations. This may change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">これは、プロバイダによって実装されたサービスの検索を無効にします。それらの名前と場所を指定するプロパティが削除されたため、それらにアクセスできなくなります。これは、&quot;removeProvider.{provider name}&quot;パーミッションで説明されているように、通常はプロバイダを利用するであろうプログラムの他の部分の動作を変更したり、実行を無効にしたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb166f6b813d40e0f82e2a7c9dbad27ed0ccee7e" translate="yes" xml:space="preserve">
          <source>This disables the lookup of services implemented by the provider. This may thus change the behavior or disable execution of other parts of the program that would normally utilize the Provider, as described under the &quot;removeProvider.{provider name}&quot; permission.</source>
          <target state="translated">これは、プロバイダによって実装されたサービスのルックアップを無効にします。このため、&quot;removeProvider.{provider name}&quot;パーミッションで説明されているように、通常はプロバイダを利用するであろうプログラムの他の部分の動作を変更したり、実行を無効にしたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="3310841316113d983c404968320f7758ac33f98c" translate="yes" xml:space="preserve">
          <source>This doc's print data representation object is obtained, then an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream, then the print data representation object is simply returned.</source>
          <target state="translated">このdocの印刷データ表現オブジェクトが取得されると、印刷データ表現オブジェクトから印刷データをバイトのストリームとして読み出すための入力ストリームが作成されて返される。ただし、印刷データ表現オブジェクト自体が入力ストリームである場合は、単に印刷データ表現オブジェクトが返される。</target>
        </trans-unit>
        <trans-unit id="f8fa20b52058290987c9e264d00257b2f293f7fc" translate="yes" xml:space="preserve">
          <source>This document name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">このドキュメント名属性のロケールと &lt;code&gt;object&lt;/code&gt; のロケールは同じです。</target>
        </trans-unit>
        <trans-unit id="024c36a03c3baad0644062a158a2272b06975c8e" translate="yes" xml:space="preserve">
          <source>This document name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">このドキュメント名属性の基になる文字列と &lt;code&gt;object&lt;/code&gt; の基になる文字列は同じです。</target>
        </trans-unit>
        <trans-unit id="401fcf75c1399bb32c8059d9e92fe949e823f757" translate="yes" xml:space="preserve">
          <source>This encoder</source>
          <target state="translated">このエンコーダ</target>
        </trans-unit>
        <trans-unit id="06c53a07179fa409192de61c9f405cc3875096dc" translate="yes" xml:space="preserve">
          <source>This encoder's charset</source>
          <target state="translated">このエンコーダの文字セット</target>
        </trans-unit>
        <trans-unit id="e5daae3e79cea5983169c2c8c7faaa7802435961" translate="yes" xml:space="preserve">
          <source>This encoder's current replacement, which is never &lt;code&gt;null&lt;/code&gt; and is never empty</source>
          <target state="translated">決してありません。このエンコーダの現在の交換、 &lt;code&gt;null&lt;/code&gt; や空になることはありません</target>
        </trans-unit>
        <trans-unit id="31808377ea719645502f28dca0abd4aeaf250090" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeData&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が2つの &lt;code&gt;CompositeData&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="c1f177eea9c0b7fd7085bad84524a8743bb0a4cf" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、任意の2つの &lt;code&gt;CompositeDataSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; に対して &lt;code&gt; t1.equals(t2) &lt;/code&gt; が &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="f9137e249ccdfce59178263ae1ef25f8b68a479e" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が、任意の2つの &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="60a3c8ef80596ba6082e576b25f1e93a0a165d54" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、2つの &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; に対して、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="a1708417f6418b817d48118b57142676efc7a6c8" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が、任意の2つの &lt;code&gt;OpenMBeanInfo&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="6dec1af806af1f5a527c2c769a8b1578da342c7f" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が、2つの &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="8d101cdb42ed5767fa3e70f25fa3568d46a28e29" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、任意の2つの &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; に対して &lt;code&gt; t1.equals(t2) &lt;/code&gt; が &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="4a236ab005ef5acc2242e30f66b6efee952b22f5" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularDataSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、 &lt;code&gt; t1.equals(t2) &lt;/code&gt; が、2つの &lt;code&gt;TabularDataSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="9eaa17d2d08ea6f651e2c9bd29479e4bab9a6bde" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、 &lt;code&gt;e1.equals(e2)&lt;/code&gt; が、任意の2つのエントリ &lt;code&gt;e1&lt;/code&gt; および &lt;code&gt;e2&lt;/code&gt; の &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; を暗黙に示すことが保証されます。</target>
        </trans-unit>
        <trans-unit id="cd37dd64e1ca54ac0945dfdf280e1be4051c5aff" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;e1.equals(e2)&lt;/code&gt; implies that &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; for any two Entries &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;Object.hashCode&lt;/code&gt; の一般規約で要求されているように、 &lt;code&gt;e1.equals(e2)&lt;/code&gt; が、任意の2つのエントリ &lt;code&gt;e1&lt;/code&gt; および &lt;code&gt;e2&lt;/code&gt; の &lt;code&gt;e1.hashCode()==e2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="4702ec819e5753179cfc0b495a5e82f5d1eee139" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;list1.equals(list2)&lt;/code&gt; implies that &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; for any two lists, &lt;code&gt;list1&lt;/code&gt; and &lt;code&gt;list2&lt;/code&gt;, as required by the general contract of &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このこと性を保証 &lt;code&gt;list1.equals(list2)&lt;/code&gt; ことを意味 &lt;code&gt;list1.hashCode()==list2.hashCode()&lt;/code&gt; 任意の二つのリストのために、 &lt;code&gt;list1&lt;/code&gt; と &lt;code&gt;list2&lt;/code&gt; の一般規約によって要求されるように、&lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12a797079598660742e64a5b767118fe2bebf2e1" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;path1.equals(path2)&lt;/code&gt; implies that &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; for any two certification paths, &lt;code&gt;path1&lt;/code&gt; and &lt;code&gt;path2&lt;/code&gt;, as required by the general contract of &lt;code&gt;Object.hashCode&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;Object.hashCode&lt;/code&gt; の一般規約で要求されるように、 &lt;code&gt;path1.equals(path2)&lt;/code&gt; が、任意の2つの認証パス、 &lt;code&gt;path1&lt;/code&gt; および &lt;code&gt;path2&lt;/code&gt; の &lt;code&gt;path1.hashCode()==path2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="4fd56578f10eda62657cbd5ad0a96e516416f18a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、2つの &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; に対して、 &lt;code&gt;t1.equals(t2) &lt;/code&gt; が &lt;code&gt;t1.hashCode()==t2.hashCode() &lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="14310def1365fcc5f3cd3139415995c4e349e7e2" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、2つの &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; に対して、 &lt;code&gt;t1.equals(t2)&lt;/code&gt; が &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="736ac1b36cc49629322da06cfc66443d96b4835a" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、 &lt;code&gt;t1.equals(t2)&lt;/code&gt; が2つの &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="99bf9df3ff163296e36d804cb91efdd222787a13" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されるように、 &lt;code&gt;t1.equals(t2)&lt;/code&gt; が、任意の2つの &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="5048cf47c7589c265d38a9d3789688de3ad3b264" translate="yes" xml:space="preserve">
          <source>This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; の&lt;/a&gt;一般規約で要求されているように、 &lt;code&gt;t1.equals(t2)&lt;/code&gt; が、任意の2つの &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; インスタンス &lt;code&gt;t1&lt;/code&gt; および &lt;code&gt;t2&lt;/code&gt; の &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; を意味することが保証されます。</target>
        </trans-unit>
        <trans-unit id="2dd48e203f64ae525f74dfaa9da8459c9751d109" translate="yes" xml:space="preserve">
          <source>This ensures that the</source>
          <target state="translated">これにより</target>
        </trans-unit>
        <trans-unit id="5f7e517c8500e111c100f9af14ac55c0ae2c2bef" translate="yes" xml:space="preserve">
          <source>This ensures that the &lt;code&gt;equals&lt;/code&gt; method works properly across different implementations of the &lt;code&gt;Map.Entry&lt;/code&gt; interface.</source>
          <target state="translated">これにより、 &lt;code&gt;Map.Entry&lt;/code&gt; インターフェースのさまざまな実装にわたって &lt;code&gt;equals&lt;/code&gt; メソッドが正しく機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="22981eb19202d8e653206d092e5e3522080ec2a4" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; インターフェースの異なる実装である &lt;code&gt;obj&lt;/code&gt; パラメータに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="7fa22d1303562035a56aeb3f70cf9d8afb4eff91" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; インターフェースの異なる実装である &lt;code&gt;obj&lt;/code&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="c35d604d50f8effa4af4319277b3b27dc4d0ca83" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; インターフェースの異なる実装である &lt;code&gt;obj&lt;/code&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="d9f4990e303ffba395d311e9e2648124b393bcc1" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; インターフェースの異なる実装である &lt;code&gt;obj&lt;/code&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="2dc6602188e622505dc6530d67bf53c85a1a8c90" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;code&gt;obj&lt;/code&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドは、 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; インターフェースの異なる実装である &lt;code&gt;obj&lt;/code&gt; パラメーターに対して適切に機能します。</target>
        </trans-unit>
        <trans-unit id="e2232c689d95cc950c92c0bfc8d5afd8b3a1f6ab" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;CompositeData&lt;/code&gt; interface, with the restrictions mentioned in the &lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;java.util.Collection&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドは、 &lt;code&gt;CompositeData&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメーターに対して適切に機能します。 &lt;code&gt;java.util.Collection&lt;/code&gt; 、java.util.Collectionインターフェースの&lt;a href=&quot;../../../java/util/collection#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;メソッドで説明されている制限があります。</target>
        </trans-unit>
        <trans-unit id="d01bed2bc6c9b286244a18f63cbfb86b2a75406e" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメータに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="e905e7a95a4af021609a22c07da9cf6b804d2202" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="4a7ee87498efa3787aee5c09ad60ad61b1589d63" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="dcacb03cc3461394d7901fb988e6f22c9f056864" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメーターに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="3c16663c2c9209310b14a419c0f9516a4aba89fa" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドは、 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; インターフェースの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメーターに対して適切に機能します。</target>
        </trans-unit>
        <trans-unit id="0178e62f2575a16f3452880df90e42b85d96acfb" translate="yes" xml:space="preserve">
          <source>This ensures that this &lt;code&gt;equals&lt;/code&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are different implementations of the &lt;code&gt;TabularData&lt;/code&gt; interface.</source>
          <target state="translated">これにより、この &lt;code&gt;equals&lt;/code&gt; メソッドが、 &lt;code&gt;TabularData&lt;/code&gt; インターフェイスの異なる実装である &lt;var&gt;obj&lt;/var&gt; パラメータに対して適切に機能することが保証されます。</target>
        </trans-unit>
        <trans-unit id="8f7813aaf5117feee538d7d89395f823b4f6bfa1" translate="yes" xml:space="preserve">
          <source>This entry grants any code running as both &quot;duke&quot; and &quot;0&quot; permission to read and write files in duke's home directory, as well as permission to make socket connections to &quot;duke.com&quot;.</source>
          <target state="translated">このエントリは、&quot;duke&quot; と &quot;0&quot; の両方で実行されているコードに、duke のホームディレクトリ内のファイルの読み書き権限と、&quot;duke.com&quot; へのソケット接続の権限を付与します。</target>
        </trans-unit>
        <trans-unit id="b7349f6fff56b6ef6defad46072f343b79875324" translate="yes" xml:space="preserve">
          <source>This entry represents a single &lt;code&gt;LoginModule&lt;/code&gt; entry configured for the application specified in the &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; method from the &lt;code&gt;Configuration&lt;/code&gt; class.</source>
          <target state="translated">このエントリは、 &lt;code&gt;Configuration&lt;/code&gt; クラスの &lt;code&gt;getAppConfigurationEntry(String appName)&lt;/code&gt; メソッドで指定されたアプリケーション用に構成された単一の &lt;code&gt;LoginModule&lt;/code&gt; エントリを表します。</target>
        </trans-unit>
        <trans-unit id="0d89b42bd75b0ab3677a923c123313c25aafc55a" translate="yes" xml:space="preserve">
          <source>This enum provides access to the localized textual form of the day-of-week. Some locales also assign different numeric values to the days, declaring Sunday to have the value 1, however this class provides no support for this. See &lt;a href=&quot;temporal/weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">この列挙型は、曜日のローカライズされたテキスト形式へのアクセスを提供します。一部のロケールでは、曜日に異なる数値を割り当て、日曜日に値1を宣言していますが、このクラスはこれをサポートしていません。ローカライズされた週番号については、&lt;a href=&quot;temporal/weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7f9f36341f4cf3a90ec7e76999dae94a94fde72d" translate="yes" xml:space="preserve">
          <source>This enum provides constants of the four Unicode normalization forms that are described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms&lt;/a&gt; and two methods to access them.</source>
          <target state="translated">この列挙型は、&lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Standard Annex＃15 &amp;mdash; Unicode正規化フォーム&lt;/a&gt;とそれらにアクセスする2つのメソッドで説明されている4つのUnicode正規化フォームの定数を提供します。</target>
        </trans-unit>
        <trans-unit id="7b5363154e54782f805c8735187619d9f37433bf" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching.</source>
          <target state="translated">この列挙型は、ロケールマッチのフィルタリングモードを選択するための定数を提供します。</target>
        </trans-unit>
        <trans-unit id="7990678ba96d0684d8a647d58050509e1a46e50d" translate="yes" xml:space="preserve">
          <source>This enum provides constants to select a filtering mode for locale matching. Refer to &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt; for details.</source>
          <target state="translated">この列挙型は、ロケールマッチングのフィルタリングモードを選択する定数を提供します。詳細については、&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647言語タグのマッチングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="55de9afdf4bb8a7cd3119a4e53128a3b8a1d002a" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the day-of-week concept defined exactly equivalent to the ISO calendar system.</source>
          <target state="translated">この列挙は、多くのカレンダシステムで見られる共通の概念を表しています。したがって、この列挙は、ISOカレンダーシステムと完全に同等の曜日概念を定義しているすべてのカレンダーシステムで使用することができます。</target>
        </trans-unit>
        <trans-unit id="bbf809375262460ff823a3f9b7560eff6cd99f53" translate="yes" xml:space="preserve">
          <source>This enum represents a common concept that is found in many calendar systems. As such, this enum may be used by any calendar system that has the month-of-year concept defined exactly equivalent to the ISO-8601 calendar system.</source>
          <target state="translated">この列挙は、多くのカレンダシステムで見られる共通の概念を表しています。したがって、この列挙は、ISO-8601カレンダーシステムと全く同じ年の月の概念を定義しているすべてのカレンダーシステムで使用することができます。</target>
        </trans-unit>
        <trans-unit id="36c7f92a72c7bf1c230aab99af6f12a039767db7" translate="yes" xml:space="preserve">
          <source>This error will be thrown in the following situations:</source>
          <target state="translated">このエラーは以下のような場合に発生します。</target>
        </trans-unit>
        <trans-unit id="112dd1a0d9fcaccef70de6868974788e9ee74000" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection.</source>
          <target state="translated">このイベントは、特定のSSL接続でSSLハンドシェイクが完了したことを示します。</target>
        </trans-unit>
        <trans-unit id="d71f6ef98b1f22c5fc51c5875d4da46a55b8ad34" translate="yes" xml:space="preserve">
          <source>This event indicates that an SSL handshake completed on a given SSL connection. All of the core information about that handshake's result is captured through an &quot;SSLSession&quot; object. As a convenience, this event class provides direct access to some important session attributes.</source>
          <target state="translated">このイベントは特定のSSL接続でSSLハンドシェイクが完了したことを示します。ハンドシェイクの結果に関する全てのコア情報は &quot;SSLSession &quot;オブジェクトを通して取得されます。便利なように、このイベントクラスはいくつかの重要なセッション属性に直接アクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="b3f8bdc3cbf3a53af1cc4c37e97a21eef4fdb924" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener.</source>
          <target state="translated">このイベントはSSLSessionBindingListenerに伝搬されます。</target>
        </trans-unit>
        <trans-unit id="b6777ffdf99a5ff15ed1891bd423a6652df90171" translate="yes" xml:space="preserve">
          <source>This event is propagated to a SSLSessionBindingListener. When a listener object is bound or unbound to an SSLSession by &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, objects which implement the SSLSessionBindingListener will be receive an event of this type. The event's &lt;code&gt;name&lt;/code&gt; field is the key in which the listener is being bound or unbound.</source>
          <target state="translated">このイベントはSSLSessionBindingListenerに伝達されます。リスナーオブジェクトが&lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt;によってSSLSessionにバインドまたはバインド解除されると、SSLSessionBindingListenerを実装するオブジェクトはこのタイプのイベントを受け取ります。イベントの &lt;code&gt;name&lt;/code&gt; フィールドは、リスナーがバインドまたはアンバインドされるキーです。</target>
        </trans-unit>
        <trans-unit id="9c293ee74566b889378c2f6ed5397843ab8eabb9" translate="yes" xml:space="preserve">
          <source>This event type is used by the &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; in order to identify the service being revoked.</source>
          <target state="translated">このイベントタイプは、取り消されるサービスを識別するために &lt;code&gt;BeanContextServiceRevokedListener&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="73eaed984e9325afb8ae34d4b9ef82a0cb180277" translate="yes" xml:space="preserve">
          <source>This event type is used by the BeanContextServicesListener in order to identify the service being registered.</source>
          <target state="translated">このイベント型は,登録されているサービスを識別するために,BeanContextServicesListenerによって使用されます。</target>
        </trans-unit>
        <trans-unit id="0c03fae7847cbdcf2a7c0890ce0e9b3de1ea92a1" translate="yes" xml:space="preserve">
          <source>This example creates a hashtable of numbers. It uses the names of the numbers as keys:</source>
          <target state="translated">この例では、数字のハッシュテーブルを作成します。この例では、数字の名前をキーとして使用します。</target>
        </trans-unit>
        <trans-unit id="09d5046db3945a7fb60de34961378b349f6a5370" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a named non-ISO calendar system.</source>
          <target state="translated">この例では、名前付きの非 ISO カレンダシステムで日付を作成して使用します。</target>
        </trans-unit>
        <trans-unit id="ee41c74c9d39854de7fb63a6d22884c91abdbab7" translate="yes" xml:space="preserve">
          <source>This example creates and uses a date in a specific ThaiBuddhist calendar system.</source>
          <target state="translated">この例では、特定のタイ仏教のカレンダーシステムで日付を作成して使用します。</target>
        </trans-unit>
        <trans-unit id="dbb65bb38af7b88d332b1c0fe95984b9f1b415dd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty list:</source>
          <target state="translated">この例は、空のリストを取得するための型安全な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e7c8f3dc1e88f34181678c2ae956e0c12ab62ad3" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty map:</source>
          <target state="translated">この例では、空のマップを取得するための型安全な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="39f8737c17fbee97824de105f37e72cf70b73d10" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty navigable set:</source>
          <target state="translated">この例では、ナビゲート可能な空の集合を取得するための型安全な方法を示します。</target>
        </trans-unit>
        <trans-unit id="490adafdba1a3a049c697756377b581a634eacfb" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty set:</source>
          <target state="translated">この例は、空の集合を取得するための型安全な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4872829aa63418ad51d68f41eacc3bb03f4a57fd" translate="yes" xml:space="preserve">
          <source>This example illustrates the type-safe way to obtain an empty sorted set:</source>
          <target state="translated">この例では、ソートされた空の集合を取得するための型安全な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4bfbfaeeb85a05ec1329edf719e815584c1d2158" translate="yes" xml:space="preserve">
          <source>This example lists todays date for all of the available calendars.</source>
          <target state="translated">この例では、利用可能なすべてのカレンダーの今日の日付が表示されます。</target>
        </trans-unit>
        <trans-unit id="648b63858d674e8acadf1871284e221d81c3346e" translate="yes" xml:space="preserve">
          <source>This example was produced by running the program:</source>
          <target state="translated">この例は、プログラムを実行して作成したものです。</target>
        </trans-unit>
        <trans-unit id="d0818493ecc5fe805ac5b423d66ec833896bf1e0" translate="yes" xml:space="preserve">
          <source>This exception can be thrown during any interaction with the InitialContext, not only when the InitialContext is constructed. For example, the implementation of the initial context might lazily retrieve the context only when actual methods are invoked on it. The application should not have any dependency on when the existence of an initial context is determined.</source>
          <target state="translated">この例外は InitialContext が構築されたときだけでなく、InitialContext とのやりとり中にも発生する可能性がある。例えば、初期コンテキストの実装は、実際のメソッドが呼び出されたときだけコンテキストを取得しているかもしれません。アプリケーションは、初期コンテキストの存在がいつ決定されるかに依存してはいけません。</target>
        </trans-unit>
        <trans-unit id="ebd277a641e5edb2a6d1b8b8160dfc6023c80f73" translate="yes" xml:space="preserve">
          <source>This exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The</source>
          <target state="translated">この例外は、汎用的な例外連鎖機構に適合するように後付けされています。には、このような例外があります。</target>
        </trans-unit>
        <trans-unit id="fc0ed4883811ecd2ba38eb6a181bbf81bc9c68b8" translate="yes" xml:space="preserve">
          <source>This exception includes the text being parsed and the error index.</source>
          <target state="translated">この例外には、解析中のテキストとエラーインデックスが含まれます。</target>
        </trans-unit>
        <trans-unit id="c10b06251c203b077f176eed708ebfef045a3813" translate="yes" xml:space="preserve">
          <source>This exception indicates one of a variety of certificate problems.</source>
          <target state="translated">この例外は、さまざまな証明書の問題の一つを示しています。</target>
        </trans-unit>
        <trans-unit id="33e94f716a79a8d3b0da393e317e14e96f5755d8" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system.</source>
          <target state="translated">この例外は、指定された名前が命名システムの命名構文に準拠していないことを示します。</target>
        </trans-unit>
        <trans-unit id="d8fa4e42b480993ad1adbfc13670ec6b9d32fa39" translate="yes" xml:space="preserve">
          <source>This exception indicates that the name being specified does not conform to the naming syntax of a naming system. This exception is thrown by any of the methods that does name parsing (such as those in Context, DirContext, CompositeName and CompoundName).</source>
          <target state="translated">この例外は、指定された名前が命名システムの命名構文に準拠していないことを示します。この例外は、名前の解析を行うメソッド (Context、DirContext、CompositeName、CompoundName など)によってスローされます。</target>
        </trans-unit>
        <trans-unit id="a41811495370e0547788735a1c587ae46610a95c" translate="yes" xml:space="preserve">
          <source>This exception is mainly used by data input streams to signal end of stream. Note that many other input operations return a special value on end of stream rather than throwing an exception.</source>
          <target state="translated">この例外は、主にデータ入力ストリームでストリームの終了を知らせるために使用されます。他の多くの入力操作は、例外を投げるのではなく、ストリームの終了時に特別な値を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7032d9b1e8a75130f0803a0ccf976db6b7484d92" translate="yes" xml:space="preserve">
          <source>This exception is not related to the &lt;a href=&quot;../../security/accesscontrolexception&quot;&gt;&lt;code&gt;AccessControlException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; thrown by access controllers or security managers when access to a file is denied.</source>
          <target state="translated">この例外は、ファイルへのアクセスが拒否されたときにアクセスコントローラーまたはセキュリティマネージャーによってスローされる&lt;a href=&quot;../../security/accesscontrolexception&quot;&gt; &lt;code&gt;AccessControlException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;とは関係ありません。</target>
        </trans-unit>
        <trans-unit id="cd593da22d7bd37c84871cd2a51f0ce84fc355d4" translate="yes" xml:space="preserve">
          <source>This exception is raised when a role in a relation does not exist, or is not readable, or is not settable.</source>
          <target state="translated">この例外は、リレーション内のロールが存在しないか、読み取れないか、設定できない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="246e01e59808ff79b55f0b9be5fc7653842efa99" translate="yes" xml:space="preserve">
          <source>This exception is raised when an access is done to the Relation Service and that one is not registered.</source>
          <target state="translated">この例外は、リレーションサービスへのアクセスが行われ、そのアクセスが登録されていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="89fc0f81cd47a0cc186b5077a3a71a355bfda4f3" translate="yes" xml:space="preserve">
          <source>This exception is raised when an invalid Relation Service is provided.</source>
          <target state="translated">この例外は、無効なリレーションサービスが提供されている場合に発生します。</target>
        </trans-unit>
        <trans-unit id="06f9f29b29245f3df3951ad627fc9dc6a47f8c46" translate="yes" xml:space="preserve">
          <source>This exception is raised when relation id provided for a relation is already used.</source>
          <target state="translated">この例外は、リレーションに提供されたリレーションIDが既に使用されている場合に発生します。</target>
        </trans-unit>
        <trans-unit id="c94b392222d7201f06010cfcbd4189e3cbf0aa3b" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation for a given relation id in a Relation Service.</source>
          <target state="translated">この例外は、指定されたリレーションIDのリレーションがリレーションサービスに存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="37637570799bbcc0f5745c0d3ff3a7609bb45288" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no relation type with given name in Relation Service.</source>
          <target state="translated">この例外は、Relation Service に名前を指定したリレーションタイプが存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="6d6e29a17d53533b6eef2ab8a2039d9b0bc9946f" translate="yes" xml:space="preserve">
          <source>This exception is raised when there is no role info with given name in a given relation type.</source>
          <target state="translated">この例外は、指定されたリレーション型に指定された名前のロール情報が存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="d572f6242fcc3485a8ec60482ca8968cb95a1c5b" translate="yes" xml:space="preserve">
          <source>This exception is raised when, in a role info, its minimum degree is greater than its maximum degree.</source>
          <target state="translated">この例外は、ロール情報において、その最小度が最大度よりも大きい場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f60275588e3c668e8ff47c8a18e4a3eb13eda831" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception.</source>
          <target state="translated">この例外は、 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; および &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; によってスローされ、実行中のアクションがチェック済み例外をスローしたことを示します。</target>
        </trans-unit>
        <trans-unit id="1299a98829234a5ef8fbfe5da579ee11b461133d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; and &lt;code&gt;doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)&lt;/code&gt; to indicate that the action being performed threw a checked exception. The exception thrown by the action can be obtained by calling the &lt;code&gt;getException&lt;/code&gt; method. In effect, an &lt;code&gt;PrivilegedActionException&lt;/code&gt; is a &quot;wrapper&quot; for an exception thrown by a privileged action.</source>
          <target state="translated">この例外は、 &lt;code&gt;doPrivileged(PrivilegedExceptionAction)&lt;/code&gt; および &lt;code&gt;doPrivileged(PrivilegedExceptionAction, AccessControlContext context)&lt;/code&gt; によってスローされ、実行中のアクションがチェック済み例外をスローしたことを示します。アクションによってスローされた例外は、 &lt;code&gt;getException&lt;/code&gt; メソッドを呼び出すことで取得できます。実際には、 &lt;code&gt;PrivilegedActionException&lt;/code&gt; は、特権付きアクションによってスローされる例外の「ラッパー」です。</target>
        </trans-unit>
        <trans-unit id="5530e47fff716d797f391867dfba35b11fcffef8" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules if authentication failed. For example, a &lt;code&gt;LoginModule&lt;/code&gt; throws this exception if the user entered an incorrect password.</source>
          <target state="translated">この例外は、認証が失敗した場合にLoginModulesによってスローされます。たとえば、ユーザーが誤ったパスワードを入力した場合、 &lt;code&gt;LoginModule&lt;/code&gt; はこの例外をスローします。</target>
        </trans-unit>
        <trans-unit id="ca3ab3043d6dfdc2fabac86817feeba43db51242" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that a &lt;code&gt;Credential&lt;/code&gt; has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt; authenticating a user in its &lt;code&gt;login&lt;/code&gt; method may determine that the user's password, although entered correctly, has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to assist the user in updating the password.</source>
          <target state="translated">この例外は、 &lt;code&gt;Credential&lt;/code&gt; の有効期限が切れていると判断したときにLoginModuleによってスローされます。たとえば、 &lt;code&gt;login&lt;/code&gt; メソッドでユーザーを認証する &lt;code&gt;LoginModule&lt;/code&gt; は、ユーザーのパスワードが正しく入力されていても有効期限が切れていると判断する場合があります。この場合、 &lt;code&gt;LoginModule&lt;/code&gt; はこの例外をスローしてアプリケーションに通知します。次に、アプリケーションは適切な手順を実行して、ユーザーがパスワードを更新できるようにします。</target>
        </trans-unit>
        <trans-unit id="84488f7e5bf4d309afcf875e0cf1e1fb778b4d56" translate="yes" xml:space="preserve">
          <source>This exception is thrown by LoginModules when they determine that an account has expired. For example, a &lt;code&gt;LoginModule&lt;/code&gt;, after successfully authenticating a user, may determine that the user's account has expired. In this case the &lt;code&gt;LoginModule&lt;/code&gt; throws this exception to notify the application. The application can then take the appropriate steps to notify the user.</source>
          <target state="translated">この例外は、アカウントの有効期限が切れていると判断したときにLoginModuleによってスローされます。たとえば、 &lt;code&gt;LoginModule&lt;/code&gt; は、ユーザーの認証に成功した後、ユーザーのアカウントの有効期限が切れていると判断する場合があります。この場合、 &lt;code&gt;LoginModule&lt;/code&gt; はこの例外をスローしてアプリケーションに通知します。その後、アプリケーションは適切な手順を実行してユーザーに通知できます。</target>
        </trans-unit>
        <trans-unit id="c3a23db5cdc543f911a76ee1f701b5670699b971" translate="yes" xml:space="preserve">
          <source>This exception is thrown by a SASL mechanism implementation to indicate that the SASL exchange has failed due to reasons related to authentication, such as an invalid identity, passphrase, or key.</source>
          <target state="translated">この例外は、SASL メカニズムの実装によってスローされ、無効な ID、パスフレーズ、キーなどの認証に関連した理由で SASL 交換が失敗したことを示すために、SASL 交換が失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="39e992da1bae6a2646cdec653eebc671c5d22978" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Destroyable&lt;/code&gt; interface when the &lt;code&gt;destroy&lt;/code&gt; method fails.</source>
          <target state="translated">この例外は、 &lt;code&gt;destroy&lt;/code&gt; メソッドが失敗したときに、 &lt;code&gt;Destroyable&lt;/code&gt; インターフェースを実装する資格情報によってスローされます。</target>
        </trans-unit>
        <trans-unit id="d2bb2b71e8b1c05a22923e140fc2a6f78bb48e5d" translate="yes" xml:space="preserve">
          <source>This exception is thrown by credentials implementing the &lt;code&gt;Refreshable&lt;/code&gt; interface when the &lt;code&gt;refresh&lt;/code&gt; method fails.</source>
          <target state="translated">この例外は、 &lt;code&gt;refresh&lt;/code&gt; メソッドが失敗したときに、 &lt;code&gt;Refreshable&lt;/code&gt; インターフェースを実装する資格情報によってスローされます。</target>
        </trans-unit>
        <trans-unit id="4bc14b37aa8efa44b5f813b855472a0d52cde9c3" translate="yes" xml:space="preserve">
          <source>This exception is thrown by methods to indicate that a binding cannot be added because the name is already bound to another object.</source>
          <target state="translated">この例外は、名前がすでに別のオブジェクトにバインドされているためにバインディングを追加できないことを示すために、メソッドによってスローされます。</target>
        </trans-unit>
        <trans-unit id="3f50a87f7e74f3bac1a39c7d87437a836ea03616" translate="yes" xml:space="preserve">
          <source>This exception is thrown by the AccessController to indicate that a requested access (to a critical system resource such as the file system or the network) is denied.</source>
          <target state="translated">この例外は、要求された (ファイルシステムやネットワークなどの重要なシステムリソースへの)アクセスが拒否されたことを示すために AccessController によってスローされます。</target>
        </trans-unit>
        <trans-unit id="de70128d4e6b05c186ee1c720a208ef472f651ce" translate="yes" xml:space="preserve">
          <source>This exception is thrown if a key in the keystore cannot be recovered.</source>
          <target state="translated">この例外は、キーストア内のキーを復元できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f8b425e31d21a6d687a44386bcb5d47cac70bff9" translate="yes" xml:space="preserve">
          <source>This exception is thrown if an entry in the keystore cannot be recovered.</source>
          <target state="translated">この例外は、キーストアのエントリを復元できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="7c7d61c5590a79f20a378cc79058a8edcd745d38" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further.</source>
          <target state="translated">この例外は、操作がそれ以上進むことができない名前のポイントに達したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="a73a128ee62454d37858e133d0ecdc425831d8d6" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further. When performing an operation on a composite name, a naming service provider may reach a part of the name that does not belong to its namespace. At that point, it can construct a CannotProceedException and then invoke methods provided by javax.naming.spi.NamingManager (such as getContinuationContext()) to locate another provider to continue the operation. If this is not possible, this exception is raised to the caller of the context operation.</source>
          <target state="translated">この例外は、操作がそれ以上進められない名前のポイントに達したことを示すためにスローされます。複合名に対する操作を実行する際、命名サービスプロバイダは名前空間に属さない名前の一部に到達することがあります。その場合は、CannotProceedException を作成してから javax.naming.spi.NamingManager が提供するメソッド (getContinuationContext()など)を呼び出して、操作を続行する別のプロバイダを探すことができます。これができない場合は、コンテキスト操作の呼び出し元にこの例外が発生します。</target>
        </trans-unit>
        <trans-unit id="b920a43bc9fe560f53060820cbe16e4c86837cba" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed.</source>
          <target state="translated">この例外は、これまでに返された、または返された結果が部分的であり、操作を完了できないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="d2089a06bf446af8c1c5d52cd2a1acb69f7eb14c" translate="yes" xml:space="preserve">
          <source>This exception is thrown to indicate that the result being returned or returned so far is partial, and that the operation cannot be completed. For example, when listing a context, this exception indicates that returned results only represents some of the bindings in the context.</source>
          <target state="translated">この例外は、返された結果が部分的なものであり、操作を完了できないことを示すためにスローされます。例えば、コンテキストをリストアップする場合、この例外は、返される結果がコンテキスト内のバインディングの一部を表しているだけであることを示します。</target>
        </trans-unit>
        <trans-unit id="0fa3d6d88ad2c6dce34e025084644e5629dba7f6" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a &lt;a href=&quot;cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; operating in an AEAD mode (such as GCM/CCM) is unable to verify the supplied authentication tag.</source>
          <target state="translated">この例外は、AEADモード（GCM / CCMなど）で動作する&lt;a href=&quot;cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt;、指定された認証タグを検証できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="57d1301034839950e33406fe1cf7e7d9a5e1993d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a component of the name cannot be resolved because it is not bound.</source>
          <target state="translated">この例外は、名前のコンポーネントがバインドされていないために解決できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="6f413d3ab1f32cefb3ce99cf79188671b686352f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked.</source>
          <target state="translated">この例外は、コンテキストの実装が呼び出された操作をサポートしていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="57460516d646410f49f0cbcbd0134b253ab4a0c0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a context implementation does not support the operation being invoked. For example, if a server does not support the Context.bind() method it would throw OperationNotSupportedException when the bind() method is invoked on it.</source>
          <target state="translated">この例外は、コンテキストの実装が呼び出された操作をサポートしていない場合にスローされます。たとえば、サーバが Context.bind()メソッドをサポートしていない場合は、 bind()メソッドが呼び出されたときに OperationNotSupportedException をスローします。</target>
        </trans-unit>
        <trans-unit id="4c2f8fa414abf991709382ded4c13c36debdb981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a loop was detected will attempting to resolve a link, or an implementation specific limit on link counts has been reached.</source>
          <target state="translated">この例外は、リンクを解決しようとするループが検出された場合、またはリンク数の実装固有の制限に達した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5d1da130a71dcfc9b5538b08be7ca70f62b9f774" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a malformed link was encountered while resolving or constructing a link.</source>
          <target state="translated">この例外は、リンクの解決または構築中に不正なリンクが見つかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="b2eacf9ed93eff592d27245d0674196637042935" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit.</source>
          <target state="translated">この例外は、指定された制限時間内にメソッドが終了しなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="6529b41bc359144e52aa6f0bbb2d5c2b2b1c4b38" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method does not terminate within the specified time limit. This can happen, for example, if the user specifies that the method should take no longer than 10 seconds, and the method fails to complete with 10 seconds.</source>
          <target state="translated">この例外は、メソッドが指定された制限時間内に終了しなかった場合にスローされます。これは、例えば、ユーザがメソッドが10秒以内に終了するように指定したのに、メソッドが10秒で終了しなかった場合などに発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="94622a00a57fe2c691ac5a52754c85dcf9fdc8a7" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema.</source>
          <target state="translated">この例外は、何らかの方法でメソッドがスキーマに違反した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="eec5202a94d643b10a232078bd0a9899bdfad4bb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method in some ways violates the schema. An example of schema violation is modifying attributes of an object that violates the object's schema definition. Another example is renaming or moving an object to a part of the namespace that violates the namespace's schema definition.</source>
          <target state="translated">この例外は、何らかの方法でメソッドがスキーマに違反した場合にスローされます。スキーマ違反の例としては、オブジェクトのスキーマ定義に違反してオブジェクトの属性を変更することがあります。もう 1 つの例は、名前を変更したり、名前空間の一部にオブジェクトを移動したりすることで、名前空間のスキーマ定義に違反しています。</target>
        </trans-unit>
        <trans-unit id="59dd923be01c00ea6ac5a97390afa42443932fa1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit.</source>
          <target state="translated">この例外は、メソッドがサイズに関連した制限を超える結果を生成した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="31d22f71cdd1031a9c77a9ba4cb23dce67a18a6a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method produces a result that exceeds a size-related limit. This can happen, for example, if the result contains more objects than the user requested, or when the size of the result exceeds some implementation-specific limit.</source>
          <target state="translated">この例外は、メソッドがサイズに関連した制限を超える結果を生成した場合にスローされます。これは、例えば、結果にユーザが要求した以上のオブジェクトが含まれている場合や、結果のサイズが実装固有の制限を超えている場合などに発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bbd9fa71355edcdb1a24b4f3751fa09d73366885" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit.</source>
          <target state="translated">この例外は、ユーザまたはシステムが指定した制限によりメソッドが異常終了した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e90980a99f80ee87d4a939aa92ec7a66ef558175" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a method terminates abnormally due to a user or system specified limit. This is different from a InsufficientResourceException in that LimitExceededException is due to a user/system specified limit. For example, running out of memory to complete the request would be an insufficient resource. The client asking for 10 answers and getting back 11 is a size limit exception.</source>
          <target state="translated">この例外は、ユーザやシステムが指定した制限が原因でメソッドが異常終了した場合にスローされます。これは InsufficientResourceException とは異なり、 LimitExceededException がユーザやシステムが指定した制限によるものである点で異なります。例えば、リクエストを完了するためのメモリが不足している場合は、リソースが不足していることになります。クライアントが 10 個の回答を求めて 11 個の回答が返ってくるのは、サイズ制限の例外です。</target>
        </trans-unit>
        <trans-unit id="c416a716ffde29bde878981ed9dcb8d0848e157c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context.</source>
          <target state="translated">この例外は、命名操作が操作を継続するためにコンテキストを必要とするポイントまで進行したが、解決されたオブジェクトがコンテキストではない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="81a72d317c6fc8a72579a69b61472a7f43bc74d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation, but the resolved object is not a context. For example, Context.destroy() requires that the named object be a context. If it is not, NotContextException is thrown. Another example is a non-context being encountered during the resolution phase of the Context methods.</source>
          <target state="translated">この例外は、命名操作が操作を継続するためにコンテキストが必要な時点まで進行したが、解決されたオブジェクトがコンテキストではない場合にスローされます。例えば、Context.destroy()は、命名されたオブジェクトがコンテキストであることを要求します。そうでない場合は NotContextException がスローされます。もうひとつの例は、Context メソッドの解決フェーズで非コンテクストが発生した場合です。</target>
        </trans-unit>
        <trans-unit id="1dc25d47ec82b8f9dd4c3de5dc2dd0f9fc45b85d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.</source>
          <target state="translated">この例外は、特定の暗号アルゴリズムが要求されたが、環境で利用できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4644df4bf28c4539efcd49b5d10a7bb42e51e6b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.</source>
          <target state="translated">この例外は、入力データに対して特定のパディング機構が期待されているにもかかわらず、データが適切にパディングされていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="302bd654098c5aa1f61763ebbe1ca7522215d3fe" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular padding mechanism is requested but is not available in the environment.</source>
          <target state="translated">この例外は、特定のパディング機構が要求されたが、環境で利用できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="101fcdb599f4abff7f000ae7a88b9ec0617aa6cb" translate="yes" xml:space="preserve">
          <source>This exception is thrown when a particular security provider is requested but is not available in the environment.</source>
          <target state="translated">この例外は、特定のセキュリティプロバイダが要求されたが、環境で利用できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="2c2cde6cb8f8e8409a755bb6e1c01e5a05d8da07" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects.</source>
          <target state="translated">この例外は、XML フォーマットの文字列が ModelMBean オブジェクトに解析されているとき、または XML フォーマットの文字列が ModelMBean オブジェクトから作成されているときにスローされます。</target>
        </trans-unit>
        <trans-unit id="25db7a2ecc88fac98e9ec065fe80032bf993acb4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an XML formatted string is being parsed into ModelMBean objects or when XML formatted strings are being created from ModelMBean objects. It is also used to wrapper exceptions from XML parsers that may be used.</source>
          <target state="translated">この例外は、XMLフォーマットされた文字列がModelMBeanオブジェクトに解析されている場合や、XMLフォーマットされた文字列がModelMBeanオブジェクトから作成されている場合にスローされます。また、使用される可能性のあるXMLパーサの例外をラッパーするためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="53d4c794c1e118bb48fb37d3336f20a0c87a6a41" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly.</source>
          <target state="translated">この例外は、指定が不完全であったり誤っていたりした属性セットを追加または修正しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="c2a1c4c4c3c816a5f13805d517b07a22d25f027d" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly. This could happen, for example, when attempting to add or modify a binding, or to create a new subcontext without specifying all the mandatory attributes required for creation of the object. Another situation in which this exception is thrown is by specification of incompatible attributes within the same attribute set, or attributes in conflict with that specified by the object's schema.</source>
          <target state="translated">この例外は、指定が不完全であったり誤っていたりした属性セットを追加または修正しようとしたときにスローされます。これは、例えばバインディングを追加または修正しようとしたときや、オブジェクトの作成に必要な必須属性をすべて指定せずに新しいサブコンテキストを作成しようとしたときなどに発生する可能性があります。この例外がスローされるもう一つの状況は、同じ属性セット内で互換性のない属性を指定したり、オブジェクトのスキーマで指定された属性と競合する属性を指定したりすることです。</target>
        </trans-unit>
        <trans-unit id="d5446f4e7405a3d0ddb8359b07cc60df20582910" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier.</source>
          <target state="translated">この例外は、無効な属性識別子を持つ属性を追加して作成しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="9e24d2a37f41cfc2a12b4c55feecd1e44dade084" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier. The validity of an attribute identifier is directory-specific.</source>
          <target state="translated">この例外は、無効な属性識別子を持つ属性を追加して作成しようとしたときにスローされます。属性識別子の有効性はディレクトリ固有です。</target>
        </trans-unit>
        <trans-unit id="8317fef5f025c8c1c489d2d222975edd10e116a1" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state.</source>
          <target state="translated">この例外は、属性の(スキーマの)定義や属性の状態と競合する属性、その識別子、またはその値を追加、削除、修正しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="08c60304b9a2318e37b9524069c68d67fec5a981" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an attempt is made to add, or remove, or modify an attribute, its identifier, or its values that conflicts with the attribute's (schema) definition or the attribute's state. It is thrown in response to DirContext.modifyAttributes(). It contains a list of modifications that have not been performed, in the order that they were supplied to modifyAttributes(). If the list is null, none of the modifications were performed successfully.</source>
          <target state="translated">この例外は、属性の (スキーマの)定義や属性の状態と競合する属性、その識別子、またはその値を追加、削除、修正しようとしたときにスローされます。DirContext.modifyAttributes()に応答してスローされます。これは、実行されなかった修正のリストを、modifyAttributes()に供給された順に含みます。このリストが NULL の場合、修正が正常に実行されなかったことを意味します。</target>
        </trans-unit>
        <trans-unit id="ebe3b8391e77c5b75aa9f11c64b6ae6db60cc91f" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service.</source>
          <target state="translated">この例外は、命名サービスまたはディレクトリサービスへのアクセス中に認証エラーが発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e92d5a4eb1837af13ada81159fcecf16b24e805c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an authentication error occurs while accessing the naming or directory service. An authentication error can happen, for example, when the credentials supplied by the user program is invalid or otherwise fails to authenticate the user to the naming/directory service.</source>
          <target state="translated">この例外は、命名サービスまたはディレクトリ・サービスへのアクセス中に認証エラーが発生した場合にスローされます。認証エラーは、例えば、ユーザプログラムによって提供された資格情報が無効な場合や、命名/ディレクトリサービスへのユーザの認証に失敗した場合などに発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e7b0e2fe87b28ac79412211e90b4a23789221dc0" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an operation attempts to add an attribute that already exists.</source>
          <target state="translated">この例外は、操作が既に存在する属性を追加しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="0808c2f07b29cbd1d53f53236c70c7c29de9102c" translate="yes" xml:space="preserve">
          <source>This exception is thrown when an output buffer provided by the user is too short to hold the operation result.</source>
          <target state="translated">この例外は、ユーザによって提供された出力バッファが短すぎて演算結果を保持できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="454fa55a71651cdde1b0e101e15afcd492adb9d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to access an attribute that does not exist.</source>
          <target state="translated">この例外は、存在しない属性にアクセスしようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="9ecab75d56b4ba05eb55427d1e33a425d334f9b9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available.</source>
          <target state="translated">この例外は、ディレクトリやネーミングサービスと通信しようとしたときに、そのサービスが利用できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="9b5c20f9ae99168641fffbd9044b91f457d76668" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to communicate with a directory or naming service and that service is not available. It might be unavailable for different reasons. For example, the server might be too busy to service the request, or the server might not be registered to service any requests, etc.</source>
          <target state="translated">この例外は、ディレクトリや命名サービスと通信しようとしたときに、そのサービスが利用できない場合にスローされます。さまざまな理由で利用できない場合があります。例えば、サーバが忙しすぎてリクエストに対応できない、サーバがリクエストに対応するために 登録されていない、などです。</target>
        </trans-unit>
        <trans-unit id="b554b30c750f03069a8349997f4cf18d9a837fbf" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to destroy a context that is not empty.</source>
          <target state="translated">この例外は、空ではないコンテキストを破棄しようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="bd0dde72d214907e7714fe11c86f10e8c526fcb8" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission.</source>
          <target state="translated">この例外は、クライアントが許可されていない操作を実行しようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="8363cd2a1ada41c4cb07871c7e5cfc4422cc13b5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when attempting to perform an operation for which the client has no permission. The access control/permission model is dictated by the directory/naming server.</source>
          <target state="translated">この例外は、クライアントが許可されていない操作を実行しようとしたときにスローされます。アクセス制御/許可モデルはディレクトリ/命名サーバによって指定されます。</target>
        </trans-unit>
        <trans-unit id="48839fda123e28be6cc99eed74e94281b5247a6e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created.</source>
          <target state="translated">この例外は、初期コンテキスト実装を作成できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="acdd48773e49250337c17b3f2116cb62ce5655d5" translate="yes" xml:space="preserve">
          <source>This exception is thrown when no initial context implementation can be created. The policy of how an initial context implementation is selected is described in the documentation of the InitialContext class.</source>
          <target state="translated">この例外は、初期コンテキスト実装を作成できない場合にスローされます。初期コンテキストの実装がどのように選択されるかの方針は InitialContext クラスのドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="371d9f616b47b2acb1cc433ddbbf545be8511eff" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation.</source>
          <target state="translated">この例外は、要求された操作を完了するためにリソースが利用できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="3c99ac5e4f42a586047b0c3837db34019c890710" translate="yes" xml:space="preserve">
          <source>This exception is thrown when resources are not available to complete the requested operation. This might due to a lack of resources on the server or on the client. There are no restrictions to resource types, as different services might make use of different resources. Such restrictions might be due to physical limits and/or administrative quotas. Examples of limited resources are internal buffers, memory, network bandwidth.</source>
          <target state="translated">この例外は、要求された操作を完了するためにリソースが利用できない場合にスローされます。これは、サーバやクライアントのリソースが不足していることが原因かもしれません。異なるサービスが異なるリソースを使用する可能性があるため、 リソースの種類に制限はありません。このような制限は、物理的な制限や管理上の割り当てによるものかもしれません。制限されたリソースの例としては、内部バッファ、メモリ、ネットワーク帯域幅などがあります。</target>
        </trans-unit>
        <trans-unit id="09fad22a772bd21d53e751696746e069001cb96e" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service.</source>
          <target state="translated">この例外は、クライアントがディレクトリやネーミングサービスと通信できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="28ef08887bb3708aebd983a08c96a8cfa39a9797" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the client is unable to communicate with the directory or naming service. The inability to communicate with the service might be a result of many factors, such as network partitioning, hardware or interface problems, failures on either the client or server side. This exception is meant to be used to capture such communication problems.</source>
          <target state="translated">この例外は、クライアントがディレクトリまたはネーミングサービスと通信できない場合にスローされます。サービスとの通信ができないのは、ネットワークのパーティショニング、ハードウェアやインターフェースの問題、クライアント側またはサーバ側の障害など、多くの要因の結果である可能性があります。この例外は、このような通信の問題を捕捉するために使用されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="6efd430acb709b2621e9d539947e12d9e66d61d9" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the length of data provided to a block cipher is incorrect, i.e., does not match the block size of the cipher.</source>
          <target state="translated">この例外は、ブロック暗号に提供されるデータの長さが正しくない場合、つまり暗号のブロックサイズと一致しない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="483ee24d9f269ccb8aea2c071b14c2365f2ecd5b" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted.</source>
          <target state="translated">この例外は、呼び出された命名操作が中断された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="b8b7b4a7229bdebb156a99f438f2b600a0dcf487" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the naming operation being invoked has been interrupted. For example, an application might interrupt a thread that is performing a search. If the search supports being interrupted, it will throw InterruptedNamingException. Whether an operation is interruptible and when depends on its implementation (as provided by the service providers). Different implementations have different ways of protecting their resources and objects from being damaged due to unexpected interrupts.</source>
          <target state="translated">この例外は、呼び出された命名操作が中断されたときにスローされます。例えば、アプリケーションが検索を実行しているスレッドを中断することがあるかもしれません。検索が中断されることをサポートしている場合は、 InterruptedNamingException をスローします。操作が割り込み可能かどうかは、(サービスプロバイダが提供する)実装に依存します。異なる実装では、予期せぬ割り込みによってリソースやオブジェクトが破損しないように保護する方法が異なります。</target>
        </trans-unit>
        <trans-unit id="5c8b8d397c54b830baad3109e9468a9b1ab1d596" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported.</source>
          <target state="translated">この例外は、要求された認証の特定のフレーバがサポートされていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5af2dbd51afd3d832635e5a5a5f9ef19b6d40249" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the particular flavor of authentication requested is not supported. For example, if the program is attempting to use strong authentication but the directory/naming supports only simple authentication, this exception would be thrown. Identification of a particular flavor of authentication is provider- and server-specific. It may be specified using specific authentication schemes such those identified using SASL, or a generic authentication specifier (such as &quot;simple&quot; and &quot;strong&quot;).</source>
          <target state="translated">この例外は、要求された特定の認証がサポートされていない場合にスローされます。例えば、プログラムが強力な認証を使用しようとしているが、ディレクトリ/名前付けが単純な認証しかサポートしていない場合、この例外はスローされます。特定の認証方式の識別は、プロバイダやサーバ固有のものです。SASL を使用して特定の認証スキームを使用して指定することもできますし、 一般的な認証指定子 (「simple」や「strong」など)を使用して指定することもできます。</target>
        </trans-unit>
        <trans-unit id="0289a133e8abfa2a6414887b59f3f1b56d7b1dda" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid.</source>
          <target state="translated">この例外は、検索フィルタの指定が無効な場合に発生する。</target>
        </trans-unit>
        <trans-unit id="332819cc96497ee0281a2d425d00258c041bc8d4" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of a search filter is invalid. The expression of the filter may be invalid, or there may be a problem with one of the parameters passed to the filter.</source>
          <target state="translated">この例外は、検索フィルタの指定が無効な場合に発生します。フィルタの式が無効であるか、フィルタに渡されたパラメータに問題があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="5729b449c32051f6a0a5756b8780f0c11f4c3c2a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid.</source>
          <target state="translated">この例外は、検索操作に対するSearchControlsの指定が無効な場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="cdb0be4fb77057c18ab00ea22e44156d1bc19dfc" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the specification of the SearchControls for a search operation is invalid. For example, if the scope is set to a value other than OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE, this exception is thrown.</source>
          <target state="translated">この例外は、検索操作に対する SearchControls の指定が無効な場合にスローされます。例えば、スコープがOBJECT_SCOPE、ONELEVEL_SCOPE、SUBTREE_SCOPE以外の値に設定されている場合、この例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="17089db05ad45c11e665b76593094d608d306306" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem.</source>
          <target state="translated">この例外は、設定に問題がある場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="2fc449823f0aec4c36d0a26bb45bbfcce8f03d8a" translate="yes" xml:space="preserve">
          <source>This exception is thrown when there is a configuration problem. This can arise when installation of a provider was not done correctly, or if there are configuration problems with the server, or if configuration information required to access the provider or service is malformed or missing. For example, a request to use SSL as the security protocol when the service provider software was not configured with the SSL component would cause such an exception. Another example is if the provider requires that a URL be specified as one of the environment properties but the client failed to provide it.</source>
          <target state="translated">この例外は、構成に問題がある場合にスローされます。これは、プロバイダのインストールが正しく行われなかった場合や、サーバの構成に問題がある場合、またはプロバイダやサービスにアクセスするために必要な構成情報が不正な形式や欠落している場合に発生する可能性があります。例えば、サービスプロバイダのソフトウェアがSSLコンポーネントで構成されていない場合に、セキュリティプロトコルとしてSSLを使用するように要求すると、このような例外が発生します。他の例としては、プロバイダが環境プロパティの 1 つとして URL を指定するように要求しているにもかかわらず、クライアントが URL を提供できなかった場合などがあります。</target>
        </trans-unit>
        <trans-unit id="8272ca68abdbab62494087027b4171df0897b987" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links.</source>
          <target state="translated">この例外は、リンクを解決する際に発生する問題を記述するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1aea89ea00a9749bd19029837fff4c685ebd3819" translate="yes" xml:space="preserve">
          <source>This exception is used to describe problems encounter while resolving links. Addition information is added to the base NamingException for pinpointing the problem with the link.</source>
          <target state="translated">この例外は、リンクを解決する際に発生した問題を記述するために使用されます。リンクの問題をピンポイントで特定するために,ベースとなる NamingException に追加情報が追加されます.</target>
        </trans-unit>
        <trans-unit id="bcd5ca596420f929e88a9b13dc1380f40ddf33b4" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate a problems with the configured time-zone rules.</source>
          <target state="translated">この例外は、構成されたタイムゾーンルールに問題があることを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="f26b2138dacd9301849230d91ea0be2e44a94adf" translate="yes" xml:space="preserve">
          <source>This exception is used to indicate problems with creating, querying and manipulating date-time objects.</source>
          <target state="translated">この例外は、日付時間オブジェクトの作成、クエリ、および操作に問題があることを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="52aac530a9aa9b99d3a8923d82503f582d33c716" translate="yes" xml:space="preserve">
          <source>This exception may also be thrown when two method handles are composed, and the system detects that their types cannot be matched up correctly. This amounts to an early evaluation of the type mismatch, at method handle construction time, instead of when the mismatched method handle is called.</source>
          <target state="translated">この例外は、2 つのメソッドハンドルが構成されていて、その型が正しく一致しないことをシステムが検出した場合にもスローされることがあります。これは、型の不一致を、不一致のメソッドハンドルが呼び出されたときではなく、メソッドハンドルの構築時に早期に評価することに相当します。</target>
        </trans-unit>
        <trans-unit id="97ef9b4944f514133b5a2fb07ec8a043618874fe" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it determines that authentication is being attempted on a locked account.</source>
          <target state="translated">この例外は、ロックされたアカウントで認証が試みられていると LoginModule が判断した場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="25905e98bbc8ed6b0a99cd269b514f08f4f1017b" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate a credential necessary to perform authentication.</source>
          <target state="translated">この例外は、LoginModule が認証に必要なクレデンシャルを見つけられなかった場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1f446d2187f9b7cc3da2fcd7c2a3573fc6fe484c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by a LoginModule if it is unable to locate an account necessary to perform authentication.</source>
          <target state="translated">この例外は、LoginModule が認証に必要なアカウントを見つけられなかった場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7480073638152c36c49f39bd998c00adda42819c" translate="yes" xml:space="preserve">
          <source>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.</source>
          <target state="translated">この例外は、オブジェクトの同時変更を検出したメソッドによって、そのような変更が許されない場合にスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="48287f0f78d18f3dc149791ece21c16c452a34c3" translate="yes" xml:space="preserve">
          <source>This exception will be thrown by the &lt;a href=&quot;fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; constructors when a file with the specified pathname does not exist. It will also be thrown by these constructors if the file does exist but for some reason is inaccessible, for example when an attempt is made to open a read-only file for writing.</source>
          <target state="translated">この例外は、指定されたパス名のファイルが存在しない場合に、&lt;a href=&quot;fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;コンストラクターによってスローされます。また、ファイルが存在しても、何らかの理由でアクセスできない場合、たとえば、書き込み専用の読み取り専用ファイルを開こうとした場合にも、これらのコンストラクターによってスローされます。</target>
        </trans-unit>
        <trans-unit id="a357b9eaaabb2a730f4cb39a850d694749b6bbd6" translate="yes" xml:space="preserve">
          <source>This exception, designed for use by the JCA/JCE engine classes, is thrown when an invalid parameter is passed to a method.</source>
          <target state="translated">この例外は、JCA/JCE エンジン・クラスで使用するために設計されており、無効なパラメータがメソッドに渡された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="48549af4387c0a30de3762c57e24652d7daa3cbd" translate="yes" xml:space="preserve">
          <source>This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger.</source>
          <target state="translated">このファクトリー メソッドは、主にアプレットからの使用を意図しています。結果として得られるロガーは匿名であるため、作成クラスによってプライベートに保つことができます。これにより、通常のセキュリティ チェックが不要になり、信頼されていないアプレット コードがロガーの制御状態を更新できるようになります。例えば、アプレットは匿名のロガーで setLevel や addHandler を行うことができます。</target>
        </trans-unit>
        <trans-unit id="56d77548756d2f03152212977af570f3cfcf232f" translate="yes" xml:space="preserve">
          <source>This factory method looks up the resource bundle in the cache for the specified &lt;code&gt;baseName&lt;/code&gt;, &lt;code&gt;targetLocale&lt;/code&gt; and &lt;code&gt;loader&lt;/code&gt;. If the requested resource bundle instance is found in the cache and the time-to-live periods of the instance and all of its parent instances have not expired, the instance is returned to the caller. Otherwise, this factory method proceeds with the loading process below.</source>
          <target state="translated">このファクトリメソッドは、指定された &lt;code&gt;baseName&lt;/code&gt; 、 &lt;code&gt;targetLocale&lt;/code&gt; 、および &lt;code&gt;loader&lt;/code&gt; のキャッシュ内のリソースバンドルを検索します。要求されたリソースバンドルインスタンスがキャッシュで見つかり、インスタンスとそのすべての親インスタンスの存続可能期間が期限切れでない場合、インスタンスは呼び出し元に返されます。それ以外の場合、このファクトリメソッドは以下のロードプロセスを続行します。</target>
        </trans-unit>
        <trans-unit id="d4f7acde9c0c4bc2f10c8ed97ccda324b655779f" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where both the minimum and maximum value may vary.</source>
          <target state="translated">本工場では、最小値と最大値の両方が変動する可能性のある範囲を取得しています。</target>
        </trans-unit>
        <trans-unit id="1dd81da0b52ea41d5c4738642c84c83c4e82262d" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum and maximum values are fixed. For example, the ISO month-of-year always runs from 1 to 12.</source>
          <target state="translated">この工場では、最小値と最大値が固定された範囲を取得します。例えば、ISOの月齢は常に1から12までの間で実行されます。</target>
        </trans-unit>
        <trans-unit id="e609b6ca60ee8eb7f45e091448156ea168fcfef0" translate="yes" xml:space="preserve">
          <source>This factory obtains a range where the minimum value is fixed and the maximum value may vary. For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.</source>
          <target state="translated">この工場では、最小値が固定され、最大値が変動する可能性のある範囲を取得します。例えば、ISOの月日は常に1から始まるが、28から31の間で終わる。</target>
        </trans-unit>
        <trans-unit id="b07a6ac74957508dea507e2c9587337ab104cba3" translate="yes" xml:space="preserve">
          <source>This field allows the day-of-quarter value to be queried and set. The day-of-quarter has values from 1 to 90 in Q1 of a standard year, from 1 to 91 in Q1 of a leap year, from 1 to 91 in Q2 and from 1 to 92 in Q3 and Q4.</source>
          <target state="translated">このフィールドでは、day-of-quarterの値を問い合わせて設定することができます。day-of-quarterには、標準年の第1四半期には1から90までの値、閏年の第1四半期には1から91までの値、第2四半期には1から91までの値、第3四半期と第4四半期には1から92までの値があります。</target>
        </trans-unit>
        <trans-unit id="ab823df6586fcf1e3fda403714a995d7300513bb" translate="yes" xml:space="preserve">
          <source>This field allows the quarter-of-year value to be queried and set. The quarter-of-year has values from 1 to 4.</source>
          <target state="translated">このフィールドでは、quarter-of-yearの値を問い合わせて設定することができます。クォーター・オブ・ザ・イヤーには1から4までの値があります。</target>
        </trans-unit>
        <trans-unit id="98ee12514e1ff1f8c99b83a31253d4e796fc611c" translate="yes" xml:space="preserve">
          <source>This field allows the week of the week-based-year value to be queried and set. The week-of-week-based-year has values from 1 to 52, or 53 if the week-based-year has 53 weeks.</source>
          <target state="translated">このフィールドでは、週ベースの年の値の週を問い合わせて設定することができます。週を基準とした年の週の値は1から52まで、週を基準とした年が53週の場合は53までの値があります。</target>
        </trans-unit>
        <trans-unit id="6b13e5218b93508b78d4d29e5225fa1418046286" translate="yes" xml:space="preserve">
          <source>This field allows the week-based-year value to be queried and set.</source>
          <target state="translated">このフィールドでは、週を基準とした年の値をクエリして設定することができます。</target>
        </trans-unit>
        <trans-unit id="16e4f19f6f75aeaf9761d09d278295ed29614333" translate="yes" xml:space="preserve">
          <source>This field can be set for an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt;, in which case it indicates the Open Type that the &lt;a href=&quot;notification#getUserData--&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; will have.</source>
          <target state="translated">このフィールドは &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; に設定できます。この場合、&lt;a href=&quot;notification#getUserData--&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt;が持つOpen Typeを示します。</target>
        </trans-unit>
        <trans-unit id="ea3ec0673f03e00aa663ee43fda3fa33cb248907" translate="yes" xml:space="preserve">
          <source>This field can be used with any calendar system.</source>
          <target state="translated">このフィールドは、どのカレンダーシステムでも使用できます。</target>
        </trans-unit>
        <trans-unit id="18d420e9bc600b42f6bd92286d36a1a1563dca67" translate="yes" xml:space="preserve">
          <source>This field hides the &lt;a href=&quot;../../java/util/eventobject#source&quot;&gt;&lt;code&gt;EventObject.source&lt;/code&gt;&lt;/a&gt; field in the parent class to make it non-transient and therefore part of the serialized form.</source>
          <target state="translated">このフィールドは、親クラスの&lt;a href=&quot;../../java/util/eventobject#source&quot;&gt; &lt;code&gt;EventObject.source&lt;/code&gt; &lt;/a&gt;フィールドを非表示にして非一時的にし、シリアル化されたフォームの一部にします。</target>
        </trans-unit>
        <trans-unit id="74a9cbdd88f0b4a08354be0afadbaec13d74347f" translate="yes" xml:space="preserve">
          <source>This field is &lt;code&gt;true&lt;/code&gt; if there is a security check in progress; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">セキュリティチェックが進行中の場合、このフィールドは &lt;code&gt;true&lt;/code&gt; です。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f106cdb1f6d10200df0392eec60691b570b8f6e" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltName() and setAltName().</source>
          <target state="translated">このフィールドはヌルに初期化されます。直接操作してはいけません:getAltName()および setAltName()を使用してアクセスし、更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="978a6f513b64d3ddbbd059f20e4c7bdb555aa0fa" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getAltNameCtx() and setAltNameCtx().</source>
          <target state="translated">このフィールドはヌルに初期化されます。直接操作してはいけません:getAltNameCtx()および setAltNameCtx()を使用してアクセスし、更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="2e5264722dafb7f008333c277cd02b754af0d058" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getEnvironment() and setEnvironment().</source>
          <target state="translated">このフィールドは null に初期化されます。直接操作してはいけません:getEnvironment()および setEnvironment()を使用してアクセスし、更新しなければなりません。</target>
        </trans-unit>
        <trans-unit id="935b90d14dfdace7c7c898fe605937fc83a388f1" translate="yes" xml:space="preserve">
          <source>This field is initialized to null. It should not be manipulated directly: it should be accessed and updated using getRemainingName() and setRemainingName().</source>
          <target state="translated">このフィールドは null に初期化されます。直接操作してはいけません:getRemainingName()および setRemainingName()を使用してアクセスし、更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="1116440b0df22264838eceda530e7b1f586b9771" translate="yes" xml:space="preserve">
          <source>This field is retained for compatibility but should not be referenced.</source>
          <target state="translated">このフィールドは互換性のために保持されますが、参照すべきではありません。</target>
        </trans-unit>
        <trans-unit id="0973a832db8ff89973d7e6843e67ed64ab898306" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; method.</source>
          <target state="translated">このフィールドは、 &lt;code&gt;setInstanceFollowRedirects&lt;/code&gt; メソッドによって設定されます。その値は、 &lt;code&gt;getInstanceFollowRedirects&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="09e2a54f88e9ca0dff0ba07e4f5bc710a59509a9" translate="yes" xml:space="preserve">
          <source>This field is set by the &lt;code&gt;setUseCaches&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getUseCaches&lt;/code&gt; method.</source>
          <target state="translated">このフィールドは、 &lt;code&gt;setUseCaches&lt;/code&gt; メソッドによって設定されます。その値は &lt;code&gt;getUseCaches&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="e5d3e5d2b48b03c93e4d8ff275d004ecd4b2f2fe" translate="yes" xml:space="preserve">
          <source>This field is strictly defined to have the same meaning in all calendar systems. This is necessary to ensure interoperation between calendars.</source>
          <target state="translated">このフィールドは、すべてのカレンダーシステムで同じ意味を持つように厳密に定義されています。これは、カレンダー間の相互運用を確保するために必要です。</target>
        </trans-unit>
        <trans-unit id="b4b104288c94820296edb1789be70f2f87aed5ad" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of days where 1970-01-01 (ISO) is zero. Note that this uses the</source>
          <target state="translated">このフィールドは、1970-01-01 (ISO)がゼロである日の連続したカウントです。これは</target>
        </trans-unit>
        <trans-unit id="24e2813114fe0e4e7e496a714543784cbd4e0f9c" translate="yes" xml:space="preserve">
          <source>This field is the sequential count of months where the first month in proleptic-year zero has the value zero. Later months have increasingly larger values. Earlier months have increasingly small values. There are no gaps or breaks in the sequence of months. Note that this uses the</source>
          <target state="translated">このフィールドは、proleptic-year zeroの最初の月が値ゼロである月の連続したカウントです。それ以降の月はますます大きな値を持ちます。それ以前の月の値はますます小さくなります。月のシーケンスにギャップや区切りはありません。これは</target>
        </trans-unit>
        <trans-unit id="41a4717d6de67ceb4323a49338ab1d2e9160f48d" translate="yes" xml:space="preserve">
          <source>This field is used by the iterator and list iterator implementation returned by the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods. If the value of this field changes unexpectedly, the iterator (or list iterator) will throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; in response to the &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt; operations. This provides</source>
          <target state="translated">このフィールドは、 &lt;code&gt;iterator&lt;/code&gt; メソッドおよび &lt;code&gt;listIterator&lt;/code&gt; メソッドによって返されるイテレーターおよびリストイテレーター実装によって使用されます。このフィールドの値が予期せず変更された場合、イテレーター（またはリストイテレーター）は、 &lt;code&gt;next&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;previous&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、または &lt;code&gt;add&lt;/code&gt; 操作に応答して &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローします。これにより</target>
        </trans-unit>
        <trans-unit id="8dce713d65129e21a381674ea8f509a7dda6e75f" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、秒の端数を処理するマイクロ日の表現に使用されます。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a01eb06b15555f5073ff81640ef64a5a7de1c35" translate="yes" xml:space="preserve">
          <source>This field is used to represent the micro-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、秒の端数を処理するマイクロ秒を表すために使用されます。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="4be49c2b038fe08d673cc4082ae4af22a533fccb" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、ミリ秒を表し、秒の端数を処理します。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="b957133502f14286d3edaea7427acb86d39c7bf4" translate="yes" xml:space="preserve">
          <source>This field is used to represent the milli-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、ミリ秒を表すために使用され、秒の端数を処理します。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="56950586a498b262af039f7017c8a4746f1e26b9" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-day handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、秒の端数を処理する1日のナノを表すために使用されます。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a4278a7d6b6080b6a27cdd4a04881abbbe3ac4d" translate="yes" xml:space="preserve">
          <source>This field is used to represent the nano-of-second handling any fraction of the second. Implementations of &lt;code&gt;TemporalAccessor&lt;/code&gt; should provide a value for this field if they can return a value for &lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt;&lt;code&gt;SECOND_OF_DAY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; filling unknown precision with zero.</source>
          <target state="translated">このフィールドは、秒の端数を処理するナノ秒を表すために使用されます。 &lt;code&gt;TemporalAccessor&lt;/code&gt; の実装は、未知の精度をゼロで埋める&lt;a href=&quot;chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;chronofield#SECOND_OF_DAY&quot;&gt; &lt;code&gt;SECOND_OF_DAY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; の&lt;/a&gt;値を返すことができる場合、このフィールドに値を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="58be22eba5513e6f16a19ec2287f84585ea5768a" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">このフィールドは、汎用の例外チェーン機能より前から存在しています。&lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;メソッドは、この情報を得るための好ましい手段です。</target>
        </trans-unit>
        <trans-unit id="f801501042f288a6bee35bd6dc4a117f8e2695da" translate="yes" xml:space="preserve">
          <source>This field predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;namingexception#getCause--&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; methods are now the preferred means of accessing this information.</source>
          <target state="translated">このフィールドは、汎用の例外チェーン機能より前から存在しています。&lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;namingexception#getCause--&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt;メソッドは現在、この情報にアクセスする好ましい手段です。</target>
        </trans-unit>
        <trans-unit id="ebcc9442bd3f9316e5b5fad08700464cae1e0dcc" translate="yes" xml:space="preserve">
          <source>This field reflects the correct GMT offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical GMT offset changes.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが過去のGMTオフセットの変更をサポートしている場合、このフィールドはこの &lt;code&gt;Calendar&lt;/code&gt; タイムゾーンの正しいGMTオフセット値を反映します。</target>
        </trans-unit>
        <trans-unit id="4463b2c5badc21c8ae944e6a5c21be66258ebc38" translate="yes" xml:space="preserve">
          <source>This field reflects the correct daylight saving offset value of the time zone of this &lt;code&gt;Calendar&lt;/code&gt; if the &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical Daylight Saving Time schedule changes.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが夏時間のスケジュール変更の履歴をサポートしている場合、このフィールドはこの &lt;code&gt;Calendar&lt;/code&gt; タイムゾーンの正しい夏時間オフセット値を反映します。</target>
        </trans-unit>
        <trans-unit id="bb8869100a96b51c0ace747d156fdb34373c73b4" translate="yes" xml:space="preserve">
          <source>This field should be &lt;code&gt;true&lt;/code&gt; if this node did not exist in the backing store prior to the creation of this object. The field is initialized to false, but may be set to true by a subclass constructor (and should not be modified thereafter). This field indicates whether a node change event should be fired when creation is complete.</source>
          <target state="translated">このオブジェクトの作成前にこのノードがバッキングストアに存在しなかった場合、このフィールドは &lt;code&gt;true&lt;/code&gt; である必要があります。フィールドはfalseに初期化されますが、サブクラスコンストラクターによってtrueに設定できます（その後変更しないでください）。このフィールドは、作成が完了したときにノード変更イベントを発生させるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="da5a7824c72d5d0ac8b72a562a8242b1d4914805" translate="yes" xml:space="preserve">
          <source>This file channel</source>
          <target state="translated">このファイルチャネル</target>
        </trans-unit>
        <trans-unit id="0dec060895a4869c311469c5cf40170438fe90a1" translate="yes" xml:space="preserve">
          <source>This file contains the single line:</source>
          <target state="translated">このファイルには単行本が含まれています。</target>
        </trans-unit>
        <trans-unit id="2c06bc72e2fe6fc2d9f6e5f898999a4455654e70" translate="yes" xml:space="preserve">
          <source>This file manager creates file objects representing regular &lt;a href=&quot;../../java/io/file&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zip file entries&lt;/a&gt;, or entries in similar file system based containers. Any file object returned from a file manager implementing this interface must observe the following behavior:</source>
          <target state="translated">このファイルマネージャは、通常の&lt;a href=&quot;../../java/io/file&quot;&gt;ファイル&lt;/a&gt;、&lt;a href=&quot;../../java/util/zip/zipentry&quot;&gt;zipファイルエントリ&lt;/a&gt;、または同様のファイルシステムベースのコンテナ内のエントリを表すファイルオブジェクトを作成します。このインターフェイスを実装するファイルマネージャから返されるファイルオブジェクトは、次の動作を監視する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a24330d8dfc24893acef6882fa0c229a8833351" translate="yes" xml:space="preserve">
          <source>This file-locking API is intended to map directly to the native locking facility of the underlying operating system. Thus the locks held on a file should be visible to all programs that have access to the file, regardless of the language in which those programs are written.</source>
          <target state="translated">このファイルロックAPIは、基礎となるオペレーティングシステムのネイティブロック機能に直接マッピングすることを意図しています。したがって、ファイルに保持されているロックは、そのプログラムが書かれている言語に関係なく、 ファイルにアクセスできるすべてのプログラムから見えるようになっていなければなりません。</target>
        </trans-unit>
        <trans-unit id="de18aeeb56e8dc33f587514c04ec1787f04e4711" translate="yes" xml:space="preserve">
          <source>This filter compares the attribute name of the specified attribute change notification with each enabled attribute name. If the attribute name equals one of the enabled attribute names, the notification must be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このフィルターは、指定された属性変更通知の属性名を有効な各属性名と比較します。属性名が有効な属性名のいずれかに等しい場合、通知をリスナーに送信する必要があり、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b9c492547353c4152d78f195a1ac9387d444b329" translate="yes" xml:space="preserve">
          <source>This filter compares the type of the specified notification with each enabled type. If the notification type matches one of the enabled types, the notification should be sent to the listener and this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このフィルターは、指定された通知のタイプを有効な各タイプと比較します。通知タイプが有効なタイプのいずれかに一致する場合、通知はリスナーに送信され、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="939c66f1882c91d7b18fffcfbb4b7ef9be17e137" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">このフラグは、フォーマット指定子の &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;'\u0023'&lt;/code&gt; ）に対応します。</target>
        </trans-unit>
        <trans-unit id="639d639bc1d06224bd26b0c98169f7170259c749" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">このフラグは、フォーマット指定子の &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）に対応します。</target>
        </trans-unit>
        <trans-unit id="f2f896b93435355c3dab017fa3a45ce5c075cdb3" translate="yes" xml:space="preserve">
          <source>This flag corresponds to &lt;code&gt;'S'&lt;/code&gt; (&lt;code&gt;'\u0053'&lt;/code&gt;) in the format specifier.</source>
          <target state="translated">このフラグは、フォーマット指定子の &lt;code&gt;'S'&lt;/code&gt; （ &lt;code&gt;'\u0053'&lt;/code&gt; ）に対応します。</target>
        </trans-unit>
        <trans-unit id="9436ee7c8ef7ac684c9a12e0444bde9757034138" translate="yes" xml:space="preserve">
          <source>This flag is used to reset the &lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt;&lt;code&gt;alreadyNotifieds&lt;/code&gt;&lt;/a&gt; monitor attribute.</source>
          <target state="translated">このフラグは、&lt;a href=&quot;monitor#alreadyNotifieds&quot;&gt; &lt;code&gt;alreadyNotifieds&lt;/code&gt; &lt;/a&gt;モニター属性をリセットするために使用されます。</target>
        </trans-unit>
        <trans-unit id="bb927ac7a2adf9141656556c75832459e15a420d" translate="yes" xml:space="preserve">
          <source>This form of &lt;code&gt;getHeaderField&lt;/code&gt; exists because some connection types (e.g., &lt;code&gt;http-ng&lt;/code&gt;) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.</source>
          <target state="translated">この形式の &lt;code&gt;getHeaderField&lt;/code&gt; が存在するのは、一部の接続タイプ（例： &lt;code&gt;http-ng&lt;/code&gt; ）に事前に解析されたヘッダーがあるためです。その接続タイプのクラスは、このメソッドをオーバーライドして、解析を短絡させることができます。</target>
        </trans-unit>
        <trans-unit id="c57c4034668f9f7e67c1a275f4dbe35d321a31c5" translate="yes" xml:space="preserve">
          <source>This format string is the first argument to the &lt;code&gt;format&lt;/code&gt; method. It contains three format specifiers &quot;&lt;code&gt;%1$tm&lt;/code&gt;&quot;, &quot;&lt;code&gt;%1$te&lt;/code&gt;&quot;, and &quot;&lt;code&gt;%1$tY&lt;/code&gt;&quot; which indicate how the arguments should be processed and where they should be inserted in the text. The remaining portions of the format string are fixed text including &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; and any other spaces or punctuation. The argument list consists of all arguments passed to the method after the format string. In the above example, the argument list is of size one and consists of the &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">このフォーマット文字列は、 &lt;code&gt;format&lt;/code&gt; メソッドの最初の引数です。これには、3つのフォーマット指定子「 &lt;code&gt;%1$tm&lt;/code&gt; 」、「 &lt;code&gt;%1$te&lt;/code&gt; 」、および「 &lt;code&gt;%1$tY&lt;/code&gt; 」が含まれており、引数の処理方法とテキスト内の引数の挿入位置を示します。フォーマット文字列の残りの部分は、 &lt;code&gt;&quot;Dukes Birthday: &quot;&lt;/code&gt; およびその他のスペースや句読点を含む固定テキストです。引数リストは、フォーマット文字列の後にメソッドに渡されるすべての引数で構成されます。上記の例では、引数リストのサイズは1で、&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクト &lt;code&gt;c&lt;/code&gt; で構成されています。</target>
        </trans-unit>
        <trans-unit id="02cd6e3f81b6adc90a7b6b49bd25b66dc6d6042f" translate="yes" xml:space="preserve">
          <source>This formats the date-time to a String using the rules of the formatter.</source>
          <target state="translated">これは、フォーマッタのルールを使用して、日付時刻を文字列にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="4c8dd66ef1b8712d1496d2f8b21f082de2c3b844" translate="yes" xml:space="preserve">
          <source>This formatter</source>
          <target state="translated">このフォーマッタ</target>
        </trans-unit>
        <trans-unit id="0e1ade80f03d56fb0c562ee58ed1bfc634f0a4ef" translate="yes" xml:space="preserve">
          <source>This fragment is not technically part of the URL. Rather, it indicates that after the specified resource is retrieved, the application is specifically interested in that part of the document that has the tag &lt;code&gt;chapter1&lt;/code&gt; attached to it. The meaning of a tag is resource specific.</source>
          <target state="translated">このフラグメントは、技術的にはURLの一部ではありません。むしろ、指定されたリソースが取得された後、アプリケーションはタグ &lt;code&gt;chapter1&lt;/code&gt; が添付されているドキュメントのその部分に特に関心があることを示します。タグの意味はリソース固有です。</target>
        </trans-unit>
        <trans-unit id="3835819d552f1ccd551a425f0568a0e858200e24" translate="yes" xml:space="preserve">
          <source>This function allows the prefix to be specified and the proper resolution to occur. Specifically, when the standard resolution fails, the resolution is retried taking the prefix into consideration. There are two ways that resolution occurs, explicit resolution with the JNI function &lt;code&gt;RegisterNatives&lt;/code&gt; and the normal automatic resolution. For &lt;code&gt;RegisterNatives&lt;/code&gt;, the JVM will attempt this association:</source>
          <target state="translated">この機能により、プレフィックスを指定し、適切な解決を行うことができます。具体的には、標準の解決が失敗すると、解決は接頭辞を考慮して再試行されます。解決が行われる方法は2つあります。JNI関数 &lt;code&gt;RegisterNatives&lt;/code&gt; による明示的な解決と通常の自動解決です。 &lt;code&gt;RegisterNatives&lt;/code&gt; を、JVMは、この関連付けを試みます。</target>
        </trans-unit>
        <trans-unit id="0969a75285217d8f5727395078bd48e49354a4fa" translate="yes" xml:space="preserve">
          <source>This function facilitates the instrumentation of already loaded classes. When classes are initially loaded or when they are &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;redefined&lt;/a&gt;, the initial class file bytes can be transformed with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;. This function reruns the transformation process (whether or not a transformation has previously occurred). This retransformation follows these steps:</source>
          <target state="translated">この関数は、すでにロードされているクラスのインスツルメンテーションを容易にします。クラスが最初にロードされたとき、またはクラスが&lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;再定義&lt;/a&gt;されたときに、最初のクラスファイルのバイトを&lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; &lt;/a&gt;で変換できます。この関数は、変換プロセスを再実行します（以前に変換が行われたかどうかに関係なく）。この再変換は次の手順に従います。</target>
        </trans-unit>
        <trans-unit id="da4434880040821ea8e7fdba28347094ce7253de" translate="yes" xml:space="preserve">
          <source>This function returns the collation element that the iterator is currently pointing to and then updates the internal pointer to point to the next element. previous() updates the pointer first and then returns the element. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">この関数は、イテレータが現在指している照合要素を返し、内部ポインタを更新して次の要素を指すようにします。 previous()は最初にポインタを更新してから要素を返します。つまり、反復処理中に方向を変えると(例えば、next()を呼び出してからprevious()を呼び出したり、previous()を呼び出してからnext()を呼び出したり)、同じ要素が2回戻ってくることになります。</target>
        </trans-unit>
        <trans-unit id="d84e048f9e0345086f64039aa26f6626ba6486ac" translate="yes" xml:space="preserve">
          <source>This function updates the iterator's internal pointer to point to the collation element preceding the one it's currently pointing to and then returns that element, while next() returns the current element and then updates the pointer. This means that when you change direction while iterating (i.e., call next() and then call previous(), or call previous() and then call next()), you'll get back the same element twice.</source>
          <target state="translated">この関数は、イテレータの内部ポインタを更新して、現在指している照合要素の前の照合要素を指すようにしてからその要素を返し、next()は現在の要素を返してからポインタを更新します。つまり、反復処理中に方向を変えた場合 (つまり、next()を呼び出してから previous()を呼び出したり、 previous()を呼び出してから next()を呼び出したりする場合)、同じ要素が 2 回戻ってくることになります。</target>
        </trans-unit>
        <trans-unit id="1b421251b7e8a22bab039f3bbe7f5fdfe294c52a" translate="yes" xml:space="preserve">
          <source>This gives behavior equivalent to most operating system command interpreters, or the standard C library function &lt;code&gt;system()&lt;/code&gt;.</source>
          <target state="translated">これにより、ほとんどのオペレーティングシステムコマンドインタープリターまたは標準Cライブラリ関数 &lt;code&gt;system()&lt;/code&gt; と同等の動作が得られます。</target>
        </trans-unit>
        <trans-unit id="df3309ca4d82c68f15ffe723636341b8a21d6ce7" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access and the dynamic proxy class is in the system protection domain. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">これにより、コードは通常はアクセスできないパッケージ内のクラスにアクセスできるようになり、 ダイナミックプロキシクラスはシステム保護ドメイン内にあります。悪意のあるコードはこれらのクラスを使ってシステムのセキュリティを 侵害しようとするのを助けるかもしれません。</target>
        </trans-unit>
        <trans-unit id="36a4a7bebdfb9e7dde3a69b7b1b83b8bc5989192" translate="yes" xml:space="preserve">
          <source>This gives code access to classes in packages to which it normally does not have access. Malicious code may use these classes to help in its attempt to compromise security in the system.</source>
          <target state="translated">これにより、通常はアクセスできないパッケージ内のクラスにコードがアクセスできるようになります。悪意のあるコードは、これらのクラスを使ってシステムのセキュリティを侵害しようとしています。</target>
        </trans-unit>
        <trans-unit id="f903ac786d84be7c118d277a305980c729ef6082" translate="yes" xml:space="preserve">
          <source>This gives code access to protected, sensitive methods that may disclose information about other classes or the execution stack.</source>
          <target state="translated">これにより、他のクラスや実行スタックに関する情報を開示する可能性のある、保護された機密性の高いメソッドにコードがアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="c7201e4e18e9d82f87d1d4c5b0806ace02068b76" translate="yes" xml:space="preserve">
          <source>This global lock is used by both &lt;code&gt;BeanContext&lt;/code&gt; and &lt;code&gt;BeanContextServices&lt;/code&gt; implementors to serialize changes in a &lt;code&gt;BeanContext&lt;/code&gt; hierarchy and any service requests etc.</source>
          <target state="translated">このグローバルロックは &lt;code&gt;BeanContext&lt;/code&gt; と &lt;code&gt;BeanContextServices&lt;/code&gt; の両方のインプリメンターによって使用され、 &lt;code&gt;BeanContext&lt;/code&gt; 階層およびサービス要求などの変更をシリアル化します。</target>
        </trans-unit>
        <trans-unit id="fc083caeaa7087c63bc612177fa2c826850e8618" translate="yes" xml:space="preserve">
          <source>This grants code permission to define a class in a particular package. This is dangerous because malicious code with this permission may define rogue classes in trusted packages like &lt;code&gt;java.security&lt;/code&gt; or &lt;code&gt;java.lang&lt;/code&gt;, for example.</source>
          <target state="translated">これにより、特定のパッケージでクラスを定義するためのコード権限が付与されます。この権限を持つ悪意のあるコードは、たとえば &lt;code&gt;java.security&lt;/code&gt; や &lt;code&gt;java.lang&lt;/code&gt; などの信頼できるパッケージに不正なクラスを定義する可能性があるため、これは危険です。</target>
        </trans-unit>
        <trans-unit id="331c65a3cf6e23f65b3a3cf205997e21c51762c0" translate="yes" xml:space="preserve">
          <source>This grants code permission to query a class for its public, protected, default (package) access, and private fields and/or methods. Although the code would have access to the private and protected field and method names, it would not have access to the private/protected field data and would not be able to invoke any private methods. Nevertheless, malicious code may use this information to better aim an attack. Additionally, it may invoke any public methods and/or access public fields in the class. This could be dangerous if the code would normally not be able to invoke those methods and/or access the fields because it can't cast the object to the class/interface with those methods and fields.</source>
          <target state="translated">これは、パブリック、プロテクトされた、デフォルト(パッケージ)アクセス、プライベート・フィールドおよび/またはメソッドのためにクラスを問い合わせることをコードに許可します。コードはプライベートおよび保護されたフィールドとメソッド名にアクセスできますが、プライベート/保護されたフィールドデータにはアクセスできず、プライベートメソッドを呼び出すことはできません。それにもかかわらず、悪意のあるコードはこの情報を使用して、より良い攻撃を行うことができます。さらに、パブリック・メソッドを呼び出したり、クラス内のパブリック・フィールドにアクセスしたりする可能性もあります。これは、コードが通常、これらのメソッドやフィールドを持つクラス/インターフェースにオブジェクトをキャストできないため、これらのメソッドを呼び出したり、フィールドにアクセスしたりすることができない場合には危険です。</target>
        </trans-unit>
        <trans-unit id="928065b5350bb6dc0ff7a89abd23a3a1365156f4" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContext interface.</source>
          <target state="translated">このヘルパークラスは、java.bean.beancontext.BeanContext.BeanContextインタフェースのユーティリティ実装を提供します。</target>
        </trans-unit>
        <trans-unit id="a3968715bb1c83e42ddc1134b4b0052bdc0ae996" translate="yes" xml:space="preserve">
          <source>This helper class provides a utility implementation of the java.beans.beancontext.BeanContextServices interface.</source>
          <target state="translated">このヘルパークラスは、java.bean.beancontext.BeanContextServicesインタフェースのユーティリティ実装を提供します。</target>
        </trans-unit>
        <trans-unit id="122efe634c67682e5a922bde9527a99da845e034" translate="yes" xml:space="preserve">
          <source>This idiom obviates the need for using a string to describe the preferences node and decreases the likelihood of a run-time failure. (If the class name is misspelled, it will typically result in a compile-time error.)</source>
          <target state="translated">このイディオムは、プリファレンス・ノードを記述するために文字列を使用する必要性をなくし、実行時の失敗の可能性を減少させます。(クラス名のスペルが間違っていると、通常はコンパイル時のエラーになります)。</target>
        </trans-unit>
        <trans-unit id="629c63ad23cd7fd948e6f93d8955c9d3fe585f63" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) characteristic 2 finite field.</source>
          <target state="translated">この不変クラスは楕円曲線(EC)特性2有限場を定義しています。</target>
        </trans-unit>
        <trans-unit id="a84b69ebdf731e277af9e21024a839b79991ebcb" translate="yes" xml:space="preserve">
          <source>This immutable class defines an elliptic curve (EC) prime finite field.</source>
          <target state="translated">この不変クラスは楕円曲線(EC)の素数有限場を定義しています。</target>
        </trans-unit>
        <trans-unit id="dabbc4728f069cb22945088bdcb550a300ec334c" translate="yes" xml:space="preserve">
          <source>This immutable class holds the necessary values needed to represent an elliptic curve.</source>
          <target state="translated">この不変クラスは、楕円曲線を表現するために必要な値を保持しています。</target>
        </trans-unit>
        <trans-unit id="a8ed157513f78e33730e48fdffba6efaff2b46f0" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates.</source>
          <target state="translated">この不変クラスは、アフィン座標で楕円曲線(EC)上の点を表します。</target>
        </trans-unit>
        <trans-unit id="954ed1a60a524b56d515295be01fbdc30f6b92d8" translate="yes" xml:space="preserve">
          <source>This immutable class represents a point on an elliptic curve (EC) in affine coordinates. Other coordinate systems can extend this class to represent this point in other coordinates.</source>
          <target state="translated">この不変クラスは、 楕円曲線 (EC)上の点をアフィン座標で表現します。他の座標系では、このクラスを拡張して他の座標系でこの点を表現することができます。</target>
        </trans-unit>
        <trans-unit id="e5ac83265d8e36d907ddf59daf9dc247f69735de" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve private key with its associated parameters.</source>
          <target state="translated">この不変クラスは、楕円曲線の秘密鍵と関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="9e10d0594330cf2c2a92031524bef6179d93b693" translate="yes" xml:space="preserve">
          <source>This immutable class specifies an elliptic curve public key with its associated parameters.</source>
          <target state="translated">この不変クラスは、楕円曲線の公開鍵と関連するパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="dd9c7e2fb85b12499f163dd6f852b2f30dcbdaa5" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC).</source>
          <target state="translated">この不変クラスは、楕円曲線暗号(ECC)で使用されるドメインパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="27b6daa87ac4985c97bfa08f19e776d06fbd48c2" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating DSA parameters as specified in &lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3 Digital Signature Standard (DSS)&lt;/a&gt;.</source>
          <target state="translated">この不変のクラスは、&lt;a href=&quot;http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf&quot;&gt;FIPS 186-3デジタル署名標準（DSS）で&lt;/a&gt;指定されているDSAパラメーターの生成に使用されるパラメーターのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="f9995aea6faaeed6e54c376ef502fc1c66198d5d" translate="yes" xml:space="preserve">
          <source>This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters.</source>
          <target state="translated">この不変クラスは、楕円曲線(EC)ドメインのパラメータを生成するために使用されるパラメータのセットを指定します。</target>
        </trans-unit>
        <trans-unit id="e126ddd21dd42d52e62fe02ebc7ded0cb46f7bef" translate="yes" xml:space="preserve">
          <source>This implementation always throws &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">この実装は常に&lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;をスローします。&lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt;の規約に準拠している限り、サブクラスはこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="25b71dc95c94433a4e683b0cb0bc80e61af1d098" translate="yes" xml:space="preserve">
          <source>This implementation always throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">この実装は常に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="5ed82d5c8cf8bf7d06b7f3a3926143fc19e896f4" translate="yes" xml:space="preserve">
          <source>This implementation assumes that the ConcurrentMap cannot contain null values and &lt;code&gt;get()&lt;/code&gt; returning null unambiguously means the key is absent. Implementations which support null values &lt;strong&gt;must&lt;/strong&gt; override this default implementation.</source>
          <target state="translated">この実装は、ConcurrentMapがnull値を含むことができないと想定し、 &lt;code&gt;get()&lt;/code&gt; が nullを明確に返すことは、キーが存在しないことを意味します。null値をサポートする実装は、このデフォルトの実装をオーバーライドする&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cb5167bb49ebe77db454032a85cc61f64b311d33" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;add(size(), e)&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;add(size(), e)&lt;/code&gt; 呼び出します。</target>
        </trans-unit>
        <trans-unit id="94b159692d013c2b59ae93604d93d607b0cd6225" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;check(cert, java.util.Collections.&amp;lt;String&amp;gt;emptySet())&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c05815dc8f7306515f69c1adc7ce0cc25bbf5c3c" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="41d9407fbd311719e99aa08295ae0c0a3a96c926" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;entrySet().clear()&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;entrySet().clear()&lt;/code&gt; 呼び出します。</target>
        </trans-unit>
        <trans-unit id="906c43a7494e059f45ccf3510b569a8b2860e626" translate="yes" xml:space="preserve">
          <source>This implementation calls &lt;code&gt;removeRange(0, size())&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;removeRange(0, size())&lt;/code&gt; 呼び出します。</target>
        </trans-unit>
        <trans-unit id="7bd0e3b7dff72e96b830c7e11dc18a9c58f8fd88" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes flushSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling flushSpi() on each node in the subTree while only that node is locked. Note that flushSpi() is invoked top-down.</source>
          <target state="translated">この実装では、このノードをロックし、このノードに対して flushSpi()を呼び出し、このノードのロックを解除し、各 &quot;キャッシュされた子&quot; に対してこのメソッドを再帰的に呼び出すヘルパー・メソッドを呼び出します。キャッシュされた子とは、このノードの子で、この VM で作成され、その後削除されていないものを指します。実質的に、このメソッドは、このノードを基点とする &quot;キャッシュされたサブツリー &quot;の深度優先探索を行い、そのノードのみがロックされている間にサブツリーの各ノードで flushSpi()を呼び出します。flushSpi()はトップダウンで呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="395ed27cbaba77f3b446647b87a2274cc8702b44" translate="yes" xml:space="preserve">
          <source>This implementation calls a recursive helper method that locks this node, invokes syncSpi() on it, unlocks this node, and recursively invokes this method on each &quot;cached child.&quot; A cached child is a child of this node that has been created in this VM and not subsequently removed. In effect, this method does a depth first traversal of the &quot;cached subtree&quot; rooted at this node, calling syncSpi() on each node in the subTree while only that node is locked. Note that syncSpi() is invoked top-down.</source>
          <target state="translated">この実装では、このノードをロックし、syncSpi()を呼び出し、このノードのロックを解除し、&quot;キャッシュされた子&quot; ごとにこのメソッドを再帰的に呼び出す再帰的ヘルパー・メソッドを呼び出します。キャッシュされた子とは、このノードの子で、この VM で作成され、その後削除されていないものを指します。実質的に、このメソッドは、このノードを基点とする「キャッシュされたサブツリー」を深さ優先で探索し、そのノードのみがロックされている間、サブツリー内の各ノードで syncSpi()を呼び出します。syncSpi()はトップダウンで呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1447f53bc4d6cc8572c1a5b72f050425e9a816cc" translate="yes" xml:space="preserve">
          <source>This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) &lt;a href=&quot;abstractlist#modCount&quot;&gt;&lt;code&gt;modCount&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">（保護された）&lt;a href=&quot;abstractlist#modCount&quot;&gt; &lt;code&gt;modCount&lt;/code&gt; &lt;/a&gt;フィールドの仕様で説明されているように、この実装は、同時変更に直面してランタイム例外をスローするように作成できます。</target>
        </trans-unit>
        <trans-unit id="7195ba4a4883e406437052bca287773f64cc1ce7" translate="yes" xml:space="preserve">
          <source>This implementation checks that the key and value are legal, obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">この実装は、キーと値が正当であることを確認し、この設定ノードのロックを取得し、ノードが削除されていないことを確認し、&lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;呼び出し、設定変更リスナーがある場合は、通知イベントをキューに入れて処理します。イベントディスパッチスレッド。</target>
        </trans-unit>
        <trans-unit id="eed8c69aa0ccf4f8526685d4df2e7dc1b5306845" translate="yes" xml:space="preserve">
          <source>This implementation checks the type and calls &lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この実装はタイプをチェックし、&lt;a href=&quot;abstractchronology#compareTo-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.Chronology)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="602eb434bf3fb990f0357c26df38af1fd1ba2aeb" translate="yes" xml:space="preserve">
          <source>This implementation checks to see that this node is the root; if so, it throws an appropriate exception. Then, it locks this node's parent, and calls a recursive helper method that traverses the subtree rooted at this node. The recursive method locks the node on which it was called, checks that it has not already been removed, and then ensures that all of its children are cached: The &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt; method is invoked and each returned child name is checked for containment in the child-cache. If a child is not already cached, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked to create a &lt;code&gt;Preferences&lt;/code&gt; instance for it, and this instance is put into the child-cache. Then the helper method calls itself recursively on each node contained in its child-cache. Next, it invokes &lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt;&lt;code&gt;removeNodeSpi()&lt;/code&gt;&lt;/a&gt;, marks itself as removed, and removes itself from its parent's child-cache. Finally, if there are any node change listeners, it enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">この実装は、このノードがルートであることを確認します。もしそうなら、それは適切な例外をスローします。次に、このノードの親をロックし、このノードをルートとするサブツリーを走査する再帰ヘルパーメソッドを呼び出します。再帰的メソッドは、それが呼び出されたノードをロックし、まだ削除されていないことを確認してから、そのすべての子がキャッシュされていることを確認します。childrenNamesSpi &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、返された各子の名前が子キャッシュ。子がまだキャッシュされていない場合は、&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されてその子の &lt;code&gt;Preferences&lt;/code&gt; インスタンスが作成され、このインスタンスが子キャッシュに配置されます。次に、ヘルパーメソッドは、その子キャッシュに含まれている各ノードで自分自身を再帰的に呼び出します。次に、&lt;a href=&quot;abstractpreferences#removeNodeSpi--&quot;&gt; &lt;code&gt;removeNodeSpi()&lt;/code&gt; &lt;/a&gt;、自身を削除済みとしてマークし、自分自身をその親の子キャッシュから削除します。最後に、ノード変更リスナーがある場合は、イベントディスパッチスレッドによる処理のために通知イベントをエンキューします。</target>
        </trans-unit>
        <trans-unit id="ffa89cfc012f2be93ce593f40e6c0d43fd79bfa0" translate="yes" xml:space="preserve">
          <source>This implementation compares the chronology ID. Subclasses must compare any additional state that they store.</source>
          <target state="translated">この実装では、クロノロジーIDを比較します。サブクラスは、保存されている追加の状態を比較しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2dff2901ffa7a3cc0600d247fee41c0159f4d1bf" translate="yes" xml:space="preserve">
          <source>This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to &lt;code&gt;simpleName + kind.extension&lt;/code&gt; or if it ends with &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt;.</source>
          <target state="translated">この実装は、URIのパスを指定された単純名と比較します。このメソッドは、指定された種類がこのオブジェクトの種類に等しく、パスが &lt;code&gt;simpleName + kind.extension&lt;/code&gt; 等しい場合、またはパスが &lt;code&gt;&quot;/&quot; + simpleName + kind.extension&lt;/code&gt; で終わる場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="3d9c4ed88638eb0d9d5435ccbd0a84c7e81cad38" translate="yes" xml:space="preserve">
          <source>This implementation compares this node's root node (which is stored in a private field) with the value returned by &lt;a href=&quot;preferences#userRoot--&quot;&gt;&lt;code&gt;Preferences.userRoot()&lt;/code&gt;&lt;/a&gt;. If the two object references are identical, this method returns true.</source>
          <target state="translated">この実装は、このノードのルートノード（プライベートフィールドに格納されている）を&lt;a href=&quot;preferences#userRoot--&quot;&gt; &lt;code&gt;Preferences.userRoot()&lt;/code&gt; &lt;/a&gt;によって返された値と比較します。2つのオブジェクト参照が同一の場合、このメソッドはtrueを返します。</target>
        </trans-unit>
        <trans-unit id="ebb6c0d9348bd6053d6cb41ee3c542ce1d1a9132" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and a &lt;code&gt;null&lt;/code&gt; comparator.</source>
          <target state="translated">この実装は、指定されたリストと &lt;code&gt;null&lt;/code&gt; コンパレーターを使用して、&lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt;メソッドに従います。</target>
        </trans-unit>
        <trans-unit id="e9ff666de14e4b1a619eab4943f8cdd25f78b5de" translate="yes" xml:space="preserve">
          <source>This implementation defers to the &lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;List.sort(Comparator)&lt;/code&gt;&lt;/a&gt; method using the specified list and comparator.</source>
          <target state="translated">この実装は、指定されたリストとコンパレーターを使用して、&lt;a href=&quot;list#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;List.sort(Comparator)&lt;/code&gt; &lt;/a&gt;メソッドに従います。</target>
        </trans-unit>
        <trans-unit id="205001bb53a899373d25ef5424e68cf61f5e15cf" translate="yes" xml:space="preserve">
          <source>This implementation determines which is the smaller of this set and the specified collection, by invoking the &lt;code&gt;size&lt;/code&gt; method on each. If this set has fewer elements, then the implementation iterates over this set, checking each element returned by the iterator in turn to see if it is contained in the specified collection. If it is so contained, it is removed from this set with the iterator's &lt;code&gt;remove&lt;/code&gt; method. If the specified collection has fewer elements, then the implementation iterates over the specified collection, removing from this set each element returned by the iterator, using this set's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">この実装は、それぞれの &lt;code&gt;size&lt;/code&gt; メソッドを呼び出すことにより、このセットと指定されたコレクションのどちらが小さいかを判断します。このセットに含まれる要素が少ない場合、実装はこのセットを反復処理し、イテレータによって返された各要素を順番にチェックして、指定されたコレクションに含まれているかどうかを確認します。含まれている場合は、イテレータの &lt;code&gt;remove&lt;/code&gt; メソッドを使用してこのセットから削除されます。指定されたコレクションに含まれる要素が少ない場合、実装は指定されたコレクションを反復処理し、このセットの &lt;code&gt;remove&lt;/code&gt; メソッドを使用して、反復子によって返された各要素をこのセットから削除します。</target>
        </trans-unit>
        <trans-unit id="eeb61408257a619dca9b14cfa63c43bf134acb12" translate="yes" xml:space="preserve">
          <source>This implementation does not check for overflow of the sum.</source>
          <target state="translated">この実装では、和のオーバーフローをチェックしません。</target>
        </trans-unit>
        <trans-unit id="c9fd6e5043bb41f7cb9997c70fcde25ad07f5357" translate="yes" xml:space="preserve">
          <source>This implementation does not support interoperating with a directory or lookup service. Thus, conforming to the specification, no checking is done on the</source>
          <target state="translated">本実装では、ディレクトリやルックアップサービスとの相互運用はサポートしていない。したがって、仕様に準拠して</target>
        </trans-unit>
        <trans-unit id="40026795e46b0f627067283f014c1ac8f2ac2aaa" translate="yes" xml:space="preserve">
          <source>This implementation does not support the schema methods &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt;. They simply throw &lt;code&gt;OperationNotSupportedException&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; should override these methods if they support them.</source>
          <target state="translated">この実装は、スキーマメソッド &lt;code&gt;getAttributeDefinition()&lt;/code&gt; および &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; をサポートしていません。それらは単に &lt;code&gt;OperationNotSupportedException&lt;/code&gt; をスローします。 &lt;code&gt;BasicAttribute&lt;/code&gt; のサブクラスは、これらをサポートする場合、これらのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="74f5b9930f8d39a44fb6d2c696a3206ca225015d" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.afterExecute&lt;/code&gt; at the beginning of this method.</source>
          <target state="translated">この実装は何もしませんが、サブクラスでカスタマイズできます。注：複数のオーバーライドを適切にネストするには、通常、サブクラスがこのメソッドの最初で &lt;code&gt;super.afterExecute&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5a5be3002e9afcc485a4a0ec495a2006fe1daa59" translate="yes" xml:space="preserve">
          <source>This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke &lt;code&gt;super.beforeExecute&lt;/code&gt; at the end of this method.</source>
          <target state="translated">この実装は何もしませんが、サブクラスでカスタマイズできます。注：複数のオーバーライドを適切にネストするには、通常、サブクラスがこのメソッドの最後で &lt;code&gt;super.beforeExecute&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="914ee27b660f82c8263237e486e758dc81078d60" translate="yes" xml:space="preserve">
          <source>This implementation does nothing. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">この実装は何もしません。&lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt;の規約に準拠している限り、サブクラスはこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="7974b71b41c6092860c4d0735a7af85054b636e7" translate="yes" xml:space="preserve">
          <source>This implementation employs an efficient &lt;em&gt;non-blocking&lt;/em&gt; algorithm based on one described in &lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt; Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms&lt;/a&gt; by Maged M. Michael and Michael L. Scott.</source>
          <target state="translated">この実装では、Maged M. MichaelとMichael L. Scottによる&lt;a href=&quot;http://www.cs.rochester.edu/u/michael/PODC96.html&quot;&gt;単純、高速、実用的な非ブロッキングおよびブロッキング同時キューアルゴリズムで&lt;/a&gt;説明されているアルゴリズムに基づいた効率的な&lt;em&gt;ノンブロッキング&lt;/em&gt;アルゴリズムを採用しています。</target>
        </trans-unit>
        <trans-unit id="7a80f8f2b593867f4acb9f2038a87549d837d178" translate="yes" xml:space="preserve">
          <source>This implementation enforces a more restrictive OID syntax than defined in RFC 1779 and 2253. It uses the more correct syntax defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512&lt;/a&gt;, which specifies that OIDs contain at least 2 digits:</source>
          <target state="translated">この実装では、それはで定義された、より正確な構文を使用します。RFC 1779で定義されているよりも、より制限OIDの構文を施行し、2253 &lt;a href=&quot;http://www.ietf.org/rfc/rfc4512.txt&quot;&gt;RFC 4512&lt;/a&gt;のOIDは、少なくとも2桁の数字が含まれることを指定し、：</target>
        </trans-unit>
        <trans-unit id="77969f6eaf794b1740a68878035f3a34622d3563" translate="yes" xml:space="preserve">
          <source>This implementation extracts the number's value using &lt;a href=&quot;../lang/number#longValue--&quot;&gt;&lt;code&gt;Number.longValue()&lt;/code&gt;&lt;/a&gt; for all integral type values that can be converted to &lt;code&gt;long&lt;/code&gt; without loss of information, including &lt;code&gt;BigInteger&lt;/code&gt; values with a &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt;&lt;code&gt;bit length&lt;/code&gt;&lt;/a&gt; of less than 64, and &lt;a href=&quot;../lang/number#doubleValue--&quot;&gt;&lt;code&gt;Number.doubleValue()&lt;/code&gt;&lt;/a&gt; for all other types. It then calls &lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt;&lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt;&lt;/a&gt;. This may result in loss of magnitude information and precision for &lt;code&gt;BigInteger&lt;/code&gt; and &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">この実装では、64 &lt;a href=&quot;../math/biginteger#bitLength--&quot;&gt; &lt;code&gt;bit length&lt;/code&gt; &lt;/a&gt;未満のビット長の &lt;code&gt;BigInteger&lt;/code&gt; 値やその他すべての型の&lt;a href=&quot;../lang/number#doubleValue--&quot;&gt; &lt;code&gt;Number.doubleValue()&lt;/code&gt; &lt;/a&gt;など、情報を失うことなく &lt;code&gt;long&lt;/code&gt; に変換できるすべての整数型の値に対して、&lt;a href=&quot;../lang/number#longValue--&quot;&gt; &lt;code&gt;Number.longValue()&lt;/code&gt; &lt;/a&gt;を使用して数値の値を抽出します。 。次に、&lt;a href=&quot;numberformat#format-long-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(long,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;numberformat#format-double-java.lang.StringBuffer-java.text.FieldPosition-&quot;&gt; &lt;code&gt;format(double,java.lang.StringBuffer,java.text.FieldPosition)&lt;/code&gt; &lt;/a&gt;呼び出します。これにより、 &lt;code&gt;BigInteger&lt;/code&gt; および &lt;code&gt;BigDecimal&lt;/code&gt; 値のマグニチュード情報と精度が失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="06a487a72bad774e9ba467624c797a1c7b0f89e1" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this list. If so, it returns &lt;code&gt;true&lt;/code&gt;; if not, it checks if the specified object is a list. If not, it returns &lt;code&gt;false&lt;/code&gt;; if so, it iterates over both lists, comparing corresponding pairs of elements. If any comparison returns &lt;code&gt;false&lt;/code&gt;, this method returns &lt;code&gt;false&lt;/code&gt;. If either iterator runs out of elements before the other it returns &lt;code&gt;false&lt;/code&gt; (as the lists are of unequal length); otherwise it returns &lt;code&gt;true&lt;/code&gt; when the iterations complete.</source>
          <target state="translated">この実装は、指定されたオブジェクトがこのリストであるかどうかを最初にチェックします。もしそうなら、それは &lt;code&gt;true&lt;/code&gt; を返します。そうでない場合は、指定されたオブジェクトがリストであるかどうかをチェックします。そうでない場合は、 &lt;code&gt;false&lt;/code&gt; を返します。そうである場合、対応する要素のペアを比較して、両方のリストを反復します。いずれかの比較が &lt;code&gt;false&lt;/code&gt; を返す場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。どちらかのイテレータが他のイテレータより先に要素を使い果たした場合、（リストの長さが等しくないため） &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合は、反復が完了すると &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6acfc81ffe615763d29e37e8c25feb492ce0e9c5" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this map; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a map whose size is identical to the size of this map; if not, it returns &lt;code&gt;false&lt;/code&gt;. If so, it iterates over this map's &lt;code&gt;entrySet&lt;/code&gt; collection, and checks that the specified map contains each mapping that this map contains. If the specified map fails to contain such a mapping, &lt;code&gt;false&lt;/code&gt; is returned. If the iteration completes, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は、指定されたオブジェクトがこのマップであるかどうかを最初にチェックします。その場合は &lt;code&gt;true&lt;/code&gt; を返します。次に、指定されたオブジェクトが、このマップのサイズと同じサイズのマップであるかどうかを確認します。そうでない場合は、 &lt;code&gt;false&lt;/code&gt; を返します。そうである場合、このマップの &lt;code&gt;entrySet&lt;/code&gt; コレクションを反復処理し、指定されたマップに、このマップに含まれている各マッピングが含まれていることを確認します。指定されたマップがそのようなマッピングを含まない場合、 &lt;code&gt;false&lt;/code&gt; が返されます。反復が完了すると、 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="06d9255728d4216ea62d7bdbc2262038b5d02cf3" translate="yes" xml:space="preserve">
          <source>This implementation first checks if the specified object is this set; if so it returns &lt;code&gt;true&lt;/code&gt;. Then, it checks if the specified object is a set whose size is identical to the size of this set; if not, it returns false. If so, it returns &lt;code&gt;containsAll((Collection) o)&lt;/code&gt;.</source>
          <target state="translated">この実装は、指定されたオブジェクトがこのセットであるかどうかを最初にチェックします。もしそうなら、それは &lt;code&gt;true&lt;/code&gt; を返します。次に、指定されたオブジェクトが、このセットのサイズと同じサイズのセットであるかどうかをチェックします。そうでない場合は、falseを返します。もしそうなら、それは &lt;code&gt;containsAll((Collection) o)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="89d4ba544bd7e07117341a7a4caf76eca5348b14" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; throwing a &lt;code&gt;NullPointerException&lt;/code&gt; if this is the case. Then it obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt;&lt;code&gt;getSpi(String)&lt;/code&gt;&lt;/a&gt;, and returns the result, unless the &lt;code&gt;getSpi&lt;/code&gt; invocation returns &lt;code&gt;null&lt;/code&gt; or throws an exception, in which case this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">この実装では、最初に &lt;code&gt;key&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; かどうかを確認し、これが当てはまる場合は &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。次に、この設定ノードのロックを取得し、ノードが削除されていないことを確認して、&lt;a href=&quot;abstractpreferences#getSpi-java.lang.String-&quot;&gt; &lt;code&gt;getSpi(String)&lt;/code&gt; を&lt;/a&gt;呼び出し、結果を返します。ただし、 &lt;code&gt;getSpi&lt;/code&gt; 呼び出しが &lt;code&gt;null&lt;/code&gt; を返すか、例外をスローする場合は、この呼び出しが &lt;code&gt;def&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dddaa6e52aca08a9102e08c6e519960a6d98aa8e" translate="yes" xml:space="preserve">
          <source>This implementation first checks to see if the stream has already encountered this object. Next the &lt;code&gt;mutatesTo&lt;/code&gt; method is called to see if that candidate returned from the stream can be mutated into an accurate copy of &lt;code&gt;oldInstance&lt;/code&gt;. If it can, the &lt;code&gt;initialize&lt;/code&gt; method is called to perform the initialization. If not, the candidate is removed from the stream, and the &lt;code&gt;instantiate&lt;/code&gt; method is called to create a new candidate for this object.</source>
          <target state="translated">この実装は、最初に、ストリームがこのオブジェクトにすでに遭遇しているかどうかを確認します。次に、 &lt;code&gt;mutatesTo&lt;/code&gt; メソッドが呼び出され、ストリームから返された候補を &lt;code&gt;oldInstance&lt;/code&gt; の正確なコピーに変更できるかどうかが確認されます。可能であれば、 &lt;code&gt;initialize&lt;/code&gt; メソッドを呼び出して初期化を実行します。そうでない場合、候補はストリームから削除され、 &lt;code&gt;instantiate&lt;/code&gt; メソッドが呼び出されて、このオブジェクトの新しい候補が作成されます。</target>
        </trans-unit>
        <trans-unit id="5327d07eb58755323196e2a95c6f08fa487d46d1" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator (with &lt;code&gt;listIterator()&lt;/code&gt;). Then, it iterates over the list until the specified element is found or the end of the list is reached.</source>
          <target state="translated">この実装は最初にリスト反復子を取得します（ &lt;code&gt;listIterator()&lt;/code&gt; を使用）。次に、指定された要素が見つかるか、リストの最後に到達するまで、リストを反復処理します。</target>
        </trans-unit>
        <trans-unit id="dc9d7a122f099945829e1c98c0486717790727d4" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the current element using &lt;code&gt;ListIterator.next&lt;/code&gt; and replaces it with &lt;code&gt;ListIterator.set&lt;/code&gt;.</source>
          <target state="translated">この実装は、最初にインデックス付き要素を指すリスト反復子を取得します（ &lt;code&gt;listIterator(index)&lt;/code&gt; を使用）。その後、それは使用して、現在の要素を取得し &lt;code&gt;ListIterator.next&lt;/code&gt; をし、それを置き換え &lt;code&gt;ListIterator.set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e94cbc58e8b1485db6bcbce917f139de4be54ac3" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it gets the element using &lt;code&gt;ListIterator.next&lt;/code&gt; and returns it.</source>
          <target state="translated">この実装は、最初にインデックス付き要素を指すリスト反復子を取得します（ &lt;code&gt;listIterator(index)&lt;/code&gt; を使用）。次に、 &lt;code&gt;ListIterator.next&lt;/code&gt; を使用して要素を取得し、それを返します。</target>
        </trans-unit>
        <trans-unit id="2da626b5c6657de0464c8ef2394bd0efc74d9c6b" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it inserts the specified element with &lt;code&gt;ListIterator.add&lt;/code&gt;.</source>
          <target state="translated">この実装は、最初にインデックス付き要素を指すリスト反復子を取得します（ &lt;code&gt;listIterator(index)&lt;/code&gt; を使用）。次に、指定された要素を &lt;code&gt;ListIterator.add&lt;/code&gt; で挿入します。</target>
        </trans-unit>
        <trans-unit id="2b8f920de51f0ee215c05809c4bb2d19ee4bed13" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it removes the element with &lt;code&gt;ListIterator.remove&lt;/code&gt;.</source>
          <target state="translated">この実装は、最初にインデックス付き要素を指すリスト反復子を取得します（ &lt;code&gt;listIterator(index)&lt;/code&gt; を使用）。次に、 &lt;code&gt;ListIterator.remove&lt;/code&gt; を使用して要素を削除します。</target>
        </trans-unit>
        <trans-unit id="7fb7d178ee862da67fdef96de1ba0c5057a0710f" translate="yes" xml:space="preserve">
          <source>This implementation first gets a list iterator that points to the end of the list (with &lt;code&gt;listIterator(size())&lt;/code&gt;). Then, it iterates backwards over the list until the specified element is found, or the beginning of the list is reached.</source>
          <target state="translated">この実装は、最初にリストの末尾を指すリスト反復子を取得します（ &lt;code&gt;listIterator(size())&lt;/code&gt; を使用）。次に、指定された要素が見つかるか、リストの先頭に到達するまで、リストを逆方向に反復します。</target>
        </trans-unit>
        <trans-unit id="94a0697d84c6d719a5a90f5bb76123e29ec4e37d" translate="yes" xml:space="preserve">
          <source>This implementation gets a list iterator positioned before &lt;code&gt;fromIndex&lt;/code&gt;, and repeatedly calls &lt;code&gt;ListIterator.next&lt;/code&gt; followed by &lt;code&gt;ListIterator.remove&lt;/code&gt; until the entire range has been removed. &lt;b&gt;Note: if &lt;code&gt;ListIterator.remove&lt;/code&gt; requires linear time, this implementation requires quadratic time.&lt;/b&gt;</source>
          <target state="translated">この実装は、 &lt;code&gt;fromIndex&lt;/code&gt; の前に配置されたリスト反復子を取得し、範囲全体が削除されるまで、 &lt;code&gt;ListIterator.next&lt;/code&gt; に続いて &lt;code&gt;ListIterator.remove&lt;/code&gt; を繰り返し呼び出します。&lt;b&gt;注： &lt;code&gt;ListIterator.remove&lt;/code&gt; が線形時間を必要とする場合、この実装は2次時間を必要とします。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="870ec3beb0fb9f2b7a44d7c32a60f5e32d6f2bc6" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and a list iterator over this list pointing to the indexed element (with &lt;code&gt;listIterator(index)&lt;/code&gt;). Then, it iterates over the specified collection, inserting the elements obtained from the iterator into this list, one at a time, using &lt;code&gt;ListIterator.add&lt;/code&gt; followed by &lt;code&gt;ListIterator.next&lt;/code&gt; (to skip over the added element).</source>
          <target state="translated">この実装は、指定されたコレクションのイテレータを取得し、このリストのインデックス付き要素を指すリストイテレータを取得します（ &lt;code&gt;listIterator(index)&lt;/code&gt; を使用）。次に、指定されたコレクションを反復処理し、 &lt;code&gt;ListIterator.add&lt;/code&gt; に続いて &lt;code&gt;ListIterator.next&lt;/code&gt; を使用して、追加された要素をスキップして、イテレータから取得した要素をこのリストに一度に1つずつ挿入します。</target>
        </trans-unit>
        <trans-unit id="5646cdbc01162ddd7ea9fb47be104c59af9f0bfb" translate="yes" xml:space="preserve">
          <source>This implementation gets an iterator over the specified collection and iterates over it, inserting the elements obtained from the iterator into this list at the appropriate position, one at a time, using &lt;code&gt;add(int, E)&lt;/code&gt;. Many implementations will override this method for efficiency.</source>
          <target state="translated">この実装は、指定されたコレクションの反復子を取得して反復し、 &lt;code&gt;add(int, E)&lt;/code&gt; を使用して、反復子から取得した要素をこのリストの適切な位置に1つずつ挿入します。多くの実装は、効率のためにこのメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="56e226c00665f15374e514b39e186317a37541a9" translate="yes" xml:space="preserve">
          <source>This implementation intentionally re-abstracts the inappropriate default provided in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;Map&lt;/code&gt; で提供される不適切なデフォルトを意図的に再抽出します。</target>
        </trans-unit>
        <trans-unit id="b635e6d0c6e154375dc4a10f158124210ed6fb62" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, it is compared with &lt;code&gt;&quot;true&quot;&lt;/code&gt; using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the original return value is compared with &lt;code&gt;&quot;false&quot;&lt;/code&gt;, again using &lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt;&lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt;&lt;/a&gt;. If the comparison returns &lt;code&gt;true&lt;/code&gt;, this invocation returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this invocation returns &lt;code&gt;def&lt;/code&gt;.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;呼び出します。戻り値がnull以外の場合、&lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;&quot;true&quot;&lt;/code&gt; と比較されます。比較が &lt;code&gt;true&lt;/code&gt; を返す場合、この呼び出しは &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合、元の戻り値は &lt;code&gt;&quot;false&quot;&lt;/code&gt; と比較され、再び&lt;a href=&quot;../../lang/string#equalsIgnoreCase-java.lang.String-&quot;&gt; &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; が使用され&lt;/a&gt;ます。比較が &lt;code&gt;true&lt;/code&gt; を返す場合、この呼び出しは &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合、この呼び出しは &lt;code&gt;def&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="66c71fae686f72098bae0c92b0f058077f985cde" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to a &lt;code&gt;long&lt;/code&gt; with &lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt;&lt;code&gt;Long.parseLong(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;呼び出します。戻り値がnullでない場合、実装は&lt;a href=&quot;../../lang/long#parseLong-java.lang.String-&quot;&gt; &lt;code&gt;Long.parseLong(String)&lt;/code&gt; &lt;/a&gt;を使用してそれを &lt;code&gt;long&lt;/code&gt; に変換しようとします。試行が成功した場合、戻り値はこのメソッドによって返されます。それ以外の場合、 &lt;code&gt;def&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a5a96dd92a8a2de99c9bb4309548d692948530dc" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;double&lt;/code&gt; with &lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;呼び出します。戻り値がnull以外の場合、実装は&lt;a href=&quot;../../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble(String)&lt;/code&gt; &lt;/a&gt;を使用してそれを &lt;code&gt;double&lt;/code&gt; に変換しようとします。試行が成功した場合、戻り値はこのメソッドによって返されます。それ以外の場合、 &lt;code&gt;def&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7794ec8b7b429260de48f273b8796a51252bad95" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;float&lt;/code&gt; with &lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;呼び出します。戻り値がnull以外の場合、実装は&lt;a href=&quot;../../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat(String)&lt;/code&gt; &lt;/a&gt;を使用してそれを &lt;code&gt;float&lt;/code&gt; に変換しようとします。試行が成功した場合、戻り値はこのメソッドによって返されます。それ以外の場合、 &lt;code&gt;def&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="eb14543b444c0f393274309002b25292204401a3" translate="yes" xml:space="preserve">
          <source>This implementation invokes &lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;get(key,
 null)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;. If the return value is non-null, the implementation attempts to translate it to an &lt;code&gt;int&lt;/code&gt; with &lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt;&lt;code&gt;Integer.parseInt(String)&lt;/code&gt;&lt;/a&gt;. If the attempt succeeds, the return value is returned by this method. Otherwise, &lt;code&gt;def&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#get-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;get(key, null)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;呼び出します。戻り値がnull以外の場合、実装は&lt;a href=&quot;../../lang/integer#parseInt-java.lang.String-&quot;&gt; &lt;code&gt;Integer.parseInt(String)&lt;/code&gt; を使用&lt;/a&gt;してそれを &lt;code&gt;int&lt;/code&gt; に変換しようとします。試行が成功した場合、戻り値はこのメソッドによって返されます。それ以外の場合、 &lt;code&gt;def&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="94ecc5689d3e638b6cf536a9fef78b9d540f7a3c" translate="yes" xml:space="preserve">
          <source>This implementation is a stable, adaptive, iterative mergesort that requires far fewer than n lg(n) comparisons when the input array is partially sorted, while offering the performance of a traditional mergesort when the input array is randomly ordered. If the input array is nearly sorted, the implementation requires approximately n comparisons. Temporary storage requirements vary from a small constant for nearly sorted input arrays to n/2 object references for randomly ordered input arrays.</source>
          <target state="translated">この実装は,入力配列が部分的にソートされている場合には,従来のマージソートの性能を提供しながら,入力配列がランダムに順序付けされている場合には,従来のマージソートの性能を提供しながら,n lg(n)回の比較をはるかに少なくすることができる安定した適応的な反復的マージソートです.入力配列がほぼソートされている場合,実装では約n回の比較が必要となります.一時的なストレージ要件は,ほぼソートされた入力配列に対する小さな定数から,ランダムに順序付けられた入力配列に対するn/2オブジェクト参照まで様々です.</target>
        </trans-unit>
        <trans-unit id="911416a70503239ead8d008361455812329dda42" translate="yes" xml:space="preserve">
          <source>This implementation is an integer version of MJD with the decimal part rounded to floor.</source>
          <target state="translated">この実装は、MJDの整数版であり、小数部を四捨五入して階数化しています。</target>
        </trans-unit>
        <trans-unit id="e6a26421733ec0b06980c0e432edc11963385ea9" translate="yes" xml:space="preserve">
          <source>This implementation is based on the chronology ID and class. Subclasses should add any additional state that they store.</source>
          <target state="translated">この実装では、年表IDとクラスを基準にしています。サブクラスは、保存する状態を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="e69caee99467717738ba7a0c01390cd3506a98fa" translate="yes" xml:space="preserve">
          <source>This implementation is compliant with the requirements of RFC 3280.</source>
          <target state="translated">この実装はRFC 3280の要件に準拠しています。</target>
        </trans-unit>
        <trans-unit id="3c357fd574f41001350324ef3f5db039d50d1eff" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt;&lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">この実装はスレッドセーフではありません。ただし、並列ストリームで&lt;a href=&quot;stream/collectors#summarizingDouble-java.util.function.ToDoubleFunction-&quot;&gt; &lt;code&gt;Collectors.toDoubleStatistics()&lt;/code&gt; &lt;/a&gt;を使用しても安全です&lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt;並列実装は、安全で効率的な並列実行に必要な結果の分割、分離、マージを提供するためです。</target>
        </trans-unit>
        <trans-unit id="fe542b73779aa75906a286f7e4474cc4e7a6f3dd" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt;&lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">この実装はスレッドセーフではありません。ただし、&lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; &lt;/a&gt;並列実装は、安全で効率的な並列実行に必要な結果の分割、分離、およびマージを提供するため、並列ストリームで&lt;a href=&quot;stream/collectors#summarizingInt-java.util.function.ToIntFunction-&quot;&gt; &lt;code&gt;Collectors.toIntStatistics()&lt;/code&gt; &lt;/a&gt;を使用しても安全です。</target>
        </trans-unit>
        <trans-unit id="815e99e203755418cfc4a22f8d98449c453fd284" translate="yes" xml:space="preserve">
          <source>This implementation is not thread safe. However, it is safe to use &lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt;&lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt;&lt;/a&gt; on a parallel stream, because the parallel implementation of &lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;Stream.collect()&lt;/code&gt;&lt;/a&gt; provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.</source>
          <target state="translated">この実装はスレッドセーフではありません。ただし、&lt;a href=&quot;stream/stream#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;Stream.collect()&lt;/code&gt; の&lt;/a&gt;並列実装は、安全で効率的な並列実行に必要な結果の分割、分離、およびマージを提供するため、並列ストリームで&lt;a href=&quot;stream/collectors#summarizingLong-java.util.function.ToLongFunction-&quot;&gt; &lt;code&gt;Collectors.toLongStatistics()&lt;/code&gt; &lt;/a&gt;を使用しても安全です。</target>
        </trans-unit>
        <trans-unit id="c65a4e114757cd95cb0b1af51c5a8f17d55667f4" translate="yes" xml:space="preserve">
          <source>This implementation is very similar to &lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt;, except that &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この実装は&lt;a href=&quot;abstractpreferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;に非常に似ていますが、&lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="4aac7cc407da5580cb81c86b96e060fa67eed65c" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">この実装は、指定されたキーを持つエントリを検索する &lt;code&gt;entrySet()&lt;/code&gt; を反復します。そのようなエントリが見つかった場合、 &lt;code&gt;true&lt;/code&gt; が返されます。そのようなエントリが見つからずに反復が終了した場合、 &lt;code&gt;false&lt;/code&gt; が返されます。この実装では、マップのサイズに線形の時間が必要であることに注意してください。多くの実装はこのメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="374c02342ca9ed7bb65e8c45f44f04fe03fc0a54" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, its value is obtained with its &lt;code&gt;getValue&lt;/code&gt; operation, the entry is removed from the collection (and the backing map) with the iterator's &lt;code&gt;remove&lt;/code&gt; operation, and the saved value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">この実装は、指定されたキーを持つエントリを検索する &lt;code&gt;entrySet()&lt;/code&gt; を反復します。そのようなエントリが見つかった場合、その値は &lt;code&gt;getValue&lt;/code&gt; 操作で取得され、イテレータの &lt;code&gt;remove&lt;/code&gt; 操作でコレクション（およびバッキングマップ）から削除され、保存された値が返されます。そのようなエントリが見つからずに反復が終了した場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。この実装では、マップのサイズに線形の時間が必要であることに注意してください。多くの実装はこのメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="81700431dabd9c61ce32f9c13c0156c858f13af9" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified key. If such an entry is found, the entry's value is returned. If the iteration terminates without finding such an entry, &lt;code&gt;null&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map; many implementations will override this method.</source>
          <target state="translated">この実装は、指定されたキーを持つエントリを検索する &lt;code&gt;entrySet()&lt;/code&gt; を反復します。そのようなエントリが見つかると、そのエントリの値が返されます。そのようなエントリが見つからずに反復が終了した場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。この実装では、マップのサイズに線形の時間が必要であることに注意してください。多くの実装はこのメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f766c5a2cb3b29aa94b14f7e1863646750f5d4cf" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt; searching for an entry with the specified value. If such an entry is found, &lt;code&gt;true&lt;/code&gt; is returned. If the iteration terminates without finding such an entry, &lt;code&gt;false&lt;/code&gt; is returned. Note that this implementation requires linear time in the size of the map.</source>
          <target state="translated">この実装は、指定された値を持つエントリを検索する &lt;code&gt;entrySet()&lt;/code&gt; を反復します。そのようなエントリが見つかった場合、 &lt;code&gt;true&lt;/code&gt; が返されます。そのようなエントリが見つからずに反復が終了した場合、 &lt;code&gt;false&lt;/code&gt; が返されます。この実装では、マップのサイズに線形時間が必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8300a6372ea19c93763fb3af3d8f015529a42126" translate="yes" xml:space="preserve">
          <source>This implementation iterates over &lt;code&gt;entrySet()&lt;/code&gt;, calling &lt;a href=&quot;map.entry#hashCode--&quot;&gt;&lt;code&gt;hashCode()&lt;/code&gt;&lt;/a&gt; on each element (entry) in the set, and adding up the results.</source>
          <target state="translated">この実装は &lt;code&gt;entrySet()&lt;/code&gt; を反復処理し、セット内の各要素（entry）で&lt;a href=&quot;map.entry#hashCode--&quot;&gt; &lt;code&gt;hashCode()&lt;/code&gt; &lt;/a&gt;を呼び出し、結果を合計します。</target>
        </trans-unit>
        <trans-unit id="ca0dbdf4776d51bd0c011b2ccf1832a90ecef222" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the collection looking for the specified element. If it finds the element, it removes the element from the collection using the iterator's remove method.</source>
          <target state="translated">この実装は、指定された要素を探してコレクションを反復処理します。要素が見つかった場合は、イテレータの remove メソッドを使ってコレクションから要素を削除します。</target>
        </trans-unit>
        <trans-unit id="e8d1b36ecb6afc9c1b2a76d59260c0a6aa2c241e" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the elements in the collection, checking each element in turn for equality with the specified element.</source>
          <target state="translated">この実装は、コレクション内の要素を繰り返し処理し、各要素が指定された要素と等しいかどうかを順番にチェックします。</target>
        </trans-unit>
        <trans-unit id="39f403dab1f207dcaf913c9aaa3525eee2914312" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the set, calling the &lt;code&gt;hashCode&lt;/code&gt; method on each element in the set, and adding up the results.</source>
          <target state="translated">この実装はセットを反復処理し、セットの各要素で &lt;code&gt;hashCode&lt;/code&gt; メソッドを呼び出し、結果を合計します。</target>
        </trans-unit>
        <trans-unit id="3c0d85f7c8b81e41420ddfc89ef5a64de801eb4a" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each element returned by the iterator to this queue, in turn. A runtime exception encountered while trying to add an element (including, in particular, a &lt;code&gt;null&lt;/code&gt; element) may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">この実装は、指定されたコレクションを反復処理し、イテレーターによって返された各要素をこのキューに追加します。要素（特に &lt;code&gt;null&lt;/code&gt; 要素を含む）を追加しようとしたときに実行時例外が発生すると、関連する例外がスローされたときに一部の要素のみが正常に追加される場合があります。</target>
        </trans-unit>
        <trans-unit id="cb49e9f211a7b5c45d27f20fd7c5b707404d8891" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, and adds each object returned by the iterator to this collection, in turn.</source>
          <target state="translated">この実装は、指定されたコレクションを反復処理し、イテレータによって返された各オブジェクトを順番にこのコレクションに追加します。</target>
        </trans-unit>
        <trans-unit id="45df9afc1d5dba7b2ae374ddc1d5fd770727ccb5" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified collection, checking each element returned by the iterator in turn to see if it's contained in this collection. If all elements are so contained &lt;code&gt;true&lt;/code&gt; is returned, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この実装は、指定されたコレクションを反復処理し、反復子によって返された各要素を順番にチェックして、このコレクションに含まれているかどうかを確認します。すべての要素が含まれている &lt;code&gt;true&lt;/code&gt; はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d277f54573e93fd99212202d3cc79336a92e3996" translate="yes" xml:space="preserve">
          <source>This implementation iterates over the specified map's &lt;code&gt;entrySet()&lt;/code&gt; collection, and calls this map's &lt;code&gt;put&lt;/code&gt; operation once for each entry returned by the iteration.</source>
          <target state="translated">この実装は、指定されたマップの &lt;code&gt;entrySet()&lt;/code&gt; コレクションを反復処理し、反復によって返されるエントリごとにこのマップの &lt;code&gt;put&lt;/code&gt; 操作を呼び出します。</target>
        </trans-unit>
        <trans-unit id="94358541f9d35d39b3a9c9aa36e2326b7df4d1a1" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's not so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">この実装はこのコレクションを反復処理し、イテレータによって返された各要素を順番にチェックして、指定されたコレクションに含まれているかどうかを確認します。含まれていない場合は、イテレータの &lt;code&gt;remove&lt;/code&gt; メソッドを使用して、このコレクションから削除されます。</target>
        </trans-unit>
        <trans-unit id="5752c24310b5d5e92d2aeed3eac68c1753b8f209" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, checking each element returned by the iterator in turn to see if it's contained in the specified collection. If it's so contained, it's removed from this collection with the iterator's &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">この実装はこのコレクションを反復処理し、イテレータによって返された各要素を順番にチェックして、指定されたコレクションに含まれているかどうかを確認します。含まれている場合は、イテレータの &lt;code&gt;remove&lt;/code&gt; メソッドを使用して、このコレクションから削除されます。</target>
        </trans-unit>
        <trans-unit id="519b7265bd069092f1ee87ef17492b432c1b0c47" translate="yes" xml:space="preserve">
          <source>This implementation iterates over this collection, removing each element using the &lt;code&gt;Iterator.remove&lt;/code&gt; operation. Most implementations will probably choose to override this method for efficiency.</source>
          <target state="translated">この実装はこのコレクションを反復処理し、 &lt;code&gt;Iterator.remove&lt;/code&gt; 操作を使用して各要素を削除します。ほとんどの実装では、効率のためにこのメソッドをオーバーライドすることを選択します。</target>
        </trans-unit>
        <trans-unit id="4576fde91ee155ce3e66f4d0a74f6b3c167a9415" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt;.</source>
          <target state="translated">この実装は、単に &lt;code&gt; compare((String)o1, (String)o2) &lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="23c718d9502111d93dc30f6a9345580a960a58b8" translate="yes" xml:space="preserve">
          <source>This implementation merely returns &lt;code&gt;false&lt;/code&gt; (so that this map acts like a normal map - the eldest element is never removed).</source>
          <target state="translated">この実装は単に &lt;code&gt;false&lt;/code&gt; を返すだけです（そのため、このマップは通常のマップのように機能します。最も古い要素が削除されることはありません）。</target>
        </trans-unit>
        <trans-unit id="ea2eb5e1b3e1ace11518ffb09a6647f94311ccce" translate="yes" xml:space="preserve">
          <source>This implementation merely returns a list iterator over the list.</source>
          <target state="translated">この実装は単にリストの上にリストイテレータを返すだけです。</target>
        </trans-unit>
        <trans-unit id="ad35e878c9e5603591403a18f61e9d3c699a94f2" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the absolute path name that was computed at the time that this node was constructed (based on the name that was passed to this node's constructor, and the names that were passed to this node's ancestors' constructors).</source>
          <target state="translated">この実装では、単にこのノードが構築されたときに計算された絶対パス名を返します (このノードのコンストラクタに渡された名前と、このノードの祖先のコンストラクタに渡された名前に基づいて)。</target>
        </trans-unit>
        <trans-unit id="51709a75571ee5b8a6c54ce09f4bdb149dee3efa" translate="yes" xml:space="preserve">
          <source>This implementation merely returns the name that was passed to this node's constructor.</source>
          <target state="translated">この実装は、このノードのコンストラクタに渡された名前を返すだけです。</target>
        </trans-unit>
        <trans-unit id="db1425f08beb2d7b2314a47941db6d97a1bcac81" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock and checks that the node has not been removed. If &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt;, this node is returned; if &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, this node's root is returned. If the first character in &lt;code&gt;path&lt;/code&gt; is not &lt;code&gt;'/'&lt;/code&gt;, the implementation breaks &lt;code&gt;path&lt;/code&gt; into tokens and recursively traverses the path from this node to the named node, &quot;consuming&quot; a name and a slash from &lt;code&gt;path&lt;/code&gt; at each step of the traversal. At each step, the current node is locked and the node's child-cache is checked for the named node. If it is not found, the name is checked to make sure its length does not exceed &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt;. Then the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked, and the result stored in this node's child-cache. If the newly created &lt;code&gt;Preferences&lt;/code&gt; object's &lt;a href=&quot;abstractpreferences#newNode&quot;&gt;&lt;code&gt;newNode&lt;/code&gt;&lt;/a&gt; field is &lt;code&gt;true&lt;/code&gt; and there are any node change listeners, a notification event is enqueued for processing by the event dispatch thread.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、ノードが削除されていないことを確認します。 &lt;code&gt;path&lt;/code&gt; が &lt;code&gt;&quot;&quot;&lt;/code&gt; の場合、このノードが返されます。場合は &lt;code&gt;path&lt;/code&gt; ある &lt;code&gt;&quot;/&quot;&lt;/code&gt; 、このノードのルートが返されます。 &lt;code&gt;path&lt;/code&gt; の最初の文字が &lt;code&gt;'/'&lt;/code&gt; でない場合、実装は &lt;code&gt;path&lt;/code&gt; をトークンに分割し、このノードから名前付きノードにパスを再帰的にトラバースし、トラバースの各ステップで名前とスラッシュを &lt;code&gt;path&lt;/code&gt; から「消費」します。各ステップで、現在のノードがロックされ、ノードの子キャッシュで名前付きノードがチェックされます。見つからない場合は、名前は、その長さが &lt;code&gt;MAX_NAME_LENGTH&lt;/code&gt; を超えないようにチェックされます。次に、&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、結果がこのノードの子キャッシュに保存されます。新しく作成された &lt;code&gt;Preferences&lt;/code&gt; オブジェクトの&lt;a href=&quot;abstractpreferences#newNode&quot;&gt; &lt;code&gt;newNode&lt;/code&gt; &lt;/a&gt;フィールドが &lt;code&gt;true&lt;/code&gt; であり、ノード変更リスナーがある場合、通知イベントはイベントディスパッチスレッドによる処理のためにキューに入れられます。</target>
        </trans-unit>
        <trans-unit id="b4e9074e793652f799c8cfa243efa22f5492c1f1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and invokes &lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt;&lt;code&gt;keysSpi()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、ノードが削除されていないことを確認して、&lt;a href=&quot;abstractpreferences#keysSpi--&quot;&gt; &lt;code&gt;keysSpi()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ee523996d355981b8029699f775d6640fb17d2b8" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed and returns the parent value that was passed to this node's constructor.</source>
          <target state="translated">この実装は、このプリファレンスノードのロックを取得し、ノードが削除されていないことを確認し、このノードのコンストラクタに渡された親の値を返します。</target>
        </trans-unit>
        <trans-unit id="9c1dca6ba54dc0a25dec6160d7a80a95ee75a6d1" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, constructs a &lt;code&gt;TreeSet&lt;/code&gt; initialized to the names of children already cached (the children in this node's &quot;child-cache&quot;), invokes &lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt;&lt;code&gt;childrenNamesSpi()&lt;/code&gt;&lt;/a&gt;, and adds all of the returned child-names into the set. The elements of the tree set are dumped into a &lt;code&gt;String&lt;/code&gt; array using the &lt;code&gt;toArray&lt;/code&gt; method, and this array is returned.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、ノードが削除されていないことを確認し、すでにキャッシュされている子（このノードの「子キャッシュ」の子）の名前に初期化された &lt;code&gt;TreeSet&lt;/code&gt; を構築し、&lt;a href=&quot;abstractpreferences#childrenNamesSpi--&quot;&gt; &lt;code&gt;childrenNamesSpi()&lt;/code&gt; を&lt;/a&gt;呼び出し、すべてを追加しますセットに返された子の名前。ツリーセットの要素は、 &lt;code&gt;toArray&lt;/code&gt; メソッドを使用して &lt;code&gt;String&lt;/code&gt; 配列にダンプされ、この配列が返されます。</target>
        </trans-unit>
        <trans-unit id="ff328080236bc53bbb21d28fd82c8ab703ac9410" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, checks that the node has not been removed, invokes &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and if there are any preference change listeners, enqueues a notification event for processing by the event dispatch thread.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、ノードが削除されていないことを確認し、&lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;を呼び出し、設定変更リスナーがある場合は、イベントディスパッチスレッドによる処理のために通知イベントをエンキューします。</target>
        </trans-unit>
        <trans-unit id="7d06d3af75722399c69cf0a06d1b73a18139b052" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name. If a child node has the correct name, the &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; method is invoked and the resulting node is returned. If the iteration completes without finding the specified name, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、&lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt;を呼び出して、このノードの子の名前の配列を取得し、各子の名前を指定されたノード名と比較して配列を反復処理します。子ノードの名前が正しい場合、&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、結果のノードが返されます。指定された名前が見つからずに反復が完了した場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="68dd71631e243d62782c7a1d3233e4f3411bf3d0" translate="yes" xml:space="preserve">
          <source>This implementation obtains this preference node's lock, invokes &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; to obtain an array of keys, and iterates over the array invoking &lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt;&lt;code&gt;remove(String)&lt;/code&gt;&lt;/a&gt; on each key.</source>
          <target state="translated">この実装は、この設定ノードのロックを取得し、&lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;を呼び出してキーの配列を取得し、各キーに対して&lt;a href=&quot;abstractpreferences#remove-java.lang.String-&quot;&gt; &lt;code&gt;remove(String)&lt;/code&gt; &lt;/a&gt;を呼び出す配列を反復処理します。</target>
        </trans-unit>
        <trans-unit id="68fb70f6859bc881ca8591ac741e9e9459eb437f" translate="yes" xml:space="preserve">
          <source>This implementation of the counter monitor requires the observed attribute to be of the type integer (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;).</source>
          <target state="translated">このカウンターモニターの実装では、監視対象の属性の型が整数（ &lt;code&gt;Byte&lt;/code&gt; 、 &lt;code&gt;Integer&lt;/code&gt; 、 &lt;code&gt;Short&lt;/code&gt; 、 &lt;code&gt;Long&lt;/code&gt; ）である必要があります。</target>
        </trans-unit>
        <trans-unit id="56c64353580b5bd2b143fc61404b3daed810592f" translate="yes" xml:space="preserve">
          <source>This implementation of the gauge monitor requires the observed attribute to be of the type integer or floating-point (&lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;).</source>
          <target state="translated">このゲージモニターの実装では、監視対象の属性が整数型または浮動小数点型（ &lt;code&gt;Byte&lt;/code&gt; 、 &lt;code&gt;Integer&lt;/code&gt; 、 &lt;code&gt;Short&lt;/code&gt; 、 &lt;code&gt;Long&lt;/code&gt; 、 &lt;code&gt;Float&lt;/code&gt; 、 &lt;code&gt;Double&lt;/code&gt; ）である必要があります。</target>
        </trans-unit>
        <trans-unit id="2ddbea53defab69d9606ffb011766ce60be8a7aa" translate="yes" xml:space="preserve">
          <source>This implementation provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iteration over collection views requires time proportional to the &quot;capacity&quot; of the &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets) plus its size (the number of key-value mappings). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">この実装は、ハッシュ関数がバケット間で要素を適切に分散すると仮定して、基本的な操作（ &lt;code&gt;get&lt;/code&gt; および &lt;code&gt;put&lt;/code&gt; ）に一定時間のパフォーマンスを提供します。コレクションビューの反復には、 &lt;code&gt;HashMap&lt;/code&gt; インスタンスの&quot;容量&quot; （バケットの数）とそのサイズ（キーと値のマッピングの数）の合計に比例した時間が必要です。したがって、反復のパフォーマンスが重要な場合は、初期容量を高くしすぎないように（または負荷係数を低くしすぎないように）設定することが非常に重要です。</target>
        </trans-unit>
        <trans-unit id="8c27c8f93fb0c5e1304d66a7f7e6788cb8b334d2" translate="yes" xml:space="preserve">
          <source>This implementation provides expected average</source>
          <target state="translated">この実施形態では、期待される平均</target>
        </trans-unit>
        <trans-unit id="0927d54bcfd80f8aefb6120fb2f7298a28299ab9" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the &lt;code&gt;containsKey&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; operations. Algorithms are adaptations of those in Cormen, Leiserson, and Rivest's &lt;em&gt;Introduction to Algorithms&lt;/em&gt;.</source>
          <target state="translated">この実装では、 &lt;code&gt;containsKey&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;put&lt;/code&gt; 、および &lt;code&gt;remove&lt;/code&gt; の各操作にlog（n）時間のコストが保証されています。アルゴリズムは、Cormen、Leiserson、およびRivestの&lt;em&gt;「Introduction to Algorithms」&lt;/em&gt;のアルゴリズムを応用したものです。</target>
        </trans-unit>
        <trans-unit id="36ff11dc05516f440cd0122d1f08e33fd3b4d671" translate="yes" xml:space="preserve">
          <source>This implementation provides guaranteed log(n) time cost for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt;).</source>
          <target state="translated">この実装は、基本的な操作（ &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、および &lt;code&gt;contains&lt;/code&gt; ）のlog（n）時間コストを保証します。</target>
        </trans-unit>
        <trans-unit id="60c4f7fa5f2db32614f524b752c0959196d6bb59" translate="yes" xml:space="preserve">
          <source>This implementation rejects submitted tasks (that is, by throwing &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;) only when the pool is shut down or internal resources have been exhausted.</source>
          <target state="translated">この実装は、プールがシャットダウンされたか、内部リソースが使い果たされた場合にのみ、送信されたタスクを拒否します（つまり、&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;をスローすることにより）。</target>
        </trans-unit>
        <trans-unit id="363bdcdf1055b4b3a93d614d60e563148e7f8e19" translate="yes" xml:space="preserve">
          <source>This implementation repeatedly invokes &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;null&lt;/code&gt; を返すまで&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;繰り返し呼び出します。</target>
        </trans-unit>
        <trans-unit id="adbd9f8ccc390387c4b3a8d79e90767a5e78efc8" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;0L&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">この実装は &lt;code&gt;0L&lt;/code&gt; を返します。&lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt;の規約に準拠している限り、サブクラスはこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="d64e5ac8d3f658cbe256bb54a117217a2bd8b5fd" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;entrySet().size()&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;entrySet().size()&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="46c3da213422759dc708bac3ab8116393923e0d9" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;listIterator(0)&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;listIterator(0)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bd3af095c822c9240cdacce1cb763985dd95df24" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;null&lt;/code&gt;. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;javafileobject&quot;&gt;&lt;code&gt;JavaFileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">この実装は &lt;code&gt;null&lt;/code&gt; を返します。&lt;a href=&quot;javafileobject&quot;&gt; &lt;code&gt;JavaFileObject&lt;/code&gt; &lt;/a&gt;の規約に準拠している限り、サブクラスはこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="5d5e13dea15f16ec8302f9e2259fab6b5b2c4758" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;size() == 0&lt;/code&gt;.</source>
          <target state="translated">この実装は &lt;code&gt;size() == 0&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="df25612aa66d4f90035fb6231f749225db7f8ac6" translate="yes" xml:space="preserve">
          <source>This implementation returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;offer&lt;/code&gt; succeeds, else throws an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;offer&lt;/code&gt; が成功した場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="fcc8f2abac7f7acb9536a3f5c83b27d8e81afe3e" translate="yes" xml:space="preserve">
          <source>This implementation returns a collection that subclasses &lt;a href=&quot;abstractcollection&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsValue&lt;/code&gt; method.</source>
          <target state="translated">この実装は、&lt;a href=&quot;abstractcollection&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt;をサブクラス化したコレクションを返します。サブクラスの反復子メソッドは、このマップの &lt;code&gt;entrySet()&lt;/code&gt; 反復子に対する「ラッパーオブジェクト」を返します。 &lt;code&gt;size&lt;/code&gt; メソッドこのマップのに委譲 &lt;code&gt;size&lt;/code&gt; 方法と &lt;code&gt;contains&lt;/code&gt; このマップのにメソッドのデリゲートを &lt;code&gt;containsValue&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8191a32f38fd937c6297e93d11b76ba70f9602c4" translate="yes" xml:space="preserve">
          <source>This implementation returns a list that subclasses &lt;code&gt;AbstractList&lt;/code&gt;. The subclass stores, in private fields, the offset of the subList within the backing list, the size of the subList (which can change over its lifetime), and the expected &lt;code&gt;modCount&lt;/code&gt; value of the backing list. There are two variants of the subclass, one of which implements &lt;code&gt;RandomAccess&lt;/code&gt;. If this list implements &lt;code&gt;RandomAccess&lt;/code&gt; the returned list will be an instance of the subclass that implements &lt;code&gt;RandomAccess&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;AbstractList&lt;/code&gt; をサブクラス化するリストを返します。サブクラスは、プライベートフィールドに、バッキングリスト内のsubListのオフセット、subListのサイズ（存続期間中に変更される可能性があります）、およびバッキングリストの予想される &lt;code&gt;modCount&lt;/code&gt; 値を格納します。サブクラスには2つのバリアントがあり、そのうちの1つは &lt;code&gt;RandomAccess&lt;/code&gt; を実装しています。このリストが &lt;code&gt;RandomAccess&lt;/code&gt; を実装する場合、返されるリストは &lt;code&gt;RandomAccess&lt;/code&gt; を実装するサブクラスのインスタンスになります。</target>
        </trans-unit>
        <trans-unit id="3cab51ad575be1260ab2ed83ebe6d50da83f18f8" translate="yes" xml:space="preserve">
          <source>This implementation returns a set that subclasses &lt;a href=&quot;abstractset&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;. The subclass's iterator method returns a &quot;wrapper object&quot; over this map's &lt;code&gt;entrySet()&lt;/code&gt; iterator. The &lt;code&gt;size&lt;/code&gt; method delegates to this map's &lt;code&gt;size&lt;/code&gt; method and the &lt;code&gt;contains&lt;/code&gt; method delegates to this map's &lt;code&gt;containsKey&lt;/code&gt; method.</source>
          <target state="translated">この実装は、&lt;a href=&quot;abstractset&quot;&gt; &lt;code&gt;AbstractSet&lt;/code&gt; &lt;/a&gt;をサブクラス化するセットを返します。サブクラスの反復子メソッドは、このマップの &lt;code&gt;entrySet()&lt;/code&gt; 反復子に対する「ラッパーオブジェクト」を返します。 &lt;code&gt;size&lt;/code&gt; メソッドこのマップのに委譲 &lt;code&gt;size&lt;/code&gt; 方法と &lt;code&gt;contains&lt;/code&gt; このマップのにメソッドのデリゲートを &lt;code&gt;containsKey&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c0a2466ae2426c574f6ea8c8e11764f1022dc5f9" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the &lt;code&gt;ListIterator&lt;/code&gt; interface that extends the implementation of the &lt;code&gt;Iterator&lt;/code&gt; interface returned by the &lt;code&gt;iterator()&lt;/code&gt; method. The &lt;code&gt;ListIterator&lt;/code&gt; implementation relies on the backing list's &lt;code&gt;get(int)&lt;/code&gt;, &lt;code&gt;set(int, E)&lt;/code&gt;, &lt;code&gt;add(int, E)&lt;/code&gt; and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">この実装は、 &lt;code&gt;iterator()&lt;/code&gt; メソッドによって返される &lt;code&gt;Iterator&lt;/code&gt; インターフェースの実装を拡張する &lt;code&gt;ListIterator&lt;/code&gt; インターフェースの単純な実装を返します。 &lt;code&gt;ListIterator&lt;/code&gt; 実装では、バッキングリストのに依存している &lt;code&gt;get(int)&lt;/code&gt; 、 &lt;code&gt;set(int, E)&lt;/code&gt; 、 &lt;code&gt;add(int, E)&lt;/code&gt; し、 &lt;code&gt;remove(int)&lt;/code&gt; する方法を。</target>
        </trans-unit>
        <trans-unit id="ce06f71af91689be6b60c9092b5a458e6979ddc3" translate="yes" xml:space="preserve">
          <source>This implementation returns a straightforward implementation of the iterator interface, relying on the backing list's &lt;code&gt;size()&lt;/code&gt;, &lt;code&gt;get(int)&lt;/code&gt;, and &lt;code&gt;remove(int)&lt;/code&gt; methods.</source>
          <target state="translated">この実装は、バッキングリストの &lt;code&gt;size()&lt;/code&gt; 、 &lt;code&gt;get(int)&lt;/code&gt; 、および &lt;code&gt;remove(int)&lt;/code&gt; メソッドに依存する、反復子インターフェースの単純な実装を返します。</target>
        </trans-unit>
        <trans-unit id="cb219c6439d78f7f174cb2d3ad915bb22e12743f" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. If the number of elements returned by the iterator is too large to fit into the specified array, then the elements are returned in a newly allocated array with length equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">この実装は、このコレクションの反復子によって返されたすべての要素を同じ配列で含む配列を返します。配列の連続する要素に格納され、インデックス &lt;code&gt;0&lt;/code&gt; から始まります。イテレータが返す要素の数が多すぎて指定した配列に収まらない場合、このコレクションのサイズが変化しても、要素は、イテレータが返す要素の数と同じ長さの新しく割り当てられた配列に返されます反復中に、コレクションが反復中に同時変更を許可する場合に発生する可能性がある。 &lt;code&gt;size&lt;/code&gt; メソッドは、最適化のヒントと呼ばれています。イテレータが異なる数の要素を返す場合でも、正しい結果が返されます。</target>
        </trans-unit>
        <trans-unit id="ea412474fbde6ee2834444f6e6d242fb6287dcd4" translate="yes" xml:space="preserve">
          <source>This implementation returns an array containing all the elements returned by this collection's iterator, in the same order, stored in consecutive elements of the array, starting with index &lt;code&gt;0&lt;/code&gt;. The length of the returned array is equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The &lt;code&gt;size&lt;/code&gt; method is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.</source>
          <target state="translated">この実装は、このコレクションの反復子によって返されたすべての要素を含む配列を、同じ順序で、配列の連続した要素に格納され、インデックス &lt;code&gt;0&lt;/code&gt; から始まります。返される配列の長さは、このコレクションのサイズが反復中に変更された場合でも、反復中にコレクションが同時に変更できる場合に発生する可能性があるように、反復子によって返される要素の数と同じです。 &lt;code&gt;size&lt;/code&gt; メソッドは、最適化のヒントと呼ばれています。イテレータが異なる数の要素を返す場合でも、正しい結果が返されます。</target>
        </trans-unit>
        <trans-unit id="9266c2e083a35167037f5508a8b6e979f053b125" translate="yes" xml:space="preserve">
          <source>This implementation returns false.</source>
          <target state="translated">この実装は false を返します。</target>
        </trans-unit>
        <trans-unit id="704a9caba648812bf75c8fceaeaf7f825f422d89" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">この実装は、 &lt;code&gt;Throwable&lt;/code&gt; を必要とするコンストラクターの1つを介して提供された、または作成後に&lt;a href=&quot;../../../java/lang/throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt;メソッドで設定された原因を返します。通常、このメソッドをオーバーライドする必要はありませんが、サブクラスでオーバーライドして、他の方法で設定された原因を返すことができます。これは、連鎖例外が &lt;code&gt;Throwable&lt;/code&gt; に追加される以前の「レガシーチェーンスロー可能」に適しています。あることに注意してください</target>
        </trans-unit>
        <trans-unit id="0806e0bd9953db61186592b082389efb9c9f7ef8" translate="yes" xml:space="preserve">
          <source>This implementation returns the cause that was supplied via one of the constructors requiring a &lt;code&gt;Throwable&lt;/code&gt;, or that was set after creation with the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a &quot;legacy chained throwable&quot; that predates the addition of chained exceptions to &lt;code&gt;Throwable&lt;/code&gt;. Note that it is</source>
          <target state="translated">この実装は、 &lt;code&gt;Throwable&lt;/code&gt; を必要とするコンストラクターの1つを介して提供された原因、または作成後に&lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;メソッドで設定された原因を返します。通常、このメソッドをオーバーライドする必要はありませんが、サブクラスでオーバーライドして、他の方法で設定された原因を返すことができます。これは、連鎖例外が &lt;code&gt;Throwable&lt;/code&gt; に追加される以前の「レガシーチェーンスロー可能」に適しています。あることに注意してください</target>
        </trans-unit>
        <trans-unit id="28a2e3805ca1f4e6d4b6419bd0153cbdd02bd025" translate="yes" xml:space="preserve">
          <source>This implementation returns the characteristics as reported when created.</source>
          <target state="translated">この実装は、作成時に報告された特性を返す。</target>
        </trans-unit>
        <trans-unit id="06b0e25656160a2bd660c5d5da8f9216b5c2b92a" translate="yes" xml:space="preserve">
          <source>This implementation returns the estimated size as reported when created and, if the estimate size is known, decreases in size when split.</source>
          <target state="translated">この実装は、作成時に報告された推定サイズを返し、推定サイズが分かっている場合は、分割時にサイズが減少します。</target>
        </trans-unit>
        <trans-unit id="98329e6ec9710a436d16bdff3cab443e5566e472" translate="yes" xml:space="preserve">
          <source>This implementation returns the following value:</source>
          <target state="translated">この実装では、以下の値を返します。</target>
        </trans-unit>
        <trans-unit id="ee1a335203f53f9f48dde9056117773ff28d4e6e" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;byte&lt;/code&gt; にキャストされた&lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; の&lt;/a&gt;結果を返します。</target>
        </trans-unit>
        <trans-unit id="924fd521b97b725a535575773f690037451d3223" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;a href=&quot;number#intValue--&quot;&gt;&lt;code&gt;intValue()&lt;/code&gt;&lt;/a&gt; cast to a &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">この実装は、結果を返す&lt;a href=&quot;number#intValue--&quot;&gt; &lt;code&gt;intValue()&lt;/code&gt; &lt;/a&gt;へのキャストを &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdebbceb0ccb7ee345e3d55ab419fec243b6be92" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;peek&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">この実装は、キューが空でない限り、 &lt;code&gt;peek&lt;/code&gt; の結果を返します。</target>
        </trans-unit>
        <trans-unit id="2811fdbefc2411a03c42ac53f622bc96435355df" translate="yes" xml:space="preserve">
          <source>This implementation returns the result of &lt;code&gt;poll&lt;/code&gt; unless the queue is empty.</source>
          <target state="translated">この実装は、キューが空 &lt;code&gt;poll&lt;/code&gt; ない限り、ポーリングの結果を返します。</target>
        </trans-unit>
        <trans-unit id="80a8983cbfced2aba34489f927790fdd09e806e7" translate="yes" xml:space="preserve">
          <source>This implementation scans the enclosed elements.</source>
          <target state="translated">この実装では、囲まれた要素をスキャンします。</target>
        </trans-unit>
        <trans-unit id="2471a45a6da31959c0293a90c4124d8d52d212d0" translate="yes" xml:space="preserve">
          <source>This implementation simply returns &lt;code&gt;null&lt;/code&gt;; if the programmer desires thread-local variables to have an initial value other than &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;ThreadLocal&lt;/code&gt; must be subclassed, and this method overridden. Typically, an anonymous inner class will be used.</source>
          <target state="translated">この実装は単に &lt;code&gt;null&lt;/code&gt; を返します。プログラマーがスレッドローカル変数に &lt;code&gt;null&lt;/code&gt; 以外の初期値を設定したい場合は、 &lt;code&gt;ThreadLocal&lt;/code&gt; をサブクラス化し、このメソッドをオーバーライドする必要があります。通常、匿名の内部クラスが使用されます。</target>
        </trans-unit>
        <trans-unit id="8fdeca85dae0066c2a40c745927f2be370fd3a7d" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;), without incurring the increased cost associated with &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a map that has the same order as the original, regardless of the original map's implementation:</source>
          <target state="translated">この実装は、&lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; に&lt;/a&gt;関連するコストの増加を招くことなく、&lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;（および&lt;a href=&quot;hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt;）によって提供される、指定されていない、一般的に無秩序な順序付けからクライアントを解放します。元のマップの実装に関係なく、元のマップと同じ順序を持つマップのコピーを作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="a0fc4962cd6567a4ad63d2821a4062c380719662" translate="yes" xml:space="preserve">
          <source>This implementation spares its clients from the unspecified, generally chaotic ordering provided by &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, without incurring the increased cost associated with &lt;a href=&quot;treeset&quot;&gt;&lt;code&gt;TreeSet&lt;/code&gt;&lt;/a&gt;. It can be used to produce a copy of a set that has the same order as the original, regardless of the original set's implementation:</source>
          <target state="translated">この実装は、&lt;a href=&quot;treeset&quot;&gt; &lt;code&gt;TreeSet&lt;/code&gt; に&lt;/a&gt;関連するコストの増加を招くことなく、&lt;a href=&quot;hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt;によって提供される、指定されていない、一般的に無秩序な順序付けからクライアントを保護します。元のセットの実装に関係なく、元のセットと同じ順序のセットのコピーを作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="38ddaee3e2a8cc1216c7e211ce350572b21593fc" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この実装は、 &lt;code&gt;value&lt;/code&gt; を&lt;a href=&quot;../../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; で&lt;/a&gt;文字列に変換し、結果&lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c6ae24a4ad7f2a852e967502804260f467790765" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この実装は、&lt;a href=&quot;../../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;value&lt;/code&gt; を文字列に変換し、結果&lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="056cadfc097f302397f3fb575eec2d56d791a826" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この実装は、&lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;value&lt;/code&gt; を文字列に変換し、結果&lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b23b5c5f5c0a34d89c0c59e2eb58a4b6d38735ab" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この実装は、 &lt;code&gt;value&lt;/code&gt; を&lt;a href=&quot;../../lang/long#toString-long-&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; で&lt;/a&gt;文字列に変換し、結果&lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8fa99b352d0f068eb1a697f5edfb312d215c767f" translate="yes" xml:space="preserve">
          <source>This implementation translates &lt;code&gt;value&lt;/code&gt; to a string with &lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt; and invokes &lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String,String)&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この実装は、 &lt;code&gt;value&lt;/code&gt; を&lt;a href=&quot;../../lang/string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; で&lt;/a&gt;文字列に変換し、結果&lt;a href=&quot;abstractpreferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String,String)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ecc55d2fb2670411be5184623c7fed4b584a48eb" translate="yes" xml:space="preserve">
          <source>This implementation traverses the list backwards, from the last element up to the second, repeatedly swapping a randomly selected element into the &quot;current position&quot;. Elements are randomly selected from the portion of the list that runs from the first element to the current position, inclusive.</source>
          <target state="translated">この実装では、最後の要素から2番目の要素まで、リストを逆方向に巡回し、ランダムに選択された要素を「現在の位置」に入れ替えることを繰り返します。要素は、リストの最初の要素から現在の位置までの部分からランダムに選択されます。</target>
        </trans-unit>
        <trans-unit id="393c9593a9c4850ebf28971767bc3b70ee28ff1a" translate="yes" xml:space="preserve">
          <source>This implementation traverses the queue to determine presence of the given thread.</source>
          <target state="translated">この実装は、与えられたスレッドが存在するかどうかを判断するためにキューを巡回します。</target>
        </trans-unit>
        <trans-unit id="cef951e7879d4c1876cd9e5bc5f7c44351095af7" translate="yes" xml:space="preserve">
          <source>This implementation uses &lt;a href=&quot;valuerange#getMinimum--&quot;&gt;&lt;code&gt;getMinimum()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#getMaximum--&quot;&gt;&lt;code&gt;getMaximum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この実装では、&lt;a href=&quot;valuerange#getMinimum--&quot;&gt; &lt;code&gt;getMinimum()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;valuerange#getMaximum--&quot;&gt; &lt;code&gt;getMaximum()&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="927eb81b8c5081c20bc3ef1e685a1e076d590bb3" translate="yes" xml:space="preserve">
          <source>This implementation uses a loop of &lt;code&gt;this.wait&lt;/code&gt; calls conditioned on &lt;code&gt;this.isAlive&lt;/code&gt;. As a thread terminates the &lt;code&gt;this.notifyAll&lt;/code&gt; method is invoked. It is recommended that applications not use &lt;code&gt;wait&lt;/code&gt;, &lt;code&gt;notify&lt;/code&gt;, or &lt;code&gt;notifyAll&lt;/code&gt; on &lt;code&gt;Thread&lt;/code&gt; instances.</source>
          <target state="translated">この実装は、ループの使用 &lt;code&gt;this.wait&lt;/code&gt; を条件と通話 &lt;code&gt;this.isAlive&lt;/code&gt; を。スレッドが終了すると、 &lt;code&gt;this.notifyAll&lt;/code&gt; メソッドが呼び出されます。アプリケーションが使用しないことをお勧めし &lt;code&gt;wait&lt;/code&gt; 、 &lt;code&gt;notify&lt;/code&gt; 、または &lt;code&gt;notifyAll&lt;/code&gt; 上の &lt;code&gt;Thread&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="8a7a4c7205be9eb69ea10599d01ef228d924269f" translate="yes" xml:space="preserve">
          <source>This implementation uses exactly the code that is used to define the list hash function in the documentation for the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">この実装は、&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントでリストハッシュ関数を定義するために使用されるコードを正確に使用します。</target>
        </trans-unit>
        <trans-unit id="acfbb2c041d33577954cd004acf9a51be65d50da" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of iterating over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">この実装では、ソースリストを反復処理し、各場所で順番にターゲットとの一致を探す &quot;ブルートフォース &quot;テクニックを使用しています。</target>
        </trans-unit>
        <trans-unit id="8dde92dccf9d72b58e5fe332fe33651b12d4f2ce" translate="yes" xml:space="preserve">
          <source>This implementation uses the &quot;brute force&quot; technique of scanning over the source list, looking for a match with the target at each location in turn.</source>
          <target state="translated">この実装では、ソースリストを走査して、各場所で順番にターゲットとの一致を探す「ブルートフォース」技術を使用しています。</target>
        </trans-unit>
        <trans-unit id="49934b26305a4f375c48a4c6d7996c96b3439772" translate="yes" xml:space="preserve">
          <source>This implementation uses the definition in &lt;a href=&quot;../list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この実装では、&lt;a href=&quot;../list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; の&lt;/a&gt;定義を使用します。</target>
        </trans-unit>
        <trans-unit id="c95f555f1ecee25c437e8120bab1a5963d7c3aca" translate="yes" xml:space="preserve">
          <source>This implementation uses the maximum precision permitted.</source>
          <target state="translated">本実施形態では、許容される最大精度を使用しています。</target>
        </trans-unit>
        <trans-unit id="0d43eb1ea18d7f470c63957e171ef2dc09c5dceb" translate="yes" xml:space="preserve">
          <source>This implementation visits a &lt;code&gt;UnionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;UnionType&lt;/code&gt; を訪問します。</target>
        </trans-unit>
        <trans-unit id="8091c6a3910dfa3d0a46046879296ccd04d0645e" translate="yes" xml:space="preserve">
          <source>This implementation visits an &lt;code&gt;IntersectionType&lt;/code&gt; by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">この実装は、 &lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;IntersectionType&lt;/code&gt; にアクセスします。</target>
        </trans-unit>
        <trans-unit id="854e75472c0c156f0fb1a19fed8da6fd2cd49cf4" translate="yes" xml:space="preserve">
          <source>This implements the 'Language-Tag' production of BCP47, and so supports grandfathered (regular and irregular) as well as private use language tags. Stand alone private use tags are represented as empty language and extension 'x-whatever', and grandfathered tags are converted to their canonical replacements where they exist.</source>
          <target state="translated">これはBCP47の'Langu-Tag'生成を実装しているので、グランドファザリングされた(regular and irregular)言語タグとプライベートユースの言語タグをサポートしています。スタンドアローンの私用タグは空の言語と拡張子 'x-whatever'として表現され、グランドファザー化されたタグは、それらが存在する場合には、それらの正規の代替品に変換されます。</target>
        </trans-unit>
        <trans-unit id="7345571d9209f5573f66233070aae319f4ff02f7" translate="yes" xml:space="preserve">
          <source>This information is particularly useful in session management policies. For example, a session manager thread could leave all sessions in a given context which haven't been used in a long time; or, the sessions might be sorted according to age to optimize some task.</source>
          <target state="translated">この情報は、セッション管理ポリシーにおいて特に有用です。例えば、セッションマネージャーのスレッドは、長い間使用されていない特定のコンテキスト内のすべてのセッションを残したり、タスクを最適化するために年齢に応じてセッションをソートしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="7d288a196331108d79bb2f97ac268bedf329eb47" translate="yes" xml:space="preserve">
          <source>This instance is immutable and unaffected by this method call.</source>
          <target state="translated">このインスタンスは不変で、このメソッド呼び出しの影響を受けません。</target>
        </trans-unit>
        <trans-unit id="469d4656dd9d4e02473925c545e0c3355ec9c2a6" translate="yes" xml:space="preserve">
          <source>This integer attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">この整数属性の値と &lt;code&gt;object&lt;/code&gt; の値は同じです。</target>
        </trans-unit>
        <trans-unit id="ad1b5102ef95da02a5e4be12b417c932fd8c0ee9" translate="yes" xml:space="preserve">
          <source>This interface additionally defines methods &lt;code&gt;firstEntry&lt;/code&gt;, &lt;code&gt;pollFirstEntry&lt;/code&gt;, &lt;code&gt;lastEntry&lt;/code&gt;, and &lt;code&gt;pollLastEntry&lt;/code&gt; that return and/or remove the least and greatest mappings, if any exist, else returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスは、存在する場合は最小および最大のマッピングを返したり削除したりするメソッド &lt;code&gt;firstEntry&lt;/code&gt; 、 &lt;code&gt;pollFirstEntry&lt;/code&gt; 、 &lt;code&gt;lastEntry&lt;/code&gt; 、および &lt;code&gt;pollLastEntry&lt;/code&gt; を追加で定義し、存在しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7f5c5a511f52126b4f376d52088ca0ab8a176fbd" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageInputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;InputStream&lt;/code&gt; to be used as an input source; another might take input from a &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスを使用すると、任意のオブジェクトを &lt;code&gt;ImageInputStream&lt;/code&gt; のインスタンスで「ラップ」できます。たとえば、特定の &lt;code&gt;ImageInputStreamSpi&lt;/code&gt; では、汎用の &lt;code&gt;InputStream&lt;/code&gt; を入力ソースとして使用できる場合があります。 &lt;code&gt;URL&lt;/code&gt; から入力を受け取るものもあります。</target>
        </trans-unit>
        <trans-unit id="51d4031fe0d1457beffb452131aeb094f21c3e2e" translate="yes" xml:space="preserve">
          <source>This interface allows arbitrary objects to be &quot;wrapped&quot; by instances of &lt;code&gt;ImageOutputStream&lt;/code&gt;. For example, a particular &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; might allow a generic &lt;code&gt;OutputStream&lt;/code&gt; to be used as a destination; another might output to a &lt;code&gt;File&lt;/code&gt; or to a device such as a serial port.</source>
          <target state="translated">このインターフェイスを使用すると、任意のオブジェクトを &lt;code&gt;ImageOutputStream&lt;/code&gt; のインスタンスで「ラップ」できます。たとえば、特定の &lt;code&gt;ImageOutputStreamSpi&lt;/code&gt; では、汎用の &lt;code&gt;OutputStream&lt;/code&gt; を宛先として使用できる場合があります。 &lt;code&gt;File&lt;/code&gt; またはシリアルポートなどのデバイスに出力するものもあります。</target>
        </trans-unit>
        <trans-unit id="6ebe017d830506ee915f100aedda7de89ae89748" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;checkGuard&lt;/code&gt;, with a single &lt;code&gt;object&lt;/code&gt; argument. &lt;code&gt;checkGuard&lt;/code&gt; is invoked (by the GuardedObject &lt;code&gt;getObject&lt;/code&gt; method) to determine whether or not to allow access to the object.</source>
          <target state="translated">このインターフェースには、1 つの &lt;code&gt;object&lt;/code&gt; 引数を持つ &lt;code&gt;checkGuard&lt;/code&gt; の 1つのメソッドが含まれています。 &lt;code&gt;checkGuard&lt;/code&gt; が呼び出され（GuardedObject &lt;code&gt;getObject&lt;/code&gt; メソッドによって）、オブジェクトへのアクセスを許可するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="c306b2d9261b2da8361315fad5be5dd3c3d93fb9" translate="yes" xml:space="preserve">
          <source>This interface contains a single method, &lt;code&gt;namingExceptionThrown()&lt;/code&gt;, that must be implemented so that the listener can be notified of exceptions that are thrown (by the service provider) while gathering information about the events that they're interested in. When this method is invoked, the listener has been automatically deregistered from the &lt;code&gt;EventContext&lt;/code&gt; with which it has registered.</source>
          <target state="translated">このインターフェイスには、単一のメソッド &lt;code&gt;namingExceptionThrown()&lt;/code&gt; が含まれています。これは、関心のあるイベントに関する情報を収集しながら、（サービスプロバイダーが）スローした例外をリスナーに通知できるように実装する必要があります。このメソッドが呼び出されると、リスナーは登録されている &lt;code&gt;EventContext&lt;/code&gt; から自動的に登録解除されます。</target>
        </trans-unit>
        <trans-unit id="5ca4236b5f433f71783d4ddd093a03eff5e70357" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all key specifications. All key specifications must implement this interface.</source>
          <target state="translated">このインターフェイスにはメソッドや定数は含まれていません。その唯一の目的は、すべてのキー仕様をグループ化し(そして型の安全性を提供すること)することです。すべてのキー仕様は、このインターフェイスを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b06d28d0bacdca8e2f018032211114ee0a66fe51" translate="yes" xml:space="preserve">
          <source>This interface contains no methods or constants. Its only purpose is to group (and provide type safety for) all parameter specifications. All parameter specifications must implement this interface.</source>
          <target state="translated">このインターフェイスにはメソッドや定数は含まれていません。その唯一の目的は、すべてのパラメータ仕様をグループ化して(そして型の安全性を提供する)ことです。すべてのパラメータ仕様は、このインターフェイスを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b4045188daf07ad611d2a99cfb0c7d811dfd285c" translate="yes" xml:space="preserve">
          <source>This interface contains query methods used to determine the results of a match against a regular expression. The match boundaries, groups and group boundaries can be seen but not modified through a &lt;code&gt;MatchResult&lt;/code&gt;.</source>
          <target state="translated">このインターフェースには、正規表現に対する一致の結果を判別するために使用される照会メソッドが含まれています。一致境界、グループ、およびグループ境界は表示できますが、 &lt;code&gt;MatchResult&lt;/code&gt; を通じて変更することはできません。</target>
        </trans-unit>
        <trans-unit id="e517a421bef28408a320ff897d3311fc46251ae0" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、クラス&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;と同じメソッドを宣言します。このインターフェースを実装するクラス（通常は&lt;a href=&quot;openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;）は&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="edbb1b3ad396afa62ac46dd78ac9b0088f6ef7fb" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、クラス&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;と同じメソッドを宣言します。このインターフェースを実装するクラス（通常は&lt;a href=&quot;openmbeanconstructorinfosupport&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; &lt;/a&gt;）は&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="d3bc2e3a828cade27afa90478db2c1f08f16ccff" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeaninfosupport&quot;&gt;&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、クラス&lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;と同じメソッドを宣言します。このインターフェースを実装するクラス（通常は&lt;a href=&quot;openmbeaninfosupport&quot;&gt; &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; &lt;/a&gt;）は&lt;a href=&quot;../mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="7388b34f799b7c48b65115bb03d5989736f99078" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、クラス&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt;と同じメソッドを宣言します。このインターフェースを実装するクラス（通常は&lt;a href=&quot;openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;）は&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt;を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="a9c2d28b9cc1668c9c8dd51118539c24ca4e713a" translate="yes" xml:space="preserve">
          <source>This interface declares the same methods as the class &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;. A class implementing this interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;) should extend &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、クラス&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;と同じメソッドを宣言します。このインターフェースを実装するクラス（通常は&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）は&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;を拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="fcee2a5734dc97a45d6e39882824a8302ac40340" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for &lt;code&gt;URL&lt;/code&gt; stream protocol handlers.</source>
          <target state="translated">このインターフェイスは、 &lt;code&gt;URL&lt;/code&gt; ストリームプロトコルハンドラのファクトリを定義します。</target>
        </trans-unit>
        <trans-unit id="6be0f6bc90087933dbaff7fed910ca6ce8d677ae" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers.</source>
          <target state="translated">このインタフェースは、コンテンツハンドラのファクトリを定義します。</target>
        </trans-unit>
        <trans-unit id="23eae2af0036167828d21e49398391e8ffb220dc" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for content handlers. An implementation of this interface should map a MIME type into an instance of &lt;code&gt;ContentHandler&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスは、コンテンツハンドラのファクトリを定義します。このインターフェースの実装は、MIMEタイプを &lt;code&gt;ContentHandler&lt;/code&gt; のインスタンスにマップする必要があります。</target>
        </trans-unit>
        <trans-unit id="7f82e9602edf403031f30e6736d4d8d0c2c9dddf" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations.</source>
          <target state="translated">このインタフェースは、データグラムソケットの実装のためのファクトリーを定義します。</target>
        </trans-unit>
        <trans-unit id="10f03f5ccdc6793ded5325daadffb335f19bf06d" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for datagram socket implementations. It is used by the classes &lt;code&gt;DatagramSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">このインターフェイスは、データグラムソケット実装のファクトリを定義します。実際のソケット実装を作成するためにクラス &lt;code&gt;DatagramSocket&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="5afb356be5d880813cca90a36ac9be14f4b3c045" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations.</source>
          <target state="translated">このインタフェースは、ソケット実装のためのファクトリーを定義します。</target>
        </trans-unit>
        <trans-unit id="c5579eb760f1a48c6dd85e66c97f05e2028b2514" translate="yes" xml:space="preserve">
          <source>This interface defines a factory for socket implementations. It is used by the classes &lt;code&gt;Socket&lt;/code&gt; and &lt;code&gt;ServerSocket&lt;/code&gt; to create actual socket implementations.</source>
          <target state="translated">このインターフェースは、ソケット実装のファクトリーを定義します。実際のソケット実装を作成するために、 &lt;code&gt;Socket&lt;/code&gt; クラスと &lt;code&gt;ServerSocket&lt;/code&gt; クラスによって使用されます。</target>
        </trans-unit>
        <trans-unit id="21a8a1555cc1a14eef6e86573ad7336663a3b025" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text.</source>
          <target state="translated">このインタフェースは,テキストに対する双方向の反復処理のためのプロトコルを定義する.</target>
        </trans-unit>
        <trans-unit id="76fa2a2f8d529eb8423e7c062f1de625cf9ed5e3" translate="yes" xml:space="preserve">
          <source>This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1.</source>
          <target state="translated">このインタフェースは,テキストに対する双方向の反復処理のためのプロトコルを定義する.このイテレータは、制限された文字列に対して反復処理を行います。文字は、 getBeginIndex()で返された値から始まり、 getEndIndex()-1 で返された値までの値でインデックス化されます。</target>
        </trans-unit>
        <trans-unit id="448282b92fb9bf9a3db24d428ff888e802d4b79e" translate="yes" xml:space="preserve">
          <source>This interface defines methods to access the elements at both ends of the deque. Methods are provided to insert, remove, and examine the element. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Deque&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">このインターフェイスは、両端キューの両端にある要素にアクセスするためのメソッドを定義します。要素を挿入、削除、および検査するためのメソッドが提供されています。これらの各メソッドは2つの形式で存在します。1つは操作が失敗した場合に例外をスローし、もう1つは特別な値（操作に応じて &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; ）を返します。挿入操作の後者の形式は、容量制限のある &lt;code&gt;Deque&lt;/code&gt; 実装で使用するために特別に設計されています。ほとんどの実装では、挿入操作が失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="bda0cf1fe07a11059d91980163f82518b8f89324" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the Java virtual machine.</source>
          <target state="translated">このインターフェイスは、Java 仮想マシンに関するシステムプロパティにアクセスするためのいくつかの便利なメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="5b872681f860ac20536c7b74f06f8a0b7c0e0bb9" translate="yes" xml:space="preserve">
          <source>This interface defines several convenient methods for accessing system properties about the operating system on which the Java virtual machine is running.</source>
          <target state="translated">このインターフェイスは、Java 仮想マシンが実行されているオペレーティング・システムに関するシステム・プロパティにアクセスするためのいくつかの便利なメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="18ca3c52abe340e512dfa5f3e878cb2eb10780e3" translate="yes" xml:space="preserve">
          <source>This interface defines the &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method to register the object with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;を表す&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;を返す&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; に&lt;/a&gt;オブジェクトを登録するためのregisterメソッドを定義します。オブジェクトは複数の監視サービスに登録できます。監視サービスへの登録は、キーの&lt;a href=&quot;watchkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="20613db0060f764304efbc08ba3ce707d7d086e9" translate="yes" xml:space="preserve">
          <source>This interface does not define methods for initially creating, forcibly completing normally or exceptionally, probing completion status or results, or awaiting completion of a stage. Implementations of CompletionStage may provide means of achieving such effects, as appropriate. Method &lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt;&lt;code&gt;toCompletableFuture()&lt;/code&gt;&lt;/a&gt; enables interoperability among different implementations of this interface by providing a common conversion type.</source>
          <target state="translated">このインターフェイスは、最初に作成する、通常または例外的に強制的に完了する、完了ステータスまたは結果を調査する、またはステージの完了を待機するためのメソッドを定義しません。CompletionStageの実装は、必要に応じて、そのような効果を達成する手段を提供します。メソッド&lt;a href=&quot;completionstage#toCompletableFuture--&quot;&gt; &lt;code&gt;toCompletableFuture()&lt;/code&gt; &lt;/a&gt;は、共通の変換タイプを提供することにより、このインターフェースの異なる実装間の相互運用性を可能にします。</target>
        </trans-unit>
        <trans-unit id="10e20735637c76f0b5597095a4d871eb54e5fe26" translate="yes" xml:space="preserve">
          <source>This interface does not refine the general contracts of the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode--&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; methods. The result of comparing two objects that implement &lt;code&gt;CharSequence&lt;/code&gt; is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary &lt;code&gt;CharSequence&lt;/code&gt; instances as elements in a set or as keys in a map.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;object#hashCode--&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドの一般的な規約を洗練しません。したがって、 &lt;code&gt;CharSequence&lt;/code&gt; を実装する2つのオブジェクトを比較した結果は、一般に未定義です。各オブジェクトは異なるクラスによって実装される可能性があり、各クラスがそのインスタンスを他のインスタンスと等しいかどうかテストできるとは限りません。したがって、任意の &lt;code&gt;CharSequence&lt;/code&gt; インスタンスをセットの要素として、またはマップのキーとして使用することは不適切です。</target>
        </trans-unit>
        <trans-unit id="fd33f3250d6416037f0ee6c850afd056f50ca002" translate="yes" xml:space="preserve">
          <source>This interface extends &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; interface so that a directory located by a path can be &lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; and entries in the directory watched.</source>
          <target state="translated">このインタフェースは延びて&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt;経路によって配置ディレクトリができるように、インターフェイスを&lt;a href=&quot;path#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;registered&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;見ディレクトリおよびエントリ。</target>
        </trans-unit>
        <trans-unit id="9dcecebf796719144c09143f3c0f99704a8025a1" translate="yes" xml:space="preserve">
          <source>This interface extends the &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; interface. When a deque is used as a queue, FIFO (First-In-First-Out) behavior results. Elements are added at the end of the deque and removed from the beginning. The methods inherited from the &lt;code&gt;Queue&lt;/code&gt; interface are precisely equivalent to &lt;code&gt;Deque&lt;/code&gt; methods as indicated in the following table:</source>
          <target state="translated">このインターフェースは&lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;インターフェースを拡張します。両端キューがキューとして使用されると、FIFO（先入れ先出し）動作が発生します。要素は両端キューの最後に追加され、最初から削除されます。 &lt;code&gt;Queue&lt;/code&gt; インターフェースから継承されたメソッドは、次の表に示すように、 &lt;code&gt;Deque&lt;/code&gt; メソッドとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="b61a7814aec60c920bd2352c7aa6433d76505fe1" translate="yes" xml:space="preserve">
          <source>This interface has to be implemented by any MBean class expected to represent a relation managed using the Relation Service.</source>
          <target state="translated">このインタフェースは、リレーションサービスを使用して管理されているリレーションを表現することが期待されるMBeanクラスによって実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="93664bd1dba9adbd3e908cae896ede7ee73a80f0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it.</source>
          <target state="translated">このインターフェイスは、それを実装する各クラスのオブジェクトに全体の順序を課します。</target>
        </trans-unit>
        <trans-unit id="8d04fa3a064f1d5d2441d626c114de6dea5d3db0" translate="yes" xml:space="preserve">
          <source>This interface imposes a total ordering on the objects of each class that implements it. This ordering is referred to as the class's</source>
          <target state="translated">このインターフェイスは、それを実装する各クラスのオブジェクトに全体の順序を課します。この順序は、クラスの</target>
        </trans-unit>
        <trans-unit id="e64f69133c0d52ffe7dab7201f742682bff8ec3d" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;LocalDate&lt;/code&gt;. There are many reasons for this, part of which is that implementations of this interface may be in calendar systems other than ISO. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for a fuller discussion of the issues.</source>
          <target state="translated">このインターフェイスはフレームワークレベルのインターフェイスであり、アプリケーションコードで広く使用することはできません。代わりに、アプリケーションは &lt;code&gt;LocalDate&lt;/code&gt; などの具象型のインスタンスを作成して渡します。これには多くの理由がありますが、その一部は、このインターフェイスの実装がISO以外のカレンダーシステムにある可能性があることです。問題の詳細については、&lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dbbb7bb0cadbe941c36d7f06bb82ecd5502f3d22" translate="yes" xml:space="preserve">
          <source>This interface is a framework-level interface that should not be widely used in application code. Instead, applications should create and pass around instances of concrete types, such as &lt;code&gt;Period&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスはフレームワークレベルのインターフェイスであり、アプリケーションコードで広く使用することはできません。代わりに、アプリケーションは、 &lt;code&gt;Period&lt;/code&gt; や &lt;code&gt;Duration&lt;/code&gt; などの具象型のインスタンスを作成して渡します。</target>
        </trans-unit>
        <trans-unit id="7625f17ecb6936d21e07364e1ea399ae070d3fcd" translate="yes" xml:space="preserve">
          <source>This interface is a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Frameworkの&lt;/a&gt;メンバーです。</target>
        </trans-unit>
        <trans-unit id="05880429a3a9bec34d8484810f39e9eb49490711" translate="yes" xml:space="preserve">
          <source>This interface is a service provider that can be called by multiple threads. Implementations must be immutable and thread-safe.</source>
          <target state="translated">このインタフェースは、複数のスレッドから呼び出すことができるサービスプロバイダです。実装は不変でスレッドセーフでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a6da5a934ce2519fa4cabf061819bd93f7a8c447" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide a common protocol for objects that wish to execute code while they are active. For example, &lt;code&gt;Runnable&lt;/code&gt; is implemented by class &lt;code&gt;Thread&lt;/code&gt;. Being active simply means that a thread has been started and has not yet been stopped.</source>
          <target state="translated">このインターフェイスは、オブジェクトがアクティブなときにコードを実行したいオブジェクトに共通のプロトコルを提供するように設計されています。たとえば、 &lt;code&gt;Runnable&lt;/code&gt; はクラス &lt;code&gt;Thread&lt;/code&gt; によって実装されます。アクティブであることは、スレッドが開始され、まだ停止されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="baebffb89378f52d414503c8af09aa94a8fc2b01" translate="yes" xml:space="preserve">
          <source>This interface is designed to provide access to a single extension, unlike &lt;a href=&quot;x509extension&quot;&gt;&lt;code&gt;X509Extension&lt;/code&gt;&lt;/a&gt; which is more suitable for accessing a set of extensions.</source>
          <target state="translated">このインターフェースは、拡張機能のセットへのアクセスにより適した&lt;a href=&quot;x509extension&quot;&gt; &lt;code&gt;X509Extension&lt;/code&gt; &lt;/a&gt;とは異なり、単一の拡張機能へのアクセスを提供するように設計されています。</target>
        </trans-unit>
        <trans-unit id="9aa3a81748f01451ac101285be9788ba4f953e94" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate.</source>
          <target state="translated">このインターフェイスは、java.bean.Beans.instantiateと連携して動作するように設計されています。</target>
        </trans-unit>
        <trans-unit id="ad54b3e9604379578a01600df8a39ea107c331a1" translate="yes" xml:space="preserve">
          <source>This interface is designed to work in collusion with java.beans.Beans.instantiate. The interface is intended to provide mechanism to allow the proper initialization of JavaBeans that are also Applets, during their instantiation by java.beans.Beans.instantiate().</source>
          <target state="translated">このインタフェースは、java.bean.Beans.instantiateと連携して動作するように設計されています。このインタフェースは、java.bean.Beans.instantiate()によるインスタンス化の間、アプレットでもあるJavaBeansの適切な初期化を可能にするメカニズムを提供することを意図しています。</target>
        </trans-unit>
        <trans-unit id="89682a28cc8f0667dd31310511233ea47a03db14" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages.</source>
          <target state="translated">このインターフェイスは、javax.naming および javax.naming.directory パッケージのメソッドが返すリストを列挙するためのものです。</target>
        </trans-unit>
        <trans-unit id="e1c8ade94408470188a3b624fd0ce556a7ee75f3" translate="yes" xml:space="preserve">
          <source>This interface is for enumerating lists returned by methods in the javax.naming and javax.naming.directory packages. It extends Enumeration to allow as exceptions to be thrown during the enumeration.</source>
          <target state="translated">このインターフェイスは、javax.naming および javax.naming.directory パッケージのメソッドが返すリストを列挙するためのものです。Enumeration を拡張し、列挙中に例外が投げられるようにします。</target>
        </trans-unit>
        <trans-unit id="49838318dec1de002134998d30a13c554ab74bfc" translate="yes" xml:space="preserve">
          <source>This interface is for expert developers, and is not needed for normal simple beans. To avoid confusing end-users we avoid using getXXX setXXX design patterns for these methods.</source>
          <target state="translated">このインタフェースはエキスパート開発者のためのものであり、通常のシンプルなビーンズには必要ありません。エンドユーザを混乱させないために、これらのメソッドには getXXX setXXX のデザインパターンを使用しないようにしています。</target>
        </trans-unit>
        <trans-unit id="e8a9ccee46f85a945ce7fc25af131821526aa30d" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;.</source>
          <target state="translated">このインターフェースは &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; を処理するためのものです。</target>
        </trans-unit>
        <trans-unit id="48eda86c2269012ae794adcc546191dccfa01906" translate="yes" xml:space="preserve">
          <source>This interface is for handling &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt;. &quot;Unsolicited notification&quot; is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. It allows the server to send unsolicited notifications to the client. A &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; must:</source>
          <target state="translated">このインターフェースは &lt;code&gt;UnsolicitedNotificationEvent&lt;/code&gt; を処理するためのものです。「一方的な通知」は&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されています。これにより、サーバーは非請求通知をクライアントに送信できます。A &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt; する必要があります。</target>
        </trans-unit>
        <trans-unit id="79c93f43e6f69c7f0f8c9513039f9b516fbeafe4" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations.</source>
          <target state="translated">このインターフェイスは、NamingEnumerationsで返されるオブジェクトを持つコントロールを返すためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="f0541440ec51bff0f6a8b8dcb75edeed9fa77769" translate="yes" xml:space="preserve">
          <source>This interface is for returning controls with objects returned in NamingEnumerations. For example, suppose a server sends back controls with the results of a search operation, the service provider would return a NamingEnumeration of objects that are both SearchResult and implement HasControls.</source>
          <target state="translated">このインターフェイスは、NamingEnumerationで返されたオブジェクトを持つコントロールを返すためのものです。例えば、サーバーが検索操作の結果を持つコントロールを送り返すとすると、サービスプロバイダは SearchResult であり HasControls を実装しているオブジェクトの NamingEnumeration を返すことになります。</target>
        </trans-unit>
        <trans-unit id="d25e0d6b22b27ec8c972b9e3eb41afd50a72be0c" translate="yes" xml:space="preserve">
          <source>This interface is implemented by &lt;code&gt;BeanContextChildren&lt;/code&gt; that have an AWT &lt;code&gt;Component&lt;/code&gt; associated with them.</source>
          <target state="translated">このインターフェースは、AWT &lt;code&gt;Component&lt;/code&gt; 関連付けられている &lt;code&gt;BeanContextChildren&lt;/code&gt; によって実装されます。</target>
        </trans-unit>
        <trans-unit id="34049a3edf989c23887780df8a1b71d390eb37f2" translate="yes" xml:space="preserve">
          <source>This interface is implemented by BeanContexts' that have an AWT Container associated with them.</source>
          <target state="translated">このインタフェースは,AWTコンテナに関連付けられたBeanContexts'によって実装されます.</target>
        </trans-unit>
        <trans-unit id="0b33eb3b8422d4dfabd5731cf56218846d077b1a" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it.</source>
          <target state="translated">このインタフェースは,直接には関連するBeanContext(Child)を持たない(そのインタフェースまたはそのサブインタフェースを実装することで)JavaBeanによって実装されるが,そのインタフェースから委任されたパブリックBeanContext(Child)を持つ。</target>
        </trans-unit>
        <trans-unit id="1655d19a231b743bd5a279c27ced1f86578aac1b" translate="yes" xml:space="preserve">
          <source>This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it. For example, a subclass of java.awt.Container may have a BeanContext associated with it that all Component children of that Container shall be contained within.</source>
          <target state="translated">このインタフェースは,直接には関連するBeanContext(Child)を持たない(そのインタフェース又はそのサブインタフェースを実装することによって)JavaBeanによって実装されるが,そのインタフェースから委任されたパブリックBeanContext(Child)を持つ。例えば,java.awt.Containerのサブクラスは,そのContainerのすべてのComponentの子がその中に含まれなければならないBeanContextに関連付けられたBeanContextを持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="920ac66844da30d241c685eac6b029b1a37306e4" translate="yes" xml:space="preserve">
          <source>This interface is implemented by an object that can provide a Reference to itself.</source>
          <target state="translated">このインタフェースは、それ自身への参照を提供できるオブジェクトによって実装されています。</target>
        </trans-unit>
        <trans-unit id="d4a8a9d9b1adcb62a656bfc0ccd286bec6832a76" translate="yes" xml:space="preserve">
          <source>This interface is implemented by any class which wants to receive notifications about the completion of an SSL protocol handshake on a given SSL connection.</source>
          <target state="translated">このインターフェイスは、与えられたSSL接続でSSLプロトコルのハンドシェイクが完了したことについての通知を受け取りたいクラスによって実装されています。</target>
        </trans-unit>
        <trans-unit id="656f13a410784cc1fac4bc273185b924ebf3a59f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession.</source>
          <target state="translated">このインターフェイスは、SSLSessionからいつバインドされているか解除されているかを知りたいオブジェクトによって実装されています。</target>
        </trans-unit>
        <trans-unit id="a345e72ec4def1a0226b56ac04238afce772397f" translate="yes" xml:space="preserve">
          <source>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession. When either event occurs via &lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt;&lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt;&lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt;&lt;/a&gt;, the event is communicated through a SSLSessionBindingEvent identifying the session.</source>
          <target state="translated">このインターフェースは、SSLSessionからいつバインドまたはアンバインドされるかを知りたいオブジェクトによって実装されます。&lt;a href=&quot;sslsession#putValue-java.lang.String-java.lang.Object-&quot;&gt; &lt;code&gt;SSLSession.putValue(String, Object)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sslsession#removeValue-java.lang.String-&quot;&gt; &lt;code&gt;SSLSession.removeValue(String)&lt;/code&gt; &lt;/a&gt;を介していずれかのイベントが発生すると、セッションを識別するSSLSessionBindingEventを介してイベントが通知されます。</target>
        </trans-unit>
        <trans-unit id="fd9a3b92d17c8ffaf6c96372a056af0d67848156" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean.</source>
          <target state="translated">このインタフェースは、ModelMBeanごとにModelMBeanInfoによって実装されます。</target>
        </trans-unit>
        <trans-unit id="cf7a6bc97229154759ae9b0cfbfd7896061be296" translate="yes" xml:space="preserve">
          <source>This interface is implemented by the ModelMBeanInfo for every ModelMBean. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">このインタフェースは、ModelMBeanごとにModelMBeanInfoによって実装されます。このインタフェースの実装は、すべてのJMXエージェントに同梱されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="b43c9be936ad05cfff2dac9eda97914a837fddbb" translate="yes" xml:space="preserve">
          <source>This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property.</source>
          <target state="translated">このインタフェースは、java.bean.beancontext.BeanContext.BeanContextChildインスタンスの入れ子になった階層に、現在の &quot;designTime &quot;プロパティを伝播させるために、java.bean.beancontext.BeanContext.BeanContextのインスタンスによって実装されるか、またはインスタンスから委譲されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="b0b095d0496841d272d349431d8a7e47cced4d07" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a client, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslClientFactory&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスは通常、クライアントから直接アクセスされることはなく、代わりに &lt;code&gt;Sasl&lt;/code&gt; 静的メソッドを使用します。ただし、特定の環境では、新しいまたは異なる &lt;code&gt;SaslClientFactory&lt;/code&gt; が提供およびインストールされる場合があります。</target>
        </trans-unit>
        <trans-unit id="37b6973450b3fd46d3a5711b21b32050a0df559f" translate="yes" xml:space="preserve">
          <source>This interface is not normally accessed directly by a server, which will use the &lt;code&gt;Sasl&lt;/code&gt; static methods instead. However, a particular environment may provide and install a new or different &lt;code&gt;SaslServerFactory&lt;/code&gt;.</source>
          <target state="translated">通常、このインターフェースはサーバーから直接アクセスされません。サーバーは代わりに &lt;code&gt;Sasl&lt;/code&gt; 静的メソッドを使用します。ただし、特定の環境では、新しいまたは異なる &lt;code&gt;SaslServerFactory&lt;/code&gt; が提供およびインストールされる場合があります。</target>
        </trans-unit>
        <trans-unit id="8c48630dafc6b59c3fa9c33a93e77fb49e688684" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s.</source>
          <target state="translated">このインターフェースは、 &lt;code&gt;NamingEvent&lt;/code&gt; を処理するリスナーインターフェースのルートです。</target>
        </trans-unit>
        <trans-unit id="244791bd9f009696907848289ade648f819a7bd1" translate="yes" xml:space="preserve">
          <source>This interface is the root of listener interfaces that handle &lt;code&gt;NamingEvent&lt;/code&gt;s. It does not make sense for a listener to implement just this interface. A listener typically implements a subinterface of &lt;code&gt;NamingListener&lt;/code&gt;, such as &lt;code&gt;ObjectChangeListener&lt;/code&gt; or &lt;code&gt;NamespaceChangeListener&lt;/code&gt;.</source>
          <target state="translated">このインターフェースは、 &lt;code&gt;NamingEvent&lt;/code&gt; を処理するリスナーインターフェースのルートです。リスナーがこのインターフェースだけを実装することは意味がありません。リスナーは通常、 &lt;code&gt;ObjectChangeListener&lt;/code&gt; や &lt;code&gt;NamespaceChangeListener&lt;/code&gt; などの &lt;code&gt;NamingListener&lt;/code&gt; のサブインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="e5a6352150d08ebc2e5a39ca1323fb83bed2bcd3" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job.</source>
          <target state="translated">このインタフェースは、印刷アプリケーションが印刷ジョブをキャンセルするために使用します。</target>
        </trans-unit>
        <trans-unit id="5d8568390b6f9f0eaa74daede0f68341e379330f" translate="yes" xml:space="preserve">
          <source>This interface is used by a printing application to cancel a print job. This interface extends &lt;a href=&quot;docprintjob&quot;&gt;&lt;code&gt;DocPrintJob&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;DocPrintJob&lt;/code&gt; implementation returned from a print service implements this interface if the print job can be cancelled. Before trying to cancel a print job, the client needs to test if the &lt;code&gt;DocPrintJob&lt;/code&gt; object returned from the print service actually implements this interface. Clients should never assume that a &lt;code&gt;DocPrintJob&lt;/code&gt; implements this interface. A print service might support cancellation only for certain types of print data and representation class names. This means that only some of the &lt;code&gt;DocPrintJob&lt;/code&gt; objects returned from a service will implement this interface.</source>
          <target state="translated">このインターフェイスは、印刷アプリケーションが印刷ジョブをキャンセルするために使用します。このインターフェースは&lt;a href=&quot;docprintjob&quot;&gt; &lt;code&gt;DocPrintJob&lt;/code&gt; を&lt;/a&gt;拡張します。 &lt;code&gt;DocPrintJob&lt;/code&gt; 印刷ジョブをキャンセルできる場合に、実装は、プリントサービスの実装からこのインターフェイスを返しました。印刷ジョブをキャンセルする前に、クライアントは、印刷サービスから返された &lt;code&gt;DocPrintJob&lt;/code&gt; オブジェクトが実際にこのインターフェースを実装しているかどうかをテストする必要があります。クライアントは、 &lt;code&gt;DocPrintJob&lt;/code&gt; がこのインターフェースを実装していると決して想定しないでください。印刷サービスは、特定のタイプの印刷データと表現クラス名のキャンセルのみをサポートする場合があります。つまり、サービスから返された &lt;code&gt;DocPrintJob&lt;/code&gt; オブジェクトの一部だけがこのインターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="074b62606ae32a44fe06467f74de5be148e56e17" translate="yes" xml:space="preserve">
          <source>This interface is used by the &lt;code&gt;URLStreamHandler&lt;/code&gt; class to create a &lt;code&gt;ContentHandler&lt;/code&gt; for a MIME type.</source>
          <target state="translated">このインターフェースは、MIMEタイプの &lt;code&gt;ContentHandler&lt;/code&gt; を作成するために &lt;code&gt;URLStreamHandler&lt;/code&gt; クラスによって使用されます。</target>
        </trans-unit>
        <trans-unit id="d907dca7978a8a7583146b02293a9738deb0a3ee" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace.</source>
          <target state="translated">このインターフェイスは、階層的な名前空間から名前を解析するために使用されます。</target>
        </trans-unit>
        <trans-unit id="f60532ed074ee027ac09d7b29908e2dadb8369f1" translate="yes" xml:space="preserve">
          <source>This interface is used for parsing names from a hierarchical namespace. The NameParser contains knowledge of the syntactic information (like left-to-right orientation, name separator, etc.) needed to parse names. The equals() method, when used to compare two NameParsers, returns true if and only if they serve the same namespace.</source>
          <target state="translated">このインタフェースは、階層的な名前空間から名前を解析するために使用されます。NameParserは、名前を解析するために必要な構文情報(左から右への向き、名前の区切りなど)の知識を持っています。equals()メソッドは、2つのネームパーサを比較するために使用され、同じ名前空間を提供している場合にのみ真を返します。</target>
        </trans-unit>
        <trans-unit id="076abc1b74828fbba351e8b88423155f0b672104" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e.</source>
          <target state="translated">このインタフェースは,JMXコンポーネントに関連付けられたDescriptorクラスのディスクリプタ,すなわち</target>
        </trans-unit>
        <trans-unit id="44f802fc086439b08afe9600dcec1ce759a42034" translate="yes" xml:space="preserve">
          <source>This interface is used to gain access to descriptors of the Descriptor class which are associated with a JMX component, i.e. MBean, MBeanInfo, MBeanAttributeInfo, MBeanNotificationInfo, MBeanOperationInfo, MBeanParameterInfo.</source>
          <target state="translated">このインターフェイスは、JMX コンポーネントに関連付けられた Descriptor クラスのディスクリプタ(MBean、MBeanInfo、MBeanAttributeInfo、MBeanNotificationInfo、MBeanOperationInfo、MBeanParameterInfo など)にアクセスするために使用されます。</target>
        </trans-unit>
        <trans-unit id="9ca6172bb904cedb5d362dd9390ef18f55e2e118" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals.</source>
          <target state="translated">このインターフェイスは、プリンシパルのグループを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ceee39651e54044edcdcdaf4963811ee9e6f901a" translate="yes" xml:space="preserve">
          <source>This interface is used to represent a group of principals. (A principal represents an entity such as an individual user or a company).</source>
          <target state="translated">このインタフェースは、プリンシパルのグループを表現するために使用されます。(プリンシパルは、個人ユーザや会社などのエンティティを表します)。</target>
        </trans-unit>
        <trans-unit id="a70e6061c67c02fac0e46321a73916ac2a0c1833" translate="yes" xml:space="preserve">
          <source>This interface is used to represent both request and response controls.</source>
          <target state="translated">このインターフェイスは、リクエストとレスポンスの両方のコントロールを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0f46e9e4bc3be154040bd66722db940a2d60af7a" translate="yes" xml:space="preserve">
          <source>This interface models a date-based amount of time in a calendar system. While most calendar systems use years, months and days, some do not. Therefore, this interface operates solely in terms of a set of supported units that are defined by the &lt;code&gt;Chronology&lt;/code&gt;. The set of supported units is fixed for a given chronology. The amount of a supported unit may be set to zero.</source>
          <target state="translated">このインターフェイスは、カレンダーシステムの日付ベースの時間をモデル化します。ほとんどのカレンダーシステムは年、月、日を使用しますが、使用しないものもあります。したがって、このインターフェースは、 &lt;code&gt;Chronology&lt;/code&gt; によって定義されているサポートされているユニットのセットに関してのみ動作します。サポートされている単位のセットは、特定の年代順に固定されています。サポートされる単位の量はゼロに設定できます。</target>
        </trans-unit>
        <trans-unit id="20430dbeb8a3f24e7dcb2f50c94ffe179fd1f09c" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans.</source>
          <target state="translated">このインタフェースは、ModelMBeansによって実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="467c2addae0db824ff5f7376404c724eeedbdfeb" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by the ModelMBeans. An implementation of this interface must be shipped with every JMX Agent.</source>
          <target state="translated">このインタフェースは、ModelMBeansによって実装されなければなりません。このインタフェースの実装は、すべてのJMXエージェントに同梱されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="83f733922c99b35c6e1680d0b8af6de818b2b7f8" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations must be singletons - final, immutable and thread-safe. It is recommended to use an enum whenever possible.</source>
          <target state="translated">このインターフェイスは、他のクラスが正しく動作するように注意して実装しなければなりません。すべての実装は、最終的で、不変で、スレッドセーフなシングルトンでなければなりません。可能な限り列挙型を使用することを推奨します。</target>
        </trans-unit>
        <trans-unit id="5c6210646c87a287e29c46c2713efefd4d88577a" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Implementations should be &lt;code&gt;Serializable&lt;/code&gt; where possible. An enum is as effective implementation choice.</source>
          <target state="translated">このインターフェイスは、他のクラスが正しく動作するように注意して実装する必要があります。インスタンス化できるすべての実装は、最終的で、不変で、スレッドセーフでなければなりません。可能な場合、実装は &lt;code&gt;Serializable&lt;/code&gt; 可能でなければなりません。列挙型は、効果的な実装の選択です。</target>
        </trans-unit>
        <trans-unit id="161c6b5d10da8965538c1afbf9b74b0e0e9c7f5b" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. It is recommended to use an enum where possible.</source>
          <target state="translated">このインターフェイスは、他のクラスが正しく動作するように注意して実装しなければなりません。インスタンス化できるすべての実装は、最終的で、不変で、スレッドセーフでなければなりません。可能であれば enum を使用することを推奨します。</target>
        </trans-unit>
        <trans-unit id="257e1181e58f4a3969fcea60d7c3a9a00c744300" translate="yes" xml:space="preserve">
          <source>This interface must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Subclasses should be Serializable wherever possible.</source>
          <target state="translated">このインターフェイスは、他のクラスが正しく動作するように注意して実装しなければなりません。インスタンス化できるすべての実装は、最終的で、不変で、スレッドセーフでなければなりません。サブクラスは可能な限りシリアライズ可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="ae149d549d1d6a678a9441b933e37ca23db6f01a" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended.</source>
          <target state="translated">このインターフェイスは実装の変異性に制限を設けませんが、不変性を強く推奨します。</target>
        </trans-unit>
        <trans-unit id="1a0c052e14d226a661651a2a4dc383219d642f56" translate="yes" xml:space="preserve">
          <source>This interface places no restrictions on the mutability of implementations, however immutability is strongly recommended. All implementations must be &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは実装の可変性に制限を課しませんが、不変性を強くお勧めします。すべての実装は&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="855c8f167da7dae31a6decb8e15f6f6ca477b618" translate="yes" xml:space="preserve">
          <source>This interface provides support for LDAP v3 controls. At a high level, this support allows a user program to set request controls for LDAP operations that are executed in the course of the user program's invocation of &lt;code&gt;Context&lt;/code&gt;/&lt;code&gt;DirContext&lt;/code&gt; methods, and read response controls resulting from LDAP operations. At the implementation level, there are some details that developers of both the user program and service providers need to understand in order to correctly use request and response controls.</source>
          <target state="translated">このインターフェイスは、LDAP v3コントロールをサポートします。 &lt;code&gt;DirContext&lt;/code&gt; 、このサポートにより、ユーザープログラムは、ユーザープログラムによる &lt;code&gt;Context&lt;/code&gt; / DirContextメソッドの呼び出しの過程で実行されるLDAP操作の要求コントロールを設定し、LDAP操作から生じる応答コントロールを読み取ることができます。実装レベルでは、要求と応答のコントロールを正しく使用するために、ユーザープログラムとサービスプロバイダーの両方の開発者が理解する必要がある詳細がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="150a2094b96dcc568b26abb547cc19627766fad5" translate="yes" xml:space="preserve">
          <source>This interface provides two methods to remove interior elements, &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeLastOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは、内部要素を削除する2つのメソッド、&lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;deque#removeLastOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeLastOccurrence&lt;/code&gt; を提供し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9bdc0b24cf47ba19da2586695afe6b2f53bb9018" translate="yes" xml:space="preserve">
          <source>This interface receives general indications of decoding progress (via the &lt;code&gt;imageProgress&lt;/code&gt; and &lt;code&gt;thumbnailProgress&lt;/code&gt; methods), and events indicating when an entire image has been updated (via the &lt;code&gt;imageStarted&lt;/code&gt;, &lt;code&gt;imageComplete&lt;/code&gt;, &lt;code&gt;thumbnailStarted&lt;/code&gt; and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods). Applications that wish to be informed of pixel updates as they happen (for example, during progressive decoding), should provide an &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;.</source>
          <target state="translated">このインターフェイスは、デコードの進行状況の一般的な指示（ &lt;code&gt;imageProgress&lt;/code&gt; および &lt;code&gt;thumbnailProgress&lt;/code&gt; メソッドを介して）と、イメージ全体が更新されたことを示すイベントを受信します（ &lt;code&gt;imageStarted&lt;/code&gt; 、 &lt;code&gt;imageComplete&lt;/code&gt; 、 &lt;code&gt;thumbnailStarted&lt;/code&gt; 、および &lt;code&gt;thumbnailComplete&lt;/code&gt; メソッドを介して）。ピクセルの更新が発生したときに（たとえば、プログレッシブデコード中に）通知を受けたいアプリケーションは、 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="45ba54db570d87231418ef99ab3cb9a3347ed69f" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates initial context factories.</source>
          <target state="translated">このインターフェイスは、初期コンテキストファクトリーを作成するビルダーを表します。</target>
        </trans-unit>
        <trans-unit id="9981f2cb44da0b7c6a202762b0db784ddbcb0b8d" translate="yes" xml:space="preserve">
          <source>This interface represents a builder that creates object factories.</source>
          <target state="translated">このインターフェイスは、オブジェクトファクトリを作成するビルダーを表します。</target>
        </trans-unit>
        <trans-unit id="4a12945c443b939441f98eb8553e34ae5c4f3d22" translate="yes" xml:space="preserve">
          <source>This interface represents a collection of attributes.</source>
          <target state="translated">このインターフェイスは、属性の集合を表します。</target>
        </trans-unit>
        <trans-unit id="b6469383ce35180e1663bc2483e3c70eb3b6a31d" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations.</source>
          <target state="translated">このインターフェイスは、LDAPv3 スタイルのコントロールで操作を実行したり、LDAPv3 スタイルの拡張操作を実行したりできるコンテキストを表します。</target>
        </trans-unit>
        <trans-unit id="343e2c7a84b3d9546377b22bb3f56a9c6b2b9e1e" translate="yes" xml:space="preserve">
          <source>This interface represents a context in which you can perform operations with LDAPv3-style controls and perform LDAPv3-style extended operations. For applications that do not require such controls or extended operations, the more generic &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; should be used instead.</source>
          <target state="translated">このインターフェースは、LDAPv3スタイルのコントロールで操作を実行し、LDAPv3スタイルの拡張操作を実行できるコンテキストを表します。このような制御や拡張操作を必要としないアプリケーションでは、代わりに、より一般的な &lt;code&gt;javax.naming.directory.DirContext&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="35a0b6e509abc49766ccce52911b51cf01912d12" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object given an object and attributes about the object.</source>
          <target state="translated">このインタフェースは、オブジェクトとオブジェクトに関する属性を与えられたオブジェクトを作成するためのファクトリを表します。</target>
        </trans-unit>
        <trans-unit id="f489703502d879077c8caab3c1f6521870884c9b" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for creating an object.</source>
          <target state="translated">このインターフェイスは、オブジェクトを作成するためのファクトリーを表します。</target>
        </trans-unit>
        <trans-unit id="af7968f0c302bb3322b41669df7a2f1e3b215f0a" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object and corresponding attributes for binding.</source>
          <target state="translated">このインタフェースは、オブジェクトの状態を取得するためのファクトリと、バインディングのための対応する属性を表します。</target>
        </trans-unit>
        <trans-unit id="9f158d213f97878aa587553be1c1f97f9f28dce3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory for obtaining the state of an object for binding.</source>
          <target state="translated">このインタフェースは、バインディングのためのオブジェクトの状態を取得するためのファクトリーを表します。</target>
        </trans-unit>
        <trans-unit id="95885d4605a3fbf5462145dedc66ad28c73b6dd3" translate="yes" xml:space="preserve">
          <source>This interface represents a factory that creates an initial context.</source>
          <target state="translated">このインターフェイスは、初期コンテキストを作成するファクトリーを表します。</target>
        </trans-unit>
        <trans-unit id="9488c36305cbc070f0b53e059c371e79a87f4ec5" translate="yes" xml:space="preserve">
          <source>This interface represents a guard, which is an object that is used to protect access to another object.</source>
          <target state="translated">このインターフェイスは、ガードを表し、別のオブジェクトへのアクセスを保護するために使用されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ca3f4948c28745b4653a2c61d572c27adeef794f" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings.</source>
          <target state="translated">このインタフェースは、名前とオブジェクトのバインディングのセットで構成される命名コンテキストを表します。</target>
        </trans-unit>
        <trans-unit id="6e3be4da16233be9331839ab8890976e43f0dce1" translate="yes" xml:space="preserve">
          <source>This interface represents a naming context, which consists of a set of name-to-object bindings. It contains methods for examining and updating these bindings.</source>
          <target state="translated">このインタフェースは、名前とオブジェクトのバインディングのセットからなる命名コンテキストを表します。これらのバインディングを調べたり更新したりするためのメソッドを含みます。</target>
        </trans-unit>
        <trans-unit id="e25015956405bfa4a664c36fff9af774f56c4387" translate="yes" xml:space="preserve">
          <source>This interface represents a permission, such as that used to grant a particular type of access to a resource.</source>
          <target state="translated">このインターフェイスは、リソースへの特定のタイプのアクセスを許可するために使用される許可を表します。</target>
        </trans-unit>
        <trans-unit id="a5815f8bbbcd197884ae382a6e0a8ba8baee951e" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes.</source>
          <target state="translated">このインタフェースは、ジョブ属性のセットで指定された文書を印刷することができる印刷ジョブを表す。</target>
        </trans-unit>
        <trans-unit id="46b4e603c1c01481644b8f7ff7680232271fc858" translate="yes" xml:space="preserve">
          <source>This interface represents a print job that can print a specified document with a set of job attributes. An object implementing this interface is obtained from a print service.</source>
          <target state="translated">このインタフェースは、指定された文書をジョブ属性のセットで印刷することができる印刷ジョブを表す。このインタフェースを実装したオブジェクトは、プリントサービスから取得する。</target>
        </trans-unit>
        <trans-unit id="c23738f1679f80ab02137c29819021b5d4ae15a8" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote.</source>
          <target state="translated">このインターフェイスは、ローカルまたはリモートに関わらず、MBean サーバと対話する方法を表します。</target>
        </trans-unit>
        <trans-unit id="f54940313160cd15157e1df851c1e226d5033c69" translate="yes" xml:space="preserve">
          <source>This interface represents a way to talk to an MBean server, whether local or remote. The &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface, representing a local MBean server, extends this interface.</source>
          <target state="translated">このインターフェースは、ローカルでもリモートでも、MBeanサーバーと通信する方法を表します。&lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;ローカルのMBeanサーバーを表すインターフェースは、このインターフェースを拡張します。</target>
        </trans-unit>
        <trans-unit id="1085a2f2d41e08b08eea97d0daf626dd7290441b" translate="yes" xml:space="preserve">
          <source>This interface represents an &quot;intermediate context&quot; for name resolution.</source>
          <target state="translated">このインタフェースは、名前解決のための「中間コンテキスト」を表します。</target>
        </trans-unit>
        <trans-unit id="0f14834a0b07c4dbbfad127b5d67997e6eed4945" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAP extended operation response as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されているLDAP拡張操作応答を表します。</target>
        </trans-unit>
        <trans-unit id="b2dec6542b2ef6f3cdc9e8c71ead74cbdc8472c9" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 control as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されているLDAPv3コントロールを表します。</target>
        </trans-unit>
        <trans-unit id="5809f12fcfdf6763082ca53b6b8fe07442cfd16d" translate="yes" xml:space="preserve">
          <source>This interface represents an LDAPv3 extended operation request as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されているLDAPv3拡張操作要求を表します。</target>
        </trans-unit>
        <trans-unit id="06abcbfc7e0a66ed6d42262a67289542df0460aa" translate="yes" xml:space="preserve">
          <source>This interface represents an X.509 extension.</source>
          <target state="translated">このインターフェイスは、X.509 拡張を表します。</target>
        </trans-unit>
        <trans-unit id="72ad3cf498a93c212959646d1ca238f33e48469a" translate="yes" xml:space="preserve">
          <source>This interface represents an attribute associated with a named object.</source>
          <target state="translated">このインタフェースは、名前付きオブジェクトに関連付けられた属性を表します。</target>
        </trans-unit>
        <trans-unit id="5519d222fafee9d391a214d13424d1104d477350" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field.</source>
          <target state="translated">楕円曲線(EC)の有限場を表現したインターフェースです。</target>
        </trans-unit>
        <trans-unit id="391bb9ec03cf1ede13d55fb3e34bb5db0675709b" translate="yes" xml:space="preserve">
          <source>This interface represents an elliptic curve (EC) finite field. All specialized EC fields must implements this interface.</source>
          <target state="translated">このインタフェースは、楕円曲線(EC)有限体を表します。すべての特殊なECフィールドはこのインターフェースを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="0ec863793f9f13bfac31f1708559c62660a761a4" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されている非請求通知を表します。</target>
        </trans-unit>
        <trans-unit id="3fd81adae4af65beb3ebd88b5b33ab295c1ceb5a" translate="yes" xml:space="preserve">
          <source>This interface represents an unsolicited notification as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. An unsolicited notification is sent by the LDAP server to the LDAP client without any provocation from the client. Its format is that of an extended response (&lt;code&gt;ExtendedResponse&lt;/code&gt;).</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されている非請求通知を表します。非送信請求通知は、クライアントからの挑発なしに、LDAPサーバーによってLDAPクライアントに送信されます。その形式は、拡張応答（ &lt;code&gt;ExtendedResponse&lt;/code&gt; ）の形式です。</target>
        </trans-unit>
        <trans-unit id="77460c18f87eccacb2253739ad6159c425c1219e" translate="yes" xml:space="preserve">
          <source>This interface represents the abstract notion of a principal, which can be used to represent any entity, such as an individual, a corporation, and a login id.</source>
          <target state="translated">このインタフェースは、個人、法人、ログインIDなど、あらゆる実体を表すために使用できる、プリンシパルという抽象的な概念を表しています。</target>
        </trans-unit>
        <trans-unit id="57884505de8217da2d49cc4fa0f4319801c9e57d" translate="yes" xml:space="preserve">
          <source>This interface should be used by new code in preference to the &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;インターフェイスよりも新しいコードで使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c38946aaa3a7c28236fd93c356f6428eb500bd2f" translate="yes" xml:space="preserve">
          <source>This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters.</source>
          <target state="translated">このインタフェースは、暗号アルゴリズム、鍵(キーサイズ)、その他のアルゴリズムパラメータの制約を指定します。</target>
        </trans-unit>
        <trans-unit id="650f3d97151f406b5422f564f6e92afe5665adcb" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor.</source>
          <target state="translated">このインターフェイスは、アノテーションプロセッサによる新規ファイルの作成をサポートします。</target>
        </trans-unit>
        <trans-unit id="a3310965cb28e603a3dd2b4aac33095619c6f858" translate="yes" xml:space="preserve">
          <source>This interface supports the creation of new files by an annotation processor. Files created in this way will be known to the annotation processing tool implementing this interface, better enabling the tool to manage them. Source and class files so created will be &lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;considered for processing&lt;/a&gt; by the tool in a subsequent &lt;a href=&quot;roundenvironment&quot;&gt;round of processing&lt;/a&gt; after the &lt;code&gt;close&lt;/code&gt; method has been called on the &lt;code&gt;Writer&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; used to write the contents of the file. Three kinds of files are distinguished: source files, class files, and auxiliary resource files.</source>
          <target state="translated">このインターフェイスは、注釈プロセッサによる新しいファイルの作成をサポートしています。この方法で作成されたファイルは、このインターフェイスを実装する注釈処理ツールに認識され、ツールによるファイルの管理がより容易になります。このように作成されたソースファイルとクラスファイルは、ファイルの内容を書き込むために使用される &lt;code&gt;Writer&lt;/code&gt; または &lt;code&gt;OutputStream&lt;/code&gt; で &lt;code&gt;close&lt;/code&gt; メソッドが呼び出された後、次の&lt;a href=&quot;roundenvironment&quot;&gt;ラウンドの処理で&lt;/a&gt;ツールによる&lt;a href=&quot;roundenvironment#getRootElements--&quot;&gt;処理&lt;/a&gt;が検討されます。ソースファイル、クラスファイル、補助リソースファイルの3種類のファイルが区別されます。</target>
        </trans-unit>
        <trans-unit id="b0d2937feacc801c2cb8a56d6b2595dcdc3e5efb" translate="yes" xml:space="preserve">
          <source>This interface takes the place of the &lt;code&gt;Dictionary&lt;/code&gt; class, which was a totally abstract class rather than an interface.</source>
          <target state="translated">このインターフェイスは、インターフェイスではなく完全に抽象クラスである &lt;code&gt;Dictionary&lt;/code&gt; クラスの代わりになります。</target>
        </trans-unit>
        <trans-unit id="dc627d82e33b95e53d21ca56130d14934235a2ce" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;concurrent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">これは、&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;concurrent&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt;コレクタです。</target>
        </trans-unit>
        <trans-unit id="23d95505e22c14462cabd3aa922526f370095bb6" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt;&lt;code&gt;accept(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;biconsumer#accept-T-U-&quot;&gt; &lt;code&gt;accept(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="947a7435b4ca3db843a54d4a982b871e9e6d10b3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;BiFunction.apply(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="eee16c770d693d02152db3c308800b474ce07d2b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bifunction#apply-T-U-&quot;&gt;&lt;code&gt;apply(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;bifunction#apply-T-U-&quot;&gt; &lt;code&gt;apply(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="de8483165f774b131e073c9037e36d34f4ac4057" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;bipredicate#test-T-U-&quot;&gt;&lt;code&gt;test(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;bipredicate#test-T-U-&quot;&gt; &lt;code&gt;test(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="d0b42dc82e83dd8f0685d8b8abce12f9b22d90e4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt;&lt;code&gt;getAsBoolean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;booleansupplier#getAsBoolean--&quot;&gt; &lt;code&gt;getAsBoolean()&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="b82233a26d8ec4b1f0ead992f8b66665b7e4fd03" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;consumer#accept-T-&quot;&gt;&lt;code&gt;accept(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;consumer#accept-T-&quot;&gt; &lt;code&gt;accept(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="feed7b921d3afa0aff44e28c122f48625314da45" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt;&lt;code&gt;applyAsDouble(double, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doublebinaryoperator#applyAsDouble-double-double-&quot;&gt; &lt;code&gt;applyAsDouble(double, double)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="625c7390d0cfdffa14487e376ddd15557661505b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt;&lt;code&gt;accept(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doubleconsumer#accept-double-&quot;&gt; &lt;code&gt;accept(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="cef5551e0b40e1feb2180320562a5467e1260822" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublefunction#apply-double-&quot;&gt;&lt;code&gt;apply(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doublefunction#apply-double-&quot;&gt; &lt;code&gt;apply(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="2b4dc1dc81bd3e31b87bf16cf34db3d33c346eff" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublepredicate#test-double-&quot;&gt;&lt;code&gt;test(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doublepredicate#test-double-&quot;&gt; &lt;code&gt;test(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="02d927d182fc65cbeccb77d8bd478f225017ca44" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt;&lt;code&gt;getAsDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doublesupplier#getAsDouble--&quot;&gt; &lt;code&gt;getAsDouble()&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="14dde154b57fe34bc58aa95d1ab701873cf36fae" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt;&lt;code&gt;applyAsInt(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doubletointfunction#applyAsInt-double-&quot;&gt; &lt;code&gt;applyAsInt(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="54fa8316aa541a8095fbf21e5d4433529eaf3f63" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt;&lt;code&gt;applyAsLong(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doubletolongfunction#applyAsLong-double-&quot;&gt; &lt;code&gt;applyAsLong(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="437174ca1707fe033a57d51dc1887b609adc48d4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt;&lt;code&gt;applyAsDouble(double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;doubleunaryoperator#applyAsDouble-double-&quot;&gt; &lt;code&gt;applyAsDouble(double)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="a90c05eecc9b96fb0798e19823a0259e7480da08" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;Function.apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;Function.apply(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="a1651ace3447f3cb2948f86832dd5df2e8893791" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;function#apply-T-&quot;&gt;&lt;code&gt;apply(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;function#apply-T-&quot;&gt; &lt;code&gt;apply(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="6c2ebdc64214cc919b6d7296171a81ed396b8554" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt;&lt;code&gt;applyAsInt(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intbinaryoperator#applyAsInt-int-int-&quot;&gt; &lt;code&gt;applyAsInt(int, int)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="ee34a59ae3a55ec3b7bd01654ba0de8912085085" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intconsumer#accept-int-&quot;&gt;&lt;code&gt;accept(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intconsumer#accept-int-&quot;&gt; &lt;code&gt;accept(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="dd8c743916e1f470ecddb6f3ea62afe876554db8" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intfunction#apply-int-&quot;&gt;&lt;code&gt;apply(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intfunction#apply-int-&quot;&gt; &lt;code&gt;apply(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="76ec6eddf617873e36216fe1c69ac71ad39a86e7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intpredicate#test-int-&quot;&gt;&lt;code&gt;test(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intpredicate#test-int-&quot;&gt; &lt;code&gt;test(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="6f66a001977e876f8002ffc4c84917bf6b996d95" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intsupplier#getAsInt--&quot;&gt;&lt;code&gt;getAsInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intsupplier#getAsInt--&quot;&gt; &lt;code&gt;getAsInt()&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="228694a853dbb3229ec00a4218d56eb99603077e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt;&lt;code&gt;applyAsDouble(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;inttodoublefunction#applyAsDouble-int-&quot;&gt; &lt;code&gt;applyAsDouble(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="0a8c09e34761c36bad4357d2f50f9ea5ee73e3f5" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt;&lt;code&gt;applyAsLong(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;inttolongfunction#applyAsLong-int-&quot;&gt; &lt;code&gt;applyAsLong(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="9b677297b203675bb540ee01fd43ce2e225b0ccb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt;&lt;code&gt;applyAsInt(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;intunaryoperator#applyAsInt-int-&quot;&gt; &lt;code&gt;applyAsInt(int)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="c14050baf0cd35ec605547c0f766662283b317a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt;&lt;code&gt;applyAsLong(long, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longbinaryoperator#applyAsLong-long-long-&quot;&gt; &lt;code&gt;applyAsLong(long, long)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="876cc436c42a0025cc88da794624d9a7e7ab2bbc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longconsumer#accept-long-&quot;&gt;&lt;code&gt;accept(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longconsumer#accept-long-&quot;&gt; &lt;code&gt;accept(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="c3a54e2c4b2e6483023138130a309e65456d9355" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longfunction#apply-long-&quot;&gt;&lt;code&gt;apply(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longfunction#apply-long-&quot;&gt; &lt;code&gt;apply(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="8e796456c6cdb902ddedb78dc86ab470172cb5c3" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longpredicate#test-long-&quot;&gt;&lt;code&gt;test(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longpredicate#test-long-&quot;&gt; &lt;code&gt;test(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="14dc71540ec3dd9da399059b894e32f45a0b1104" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longsupplier#getAsLong--&quot;&gt;&lt;code&gt;getAsLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longsupplier#getAsLong--&quot;&gt; &lt;code&gt;getAsLong()&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="8d84ace773902105df96a362f149933c2372b33b" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt;&lt;code&gt;applyAsDouble(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longtodoublefunction#applyAsDouble-long-&quot;&gt; &lt;code&gt;applyAsDouble(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="5767a02f715673605df8ab1c07a0cd9c23fe09dc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt;&lt;code&gt;applyAsInt(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longtointfunction#applyAsInt-long-&quot;&gt; &lt;code&gt;applyAsInt(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="edabe3b752c21cdcb3d8b61c340cb45073553884" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt;&lt;code&gt;applyAsLong(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;longunaryoperator#applyAsLong-long-&quot;&gt; &lt;code&gt;applyAsLong(long)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="c107b00f4c172c129cbfdfe9db8937b2f51201a9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt;&lt;code&gt;accept(Object, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;objdoubleconsumer#accept-T-double-&quot;&gt; &lt;code&gt;accept(Object, double)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="61b509856449bf28a2144ee3539c7b11d1c18177" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt;&lt;code&gt;accept(Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;objintconsumer#accept-T-int-&quot;&gt; &lt;code&gt;accept(Object, int)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="385a27c104a9667378588dcc082b9cd07faef589" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt;&lt;code&gt;accept(Object, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;objlongconsumer#accept-T-long-&quot;&gt; &lt;code&gt;accept(Object, long)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="335bb3e986bdaec85f93d6a604222ca93fecf9b9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;predicate#test-T-&quot;&gt;&lt;code&gt;test(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;predicate#test-T-&quot;&gt; &lt;code&gt;test(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="30e54ba7674096e4be0a285fc8c169ad038bf12c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;supplier#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;supplier#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="b9d5f13d2cf8f35e9df7b7982efcefc6f0901e9f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt;&lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;todoublebifunction#applyAsDouble-T-U-&quot;&gt; &lt;code&gt;applyAsDouble(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="5c18190e729bf073a74c9dab21f88515920ecc2f" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt;&lt;code&gt;applyAsDouble(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;todoublefunction#applyAsDouble-T-&quot;&gt; &lt;code&gt;applyAsDouble(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="1f6fb1a358146e5cf4e85d44591f0c6e1287ebd4" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt;&lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;tointbifunction#applyAsInt-T-U-&quot;&gt; &lt;code&gt;applyAsInt(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="888bcb7c7ac17b788faf5f54f7ca2b854903a356" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt;&lt;code&gt;applyAsInt(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;tointfunction#applyAsInt-T-&quot;&gt; &lt;code&gt;applyAsInt(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="ebce2ad151b7e651125b67551fc0e7898304f666" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt;&lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;tolongbifunction#applyAsLong-T-U-&quot;&gt; &lt;code&gt;applyAsLong(Object, Object)&lt;/code&gt; &lt;/a&gt;ある機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="b4243e0e0d96016a563eb752b051e8a9353d386a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary&quot;&gt;functional interface&lt;/a&gt; whose functional method is &lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt;&lt;code&gt;applyAsLong(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary&quot;&gt;機能&lt;/a&gt;メソッドが&lt;a href=&quot;tolongfunction#applyAsLong-T-&quot;&gt; &lt;code&gt;applyAsLong(Object)&lt;/code&gt; &lt;/a&gt;である機能インターフェースです。</target>
        </trans-unit>
        <trans-unit id="b8d258b12a70013a60abae2d3c2102f4bb1feca7" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary#StreamOps&quot;&gt;ステートフルな中間動作の短絡&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="85016ecd4e3ddabe1a873e02ba93aafedbb89ef2" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;short-circuiting terminal operation&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;package-summary#StreamOps&quot;&gt;短絡端子操作&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="7b6c8a986be7ee6309dbcbb422f6d15881c32a38" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;stateful intermediate operation&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;package-summary#StreamOps&quot;&gt;ステートフルな中間操作&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="81f0c9d12a1c79737ee9c6efec3e96a23965f9fc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;package-summary#StreamOps&quot;&gt;terminal operation&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;package-summary#StreamOps&quot;&gt;端末操作&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9d70d5ce12612bb1e7aaddcc7a2e3c6218ff04aa" translate="yes" xml:space="preserve">
          <source>This is a classic &quot;bounded buffer&quot;, in which a fixed-sized array holds elements inserted by producers and extracted by consumers. Once created, the capacity cannot be changed. Attempts to &lt;code&gt;put&lt;/code&gt; an element into a full queue will result in the operation blocking; attempts to &lt;code&gt;take&lt;/code&gt; an element from an empty queue will similarly block.</source>
          <target state="translated">これは、固定サイズの配列がプロデューサーによって挿入され、コンシューマーによって抽出された要素を保持する、古典的な「境界付きバッファー」です。作成した容量は変更できません。要素をいっぱいのキューに &lt;code&gt;put&lt;/code&gt; うとすると、操作がブロックされます。空のキューから要素を &lt;code&gt;take&lt;/code&gt; しようとすると、同様にブロックされます。</target>
        </trans-unit>
        <trans-unit id="e959474c3a5948e338d55715e25cb555c3cca9d5" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY {0}&quot;, log level FINER, and the given sourceMethod, sourceClass, and parameter is logged.</source>
          <target state="translated">これは、メソッドへのエントリをログに記録するために使用できる便利なメソッドです。メッセージ &quot;entry {0}&quot;、ログ・レベル FINER、および指定された sourceMethod、sourceClass、およびパラメータを持つ LogRecord がログに記録されます。</target>
        </trans-unit>
        <trans-unit id="828f2868ff5ac7338513a03553198b5b2c56c2be" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot; (followed by a format {N} indicator for each entry in the parameter array), log level FINER, and the given sourceMethod, sourceClass, and parameters is logged.</source>
          <target state="translated">これは、メソッドへのエントリをログに記録するために使用できる便利なメソッドです。メッセージ &quot;entry&quot; (パラメータ配列の各エントリに対してフォーマット {N}インジケータが続く)、ログレベル FINER、および指定された sourceMethod、sourceClass、およびパラメータを持つ LogRecord がログに記録されます。</target>
        </trans-unit>
        <trans-unit id="34bda061cf7a96f3aa1be24cacae7600e1f013c9" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log entry to a method. A LogRecord with message &quot;ENTRY&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">これは、メソッドへのエントリをログに記録するために使用できる便利なメソッドです。メッセージ &quot;entry&quot;、ログレベルfiner、与えられたsourceMethodとsourceClassを持つLogRecordがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="59a538c35cfad44f5bc58a272cb23dae34322e98" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN {0}&quot;, log level FINER, and the gives sourceMethod, sourceClass, and result object is logged.</source>
          <target state="translated">メソッドからの戻り値をログに記録できる便利なメソッドです。メッセージ &quot;RETURN {0}&quot;、ログレベルFINER、与えられたsourceMethod、sourceClass、結果オブジェクトを持つLogRecordがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="1d269250334a81c7b5c96143a33dcdd6f421b0e2" translate="yes" xml:space="preserve">
          <source>This is a convenience method that can be used to log returning from a method. A LogRecord with message &quot;RETURN&quot;, log level FINER, and the given sourceMethod and sourceClass is logged.</source>
          <target state="translated">これは、メソッドからの戻り値をログに記録するために使用できる便利なメソッドです。メッセージ &quot;RETURN&quot;、ログレベルFINER、与えられたsourceMethodとsourceClassを持つLogRecordがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="469d4aed40c128701207e2291e95bb088d12bddb" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the category would be a member of the result of &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt;.</source>
          <target state="translated">これは、カテゴリが &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt; の結果のメンバーかどうかを判断するための便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="47880d5e2a8965f45542e772b5f3c48ad9b88d9b" translate="yes" xml:space="preserve">
          <source>This is a convenience method to determine if the value would be a member of the result of &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt;.</source>
          <target state="translated">これは、値が &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt; の結果のメンバーかどうかを判断するための便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="d5e32d098a20a7668fc6cd0e7091c0b3042ac28d" translate="yes" xml:space="preserve">
          <source>This is a convenience method to log that a method is terminating by throwing an exception. The logging is done using the FINER level.</source>
          <target state="translated">これは、メソッドが例外を投げて終了していることをログに記録するための便利なメソッドです。ロギングはfinerレベルを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="9ff2b719a3774a6a5dea506babe564980e8a16fc" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form</source>
          <target state="translated">これは便利なメソッドです。形式の呼び出しは</target>
        </trans-unit>
        <trans-unit id="c96ca48246895e1e75154e61e8f4eb3246fe3100" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;exec(cmdarray)&lt;/code&gt; 形式の呼び出しは、呼び出し &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, null, null)&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="671558323b15a9545826acf332fefc3ae04da28a" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;exec(cmdarray, envp)&lt;/code&gt; 形式の呼び出しは、呼び出し &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, null)&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="8762622585d07d1a3fe3a27666aca4dd1c6cc4e1" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;exec(command)&lt;/code&gt; 形式の呼び出しは、呼び出し &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, null, null)&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ebb030791474af30bc1bb5c12fde15e50a5e6bb0" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;exec(command, envp)&lt;/code&gt; の形式の呼び出しは、呼び出し &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(command, envp, null)&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="22a3355a183efd6c613c54a3204fe60f8280bd46" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt;, where &lt;code&gt;cmdarray&lt;/code&gt; is an array of all the tokens in &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;exec(command, envp, dir)&lt;/code&gt; 形式の呼び出しは、呼び出し &lt;code&gt;&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;(cmdarray, envp, dir)&lt;/code&gt; とまったく同じように動作します。ここで、 &lt;code&gt;cmdarray&lt;/code&gt; は &lt;code&gt;command&lt;/code&gt; 内のすべてのトークンの配列です。</target>
        </trans-unit>
        <trans-unit id="212085ea90e849fac4d77206ae33749cd6bfe7b8" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectError(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectError&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;redirectError(file)&lt;/code&gt; の形式の呼び出しは、&lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ba0089888bbd426596a94e0c7c90005a82da2ab9" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectInput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectInput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.from(file))&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。フォーム &lt;code&gt;redirectInput(file)&lt;/code&gt; の呼び出しは、呼び出し&lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectInput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.from(file))&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="b9d640027f8f852b0f012e2990ab44d8363b093c" translate="yes" xml:space="preserve">
          <source>This is a convenience method. An invocation of the form &lt;code&gt;redirectOutput(file)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;redirectOutput&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(Redirect.to(file))&lt;/code&gt;.</source>
          <target state="translated">これは便利な方法です。 &lt;code&gt;redirectOutput(file)&lt;/code&gt; の形式の呼び出しは、&lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;redirectOutput&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(Redirect.to(file))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="8e4268e72b3ce5f149dda082bb9fd2e67942b968" translate="yes" xml:space="preserve">
          <source>This is a convenient method for local management use and is equivalent to calling:</source>
          <target state="translated">これはローカル管理用の便利なメソッドで、呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="2528de4679efaae8cdc8aa0d25cf0179c90daf52" translate="yes" xml:space="preserve">
          <source>This is a final, immutable and thread-safe enum.</source>
          <target state="translated">これは最終的で不変でスレッドセーフな列挙です。</target>
        </trans-unit>
        <trans-unit id="5574943ba9d22f3ea1608d8d1a0edd6d592193b7" translate="yes" xml:space="preserve">
          <source>This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference.</source>
          <target state="translated">これは機能的なインターフェイスであり、したがって、ラムダ式またはメソッド参照の代入ターゲットとして使用できます。</target>
        </trans-unit>
        <trans-unit id="63486938df39a133193a80dfcdbfafd173d12c38" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol.</source>
          <target state="translated">これは,BeanContextChildプロトコルを実装するためのサポートを提供する一般的なサポートクラスです.</target>
        </trans-unit>
        <trans-unit id="868f36c96277c40dcdb01d6ff71e13bf08caa9df" translate="yes" xml:space="preserve">
          <source>This is a general support class to provide support for implementing the BeanContextChild protocol. This class may either be directly subclassed, or encapsulated and delegated to in order to implement this interface for a given component.</source>
          <target state="translated">これは,BeanContextChildプロトコルを実装するためのサポートを提供する一般的なサポートクラスです.このクラスは,与えられたコンポーネントのためにこのインタフェースを実装するために,直接サブクラス化するか,カプセル化してデリゲートすることができます.</target>
        </trans-unit>
        <trans-unit id="8d17d7850524e0058998c00979afaa8fc15f15c2" translate="yes" xml:space="preserve">
          <source>This is a high-level method that uses &lt;code&gt;getMixer&lt;/code&gt; and &lt;code&gt;getLine&lt;/code&gt; internally.</source>
          <target state="translated">これは、内部で &lt;code&gt;getMixer&lt;/code&gt; と &lt;code&gt;getLine&lt;/code&gt; を使用する高レベルのメソッドです。</target>
        </trans-unit>
        <trans-unit id="2e6a65eaffef9458b40ebbb548d73c991322871f" translate="yes" xml:space="preserve">
          <source>This is a linear congruential pseudorandom number generator, as defined by D. H. Lehmer and described by Donald E. Knuth in</source>
          <target state="translated">これは、D.H.Lehmerによって定義され、Donald E.Knuthによって以下のように記述されている線形一致疑似乱数発生器です。</target>
        </trans-unit>
        <trans-unit id="0466222f15dd496eeb3158ec6b459c0b5df10f76" translate="yes" xml:space="preserve">
          <source>This is a special case formatter intended to allow a human readable form of an &lt;a href=&quot;../instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Instant&lt;/code&gt; class is designed to only represent a point in time and internally stores a value in nanoseconds from a fixed epoch of 1970-01-01Z. As such, an &lt;code&gt;Instant&lt;/code&gt; cannot be formatted as a date or time without providing some form of time-zone. This formatter allows the &lt;code&gt;Instant&lt;/code&gt; to be formatted, by providing a suitable conversion using &lt;code&gt;ZoneOffset.UTC&lt;/code&gt;.</source>
          <target state="translated">これは、人間が読める形式の&lt;a href=&quot;../instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;を可能にすることを目的とした特殊なケースのフォーマッタです。 &lt;code&gt;Instant&lt;/code&gt; クラスのみ時点を表すように設計されており、内部1970-01-01Zの固定エポックからナノ秒の値を格納しています。そのため、 &lt;code&gt;Instant&lt;/code&gt; を何らかの形式のタイムゾーンを提供せずに日付または時刻としてフォーマットすることはできません。このフォーマッタでは、 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; を使用して適切な変換を提供することにより、 &lt;code&gt;Instant&lt;/code&gt; をフォーマットできます。</target>
        </trans-unit>
        <trans-unit id="60e5b42155fba90d448f0df8642048d312059ab4" translate="yes" xml:space="preserve">
          <source>This is a support class to help build property editors.</source>
          <target state="translated">これは、プロパティエディタを構築するためのサポートクラスです。</target>
        </trans-unit>
        <trans-unit id="ccd29d1661e043815e58d17366c7d67a45c86be2" translate="yes" xml:space="preserve">
          <source>This is a support class to make it easier for people to provide BeanInfo classes.</source>
          <target state="translated">これは、BeanInfoクラスを簡単に提供できるようにするためのサポートクラスです。</target>
        </trans-unit>
        <trans-unit id="9cda0a03cbc603a4acf1ad5e9f84ab0090c400e7" translate="yes" xml:space="preserve">
          <source>This is a thread identifier within the Java VM and may or may not map to any operating system ID.</source>
          <target state="translated">これはJava VM内のスレッド識別子であり、任意のオペレーティング・システムIDにマップされている場合とされていない場合があります。</target>
        </trans-unit>
        <trans-unit id="01084dceb461526b617297bafd51f11e7a439210" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties.</source>
          <target state="translated">バインドプロパティをサポートするビーンで使用できるユーティリティクラスです。</target>
        </trans-unit>
        <trans-unit id="3b0a3eede1c3963cf6966a668b7be5229af3d0a8" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support bound properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;propertychangelistener&quot;&gt;&lt;code&gt;PropertyChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">これは、バインドされたプロパティをサポートするBeanが使用できるユーティリティクラスです。リスナーのリストを管理し、&lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt;をそれらにディスパッチします。このクラスのインスタンスをBeanのメンバーフィールドとして使用し、これらのタイプの作業をそれに委任できます。&lt;a href=&quot;propertychangelistener&quot;&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; は&lt;/a&gt;、すべてのプロパティまたは名前で指定されたプロパティのために登録することができます。</target>
        </trans-unit>
        <trans-unit id="d19549616feac6415c714ea10468a1e96f848c97" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties.</source>
          <target state="translated">制約付きプロパティをサポートするビーンで使用できるユーティリティクラスです。</target>
        </trans-unit>
        <trans-unit id="3be5b5cb8b7dd31dfd8d66f53b49f9b65a0db827" translate="yes" xml:space="preserve">
          <source>This is a utility class that can be used by beans that support constrained properties. It manages a list of listeners and dispatches &lt;a href=&quot;propertychangeevent&quot;&gt;&lt;code&gt;PropertyChangeEvent&lt;/code&gt;&lt;/a&gt;s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The &lt;a href=&quot;vetoablechangelistener&quot;&gt;&lt;code&gt;VetoableChangeListener&lt;/code&gt;&lt;/a&gt; can be registered for all properties or for a property specified by name.</source>
          <target state="translated">これは、制約されたプロパティをサポートするBeanで使用できるユーティリティクラスです。リスナーのリストを管理し、&lt;a href=&quot;propertychangeevent&quot;&gt; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; &lt;/a&gt;をそれらにディスパッチします。このクラスのインスタンスをBeanのメンバーフィールドとして使用し、これらのタイプの作業をそれに委任できます。&lt;a href=&quot;vetoablechangelistener&quot;&gt; &lt;code&gt;VetoableChangeListener&lt;/code&gt; は&lt;/a&gt;、すべてのプロパティまたは名前で指定されたプロパティのために登録することができます。</target>
        </trans-unit>
        <trans-unit id="d31108f927cb982cb85a92cad07a664cd3c0a6f9" translate="yes" xml:space="preserve">
          <source>This is a utility method to help in loading icon images. It takes the name of a resource file associated with the current object's class file and loads an image object from that file. Typically images will be GIFs.</source>
          <target state="translated">これは、アイコン画像の読み込みに役立つユーティリティメソッドです。これは、現在のオブジェクトのクラスファイルに関連付けられたリソースファイルの名前を受け取り、そのファイルから画像オブジェクトを読み込みます。通常、画像はGIFとなります。</target>
        </trans-unit>
        <trans-unit id="db051e9d5703d4dd6d2efbb762c35ab0a75469a7" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Duration&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;Duration&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予期しない結果が生じる可能性があるため、避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2be9491526db295587b2e489d1760e589f7766e4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;HijrahDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;HijrahDate&lt;/code&gt; のインスタンスでID依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9ebc9d394afc85407e28f7fc6976860c6d08162" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Instant&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;Instant&lt;/code&gt; インスタンスでアイデンティティ依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e018df6a28bbbcbd231d6281d29b3e936cd88e60" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;JapaneseDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;JapaneseDate&lt;/code&gt; のインスタンスでIDセンシティブな操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予期しない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="494d3e8e30f9011f1cdcda210eb8686777f91916" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスでアイデンティティ依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e5076d4a09c5c4249687174e07abedd30ab9b4c" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f0db73c4b96fefd63f2e00ac7d9cf510629a618" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;LocalTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスでID依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="90319b4136346b5ffec6d6b3cd2d2d5a1e6d46e2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MinguoDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;MinguoDate&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ac04185fa9f728229e4221fd9c39acea84a0ffc4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MonthDay&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;MonthDay&lt;/code&gt; のインスタンスでID依存の操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予期しない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ee0ef855bb12b3bef14522678e734ad9b230e48" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスでアイデンティティ依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e33daf7e991f9944ffd875df2ed8e2f886cdc3ae" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OffsetTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスでID依存演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3330e449971a1d5eaf69f40e260dc27fda86ef09" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Optional&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;Optional&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予期しない結果が生じる可能性があるため、使用を避けてください。</target>
        </trans-unit>
        <trans-unit id="cd1f28591dfcdb110e5da476e0ff97335ab8103e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalDouble&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;OptionalDouble&lt;/code&gt; のインスタンスでアイデンティティ依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予期しない結果が生じる可能性があるため、避けてください。</target>
        </trans-unit>
        <trans-unit id="e74c1ef2981faa175203df98990a14b0eebd0491" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalInt&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;OptionalInt&lt;/code&gt; のインスタンスでアイデンティティ依存の演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。</target>
        </trans-unit>
        <trans-unit id="5c688254c5025afc4f2a875a659e93dae44820a2" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;OptionalLong&lt;/code&gt; may have unpredictable results and should be avoided.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;OptionalLong&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、避けてください。</target>
        </trans-unit>
        <trans-unit id="d5c50720880481fd20cf0256ce8bf0f67a2daa02" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Period&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;Period&lt;/code&gt; インスタンスでID依存操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="df011717331e007b4a641b1d63a3ecc13b21c574" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; のインスタンスでID依存操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="97f328bfd3f2f368018cd3747dc3e50528ab59f1" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;Year&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;Year&lt;/code&gt; のインスタンスでID依存演算（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a1200a7d72bbd3ac59359f0efb0cc7e0266be13" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;YearMonth&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;YearMonth&lt;/code&gt; のインスタンスでIDセンシティブな操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="da89bc5dde597a447d39a9b10f407ac910c7e3c4" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneId&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;ZoneId&lt;/code&gt; のインスタンスでアイデンティティ依存の操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、アイデンティティハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6fac88b14dc78105f4f3efd35f1db2d29c05bedd" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZoneOffset&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスでID依存の操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="343748352d26af32da2cdf02c0dbb9052e7cc00e" translate="yes" xml:space="preserve">
          <source>This is a value-based class; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;ZonedDateTime&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">これは値ベースのクラスです。 &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスでIDに依存する操作（参照の等価（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、または同期を含む）を使用すると、予測できない結果が生じる可能性があるため、使用を避けてください。比較には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4d480278d056eccb680f14d9dc395194160fe1d" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; Collector.</source>
          <target state="translated">これは&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt;コレクターです。</target>
        </trans-unit>
        <trans-unit id="f8db533e2cb8b4d41e0d2eab1742a8f7f7f42602" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt; intermediate operation&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;package-summary#StreamOps&quot;&gt;中間操作&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="ca5bbe7ff8ccd0893a3cb3fcb1a02b79ad25d960" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;package-summary#StreamOps&quot;&gt;intermediate operation&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;package-summary#StreamOps&quot;&gt;中間操作&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="26f219c73e1205f8e307da3efe39fa4566429f2a" translate="yes" xml:space="preserve">
          <source>This is an abstract class for representing the system policy for Subject-based authorization. A subclass implementation of this class provides a means to specify a Subject-based access control &lt;code&gt;Policy&lt;/code&gt;.</source>
          <target state="translated">これは、サブジェクトベースの承認のシステムポリシーを表すための抽象クラスです。このクラスのサブクラス実装は、サブジェクトベースのアクセス制御 &lt;code&gt;Policy&lt;/code&gt; を指定する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="72e4063af55512d59af15a29ad7bce5a2d420583" translate="yes" xml:space="preserve">
          <source>This is an abstract class that defines the methods common to all &lt;code&gt;CertPath&lt;/code&gt;s. Subclasses can handle different kinds of certificates (X.509, PGP, etc.).</source>
          <target state="translated">これは、すべての &lt;code&gt;CertPath&lt;/code&gt; に共通のメソッドを定義する抽象クラスです。サブクラスは、さまざまな種類の証明書（X.509、PGPなど）を処理できます。</target>
        </trans-unit>
        <trans-unit id="1e3ef7d2171a6918e94882f35a1e60fab5544fa0" translate="yes" xml:space="preserve">
          <source>This is an abstract class. Concrete subclasses define the details of the client connection objects, such as whether they use JRMP or IIOP.</source>
          <target state="translated">これは抽象クラスです。具体的なサブクラスは、クライアント接続オブジェクトがJRMPを使用しているかIIOPを使用しているかなど、クライアント接続オブジェクトの詳細を定義します。</target>
        </trans-unit>
        <trans-unit id="70cd7da95b0fcc86b724fc2692da86565b6445c2" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever a reference is made to a non-existent ACL (Access Control List).</source>
          <target state="translated">これは、存在しない ACL (Access Control List)への参照が行われた場合に発生する例外です。</target>
        </trans-unit>
        <trans-unit id="010128e6fb649061dbfcd00afbf2f75b833bec88" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever an attempt is made to delete the last owner of an Access Control List.</source>
          <target state="translated">これは、アクセス制御リストの最後の所有者を削除しようとすると、例外としてスローされます。</target>
        </trans-unit>
        <trans-unit id="48a66a99ea966a383143cdf191984e7432c1b05e" translate="yes" xml:space="preserve">
          <source>This is an exception that is thrown whenever the modification of an object (such as an Access Control List) is only allowed to be done by an owner of the object, but the Principal attempting the modification is not an owner.</source>
          <target state="translated">これは、オブジェクト (アクセス制御リストなど)の変更がオブジェクトの所有者によってのみ許可されているが、変更しようとしているプリンシパルが所有者ではない場合にスローされる例外です。</target>
        </trans-unit>
        <trans-unit id="9be8e9f9f47f0a943fca6e3ecc37a48b79f53b55" translate="yes" xml:space="preserve">
          <source>This is an external encoded form for the key used when a standard representation of the key is needed outside the Java Virtual Machine, as when transmitting the key to some other party. The key is encoded according to a standard format (such as X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; or PKCS#8), and is returned using the &lt;a href=&quot;key#getEncoded--&quot;&gt;&lt;code&gt;getEncoded&lt;/code&gt;&lt;/a&gt; method. Note: The syntax of the ASN.1 type &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; is defined as follows:</source>
          <target state="translated">これは、キーを他の関係者に送信するときなど、Java仮想マシンの外部でキーの標準表現が必要なときに使用される、キーの外部エンコード形式です。キーは標準フォーマット（X.509 &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; やPKCS＃8など）に従ってエンコードされ、&lt;a href=&quot;key#getEncoded--&quot;&gt; &lt;code&gt;getEncoded&lt;/code&gt; &lt;/a&gt;メソッドを使用して返されます。注：ASN.1タイプの &lt;code&gt;SubjectPublicKeyInfo&lt;/code&gt; の構文は、次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="903dba422590f39b3723df4aa7227c07eb444066" translate="yes" xml:space="preserve">
          <source>This is an extremely dangerous permission to grant. Malicious applications that can instantiate their own class loaders could then load their own rogue classes into the system. These newly loaded classes could be placed into any protection domain by the class loader, thereby automatically granting the classes the permissions for that domain.</source>
          <target state="translated">これは非常に危険な許可です。独自のクラス・ローダをインスタンス化できる悪意のあるアプリケーションは、独自の不正なクラスをシステムにロードすることができます。これらの新しくロードされたクラスは、クラス・ローダによって任意の保護ドメインに置かれる可能性があり、それによってクラスにそのドメインのパーミッションを自動的に付与することができます。</target>
        </trans-unit>
        <trans-unit id="84f43451804d3b84cfb6c81fd648179b0ec74c5d" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe class.</source>
          <target state="translated">これは不変でスレッドセーフなクラスです。</target>
        </trans-unit>
        <trans-unit id="7b8b9cf0e645a92373798c47b0a4a435c6439661" translate="yes" xml:space="preserve">
          <source>This is an immutable and thread-safe enum.</source>
          <target state="translated">これは不変でスレッドセーフな列挙です。</target>
        </trans-unit>
        <trans-unit id="e3cc63dede934fb82f7d897cb9660815ade2e1d7" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Julian Day Number. Julian Day is a well-known system that represents the count of whole days since day 0, which is defined to be January 1, 4713 BCE in the Julian calendar, and -4713-11-24 Gregorian. The field has &quot;JulianDay&quot; as 'name', and 'DAYS' as 'baseUnit'. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">これは、ユリウス日数の整数版である。ユリウス日は、ユリウス暦では紀元前4713年1月1日、グレゴリオ暦では-4713-11-24と定義されている0日目からの全日数のカウントを表すよく知られたシステムです。このフィールドは、'name' が &quot;JulianDay&quot;、'baseUnit' が 'DAYS' です。このフィールドは、オフセットやゾーンを無視して、常にローカルの日付時刻を参照します。</target>
        </trans-unit>
        <trans-unit id="c76b9785544144c309bda399e12e307a4ab5bfa8" translate="yes" xml:space="preserve">
          <source>This is an integer-based version of the Modified Julian Day Number. Modified Julian Day (MJD) is a well-known system that counts days continuously. It is defined relative to astronomical Julian Day as &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt;. Each Modified Julian Day runs from midnight to midnight. The field always refers to the local date-time, ignoring the offset or zone.</source>
          <target state="translated">これは、修正ユリウス日番号の整数ベースのバージョンです。修正ユリウス日（MJD）は、日数を継続的にカウントするよく知られたシステムです。それは天文ユリウス日に対して &lt;code&gt;MJD = JD - 2400000.5&lt;/code&gt; として定義されます。修正ユリウス日は、真夜中から真夜中まで実行されます。このフィールドは、オフセットまたはゾーンを無視して、常にローカルの日時を参照します。</target>
        </trans-unit>
        <trans-unit id="8e72b4b2f096ca37313ce16df6f52598ee2ed1c2" translate="yes" xml:space="preserve">
          <source>This is an interface of abstract methods for managing a variety of identity certificates. An identity certificate is a guarantee by a principal that a public key is that of another principal. (A principal represents an entity such as an individual user, a group, or a corporation.)</source>
          <target state="translated">これは、さまざまな ID 証明書を管理するための抽象的な方法のインタフェースである。ID 証明書は、公開鍵が他のプリンシパルのものであることをプリンシパルが保証するものである。(プリンシパルは、個人ユーザ、グループ、または企業などのエンティティを表す)。</target>
        </trans-unit>
        <trans-unit id="96cc34d0becca8008b3e851f6a03b5601d2dc565" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being bound into an SSLSession.</source>
          <target state="translated">これは、リスナーがSSLSessionにバインドされていることを通知するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2930c84f7410730984796c2fa9f9bd4f9be76740" translate="yes" xml:space="preserve">
          <source>This is called to notify the listener that it is being unbound from a SSLSession.</source>
          <target state="translated">これは、SSLSessionからのバインドを解除していることをリスナーに通知するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8a67832c7b5557d1eb29706727f56695729b95a7" translate="yes" xml:space="preserve">
          <source>This is comparable to writing a &lt;code&gt;MouseListener&lt;/code&gt; in which all of the methods except &lt;code&gt;mousePressed&lt;/code&gt; are no-ops:</source>
          <target state="translated">これは、 &lt;code&gt;mousePressed&lt;/code&gt; を除くすべてのメソッドが何もしない &lt;code&gt;MouseListener&lt;/code&gt; を作成することに相当します。</target>
        </trans-unit>
        <trans-unit id="ee18249988bb55c3b3a9233be63b45b8a1b90623" translate="yes" xml:space="preserve">
          <source>This is dangerous because malicious code can replace the actual object with one which has incorrect or malignant data.</source>
          <target state="translated">これは、悪意のあるコードが実際のオブジェクトを、誤ったデータや悪意のあるデータを持つものに置き換えてしまう可能性があるため、危険です。</target>
        </trans-unit>
        <trans-unit id="82186227b9628325e87a15ababffbb65738f260a" translate="yes" xml:space="preserve">
          <source>This is dangerous in that information (possibly confidential) and methods normally unavailable would be accessible to malicious code.</source>
          <target state="translated">これは、情報(機密情報の可能性があります)や通常は利用できない方法が悪意のあるコードにアクセスできるという点で危険です。</target>
        </trans-unit>
        <trans-unit id="b08380682f55ba97d8fa2e8eaa92bc75db71e899" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDate.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="b7334ddae536980dc640f5aa6512f8edbf1c2ac7" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt;&lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../localdate#of-int-int-int-&quot;&gt; &lt;code&gt;LocalDate.of(int, int, int)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="d46a1cb7630da5692c35eb790bb637485fc53de0" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;LocalDate.ofEpochDay(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="d1b35eadf657b9fb567f5812bb951cf79258156b" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt;&lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../localdate#ofYearDay-int-int-&quot;&gt; &lt;code&gt;LocalDate.ofYearDay(int, int)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="47832d281a535c5af3493409800459879e08ace2" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;LocalDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="bb00819db1b26a667ce4fa4b3057bcf4364e9aff" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZonedDateTime.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="eeb9c3cf991b539e9b26bfb29940af886d7df231" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(Instant, ZoneId)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e3d8a007a95d6fc90c8ca31e75f1f06c7d836035" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;LanguageRange(range, MAX_WEIGHT)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="80ddd8795e5560be9f1a64f38c5c6ec9e1a00b14" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4a57ae1cba24030e3b8229b1eb55973ce1229963" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt;&lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;currency#getDisplayName-java.util.Locale-&quot;&gt; &lt;code&gt;getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="70bb4ca40e07439a79c3da7de6d78fe0a284e3dc" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt;&lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;currency#getSymbol-java.util.Locale-&quot;&gt; &lt;code&gt;getSymbol(Locale.getDefault(Locale.Category.DISPLAY))&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="82106b1468274d95d3bc3f8f544fe6dc67d6ddb0" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="606abad2b5133505b9cc83f29ea9de02de07259a" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="44604b7369a7b284caad58a087b782eff01ebdb4" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(DEFAULT,
     DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(DEFAULT, DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="93c158b0050e237254c666224ac7bcaf16d7bbff" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateTimeInstance(dateStyle,
     timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getDateTimeInstance-int-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateTimeInstance(dateStyle, timeStyle, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="d6f03d8278d1398182bd518aed24f438d88d3fb8" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(DEFAULT,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(DEFAULT, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="2735042011ede9f9d8e7d68812f636df49c94cd7" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getTimeInstance(style,
     Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;dateformat#getTimeInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getTimeInstance(style, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="196d984cffaf2f193ca06157a9274cfd7f1215bd" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;dateformatsymbols#DateFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="0f1bd34565f41c8513456e03db2f6c6ac0e51a19" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;dateformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="e783ca10f86d23a2065defdb07a478293f77186c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt;&lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;decimalformatsymbols#DecimalFormatSymbols-java.util.Locale-&quot;&gt; &lt;code&gt;DecimalFormatSymbols(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="836eb322235d93a845c4d65186757c291f30343c" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;decimalformatsymbols#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="f265ad6b5a3473b6ab1fcfa0421acd7f2e341030" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt;&lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;decimalstyle#of-java.util.Locale-&quot;&gt; &lt;code&gt;of(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="6c97cfdff5e1901a519a07303e8dad0752d86205" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;numberformat#getCurrencyInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="56b1fcca493696e5b47f9ce010400f80002bf476" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;numberformat#getIntegerInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="b56e150222602b5616e14f89404883d82ce20a0d" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;numberformat#getNumberInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="260b6a8a3ca2ebb6c45361e50160c452470d0bfb" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt;&lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;numberformat#getPercentInstance-java.util.Locale-&quot;&gt; &lt;code&gt;getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="d8ab9ad4051f8749dc671f121c1baba34a3a4dd3" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">これは以下のコードと同等です。</target>
        </trans-unit>
        <trans-unit id="a4206946c713acf1e263d89932a265fd04c2332a" translate="yes" xml:space="preserve">
          <source>This is immutable and thread-safe enum.</source>
          <target state="translated">これは不変でスレッドセーフなenumです。</target>
        </trans-unit>
        <trans-unit id="622df1c67821419f61dc684cc374bb330f2dfc9d" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、より一般的な&lt;a href=&quot;propertychangesupport#fireIndexedPropertyChange-java.lang.String-int-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireIndexedPropertyChange(String, int, Object, Object)&lt;/code&gt; &lt;/a&gt;メソッドの便利なラッパーにすぎません。</target>
        </trans-unit>
        <trans-unit id="8f091859fb475e60993901acd750e80b0000f8b9" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、より一般的な&lt;a href=&quot;propertychangesupport#firePropertyChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;firePropertyChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt;メソッドの便利なラッパーにすぎません。</target>
        </trans-unit>
        <trans-unit id="654274011d7392c6bb4f52523cadc6b4ecc88873" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、より一般的な&lt;a href=&quot;propertychangesupport#firePropertyChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;firePropertyChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt;メソッドの便利なラッパーにすぎません。</target>
        </trans-unit>
        <trans-unit id="29632b45e0af7d060aa561dbb3b9f5dbc8f17999" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt;&lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、より一般的な&lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.beans.PropertyChangeEvent-&quot;&gt; &lt;code&gt;fireVetoableChange(PropertyChangeEvent)&lt;/code&gt; &lt;/a&gt;メソッドの便利なラッパーにすぎません。</target>
        </trans-unit>
        <trans-unit id="3fd763055dac8f63ce21cba144a69a2ea4e0ba46" translate="yes" xml:space="preserve">
          <source>This is merely a convenience wrapper around the more general &lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、より一般的な&lt;a href=&quot;vetoablechangesupport#fireVetoableChange-java.lang.String-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;fireVetoableChange(String, Object, Object)&lt;/code&gt; &lt;/a&gt;メソッドの便利なラッパーにすぎません。</target>
        </trans-unit>
        <trans-unit id="6035bf886160a52b44567d3780233698ad7fef73" translate="yes" xml:space="preserve">
          <source>This is merely a hint for programs that wish to be efficient; all readers must be able to read arbitrary regions as specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">これは、効率的になりたいプログラムのヒントにすぎません。すべてのリーダーは、 &lt;code&gt;ImageReadParam&lt;/code&gt; で指定された任意の領域を読み取ることができる必要があります。</target>
        </trans-unit>
        <trans-unit id="827ed3297a34dd0cb92b779cc3567d5e00c35ee8" translate="yes" xml:space="preserve">
          <source>This is not an IPP V1.1 attribute.</source>
          <target state="translated">これはIPP V1.1属性ではありません。</target>
        </trans-unit>
        <trans-unit id="49b6454e8dd1b0a1936c3bfef4fe1e0f09a696e0" translate="yes" xml:space="preserve">
          <source>This is one of the kinds of descriptor returned by a BeanInfo object, which also returns descriptors for properties, method, and events.</source>
          <target state="translated">これは,BeanInfoオブジェクトが返すディスクリプタの種類の1つで,プロパティ,メソッド,イベントのディスクリプタも返します.</target>
        </trans-unit>
        <trans-unit id="f9016a5a41cfd95f1d6a7b81c79228ea30d5fe47" translate="yes" xml:space="preserve">
          <source>This is one year earlier than the minimum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">これは、最小の &lt;code&gt;LocalDateTime&lt;/code&gt; より1年早くなります。これは、ローカルの日付時刻に加えてインスタントに影響を与える &lt;code&gt;ZoneOffset&lt;/code&gt; の範囲を処理するのに十分な値を提供します。また、年の値が &lt;code&gt;int&lt;/code&gt; に収まるように値が選択されます。</target>
        </trans-unit>
        <trans-unit id="babc195db8874dee4e9718f6adf857d6970a0eae" translate="yes" xml:space="preserve">
          <source>This is one year later than the maximum &lt;code&gt;LocalDateTime&lt;/code&gt;. This provides sufficient values to handle the range of &lt;code&gt;ZoneOffset&lt;/code&gt; which affect the instant in addition to the local date-time. The value is also chosen such that the value of the year fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">これは最大 &lt;code&gt;LocalDateTime&lt;/code&gt; より1年遅れています。これは、ローカルの日付時刻に加えてインスタントに影響を与える &lt;code&gt;ZoneOffset&lt;/code&gt; の範囲を処理するのに十分な値を提供します。また、年の値が &lt;code&gt;int&lt;/code&gt; に収まるように値が選択されます。</target>
        </trans-unit>
        <trans-unit id="908753d55bea97c51b086ef58a2e2995a9522905" translate="yes" xml:space="preserve">
          <source>This is ordinarily too costly, but may be &lt;em&gt;more&lt;/em&gt; efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don't want to synchronize traversals, yet need to preclude interference among concurrent threads. The &quot;snapshot&quot; style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt;. The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (&lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;add&lt;/code&gt;) are not supported. These methods throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">これは通常、コストがかかりすぎますが、トラバーサル操作がミューテーションを大幅に上回っている場合は、他の方法&lt;em&gt;より&lt;/em&gt;効率的である可能性があり、トラバーサルを同期できない、または同期したくないが、同時スレッド間の干渉を排除する必要がある場合に役立ちます。 「スナップショット」スタイルのイテレーターメソッドは、イテレーターが作成された時点での配列の状態への参照を使用します。この配列はイテレーターの存続期間中は変更されないため、干渉は不可能であり、イテレーターは &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローしないことが保証されています。イテレーターが作成されてから、イテレーターはリストへの追加、削除、または変更を反映しません。イテレータ自体の要素変更操作（ &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、および &lt;code&gt;add&lt;/code&gt; ）はサポートされていません。これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4de4aa69664f3d7f98d4504ab4ea59cf7595c859" translate="yes" xml:space="preserve">
          <source>This is primarily intended as a base class or support class to be used in implementing other logging &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">これは主に、他のロギング &lt;code&gt;Handlers&lt;/code&gt; 実装で使用される基本クラスまたはサポートクラスとして意図されています。</target>
        </trans-unit>
        <trans-unit id="b91547e40d584ed1b2bea7e9880ab6300f07ef9e" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; but uses values for the day-of-week based on this &lt;code&gt;WeekFields&lt;/code&gt;. The days are numbered from 1 to 7 where the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;first day-of-week&lt;/code&gt;&lt;/a&gt; is assigned the value 1.</source>
          <target state="translated">これは&lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;ChronoField.DAY_OF_WEEK&lt;/code&gt; に&lt;/a&gt;似ていますが、この &lt;code&gt;WeekFields&lt;/code&gt; に基づいて曜日の値を使用します。日には1から7までの番号が付けられ、&lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;first day-of-week&lt;/code&gt; &lt;/a&gt;は値1が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="0799a9f926ef0aa369986515f9873c1cc6c83532" translate="yes" xml:space="preserve">
          <source>This is similar to the method &lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;loadLibrary(String)&lt;/code&gt;&lt;/a&gt;, but it accepts a general file name as an argument rather than just a library name, allowing any file of native code to be loaded.</source>
          <target state="translated">これはメソッド&lt;a href=&quot;runtime#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;loadLibrary(String)&lt;/code&gt; &lt;/a&gt;に似ていますが、ライブラリ名だけでなく、一般的なファイル名を引数として受け入れるため、ネイティブコードの任意のファイルをロードできます。</target>
        </trans-unit>
        <trans-unit id="33d0b5fbca66879c6163d7a3d0c3e4a34783ca59" translate="yes" xml:space="preserve">
          <source>This is the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable, or if no suitable ResourceBundle is available.</source>
          <target state="translated">これは、メッセージ文字列をフォーマットする前にメッセージをローカライズするために使用されるべき ResourceBundle です。メッセージがローカライズできない場合や、適切な ResourceBundle が利用できない場合は、結果は null になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6dabae1b21967bb23bf4f00f6101dc2fdc500c63" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE key managers.</source>
          <target state="translated">これはJSSEキーマネージャの基本インターフェースです。</target>
        </trans-unit>
        <trans-unit id="bba56f23c7c9ee83be45b2eed8efd5e9a7dfb64b" translate="yes" xml:space="preserve">
          <source>This is the base interface for JSSE trust managers.</source>
          <target state="translated">これはJSSEのトラストマネージャーのための基本インターフェースです。</target>
        </trans-unit>
        <trans-unit id="620922410bf39c1c0c1daa8ac6943ea2cc388f04" translate="yes" xml:space="preserve">
          <source>This is the base interface type for amounts of time. An amount is distinct from a date or time-of-day in that it is not tied to any specific point on the time-line.</source>
          <target state="translated">これは時間の量の基本的なインターフェースタイプです。金額は日付や曜日とは異なり、タイムライン上の特定のポイントに結び付けられていません。</target>
        </trans-unit>
        <trans-unit id="ec01a51404d32a88570f2ad643af04f876b7bf9c" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects that are complete enough to be manipulated using plus and minus. It is implemented by those classes that can provide and manipulate information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;. See &lt;a href=&quot;temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; for the read-only version of this interface.</source>
          <target state="translated">これは、プラスとマイナスを使用して操作するのに十分な日付、時刻、オフセットオブジェクトの基本インターフェースタイプです。これは、情報を&lt;a href=&quot;temporalfield&quot;&gt;フィールド&lt;/a&gt;または&lt;a href=&quot;temporalquery&quot;&gt;クエリ&lt;/a&gt;として提供および操作できるクラスによって実装されます。このインターフェースの読み取り専用バージョンについては、&lt;a href=&quot;temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="703bcf283cbcdbff4c645509f86d6c38abfcbe23" translate="yes" xml:space="preserve">
          <source>This is the base interface type for date, time and offset objects. It is implemented by those classes that can provide information as &lt;a href=&quot;temporalfield&quot;&gt;fields&lt;/a&gt; or &lt;a href=&quot;temporalquery&quot;&gt;queries&lt;/a&gt;.</source>
          <target state="translated">これは、日付、時刻、オフセットオブジェクトの基本インターフェイスタイプです。これは、&lt;a href=&quot;temporalfield&quot;&gt;フィールド&lt;/a&gt;または&lt;a href=&quot;temporalquery&quot;&gt;クエリ&lt;/a&gt;として情報を提供できるクラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="8c98dfe1fe2ce5ebcc8dbef53de98caa33b2e98c" translate="yes" xml:space="preserve">
          <source>This is the basic key exception.</source>
          <target state="translated">これが基本キーの例外です。</target>
        </trans-unit>
        <trans-unit id="d6038e5e9a6aab44c79d941693ba0286f3f22fb2" translate="yes" xml:space="preserve">
          <source>This is the basic login exception.</source>
          <target state="translated">これは、基本的なログインの例外です。</target>
        </trans-unit>
        <trans-unit id="9a657413d441e96b7f56d2db4629a07d602752bd" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types.</source>
          <target state="translated">これは、すべてのJava言語の列挙型の共通の基底クラスです。</target>
        </trans-unit>
        <trans-unit id="86d5d50b46f393ff72b89fdb180edc74ecd75014" translate="yes" xml:space="preserve">
          <source>This is the common base class of all Java language enumeration types. More information about enums, including descriptions of the implicitly declared methods synthesized by the compiler, can be found in section 8.9 of</source>
          <target state="translated">これは、すべてのJava言語の列挙型の共通の基底クラスです。コンパイラによって合成された暗黙的に宣言されたメソッドの記述を含む、列挙型についてのより詳しい情報は</target>
        </trans-unit>
        <trans-unit id="e7999052240fa29f6f49f08bfa42fafd0d1ed60d" translate="yes" xml:space="preserve">
          <source>This is the date-time where the discontinuity begins expressed with the 'before' offset. At this instant, the 'after' offset is actually used, therefore the combination of this date-time and the 'before' offset will never occur.</source>
          <target state="translated">これは、'before' オフセットで表現された不連続が始まる日付時間です。この時点では、'after' オフセットが実際に使用されているので、この日付時刻と'before' オフセットの組み合わせは発生しません。</target>
        </trans-unit>
        <trans-unit id="737b59e5cc1f042f439f5ab4ec96d7743c5358df" translate="yes" xml:space="preserve">
          <source>This is the default mode for all features, so that a read including metadata followed by a write including metadata will preserve as much information as possible.</source>
          <target state="translated">これはすべての機能のデフォルトモードで、メタデータを含む読み込みと、それに続くメタデータを含む書き込みが可能な限り多くの情報を保持するようになっています。</target>
        </trans-unit>
        <trans-unit id="27a2264bca908d1a3dfc0a8b67e2d192bde8b531" translate="yes" xml:space="preserve">
          <source>This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let</source>
          <target state="translated">これが辞書順列の定義です。2つの文字列が異なる場合、両方の文字列の有効なインデックスであるインデックスで異なる文字を持っているか、長さが異なるか、またはその両方です。2つの文字列が1つ以上のインデックス位置で異なる文字を持っている場合は</target>
        </trans-unit>
        <trans-unit id="e11662348c78bc3fe8b7e30770a72eb59c1679f5" translate="yes" xml:space="preserve">
          <source>This is the engine scope bindings. By default, a &lt;code&gt;SimpleBindings&lt;/code&gt; is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">これはエンジンスコープバインディングです。デフォルトでは、 &lt;code&gt;SimpleBindings&lt;/code&gt; が使用されます。アクセサメソッドsetBindings、getBindingsは、このフィールドを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6cdf09d60b9159dfd07a85f758f7b5b0c2a021fc" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid Keys (invalid encoding, wrong length, uninitialized, etc).</source>
          <target state="translated">これは、無効なキー(エンコーディングが無効、長さが間違っている、初期化されていないなど)の例外です。</target>
        </trans-unit>
        <trans-unit id="664a30463733160575da0c331e578d8c1f2d4a3b" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid key specifications.</source>
          <target state="translated">これは、無効なキー指定の場合の例外です。</target>
        </trans-unit>
        <trans-unit id="6cd1bb760a87cf38c43b0c5de81b84ac2d84a535" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid or inappropriate algorithm parameters.</source>
          <target state="translated">これは、アルゴリズムパラメータが無効または不適切な場合の例外です。</target>
        </trans-unit>
        <trans-unit id="eb90331dcc7b676ae4aa32ccd44000ad6717006e" translate="yes" xml:space="preserve">
          <source>This is the exception for invalid parameter specifications.</source>
          <target state="translated">パラメータの指定が無効な場合の例外です。</target>
        </trans-unit>
        <trans-unit id="25d7ddc403a91d82aa917f3247a9006d65af997b" translate="yes" xml:space="preserve">
          <source>This is the first date-time after the discontinuity, when the new offset applies.</source>
          <target state="translated">これは、新しいオフセットが適用される非連続性の後の最初の日付時間です。</target>
        </trans-unit>
        <trans-unit id="f7a41d64caa3cfdb1e048821ab3910d9818c9709" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management.</source>
          <target state="translated">これは、鍵管理を扱うすべての操作のための一般的な鍵管理の例外です。</target>
        </trans-unit>
        <trans-unit id="bf2ef16309826b550c7ce4745a8a6f870bc33d8b" translate="yes" xml:space="preserve">
          <source>This is the general key management exception for all operations dealing with key management. Examples of subclasses of KeyManagementException that developers might create for giving more detailed information could include:</source>
          <target state="translated">これは、鍵管理を扱うすべての操作のための一般的な鍵管理例外です。より詳細な情報を提供するために開発者が作成する可能性のある KeyManagementException のサブクラスの例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="92d3b50297fc56af57293a45a3c283351489c1c5" translate="yes" xml:space="preserve">
          <source>This is the general, more flexible metafactory; a streamlined version is provided by &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup,
 String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは一般的で、より柔軟なメタファクトリです。合理化されたバージョンは&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(java.lang.invoke.MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt;によって提供されます。このメソッドの動作の一般的な説明は&lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e91505182be4126c5af1b01bcc868d5ea491c1b8" translate="yes" xml:space="preserve">
          <source>This is the generic ExemptionMechanism exception.</source>
          <target state="translated">これは一般的なExemptionMechanismの例外です。</target>
        </trans-unit>
        <trans-unit id="99e7effb9560ac617ed439fce362d9b254bf5d1e" translate="yes" xml:space="preserve">
          <source>This is the generic KeyStore exception.</source>
          <target state="translated">これは一般的なKeyStoreの例外です。</target>
        </trans-unit>
        <trans-unit id="801316b487c2cd85d868aecbc469985be180cda6" translate="yes" xml:space="preserve">
          <source>This is the generic Message Digest exception.</source>
          <target state="translated">これは一般的なメッセージダイジェスト例外です。</target>
        </trans-unit>
        <trans-unit id="b76e4d69e464c7f1937b0a95e3180dc52c85b711" translate="yes" xml:space="preserve">
          <source>This is the generic Signature exception.</source>
          <target state="translated">これは一般的なSignatureの例外です。</target>
        </trans-unit>
        <trans-unit id="1c3f0b0b32f41381ce44379f5cb04156e9192d14" translate="yes" xml:space="preserve">
          <source>This is the global scope bindings. By default, a null value (which means no global scope) is used. Accessor methods setBindings, getBindings are used to manage this field.</source>
          <target state="translated">これはグローバルスコープのバインディングです。デフォルトでは、NULL値(グローバルスコープがないことを意味します)が使用されます。このフィールドを管理するために、アクセサメソッド setBindings,getBindings が使用されます。</target>
        </trans-unit>
        <trans-unit id="e5da7a96e9ed77d91ce83fa5e0c2d3c3356f842f" translate="yes" xml:space="preserve">
          <source>This is the instant of the discontinuity, which is defined as the first instant that the 'after' offset applies.</source>
          <target state="translated">これは不連続性の瞬間であり、「後」オフセットが適用される最初の瞬間として定義されます。</target>
        </trans-unit>
        <trans-unit id="2c186ccbee16f0419c2016ae00928bddd8a7ccf3" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side.</source>
          <target state="translated">エージェント側でMBeanを操作するためのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="bd295e3366839668f2129d91cb294757200e5960" translate="yes" xml:space="preserve">
          <source>This is the interface for MBean manipulation on the agent side. It contains the methods necessary for the creation, registration, and deletion of MBeans as well as the access methods for registered MBeans. This is the core component of the JMX infrastructure.</source>
          <target state="translated">エージェント側で MBean を操作するためのインターフェイスです。MBeans の作成、登録、削除に必要なメソッドと、登録された MBeans へのアクセス方法が含まれています。JMX インフラストラクチャのコアコンポーネントである。</target>
        </trans-unit>
        <trans-unit id="3caef2258932cdb871defea1f3b66b38e45f843c" translate="yes" xml:space="preserve">
          <source>This is the interface used for representing one entry in an Access Control List (ACL).</source>
          <target state="translated">アクセス制御リスト(ACL)の1つのエントリを表すために使用されるインタフェースです。</target>
        </trans-unit>
        <trans-unit id="48f7efce64d4b1895ee005221d1242197f938904" translate="yes" xml:space="preserve">
          <source>This is the key algorithm for that key. The key algorithm is usually an encryption or asymmetric operation algorithm (such as DSA or RSA), which will work with those algorithms and with related algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.) The name of the algorithm of a key is obtained using the &lt;a href=&quot;key#getAlgorithm--&quot;&gt;&lt;code&gt;getAlgorithm&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これはその鍵の鍵アルゴリズムです。鍵アルゴリズムは通常、暗号化または非対称操作アルゴリズム（DSAやRSAなど）であり、これらのアルゴリズムおよび関連するアルゴリズム（RSAを使用するMD5、RSAを使用するSHA-1、Raw DSAなど）で機能します。キーのアルゴリズムの&lt;a href=&quot;key#getAlgorithm--&quot;&gt; &lt;code&gt;getAlgorithm&lt;/code&gt; &lt;/a&gt;メソッドを使用して取得されます。</target>
        </trans-unit>
        <trans-unit id="dd809badf4082c863429074d3401edf75f48784b" translate="yes" xml:space="preserve">
          <source>This is the main method for class loaders that is being redefined.</source>
          <target state="translated">再定義中のクラスローダーのメインメソッドです。</target>
        </trans-unit>
        <trans-unit id="889f9078f7a00476e777e0e09d47001df3896257" translate="yes" xml:space="preserve">
          <source>This is the name for the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable.</source>
          <target state="translated">これは、メッセージ文字列をフォーマットする前にメッセージをローカライズするために使用されるべき ResourceBundle の名前です。メッセージがローカライズされていない場合は、結果は null になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="76735f0dd1715ad11b7bef5ec50b5a0df3241abe" translate="yes" xml:space="preserve">
          <source>This is the name of the format of the encoded key. It is returned by the &lt;a href=&quot;key#getFormat--&quot;&gt;&lt;code&gt;getFormat&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、エンコードされた鍵のフォーマットの名前です。&lt;a href=&quot;key#getFormat--&quot;&gt; &lt;code&gt;getFormat&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="49769a6086eb6a35292a153192bf3a147ad64c34" translate="yes" xml:space="preserve">
          <source>This is the offset in use before the instant of the transition.</source>
          <target state="translated">これは、遷移の瞬間の前に使用されているオフセットです。</target>
        </trans-unit>
        <trans-unit id="3336f6a5b69cc122c14e4a39dabd5406670f44e9" translate="yes" xml:space="preserve">
          <source>This is the offset in use on and after the instant of the transition.</source>
          <target state="translated">これは、遷移の瞬間以降に使用されるオフセットです。</target>
        </trans-unit>
        <trans-unit id="17db630c5e8a9e913c98f31e592ac067bde6f55b" translate="yes" xml:space="preserve">
          <source>This is the offset of the local date-time from UTC/Greenwich.</source>
          <target state="translated">これは、UTC/グリニッジからのローカル時刻のオフセットです。</target>
        </trans-unit>
        <trans-unit id="4ef3b706de11081e89b9ba52606d129da4202b9a" translate="yes" xml:space="preserve">
          <source>This is the offset of the local time from UTC/Greenwich.</source>
          <target state="translated">これは、UTC/グリニッジからの現地時間のオフセットです。</target>
        </trans-unit>
        <trans-unit id="979acb87fadba3b726da7853124682c019fa4347" translate="yes" xml:space="preserve">
          <source>This is the primary way to access the offset amount. It returns the total of the hours, minutes and seconds fields as a single offset that can be added to a time.</source>
          <target state="translated">これは、オフセット量にアクセスする主な方法です。これは、時間、分、秒のフィールドの合計を、時間に追加できる単一のオフセットとして返します。</target>
        </trans-unit>
        <trans-unit id="6632f7dc2ed6c06c20da5f1a65d5136887759f6c" translate="yes" xml:space="preserve">
          <source>This is the reader to be used for input from scripts. By default, a &lt;code&gt;InputStreamReader&lt;/code&gt; based on &lt;code&gt;System.in&lt;/code&gt; is used and default charset is used by this reader. Accessor methods getReader, setReader are used to manage this field.</source>
          <target state="translated">これは、スクリプトからの入力に使用されるリーダーです。デフォルトでは、 &lt;code&gt;System.in&lt;/code&gt; に基づく &lt;code&gt;InputStreamReader&lt;/code&gt; が使用され、このリーダーではデフォルトの文字セットが使用されます。アクセサメソッドgetReader、setReaderを使用して、このフィールドを管理します。</target>
        </trans-unit>
        <trans-unit id="08fd920b17aff702ea6034c1bebdd6fa96aa2254" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Cipher&lt;/code&gt; object..</source>
          <target state="translated">これは、この &lt;code&gt;Cipher&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="362a26bc3d245df7a2d010ad098ab67af5f1ba2e" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;ExemptionMechanism&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;ExemptionMechanism&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="44689924d94c1486a7d9640da4b3f0035cbf5abc" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyAgreement&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;KeyAgreement&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="551467dd191fa5aef5c311da22739f792a7767ef" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyGenerator&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;KeyGenerator&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="9484af8f721dd283f10e59fe4ca2c142caa75487" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;KeyManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;KeyManagerFactory&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="af57c1c1d0a69b5cdf217e8c1fe51bfa1921cc97" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;Mac&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;Mac&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="7153172d23e14a921e004133f3bec7aa304caf05" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SSLContext&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;SSLContext&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="9570fdde85fff859b0f918774978949b2b648a93" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;SecretKeyFactory&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;SecretKeyFactory&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="e63b3fc817900ea7fafcde912d2710d7f67edc04" translate="yes" xml:space="preserve">
          <source>This is the same name that was specified in one of the &lt;code&gt;getInstance&lt;/code&gt; calls that created this &lt;code&gt;TrustManagerFactory&lt;/code&gt; object.</source>
          <target state="translated">これは、この &lt;code&gt;TrustManagerFactory&lt;/code&gt; オブジェクトを作成した &lt;code&gt;getInstance&lt;/code&gt; 呼び出しの1つで指定された名前と同じです。</target>
        </trans-unit>
        <trans-unit id="6d9f4e9b7cfc383346308adeaf21a1db9d0c63cb" translate="yes" xml:space="preserve">
          <source>This is the standard, streamlined metafactory; additional flexibility is provided by &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;. A general description of the behavior of this method is provided &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは標準で合理化されたメタファクトリです。&lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt;により、柔軟性がさらに向上します。このメソッドの動作の一般的な説明は&lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="08713ab9a869e7d5fc69a3646dc0fdc0be83b7e7" translate="yes" xml:space="preserve">
          <source>This is the super class of all the locale sensitive service provider interfaces (SPIs).</source>
          <target state="translated">これは、ロケールに依存するすべてのサービスプロバイダインタフェース (SPI)のスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="7cf71e1b96731023ae05e625836032d436f13cff" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">これは、Context および DirContext インターフェイスの操作によってスローされるすべての例外のスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="c09719224a14a1f8c021b38f5294d739a940b8e3" translate="yes" xml:space="preserve">
          <source>This is the superclass of all exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass. This exception captures the information pinpointing where the operation failed, such as where resolution last proceeded to.</source>
          <target state="translated">これは、Context および DirContext インターフェースの操作によってスローされるすべての例外のスーパークラスです。失敗の性質は、サブクラスの名前で記述されます。この例外は、操作が失敗した場所を特定する情報 (例えば、最後に解決した場所など)をキャプチャします。</target>
        </trans-unit>
        <trans-unit id="bac966b23fc2541f976ddd7be68a237883504b6e" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces.</source>
          <target state="translated">これは、Context および DirContext インターフェイスの操作によってスローされるセキュリティ関連の例外のスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="6643b141302429d4fea2b066f297c10dbed91915" translate="yes" xml:space="preserve">
          <source>This is the superclass of security-related exceptions thrown by operations in the Context and DirContext interfaces. The nature of the failure is described by the name of the subclass.</source>
          <target state="translated">これは、Context および DirContext インターフェースの操作によってスローされるセキュリティ関連の例外のスーパークラスです。失敗の性質は、サブクラスの名前で記述されます。</target>
        </trans-unit>
        <trans-unit id="6080b203c70f7a616bcedbc5fd678fce4238c455" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output errors from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.err&lt;/code&gt; is used. Accessor methods getErrorWriter, setErrorWriter are used to manage this field.</source>
          <target state="translated">スクリプトからエラーを出力するためのライターです。デフォルトでは、 &lt;code&gt;System.err&lt;/code&gt; に基づく &lt;code&gt;PrintWriter&lt;/code&gt; が使用されます。アクセサメソッドgetErrorWriter、setErrorWriterは、このフィールドを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="15af96f510cf6e282b8213079f3b883baccf707e" translate="yes" xml:space="preserve">
          <source>This is the writer to be used to output from scripts. By default, a &lt;code&gt;PrintWriter&lt;/code&gt; based on &lt;code&gt;System.out&lt;/code&gt; is used. Accessor methods getWriter, setWriter are used to manage this field.</source>
          <target state="translated">スクリプトからの出力に使用するライターです。デフォルトでは、 &lt;code&gt;System.out&lt;/code&gt; に基づく &lt;code&gt;PrintWriter&lt;/code&gt; が使用されます。アクセサメソッドgetWriter、setWriterは、このフィールドを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8ee9c9da35fb85a4d327067b64bc367ee4905caa" translate="yes" xml:space="preserve">
          <source>This is typically used for formatting and parsing a two digit year.</source>
          <target state="translated">これは通常、2桁の年をフォーマットして解析するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4f4575371195406b5c199ded211735094638a4eb" translate="yes" xml:space="preserve">
          <source>This is used to lookup any part of the formatter needing specific localization, such as the text or localized pattern.</source>
          <target state="translated">これは、テキストやローカライズされたパターンなど、特定のローカライズを必要とするフォーマッタの任意の部分を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0422da1a451403f134567c7c9f1705c12666722f" translate="yes" xml:space="preserve">
          <source>This is useful if an existing KeyStore object needs to be used with Builder-based APIs.</source>
          <target state="translated">これは、既存のKeyStoreオブジェクトをBuilderベースのAPIで使用する必要がある場合に便利です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
