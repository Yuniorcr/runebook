<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="28393cbfd67002d6ad36a08762b2e38653599b68" translate="yes" xml:space="preserve">
          <source>The two characters are the same (as compared by the &lt;code&gt;==&lt;/code&gt; operator)</source>
          <target state="translated">2つの文字が同じである（ &lt;code&gt;==&lt;/code&gt; 演算子と比較して）</target>
        </trans-unit>
        <trans-unit id="4a8e8cdc02eb816448907e6ad7e73c37517a03bf" translate="yes" xml:space="preserve">
          <source>The two possible authentication types for a resource.</source>
          <target state="translated">リソースに対して可能な2つの認証タイプ。</target>
        </trans-unit>
        <trans-unit id="8562722983b5297a255d72d065fc4efeeada15b3" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal.</source>
          <target state="translated">残りの要素の2つの配列は、その開始位置から独立して考慮され、点方向に等しくなる。</target>
        </trans-unit>
        <trans-unit id="1e9cc57517a9438e11a17414782fcda2ca6c93d7" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Double.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのdouble要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Double.isNaN（a）&amp;amp;&amp;amp; Double.isNaN（b））。&lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Double.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="f74bb945ec6a22ab7838a324a183e657cee9de65" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Float.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのfloat要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Float.isNaN（a）&amp;amp;&amp;amp; Float.isNaN（b））。&lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Float.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="c0ea19c65ec77bbed855a0ec57d24fe61a6f3cfc" translate="yes" xml:space="preserve">
          <source>The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the last parameter type of the adapter will be &lt;code&gt;arrayType&lt;/code&gt;, even if the target has a different last parameter type.</source>
          <target state="translated">アダプターのタイプと動作はターゲットのタイプと動作と同じですが、特定の &lt;code&gt;invoke&lt;/code&gt; 要求と &lt;code&gt;asType&lt;/code&gt; 要求により、末尾の位置引数がターゲットの末尾パラメーターに収集される可能性がある点が異なります。また、ターゲットの最後のパラメータータイプが異なる場合でも、アダプターの最後のパラメータータイプは &lt;code&gt;arrayType&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ff6bb0cadf07db39ec6be40e5dae1eed885b4134" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="translated">タイプとエンコーディングについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt;CertificateFactoryセクション&lt;/a&gt;と&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;CertPathエンコーディングセクション&lt;/a&gt;で説明しています。他のタイプまたはエンコーディングがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0aad1afcd781464b76996d424e8348249f28ac" translate="yes" xml:space="preserve">
          <source>The type fingerprint that is set to indicate serialization compatibility with a previous version of the type.</source>
          <target state="translated">以前のバージョンの型とのシリアライズ互換性を示すために設定されている型のフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="47aacc9e53df6990e6cd21e34ac8f46081f60e02" translate="yes" xml:space="preserve">
          <source>The type is a &lt;code&gt;String&lt;/code&gt; that identifies the type of &lt;code&gt;Certificate&lt;/code&gt;s in the certification path. For each certificate &lt;code&gt;cert&lt;/code&gt; in a certification path &lt;code&gt;certPath&lt;/code&gt;, &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">タイプは、証明書パス内の &lt;code&gt;Certificate&lt;/code&gt; のタイプを識別する &lt;code&gt;String&lt;/code&gt; です。証明書パス &lt;code&gt;certPath&lt;/code&gt; 内の証明書証明 &lt;code&gt;cert&lt;/code&gt; ごとに、 &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="3992f3a6c4f1b89ac824af3b12e6534482315701" translate="yes" xml:space="preserve">
          <source>The type is an interface type and not an annotation type, enum, or class.</source>
          <target state="translated">この型はインターフェイス型であり、注釈型、列挙型、クラスではありません。</target>
        </trans-unit>
        <trans-unit id="dbbee8087c3ba28222fa95426623818374828807" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt;&lt;code&gt;Redirect.INHERIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt; &lt;code&gt;Redirect.INHERIT&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="c0ad9640a3999591dd1d2029f7ecfcb72b0d98b2" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="f56f95d6997ec10a60d61b49368aad5c85b0c93d" translate="yes" xml:space="preserve">
          <source>The type of MIDI file.</source>
          <target state="translated">MIDIファイルの種類。</target>
        </trans-unit>
        <trans-unit id="127e2dcfa435659f04a5c90d26c476f9ace2f0e1" translate="yes" xml:space="preserve">
          <source>The type of a &lt;a href=&quot;processbuilder.redirect&quot;&gt;&lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect&quot;&gt; &lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="19a111fbf1a4085482090a96e6a31a6562e4dbf5" translate="yes" xml:space="preserve">
          <source>The type of a metric, one of the strings &quot;counter&quot; or &quot;gauge&quot;. A metric is a measurement exported by an MBean, usually an attribute but sometimes the result of an operation. A metric that is a &lt;em&gt;counter&lt;/em&gt; has a value that never decreases except by being reset to a starting value. Counter metrics are almost always non-negative integers. An example might be the number of requests received. A metric that is a &lt;em&gt;gauge&lt;/em&gt; has a numeric value that can increase or decrease. Examples might be the number of open connections or a cache hit rate or a temperature reading.</source>
          <target state="translated">指標のタイプ。文字列「counter」または「gauge」のいずれか。メトリックは、MBeanによってエクスポートされる測定値であり、通常は属性ですが、操作の結果である場合もあります。&lt;em&gt;カウンタである&lt;/em&gt;メトリックには、開始値にリセットされることを除いて、決して減少しない値があります。カウンタメトリックは、ほとんどの場合、負でない整数です。たとえば、受け取ったリクエストの数などです。&lt;em&gt;ゲージである&lt;/em&gt;メトリックには、増減できる数値があります。たとえば、開いている接続の数、キャッシュヒット率、温度の読み取り値などです。</target>
        </trans-unit>
        <trans-unit id="aa5066ac5677ba94a729db439698f3123b5e4800" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt;&lt;code&gt;Redirect.appendTo(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt; &lt;code&gt;Redirect.appendTo(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="b6c13fdf29d3471638747b7836301b890025ac8d" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt;&lt;code&gt;Redirect.from(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt; &lt;code&gt;Redirect.from(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="1b7eaaee0ed7fe469cb15b4032d95ee3779bbd61" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt;&lt;code&gt;Redirect.to(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt; &lt;code&gt;Redirect.to(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="62d360876f66c4619f7a66dbb6e3f42e2c3d1fb3" translate="yes" xml:space="preserve">
          <source>The type of the call site is permanently set to the given type.</source>
          <target state="translated">コールサイトのタイプは、与えられたタイプに恒久的に設定されます。</target>
        </trans-unit>
        <trans-unit id="0f38c67fdfb625338235f720fe145ed3f504d4e9" translate="yes" xml:space="preserve">
          <source>The type of the entity requesting authentication.</source>
          <target state="translated">認証を要求するエンティティのタイプ。</target>
        </trans-unit>
        <trans-unit id="05a0aedd8679b410dfd61aa7d127e3dcd930c83d" translate="yes" xml:space="preserve">
          <source>The type of the new method handle will drop the types for the bound parameters from the original target type, since the new method handle will no longer require those arguments to be supplied by its callers.</source>
          <target state="translated">新しいメソッドハンドルの型は、元のターゲット型からバインドされたパラメータの型を削除します。</target>
        </trans-unit>
        <trans-unit id="689485c1e5985a3231bd5ec529f55e5aa04a546f" translate="yes" xml:space="preserve">
          <source>The type of the new target must be &lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;equal to&lt;/a&gt; the type of the old target.</source>
          <target state="translated">新しいターゲットのタイプは、古いターゲットのタイプと&lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;同じで&lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="a890ec2d11b23f48d0302a6f1ff678bb8116b7db" translate="yes" xml:space="preserve">
          <source>The type of the observed attribute is not correct.</source>
          <target state="translated">観測された属性の型が正しくありません。</target>
        </trans-unit>
        <trans-unit id="c37d7b8236ac8a0ff81b6ebd996e68b65203530e" translate="yes" xml:space="preserve">
          <source>The type of the returned invoker will not be the given &lt;code&gt;type&lt;/code&gt;, but rather will have all parameters except the first &lt;code&gt;leadingArgCount&lt;/code&gt; replaced by a single array of type &lt;code&gt;Object[]&lt;/code&gt;, which will be the final parameter.</source>
          <target state="translated">返される呼び出し側の型は、指定された &lt;code&gt;type&lt;/code&gt; ではなく、最初の &lt;code&gt;leadingArgCount&lt;/code&gt; を除くすべてのパラメーターが、最後のパラメーターとなる &lt;code&gt;Object[]&lt;/code&gt; 型の単一の配列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="3713b00b65f5a644a274c8162bd2331606919143" translate="yes" xml:space="preserve">
          <source>The type of this event.</source>
          <target state="translated">このイベントの種類。</target>
        </trans-unit>
        <trans-unit id="efb86a4d23b927b4d7779a5f3229d3b046c17f0c" translate="yes" xml:space="preserve">
          <source>The types are compared for equality with their case ignored.</source>
          <target state="translated">型は、大文字小文字を無視して等しくなるように比較されます。</target>
        </trans-unit>
        <trans-unit id="59391c7d69614504e0086f4dff6684db3e9ee2b5" translate="yes" xml:space="preserve">
          <source>The types of notifications emitted by &lt;code&gt;MemoryMXBean&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; によって発行される通知のタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="444baca227e7a21fbc93ead1d887a79a164df63b" translate="yes" xml:space="preserve">
          <source>The typical language value is a two or three-letter language code as defined in ISO639.</source>
          <target state="translated">典型的な言語値は、ISO639で定義されている2文字または3文字の言語コードです。</target>
        </trans-unit>
        <trans-unit id="5c660145e6f646b3735ac4f7205ca9ace38822eb" translate="yes" xml:space="preserve">
          <source>The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code.</source>
          <target state="translated">典型的な地域値は、2文字のISO3166コードまたは3桁のUN M.49エリアコードです。</target>
        </trans-unit>
        <trans-unit id="17cdcc250877b85946cb955da511369645e967cc" translate="yes" xml:space="preserve">
          <source>The typical script value is a four-letter script code as defined by ISO 15924.</source>
          <target state="translated">典型的なスクリプト値は、ISO 15924で定義されている4文字のスクリプトコードです。</target>
        </trans-unit>
        <trans-unit id="121414ae83882d6978c3061ae2ccaf0b4cd3a7f5" translate="yes" xml:space="preserve">
          <source>The underlying character-input stream.</source>
          <target state="translated">下位の文字入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="66e9f85ce07195fbd2dc5d2f06d3273076e5b33d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream of this &lt;code&gt;PrintWriter&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PrintWriter&lt;/code&gt; の基本となる文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="997090c1014b7704de737ddf5326441d3f6eab7d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream.</source>
          <target state="translated">下位の文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="48e3e0bfbed1be484de7c256629bbfc344226e62" translate="yes" xml:space="preserve">
          <source>The underlying field's value is obtained as follows:</source>
          <target state="translated">基礎となるフィールドの値は、以下のようにして得られます。</target>
        </trans-unit>
        <trans-unit id="6b7dedd2916acda5e4ddd9bf5218b5756a52e4ca" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dsts ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; と &lt;code&gt;dsts ByteBuffer&lt;/code&gt; 使用する基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="028d275e77138b148a731ed31ec7168887398dc7" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;srcs&lt;/code&gt; and &lt;code&gt;dst ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;srcs&lt;/code&gt; と &lt;code&gt;dst ByteBuffer&lt;/code&gt; によって使用される基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="8bcc6a3ebcd69bf1c22f30e41fee2405130dbb8f" translate="yes" xml:space="preserve">
          <source>The underlying operating system is queried for an update as to the readiness of each remaining channel to perform any of the operations identified by its key's interest set as of the moment that the selection operation began. For a channel that is ready for at least one such operation, one of the following two actions is performed:</source>
          <target state="translated">基底となるオペレーティングシステムは、選択操作が開始された時点で、残りの各チャネルがそのキーのインタレストセットによって特定された操作のいずれかを実行する準備ができているかどうかを更新するために照会される。少なくとも1つの操作の準備ができているチャネルについては、以下の2つのアクションのうちの1つが実行される。</target>
        </trans-unit>
        <trans-unit id="5fac40f1f061f6b657772e9f893915f23de48bf5" translate="yes" xml:space="preserve">
          <source>The underlying output stream to be filtered.</source>
          <target state="translated">フィルタリングされる基礎となる出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="1a5764b11a39a7b859946ca022bc7546c2758d6c" translate="yes" xml:space="preserve">
          <source>The underlying signing algorithm is designated by the Signature object passed to the constructor and the &lt;code&gt;verify&lt;/code&gt; method. A typical usage for signing is the following:</source>
          <target state="translated">基本となる署名アルゴリズムは、コンストラクタに渡されたSignatureオブジェクトと &lt;code&gt;verify&lt;/code&gt; メソッドによって指定されます。署名の一般的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1a0c62e15b608a731329638c7175e259e5b752ff" translate="yes" xml:space="preserve">
          <source>The underscore character &lt;code&gt;'_'&lt;/code&gt; (&lt;code&gt;'\u005f'&lt;/code&gt;, &lt;small&gt;LOW LINE&lt;/small&gt;).</source>
          <target state="translated">アンダースコア文字 &lt;code&gt;'_'&lt;/code&gt; （ &lt;code&gt;'\u005f'&lt;/code&gt; 、&lt;small&gt;LOW LINE&lt;/small&gt;）。</target>
        </trans-unit>
        <trans-unit id="cae92f9fce61041c312223fede1e34d5be987d37" translate="yes" xml:space="preserve">
          <source>The uniquely named method is allowed to be multiply declared, with distinct type descriptors. (E.g., it can be overloaded, or can possess bridge methods.) All such declarations are connected directly to the target method handle. Argument and return types are adjusted by &lt;code&gt;asType&lt;/code&gt; for each individual declaration.</source>
          <target state="translated">一意に名前が付けられたメソッドは、異なる型記述子を使用して、複数宣言することができます。（たとえば、オーバーロードしたり、ブリッジメソッドを所有したりできます。）そのような宣言はすべて、ターゲットメソッドハンドルに直接接続されます。引数と戻り値の型は、個々の宣言の &lt;code&gt;asType&lt;/code&gt; によって調整されます。</target>
        </trans-unit>
        <trans-unit id="5191f12612fb84b7bbf9829ac12d3dce772f7d2d" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other units throw an exception.</source>
          <target state="translated">単位には、残りのない標準日の&lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;に分割される期間が必要です。これには、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; で&lt;/a&gt;提供されるすべての時間単位が含まれます。他のユニットは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="5122174d5f83d404ea9a42f52e7c1c4179e0a65a" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="d2ac0d6412e7c41ea9d12640bb3ba8932b0b5834" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="1f111a51a42acb493693efa131e93c6ce9b6b10b" translate="yes" xml:space="preserve">
          <source>The unit that represents week-based-years for the purpose of addition and subtraction.</source>
          <target state="translated">足し算・引き算を目的とした週単位の年を表す単位。</target>
        </trans-unit>
        <trans-unit id="27ed7bbeff7184c6ce008c19d55f08c8ed276069" translate="yes" xml:space="preserve">
          <source>The unit works using double dispatch. Client code calls methods on a date-time like &lt;code&gt;LocalDateTime&lt;/code&gt; which check if the unit is a &lt;code&gt;ChronoUnit&lt;/code&gt;. If it is, then the date-time must handle it. Otherwise, the method call is re-dispatched to the matching method in this interface.</source>
          <target state="translated">ユニットはダブルディスパッチを使用して動作します。クライアントコードは、 &lt;code&gt;ChronoUnit&lt;/code&gt; ような日付時刻にメソッドを呼び出し、ユニットが &lt;code&gt;LocalDateTime&lt;/code&gt; かどうかを確認します。そうである場合、日時はそれを処理する必要があります。それ以外の場合、メソッド呼び出しは、このインターフェースの一致するメソッドに再ディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="337c6ca2e533607b16bd03301e040526d12b467c" translate="yes" xml:space="preserve">
          <source>The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt;&quot;seconds&quot;&lt;/code&gt;.</source>
          <target state="translated">属性、パラメーター、または操作の戻り値が測定される単位（例えば、 &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; または &lt;code&gt;&quot;seconds&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5d174c8b0683065fbf044b493c3ef8ed79dc428" translate="yes" xml:space="preserve">
          <source>The unknown conversion.</source>
          <target state="translated">未知の変換。</target>
        </trans-unit>
        <trans-unit id="c132eeb914111eef836f7b17954aa6d06ab7144e" translate="yes" xml:space="preserve">
          <source>The unmatched format specifier</source>
          <target state="translated">マッチしないフォーマット指定子</target>
        </trans-unit>
        <trans-unit id="89d7d1f2a0c6d2d00918acd6dc9254422a7dc31f" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file.</source>
          <target state="translated">アンパッカーエンジンは、パックされたストリームをJARファイルに変換します。</target>
        </trans-unit>
        <trans-unit id="c2a58d4aa16389063e1d4593b8080b538ec67075" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker--&quot;&gt;&lt;code&gt;Pack200.newUnpacker()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">unpackerエンジンは、パックされたストリームをJARファイルに変換します。エンジンのインスタンスは&lt;a href=&quot;pack200#newUnpacker--&quot;&gt; &lt;code&gt;Pack200.newUnpacker()&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="101f5ee99703bb9848ebdb64b9a981d2574364ad" translate="yes" xml:space="preserve">
          <source>The unpacker's progress as a percentage, as periodically updated by the unpacker. Values of 0 - 100 are normal, and -1 indicates a stall. Progress can be monitored by polling the value of this property.</source>
          <target state="translated">アンパッカーによって定期的に更新されるアンパッカーの進捗状況をパーセンテージで表したもの。0 ~ 100 の値は正常であり、-1 は失速を示します。進捗状況は、このプロパティの値をポーリングすることで監視することができます。</target>
        </trans-unit>
        <trans-unit id="7b61a518de7509b59d212e291756906cb8ecb6f4" translate="yes" xml:space="preserve">
          <source>The unqualified name of a proxy class is unspecified. The space of class names that begin with the string &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; should be, however, reserved for proxy classes.</source>
          <target state="translated">プロキシクラスの非修飾名は指定されていません。ただし、文字列 &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; で始まるクラス名のスペースは、プロキシクラス用に予約する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb7964c4b4dc617463023ff4866e3bcc872cfffc" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="90b3bb257b666565307d76750b50c74e6f924841" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="43fc0c46437e63e9c1bc27fd8276c60615fc1eec" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="9ef8dc1e7e596de25447c72effc2b78e2e9eda78" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="054a6f2331c22a50fc40ea825d5bbe23a0c2752a" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="4adf2f37edf13f4b7e5a873d42af291756d4bd27" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="6060d22783b5de73678a070487c0c6a5f000dbdf" translate="yes" xml:space="preserve">
          <source>The unusual compilation and linkage behavior of &lt;code&gt;invokeExact&lt;/code&gt; and plain &lt;code&gt;invoke&lt;/code&gt; is referenced by the term &lt;em&gt;signature polymorphism&lt;/em&gt;. As defined in the Java Language Specification, a signature polymorphic method is one which can operate with any of a wide range of call signatures and return types.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; とplain &lt;code&gt;invoke&lt;/code&gt; の異常なコンパイルとリンケージの振る舞いは、&lt;em&gt;署名ポリモーフィズム&lt;/em&gt;という用語で参照されます。Java言語仕様で定義されているように、シグネチャポリモーフィックメソッドは、さまざまな呼び出しシグネチャと戻り値の型のいずれかで動作できるメソッドです。</target>
        </trans-unit>
        <trans-unit id="d313d97487f3c7f3cbc749779eb54e77639e2d72" translate="yes" xml:space="preserve">
          <source>The updated CompositeName, not a new one. Cannot be null.</source>
          <target state="translated">新しいコンポジット名ではなく、更新されたコンポジット名です。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="9a42c811bccd6dd7e2f5a6b9d96175190ed03196" translate="yes" xml:space="preserve">
          <source>The updated CompoundName, not a new one. Cannot be null.</source>
          <target state="translated">新しいものではなく、更新されたCompoundNameです。null にすることはできません。</target>
        </trans-unit>
        <trans-unit id="b0a53b9e80856c6692659d4301653ca2c511f3f2" translate="yes" xml:space="preserve">
          <source>The updated LdapName, not a new instance. Cannot be null.</source>
          <target state="translated">新しいインスタンスではなく、更新されたLdapName。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="7ff1724ae2775960bc3b129d71cefa43e6c05193" translate="yes" xml:space="preserve">
          <source>The updated name (not a new instance).</source>
          <target state="translated">更新された名前(新しいインスタンスではありません)。</target>
        </trans-unit>
        <trans-unit id="9e5507eac7b1c8f8528ce3b0b75192849c664597" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'a'&lt;/code&gt;. The entire string representing the number will be converted to upper case including the &lt;code&gt;'x'&lt;/code&gt; (&lt;code&gt;'\u0078'&lt;/code&gt;) and &lt;code&gt;'p'&lt;/code&gt; (&lt;code&gt;'\u0070'&lt;/code&gt; and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （ &lt;code&gt;'\u0078'&lt;/code&gt; ）および &lt;code&gt;'p'&lt;/code&gt; （ &lt;code&gt;'\u0070'&lt;/code&gt; およびすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13c5bb73738331e23e3b8d0a094ce01abeb63f19" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'b'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="322e75fb849065f4ca52a6addf60e0ac9b017449" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'c'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'c'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="a34a284aaae73cba16fd4c94692a85c43d38c457" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'e'&lt;/code&gt;. The exponent symbol will be &lt;code&gt;'E'&lt;/code&gt; (&lt;code&gt;'\u0045'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'e'&lt;/code&gt; の大文字のバリアント。指数記号は &lt;code&gt;'E'&lt;/code&gt; （ &lt;code&gt;'\u0045'&lt;/code&gt; ）になります。</target>
        </trans-unit>
        <trans-unit id="8e4023159140f742a67dc9be0c2aef26ca29decf" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'g'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'g'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="0a797a98a3e9c41bf7072b33c0c5562f599482a3" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'h'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'h'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="07e68ff070c96b0a5cf38a9497cd5a90681077a0" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'s'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'s'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="6d089cd4117c5c549f52accd43d02871b2e37215" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'t'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'t'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="a786ff8547a2a8f3e96b122c7d43bbbbe0cec7bd" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'x'&lt;/code&gt;. The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'x'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （存在する場合）とすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; 〜 &lt;code&gt;'\u0066'&lt;/code&gt; ）を含む&lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;大文字に&lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="654f2289487545b8f3928941dfdc0d162440284e" translate="yes" xml:space="preserve">
          <source>The uppercase letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005a'&lt;/code&gt;),</source>
          <target state="translated">大文字の &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; （ &lt;code&gt;'\u0041'&lt;/code&gt; から &lt;code&gt;'\u005a'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="4330d8d1977e43b23dd07bee2099b3f4b622bfa6" translate="yes" xml:space="preserve">
          <source>The url string has the following expected structure.</source>
          <target state="translated">url文字列は以下のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="4af9a221919250af2a20e619455ccc9a51cf8601" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;synchronized&lt;/code&gt; methods or statements provides access to the implicit monitor lock associated with every object, but forces all lock acquisition and release to occur in a block-structured way: when multiple locks are acquired they must be released in the opposite order, and all locks must be released in the same lexical scope in which they were acquired.</source>
          <target state="translated">使用 &lt;code&gt;synchronized&lt;/code&gt; メソッドや文では、すべてのオブジェクトに関連付けられた暗黙の監視ロックへのアクセスを提供しますが、すべてのロック取得を強制し、ブロック構造の形で発生するリリース：複数のロックを取得したときには逆の順序で解放されなければならない、とすべてのロックは、それらが取得されたのと同じ字句スコープで解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="63a7e152cb80dbfba69bf4ce931d07a2966b3c06" translate="yes" xml:space="preserve">
          <source>The use of a &lt;code&gt;Supplier&lt;/code&gt; in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">この形式で &lt;code&gt;Supplier&lt;/code&gt; を使用すると、ソースへの潜在的な干渉の範囲を削減する間接レベルが提供されます。ターミナル操作が開始した後にのみサプライヤが呼び出されるため、ターミナル操作の開始までのソースへの変更は、ストリーム結果に反映されます。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="454af7b03b7693d82fd0e4233351ee60b0851423" translate="yes" xml:space="preserve">
          <source>The user can also, when creating his own MBean relation class, have it extending RelationSupport, to retrieve the implementations of required interfaces (see below).</source>
          <target state="translated">また、ユーザーは、自分自身のMBean関係クラスを作成する際に、必要なインターフェースの実装を取得するために、それをRelationSupportを拡張することができます(以下を参照してください)。</target>
        </trans-unit>
        <trans-unit id="df61ad83755512938c568feb25a069781cb800fc" translate="yes" xml:space="preserve">
          <source>The user data object. It is used for whatever data the notification source wishes to communicate to its consumers.</source>
          <target state="translated">ユーザーデータオブジェクト。これは、通知ソースが消費者に通信したいデータのために使用されます。</target>
        </trans-unit>
        <trans-unit id="a90065a65c9a5ea16238f84c083e26d1b911ff17" translate="yes" xml:space="preserve">
          <source>The user-defined authenticator instance is passed to the connector server in the environment map as the value of the attribute &lt;a href=&quot;jmxconnectorserver#AUTHENTICATOR&quot;&gt;&lt;code&gt;JMXConnectorServer.AUTHENTICATOR&lt;/code&gt;&lt;/a&gt;. For connector servers that use only this authentication system, if this attribute is not present or its value is &lt;code&gt;null&lt;/code&gt; then no user authentication will be performed and full access to the methods exported by the &lt;code&gt;MBeanServerConnection&lt;/code&gt; object will be allowed.</source>
          <target state="translated">ユーザー定義のオーセンティケーターインスタンスは、&lt;a href=&quot;jmxconnectorserver#AUTHENTICATOR&quot;&gt; &lt;code&gt;JMXConnectorServer.AUTHENTICATOR&lt;/code&gt; &lt;/a&gt;属性の値として環境マップ内のコネクターサーバーに渡されます。この認証システムのみを使用するコネクタサーバーの場合、この属性が存在しないかその値が &lt;code&gt;null&lt;/code&gt; の場合、ユーザー認証は実行されず、 &lt;code&gt;MBeanServerConnection&lt;/code&gt; オブジェクトによってエクスポートされたメソッドへのフルアクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="c914f1ee26eb2ebcd79dbec38073d9056bf25e3d" translate="yes" xml:space="preserve">
          <source>The user-information component of a URI, if defined, only contains characters in the</source>
          <target state="translated">URIのユーザー情報コンポーネントは、定義されている場合には</target>
        </trans-unit>
        <trans-unit id="03440d126078d0084be21d674c68227ce0cda463" translate="yes" xml:space="preserve">
          <source>The username/password, or null if one can't be gotten.</source>
          <target state="translated">ユーザ名/パスワード、または取得できない場合はnull。</target>
        </trans-unit>
        <trans-unit id="ffbb7618ff4fd4460738f69cf1f76b5b5baf3e9a" translate="yes" xml:space="preserve">
          <source>The usual way to create an RMI connector server is to supply an RMI connector address to the method &lt;a href=&quot;../jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;. The MBean server to which the connector server is attached can be specified as a parameter to that method. Alternatively, the connector server can be registered as an MBean in that MBean server.</source>
          <target state="translated">RMIコネクタサーバーを作成する通常の方法は、メソッド&lt;a href=&quot;../jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; に&lt;/a&gt; RMIコネクタアドレスを提供することです。コネクタサーバーが接続されているMBeanサーバーは、そのメソッドのパラメータとして指定できます。または、コネクタサーバーをMBeanサーバーにMBeanとして登録することもできます。</target>
        </trans-unit>
        <trans-unit id="ee8fbb7c2ff253065f61fe611df6643442f33374" translate="yes" xml:space="preserve">
          <source>The utility method to check whether a host name is in a domain or not.</source>
          <target state="translated">ホスト名がドメイン内にあるかどうかを調べるユーティリティーメソッド。</target>
        </trans-unit>
        <trans-unit id="ec277891051115eca19f87e67b309f58b25f882b" translate="yes" xml:space="preserve">
          <source>The valid-operation set</source>
          <target state="translated">有効な操作セット</target>
        </trans-unit>
        <trans-unit id="6da16c658a7a0e79e77c0c1ee20586931f71b8d4" translate="yes" xml:space="preserve">
          <source>The validity period consists of two date/time values: the first and last dates (and times) on which the certificate is valid. It is defined in ASN.1 as:</source>
          <target state="translated">有効期間は、証明書が有効である最初の日付と最後の日付(および時刻)の 2 つの日時の値で構成される。ASN.1では次のように定義されている。</target>
        </trans-unit>
        <trans-unit id="9c29678c035dc87e004d700016db31124565f565" translate="yes" xml:space="preserve">
          <source>The value 0, with a scale of 0.</source>
          <target state="translated">値は0で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="7ba5543468adcdfdcdc64230eac64e84fb598f9f" translate="yes" xml:space="preserve">
          <source>The value 1, with a scale of 0.</source>
          <target state="translated">値1で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="88131b97bd60cff8f031f2c61496c018172d0043" translate="yes" xml:space="preserve">
          <source>The value 10, with a scale of 0.</source>
          <target state="translated">値は10で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="2493c3149038a8c099fab7e9e4311ce1d4deb4f4" translate="yes" xml:space="preserve">
          <source>The value associated with the key must be a non-empty string. A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">鍵に関連付けられた値は、空でない文字列でなければならない。プロバイダが、指定された暗号化サービスのために指定されたアルゴリズムまたはタイプを実装し、その実装が、指定された属性名/値のペアで表される制約を満たす場合、プロバイダは、この選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="391e2180db915adfa1b2cf6e71bfe20db996f02f" translate="yes" xml:space="preserve">
          <source>The value associated with the key must be an empty string.</source>
          <target state="translated">キーに関連付けられた値は空の文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7bb6a82fa77874feef436d7637c68a730afd2083" translate="yes" xml:space="preserve">
          <source>The value being monitored can be a simple value contained within a complex type. For example, the &lt;a href=&quot;../../../java/lang/management/memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt; defined in &lt;code&gt;java.lang.management&lt;/code&gt; has an attribute &lt;code&gt;HeapMemoryUsage&lt;/code&gt; of type &lt;a href=&quot;../../../java/lang/management/memoryusage&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;. To monitor the amount of</source>
          <target state="translated">監視される値は、複合型に含まれる単純な値にすることができます。たとえば、 &lt;code&gt;java.lang.management&lt;/code&gt; で定義されている&lt;a href=&quot;../../../java/lang/management/memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; に&lt;/a&gt;は、タイプ&lt;a href=&quot;../../../java/lang/management/memoryusage&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; の&lt;/a&gt;属性 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; があります。量を監視するには</target>
        </trans-unit>
        <trans-unit id="79fbee1710c4e5fba3cf79c5bfcda285dfaed740" translate="yes" xml:space="preserve">
          <source>The value can be anything the server chooses to send. Its value is probably of interest only to the server. The cookie's value can be changed after creation with the &lt;code&gt;setValue&lt;/code&gt; method.</source>
          <target state="translated">値は、サーバーが送信することを選択したものにすることができます。その値はおそらくサーバーのみに関係します。Cookieの値は、作成後に &lt;code&gt;setValue&lt;/code&gt; メソッドで変更できます。</target>
        </trans-unit>
        <trans-unit id="0402397f26735b2ed2400f8ddcfcc924e0ce9a91" translate="yes" xml:space="preserve">
          <source>The value can be retrieved by calling the &lt;code&gt;get&lt;/code&gt; method with a key that is equal to the original key.</source>
          <target state="translated">値は、元のキーと等しいキーで &lt;code&gt;get&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="2b849d5ab1b9e466df1b5b353714d586423cc336" translate="yes" xml:space="preserve">
          <source>The value element MUST have the name of the code generator. The recommended convention is to use the fully qualified name of the code generator. For example: com.acme.generator.CodeGen.</source>
          <target state="translated">value 要素には、コード・ジェネレータの名前を持たなければならない[MUST]。推奨される規約は、コード・ジェネレータの完全修飾名を使用することです。例:com.acme.generator.CodeGen。</target>
        </trans-unit>
        <trans-unit id="92457a36cc7103fbd6b5d7894167b1422c935465" translate="yes" xml:space="preserve">
          <source>The value for the Domain attribute contains no embedded dots, and the value is not .local.</source>
          <target state="translated">Domain属性の値には埋め込みドットが含まれておらず、値は.localではありません。</target>
        </trans-unit>
        <trans-unit id="0d5997f3b8a866c24134b984ca931d64c1fadf66" translate="yes" xml:space="preserve">
          <source>The value for the given parameter. Returns &lt;code&gt;null&lt;/code&gt; if no value is assigned to the key.</source>
          <target state="translated">指定されたパラメーターの値。キーに値が割り当てられていない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42d264b983e7f353bc8ad5829d7a8cba44eb4f1c" translate="yes" xml:space="preserve">
          <source>The value for the specified key.</source>
          <target state="translated">指定したキーの値。</target>
        </trans-unit>
        <trans-unit id="16eb1ebbc57d65829c8ea71ba8f13bcf76d6b4be" translate="yes" xml:space="preserve">
          <source>The value is a sequence of 12 month lengths, for example: &quot;29 30 29 30 29 30 30 30 29 30 29 29&quot;</source>
          <target state="translated">値は、例えば、12ヶ月の長さの連続した値である。&quot;29 30 29 30 29 30 30 30 29 30 29 29&quot;</target>
        </trans-unit>
        <trans-unit id="d4656bc7f215cf6f15fb76158e42016f85338cb8" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is also used to set the TCP receive window that is advertized to the remote peer. Generally, the window size can be modified at any time when a socket is connected. However, if a receive window larger than 64K is required then this must be requested &lt;b&gt;before&lt;/b&gt; the socket is connected to the remote peer. There are two cases to be aware of:</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt;の値は、リモートピアにアドバタイズされるTCP受信ウィンドウを設定するためにも使用されます。通常、ウィンドウサイズは、ソケットが接続されているときにいつでも変更できます。ただし、64Kより大きい受信ウィンドウが必要な場合は、ソケットをリモートピアに接続する&lt;b&gt;前に&lt;/b&gt;これを要求&lt;b&gt;する&lt;/b&gt;必要があります。注意が必要なケースが2つあります。</target>
        </trans-unit>
        <trans-unit id="b85d520eb7eadb3694e23d56197be67f17133e54" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is used both to set the size of the internal socket receive buffer, and to set the size of the TCP receive window that is advertized to the remote peer.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt;の値は、内部ソケット受信バッファーのサイズの設定と、リモートピアにアドバタイズされるTCP受信ウィンドウのサイズの設定の両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="47901eb75b98cda41165efa4708755552728c44a" translate="yes" xml:space="preserve">
          <source>The value of a floating-point sum is a function both of the input values as well as the order of addition operations. The order of addition operations of this method is intentionally not defined to allow for implementation flexibility to improve the speed and accuracy of the computed result. In particular, this method may be implemented using compensated summation or other technique to reduce the error bound in the numerical sum compared to a simple summation of &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">浮動小数点合計の値は、入力値と加算演算の順序の両方の関数です。このメソッドの加算演算の順序は、計算結果の速度と精度を向上させる実装の柔軟性を考慮して、意図的に定義されていません。特に、この方法は、補償された合計または他の技術を使用して実装され、 &lt;code&gt;double&lt;/code&gt; 値の単純な合計と比較して、数値合計のエラー限界を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="257716e5f7261a724275793b4cede7634e4a94a2" translate="yes" xml:space="preserve">
          <source>The value of either the &lt;code&gt;engineScope&lt;/code&gt; or &lt;code&gt;globalScope&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;engineScope&lt;/code&gt; または &lt;code&gt;globalScope&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="cc44f2ec78c81b386a8c310e62b47b764873b9be" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;CODE&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;CODE&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="8ed71c2de4c7b018d8c2009db367a1d0adf781b3" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;NAME&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;NAME&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="33a0213d4d41d39ffcaba8745b73f4b11a491bc0" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;OBJECT&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;OBJECT&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="959bfb062f0baa61d452078c0860aff55768dad8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;VERSION&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;VERSION&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="f7db15370f7c34a2470defe5752a0b701343b9aa" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;initialSize&lt;/code&gt; parameter for the default group (see &lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt;). The value of the property is taken to be the &lt;code&gt;String&lt;/code&gt; representation of an &lt;code&gt;Integer&lt;/code&gt; that is the initial size parameter. If the value cannot be parsed as an &lt;code&gt;Integer&lt;/code&gt; it causes an unspecified error to be thrown during the construction of the default group.</source>
          <target state="translated">デフォルトグループの &lt;code&gt;initialSize&lt;/code&gt; パラメータの値（&lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; を&lt;/a&gt;参照）。プロパティの値は、初期サイズパラメータである &lt;code&gt;Integer&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 表現であると解釈されます。値を &lt;code&gt;Integer&lt;/code&gt; として解析できない場合、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="6dc8151f529dc33a68ca2fcf1cb579a5177476f4" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;pos&lt;/code&gt; field at the time the last &lt;code&gt;mark&lt;/code&gt; method was called.</source>
          <target state="translated">最後の &lt;code&gt;mark&lt;/code&gt; メソッドが呼び出されたときの &lt;code&gt;pos&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="83b12208c67365cc9a87568927cbc140c553a51c" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="d7c96fb72306b59eb6e27bbb68b4960125a44ad5" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="ea713c8dbe3bbb434d598cf92fbf26c0ccad22fb" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="002109f6f0e34deda860d2f8c13101257bd26010" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="2c8bd9a5106b83006a5daa1344bcf9fab6f821e2" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="85fe9464ad74c5e36e8aac8096c9a27cbff3e7e2" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="92420401b1a66eb9d260a1d33bbda978b19012bf" translate="yes" xml:space="preserve">
          <source>The value of the attribute in the lowest scope for which an attribute with the given name is defined. Returns null if no attribute with the name exists in any scope.</source>
          <target state="translated">指定した名前の属性が定義されている最下位のスコープの属性の値。指定した名前の属性がどのスコープにも存在しない場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="3da50d92e176dc63b5da07ccab80504daf8a1e18" translate="yes" xml:space="preserve">
          <source>The value of the attribute retrieved.</source>
          <target state="translated">取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="92991f2b467a9dd9be161ffe7219ec382620ce83" translate="yes" xml:space="preserve">
          <source>The value of the attribute. May be null if the attribute is unknown.</source>
          <target state="translated">属性の値。属性が不明な場合は null になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="466e384c29b6463845ff35c548a12774880047a9" translate="yes" xml:space="preserve">
          <source>The value of the attribute. Returns &lt;code&gt;null&lt;/code&gt; is the name does not exist in the given scope.</source>
          <target state="translated">属性の値。指定されたスコープに名前が存在しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e49deabc177c53d0801c439c0df42c2b5ea401a4" translate="yes" xml:space="preserve">
          <source>The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown.</source>
          <target state="translated">フィールドの値は、フォーマット中に出力されます。値を取得できない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="48e435e7bad97cf8759c8bed3884e0e05a6ca6c6" translate="yes" xml:space="preserve">
          <source>The value of the job's &lt;a href=&quot;jobholduntil&quot;&gt;&lt;code&gt;JobHoldUntil&lt;/code&gt;&lt;/a&gt; attribute was specified with a date-time that is still in the future. The job must not be a candidate for processing until this reason is removed and there are no other reasons to hold the job. This value should be supported if the &lt;a href=&quot;jobholduntil&quot;&gt;&lt;code&gt;JobHoldUntil&lt;/code&gt;&lt;/a&gt; job template attribute is supported.</source>
          <target state="translated">ジョブの&lt;a href=&quot;jobholduntil&quot;&gt; &lt;code&gt;JobHoldUntil&lt;/code&gt; &lt;/a&gt;属性の値が、まだ未来の日時で指定されました。この理由が取り除かれ、ジョブを保留する他の理由がなくなるまで、ジョブは処理の候補であってはなりません。&lt;a href=&quot;jobholduntil&quot;&gt; &lt;code&gt;JobHoldUntil&lt;/code&gt; &lt;/a&gt;ジョブテンプレート属性がサポートされている場合は、この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="9603d0dd485012e1f4fbb07ab95058c5884e0871" translate="yes" xml:space="preserve">
          <source>The value of the negotiated property. If null, the property was not negotiated or is not applicable to this mechanism.</source>
          <target state="translated">ネゴシエートされたプロパティの値。nullの場合、そのプロパティはネゴシエートされなかったか、このメカニズムには適用されません。</target>
        </trans-unit>
        <trans-unit id="1375a6bafbe98e90e4d0729db426a82bac246c11" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; attribute ia STOPPED.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;属性の値はSTOPPEDです。</target>
        </trans-unit>
        <trans-unit id="db78b0d3523e7732321ffc791c71a38c96846c14" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; value of STOPPED_PARTLY.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性の値には、STOPPED_PARTLYの&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;値が含まれています。</target>
        </trans-unit>
        <trans-unit id="e7acadd9356fd0eed465f05edbb22ae5050736f1" translate="yes" xml:space="preserve">
          <source>The value of the property, or null if there is no such property in this ObjectName.</source>
          <target state="translated">プロパティの値、またはこの ObjectName にそのようなプロパティがない場合は null。</target>
        </trans-unit>
        <trans-unit id="8e6b1a6d6df9caa879e4a52b4aef13f1d4aeeca5" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">物件の価値。</target>
        </trans-unit>
        <trans-unit id="7c68b6061bfa99862e097c1bb571847be45f5a36" translate="yes" xml:space="preserve">
          <source>The value of the property. Primitive types such as &quot;int&quot; will be wrapped as the corresponding object type such as &quot;java.lang.Integer&quot;.</source>
          <target state="translated">プロパティの値です。int」などのプリミティブ型は、「java.lang.Integer」などの対応するオブジェクト型としてラップされます。</target>
        </trans-unit>
        <trans-unit id="e6ce8c1b4a0539cb032514fafac80fbdabadd594" translate="yes" xml:space="preserve">
          <source>The value of the protected &lt;code&gt;context&lt;/code&gt; field.</source>
          <target state="translated">保護された &lt;code&gt;context&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="a5c45270efc048e5f1b9cd9f6afbcaa1274b9a65" translate="yes" xml:space="preserve">
          <source>The value of the retrieved attribute from the descriptor 'value' field or from the invocation of the operation in the 'getMethod' field of the descriptor.</source>
          <target state="translated">ディスクリプタの'value'フィールドから、またはディスクリプタの'getMethod'フィールドの操作の呼び出しから取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="b348eeda39c4d1e3238a0258085bfeb71a22ed5d" translate="yes" xml:space="preserve">
          <source>The value of the retrieved attribute.</source>
          <target state="translated">取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="e2285df145b3c9ae26df5020d927db2f64460ec3" translate="yes" xml:space="preserve">
          <source>The value of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is equal to</source>
          <target state="translated">返される値 &lt;code&gt;BigDecimal&lt;/code&gt; に等しいです。</target>
        </trans-unit>
        <trans-unit id="535d078962378e613737dbb726452780163b4074" translate="yes" xml:space="preserve">
          <source>The value of the socket option. A value of &lt;code&gt;null&lt;/code&gt; may be a valid value for some socket options.</source>
          <target state="translated">ソケットオプションの値。値が &lt;code&gt;null&lt;/code&gt; では、いくつかのソケットオプションの有効な値であってもよいです。</target>
        </trans-unit>
        <trans-unit id="2d50cdb99a13d27827b534e10ac604af9967b5a1" translate="yes" xml:space="preserve">
          <source>The value of this &lt;code&gt;cert.provider.x509v1&lt;/code&gt; property has to be changed to instantiate another implementation. If this security property is not set, a default implementation will be used. Currently, due to possible security restrictions on access to Security properties, this value is looked up and cached at class initialization time and will fallback on a default implementation if the Security property is not accessible.</source>
          <target state="translated">この &lt;code&gt;cert.provider.x509v1&lt;/code&gt; プロパティの値は、別の実装をインスタンス化するために変更する必要があります。このセキュリティプロパティが設定されていない場合、デフォルトの実装が使用されます。現在、セキュリティプロパティへのアクセスに対するセキュリティ制限の可能性があるため、この値はクラスの初期化時に検索およびキャッシュされ、セキュリティプロパティにアクセスできない場合はデフォルトの実装にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="b60a5da34c192f58211cc46053f1f572c4bcdf56" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.applet&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.applet &quot;です。</target>
        </trans-unit>
        <trans-unit id="70be25b63d854a9373d506112dfd3d18c4830bec" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.authoritative&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.authoritative &quot;です。</target>
        </trans-unit>
        <trans-unit id="b330540296e7168a688d0fb69bbfb34bf899dd2a" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.batchsize&quot;.</source>
          <target state="translated">この定数の値は「java.naming.batchsize」です。</target>
        </trans-unit>
        <trans-unit id="f985e2167f0d965a15bc9d49973d2222a40eafb6" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.dns.url&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.dns.url &quot;です。</target>
        </trans-unit>
        <trans-unit id="505f54502cd8d68ab0da6463ca38a0fec91385e7" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.control&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.control」です。</target>
        </trans-unit>
        <trans-unit id="7151f0bb014c7a5ab1e3e977660775d91a8bd76c" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.initial&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.initial」です。</target>
        </trans-unit>
        <trans-unit id="db62ad09fcd4f30699d9b514e5ba9db02ab135dd" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.object&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.object」です。</target>
        </trans-unit>
        <trans-unit id="e9295a43ecaf172542c1bc89cc562dadd505eb4e" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.state&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.state」です。</target>
        </trans-unit>
        <trans-unit id="72e77db2979cf3c5d5df8c1f312fdcb7e3cf0dd8" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.url.pkgs&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.factory.url.pkgs &quot;です。</target>
        </trans-unit>
        <trans-unit id="c23367e5ddc754ace44be4965849c443f3d3cf88" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.language&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.language &quot;です。</target>
        </trans-unit>
        <trans-unit id="debafaf87500101460cf58fe25d46bd025885114" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.provider.url&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.provider.url &quot;です。</target>
        </trans-unit>
        <trans-unit id="89c2070cd88436218f7f16bf66cb4edf6ba490b2" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.referral&quot;.</source>
          <target state="translated">この定数の値は「java.naming.referral」です。</target>
        </trans-unit>
        <trans-unit id="9cc48d1c5ca0afebb5ebfd310dd2dbd8487ff419" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.authentication&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.authentication」です。</target>
        </trans-unit>
        <trans-unit id="4c0573f6efaba0c512fbcff0c36d7e5b791eae7f" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.credentials&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.credentials」です。</target>
        </trans-unit>
        <trans-unit id="d87cc085dd14ae23c4bfcf35065e84615877a976" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.principal&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.principal」です。</target>
        </trans-unit>
        <trans-unit id="faea59681e2f4d68a14cc8e707a0f644a7fab244" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.protocol&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.security.protocol &quot;です。</target>
        </trans-unit>
        <trans-unit id="1eea6e7406196f98194d7dc4149b557304e5b765" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.spi.CannotProceedException&quot;.</source>
          <target state="translated">この定数の値は「java.naming.spi.CannotProceedException」です。</target>
        </trans-unit>
        <trans-unit id="ca2029255b18ef7fc07dffc1f1d98d2c4a798dec" translate="yes" xml:space="preserve">
          <source>The value of this constant is 0.</source>
          <target state="translated">この定数の値は0です。</target>
        </trans-unit>
        <trans-unit id="9e4a7844333ec948b380e774556e82eb6fe0c6a9" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.bound.server.name&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.bound.server.name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9f28810068395a3fbd50259cbc462fa2359430a" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.credentials&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.credentials&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="470d84324d3f7fbd7bbb9ea4bcbc9b6b988c1568" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.maxbuffer&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.maxbuffer&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="31211a3383721cd0f9f3b326fde5e252995d83ce" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.credentials&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.credentials&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="959a445f01f7aad3ebc64b3b1f531a15a4e437ce" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.forward&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.forward&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e431aa384161ffc86b3e1453b5fb9e26219c7419" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noactive&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noactive&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6a51b4b91f4b66398378907c088b0e7d664796c9" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noanonymous&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noanonymous&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0452024b914f4b0596371c42d90bfa7fba3f64b0" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.nodictionary&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.nodictionary&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fa422d1fabd0c76c81a41c9fb85f540e36c02f2b" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noplaintext&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noplaintext&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ecd04d0142b9d176d5021d06e7368dededa7b0b" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.rawsendsize&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.rawsendsize&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8ac4a332444a4793633faa0cd515cf9f64bef452" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.server.authentication&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.server.authentication&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="03055235b2244f2e81fee5ab8a46b3ccf4c6c844" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5451c528917161e845b65a9600deb14a63245379" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f1f15de420d3f3cb04487857617eafedff4b7f93" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ddb9709927414a9036f3f779734e11c829be7e35" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dbdd77c61d7d11ab57c8e33e4d6f179994662c3b" translate="yes" xml:space="preserve">
          <source>The value of this field can be accessed by the &lt;code&gt;getURL&lt;/code&gt; method.</source>
          <target state="translated">このフィールドの値には、 &lt;code&gt;getURL&lt;/code&gt; メソッドを使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="fddbead7df76c109d78f7a8ca445c61cc40955f1" translate="yes" xml:space="preserve">
          <source>The value of this field can be set by the &lt;code&gt;setAllowUserInteraction&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getAllowUserInteraction&lt;/code&gt; method. Its default value is the value of the argument in the last invocation of the &lt;code&gt;setDefaultAllowUserInteraction&lt;/code&gt; method.</source>
          <target state="translated">このフィールドの値は、 &lt;code&gt;setAllowUserInteraction&lt;/code&gt; メソッドで設定できます。その値は、 &lt;code&gt;getAllowUserInteraction&lt;/code&gt; メソッドによって返されます。そのデフォルト値は、 &lt;code&gt;setDefaultAllowUserInteraction&lt;/code&gt; メソッドの最後の呼び出しでの引数の値です。</target>
        </trans-unit>
        <trans-unit id="4e9b5b9176900e2f7e73fa51e5d189eb641207bb" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.counter.threshold&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.counter.threshold&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="805bc0f84fb9bc3c7c29e277899cba9c75088a9e" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.attribute&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.attribute&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8aae8963b9d0d4c118706ad729d8d7101e29ded5" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.mbean&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.mbean&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="96f76369ba45bc9c5be134158fd29b7c372302c9" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.runtime&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.runtime&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="aff36f8311add070b34ea295a25633a58a58c2a0" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.threshold&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.threshold&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed9ee71b1f970d4866364bbcf548b29ac9080a87" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.type&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.type&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d5fc439fac56d5a0fb765bacfd4d488c995be13" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.gauge.high&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.gauge.high&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16b9f89192e3138677e5519341c20486c7c08f31" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.gauge.low&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.gauge.low&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="07d0c2e7618db99121021ce2e78af95512f4d70e" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.string.differs&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.string.differs&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="99445c3c77b537173304b9ebd614ce3cc4025612" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.string.matches&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.string.matches&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ac0faf0ee35ba6f9fe8a29efe20b4f587e920230" translate="yes" xml:space="preserve">
          <source>The value of this property is taken to be the fully-qualified name of a concrete &lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt; class. The class is loaded using the system class loader and instantiated. The factory's &lt;a href=&quot;../../util/concurrent/threadfactory#newThread-java.lang.Runnable-&quot;&gt;&lt;code&gt;newThread&lt;/code&gt;&lt;/a&gt; method is invoked to create each thread for the default group's thread pool. If the process to load and instantiate the value of the property fails then an unspecified error is thrown during the construction of the default group.</source>
          <target state="translated">このプロパティの値は、具象&lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名と見なされます。クラスはシステムクラスローダーを使用してロードされ、インスタンス化されます。ファクトリの&lt;a href=&quot;../../util/concurrent/threadfactory#newThread-java.lang.Runnable-&quot;&gt; &lt;code&gt;newThread&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、デフォルトグループのスレッドプールの各スレッドが作成されます。プロパティの値をロードしてインスタンス化するプロセスが失敗すると、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="faedb6e636b2c0bf3f25486ce02c8a4b90b5e19e" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; that represents the outgoing interface for multicast datagrams sent by the datagram-oriented socket. For &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; sockets then it is system dependent whether setting this option also sets the outgoing interface for multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">このソケットオプションの値は、データグラム指向のソケットによって送信されたマルチキャストデータグラムの発信インターフェイスを表す&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; &lt;/a&gt;です。以下のため&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;ソケットそれは、このオプションを設定することも、IPv4アドレスに送信されたマルチキャストデータグラムの発信インターフェイスを設定するかどうかに依存するシステムです。</target>
        </trans-unit>
        <trans-unit id="52d41017b39ecaa0454385d328f3b6bd932b4bc4" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that controls the &lt;em&gt;loopback&lt;/em&gt; of multicast datagrams. The value of the socket option represents if the option is enabled or disabled.</source>
          <target state="translated">このソケットオプションの値は、マルチキャストデータグラムの&lt;em&gt;ループバック&lt;/em&gt;を制御する &lt;code&gt;Boolean&lt;/code&gt; です。ソケットオプションの値は、オプションが有効か無効かを表します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0782095e27c4f63c26addb4f4b586af5276685e2" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The exact semantics of this socket option are socket type and system dependent.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。このソケットオプションの正確なセマンティクスは、ソケットのタイプとシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="c799a28ae4a75daf519e682a26de2c11c010df2a" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The option is specific to datagram-oriented sockets sending to &lt;a href=&quot;inet4address&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; broadcast addresses. When the socket option is enabled then the socket can be used to send &lt;em&gt;broadcast datagrams&lt;/em&gt;.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。このオプションは、&lt;a href=&quot;inet4address&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;ブロードキャストアドレスに送信するデータグラム指向のソケットに固有です。ソケットオプションを有効にすると、ソケットを使用して&lt;em&gt;ブロードキャストデータグラム&lt;/em&gt;を送信できます。</target>
        </trans-unit>
        <trans-unit id="378a8b74d2abd11578002c1e83ca787b93b99699" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The socket option is specific to stream-oriented sockets using the TCP/IP protocol. TCP/IP uses an algorithm known as &lt;em&gt;The Nagle Algorithm&lt;/em&gt; to coalesce short segments and improve network efficiency.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。ソケットオプションは、TCP / IPプロトコルを使用するストリーム指向のソケットに固有です。TCP / IPは、&lt;em&gt;Nagleアルゴリズム&lt;/em&gt;と呼ばれるアルゴリズムを使用して、短いセグメントを結合し、ネットワーク効率を向上させます。</target>
        </trans-unit>
        <trans-unit id="f111eca53be5c4a77e641dab1abf0b374fefe83a" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. When the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; option is enabled the operating system may use a &lt;em&gt;keep-alive&lt;/em&gt; mechanism to periodically probe the other end of a connection when the connection is otherwise idle. The exact semantics of the keep alive mechanism is system dependent and therefore unspecified.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。とき &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; オプションが有効になっているオペレーティングシステムが使用可能&lt;em&gt;キープアライブ&lt;/em&gt;接続がアイドル状態のとき、定期的な接続のもう一方の端をプローブするメカニズムを。キープアライブメカニズムの正確なセマンティクスはシステムに依存するため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="7ff8b71c0be896401e7f25bf544169440736d7ac" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; in the range &lt;code&gt;0 &amp;lt;= value &amp;lt;= 255&lt;/code&gt;. It is used to control the scope of multicast datagrams sent by the datagram-oriented socket. In the case of an &lt;a href=&quot;standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; socket the option is the time-to-live (TTL) on multicast datagrams sent by the socket. Datagrams with a TTL of zero are not transmitted on the network but may be delivered locally. In the case of an &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket the option is the &lt;em&gt;hop limit&lt;/em&gt; which is number of &lt;em&gt;hops&lt;/em&gt; that the datagram can pass through before expiring on the network. For IPv6 sockets it is system dependent whether the option also sets the &lt;em&gt;time-to-live&lt;/em&gt; on multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">このソケットオプションの値は、 &lt;code&gt;0 &amp;lt;= value &amp;lt;= 255&lt;/code&gt; 範囲の &lt;code&gt;Integer&lt;/code&gt; です。これは、データグラム指向のソケットによって送信されるマルチキャストデータグラムのスコープを制御するために使用されます。以下の場合には&lt;a href=&quot;standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; の&lt;/a&gt;オプションは、ソケットによって送信されたマルチキャストデータグラム上の生存時間（TTL）であるソケット。 TTLがゼロのデータグラムはネットワーク上で送信されませんが、ローカルに配信される場合があります。以下の場合には&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; の&lt;/a&gt;オプションがあるソケット&lt;em&gt;ホップリミット&lt;/em&gt;の数である&lt;em&gt;ホップ&lt;/em&gt;データグラムがネットワーク上の期限切れの前を通過することができます。 IPv6ソケットの場合、オプションがIPv4アドレスに送信されるマルチキャストデータグラムの存続&lt;em&gt;時間&lt;/em&gt;も設定するかどうかは、システムに依存します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0aaeb374d470c89144bd7d473179b01228a3931" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; representing the value of the ToS octet in IP packets sent by sockets to an &lt;a href=&quot;standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; socket. The interpretation of the ToS octet is network specific and is not defined by this class. Further information on the ToS octet can be found in &lt;a href=&quot;http://www.ietf.org/rfc/rfc1349.txt&quot;&gt;RFC 1349&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2474.txt&quot;&gt;RFC 2474&lt;/a&gt;. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt;. An implementation may ignore the value, or ignore specific values.</source>
          <target state="translated">このソケットオプションの値は、ソケットから&lt;a href=&quot;standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;ソケットに送信されるIPパケットのToSオクテットの値を表す &lt;code&gt;Integer&lt;/code&gt; です。 ToSオクテットの解釈はネットワーク固有であり、このクラスでは定義されていません。 ToSオクテットの詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1349.txt&quot;&gt;RFC 1349&lt;/a&gt;および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2474.txt&quot;&gt;RFC 2474を参照してください&lt;/a&gt;。 socketオプションの値は&lt;em&gt;ヒント&lt;/em&gt;です。実装は値を無視するか、特定の値を無視します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9f336d96465d1b5cce00d70fe23ba02abe6c752" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that controls the action taken when unsent data is queued on the socket and a method to close the socket is invoked. If the value of the socket option is zero or greater, then it represents a timeout value, in seconds, known as the &lt;em&gt;linger interval&lt;/em&gt;. The linger interval is the timeout for the &lt;code&gt;close&lt;/code&gt; method to block while the operating system attempts to transmit the unsent data or it decides that it is unable to transmit the data. If the value of the socket option is less than zero then the option is disabled. In that case the &lt;code&gt;close&lt;/code&gt; method does not wait until unsent data is transmitted; if possible the operating system will transmit any unsent data before the connection is closed.</source>
          <target state="translated">このソケットオプションの値は、未送信のデータがソケットにキューイングされ、ソケットを閉じるメソッドが呼び出されたときに実行されるアクションを制御する &lt;code&gt;Integer&lt;/code&gt; です。ソケットオプションの値がゼロ以上の場合、それは&lt;em&gt;linger interval&lt;/em&gt;と呼ばれる秒単位のタイムアウト値を表し&lt;em&gt;ます&lt;/em&gt;。リンガー間隔は、オペレーティングシステムが未送信のデータを送信しようとしたとき、またはデータを送信できないと判断したときに、 &lt;code&gt;close&lt;/code&gt; メソッドがブロックするためのタイムアウトです。ソケットオプションの値がゼロ未満の場合、オプションは無効になります。その場合、 &lt;code&gt;close&lt;/code&gt; メソッドは未送信のデータが送信されるまで待機しません。可能であれば、接続が閉じられる前に、オペレーティングシステムは未送信のデータを送信します。</target>
        </trans-unit>
        <trans-unit id="aa78f370acd97919109586e7fab1f967828d0cb4" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that is the size of the socket receive buffer in bytes. The socket receive buffer is an input buffer used by the networking implementation. It may need to be increased for high-volume connections or decreased to limit the possible backlog of incoming data. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt; to the implementation to size the buffer and the actual size may differ.</source>
          <target state="translated">このソケットオプションの値は、バイト単位のソケット受信バッファのサイズである &lt;code&gt;Integer&lt;/code&gt; です。ソケット受信バッファーは、ネットワーク実装で使用される入力バッファーです。大量接続の場合は増やすか、着信データのバックログを制限するために減らす必要があります。ソケットオプションの値は、バッファのサイズを設定する実装への&lt;em&gt;ヒントで&lt;/em&gt;あり、実際のサイズは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="3964a21153626d6dca5ee91d3e140a157ee18420" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that is the size of the socket send buffer in bytes. The socket send buffer is an output buffer used by the networking implementation. It may need to be increased for high-volume connections. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt; to the implementation to size the buffer and the actual size may differ. The socket option can be queried to retrieve the actual size.</source>
          <target state="translated">このソケットオプションの値は、バイト単位のソケット送信バッファのサイズである &lt;code&gt;Integer&lt;/code&gt; です。ソケット送信バッファーは、ネットワーキング実装で使用される出力バッファーです。大量接続の場合は、増やす必要がある場合があります。ソケットオプションの値は、バッファのサイズを設定する実装への&lt;em&gt;ヒントで&lt;/em&gt;あり、実際のサイズは異なる場合があります。ソケットオプションを照会して、実際のサイズを取得できます。</target>
        </trans-unit>
        <trans-unit id="19e29e94ffa50d1811c8c377fed262ac17b18615" translate="yes" xml:space="preserve">
          <source>The value of this type string is &lt;code&gt;jmx.attribute.change&lt;/code&gt;.</source>
          <target state="translated">このタイプの文字列の値は &lt;code&gt;jmx.attribute.change&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eae86827f3a1e6e6b1a2cc87015f797db0fbc402" translate="yes" xml:space="preserve">
          <source>The value passed in is converted to a byte, which may lose information.</source>
          <target state="translated">渡された値はバイトに変換され、情報が失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d5b9d68f8861a0f3a1d298ab379faa4e96b2ee1c" translate="yes" xml:space="preserve">
          <source>The value previously associated with the given name. Returns null if no value was previously associated with the name.</source>
          <target state="translated">指定した名前に以前に関連付けられていた値。以前に名前に関連付けられていた値がない場合は、nullを返します。</target>
        </trans-unit>
        <trans-unit id="193e10e740caf76fa19a1f3cbe75690884cfc899" translate="yes" xml:space="preserve">
          <source>The value property of an &lt;code&gt;Expression&lt;/code&gt; is set to a unique private (non-&lt;code&gt;null&lt;/code&gt;) value by default and this value is used as an internal indication that the method has not yet been called. A return value of &lt;code&gt;null&lt;/code&gt; replaces this default value in the same way that any other value would, ensuring that expressions are never evaluated more than once.</source>
          <target state="translated">&lt;code&gt;Expression&lt;/code&gt; のvalueプロパティは、デフォルトで一意の非 &lt;code&gt;null&lt;/code&gt; （非null）値に設定され、この値はメソッドがまだ呼び出されていないことを示す内部的な指標として使用されます。 &lt;code&gt;null&lt;/code&gt; の戻り値は、他の値と同じ方法でこのデフォルト値を置き換え、式が2回以上評価されないようにします。</target>
        </trans-unit>
        <trans-unit id="31f5093977dcc1cdd4697dab36dd10971db541b7" translate="yes" xml:space="preserve">
          <source>The value represented by the string is larger than the largest unsigned &lt;code&gt;int&lt;/code&gt;, 2&lt;sup&gt;32&lt;/sup&gt;-1.</source>
          <target state="translated">文字列で表される値は、最大の符号なし &lt;code&gt;int&lt;/code&gt; 2 &lt;sup&gt;32&lt;/sup&gt; -1 より大きいです。</target>
        </trans-unit>
        <trans-unit id="d6f78b1ec9763b41e7fb9ba7f86d098e20d6f9a2" translate="yes" xml:space="preserve">
          <source>The value represented by the string is larger than the largest unsigned &lt;code&gt;long&lt;/code&gt;, 2&lt;sup&gt;64&lt;/sup&gt;-1.</source>
          <target state="translated">文字列で表される値は、最大のunsigned &lt;code&gt;long&lt;/code&gt; である2 &lt;sup&gt;64&lt;/sup&gt; -1 より大きいです。</target>
        </trans-unit>
        <trans-unit id="7ec8c505fdb637aca2b4b00c43e241fdc3c70c56" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;byte&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="2dd516c49699030c6a86876fa65104bf2bacc9c3" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;int&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="080e00aed4fe6d75b4b9f01ff131e35f0a26ccd4" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;long&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="dd537294351459ff10862aaa7bdcdb05b16e77a1" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;short&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="5e116924436bf7c8d4007129887075eebdca3586" translate="yes" xml:space="preserve">
          <source>The value returned by the procedure or function</source>
          <target state="translated">プロシージャまたは関数が返す値</target>
        </trans-unit>
        <trans-unit id="a4624000eb901432b19900a8426561fff4b2b375" translate="yes" xml:space="preserve">
          <source>The value returned by the procedure. The rules for converting the scripting variable returned by the script method to a Java Object are implementation-specific.</source>
          <target state="translated">プロシージャが返す値。scriptメソッドが返すスクリプト変数をJavaオブジェクトに変換するルールは、実装固有のものです。</target>
        </trans-unit>
        <trans-unit id="67e56c1928fd73288739bc1a971b0ef8da9c3a99" translate="yes" xml:space="preserve">
          <source>The value returned by the script execution, if any. Should return &lt;code&gt;null&lt;/code&gt; if no value is returned by the script execution.</source>
          <target state="translated">スクリプトの実行によって返される値（ある場合）。スクリプトの実行によって値が返されない場合は、 &lt;code&gt;null&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="110307d8995a99466a52bbbf0e1fd931923962c2" translate="yes" xml:space="preserve">
          <source>The value returned by the script.</source>
          <target state="translated">スクリプトが返す値。</target>
        </trans-unit>
        <trans-unit id="232a4c3688c018a1f715de261ad24f1b8ccdde7a" translate="yes" xml:space="preserve">
          <source>The value returned by this method is equal to the value that would be returned by &lt;code&gt;Arrays.asList(a).hashCode()&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, in which case &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドによって返される値は、によって返される値に等しい &lt;code&gt;Arrays.asList(a).hashCode()&lt;/code&gt; しない限り、ある &lt;code&gt;null&lt;/code&gt; その場合には、 &lt;code&gt;0&lt;/code&gt; が返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4830ed24165ee75d854121d512ff4c6287d16823" translate="yes" xml:space="preserve">
          <source>The value returned by this method is equal to the value that would be returned by &lt;code&gt;Arrays.asList(a).toString()&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, in which case &lt;code&gt;&quot;null&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドによって返される値は、 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合を除いて、 &lt;code&gt;Arrays.asList(a).toString()&lt;/code&gt; によって返される値と同じです。この場合、 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="497f48c5d27b5d369d6b9d0a0e986992c79396f5" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は起動することによって得られるであろう同じ値である&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;上のメソッド&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;の配列を含む&lt;a href=&quot;../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;の要素を表すインスタンスと同じ順序です。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d9dbfc6d6211692de527549b2fcd5858a66bb72" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="61e555fbf6ad7db5b6071c0b6b9e1c1677c17310" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="202f92c2c1f2690fa3631974cac693f1c7bc62a6" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="7c915104330624d5c65626efa3aeedf957b1ba02" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="d6086d722cb980f02f1d9be10f9049cb0b95e719" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="05c957e2b334ef39fa0169c9d7f5a824127ab492" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="630057fa5af0e23dd224c2a30f87a15dcf29fe3f" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="b3446146db6ab390bdd9c3f968d4d845281bdb3a" translate="yes" xml:space="preserve">
          <source>The value returned from the execution of the script.</source>
          <target state="translated">スクリプトの実行から返される値。</target>
        </trans-unit>
        <trans-unit id="55349d45b1798417fa58a2e4c3952f10780b9ff0" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt;, which is the number of bytes remaining to be read from the input buffer.</source>
          <target state="translated">返される値は &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt; 。これは、入力バッファーから読み取られる残りのバイト数です。</target>
        </trans-unit>
        <trans-unit id="2036e23bfa2dc5e8d0a1aee47cc9e89872df1136" translate="yes" xml:space="preserve">
          <source>The value returned is a two-dimensional array of strings of size &lt;em&gt;n&lt;/em&gt; by &lt;em&gt;m&lt;/em&gt;, where &lt;em&gt;m&lt;/em&gt; is at least 5. Each of the &lt;em&gt;n&lt;/em&gt; rows is an entry containing the localized names for a single &lt;code&gt;TimeZone&lt;/code&gt;. Each such row contains (with &lt;code&gt;i&lt;/code&gt; ranging from 0..&lt;em&gt;n&lt;/em&gt;-1):</source>
          <target state="translated">返される値は、サイズ&lt;em&gt;n&lt;/em&gt; &amp;times; &lt;em&gt;mの&lt;/em&gt;文字列の2次元配列です。ここで、&lt;em&gt;m&lt;/em&gt;は少なくとも5です&lt;em&gt;。n&lt;/em&gt;行のそれぞれは、単一の &lt;code&gt;TimeZone&lt;/code&gt; のローカライズされた名前を含むエントリです。このような各行には、以下が含まれます（ &lt;code&gt;i&lt;/code&gt; の範囲は0 .. &lt;em&gt;n&lt;/em&gt; -1です）：</target>
        </trans-unit>
        <trans-unit id="03c9efb8c5db2500c4c240fcd8666dee938e1da7" translate="yes" xml:space="preserve">
          <source>The value returned is only an estimate because the number of thread groups may change dynamically while this method traverses internal data structures. This method is intended primarily for debugging and monitoring purposes.</source>
          <target state="translated">このメソッドが内部データ構造を横断している間にスレッドグループの数が動的に変化する可能性があるため、返される値は推定値にすぎません。このメソッドは、主にデバッグおよびモニタリングを目的としています。</target>
        </trans-unit>
        <trans-unit id="852cc356c26f432ab42fcc161a95ca76132880ee" translate="yes" xml:space="preserve">
          <source>The value returned is only an estimate because the number of threads may change dynamically while this method traverses internal data structures, and might be affected by the presence of certain system threads. This method is intended primarily for debugging and monitoring purposes.</source>
          <target state="translated">このメソッドが内部データ構造を通過している間にスレッド数が動的に変化する可能性があり、特定のシステム・スレッドの存在によって影響を受ける可能性があるため、返される値は推定値に過ぎません。このメソッドは、主にデバッグとモニタリングを目的としています。</target>
        </trans-unit>
        <trans-unit id="b84a0253c5b3c6f11eea15293b58032f1c52ac87" translate="yes" xml:space="preserve">
          <source>The value specified is not valid for the attribute.</source>
          <target state="translated">指定された値は、その属性では有効ではありません。</target>
        </trans-unit>
        <trans-unit id="500cac38ba0a7780ed53053b9886791f008d3156" translate="yes" xml:space="preserve">
          <source>The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.</source>
          <target state="translated">値は、整数値の通常のフォーマットに従って印刷されます。負の数値だけが符号付きで表示されます。パディングは追加されません。</target>
        </trans-unit>
        <trans-unit id="9e6acd3ee9804ea2240ae60fd89170c2a1ca81d0" translate="yes" xml:space="preserve">
          <source>The value will be zero-padded on the left. If the size of the value means that it cannot be printed within the width then an exception is thrown. If the value of the field is negative then an exception is thrown during formatting.</source>
          <target state="translated">値は左にゼロパッドされます。値のサイズが幅内に印刷できない場合は例外が発生します。フィールドの値が負の値の場合は、書式設定中に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="031c945b382d2bfa8a375b39b12c9b937e2dbd2c" translate="yes" xml:space="preserve">
          <source>The values are equal.</source>
          <target state="translated">価値観が一致しています。</target>
        </trans-unit>
        <trans-unit id="4c207ea95e8a56f3038b875f5e458580dce26ff8" translate="yes" xml:space="preserve">
          <source>The values are key/value pairs of two types. The first type of pairs consists of those whose keys are reserved and defined in this specification or by individual implementations. The values in the pairs with reserved keys have specified meanings.</source>
          <target state="translated">値は、2 つのタイプの鍵と値のペアである。最初のタイプのペアは、キーが予約されており、本仕様または個々の実装で定義されているものである。予約されたキーを持つペアの値は、指定された意味を持つ。</target>
        </trans-unit>
        <trans-unit id="a36e9ac0d41a47dcc5adf02d33d70256195d6bc3" translate="yes" xml:space="preserve">
          <source>The values are numbered following the ISO-8601 standard, from 1 (January) to 12 (December).</source>
          <target state="translated">1(1月)から12(12月)まで、ISO-8601規格に準じて数値に番号を付けています。</target>
        </trans-unit>
        <trans-unit id="2f7227c6c87280051d32783be85f72f98db78fec" translate="yes" xml:space="preserve">
          <source>The values are numbered following the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). See &lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">値には、ISO-8601規格に従って1（月曜日）から7（日曜日）までの番号が付けられています。ローカライズされた週番号については、&lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt; &lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="103d4a4344917ad71ffdead36a1faff6de82ef17" translate="yes" xml:space="preserve">
          <source>The values for an attribute are immutable, or must not be mutated by clients or storage. They are always passed by reference, and not cloned.</source>
          <target state="translated">属性の値は不変であり、クライアントやストレージによって変異されてはいけません。これらの値は常に参照によって渡され、クローン化されることはありません。</target>
        </trans-unit>
        <trans-unit id="6e249ae9bc2f78685ef11b72e309449abc9a2d7e" translate="yes" xml:space="preserve">
          <source>The values for these keys are the Strings returned by &lt;code&gt;getEngineName&lt;/code&gt;, &lt;code&gt;getEngineVersion&lt;/code&gt;, &lt;code&gt;getLanguageName&lt;/code&gt;, &lt;code&gt;getLanguageVersion&lt;/code&gt; for the first four keys respectively. For NAME, one of the Strings returned by &lt;code&gt;getNames&lt;/code&gt; is returned.</source>
          <target state="translated">これらのキーの値は、最初の4つのキーそれぞれに対して &lt;code&gt;getEngineName&lt;/code&gt; 、 &lt;code&gt;getEngineVersion&lt;/code&gt; 、 &lt;code&gt;getLanguageName&lt;/code&gt; 、 &lt;code&gt;getLanguageVersion&lt;/code&gt; によって返される文字列です。NAMEの場合、 &lt;code&gt;getNames&lt;/code&gt; によって返される文字列の 1つが返されます。</target>
        </trans-unit>
        <trans-unit id="ed1518f76cd5c7850d1ed62e39ed9fbf6f653dda" translate="yes" xml:space="preserve">
          <source>The values of cipherSuites, protocols, cryptographic algorithm constraints, endpoint identification algorithm, server names and server name matchers are set to &lt;code&gt;null&lt;/code&gt;, useCipherSuitesOrder, wantClientAuth and needClientAuth are set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">cipherSuites、プロトコル、暗号化アルゴリズム制約、エンドポイント識別アルゴリズム、サーバー名、サーバー名マッチャーの値は &lt;code&gt;null&lt;/code&gt; に設定され、useCipherSuitesOrder、wantClientAuth、およびneedClientAuthは &lt;code&gt;false&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="01f68b856f41bbdd549e5ce9ce35a7c9be9bec94" translate="yes" xml:space="preserve">
          <source>The values of other calendar fields may be taken into account to determine a set of display names. For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a lunisolar calendar system and the year value given by the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; field has a leap month, this method would return month names containing the leap month name, and month names are mapped to their values specific for the year.</source>
          <target state="translated">他のカレンダーフィールドの値を考慮して、一連の表示名を決定できます。たとえば、この &lt;code&gt;Calendar&lt;/code&gt; が太陰暦のカレンダーシステムで、&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;フィールドで指定された年の値にうるう月がある場合、このメソッドはうるう月の名前を含む月の名前を返し、月の名前はその年に固有の値にマップされます。</target>
        </trans-unit>
        <trans-unit id="465f58c72b3a6f0d702e1f81a258c44981222924" translate="yes" xml:space="preserve">
          <source>The values returned by this method become meaningful only when the difference between two such values, obtained within the same instance of a Java virtual machine, is computed.</source>
          <target state="translated">このメソッドによって返される値は、Java 仮想マシンの同じインスタンス内で取得された 2 つの値の差が計算された場合にのみ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="5cd18fd2ae18c7b303b9ff07577197ac1e8f395b" translate="yes" xml:space="preserve">
          <source>The variable arity parameter has a reifiable element type, which includes primitive types, &lt;code&gt;Object&lt;/code&gt;, and &lt;code&gt;String&lt;/code&gt;. (The unchecked warnings this annotation type suppresses already do not occur for a reifiable element type.)</source>
          <target state="translated">変数arityパラメーターには、プリミティブ型、 &lt;code&gt;Object&lt;/code&gt; 、および &lt;code&gt;String&lt;/code&gt; を含む、変更可能な要素型があります。（この注釈タイプが抑制する未チェックの警告は、reifiable要素タイプではすでに発生していません。）</target>
        </trans-unit>
        <trans-unit id="3d3705f4b80513e86c1fef983b33a0e581672d50" translate="yes" xml:space="preserve">
          <source>The variant code, or the empty string if none is defined.</source>
          <target state="translated">バリアントコード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="e1f53b3a3ade84d5fdc041ae16475767cdbbf2af" translate="yes" xml:space="preserve">
          <source>The variant field contains a value which identifies the layout of the &lt;code&gt;UUID&lt;/code&gt;. The bit layout described above is valid only for a &lt;code&gt;UUID&lt;/code&gt; with a variant value of 2, which indicates the Leach-Salz variant.</source>
          <target state="translated">バリアントフィールドには、 &lt;code&gt;UUID&lt;/code&gt; のレイアウトを識別する値が含まれています。上記のビットレイアウトは、Leach-Salzバリアントを示すバリアント値2の &lt;code&gt;UUID&lt;/code&gt; に対してのみ有効です。</target>
        </trans-unit>
        <trans-unit id="9ff76ceb354bc3cf76d2cc94fa0c1aadbaba32d0" translate="yes" xml:space="preserve">
          <source>The variant number associated with this &lt;code&gt;UUID&lt;/code&gt;. The variant number describes the layout of the &lt;code&gt;UUID&lt;/code&gt;. The variant number has the following meaning:</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられたバリアント番号。バリアント番号は、 &lt;code&gt;UUID&lt;/code&gt; のレイアウトを示します。バリアント番号には次の意味があります。</target>
        </trans-unit>
        <trans-unit id="0759d3d03dbf7321713ed34def228b0638c5dab2" translate="yes" xml:space="preserve">
          <source>The variant number of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のバリアント番号</target>
        </trans-unit>
        <trans-unit id="4f651a70a37a4814efdb6f28d7a64f3a1d099f21" translate="yes" xml:space="preserve">
          <source>The various &lt;code&gt;next&lt;/code&gt;methods of &lt;code&gt;Scanner&lt;/code&gt; make a match result available if they complete without throwing an exception. For instance, after an invocation of the &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; method that returned an int, this method returns a &lt;code&gt;MatchResult&lt;/code&gt; for the search of the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above. Similarly the &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods will make a match available if they succeed.</source>
          <target state="translated">&lt;code&gt;Scanner&lt;/code&gt; のさまざまな &lt;code&gt;next&lt;/code&gt; メソッドは、例外をスローせずに完了した場合に一致結果を利用できるようにします。たとえば、intを返した&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した後、このメソッドは上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数の&lt;/i&gt;&lt;/a&gt;正規表現を検索するために &lt;code&gt;MatchResult&lt;/code&gt; を返します。同様に、&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;メソッドは、成功した場合に一致を使用できるようにします。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="1180351e5247e4780b4dc25a40f38943b4896262" translate="yes" xml:space="preserve">
          <source>The vector is empty if there is no timer notification registered for this timer MBean.</source>
          <target state="translated">このタイマーMBeanにタイマー通知が登録されていない場合、ベクトルは空です。</target>
        </trans-unit>
        <trans-unit id="d9e2d6864ec2b83e2c1a64a7dd7faed626bbda83" translate="yes" xml:space="preserve">
          <source>The vector is empty if there is no timer notifications registered for this timer MBean with the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;type&lt;/code&gt; このタイマーMBeanに登録されたタイマー通知がない場合、ベクターは空です。</target>
        </trans-unit>
        <trans-unit id="58462e7fd48bf8ac3b31199fbf9a449a7280a048" translate="yes" xml:space="preserve">
          <source>The vendor might supply the following &lt;code&gt;ChangeIDControl&lt;/code&gt; and &lt;code&gt;VendorXControlFactory&lt;/code&gt; classes. The &lt;code&gt;VendorXControlFactory&lt;/code&gt; will be used by the service provider when the provider receives response controls from the LDAP server.</source>
          <target state="translated">ベンダーは、次の &lt;code&gt;ChangeIDControl&lt;/code&gt; および &lt;code&gt;VendorXControlFactory&lt;/code&gt; クラスを提供する場合があります。 &lt;code&gt;VendorXControlFactory&lt;/code&gt; は、プロバイダがLDAPサーバから応答コントロールを受信したときに、サービスプロバイダによって使用されます。</target>
        </trans-unit>
        <trans-unit id="92b9d2715811e51e997d7d4ca0742429f1579adf" translate="yes" xml:space="preserve">
          <source>The version field holds a value that describes the type of this &lt;code&gt;UUID&lt;/code&gt;. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. These types have a version value of 1, 2, 3 and 4, respectively.</source>
          <target state="translated">versionフィールドは、この &lt;code&gt;UUID&lt;/code&gt; のタイプを説明する値を保持します。UUIDには4つの異なる基本タイプがあります。時間ベース、DCEセキュリティ、名前ベース、およびランダムに生成されたUUIDです。これらのタイプのバージョン値は、それぞれ1、2、3、および4です。</target>
        </trans-unit>
        <trans-unit id="05fd679ec54a555aaf6a087d093ec8e9634ec69d" translate="yes" xml:space="preserve">
          <source>The version number associated with this &lt;code&gt;UUID&lt;/code&gt;. The version number describes how this &lt;code&gt;UUID&lt;/code&gt; was generated. The version number has the following meaning:</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられているバージョン番号。バージョン番号は、この &lt;code&gt;UUID&lt;/code&gt; の生成方法を示しています。バージョン番号には次の意味があります。</target>
        </trans-unit>
        <trans-unit id="6cff03f566dfbcc1da388f423a088498b0bfb75e" translate="yes" xml:space="preserve">
          <source>The version number of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のバージョン番号</target>
        </trans-unit>
        <trans-unit id="f960447e30249f093071e1177d67cf04bcbfa430" translate="yes" xml:space="preserve">
          <source>The version of the Hijrah variant data</source>
          <target state="translated">ヒジュラ亜種データのバージョン</target>
        </trans-unit>
        <trans-unit id="cf8368aa8f5f9b58b1196c5b1361941f6ebe95f2" translate="yes" xml:space="preserve">
          <source>The version of the RMI Connector Protocol understood by this connector server. This is a string with the following format:</source>
          <target state="translated">このコネクタ サーバが理解する RMI コネクタ プロトコルのバージョン。これは、以下の形式の文字列です。</target>
        </trans-unit>
        <trans-unit id="67c46c943cb161ebaf61561a24251c325c38dcc4" translate="yes" xml:space="preserve">
          <source>The version of the information model in which this element was introduced. A set of MBeans defined by an application is collectively called an &lt;em&gt;information model&lt;/em&gt;. The application may also define versions of this model, and use the &lt;code&gt;&quot;since&quot;&lt;/code&gt; field to record the version in which an element first appeared.</source>
          <target state="translated">この要素が導入された情報モデルのバージョン。アプリケーションによって定義されたMBeanのセットは、まとめて&lt;em&gt;情報モデル&lt;/em&gt;と呼ばれます。アプリケーションはこのモデルのバージョンを定義することもでき、 &lt;code&gt;&quot;since&quot;&lt;/code&gt; フィールドを使用して、要素が最初に出現したバージョンを記録します。</target>
        </trans-unit>
        <trans-unit id="3685bfd8924e2e12ab202fe7572e0fc113f3c96f" translate="yes" xml:space="preserve">
          <source>The version of the supported language.</source>
          <target state="translated">サポートされている言語のバージョンです。</target>
        </trans-unit>
        <trans-unit id="493ae14aa8bda8f4cbb42c55258a1945f011ee02" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition 5.0. The language described in</source>
          <target state="translated">Java 2 Platform,Standard Edition 5.0で認識されているバージョン。で記述されている言語。</target>
        </trans-unit>
        <trans-unit id="6c8ee4fc6c4ec0e899d656f5815ce54f62279899" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.2. The language described in</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.2で認識されたバージョン。で記述されている言語。</target>
        </trans-unit>
        <trans-unit id="60485dd1cd7fcf936094d3c03d7336c18a555a23" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.3. No major changes from &lt;code&gt;RELEASE_2&lt;/code&gt;.</source>
          <target state="translated">Java 2 Platform、Standard Edition、v 1.3によって認識されるバージョン。 &lt;code&gt;RELEASE_2&lt;/code&gt; からの大きな変更はありません。</target>
        </trans-unit>
        <trans-unit id="33e65cacac89fcf14c1fb1ffd5441c1fd46da791" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.4. Added a simple assertion facility.</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.4で認識されるバージョン。シンプルなアサーション機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="2af496d830b8e85fb7bdac6006a960dc011931da" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform 1.1. The language is &lt;code&gt;RELEASE_0&lt;/code&gt; augmented with nested classes as described in the 1.1 update to</source>
          <target state="translated">Javaプラットフォーム1.1によって認識されるバージョン。言語は &lt;code&gt;RELEASE_0&lt;/code&gt; であり、1.1の更新で説明されているように、ネストされたクラスで拡張されています。</target>
        </trans-unit>
        <trans-unit id="5a1c95c42d35f8469c63a9001750d4f9ec2552bd" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 6. No major changes from &lt;code&gt;RELEASE_5&lt;/code&gt;.</source>
          <target state="translated">Java Platform、Standard Edition 6によって認識されたバージョン &lt;code&gt;RELEASE_5&lt;/code&gt; からの大きな変更はありません。</target>
        </trans-unit>
        <trans-unit id="dc1600019466bdbd05352dcab9d2cc9fbdf36863" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 7. Additions in this release include, diamond syntax for constructors, &lt;code&gt;try&lt;/code&gt;-with-resources, strings in switch, binary literals, and multi-catch.</source>
          <target state="translated">Java Platform、Standard Edition 7で認識されるバージョン。このリリースでの追加には、コンストラクタのダイヤモンド構文、 &lt;code&gt;try&lt;/code&gt; -with-resources、スイッチ内の文字列、バイナリリテラル、マルチキャッチなどがあります。</target>
        </trans-unit>
        <trans-unit id="ba5437ac950badfe9820695aa51943c8ac51fd94" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 8. Additions in this release include lambda expressions and default methods.</source>
          <target state="translated">Java Platform,Standard Edition 8 で認識されるバージョン。このリリースでは、ラムダ式とデフォルトメソッドが追加されています。</target>
        </trans-unit>
        <trans-unit id="c631dab429ccbd9fa24264a600e66db40fdd0678" translate="yes" xml:space="preserve">
          <source>The view of a file provided by an instance of this class is guaranteed to be consistent with other views of the same file provided by other instances in the same program. The view provided by an instance of this class may or may not, however, be consistent with the views seen by other concurrently-running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="translated">このクラスのインスタンスによって提供されるファイルのビューは、同じプログラムの他のインスタンスによって提供される同じファイルの他のビューと一致することが保証されています。しかし、このクラスのインスタンスによって提供されるビューは、基礎となるオペレーティング・システムによって実行されるキャッシュやネットワーク・ファイルシステム・プロトコルによって引き起こされる遅延のために、他の同時実行中のプログラムによって表示されるビューと一致している場合もあれば、一致していない場合もあります。これは、これらの他のプログラムが書かれた言語や、それらが同じマシン上で実行されているか、他のマシン上で実行されているかに関係なく当てはまります。このような矛盾の正確な性質はシステムに依存しており、そのため特定されていません。</target>
        </trans-unit>
        <trans-unit id="e69e4b05faf63e778871c0d3850aefc9998b9588" translate="yes" xml:space="preserve">
          <source>The view of the files and file system provided by classes in this package are guaranteed to be consistent with other views provided by other instances in the same Java virtual machine. The view may or may not, however, be consistent with the view of the file system as seen by other concurrently running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="translated">本パッケージのクラスによって提供されるファイルとファイルシステムのビューは、同じJava仮想マシン内の他のインスタンスによって提供される他のビューと一致することが保証されています。しかし、そのビューは、基礎となるオペレーティング・システムによって実行されるキャッシングや、ネットワーク・ファイルシステム・プロトコルによって引き起こされる遅延のために、他の同時実行中のプログラムによって見られるファイル・システムのビューと一致している場合もあれば、一致していない場合もあります。これは、これらの他のプログラムが書かれた言語や、それらが同じマシン上で実行されているか、他のマシン上で実行されているかに関係なく当てはまります。このような矛盾の正確な性質はシステムに依存しており、そのため特定されていません。</target>
        </trans-unit>
        <trans-unit id="dcf26d7eb7f2b3b9db64cfa5669c95b2c00b65af" translate="yes" xml:space="preserve">
          <source>The view's &lt;code&gt;spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューの &lt;code&gt;spliterator&lt;/code&gt; は&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; を&lt;/a&gt;報告します。</target>
        </trans-unit>
        <trans-unit id="7f5166b266b10230b8c5577f5d6f553331cc4405" translate="yes" xml:space="preserve">
          <source>The view's &lt;code&gt;spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューの &lt;code&gt;spliterator&lt;/code&gt; は、&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; を報告し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e180456519029a61110027d18c36a686018713ed" translate="yes" xml:space="preserve">
          <source>The view's iterators and spliterators are &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューのイテレータとスプリッタは、&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="c1f582e06f3b6e62c7c1e3d34a0b9a3c408789c8" translate="yes" xml:space="preserve">
          <source>The virtual machine is</source>
          <target state="translated">仮想マシンは</target>
        </trans-unit>
        <trans-unit id="e9f9a3839ed2055f08a26dbd35178cd5a027df29" translate="yes" xml:space="preserve">
          <source>The virtual machine is free to treat the &lt;code&gt;stackSize&lt;/code&gt; parameter as a suggestion. If the specified value is unreasonably low for the platform, the virtual machine may instead use some platform-specific minimum value; if the specified value is unreasonably high, the virtual machine may instead use some platform-specific maximum. Likewise, the virtual machine is free to round the specified value up or down as it sees fit (or to ignore it completely).</source>
          <target state="translated">仮想マシンは、 &lt;code&gt;stackSize&lt;/code&gt; パラメータを提案として自由に扱うことができます。指定された値がプラットフォームに対して不当に低い場合、仮想マシンは代わりにプラットフォーム固有の最小値を使用することがあります。指定された値が不当に高い場合、仮想マシンは代わりにプラットフォーム固有の最大値を使用する可能性があります。同様に、仮想マシンは、指定された値を、適切と思われるように（または完全に無視して）切り上げたり切り下げたりできます。</target>
        </trans-unit>
        <trans-unit id="47c721c30f38fc2edaadd8b6106e60056792e573" translate="yes" xml:space="preserve">
          <source>The virtual machine performs the finalization process automatically as needed, in a separate thread, if the &lt;code&gt;runFinalization&lt;/code&gt; method is not invoked explicitly.</source>
          <target state="translated">&lt;code&gt;runFinalization&lt;/code&gt; メソッドが明示的に呼び出されない場合、仮想マシンは別のスレッドで必要に応じてファイナライズプロセスを自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="8642fbcebaba07b4669d35a2e26b8bad16051e94" translate="yes" xml:space="preserve">
          <source>The virtual machine's shutdown sequence consists of two phases. In the first phase all registered &lt;a href=&quot;runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown hooks&lt;/code&gt;&lt;/a&gt;, if any, are started in some unspecified order and allowed to run concurrently until they finish. In the second phase all uninvoked finalizers are run if &lt;a href=&quot;runtime#runFinalizersOnExit-boolean-&quot;&gt;&lt;code&gt;finalization-on-exit&lt;/code&gt;&lt;/a&gt; has been enabled. Once this is done the virtual machine &lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仮想マシンのシャットダウンシーケンスは、2つのフェーズで構成されます。最初のフェーズでは、登録されているすべての&lt;a href=&quot;runtime#addShutdownHook-java.lang.Thread-&quot;&gt; &lt;code&gt;shutdown hooks&lt;/code&gt; &lt;/a&gt;（存在する場合）が不特定の順序で開始され、完了するまで同時に実行できます。2番目のフェーズでは、&lt;a href=&quot;runtime#runFinalizersOnExit-boolean-&quot;&gt; &lt;code&gt;finalization-on-exit&lt;/code&gt; &lt;/a&gt;が有効になっている場合、呼び出されていないファイナライザがすべて実行されます。これが完了すると、仮想マシンが&lt;a href=&quot;runtime#halt-int-&quot;&gt; &lt;code&gt;halts&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6ae8e7cd4a0bb7e3290fc509b4004aec986be05c" translate="yes" xml:space="preserve">
          <source>The volatile write to &lt;code&gt;V&lt;/code&gt; is placed (in an implementation specific manner) in the global synchronization order.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; への揮発性書き込みは、（実装固有の方法で）グローバル同期順序で配置されます。</target>
        </trans-unit>
        <trans-unit id="c21a8aed036bbcc185b5b957c5388bff363a670b" translate="yes" xml:space="preserve">
          <source>The week-based-year itself is defined relative to the standard ISO proleptic year. It differs from the standard year in that it always starts on a Monday.</source>
          <target state="translated">週を基準とした年自体は、標準的なISO proleptic yearと相対的に定義されている。これは標準的な年とは異なり、常に月曜日に始まるという点で異なります。</target>
        </trans-unit>
        <trans-unit id="d336c8b0105b02d9ce73f7d6cc89eeb2f4a9e56e" translate="yes" xml:space="preserve">
          <source>The width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe9b320764e1c259d500225d7d4be176cd3d638" translate="yes" xml:space="preserve">
          <source>The width is defined as for &lt;a href=&quot;#genWidth&quot;&gt;General conversions&lt;/a&gt;.</source>
          <target state="translated">幅は、&lt;a href=&quot;#genWidth&quot;&gt;一般的な変換と&lt;/a&gt;同様に定義されます。</target>
        </trans-unit>
        <trans-unit id="b9b89fd07215f56373dd23dc6888317dc590ecf4" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output including the &lt;code&gt;'%'&lt;/code&gt;. If the length of the converted value is less than the &lt;code&gt;width&lt;/code&gt; then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left. If width is not specified then just the &lt;code&gt;'%'&lt;/code&gt; is output.</source>
          <target state="translated">幅は、 &lt;code&gt;'%'&lt;/code&gt; を含む、出力に書き込まれる最小文字数です。変換された値の長さが &lt;code&gt;width&lt;/code&gt; より短い場合、文字の総数が幅と等しくなるまで、出力にスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。パディングは左側にあります。幅が指定されていない場合は、 &lt;code&gt;'%'&lt;/code&gt; のみが出力されます。</target>
        </trans-unit>
        <trans-unit id="08497cb4ffc4de43dc36a3a7a1421b6649c24786" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output. For the line separator conversion, width is not applicable; if it is provided, an exception will be thrown.</source>
          <target state="translated">widthは,出力に書き込む最小文字数である。行区切り変換では,widthは適用されません。</target>
        </trans-unit>
        <trans-unit id="93c895f38cd814a0586673133f90d150b89f6aeb" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output. If the length of the converted value is less than the &lt;code&gt;width&lt;/code&gt; then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">幅は、出力に書き込まれる最小文字数です。変換された値の長さが &lt;code&gt;width&lt;/code&gt; より短い場合、文字の総数が幅と等しくなるまで、出力にスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="11573fd74f145064e80c81a509d0d28ecf0a475c" translate="yes" xml:space="preserve">
          <source>The width of each tile if tiling has been set, or 0 otherwise.</source>
          <target state="translated">タイリングが設定されている場合は各タイルの幅、設定されていない場合は0。</target>
        </trans-unit>
        <trans-unit id="ec49c197d43c64b4897761f6df266e5358ba460b" translate="yes" xml:space="preserve">
          <source>The width of the printed fraction can be controlled. Setting the minimum width to zero will cause no output to be generated. The printed fraction will have the minimum width necessary between the minimum and maximum widths - trailing zeroes are omitted. No rounding occurs due to the maximum width - digits are simply dropped.</source>
          <target state="translated">印刷される端数の幅を制御することができます。最小幅をゼロに設定する と 、 出力は生成 さ れません。印刷される分数は、最小幅と最大幅の間に必要な最小幅を持ちます-末尾のゼロは省略されます。最大幅のために丸めは発生せず、 桁は単純に落とされます。</target>
        </trans-unit>
        <trans-unit id="87463d379aacb015b2b5b4467fead7e3636e854d" translate="yes" xml:space="preserve">
          <source>The working directory does not exist.</source>
          <target state="translated">作業ディレクトリが存在しません。</target>
        </trans-unit>
        <trans-unit id="149ba28788d40521e03aae86481799a4aad8958e" translate="yes" xml:space="preserve">
          <source>The working directory of the new subprocess is specified by &lt;code&gt;dir&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the subprocess inherits the current working directory of the current process.</source>
          <target state="translated">新しいサブプロセスの作業ディレクトリは &lt;code&gt;dir&lt;/code&gt; で指定されます。場合 &lt;code&gt;dir&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、サブプロセスは現在のプロセスの現在の作業ディレクトリを継承します。</target>
        </trans-unit>
        <trans-unit id="9d7e42ba8563b4861562d9fedd9c297c3c802ae3" translate="yes" xml:space="preserve">
          <source>The wrapper instance will implement the requested interface and its super-types, but no other single-method interfaces. This means that the instance will not unexpectedly pass an &lt;code&gt;instanceof&lt;/code&gt; test for any unrequested type.</source>
          <target state="translated">ラッパーインスタンスは、要求されたインターフェイスとそのスーパータイプを実装しますが、他の単一メソッドインターフェイスは実装しません。これは、インスタンスが要求されていないタイプの &lt;code&gt;instanceof&lt;/code&gt; テストに予期せず合格しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="3c15fc629a9a44eeca7f4fece2da5b14c32ef837" translate="yes" xml:space="preserve">
          <source>The wrapper will allow data to be collected on the native method call, but now the problem becomes linking up the wrapped method with the native implementation. That is, the method &lt;code&gt;wrapped_foo&lt;/code&gt; needs to be resolved to the native implementation of &lt;code&gt;foo&lt;/code&gt;, which might be:</source>
          <target state="translated">ラッパーを使用すると、ネイティブメソッドの呼び出しでデータを収集できますが、ラップされたメソッドとネイティブ実装をリンクする問題が発生します。つまり、メソッド &lt;code&gt;wrapped_foo&lt;/code&gt; は、次のような &lt;code&gt;foo&lt;/code&gt; のネイティブ実装に解決される必要があります。</target>
        </trans-unit>
        <trans-unit id="16ec3748a6bad8d0fc41d7ba859a56b2513c46d9" translate="yes" xml:space="preserve">
          <source>The write end of a pipe</source>
          <target state="translated">パイプの書き込み終了</target>
        </trans-unit>
        <trans-unit id="8f8bfaf5e08009c50abac22b29c0466e9561af91" translate="yes" xml:space="preserve">
          <source>The write lock is acquired by the current thread; or</source>
          <target state="translated">書き込みロックは、現在のスレッドで取得されます。</target>
        </trans-unit>
        <trans-unit id="4479644870cc0b6de23ac32560cf11f5241f6aec" translate="yes" xml:space="preserve">
          <source>The write lock provides a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation that behaves in the same way, with respect to the write lock, as the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation provided by &lt;a href=&quot;reentrantlock#newCondition--&quot;&gt;&lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt;&lt;/a&gt; does for &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. This &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; can, of course, only be used with the write lock.</source>
          <target state="translated">書き込みロックを提供する&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;として書き込みロックに対して同じように動作し、その実装&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;によって提供された実装&lt;a href=&quot;reentrantlock#newCondition--&quot;&gt; &lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt; &lt;/a&gt;の場合と&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; のを&lt;/a&gt;。もちろん、この&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;は書き込みロックでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="02bad978674eb6748c2b65fbeda2a59a87a1171a" translate="yes" xml:space="preserve">
          <source>The write operation may write up to</source>
          <target state="translated">までの書き込みが可能です。</target>
        </trans-unit>
        <trans-unit id="848f53cc5fb27d051b03412fae86949bd08f9ecd" translate="yes" xml:space="preserve">
          <source>The writeObject method is responsible for writing the state of the object for its particular class so that the corresponding readObject method can restore it. The default mechanism for saving the Object's fields can be invoked by calling out.defaultWriteObject. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">writeObjectメソッドは、その特定のクラスのオブジェクトの状態を書き出し、対応するreadObjectメソッドがそれを復元できるようにします。オブジェクトのフィールドを保存するためのデフォルトのメカニズムは、 out.defaultWriteObject を呼び出すことで呼び出すことができます。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドを writeObject メソッドを使用して ObjectOutputStream に書き込むか、DataOutput でサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="0bfd2d3d4a572740437c98d7a9b174fefaf95ccd" translate="yes" xml:space="preserve">
          <source>The writeObject method is responsible for writing the state of the object for its particular class so that the corresponding readObject method can restore it. The method does not need to concern itself with the state belonging to the object's superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">writeObject メソッドは、対応する readObject メソッドがそれを復元できるように、その特定のクラスのオブジェクトの状態を書き込むことを担当します。このメソッドは、オブジェクトのスーパークラスまたはサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドをwriteObjectメソッドを使用してObjectOutputStreamに書き込むか、DataOutputでサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="12162856e28a75771ac79f11fb7626d43e724abb" translate="yes" xml:space="preserve">
          <source>The writeStreamHeader method is provided so subclasses can append or prepend their own header to the stream. It writes the magic number and version to the stream.</source>
          <target state="translated">サブクラスが自分のヘッダをストリームに追加したり、前置したりできるように writeStreamHeader メソッドが提供されています。これは、マジックナンバーとバージョンをストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="62a34851e79619261706f169067b1e8ae983bacb" translate="yes" xml:space="preserve">
          <source>The writing is not complete until a call to &lt;code&gt;endWriteEmpty&lt;/code&gt; occurs. Calls to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, &lt;code&gt;replacePixels&lt;/code&gt;, and &lt;code&gt;endReplacePixels&lt;/code&gt; may occur between calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;endWriteEmpty&lt;/code&gt;. However, calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; cannot be nested, and calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;prepareInsertEmpty&lt;/code&gt; may not be interspersed.</source>
          <target state="translated">&lt;code&gt;endWriteEmpty&lt;/code&gt; の呼び出しが発生するまで、書き込みは完了しません。通話 &lt;code&gt;prepareReplacePixels&lt;/code&gt; 、 &lt;code&gt;replacePixels&lt;/code&gt; 、および &lt;code&gt;endReplacePixels&lt;/code&gt; はへの呼び出しの間で発生する可能性 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; と &lt;code&gt;endWriteEmpty&lt;/code&gt; 。ただし、 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; の呼び出しをネストすることはできず、 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; と &lt;code&gt;prepareInsertEmpty&lt;/code&gt; の呼び出しを混在させることはできません。</target>
        </trans-unit>
        <trans-unit id="3f340ab186950cff3443ac085c8bde6bcffa4a47" translate="yes" xml:space="preserve">
          <source>The writing of interlaced images can be controlled by the progressive mode of the provided &lt;code&gt;ImageWriteParam&lt;/code&gt; instance. If progressive mode is &lt;code&gt;MODE_DISABLED&lt;/code&gt; then a non-interlaced image will be written. If progressive mode is &lt;code&gt;MODE_DEFAULT&lt;/code&gt; then an interlaced image will be written. If progressive mode is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;, then the metadata setting is used (if it is provided, otherwise an interlaced image will be written).</source>
          <target state="translated">インターレース画像の書き込みは、提供されている &lt;code&gt;ImageWriteParam&lt;/code&gt; インスタンスのプログレッシブモードで制御できます。プログレッシブモードが &lt;code&gt;MODE_DISABLED&lt;/code&gt; の場合、非インターレースイメージが書き込まれます。プログレッシブモードが &lt;code&gt;MODE_DEFAULT&lt;/code&gt; の場合、インターレースイメージが書き込まれます。プログレッシブモードが &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; の場合、メタデータ設定が使用されます（指定されている場合は、インターレースイメージが書き込まれます）。</target>
        </trans-unit>
        <trans-unit id="470f5ef5b9bb159907b73cd224384f1fb1f65e99" translate="yes" xml:space="preserve">
          <source>The year 1AD/CE is represented by 1.</source>
          <target state="translated">1AD/CEの年は1で表されます。</target>
        </trans-unit>
        <trans-unit id="94efbba691fdae1a9f89ed9e390e5077e5ec1212" translate="yes" xml:space="preserve">
          <source>The year 1BC/BCE is represented by 0.</source>
          <target state="translated">1BC/BCEの年は0で表されます。</target>
        </trans-unit>
        <trans-unit id="a4166e71717478dfbab468797a5aaf46cfd05d82" translate="yes" xml:space="preserve">
          <source>The year 2AD/CE is represented by 2.</source>
          <target state="translated">2AD/CEの年は2で表されます。</target>
        </trans-unit>
        <trans-unit id="109099de288ae4e09256b7ba426e8999e6a15a2f" translate="yes" xml:space="preserve">
          <source>The year 2BC/BCE is represented by -1.</source>
          <target state="translated">2BC/BCEの年は-1で表されます。</target>
        </trans-unit>
        <trans-unit id="07ec242f131c9a27b1dbfd15fa2dc1ccc37871eb" translate="yes" xml:space="preserve">
          <source>The year can be divided into four quarters. This method returns the first month of the quarter for the base month. January, February and March return January. April, May and June return April. July, August and September return July. October, November and December return October.</source>
          <target state="translated">1年を4つの四半期に分割することができます。この方法では、四半期の最初の月を基準月として返します。1月、2月、3月は1月を返します。4月、5月、6月は4月を返します。7月、8月、9月は7月を返します。10月、11月、12月は10月を返します。</target>
        </trans-unit>
        <trans-unit id="63b23bd5415b33a1dd713df991700a20700f76a3" translate="yes" xml:space="preserve">
          <source>The year returned by this method is proleptic as per &lt;code&gt;get(YEAR)&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって返される年は &lt;code&gt;get(YEAR)&lt;/code&gt; のように前向きです。</target>
        </trans-unit>
        <trans-unit id="b6358c1cf0f427abe2556c16331c59f4b8d32da2" translate="yes" xml:space="preserve">
          <source>The year returned by this method is proleptic as per &lt;code&gt;get(YEAR)&lt;/code&gt;. To obtain the year-of-era, use &lt;code&gt;get(YEAR_OF_ERA)&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって返される年は &lt;code&gt;get(YEAR)&lt;/code&gt; のように前向きです。年号を取得するには、 &lt;code&gt;get(YEAR_OF_ERA)&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="cbff7fe10e8b9cf90167f0d75f706532355546dc" translate="yes" xml:space="preserve">
          <source>The year within the era.</source>
          <target state="translated">時代の中の年。</target>
        </trans-unit>
        <trans-unit id="41d3f4e85bc99f5353fb949c0b4b1e34eb530da9" translate="yes" xml:space="preserve">
          <source>The year, month, and day are checked against the new requested HijrahChronology. If the chronology has a shorter month length for the month, the day is reduced to be the last day of the month.</source>
          <target state="translated">年、月、日は、新しいリクエストされたHijrahChronologyと照合されます。年表の月の長さが短い場合、日はその月の最終日に縮小されます。</target>
        </trans-unit>
        <trans-unit id="95823fc22286c4941f6416c1b3d8f9df75024a4b" translate="yes" xml:space="preserve">
          <source>The zone ID is &lt;em&gt;not&lt;/em&gt; localized; it's one of the valid IDs of the &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class that are not &lt;a href=&quot;../util/timezone#CustomID&quot;&gt;custom IDs&lt;/a&gt;. All other entries are localized names.</source>
          <target state="translated">ゾーンIDはローカライズされて&lt;em&gt;いません&lt;/em&gt;。これは、&lt;a href=&quot;../util/timezone#CustomID&quot;&gt;カスタムID&lt;/a&gt;ではない&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスの有効なIDの1つです。他のすべてのエントリはローカライズされた名前です。</target>
        </trans-unit>
        <trans-unit id="12a91a95938b30a6f68ad5300194d7afd44011e4" translate="yes" xml:space="preserve">
          <source>The zone ID is &lt;em&gt;not&lt;/em&gt; localized; it's one of the valid IDs of the &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class that are not &lt;a href=&quot;../util/timezone#CustomID&quot;&gt;custom IDs&lt;/a&gt;. All other entries are localized names. If a zone does not implement daylight saving time, the daylight saving time names should not be used.</source>
          <target state="translated">ゾーンIDはローカライズされて&lt;em&gt;いません&lt;/em&gt;。これは、&lt;a href=&quot;../util/timezone#CustomID&quot;&gt;カスタムID&lt;/a&gt;ではない&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスの有効なIDの1つです。他のすべてのエントリはローカライズされた名前です。ゾーンが夏時間を実装していない場合、夏時間の名前は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="ef072be235e128f4417bff8f2ecc9a9fd327d55d" translate="yes" xml:space="preserve">
          <source>The zone ID may be same as the &lt;a href=&quot;zoneddatetime#getOffset--&quot;&gt;offset&lt;/a&gt;. If this is true, then any future calculations, such as addition or subtraction, have no complex edge cases due to time-zone rules. See also &lt;a href=&quot;zoneddatetime#withFixedOffsetZone--&quot;&gt;&lt;code&gt;withFixedOffsetZone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンIDは&lt;a href=&quot;zoneddatetime#getOffset--&quot;&gt;オフセット&lt;/a&gt;と同じにすることができます。これが当てはまる場合、加算や減算などの将来の計算では、タイムゾーンルールによる複雑なエッジケースは発生しません。&lt;a href=&quot;zoneddatetime#withFixedOffsetZone--&quot;&gt; &lt;code&gt;withFixedOffsetZone()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="0e5541312fac30d6776b7c47cc8181f1f41befb2" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;implies&lt;/code&gt; checks each of the following, in order, and for each returns true if the stated condition is true:</source>
          <target state="translated">その後 &lt;code&gt;implies&lt;/code&gt; 記載された条件が真である場合には、それぞれの戻りをチェック以下のそれぞれは、真：</target>
        </trans-unit>
        <trans-unit id="9548fcc35b330bbac33c7968b3c68d3a8baf60b6" translate="yes" xml:space="preserve">
          <source>Then every entry in this &lt;code&gt;Properties&lt;/code&gt; table is written out, one per line. For each entry the key string is written, then an ASCII &lt;code&gt;=&lt;/code&gt;, then the associated element string. For the key, all space characters are written with a preceding &lt;code&gt;\&lt;/code&gt; character. For the element, leading space characters, but not embedded or trailing space characters, are written with a preceding &lt;code&gt;\&lt;/code&gt; character. The key and element characters &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;:&lt;/code&gt; are written with a preceding backslash to ensure that they are properly loaded.</source>
          <target state="translated">次に、この &lt;code&gt;Properties&lt;/code&gt; テーブルのすべてのエントリが1行に1つずつ書き込まれます。エントリごとにキー文字列が書き込まれ、次にASCII &lt;code&gt;=&lt;/code&gt; 、次に関連する要素文字列が書き込まれます。キーの場合、すべての空白文字は、先行する &lt;code&gt;\&lt;/code&gt; 文字で記述されます。要素の場合、先行スペース文字は埋め込まれますが、後続スペース文字は先行 &lt;code&gt;\&lt;/code&gt; 文字で書き込まれません。キーと要素の文字 &lt;code&gt;#&lt;/code&gt; 、 &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、および &lt;code&gt;:&lt;/code&gt; は、それらが適切にロードされるように、前にバックスラッシュを付けて書き込まれます。</target>
        </trans-unit>
        <trans-unit id="f2515634c238092ca6ab3e114e72af7420724d4f" translate="yes" xml:space="preserve">
          <source>Then it calls &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer implementation.</source>
          <target state="translated">次に、MBeanServer実装で使用する必要がある &lt;var&gt;delegate&lt;/var&gt; を渡して &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5c9c219ad93a3973cb2bece1cad4c707c4e984e8" translate="yes" xml:space="preserve">
          <source>Then the floating-point result equals the value of the mathematical expression</source>
          <target state="translated">そして、浮動小数点の結果は、数式</target>
        </trans-unit>
        <trans-unit id="2305112f3cfd47ec6189ee9ae9aff82a3050640c" translate="yes" xml:space="preserve">
          <source>Then the following linkage invariants must hold:</source>
          <target state="translated">そうすると、次の連結不変量が保持されなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed9c8aedb6a288d80aca27bb2abdd611ccdaa129" translate="yes" xml:space="preserve">
          <source>Then the method &lt;code&gt;doIt&lt;/code&gt; is overloaded. EventHandler will invoke the method that is appropriate based on the source. If the source is null, then either method is appropriate and the one that is invoked is undefined. For that reason we recommend against targeting overloaded methods.</source>
          <target state="translated">次に、メソッド &lt;code&gt;doIt&lt;/code&gt; がオーバーロードされます。EventHandlerは、ソースに基づいて適切なメソッドを呼び出します。ソースがnullの場合、どちらのメソッドも適切であり、呼び出されるメソッドは未定義です。そのため、オーバーロードされたメソッドをターゲットにしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bf6134715d80b46ffde96271931c92751bbdaf3f" translate="yes" xml:space="preserve">
          <source>Then you can execute:</source>
          <target state="translated">ならば、実行してもいい。</target>
        </trans-unit>
        <trans-unit id="c63c81bede51f6179d36f078fe8cba0feafc1e55" translate="yes" xml:space="preserve">
          <source>Then, before sending a notification to a listener registered with a filter, the notification broadcaster compares this notification type with all notification types enabled by the filter. The notification will be sent to the listener only if its filter enables this notification type.</source>
          <target state="translated">そして、フィルタに登録されているリスナーに通知を送信する前に、通知放送局は、この通知タイプをフィルタによって有効化されているすべての通知タイプと比較する。そのフィルタがこの通知タイプを有効にしている場合にのみ、リスナーに通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">Then:</target>
        </trans-unit>
        <trans-unit id="d356dd80aaac6fd043102b988a584a6fc2fbf218" translate="yes" xml:space="preserve">
          <source>There are 3 HTTP cookie specifications:</source>
          <target state="translated">HTTPクッキーの仕様は3つあります。</target>
        </trans-unit>
        <trans-unit id="7da791d8e9fec115ce104b9f6b089536088c3804" translate="yes" xml:space="preserve">
          <source>There are 52 weeks in most week-based years, however on occasion there are 53 weeks.</source>
          <target state="translated">ほとんどの週単位の年は52週ですが、たまに53週になることもあります。</target>
        </trans-unit>
        <trans-unit id="ea75d499786717edf2fd9174e48f8b5e056e64a9" translate="yes" xml:space="preserve">
          <source>There are &lt;code&gt;SSLSessionContext&lt;/code&gt; parameters that affect how sessions are stored:</source>
          <target state="translated">あり &lt;code&gt;SSLSessionContext&lt;/code&gt; にセッションが保存されているどのように影響するパラメータは：</target>
        </trans-unit>
        <trans-unit id="368828561f4d9578233a778592c44861ba54cf6a" translate="yes" xml:space="preserve">
          <source>There are a number of classes and interfaces in this package which are designed to ease the implementation of the SPI to customize the behavior of a compiler:</source>
          <target state="translated">このパッケージには、コンパイラの動作をカスタマイズするためにSPIの実装を容易にするために設計されたクラスやインターフェースがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="ef8f158deb14b7be2cf0d4efa8baefda6a71922f" translate="yes" xml:space="preserve">
          <source>There are a number of implementation choices in implementing a spliterator, nearly all of which are tradeoffs between simplicity of implementation and runtime performance of streams using that spliterator. The simplest, but least performant, way to create a spliterator is to create one from an iterator using &lt;a href=&quot;../spliterators#spliteratorUnknownSize-java.util.Iterator-int-&quot;&gt;&lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt;&lt;/a&gt;. While such a spliterator will work, it will likely offer poor parallel performance, since we have lost sizing information (how big is the underlying data set), as well as being constrained to a simplistic splitting algorithm.</source>
          <target state="translated">スプリテレーターの実装にはいくつかの実装の選択肢があり、そのほとんどすべてが、実装の単純さと、そのスプリテレーターを使用するストリームの実行時パフォーマンスとの間のトレードオフです。&lt;a href=&quot;../spliterators#spliteratorUnknownSize-java.util.Iterator-int-&quot;&gt; &lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt; &lt;/a&gt;を使用して、イテレータからスプリテレータを作成するのが最も簡単ですが、パフォーマンスが最も低い方法です。このようなスプリッターは機能しますが、サイズ情報（基になるデータセットの大きさ）が失われ、単純化された分割アルゴリズムに制約されているため、並列パフォーマンスが低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9d878f03d7f9c2dbc33d5fa733c11fe1634d11ad" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;log&quot; methods that take a log level, a message string, and optionally some parameters to the message string.</source>
          <target state="translated">ログレベル、メッセージ文字列、そしてオプションでメッセージ文字列にいくつかのパラメータを取る &quot;log &quot;メソッドのセットがあります。</target>
        </trans-unit>
        <trans-unit id="1f67ebc693e84bdf0873eac0e73efeaa82c19a53" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;logp&quot; methods (for &quot;log precise&quot;) that are like the &quot;log&quot; methods, but also take an explicit source class name and method name.</source>
          <target state="translated">logp」メソッドのセット(「log精密」用)がありますが、これは「log」メソッドのようなもので、ソースクラス名とメソッド名を明示的に取ります。</target>
        </trans-unit>
        <trans-unit id="15b0598156ef25c63a8ccf779a6fbebb01022f73" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;logrb&quot; method (for &quot;log with resource bundle&quot;) that are like the &quot;logp&quot; method, but also take an explicit resource bundle object for use in localizing the log message.</source>
          <target state="translated">logrb &quot;メソッド(&quot;リソースバンドル付きのログ &quot;のための)のセットがあります。</target>
        </trans-unit>
        <trans-unit id="198896f4bb32a48314969671e1a0bed9b57f85c9" translate="yes" xml:space="preserve">
          <source>There are additional derived function shapes which extend the basic function shapes, including &lt;a href=&quot;unaryoperator&quot;&gt;&lt;code&gt;UnaryOperator&lt;/code&gt;&lt;/a&gt; (extends &lt;code&gt;Function&lt;/code&gt;) and &lt;a href=&quot;binaryoperator&quot;&gt;&lt;code&gt;BinaryOperator&lt;/code&gt;&lt;/a&gt; (extends &lt;code&gt;BiFunction&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;unaryoperator&quot;&gt; &lt;code&gt;UnaryOperator&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;Function&lt;/code&gt; 拡張）や&lt;a href=&quot;binaryoperator&quot;&gt; &lt;code&gt;BinaryOperator&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;BiFunction&lt;/code&gt; を拡張）など、基本的な関数の形状を拡張する派生関数の形状が追加されています。</target>
        </trans-unit>
        <trans-unit id="da12f2c258a3714932bec19ffbde602032cd7a0d" translate="yes" xml:space="preserve">
          <source>There are also times where you don't know a priori which permissions to check the context against. In these cases you can use the doPrivileged method that takes a context. You can also limit the scope of the privileged code by passing additional &lt;code&gt;Permission&lt;/code&gt; parameters.</source>
          <target state="translated">また、コンテキストをチェックする権限をアプリオリに知らない場合もあります。このような場合は、コンテキストを取るdoPrivilegedメソッドを使用できます。追加の &lt;code&gt;Permission&lt;/code&gt; パラメータを渡して、特権コードのスコープを制限することもできます。</target>
        </trans-unit>
        <trans-unit id="a3fe717a4310bd251c07830ac0f0685c5d479c19" translate="yes" xml:space="preserve">
          <source>There are certain methods in which the name must resolve to a context (for example, when searching a single level context). The documentation of such methods use the term &lt;em&gt;named context&lt;/em&gt; to describe their name parameter. For these methods, if the named object is not a DirContext, &lt;code&gt;NotContextException&lt;/code&gt; is thrown. Aside from these methods, there is no requirement that the &lt;em&gt;named object&lt;/em&gt; be a DirContext.</source>
          <target state="translated">名前がコンテキストに解決される必要がある特定のメソッドがあります（たとえば、単一レベルのコンテキストを検索する場合）。このようなメソッドのドキュメントでは、名前&lt;em&gt;付きコンテキスト&lt;/em&gt;という用語を使用して、名前パラメーターを説明しています。これらのメソッドでは、名前付きオブジェクトがDirContextでない場合、 &lt;code&gt;NotContextException&lt;/code&gt; がスローされます。これらのメソッドは別として、&lt;em&gt;名前付きオブジェクト&lt;/em&gt;がDirContextである必要はありません。</target>
        </trans-unit>
        <trans-unit id="94b019709222f6854929818bf02c4b3e4fa68677" translate="yes" xml:space="preserve">
          <source>There are convenience methods for tracing method entries (the &quot;entering&quot; methods), method returns (the &quot;exiting&quot; methods) and throwing exceptions (the &quot;throwing&quot; methods).</source>
          <target state="translated">メソッドのエントリ(「入る」メソッド)、メソッドのリターン(「出る」メソッド)、例外のスロー(「投げる」メソッド)をトレースするための便利なメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="618db28d57aed6ef38b8a1dbeb663ce327ce97c2" translate="yes" xml:space="preserve">
          <source>There are currently, as of 2013, two segments in the Java time-scale.</source>
          <target state="translated">2013年現在、Javaのタイムスケールには2つのセグメントがあります。</target>
        </trans-unit>
        <trans-unit id="dc705dd39680a046181dbb1861c4932a0e3881d7" translate="yes" xml:space="preserve">
          <source>There are five distinct phases to an &lt;code&gt;SSLEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; には5つの異なるフェーズがあります。</target>
        </trans-unit>
        <trans-unit id="2b0a4f63088373d76505ee3e5710b2bb4d1a2d15" translate="yes" xml:space="preserve">
          <source>There are five kinds of printing attributes: doc attributes, print request attributes, print job attributes, print service attributes, and supported-values attributes.</source>
          <target state="translated">印刷属性には、doc属性、印刷要求属性、印刷ジョブ属性、印刷サービス属性、サポートされている値属性の5種類があります。</target>
        </trans-unit>
        <trans-unit id="cad932612288aaada09723e6430aa6935c07b669" translate="yes" xml:space="preserve">
          <source>There are four main target uses of the logs:</source>
          <target state="translated">ログのターゲット用途は主に4つあります。</target>
        </trans-unit>
        <trans-unit id="3229708e8f565466bb07ef07847c54b18ae5a8fb" translate="yes" xml:space="preserve">
          <source>There are four possible types of icons: 16 x 16 color, 32 x 32 color, 16 x 16 mono, and 32 x 32 mono. If you implement a bean so that it supports a single icon, it is recommended to use 16 x 16 color. Another recommendation is to set a transparent background for the icons.</source>
          <target state="translated">アイコンの種類は4種類あります。16×16色、32×32色、16×16モノ、32×32モノです。単一のアイコンをサポートするようにビーンを実装する場合は、16×16色を使用することをお勧めします。また、アイコンの背景を透明に設定することも推奨されます。</target>
        </trans-unit>
        <trans-unit id="98c7cab3315e49a24f27fa42a75adda139b73fd1" translate="yes" xml:space="preserve">
          <source>There are many existing classes in the JDK whose signatures are well-suited for use with method references as arguments to &lt;code&gt;collect()&lt;/code&gt;. For example, the following will accumulate strings into an &lt;code&gt;ArrayList&lt;/code&gt;:</source>
          <target state="translated">JDKには多くの既存のクラスがあり、それらのシグニチャーは、メソッド参照を &lt;code&gt;collect()&lt;/code&gt; の引数として使用するのに適しています。たとえば、次は文字列を &lt;code&gt;ArrayList&lt;/code&gt; に蓄積します。</target>
        </trans-unit>
        <trans-unit id="50c2a67a49e9e5ccc44a9144a8b2fa11e175cf65" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toConcurrentMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deals with these collisions, and produce a &lt;code&gt;Map&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toConcurrentMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、アドレスに「電話帳」のマッピング名を作成したいが、2人の人物が同じ名前である可能性がある場合、次のようにしてこれらの衝突を適切に処理できます。そして、アドレスを連結したリストに &lt;code&gt;Map&lt;/code&gt; マッピング名を生成します。</target>
        </trans-unit>
        <trans-unit id="d570df6b0a511d807488f697e8fff67205fb8ca7" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deals with these collisions, and produce a &lt;code&gt;Map&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、アドレスに「電話帳」のマッピング名を作成したいが、2人の人物が同じ名前である可能性がある場合、次のようにしてこれらの衝突を適切に処理できます。そして、アドレスを連結したリストに &lt;code&gt;Map&lt;/code&gt; マッピング名を生成します。</target>
        </trans-unit>
        <trans-unit id="49355ea4a7f0de6774fce9fba4ed5392d62aa873" translate="yes" xml:space="preserve">
          <source>There are nine predefined &lt;code&gt;Class&lt;/code&gt; objects to represent the eight primitive types and void. These are created by the Java Virtual Machine, and have the same names as the primitive types that they represent, namely &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブ型とvoidを表す9つの定義済み &lt;code&gt;Class&lt;/code&gt; オブジェクトがあります。これらはJava仮想マシンによって作成され、それらが表すプリミティブ型と同じ名前、つまり &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; を持っています。</target>
        </trans-unit>
        <trans-unit id="5073f2e7c4323e6ba19e16f32d668e2082db861a" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. For example, typical implementations will cancel via &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;, so any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するベストエフォート型の試みを超える保証はありません。たとえば、一般的な実装は&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してキャンセルされるため、割り込みに応答しないタスクは決して終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="9f38732315c805219d239e42cbc8fc17be7b03f5" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. This implementation cancels tasks via &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;, so any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するベストエフォート型の試みを超える保証はありません。この実装は&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してタスクをキャンセルするため、割り込みへの応答に失敗したタスクは決して終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="c152317dbceb46ecf06e80209421468af5e327b5" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, or serializability of the &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;List&lt;/code&gt; objects returned, or of the thread-safety of the &lt;code&gt;List&lt;/code&gt; objects returned.</source>
          <target state="translated">そこの種類、可変性、または直列可能に保証されていない &lt;code&gt;Map&lt;/code&gt; や &lt;code&gt;List&lt;/code&gt; 返されたオブジェクトは、またはのスレッド安全性の &lt;code&gt;List&lt;/code&gt; 返されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bb964f47cb21418a605ea5141958b9590922fa27" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;List&lt;/code&gt; objects returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; オブジェクトまたは &lt;code&gt;List&lt;/code&gt; オブジェクトのタイプ、変更可能性、直列化可能性、またはスレッドセーフ性は保証されません。</target>
        </trans-unit>
        <trans-unit id="9cea59dafa3fd974f0fd6fa4fbe89e4cbe017d69" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; のタイプ、変更可能性、直列化可能性、またはスレッドセーフ性は保証されません。</target>
        </trans-unit>
        <trans-unit id="fb1f2720f5e4869f1d5aa33e3942c41021d10b1b" translate="yes" xml:space="preserve">
          <source>There are several basic function shapes, including &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;R&lt;/code&gt;), &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;void&lt;/code&gt;), &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;boolean&lt;/code&gt;), and &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; (nilary function to &lt;code&gt;R&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;R&lt;/code&gt; までの単項関数）、&lt;a href=&quot;consumer&quot;&gt; &lt;code&gt;Consumer&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;void&lt;/code&gt; までの単項関数）、&lt;a href=&quot;predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;boolean&lt;/code&gt; までの単項関数）、&lt;a href=&quot;supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt;（無関数から &lt;code&gt;R&lt;/code&gt; まで）など、いくつかの基本的な関数の形があります。</target>
        </trans-unit>
        <trans-unit id="a2da96ddea93cc96c7a3493bc185e3b88403db18" translate="yes" xml:space="preserve">
          <source>There are several compatibility concerns to keep in mind if an annotation type</source>
          <target state="translated">アノテーションタイプの場合、いくつかの互換性の問題があります。</target>
        </trans-unit>
        <trans-unit id="4d6b76f15b787736c9401a42c8c4bb8a7e713611" translate="yes" xml:space="preserve">
          <source>There are several different ways to create a &lt;code&gt;Locale&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="9ad010658753417b64166337fccfa2064b4e7316" translate="yes" xml:space="preserve">
          <source>There are several reasons why an enabled cipher suite might not actually be used. For example: the server socket might not have appropriate private keys available to it or the cipher suite might be anonymous, precluding the use of client authentication, while the server socket has been told to require that sort of authentication.</source>
          <target state="translated">有効な暗号化スイートが実際に使用されない理由はいくつかある。例えば、サーバソケットが適切な秘密鍵を持っていなかったり、暗号化スイートが匿名であるためにクライアント認証ができなかったり、サーバソケットがそのような認証を必要としているのに、暗号化スイートが匿名である場合などです。</target>
        </trans-unit>
        <trans-unit id="06a988002378eef1c65c03ab8ae35ac92c999ee3" translate="yes" xml:space="preserve">
          <source>There are several restrictions on the parameters that may be passed to &lt;code&gt;Proxy.getProxyClass&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Proxy.getProxyClass&lt;/code&gt; に渡すことができるパラメーターにはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="3bd6f67a832bd215f4e92e1b7ec5044236848741" translate="yes" xml:space="preserve">
          <source>There are three general strategies for queuing:</source>
          <target state="translated">キューイングの一般的な戦略は3つあります。</target>
        </trans-unit>
        <trans-unit id="a75f24f0c160cfac7adb08056cdce581127cc3e7" translate="yes" xml:space="preserve">
          <source>There are three kinds of Monitors:</source>
          <target state="translated">モニターには3種類あります。</target>
        </trans-unit>
        <trans-unit id="c25e15fc967b546c584ccdefa3b60e5531758f54" translate="yes" xml:space="preserve">
          <source>There are three main models for triggering a push of the buffer:</source>
          <target state="translated">バッファーのプッシュをトリガーにする機種は大きく分けて3つあります。</target>
        </trans-unit>
        <trans-unit id="0b997529c7c84200f70fc10cb9c45ebe777ca580" translate="yes" xml:space="preserve">
          <source>There are three phases to the use of a Signature object for either signing data or verifying a signature:</source>
          <target state="translated">データに署名したり、署名を検証したりするための署名オブジェクトの使用には、3つのフェーズがあります。</target>
        </trans-unit>
        <trans-unit id="9a114e0c5ecd87e992d3fcc0bb2519744081844d" translate="yes" xml:space="preserve">
          <source>There are three predefined modes that specify possible masters for a sequencer: &lt;code&gt;INTERNAL_CLOCK&lt;/code&gt;, &lt;code&gt;MIDI_SYNC&lt;/code&gt;, and &lt;code&gt;MIDI_TIME_CODE&lt;/code&gt;. The latter two work if the sequencer receives MIDI messages from another device. In these two modes, the sequencer's time gets reset based on system real-time timing clock messages or MIDI time code (MTC) messages, respectively. These two modes can also be used as slave modes, in which case the sequencer sends the corresponding types of MIDI messages to its receiver (whether or not the sequencer is also receiving them from a master). A fourth mode, &lt;code&gt;NO_SYNC&lt;/code&gt;, is used to indicate that the sequencer should not control its receiver's timing.</source>
          <target state="translated">シーケンサーに使用できるマスターを指定する事前定義モードには、 &lt;code&gt;INTERNAL_CLOCK&lt;/code&gt; 、 &lt;code&gt;MIDI_SYNC&lt;/code&gt; 、および &lt;code&gt;MIDI_TIME_CODE&lt;/code&gt; の 3つがあります。後者の2つは、シーケンサーが別のデバイスからMIDIメッセージを受信した場合に機能します。これら2つのモードでは、シーケンサーの時間は、それぞれシステムのリアルタイムタイミングクロックメッセージまたはMIDIタイムコード（MTC）メッセージに基づいてリセットされます。これらの2つのモードはスレーブモードとしても使用できます。この場合、シーケンサーは対応するタイプのMIDIメッセージをレシーバーに送信します（シーケンサーがマスターからメッセージを受信して​​いるかどうかは関係ありません）。 4番目のモードである &lt;code&gt;NO_SYNC&lt;/code&gt; は、シーケンサーがレシーバーのタイミングを制御してはならないことを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="f9f4282a0141a82a2de17fffc9351d57e318a288" translate="yes" xml:space="preserve">
          <source>There are three ways in which connection request controls are set:</source>
          <target state="translated">接続要求コントロールを設定するには、3 つの方法があります。</target>
        </trans-unit>
        <trans-unit id="f4b25b98bbf1bed6a0ab1c73f9a3229fba6803ca" translate="yes" xml:space="preserve">
          <source>There are two basic models of what attributes should be associated with. First, attributes may be directly associated with a DirContext object. In this model, an attribute operation on the named object is roughly equivalent to a lookup on the name (which returns the DirContext object), followed by the attribute operation invoked on the DirContext object in which the caller supplies an empty name. The attributes can be viewed as being stored along with the object (note that this does not imply that the implementation must do so).</source>
          <target state="translated">アトリビュートがどのようなものに関連付けられるべきかについては、2 つの基本的なモデルがあります。まず、属性は DirContext オブジェクトに直接関連付けることができます。このモデルでは、名前のついたオブジェクトに対する属性操作は、名前の検索 (DirContext オブジェクトを返す)とほぼ同等のものであり、その後に DirContext オブジェクトに対して呼び出された属性操作が行われ、呼び出し元が空の名前を提供することになります。属性はオブジェクトと一緒に保存されていると見ることができます (これは実装がそうしなければならないということを意味するものではないことに注意してください)。</target>
        </trans-unit>
        <trans-unit id="6277a3c91d311327a3eead7b7d8b16a596430d2c" translate="yes" xml:space="preserve">
          <source>There are two broad categories of print data, client formatted print data and service formatted print data.</source>
          <target state="translated">印刷データには、大きく分けて、クライアントフォーマットの印刷データとサービスフォーマットの印刷データがあります。</target>
        </trans-unit>
        <trans-unit id="e053f696696474cc554e2ee656c6df0dd65d2bd6" translate="yes" xml:space="preserve">
          <source>There are two common implementations. &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; is a date-based implementation, storing years, months and days. &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is a time-based implementation, storing seconds and nanoseconds, but providing some access using other duration based units such as minutes, hours and fixed 24-hour days.</source>
          <target state="translated">2つの一般的な実装があります。&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;は日付ベースの実装であり、年、月、日を格納します。&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;は時間ベースの実装であり、秒とナノ秒を格納しますが、分、時間、固定24時間などの他の期間ベースの単位を使用して一部のアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="ebfd465408d113172e53262f7239645338b176ec" translate="yes" xml:space="preserve">
          <source>There are two distinguished supported locations (subtrees within the logical file system) where newly created files are placed: one for &lt;a href=&quot;../../tools/standardlocation#SOURCE_OUTPUT&quot;&gt;new source files&lt;/a&gt;, and one for &lt;a href=&quot;../../tools/standardlocation#CLASS_OUTPUT&quot;&gt;new class files&lt;/a&gt;. (These might be specified on a tool's command line, for example, using flags such as &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt;.) The actual locations for new source files and new class files may or may not be distinct on a particular run of the tool. Resource files may be created in either location. The methods for reading and writing resources take a relative name argument. A relative name is a non-null, non-empty sequence of path segments separated by &lt;code&gt;'/'&lt;/code&gt;; &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3.</source>
          <target state="translated">新しく作成されたファイルが配置される、サポートされている2つの区別された場所（論理ファイルシステム内のサブツリー）があります。1つは&lt;a href=&quot;../../tools/standardlocation#SOURCE_OUTPUT&quot;&gt;新しいソースファイル用&lt;/a&gt;、もう1つは&lt;a href=&quot;../../tools/standardlocation#CLASS_OUTPUT&quot;&gt;新しいクラスファイル&lt;/a&gt;用です。 （これらは、たとえば &lt;code&gt;-s&lt;/code&gt; や &lt;code&gt;-d&lt;/code&gt; などのフラグを使用して、ツールのコマンドラインで指定できます。）新しいソースファイルと新しいクラスファイルの実際の場所は、ツールの特定の実行で異なる場合があります。リソースファイルはどちらの場所にも作成できます。リソースの読み取りと書き込みのメソッドは、相対名の引数を取ります。相対名は、 &lt;code&gt;'/'&lt;/code&gt; で区切られたパスセグメントのnull以外で空でないシーケンスです。 &lt;code&gt;'.'&lt;/code&gt; と &lt;code&gt;'..'&lt;/code&gt; 無効なパスセグメントです。有効な相対名は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986の&lt;/a&gt;セクション3.3の「パスルートレス」ルールに一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="72119fc16750a087fcef97d6993f73e9c9d8b934" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on the interface directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、インターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="122c9761aea7bb48c6b202253cc10ffaf3858a78" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、このインターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="221c7636be87b0733017baa83864b434059c108b" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalQuery&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalQuery&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、このインターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="4f6ddab868b4d8af37cbc5e13d59377eb7bc1e1b" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は&lt;a href=&quot;temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="9a9f36371a08c9e03929b3d371a732fe25c15a1a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は&lt;a href=&quot;temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="19622de3e1de5aa717583d3f58905f5525534b2a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="dc7049dde645017bc74c4cfbcd545b88a0f9312c" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="14641be0ebbb10666cf02dfef66e60e2e24f19de" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="23c7abacd277c7c67a02cfdac67f8ec2ddb1e2a7" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="d131f4265fdeb909d228a96a8cfb3506d44f7ffe" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#getLong-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#getLong-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt; &lt;/a&gt;）を使用することです。</target>
        </trans-unit>
        <trans-unit id="69e761971c5e4cae8513f296453b2fac6111a7fc" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="7a30794131e2de9a5dbaf4c9a1f6157f885e685a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="b82d66ee70b01eb4f8a3cda3c1d15d8275ac3e27" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="f81056ea2c2becde1c2107f4139e24e0e6b5fd30" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は、&lt;a href=&quot;temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="01700b17f3c068ac68e900641c6f6a6834b85ea7" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;../temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2番目は、&lt;a href=&quot;../temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="c69dd529f917ee2a2e64e1fed358cbede056afdf" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;period#between-java.time.LocalDate-java.time.LocalDate-&quot;&gt;&lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2つ目は、&lt;a href=&quot;period#between-java.time.LocalDate-java.time.LocalDate-&quot;&gt; &lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="31b6839d92a1d7cc91a6f3682b7584519c917ea6" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2番目は、&lt;a href=&quot;temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="b7019f051004e11b6b00277ad3a368c81695ab5e" translate="yes" xml:space="preserve">
          <source>There are two forms for RMI connector addresses:</source>
          <target state="translated">RMI コネクタのアドレスには、2 つの形式があります。</target>
        </trans-unit>
        <trans-unit id="e53aaf7a78abd414d9fb78d865d3dc8bfb49f2f5" translate="yes" xml:space="preserve">
          <source>There are two general types of decoding errors. If the input byte sequence is not legal for this charset then the input is considered</source>
          <target state="translated">デコードエラーには2つの一般的なタイプがあります。入力バイト列がこの文字セットに適していない場合、その入力は</target>
        </trans-unit>
        <trans-unit id="8736c93a7b7bb502b162e668f9dc8978cdb0b6fc" translate="yes" xml:space="preserve">
          <source>There are two general types of encoding errors. If the input character sequence is not a legal sixteen-bit Unicode sequence then the input is considered</source>
          <target state="translated">エンコーディングエラーには一般的に2つのタイプがあります。入力された文字列が正規の16ビットUnicode配列ではない場合、その入力は</target>
        </trans-unit>
        <trans-unit id="bd7ebb4ee3bd1aaafa978527a6396c0b5c9c4cf7" translate="yes" xml:space="preserve">
          <source>There are two groups of cipher suites which you will need to know about when managing cipher suites:</source>
          <target state="translated">暗号スイートを管理する際に知っておく必要がある暗号スイートには 2 つのグループがあります。</target>
        </trans-unit>
        <trans-unit id="36e94429dce8a0432578760912963aff83ad3eb1" translate="yes" xml:space="preserve">
          <source>There are two kinds of JNDI resource files: &lt;em&gt;provider&lt;/em&gt; and &lt;em&gt;application&lt;/em&gt;.</source>
          <target state="translated">JNDIリソースファイルには、&lt;em&gt;プロバイダー&lt;/em&gt;と&lt;em&gt;アプリケーションの&lt;/em&gt; 2種類があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b1f12fecd42a80e7f754001eddff6ff78d61515c" translate="yes" xml:space="preserve">
          <source>There are two kinds of transformers, determined by the &lt;code&gt;canRetransform&lt;/code&gt; parameter of &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt;&lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt; &lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;canRetransform&lt;/code&gt; パラメータによって決定される2種類のトランスフォーマがあります。</target>
        </trans-unit>
        <trans-unit id="80be071c6ecd97b5c0ebef1df8ee841bd2ad1fb8" translate="yes" xml:space="preserve">
          <source>There are two other possible locale sensitive service providers, i.e., &quot;CLDR&quot; which is a provider based on Unicode Consortium's &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDR Project&lt;/a&gt;, and &quot;HOST&quot; which is a provider that reflects the user's custom settings in the underlying operating system. These two providers may not be available, depending on the Java Runtime Environment implementation. Specifying &quot;JRE,SPI&quot; is identical to the default behavior, which is compatibile with the prior releases.</source>
          <target state="translated">ロケールに依存するサービスプロバイダーには、他に2つあります。つまり、Unicodeコンソーシアムの&lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDRプロジェクト&lt;/a&gt;に基づくプロバイダーである「CLDR」と、基盤となるオペレーティングシステムでのユーザーのカスタム設定を反映するプロバイダーである「HOST」です。これら2つのプロバイダーは、Javaランタイム環境の実装によっては使用できない場合があります。「JRE、SPI」の指定はデフォルトの動作と同じであり、以前のリリースと互換性があります。</target>
        </trans-unit>
        <trans-unit id="ff12985c6611d7ceaf5b220dd6a1ef040dc0377c" translate="yes" xml:space="preserve">
          <source>There are two possible ways in which this decoder could deal with illegal strings. It could either leave illegal characters alone or it could throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;. Which approach the decoder takes is left to the implementation.</source>
          <target state="translated">このデコーダーが不正な文字列を処理する方法は2つあります。不正な文字をそのまま残すか、&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; を&lt;/a&gt;スローする可能性があります。デコーダーがどのアプローチをとるかは実装に任されています。</target>
        </trans-unit>
        <trans-unit id="d91ceedcd52bc4240b139aedacb18606cb46b462" translate="yes" xml:space="preserve">
          <source>There are two separate trees of preference nodes, one for user preferences and one for system preferences. Each user has a separate user preference tree, and all users in a given system share the same system preference tree. The precise description of &quot;user&quot; and &quot;system&quot; will vary from implementation to implementation. Typical information stored in the user preference tree might include font choice, color choice, or preferred window location and size for a particular application. Typical information stored in the system preference tree might include installation configuration data for an application.</source>
          <target state="translated">環境設定ノードのツリーには、ユーザー設定用とシステム設定用の2つの別々のツリーがあります。各ユーザには個別のユーザ環境設定ツリーがあり、あるシステムのすべてのユーザは同じシステム環境設定ツリーを共有しています。ユーザー」と「システム」の正確な説明は、実装によって異なります。ユーザー環境設定ツリーに格納される典型的な情報には、フォントの選択、色の選択、または特定のアプリケーションのための好ましいウィンドウの位置とサイズが含まれるかもしれません。システム環境設定ツリーに格納される典型的な情報には、アプリケーションのインストール設定データが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="6202432717df2ac02cb63931bf58fa0f63cab202" translate="yes" xml:space="preserve">
          <source>There are two situations where this query may return a non-zero period.</source>
          <target state="translated">このクエリがゼロではないピリオドを返す可能性がある状況は2つあります。</target>
        </trans-unit>
        <trans-unit id="21e75919a8d6dc8a964f582e10611fcfefe5d1d7" translate="yes" xml:space="preserve">
          <source>There are two types of filtering: filtering for basic language ranges (called &quot;basic filtering&quot;) and filtering for extended language ranges (called &quot;extended filtering&quot;). They may return different results by what kind of language ranges are included in the given Language Priority List. &lt;a href=&quot;locale.filteringmode&quot;&gt;&lt;code&gt;Locale.FilteringMode&lt;/code&gt;&lt;/a&gt; is a parameter to specify how filtering should be done.</source>
          <target state="translated">フィルタリングには、基本言語範囲のフィルタリング（「基本フィルタリング」と呼ばれる）と拡張言語範囲のフィルタリング（「拡張フィルタリング」と呼ばれる）の2種類があります。特定の言語優先リストに含まれている言語の範囲の種類によって、異なる結果が返される場合があります。&lt;a href=&quot;locale.filteringmode&quot;&gt; &lt;code&gt;Locale.FilteringMode&lt;/code&gt; &lt;/a&gt;は、フィルタリングの実行方法を指定するパラメーターです。</target>
        </trans-unit>
        <trans-unit id="863bb4e82b05433afe02f4bff6c94f9fcbaf46be" translate="yes" xml:space="preserve">
          <source>There are two types of language ranges: basic and extended. In RFC 4647, the syntax of language ranges is expressed in &lt;a href=&quot;http://tools.ietf.org/html/rfc4234&quot;&gt;ABNF&lt;/a&gt; as follows:</source>
          <target state="translated">言語範囲には、基本と拡張の2つのタイプがあります。RFC 4647では、言語範囲の構文は次のように&lt;a href=&quot;http://tools.ietf.org/html/rfc4234&quot;&gt;ABNF&lt;/a&gt;で表現されています。</target>
        </trans-unit>
        <trans-unit id="03767c30c8b687a49d6fbdbfbb2ec538574b74af" translate="yes" xml:space="preserve">
          <source>There are two types of request controls:</source>
          <target state="translated">リクエストコントロールには2種類あります。</target>
        </trans-unit>
        <trans-unit id="b2fda0a5c05f0d77dfca57e037365613258cde0a" translate="yes" xml:space="preserve">
          <source>There are two ways in which a context instance gets its request controls:</source>
          <target state="translated">コンテキストインスタンスがリクエストコントロールを取得する方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="975a7b038db4eb6bf41059eceb7313d6dd42998b" translate="yes" xml:space="preserve">
          <source>There are two ways to create a new thread of execution. One is to declare a class to be a subclass of &lt;code&gt;Thread&lt;/code&gt;. This subclass should override the &lt;code&gt;run&lt;/code&gt; method of class &lt;code&gt;Thread&lt;/code&gt;. An instance of the subclass can then be allocated and started. For example, a thread that computes primes larger than a stated value could be written as follows:</source>
          <target state="translated">新しい実行スレッドを作成するには、2つの方法があります。1つは、クラスを &lt;code&gt;Thread&lt;/code&gt; のサブクラスとして宣言することです。このサブクラスは、クラス &lt;code&gt;Thread&lt;/code&gt; の &lt;code&gt;run&lt;/code&gt; メソッドをオーバーライドする必要があります。その後、サブクラスのインスタンスを割り当てて開始できます。たとえば、指定された値より大きい素数を計算するスレッドは、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="1130822317a86f6e57038bd5122e8e2e69d189a3" translate="yes" xml:space="preserve">
          <source>There are two ways to create an MBean. One is to construct a Java object that will be the MBean, then use the &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method to register it in the MBean Server. The other is to create and register the MBean in a single operation using one of the &lt;a href=&quot;mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-&quot;&gt;&lt;code&gt;createMBean&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">MBeanを作成するには2つの方法があります。1つは、MBeanとなるJavaオブジェクトを作成し、&lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;メソッドを使用してMBeanサーバーに登録する方法です。もう1つは、&lt;a href=&quot;mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-&quot;&gt; &lt;code&gt;createMBean&lt;/code&gt; &lt;/a&gt;メソッドの1つを使用して、1回の操作でMBeanを作成および登録することです。</target>
        </trans-unit>
        <trans-unit id="f02bb82aa08947d1c4db6345575e9a9a9391eb79" translate="yes" xml:space="preserve">
          <source>There are two ways to generate a key pair: in an algorithm-independent manner, and in an algorithm-specific manner. The only difference between the two is the initialization of the object:</source>
          <target state="translated">鍵ペアを生成する方法には、アルゴリズムに依存しない方法と、アルゴリズム固有の方法の2つがあります。この2つの違いは、オブジェクトの初期化だけです。</target>
        </trans-unit>
        <trans-unit id="fc8284f153af11fa26dc2b9e2c9486fe94b0031e" translate="yes" xml:space="preserve">
          <source>There are two ways to generate a key: in an algorithm-independent manner, and in an algorithm-specific manner. The only difference between the two is the initialization of the object:</source>
          <target state="translated">キーを生成する方法には、アルゴリズムに依存しない方法と、アルゴリズム固有の方法があります。この2つの違いは、オブジェクトの初期化だけです。</target>
        </trans-unit>
        <trans-unit id="159241de6eb6c0aad925571d76835e03dc536a22" translate="yes" xml:space="preserve">
          <source>There are two ways to make a Java object that is an MBean with this management interface. One is for the object to be of a class that has exactly the same name as the Java interface but without the &lt;code&gt;MBean&lt;/code&gt; suffix. So in the example the object would be of the class &lt;code&gt;Configuration&lt;/code&gt;, in the same Java package as &lt;code&gt;ConfigurationMBean&lt;/code&gt;. The second way is to use the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">この管理インターフェースでMBeanであるJavaオブジェクトを作成するには、2つの方法があります。1つは、オブジェクトがJavaインターフェースとまったく同じ名前で、 &lt;code&gt;MBean&lt;/code&gt; サフィックスのないクラスであるというものです。ですから、例えば、オブジェクトは、クラスであろう &lt;code&gt;Configuration&lt;/code&gt; と同じJavaパッケージには、 &lt;code&gt;ConfigurationMBean&lt;/code&gt; 。2番目の方法は、&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用することです。</target>
        </trans-unit>
        <trans-unit id="90012bb7cf1245412cbc193a80e9ac8ba45df7dd" translate="yes" xml:space="preserve">
          <source>There are two ways to obtain an instance of the &lt;code&gt;Instrumentation&lt;/code&gt; interface:</source>
          <target state="translated">&lt;code&gt;Instrumentation&lt;/code&gt; インターフェースのインスタンスを取得するには、2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="771a213e98d7cf68dc3b44a652ef624310ae5943" translate="yes" xml:space="preserve">
          <source>There are two ways to set a &lt;code&gt;Calendar&lt;/code&gt; to a date-time value. One is to set the instant parameter to a millisecond offset from the &lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;. The other is to set individual field parameters, such as &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt;, to their desired values. These two ways can't be mixed. Trying to set both the instant and individual fields will cause an &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown. However, it is permitted to override previous values of the instant or field parameters.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; を日時値に設定するには2つの方法があります。1つは、インスタントパラメータを&lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;からのミリ秒オフセットに設定することです。もう1つは、&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;などの個々のフィールドパラメータを目的の値に設定することです。これら2つの方法を混在させることはできません。インスタントフィールドと個別フィールドの両方を設定しようとすると、&lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。ただし、インスタントパラメータまたはフィールドパラメータの以前の値を上書きすることは許可されています。</target>
        </trans-unit>
        <trans-unit id="18c4aa4c3dad5442ad3148498e9b2b89e070dc8d" translate="yes" xml:space="preserve">
          <source>There are various ways to handle the conversion from a &lt;code&gt;LocalDateTime&lt;/code&gt;. One technique, using this method, would be:</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; からの変換を処理するには、さまざまな方法があります。この方法を使用する1つの手法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a3918cb605e7d0c3c6f2663575261375e1b19245" translate="yes" xml:space="preserve">
          <source>There are, however, some limited use cases where users believe they need to store and use dates in arbitrary calendar systems throughout the application. This is supported by &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;, however it is vital to read all the associated warnings in the Javadoc of that interface before using it. In summary, applications that require general interoperation between multiple calendar systems typically need to be written in a very different way to those only using the ISO calendar, thus most applications should just use ISO and avoid &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">ただし、アプリケーション全体で任意のカレンダーシステムに日付を保存して使用する必要があるとユーザーが考える場合には、いくつかの限られた使用例があります。これは&lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;でサポートされていますが、使用する前に、そのインターフェースのJavadocで関連するすべての警告を読むことが重要です。要約すると、複数のカレンダーシステム間の一般的な相互運用を必要とするアプリケーションは、通常、ISOカレンダーのみを使用するアプリケーションとは非常に異なる方法で作成する必要があるため、ほとんどのアプリケーションはISOを使用し、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; を避ける必要があります。</target>
        </trans-unit>
        <trans-unit id="ad68c71cd005733d3d27a578116ef8c19e4d7ff1" translate="yes" xml:space="preserve">
          <source>There can be different implementations of &lt;code&gt;Name&lt;/code&gt;; for example, composite names, URLs, or namespace-specific compound names.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; の実装はさまざまです。たとえば、複合名、URL、名前空間固有の複合名などです。</target>
        </trans-unit>
        <trans-unit id="ce433d14a2eedfbb470ac526e7184d30f9308adf" translate="yes" xml:space="preserve">
          <source>There exist different variants of these global identifiers. The methods of this class are for manipulating the Leach-Salz variant, although the constructors allow the creation of any variant of UUID (described below).</source>
          <target state="translated">これらのグローバル識別子には様々なバリアントが存在します。このクラスのメソッドは Leach-Salz のバリアントを操作するためのものですが、コンストラクタでは UUID の任意のバリアント (後述)を作成することができます。</target>
        </trans-unit>
        <trans-unit id="fbdeb2575b41cbcf1a0c50743f59d79e06e928f0" translate="yes" xml:space="preserve">
          <source>There is a buffer class for each non-boolean primitive type. Each class defines a family of</source>
          <target state="translated">各非ブーリアンプリミティブ型にはバッファクラスがあります。各クラスは</target>
        </trans-unit>
        <trans-unit id="e611c9ca26ee759c4b00b3f9330825ec933eabb1" translate="yes" xml:space="preserve">
          <source>There is a couple of System Properties affecting how IPv4 and IPv6 addresses are used.</source>
          <target state="translated">IPv4およびIPv6アドレスの使用方法に影響を与えるシステムプロパティがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="e457efe2a17a4c04ee89e9b13d9382d5d98aca7c" translate="yes" xml:space="preserve">
          <source>There is a distinction between an attribute's Java language type, as returned by &lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt;, and its &lt;code&gt;OpenType&lt;/code&gt;, as returned by &lt;a href=&quot;openmbeanparameterinfo#getOpenType--&quot;&gt;&lt;code&gt;getOpenType()&lt;/code&gt;&lt;/a&gt;. For example, if the Java language type is &lt;code&gt;java.lang.String&lt;/code&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be &lt;a href=&quot;simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.String&lt;/code&gt;&lt;/a&gt;. If the Java language type is &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be a &lt;a href=&quot;compositetype&quot;&gt;&lt;code&gt;CompositeType&lt;/code&gt;&lt;/a&gt; that describes the items in the &lt;code&gt;CompositeData&lt;/code&gt; instances for the attribute.</source>
          <target state="translated">&lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;によって返される属性のJava言語タイプと、&lt;a href=&quot;openmbeanparameterinfo#getOpenType--&quot;&gt; &lt;code&gt;getOpenType()&lt;/code&gt; &lt;/a&gt;によって返されるその &lt;code&gt;OpenType&lt;/code&gt; には違いがあります。たとえば、Java言語タイプが &lt;code&gt;java.lang.String&lt;/code&gt; の場合、 &lt;code&gt;OpenType&lt;/code&gt; は&lt;a href=&quot;simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.String&lt;/code&gt; になり&lt;/a&gt;ます。 Java言語の種類がある場合&lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;OpenType&lt;/code&gt; フォントはなり&lt;a href=&quot;compositetype&quot;&gt; &lt;code&gt;CompositeType&lt;/code&gt; &lt;/a&gt;内の項目について説明し &lt;code&gt;CompositeData&lt;/code&gt; 属性のインスタンスを。</target>
        </trans-unit>
        <trans-unit id="47ec9ff2dff4067d12469aae62647665afd970c0" translate="yes" xml:space="preserve">
          <source>There is a one-to-one mapping between keys and identities, and there can only be one copy of one key per scope. For example, suppose &lt;b&gt;Acme Software, Inc&lt;/b&gt; is a software publisher known to a user. Suppose it is an Identity, that is, it has a public key, and a set of associated certificates. It is named in the scope using the name &quot;Acme Software&quot;. No other named Identity in the scope has the same public key. Of course, none has the same name as well.</source>
          <target state="translated">キーとIDの間には1対1のマッピングがあり、スコープごとに1つのキーのコピーは1つしか存在できません。たとえば、&lt;b&gt;Acme Software、Inc&lt;/b&gt;がユーザーに知られているソフトウェア発行元であるとします。それがアイデンティティであると仮定します。つまり、公開鍵と、関連する証明書のセットを持っているとします。スコープ内では「Acme Software」という名前が付けられています。スコープ内の他の名前付きIDには同じ公開鍵はありません。もちろん、同じ名前のものはありません。</target>
        </trans-unit>
        <trans-unit id="54e8a1cf0a979c6bead49e4451cc625e0cb7132c" translate="yes" xml:space="preserve">
          <source>There is a one-to-one mapping between the distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; values and the result of this conversion. That is, every distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; value (unscaled value and scale) has a unique string representation as a result of using &lt;code&gt;toString&lt;/code&gt;. If that string representation is converted back to a &lt;code&gt;BigDecimal&lt;/code&gt; using the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, then the original value will be recovered.</source>
          <target state="translated">区別可能な &lt;code&gt;BigDecimal&lt;/code&gt; 値とこの変換の結果の間には、1対1のマッピングがあります。つまり、 &lt;code&gt;toString&lt;/code&gt; を使用した結果として、区別可能なすべての &lt;code&gt;BigDecimal&lt;/code&gt; 値（スケーリングされていない値とスケール）には一意の文字列表現があります。その文字列表現が&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して &lt;code&gt;BigDecimal&lt;/code&gt; に変換されると、元の値が復元されます。</target>
        </trans-unit>
        <trans-unit id="07a170e47ba1b28632f7de6a7126103d894a204e" translate="yes" xml:space="preserve">
          <source>There is a single global LogManager object that is used to maintain a set of shared state about Loggers and log services.</source>
          <target state="translated">ロガーとログ サービスに関する共有状態のセットを維持するために使用される、単一のグローバル LogManager オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="16f6696f8357f83f1e4bc66cdc5dac5cd0bb4624" translate="yes" xml:space="preserve">
          <source>There is a single global instance of the &lt;code&gt;LoggingMXBean&lt;/code&gt;. This instance is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;logmanager#getLoggingMXBean--&quot;&gt;&lt;code&gt;LogManager.getLoggingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;../../lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; の単一のグローバルインスタンスがあります。このインスタンスは&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;であり、&lt;a href=&quot;logmanager#getLoggingMXBean--&quot;&gt; &lt;code&gt;LogManager.getLoggingMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;../../lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt;プラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="1db9183d0fe9302b767e7cc23a636f50f0a9febc" translate="yes" xml:space="preserve">
          <source>There is a single global instance of the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;. The &lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt;&lt;/a&gt; method can be used to obtain the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object as follows:</source>
          <target state="translated">&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; の単一のグローバルインスタンスがあります。&lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt; &lt;/a&gt;方法を得るために使用することができる &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 次のようにオブジェクトを：</target>
        </trans-unit>
        <trans-unit id="ef852b41e85d5b8d7d0516574ed1e5208aad1805" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetDestinationOffset&lt;/code&gt; method; simply call &lt;code&gt;setDestinationOffset(new Point(0, 0))&lt;/code&gt; to restore default values.</source>
          <target state="translated">&lt;code&gt;unsetDestinationOffset&lt;/code&gt; メソッドはありません。デフォルト値を復元するには &lt;code&gt;setDestinationOffset(new Point(0, 0))&lt;/code&gt; 単にsetDestinationOffset（new Point（0、0））を呼び出します。</target>
        </trans-unit>
        <trans-unit id="75fe41e0afde47fd04c96028c6e0c36054c90aa2" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetSourceProgressivePasses&lt;/code&gt; method; the same effect may be obtained by calling &lt;code&gt;setSourceProgressivePasses(0, Integer.MAX_VALUE)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsetSourceProgressivePasses&lt;/code&gt; メソッドはありません。 &lt;code&gt;setSourceProgressivePasses(0, Integer.MAX_VALUE)&lt;/code&gt; 呼び出しても同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="fb3c1caf12670f746761a1a308b04f8a646c8f65" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetSourceSubsampling&lt;/code&gt; method; simply call &lt;code&gt;setSourceSubsampling(1, 1, 0, 0)&lt;/code&gt; to restore default values.</source>
          <target state="translated">&lt;code&gt;unsetSourceSubsampling&lt;/code&gt; メソッドはありません。デフォルト値に戻すには &lt;code&gt;setSourceSubsampling(1, 1, 0, 0)&lt;/code&gt; 単にsetSourceSubsampling（1、1、0、0）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bf4f6a6600ccefd5bc95c8181388c200994df259" translate="yes" xml:space="preserve">
          <source>There is no embedded flag character for enabling canonical equivalence.</source>
          <target state="translated">正準等価を有効にするためのフラグ文字は埋め込まれていません。</target>
        </trans-unit>
        <trans-unit id="5c437702dae33f4479582f804dd1b9271378f690" translate="yes" xml:space="preserve">
          <source>There is no embedded flag character for enabling literal parsing.</source>
          <target state="translated">リテラル解析を有効にするためのフラグ文字は埋め込まれていません。</target>
        </trans-unit>
        <trans-unit id="2476cd0e3a3386674e0ed89def19edc4b13b242e" translate="yes" xml:space="preserve">
          <source>There is no guarantee about when the &lt;code&gt;MemoryMXBean&lt;/code&gt; will emit a threshold notification and when the notification will be delivered. When a notification listener is invoked, the memory usage of the memory pool may have crossed the usage threshold more than once. The &lt;a href=&quot;memorynotificationinfo#getCount--&quot;&gt;&lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt;&lt;/a&gt; method returns the number of times that the memory usage has crossed the usage threshold at the point in time when the notification was constructed. It can be compared with the current usage threshold count returned by the &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;getUsageThresholdCount()&lt;/code&gt;&lt;/a&gt; method to determine if such situation has occurred.</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; がいつしきい値通知を発行するか、いつ通知が配信されるかについての保証はありません。通知リスナーが呼び出されたときに、メモリプールのメモリ使用量が使用量しきい値を2回以上超えている可能性があります。&lt;a href=&quot;memorynotificationinfo#getCount--&quot;&gt; &lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt; &lt;/a&gt;メソッドは、通知が構築されたときにメモリ使用量が時点で使用量しきい値を超えた回数を返します。これを&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;getUsageThresholdCount()&lt;/code&gt; &lt;/a&gt;メソッドによって返された現在の使用量しきい値カウントと比較して、そのような状況が発生したかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="d60f97f9703f42d93a54253e7d22123ed3faa9b8" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the &lt;code&gt;asType&lt;/code&gt; call is actually made. If the JVM can predict the results of making the call, it may perform adaptations directly on the caller's arguments, and call the target method handle according to its own exact type.</source>
          <target state="translated">&lt;code&gt;asType&lt;/code&gt; 呼び出しが実際に行われる保証はありません。JVMが呼び出しの結果を予測できる場合、JVMは呼び出し元の引数に直接適応を実行し、独自の正確な型に従ってターゲットメソッドハンドルを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="563bedb54b5f2fda07232672d28d980b59e9cdfa" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order.</source>
          <target state="translated">結果として得られる配列内の名前文字列が特定の順序で表示されることは保証されていません。</target>
        </trans-unit>
        <trans-unit id="4b5307904581616c49620a8afa65d4a7ad0b81a2" translate="yes" xml:space="preserve">
          <source>There is no limit on the amount of data that may be written, so use this with care.</source>
          <target state="translated">書いてもいいデータ量に制限はありませんので、注意して使いましょう。</target>
        </trans-unit>
        <trans-unit id="caa61a6745a38d47cfa3d5d57583320bc8d9204d" translate="yes" xml:space="preserve">
          <source>There is no limit to integer digits set by this routine, since that is the typical end-user desire; use setMaximumInteger if you want to set a real value. For negative numbers, use a second pattern, separated by a semicolon</source>
          <target state="translated">このルーチンで設定される整数の桁数に制限はありません。これは典型的なエンドユーザの要求なので、実数を設定したい場合は setMaximumInteger を使用してください。負の値の場合は、セミコロンで区切られた2つ目のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="998f9151c1110aaa94300df3294ecd2bb59d3edc" translate="yes" xml:space="preserve">
          <source>There is no pathname transformation, except that the system file separator is replaced by the JAR file separator '/'.</source>
          <target state="translated">パス名の変換はありませんが、システムファイルの区切り文字が JAR ファイルの区切り文字 '/' に置き換えられることを除いては、パス名の変換はありません。</target>
        </trans-unit>
        <trans-unit id="40cfd7dfadd3391c252abf3662f2ca699044a90b" translate="yes" xml:space="preserve">
          <source>There is no requirement for a compiler at runtime. However, if a default compiler is provided, it can be located using the &lt;a href=&quot;toolprovider&quot;&gt;ToolProvider&lt;/a&gt;, for example:</source>
          <target state="translated">実行時にコンパイラーは必要ありません。ただし、デフォルトのコンパイラが提供されている場合は、次のように&lt;a href=&quot;toolprovider&quot;&gt;ToolProvider&lt;/a&gt;を使用して見つけることができます。</target>
        </trans-unit>
        <trans-unit id="e86520d525eca5d9dc11030c4679128fdfa1c011" translate="yes" xml:space="preserve">
          <source>There is no requirement that a distinct result be returned each time the supplier is invoked.</source>
          <target state="translated">サプライヤが呼び出されるたびに明確な結果を返す必要はありません。</target>
        </trans-unit>
        <trans-unit id="198941742d95f771d09454ad8b8b1eb431801562" translate="yes" xml:space="preserve">
          <source>There is no requirement that a new or distinct result be returned each time the supplier is invoked.</source>
          <target state="translated">サプライヤーが呼び出されるたびに、新しい結果または別個の結果が返される必要はありません。</target>
        </trans-unit>
        <trans-unit id="6ac505bd21b647e3b0d66513534387f91f440e63" translate="yes" xml:space="preserve">
          <source>There is no requirement that a process represented by a &lt;code&gt;Process&lt;/code&gt; object execute asynchronously or concurrently with respect to the Java process that owns the &lt;code&gt;Process&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; オブジェクトによって表されるプロセスが、 &lt;code&gt;Process&lt;/code&gt; オブジェクトを所有するJavaプロセスに対して非同期的または同時に実行されるという要件はありません。</target>
        </trans-unit>
        <trans-unit id="6bb1589cbaa1bcec5ff870e1e9b12d1f77370ebe" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">許可を解放するスレッドが、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; を&lt;/a&gt;呼び出してその許可を取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="d19982f377f29e5caf430a892cc8364a3737d224" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">パーミットを解放するスレッドが、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;を呼び出してそのパーミットを取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="a1210cbd94c899524cbebe37d1b7a14d3758c7b6" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same doc. Therefore, all implementations of interface Doc must be designed to be multiple thread safe.</source>
          <target state="translated">同じ Doc に同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイスDocのすべての実装は、マルチスレッドセーフであるように設計されなければなりません。</target>
        </trans-unit>
        <trans-unit id="54d1bdd3c5393ebf87fe28c474c4187eeec91d09" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same multidoc. Therefore, all implementations of interface MultiDoc must be designed to be multiple thread safe. In fact, a client thread could be adding docs to the end of the (conceptual) list while a Print Job thread is simultaneously obtaining docs from the beginning of the list; provided the multidoc object synchronizes the threads properly, the two threads will not interfere with each other</source>
          <target state="translated">同じMultidocに同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイスMultiDocのすべての実装は、マルチスレッドセーフであるように設計されなければならない。実際には、クライアントスレッドが(概念的な)リストの最後にdocsを追加している間に、Print Jobスレッドが同時にリストの最初からdocsを取得している可能性があります;multidocオブジェクトがスレッドを適切に同期させれば、2つのスレッドは互いに干渉しません。</target>
        </trans-unit>
        <trans-unit id="d5b4a3972e1a2f7f3338a732047fe875411d8907" translate="yes" xml:space="preserve">
          <source>There is no restriction on the value of &lt;code&gt;fromIndex&lt;/code&gt;. If it is negative, it has the same effect as if it were zero: this entire string may be searched. If it is greater than the length of this string, it has the same effect as if it were equal to the length of this string: &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; の値に制限はありません。負の場合は、ゼロの場合と同じ効果があります。この文字列全体を検索できます。この文字列の長さより大きい場合は、この文字列の長さに等しい場合と同じ効果があります。 &lt;code&gt;-1&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="41d4b46878c902aebcab2313c7f766261a893b1b" translate="yes" xml:space="preserve">
          <source>There is one circumstance under which &lt;code&gt;putSpi, removeSpi and childSpi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;putSpi, removeSpi and childSpi&lt;/code&gt; が使用される状況は1つです。</target>
        </trans-unit>
        <trans-unit id="514e11614a5cff7c22ae4d822f5dd9cd11012a75" translate="yes" xml:space="preserve">
          <source>There is one subclass of this class for each non-boolean primitive type.</source>
          <target state="translated">このクラスのサブクラスは、非ブーリアンプリミティブ型ごとに1つずつあります。</target>
        </trans-unit>
        <trans-unit id="633f37c2f9ed69daba67e576cc65222c3b761eee" translate="yes" xml:space="preserve">
          <source>There is only one Configuration object installed in the runtime at any given time. A Configuration object can be installed by calling the &lt;code&gt;setConfiguration&lt;/code&gt; method. The installed Configuration object can be obtained by calling the &lt;code&gt;getConfiguration&lt;/code&gt; method.</source>
          <target state="translated">ランタイムにインストールされるConfigurationオブジェクトは常に1つだけです。Configurationオブジェクトは、 &lt;code&gt;setConfiguration&lt;/code&gt; メソッドを呼び出すことでインストールできます。インストールされているConfigurationオブジェクトは、 &lt;code&gt;getConfiguration&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="70c5e4ecda10caf422eac93731e929117c0b2433" translate="yes" xml:space="preserve">
          <source>There is only one Policy object installed in the runtime at any given time. A Policy object can be installed by calling the &lt;code&gt;setPolicy&lt;/code&gt; method. The installed Policy object can be obtained by calling the &lt;code&gt;getPolicy&lt;/code&gt; method.</source>
          <target state="translated">ランタイムにインストールされるポリシーオブジェクトは常に1つだけです。Policyオブジェクトは、 &lt;code&gt;setPolicy&lt;/code&gt; メソッドを呼び出すことによってインストールできます。インストールされたPolicyオブジェクトは、 &lt;code&gt;getPolicy&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="7e8219f9fa1e5ad5fd8b7ff9a0008b52bda96130" translate="yes" xml:space="preserve">
          <source>There is some nonnegative integer</source>
          <target state="translated">ある非負の整数</target>
        </trans-unit>
        <trans-unit id="2567bf148c60cd0704ecaf928436c03eebe56e55" translate="yes" xml:space="preserve">
          <source>There're various ways user can hook up his own HTTP cookie management behavior, e.g.</source>
          <target state="translated">ユーザが自分自身のHTTPクッキー管理動作をフックアップするための様々な方法があります。</target>
        </trans-unit>
        <trans-unit id="8405dc8d6e96295949c0c54f86ccd888ec7eea86" translate="yes" xml:space="preserve">
          <source>These IDs are the string form of a &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのIDは、&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; の&lt;/a&gt;文字列形式です。</target>
        </trans-unit>
        <trans-unit id="2ac6d107158b337a6c06b66cc752f623087b39c6" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator&quot;&gt; AlgorithmParameterGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator&quot;&gt;AlgorithmParameterGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2840e4cdcf1ea5e28eecc02068cd6e631114c12e" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameters&quot;&gt; AlgorithmParameters section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameters&quot;&gt;AlgorithmParametersセクション&lt;/a&gt;で説明しています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7810b58cc40d92a27956a4ca52be2a76493d1bab" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyFactory&quot;&gt; KeyFactory section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyFactory&quot;&gt;KeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a50f9efd915eeed3ad86d74499ef1250eabefdda" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyGenerator&quot;&gt; KeyGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyGenerator&quot;&gt;KeyGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="24c1f8a9dcc7a5506f057dba5d8bfbe7a8fd8ab2" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyPairGenerator&quot;&gt; KeyPairGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyPairGenerator&quot;&gt;KeyPairGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="67fa782ff8eb29fae6354c59022ac3e4584f2bd2" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Mac&quot;&gt; Mac section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Mac&quot;&gt;Macセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="df11e8427aa46377243a3bc2fdea20b313fc069f" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#MessageDigest&quot;&gt; MessageDigest section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#MessageDigest&quot;&gt;MessageDigestセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5d0b5ae813100c512f39daa5af7097e9f5e4bc52" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SecretKeyFactory&quot;&gt; SecretKeyFactory section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SecretKeyFactory&quot;&gt;SecretKeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fc5cf5ef0ceb706cddfb7a9b2c6fe158ff062a97" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Signature&quot;&gt; Signature section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Signature&quot;&gt;署名」セクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e0bd70779c56b886df3b68e00d621608fc2cd850" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007A'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; の数字として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6ce73c7a8bcb9b77ceb02b691c9f5e1120078896" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007a'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; の数字として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1959b44b606d1297e43332ac44b1adaf84cdd4db" translate="yes" xml:space="preserve">
          <source>These are some of the Unicode characters for which this method returns &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">これらは、このメソッドが &lt;code&gt;true&lt;/code&gt; を返すUnicode文字の一部です。</target>
        </trans-unit>
        <trans-unit id="fa0898612837a31f540bec1dccf10ba5ee8752d0" translate="yes" xml:space="preserve">
          <source>These are some of the points that must be considered before using this interface throughout an application.</source>
          <target state="translated">これらは、アプリケーション全体でこのインターフェースを使用する前に考慮しなければならないポイントのいくつかです。</target>
        </trans-unit>
        <trans-unit id="48b003314e199b67286aa0a74af0f5fe08230f55" translate="yes" xml:space="preserve">
          <source>These are the characters &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0037'&lt;/code&gt;.</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0037'&lt;/code&gt; までの文字です。</target>
        </trans-unit>
        <trans-unit id="08694341e216489e339c217c51678557a14dc442" translate="yes" xml:space="preserve">
          <source>These are the characters &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u0066'&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u0066'&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="99b100126a9566a5dfd6a5042da372581f55c4cf" translate="yes" xml:space="preserve">
          <source>These are used to set the initial settings for the initially displayed print service. Values which are not supported by the print service are ignored. As the user browses print services, attributes and values are copied to the new display. If a user browses a print service which does not support a particular attribute-value, the default for that service is used as the new value to be copied.</source>
          <target state="translated">最初に表示されるプリントサービスの初期設定に使用します。プリントサービスでサポートされていない値は無視されます。ユーザーが印刷サービスをブラウズすると、属性と値が新しい表示にコピーされます。ユーザーが特定の属性値をサポートしていない印刷サービスを閲覧した場合、そのサービスのデフォルト値がコピーされる新しい値として使用されます。</target>
        </trans-unit>
        <trans-unit id="8e8017b0b68c1f6f870bc8aa6a50aadf98ce71b6" translate="yes" xml:space="preserve">
          <source>These bulk operations accept a &lt;code&gt;parallelismThreshold&lt;/code&gt; argument. Methods proceed sequentially if the current map size is estimated to be less than the given threshold. Using a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; suppresses all parallelism. Using a value of &lt;code&gt;1&lt;/code&gt; results in maximal parallelism by partitioning into enough subtasks to fully utilize the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; that is used for all parallel computations. Normally, you would initially choose one of these extreme values, and then measure performance of using in-between values that trade off overhead versus throughput.</source>
          <target state="translated">これらの一括操作は、 &lt;code&gt;parallelismThreshold&lt;/code&gt; 引数を受け入れます。現在のマップサイズが指定されたしきい値よりも小さいと推定される場合、メソッドは順次処理されます。 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値を使用すると、すべての並列処理が抑制されます。値 &lt;code&gt;1&lt;/code&gt; を使用すると、すべての並列計算に使用される&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;を完全に利用するのに十分なサブタスクに分割することにより、並列処理が最大になります。通常、最初にこれらの極端な値の1つを選択し、オーバーヘッドとスループットのトレードオフとなる中間値を使用してパフォーマンスを測定します。</target>
        </trans-unit>
        <trans-unit id="61e99440ec085de26d7fa6b38952f9639f22cdf5" translate="yes" xml:space="preserve">
          <source>These callbacks are used when the default rules for URL hostname verification fail.</source>
          <target state="translated">これらのコールバックは、URLホスト名検証のデフォルトルールが失敗した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="bd87981d1c383695eeedcb97149451439e2b8d64" translate="yes" xml:space="preserve">
          <source>These can be long lived, and frequently correspond to an entire login session for some user. The session specifies a particular cipher suite which is being actively used by all connections in that session, as well as the identities of the session's client and server.</source>
          <target state="translated">これらは長く続くことがあり、あるユーザのログインセッション全体に対応していることが多いです。セッションは、そのセッション内のすべての接続でアクティブに使用されている特定の暗号スイートと、 セッションのクライアントとサーバの身元を指定します。</target>
        </trans-unit>
        <trans-unit id="30905a97f0d453c12f6b8ea895f71cbb656d45d8" translate="yes" xml:space="preserve">
          <source>These certificates are managed and vouched for by &lt;em&gt;Certificate Authorities&lt;/em&gt; (CAs). CAs are services which create certificates by placing data in the X.509 standard format and then digitally signing that data. CAs act as trusted third parties, making introductions between principals who have no direct knowledge of each other. CA certificates are either signed by themselves, or by some other CA such as a &quot;root&quot; CA.</source>
          <target state="translated">これらの証明書は、&lt;em&gt;認証局&lt;/em&gt;（CA）によって管理および保証されています。CAは、X.509標準形式でデータを配置し、そのデータにデジタル署名することで証明書を作成するサービスです。CAは信頼できるサードパーティとして機能し、互いに直接の知識を持たないプリンシパル間を紹介します。CA証明書は、それ自体、または「ルート」CAなどの他のCAによって署名されています。</target>
        </trans-unit>
        <trans-unit id="e7654f792c1fa0442a29a75f4478a4533c2aa670" translate="yes" xml:space="preserve">
          <source>These certificates are widely used to support authentication and other functionality in Internet security systems. Common applications include Privacy Enhanced Mail (PEM), Transport Layer Security (SSL), code signing for trusted software distribution, and Secure Electronic Transactions (SET).</source>
          <target state="translated">これらの証明書は、インターネットセキュリティシステムにおける認証やその他の機能をサポートするために広く利用されています。一般的なアプリケーションには、プライバシー強化メール(PEM)、トランスポート・レイヤー・セキュリティ(SSL)、信頼できるソフトウェア配布のためのコード署名、セキュア電子取引(SET)などがあります。</target>
        </trans-unit>
        <trans-unit id="9e42e0ff806cf170a11e36b37a054c3229ccff88" translate="yes" xml:space="preserve">
          <source>These classes are capable of formatting dates, numbers, and messages, parsing; searching and sorting strings; and iterating over characters, words, sentences, and line breaks. This package contains three main groups of classes and interfaces:</source>
          <target state="translated">これらのクラスは、日付、数字、メッセージの書式設定、解析、文字列の検索とソート、文字、単語、文章、改行の反復処理を行うことができます。本パッケージには、3 つの主要なクラス群とインタフェースが含まれています。</target>
        </trans-unit>
        <trans-unit id="536ba11d6da2845bb0c80905149fb7531b460122" translate="yes" xml:space="preserve">
          <source>These comments apply to gain controls in general, not just master gain controls. A line can have more than one gain control. For example, a mixer (which is itself a line) might have a master gain control, an auxiliary return control, a reverb return control, and, on each of its source lines, an individual aux send and reverb send.</source>
          <target state="translated">これらのコメントは、マスターゲインコントロールだけでなく、一般的なゲインコントロールにも適用されます。ラインには複数のゲインコントロールがあります。例えば、ミキサー(それ自体がラインである)は、マスターゲインコントロール、AUX リターンコントロール、リバーブリターンコントロール、そしてソースラインごとに個別の Aux センドとリバーブセンドを持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="6863080fd292838b064091acab8ec4a7e59422e3" translate="yes" xml:space="preserve">
          <source>These constructors allow you to create a &lt;code&gt;Locale&lt;/code&gt; object with language, country and variant, but you cannot specify script or extensions.</source>
          <target state="translated">これらのコンストラクターを使用すると、言語、国、バリアントを含む &lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成できますが、スクリプトや拡張機能を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="4f834728921b0f3ab0a540e3f3bf6b14d71c7bcf" translate="yes" xml:space="preserve">
          <source>These different rule types can be expressed and queried.</source>
          <target state="translated">これらの異なるルールタイプを表現したり、問い合わせたりすることができます。</target>
        </trans-unit>
        <trans-unit id="f08e754a38dde7958ef1c6f1638768b615f3f1ca" translate="yes" xml:space="preserve">
          <source>These encodings are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other encodings are supported.</source>
          <target state="translated">これらのエンコーディングについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;CertPathエンコーディング」セクション&lt;/a&gt;で説明されています。他のエンコーディングがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b32f25bab2a6f9d22d42132cf2929dcee766e8c6" translate="yes" xml:space="preserve">
          <source>These fields are intended to be applicable in multiple calendar systems. For example, most non-ISO calendar systems define dates as a year, month and day, just with slightly different rules. The documentation of each field explains how it operates.</source>
          <target state="translated">これらのフィールドは、複数のカレンダシステムに適用することを意図しています。例えば、ほとんどの非ISOカレンダーシステムでは、日付を年、月、日として定義していますが、わずかに異なるルールで定義しています。各フィールドのドキュメントでは、その動作を説明しています。</target>
        </trans-unit>
        <trans-unit id="f71a58fc2f85a34846eba4205dc69caa813474de" translate="yes" xml:space="preserve">
          <source>These flags can be logically OR'ed together.</source>
          <target state="translated">これらのフラグは論理的に論理和することができます。</target>
        </trans-unit>
        <trans-unit id="2a00b200b8092958ccb95d52e492735fb5a88b33" translate="yes" xml:space="preserve">
          <source>These general methods allow polymorphic parsing and formatting of objects and are used, for example, by &lt;code&gt;MessageFormat&lt;/code&gt;. Subclasses often also provide additional &lt;code&gt;format&lt;/code&gt; methods for specific input types as well as &lt;code&gt;parse&lt;/code&gt; methods for specific result types. Any &lt;code&gt;parse&lt;/code&gt; method that does not take a &lt;code&gt;ParsePosition&lt;/code&gt; argument should throw &lt;code&gt;ParseException&lt;/code&gt; when no text in the required format is at the beginning of the input text.</source>
          <target state="translated">これらの一般的なメソッドは、オブジェクトの多態性の解析とフォーマットを可能にし、たとえば &lt;code&gt;MessageFormat&lt;/code&gt; によって使用されます。多くの場合、サブクラスは、特定の入力タイプ用の追加の &lt;code&gt;format&lt;/code&gt; メソッドと、特定の結果タイプ用の &lt;code&gt;parse&lt;/code&gt; メソッドも提供します。どれ &lt;code&gt;parse&lt;/code&gt; 取らないメソッド &lt;code&gt;ParsePosition&lt;/code&gt; 引数には、スローすべき &lt;code&gt;ParseException&lt;/code&gt; 必要な形式でテキストが入力テキストの先頭でないとき。</target>
        </trans-unit>
        <trans-unit id="eab7b0e51c3bfdf0586a547fefddc0d8e955988f" translate="yes" xml:space="preserve">
          <source>These interfaces and classes are required as part of the Java&amp;trade; Platform, Standard Edition (Java SE), but there is no requirement to provide any tools implementing them.</source>
          <target state="translated">これらのインターフェースとクラスは、Java&amp;trade;Platform、Standard Edition（Java SE）の一部として必要ですが、それらを実装するツールを提供する必要はありません。</target>
        </trans-unit>
        <trans-unit id="69a3f32f3321c8dd0341d385f7705d3bdbb396b6" translate="yes" xml:space="preserve">
          <source>These kinds of protection are specified by a &quot;cipher suite&quot;, which is a combination of cryptographic algorithms used by a given SSL connection. During the negotiation process, the two endpoints must agree on a cipher suite that is available in both environments. If there is no such suite in common, no SSL connection can be established, and no data can be exchanged.</source>
          <target state="translated">これらの種類の保護は「暗号スイート」によって指定され、これは与えられたSSL接続で使用される暗号アルゴリズムの組み合わせです。ネゴシエーションの過程で、2つのエンドポイントは両方の環境で利用可能な暗号スイートに合意しなければなりません。このような共通の暗号スイートがない場合は、SSL接続を確立することができず、データの交換もできません。</target>
        </trans-unit>
        <trans-unit id="7ff41a76c06a874e4c78ae8f4beb0185f7f249d3" translate="yes" xml:space="preserve">
          <source>These kinds of protection are specified by a &quot;cipher suite&quot;, which is a combination of cryptographic algorithms used by a given SSL connection. During the negotiation process, the two endpoints must agree on a ciphersuite that is available in both environments. If there is no such suite in common, no SSL connection can be established, and no data can be exchanged.</source>
          <target state="translated">これらの種類の保護は、与えられたSSL接続で使用される暗号アルゴリズムの組み合わせである「暗号スイート」によって指定されます。ネゴシエーションの過程で、2つのエンドポイントは両方の環境で利用可能な暗号スイートに合意しなければなりません。このような共通の暗号スイートがない場合、SSL接続は確立できず、データの交換もできません。</target>
        </trans-unit>
        <trans-unit id="7b9c276e86b40b1083fdf2a0734e76f5ff35e720" translate="yes" xml:space="preserve">
          <source>These limits imply that certain method handles cannot be created, solely because of the JVM limit on stacked arguments. For example, if a static JVM method accepts exactly 255 arguments, a method handle cannot be created for it. Attempts to create method handles with impossible method types lead to an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;. In particular, a method handle&amp;rsquo;s type must not have an arity of the exact maximum 255.</source>
          <target state="translated">これらの制限は、スタックされた引数に対するJVMの制限のために、特定のメソッドハンドルを作成できないことを意味します。たとえば、静的JVMメソッドが正確に255個の引数を受け入れる場合、そのメソッドのメソッドハンドルを作成できません。不可能なメソッドタイプでメソッドハンドルを作成しようとすると、&lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生し&lt;/a&gt;ます。特に、メソッドハンドルのタイプには、正確な最大値255のアリティがあってはなりません。</target>
        </trans-unit>
        <trans-unit id="2aef62f1a686aa612f7dadf32611ec60612d24e1" translate="yes" xml:space="preserve">
          <source>These linkage methods are designed to support the evaluation of &lt;em&gt;lambda expressions&lt;/em&gt; and &lt;em&gt;method references&lt;/em&gt; in the Java Language. For every lambda expressions or method reference in the source code, there is a target type which is a functional interface. Evaluating a lambda expression produces an object of its target type. The recommended mechanism for evaluating lambda expressions is to desugar the lambda body to a method, invoke an invokedynamic call site whose static argument list describes the sole method of the functional interface and the desugared implementation method, and returns an object (the lambda object) that implements the target type. (For method references, the implementation method is simply the referenced method; no desugaring is needed.)</source>
          <target state="translated">これらのリンケージメソッドは、Java言語での&lt;em&gt;ラムダ式&lt;/em&gt;および&lt;em&gt;メソッド参照の&lt;/em&gt;評価をサポートするように設計されています。ソースコード内のすべてのラムダ式またはメソッド参照には、関数型インターフェイスであるターゲットタイプがあります。ラムダ式を評価すると、そのターゲットタイプのオブジェクトが生成されます。ラムダ式を評価するための推奨されるメカニズムは、ラムダ本体をメソッドにデ糖化し、静的な引数リストが機能インターフェイスの唯一のメソッドと脱糖化された実装メソッドを記述しているinvokedynamic呼び出しサイトを呼び出し、オブジェクト（ラムダオブジェクト）を返すことです。ターゲットタイプを実装します。 （メソッド参照の場合、実装メソッドは単に参照メソッドであり、desugaringは必要ありません。）</target>
        </trans-unit>
        <trans-unit id="f76b936989514145bd202de1643f4d241fbb018e" translate="yes" xml:space="preserve">
          <source>These mechanisms are described in the &lt;a href=&quot;package-summary&quot;&gt;package specification&lt;/a&gt;.</source>
          <target state="translated">これらのメカニズムについては、&lt;a href=&quot;package-summary&quot;&gt;パッケージ仕様で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="24ac5b741a325296e9f1f056304a110b8a722ad5" translate="yes" xml:space="preserve">
          <source>These methods are designed to be used as tools for creating higher-level synchronization utilities, and are not in themselves useful for most concurrency control applications. The &lt;code&gt;park&lt;/code&gt; method is designed for use only in constructions of the form:</source>
          <target state="translated">これらのメソッドは、より高いレベルの同期ユーティリティを作成するためのツールとして使用するように設計されており、それ自体はほとんどの同時実行制御アプリケーションには役立ちません。 &lt;code&gt;park&lt;/code&gt; 方法は、形だけの構成で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="80b2b542cff995913a77f4654f407bd25dd4c1a4" translate="yes" xml:space="preserve">
          <source>These methods provide basic scripting functionality. Applications written to this simple interface are expected to work with minimal modifications in every implementation. It includes methods that execute scripts, and ones that set and get values.</source>
          <target state="translated">これらのメソッドは基本的なスクリプト機能を提供します。このシンプルなインターフェイスで書かれたアプリケーションは、すべての実装において最小限の変更で動作することが期待されています。スクリプトを実行するメソッドと、値を設定したり取得したりするメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="297752b6a18f573e9c56aa0c6689ca4f4e9ec102" translate="yes" xml:space="preserve">
          <source>These objects may only be accessed via the following public static final variables, and are the only &lt;code&gt;Class&lt;/code&gt; objects for which this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">これらのオブジェクトは、次のパブリックstatic final変数を介してのみアクセスでき、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す唯一の &lt;code&gt;Class&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a96ccc8f3e2fd8fe4c1dbd6fc649068f34d0702f" translate="yes" xml:space="preserve">
          <source>These operations are exposed in the constructors and methods of this class as follows:</source>
          <target state="translated">これらの操作は、以下のようにこのクラスのコンストラクタとメソッドで公開されています。</target>
        </trans-unit>
        <trans-unit id="47cbaf1cf3b15e600a882f2b865f9a1538cc73da" translate="yes" xml:space="preserve">
          <source>These parameter rules are also applicable to the set rule methods, such as &lt;code&gt;setStartRule&lt;/code&gt;.</source>
          <target state="translated">これらのパラメータルールは、 &lt;code&gt;setStartRule&lt;/code&gt; などのセットルールメソッドにも適用できます。</target>
        </trans-unit>
        <trans-unit id="647770bcf1eb1a38d71a54bfe8c3e7ad6de8bd78" translate="yes" xml:space="preserve">
          <source>These properties are interpreted according to the following rules:</source>
          <target state="translated">これらのプロパティは、以下のルールに従って解釈されます。</target>
        </trans-unit>
        <trans-unit id="d206af1d2dc412e81e7644b4cec4700275f97ba3" translate="yes" xml:space="preserve">
          <source>These purposes are served in this class by three related operations:</source>
          <target state="translated">これらの目的は、このクラスでは3つの関連する操作によって実現されています。</target>
        </trans-unit>
        <trans-unit id="e42b277937f8a596084eb371e31744be7cbbfdeb" translate="yes" xml:space="preserve">
          <source>These reduction operations can run safely in parallel with almost no modification:</source>
          <target state="translated">これらの削減操作は、ほとんど手を加えることなく、安全に並行して実行することができます。</target>
        </trans-unit>
        <trans-unit id="b5fe1b43768fd591f3bcb574e2cd4e802bb59264" translate="yes" xml:space="preserve">
          <source>These requirements ensure that streams produced by the &lt;a href=&quot;collection#stream--&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collection#parallelStream--&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods will reflect the contents of the collection as of initiation of the terminal stream operation.</source>
          <target state="translated">これらの要件により、&lt;a href=&quot;collection#stream--&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;collection#parallelStream--&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt;メソッドによって生成されたストリームが、ターミナルストリーム操作の開始時のコレクションの内容を確実に反映するようになります。</target>
        </trans-unit>
        <trans-unit id="9ce6632fdcabd56179ddf7edadcea4b6aaa39c33" translate="yes" xml:space="preserve">
          <source>These requirements significantly reduce the scope of potential interference between mutations of the stream source and execution of stream pipelines. Streams based on spliterators with the desired characteristics, or those using the Supplier-based factory forms, are immune to modifications of the data source prior to commencement of the terminal operation (provided the behavioral parameters to the stream operations meet the required criteria for non-interference and statelessness). See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">これらの要件により、ストリームソースの変更とストリームパイプラインの実行の間の潜在的な干渉の範囲が大幅に削減されます。目的の特性を持つスプリッターに基づくストリーム、またはサプライヤーベースのファクトリフォームを使用するストリームは、ターミナル操作の開始前のデータソースの変更の影響を受けません（ストリーム操作の動作パラメーターが、干渉と無国籍）。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f76fe1fde2a58cf1420c28ae186dba0fd8cdb513" translate="yes" xml:space="preserve">
          <source>These response controls might have been generated by a successful or failed operation.</source>
          <target state="translated">これらの応答制御は、操作の成功または失敗によって生成された可能性があります。</target>
        </trans-unit>
        <trans-unit id="3133b61143c4a97991f32b65e594ea52115dd6e5" translate="yes" xml:space="preserve">
          <source>These rules imply that there is a one-to-one mapping between quoted and unquoted forms.</source>
          <target state="translated">これらの規則は、引用形と非引用形の間に一対一の対応付けがあることを暗示しています。</target>
        </trans-unit>
        <trans-unit id="fef3e7eb79137df43be121f2de5aa7417409ab48" translate="yes" xml:space="preserve">
          <source>These rules mean that extra items can be added to a &lt;code&gt;CompositeData&lt;/code&gt; without making it invalid for a &lt;code&gt;CompositeType&lt;/code&gt; that does not have those items.</source>
          <target state="translated">これらのルールは、それらのアイテムを持たない &lt;code&gt;CompositeType&lt;/code&gt; に対して無効にすることなく、追加のアイテムを &lt;code&gt;CompositeData&lt;/code&gt; に追加できることを意味します。</target>
        </trans-unit>
        <trans-unit id="93285ed9687ceae878834b3cc5f3c85f4529ac14" translate="yes" xml:space="preserve">
          <source>These scales are the ones used by the methods which return exact arithmetic results; except that an exact divide may have to use a larger scale since the exact result may have more digits. For example, &lt;code&gt;1/32&lt;/code&gt; is &lt;code&gt;0.03125&lt;/code&gt;.</source>
          <target state="translated">これらのスケールは、正確な算術結果を返すメソッドで使用されるものです。ただし、正確な除算では、正確な結果の桁数が増える可能性があるため、より大きなスケールを使用する必要がある場合があります。たとえば、 &lt;code&gt;1/32&lt;/code&gt; は &lt;code&gt;0.03125&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8e810c9cd3c3d10bac6318c77d76a5f66cc69714" translate="yes" xml:space="preserve">
          <source>These styles are used when obtaining a date-time style from configuration. See &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetimeformatterbuilder&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">これらのスタイルは、構成から日時スタイルを取得するときに使用されます。使用方法については、&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;datetimeformatterbuilder&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1e707b74f1bd6747e77b6eba32772900f7b93a32" translate="yes" xml:space="preserve">
          <source>These transformations are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher&quot;&gt; Cipher section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other transformations are supported.</source>
          <target state="translated">これらの変換については、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの暗号&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher&quot;&gt;セクション&lt;/a&gt;で説明されています。他の変換がサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="998abafd744dbc64c5eb0e4aa97e8d53ca3729ba" translate="yes" xml:space="preserve">
          <source>These two APIs provide callers the means to query the Policy for Principal-based Permission entries.</source>
          <target state="translated">これらの 2 つの API は、呼び出し元に Principal-based Permission エントリのポリシーを問い合わせる手段を提供します。</target>
        </trans-unit>
        <trans-unit id="a115f527807f7ad38aadc1251aabbfdf3dc66f31" translate="yes" xml:space="preserve">
          <source>These two properties may be specified on the command line to the &quot;java&quot; command, or as system property definitions passed to JNI_CreateJavaVM.</source>
          <target state="translated">これら2つのプロパティは、&quot;java &quot;コマンドへのコマンドラインで指定するか、JNI_CreateJavaVMに渡されるシステム・プロパティ定義として指定することができます。</target>
        </trans-unit>
        <trans-unit id="996bd5dd03cf13a899ae43ea59349cc73d3d4dc4" translate="yes" xml:space="preserve">
          <source>These units are intended to be applicable in multiple calendar systems. For example, most non-ISO calendar systems define units of years, months and days, just with slightly different rules. The documentation of each unit explains how it operates.</source>
          <target state="translated">これらの単位は、複数の暦システムに適用することを意図しています。例えば、ほとんどのISO以外のカレンダーシステムでは、年、月、日の単位を定義していますが、わずかに異なるルールで定義されています。各単位の説明書には、その動作方法が記載されています。</target>
        </trans-unit>
        <trans-unit id="c5472c0639969a263b9f755acdf389e0d8c3da22" translate="yes" xml:space="preserve">
          <source>They have the same element type,</source>
          <target state="translated">これらは同じ要素の型を持っています。</target>
        </trans-unit>
        <trans-unit id="cdfeeb8a91a65cd73f75c6e587083ef66ea635a5" translate="yes" xml:space="preserve">
          <source>They have the same number of remaining elements, and</source>
          <target state="translated">それらは、残りの要素の数が同じであり</target>
        </trans-unit>
        <trans-unit id="1b2edcdb089ab60cba21f42efe299c3451e3c185" translate="yes" xml:space="preserve">
          <source>They may be used to monitor both print services (such as printers going on-line &amp;amp; off-line), and the progress of a specific print job.</source>
          <target state="translated">これらは、両方の印刷サービス（オンラインおよびオフラインになるプリンターなど）と特定の印刷ジョブの進行状況を監視するために使用できます。</target>
        </trans-unit>
        <trans-unit id="c9817dde9253443f7c2405ea71c3564c292de17d" translate="yes" xml:space="preserve">
          <source>Third parties may wish to provide value-add wrappers around the facility objects from this interface, for example a &lt;code&gt;Filer&lt;/code&gt; extension that allows multiple processors to coordinate writing out a single source file. To enable this, for processors running in a context where their side effects via the API could be visible to each other, the tool infrastructure must provide corresponding facility objects that are &lt;code&gt;.equals&lt;/code&gt;, &lt;code&gt;Filer&lt;/code&gt;s that are &lt;code&gt;.equals&lt;/code&gt;, and so on. In addition, the tool invocation must be able to be configured such that from the perspective of the running annotation processors, at least the chosen subset of helper classes are viewed as being loaded by the same class loader. (Since the facility objects manage shared state, the implementation of a wrapper class must know whether or not the same base facility object has been wrapped before.)</source>
          <target state="translated">サードパーティは、このインターフェイスからファシリティオブジェクトの付加価値ラッパーを提供することを望む場合があります。たとえば、複数のプロセッサが単一のソースファイルの書き込みを調整できるようにする &lt;code&gt;Filer&lt;/code&gt; 拡張などです。 APIを介して、それらの副作用が相互に見えるかもしれないここでコンテキストで実行されているプロセッサのために、これを可能にするために、ある施設オブジェクト対応提供しなければならないツールインフラ &lt;code&gt;.equals&lt;/code&gt; 、 &lt;code&gt;Filer&lt;/code&gt; であるS &lt;code&gt;.equals&lt;/code&gt; を、 等々。さらに、ツールの呼び出しは、実行中の注釈プロセッサの観点から、少なくとも選択されたヘルパークラスのサブセットが同じクラスローダーによってロードされていると見なされるように構成できる必要があります。（ファシリティオブジェクトは共有状態を管理するため、ラッパークラスの実装は、同じ基本ファシリティオブジェクトが以前にラップされているかどうかを知る必要があります。）</target>
        </trans-unit>
        <trans-unit id="7af406c3aaa271300eedbb974c7a54d928cca6a4" translate="yes" xml:space="preserve">
          <source>This &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies that code from &quot;foo.com&quot;, signed by &quot;foo', and running as a &lt;code&gt;SolarisPrincipal&lt;/code&gt; with the name, duke, has one &lt;code&gt;Permission&lt;/code&gt;. This &lt;code&gt;Permission&lt;/code&gt; permits the executing code to read and write files in the directory, &quot;/home/duke&quot;.</source>
          <target state="translated">この&lt;b&gt;&lt;i&gt;助成金&lt;/i&gt;&lt;/b&gt;により署名された「foo.com」からコード、「foo」であり、として実行されていることを、エントリが指定 &lt;code&gt;SolarisPrincipal&lt;/code&gt; 名、公爵では、1つの持っている &lt;code&gt;Permission&lt;/code&gt; 。この &lt;code&gt;Permission&lt;/code&gt; ディレクトリ内のファイルを読み書きするための実行コードを許可し、」 / home / duke」。</target>
        </trans-unit>
        <trans-unit id="a0574eaa19de0e15db5fdb797729f29466170c1f" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;@Target&lt;/code&gt; meta-annotation indicates that the declared type is intended solely for use as a member type in complex annotation type declarations. It cannot be used to annotate anything directly:</source>
          <target state="translated">この &lt;code&gt;@Target&lt;/code&gt; メタアノテーションは、宣言された型が、複雑なアノテーション型宣言のメンバー型としての使用のみを目的としていることを示しています。直接何かを注釈するために使用することはできません：</target>
        </trans-unit>
        <trans-unit id="98f93f642c8589caf925501755e90c3a3667c633" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Configuration&lt;/code&gt; specifies that an application named, &quot;Login&quot;, requires users to first authenticate to the</source>
          <target state="translated">この &lt;code&gt;Configuration&lt;/code&gt; は、「ログイン」という名前のアプリケーションがユーザーに最初に認証することを要求することを指定します</target>
        </trans-unit>
        <trans-unit id="e7dca1afa768c61eb8246089859bd808f78d59fc" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;FileAttributeView&lt;/code&gt; provides a view of a file's user-defined attributes as a set of name/value pairs, where the attribute name is represented by a &lt;code&gt;String&lt;/code&gt;. An implementation may require to encode and decode from the platform or file system representation when accessing the attribute. The value has opaque content. This attribute view defines the &lt;a href=&quot;userdefinedfileattributeview#read-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods to read the value into or write from a &lt;a href=&quot;../../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;FileAttributeView&lt;/code&gt; is not intended for use where the size of an attribute value is larger than &lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;FileAttributeView&lt;/code&gt; は、ファイルのユーザー定義属性のビューを名前と値のペアのセットとして提供します。属性名は &lt;code&gt;String&lt;/code&gt; で表されます。実装では、属性にアクセスするときに、プラットフォームまたはファイルシステムの表現からエンコードおよびデコードする必要がある場合があります。値は不透明な内容です。この属性ビューは、&lt;a href=&quot;../../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; に&lt;/a&gt;値を書き込んだり、ByteBufferから値を&lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;userdefinedfileattributeview#read-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;するための読み取りおよび書き込みメソッドを定義します。この &lt;code&gt;FileAttributeView&lt;/code&gt; は、属性値のサイズが&lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;より大きい場合の使用を意図していません。</target>
        </trans-unit>
        <trans-unit id="bee0760fe5e783edd2bde04ce6514f1bd4ac2344" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Handler&lt;/code&gt; publishes log records to &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Handler&lt;/code&gt; は、ログレコードを &lt;code&gt;System.err&lt;/code&gt; に発行します。</target>
        </trans-unit>
        <trans-unit id="518dc12e789b63d9602f3b36b0af20a614700005" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Handler&lt;/code&gt; publishes log records to &lt;code&gt;System.err&lt;/code&gt;. By default the &lt;code&gt;SimpleFormatter&lt;/code&gt; is used to generate brief summaries.</source>
          <target state="translated">この &lt;code&gt;Handler&lt;/code&gt; は、ログレコードを &lt;code&gt;System.err&lt;/code&gt; に発行します。デフォルトでは、 &lt;code&gt;SimpleFormatter&lt;/code&gt; を使用して簡単な要約が生成されます。</target>
        </trans-unit>
        <trans-unit id="36046ccb9dcb8ece08562c1ab81b5a9c5364f7f4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;MemoryMXBean&lt;/code&gt; is a &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; that emits two types of memory &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;notifications&lt;/code&gt;&lt;/a&gt; if any one of the memory pools supports a &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; or a &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;collection usage threshold&lt;/a&gt; which can be determined by calling the &lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported--&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この &lt;code&gt;MemoryMXBean&lt;/code&gt; でははある&lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;メモリの二種類発する&lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;notifications&lt;/code&gt; &lt;/a&gt;メモリ・プールのいずれかがサポートしている場合、&lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;使用量しきい値&lt;/a&gt;や&lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;コレクション使用量しきい値&lt;/a&gt;を呼び出すことによって決定することができる&lt;a href=&quot;memorypoolmxbean#isUsageThresholdSupported--&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;MemoryPoolMXBean.isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="b2df064c410fd27f0e63fabab24d4a2bd0b9a0c2" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;StringJoiner&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;StringJoiner&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9e558e7263cf30635484236c95f403ac1121e48" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Subject&lt;/code&gt; class implements &lt;code&gt;Serializable&lt;/code&gt;. While the Principals associated with the &lt;code&gt;Subject&lt;/code&gt; are serialized, the credentials associated with the &lt;code&gt;Subject&lt;/code&gt; are not. Note that the &lt;code&gt;java.security.Principal&lt;/code&gt; class does not implement &lt;code&gt;Serializable&lt;/code&gt;. Therefore all concrete &lt;code&gt;Principal&lt;/code&gt; implementations associated with Subjects must implement &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Subject&lt;/code&gt; クラスは &lt;code&gt;Serializable&lt;/code&gt; を実装します。 &lt;code&gt;Subject&lt;/code&gt; 関連付けられたプリンシパルはシリアル化されますが、 &lt;code&gt;Subject&lt;/code&gt; 関連付けられた資格情報はシリアル化されません。 &lt;code&gt;java.security.Principal&lt;/code&gt; クラスは &lt;code&gt;Serializable&lt;/code&gt; を実装しないことに注意してください。したがって、サブジェクトに関連付けられているすべての具体的な &lt;code&gt;Principal&lt;/code&gt; 実装は &lt;code&gt;Serializable&lt;/code&gt; を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="62db0d8a65e44d082a42520a299db77e5cc95323" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;enum&lt;/code&gt; is intended to replace the integer-based enumeration of rounding mode constants in &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt;&lt;code&gt;BigDecimal.ROUND_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt;&lt;code&gt;BigDecimal.ROUND_DOWN&lt;/code&gt;&lt;/a&gt;, etc. ).</source>
          <target state="translated">この &lt;code&gt;enum&lt;/code&gt; は、&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt; &lt;code&gt;BigDecimal.ROUND_UP&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt; &lt;code&gt;BigDecimal.ROUND_DOWN&lt;/code&gt; &lt;/a&gt;など）の丸めモード定数の整数ベースの列挙を置き換えることを目的としています。</target>
        </trans-unit>
        <trans-unit id="1f2d20f5d20e9aafea63ff46a3fe3aa6165a7d79" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;read&lt;/code&gt; method cannot block.</source>
          <target state="translated">この &lt;code&gt;read&lt;/code&gt; メソッドはブロックできません。</target>
        </trans-unit>
        <trans-unit id="fb06f97a093b16c944a96b6ca17a8d22c3e28b44" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have a Provider if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このConfigurationインスタンスは、 &lt;code&gt;Configuration.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみ、プロバイダーを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="c22e50bd9aa1f0422f432a320935dd0d1f877f98" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have a type if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このConfigurationインスタンスは、 &lt;code&gt;Configuration.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみタイプを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="8bc6889ca1b0f8f3565d8930a4e873adaa859028" translate="yes" xml:space="preserve">
          <source>This Configuration instance will only have parameters if it was obtained via a call to &lt;code&gt;Configuration.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このConfigurationインスタンスは、 &lt;code&gt;Configuration.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみパラメーターを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="12a42e83700f895cae61540b6259e88c2b2aa2d7" translate="yes" xml:space="preserve">
          <source>This DOM Level 3 method is not supported for &lt;code&gt;IIOMetadataNode&lt;/code&gt; and will throw a &lt;code&gt;DOMException&lt;/code&gt;.</source>
          <target state="translated">このDOMレベル3メソッドは &lt;code&gt;IIOMetadataNode&lt;/code&gt; ではサポートされておらず、 &lt;code&gt;DOMException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="88cddc5e47c86d31fa8b49379a932b299b096755" translate="yes" xml:space="preserve">
          <source>This ID uniquely defines this object. The format of an offset based ID is defined by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このIDは、このオブジェクトを一意に定義します。オフセットベースのIDの形式は、&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="d11b672098a927855c0e4006aad3e98c4704db5f" translate="yes" xml:space="preserve">
          <source>This LogManager object:</source>
          <target state="translated">このLogManagerオブジェクト。</target>
        </trans-unit>
        <trans-unit id="9a4b9245f566d6174f8af40ceb307bc6ac85ee54" translate="yes" xml:space="preserve">
          <source>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256.</source>
          <target state="translated">この MessageDigest クラスは、SHA-1 や SHA-256 などのメッセージ・ダイジェスト・アルゴリズムの機能をアプリケーションに提供します。</target>
        </trans-unit>
        <trans-unit id="dfc2d27c227ae660aca7a9180063fa625e6efb62" translate="yes" xml:space="preserve">
          <source>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256. Message digests are secure one-way hash functions that take arbitrary-sized data and output a fixed-length hash value.</source>
          <target state="translated">この MessageDigest クラスは、SHA-1 や SHA-256 などのメッセージダイジェストアルゴリズムの機能をアプリケーションに提供します。メッセージダイジェストは、任意のサイズのデータを受け取り、固定長のハッシュ値を出力する安全な一方向ハッシュ関数です。</target>
        </trans-unit>
        <trans-unit id="87bd004e92d6136db7b100806731ffb0e4a8ae69" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have a Provider if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このPolicyインスタンスは、 &lt;code&gt;Policy.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみ、プロバイダーを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="bac1288a600ecf0e061da22889c8ff35d4287de5" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have a type if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このPolicyインスタンスは、 &lt;code&gt;Policy.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみタイプを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="73075a777314e91e010444cf463c609e4a101022" translate="yes" xml:space="preserve">
          <source>This Policy instance will only have parameters if it was obtained via a call to &lt;code&gt;Policy.getInstance&lt;/code&gt;. Otherwise this method returns null.</source>
          <target state="translated">このPolicyインスタンスは、 &lt;code&gt;Policy.getInstance&lt;/code&gt; の呼び出しを介して取得された場合にのみパラメーターを持ちます。それ以外の場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="3f1c7e734c6ce43bfd074f3059f9cc9f53d9b23e" translate="yes" xml:space="preserve">
          <source>This PrinterURI attribute's underlying URI and &lt;code&gt;object&lt;/code&gt;'s underlying URI are equal.</source>
          <target state="translated">このPrinterURI属性の基になるURIと &lt;code&gt;object&lt;/code&gt; の基になるURIは同じです。</target>
        </trans-unit>
        <trans-unit id="a23acb3515bb3ced0191a146de6afa2ce3788fa7" translate="yes" xml:space="preserve">
          <source>This ProtectionDomain class encapsulates the characteristics of a domain, which encloses a set of classes whose instances are granted a set of permissions when being executed on behalf of a given set of Principals.</source>
          <target state="translated">このProtectionDomainクラスは,ドメインの特性をカプセル化したものであり,プリンシパルに代わって実行されるときに,そのインスタンスに一定の許可が与えられるクラスの集合を囲んでいる。</target>
        </trans-unit>
        <trans-unit id="c3aa809b1bad0e1ae553bc8ccc658fd593e6cbaf" translate="yes" xml:space="preserve">
          <source>This URI attribute's underlying URI and &lt;code&gt;object&lt;/code&gt;'s underlying URI are equal.</source>
          <target state="translated">このURI属性の基になるURIと &lt;code&gt;object&lt;/code&gt; の基になるURIは同じです。</target>
        </trans-unit>
        <trans-unit id="0d0d02c3d86c6b9788a5b1840dfd1af05ed9b865" translate="yes" xml:space="preserve">
          <source>This abstract class has two implementations, both of which are immutable and thread-safe. One implementation models region-based IDs, the other is &lt;code&gt;ZoneOffset&lt;/code&gt; modelling offset-based IDs. This difference is visible in serialization.</source>
          <target state="translated">この抽象クラスには2つの実装があり、どちらも不変でスレッドセーフです。1つの実装は領域ベースのIDをモデル化し、もう1つはオフセットベースのIDをモデル化する &lt;code&gt;ZoneOffset&lt;/code&gt; です。この違いは、シリアル化で確認できます。</target>
        </trans-unit>
        <trans-unit id="af89798815d8766dba755b7064bdbaa6e44d16b9" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an input stream of bytes.</source>
          <target state="translated">この抽象クラスは、バイトの入力ストリームを表すすべてのクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="542c000ead5f94e153511c3149a9ac30f0978f97" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an output stream of bytes.</source>
          <target state="translated">この抽象クラスは、バイトの出力ストリームを表すすべてのクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="859a86cb70a29ade18be64d6164eef01f3fb0053" translate="yes" xml:space="preserve">
          <source>This abstract class is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink.</source>
          <target state="translated">この抽象クラスは、バイトの出力ストリームを表すすべてのクラスのスーパークラスです。出力ストリームは,出力バイトを受け付けて,それをいくつかのシンクに送ります.</target>
        </trans-unit>
        <trans-unit id="0da0a4f596a531d53598898b278744dacde2837d" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent a referral exception, which is generated in response to a &lt;em&gt;referral&lt;/em&gt; such as that returned by LDAP v3 servers.</source>
          <target state="translated">この抽象クラスは、LDAP v3サーバーによって返されるような&lt;em&gt;紹介&lt;/em&gt;に応答して生成される紹介例外を表すために使用されます。</target>
        </trans-unit>
        <trans-unit id="5533d7c594ae4e8f67be32756fbf1c36a0369f4a" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent an LDAP referral exception.</source>
          <target state="translated">この抽象クラスは、LDAP参照例外を表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="211be5043fa4842399ea6e1192a72d3190feae8d" translate="yes" xml:space="preserve">
          <source>This abstract class is used to represent an LDAP referral exception. It extends the base &lt;code&gt;ReferralException&lt;/code&gt; by providing a &lt;code&gt;getReferralContext()&lt;/code&gt; method that accepts request controls. LdapReferralException is an abstract class. Concrete implementations of it determine its synchronization and serialization properties.</source>
          <target state="translated">この抽象クラスは、LDAP参照例外を表すために使用されます。リクエストコントロールを受け入れる &lt;code&gt;getReferralContext()&lt;/code&gt; メソッドを提供することにより、基本的な &lt;code&gt;ReferralException&lt;/code&gt; を拡張します。LdapReferralExceptionは抽象クラスです。それの具体的な実装は、同期とシリアル化のプロパティを決定します。</target>
        </trans-unit>
        <trans-unit id="5870422cc3cf304540dbf014abbe765753c4a28a" translate="yes" xml:space="preserve">
          <source>This abstract class must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe.</source>
          <target state="translated">この抽象クラスは、他のクラスが正しく動作するように注意して実装しなければなりません。インスタンス化できるすべての実装は、最終的で、不変で、スレッドセーフでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a882cc8603d5c8dd42b9dccf2e9ac4a17199444b" translate="yes" xml:space="preserve">
          <source>This abstract class represents a factory for creating LDAPv3 controls.</source>
          <target state="translated">この抽象クラスは、LDAPv3コントロールを作成するためのファクトリーを表します。</target>
        </trans-unit>
        <trans-unit id="15ef5eb148d426a9a74e89d09b6c1d6c762bd269" translate="yes" xml:space="preserve">
          <source>This abstract class represents a factory for creating LDAPv3 controls. LDAPv3 controls are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">この抽象クラスは、LDAPv3コントロールを作成するためのファクトリを表します。LDAPv3コントロールは&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されています。</target>
        </trans-unit>
        <trans-unit id="acebe30fbd007e4c2204c729b868e57910970846" translate="yes" xml:space="preserve">
          <source>This activity is normal, although it may cause puzzling entries to be created in web-server logs. If a web server is not configured correctly, however, then this activity may cause the provider-loading algorithm to fail spuriously.</source>
          <target state="translated">この活動は正常ですが、ウェブサーバのログに不可解なエントリが作成される可能性があります。しかし、ウェブサーバが正しく設定されていない場合、この活動はプロバイダのロードアルゴリズムの失敗を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="bfa8c5c0a107b31c4a95d0edb91b439cd84c11c5" translate="yes" xml:space="preserve">
          <source>This adds a new provider to those currently available. A provider supplies rules for one or more zone IDs. A provider cannot be registered if it supplies a zone ID that has already been registered. See the notes on time-zone IDs in &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;, especially the section on using the concept of a &quot;group&quot; to make IDs unique.</source>
          <target state="translated">これにより、現在利用可能なプロバイダーに新しいプロバイダーが追加されます。プロバイダーは、1つ以上のゾーンIDのルールを提供します。プロバイダーは、すでに登録されているゾーンIDを提供する場合は登録できません。&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; の&lt;/a&gt;タイムゾーンIDに関する注記、特に「グループ」の概念を使用してIDを一意にすることに関するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="c7b1b2290b18bee4fc34922df6ada6db168a30c6" translate="yes" xml:space="preserve">
          <source>This adds the amount to the days unit in a copy of this period. The years and months units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 days returns &quot;1 year, 6 months and 5 days&quot;.</source>
          <target state="translated">これは、この期間のコピーの日単位に金額を加算します。年と月の単位は影響を受けません。例えば、&quot;1年6ヶ月と3日 &quot;に2日を足すと、&quot;1年6ヶ月と5日 &quot;が返されます。</target>
        </trans-unit>
        <trans-unit id="577c40b8bdf2319aa6e28f29dbc1c99faaccf0de" translate="yes" xml:space="preserve">
          <source>This adds the amount to the months unit in a copy of this period. The years and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 months returns &quot;1 year, 8 months and 3 days&quot;.</source>
          <target state="translated">これは、この期間のコピーの月単位に金額を加算します。年単位と日数単位は影響を受けません。例えば、&quot;1年6ヶ月と3日 &quot;に2ヶ月を足すと、&quot;1年8ヶ月と3日 &quot;が返されます。</target>
        </trans-unit>
        <trans-unit id="42ae399a959d94527692104db6f0b6addcd3e7c1" translate="yes" xml:space="preserve">
          <source>This adds the amount to the years unit in a copy of this period. The months and days units are unaffected. For example, &quot;1 year, 6 months and 3 days&quot; plus 2 years returns &quot;3 years, 6 months and 3 days&quot;.</source>
          <target state="translated">これは、この期間のコピーの年単位に金額を加算します。月と日の単位は影響を受けません。例えば、&quot;1年と6ヶ月と3日 &quot;に2年を足すと、&quot;3年と6ヶ月と3日 &quot;が返されます。</target>
        </trans-unit>
        <trans-unit id="312630dd3e559aa3e850635064b18ba893feb979" translate="yes" xml:space="preserve">
          <source>This adds the specified number of hours to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">これは、指定された時間数をこの時間に加算し、新しい時間を返します。計算は午前0時頃に終了します。</target>
        </trans-unit>
        <trans-unit id="5f9421d077bfb82504acd23d2b3d17ad4833739e" translate="yes" xml:space="preserve">
          <source>This adds the specified number of minutes to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">これは、指定された分数をこの時間に加算し、新しい時間を返します。計算は午前0時頃に終了します。</target>
        </trans-unit>
        <trans-unit id="56664909d328f8aa38e9bb862961993421d5ea4a" translate="yes" xml:space="preserve">
          <source>This adds the specified number of nanoseconds to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">この時間に指定されたナノ秒数を加算し、新しい時間を返します。計算は午前0時頃に終了します。</target>
        </trans-unit>
        <trans-unit id="272f310507ce85af55cf8e2ef919441f6f1bce72" translate="yes" xml:space="preserve">
          <source>This adds the specified number of seconds to this time, returning a new time. The calculation wraps around midnight.</source>
          <target state="translated">これは、指定された秒数をこの時間に加算し、新しい時間を返します。計算は午前0時頃に終了します。</target>
        </trans-unit>
        <trans-unit id="adbe662ba01bd9221e2364f3a2749e6f09b92016" translate="yes" xml:space="preserve">
          <source>This adjusts the specified temporal object using the logic encapsulated in the implementing class. Examples might be an adjuster that sets the date avoiding weekends, or one that sets the date to the last day of the month.</source>
          <target state="translated">これは、実装クラスでカプセル化されたロジックを使用して、指定された時間オブジェクトを調整します。例えば、週末を避けて日付を設定するアジャスタや、月の最終日に日付を設定するアジャスタなどが考えられます。</target>
        </trans-unit>
        <trans-unit id="64bbe4507c0b775f8dd0431c3109d0f3b5437715" translate="yes" xml:space="preserve">
          <source>This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;../temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">これは、指定されたアジャスターのルールに従ってこの日時を調整します。単純なアジャスターは、年フィールドなどのフィールドの1つを設定するだけです。より複雑な調整機能では、日付を月の最終日に設定する場合があります。一般的な調整の選択は&lt;a href=&quot;../temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。アジャスターは、月の長さやうるう年のさまざまな長さなど、特別な場合の処理​​を担当します。</target>
        </trans-unit>
        <trans-unit id="10ae2372be7be68098127766d8108eeb65da90e5" translate="yes" xml:space="preserve">
          <source>This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">これは、指定されたアジャスターのルールに従ってこの日時を調整します。単純なアジャスターは、年フィールドなどのフィールドの1つを設定するだけです。より複雑な調整機能では、日付を月の最終日に設定する場合があります。一般的な調整の選択は&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。アジャスターは、月の長さやうるう年のさまざまな長さなど、特別な場合の処理​​を担当します。</target>
        </trans-unit>
        <trans-unit id="e88d4e6ef393c6ea0a8be4561f97e8f887d8f6e7" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;../temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、この時間を調整し、指定された量のルールに従って追加します。金額は通常、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; です&lt;/a&gt;が、&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;など、&lt;a href=&quot;../temporal/temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;インターフェースを実装する他のタイプの場合もあります。</target>
        </trans-unit>
        <trans-unit id="cf16c51e141a12f609caa086e84589698dded626" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、この時間を調整し、指定された量のルールに従って追加します。金額は通常、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; です&lt;/a&gt;が、&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;など、&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;インターフェースを実装する他のタイプの場合もあります。</target>
        </trans-unit>
        <trans-unit id="7fbebc06513f3a97a95d03c4fcae8ef0464f29e9" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, subtracting according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;../temporal/temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定された量のルールに従って減算して、この時間を調整します。金額は通常、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; です&lt;/a&gt;が、&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;など、&lt;a href=&quot;../temporal/temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;インターフェースを実装する他のタイプの場合もあります。</target>
        </trans-unit>
        <trans-unit id="1df2d75424dfecb1e8650c0bb937b97b7353dc6e" translate="yes" xml:space="preserve">
          <source>This adjusts this temporal, subtracting according to the rules of the specified amount. The amount is typically a &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; but may be any other type implementing the &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface, such as &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定された量のルールに従って減算して、この時間を調整します。金額は通常、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; です&lt;/a&gt;が、&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;など、&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;インターフェースを実装する他のタイプの場合もあります。</target>
        </trans-unit>
        <trans-unit id="4aed973346c68a83b9e5a6d690975188f9f90522" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt; CertPathBuilder section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">このアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;CertPathBuilderセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d5a7ddfdadb11cb4435a90789db39d514610524" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathValidator&quot;&gt; CertPathValidator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">このアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathValidator&quot;&gt;CertPathValidatorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="08156557404a503d4b57bb0035d148a7251005fb" translate="yes" xml:space="preserve">
          <source>This algorithm is described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyAgreement&quot;&gt; KeyAgreement section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">このアルゴリズムは、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyAgreement&quot;&gt;KeyAgreementセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8420ee4992ac12c0e9c3a3d695f8378f8178a34d" translate="yes" xml:space="preserve">
          <source>This algorithm is implemented by this method. If it is overridden, the behavior specified here must be maintained.</source>
          <target state="translated">このアルゴリズムは、このメソッドによって実装されています。オーバーライドされた場合は、ここで指定された動作を維持しなければなりません。</target>
        </trans-unit>
        <trans-unit id="7012ce743c621477f3e955bfcc887cfe246859dd" translate="yes" xml:space="preserve">
          <source>This allows a &lt;code&gt;DateTimeFormatter&lt;/code&gt; to be created. All date-time formatters are created ultimately using this builder.</source>
          <target state="translated">これにより、 &lt;code&gt;DateTimeFormatter&lt;/code&gt; を作成できます。すべての日時フォーマッターは、最終的にはこのビルダーを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="6fa9e683c930d9182a069fdd650fc200aa8b8d84" translate="yes" xml:space="preserve">
          <source>This allows a number of week-based-years to be added to, or subtracted from, a date. The unit is equal to either 52 or 53 weeks. The estimated duration of a week-based-year is the same as that of a standard ISO year at &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">これにより、週ベースの年数を日付に追加したり、日付から差し引いたりできます。単位は52週間または53週間です。週ベースの年の推定期間は、標準のISO年である &lt;code&gt;365.2425 Days&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="392df325756a65e9c5a8af04366376db864af4a4" translate="yes" xml:space="preserve">
          <source>This allows an attacker to control the runtime characteristics of the Java virtual machine and cause the system to misbehave. An attacker can also access some information related to the running application.</source>
          <target state="translated">これにより、攻撃者はJava仮想マシンの実行時の特性を制御し、システムの誤動作を引き起こすことができます。また、攻撃者は、実行中のアプリケーションに関連するいくつかの情報にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="47834696b9fa695c266a5e8270bb613c5f6a908f" translate="yes" xml:space="preserve">
          <source>This allows an attacker to create thread groups and set their run priority.</source>
          <target state="translated">これにより、攻撃者はスレッドグループを作成し、その実行優先度を設定することができます。</target>
        </trans-unit>
        <trans-unit id="0d8b990f0a0bfc85454485276436f4879f340d42" translate="yes" xml:space="preserve">
          <source>This allows an attacker to modify the behaviour of any thread in the system.</source>
          <target state="translated">これにより、攻撃者はシステム内の任意のスレッドの動作を変更することができます。</target>
        </trans-unit>
        <trans-unit id="6e99a9ee933bdb89ca061322a9c2ca82d618e076" translate="yes" xml:space="preserve">
          <source>This allows an attacker to mount a denial-of-service attack by automatically forcing the virtual machine to halt. Note: The &quot;exitVM.*&quot; permission is automatically granted to all code loaded from the application class path, thus enabling applications to terminate themselves. Also, the &quot;exitVM&quot; permission is equivalent to &quot;exitVM.*&quot;.</source>
          <target state="translated">これにより、攻撃者は仮想マシンを自動的に停止させることで、サービス拒否攻撃をマウントすることができます。注意:&quot;exitVM.*&quot; パーミッションは、アプリケーションクラスのパスからロードされたすべてのコードに自動的に付与されるため、アプリケーション自身を終了させることができます。また、&quot;exitVM &quot;パーミッションは &quot;exitVM.*&quot;と同等です。</target>
        </trans-unit>
        <trans-unit id="26b8bd3c8f3c70a93f4288696898edada575f0d3" translate="yes" xml:space="preserve">
          <source>This allows an attacker to register a malicious shutdown hook that interferes with the clean shutdown of the virtual machine.</source>
          <target state="translated">これにより、攻撃者は仮想マシンのクリーンなシャットダウンを妨害する悪意のあるシャットダウンフックを登録することができます。</target>
        </trans-unit>
        <trans-unit id="035ba076dd3c77252c39610d9f759a5d2e632455" translate="yes" xml:space="preserve">
          <source>This allows an attacker to register a malicious uncaught exception handler that could interfere with termination of a thread</source>
          <target state="translated">これにより、攻撃者はスレッドの終了を妨げる可能性のある悪意のない例外ハンドラを登録することができます。</target>
        </trans-unit>
        <trans-unit id="828216fa1ac0c86e1f04efa978214156f3ec6eff" translate="yes" xml:space="preserve">
          <source>This allows attackers to remove a certificate for an identity's public key. This is dangerous because it affects the trust relationship across the system. This public key suddenly becomes considered less trustworthy than it otherwise would be.</source>
          <target state="translated">これにより、攻撃者はアイデンティティの公開鍵の証明書を削除することができます。これは、システム全体の信頼関係に影響を与えるので危険です。この公開鍵は突然、他の方法では信頼性が低いとみなされるようになります。</target>
        </trans-unit>
        <trans-unit id="95e86b5eb05f9b417cd456bf7e00be54c6071bde" translate="yes" xml:space="preserve">
          <source>This allows attackers to set a certificate for an identity's public key. This is dangerous because it affects the trust relationship across the system. This public key suddenly becomes trusted to a wider audience than it otherwise would be.</source>
          <target state="translated">これにより、攻撃者はアイデンティティの公開鍵に証明書を設定することができます。これは、システム全体の信頼関係に影響を与えるので危険です。この公開鍵は、他の方法では信頼されていない場合よりも、突如としてより広い範囲で信頼されるようになります。</target>
        </trans-unit>
        <trans-unit id="05220737081c9aa7d095629bd62f1f3428e344b2" translate="yes" xml:space="preserve">
          <source>This allows attackers to set the general description for an identity. This may trick applications into using a different identity than intended or may prevent applications from finding a particular identity.</source>
          <target state="translated">これにより、攻撃者は ID の一般的な記述を設定することができます。これにより、アプリケーションを騙して意図したものとは異なる ID を使用させたり、アプリケーションが特定の ID を見つけられないようにしたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="bbc18153c69ee893634a4d2b84d8e76265eac6e6" translate="yes" xml:space="preserve">
          <source>This allows changing the value of the standard system streams. An attacker may change System.in to monitor and steal user input, or may set System.err to a &quot;null&quot; OutputStream, which would hide any error messages sent to System.err.</source>
          <target state="translated">これにより、標準のシステムストリームの値を変更することができます。攻撃者は System.in を変更してユーザの入力を監視したり、System.err を &quot;null&quot; OutputStream に設定したりして、System.err に送られたエラーメッセージを隠すことができます。</target>
        </trans-unit>
        <trans-unit id="baff8f2a3bff8a54097a516a8f38343fd059efb5" translate="yes" xml:space="preserve">
          <source>This allows code to obtain file system information such as disk usage or disk space available to the caller. This is potentially dangerous because it discloses information about the system hardware configuration and some information about the caller's privilege to write files.</source>
          <target state="translated">これにより、コードは、ディスク使用量や呼び出し元が利用可能なディスク容量などのファイルシステム情報を取得することができます。これは、システムのハードウェア構成に関する情報と、呼び出し元のファイル書き込み権限に関するいくつかの情報を開示するので、潜在的に危険です。</target>
        </trans-unit>
        <trans-unit id="291eb9e418733f5873f220381f195838e9a1605b" translate="yes" xml:space="preserve">
          <source>This allows code to obtain policy information for a particular code source. While obtaining policy information does not compromise the security of the system, it does give attackers additional information, such as local file names for example, to better aim an attack.</source>
          <target state="translated">これにより、コードは特定のコードソースのポリシー情報を取得することができます。ポリシー情報を取得してもシステムのセキュリティが損なわれることはありませんが、攻撃者に、例えばローカルファイル名などの追加情報を与えて、攻撃の狙いをより明確にします。</target>
        </trans-unit>
        <trans-unit id="42356fd570cef37cca56d1270fec316ba29c2374" translate="yes" xml:space="preserve">
          <source>This allows code to set the actual implementation for the socket, server socket, stream handler, or RMI socket factory. An attacker may set a faulty implementation which mangles the data stream.</source>
          <target state="translated">これにより、ソケット、サーバソケット、ストリームハンドラ、RMI ソケットファクトリの実際の実装をコードが設定できるようになります。攻撃者は、データストリームを混乱させる欠陥のある実装を設定する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f1894fdf0105d5006404e150ed427a01fc06e03a" translate="yes" xml:space="preserve">
          <source>This allows code to stop any thread in the system provided that it is already granted permission to access that thread. This poses as a threat, because that code may corrupt the system by killing existing threads.</source>
          <target state="translated">これは、すでにそのスレッドへのアクセス許可が与えられている場合に、コードがシステム内の任意のスレッドを停止することを可能にします。このコードは既存のスレッドを殺すことでシステムを破損させる可能性があるため、これは脅威となります。</target>
        </trans-unit>
        <trans-unit id="fc5495ce28f148b193f78839eeb3539a66ed4a47" translate="yes" xml:space="preserve">
          <source>This allows code to write to a particular file associated with the descriptor. This is dangerous because it may allow malicious code to plant viruses or at the very least, fill up your entire disk.</source>
          <target state="translated">これにより、記述子に関連付けられた特定のファイルへのコードの書き込みが可能になります。これは、悪意のあるコードにウイルスを仕込ませたり、少なくともディスク全体を一杯にしてしまう可能性があるため、危険です。</target>
        </trans-unit>
        <trans-unit id="31273fa567bcce8ad03110c0ebfe4cbadf40f08d" translate="yes" xml:space="preserve">
          <source>This allows malicious code to monitor runtime information and uncover vulnerabilities.</source>
          <target state="translated">これにより、悪意のあるコードがランタイム情報を監視し、脆弱性を発見することができます。</target>
        </trans-unit>
        <trans-unit id="4e7f242b0fbd58fd2048bc791aab8771f721dcad" translate="yes" xml:space="preserve">
          <source>This allows retrieval of the stack trace information of another thread. This might allow malicious code to monitor the execution of threads and discover vulnerabilities in applications.</source>
          <target state="translated">これにより、別のスレッドのスタックトレース情報の取得が可能になります。これにより、悪意のあるコードがスレッドの実行を監視し、アプリケーションの脆弱性を発見できる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9ce37454c4a1eb923451c2cb48986b69c3da820d" translate="yes" xml:space="preserve">
          <source>This allows someone to instantiate an AccessControlContext with a &lt;code&gt;DomainCombiner&lt;/code&gt;. Extreme care must be taken when granting this permission. Malicious code could create a DomainCombiner that augments the set of permissions granted to code, and even grant the code &lt;a href=&quot;allpermission&quot;&gt;&lt;code&gt;AllPermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、誰かがAccessControlContextを &lt;code&gt;DomainCombiner&lt;/code&gt; でインスタンス化できるようになります。この許可を与えるときは、細心の注意が必要です。悪意のあるコードにより、コードに付与された一連の権限を補強するDomainCombinerが作成され、コードに&lt;a href=&quot;allpermission&quot;&gt; &lt;code&gt;AllPermission&lt;/code&gt; が&lt;/a&gt;付与される可能性もあります。</target>
        </trans-unit>
        <trans-unit id="230473330163ca9ce75d0df8dd3d22c243a7bf1b" translate="yes" xml:space="preserve">
          <source>This allows someone to query the policy via the &lt;code&gt;getPermissions&lt;/code&gt; call, which discloses which permissions would be granted to a given CodeSource. While revealing the policy does not compromise the security of the system, it does provide malicious code with additional information which it may use to better aim an attack. It is wise not to divulge more information than necessary.</source>
          <target state="translated">これにより、誰かが &lt;code&gt;getPermissions&lt;/code&gt; 呼び出しを介してポリシーを照会できるようになります。これは、特定のCodeSourceに付与される権限を開示します。ポリシーを明らかにしてもシステムのセキュリティは損なわれませんが、悪意のあるコードに追加の情報が提供され、攻撃をより的確に狙うために使用される可能性があります。必要以上の情報を漏らさないのが賢明です。</target>
        </trans-unit>
        <trans-unit id="c2d1c6dd45d7f9f0a64f8e96aed1ed432ca6aa34" translate="yes" xml:space="preserve">
          <source>This allows someone to retrieve an AccessControlContext's &lt;code&gt;DomainCombiner&lt;/code&gt;. Since DomainCombiners may contain sensitive information, this could potentially lead to a privacy leak.</source>
          <target state="translated">これにより、誰かがAccessControlContextの &lt;code&gt;DomainCombiner&lt;/code&gt; を取得できるようになります。DomainCombinersには機密情報が含まれている可能性があるため、プライバシーリークが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0fc55baaf5ae8bcaed6ce4277c97a2358b139f90" translate="yes" xml:space="preserve">
          <source>This allows the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;epoch-second&lt;/code&gt;&lt;/a&gt; field to be converted to a local date-time. This is primarily intended for low-level conversions rather than general application usage.</source>
          <target state="translated">これにより、&lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;epoch-second&lt;/code&gt; &lt;/a&gt;フィールドをローカルの日時に変換できます。これは、一般的なアプリケーションの使用ではなく、主に低レベルの変換を目的としています。</target>
        </trans-unit>
        <trans-unit id="2afa8fa74586094ef2899a3f32763c6befa79c46" translate="yes" xml:space="preserve">
          <source>This allows this date-time to be converted to a value of the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;epoch-seconds&lt;/code&gt;&lt;/a&gt; field. This is primarily intended for low-level conversions rather than general application usage.</source>
          <target state="translated">これにより、この日時を&lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;epoch-seconds&lt;/code&gt; &lt;/a&gt;フィールドの値に変換できます。これは、一般的なアプリケーションの使用ではなく、主に低レベルの変換を目的としています。</target>
        </trans-unit>
        <trans-unit id="dd85c07b257361553b187272035252c2297f4bf6" translate="yes" xml:space="preserve">
          <source>This allows you to use a RuleBasedCollator to compare accented strings even when the collator is set to NO_DECOMPOSITION. There are two caveats, however. First, if the strings to be collated contain combining sequences that may not be in canonical order, you should set the collator to CANONICAL_DECOMPOSITION or FULL_DECOMPOSITION to enable sorting of combining sequences. Second, if the strings contain characters with compatibility decompositions (such as full-width and half-width forms), you must use FULL_DECOMPOSITION, since the rule tables only include canonical mappings.</source>
          <target state="translated">これにより、照合器が NO_DECOMPOSITION に設定されている場合でも、RuleBasedCollator を使用してアクセント付き文字列を比較することができます。ただし、2つの注意点があります。まず、照合対象の文字列に正規の順序ではない可能性のある結合シーケンスが含まれている場合は、結合シーケンスのソートを有効にするために、照合器を CANONICAL_DECOMPOSITION または FULL_DECOMPOSITION に設定する必要があります。第二に、文字列が互換性のある分解を持つ文字(全角や半角など)を含む場合は、FULL_DECOMPOSITIONを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b093d9555c5e0b41a82468bed3e0200f01d727a9" translate="yes" xml:space="preserve">
          <source>This allows you to write programs that can:</source>
          <target state="translated">これにより、プログラムを書くことができるようになります。</target>
        </trans-unit>
        <trans-unit id="87c38ffc1f1970683fea610833ab9fd738cacf72" translate="yes" xml:space="preserve">
          <source>This amount of memory is not guaranteed to be available for memory management if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</source>
          <target state="translated">このメモリ量がコミットされたメモリ量を超えた場合、メモリ管理に使用できることを保証するものではありません。使用メモリ量がこの最大サイズを超えていなくても、Java 仮想マシンはメモリの割り当てに失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="b5a0d10b353af8113e99e87322144b9932c085d3" translate="yes" xml:space="preserve">
          <source>This appends a localized section to the builder, suitable for outputting a date, time or date-time combination. The format of the localized section is lazily looked up based on four items:</source>
          <target state="translated">これは、ビルダーにローカライズされたセクションを追加し、日付、時刻、または日付と時刻の組み合わせを出力するのに適しています。ローカライズされたセクションのフォーマットは、4つの項目に基づいて怠惰に検索されます。</target>
        </trans-unit>
        <trans-unit id="d700fecf40f724eba44dbf4e379113997e1398d6" translate="yes" xml:space="preserve">
          <source>This appends a localized zone offset to the builder, the format of the localized offset is controlled by the specified &lt;a href=&quot;formatstyle&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; to this method:</source>
          <target state="translated">これにより、ローカライズされたゾーンオフセットがビルダーに追加されます。ローカライズされたオフセットの形式は、このメソッドに指定された&lt;a href=&quot;formatstyle&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt;によって制御されます。</target>
        </trans-unit>
        <trans-unit id="6487cb530ad122df71ffcb6338354a5ae097b70f" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the best available zone or offset ID to the builder. The zone ID is obtained in a lenient manner that first attempts to find a true zone ID, such as that on &lt;code&gt;ZonedDateTime&lt;/code&gt;, and then attempts to find an offset, such as that on &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">これにより、使用可能な最良のゾーンまたはオフセットIDをフォーマット/解析するための指示がビルダーに追加されます。ゾーンIDは、まず &lt;code&gt;ZonedDateTime&lt;/code&gt; などの真のゾーンID を見つけようとし、次にOffsetDateTimeなどのオフセットを見つけようとする寛大な方法で取得され &lt;code&gt;OffsetDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e76363dee66256a2f3c0714515c9703601b9ff27" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the chronology ID to the builder.</source>
          <target state="translated">これは、年表IDをフォーマット/パースする命令をビルダーに追加します。</target>
        </trans-unit>
        <trans-unit id="0c353c51ea950bb45e9fa1e8f8f16aec8bee4c30" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the offset ID to the builder.</source>
          <target state="translated">ビルダーにオフセットIDをフォーマット/パースする命令を追加します。</target>
        </trans-unit>
        <trans-unit id="b4e600a2f00589a49ea004161fae69d7158dc603" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the offset ID to the builder. This is equivalent to calling &lt;code&gt;appendOffset(&quot;+HH:MM:ss&quot;, &quot;Z&quot;)&lt;/code&gt;.</source>
          <target state="translated">これにより、オフセットIDをフォーマット/解析する命令がビルダーに追加されます。これは、 &lt;code&gt;appendOffset(&quot;+HH:MM:ss&quot;, &quot;Z&quot;)&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="d86f8e93f39c33affe30be38ab664d8c8b94075f" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the textual name of the zone to the builder.</source>
          <target state="translated">これは、ゾーンのテキスト名をフォーマットしたり、解析したりする指示をビルダに追加する。</target>
        </trans-unit>
        <trans-unit id="9e41e08ec1df822e63d53a305a848c2af6417734" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the zone ID to the builder only if it is a region-based ID.</source>
          <target state="translated">これは、ゾーンIDが地域ベースのIDである場合にのみ、そのゾーンIDをフォーマット/パースする命令をビルダに追加する。</target>
        </trans-unit>
        <trans-unit id="3b37b4a643f5f53713c1af8800a2f80dd2a35a58" translate="yes" xml:space="preserve">
          <source>This appends an instruction to format/parse the zone ID to the builder. The zone ID is obtained in a strict manner suitable for &lt;code&gt;ZonedDateTime&lt;/code&gt;. By contrast, &lt;code&gt;OffsetDateTime&lt;/code&gt; does not have a zone ID suitable for use with this method, see &lt;a href=&quot;datetimeformatterbuilder#appendZoneOrOffsetId--&quot;&gt;&lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、ゾーンIDをフォーマット/解析する指示がビルダーに追加されます。ゾーンIDは、 &lt;code&gt;ZonedDateTime&lt;/code&gt; に適した厳密な方法で取得されます。対照的に、 &lt;code&gt;OffsetDateTime&lt;/code&gt; には、このメソッドでの使用に適したゾーンIDがありません&lt;a href=&quot;datetimeformatterbuilder#appendZoneOrOffsetId--&quot;&gt; &lt;code&gt;appendZoneOrOffsetId()&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="116c49b6626c7acf49bd437a0b56faa051168c80" translate="yes" xml:space="preserve">
          <source>This appends an instruction to the builder to inject a default value into the parsed result. This is especially useful in conjunction with optional parts of the formatter.</source>
          <target state="translated">これは、デフォルト値を解析結果に挿入する命令をビルダに追加します。これは、フォーマッタのオプション部分と組み合わせて使用すると特に便利です。</target>
        </trans-unit>
        <trans-unit id="9be0c13550155e8e59a2fd2d102063b4601f14ed" translate="yes" xml:space="preserve">
          <source>This applies the conversions listed in &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; when constructing a Locale. (Grandfathered tags are handled in &lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">これは、ロケールの構築時に&lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;にリストされている変換を適用します。（祖父のタグは&lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;setLanguageTag(java.lang.String)&lt;/code&gt; で&lt;/a&gt;処理されます。）</target>
        </trans-unit>
        <trans-unit id="a9d14656058135f7b74fa6f19ce86566b836ae09" translate="yes" xml:space="preserve">
          <source>This approach allows an alternate clock, such as &lt;a href=&quot;clock#fixed-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;fixed&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;clock#offset-java.time.Clock-java.time.Duration-&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; to be used during testing.</source>
          <target state="translated">このアプローチにより、&lt;a href=&quot;clock#fixed-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;clock#offset-java.time.Clock-java.time.Duration-&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt;などの代替クロックをテスト中に使用できます。</target>
        </trans-unit>
        <trans-unit id="a45c8c988a424a289fab84dd5545b7a69d4eea5d" translate="yes" xml:space="preserve">
          <source>This approach ensures that a partial period can be added to a partial date. For example, a period of years and/or months can be added to a &lt;code&gt;YearMonth&lt;/code&gt;, but a period including days cannot. The approach also adds years and months together when necessary, which ensures correct behaviour at the end of the month.</source>
          <target state="translated">このアプローチにより、期間の一部を日付の一部に追加できるようになります。たとえば、年や月の期間を &lt;code&gt;YearMonth&lt;/code&gt; に追加できますが、日を含む期間は追加できません。このアプローチでは、必要に応じて年と月も一緒に追加されるため、月末に正しい動作が保証されます。</target>
        </trans-unit>
        <trans-unit id="90ee599e8b118f32de5c4e9cd0140e9dbc90fd8a" translate="yes" xml:space="preserve">
          <source>This approach ensures that a partial period can be subtracted from a partial date. For example, a period of years and/or months can be subtracted from a &lt;code&gt;YearMonth&lt;/code&gt;, but a period including days cannot. The approach also subtracts years and months together when necessary, which ensures correct behaviour at the end of the month.</source>
          <target state="translated">このアプローチにより、部分的な日付から部分的な期間を差し引くことができます。たとえば、年や月の期間は &lt;code&gt;YearMonth&lt;/code&gt; から減算できますが、日を含む期間は減算できません。このアプローチでは、必要に応じて年と月も一緒に差し引かれ、月末に正しい動作が保証されます。</target>
        </trans-unit>
        <trans-unit id="9a34f705974537252f812b090b7633f5333d4528" translate="yes" xml:space="preserve">
          <source>This approach has the advantage that the party who unseals the object does not need to keep track of the parameters (e.g., an IV) that were used to seal the object.</source>
          <target state="translated">このアプローチは、オブジェクトの封印を解除する側が、オブジェクトを封印するために使用されたパラメータ(例えば、IV)を追跡する必要がないという利点があります。</target>
        </trans-unit>
        <trans-unit id="6b27b76b29cfa32a58ebb4f790b16569099bdf3f" translate="yes" xml:space="preserve">
          <source>This approach has the advantage that the party who unseals the sealed object does not require knowledge of the decryption key. For example, after one party has initialized the cipher object with the required decryption key, it could hand over the cipher object to another party who then unseals the sealed object.</source>
          <target state="translated">このアプローチには、封印されたオブジェクトの封印を解く当事者が復号鍵の知識を必要としないという利点がある。例えば、あるパーティが必要な復号鍵で暗号オブジェクトを初期化した後、そのパーティは暗号オブジェクトを別のパーティに引き渡すことができ、そのパーティは封印されたオブジェクトの封印を解除します。</target>
        </trans-unit>
        <trans-unit id="63c09dec8a7d446df4a7af11bf80860cea142ccd" translate="yes" xml:space="preserve">
          <source>This approach treats the problem of globalized calendar systems as a localization issue and confines it to the UI layer. This approach is in keeping with other localization issues in the java platform.</source>
          <target state="translated">このアプローチでは、グローバル化されたカレンダーシステムの問題をローカライゼーションの問題として扱い、UI層に限定しています。このアプローチは、javaプラットフォームにおける他のローカライゼーションの問題と一致しています。</target>
        </trans-unit>
        <trans-unit id="2e4acb3eebe760200b57ee09d39e8e33a473219a" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying MediaName or MediaTray.</source>
          <target state="translated">この属性は、MediaNameやMediaTrayを指定する代わりに使用することができます。</target>
        </trans-unit>
        <trans-unit id="04ce450d52d4aa8c1c76637f12936f4c702a2de7" translate="yes" xml:space="preserve">
          <source>This attribute can be used instead of specifying MediaSize or MediaTray.</source>
          <target state="translated">この属性は、MediaSizeやMediaTrayを指定する代わりに使用することができます。</target>
        </trans-unit>
        <trans-unit id="a58c03b8321b50d6ffb90742e0fdffcc3b889085" translate="yes" xml:space="preserve">
          <source>This attribute is often used as a simple access control mechanism to prevent files from being deleted or updated. Whether the file system or platform does any enforcement to prevent &lt;em&gt;read-only&lt;/em&gt; files from being updated is implementation specific.</source>
          <target state="translated">この属性は、ファイルが削除または更新されないようにするための単純なアクセス制御メカニズムとしてよく使用されます。ファイルシステムまたはプラットフォームが、&lt;em&gt;読み取り専用&lt;/em&gt;ファイルが更新され&lt;em&gt;ない&lt;/em&gt;ようにするための強制を行うかどうかは、実装によって異なります。</target>
        </trans-unit>
        <trans-unit id="3eeb1d55245778cba97de33ea39c544ab59df5c7" translate="yes" xml:space="preserve">
          <source>This attribute is often used to indicate if the file is visible to users.</source>
          <target state="translated">この属性は、ファイルがユーザに見えるかどうかを示すためによく使われます。</target>
        </trans-unit>
        <trans-unit id="0596a0228dd81612a4d3fd62530c3e80647f1746" translate="yes" xml:space="preserve">
          <source>This attribute is often used to indicate that the file is a component of the operating system.</source>
          <target state="translated">この属性は、ファイルがオペレーティングシステムのコンポーネントであることを示すためによく使われます。</target>
        </trans-unit>
        <trans-unit id="0b6b3d268faabc1bc1a3c7d7722914a4fe8827d8" translate="yes" xml:space="preserve">
          <source>This attribute is typically used by backup programs.</source>
          <target state="translated">この属性は通常、バックアッププログラムによって使用されます。</target>
        </trans-unit>
        <trans-unit id="0af09403714e88dfda7b330926ca836af61e562f" translate="yes" xml:space="preserve">
          <source>This attribute specifies the &lt;code&gt;.ser&lt;/code&gt; file that contains a serialized representation of the MBean to be obtained. This file must be contained in one of the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. If the &lt;code&gt;.jar&lt;/code&gt; file contains a directory hierarchy, specify the path of the file within this hierarchy. Otherwise a match will not be found. Either &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; must be present.</source>
          <target state="translated">この属性は、取得するMBeanのシリアル化された表現を含む &lt;code&gt;.ser&lt;/code&gt; ファイルを指定します。このファイルは、 &lt;code&gt;ARCHIVE&lt;/code&gt; 属性で指定された &lt;code&gt;.jar&lt;/code&gt; ファイルのいずれかに含まれている必要があります。 &lt;code&gt;.jar&lt;/code&gt; ファイルにディレクトリ階層が含まれている場合は、この階層内のファイルのパスを指定します。そうでない場合、一致は見つかりません。 &lt;code&gt;CODE&lt;/code&gt; または &lt;code&gt;OBJECT&lt;/code&gt; のいずれかが存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="d147fedbae7325c324e7d77fc07d77deceb84bb9" translate="yes" xml:space="preserve">
          <source>This attribute specifies the full Java class name, including package name, of the MBean to be obtained. The compiled &lt;code&gt;.class&lt;/code&gt; file of the MBean must be contained in one of the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. Either &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; must be present.</source>
          <target state="translated">この属性は、取得するMBeanの完全なJavaクラス名（パッケージ名を含む）を指定します。MBean のコンパイル済み &lt;code&gt;.class&lt;/code&gt; ファイルは、 &lt;code&gt;ARCHIVE&lt;/code&gt; 属性で指定された &lt;code&gt;.jar&lt;/code&gt; ファイルのいずれかに含まれている必要があります。 &lt;code&gt;CODE&lt;/code&gt; または &lt;code&gt;OBJECT&lt;/code&gt; のいずれかが存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0c53530aad014804af0b4de10d041606ae7c636" translate="yes" xml:space="preserve">
          <source>This attribute's X dimension is equal to &lt;code&gt;object&lt;/code&gt;'s X dimension.</source>
          <target state="translated">この属性のX次元は、 &lt;code&gt;object&lt;/code&gt; のX次元と同じです。</target>
        </trans-unit>
        <trans-unit id="86198e24becbec5b86fec6178a8c1283a8fc118b" translate="yes" xml:space="preserve">
          <source>This attribute's Y dimension is equal to &lt;code&gt;object&lt;/code&gt;'s Y dimension.</source>
          <target state="translated">この属性のY次元は、 &lt;code&gt;object&lt;/code&gt; のY次元​​と同じです。</target>
        </trans-unit>
        <trans-unit id="fdc945bfb1edc9c7533be74c4de3229628d02df5" translate="yes" xml:space="preserve">
          <source>This attribute's cross feed direction resolution is equal to &lt;code&gt;object&lt;/code&gt;'s cross feed direction resolution.</source>
          <target state="translated">この属性の横送り方向の解像度は、 &lt;code&gt;object&lt;/code&gt; の横送り方向の解像度と同じです。</target>
        </trans-unit>
        <trans-unit id="42a722408b194823e78df986d87812f231231ff3" translate="yes" xml:space="preserve">
          <source>This attribute's cross feed direction resolution is less than or equal to the &lt;code&gt;other&lt;/code&gt; attribute's cross feed direction resolution.</source>
          <target state="translated">この属性の横送り方向の解像度は、 &lt;code&gt;other&lt;/code&gt; 属性の横送り方向の解像度以下です。</target>
        </trans-unit>
        <trans-unit id="bf49e9bd87ea63e550f5aa731a9e96e45c21ebf8" translate="yes" xml:space="preserve">
          <source>This attribute's feed direction resolution is equal to &lt;code&gt;object&lt;/code&gt;'s feed direction resolution.</source>
          <target state="translated">この属性の送り方向の解像度は、 &lt;code&gt;object&lt;/code&gt; の送り方向の解像度と同じです。</target>
        </trans-unit>
        <trans-unit id="136df71936942acc7cc0e61189291431a74f5eaf" translate="yes" xml:space="preserve">
          <source>This attribute's feed direction resolution is less than or equal to the &lt;code&gt;other&lt;/code&gt; attribute's feed direction resolution.</source>
          <target state="translated">この属性の送り方向の解像度は、 &lt;code&gt;other&lt;/code&gt; 属性の送り方向の解像度以下です。</target>
        </trans-unit>
        <trans-unit id="4880d6984e9ccd72b50c0ebb6ac9d4f39f2e1283" translate="yes" xml:space="preserve">
          <source>This attribute's schema definition. Null if the implementation supports schemas but this particular attribute does not have any schema information.</source>
          <target state="translated">この属性のスキーマ定義。実装がスキーマをサポートしているが、この特定の属性がスキーマ情報を持っていない場合はNull。</target>
        </trans-unit>
        <trans-unit id="95ec5f83f16371801ae3b13ea00e9349940346a1" translate="yes" xml:space="preserve">
          <source>This base class returns an empty string, but this may be overridden by subclasses.</source>
          <target state="translated">この基底クラスは空の文字列を返しますが、サブクラスによってオーバーライドされる場合があります。</target>
        </trans-unit>
        <trans-unit id="00d38d0ba474eda1b8a360fd28b3e5ea975b2310" translate="yes" xml:space="preserve">
          <source>This becomes clearer if we compare what the clients of the two models might look like:</source>
          <target state="translated">これは、2つのモデルのクライアントがどのようなものであるかを比較してみると、より明確になります。</target>
        </trans-unit>
        <trans-unit id="b8112861628bf3cb4cdbc975fb94a82903ce6439" translate="yes" xml:space="preserve">
          <source>This behavior is designed to support debugging and to be compatible with previous uses of &lt;code&gt;toString&lt;/code&gt; that expected language, country, and variant fields only. To represent a Locale as a String for interchange purposes, use &lt;a href=&quot;locale#toLanguageTag--&quot;&gt;&lt;code&gt;toLanguageTag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この動作は、デバッグをサポートし、言語、国、およびバリアントフィールドのみを予期していた &lt;code&gt;toString&lt;/code&gt; の以前の使用と互換性があるように設計されています。交換のためにロケールを文字列として表すには、&lt;a href=&quot;locale#toLanguageTag--&quot;&gt; &lt;code&gt;toLanguageTag()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="0c2d139f6620ff45c0de7612b11482344771e9ab" translate="yes" xml:space="preserve">
          <source>This block was previously known as &quot;Combining Marks for Symbols&quot;.</source>
          <target state="translated">このブロックは、以前は「記号のためのマークの組み合わせ」として知られていました。</target>
        </trans-unit>
        <trans-unit id="14876ac73afcb34469404e2320461183f7735ef5" translate="yes" xml:space="preserve">
          <source>This block was previously known as the &quot;Greek&quot; block.</source>
          <target state="translated">このブロックは以前は「ギリシャ」ブロックとして知られていました。</target>
        </trans-unit>
        <trans-unit id="f3f5626990b494e388e57ff761627940cac15cd5" translate="yes" xml:space="preserve">
          <source>This buffer</source>
          <target state="translated">このバッファ</target>
        </trans-unit>
        <trans-unit id="c27e5c7676de43b1074567048424ea5097800b42" translate="yes" xml:space="preserve">
          <source>This buffer's byte order</source>
          <target state="translated">このバッファのバイトオーダー</target>
        </trans-unit>
        <trans-unit id="d084b06bb48e26d99a49679f9badb91b0961f1a1" translate="yes" xml:space="preserve">
          <source>This builder can still be used after creating the formatter if desired, although the state may have been changed by calls to &lt;code&gt;optionalEnd&lt;/code&gt;.</source>
          <target state="translated">このビルダーは、必要に応じてフォーマッターを作成した後でも使用できますが、 &lt;code&gt;optionalEnd&lt;/code&gt; の呼び出しによって状態が変更された可能性があります。</target>
        </trans-unit>
        <trans-unit id="c0a367dcd24e85f4849a51096bb8414304e05ebd" translate="yes" xml:space="preserve">
          <source>This builder.</source>
          <target state="translated">このビルダー。</target>
        </trans-unit>
        <trans-unit id="fcc1a0e36b13027b1cd2e8e182a87b2a50741a65" translate="yes" xml:space="preserve">
          <source>This calculates the amount in terms of this unit. The start and end points are supplied as temporal objects and must be of compatible types. The implementation will convert the second type to be an instance of the first type before the calculating the amount. The result will be negative if the end is before the start. For example, the amount in hours between two temporal objects can be calculated using &lt;code&gt;HOURS.between(startTime, endTime)&lt;/code&gt;.</source>
          <target state="translated">これにより、この単位で金額が計算されます。開始点と終了点は一時オブジェクトとして提供され、互換性のあるタイプでなければなりません。実装は、金額を計算する前に、2番目のタイプを最初のタイプのインスタンスに変換します。終了が開始の前にある場合、結果は負になります。例えば、二つの時間のオブジェクト間の時間における量を用いて算出することができる &lt;code&gt;HOURS.between(startTime, endTime)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f28ba1aed263ee4a7a43885af68db05c8ba2820a" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;ChronoLocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ChronoLocalDate&lt;/code&gt; using &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して、2つの &lt;code&gt;ChronoLocalDate&lt;/code&gt; オブジェクト間の時間を計算します。開始点と終了点は &lt;code&gt;this&lt;/code&gt; と指定された日付です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;ChronoLocalDate&lt;/code&gt; 使用&lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。この計算では、2つの日付の間の完全な単位数を表す整数が返されます。たとえば、2つの日付間の日数は &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="042600c3bd3d8fa895b02a793742724c69aa74b1" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Instant&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified instant. The result will be negative if the end is before the start. The calculation returns a whole number, representing the number of complete units between the two instants. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Instant&lt;/code&gt; using &lt;a href=&quot;instant#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two dates can be calculated using &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して2つの &lt;code&gt;Instant&lt;/code&gt; オブジェクト間の時間を計算します。始点と終点は &lt;code&gt;this&lt;/code&gt; と指定された瞬間です。終了が開始の前にある場合、結果は負になります。計算は、2つの瞬間の間の完全な単位の数を表す整数を返します。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡された &lt;code&gt;Instant&lt;/code&gt; 使用&lt;a href=&quot;instant#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2つの日付間の日数は &lt;code&gt;startInstant.until(endInstant, SECONDS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="09fb64acead91b0835e975fd6d1baf20e5fb366a" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDate&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDate&lt;/code&gt; using &lt;a href=&quot;localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two dates can be calculated using &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt;.</source>
          <target state="translated">これは、2つの &lt;code&gt;LocalDate&lt;/code&gt; オブジェクト間の時間を単一の &lt;code&gt;TemporalUnit&lt;/code&gt; で計算します。開始点と終了点は &lt;code&gt;this&lt;/code&gt; と指定された日付です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;LocalDate&lt;/code&gt; 使用&lt;a href=&quot;localdate#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2つの日付間の日数は &lt;code&gt;startDate.until(endDate, DAYS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="1adb51a4aa4348285f06861583659a5dfc5d8fac" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalDateTime&lt;/code&gt; using &lt;a href=&quot;localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">これは、2つの &lt;code&gt;LocalDateTime&lt;/code&gt; オブジェクト間の時間を単一の &lt;code&gt;TemporalUnit&lt;/code&gt; で計算します。開始点と終了点は、 &lt;code&gt;this&lt;/code&gt; と指定された日時です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;LocalDateTime&lt;/code&gt; を用いて&lt;a href=&quot;localdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2つの日時間の日数は &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="4dd9d251ec489c054692d2712ae14ef0e0b3cac4" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;LocalTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified time. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;LocalTime&lt;/code&gt; using &lt;a href=&quot;localtime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in hours between two times can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して2つの &lt;code&gt;LocalTime&lt;/code&gt; オブジェクト間の時間を計算します。始点と終点は &lt;code&gt;this&lt;/code&gt; と指定された時間です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;LocalTime&lt;/code&gt; 使用&lt;a href=&quot;localtime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2つの時間の間の時間数は &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="bb0f2b197558a031fa50848ba7feca7bd7dc0ed1" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;OffsetDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して、2つの &lt;code&gt;OffsetDateTime&lt;/code&gt; オブジェクト間の時間を計算します。開始点と終了点は、 &lt;code&gt;this&lt;/code&gt; と指定された日時です。終了が開始の前にある場合、結果は負になります。たとえば、2つの日時間の日数は &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="0c17761fd36cd4af0600aca6b972c1d14d1b7c96" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;OffsetTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified time. The result will be negative if the end is before the start. For example, the amount in hours between two times can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して2つの &lt;code&gt;OffsetTime&lt;/code&gt; オブジェクト間の時間を計算します。始点と終点は &lt;code&gt;this&lt;/code&gt; と指定された時間です。終了が開始の前にある場合、結果は負になります。たとえば、2つの時間の間の時間数は &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="c90681be0c15bfab4f976bf42b28fe16d0484839" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;Year&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;Year&lt;/code&gt; using &lt;a href=&quot;year#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in decades between two year can be calculated using &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt;.</source>
          <target state="translated">これは、2つの &lt;code&gt;Year&lt;/code&gt; オブジェクト間の時間を単一の &lt;code&gt;TemporalUnit&lt;/code&gt; で計算します。開始点と終了点は、 &lt;code&gt;this&lt;/code&gt; 年と指定された年です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;Year&lt;/code&gt; 使用&lt;a href=&quot;year#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2年間の数十年の金額は、 &lt;code&gt;startYear.until(endYear, DECADES)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="05ab7db1f28ab1369011ae6c8419666f5da8a465" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;YearMonth&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified year-month. The result will be negative if the end is before the start. The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;YearMonth&lt;/code&gt; using &lt;a href=&quot;yearmonth#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. For example, the amount in years between two year-months can be calculated using &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt;.</source>
          <target state="translated">これは、2つの &lt;code&gt;YearMonth&lt;/code&gt; オブジェクト間の時間を単一の &lt;code&gt;TemporalUnit&lt;/code&gt; で計算します。始点と終点は &lt;code&gt;this&lt;/code&gt; と指定された年月です。終了が開始の前にある場合、結果は負になります。 &lt;code&gt;Temporal&lt;/code&gt; に変換され、このメソッドに渡さ &lt;code&gt;YearMonth&lt;/code&gt; 使用&lt;a href=&quot;yearmonth#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。たとえば、2つの年月の間の &lt;code&gt;startYearMonth.until(endYearMonth, YEARS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="83debf9fbfd6d180e052b061238b01be11cefc24" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two &lt;code&gt;ZonedDateTime&lt;/code&gt; objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date-time. The result will be negative if the end is before the start. For example, the amount in days between two date-times can be calculated using &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt;.</source>
          <target state="translated">これは、1つの &lt;code&gt;TemporalUnit&lt;/code&gt; に関して、2つの &lt;code&gt;ZonedDateTime&lt;/code&gt; オブジェクト間の時間を計算します。開始点と終了点は、 &lt;code&gt;this&lt;/code&gt; と指定された日時です。終了が開始の前にある場合、結果は負になります。たとえば、2つの日時間の日数は &lt;code&gt;startDateTime.until(endDateTime, DAYS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="9d3524284225e48615609b767b2885c90cbc4075" translate="yes" xml:space="preserve">
          <source>This calculates the amount of time between two temporal objects in terms of a single &lt;code&gt;TemporalUnit&lt;/code&gt;. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified temporal. The end point is converted to be of the same type as the start point if different. The result will be negative if the end is before the start. For example, the amount in hours between two temporal objects can be calculated using &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt;.</source>
          <target state="translated">これは、単一の &lt;code&gt;TemporalUnit&lt;/code&gt; に関して、2つの時間オブジェクト間の時間を計算します。始点と終点は &lt;code&gt;this&lt;/code&gt; と指定された時間です。終点が異なる場合、終点は始点と同じタイプに変換されます。終了が開始の前にある場合、結果は負になります。たとえば、2つの時間オブジェクト間の時間数は &lt;code&gt;startTime.until(endTime, HOURS)&lt;/code&gt; を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="2cc33fec53173d135a50ffbf92ecd960b4b26e20" translate="yes" xml:space="preserve">
          <source>This calculates the duration between two temporal objects. If the objects are of different types, then the duration is calculated based on the type of the first object. For example, if the first argument is a &lt;code&gt;LocalTime&lt;/code&gt; then the second argument is converted to a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">これは、2つの一時オブジェクト間の期間を計算します。オブジェクトのタイプが異なる場合、期間は最初のオブジェクトのタイプに基づいて計算されます。たとえば、最初の引数が &lt;code&gt;LocalTime&lt;/code&gt; の場合、2番目の引数は &lt;code&gt;LocalTime&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="594e2f6af833c2542f6f050bdfea8088a78206f2" translate="yes" xml:space="preserve">
          <source>This calculates the period between two dates in terms of years, months and days. The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">これは、2つの日付の間の期間を年、月、日で計算します。開始点と終了点は &lt;code&gt;this&lt;/code&gt; と指定された日付です。終了が開始の前にある場合、結果は負になります。負の符号は、年、月、日で同じになります。</target>
        </trans-unit>
        <trans-unit id="c0d5ebde5fbaa16b5f0a5ab228ff4a362b44867a" translate="yes" xml:space="preserve">
          <source>This calculates the period between two dates. All supplied chronologies calculate the period using years, months and days, however the &lt;code&gt;ChronoPeriod&lt;/code&gt; API allows the period to be represented using other units.</source>
          <target state="translated">2つの日付の間の期間を計算します。提供されているすべての年代順は、年、月、日を使用して期間を計算しますが、 &lt;code&gt;ChronoPeriod&lt;/code&gt; APIでは、期間を他の単位を使用して表すことができます。</target>
        </trans-unit>
        <trans-unit id="f3eb34b880dc06e18251e836328c9cf95247a612" translate="yes" xml:space="preserve">
          <source>This call is equivalent to the following code:</source>
          <target state="translated">この呼び出しは、以下のコードと同等です。</target>
        </trans-unit>
        <trans-unit id="e0eda11cca3152f1293f0403ac2586884749c10f" translate="yes" xml:space="preserve">
          <source>This call is typically used to increase the scale, in which case it is guaranteed that there exists a &lt;code&gt;BigDecimal&lt;/code&gt; of the specified scale and the correct value. The call can also be used to reduce the scale if the caller knows that the &lt;code&gt;BigDecimal&lt;/code&gt; has sufficiently many zeros at the end of its fractional part (i.e., factors of ten in its integer value) to allow for the rescaling without changing its value.</source>
          <target state="translated">この呼び出しは、通常、スケールを増やすために使用されます。その場合、指定されたスケールと正しい値の &lt;code&gt;BigDecimal&lt;/code&gt; が存在することが保証されます。 &lt;code&gt;BigDecimal&lt;/code&gt; の小数部の終わりにゼロが十分に多い（つまり、整数値で10の因数）ことを呼び出し側が知っている場合、呼び出しを使用してスケールを縮小し、値を変更せずに再スケーリングできるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="f9f47905a3cc645defe6a8d0f839946fd13048c6" translate="yes" xml:space="preserve">
          <source>This call takes into account any unprocessed (buffered) data from a previous &lt;code&gt;update&lt;/code&gt; call, padding, and AEAD tagging.</source>
          <target state="translated">この呼び出しでは、前の &lt;code&gt;update&lt;/code&gt; 呼び出し、パディング、およびAEADタグ付けからの未処理（バッファリング）データが考慮されます。</target>
        </trans-unit>
        <trans-unit id="296aa42b38e903ff1e454a8bcb6b056684be96f5" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslServer&lt;/code&gt; to obtain a realm given a list of realm choices.</source>
          <target state="translated">このコールバックは、 &lt;code&gt;SaslClient&lt;/code&gt; および &lt;code&gt;SaslServer&lt;/code&gt; によって使用され、レルム選択のリストを指定してレルムを取得します。</target>
        </trans-unit>
        <trans-unit id="c4649c6d05711daba7a8c470abe7c83a7037dc5d" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslServer&lt;/code&gt; to retrieve realm information.</source>
          <target state="translated">このコールバックは、領域情報を取得するために &lt;code&gt;SaslClient&lt;/code&gt; および &lt;code&gt;SaslServer&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="da001e5eb0147319eb39f5e82d0f0125f6be1350" translate="yes" xml:space="preserve">
          <source>This callback is used by &lt;code&gt;SaslServer&lt;/code&gt; to determine whether one entity (identified by an authenticated authentication id) can act on behalf of another entity (identified by an authorization id).</source>
          <target state="translated">このコールバックは、 &lt;code&gt;SaslServer&lt;/code&gt; によって使用され、1つのエンティティ（認証済みの認証IDで識別される）が別のエンティティ（許可IDで識別される）に代わって動作できるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="d9d531ae8fc123db629f09c058badc6dec936eab" translate="yes" xml:space="preserve">
          <source>This can be used to select between two or more ways that a date or time might be resolved. For example, if the formatter consists of year, month, day-of-month and day-of-year, then there are two ways to resolve a date. Calling this method with the arguments &lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt;&lt;code&gt;DAY_OF_YEAR&lt;/code&gt;&lt;/a&gt; will ensure that the date is resolved using the year and day-of-year, effectively meaning that the month and day-of-month are ignored during the resolving phase.</source>
          <target state="translated">これを使用して、日付または時刻を解決する方法を2つ以上選択できます。たとえば、フォーマッタが年、月、日、年で構成されている場合、日付を解決するには2つの方法があります。引数&lt;a href=&quot;../temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt; &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; &lt;/a&gt;を指定してこのメ​​ソッドを呼び出すと、年と日を使用して日付が解決されます。つまり、解決フェーズでは月と日が無視されます。</target>
        </trans-unit>
        <trans-unit id="2e45280dbd70395d086faced1f60d08bd155ffe5" translate="yes" xml:space="preserve">
          <source>This can marginally decrease the transmitted size of the archive, at the expense of setting all installed files to a single date.</source>
          <target state="translated">これは、インストールされているすべてのファイルを単一の日付に設定することを犠牲にして、アーカイブの送信サイズをわずかに減少させることができます。</target>
        </trans-unit>
        <trans-unit id="578c6ceb1b651448d4047469d59db99838e5d5c3" translate="yes" xml:space="preserve">
          <source>This channel</source>
          <target state="translated">このチャンネル</target>
        </trans-unit>
        <trans-unit id="e9c69663f21441297e1f18b7c46f7d691e4a6034" translate="yes" xml:space="preserve">
          <source>This channel's file position, a non-negative integer counting the number of bytes from the beginning of the file to the current position</source>
          <target state="translated">このチャンネルのファイル位置。ファイルの先頭から現在の位置までのバイト数をカウントする非負の整数。</target>
        </trans-unit>
        <trans-unit id="affd2ee65dd82094eda8c4a2466f8bbdce3a032e" translate="yes" xml:space="preserve">
          <source>This channel's position, a non-negative integer counting the number of bytes from the beginning of the entity to the current position</source>
          <target state="translated">このチャンネルの位置。エンティティの先頭から現在の位置までのバイト数をカウントする非負の整数。</target>
        </trans-unit>
        <trans-unit id="062195b3fb91dca89b184564527c313265b74955" translate="yes" xml:space="preserve">
          <source>This character will be output during a format.</source>
          <target state="translated">この文字は、フォーマット中に出力されます。</target>
        </trans-unit>
        <trans-unit id="790384daa2c909e9dfeb5c3379af61db3570fae2" translate="yes" xml:space="preserve">
          <source>This check is made on a per lookup service basis to allow flexibility in the policy to reflect the needs of different lookup services.</source>
          <target state="translated">このチェックは、検索サービスごとに行われ、異なる検索サービスのニーズを反映したポリシーの柔軟性を可能にしています。</target>
        </trans-unit>
        <trans-unit id="a1caed47b8f1a4432c44cad1bdfdde7f88509c85" translate="yes" xml:space="preserve">
          <source>This checked exception is thrown when an</source>
          <target state="translated">このチェック付き例外は</target>
        </trans-unit>
        <trans-unit id="28b63a9fef5f48dbf7c3a988ace8631c1510865f" translate="yes" xml:space="preserve">
          <source>This checks if the date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対して日時を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="6e001386cca850781e9f7d8273bb9e3ed645a810" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date-time. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドがこの日時に照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronolocaldatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="89949121330bc9ba6aed0e0bee18cb7f1eedc979" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date-time. If false, then calling the &lt;a href=&quot;chronozoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chronozoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドがこの日時に照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;chronozoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;chronozoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronozoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="bcbe7f34c857fcd2794bedd1a0b3d3849d857d1f" translate="yes" xml:space="preserve">
          <source>This checks if the specified field can be queried on this date. If false, then calling the &lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldate#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドがこの日にクエリできるかどうかをチェックします。falseの場合、&lt;a href=&quot;../temporal/temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronolocaldate#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="896450607daf28966676b17d89f57052b7a7a187" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date-time. If false, then calling the &lt;a href=&quot;chronolocaldatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定した単位をこの日時に追加または削除できるかどうかが確認されます。falseの場合、&lt;a href=&quot;chronolocaldatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronolocaldatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="a16cdf6906b47ed394148421fdc66adcd20b8932" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date-time. If false, then calling the &lt;a href=&quot;chronozoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定した単位をこの日時に追加または削除できるかどうかが確認されます。falseの場合、&lt;a href=&quot;chronozoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronozoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="499323b815ed97dfcc3d04aa828dc07969af7aa0" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to or subtracted from this date. If false, then calling the &lt;a href=&quot;chronolocaldate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronolocaldate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定された単位をこの日付に追加または削除できるかどうかが確認されます。falseの場合、&lt;a href=&quot;chronolocaldate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronolocaldate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="fbb4b9f8b1fb858c6ffabe9a99939c0deefd54d8" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位がこの日時に加算または減算できるかどうかを確認します。falseの場合、&lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="8991a388ed5d1b8af35dc89e0fd0cd7d0cd2ec71" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位がこの日時に加算または減算できるかどうかを確認します。falseの場合、&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5abaaac74440a4a0e20222e221c0976ae3d40277" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位がこの日時に加算または減算できるかどうかを確認します。falseの場合、&lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5a32d76a7b3acabd4c5d884835fd8954deaee4df" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位がこの日時に加算または減算できるかどうかを確認します。falseの場合、&lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="14e1fc6d16337742ca01416ba749c0d479def26f" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位がこの日時に加算または減算できるかどうかを確認します。falseの場合、&lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="a099085caa8337ae69ad5caf4c81c4a272c67340" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this date. If false, then calling the &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定された単位をこの日付に追加または減算できるかどうかが確認されます。falseの場合、&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="97524706a5e63c0e08b5f70958d56e0a4ec0818d" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this offset-time. If false, then calling the &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定された単位をこのオフセット時間に加算または減算できるかどうかをチェックします。falseの場合、&lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="16986bde30ad8869a0ca62f1baa929296eef15df" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this time. If false, then calling the &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定した単位を今回追加または減算できるかどうかが確認されます。falseの場合、&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b914ff1dc9985d7b396c05aa7450315a0c951e27" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year-month. If false, then calling the &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定された単位を今年の月に加算または減算できるかどうかが確認されます。falseの場合、&lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="cf401dd8c41a53574fb734555172bd339bb8f26e" translate="yes" xml:space="preserve">
          <source>This checks if the specified unit can be added to, or subtracted from, this year. If false, then calling the &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定した単位を今年に追加または今年から差し引くことができるかどうかが確認されます。falseの場合、&lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="af21ec1477506ba05c4f5e6ba0156e95cf2f26ab" translate="yes" xml:space="preserve">
          <source>This checks if the standard offset and the actual offset are the same for the specified instant. If they are not, it is assumed that daylight savings is in operation.</source>
          <target state="translated">指定された瞬間の標準オフセットと実際のオフセットが同じかどうかをチェックします。同じでない場合は、サマータイムが作動していると見なされます。</target>
        </trans-unit>
        <trans-unit id="98ef38b56e840ab25453127b66d71cc1f136fdfc" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;japanesedate#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定したフィールドでこの日付を照会できるかどうかが確認されます。falseの場合、&lt;a href=&quot;japanesedate#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="f9f1fc2b03dc91e397685c4017488e4266f24b7f" translate="yes" xml:space="preserve">
          <source>This checks if this date can be queried for the specified field. If false, then calling the &lt;a href=&quot;localdate#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localdate#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定したフィールドでこの日付を照会できるかどうかが確認されます。falseの場合、&lt;a href=&quot;localdate#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;localdate#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="39aa64124947cbb9407c2c86c4c30de5974fe7b8" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;localdatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localdatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの日時を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;localdatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;localdatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="92920f3938ea8cbefe111f0da77e8729f0620df8" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;offsetdatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;offsetdatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの日時を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;offsetdatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;offsetdatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsetdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b25971e07fe6643a5f6f05396b4f92b6e0af2e96" translate="yes" xml:space="preserve">
          <source>This checks if this date-time can be queried for the specified field. If false, then calling the &lt;a href=&quot;zoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;zoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの日時を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;zoneddatetime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;zoneddatetime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zoneddatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5e75f4b593a135657699b83696af0b83841468f2" translate="yes" xml:space="preserve">
          <source>This checks if this day-of-week can be queried for the specified field. If false, then calling the &lt;a href=&quot;dayofweek#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dayofweek#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定されたフィールドでこの曜日を照会できるかどうかが確認されます。falseの場合、&lt;a href=&quot;dayofweek#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;dayofweek#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="cf2af797d86f942cd2da9033ca56360472670c45" translate="yes" xml:space="preserve">
          <source>This checks if this era can be queried for the specified field. If false, then calling the &lt;a href=&quot;era#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;era#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドについて、この元号を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;era#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;era#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="245129fc70a5436326dda9f234b222d0a93044ed" translate="yes" xml:space="preserve">
          <source>This checks if this instant can be queried for the specified field. If false, then calling the &lt;a href=&quot;instant#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;instant#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこのインスタントをクエリできるかどうかを確認します。falseの場合、&lt;a href=&quot;instant#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;instant#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;instant#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b211971db1795bc5585acaa903273b06269d2c5d" translate="yes" xml:space="preserve">
          <source>This checks if this month-day can be queried for the specified field. If false, then calling the &lt;a href=&quot;monthday#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定されたフィールドに対してこの月の日にクエリを実行できるかどうかが確認されます。falseの場合、&lt;a href=&quot;monthday#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;monthday#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="224a0a96dca5693e7f01300014d70926672a421d" translate="yes" xml:space="preserve">
          <source>This checks if this month-of-year can be queried for the specified field. If false, then calling the &lt;a href=&quot;month#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;month#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定されたフィールドについて、今月の月をクエリできるかどうかが確認されます。falseの場合、&lt;a href=&quot;month#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;month#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="8343b04cd719d66f80c79958a49089d25cb754b8" translate="yes" xml:space="preserve">
          <source>This checks if this offset can be queried for the specified field. If false, then calling the &lt;a href=&quot;zoneoffset#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これにより、指定したフィールドに対してこのオフセットを照会できるかどうかが確認されます。falseの場合、&lt;a href=&quot;zoneoffset#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zoneoffset#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5e97f23736773ca5d20f1d9c0d96760a8e6252df" translate="yes" xml:space="preserve">
          <source>This checks if this time can be queried for the specified field. If false, then calling the &lt;a href=&quot;localtime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localtime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの時間を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;localtime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;localtime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7ca315efad6b7500b2ec870d5521340b5ca22434" translate="yes" xml:space="preserve">
          <source>This checks if this time can be queried for the specified field. If false, then calling the &lt;a href=&quot;offsettime#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;offsettime#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの時間を照会できるかどうかを確認します。falseの場合、&lt;a href=&quot;offsettime#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;offsettime#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsettime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="f0bd642d89c147b4df9975a43763e71737dd19b3" translate="yes" xml:space="preserve">
          <source>This checks if this year can be queried for the specified field. If false, then calling the &lt;a href=&quot;year#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;year#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;year#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対して今年をクエリできるかどうかを確認します。falseの場合、&lt;a href=&quot;year#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;year#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;year#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="962a5b7bdfb5ae41751b10c91017e6097b971dd2" translate="yes" xml:space="preserve">
          <source>This checks if this year-month can be queried for the specified field. If false, then calling the &lt;a href=&quot;yearmonth#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;yearmonth#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;yearmonth#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; methods will throw an exception.</source>
          <target state="translated">これは、指定されたフィールドに対してこの年月をクエリできるかどうかをチェックします。falseの場合、&lt;a href=&quot;yearmonth#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;yearmonth#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;yearmonth#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="e43092d27505a008a9bf4137b2d9b53dee85b7d6" translate="yes" xml:space="preserve">
          <source>This checks that all valid values are within the bounds of an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">これにより、すべての有効な値が &lt;code&gt;int&lt;/code&gt; の境界内にあることが確認されます。</target>
        </trans-unit>
        <trans-unit id="0650e9af54b80c91c876b4f8f70fa9c63e34d721" translate="yes" xml:space="preserve">
          <source>This checks that the implementing date-time can add/subtract this unit. This can be used to avoid throwing an exception.</source>
          <target state="translated">これは、実装されている日時がこの単位を加算/減算できるかどうかをチェックします。これは、例外をスローしないようにするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9e4b9f69e60cf5452eb12206977163925e6b8007" translate="yes" xml:space="preserve">
          <source>This checks that the value is within the stored range of values.</source>
          <target state="translated">これは、値が保存されている値の範囲内にあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="f04f4cea51d94a0009200fc39cd5bbe3d4afe8e4" translate="yes" xml:space="preserve">
          <source>This checks to see if the given offset will be valid at some point in the transition. A gap will always return false. An overlap will return true if the offset is either the before or after offset.</source>
          <target state="translated">これは、指定されたオフセットが遷移のある時点で有効かどうかをチェックします。gap は常に false を返します。オーバーラップは、オフセットがオフセットの前か後のどちらかである場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="265c01caaca3f3e5bf023b6d2c23765fed66fd0a" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents a point on the local time-line after the other date.</source>
          <target state="translated">これは、この日付がローカルタイムライン上で他の日付の後の点を表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="a926e8f5a354ef5894035bb6914fa9312300051e" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents a point on the local time-line before the other date.</source>
          <target state="translated">これは、この日付が他の日付よりも前のローカルタイムライン上のポイントを表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="1e00037dbb39ec0a9c9ac1bcb2daa7ee63e3c8d6" translate="yes" xml:space="preserve">
          <source>This checks to see if this date represents the same point on the local time-line as the other date.</source>
          <target state="translated">これは、この日付がローカルタイムライン上で他の日付と同じポイントを表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="7d3fde6570177af9d05099a481bfb884a1b02705" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents a point on the local time-line after the other date-time.</source>
          <target state="translated">これは、この時刻がローカルタイムライン上の他の時刻の後の点を表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="5ca88dbc6e85ad56cfac4f5a132ad59a8a0c65de" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents a point on the local time-line before the other date-time.</source>
          <target state="translated">これは、この日付がローカルタイムライン上の他の日付よりも前の点を表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="46b058621489d3ca1904f5844641d2db4cfd1f15" translate="yes" xml:space="preserve">
          <source>This checks to see if this date-time represents the same point on the local time-line as the other date-time.</source>
          <target state="translated">これは、この時刻がローカルタイムライン上で他の時刻と同じ点を表しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="f3da7c16000c65374ad23d5ee50855e929a6af85" translate="yes" xml:space="preserve">
          <source>This checks whether the years, months or days units are less than zero.</source>
          <target state="translated">これは、年、月、日の単位がゼロより小さいかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="7e65501fe8b51cdc6a79e5fd57da96a8104d6ec8" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the ISO calendar system. This calendar system is based on the ISO-8601 standard, which is the</source>
          <target state="translated">この年表は、ISOカレンダーシステムのルールを定めたものです。このカレンダーシステムは、ISO-8601規格に基づいており、これは</target>
        </trans-unit>
        <trans-unit id="f2672ddfe9764a0398589d00c507a97713a9b680" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Japanese Imperial calendar system. This calendar system is primarily used in Japan. The Japanese Imperial calendar system is the same as the ISO calendar system apart from the era-based year numbering.</source>
          <target state="translated">この年表は、日本の皇室の暦の規則を定めたものです。この年表は主に日本で使用されています。日本の暦は、時代による年号の付け方を除けば、ISOの暦と同じである。</target>
        </trans-unit>
        <trans-unit id="f287d87771abb8efb52de119872d348265a82a59" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Minguo calendar system. This calendar system is primarily used in the Republic of China, often known as Taiwan. Dates are aligned such that &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; is &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">この年表は、Minguoカレンダーシステムのルールを定義します。このカレンダーシステムは、主に台湾として知られる中華民国で主に使用されます。日付は、 &lt;code&gt;0001-01-01 (Minguo)&lt;/code&gt; が &lt;code&gt;1912-01-01 (ISO)&lt;/code&gt; ように調整されます。</target>
        </trans-unit>
        <trans-unit id="e67fb8bd1997ec68d2aad9ffaec53c7b1557fefe" translate="yes" xml:space="preserve">
          <source>This chronology defines the rules of the Thai Buddhist calendar system. This calendar system is primarily used in Thailand. Dates are aligned such that &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; is &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt;.</source>
          <target state="translated">この年表は、タイの仏教暦システムの規則を定義しています。このカレンダーシステムは主にタイで使用されます。日付は、 &lt;code&gt;2484-01-01 (Buddhist)&lt;/code&gt; が &lt;code&gt;1941-01-01 (ISO)&lt;/code&gt; ように調整されます。</target>
        </trans-unit>
        <trans-unit id="fc07d7dd0027616976f4483849a8d9d04205cb46" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for key managers based on a source of key material.</source>
          <target state="translated">このクラスは、主要な材料のソースに基づいて、主要な管理者のための工場として機能します。</target>
        </trans-unit>
        <trans-unit id="2a0a7454493f3db4c77f185a02b23b164174be56" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for key managers based on a source of key material. Each key manager manages a specific type of key material for use by secure sockets. The key material is based on a KeyStore and/or provider specific sources.</source>
          <target state="translated">このクラスは、キーマテリアルのソースに基づいて、キーマネージャのためのファクトリーとして機能します。各キーマネージャは、セキュアソケットで使用される特定のタイプのキーマテリアルを管理します。鍵材料は、KeyStore および/またはプロバイダ固有のソースに基づいています。</target>
        </trans-unit>
        <trans-unit id="8a16a01436e97318ea3255ad09e29584197177c0" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for trust managers based on a source of trust material.</source>
          <target state="translated">このクラスは、信頼材料のソースに基づいて、信頼管理者のための工場として機能します。</target>
        </trans-unit>
        <trans-unit id="d9c0ab1da3b6d2aa2b4ade72f525fa8860f50e7a" translate="yes" xml:space="preserve">
          <source>This class acts as a factory for trust managers based on a source of trust material. Each trust manager manages a specific type of trust material for use by secure sockets. The trust material is based on a KeyStore and/or provider specific sources.</source>
          <target state="translated">このクラスは、トラストマテリアルのソースに基づいて、トラストマネージャのためのファクトリーとして機能します。各トラストマネージャは、セキュアソケットで使用するための特定のタイプのトラストマテリアルを管理します。トラストマテリアルは KeyStore および/またはプロバイダ固有のソースに基づいています。</target>
        </trans-unit>
        <trans-unit id="c911b08ea419f003753c346ff87b6440e99d5888" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG reader plug-in.</source>
          <target state="translated">このクラスは、内蔵のJPEGリーダープラグインを使用する際に、JPEG量子化とハフマンテーブルを設定する機能を追加します。</target>
        </trans-unit>
        <trans-unit id="e2691ba9db3001e7d91ebcdc6955b689a032cf1c" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG reader plug-in. An instance of this class will be returned from the &lt;code&gt;getDefaultImageReadParam&lt;/code&gt; methods of the built-in JPEG &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="translated">このクラスは、組み込みのJPEGリーダープラグインを使用するときに、JPEG量子化テーブルとハフマンテーブルを設定する機能を追加します。このクラスのインスタンスは、組み込みのJPEG &lt;code&gt;ImageReader&lt;/code&gt; の &lt;code&gt;getDefaultImageReadParam&lt;/code&gt; メソッドから返されます。</target>
        </trans-unit>
        <trans-unit id="77c5aed8d2bdde726d3a02900753ab0db680cdc5" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG writer plug-in, and to request that optimized Huffman tables be computed for an image.</source>
          <target state="translated">このクラスは、組み込みのJPEGライタープラグインを使用している場合に、JPEG量子化とハフマンテーブルを設定したり、画像に対して最適化されたハフマンテーブルの計算を要求したりする機能を追加します。</target>
        </trans-unit>
        <trans-unit id="4dfa7cbf1bfbfe2a4f1633752f9e49f0aad38f7b" translate="yes" xml:space="preserve">
          <source>This class adds the ability to set JPEG quantization and Huffman tables when using the built-in JPEG writer plug-in, and to request that optimized Huffman tables be computed for an image. An instance of this class will be returned from the &lt;code&gt;getDefaultImageWriteParam&lt;/code&gt; methods of the built-in JPEG &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="translated">このクラスは、組み込みのJPEGライタープラグインを使用するときにJPEGの量子化テーブルとハフマンテーブルを設定し、最適化されたハフマンテーブルを画像に対して計算するように要求する機能を追加します。このクラスのインスタンスは、組み込みのJPEG &lt;code&gt;ImageWriter&lt;/code&gt; の &lt;code&gt;getDefaultImageWriteParam&lt;/code&gt; メソッドから返されます。</target>
        </trans-unit>
        <trans-unit id="d6ac544140297f561bd1c7ede858f5e6a7f2cc35" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.FilterInputStream and java.io.InputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes. In particular, the &lt;code&gt;skip&lt;/code&gt; method skips, and the &lt;code&gt;available&lt;/code&gt; method counts only data that have been processed by the encapsulated Cipher.</source>
          <target state="translated">このクラスは、祖先クラスjava.io.FilterInputStreamおよびjava.io.InputStreamのセマンティクス、特に失敗のセマンティクスに厳密に従います。このクラスは、祖先クラスで指定されたメソッドを正確に持ち、それらすべてをオーバーライドします。さらに、このクラスは、その祖先クラスによってスローされないすべての例外をキャッチします。特に、 &lt;code&gt;skip&lt;/code&gt; メソッドはスキップし、 &lt;code&gt;available&lt;/code&gt; メソッドは、カプセル化されたCipherによって処理されたデータのみをカウントします。</target>
        </trans-unit>
        <trans-unit id="c66433003e78fb298309a0cb99c19c9629392e11" translate="yes" xml:space="preserve">
          <source>This class adheres strictly to the semantics, especially the failure semantics, of its ancestor classes java.io.OutputStream and java.io.FilterOutputStream. This class has exactly those methods specified in its ancestor classes, and overrides them all. Moreover, this class catches all exceptions that are not thrown by its ancestor classes.</source>
          <target state="translated">このクラスは、その祖先クラスである java.io.OutputStream および java.io.FilterOutputStream のセマンティクス、特に失敗セマンティクスに厳密に準拠しています。このクラスは、その祖先クラスで指定されたメソッドを正確に持ち、それらをすべてオーバーライドします。さらに、このクラスは、その祖先クラスによってスローされないすべての例外をキャッチします。</target>
        </trans-unit>
        <trans-unit id="13ee0c499ccacc109c50c74284032b81d0afb937" translate="yes" xml:space="preserve">
          <source>This class allows an application to create an input stream in which the bytes read are supplied by the contents of a string. Applications can also read bytes from a byte array by using a &lt;code&gt;ByteArrayInputStream&lt;/code&gt;.</source>
          <target state="translated">このクラスを使用すると、アプリケーションは、読み取られたバイトが文字列の内容によって提供される入力ストリームを作成できます。アプリケーションは、 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; を使用してバイト配列からバイトを読み取ることもできます。</target>
        </trans-unit>
        <trans-unit id="345efd47d898aa1e229a2bf9d4103e663820ff7d" translate="yes" xml:space="preserve">
          <source>This class allows for the specification of various parameters while writing a BMP format image file. By default, the data layout is bottom-up, such that the pixels are stored in bottom-up order, the first scanline being stored last.</source>
          <target state="translated">このクラスは、BMP形式の画像ファイルを書き込む際に、様々なパラメータを指定することができます。デフォルトでは、データレイアウトはボトムアップで、ピクセルはボトムアップ順に格納され、最初のスキャンラインが最後に格納されます。</target>
        </trans-unit>
        <trans-unit id="140e3e5d12e36ac06b631eacafcc8c3345838175" translate="yes" xml:space="preserve">
          <source>This class allows rules for identifying future transitions to be expressed. A rule might be written in many forms:</source>
          <target state="translated">このクラスでは、将来の遷移を識別するためのルールを表現することができます。ルールは多くの形式で書かれているかもしれません。</target>
        </trans-unit>
        <trans-unit id="883a340235c5e37d5d31802323e643a49c062394" translate="yes" xml:space="preserve">
          <source>This class also defines factory methods that allow a &lt;a href=&quot;../../lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to be specified when locating a provider. As with installed providers, the provider classes are identified by placing the provider configuration file in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;.</source>
          <target state="translated">このクラスは、プロバイダーの&lt;a href=&quot;../../lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt;時にClassLoaderを指定できるようにするファクトリメソッドも定義します。インストールされたプロバイダーと同様に、プロバイダークラスは、プロバイダー構成ファイルをリソースディレクトリ &lt;code&gt;META-INF/services&lt;/code&gt; に配置することによって識別されます。</target>
        </trans-unit>
        <trans-unit id="8544b2160ddbef279d46a118efdbdae999cd88f3" translate="yes" xml:space="preserve">
          <source>This class also defines methods for maintaining a selector's cancelled-key set and for removing a key from its channel's key set, and declares the abstract &lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method that is invoked by a selectable channel's &lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of registering a channel.</source>
          <target state="translated">このクラスは、セレクターのキャンセルされたキーセットを維持し、チャネルのキーセットからキーを削除するためのメソッドも定義し、チャネルを登録する実際の作業を実行するために、選択可能なチャネルの&lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出される抽象&lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドを宣言します。</target>
        </trans-unit>
        <trans-unit id="800bb7cdbb26403b8253b92ac40e8720a35d0118" translate="yes" xml:space="preserve">
          <source>This class also defines methods for replacing matched subsequences with new strings whose contents can, if desired, be computed from the match result. The &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt;&lt;code&gt;appendTail&lt;/code&gt;&lt;/a&gt; methods can be used in tandem in order to collect the result into an existing string buffer, or the more convenient &lt;a href=&quot;matcher#replaceAll-java.lang.String-&quot;&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/a&gt; method can be used to create a string in which every matching subsequence in the input sequence is replaced.</source>
          <target state="translated">このクラスは、一致したサブシーケンスを新しい文字列に置き換えるためのメソッドも定義します。その内容は、必要に応じて、一致結果から計算できます。&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt; &lt;code&gt;appendTail&lt;/code&gt; &lt;/a&gt;方法は、既存の文字列バッファに結果を収集するためにタンデムに使用することができ、またはより便利&lt;a href=&quot;matcher#replaceAll-java.lang.String-&quot;&gt; &lt;code&gt;replaceAll&lt;/code&gt; &lt;/a&gt;方法は、入力シーケンス内のすべての一致するサブシーケンスが置換された文字列を作成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="eb5b370e1171b96ffc5a2d05a76690caa47226f8" translate="yes" xml:space="preserve">
          <source>This class also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine. Support for new charsets can be added via the service-provider interface defined in the &lt;a href=&quot;spi/charsetprovider&quot;&gt;&lt;code&gt;CharsetProvider&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">このクラスは、特定の文字セットがサポートされているかどうかのテスト、名前による文字セットインスタンスの検索、現在のJava仮想マシンでサポートされているすべての文字セットを含むマップの作成のための静的メソッドも定義します。新しい文字セットのサポートは、&lt;a href=&quot;spi/charsetprovider&quot;&gt; &lt;code&gt;CharsetProvider&lt;/code&gt; &lt;/a&gt;クラスで定義されたサービスプロバイダーインターフェイスを介して追加できます。</target>
        </trans-unit>
        <trans-unit id="6107bcbf688c4a8e406ba31ee1bc08a7a500f8fe" translate="yes" xml:space="preserve">
          <source>This class also extends &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; so as to define methods to get and set the file owner.</source>
          <target state="translated">このクラスは、ファイル所有者を取得および設定するメソッドを定義するために、 &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; も拡張します。</target>
        </trans-unit>
        <trans-unit id="759e9c8edfea028125ddb4633f8e5b4e40b88175" translate="yes" xml:space="preserve">
          <source>This class also provides additional commonly used bounded random generation methods.</source>
          <target state="translated">また、このクラスでは、一般的に使用される bounded random generation メソッドを追加で提供しています。</target>
        </trans-unit>
        <trans-unit id="f9db46f37b6f37829cea24460ae2fcad6fbd1820" translate="yes" xml:space="preserve">
          <source>This class also provides convenience methods to &lt;a href=&quot;semaphore#acquire-int-&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;semaphore#release-int-&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; multiple permits at a time. Beware of the increased risk of indefinite postponement when these methods are used without fairness set true.</source>
          <target state="translated">このクラスは、一度に複数の許可を&lt;a href=&quot;semaphore#acquire-int-&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;semaphore#release-int-&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt;するための便利なメソッドも提供します。公平性をtrueに設定せずにこれらの方法を使用すると、無期限延期のリスクが高まることに注意してください。</target>
        </trans-unit>
        <trans-unit id="388897f95e2ff6372628c92b420d7766250b3049" translate="yes" xml:space="preserve">
          <source>This class also provides hooks that make it possible to supply custom descriptions and names for the &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; returned by the DynamicMBean interface.</source>
          <target state="translated">このクラスは、DynamicMBeanインターフェースによって返される&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; の&lt;/a&gt;カスタムの説明と名前を提供できるようにするフックも提供します。</target>
        </trans-unit>
        <trans-unit id="3e214e2e116cbd8d9d4053eaab2404092347b186" translate="yes" xml:space="preserve">
          <source>This class also supports methods that conditionally provide conversions across the three modes. For example, method &lt;a href=&quot;stampedlock#tryConvertToWriteLock-long-&quot;&gt;&lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt;&lt;/a&gt; attempts to &quot;upgrade&quot; a mode, returning a valid write stamp if (1) already in writing mode (2) in reading mode and there are no other readers or (3) in optimistic mode and the lock is available. The forms of these methods are designed to help reduce some of the code bloat that otherwise occurs in retry-based designs.</source>
          <target state="translated">このクラスは、3つのモード間で変換を条件付きで提供するメソッドもサポートします。たとえば、メソッド&lt;a href=&quot;stampedlock#tryConvertToWriteLock-long-&quot;&gt; &lt;code&gt;tryConvertToWriteLock(long)&lt;/code&gt; &lt;/a&gt;は、モードを「アップグレード」しようとし、（1）すでに書き込みモードである（2）読み取​​りモードであり、他のリーダーがない場合、または（3）オプティミスティックモードで、ロックが利用可能です。これらのメソッドのフォームは、再試行ベースの設計で通常発生するコードの膨張の一部を減らすのに役立つように設計されています。</target>
        </trans-unit>
        <trans-unit id="5a00765dbf6fd5bee7c0cb57ffcf0fb5907d6bb4" translate="yes" xml:space="preserve">
          <source>This class always replaces malformed surrogate elements and unmappable character sequences with the charset's default</source>
          <target state="translated">このクラスは、不正なサロゲート要素やマッピング不可能な文字列を常に文字セットのデフォルトの</target>
        </trans-unit>
        <trans-unit id="2c924ddcfb11ff34458b625cfb5bc3a8a092689c" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="caedfeebaf4719dc6fcd730450a6cc6bdb4c5939" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;delayqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the DelayQueue in any particular order.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。イテレータは、メソッドに設けられた&lt;a href=&quot;delayqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt;され&lt;em&gt;ていない&lt;/em&gt;特定の順序でDelayQueueの要素を横断することが保証します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40f8fce0544f16774f1621d14ca4d225948f2bdf" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;priorityblockingqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the PriorityBlockingQueue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;. Also, method &lt;code&gt;drainTo&lt;/code&gt; can be used to &lt;em&gt;remove&lt;/em&gt; some or all elements in priority order and place them in another collection.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。イテレータは、メソッドに設けられた&lt;a href=&quot;priorityblockingqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt;され&lt;em&gt;ていない&lt;/em&gt;特定の順序でPriorityBlockingQueueの要素をトラバースすることが保証します。順序付けられた走査が必要な場合は、 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; の使用を検討してください。また、メソッド &lt;code&gt;drainTo&lt;/code&gt; を使用して、優先順位に従って一部またはすべての要素を&lt;em&gt;削除&lt;/em&gt;し、それらを別のコレクションに配置できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d9f6bf748b95eac88b62dd7afacd5a8aa1e40da" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="3ad988531a4324358d99a6ecc31419085cfbbef7" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="35873d3267139d8d755ababcaa078e4145b88017" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="e244e2d44c033168919981aa9877da35b94bdea6" translate="yes" xml:space="preserve">
          <source>This class and its iterator implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. The Iterator provided in method &lt;a href=&quot;priorityqueue#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse the elements of the priority queue in any particular order. If you need ordered traversal, consider using &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt;.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。メソッドに設けイテレータ&lt;a href=&quot;priorityqueue#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt;され&lt;em&gt;ていない&lt;/em&gt;特定の順序で優先度キューの要素を横断することが保証します。順序付けられた走査が必要な場合は、 &lt;code&gt;Arrays.sort(pq.toArray())&lt;/code&gt; の使用を検討してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5e15d54db024790d58205f4d994a57d20890421" translate="yes" xml:space="preserve">
          <source>This class and its iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements, because &lt;code&gt;null&lt;/code&gt; arguments and return values cannot be reliably distinguished from the absence of elements.</source>
          <target state="translated">このクラスとその反復子は、&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。他のほとんどの並行コレクション実装と同様に、このクラスは &lt;code&gt;null&lt;/code&gt; 要素の使用を許可しません。これは、 &lt;code&gt;null&lt;/code&gt; 引数と戻り値を要素の欠如と確実に区別できないためです。</target>
        </trans-unit>
        <trans-unit id="bc0660b496da92e14815a4d2a72b5668f5dc39ac" translate="yes" xml:space="preserve">
          <source>This class and its views and iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このクラスとそのビューおよびイテレーターは、&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;em&gt;オプションの&lt;/em&gt;メソッドをすべて実装します。</target>
        </trans-unit>
        <trans-unit id="4fd49627c9771a5ac8b18c8f6e51a5ed51ae7566" translate="yes" xml:space="preserve">
          <source>This class and its views and iterators implement all of the &lt;em&gt;optional&lt;/em&gt; methods of the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interfaces. Like most other concurrent collections, this class does &lt;em&gt;not&lt;/em&gt; permit the use of &lt;code&gt;null&lt;/code&gt; keys or values because some null return values cannot be reliably distinguished from the absence of elements.</source>
          <target state="translated">このクラスとそのビューおよびイテレーターは、&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インターフェースのすべての&lt;em&gt;オプション&lt;/em&gt;メソッドを実装します。他のほとんどの並行コレクションと同様に、一部のnull戻り値は要素の欠如と確実に区別できないため、このクラスは &lt;code&gt;null&lt;/code&gt; キーまたは値の使用を許可しませ&lt;em&gt;ん&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e421f4acf9e80902e544cac7ff5823ab2877594" translate="yes" xml:space="preserve">
          <source>This class associates, with each thread that uses it, a permit (in the sense of the &lt;a href=&quot;../semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; class). A call to &lt;code&gt;park&lt;/code&gt; will return immediately if the permit is available, consuming it in the process; otherwise it &lt;em&gt;may&lt;/em&gt; block. A call to &lt;code&gt;unpark&lt;/code&gt; makes the permit available, if it was not already available. (Unlike with Semaphores though, permits do not accumulate. There is at most one.)</source>
          <target state="translated">このクラスは、それを使用する各スレッドに（&lt;a href=&quot;../semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;クラスの意味で）許可を関連付けます。許可が利用可能な場合、 &lt;code&gt;park&lt;/code&gt; への呼び出しはすぐに返され、その過程で許可が消費されます。さもなければそれ&lt;em&gt;は&lt;/em&gt;ブロックする&lt;em&gt;かもしれません&lt;/em&gt;。 &lt;code&gt;unpark&lt;/code&gt; を呼び出すと、パーミットが利用可能になります（まだ利用可能でない場合）。 （ただし、セマフォとは異なり、パーミットは蓄積されません。多くても1つしかありません。）</target>
        </trans-unit>
        <trans-unit id="dd0f9876e6138197a3b7c504077f0adca6ca21e4" translate="yes" xml:space="preserve">
          <source>This class brings more flexibility to the notion of Management Interface in the use of Standard MBeans. Straightforward use of the patterns for Standard MBeans described in the JMX Specification means that there is a fixed relationship between the implementation class of an MBean and its management interface (i.e., if the implementation class is Thing, the management interface must be ThingMBean). This class makes it possible to keep the convenience of specifying the management interface with a Java interface, without requiring that there be any naming relationship between the implementation and interface classes.</source>
          <target state="translated">このクラスは、標準MBeansの使用における管理インタフェースの概念に、より柔軟性をもたらします。JMX仕様書に記載されているStandard MBeansのパターンをそのまま使用すると、MBeanの実装クラスとその管理インタフェースの間に固定の関係があることになります(実装クラスがThingであれば、管理インタフェースはThingMBeanでなければなりません)。このクラスを用いることで、実装クラスとインタフェースクラスの間に命名関係を必要とせずに、Javaインタフェースで管理インタフェースを指定するという利便性を保つことが可能になります。</target>
        </trans-unit>
        <trans-unit id="d7f5e7e6debadb6bc7d15130372b1009e07cd59e" translate="yes" xml:space="preserve">
          <source>This class can be instantiated by a string representation of the RDN defined in RFC 2253 as shown in the following code example:</source>
          <target state="translated">このクラスは、以下のコード例に示すように、RFC 2253 で定義されている RDN の文字列表現によってインスタンス化することができます。</target>
        </trans-unit>
        <trans-unit id="408aa59b50ee1cd17fc707c3d6d1ca84920d2eac" translate="yes" xml:space="preserve">
          <source>This class can be instantiated by using a string representation of the distinguished name, or by using the ASN.1 DER encoded byte representation of the distinguished name. The current specification for the string representation of a distinguished name is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253: Lightweight Directory Access Protocol (v3): UTF-8 String Representation of Distinguished Names&lt;/a&gt;. This class, however, accepts string formats from both RFC 2253 and &lt;a href=&quot;http://www.ietf.org/rfc/rfc1779.txt&quot;&gt;RFC 1779: A String Representation of Distinguished Names&lt;/a&gt;, and also recognizes attribute type keywords whose OIDs (Object Identifiers) are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">このクラスは、識別名の文字列表現を使用するか、ASN.1 DERエンコードされた識別名のバイト表現を使用してインスタンス化できます。識別名の文字列表現の現在の仕様は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253：Lightweight Directory Access Protocol（v3）：UTF-8 String Representation of Distinguished Namesで&lt;/a&gt;定義されています。ただし、このクラスは、RFC 2253と&lt;a href=&quot;http://www.ietf.org/rfc/rfc1779.txt&quot;&gt;RFC 1779の&lt;/a&gt;両方から文字列形式を受け入れます：A Distinguished Namesの文字列表現、およびOID（オブジェクト識別子）が&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280で&lt;/a&gt;定義されている属性タイプのキーワードを認識します：Internet X.509 Public Key Infrastructure Certificate and CRLプロファイル。</target>
        </trans-unit>
        <trans-unit id="22cda7839ea871c5574403a26f0611bfb6183d06" translate="yes" xml:space="preserve">
          <source>This class can be serialized and stores the string zone ID in the external form. The &lt;code&gt;ZoneOffset&lt;/code&gt; subclass uses a dedicated format that only stores the offset from UTC/Greenwich.</source>
          <target state="translated">このクラスはシリアル化でき、文字列ゾーンIDを外部フォームに格納します。 &lt;code&gt;ZoneOffset&lt;/code&gt; サブクラスの用途のみ店舗はUTC /グリニッジからオフセットが専用のフォーマット。</target>
        </trans-unit>
        <trans-unit id="08caf67472a9c4270c71d609d696e3667269ecae" translate="yes" xml:space="preserve">
          <source>This class can be used to initialize a &lt;code&gt;Cipher&lt;/code&gt; object that implements the</source>
          <target state="translated">このクラスを使用して、実装する &lt;code&gt;Cipher&lt;/code&gt; オブジェクトを初期化できます。</target>
        </trans-unit>
        <trans-unit id="0a7be8980f88523567e69634ed88eb43eb7a20a7" translate="yes" xml:space="preserve">
          <source>This class cannot be instantiated. It has only static methods.</source>
          <target state="translated">このクラスはインスタンス化できません。静的なメソッドしかありません。</target>
        </trans-unit>
        <trans-unit id="f1f3489be448c81f6059af9b604eab721ae2b783" translate="yes" xml:space="preserve">
          <source>This class centralizes all security properties and common security methods.</source>
          <target state="translated">このクラスは、すべてのセキュリティプロパティと共通のセキュリティメソッドを一元化します。</target>
        </trans-unit>
        <trans-unit id="dc8b950092cbcc01690c61de27fb3ae19d4e974f" translate="yes" xml:space="preserve">
          <source>This class centralizes all security properties and common security methods. One of its primary uses is to manage providers.</source>
          <target state="translated">このクラスは、すべてのセキュリティプロパティと共通のセキュリティメソッドを一元化します。主な用途の一つは、プロバイダを管理することです。</target>
        </trans-unit>
        <trans-unit id="a6cb96a6673c912eb785c3687c59092c3790b519" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods for obtaining encoders and decoders for the Base64 encoding scheme.</source>
          <target state="translated">このクラスは、Base64 エンコーディング方式のエンコーダーとデコーダーを取得するための静的メソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="c26324f4ebfc25aeaffc4122553f9b3b6f2a74b0" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods for obtaining encoders and decoders for the Base64 encoding scheme. The implementation of this class supports the following types of Base64 as specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4648.txt&quot;&gt;RFC 4648&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;.</source>
          <target state="translated">このクラスは、Base64エンコード方式のエンコーダーとデコーダーを取得するための静的メソッドのみで構成されています。このクラスの実装は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc4648.txt&quot;&gt;RFC 4648&lt;/a&gt;および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045で&lt;/a&gt;指定されている次のタイプのBase64をサポートしています。</target>
        </trans-unit>
        <trans-unit id="70f8b85b793509ea8934dc209fad03b9b5008a13" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that help adapt method handles to other JVM types, such as interfaces.</source>
          <target state="translated">このクラスは、メソッドハンドルをインターフェイスなどの他のJVMタイプに適応させるためのスタティックメソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="43d1381f06f84f756c39b887a569b407d32db808" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on files, directories, or other types of files.</source>
          <target state="translated">このクラスは、ファイル、ディレクトリ、または他のタイプのファイルに対して操作する静的メソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="f1c00fd4abcf08932e8295ad0ab5d4edf45278f8" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return collections.</source>
          <target state="translated">このクラスは、コレクションを操作したり、コレクションを返したりする静的メソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="2c343c6383fb79e44f84addffdad6704e48b70c6" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return collections. It contains polymorphic algorithms that operate on collections, &quot;wrappers&quot;, which return a new collection backed by a specified collection, and a few other odds and ends.</source>
          <target state="translated">このクラスは、コレクションに対して操作したり、コレクションを返したりする静的メソッドのみで構成されています。コレクションを操作する多相性アルゴリズム、指定されたコレクションに裏付けられた新しいコレクションを返す &quot;ラッパー&quot;、その他のいくつかのお決まりのメソッドを含みます。</target>
        </trans-unit>
        <trans-unit id="8606d91ec86719639d5cef7ea45e744cdd1a3c30" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return method handles.</source>
          <target state="translated">このクラスは、メソッドハンドルを操作したり、メソッドハンドルを返したりする静的メソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="66cb9dc1c07813623f3d59a48ce5a193b59e02f4" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on or return method handles. They fall into several categories:</source>
          <target state="translated">このクラスは、メソッド・ハンドルを操作したり、メソッド・ハンドルを返したりする静的メソッドのみで構成されています。これらはいくつかのカテゴリに分類されます。</target>
        </trans-unit>
        <trans-unit id="9387ec154802c2f1f1f0551417b10625786c8612" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that operate on sets of &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;オブジェクトのセットを操作する静的メソッドのみで構成されています。</target>
        </trans-unit>
        <trans-unit id="24b9a888f811ee23b32a4d03f075039b51070f5b" translate="yes" xml:space="preserve">
          <source>This class consists exclusively of static methods that return a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting a path string or &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスには、返す静的メソッドで独占的に構成されて&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;パス文字列または変換することにより、&lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f16fba3ccf8da91eb7017800adf15ecbe4516dc8" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects.</source>
          <target state="translated">このクラスは、オブジェクトを操作するための &lt;code&gt;static&lt;/code&gt; ユーティリティメソッドで構成されています。</target>
        </trans-unit>
        <trans-unit id="e0fae45e0057b0736f390509c1be56b00c02fcc0" translate="yes" xml:space="preserve">
          <source>This class consists of &lt;code&gt;static&lt;/code&gt; utility methods for operating on objects. These utilities include &lt;code&gt;null&lt;/code&gt;-safe or &lt;code&gt;null&lt;/code&gt;-tolerant methods for computing the hash code of an object, returning a string for an object, and comparing two objects.</source>
          <target state="translated">このクラスは、オブジェクトを操作するための &lt;code&gt;static&lt;/code&gt; ユーティリティメソッドで構成されています。これらのユーティリティには、オブジェクトのハッシュコードを計算し、オブジェクトの文字列を返し、2つのオブジェクトを比較するための &lt;code&gt;null&lt;/code&gt; セーフまたは &lt;code&gt;null&lt;/code&gt; 許容メソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="4ecb8a6e31e66f95dd9b703a1b211405da9780f9" translate="yes" xml:space="preserve">
          <source>This class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">このクラスには、静的メソッドとして利用可能なアジャスターの標準セットが含まれています。これらには以下のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="c7cf71e09253395b2196af54fee31b21544178fe" translate="yes" xml:space="preserve">
          <source>This class contains an export/import facility, allowing preferences to be &quot;exported&quot; to an XML document, and XML documents representing preferences to be &quot;imported&quot; back into the system. This facility may be used to back up all or part of a preference tree, and subsequently restore from the backup.</source>
          <target state="translated">このクラスにはエクスポート/インポート機能が含まれており、環境設定を XML ドキュメントに「エクスポート」したり、環境設定を表す XML ドキュメントをシステムに「インポート」したりすることができます。この機能を使って、環境設定ツリーの全部または一部をバックアップし、その後バックアップから復元することができます。</target>
        </trans-unit>
        <trans-unit id="769baf2f62fd3bfa627c82579b4b3f0fa768d95c" translate="yes" xml:space="preserve">
          <source>This class contains methods for creating context objects and objects referred to by location information in the naming or directory service.</source>
          <target state="translated">このクラスは、名前付けサービスやディレクトリサービスの位置情報によって参照されるコンテキストオブジェクトやオブジェクトを作成するためのメソッドを含みます。</target>
        </trans-unit>
        <trans-unit id="b352bb3ae62015ae3e6fccafbc2587e07fa56bad" translate="yes" xml:space="preserve">
          <source>This class contains methods for supporting &lt;code&gt;DirContext&lt;/code&gt; implementations.</source>
          <target state="translated">このクラスには、 &lt;code&gt;DirContext&lt;/code&gt; 実装をサポートするためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="8be427fd0c5a72ac1ce15c650309bd1733d1fadd" translate="yes" xml:space="preserve">
          <source>This class contains various methods for manipulating arrays (such as sorting and searching).</source>
          <target state="translated">このクラスには,配列を操作するための様々なメソッド(ソートや検索など)が含まれています.</target>
        </trans-unit>
        <trans-unit id="cb2faeb8efc1bbc7ccfbd6fa84fa1afb79a3e332" translate="yes" xml:space="preserve">
          <source>This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.</source>
          <target state="translated">このクラスには、配列を操作するための様々なメソッド(ソートや検索など)が含まれています。このクラスには、配列をリストとして表示するための静的ファクトリも含まれています。</target>
        </trans-unit>
        <trans-unit id="c62572ec8afcb6754bbc9f0bb11387de8c016c9a" translate="yes" xml:space="preserve">
          <source>This class creates server sockets.</source>
          <target state="translated">このクラスはサーバソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="c207b61ace7e1da2567b107efe9d43a912448216" translate="yes" xml:space="preserve">
          <source>This class creates server sockets. It may be subclassed by other factories, which create particular types of server sockets. This provides a general framework for the addition of public socket-level functionality. It is the server side analogue of a socket factory, and similarly provides a way to capture a variety of policies related to the sockets being constructed.</source>
          <target state="translated">このクラスはサーバソケットを作成します。このクラスは、特定のタイプのサーバソケットを作成する他のファクトリーによってサブクラス化されることがあります。このクラスは、パブリックソケットレベルの機能を追加するための一般的なフレームワークを提供します。これはソケットファクトリのサーバー側のアナログであり、構築されるソケットに関連する様々なポリシーを取得する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="74dca92c6d0671abb7c75a39cc208057d8610072" translate="yes" xml:space="preserve">
          <source>This class creates sockets.</source>
          <target state="translated">ソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="8494a4be035b231016becf7c5a349116ea210a23" translate="yes" xml:space="preserve">
          <source>This class creates sockets. It may be subclassed by other factories, which create particular subclasses of sockets and thus provide a general framework for the addition of public socket-level functionality.</source>
          <target state="translated">このクラスはソケットを作成します。ソケットの特定のサブクラスを作成する他のファクトリーによってサブクラス化され、パブリックソケットレベルの機能を追加するための一般的なフレームワークを提供します。</target>
        </trans-unit>
        <trans-unit id="61356c7940468f66c8f7585670ec18ba9bbb0bae" translate="yes" xml:space="preserve">
          <source>This class defines a nested &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; class that can be used as a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation by subclasses supporting exclusive mode for which method &lt;a href=&quot;abstractqueuedsynchronizer#isHeldExclusively--&quot;&gt;&lt;code&gt;isHeldExclusively()&lt;/code&gt;&lt;/a&gt; reports whether synchronization is exclusively held with respect to the current thread, method &lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt;&lt;code&gt;release(int)&lt;/code&gt;&lt;/a&gt; invoked with the current &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt; value fully releases this object, and &lt;a href=&quot;abstractqueuedsynchronizer#acquire-int-&quot;&gt;&lt;code&gt;acquire(int)&lt;/code&gt;&lt;/a&gt;, given this saved state value, eventually restores this object to its previous acquired state. No &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; method otherwise creates such a condition, so if this constraint cannot be met, do not use it. The behavior of &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; depends of course on the semantics of its synchronizer implementation.</source>
          <target state="translated">このクラスは、ネストされた&lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt;クラスを定義します。これは、メソッド&lt;a href=&quot;abstractqueuedsynchronizer#isHeldExclusively--&quot;&gt; &lt;code&gt;isHeldExclusively()&lt;/code&gt; &lt;/a&gt;が現在のスレッドに対して排他的に保持されているかどうかを報告する排他モードをサポートするサブクラスによって&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;実装として使用でき、現在のスレッドで呼び出されたメソッド&lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt; &lt;code&gt;release(int)&lt;/code&gt; &lt;/a&gt;を報告します。&lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt;値はこのオブジェクトを完全に解放し、この保存された状態の値を指定&lt;a href=&quot;abstractqueuedsynchronizer#acquire-int-&quot;&gt; &lt;code&gt;acquire(int)&lt;/code&gt; &lt;/a&gt;と、acquire（int）は最終的にこのオブジェクトを以前の取得状態に復元します。ノー &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; のメソッドは、そうでない場合は、この制約を満たすことができないのであれば、それを使用しない、などのAの条件を作成します。の行動&lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt;は、当然、シンクロナイザ実装のセマンティクスに依存します。</target>
        </trans-unit>
        <trans-unit id="1d161644e58a91950e721e3df258d6272fe8f8a2" translate="yes" xml:space="preserve">
          <source>This class defines all known operation-set bits, but precisely which bits are supported by a given channel depends upon the type of the channel. Each subclass of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; defines an &lt;a href=&quot;selectablechannel#validOps--&quot;&gt;&lt;code&gt;validOps()&lt;/code&gt;&lt;/a&gt; method which returns a set identifying just those operations that are supported by the channel. An attempt to set or test an operation-set bit that is not supported by a key's channel will result in an appropriate run-time exception.</source>
          <target state="translated">このクラスはすべての既知の操作セットビットを定義しますが、特定のチャネルでサポートされるビットは正確にはチャネルのタイプによって異なります。&lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; の&lt;/a&gt;各サブクラスは、チャネルでサポートされている操作のみを識別するセットを返す&lt;a href=&quot;selectablechannel#validOps--&quot;&gt; &lt;code&gt;validOps()&lt;/code&gt; &lt;/a&gt;メソッドを定義します。キーのチャネルでサポートされていない操作設定ビットを設定またはテストしようとすると、適切なランタイム例外が発生します。</target>
        </trans-unit>
        <trans-unit id="7e2b90f2996121462dde9c2bea370e40d1ef9615" translate="yes" xml:space="preserve">
          <source>This class defines fields and units that are specific to the ISO calendar system.</source>
          <target state="translated">ISOカレンダーシステムに固有のフィールドと単位を定義します。</target>
        </trans-unit>
        <trans-unit id="4ef202ff1aebdeb0625aa6ebefdd0cc56e7f02b2" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon char buffers:</source>
          <target state="translated">このクラスは、文字バッファに対する4種類の操作を定義します。</target>
        </trans-unit>
        <trans-unit id="f98ba77c2c9981bdfeb41dfaf75537c33937770f" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon double buffers:</source>
          <target state="translated">このクラスは、二重バッファに対する4つの操作カテゴリを定義します。</target>
        </trans-unit>
        <trans-unit id="6c37d099cf36e3f88a52048c7ea732645a2daaa9" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon float buffers:</source>
          <target state="translated">このクラスは、float バッファに対する 4 種類の操作を定義します。</target>
        </trans-unit>
        <trans-unit id="88eb21b6bb4ad00179423581ffdebb353e51fc3d" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon int buffers:</source>
          <target state="translated">このクラスは,int バッファに対する4種類の操作を定義します.</target>
        </trans-unit>
        <trans-unit id="126a1062471d99cc02075569ba00b39109425458" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon long buffers:</source>
          <target state="translated">このクラスは、長いバッファに対する4種類の操作を定義します。</target>
        </trans-unit>
        <trans-unit id="5923e2513cc2452ca2ee5e213879f6f707f4b96b" translate="yes" xml:space="preserve">
          <source>This class defines four categories of operations upon short buffers:</source>
          <target state="translated">このクラスは、短いバッファに対する4つの操作カテゴリを定義します。</target>
        </trans-unit>
        <trans-unit id="f2f17913f06f71e1e24cbd648059cc5684375ff8" translate="yes" xml:space="preserve">
          <source>This class defines login and logout methods for a provider.</source>
          <target state="translated">プロバイダのログイン・ログアウトメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="029acb623286c2f3ebb08fab792ab3fadbf98ce6" translate="yes" xml:space="preserve">
          <source>This class defines methods for reading and writing values of all other primitive types, except &lt;code&gt;boolean&lt;/code&gt;. Primitive values are translated to (or from) sequences of bytes according to the buffer's current byte order, which may be retrieved and modified via the &lt;a href=&quot;bytebuffer#order--&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; methods. Specific byte orders are represented by instances of the &lt;a href=&quot;byteorder&quot;&gt;&lt;code&gt;ByteOrder&lt;/code&gt;&lt;/a&gt; class. The initial order of a byte buffer is always &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;boolean&lt;/code&gt; を除く他のすべてのプリミティブ型の値を読み書きするためのメソッドを定義します。プリミティブ値は、バッファの現在のバイト順に従ってバイトのシーケンスに（またはバイトのシーケンスから）変換されます。これは、&lt;a href=&quot;bytebuffer#order--&quot;&gt; &lt;code&gt;order&lt;/code&gt; &lt;/a&gt;メソッドを使用して取得および変更できます。特定のバイトオーダーは、&lt;a href=&quot;byteorder&quot;&gt; &lt;code&gt;ByteOrder&lt;/code&gt; &lt;/a&gt;クラスのインスタンスによって表されます。バイトバッファの初期順序は常に&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="833f4acdf0db623c46516faed8a12b57ce205a05" translate="yes" xml:space="preserve">
          <source>This class defines methods that handle the mechanics of channel registration, deregistration, and closing. It maintains the current blocking mode of this channel as well as its current set of selection keys. It performs all of the synchronization required to implement the &lt;a href=&quot;../selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; specification. Implementations of the abstract protected methods defined in this class need not synchronize against other threads that might be engaged in the same operations.</source>
          <target state="translated">このクラスは、チャネルの登録、登録解除、およびクローズのメカニズムを処理するメソッドを定義します。このチャネルの現在のブロックモードと、現在の選択キーのセットを維持します。&lt;a href=&quot;../selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt;仕様の実装に必要なすべての同期を実行します。このクラスで定義されている抽象保護メソッドの実装は、同じ操作に関与している可能性のある他のスレッドと同期する必要はありません。</target>
        </trans-unit>
        <trans-unit id="102117ab56796ca0ef2e4471bf89d8d921b3664d" translate="yes" xml:space="preserve">
          <source>This class defines six categories of operations upon byte buffers:</source>
          <target state="translated">このクラスは、バイトバッファに対する6種類の操作を定義しています。</target>
        </trans-unit>
        <trans-unit id="f9146ca2b8add7c0ef293bafe59b338da56f98ab" translate="yes" xml:space="preserve">
          <source>This class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package.</source>
          <target state="translated">このクラスは、 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; パッケージのストリームクラスとこのパッケージのチャネルクラスの相互運用をサポートする静的メソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="d84c379001913e342accd986ca649b3e0f329887" translate="yes" xml:space="preserve">
          <source>This class defines the</source>
          <target state="translated">このクラスは</target>
        </trans-unit>
        <trans-unit id="b3d5084504afb30c838fb8bf8db215c665f80109" translate="yes" xml:space="preserve">
          <source>This class defines the functionality of a certificate factory, which is used to generate certificate, certification path (&lt;code&gt;CertPath&lt;/code&gt;) and certificate revocation list (CRL) objects from their encodings.</source>
          <target state="translated">このクラスは、証明書ファクトリの機能を定義します。証明書ファクトリは、エンコードから証明書、証明書パス（ &lt;code&gt;CertPath&lt;/code&gt; ）、および証明書失効リスト（CRL）オブジェクトを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bb3eb1e8a146d86c95ae0ee3663bd63a4d9555d8" translate="yes" xml:space="preserve">
          <source>This class defines the methods &lt;a href=&quot;provider.service#supportsParameter-java.lang.Object-&quot;&gt;&lt;code&gt;supportsParameter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;provider.service#newInstance-java.lang.Object-&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; which are used by the Java security framework when it searches for suitable services and instantiates them. The valid arguments to those methods depend on the type of service. For the service types defined within Java SE, see the  Java Cryptography Architecture API Specification &amp;amp; Reference  for the valid values. Note that components outside of Java SE can define additional types of services and their behavior.</source>
          <target state="translated">このクラスは、Javaセキュリティフレームワークが適切なサービスを検索してインスタンス化するときに使用するメソッド&lt;a href=&quot;provider.service#supportsParameter-java.lang.Object-&quot;&gt; &lt;code&gt;supportsParameter()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;provider.service#newInstance-java.lang.Object-&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt;を定義します。これらのメソッドの有効な引数は、サービスのタイプによって異なります。Java SE内で定義されているサービスタイプの有効な値については、「Java暗号化アーキテクチャAPI仕様＆リファレンス」を参照してください。Java SEの外部のコンポーネントは、追加のタイプのサービスとその動作を定義できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a15d8301b5051b9c65fd5754702615d1eb11a360" translate="yes" xml:space="preserve">
          <source>This class defines the policy of how to locate, load, and instantiate SASL clients and servers.</source>
          <target state="translated">このクラスは、SASL クライアントとサーバーの位置を特定し、ロードし、インスタンス化する方法のポリシーを定義します。</target>
        </trans-unit>
        <trans-unit id="4e3aebe453fbbcde578bedce9ea55b53e835992e" translate="yes" xml:space="preserve">
          <source>This class defines the valid eras for the Japanese chronology. Japan introduced the Gregorian calendar starting with Meiji 6. Only Meiji and later eras are supported; dates before Meiji 6, January 1 are not supported.</source>
          <target state="translated">このクラスは、日本の年表の有効な時代を定義します。日本では明治6年からグレゴリオ暦が導入されました。明治6年1月1日以前の日付はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="fbe65b3854b04fee6983070dd4203eca5cf27c1a" translate="yes" xml:space="preserve">
          <source>This class describes the various problems which can be encountered when accessing a role.</source>
          <target state="translated">このクラスでは、ロールにアクセスする際に発生する様々な問題について説明します。</target>
        </trans-unit>
        <trans-unit id="d56ac70faee3ada578571fe8a2c0709cb67d01f6" translate="yes" xml:space="preserve">
          <source>This class does</source>
          <target state="translated">このクラスは</target>
        </trans-unit>
        <trans-unit id="51ed6edad8ec894a41b2906553da3514e2f0f580" translate="yes" xml:space="preserve">
          <source>This class does not impose a reader or writer preference ordering for lock access. However, it does support an optional &lt;em&gt;fairness&lt;/em&gt; policy.</source>
          <target state="translated">このクラスは、ロックアクセスのリーダーまたはライターの優先順位を強制しません。ただし、オプションの&lt;em&gt;公平性&lt;/em&gt;ポリシーはサポートしています。</target>
        </trans-unit>
        <trans-unit id="b55850117de60502f1359995ec43d1c79d50fb78" translate="yes" xml:space="preserve">
          <source>This class does not properly convert characters into bytes.</source>
          <target state="translated">このクラスは、文字を正しくバイトに変換しません。</target>
        </trans-unit>
        <trans-unit id="162e46887cb13f1ba011995c900f39cc02a52d40" translate="yes" xml:space="preserve">
          <source>This class does not properly convert characters into bytes. As of JDK 1.1, the preferred way to create a stream from a string is via the &lt;code&gt;StringReader&lt;/code&gt; class.</source>
          <target state="translated">このクラスは文字をバイトに適切に変換しません。JDK 1.1以降、文字列からストリームを作成するための推奨方法は、 &lt;code&gt;StringReader&lt;/code&gt; クラスを使用する方法です。</target>
        </trans-unit>
        <trans-unit id="94b1b0fa3bcb888b725ed330a4d97dab66d2166b" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a date or time-zone. Instead, it is a description of the local time as seen on a wall clock. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">このクラスは日付やタイムゾーンを保存したり表現したりするものではありません。その代わりに、壁掛け時計で見た現地時間を記述します。オフセットやタイムゾーンのような追加情報がなければ、タイムライン上の瞬間を表現することはできません。</target>
        </trans-unit>
        <trans-unit id="af6b2b16c68aa3ebe3feaed5905165e4006f92ac" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a day, time or time-zone. For example, the value &quot;October 2007&quot; can be stored in a &lt;code&gt;YearMonth&lt;/code&gt;.</source>
          <target state="translated">このクラスは、日、時間、またはタイムゾーンを格納または表現しません。たとえば、値「October 2007」は &lt;code&gt;YearMonth&lt;/code&gt; に格納できます。</target>
        </trans-unit>
        <trans-unit id="623be08061125589af241bd7ce5a308081256174" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a month, day, time or time-zone. For example, the value &quot;2007&quot; can be stored in a &lt;code&gt;Year&lt;/code&gt;.</source>
          <target state="translated">このクラスは、月、日、時間、またはタイムゾーンを格納または表しません。たとえば、「2007」という値は &lt;code&gt;Year&lt;/code&gt; に格納できます。</target>
        </trans-unit>
        <trans-unit id="7d1e1ffdef80b6fdd0adba10ba28ec25df5388d7" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">このクラスは、時間やタイムゾーンを保存したり表現したりするものではありません。代わりに、誕生日に使われるような日付の記述です。オフセットやタイムゾーンなどの追加情報がなければ、タイムライン上の瞬間を表現することはできません。</target>
        </trans-unit>
        <trans-unit id="fe90c824d1431213b461922cf8b2690aa184e146" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a time-zone. Instead, it is a description of the date, as used for birthdays, combined with the local time as seen on a wall clock. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.</source>
          <target state="translated">このクラスはタイムゾーンを保存したり表現したりするものではありません。その代わりに、誕生日に使われるような日付と、壁掛け時計で見た現地時間を組み合わせたものです。オフセットやタイムゾーンのような追加情報がなければ、タイムライン上の瞬間を表現することはできません。</target>
        </trans-unit>
        <trans-unit id="1dab391bb2089c461440ad234087ecc47782d3e5" translate="yes" xml:space="preserve">
          <source>This class does not store or represent a year, time or time-zone. For example, the value &quot;December 3rd&quot; can be stored in a &lt;code&gt;MonthDay&lt;/code&gt;.</source>
          <target state="translated">このクラスは、年、時間、またはタイムゾーンを格納または表現しません。たとえば、値 &quot;December 3rd&quot;は &lt;code&gt;MonthDay&lt;/code&gt; に格納できます。</target>
        </trans-unit>
        <trans-unit id="87d2f9566a12e39af2b715032fd8d4df9db03ff0" translate="yes" xml:space="preserve">
          <source>This class enables a programmer to create an object and protect its confidentiality with a cryptographic algorithm.</source>
          <target state="translated">このクラスは、プログラマーがオブジェクトを作成し、暗号アルゴリズムでその機密性を保護することを可能にします。</target>
        </trans-unit>
        <trans-unit id="2b1ba15e57078832f452a767958acfa0d9ed2504" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos principal.</source>
          <target state="translated">このクラスは、Kerberosプリンシパルをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="02b0f1f4d4efdeca04a3d0ff51abd4ec98caaa56" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos ticket and associated information as viewed from the client's point of view.</source>
          <target state="translated">このクラスは、クライアントから見たKerberosチケットと関連情報をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="b4fb1ff28a74175616cf3a7221f597e406482891" translate="yes" xml:space="preserve">
          <source>This class encapsulates a Kerberos ticket and associated information as viewed from the client's point of view. It captures all information that the Key Distribution Center (KDC) sends to the client in the reply message KDC-REP defined in the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;).</source>
          <target state="translated">このクラスは、クライアントの視点から見たKerberosチケットと関連情報をカプセル化します。キー配布センター（KDC）がクライアントに送信するすべての情報を、Kerberosプロトコル仕様（&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;）で定義された応答メッセージKDC-REPでキャプチャします。</target>
        </trans-unit>
        <trans-unit id="4080b2d7eb034d05308a58a456615b37be74e61f" translate="yes" xml:space="preserve">
          <source>This class encapsulates a keytab file.</source>
          <target state="translated">keytabファイルをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="f5c98dc941892e57d92bcbd1cbf58a4c65c0d6b6" translate="yes" xml:space="preserve">
          <source>This class encapsulates a long term secret key for a Kerberos principal.</source>
          <target state="translated">このクラスは、Kerberosプリンシパルの長期秘密鍵をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="6bdcd8de4f4b409e0e87e2dff0350424da2fded3" translate="yes" xml:space="preserve">
          <source>This class encapsulates factors that determine scope of search and what gets returned as a result of the search.</source>
          <target state="translated">このクラスは、検索の範囲を決定する要因と、検索の結果として何が返されるかをカプセル化します。</target>
        </trans-unit>
        <trans-unit id="84e18e89ad99473964a876c3740334cd37702ebc" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a code signer.</source>
          <target state="translated">このクラスは、コード署名者に関する情報をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="191e3fbfb6316c52dbc601eea6fa3c7922bc82dd" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a code signer. It is immutable.</source>
          <target state="translated">このクラスは、コード・シグナに関する情報をカプセル化しています。不変です。</target>
        </trans-unit>
        <trans-unit id="2cf5950049a0b20a346f67af5aa2efae5c5ad449" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a signed timestamp.</source>
          <target state="translated">このクラスは、署名されたタイムスタンプに関する情報をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="d011ab8fa75b957c131d5f7832d7a99f0f0c7204" translate="yes" xml:space="preserve">
          <source>This class encapsulates information about a signed timestamp. It is immutable. It includes the timestamp's date and time as well as information about the Timestamping Authority (TSA) which generated and signed the timestamp.</source>
          <target state="translated">このクラスは、署名されたタイムスタンプに関する情報をカプセル化します。これは不変です。このクラスには、タイムスタンプの日付と時刻の他に、タイムスタンプを生成して署名したTimestamping Authority (TSA)に関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="4fe8ca2895d516ddb4bb2dbb2d265b8a9b3c6d85" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the asynchronous closing and interruption of channels. A concrete channel class must invoke the &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">このクラスは、チャネルの非同期のクローズと中断を実装するために必要な低レベルの機構をカプセル化します。具体的なチャネルクラスは、無期限にブロックする可能性のあるI / O操作を呼び出す前と後に、それぞれ&lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要があります。ことを確実にするために、&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドが常に呼び出され、これらの方法は内で使用する必要があります &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; ブロックします：</target>
        </trans-unit>
        <trans-unit id="e8b178d5ab1d471af84cc8f749b651d6a8a10c4f" translate="yes" xml:space="preserve">
          <source>This class encapsulates the low-level machinery required to implement the interruption of selection operations. A concrete selector class must invoke the &lt;a href=&quot;abstractselector#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method is always invoked, these methods should be used within a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block:</source>
          <target state="translated">このクラスは、選択操作の中断を実装するために必要な低レベルの機構をカプセル化します。具体的なセレクタークラスは、それぞれ&lt;a href=&quot;abstractselector#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt;前と終了後のbeginメソッドと&lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、無期限にブロックされる可能性のあるI / O操作を呼び出す必要があります。ことを確実にするために、&lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドが常に呼び出され、これらの方法は内で使用する必要があります &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; ブロックします：</target>
        </trans-unit>
        <trans-unit id="fbcfd0ca9cfe63da2c2c8be76ce7997f64531ca7" translate="yes" xml:space="preserve">
          <source>This class expresses a &lt;em&gt;Language Range&lt;/em&gt; defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647言語タグのマッチングで&lt;/a&gt;定義されている&lt;em&gt;言語範囲を&lt;/em&gt;表します。</target>
        </trans-unit>
        <trans-unit id="39eac8e5feabe8dfd6efce5552c2b7e2f5cf68a2" translate="yes" xml:space="preserve">
          <source>This class expresses a &lt;em&gt;Language Range&lt;/em&gt; defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 Matching of Language Tags&lt;/a&gt;. A language range is an identifier which is used to select language tag(s) meeting specific requirements by using the mechanisms described in &lt;a href=&quot;locale#LocaleMatching&quot;&gt;Locale Matching&lt;/a&gt;. A list which represents a user's preferences and consists of language ranges is called a &lt;em&gt;Language Priority List&lt;/em&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647言語タグのマッチングで&lt;/a&gt;定義されている&lt;em&gt;言語範囲を&lt;/em&gt;表します。言語範囲は、&lt;a href=&quot;locale#LocaleMatching&quot;&gt;ロケールマッチングで&lt;/a&gt;説明されているメカニズムを使用して、特定の要件を満たす言語タグを選択するために使用される識別子です。ユーザーの設定を表し、言語範囲で構成される&lt;em&gt;リスト&lt;/em&gt;は、&lt;em&gt;言語優先リスト&lt;/em&gt;と呼ばれます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12c4b1b942381193fe784dc1d0b755920b078b78" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;../../../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, but does &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; because instances are expected to be mutated, and so are not useful as collection keys.</source>
          <target state="translated">このクラスは&lt;a href=&quot;../../../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; を&lt;/a&gt;拡張しますが、インスタンスは変更されることが想定されているため、コレクションキーとしては有用ではないため、 &lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;compareTo&lt;/code&gt; などのメソッドを定義しませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ab4a5394494318646046abcbdc4101f61febbe0d" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt; and represents a print service that prints data in different formats to a client-provided output stream.</source>
          <target state="translated">このクラスは&lt;a href=&quot;printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; &lt;/a&gt;を拡張し、クライアントが提供する出力ストリームにさまざまな形式でデータを印刷する印刷サービスを表します。</target>
        </trans-unit>
        <trans-unit id="3a2bfc4316a8193b07c7576eedeac793be63ffc9" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt; and represents a print service that prints data in different formats to a client-provided output stream. This is principally intended for services where the output format is a document type suitable for viewing or archiving. The output format must be declared as a mime type. This is equivalent to an output document flavor where the representation class is always &quot;java.io.OutputStream&quot; An instance of the &lt;code&gt;StreamPrintService&lt;/code&gt; class is obtained from a &lt;a href=&quot;streamprintservicefactory&quot;&gt;&lt;code&gt;StreamPrintServiceFactory&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このクラスは&lt;a href=&quot;printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; &lt;/a&gt;を拡張し、クライアントが提供する出力ストリームにさまざまな形式でデータを印刷する印刷サービスを表します。これは主に、出力形式が表示またはアーカイブに適したドキュメントタイプであるサービスを対象としています。出力形式はMIMEタイプとして宣言する必要があります。これは、表現クラスが常に「java.io.OutputStream」である出力ドキュメントフレーバーと同等です &lt;code&gt;StreamPrintService&lt;/code&gt; クラスのインスタンスは、&lt;a href=&quot;streamprintservicefactory&quot;&gt; &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; &lt;/a&gt;インスタンスから取得されます。</target>
        </trans-unit>
        <trans-unit id="8b2cee8723f0682d562cbfd968a38cc915af5e1a" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ServerSocket&lt;/code&gt;s and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</source>
          <target state="translated">このクラスは &lt;code&gt;ServerSocket&lt;/code&gt; を拡張し、Secure Sockets Layer（SSL）またはTransport Layer Security（TLS）プロトコルなどのプロトコルを使用して安全なサーバーソケットを提供します。</target>
        </trans-unit>
        <trans-unit id="d8efeac981cc313c07ad5b341e7a806e991c63d7" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;Socket&lt;/code&gt;s and provides secure socket using protocols such as the &quot;Secure Sockets Layer&quot; (SSL) or IETF &quot;Transport Layer Security&quot; (TLS) protocols.</source>
          <target state="translated">このクラスは &lt;code&gt;Socket&lt;/code&gt; を拡張し、 &quot;Secure Sockets Layer&quot;（SSL）またはIETF &quot;Transport Layer Security&quot;（TLS）プロトコルなどのプロトコルを使用して安全なソケットを提供します。</target>
        </trans-unit>
        <trans-unit id="6d5bad603f01a52f40d16a5d42fa59411d47f088" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ThreadLocal&lt;/code&gt; to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values.</source>
          <target state="translated">このクラスは &lt;code&gt;ThreadLocal&lt;/code&gt; を拡張して、親スレッドから子スレッドへの値の継承を提供します。子スレッドが作成されると、子は、親が値を持つすべての継承可能なスレッドローカル変数の初期値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="61cf9e599bd69e17a1f21ad16e7f04aebe6304d0" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;ThreadLocal&lt;/code&gt; to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child's values will be identical to the parent's; however, the child's value can be made an arbitrary function of the parent's by overriding the &lt;code&gt;childValue&lt;/code&gt; method in this class.</source>
          <target state="translated">このクラスは &lt;code&gt;ThreadLocal&lt;/code&gt; を拡張して、親スレッドから子スレッドへの値の継承を提供します。子スレッドが作成されると、子は、親が値を持つすべての継承可能なスレッドローカル変数の初期値を受け取ります。通常、子の値は親の値と同じです。ただし、このクラスの &lt;code&gt;childValue&lt;/code&gt; メソッドをオーバーライドすることにより、子の値を親の任意の関数にすることができます。</target>
        </trans-unit>
        <trans-unit id="0780edb1d92a454e50a61e6a3acb5cdc9197c84e" translate="yes" xml:space="preserve">
          <source>This class extends &lt;code&gt;javax.management.MBeanFeatureInfo&lt;/code&gt; and thus provides &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; fields. The &lt;code&gt;name&lt;/code&gt; field should be the fully qualified Java class name of the notification objects described by this class.</source>
          <target state="translated">このクラスは &lt;code&gt;javax.management.MBeanFeatureInfo&lt;/code&gt; を拡張し、 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;description&lt;/code&gt; フィールドを提供します。 &lt;code&gt;name&lt;/code&gt; フィールドには、このクラスで記述通知オブジェクトの完全修飾Javaクラス名でなければなりません。</target>
        </trans-unit>
        <trans-unit id="79411ae38bda3676bbd057e31ea7c77af07c30b0" translate="yes" xml:space="preserve">
          <source>This class extends ClassLoader with additional support for defining classes with an associated code source and permissions which are retrieved by the system policy by default.</source>
          <target state="translated">このクラスは ClassLoader を拡張し、デフォルトではシステムポリシーによって取得される関連するコードソースとパーミッションを持つクラスを定義するための追加のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="80fd8d0442ed8d6ca7099a0928889c31d6da43cc" translate="yes" xml:space="preserve">
          <source>This class extends the concept of a codebase to encapsulate not only the location (URL) but also the certificate chains that were used to verify signed code originating from that location.</source>
          <target state="translated">このクラスは、コードベースの概念を拡張し、その場所(URL)だけでなく、その場所から発信された署名付きコードを検証するために使用された証明書チェーンもカプセル化します。</target>
        </trans-unit>
        <trans-unit id="20cbb526b48b2f6f9e0788d4a54943b1653177c6" translate="yes" xml:space="preserve">
          <source>This class handles conversion from the local time-line of &lt;code&gt;LocalDateTime&lt;/code&gt; to the instant time-line of &lt;code&gt;Instant&lt;/code&gt;. The difference between the two time-lines is the offset from UTC/Greenwich, represented by a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;LocalDateTime&lt;/code&gt; のローカルタイムラインから &lt;code&gt;Instant&lt;/code&gt; のインスタントタイムラインへの変換を処理します。2つのタイムラインの違いは、 &lt;code&gt;ZoneOffset&lt;/code&gt; で表されるUTC /グリニッジからのオフセットです。</target>
        </trans-unit>
        <trans-unit id="b4b932d45ae5c58a5d969eda80df032fc50a1bbc" translate="yes" xml:space="preserve">
          <source>This class has one tuning parameter (which affects performance but not semantics):</source>
          <target state="translated">このクラスにはチューニングパラメータが1つあります(パフォーマンスには影響しますが、セマンティクスには影響しません)。</target>
        </trans-unit>
        <trans-unit id="70113f3193141e1f041370d6ac6ba662a48c28f3" translate="yes" xml:space="preserve">
          <source>This class has the following properties:</source>
          <target state="translated">このクラスは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="6d13ba8d22873fec38f5fdb9655962f8d07b5525" translate="yes" xml:space="preserve">
          <source>This class implements &lt;a href=&quot;temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;temporal/temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt;. This is because it is not possible to define whether February 29th is valid or not without external information, preventing the implementation of plus/minus. Related to this, &lt;code&gt;MonthDay&lt;/code&gt; only provides access to query and set the fields &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;temporal/temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; Accessorを&lt;/a&gt;実装します。これは、2月29日が外部情報なしでは有効かどうかを定義できず、プラス/マイナスの実装が妨げられるためです。これに関連して、 &lt;code&gt;MonthDay&lt;/code&gt; はクエリへのアクセスとフィールド &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; の設定のみを提供します。</target>
        </trans-unit>
        <trans-unit id="baad76a02be640103b9ef84e83db7f714f95545e" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as a character-input stream.</source>
          <target state="translated">このクラスは、文字入力ストリームとして使用できる文字バッファを実装しています。</target>
        </trans-unit>
        <trans-unit id="1d1a1f0c028a92e072814256e8f4eb63bad6fa1d" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as an Writer.</source>
          <target state="translated">このクラスは、Writerとして使用できる文字バッファを実装しています。</target>
        </trans-unit>
        <trans-unit id="de33e90606c927d634844e37c43bab24c76b5361" translate="yes" xml:space="preserve">
          <source>This class implements a character buffer that can be used as an Writer. The buffer automatically grows when data is written to the stream. The data can be retrieved using toCharArray() and toString().</source>
          <target state="translated">このクラスは、Writerとして使用できる文字バッファを実装しています。データがストリームに書き込まれると、バッファは自動的に成長します。データは toCharArray()および toString()を使用して取得することができます。</target>
        </trans-unit>
        <trans-unit id="a33c9373a2537042b50b3e84133347112a203ce6" translate="yes" xml:space="preserve">
          <source>This class implements a concurrent variant of &lt;a href=&quot;http://en.wikipedia.org/wiki/Skip_list&quot;&gt;SkipLists&lt;/a&gt; providing expected average</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://en.wikipedia.org/wiki/Skip_list&quot;&gt;SkipListsの&lt;/a&gt;同時バリアントを実装し、予想平均を提供します</target>
        </trans-unit>
        <trans-unit id="2b5d82534a0f233b03424a9f07ca7a811318e1aa" translate="yes" xml:space="preserve">
          <source>This class implements a decoder for decoding byte data using the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.</source>
          <target state="translated">このクラスは、RFC4648 および RFC2045 で規定されている Base64 エンコーディング方式を用いてバイトデータをデコードするためのデコーダを実装しています。</target>
        </trans-unit>
        <trans-unit id="4f3639215ee0d1bb5b232f24c89ffd529e2afcaf" translate="yes" xml:space="preserve">
          <source>This class implements a hash table, which maps keys to values.</source>
          <target state="translated">このクラスは、キーを値にマッピングするハッシュテーブルを実装しています。</target>
        </trans-unit>
        <trans-unit id="1afbbca910b972820ee6e671ebad24d463657bbd" translate="yes" xml:space="preserve">
          <source>This class implements a hash table, which maps keys to values. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key or as a value.</source>
          <target state="translated">このクラスは、キーを値にマップするハッシュテーブルを実装します。任意の非 &lt;code&gt;null&lt;/code&gt; オブジェクトがキーとして、または値として使用することができます。</target>
        </trans-unit>
        <trans-unit id="3482ce37d428075fdb1a327b831a0f648f0c8f45" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for reading compressed data in the GZIP file format.</source>
          <target state="translated">GZIPファイル形式で圧縮されたデータを読み込むためのストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="e57935a75c00f55d0a7c2b4a770d5088109669b9" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for uncompressing data in the &quot;deflate&quot; compression format.</source>
          <target state="translated">このクラスは、&quot;deflate &quot;圧縮形式のデータを解凍するためのストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="1a389365e0ee166c500af91b15a408c1d800eafd" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for uncompressing data in the &quot;deflate&quot; compression format. It is also used as the basis for other decompression filters, such as GZIPInputStream.</source>
          <target state="translated">このクラスは、「deflate」圧縮形式のデータを解凍するためのストリームフィルタを実装しています。また、GZIPInputStreamのような他の解凍フィルタの基礎としても使用されます。</target>
        </trans-unit>
        <trans-unit id="7d32b9ae2ddeec1e957e4c9b4a9fa002314c0e37" translate="yes" xml:space="preserve">
          <source>This class implements a stream filter for writing compressed data in the GZIP file format.</source>
          <target state="translated">GZIPファイル形式で圧縮されたデータを書き込むためのストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="a3e2dd706f2a4c8a1ccd16cb574b686e61831f2a" translate="yes" xml:space="preserve">
          <source>This class implements a vector of bits that grows as needed.</source>
          <target state="translated">このクラスは、必要に応じて成長するビットのベクトルを実装しています。</target>
        </trans-unit>
        <trans-unit id="01ed67a1fb887460141312271abdaa85e27af705" translate="yes" xml:space="preserve">
          <source>This class implements a vector of bits that grows as needed. Each component of the bit set has a &lt;code&gt;boolean&lt;/code&gt; value. The bits of a &lt;code&gt;BitSet&lt;/code&gt; are indexed by nonnegative integers. Individual indexed bits can be examined, set, or cleared. One &lt;code&gt;BitSet&lt;/code&gt; may be used to modify the contents of another &lt;code&gt;BitSet&lt;/code&gt; through logical AND, logical inclusive OR, and logical exclusive OR operations.</source>
          <target state="translated">このクラスは、必要に応じて拡大するビットのベクトルを実装します。ビットセットの各コンポーネントには &lt;code&gt;boolean&lt;/code&gt; 値があります。 &lt;code&gt;BitSet&lt;/code&gt; のビットは、負でない整数によってインデックスが付けられます。個々のインデックス付きビットは、検査、設定、またはクリアできます。1つの &lt;code&gt;BitSet&lt;/code&gt; を使用して、論理AND、論理包含OR、および論理排他OR演算を介して別の &lt;code&gt;BitSet&lt;/code&gt; の内容を変更できます。</target>
        </trans-unit>
        <trans-unit id="e6e2670f7d2d9b1dc4ec24ec27fc10c0d3b27504" translate="yes" xml:space="preserve">
          <source>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname.</source>
          <target state="translated">このクラスはIPソケットアドレス(IPアドレス+ポート番号)を実装しています。 また、ペア(ホスト名+ポート番号)にすることもできます。</target>
        </trans-unit>
        <trans-unit id="1fa0726ccfeaebc3e77d348232ff4528921df650" translate="yes" xml:space="preserve">
          <source>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname. If resolution fails then the address is said to be</source>
          <target state="translated">このクラスは IP ソケットアドレス (IP アドレス+ポート番号)を実装しています。 また、ペア (ホスト名+ポート番号)にすることもできます。解決に失敗した場合、そのアドレスは</target>
        </trans-unit>
        <trans-unit id="fc6b822e66836a77598fe631f58367d5d54287ff" translate="yes" xml:space="preserve">
          <source>This class implements an encoder for encoding byte data using the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.</source>
          <target state="translated">このクラスは、RFC4648 および RFC2045 で規定されている Base64 エンコーディング方式を用いてバイトデータをエンコーディングするためのエンコーダを実装しています。</target>
        </trans-unit>
        <trans-unit id="098977e9d2407edeb71b650754e80ccc9eb33ffc" translate="yes" xml:space="preserve">
          <source>This class implements an input stream filter for reading files in the ZIP file format.</source>
          <target state="translated">このクラスは、ZIP ファイル形式のファイルを読み込むための入力ストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="3b06ccf19ef90ba80b3384247cd1a192fe265ae0" translate="yes" xml:space="preserve">
          <source>This class implements an input stream filter for reading files in the ZIP file format. Includes support for both compressed and uncompressed entries.</source>
          <target state="translated">このクラスは、ZIP ファイル形式のファイルを読み込むための入力ストリームフィルタを実装しています。圧縮エントリと非圧縮エントリの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="2f90f14711c964b2a80a941d9bdf327bf9a1e149" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for compressing data in the &quot;deflate&quot; compression format.</source>
          <target state="translated">このクラスは、&quot;deflate &quot;圧縮フォーマットでデータを圧縮するための出力ストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="78a9cfdd21803201bf731967c8a1ff7bba457b74" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for compressing data in the &quot;deflate&quot; compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream.</source>
          <target state="translated">このクラスは、「deflate」圧縮形式でデータを圧縮するための出力ストリームフィルタを実装しています。また、GZIPOutputStreamのような他のタイプの圧縮フィルタの基礎としても使用されます。</target>
        </trans-unit>
        <trans-unit id="4ec9b412e0f3542534bd54ad7aeaf28cfcbbc42a" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for writing files in the ZIP file format.</source>
          <target state="translated">ZIPファイル形式でファイルを書き込むための出力ストリームフィルタを実装しています。</target>
        </trans-unit>
        <trans-unit id="f9235a6e06a2b74b9ede6b10c9fb06d29a8e932f" translate="yes" xml:space="preserve">
          <source>This class implements an output stream filter for writing files in the ZIP file format. Includes support for both compressed and uncompressed entries.</source>
          <target state="translated">このクラスは、ZIP ファイル形式でファイルを書き込むための出力ストリームフィルタを実装しています。圧縮エントリと非圧縮エントリの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="abea2c7a576b4dbdd0fd3bc7b0b8cc11a1e53f22" translate="yes" xml:space="preserve">
          <source>This class implements an output stream in which the data is written into a byte array.</source>
          <target state="translated">データをバイト配列に書き込む出力ストリームを実装しています。</target>
        </trans-unit>
        <trans-unit id="549b64956f9981b4003014c36a37b78ce6da64e1" translate="yes" xml:space="preserve">
          <source>This class implements an output stream in which the data is written into a byte array. The buffer automatically grows as data is written to it. The data can be retrieved using &lt;code&gt;toByteArray()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">このクラスは、データがバイト配列に書き込まれる出力ストリームを実装します。データが書き込まれると、バッファは自動的に大きくなります。データは &lt;code&gt;toByteArray()&lt;/code&gt; および &lt;code&gt;toString()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="ce4f47882a1ffec82dc6c4b0f1b95934cbde7c36" translate="yes" xml:space="preserve">
          <source>This class implements client sockets (also called just &quot;sockets&quot;).</source>
          <target state="translated">このクラスはクライアントソケット(単に「ソケット」とも呼ばれます)を実装しています。</target>
        </trans-unit>
        <trans-unit id="cc174a1ccc47b28c856fb71309214f251bc1137c" translate="yes" xml:space="preserve">
          <source>This class implements client sockets (also called just &quot;sockets&quot;). A socket is an endpoint for communication between two machines.</source>
          <target state="translated">このクラスはクライアントソケット(単に「ソケット」とも呼ばれます)を実装しています。ソケットは、2 台のマシン間の通信のためのエンドポイントです。</target>
        </trans-unit>
        <trans-unit id="115afcbd0827348c0d6d0af9346fadc9103a21b3" translate="yes" xml:space="preserve">
          <source>This class implements of the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface for the &lt;a href=&quot;attributechangenotification&quot;&gt;&lt;code&gt;attribute change notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;attributechangenotification&quot;&gt; &lt;code&gt;attribute change notification&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt;インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="bfdfb7f8c2cd45f6183663376b83dc36c0c4399c" translate="yes" xml:space="preserve">
          <source>This class implements of the &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt; interface for the &lt;a href=&quot;attributechangenotification&quot;&gt;&lt;code&gt;attribute change notification&lt;/code&gt;&lt;/a&gt;. The filtering is performed on the name of the observed attribute.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;attributechangenotification&quot;&gt; &lt;code&gt;attribute change notification&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; &lt;/a&gt;インターフェースを実装します。フィルタリングは、監視対象の属性の名前に対して実行されます。</target>
        </trans-unit>
        <trans-unit id="c5a1b8ef3eb99d8acc7197735ca0e28fae6b2ee0" translate="yes" xml:space="preserve">
          <source>This class implements server sockets.</source>
          <target state="translated">このクラスはサーバソケットを実装しています。</target>
        </trans-unit>
        <trans-unit id="ab4e961fe3fd57910bc42ba11c3d3ea61d5dc018" translate="yes" xml:space="preserve">
          <source>This class implements server sockets. A server socket waits for requests to come in over the network. It performs some operation based on that request, and then possibly returns a result to the requester.</source>
          <target state="translated">このクラスはサーバソケットを実装しています。サーバソケットはネットワーク経由でリクエストが来るのを待ちます。そのリクエストに基づいて何らかの処理を行い、結果を要求元に返すこともあります。</target>
        </trans-unit>
        <trans-unit id="a1bd35a92d7c9f959f0803313b9abd37c694be67" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;../lang/charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface so that character buffers may be used wherever character sequences are accepted, for example in the regular-expression package &lt;code&gt;&lt;a href=&quot;../util/regex/package-summary&quot;&gt;&lt;code&gt;java.util.regex&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このクラスは&lt;a href=&quot;../lang/charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt;インターフェースを実装しているため、たとえば正規表現パッケージ &lt;code&gt;&lt;a href=&quot;../util/regex/package-summary&quot;&gt;&lt;code&gt;java.util.regex&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; のように、文字シーケンスが受け入れられる場所であればどこでも文字バッファーを使用できます。</target>
        </trans-unit>
        <trans-unit id="3cba6c5dab24c2c3a14a2205b5f7075955603acd" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; type as defined in PKCS #8.</source>
          <target state="translated">このクラスは、PKCS＃8で定義されている &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; タイプを実装します。</target>
        </trans-unit>
        <trans-unit id="2c85a8537f4799bebae3138366bfa7ac70b6ad81" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Map&lt;/code&gt; interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).</source>
          <target state="translated">このクラスは、ハッシュテーブルを使用して &lt;code&gt;Map&lt;/code&gt; インターフェイスを実装し、キー（および値）を比較するときに、オブジェクトの等価性の代わりに参照の等価性を使用します。</target>
        </trans-unit>
        <trans-unit id="cff55ae97711824a1154b4780df0d396383a5dca" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Map&lt;/code&gt; interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). In other words, in an &lt;code&gt;IdentityHashMap&lt;/code&gt;, two keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; are considered equal if and only if &lt;code&gt;(k1==k2)&lt;/code&gt;. (In normal &lt;code&gt;Map&lt;/code&gt; implementations (like &lt;code&gt;HashMap&lt;/code&gt;) two keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; are considered equal if and only if &lt;code&gt;(k1==null ? k2==null : k1.equals(k2))&lt;/code&gt;.)</source>
          <target state="translated">このクラスは、ハッシュテーブルを使用して &lt;code&gt;Map&lt;/code&gt; インターフェイスを実装し、キー（および値）を比較するときに、オブジェクトの等価性の代わりに参照の等価性を使用します。つまり、 &lt;code&gt;IdentityHashMap&lt;/code&gt; では、 &lt;code&gt;(k1==k2)&lt;/code&gt; 場合にのみ、2つのキー &lt;code&gt;k1&lt;/code&gt; と &lt;code&gt;k2&lt;/code&gt; が等しいと見なされます。（通常の &lt;code&gt;Map&lt;/code&gt; 実装（ &lt;code&gt;HashMap&lt;/code&gt; など）では、2つのキー &lt;code&gt;k1&lt;/code&gt; と &lt;code&gt;k2&lt;/code&gt; は &lt;code&gt;(k1==null ? k2==null : k1.equals(k2))&lt;/code&gt; 場合にのみ等しいと見なされます。）</target>
        </trans-unit>
        <trans-unit id="dc0d68cb04b2f9ddf0d6666cdb1917011ae012ae" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Set&lt;/code&gt; interface, backed by a hash table (actually a &lt;code&gt;HashMap&lt;/code&gt; instance).</source>
          <target state="translated">このクラスは、ハッシュテーブル（実際には &lt;code&gt;HashMap&lt;/code&gt; インスタンス）に基づく &lt;code&gt;Set&lt;/code&gt; インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="e55fac8a1edacfcc68482b02dc802150c59dfa28" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;Set&lt;/code&gt; interface, backed by a hash table (actually a &lt;code&gt;HashMap&lt;/code&gt; instance). It makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time. This class permits the &lt;code&gt;null&lt;/code&gt; element.</source>
          <target state="translated">このクラスは、ハッシュテーブル（実際には &lt;code&gt;HashMap&lt;/code&gt; インスタンス）に基づく &lt;code&gt;Set&lt;/code&gt; インターフェースを実装します。セットの反復順序については保証されません。特に、順序が一定であるとは限りません。このクラスは &lt;code&gt;null&lt;/code&gt; 要素を許可します。</target>
        </trans-unit>
        <trans-unit id="65fc0e9ffefba5408169db17abbe7c9d7bdb32b2" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Control for paged-results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;&gt;RFC 2696&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;&gt;RFC 2696で&lt;/a&gt;定義されているページ結果のLDAPv3コントロールを実装します。コントロールの値には、次のASN.1定義があります。</target>
        </trans-unit>
        <trans-unit id="1f595d708b0121a74084d3162c6951639f1daaaa" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Extended Request for StartTLS as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security&lt;/a&gt; The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended request value is defined.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;ライトウェイトディレクトリアクセスプロトコル（v3）で&lt;/a&gt;定義されているように、StartTLSのLDAPv3拡張要求を実装します。トランスポート層セキュリティの拡張StartTLSのオブジェクト識別子は1.3.6.1.4.1.1466.20037であり、拡張要求値は定義されていません。</target>
        </trans-unit>
        <trans-unit id="39cf6249a0ce18f93fb3383fda1deb09f4599850" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Extended Response for StartTLS as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;Lightweight Directory Access Protocol (v3): Extension for Transport Layer Security&lt;/a&gt; The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037 and no extended response value is defined.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2830.txt&quot;&gt;ライトウェイトディレクトリアクセスプロトコル（v3）で&lt;/a&gt;定義されているStartTLSのLDAPv3拡張応答を実装しています。トランスポート層セキュリティの拡張機能 StartTLSのオブジェクト識別子は1.3.6.1.4.1.1466.20037であり、拡張応答値は定義されていません。</target>
        </trans-unit>
        <trans-unit id="5dc7ec26cb11f66381c895667e802166bedc7f90" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Request Control for ManageDsaIT as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3296.txt&quot;&gt;RFC 3296&lt;/a&gt;. The control has no control value.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3296.txt&quot;&gt;RFC 3296で&lt;/a&gt;定義されているように、ManageDsaITのLDAPv3要求制御を実装します。コントロールにはコントロール値がありません。</target>
        </trans-unit>
        <trans-unit id="fd113787648245439787720312dcfaa47bb92996" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Request Control for server-side sorting as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891で&lt;/a&gt;定義されているサーバー側の並べ替え用のLDAPv3要求制御を実装します。コントロールの値には、次のASN.1定義があります。</target>
        </trans-unit>
        <trans-unit id="4b38ced794fddf3aae0a4be62444ea3327c4469e" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Response Control for paged-results as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696&quot;&gt;RFC 2696&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2696&quot;&gt;RFC 2696で&lt;/a&gt;定義されているページ結果のLDAPv3応答制御を実装します。コントロールの値には、次のASN.1定義があります。</target>
        </trans-unit>
        <trans-unit id="dedc22457b24d662c95dfbd6e3fffc74f58a46cd" translate="yes" xml:space="preserve">
          <source>This class implements the LDAPv3 Response Control for server-side sorting as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891&lt;/a&gt;. The control's value has the following ASN.1 definition:</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2891.txt&quot;&gt;RFC 2891で&lt;/a&gt;定義されているサーバー側の並べ替え用のLDAPv3応答制御を実装します。コントロールの値には、次のASN.1定義があります。</target>
        </trans-unit>
        <trans-unit id="2e8b2fbb6ba6e6cc4dbd749bb8f4b4b6f78e5a88" translate="yes" xml:space="preserve">
          <source>This class implements the Unicode Bidirectional Algorithm.</source>
          <target state="translated">このクラスは、Unicode双方向性アルゴリズムを実装しています。</target>
        </trans-unit>
        <trans-unit id="6c7be12641a6fb204795114b7b5ed46a804d3c09" translate="yes" xml:space="preserve">
          <source>This class incorrectly assumes that bytes adequately represent characters.</source>
          <target state="translated">このクラスは、バイトが文字を適切に表現すると仮定しているのが間違っています。</target>
        </trans-unit>
        <trans-unit id="2218ada1b5806864164463099508081ef7d157e5" translate="yes" xml:space="preserve">
          <source>This class incorrectly assumes that bytes adequately represent characters. As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.</source>
          <target state="translated">このクラスは、バイトが文字を適切に表現していると誤って仮定しています。JDK 1.1 では、文字ストリームを操作するための好ましい方法は、行番号をカウントするクラスを含む新しい文字ストリーム・クラスを介して行うことです。</target>
        </trans-unit>
        <trans-unit id="f14e3b407357f9cce651c259b5c16d7f748eb980" translate="yes" xml:space="preserve">
          <source>This class is Serializable, but all fields are transient, so deserialized conditions have no waiters.</source>
          <target state="translated">このクラスはシリアライズ可能ですが、すべてのフィールドは過渡的なものなので、デシリアライズされた条件にはウェイターがありません。</target>
        </trans-unit>
        <trans-unit id="a1cfd4a949232c7b25ea5e7b14b2468c8561fc12" translate="yes" xml:space="preserve">
          <source>This class is a collection of UI convenience methods which provide a graphical user dialog for browsing print services looked up through the Java Print Service API.</source>
          <target state="translated">このクラスは、Java Print Service API を通じて検索された印刷サービスを閲覧するためのグラフィカルなユーザーダイアログを提供する UI 便利なメソッドのコレクションです。</target>
        </trans-unit>
        <trans-unit id="9d778150f4d35c00bae50d428b4c01af107eea31" translate="yes" xml:space="preserve">
          <source>This class is a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Frameworkの&lt;/a&gt;メンバーです。</target>
        </trans-unit>
        <trans-unit id="ae73a21168a485b76a1ac50247c626ccd23df9df" translate="yes" xml:space="preserve">
          <source>This class is a mutable builder intended for use from a single thread.</source>
          <target state="translated">このクラスは、単一スレッドからの使用を目的としたミューティアブル・ビルダーです。</target>
        </trans-unit>
        <trans-unit id="d583808e2526b135dffcab6a097906137b611799" translate="yes" xml:space="preserve">
          <source>This class is a simple holder for a key pair (a public key and a private key).</source>
          <target state="translated">このクラスは、鍵ペア(公開鍵と秘密鍵)のシンプルなホルダーです。</target>
        </trans-unit>
        <trans-unit id="820cbd2e7b7d06b8267dc3b72ab349617e4e8157" translate="yes" xml:space="preserve">
          <source>This class is a simple holder for a key pair (a public key and a private key). It does not enforce any security, and, when initialized, should be treated like a PrivateKey.</source>
          <target state="translated">このクラスは、鍵ペア(公開鍵と秘密鍵)の単純なホルダーです。これはセキュリティを強制するものではなく、初期化されたときには PrivateKey のように扱われます。</target>
        </trans-unit>
        <trans-unit id="51babbce1e4e09bcc1b8784134a6a7fade70b099" translate="yes" xml:space="preserve">
          <source>This class is a useful aid for creating a spliterator when it is not possible or difficult to efficiently partition elements in a manner allowing balanced parallel computation.</source>
          <target state="translated">このクラスは,バランスのとれた並列計算を可能にする方法で効率的に要素を分割することができない場合や困難な場合に,スプリッタを作成するのに役立ちます.</target>
        </trans-unit>
        <trans-unit id="0ee878f59ddfc490048939466c41b0731a3b2831" translate="yes" xml:space="preserve">
          <source>This class is an abstraction for certificates that have different formats but important common uses. For example, different types of certificates, such as X.509 and PGP, share general certificate functionality (like encoding and verifying) and some types of information (like a public key).</source>
          <target state="translated">このクラスは、異なるフォーマットを持つが重要な共通の用途を持つ証明書を抽象化したものです。例えば、X.509 や PGP のような異なるタイプの証明書は、一般的な証明書の機能 (エンコードや検証など)といくつかのタイプの情報 (公開鍵など)を共有しています。</target>
        </trans-unit>
        <trans-unit id="c5609aa75f44c6153cfd605bcd7d877b783504e2" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of certificate revocation lists (CRLs) that have different formats but important common uses.</source>
          <target state="translated">このクラスは、異なるフォーマットを持つが重要な共通の用途を持つ証明書失効リスト(CRL)の抽象化です。</target>
        </trans-unit>
        <trans-unit id="0291f23ff11fec678a3c29c6bc6545dc3baac078" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of certificate revocation lists (CRLs) that have different formats but important common uses. For example, all CRLs share the functionality of listing revoked certificates, and can be queried on whether or not they list a given certificate.</source>
          <target state="translated">このクラスは、形式は異なるが重要な共通の用途を持つ証明書失効リスト(CRL)を抽象化したものです。たとえば、すべての CRL は失効した証明書をリストアップする機能を共有しており、特定の証明書をリストアップしているかどうかを問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="d43115f6922f2c068b7296647bbaa635cfec4424" translate="yes" xml:space="preserve">
          <source>This class is an extension of &lt;code&gt;NamingManager&lt;/code&gt;. It contains methods for use by service providers for accessing object factories and state factories, and for getting continuation contexts for supporting federation.</source>
          <target state="translated">このクラスは &lt;code&gt;NamingManager&lt;/code&gt; の拡張です。これには、サービスプロバイダーがオブジェクトファクトリと状態ファクトリにアクセスするため、およびフェデレーションをサポートするための継続コンテキストを取得するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="5e7b82996e97910b513075b5af1cf32f8d2eebf6" translate="yes" xml:space="preserve">
          <source>This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests.</source>
          <target state="translated">このクラスは、多くの一般的な印刷要求で使用できる &lt;code&gt;Doc&lt;/code&gt; インターフェースの実装です。</target>
        </trans-unit>
        <trans-unit id="a18ed58769607c8c048964840e94cbe383504b75" translate="yes" xml:space="preserve">
          <source>This class is an implementation of interface &lt;code&gt;Doc&lt;/code&gt; that can be used in many common printing requests. It can handle all of the presently defined &quot;pre-defined&quot; doc flavors defined as static variables in the DocFlavor class.</source>
          <target state="translated">このクラスは、多くの一般的な印刷要求で使用できる &lt;code&gt;Doc&lt;/code&gt; インターフェースの実装です。 DocFlavorクラスで静的変数として定義されている、現在定義されている「事前定義された」ドキュメントフレーバーをすべて処理できます。</target>
        </trans-unit>
        <trans-unit id="9e7316afef7a52ab20f47b95a62ecfbe3c758038" translate="yes" xml:space="preserve">
          <source>This class is an input stream filter that provides the added functionality of keeping track of the current line number.</source>
          <target state="translated">このクラスは、現在の行番号を追跡する機能を追加した入力ストリームフィルタです。</target>
        </trans-unit>
        <trans-unit id="1ced21a75d8a42fe694a2ee35274ec56b54ea257" translate="yes" xml:space="preserve">
          <source>This class is designed for use with the ISO calendar system. The fields of hours, minutes and seconds make assumptions that are valid for the standard ISO definitions of those fields. This class may be used with other calendar systems providing the definition of the time fields matches those of the ISO calendar system.</source>
          <target state="translated">このクラスは、ISOカレンダーシステムで使用するために設計されています。時、分、秒のフィールドは、それらのフィールドの標準的なISOの定義に対して有効な仮定をしています。このクラスは、時間フィールドの定義がISOカレンダシステムのものと一致していれば、他のカレンダシステムと一緒に使用することができます。</target>
        </trans-unit>
        <trans-unit id="9b2362cd1aa51b3e17ae66a56b8d4233cf23ae53" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the decoding process, including the implementation of error actions. A decoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic decoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">このクラスは、エラーアクションの実装を含む、デコードプロセスの詳細の多くを処理するように設計されています。このクラスの具象サブクラスである特定の文字セットのデコーダーは、基本的なデコードループをカプセル化する抽象&lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt;メソッドを実装するだけで済みます。さらに、内部状態を維持するサブクラスは、&lt;a href=&quot;charsetdecoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt;メソッドとimplResetメソッドをオーバーライドする&lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;あります。</target>
        </trans-unit>
        <trans-unit id="13f03733315c0ce8ed4415eee284ec88ab9169a1" translate="yes" xml:space="preserve">
          <source>This class is designed to handle many of the details of the encoding process, including the implementation of error actions. An encoder for a specific charset, which is a concrete subclass of this class, need only implement the abstract &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, which encapsulates the basic encoding loop. A subclass that maintains internal state should, additionally, override the &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charsetencoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">このクラスは、エラーアクションの実装を含む、エンコーディングプロセスの詳細の多くを処理するように設計されています。このクラスの具象サブクラスである特定の文字セットのエンコーダーは、基本的なエンコードループをカプセル化する抽象&lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt;メソッドを実装するだけで済みます。さらに、内部状態を維持するサブクラスは、&lt;a href=&quot;charsetencoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt;メソッドとimplResetメソッドをオーバーライドする&lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;あります。</target>
        </trans-unit>
        <trans-unit id="3240cc4afb6076454063206022fe6517d12d0d64" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of doubles with:</source>
          <target state="translated">このクラスは、（必須ではありませんが）&lt;a href=&quot;stream/package-summary&quot;&gt;ストリームで&lt;/a&gt;動作するように設計されています。たとえば、次のコマンドを使用してdoubleのストリームの要約統計を計算できます。</target>
        </trans-unit>
        <trans-unit id="534bf987e2d9f7c4f4fb1edd2c8721e673a2621f" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of ints with:</source>
          <target state="translated">このクラスは、（必須ではありませんが）&lt;a href=&quot;stream/package-summary&quot;&gt;ストリームで&lt;/a&gt;動作するように設計されています。たとえば、次のコマンドを使用して、intのストリームの要約統計を計算できます。</target>
        </trans-unit>
        <trans-unit id="c52e6dd8b18199a8f82ef12d5c2918291e0b7cf1" translate="yes" xml:space="preserve">
          <source>This class is designed to work with (though does not require) &lt;a href=&quot;stream/package-summary&quot;&gt;streams&lt;/a&gt;. For example, you can compute summary statistics on a stream of longs with:</source>
          <target state="translated">このクラスは、（必須ではありませんが）&lt;a href=&quot;stream/package-summary&quot;&gt;ストリームで&lt;/a&gt;動作するように設計されています。たとえば、次のコマンドを使用してlongのストリームの要約統計を計算できます。</target>
        </trans-unit>
        <trans-unit id="84d53fdae707712d0381e94f7dc21be6cf91f41e" translate="yes" xml:space="preserve">
          <source>This class is for Serializable permissions.</source>
          <target state="translated">このクラスはSerializableパーミッションのためのクラスです。</target>
        </trans-unit>
        <trans-unit id="0d1c4d1efe47256af28fe598bd92727eeb2782e8" translate="yes" xml:space="preserve">
          <source>This class is for Serializable permissions. A SerializablePermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスはシリアライズ可能なパーミッションのためのクラスです。SerializablePermission は名前(「ターゲット名」とも呼ばれる)を含みますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="d53779bd7f7cce6e4c7e911761f037e0abf7c9d0" translate="yes" xml:space="preserve">
          <source>This class is for authentication permissions.</source>
          <target state="translated">このクラスは、認証許可のためのクラスです。</target>
        </trans-unit>
        <trans-unit id="5f126780ee50931b1510cb11c1cef9786cd20a73" translate="yes" xml:space="preserve">
          <source>This class is for authentication permissions. An AuthPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスは認証パーミッションのためのクラスです。AuthPermission には名前 (「ターゲット名」とも呼ばれます)が含まれていますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="73f3bd1d9682040b3b23820eac252d315ab9fb0b" translate="yes" xml:space="preserve">
          <source>This class is for property permissions.</source>
          <target state="translated">このクラスはプロパティパーミッションのためのクラスです。</target>
        </trans-unit>
        <trans-unit id="cf38ff071520a9f69c63d16a27ca4bdaf3eecf9c" translate="yes" xml:space="preserve">
          <source>This class is for runtime permissions.</source>
          <target state="translated">このクラスは実行時のパーミッションのためのクラスです。</target>
        </trans-unit>
        <trans-unit id="da64c9a234bc5d4220da0b155b1bcc82e0a2873a" translate="yes" xml:space="preserve">
          <source>This class is for runtime permissions. A RuntimePermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスはランタイムパーミッションのためのクラスです。RuntimePermissionには名前(「ターゲット名」とも呼ばれる)が含まれていますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="f946b8ab89f87cbe6f5c790648f5cdeeb630b96f" translate="yes" xml:space="preserve">
          <source>This class is for security permissions.</source>
          <target state="translated">このクラスはセキュリティ権限のためのクラスです。</target>
        </trans-unit>
        <trans-unit id="7039081a2c0b67ea5473cb08a9d0475faa52319d" translate="yes" xml:space="preserve">
          <source>This class is for security permissions. A SecurityPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスはセキュリティパーミッションのためのクラスです。SecurityPermissionは名前(「ターゲット名」とも呼ばれます)を含みますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="983972e67289ccda7d34499493457e0efdad03ee" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions.</source>
          <target state="translated">このクラスは、様々なネットワークパーミッションのためのクラスです。</target>
        </trans-unit>
        <trans-unit id="4b479ce6e357940518728afad9719697ef2cb323" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions. A NetPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスは様々なネットワークパーミッションのためのクラスです。NetPermission は名前 (「ターゲット名」とも呼ばれます)を含みますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="3df37700c7b7b055b8f9c28ab127afc7e9516ccc" translate="yes" xml:space="preserve">
          <source>This class is for various network permissions. An SSLPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">このクラスは様々なネットワークパーミッションのためのクラスです。SSLPermissionには名前(「ターゲット名」とも呼ばれます)が含まれていますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="1efd3c02b16dbb6115b817a50e48113a428b6af7" translate="yes" xml:space="preserve">
          <source>This class is immutable and thread-safe.</source>
          <target state="translated">このクラスは不変でスレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="37b92d190d2b4d908f1a3b363886df450096e5f1" translate="yes" xml:space="preserve">
          <source>This class is implemented by a service and located by the implementation using the  SPI JAR File specification.</source>
          <target state="translated">このクラスはサービスによって実装され、SPI JAR ファイル仕様を使用して実装によって配置されます。</target>
        </trans-unit>
        <trans-unit id="3dcf0734baa4f30537279e3b95a469a4430aa2b3" translate="yes" xml:space="preserve">
          <source>This class is in conformance with Level 1 of &lt;a href=&quot;http://www.unicode.org/reports/tr18/&quot;&gt;&lt;i&gt;Unicode Technical Standard #18: Unicode Regular Expression&lt;/i&gt;&lt;/a&gt;, plus RL2.1 Canonical Equivalents.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;http://www.unicode.org/reports/tr18/&quot;&gt;&lt;i&gt;Unicode Technical Standard＃18：Unicode Regular Expressionの&lt;/i&gt;&lt;/a&gt;レベル1に加え、RL2.1 Canonical Equivalentsに準拠しています。</target>
        </trans-unit>
        <trans-unit id="164b1f255450de2132df34b2fc33bbfbd54b33fb" translate="yes" xml:space="preserve">
          <source>This class is intended for use in a single thread.</source>
          <target state="translated">このクラスはシングルスレッドでの使用を想定しています。</target>
        </trans-unit>
        <trans-unit id="eaa25a208a1545696e4b07e7a544a0930fdd83e9" translate="yes" xml:space="preserve">
          <source>This class is intended primarily for use with key objects whose &lt;code&gt;equals&lt;/code&gt; methods test for object identity using the &lt;code&gt;==&lt;/code&gt; operator. Once such a key is discarded it can never be recreated, so it is impossible to do a lookup of that key in a &lt;code&gt;WeakHashMap&lt;/code&gt; at some later time and be surprised that its entry has been removed. This class will work perfectly well with key objects whose &lt;code&gt;equals&lt;/code&gt; methods are not based upon object identity, such as &lt;code&gt;String&lt;/code&gt; instances. With such recreatable key objects, however, the automatic removal of &lt;code&gt;WeakHashMap&lt;/code&gt; entries whose keys have been discarded may prove to be confusing.</source>
          <target state="translated">このクラスは主に、 &lt;code&gt;==&lt;/code&gt; 演算子を使用してオブジェクトの同一性をテストする &lt;code&gt;equals&lt;/code&gt; メソッドのキーオブジェクトで使用することを目的としています。このようなキーが破棄されると、再作成することはできないため、後で &lt;code&gt;WeakHashMap&lt;/code&gt; でそのキーのルックアップを行うことは不可能であり、そのエントリが削除されたことに驚かされます。このクラスは、 &lt;code&gt;equals&lt;/code&gt; メソッドが &lt;code&gt;String&lt;/code&gt; インスタンスなどのオブジェクトIDに基づいていないキーオブジェクトと完全に連携します。ただし、このような再作成可能なキーオブジェクトでは、キーが破棄された &lt;code&gt;WeakHashMap&lt;/code&gt; エントリを自動的に削除すると、混乱を招く可能性があります。</target>
        </trans-unit>
        <trans-unit id="c7ce27329c1d1e958f1ffcae520eb7728a9796b0" translate="yes" xml:space="preserve">
          <source>This class is mostly for library writers presenting stream views of data structures; most static stream methods intended for end users are in the various &lt;code&gt;Stream&lt;/code&gt; classes.</source>
          <target state="translated">このクラスは主に、データ構造のストリームビューを提示するライブラリライター向けです。エンドユーザー向けのほとんどの静的ストリームメソッドは、さまざまな &lt;code&gt;Stream&lt;/code&gt; クラスにあります。</target>
        </trans-unit>
        <trans-unit id="1fe2a902b95293e868730a69eaf51ba0a0d6a9b0" translate="yes" xml:space="preserve">
          <source>This class is no longer used.</source>
          <target state="translated">このクラスはもう使われていません。</target>
        </trans-unit>
        <trans-unit id="660376da0a4ccb1bd664c468fe3e82f5289bd185" translate="yes" xml:space="preserve">
          <source>This class is no longer used. Its functionality has been replaced by &lt;code&gt;java.security.KeyStore&lt;/code&gt;, the &lt;code&gt;java.security.cert&lt;/code&gt; package, and &lt;code&gt;java.security.Principal&lt;/code&gt;.</source>
          <target state="translated">このクラスは使用されなくなりました。その機能は、 &lt;code&gt;java.security.KeyStore&lt;/code&gt; 、 &lt;code&gt;java.security.cert&lt;/code&gt; パッケージ、および &lt;code&gt;java.security.Principal&lt;/code&gt; に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="3d251b916db18946db2616285c0c642d5b48160d" translate="yes" xml:space="preserve">
          <source>This class is not intended to be used for general XML processing. In particular, &lt;code&gt;Element&lt;/code&gt; nodes created within the Image I/O API are not compatible with those created by Sun's standard implementation of the &lt;code&gt;org.w3.dom&lt;/code&gt; API. In particular, the implementation is tuned for simple uses and may not perform well for intensive processing.</source>
          <target state="translated">このクラスは、一般的なXML処理で使用するためのものではありません。特に、Image I / O API内で作成された &lt;code&gt;Element&lt;/code&gt; ノードは、Sunの &lt;code&gt;org.w3.dom&lt;/code&gt; API の標準実装によって作成されたものと互換性がありません。特に、実装は単純な使用法に合わせて調整されており、集中的な処理ではうまく機能しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="8eba7f6e6663740fa5ed4b67a90734a23c04b77e" translate="yes" xml:space="preserve">
          <source>This class is only useful for raw secret keys that can be represented as a byte array and have no key parameters associated with them, e.g., DES or Triple DES keys.</source>
          <target state="translated">このクラスは、バイト配列で表現され、鍵パラメータが関連付けられていない生の秘密鍵(例えば、DESやTriple DES鍵)にのみ有用である。</target>
        </trans-unit>
        <trans-unit id="871d9c7734a81df3162e85bc48a290b36b988829" translate="yes" xml:space="preserve">
          <source>This class is separated from the &lt;code&gt;Chronology&lt;/code&gt; interface so that the static methods are not inherited. While &lt;code&gt;Chronology&lt;/code&gt; can be implemented directly, it is strongly recommended to extend this abstract class instead.</source>
          <target state="translated">このクラスは、静的メソッドが継承されないように、 &lt;code&gt;Chronology&lt;/code&gt; インターフェースから分離されています。一方で &lt;code&gt;Chronology&lt;/code&gt; 直接実装することができ、強く代わりに、この抽象クラスを拡張することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="11169ff58ae451686a3bb3543b4e110f7e82ae52" translate="yes" xml:space="preserve">
          <source>This class is serializable. When it is serialized it will save (and restore) any listeners that are themselves serializable. Any non-serializable listeners will be skipped during serialization.</source>
          <target state="translated">このクラスはシリアライズ可能です。シリアライズされると、それ自体がシリアライズ可能なリスナーはすべて保存 (および復元)されます。シリアライズ可能でないリスナーは、シリアライズ中にスキップされます。</target>
        </trans-unit>
        <trans-unit id="9426781035a2e2be226ba027fd19bc80e14f02e2" translate="yes" xml:space="preserve">
          <source>This class is the base interface for hostname verification.</source>
          <target state="translated">このクラスは、ホスト名検証のための基本インターフェースです。</target>
        </trans-unit>
        <trans-unit id="d527d905ecd0201340a04d72f9921af6063a64b4" translate="yes" xml:space="preserve">
          <source>This class is the base interface for providing algorithm-specific information to a KeyManagerFactory or TrustManagerFactory.</source>
          <target state="translated">このクラスは、KeyManagerFactoryまたはTrustManagerFactoryにアルゴリズム固有の情報を提供するための基本インタフェースです。</target>
        </trans-unit>
        <trans-unit id="59e5f87ef8e36cef554f98c2e008f30d1f05a0d9" translate="yes" xml:space="preserve">
          <source>This class is the implementation of a ModelMBean.</source>
          <target state="translated">このクラスはModelMBeanの実装です。</target>
        </trans-unit>
        <trans-unit id="5ef4c4e335a9b9b553a000b7011fecc18fe31818" translate="yes" xml:space="preserve">
          <source>This class is the implementation of a ModelMBean. An appropriate implementation of a ModelMBean must be shipped with every JMX Agent and the class must be named RequiredModelMBean.</source>
          <target state="translated">このクラスはModelMBeanの実装です。ModelMBeanの適切な実装はすべてのJMXエージェントに同梱されていなければならず、クラスはRequiredModelMBeanという名前でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6d92cf9fa60cc000ab8bf753f1b2d1bc89474f60" translate="yes" xml:space="preserve">
          <source>This class is the interface to be implemented by MBeans that are meant to be persistent.</source>
          <target state="translated">このクラスは、MBeansが永続化することを意図して実装するインターフェースです。</target>
        </trans-unit>
        <trans-unit id="f19d893de8054751cd2144ea0c9af06680e83543" translate="yes" xml:space="preserve">
          <source>This class is the interface to be implemented by MBeans that are meant to be persistent. MBeans supporting this interface should call the load method during construction in order to prime the MBean from the persistent store. In the case of a ModelMBean, the store method should be called by the MBeanServer based on the descriptors in the ModelMBean or by the MBean itself during normal processing of the ModelMBean.</source>
          <target state="translated">このクラスは、永続的であることを意図した MBeans が実装するインターフェースです。このインターフェイスをサポートする MBeans は、構築中に load メソッドを呼び出して、永続的なストアから MBean をプライムする必要があります。ModelMBean の場合、ストア・メソッドは、ModelMBean の記述子に基づいて MBeanServer によって呼び出されるか、または ModelMBean の通常の処理中に MBean 自身によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="02b089396e28ddd557d223fa76961dbe37dd98f1" translate="yes" xml:space="preserve">
          <source>This class is the opposite of the &lt;code&gt;AbstractList&lt;/code&gt; class in the sense that it implements the &quot;random access&quot; methods (&lt;code&gt;get(int index)&lt;/code&gt;, &lt;code&gt;set(int index, E element)&lt;/code&gt;, &lt;code&gt;add(int index, E element)&lt;/code&gt; and &lt;code&gt;remove(int index)&lt;/code&gt;) on top of the list's list iterator, instead of the other way around.</source>
          <target state="translated">このクラスは、「ランダムアクセス」メソッド（ &lt;code&gt;get(int index)&lt;/code&gt; 、 &lt;code&gt;set(int index, E element)&lt;/code&gt; 、 &lt;code&gt;add(int index, E element)&lt;/code&gt; 、および &lt;code&gt;remove(int index)&lt;/code&gt; ）を実装するという意味で、 &lt;code&gt;AbstractList&lt;/code&gt; クラスの反対です。））リストのリスト反復子の代わりに、その逆ではありません。</target>
        </trans-unit>
        <trans-unit id="c4a20b94d128ff27c99a7d8a202407464a746096" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing LDAPv3-style extended operations and controls.</source>
          <target state="translated">このクラスは、LDAPv3スタイルの拡張操作とコントロールを実行するための開始コンテキストです。</target>
        </trans-unit>
        <trans-unit id="c9ebeaec555c3a49f472defa5a4bac0fa1714a50" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing directory operations.</source>
          <target state="translated">このクラスは、ディレクトリ操作を実行するための開始コンテキストです。</target>
        </trans-unit>
        <trans-unit id="21e5dd06de2cd79c306d6b1432a8bd320196dfce" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing directory operations. The documentation in the class description of InitialContext (including those for synchronization) apply here.</source>
          <target state="translated">このクラスはディレクトリ操作を行うための開始コンテキストです。InitialContext のクラス説明にあるドキュメント (同期化のためのものを含む)がここに適用されます。</target>
        </trans-unit>
        <trans-unit id="24dc8db5f88a926a065c69e98c4eae0fb24a7dcc" translate="yes" xml:space="preserve">
          <source>This class is the starting context for performing naming operations.</source>
          <target state="translated">このクラスは、命名操作を行うための開始コンテキストです。</target>
        </trans-unit>
        <trans-unit id="255a199d1ff99484f944964c0ba5b4d38319281f" translate="yes" xml:space="preserve">
          <source>This class is the superclass of all classes that filter output streams.</source>
          <target state="translated">このクラスは、出力ストリームをフィルタリングするすべてのクラスのスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="570e1f0ed10be9078abfb0bc5b5b38ef04540a8c" translate="yes" xml:space="preserve">
          <source>This class is the superclass of all classes that filter output streams. These streams sit on top of an already existing output stream (the</source>
          <target state="translated">このクラスは、出力ストリームをフィルタリングするすべてのクラスのスーパークラスです。これらのストリームは、すでに存在する出力ストリーム (</target>
        </trans-unit>
        <trans-unit id="c9086e9e5125fd41f8ce69b188178fcee4eb3b88" translate="yes" xml:space="preserve">
          <source>This class is the superclass of any exception which can be raised during relation management.</source>
          <target state="translated">このクラスは、リレーション管理中に発生するあらゆる例外のスーパークラスです。</target>
        </trans-unit>
        <trans-unit id="6865dfb89c6918bd65c9ac9d52259fccdb9544d9" translate="yes" xml:space="preserve">
          <source>This class is thread-safe: multiple threads can share a single &lt;code&gt;Properties&lt;/code&gt; object without the need for external synchronization.</source>
          <target state="translated">このクラスはスレッドセーフです。外部同期を必要とせずに、複数のスレッドが単一の &lt;code&gt;Properties&lt;/code&gt; オブジェクトを共有できます。</target>
        </trans-unit>
        <trans-unit id="a95ebd2233ed1d121d6c92058975a03867bfc6de" translate="yes" xml:space="preserve">
          <source>This class is thread-safe: multiple threads can share a single &lt;code&gt;Timer&lt;/code&gt; object without the need for external synchronization.</source>
          <target state="translated">このクラスはスレッドセーフです。外部同期を必要とせずに、複数のスレッドが単一の &lt;code&gt;Timer&lt;/code&gt; オブジェクトを共有できます。</target>
        </trans-unit>
        <trans-unit id="ec33dba99b049da1b658092b3875f51dd398cbc1" translate="yes" xml:space="preserve">
          <source>This class is thrown when an attempt is made to add to an attribute a value that conflicts with the attribute's schema definition.</source>
          <target state="translated">このクラスは、属性のスキーマ定義と競合する値を属性に追加しようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="d1f00b94efb36932459464439d5ab0e12a6e9624" translate="yes" xml:space="preserve">
          <source>This class is thrown when an attempt is made to add to an attribute a value that conflicts with the attribute's schema definition. This could happen, for example, if attempting to add an attribute with no value when the attribute is required to have at least one value, or if attempting to add more than one value to a single valued-attribute, or if attempting to add a value that conflicts with the syntax of the attribute.</source>
          <target state="translated">このクラスは、属性のスキーマ定義と矛盾する値を属性に追加しようとしたときにスローされます。これは、例えば、属性が少なくとも一つの値を持つことが要求されているときに、値を持たない属性を追加しようとした場合や、一つのvalue-attributeに二つ以上の値を追加しようとした場合、あるいは属性の構文と衝突する値を追加しようとした場合などに発生します。</target>
        </trans-unit>
        <trans-unit id="b28af93d9716907fa0b3541783bfa4007945f282" translate="yes" xml:space="preserve">
          <source>This class is used as an opaque representation of cryptographic parameters.</source>
          <target state="translated">このクラスは、暗号パラメータの不透明な表現として使用されます。</target>
        </trans-unit>
        <trans-unit id="e2970f6f19d713db046765398cb1a4330b16978b" translate="yes" xml:space="preserve">
          <source>This class is used to allow multiple resources declarations.</source>
          <target state="translated">このクラスは、複数のリソースの宣言を可能にするために使用されます。</target>
        </trans-unit>
        <trans-unit id="9bead0d6f4eff16a0bf9f0abb5794db8cbd5f952" translate="yes" xml:space="preserve">
          <source>This class is used to associate an emitted notification with the listener ID to which it is targeted.</source>
          <target state="translated">このクラスは、放出された通知を対象とするリスナーIDと関連付けるために使用されます。</target>
        </trans-unit>
        <trans-unit id="f38a13b47a7a76e3e8210a856ed4604bc7ab7f96" translate="yes" xml:space="preserve">
          <source>This class is used to create operating system processes.</source>
          <target state="translated">このクラスは、オペレーティングシステムのプロセスを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e29cdda5dc89630e2030edbd0cf8445c800b6fa6" translate="yes" xml:space="preserve">
          <source>This class is used to explicitly specify the value for encoding input P in OAEP Padding.</source>
          <target state="translated">このクラスは、OAEP Paddingで入力Pをエンコードするための値を明示的に指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7dc9176a6d652a52a000320c090cdf90b71c8fa1" translate="yes" xml:space="preserve">
          <source>This class is used to protect Kerberos services and the credentials necessary to access those services.</source>
          <target state="translated">このクラスは、Kerberosサービスとそのサービスにアクセスするために必要な資格情報を保護するために使用されます。</target>
        </trans-unit>
        <trans-unit id="92bc108a8151bae0c08b4e05e2830669938179c5" translate="yes" xml:space="preserve">
          <source>This class is used to protect Kerberos services and the credentials necessary to access those services. There is a one to one mapping of a service principal and the credentials necessary to access the service. Therefore granting access to a service principal implicitly grants access to the credential necessary to establish a security context with the service principal. This applies regardless of whether the credentials are in a cache or acquired via an exchange with the KDC. The credential can be either a ticket granting ticket, a service ticket or a secret key from a key table.</source>
          <target state="translated">このクラスは、Kerberosサービスとそのサービスにアクセスするために必要な資格情報を保護するために使用されます。サービスプリンシパルとサービスへのアクセスに必要なクレデンシャルは、1 対 1 のマッピングがあります。したがって、サービス・プリンシパルへのアクセスを許可すると、サービス・プリンシパルとのセキュリティ・コンテキストを確立するために必要なクレデンシャルへのアクセスが暗黙のうちに許可されます。これは、クレデンシャルがキャッシュにあるか、KDC との交換で取得したかに関係なく適用される。クレデンシャルは、チケット付与チケット、サービス・チケット、または鍵テーブルからの秘密鍵のいずれかである。</target>
        </trans-unit>
        <trans-unit id="88d72ed179fe7cf94952b4a53b575f7eb173f084" translate="yes" xml:space="preserve">
          <source>This class is used to protect access to private Credentials belonging to a particular &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">このクラスは、特定の &lt;code&gt;Subject&lt;/code&gt; 属するプライベートクレデンシャルへのアクセスを保護するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d883a0a3d463009ba704e60e5528114d555eef95" translate="yes" xml:space="preserve">
          <source>This class is used to protect access to private Credentials belonging to a particular &lt;code&gt;Subject&lt;/code&gt;. The &lt;code&gt;Subject&lt;/code&gt; is represented by a Set of Principals.</source>
          <target state="translated">このクラスは、特定の &lt;code&gt;Subject&lt;/code&gt; 属するプライベートクレデンシャルへのアクセスを保護するために使用されます。 &lt;code&gt;Subject&lt;/code&gt; プリンシパルの集合で表現されます。</target>
        </trans-unit>
        <trans-unit id="81577962995ef1cc73f44c7cce8da044a21a41ac" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters (server name and port number) to implementations of the LDAP &lt;code&gt;CertStore&lt;/code&gt; algorithm.</source>
          <target state="translated">このクラスは、LDAP &lt;code&gt;CertStore&lt;/code&gt; アルゴリズムの実装に必要な構成パラメーター（サーバー名とポート番号）を提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bf73f6a65c294515963298059d6234dedb988be4" translate="yes" xml:space="preserve">
          <source>This class is used to provide necessary configuration parameters to implementations of the Collection &lt;code&gt;CertStore&lt;/code&gt; algorithm. The only parameter included in this class is the &lt;code&gt;Collection&lt;/code&gt; from which the &lt;code&gt;CertStore&lt;/code&gt; will retrieve certificates and CRLs.</source>
          <target state="translated">このクラスは、Collection &lt;code&gt;CertStore&lt;/code&gt; アルゴリズムの実装に必要な構成パラメーターを提供するために使用されます。このクラスに含まれる唯一のパラメーターは、 &lt;code&gt;CertStore&lt;/code&gt; が証明書とCRLを取得する &lt;code&gt;Collection&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="892d3a8ff21cefb061c50236667fa4c69d43c5ad" translate="yes" xml:space="preserve">
          <source>This class is used to read entries from a zip file.</source>
          <target state="translated">このクラスは、zipファイルからエントリを読み込むために使用されます。</target>
        </trans-unit>
        <trans-unit id="e515046eee31b311bd69116828d827760c8d7a86" translate="yes" xml:space="preserve">
          <source>This class is used to represent a JAR file entry.</source>
          <target state="translated">このクラスは、JAR ファイルエントリを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="dcdc55a8d6493efd76c541ef916e043bc3a74029" translate="yes" xml:space="preserve">
          <source>This class is used to represent a ZIP file entry.</source>
          <target state="translated">このクラスは、ZIP ファイルエントリを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="dedab4f3cb6292b2c66bd11055ed807ee60cf26a" translate="yes" xml:space="preserve">
          <source>This class is used to represent an Identity that can also digitally sign data.</source>
          <target state="translated">このクラスは、データにデジタル署名することもできるIdentityを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a7f5bdfc27441534a2ef1fd5316d3ce6bc2812da" translate="yes" xml:space="preserve">
          <source>This class is used to restrict the usage of the Kerberos delegation model, ie: forwardable and proxiable tickets.</source>
          <target state="translated">このクラスは、Kerberos 委任モデルの使用を制限するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da32b0a5f6de72e86c176c93392b75f72e066a06" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to &lt;a href=&quot;atomiclong&quot;&gt;&lt;code&gt;AtomicLong&lt;/code&gt;&lt;/a&gt; when multiple threads update a common sum that is used for purposes such as collecting statistics, not for fine-grained synchronization control. Under low update contention, the two classes have similar characteristics. But under high contention, expected throughput of this class is significantly higher, at the expense of higher space consumption.</source>
          <target state="translated">このクラスは、通常、複数のスレッドが、きめ細かな同期制御ではなく、統計の収集などの目的で使用される共通の合計を更新する場合に、&lt;a href=&quot;atomiclong&quot;&gt; &lt;code&gt;AtomicLong&lt;/code&gt; &lt;/a&gt;よりも推奨されます。更新の競合が少ない場合、2つのクラスの特性は似ています。ただし、競合が多い場合、このクラスの予想スループットは大幅に高くなりますが、スペースの消費量が多くなります。</target>
        </trans-unit>
        <trans-unit id="96aaba84eac6ce0ad2e73cbde92bb3c4c4b745e5" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to &lt;a href=&quot;atomiclong&quot;&gt;&lt;code&gt;AtomicLong&lt;/code&gt;&lt;/a&gt; when multiple threads update a common value that is used for purposes such as collecting statistics, not for fine-grained synchronization control. Under low update contention, the two classes have similar characteristics. But under high contention, expected throughput of this class is significantly higher, at the expense of higher space consumption.</source>
          <target state="translated">このクラスは通常、複数のスレッドが、きめ細かな同期制御ではなく、統計の収集などの目的で使用される共通の値を更新する場合に、&lt;a href=&quot;atomiclong&quot;&gt; &lt;code&gt;AtomicLong&lt;/code&gt; &lt;/a&gt;よりも推奨されます。更新の競合が少ない場合、2つのクラスの特性は似ています。ただし、競合が多い場合、このクラスの予想スループットは大幅に高くなりますが、スペースの消費量が多くなります。</target>
        </trans-unit>
        <trans-unit id="c0e1446057f9ee2b23fc1e7c899c2d679af6b946" translate="yes" xml:space="preserve">
          <source>This class is usually preferable to alternatives when multiple threads update a common value that is used for purposes such as summary statistics that are frequently updated but less frequently read.</source>
          <target state="translated">このクラスは、複数のスレッドが頻繁に更新されるが読まれる頻度が低い要約統計情報などの目的で使用される共通の値を更新する場合、通常は代替品よりも好ましいです。</target>
        </trans-unit>
        <trans-unit id="c85a69b32032b59ad95c0d23120e07e505a591cb" translate="yes" xml:space="preserve">
          <source>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories.</source>
          <target state="translated">このクラスローダーは、JAR ファイルとディレクトリの両方を参照する URL の検索パスからクラスとリソースをロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="529a888cd1b34805c18df62f3ab778f092ad678a" translate="yes" xml:space="preserve">
          <source>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories. Any URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.</source>
          <target state="translated">このクラスローダは、JAR ファイルとディレクトリの両方を参照する URL の検索パスからクラスとリソースをロードするために使用されます。URL の末尾が '/' で終わるものはすべてディレクトリを参照していると見なされます。それ以外の場合は、URL は必要に応じて開かれる JAR ファイルを参照していると見なされます。</target>
        </trans-unit>
        <trans-unit id="a848bd89febcae11dc0644f5bb34dc339508d2af" translate="yes" xml:space="preserve">
          <source>This class manages a list of dated timer notifications. A method allows users to add/remove as many notifications as required. When a timer notification is emitted by the timer and becomes obsolete, it is automatically removed from the list of timer notifications.</source>
          <target state="translated">このクラスは、日付の入ったタイマー通知のリストを管理します。メソッドによって、ユーザは必要な数だけ通知を追加/削除することができます。タイマー通知がタイマーによって発行され、時代遅れになった場合、それは自動的にタイマー通知のリストから削除されます。</target>
        </trans-unit>
        <trans-unit id="d7fb18cf18f4efce410ba5b152b6f139bd0a822b" translate="yes" xml:space="preserve">
          <source>This class manages the configuration of time-zone rules. The static methods provide the public API that can be used to manage the providers. The abstract methods provide the SPI that allows rules to be provided.</source>
          <target state="translated">このクラスは、タイムゾーンルールの設定を管理します。staticメソッドは、プロバイダを管理するために使用できるパブリックAPIを提供します。抽象メソッドは、ルールの提供を可能にするSPIを提供します。</target>
        </trans-unit>
        <trans-unit id="31a7c86c419911a99a9dbaa4add38668de333305" translate="yes" xml:space="preserve">
          <source>This class may also be used to construct MXBeans. The usage is exactly the same as for Standard MBeans except that in the examples above, the &lt;code&gt;false&lt;/code&gt; parameter to the constructor or &lt;code&gt;super(...)&lt;/code&gt; invocation is instead &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このクラスは、MXBeanの構築にも使用できます。使用方法は標準MBeanの場合とまったく同じですが、上記の例では、コンストラクターへの &lt;code&gt;false&lt;/code&gt; パラメーターまたは &lt;code&gt;super(...)&lt;/code&gt; 呼び出しが代わりに &lt;code&gt;true&lt;/code&gt; である点が異なります。</target>
        </trans-unit>
        <trans-unit id="7c9765f4cd7ab26b2e4409b5d937f6e3b566e8d3" translate="yes" xml:space="preserve">
          <source>This class models a quantity or amount of time in terms of seconds and nanoseconds. It can be accessed using other duration-based units, such as minutes and hours. In addition, the &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt; unit can be used and is treated as exactly equal to 24 hours, thus ignoring daylight savings effects. See &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for the date-based equivalent to this class.</source>
          <target state="translated">このクラスは、時間と量を秒とナノ秒でモデル化します。分や時間など、他の期間ベースの単位を使用してアクセスできます。さらに、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;ユニットを使用でき、24時間とまったく同じように扱われるため、夏時間の影響は無視されます。このクラスに対応する日付ベースのクラスについては、&lt;a href=&quot;period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="04486e00606f23dc85340d6bae56c39641e3fa23" translate="yes" xml:space="preserve">
          <source>This class models a quantity or amount of time in terms of years, months and days. See &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; for the time-based equivalent to this class.</source>
          <target state="translated">このクラスは、年、月、日で数量または時間をモデル化します。このクラスに対応する時間ベースのクラスについては、&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f7ae18c67979186c2a80767b88b6ffcdc398382" translate="yes" xml:space="preserve">
          <source>This class models a single instantaneous point on the time-line. This might be used to record event time-stamps in the application.</source>
          <target state="translated">このクラスは、タイムライン上の単一の瞬間点をモデル化します。これは、アプリケーションでイベントのタイムスタンプを記録するために使われるかもしれません。</target>
        </trans-unit>
        <trans-unit id="42c2d45c4ed07e6ca40c4c509a2bc564114bbf0f" translate="yes" xml:space="preserve">
          <source>This class must be implemented with care to ensure other classes operate correctly. All implementations that can be instantiated must be final, immutable and thread-safe. Subclasses should be Serializable wherever possible.</source>
          <target state="translated">このクラスは、他のクラスが正しく動作するように注意して実装しなければなりません。インスタンス化できるすべての実装は、最終的で、不変で、スレッドセーフでなければなりません。サブクラスは可能な限りシリアライズ可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="77f368256389aaf440d58e7162a94829c8492f69" translate="yes" xml:space="preserve">
          <source>This class offers constant time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;), assuming the hash function disperses the elements properly among the buckets. Iterating over this set requires time proportional to the sum of the &lt;code&gt;HashSet&lt;/code&gt; instance's size (the number of elements) plus the &quot;capacity&quot; of the backing &lt;code&gt;HashMap&lt;/code&gt; instance (the number of buckets). Thus, it's very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important.</source>
          <target state="translated">このクラスは、ハッシュ関数がバケット間で要素を適切に分散すると仮定して、基本的な操作（ &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;contains&lt;/code&gt; および &lt;code&gt;size&lt;/code&gt; ）に対して一定の時間パフォーマンスを提供します。このセットを反復処理するには、 &lt;code&gt;HashSet&lt;/code&gt; インスタンスのサイズ（要素の数）とバッキング &lt;code&gt;HashMap&lt;/code&gt; インスタンスの&quot;容量&quot; （バケットの数）の合計に比例した時間が必要です。したがって、反復のパフォーマンスが重要な場合は、初期容量を高くしすぎないように（または負荷係数を低くしすぎないように）設定することが非常に重要です。</target>
        </trans-unit>
        <trans-unit id="572a8d65ebeff151932bda9611b422ec79f16007" translate="yes" xml:space="preserve">
          <source>This class performs the synchronization required to implement the &lt;a href=&quot;../channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; specification. Implementations of the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method need not synchronize against other threads that might be attempting to close the channel.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;../channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;仕様の実装に必要な同期を実行します。&lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;メソッドの実装は、チャネルを閉じようとしている可能性のある他のスレッドと同期する必要はありません。</target>
        </trans-unit>
        <trans-unit id="d07dbbe71cc840ce02b9469f3fc04a4b888acea3" translate="yes" xml:space="preserve">
          <source>This class provides &lt;code&gt;adapt&lt;/code&gt; methods for &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, that may be of use when mixing execution of &lt;code&gt;ForkJoinTasks&lt;/code&gt; with other kinds of tasks. When all tasks are of this form, consider using a pool constructed in &lt;em&gt;asyncMode&lt;/em&gt;.</source>
          <target state="translated">このクラスは&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; に&lt;/a&gt; &lt;code&gt;adapt&lt;/code&gt; メソッドを提供します。これは、 &lt;code&gt;ForkJoinTasks&lt;/code&gt; の実行を他の種類のタスクと混合するときに役立つ場合があります。すべてのタスクがこの形式である場合、&lt;em&gt;asyncModeで&lt;/em&gt;構築されたプールの使用を検討して&lt;em&gt;ください&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c359178fcd5b6cf7a61127c158970f1b1cdfd554" translate="yes" xml:space="preserve">
          <source>This class provides &lt;code&gt;protected&lt;/code&gt; overridable &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt;&lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt;&lt;/a&gt; methods that are called before and after execution of each task. These can be used to manipulate the execution environment; for example, reinitializing ThreadLocals, gathering statistics, or adding log entries. Additionally, method &lt;a href=&quot;threadpoolexecutor#terminated--&quot;&gt;&lt;code&gt;terminated()&lt;/code&gt;&lt;/a&gt; can be overridden to perform any special processing that needs to be done once the Executor has fully terminated.</source>
          <target state="translated">このクラスは、各タスクの実行前と実行後に呼び出される&lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;protected&lt;/code&gt; オーバーライド可能なbeforeExecute（Thread、Runnable）および&lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt; &lt;code&gt;afterExecute(Runnable, Throwable)&lt;/code&gt; &lt;/a&gt;メソッドを提供します。これらは、実行環境を操作するために使用できます。たとえば、ThreadLocalsの再初期化、統計の収集、ログエントリの追加などです。さらに、executorが完全に終了した後で実行する必要がある特別な処理を実行するために、&lt;a href=&quot;threadpoolexecutor#terminated--&quot;&gt; &lt;code&gt;terminated()&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="8ee562e98404070975b126b69dbde36027259809" translate="yes" xml:space="preserve">
          <source>This class provides a basic file object implementation which can be used as building block for creating file objects. For example, here is how to define a file object which represent source code stored in a string:</source>
          <target state="translated">このクラスは、ファイルオブジェクトを作成するためのビルディングブロックとして使用できる基本的なファイルオブジェクトの実装を提供します。例えば、文字列に格納されたソースコードを表すファイルオブジェクトを定義します。</target>
        </trans-unit>
        <trans-unit id="05d8d398d426ce102cd4aa03d16d04b81f601c82" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Attribute&lt;/code&gt; interface.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Attribute&lt;/code&gt; インターフェースの基本的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="c76edbc01940fde3909601c41bf2745f78b06d41" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Control&lt;/code&gt; interface.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Control&lt;/code&gt; インターフェースの基本的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="ccc26575db7c5009c2d93d0c55ec11a1843c5499" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the &lt;code&gt;Control&lt;/code&gt; interface. It represents an LDAPv3 Control as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Control&lt;/code&gt; インターフェースの基本的な実装を提供します。&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251で&lt;/a&gt;定義されているLDAPv3コントロールを表します。</target>
        </trans-unit>
        <trans-unit id="f2949ae857379632b9e3dc8c272a7c7d3f63ae6b" translate="yes" xml:space="preserve">
          <source>This class provides a basic implementation of the Attributes interface.</source>
          <target state="translated">このクラスは、Attributes インターフェースの基本的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5643c89b210834159b9a8538a094393fd0316f70" translate="yes" xml:space="preserve">
          <source>This class provides a cryptographically strong random number generator (RNG).</source>
          <target state="translated">このクラスは暗号的に強力な乱数発生器(RNG)を提供します。</target>
        </trans-unit>
        <trans-unit id="f55fba4dd82d208d447b8686f1389a2aeaa74719" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface to minimize the effort required to implement this interface backed by a &quot;random access&quot; data store (such as an array).</source>
          <target state="translated">このクラスは、&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェースのスケルトン実装を提供し、「ランダムアクセス」データストア（配列など）によってサポートされるこのインターフェースを実装するために必要な労力を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="a9a8bce22440471af4ffc08d7715360263e088b3" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface to minimize the effort required to implement this interface backed by a &quot;random access&quot; data store (such as an array). For sequential access data (such as a linked list), &lt;a href=&quot;abstractsequentiallist&quot;&gt;&lt;code&gt;AbstractSequentialList&lt;/code&gt;&lt;/a&gt; should be used in preference to this class.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェースのスケルトン実装を提供し、「ランダムアクセス」データストア（配列など）によってサポートされるこのインターフェースを実装するために必要な労力を最小限に抑えます。順次アクセスデータ（リンクリストなど）の場合、このクラスよりも&lt;a href=&quot;abstractsequentiallist&quot;&gt; &lt;code&gt;AbstractSequentialList&lt;/code&gt; &lt;/a&gt;を優先して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c35b157721aaf532e29158ba2778a04b725647fc" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; class, greatly easing the task of implementing it.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt;クラスのスケルトン実装を提供し、それを実装するタスクを大幅に軽減します。</target>
        </trans-unit>
        <trans-unit id="5e0f3b9d837b76b6b98e1f53a39f4805a7485580" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Collection&lt;/code&gt; interface, to minimize the effort required to implement this interface.</source>
          <target state="translated">このクラスは、このインターフェイスの実装に必要な労力を最小限に抑えるために、 &lt;code&gt;Collection&lt;/code&gt; インターフェイスのスケルトン実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5885275d5749220095df4b7df8255a2c192259bb" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;List&lt;/code&gt; interface to minimize the effort required to implement this interface backed by a &quot;sequential access&quot; data store (such as a linked list).</source>
          <target state="translated">このクラスは、 &lt;code&gt;List&lt;/code&gt; インターフェースのスケルトン実装を提供し、「順次アクセス」データストア（リンクされたリストなど）によってサポートされるこのインターフェースを実装するために必要な労力を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="10d88f93fe64649e0887b39da1d0c6744f97e975" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;List&lt;/code&gt; interface to minimize the effort required to implement this interface backed by a &quot;sequential access&quot; data store (such as a linked list). For random access data (such as an array), &lt;code&gt;AbstractList&lt;/code&gt; should be used in preference to this class.</source>
          <target state="translated">このクラスは、 &lt;code&gt;List&lt;/code&gt; インターフェースのスケルトン実装を提供し、「順次アクセス」データストア（リンクされたリストなど）によってサポートされるこのインターフェースを実装するために必要な労力を最小限に抑えます。ランダムアクセスデータ（配列など）の場合、このクラスよりも &lt;code&gt;AbstractList&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e9c7178bf4df3b8e26e321d0c30eef08920002a" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Map&lt;/code&gt; interface, to minimize the effort required to implement this interface.</source>
          <target state="translated">このクラスは、このインターフェースの実装に必要な労力を最小限に抑えるために、 &lt;code&gt;Map&lt;/code&gt; インターフェースのスケルトン実装を提供します。</target>
        </trans-unit>
        <trans-unit id="30ed5048a3885661e3872b83ab662fb50a15b98b" translate="yes" xml:space="preserve">
          <source>This class provides a skeletal implementation of the &lt;code&gt;Set&lt;/code&gt; interface to minimize the effort required to implement this interface.</source>
          <target state="translated">このクラスは、 &lt;code&gt;Set&lt;/code&gt; インターフェースのスケルトン実装を提供して、このインターフェースの実装に必要な労力を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="850b3f6a723e4a105d67846c4e199ce19413260f" translate="yes" xml:space="preserve">
          <source>This class provides additional methods for generating random streams, that employ the above techniques when used in &lt;code&gt;stream.parallel()&lt;/code&gt; mode.</source>
          <target state="translated">このクラスは、ランダムストリームを生成するための追加のメソッドを提供します。これらのメソッドは、 &lt;code&gt;stream.parallel()&lt;/code&gt; モードで使用されるときに上記の手法を使用します。</target>
        </trans-unit>
        <trans-unit id="1e2e96e0f3ae47fd59d509ed69e427ed93ce4793" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional &lt;code&gt;Map&lt;/code&gt; operations, and permits null elements. Like &lt;code&gt;HashMap&lt;/code&gt;, it provides constant-time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt;), assuming the hash function disperses elements properly among the buckets. Performance is likely to be just slightly below that of &lt;code&gt;HashMap&lt;/code&gt;, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a &lt;code&gt;LinkedHashMap&lt;/code&gt; requires time proportional to the</source>
          <target state="translated">このクラスは、すべてのオプションの &lt;code&gt;Map&lt;/code&gt; 操作を提供し、null要素を許可します。 &lt;code&gt;HashMap&lt;/code&gt; と同様に、ハッシュ関数がバケット間で要素を適切に分散すると仮定すると、基本操作（ &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;contains&lt;/code&gt; 、および &lt;code&gt;remove&lt;/code&gt; ）に一定のパフォーマンスを提供します。リンクリストの維持に追加の費用がかかるため、パフォーマンスは &lt;code&gt;HashMap&lt;/code&gt; のパフォーマンスをわずかに下回る可能性があります。ただし、1つの例外があります &lt;code&gt;LinkedHashMap&lt;/code&gt; コレクションビューの反復には、</target>
        </trans-unit>
        <trans-unit id="ff706953493a74746d04f26b24913b430916a541" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional &lt;code&gt;Set&lt;/code&gt; operations, and permits null elements. Like &lt;code&gt;HashSet&lt;/code&gt;, it provides constant-time performance for the basic operations (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt;), assuming the hash function disperses elements properly among the buckets. Performance is likely to be just slightly below that of &lt;code&gt;HashSet&lt;/code&gt;, due to the added expense of maintaining the linked list, with one exception: Iteration over a &lt;code&gt;LinkedHashSet&lt;/code&gt; requires time proportional to the</source>
          <target state="translated">このクラスは、すべてのオプションの &lt;code&gt;Set&lt;/code&gt; 操作を提供し、null要素を許可します。 &lt;code&gt;HashSet&lt;/code&gt; と同様に、ハッシュ関数がバケット間で要素を適切に分散すると仮定すると、基本操作（ &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;contains&lt;/code&gt; 、および &lt;code&gt;remove&lt;/code&gt; ）に一定のパフォーマンスを提供します。リンクリストの維持に追加の費用がかかるため、パフォーマンスは &lt;code&gt;HashSet&lt;/code&gt; のパフォーマンスをわずかに下回る可能性がありますが、1つの例外があります &lt;code&gt;LinkedHashSet&lt;/code&gt; 反復には、</target>
        </trans-unit>
        <trans-unit id="21691796695b60e351045a6a8026bd2180011a02" translate="yes" xml:space="preserve">
          <source>This class provides all of the optional map operations, and permits &lt;code&gt;null&lt;/code&gt; values and the &lt;code&gt;null&lt;/code&gt; key. This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time.</source>
          <target state="translated">このクラスは、すべてのオプションのマップ操作を提供し、 &lt;code&gt;null&lt;/code&gt; 値と &lt;code&gt;null&lt;/code&gt; キーを許可します。このクラスは、マップの順序については保証しません。特に、順序が長期にわたって一定であることを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="d7d16893e35e5bb2d3a4daa3d587380bb5244ac9" translate="yes" xml:space="preserve">
          <source>This class provides an efficient and scalable basis for synchronization in part by specializing its range of use to synchronizers that can rely on &lt;code&gt;int&lt;/code&gt; state, acquire, and release parameters, and an internal FIFO wait queue. When this does not suffice, you can build synchronizers from a lower level using &lt;a href=&quot;../atomic/package-summary&quot;&gt;&lt;code&gt;atomic&lt;/code&gt;&lt;/a&gt; classes, your own custom &lt;a href=&quot;../../queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; classes, and &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; blocking support.</source>
          <target state="translated">このクラスは、 &lt;code&gt;int&lt;/code&gt; 状態、取得、リリースパラメータ、および内部FIFO待機キューに依存できるシンクロナイザの使用範囲を特化することにより、効率的でスケーラブルな同期基盤を提供します。これでは不十分な場合、&lt;a href=&quot;../atomic/package-summary&quot;&gt; &lt;code&gt;atomic&lt;/code&gt; &lt;/a&gt;クラス、独自のカスタム&lt;a href=&quot;../../queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; &lt;/a&gt;ブロッキングサポートを使用して、下位レベルからシンクロナイザを構築できます。</target>
        </trans-unit>
        <trans-unit id="027df20526035274a2572144300b415422d0bcc5" translate="yes" xml:space="preserve">
          <source>This class provides common implementations of &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;. These are defined here as they must be constants, and the definition of lambdas does not guarantee that. By assigning them once here, they become 'normal' Java constants.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; の&lt;/a&gt;一般的な実装を提供します。これらは定数でなければならないため、ここで定義されています。ラムダの定義はそれを保証するものではありません。ここで一度割り当てることで、「通常の」Java定数になります。</target>
        </trans-unit>
        <trans-unit id="3d782ad4534620a208daae5188b15671d6dab525" translate="yes" xml:space="preserve">
          <source>This class provides constant-time performance for the basic operations (&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;), assuming the system identity hash function (&lt;a href=&quot;../lang/system#identityHashCode-java.lang.Object-&quot;&gt;&lt;code&gt;System.identityHashCode(Object)&lt;/code&gt;&lt;/a&gt;) disperses elements properly among the buckets.</source>
          <target state="translated">このクラスは、システムアイデンティティハッシュ関数（&lt;a href=&quot;../lang/system#identityHashCode-java.lang.Object-&quot;&gt; &lt;code&gt;System.identityHashCode(Object)&lt;/code&gt; &lt;/a&gt;）が要素をバケット間で適切に分散すると仮定して、基本的な操作（ &lt;code&gt;get&lt;/code&gt; および &lt;code&gt;put&lt;/code&gt; ）に一定時間のパフォーマンスを提供します。</target>
        </trans-unit>
        <trans-unit id="a9cb2f8fd6fb692752836a91d6666165347f6e16" translate="yes" xml:space="preserve">
          <source>This class provides definitions of the notifications sent by timer MBeans.</source>
          <target state="translated">タイマーMBeansが送信する通知の定義を提供します。</target>
        </trans-unit>
        <trans-unit id="5b305425f2398615078405474d162a9f3135b589" translate="yes" xml:space="preserve">
          <source>This class provides inspection, instrumentation, and monitoring methods for the internal queue, as well as similar methods for condition objects. These can be exported as desired into classes using an &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; for their synchronization mechanics.</source>
          <target state="translated">このクラスは、内部キューの検査、インスツルメンテーション、およびモニタリングメソッド、および条件オブジェクトの同様のメソッドを提供します。これらは、同期メカニズムのために &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; を使用して、必要に応じてクラスにエクスポートできます。</target>
        </trans-unit>
        <trans-unit id="acf6161ba4b0d7b36a78134ed42c8d898e70d207" translate="yes" xml:space="preserve">
          <source>This class provides mechanisms to specify a source region and a destination region. When reading, the source is the stream and the in-memory image is the destination. When writing, these are reversed. In the case of writing, destination regions may be used only with a writer that supports pixel replacement.</source>
          <target state="translated">このクラスは,ソース領域とデスティネーション領域を指定する仕組みを提供します.読み込み時には,ストリームがソース,インメモリ画像がデスティネーションとなります.書き込みの場合は、これらが逆になります。書き込みの場合は,ピクセル置換をサポートしているライタでのみ,出力先領域を使用することができます.</target>
        </trans-unit>
        <trans-unit id="68e8c5f6f7dc4757b4202226c0b0b9d6877bc3c5" translate="yes" xml:space="preserve">
          <source>This class provides services needed to instrument Java programming language code.</source>
          <target state="translated">このクラスは、Javaプログラミング言語のコードを計測するために必要なサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="3daf5d23b815ee7fc1850661ecdc8effd7d7409f" translate="yes" xml:space="preserve">
          <source>This class provides services needed to instrument Java programming language code. Instrumentation is the addition of byte-codes to methods for the purpose of gathering data to be utilized by tools. Since the changes are purely additive, these tools do not modify application state or behavior. Examples of such benign tools include monitoring agents, profilers, coverage analyzers, and event loggers.</source>
          <target state="translated">Javaプログラミング言語のコードを計測するために必要なサービスを提供します。インスツルメンテーションとは、ツールによって利用されるデータを収集する目的で、メソッドにバイトコードを追加することです。変更は純粋に付加的なものなので、これらのツールはアプリケーションの状態や動作を変更しません。このような良性のツールの例としては、モニタリングエージェント、プロファイラ、カバレッジアナライザ、イベントロガーなどがあります。</target>
        </trans-unit>
        <trans-unit id="5e15f52dce02a6211946d8272a9bcc580b35b8f5" translate="yes" xml:space="preserve">
          <source>This class provides skeletal implementations of some &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; operations.</source>
          <target state="translated">このクラスは、いくつかの&lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;操作のスケルトン実装を提供します。</target>
        </trans-unit>
        <trans-unit id="630ba7fe37391ec51305ce9f5c26f1c93cf195dc" translate="yes" xml:space="preserve">
          <source>This class provides skeletal implementations of some &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; operations. The implementations in this class are appropriate when the base implementation does &lt;em&gt;not&lt;/em&gt; allow &lt;code&gt;null&lt;/code&gt; elements. Methods &lt;a href=&quot;abstractqueue#add-E-&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueue#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;abstractqueue#element--&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; are based on &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt;, respectively, but throw exceptions instead of indicating failure via &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; returns.</source>
          <target state="translated">このクラスは、いくつかの&lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;操作のスケルトン実装を提供します。このクラスの実装は、基本実装が &lt;code&gt;null&lt;/code&gt; 要素を許可し&lt;em&gt;ない&lt;/em&gt;場合に適して&lt;em&gt;い&lt;/em&gt;ます。メソッド&lt;a href=&quot;abstractqueue#add-E-&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractqueue#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;abstractqueue#element--&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt;は、それぞれ&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;に基づいていますが、 &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;null&lt;/code&gt; の戻りによって失敗を示す代わりに例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f44514648bc390b667dbff0288db9ab16c09a1df" translate="yes" xml:space="preserve">
          <source>This class provides some general purpose beans control methods.</source>
          <target state="translated">このクラスは、いくつかの汎用的なビーンズ制御メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="67a252990dac3574afb495a8ad1caa09683e19e5" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose compression using the popular ZLIB compression library.</source>
          <target state="translated">このクラスでは、人気の高いZLIB圧縮ライブラリを用いた汎用圧縮をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b2d5100e7e5c3b1fa28929ac1a9592d341ec37a8" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose compression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">このクラスは、一般的なZLIB圧縮ライブラリを使用した汎用圧縮のサポートを提供します。ZLIB圧縮ライブラリは、最初はPNGグラフィック標準の一部として開発され、特許によって保護されていません。これは、&lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zipパッケージの説明&lt;/a&gt;にある仕様で完全に説明されています。</target>
        </trans-unit>
        <trans-unit id="f62783ba52ad30067c4bf97c27eb8a9f432cca20" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose decompression using the popular ZLIB compression library.</source>
          <target state="translated">このクラスは,人気のあるZLIB圧縮ライブラリを使用した汎用的な解凍をサポートします.</target>
        </trans-unit>
        <trans-unit id="42a68b0f8134c883f72b838887540092c0c76680" translate="yes" xml:space="preserve">
          <source>This class provides support for general purpose decompression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the &lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zip package description&lt;/a&gt;.</source>
          <target state="translated">このクラスは、一般的なZLIB圧縮ライブラリを使用して汎用の解凍をサポートします。ZLIB圧縮ライブラリは、最初はPNGグラフィック標準の一部として開発され、特許によって保護されていません。これは、&lt;a href=&quot;package-summary#package_description&quot;&gt;java.util.zipパッケージの説明&lt;/a&gt;にある仕様で完全に説明されています。</target>
        </trans-unit>
        <trans-unit id="058063ff23a514c72d17cf5bb02175b69f44f9bb" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a &quot;Message Authentication Code&quot; (MAC) algorithm.</source>
          <target state="translated">このクラスは、「メッセージ認証コード」(MAC)アルゴリズムの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="5d17535455ee3a93a28bd48adb2f85d352576483" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a cryptographic cipher for encryption and decryption.</source>
          <target state="translated">このクラスは,暗号化・復号化のための暗号の機能を提供します.</target>
        </trans-unit>
        <trans-unit id="38056ecd3eb0041e31918a2cb122cb3971090037" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a cryptographic cipher for encryption and decryption. It forms the core of the Java Cryptographic Extension (JCE) framework.</source>
          <target state="translated">このクラスは、暗号化と復号のための暗号化暗号の機能を提供します。Java Cryptographic Extension (JCE)フレームワークのコアを形成しています。</target>
        </trans-unit>
        <trans-unit id="b7f9af6863cfc7132c7b426fcb653626f2c59c5b" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a key agreement (or key exchange) protocol.</source>
          <target state="translated">このクラスは、鍵合意(または鍵交換)プロトコルの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="e195f5a4aecf4d805b4067fb733d1fffc5c3580f" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of a secret (symmetric) key generator.</source>
          <target state="translated">このクラスは秘密鍵生成器の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="71a7bb8d6c1cf35996c2c7d54ea430cc02fc2f0e" translate="yes" xml:space="preserve">
          <source>This class provides the functionality of an exemption mechanism, examples of which are</source>
          <target state="translated">このクラスは免除メカニズムの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="77361a95dede7f772c5daefc3f6fed52e2dd3203" translate="yes" xml:space="preserve">
          <source>This class provides the main application entry point for printing and parsing and provides common implementations of &lt;code&gt;DateTimeFormatter&lt;/code&gt;:</source>
          <target state="translated">このクラスは、印刷と解析のための主要なアプリケーションエントリポイントを提供し、 &lt;code&gt;DateTimeFormatter&lt;/code&gt; の一般的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="32c2e42c58d5563f589463d9769297959632d96f" translate="yes" xml:space="preserve">
          <source>This class provides the method &lt;code&gt;normalize&lt;/code&gt; which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text.</source>
          <target state="translated">このクラスは、Unicodeテキストを同等の合成または分解形式に変換するメソッド &lt;code&gt;normalize&lt;/code&gt; を提供し、テキストのソートと検索を容易にします。</target>
        </trans-unit>
        <trans-unit id="d1f27e8c5361496e2bcd15eae00a46e2381ba122" translate="yes" xml:space="preserve">
          <source>This class provides the method &lt;code&gt;normalize&lt;/code&gt; which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text. The &lt;code&gt;normalize&lt;/code&gt; method supports the standard normalization forms described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt; Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms&lt;/a&gt;.</source>
          <target state="translated">このクラスは、Unicodeテキストを同等の合成または分解形式に変換するメソッド &lt;code&gt;normalize&lt;/code&gt; を提供し、テキストのソートと検索を容易にします。 &lt;code&gt;normalize&lt;/code&gt; 方法は、に記載されている標準正規形サポート&lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode正規化フォーム- Unicode規格付属書＃15&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94f744e03b23887bcedd3bd044c9102d91afafb2" translate="yes" xml:space="preserve">
          <source>This class provides thread-local variables.</source>
          <target state="translated">このクラスはスレッドローカル変数を提供します。</target>
        </trans-unit>
        <trans-unit id="493cf5569ee6c8c562fbd1ca601aae11d69ef2db" translate="yes" xml:space="preserve">
          <source>This class provides thread-local variables. These variables differ from their normal counterparts in that each thread that accesses one (via its &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; method) has its own, independently initialized copy of the variable. &lt;code&gt;ThreadLocal&lt;/code&gt; instances are typically private static fields in classes that wish to associate state with a thread (e.g., a user ID or Transaction ID).</source>
          <target state="translated">このクラスはスレッドローカル変数を提供します。これらの変数は、（ &lt;code&gt;get&lt;/code&gt; または &lt;code&gt;set&lt;/code&gt; メソッドを介して）1つにアクセスする各スレッドが、独自の独立して初期化された変数のコピーを持っているという点で、通常の変数とは異なります。 &lt;code&gt;ThreadLocal&lt;/code&gt; インスタンスは通常、状態をスレッド（たとえば、ユーザーIDやトランザクションID）に関連付けたいクラスのプライベート静的フィールドです。</target>
        </trans-unit>
        <trans-unit id="af4f54ebb7bd4cdda400f1f7686b6b1996a12d34" translate="yes" xml:space="preserve">
          <source>This class provides two forms of linkage methods: a standard version (&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt;) using an optimized protocol, and an alternate version &lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt;&lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt;&lt;/a&gt;). The alternate version is a generalization of the standard version, providing additional control over the behavior of the generated function objects via flags and additional arguments. The alternate version adds the ability to manage the following attributes of function objects:</source>
          <target state="translated">このクラスは、最適化されたプロトコルを使用する標準バージョン（&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt;）と代替バージョンの&lt;a href=&quot;lambdametafactory#altMetafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.Object...-&quot;&gt; &lt;code&gt;altMetafactory(MethodHandles.Lookup, String, MethodType, Object...)&lt;/code&gt; &lt;/a&gt; 2つの形式のリンケージメソッドを提供します。...））。代替バージョンは、標準バージョンを一般化したものであり、生成された関数オブジェクトの動作を、フラグと追加の引数を介して制御できます。代替バージョンには、関数オブジェクトの次の属性を管理する機能が追加されています。</target>
        </trans-unit>
        <trans-unit id="bcfec68930e91dff3b974ffeb35fc31dc7b2d2f3" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;most-trusted CA&quot;, which is used as a trust anchor for validating X.509 certification paths. A most-trusted CA includes the public key of the CA, the CA's name, and any constraints upon the set of paths which may be validated using this key. These parameters can be specified in the form of a trusted &lt;code&gt;X509Certificate&lt;/code&gt; or as individual parameters.</source>
          <target state="translated">このクラスは、X.509証明書パスを検証するためのトラストアンカーとして使用される「最も信頼できるCA」を表します。最も信頼できるCAには、CAの公開鍵、CAの名前、およびこの鍵を使用して検証できるパスのセットに対する制約が含まれます。これらのパラメーターは、信頼できる &lt;code&gt;X509Certificate&lt;/code&gt; の形式で、または個別のパラメーターとして指定できます。</target>
        </trans-unit>
        <trans-unit id="6c2f2d6911e310787abdbf5f9e48315e898c3b1e" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;provider&quot; for the Java Security API, where a provider implements some or all parts of Java Security.</source>
          <target state="translated">このクラスは、JavaセキュリティAPIの「プロバイダ」を表し、プロバイダはJavaセキュリティの一部またはすべての部分を実装しています。</target>
        </trans-unit>
        <trans-unit id="b7a9e4a03a08b3eeea1fad1f3a1d55aaf545f0f7" translate="yes" xml:space="preserve">
          <source>This class represents a &quot;provider&quot; for the Java Security API, where a provider implements some or all parts of Java Security. Services that a provider may implement include:</source>
          <target state="translated">このクラスは、JavaセキュリティAPIの「プロバイダ」を表し、プロバイダはJavaセキュリティの一部またはすべての部分を実装します。プロバイダが実装するサービスには、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="0ece3559be87e359f3d54d8c167b3dfbc5c0d531" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface address.</source>
          <target state="translated">このクラスは、ネットワーク・インタフェース・アドレスを表します。</target>
        </trans-unit>
        <trans-unit id="a07c1f6ae0be68a7f58c90ed1384c3217450954f" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface address. In short it's an IP address, a subnet mask and a broadcast address when the address is an IPv4 one. An IP address and a network prefix length in the case of IPv6 address.</source>
          <target state="translated">このクラスは、ネットワークインタフェースアドレスを表します。簡単に言えば、IPアドレス、サブネットマスク、IPv4アドレスの場合はブロードキャストアドレスです。IPv6アドレスの場合はIPアドレスとネットワークプレフィックスの長さを表します。</target>
        </trans-unit>
        <trans-unit id="7040d5a44c74edc7402bbee1fc20547a6a1a81c0" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface.</source>
          <target state="translated">名前と、このインターフェースに割り当てられたIPアドレスのリストで構成されるネットワークインターフェースを表します。</target>
        </trans-unit>
        <trans-unit id="443d8a563e78bfb9a807f7f1f079ce2064dc19ba" translate="yes" xml:space="preserve">
          <source>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface. It is used to identify the local interface on which a multicast group is joined. Interfaces are normally known by names such as &quot;le0&quot;.</source>
          <target state="translated">このクラスは、名前と、このインタフェースに割り当てられたIPアドレスのリストからなるネットワークインタフェースを表します。これは、マルチキャストグループが参加するローカルインタフェースを識別するために使用されます。インターフェイスは通常、&quot;le0 &quot;のような名前で知られています。</target>
        </trans-unit>
        <trans-unit id="5606e78f7fbfecd77da8d162f001a91eea0a3cab" translate="yes" xml:space="preserve">
          <source>This class represents a Reference whose contents is a name, called the link name, that is bound to an atomic name in a context.</source>
          <target state="translated">このクラスは,リンク名と呼ばれる,コンテキスト内の原子名に結び付けられた名前を内容とする参照を表します.</target>
        </trans-unit>
        <trans-unit id="aaef20acd642190f418479ecd58ec3a5d3a99999" translate="yes" xml:space="preserve">
          <source>This class represents a Socket Address with no protocol attachment.</source>
          <target state="translated">このクラスは、プロトコルが添付されていないソケットアドレスを表します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
