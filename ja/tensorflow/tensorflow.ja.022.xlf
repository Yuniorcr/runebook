<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="86619db828880fcc9f3c53510073459e42884551" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.inception_v3</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.inception_v3</target>
        </trans-unit>
        <trans-unit id="5e4ebaae214ec3ebb9d2d45ec174c0f670c85652" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.mobilenet</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.mobilenet</target>
        </trans-unit>
        <trans-unit id="32df904e9995e6ed3b9712251c56dbbade6b24e0" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.mobilenet_v2</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.mobilenet_v2</target>
        </trans-unit>
        <trans-unit id="0742225e004d98a0050c5c00e1749e46bb60bd4b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.nasnet</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.nasnet</target>
        </trans-unit>
        <trans-unit id="bb2715e0d3fc08e88ce4829899b80200bc98ac88" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.resnet</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.resnet</target>
        </trans-unit>
        <trans-unit id="5cb6d72ef448556f2a954b970aa4bf84050ce551" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.resnet50</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.resnet50</target>
        </trans-unit>
        <trans-unit id="b3dac39549923fe59fe24a5927e342083bcc9bcd" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.resnet_v2</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.resnet_v2</target>
        </trans-unit>
        <trans-unit id="42443e409ae11911e25f87045104b53a74cdbc73" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.vgg16</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.vgg16</target>
        </trans-unit>
        <trans-unit id="2ee0f6484cdf87e99bd7f957062d9d99242ea9cc" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.vgg19</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.vgg19</target>
        </trans-unit>
        <trans-unit id="ba615ed78eae827e4fb40f186e19ad933b29d070" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.applications.xception</source>
          <target state="translated">モジュール:tf.compat.v2.keras.applications.xception</target>
        </trans-unit>
        <trans-unit id="203b8c951506aacf11cd5a612d0fce681126aa96" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.backend</source>
          <target state="translated">モジュール:tf.compat.v2.keras.backend</target>
        </trans-unit>
        <trans-unit id="3a360c6d3063bed9c8b1b75658f69efb97677dfd" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.callbacks</source>
          <target state="translated">モジュール:tf.compat.v2.keras.callbacks</target>
        </trans-unit>
        <trans-unit id="e180e4f3fdc59f83187b0680b34c5248e73c5248" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.constraints</source>
          <target state="translated">モジュール:tf.compat.v2.keras.constraints</target>
        </trans-unit>
        <trans-unit id="79bfb0e3669873013a4c9ff8bbe1f14aa19c92ca" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets</target>
        </trans-unit>
        <trans-unit id="d6b8b8aae3e936b4fefdbaf56a0cecadda937321" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.boston_housing</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.boston_housing</target>
        </trans-unit>
        <trans-unit id="b5afee1837ade873dec3e1ba96b76654fa98a788" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.cifar10</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.cifar10</target>
        </trans-unit>
        <trans-unit id="67332d5e7dab9837278cc092778773714a27d0eb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.cifar100</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.cifar100</target>
        </trans-unit>
        <trans-unit id="7306c69a9f4018554b705d1f0cdbca619f189978" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.fashion_mnist</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.fashion_mnist</target>
        </trans-unit>
        <trans-unit id="d5aa0bccdb95112e394d57c018f090af56dbc4a3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.imdb</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.imdb</target>
        </trans-unit>
        <trans-unit id="6c5ab43725a20860e694791613fa0c7e54d17dcf" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.mnist</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.mnist</target>
        </trans-unit>
        <trans-unit id="fe2db04b078a81df0a6b9fffb4bf33b192890b9f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.datasets.reuters</source>
          <target state="translated">モジュール:tf.compat.v2.keras.datasets.reuters</target>
        </trans-unit>
        <trans-unit id="a2dccfba10860d034d28ceaee550dde1772e7e04" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.estimator</source>
          <target state="translated">モジュール:tf.compat.v2.keras.est estimator</target>
        </trans-unit>
        <trans-unit id="bd1310ed8f3b5c47c262bb7897ce8e258e550f36" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.keras.experimental</target>
        </trans-unit>
        <trans-unit id="aa81bf93cbe5f8e5b24870bf780824867f6dab4b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.initializers</source>
          <target state="translated">モジュール:tf.compat.v2.keras.initializers</target>
        </trans-unit>
        <trans-unit id="d9814925aca7f45deddd5ee20574b42fb3fcdfa3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.layers</source>
          <target state="translated">モジュール:tf.compat.v2.keras.layer</target>
        </trans-unit>
        <trans-unit id="ced2d8a74f92e92931e40a317e282e6081f11467" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.layers.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.keras.layer.experimental</target>
        </trans-unit>
        <trans-unit id="0e3336a69ef7b50575b6d3ebc27b76a34145f2df" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.layers.experimental.preprocessing</source>
          <target state="translated">モジュール:tf.compat.v2.keras.layer.experimental.preprocessing</target>
        </trans-unit>
        <trans-unit id="ecebe9ff43ca3f1d42061a98d3ce1c512504b372" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.losses</source>
          <target state="translated">モジュール:tf.compat.v2.keras.loss</target>
        </trans-unit>
        <trans-unit id="b832576708078abdbc1d32ea16b1824ea94bbc10" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.metrics</source>
          <target state="translated">モジュール:tf.compat.v2.keras.metrics</target>
        </trans-unit>
        <trans-unit id="b497233e8eae8f34636b30c85e19bea02f28909f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.mixed_precision</source>
          <target state="translated">モジュール:tf.compat.v2.keras.mixed_precision</target>
        </trans-unit>
        <trans-unit id="c1f0e27d23f97ba2853e1abb76c9d6986b637c1a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.mixed_precision.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.keras.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="59ba8bda992dfd5cac02353d847a0e537391e9a1" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.models</source>
          <target state="translated">モジュール:tf.compat.v2.keras.models</target>
        </trans-unit>
        <trans-unit id="82e8f6365979aa313229b4d90010142436a84fa8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.optimizers</source>
          <target state="translated">モジュール:tf.compat.v2.keras.optimizers</target>
        </trans-unit>
        <trans-unit id="92908a2941b443a2dc9640af2c05623fe2c89633" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.optimizers.schedules</source>
          <target state="translated">モジュール:tf.compat.v2.keras.optimizers.schedule</target>
        </trans-unit>
        <trans-unit id="c0bef4ad7446ec2a6a0c3c0b12266c626e9448b5" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.preprocessing</source>
          <target state="translated">モジュール:tf.compat.v2.keras.preprocessing</target>
        </trans-unit>
        <trans-unit id="1f21dfed865050df1b47cded9188a9b875d57f67" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.preprocessing.image</source>
          <target state="translated">モジュール:tf.compat.v2.keras.preprocessing.image</target>
        </trans-unit>
        <trans-unit id="c717b890f8cd83c42d2c571598186e7f07169d9c" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.preprocessing.sequence</source>
          <target state="translated">モジュール:tf.compat.v2.keras.preprocessing.sequence</target>
        </trans-unit>
        <trans-unit id="d1a7c3a9d009b859c03d95af64d58432d84e5861" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.preprocessing.text</source>
          <target state="translated">モジュール:tf.compat.v2.keras.preprocessing.text</target>
        </trans-unit>
        <trans-unit id="7e238e324d1728f4dc837ceab3635510c1157235" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.regularizers</source>
          <target state="translated">モジュール:tf.compat.v2.keras.regularizers</target>
        </trans-unit>
        <trans-unit id="8814f952cd7e12bc1f6cc5392e8546789038c1cb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.utils</source>
          <target state="translated">モジュール:tf.compat.v2.keras.utils</target>
        </trans-unit>
        <trans-unit id="85fd9e2e9a022acef526a32902edf04e46958c40" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.wrappers</source>
          <target state="translated">モジュール:tf.compat.v2.keras.wrappers</target>
        </trans-unit>
        <trans-unit id="252418539c6b85609cb833f32eed106955368e3b" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.keras.wrappers.scikit_learn</source>
          <target state="translated">モジュール:tf.compat.v2.keras.wrappers.scikit_learn</target>
        </trans-unit>
        <trans-unit id="2bdc17144883269ef16cccf802b015f81d54ddd0" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.linalg</source>
          <target state="translated">モジュール:tf.compat.v2.linalg</target>
        </trans-unit>
        <trans-unit id="edac456bd994d4af82fc55f20d7c0cf1e4e96cb6" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.lite</source>
          <target state="translated">モジュール:tf.compat.v2.lite</target>
        </trans-unit>
        <trans-unit id="44869555fdd123d33ad00e4e0918dead5adc47c4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.lite.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.lite.experimental</target>
        </trans-unit>
        <trans-unit id="13bc322ca86bbe8081bd1c62d705fc5f1322304a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.lookup</source>
          <target state="translated">モジュール:tf.compat.v2.lookup</target>
        </trans-unit>
        <trans-unit id="dd8bba47d4b5dd78364778982d596f36801c0855" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.lookup.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.lookup.experimental</target>
        </trans-unit>
        <trans-unit id="5d238dc1e04556d2eef3a1576a0240c3bbe5aa5f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.math</source>
          <target state="translated">モジュール:tf.compat.v2.math</target>
        </trans-unit>
        <trans-unit id="d65e16bc1ccf54423ac1646f9b9729f3a1e4449e" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.mixed_precision</source>
          <target state="translated">モジュール:tf.compat.v2.mixed_precision</target>
        </trans-unit>
        <trans-unit id="cecf4bd69da95016ab2a4392173ab4782c68eb82" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.mixed_precision.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="232c697a806d5fae839193681829215a3cca00ef" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.mlir</source>
          <target state="translated">モジュール:tf.compat.v2.mlir</target>
        </trans-unit>
        <trans-unit id="7d897c7fedf03ed2c57a2f99816f36d7d0a507c5" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.mlir.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.mlir.experimental</target>
        </trans-unit>
        <trans-unit id="96c1296ff13bbb61b46505cd0d19a1cb8e0577c9" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.nest</source>
          <target state="translated">モジュール:tf.compat.v2.nest</target>
        </trans-unit>
        <trans-unit id="e3aa4b8c250920c139352a06c81723df70b9d0d3" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.nn</source>
          <target state="translated">モジュール:tf.compat.v2.nn</target>
        </trans-unit>
        <trans-unit id="2c053adb13955295e233750defff848c0335f17f" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.quantization</source>
          <target state="translated">モジュール:tf.compat.v2.quantization</target>
        </trans-unit>
        <trans-unit id="680aa23fc0c6752a3b63dc96cf9e4dd86a63145a" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.queue</source>
          <target state="translated">モジュール:tf.compat.v2.queue</target>
        </trans-unit>
        <trans-unit id="b94e97b4f6440ebe724fc0da91396d3ba10fd5d0" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.ragged</source>
          <target state="translated">モジュール:tf.compat.v2.ragged</target>
        </trans-unit>
        <trans-unit id="dff01c218413af70b4efe2e0e9f1346980547f2d" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.random</source>
          <target state="translated">モジュール:tf.compat.v2.random</target>
        </trans-unit>
        <trans-unit id="201d3e0d654ac228de0188dd7acbc84f88ea2841" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.random.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.random.experimental</target>
        </trans-unit>
        <trans-unit id="09cec51443618e332011b8fcf7ba8638c0bb59d5" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.raw_ops</source>
          <target state="translated">モジュール:tf.compat.v2.raw_ops</target>
        </trans-unit>
        <trans-unit id="e6a2c45a4d5ecd2b1eac1d76c3981f81c03c9593" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.saved_model</source>
          <target state="translated">モジュール:tf.compat.v2.saved_model</target>
        </trans-unit>
        <trans-unit id="61d971f911898b4678a5b368625034667e19e4eb" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.sets</source>
          <target state="translated">モジュール:tf.compat.v2.sets</target>
        </trans-unit>
        <trans-unit id="cab2550168a63fb498d2cd24b3f7b4553099da35" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.signal</source>
          <target state="translated">モジュール:tf.compat.v2.signal</target>
        </trans-unit>
        <trans-unit id="7933d00354499bf46af8b5ac1e0c2b6e0f9a1012" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.sparse</source>
          <target state="translated">モジュール:tf.compat.v2.sparse</target>
        </trans-unit>
        <trans-unit id="b87cc1d4c2519bcbd31473c9f5cf80c5b37566cf" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.strings</source>
          <target state="translated">モジュール:tf.compat.v2.string</target>
        </trans-unit>
        <trans-unit id="6e51184b3b3deeb71e30dec0c82d63317d3029a8" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.sysconfig</source>
          <target state="translated">モジュール:tf.compat.v2.sysconfig</target>
        </trans-unit>
        <trans-unit id="07a5623df8755e7e902db94169d2ad3c4352a0c4" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.test</source>
          <target state="translated">モジュール:tf.compat.v2.test</target>
        </trans-unit>
        <trans-unit id="a6fb2cb6e5bcca661f84b006431c16803a69cdb6" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.tpu</source>
          <target state="translated">モジュール:tf.compat.v2.tpu</target>
        </trans-unit>
        <trans-unit id="cd6274142dc487f38bd21f7dcc98446503b86442" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.tpu.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.tpu.experimental</target>
        </trans-unit>
        <trans-unit id="52a69e5fe08a54fa022a3104c96a34ea5e8af804" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.train</source>
          <target state="translated">モジュール:tf.compat.v2.train</target>
        </trans-unit>
        <trans-unit id="63c73c88207e2ce20430f4f07145b9ee622da5db" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.train.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.train.experimental</target>
        </trans-unit>
        <trans-unit id="c416758434ac9437a90544375ef6b61aa03df879" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.version</source>
          <target state="translated">モジュール:tf.compat.v2.version</target>
        </trans-unit>
        <trans-unit id="4575b93c4cdfc996d85e3827ebed941d17eed710" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.xla</source>
          <target state="translated">モジュール:tf.compat.v2.xla</target>
        </trans-unit>
        <trans-unit id="9173152f280ee81c678860e28203ab54fc1d7857" translate="yes" xml:space="preserve">
          <source>Module: tf.compat.v2.xla.experimental</source>
          <target state="translated">モジュール:tf.compat.v2.xla.experimental</target>
        </trans-unit>
        <trans-unit id="dde4906736734da274cee0aa9c428ce3773400af" translate="yes" xml:space="preserve">
          <source>Module: tf.config</source>
          <target state="translated">モジュール:tf.config</target>
        </trans-unit>
        <trans-unit id="91e833765bf7e4bdca2713b69d92ca8e006e5cd8" translate="yes" xml:space="preserve">
          <source>Module: tf.config.experimental</source>
          <target state="translated">モジュール:tf.config.experimental</target>
        </trans-unit>
        <trans-unit id="1dc089e7483cd0ae0a33e0009ce269c6581befb3" translate="yes" xml:space="preserve">
          <source>Module: tf.config.optimizer</source>
          <target state="translated">モジュール:tf.config.optimizer</target>
        </trans-unit>
        <trans-unit id="dc9ee30c314f0a7cf5dfc278a06247058468c1ff" translate="yes" xml:space="preserve">
          <source>Module: tf.config.threading</source>
          <target state="translated">モジュール:tf.config.threading</target>
        </trans-unit>
        <trans-unit id="5f8da812e13d36cca1f166939e6e2215a69f37f2" translate="yes" xml:space="preserve">
          <source>Module: tf.data</source>
          <target state="translated">モジュール:tf.data</target>
        </trans-unit>
        <trans-unit id="fd722c7cb464a75966193da502cdf399818983f3" translate="yes" xml:space="preserve">
          <source>Module: tf.data.experimental</source>
          <target state="translated">モジュール:tf.data.experimental</target>
        </trans-unit>
        <trans-unit id="766ad7e416c498b2ad45f1539479e87b2c8d5486" translate="yes" xml:space="preserve">
          <source>Module: tf.debugging</source>
          <target state="translated">モジュール:tf.debugging</target>
        </trans-unit>
        <trans-unit id="3662ca6d115266110ff416dcda122a5c8db354e5" translate="yes" xml:space="preserve">
          <source>Module: tf.debugging.experimental</source>
          <target state="translated">モジュール:tf.debugging.experimental</target>
        </trans-unit>
        <trans-unit id="42ab2d51c874a01a2731eae41227e706868def0c" translate="yes" xml:space="preserve">
          <source>Module: tf.distribute</source>
          <target state="translated">モジュール:tf.distribute</target>
        </trans-unit>
        <trans-unit id="2cbf726f148c56874af97f386b0b519d325d72df" translate="yes" xml:space="preserve">
          <source>Module: tf.distribute.cluster_resolver</source>
          <target state="translated">モジュール:tf.distribute.cluster_resolver</target>
        </trans-unit>
        <trans-unit id="70366e789bba19d6feb3d67b904cad32e1e7d9c4" translate="yes" xml:space="preserve">
          <source>Module: tf.distribute.experimental</source>
          <target state="translated">モジュール:tf.distribute.experimental</target>
        </trans-unit>
        <trans-unit id="281a9024b91d97c70d2db549561f82282a00df8d" translate="yes" xml:space="preserve">
          <source>Module: tf.dtypes</source>
          <target state="translated">モジュール:tf.dtypes</target>
        </trans-unit>
        <trans-unit id="38c88a2a2f5f6b2c20e9df570f34fa9654eee477" translate="yes" xml:space="preserve">
          <source>Module: tf.errors</source>
          <target state="translated">モジュール:tf.errors</target>
        </trans-unit>
        <trans-unit id="3bbc4967b6656ab968d00624174595595ccb50fd" translate="yes" xml:space="preserve">
          <source>Module: tf.estimator</source>
          <target state="translated">モジュール:tf.est estimator</target>
        </trans-unit>
        <trans-unit id="2ae056df054efc4b23d29890bf7956f3e3b0a994" translate="yes" xml:space="preserve">
          <source>Module: tf.estimator.experimental</source>
          <target state="translated">モジュール:tf.est estimator.experimental</target>
        </trans-unit>
        <trans-unit id="8d88340c9ef77961972c3661431612b1de354997" translate="yes" xml:space="preserve">
          <source>Module: tf.estimator.export</source>
          <target state="translated">モジュール:tf.est estimator.export</target>
        </trans-unit>
        <trans-unit id="7f4186a4343e9fc2e13e2473f4ebb587d280b204" translate="yes" xml:space="preserve">
          <source>Module: tf.experimental</source>
          <target state="translated">モジュール:tf.experimental</target>
        </trans-unit>
        <trans-unit id="1927722bf45b4f025e40504d581575280527ab95" translate="yes" xml:space="preserve">
          <source>Module: tf.experimental.tensorrt</source>
          <target state="translated">モジュール:tf.experimental.tensorrt</target>
        </trans-unit>
        <trans-unit id="c98265df3417934b2a9662ce378c9445b0af3e55" translate="yes" xml:space="preserve">
          <source>Module: tf.feature_column</source>
          <target state="translated">モジュール:tf.feature_column</target>
        </trans-unit>
        <trans-unit id="8d551a79eeabc0ec2220a237168d1b3191533a4a" translate="yes" xml:space="preserve">
          <source>Module: tf.graph_util</source>
          <target state="translated">モジュール:tf.graph_util</target>
        </trans-unit>
        <trans-unit id="7c81f6aafc3be2a02e47c7e8a04aa42d6fbce37c" translate="yes" xml:space="preserve">
          <source>Module: tf.image</source>
          <target state="translated">モジュール:tf.image</target>
        </trans-unit>
        <trans-unit id="b560f84600bfafb56408243ffd6267af5ca37394" translate="yes" xml:space="preserve">
          <source>Module: tf.io</source>
          <target state="translated">モジュール:tf.io</target>
        </trans-unit>
        <trans-unit id="60e14ce155a4ec7de0d541d4788fc226feff1b6e" translate="yes" xml:space="preserve">
          <source>Module: tf.io.gfile</source>
          <target state="translated">モジュール:tf.io.gfile</target>
        </trans-unit>
        <trans-unit id="62b34493fbbb808c3c13a7d66697935a260c1d42" translate="yes" xml:space="preserve">
          <source>Module: tf.keras</source>
          <target state="translated">モジュール:tf.keras</target>
        </trans-unit>
        <trans-unit id="3a61a47190a2a94e7e078a9b9754db93d703db5f" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.activations</source>
          <target state="translated">モジュール:tf.keras.activations</target>
        </trans-unit>
        <trans-unit id="14b3200b3ce02f11e71deb01d53d00cdcb23be6b" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications</source>
          <target state="translated">モジュール:tf.keras.applications</target>
        </trans-unit>
        <trans-unit id="567859b8e6b20f15c063408009b9d3b1f59a397c" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.densenet</source>
          <target state="translated">モジュール:tf.keras.applications.densenet</target>
        </trans-unit>
        <trans-unit id="5305b62aa6b9bda4e939c7bc78229c44f1a412fe" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.imagenet_utils</source>
          <target state="translated">モジュール:tf.keras.applications.imagenet_utils</target>
        </trans-unit>
        <trans-unit id="474e492770d8f4ef84237ecf1ea769e5e8d33772" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.inception_resnet_v2</source>
          <target state="translated">モジュール:tf.keras.applications.inception_resnet_v2</target>
        </trans-unit>
        <trans-unit id="88586f0164ef1713c98e0494dfb479e0f9ba2478" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.inception_v3</source>
          <target state="translated">モジュール:tf.keras.applications.inception_v3</target>
        </trans-unit>
        <trans-unit id="906b95627638ee8b0ffafd30d0315073171396df" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.mobilenet_v2</source>
          <target state="translated">モジュール:tf.keras.applications.mobilenet_v2</target>
        </trans-unit>
        <trans-unit id="1a1f15ca3b373b9ab951be4f17d1174c4245d269" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.nasnet</source>
          <target state="translated">モジュール:tf.keras.applications.nasnet</target>
        </trans-unit>
        <trans-unit id="6e20ad5f8ef73ac960c70c5f444f5d63811ea18a" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.resnet</source>
          <target state="translated">モジュール:tf.keras.applications.resnet</target>
        </trans-unit>
        <trans-unit id="23a827b62d4a35c11772230156a50c6de318c694" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.applications.resnet_v2</source>
          <target state="translated">モジュール:tf.keras.applications.resnet_v2</target>
        </trans-unit>
        <trans-unit id="de4f7df51d3bb0a535310ba3728c0a442cc6f9f5" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.backend</source>
          <target state="translated">モジュール:tf.keras.backend</target>
        </trans-unit>
        <trans-unit id="4606dd70d37e074e5c55431ef4b0509d92b55f47" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.callbacks</source>
          <target state="translated">モジュール:tf.keras.callbacks</target>
        </trans-unit>
        <trans-unit id="1713b2b7ca316d37827a0a64c6c166d066c1cdd0" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.constraints</source>
          <target state="translated">モジュール:tf.keras.constraints</target>
        </trans-unit>
        <trans-unit id="01a2f0667f9165efb48a4767505a1dc1238373e1" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets</source>
          <target state="translated">モジュール:tf.keras.datasets</target>
        </trans-unit>
        <trans-unit id="9f2f6fcaccf555783797ccdc6e6cf6b2c10b69d2" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.boston_housing</source>
          <target state="translated">モジュール:tf.keras.datasets.boston_housing</target>
        </trans-unit>
        <trans-unit id="503eddfc1727595d16538481f430d553862ba952" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.cifar10</source>
          <target state="translated">モジュール:tf.keras.datasets.cifar10</target>
        </trans-unit>
        <trans-unit id="73006b80f912c388c804efbfaaac9316bda9b124" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.cifar100</source>
          <target state="translated">モジュール:tf.keras.datasets.cifar100</target>
        </trans-unit>
        <trans-unit id="35b228e67fefe320c4ab05851847b969ff8a6e30" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.fashion_mnist</source>
          <target state="translated">モジュール:tf.keras.datasets.fashion_mnist</target>
        </trans-unit>
        <trans-unit id="e5224aa650c87521ea851cae6a48ec70fa79b12c" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.imdb</source>
          <target state="translated">モジュール:tf.keras.datasets.imdb</target>
        </trans-unit>
        <trans-unit id="5bcee1b17559b0f2d444ff18b60c2ded6e985a41" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.mnist</source>
          <target state="translated">モジュール:tf.keras.datasets.mnist</target>
        </trans-unit>
        <trans-unit id="fc13a4aaab7a435576bb20a428a0e0e7625fa554" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.datasets.reuters</source>
          <target state="translated">モジュール:tf.keras.datasets.reuters</target>
        </trans-unit>
        <trans-unit id="ad48630c5fe4cf5ba85fd2c66797a28f3d8f6556" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.estimator</source>
          <target state="translated">モジュール:tf.keras.est estimator</target>
        </trans-unit>
        <trans-unit id="56723e70ca1141c75ef1b9c5141c1b5a3862ff46" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.experimental</source>
          <target state="translated">モジュール:tf.keras.experimental</target>
        </trans-unit>
        <trans-unit id="9783f6eb284db2c02e9a0d2f14ca7d2502d050ec" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.initializers</source>
          <target state="translated">モジュール:tf.keras.initializers</target>
        </trans-unit>
        <trans-unit id="12efd5c1e51067f555a06ea02d3e4a8a3223e377" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.layers</source>
          <target state="translated">モジュール:tf.keras.layer</target>
        </trans-unit>
        <trans-unit id="339b46aac7dddeb665b5da5377a2fc3aad9a5a0f" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.layers.experimental</source>
          <target state="translated">モジュール:tf.keras.layer.experimental</target>
        </trans-unit>
        <trans-unit id="35902804ea971a2f79d6d663e15ebcfc7b1aad17" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.layers.experimental.preprocessing</source>
          <target state="translated">モジュール:tf.keras.layer.experimental.preprocessing</target>
        </trans-unit>
        <trans-unit id="8efb58457fdb8b0875e0187a3e4b6fcbdc3abe32" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.losses</source>
          <target state="translated">モジュール:tf.keras.loss</target>
        </trans-unit>
        <trans-unit id="40ee695cd0c0dd67629b279a1a5626b34d9d5d55" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.metrics</source>
          <target state="translated">モジュール:tf.keras.metrics</target>
        </trans-unit>
        <trans-unit id="22c8dc31d809601650ca9cde67298dbdf2500ff9" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.mixed_precision</source>
          <target state="translated">モジュール:tf.keras.mixed_precision</target>
        </trans-unit>
        <trans-unit id="7d27299723378d48344fe00475a965c6bc4e51db" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.mixed_precision.experimental</source>
          <target state="translated">モジュール:tf.keras.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="60ead6b4b5714de02be73a20b63c5e49f891a34e" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.models</source>
          <target state="translated">モジュール:tf.keras.models</target>
        </trans-unit>
        <trans-unit id="55b7358c3f927ca5891e368a85bbcecf0d4cb610" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.optimizers</source>
          <target state="translated">モジュール:tf.keras.optimizers</target>
        </trans-unit>
        <trans-unit id="a9038672f97393e68ee563dcc6b0ce88bd2ba073" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.optimizers.schedules</source>
          <target state="translated">モジュール:tf.keras.optimizers.schedule</target>
        </trans-unit>
        <trans-unit id="aad395d625636b1ef872968179c5f7201dce23b0" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.preprocessing</source>
          <target state="translated">モジュール:tf.keras.preprocessing</target>
        </trans-unit>
        <trans-unit id="985c9fe08beca20c3f19673219ee983ef85bbf5b" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.preprocessing.image</source>
          <target state="translated">モジュール:tf.keras.preprocessing.image</target>
        </trans-unit>
        <trans-unit id="7a37c9eb542efa46d06e38ce16310629718dbfd4" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.preprocessing.sequence</source>
          <target state="translated">モジュール:tf.keras.preprocessing.sequence</target>
        </trans-unit>
        <trans-unit id="6231d0a30a2a478fce71ccd348d0697bb487b201" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.preprocessing.text</source>
          <target state="translated">モジュール:tf.keras.preprocessing.text</target>
        </trans-unit>
        <trans-unit id="65dd6eef3c3cb5b8ff3b9fb60720def29e446377" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.regularizers</source>
          <target state="translated">モジュール:tf.keras.regularizers</target>
        </trans-unit>
        <trans-unit id="f1d72276ba6bf622712254ba3239064c96074e21" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.utils</source>
          <target state="translated">モジュール:tf.keras.utils</target>
        </trans-unit>
        <trans-unit id="3a9176ec0f4a64ee0c4aeb11a203cb57236d34e5" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.wrappers</source>
          <target state="translated">モジュール:tf.keras.wrapper</target>
        </trans-unit>
        <trans-unit id="19ae98ecc591cfb3c55c94054ca0253abb4a67ed" translate="yes" xml:space="preserve">
          <source>Module: tf.keras.wrappers.scikit_learn</source>
          <target state="translated">モジュール:tf.keras.wrappers.scikit_learn</target>
        </trans-unit>
        <trans-unit id="f6a09751cdd7d0ca683af8797af26a7da516a42c" translate="yes" xml:space="preserve">
          <source>Module: tf.linalg</source>
          <target state="translated">モジュール:tf.linalg</target>
        </trans-unit>
        <trans-unit id="c9a98410327b7ab6ebee6d6ad4068aa8a28fa219" translate="yes" xml:space="preserve">
          <source>Module: tf.lite</source>
          <target state="translated">モジュール:tf.lite</target>
        </trans-unit>
        <trans-unit id="5119440e4b0902a2f9e3bc15934d20e8ad9b7d81" translate="yes" xml:space="preserve">
          <source>Module: tf.lite.experimental</source>
          <target state="translated">モジュール:tf.lite.experimental</target>
        </trans-unit>
        <trans-unit id="7ca3916d05c9fbfbc0a145bbbf629cf4ae123a85" translate="yes" xml:space="preserve">
          <source>Module: tf.lookup</source>
          <target state="translated">モジュール:tf.lookup</target>
        </trans-unit>
        <trans-unit id="d84cbf6de1c45d2e6c747bf381aeec29a6a0b5d3" translate="yes" xml:space="preserve">
          <source>Module: tf.lookup.experimental</source>
          <target state="translated">モジュール:tf.lookup.experimental</target>
        </trans-unit>
        <trans-unit id="52d57dd79174188f7fe06b0687c3990243a79ff5" translate="yes" xml:space="preserve">
          <source>Module: tf.math</source>
          <target state="translated">モジュール:tf.math</target>
        </trans-unit>
        <trans-unit id="b66b43861572f13ac464893a79fdcf54e9b18de7" translate="yes" xml:space="preserve">
          <source>Module: tf.mixed_precision</source>
          <target state="translated">モジュール:tf.mixed_precision</target>
        </trans-unit>
        <trans-unit id="51e6e7b40c893c3bc63952e418a3440bf54f704f" translate="yes" xml:space="preserve">
          <source>Module: tf.mixed_precision.experimental</source>
          <target state="translated">モジュール:tf.mixed_precision.experimental</target>
        </trans-unit>
        <trans-unit id="75c1d0effa8b127f48fd78fc5bca665e58934c86" translate="yes" xml:space="preserve">
          <source>Module: tf.mlir</source>
          <target state="translated">モジュール:tf.mlir</target>
        </trans-unit>
        <trans-unit id="336b4a755085d14033d5449dddc58e38dfdbf7f6" translate="yes" xml:space="preserve">
          <source>Module: tf.mlir.experimental</source>
          <target state="translated">モジュール:tf.mlir.experimental</target>
        </trans-unit>
        <trans-unit id="51a9d8a37e17c143bd93aa0ccc757e06e1af7ade" translate="yes" xml:space="preserve">
          <source>Module: tf.nest</source>
          <target state="translated">モジュール:tf.nest</target>
        </trans-unit>
        <trans-unit id="308f774a13bc5bcd091757e998fb5dfaaa56d7e2" translate="yes" xml:space="preserve">
          <source>Module: tf.nn</source>
          <target state="translated">モジュール:tf.nn</target>
        </trans-unit>
        <trans-unit id="ff66cd137efc0b592837d7f382cda8d23a8c0458" translate="yes" xml:space="preserve">
          <source>Module: tf.quantization</source>
          <target state="translated">モジュール:tf.quantization</target>
        </trans-unit>
        <trans-unit id="a5d2f6a05dcf42c93a1f07948e678709b7cc0e8a" translate="yes" xml:space="preserve">
          <source>Module: tf.queue</source>
          <target state="translated">モジュール:tf.queue</target>
        </trans-unit>
        <trans-unit id="94ac524bcde758f5bfea5267b7b4c63e40c1d6f3" translate="yes" xml:space="preserve">
          <source>Module: tf.ragged</source>
          <target state="translated">モジュール:tf.ragged</target>
        </trans-unit>
        <trans-unit id="226d63c95bf2ae9b78aced830fec359e36584f39" translate="yes" xml:space="preserve">
          <source>Module: tf.random</source>
          <target state="translated">モジュール:tf.random</target>
        </trans-unit>
        <trans-unit id="1e0e97b20a3b3fa5545bb1e397b444ba7b0717cc" translate="yes" xml:space="preserve">
          <source>Module: tf.random.experimental</source>
          <target state="translated">モジュール:tf.random.experimental</target>
        </trans-unit>
        <trans-unit id="e333a461f8ee0f7824177b27fe5ce02567ee6bac" translate="yes" xml:space="preserve">
          <source>Module: tf.raw_ops</source>
          <target state="translated">モジュール:tf.raw_ops</target>
        </trans-unit>
        <trans-unit id="4d2720dd4551b2bb04c91df53a6f8f1ec743f39d" translate="yes" xml:space="preserve">
          <source>Module: tf.saved_model</source>
          <target state="translated">モジュール:tf.saved_model</target>
        </trans-unit>
        <trans-unit id="7fea0e8b66bfdf6f75962dca2a09e7ea39f49692" translate="yes" xml:space="preserve">
          <source>Module: tf.sets</source>
          <target state="translated">モジュール:tf.sets</target>
        </trans-unit>
        <trans-unit id="65ad550a8957e484267d822d2d8a9cda6c822225" translate="yes" xml:space="preserve">
          <source>Module: tf.signal</source>
          <target state="translated">モジュール:tf.signal</target>
        </trans-unit>
        <trans-unit id="807427894dd22d64865c126b6fc7c2578032f08a" translate="yes" xml:space="preserve">
          <source>Module: tf.sparse</source>
          <target state="translated">モジュール:tf.sparse</target>
        </trans-unit>
        <trans-unit id="5948e3907dac1b5644b5da46255b0cf41abc32c8" translate="yes" xml:space="preserve">
          <source>Module: tf.strings</source>
          <target state="translated">モジュール:tf.string</target>
        </trans-unit>
        <trans-unit id="1a6f9cb1c84e11bb46d5c4383df1a28f7804aa69" translate="yes" xml:space="preserve">
          <source>Module: tf.summary</source>
          <target state="translated">モジュール:tf.summary</target>
        </trans-unit>
        <trans-unit id="b1c7577e5d0e367dd0ec3d0fe650c7ad6dc3802d" translate="yes" xml:space="preserve">
          <source>Module: tf.summary.experimental</source>
          <target state="translated">モジュール:tf.summary.experimental</target>
        </trans-unit>
        <trans-unit id="65d423b3ca5d7b85844cbf9b078f1f14f21b4c85" translate="yes" xml:space="preserve">
          <source>Module: tf.sysconfig</source>
          <target state="translated">モジュール:tf.sysconfig</target>
        </trans-unit>
        <trans-unit id="61f527c0dffced0aa9924d1494a52b8948a6a9a5" translate="yes" xml:space="preserve">
          <source>Module: tf.test</source>
          <target state="translated">モジュール:tf.test</target>
        </trans-unit>
        <trans-unit id="aee07cdc435c48724ac75e5ca0a4dd08092ac8a3" translate="yes" xml:space="preserve">
          <source>Module: tf.tpu</source>
          <target state="translated">モジュール:tf.tpu</target>
        </trans-unit>
        <trans-unit id="f40f06cd3dafa7bff6b8f933fbd23c9db48a3489" translate="yes" xml:space="preserve">
          <source>Module: tf.tpu.experimental</source>
          <target state="translated">モジュール:tf.tpu.experimental</target>
        </trans-unit>
        <trans-unit id="2511a0f8e062acd4fff1a29bd2c7cb37f191a85f" translate="yes" xml:space="preserve">
          <source>Module: tf.train</source>
          <target state="translated">モジュール:tf.train</target>
        </trans-unit>
        <trans-unit id="4cfc4bc046001b910fd7e9757e1d6791e4c7a836" translate="yes" xml:space="preserve">
          <source>Module: tf.train.experimental</source>
          <target state="translated">モジュール:tf.train.experimental</target>
        </trans-unit>
        <trans-unit id="e16b7d340e90a15775f83f89ac253213909d08ec" translate="yes" xml:space="preserve">
          <source>Module: tf.version</source>
          <target state="translated">モジュール:tf.version</target>
        </trans-unit>
        <trans-unit id="77c50e0c68b7601b4ca6968d9f5e444040af7025" translate="yes" xml:space="preserve">
          <source>Module: tf.xla</source>
          <target state="translated">モジュール:tf.xla</target>
        </trans-unit>
        <trans-unit id="806e6f0af5a535da0d1411d128810f02bc22ff67" translate="yes" xml:space="preserve">
          <source>Module: tf.xla.experimental</source>
          <target state="translated">モジュール:tf.xla.experimental</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="2d1217d8eb2ce02780571a3a5cce351f01e73a2a" translate="yes" xml:space="preserve">
          <source>Monitors the loss tensor and stops training if loss is NaN.</source>
          <target state="translated">損失テンソルを監視し、損失がNaNの場合はトレーニングを停止します。</target>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="translated">その他の例。</target>
        </trans-unit>
        <trans-unit id="7eca691c96a6c73420f0814fa97ed710f8916fb4" translate="yes" xml:space="preserve">
          <source>More formally, let</source>
          <target state="translated">より正式には</target>
        </trans-unit>
        <trans-unit id="6df85f59a780af302cc4c65ad2ae971b93b79625" translate="yes" xml:space="preserve">
          <source>More information about SavedModel and signatures can be found here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md.</source>
          <target state="translated">SavedModel と署名についての詳細はこちらをご覧ください:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md。</target>
        </trans-unit>
        <trans-unit id="6ecf714381162b0b5997018ef32b76d0a0ef35aa" translate="yes" xml:space="preserve">
          <source>More information about cuDNN can be found on the &lt;a href=&quot;https://developer.nvidia.com/cudnn&quot;&gt;NVIDIA developer website&lt;/a&gt;. Can only be run on GPU.</source>
          <target state="translated">cuDNNの詳細については、&lt;a href=&quot;https://developer.nvidia.com/cudnn&quot;&gt;NVIDIA開発者のWebサイトを参照してください&lt;/a&gt;。GPUでのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="1d92fd499d38c58885410121b45e11028258bb7d" translate="yes" xml:space="preserve">
          <source>More precisely, where &lt;a href=&quot;reduce_logsumexp&quot;&gt;&lt;code&gt;tf.math.reduce_logsumexp&lt;/code&gt;&lt;/a&gt; uses the following trick:</source>
          <target state="translated">より正確には、&lt;a href=&quot;reduce_logsumexp&quot;&gt; &lt;code&gt;tf.math.reduce_logsumexp&lt;/code&gt; &lt;/a&gt;は次のトリックを使用します。</target>
        </trans-unit>
        <trans-unit id="4d39c130b6efea5237e9e9cf557b27d05adf32c9" translate="yes" xml:space="preserve">
          <source>More precisely: With probability &lt;code&gt;rate&lt;/code&gt; elements of &lt;code&gt;x&lt;/code&gt; are set to &lt;code&gt;0&lt;/code&gt;. The remaining elemenst are scaled up by &lt;code&gt;1.0 / (1 - rate)&lt;/code&gt;, so that the expected value is preserved.</source>
          <target state="translated">より正確には、確率 &lt;code&gt;rate&lt;/code&gt; を使用して、 &lt;code&gt;x&lt;/code&gt; の要素を &lt;code&gt;0&lt;/code&gt; に設定します。残りの要素は &lt;code&gt;1.0 / (1 - rate)&lt;/code&gt; でスケールアップされるため、期待値が保持されます。</target>
        </trans-unit>
        <trans-unit id="0fd765d4b9a4d9102d8a4a364cc4e6758c048ff6" translate="yes" xml:space="preserve">
          <source>More specifically:</source>
          <target state="translated">より具体的には</target>
        </trans-unit>
        <trans-unit id="460fa196449002a40abc9ebd910c8436ea57cd6c" translate="yes" xml:space="preserve">
          <source>More verbose logging is useful to enable when filing bug reports or doing more in-depth debugging.</source>
          <target state="translated">より詳細なロギングは、バグレポートを提出したり、より詳細なデバッグを行う際に有効にするのに便利です。</target>
        </trans-unit>
        <trans-unit id="f73ce5d4d78b2a64ac869595355a54d06eacb14f" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; methods may only be executed in a cross-replica context, in a replica context you should use the API of the &lt;a href=&quot;replicacontext&quot;&gt;&lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt;&lt;/a&gt; object returned by this method instead.</source>
          <target state="translated">ほとんどの&lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;メソッドは、クロスレプリカコンテキストでのみ実行できます。レプリカコンテキストでは、代わりにこのメソッドによって返される&lt;a href=&quot;replicacontext&quot;&gt; &lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt; &lt;/a&gt;オブジェクトのAPIを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f7dd2612e3255c926b529275b877b094ddd3a59" translate="yes" xml:space="preserve">
          <source>Most dataset input pipelines should end with a call to &lt;code&gt;prefetch&lt;/code&gt;. This allows later elements to be prepared while the current element is being processed. This often improves latency and throughput, at the cost of using additional memory to store prefetched elements.</source>
          <target state="translated">ほとんどのデータセット入力パイプラインは、 &lt;code&gt;prefetch&lt;/code&gt; の呼び出しで終了する必要があります。これにより、現在の要素の処理中に、後の要素を準備できます。これにより、多くの場合、プリフェッチされた要素を格納するために追加のメモリを使用する代わりに、レイテンシとスループットが向上します。</target>
        </trans-unit>
        <trans-unit id="d29a735e0a5e68a47bd783dc12341f2f408ce6a1" translate="yes" xml:space="preserve">
          <source>Most users will also want to call &lt;a href=&quot;../train/create_global_step&quot;&gt;&lt;code&gt;tf.compat.v1.train.create_global_step&lt;/code&gt;&lt;/a&gt; which can happen before or after this function is called.</source>
          <target state="translated">ほとんどのユーザーは、この関数が呼び出される前または後に発生する可能性のある&lt;a href=&quot;../train/create_global_step&quot;&gt; &lt;code&gt;tf.compat.v1.train.create_global_step&lt;/code&gt; &lt;/a&gt;も呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b0eccc945bc9774c76c8755832329a850ce0ce3d" translate="yes" xml:space="preserve">
          <source>Mostly equivalent to numpy.linalg.norm. Not supported: ord &amp;lt;= 0, 2-norm for matrices, nuclear norm. Other differences: a) If axis is &lt;code&gt;None&lt;/code&gt;, treats the flattened &lt;code&gt;tensor&lt;/code&gt; as a vector regardless of rank. b) Explicitly supports 'euclidean' norm as the default, including for higher order tensors.</source>
          <target state="translated">numpy.linalg.normとほぼ同等です。サポートされていません：ord &amp;lt;= 0、行列の2ノルム、核ノルム。その他の違い：a）axisが &lt;code&gt;None&lt;/code&gt; の場合、平坦化された &lt;code&gt;tensor&lt;/code&gt; をランクに関係なくベクトルとして扱います。b）高次テンソルを含め、デフォルトとして「ユークリッド」ノルムを明示的にサポートします。</target>
        </trans-unit>
        <trans-unit id="d6edca7a5606796b22a9f22f08c2d2b9f9851b51" translate="yes" xml:space="preserve">
          <source>Mostly equivalent to numpy.linalg.svd, except that * The order of output arguments here is &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; when &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as opposed to &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; for numpy.linalg.svd. * full_matrices is &lt;code&gt;False&lt;/code&gt; by default as opposed to &lt;code&gt;True&lt;/code&gt; for numpy.linalg.svd. * tf.linalg.svd uses the standard definition of the SVD \(A = U \Sigma V^H\), such that the left singular vectors of &lt;code&gt;a&lt;/code&gt; are the columns of &lt;code&gt;u&lt;/code&gt;, while the right singular vectors of &lt;code&gt;a&lt;/code&gt; are the columns of &lt;code&gt;v&lt;/code&gt;. On the other hand, numpy.linalg.svd returns the adjoint \(V^H\) as the third output argument.</source>
          <target state="translated">* numpy.linalg.svdの &lt;code&gt;u&lt;/code&gt; 、 &lt;code&gt;s&lt;/code&gt; 、 &lt;code&gt;v&lt;/code&gt; とは対照的に、 &lt;code&gt;compute_uv&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、ここでの出力引数の順序は &lt;code&gt;s&lt;/code&gt; 、 &lt;code&gt;u&lt;/code&gt; 、 &lt;code&gt;v&lt;/code&gt; です。 * full_matricesは、numpy.linalg.svdの &lt;code&gt;True&lt;/code&gt; ではなく、デフォルトで &lt;code&gt;False&lt;/code&gt; です。 * tf.linalg.svdは左特異ベクトルように、（A = U \シグマV ^ H \）\ SVDの標準定義を使用するカラムである &lt;code&gt;u&lt;/code&gt; の右特異ベクトルが、カラムでありますの &lt;code&gt;v&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 。一方、numpy.linalg.svdは、3番目の出力引数として随伴\（V ^ H \）を返します。</target>
        </trans-unit>
        <trans-unit id="bbd047da0be55151eb36335e2daf8007e4892af2" translate="yes" xml:space="preserve">
          <source>Much like Adam is essentially RMSprop with momentum, Nadam is Adam with Nesterov momentum.</source>
          <target state="translated">アダムが本質的に勢いのあるRMSpropであるように、ナダムはネステロフの勢いのあるアダムです。</target>
        </trans-unit>
        <trans-unit id="25867a36c8cee72b523eb985d468821e9f148927" translate="yes" xml:space="preserve">
          <source>Multi-input usage:</source>
          <target state="translated">マルチ入力の使用法。</target>
        </trans-unit>
        <trans-unit id="d05322a9f3c047910c102b74c67ec9b4d7c8028b" translate="yes" xml:space="preserve">
          <source>Multi-label classification handles the case where each example may have zero or more associated labels, from a discrete set. This is distinct from &lt;code&gt;MultiClassHead&lt;/code&gt; which has exactly one label per example.</source>
          <target state="translated">マルチラベル分類は、個別のセットから、各例に0個以上の関連するラベルがある場合を扱います。これは、例ごとにラベルが1つ &lt;code&gt;MultiClassHead&lt;/code&gt; とは異なります。</target>
        </trans-unit>
        <trans-unit id="3e6fa541d5398c3a673c1ac63d0c40e6406bb339" translate="yes" xml:space="preserve">
          <source>Multi-worker training with Estimator</source>
          <target state="translated">エスティメーターを使ったマルチワーカー研修</target>
        </trans-unit>
        <trans-unit id="4a5e1ae500bb7cdeea9988923f2efa5b06aaebe9" translate="yes" xml:space="preserve">
          <source>Multi-worker training with Keras</source>
          <target state="translated">ケラスとのマルチワーカー研修</target>
        </trans-unit>
        <trans-unit id="fa542a40b5540f372d928bad0d2990977695ad81" translate="yes" xml:space="preserve">
          <source>Multinomial distribution.</source>
          <target state="translated">多項分布。</target>
        </trans-unit>
        <trans-unit id="0e18692bd370f834d92f369dcf0d15e10b60c738" translate="yes" xml:space="preserve">
          <source>Multiple Ragged Dimensions</source>
          <target state="translated">複数のラグ付き寸法</target>
        </trans-unit>
        <trans-unit id="562992811ea87dc609a5aaa3da8e6225fc1e034b" translate="yes" xml:space="preserve">
          <source>Multiple calls to &lt;code&gt;control_dependencies()&lt;/code&gt; can be nested, and in that case a new &lt;code&gt;Operation&lt;/code&gt; will have control dependencies on the union of &lt;code&gt;control_inputs&lt;/code&gt; from all active contexts.</source>
          <target state="translated">&lt;code&gt;control_dependencies()&lt;/code&gt; への複数の呼び出しをネストすることができ、その場合、新しい &lt;code&gt;Operation&lt;/code&gt; は、すべてのアクティブなコンテキストからの &lt;code&gt;control_inputs&lt;/code&gt; の結合に制御依存関係を持ちます。</target>
        </trans-unit>
        <trans-unit id="824c2fff609ec3d94874ba050f77d853d1d165a2" translate="yes" xml:space="preserve">
          <source>Multiplies 2 tensors (and/or variables) and returns a &lt;em&gt;tensor&lt;/em&gt;.</source>
          <target state="translated">2つのテンソル（または変数、あるいはその両方）を乗算し、&lt;em&gt;テンソル&lt;/em&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d203061bc6d7cd80cb3cc679057951c296ee8aa4" translate="yes" xml:space="preserve">
          <source>Multiplies a scalar times a &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; object.</source>
          <target state="translated">スカラーと &lt;code&gt;Tensor&lt;/code&gt; または &lt;code&gt;IndexedSlices&lt;/code&gt; オブジェクトを乗算します。</target>
        </trans-unit>
        <trans-unit id="a27617a6cf526d8a5d4a069782ec117f36e5e98a" translate="yes" xml:space="preserve">
          <source>Multiplies matrix &lt;code&gt;a&lt;/code&gt; by matrix &lt;code&gt;b&lt;/code&gt;, producing &lt;code&gt;a&lt;/code&gt; * &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">行列 &lt;code&gt;a&lt;/code&gt; を行列 &lt;code&gt;b&lt;/code&gt; で乗算し &lt;code&gt;a&lt;/code&gt; * &lt;code&gt;b&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="d2c82c98fa4cb4919387e141410545701b28bcb7" translate="yes" xml:space="preserve">
          <source>Multiplies matrix &lt;code&gt;a&lt;/code&gt; by vector &lt;code&gt;b&lt;/code&gt;, producing &lt;code&gt;a&lt;/code&gt; * &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">行列 &lt;code&gt;a&lt;/code&gt; をベクトル &lt;code&gt;b&lt;/code&gt; で乗算し &lt;code&gt;a&lt;/code&gt; * &lt;code&gt;b&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="d7fe462d932cc32436afe71eb8be4c2a382790ac" translate="yes" xml:space="preserve">
          <source>Multiplies sparse updates into a variable reference.</source>
          <target state="translated">疎な更新を変数参照に乗算します。</target>
        </trans-unit>
        <trans-unit id="f1dd3d0c16c907a98d4a8db0ba2dd37a67bb7f77" translate="yes" xml:space="preserve">
          <source>Multiplies the values in a tensor, alongside the specified axis.</source>
          <target state="translated">テンソルの値を、指定された軸に沿って乗算します。</target>
        </trans-unit>
        <trans-unit id="b3908189000ccde8c1b0543f0f63d22e39436f6b" translate="yes" xml:space="preserve">
          <source>Multiplies tridiagonal matrix by matrix.</source>
          <target state="translated">三角行列に行列を乗算します。</target>
        </trans-unit>
        <trans-unit id="c9230895f1414212a457175d41d4c27592e4da88" translate="yes" xml:space="preserve">
          <source>Multiply SparseTensor (of rank 2) &quot;A&quot; by dense matrix &quot;B&quot;.</source>
          <target state="translated">ランク2の)スパーステンソル &quot;A &quot;に密な行列 &quot;B &quot;を乗算する。</target>
        </trans-unit>
        <trans-unit id="fde029073f5a60f4cb9396422627b162b7f0f0d2" translate="yes" xml:space="preserve">
          <source>Multiply matrix &quot;a&quot; by matrix &quot;b&quot;.</source>
          <target state="translated">行列 &quot;a &quot;に行列 &quot;b &quot;を乗算する。</target>
        </trans-unit>
        <trans-unit id="c2d1888d872bbe781f6582fc36890ae04953a5cf" translate="yes" xml:space="preserve">
          <source>Multiply this variable by &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この変数に&lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; を&lt;/a&gt;掛けます。</target>
        </trans-unit>
        <trans-unit id="7e23a6d0ada7f1a33b06417960a582de3fe90fcb" translate="yes" xml:space="preserve">
          <source>Multiply this variable by &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この変数に&lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; を&lt;/a&gt;掛けます。</target>
        </trans-unit>
        <trans-unit id="fce0730f41e4926a271243e9d540e0468eb10cba" translate="yes" xml:space="preserve">
          <source>Multivalent categorical columns are not normalized. In other words the &lt;code&gt;sparse_combiner&lt;/code&gt; argument in the estimator constructor should be &quot;sum&quot;.</source>
          <target state="translated">多価カテゴリカル列は正規化されていません。つまり、 &lt;code&gt;sparse_combiner&lt;/code&gt; 引数は「合計」である必要があります。</target>
        </trans-unit>
        <trans-unit id="3ef9edeb12e7bdb30fed6da3d9cad9ca56fc131d" translate="yes" xml:space="preserve">
          <source>Must be invoked in eager mode.</source>
          <target state="translated">イーガーモードで起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="a5bead550d70b3848380b69013e328ccadfac1c4" translate="yes" xml:space="preserve">
          <source>Must have &lt;code&gt;strides[0] = strides[3] = 1&lt;/code&gt;. For the most common case of the same horizontal and vertical strides, &lt;code&gt;strides = [1, stride, stride, 1]&lt;/code&gt;. If any value in &lt;code&gt;rate&lt;/code&gt; is greater than 1, we perform atrous depthwise convolution, in which case all values in the &lt;code&gt;strides&lt;/code&gt; tensor must be equal to 1.</source>
          <target state="translated">&lt;code&gt;strides[0] = strides[3] = 1&lt;/code&gt; なければなりません。同じ水平ストライドと垂直ストライドの最も一般的なケースでは、 &lt;code&gt;strides = [1, stride, stride, 1]&lt;/code&gt; です。 &lt;code&gt;rate&lt;/code&gt; のいずれかの値が1より大きい場合、深さ方向の畳み込みを実行します。その場合、 &lt;code&gt;strides&lt;/code&gt; テンソルのすべての値は1に等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="3f54286532c883373748b3609c3f73f3626e66f1" translate="yes" xml:space="preserve">
          <source>Must have &lt;code&gt;strides[0] = strides[3] = 1&lt;/code&gt;. For the most common case of the same horizontal and vertices strides, &lt;code&gt;strides = [1, stride, stride, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strides[0] = strides[3] = 1&lt;/code&gt; なければなりません。同じ水平および頂点ストライドの最も一般的なケースでは、 &lt;code&gt;strides = [1, stride, stride, 1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bfccfdf0da7e16719add842526a9f32bdf0fb6a0" translate="yes" xml:space="preserve">
          <source>Mutable properties:</source>
          <target state="translated">可変的なプロパティ。</target>
        </trans-unit>
        <trans-unit id="2db6d4239cd20837c3760914738b611e987aea46" translate="yes" xml:space="preserve">
          <source>N &lt;code&gt;gradient accumulators&lt;/code&gt;, one per variable to train. Gradients are pushed to them and the chief worker will wait until enough gradients are collected and then average them before applying to variables. The accumulator will drop all stale gradients (more details in the accumulator op).</source>
          <target state="translated">N個の &lt;code&gt;gradient accumulators&lt;/code&gt; 。トレーニングする変数ごとに1つ。勾配はそれらにプッシュされ、チーフワーカーは十分な勾配が収集されるまで待機し、変数に適用する前にそれらを平均化します。アキュムレータは、すべての古いグラデーションを削除します（詳細はアキュムレータopを参照）。</target>
        </trans-unit>
        <trans-unit id="a083ef5352b5d650b2a079357a1f2ade54e8efbf" translate="yes" xml:space="preserve">
          <source>N-D tensor with shape &lt;code&gt;[batch_size, timesteps, ...]&lt;/code&gt; or &lt;code&gt;[timesteps, batch_size, ...]&lt;/code&gt; when time_major is True.</source>
          <target state="translated">time_majorがTrueの場合 &lt;code&gt;[timesteps, batch_size, ...]&lt;/code&gt; 形状が &lt;code&gt;[batch_size, timesteps, ...]&lt;/code&gt; または[ timesteps 、batch_size、...]の NDテンソル。</target>
        </trans-unit>
        <trans-unit id="fd6016f78695ef1a5b0efc9a3ba859d270928e9e" translate="yes" xml:space="preserve">
          <source>N-D tensor with shape: &lt;code&gt;(batch_size, ..., input_dim)&lt;/code&gt;. The most common situation would be a 2D input with shape &lt;code&gt;(batch_size, input_dim)&lt;/code&gt;.</source>
          <target state="translated">形状を持つNDテンソル： &lt;code&gt;(batch_size, ..., input_dim)&lt;/code&gt; 。最も一般的な状況は、形状 &lt;code&gt;(batch_size, input_dim)&lt;/code&gt; 2D入力です。</target>
        </trans-unit>
        <trans-unit id="b1aad43f56084e08f9722f42e6a896ddf11136f4" translate="yes" xml:space="preserve">
          <source>N-D tensor with shape: &lt;code&gt;(batch_size, ..., units)&lt;/code&gt;. For instance, for a 2D input with shape &lt;code&gt;(batch_size, input_dim)&lt;/code&gt;, the output would have shape &lt;code&gt;(batch_size, units)&lt;/code&gt;.</source>
          <target state="translated">形状のNDテンソル： &lt;code&gt;(batch_size, ..., units)&lt;/code&gt; 。たとえば、形状 &lt;code&gt;(batch_size, input_dim)&lt;/code&gt; 2D入力の場合、出力は形状 &lt;code&gt;(batch_size, units)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="3bc35e77c4356443aaf21d56595cb19ef70a848b" translate="yes" xml:space="preserve">
          <source>N.B.: If &lt;code&gt;save_checkpoints_steps&lt;/code&gt; or &lt;code&gt;save_checkpoints_secs&lt;/code&gt; is set, &lt;code&gt;keep_checkpoint_max&lt;/code&gt; might need to be adjusted accordingly, especially in distributed training. For example, setting &lt;code&gt;save_checkpoints_secs&lt;/code&gt; as 60 without adjusting &lt;code&gt;keep_checkpoint_max&lt;/code&gt; (defaults to 5) leads to situation that checkpoint would be garbage collected after 5 minutes. In distributed training, the evaluation job starts asynchronously and might fail to load or find the checkpoint due to race condition.</source>
          <target state="translated">注意： &lt;code&gt;save_checkpoints_steps&lt;/code&gt; または &lt;code&gt;save_checkpoints_secs&lt;/code&gt; が設定されている場合、特に分散型トレーニングでは、それに応じて &lt;code&gt;keep_checkpoint_max&lt;/code&gt; を調整する必要がある場合があります。たとえば、 &lt;code&gt;keep_checkpoint_max&lt;/code&gt; （デフォルトは5）を調整せずに &lt;code&gt;save_checkpoints_secs&lt;/code&gt; を60 に設定すると、チェックポイントが5分後にガベージコレクションされる状況が発生します。分散トレーニングでは、評価ジョブは非同期で開始され、競合状態のためにチェックポイントの読み込みまたは検索に失敗する場合があります。</target>
        </trans-unit>
        <trans-unit id="0b30f636c1db14fd95b07c47ee096c9e7b2992dc" translate="yes" xml:space="preserve">
          <source>NASNet-A models for Keras.</source>
          <target state="translated">KerasのNASNet-Aモデル。</target>
        </trans-unit>
        <trans-unit id="329be6cd697d977c9ec99cb5a8eb3c08e2e6a197" translate="yes" xml:space="preserve">
          <source>NB: The amount of time this method waits for the session is bounded by max_wait_secs. By default, this function will wait indefinitely.</source>
          <target state="translated">注意:このメソッドがセッションを待機する時間は、max_wait_secsで制限されます。デフォルトでは、この関数は無期限に待機します。</target>
        </trans-unit>
        <trans-unit id="e53950c2b094f4e3159c13deb3697bdb6958726a" translate="yes" xml:space="preserve">
          <source>NCCL all-reduce implementation of CrossDeviceOps.</source>
          <target state="translated">NCCL CrossDeviceOpsのオールリデュース実装。</target>
        </trans-unit>
        <trans-unit id="ef16280c8437524c7ebbab7dc8d561a3662ba768" translate="yes" xml:space="preserve">
          <source>NOTE &lt;a href=&quot;reverse&quot;&gt;&lt;code&gt;tf.reverse&lt;/code&gt;&lt;/a&gt; has now changed behavior in preparation for 1.0. &lt;code&gt;tf.reverse_v2&lt;/code&gt; is currently an alias that will be deprecated before TF 1.0.</source>
          <target state="translated">注&lt;a href=&quot;reverse&quot;&gt; &lt;code&gt;tf.reverse&lt;/code&gt; &lt;/a&gt;は1.0に備えて動作を変更しました。 &lt;code&gt;tf.reverse_v2&lt;/code&gt; は現在、TF 1.0より前に廃止されるエイリアスです。</target>
        </trans-unit>
        <trans-unit id="96b4d2f86094a7ae0f46ccf88a4fb050ca38b073" translate="yes" xml:space="preserve">
          <source>NOTE(mrry): If we register &lt;strong&gt;getitem&lt;/strong&gt; as an overloaded operator, Python will valiantly attempt to iterate over the variable's Tensor from 0 to infinity. Declaring this method prevents this unintended behavior.</source>
          <target state="translated">NOTE（mrry）：私たちが登録した場合&lt;strong&gt;のGetItem&lt;/strong&gt;オーバーロード演算子として、Pythonは果敢に0から無限大までの変数のテンソルを反復処理しようとします。このメソッドを宣言すると、この意図しない動作を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="c3755a1d24438725e354f03134b93411d9bb33bd" translate="yes" xml:space="preserve">
          <source>NOTE(mrry): In normal circumstances, you should not need to construct a &lt;code&gt;DataType&lt;/code&gt; object directly. Instead, use the &lt;a href=&quot;as_dtype&quot;&gt;&lt;code&gt;tf.as_dtype()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">注（mrry）：通常の状況では、 &lt;code&gt;DataType&lt;/code&gt; オブジェクトを直接作成する必要はありません。代わりに、&lt;a href=&quot;as_dtype&quot;&gt; &lt;code&gt;tf.as_dtype()&lt;/code&gt; &lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="9dc6a3593a4e151bb413f36d6e9936e9b4062f05" translate="yes" xml:space="preserve">
          <source>NOTE(mrry): traceback.extract_stack eagerly retrieves the line of code for each stack frame using linecache, which results in an abundance of stat() calls. This implementation does not retrieve the code, and any consumer should apply _convert_stack to the result to obtain a traceback that can be formatted etc. using traceback methods.</source>
          <target state="translated">NOTE(mrry):traceback.extract_stack は、lineecache を使って各スタックフレームのコード行を熱心に取得します。この実装ではコードを取得しませんので、コンシューマは結果に _convert_stack を適用して、トレースバックメソッドを使用してフォーマットなどが可能なトレースバックを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="3616225191e3c898977be493d7426a0de5ac18e6" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are zero-indexed. &lt;code&gt;strides&lt;/code&gt; entries must be non-zero.</source>
          <target state="translated">注： &lt;code&gt;begin&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; はゼロから始まります。 &lt;code&gt;strides&lt;/code&gt; エントリはゼロ以外でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7045712e8cad5b57d0508b61d04032562c6cb2f7" translate="yes" xml:space="preserve">
          <source>NOTE: Although the transformation creates a &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, the transformation must be the final &lt;code&gt;Dataset&lt;/code&gt; in the input pipeline.</source>
          <target state="translated">注：変換により&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;が作成されますが、変換は入力パイプラインの最後の &lt;code&gt;Dataset&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="3f04427d92e52a05f96d958afb9cf2a5fce96d1a" translate="yes" xml:space="preserve">
          <source>NOTE: Currently, the user cannot add any more transformations to a distributed dataset.</source>
          <target state="translated">注:現在、ユーザは分散データセットにこれ以上の変換を追加することはできません。</target>
        </trans-unit>
        <trans-unit id="56e88c91e01d7a1793225a810e0c446c7309d471" translate="yes" xml:space="preserve">
          <source>NOTE: For backwards compatibility, this method returns a list. If the given job was defined with a sparse set of task indices, the length of this list may not reflect the number of tasks defined in this job. Use the &lt;a href=&quot;clusterspec#num_tasks&quot;&gt;&lt;code&gt;tf.train.ClusterSpec.num_tasks&lt;/code&gt;&lt;/a&gt; method to find the number of tasks defined in a particular job.</source>
          <target state="translated">注：下位互換性のために、このメソッドはリストを返します。特定のジョブがまばらなタスクインデックスのセットで定義されている場合、このリストの長さは、このジョブで定義されているタスクの数を反映していない場合があります。特定のジョブで定義されているタスクの数を見つけるには、&lt;a href=&quot;clusterspec#num_tasks&quot;&gt; &lt;code&gt;tf.train.ClusterSpec.num_tasks&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="83d2c9c851b7d2d7c844cd7135f938a898d81b53" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;generator&lt;/code&gt; depends on mutable global variables or other external state, be aware that the runtime may invoke &lt;code&gt;generator&lt;/code&gt; multiple times (in order to support repeating the &lt;code&gt;Dataset&lt;/code&gt;) and at any time between the call to &lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; and the production of the first element from the generator. Mutating global variables or external state can cause undefined behavior, and we recommend that you explicitly cache any external state in &lt;code&gt;generator&lt;/code&gt; before calling &lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;generator&lt;/code&gt; が可変グローバル変数またはその他の外部状態に依存している場合、ランタイムが &lt;code&gt;generator&lt;/code&gt; 複数回呼び出し（ &lt;code&gt;Dataset&lt;/code&gt; の繰り返しをサポートするため）、&lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; の&lt;/a&gt;呼び出しとジェネレーターの最初の要素。グローバル変数または外部状態を変更すると、未定義の動作が発生する可能性があります&lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;呼び出す前に、 &lt;code&gt;generator&lt;/code&gt; 外部状態を明示的にキャッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c17ac4a32fdbe745971e574b31777a99c3b8a992" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;generator&lt;/code&gt; depends on mutable global variables or other external state, be aware that the runtime may invoke &lt;code&gt;generator&lt;/code&gt; multiple times (in order to support repeating the &lt;code&gt;Dataset&lt;/code&gt;) and at any time between the call to &lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; and the production of the first element from the generator. Mutating global variables or external state can cause undefined behavior, and we recommend that you explicitly cache any external state in &lt;code&gt;generator&lt;/code&gt; before calling &lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;generator&lt;/code&gt; が可変グローバル変数またはその他の外部状態に依存している場合、ランタイムが &lt;code&gt;generator&lt;/code&gt; 複数回呼び出し（ &lt;code&gt;Dataset&lt;/code&gt; の繰り返しをサポートするため）、&lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; の&lt;/a&gt;呼び出しとジェネレーターの最初の要素。グローバル変数または外部状態を変更すると、未定義の動作が発生する可能性があります&lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;呼び出す前に、 &lt;code&gt;generator&lt;/code&gt; 外部状態を明示的にキャッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="10f1420e0dca2a52deb3aa6ef6240aabe5c810bf" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;generator&lt;/code&gt; depends on mutable global variables or other external state, be aware that the runtime may invoke &lt;code&gt;generator&lt;/code&gt; multiple times (in order to support repeating the &lt;code&gt;Dataset&lt;/code&gt;) and at any time between the call to &lt;a href=&quot;../dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; and the production of the first element from the generator. Mutating global variables or external state can cause undefined behavior, and we recommend that you explicitly cache any external state in &lt;code&gt;generator&lt;/code&gt; before calling &lt;a href=&quot;../dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;generator&lt;/code&gt; が可変グローバル変数またはその他の外部状態に依存している場合、ランタイムが &lt;code&gt;generator&lt;/code&gt; 複数回呼び出し（ &lt;code&gt;Dataset&lt;/code&gt; の繰り返しをサポートするため）、&lt;a href=&quot;../dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; の&lt;/a&gt;呼び出しとジェネレーターの最初の要素。グローバル変数または外部状態を変更すると、未定義の動作が発生する可能性があります&lt;a href=&quot;../dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;呼び出す前に、 &lt;code&gt;generator&lt;/code&gt; 外部状態を明示的にキャッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b6d2276627b413ef99b740ac93ae825c0b27fc0a" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;generator&lt;/code&gt; depends on mutable global variables or other external state, be aware that the runtime may invoke &lt;code&gt;generator&lt;/code&gt; multiple times (in order to support repeating the &lt;code&gt;Dataset&lt;/code&gt;) and at any time between the call to &lt;a href=&quot;dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; and the production of the first element from the generator. Mutating global variables or external state can cause undefined behavior, and we recommend that you explicitly cache any external state in &lt;code&gt;generator&lt;/code&gt; before calling &lt;a href=&quot;dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;generator&lt;/code&gt; が可変グローバル変数またはその他の外部状態に依存している場合、ランタイムが &lt;code&gt;generator&lt;/code&gt; 複数回呼び出し（ &lt;code&gt;Dataset&lt;/code&gt; の繰り返しをサポートするため）、&lt;a href=&quot;dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; の&lt;/a&gt;呼び出しとジェネレーターの最初の要素。グローバル変数または外部状態を変更すると、未定義の動作が発生する可能性があります&lt;a href=&quot;dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;呼び出す前に、 &lt;code&gt;generator&lt;/code&gt; 外部状態を明示的にキャッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6b9cb830fb1aba495b51ee58fb852a6e93c4fd3c" translate="yes" xml:space="preserve">
          <source>NOTE: If this dataset is a function of global state (e.g. a random number generator), then different repetitions may produce different elements.</source>
          <target state="translated">注意:もしこのデータセットがグローバルな状態の関数(例えば乱数発生器)であるならば,異なる繰り返しによって異なる要素が生成されるかもしれない.</target>
        </trans-unit>
        <trans-unit id="5a3f57ec4be212445892ef82cad032bba6c1f951" translate="yes" xml:space="preserve">
          <source>NOTE: In TensorFlow 2.0, AutoGraph is automatically applied when using &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;. This module contains lower-level APIs for advanced use.</source>
          <target state="translated">注：使用しているときTensorFlow 2.0では、オートグラフが自動的に適用される&lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; を&lt;/a&gt;。このモジュールには、高度な使用のための低レベルAPIが含まれています。</target>
        </trans-unit>
        <trans-unit id="f240f4661deba5fe80a4a164dab4babe654538c0" translate="yes" xml:space="preserve">
          <source>NOTE: In TensorFlow 2.0, AutoGraph is automatically applied when using &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;. This module contains lower-level APIs for advanced use.</source>
          <target state="translated">注：使用しているときTensorFlow 2.0では、オートグラフが自動的に適用される&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; を&lt;/a&gt;。このモジュールには、高度な使用のための低レベルAPIが含まれています。</target>
        </trans-unit>
        <trans-unit id="1bfce4b170745e63142f9ddfec2414472a587003" translate="yes" xml:space="preserve">
          <source>NOTE: In eager mode, &lt;code&gt;computation&lt;/code&gt; will have &lt;code&gt;@tf.function&lt;/code&gt; semantics.</source>
          <target state="translated">注：eagerモードでは、 &lt;code&gt;computation&lt;/code&gt; は &lt;code&gt;@tf.function&lt;/code&gt; セマンティクスを持ちます。</target>
        </trans-unit>
        <trans-unit id="d7fda0f65c4494686dc1b872369c52d1aa3cd210" translate="yes" xml:space="preserve">
          <source>NOTE: In graph mode, to ensure that Assert executes, one usually attaches a dependency:</source>
          <target state="translated">注:グラフモードでは、Assertが実行されることを保証するために、通常は依存関係をアタッチします。</target>
        </trans-unit>
        <trans-unit id="1e1866295af5ffe36c310d38b9ab92ff7aff9206" translate="yes" xml:space="preserve">
          <source>NOTE: It is legitimate to call &lt;code&gt;Iterator.get_next()&lt;/code&gt; multiple times, e.g. when you are distributing different elements to multiple devices in a single step. However, a common pitfall arises when users call &lt;code&gt;Iterator.get_next()&lt;/code&gt; in each iteration of their training loop. &lt;code&gt;Iterator.get_next()&lt;/code&gt; adds ops to the graph, and executing each op allocates resources (including threads); as a consequence, invoking it in every iteration of a training loop causes slowdown and eventual resource exhaustion. To guard against this outcome, we log a warning when the number of uses crosses a fixed threshold of suspiciousness.</source>
          <target state="translated">注： &lt;code&gt;Iterator.get_next()&lt;/code&gt; を複数回呼び出すことは正当です。たとえば、単一の手順で複数のデバイスに異なる要素を配布する場合などです。ただし、ユーザーがトレーニングループの各反復で &lt;code&gt;Iterator.get_next()&lt;/code&gt; を呼び出すと、よくある落とし穴が生じます。 &lt;code&gt;Iterator.get_next()&lt;/code&gt; はopsをグラフに追加し、各opを実行するとリソース（スレッドを含む）が割り当てられます。結果として、トレーニングループのすべての反復でそれを呼び出すと、速度が低下し、最終的にリソースが枯渇します。この結果を防ぐために、使用回数が不審の固定しきい値を超えたときに警告をログに記録します。</target>
        </trans-unit>
        <trans-unit id="7023c08721fbd7fda8836f8ea1b83784ff6c62b2" translate="yes" xml:space="preserve">
          <source>NOTE: MLIR-Based TensorFlow Compiler is under active development and has missing features, please refrain from using. This API exists for development and testing only.</source>
          <target state="translated">NOTE:MLIRベースのTensorFlowコンパイラは開発中であり、機能が不足していますので、ご利用をお控えください。本APIは開発・テスト用にのみ存在します。</target>
        </trans-unit>
        <trans-unit id="bf308e87b24a8a223b70e3706e19b171c98ffbe0" translate="yes" xml:space="preserve">
          <source>NOTE: MUST mirror the behavior of the C++ AppendFlagsIntoFile from https://github.com/gflags/gflags.</source>
          <target state="translated">注:https://github.com/gflags/gflags にある C++AppendFlagsIntoFile の動作をミラーしなければなりません。</target>
        </trans-unit>
        <trans-unit id="0c56cdc96cd42f0a4d8b37d7d35b3a76756d542a" translate="yes" xml:space="preserve">
          <source>NOTE: MUST mirror the behavior of the C++ CommandlineFlagsIntoString from https://github.com/gflags/gflags.</source>
          <target state="translated">注:https://github.com/gflags/gflags にある C++CommandlineFlagsIntoString の動作をミラーしなければなりません (MUST)。</target>
        </trans-unit>
        <trans-unit id="683847739697af93b0d15ac410a6e53485306ed7" translate="yes" xml:space="preserve">
          <source>NOTE: Prefer using the Tensor division operator or tf.divide which obey Python 3 division operator semantics.</source>
          <target state="translated">注意:Python 3の除算演算子のセマンティクスに従うTensor除算演算子やtf.divideを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c0ad0a2f05ff98feecaf73439669929c69e4987f" translate="yes" xml:space="preserve">
          <source>NOTE: Prefer using the Tensor operator or tf.divide which obey Python division operator semantics.</source>
          <target state="translated">注意:Pythonの除算演算子のセマンティクスに従うTensor演算子やtf.divideを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4cbb6a77026e9cb146e1edde53ce44fb21a35ce0" translate="yes" xml:space="preserve">
          <source>NOTE: Restarting training from saved &lt;code&gt;meta_graph&lt;/code&gt; only works if the device assignments have not changed.</source>
          <target state="translated">注：保存された &lt;code&gt;meta_graph&lt;/code&gt; からのトレーニングの再開は、デバイスの割り当てが変更されていない場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="efa6d9d345e9a9207c5928e4a1ab9f0a189b4b04" translate="yes" xml:space="preserve">
          <source>NOTE: The context managers will always be exited without any error information. This is an unfortunate implementation detail due to some internals of how unittest runs tests.</source>
          <target state="translated">注意:コンテキストマネージャは常にエラー情報なしで終了します。これは unittest がテストを実行する方法の内部構造に起因する不幸な実装の詳細です。</target>
        </trans-unit>
        <trans-unit id="996f3ec56e99068804b3b11dd656edb2925215d7" translate="yes" xml:space="preserve">
          <source>NOTE: The conversion functions will execute in order of priority, followed by order of registration. To ensure that a conversion function &lt;code&gt;F&lt;/code&gt; runs before another conversion function &lt;code&gt;G&lt;/code&gt;, ensure that &lt;code&gt;F&lt;/code&gt; is registered with a smaller priority than &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">注：変換関数は優先度の順に実行され、その後に登録の順序が続きます。変換関数 &lt;code&gt;F&lt;/code&gt; が別の変換関数 &lt;code&gt;G&lt;/code&gt; の前に実行されるようにするには、 &lt;code&gt;F&lt;/code&gt; が &lt;code&gt;G&lt;/code&gt; よりも低い優先度で登録されるようにします。</target>
        </trans-unit>
        <trans-unit id="8a1284bfef15f833b77a1c83325c3bf163d03ccb" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation of &lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../../../../numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function&lt;/code&gt;&lt;/a&gt; and inherits the same constraints. In particular, it requires the &lt;code&gt;Dataset&lt;/code&gt;- and &lt;code&gt;Iterator&lt;/code&gt;-related operations to be placed on a device in the same process as the Python program that called &lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;. The body of &lt;code&gt;generator&lt;/code&gt; will not be serialized in a &lt;code&gt;GraphDef&lt;/code&gt;, and you should not use this method if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">注：現在の実装で&lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; は&lt;/a&gt;使用しています&lt;a href=&quot;../../../../numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function&lt;/code&gt; を&lt;/a&gt;し、同じ制約を継承します。特に、 &lt;code&gt;Dataset&lt;/code&gt; および &lt;code&gt;Iterator&lt;/code&gt; 関連の操作を、&lt;a href=&quot;../../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;を呼び出したPythonプログラムと同じプロセスでデバイスに配置する必要があります。 &lt;code&gt;generator&lt;/code&gt; の本体は &lt;code&gt;GraphDef&lt;/code&gt; でシリアル化されません。モデルをシリアル化して別の環境で復元する必要がある場合は、このメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="0ce30723353df28ded04090716887f0f65646338" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation of &lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../../../numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function&lt;/code&gt;&lt;/a&gt; and inherits the same constraints. In particular, it requires the &lt;code&gt;Dataset&lt;/code&gt;- and &lt;code&gt;Iterator&lt;/code&gt;-related operations to be placed on a device in the same process as the Python program that called &lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;. The body of &lt;code&gt;generator&lt;/code&gt; will not be serialized in a &lt;code&gt;GraphDef&lt;/code&gt;, and you should not use this method if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">注：現在の実装で&lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; は&lt;/a&gt;使用しています&lt;a href=&quot;../../../numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function&lt;/code&gt; を&lt;/a&gt;し、同じ制約を継承します。特に、 &lt;code&gt;Dataset&lt;/code&gt; および &lt;code&gt;Iterator&lt;/code&gt; 関連の操作を、&lt;a href=&quot;../../../data/dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;を呼び出したPythonプログラムと同じプロセスでデバイスに配置する必要があります。 &lt;code&gt;generator&lt;/code&gt; の本体は &lt;code&gt;GraphDef&lt;/code&gt; でシリアル化されません。モデルをシリアル化して別の環境で復元する必要がある場合は、このメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="9dc1c962a7f62c6d8ec9ddf837aee055cfc38042" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation of &lt;a href=&quot;../dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../../numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function&lt;/code&gt;&lt;/a&gt; and inherits the same constraints. In particular, it requires the &lt;code&gt;Dataset&lt;/code&gt;- and &lt;code&gt;Iterator&lt;/code&gt;-related operations to be placed on a device in the same process as the Python program that called &lt;a href=&quot;../dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;. The body of &lt;code&gt;generator&lt;/code&gt; will not be serialized in a &lt;code&gt;GraphDef&lt;/code&gt;, and you should not use this method if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">注：現在の実装で&lt;a href=&quot;../dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; は&lt;/a&gt;使用しています&lt;a href=&quot;../../numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function&lt;/code&gt; を&lt;/a&gt;し、同じ制約を継承します。特に、 &lt;code&gt;Dataset&lt;/code&gt; および &lt;code&gt;Iterator&lt;/code&gt; 関連の操作を、&lt;a href=&quot;../dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;を呼び出したPythonプログラムと同じプロセスでデバイスに配置する必要があります。 &lt;code&gt;generator&lt;/code&gt; の本体は &lt;code&gt;GraphDef&lt;/code&gt; でシリアル化されません。モデルをシリアル化して別の環境で復元する必要がある場合は、このメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="ef3251a0d5af6f13bc8d97c66b6c26ad0b5983b1" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation of &lt;a href=&quot;dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../numpy_function&quot;&gt;&lt;code&gt;tf.numpy_function&lt;/code&gt;&lt;/a&gt; and inherits the same constraints. In particular, it requires the &lt;code&gt;Dataset&lt;/code&gt;- and &lt;code&gt;Iterator&lt;/code&gt;-related operations to be placed on a device in the same process as the Python program that called &lt;a href=&quot;dataset#from_generator&quot;&gt;&lt;code&gt;Dataset.from_generator()&lt;/code&gt;&lt;/a&gt;. The body of &lt;code&gt;generator&lt;/code&gt; will not be serialized in a &lt;code&gt;GraphDef&lt;/code&gt;, and you should not use this method if you need to serialize your model and restore it in a different environment.</source>
          <target state="translated">注：現在の実装で&lt;a href=&quot;dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; は&lt;/a&gt;使用しています&lt;a href=&quot;../numpy_function&quot;&gt; &lt;code&gt;tf.numpy_function&lt;/code&gt; を&lt;/a&gt;し、同じ制約を継承します。特に、 &lt;code&gt;Dataset&lt;/code&gt; および &lt;code&gt;Iterator&lt;/code&gt; 関連の操作を、&lt;a href=&quot;dataset#from_generator&quot;&gt; &lt;code&gt;Dataset.from_generator()&lt;/code&gt; &lt;/a&gt;を呼び出したPythonプログラムと同じプロセスでデバイスに配置する必要があります。 &lt;code&gt;generator&lt;/code&gt; の本体は &lt;code&gt;GraphDef&lt;/code&gt; でシリアル化されません。モデルをシリアル化して別の環境で復元する必要がある場合は、このメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="8ff878ce6ae336084bc9e1b27ee6cdb321684acd" translate="yes" xml:space="preserve">
          <source>NOTE: The default behavior of this method is to return filenames in a non-deterministic random shuffled order. Pass a &lt;code&gt;seed&lt;/code&gt; or &lt;code&gt;shuffle=False&lt;/code&gt; to get results in a deterministic order.</source>
          <target state="translated">注：このメソッドのデフォルトの動作は、ファイル名を非決定的なランダムな順序で返すことです。確定的な順序で結果を取得するには、 &lt;code&gt;seed&lt;/code&gt; または &lt;code&gt;shuffle=False&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="24ad263ff6825f62b2024bae8370843c8715b4ec" translate="yes" xml:space="preserve">
          <source>NOTE: The default graph is a property of the current thread. If you create a new thread, and wish to use the default graph in that thread, you must explicitly add a &lt;code&gt;with g.as_default():&lt;/code&gt; in that thread's function.</source>
          <target state="translated">注：デフォルトのグラフは、現在のスレッドのプロパティです。新しいスレッドを作成し、そのスレッドでデフォルトのグラフを使用したい場合は、そのスレッドの関数に明示的に &lt;code&gt;with g.as_default():&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="d95d78127ee2a7c8ba9bf73dbd7708d35d9d43b2" translate="yes" xml:space="preserve">
          <source>NOTE: The default graph is a property of the current thread. This function applies only to the current thread. Calling this function while a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;interactivesession&quot;&gt;&lt;code&gt;tf.compat.v1.InteractiveSession&lt;/code&gt;&lt;/a&gt; is active will result in undefined behavior. Using any previously created &lt;a href=&quot;../../operation&quot;&gt;&lt;code&gt;tf.Operation&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects after calling this function will result in undefined behavior. Raises: AssertionError: If this function is called within a nested graph.</source>
          <target state="translated">注：デフォルトのグラフは、現在のスレッドのプロパティです。この関数は、現在のスレッドにのみ適用されます。&lt;a href=&quot;session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;interactivesession&quot;&gt; &lt;code&gt;tf.compat.v1.InteractiveSession&lt;/code&gt; &lt;/a&gt;がアクティブなときにこの関数を呼び出すと、未定義の動作が発生します。この関数を呼び出した後に以前に作成された&lt;a href=&quot;../../operation&quot;&gt; &lt;code&gt;tf.Operation&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;オブジェクトを使用すると、未定義の動作が発生します。発生：AssertionError：この関数がネストされたグラフ内で呼び出された場合。</target>
        </trans-unit>
        <trans-unit id="dd7a93678f86da193b39dcf8b3b1c3be378f8382" translate="yes" xml:space="preserve">
          <source>NOTE: The default session is a property of the current thread. If you create a new thread, and wish to use the default session in that thread, you must explicitly add a &lt;code&gt;with sess.as_default():&lt;/code&gt; in that thread's function.</source>
          <target state="translated">注：デフォルトセッションは、現在のスレッドのプロパティです。新しいスレッドを作成し、そのスレッドでデフォルトセッションを使用する場合は、そのスレッドの関数に &lt;code&gt;with sess.as_default():&lt;/code&gt; 明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="4baa89782dc8c888eebd2e10e436d541a7e7222b" translate="yes" xml:space="preserve">
          <source>NOTE: The directory and its contents will be recursively cleared before creation. This ensures that there is no pre-existing state.</source>
          <target state="translated">注:ディレクトリとその内容は、作成前に再帰的にクリアされます。これにより、既存の状態が存在しないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="f33812b825ed1f4a589cca82e95a10ebf6e3f7a4" translate="yes" xml:space="preserve">
          <source>NOTE: The order of elements yielded by this transformation is deterministic, as long as &lt;code&gt;map_func&lt;/code&gt; is a pure function. If &lt;code&gt;map_func&lt;/code&gt; contains any stateful operations, the order in which that state is accessed is undefined.</source>
          <target state="translated">注： &lt;code&gt;map_func&lt;/code&gt; が純粋な関数である限り、この変換によって生成される要素の順序は確定的です。 &lt;code&gt;map_func&lt;/code&gt; にステートフル操作が含まれている場合、その状態にアクセスする順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="b2eb6aa3cc50328f6f5589131571e8b6f8ff578c" translate="yes" xml:space="preserve">
          <source>NOTE: The order of the files returned is deterministic.</source>
          <target state="translated">注:返されるファイルの順序は決定論的です。</target>
        </trans-unit>
        <trans-unit id="729538d9da4ffd659710e20715b4836a9e18734f" translate="yes" xml:space="preserve">
          <source>NOTE: This constructor validates the given &lt;code&gt;name&lt;/code&gt;. Valid scope names match one of the following regular expressions:</source>
          <target state="translated">注：このコンストラクタは、指定された &lt;code&gt;name&lt;/code&gt; 検証します。有効なスコープ名は、次の正規表現のいずれかに一致します。</target>
        </trans-unit>
        <trans-unit id="b6c05e852481b6aa8d8a5c62a532de2680ca2337" translate="yes" xml:space="preserve">
          <source>NOTE: This constructor validates the name of the &lt;code&gt;Operation&lt;/code&gt; (passed as &lt;code&gt;node_def.name&lt;/code&gt;). Valid &lt;code&gt;Operation&lt;/code&gt; names match the following regular expression:</source>
          <target state="translated">注：このコンストラクタは、 &lt;code&gt;Operation&lt;/code&gt; の名前（ &lt;code&gt;node_def.name&lt;/code&gt; として渡される）を検証します。有効な &lt;code&gt;Operation&lt;/code&gt; 名は、次の正規表現に一致します。</target>
        </trans-unit>
        <trans-unit id="da2fcb0e3008820bc83d67c4c47ec7579e199830" translate="yes" xml:space="preserve">
          <source>NOTE: This differs from &lt;a href=&quot;tensor#set_shape&quot;&gt;&lt;code&gt;Tensor.set_shape&lt;/code&gt;&lt;/a&gt; in that it sets the static shape of the resulting tensor and enforces it at runtime, raising an error if the tensor's runtime shape is incompatible with the specified shape. &lt;a href=&quot;tensor#set_shape&quot;&gt;&lt;code&gt;Tensor.set_shape&lt;/code&gt;&lt;/a&gt; sets the static shape of the tensor without enforcing it at runtime, which may result in inconsistencies between the statically-known shape of tensors and the runtime value of tensors.</source>
          <target state="translated">注：これは&lt;a href=&quot;tensor#set_shape&quot;&gt; &lt;code&gt;Tensor.set_shape&lt;/code&gt; &lt;/a&gt;とは異なり、結果のテンソルの静的形状を設定し、実行時にそれを強制し、テンソルのランタイム形状が指定された形状と互換性がない場合にエラーを発生させます。&lt;a href=&quot;tensor#set_shape&quot;&gt; &lt;code&gt;Tensor.set_shape&lt;/code&gt; &lt;/a&gt;は、実行時にテンソルを適用せずにテンソルの静的形状を設定します。これにより、静的に既知のテンソルの形状とテンソルの実行時の値の間に不整合が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d8710a149aad34772c8807c22293080935b4bfb4" translate="yes" xml:space="preserve">
          <source>NOTE: This function is obsolete and will be removed in 6 months. Please change your implementation to use &lt;code&gt;report_uninitialized_variables()&lt;/code&gt;.</source>
          <target state="translated">注：この機能は廃止され、6か月後に削除されます。 &lt;code&gt;report_uninitialized_variables()&lt;/code&gt; を使用するように実装を変更してください。</target>
        </trans-unit>
        <trans-unit id="8973611dbe3347bc91476e1fed5550c3db7f323d" translate="yes" xml:space="preserve">
          <source>NOTE: This is an escape hatch for existing uses of &lt;code&gt;filter&lt;/code&gt; that do not work with V2 functions. New uses are strongly discouraged and existing uses should migrate to &lt;code&gt;filter&lt;/code&gt; as this method will be removed in V2.</source>
          <target state="translated">注：これは、V2関数で機能しない既存の &lt;code&gt;filter&lt;/code&gt; 使用のためのエスケープハッチです。新しい方法はお勧めできません。この方法はV2で削除されるため、既存の使用は &lt;code&gt;filter&lt;/code&gt; 移行する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c375eea5e94508c273735102f4bc69d276fde7c" translate="yes" xml:space="preserve">
          <source>NOTE: This is an escape hatch for existing uses of &lt;code&gt;map&lt;/code&gt; that do not work with V2 functions. New uses are strongly discouraged and existing uses should migrate to &lt;code&gt;map&lt;/code&gt; as this method will be removed in V2.</source>
          <target state="translated">注：これは、V2関数では機能しない既存の &lt;code&gt;map&lt;/code&gt; 使用のためのエスケープハッチです。新しい方法はお勧めできません。この方法はV2で削除されるため、既存の使用は &lt;code&gt;map&lt;/code&gt; 移行する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c464ca4e817e3d69d913a48d0265ab146368a4f" translate="yes" xml:space="preserve">
          <source>NOTE: This is an escape hatch for existing uses of &lt;code&gt;map_and_batch&lt;/code&gt; that do not work with V2 functions. New uses are strongly discouraged and existing uses should migrate to &lt;code&gt;map_and_batch&lt;/code&gt; as this method will not be removed in V2.</source>
          <target state="translated">注：これは、V2関数では機能しない、 &lt;code&gt;map_and_batch&lt;/code&gt; の既存の使用のためのエスケープハッチです。このメソッドはV2で削除されないため、新しい使用は強くお勧めしません。既存の使用は &lt;code&gt;map_and_batch&lt;/code&gt; に移行する必要があります。</target>
        </trans-unit>
        <trans-unit id="fa46499d4cf0599cd6282c538d0aaae468f3bd91" translate="yes" xml:space="preserve">
          <source>NOTE: This is an experimental feature.</source>
          <target state="translated">注意:これは実験的な機能です。</target>
        </trans-unit>
        <trans-unit id="c9903d34bfa5caeff689a3a18fefd7d2cd61afe4" translate="yes" xml:space="preserve">
          <source>NOTE: This is not the same as the &lt;code&gt;self.name_scope.name&lt;/code&gt; which includes parent module names.</source>
          <target state="translated">注：これは、親モジュール名を含む &lt;code&gt;self.name_scope.name&lt;/code&gt; とは異なります。</target>
        </trans-unit>
        <trans-unit id="d7dc3e032f53c199a0f604e1edc35f7cbcd055b1" translate="yes" xml:space="preserve">
          <source>NOTE: This method takes an argument that defines the structure of the value that would be contained in the returned &lt;code&gt;Optional&lt;/code&gt; if it had a value.</source>
          <target state="translated">注：このメソッドは、返された &lt;code&gt;Optional&lt;/code&gt; に値が含まれている場合に含まれる値の構造を定義する引数を取ります。</target>
        </trans-unit>
        <trans-unit id="25fb85da18624797a3defa0d51095bf82f41fffc" translate="yes" xml:space="preserve">
          <source>NOTE: This modified program still works fine as a single program. The single program marks itself as the chief.</source>
          <target state="translated">注意:この修正されたプログラムは、単一のプログラムとしても問題なく動作します。単一のプログラムは自分自身をチーフとしてマークします。</target>
        </trans-unit>
        <trans-unit id="2638e7baff5cec4b35bd96338994a8e0b5185b12" translate="yes" xml:space="preserve">
          <source>NOTE: This shape is not enforced at runtime. Setting incorrect shapes can result in inconsistencies between the statically-known graph and the runtime value of tensors. For runtime validation of the shape, use &lt;a href=&quot;ensure_shape&quot;&gt;&lt;code&gt;tf.ensure_shape&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注：この形状は実行時に適用されません。不正な形状を設定すると、静的に既知のグラフとテンソルの実行時の値の間に不整合が生じる可能性があります。シェイプのランタイム検証には、代わりに&lt;a href=&quot;ensure_shape&quot;&gt; &lt;code&gt;tf.ensure_shape&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="cd3ea3ff47dc681a1f1086660a0f3b033315c559" translate="yes" xml:space="preserve">
          <source>NOTE: This will zero-out the file. This ensures there is no pre-existing state. NOTE: If the file already exists, it will be made writable and overwritten.</source>
          <target state="translated">注:これはファイルをゼロアウトします。これにより、既存の状態が存在しないことが保証されます。注:ファイルが既に存在する場合は、書き込み可能な状態にして上書きします。</target>
        </trans-unit>
        <trans-unit id="4fd629fd5aa77ce9bf3a720206387efce64814f3" translate="yes" xml:space="preserve">
          <source>NOTE: We use element names that are consistent with those used by the C++ command-line flag library, from https://github.com/gflags/gflags. We also use a few new elements (e.g.,</source>
          <target state="translated">注:要素名は、https://github.com/gflags/gflags にある C++コマンドライン フラグ・ライブラリで使用されているものと一致するものを使用しています。また、いくつかの新しい要素を使用しています (例。</target>
        </trans-unit>
        <trans-unit id="f054bd2415d59834c5afa4d8fb3a21b3323535bb" translate="yes" xml:space="preserve">
          <source>NOTE: in the docstrings of all DEFINE* functions, &quot;registers&quot; is short for &quot;creates a new flag and registers it&quot;.</source>
          <target state="translated">注意:すべてのDEFINE*関数のdocstringsでは、&quot;registers &quot;は &quot;新しいフラグを作成してそれを登録する &quot;の略です。</target>
        </trans-unit>
        <trans-unit id="8bc4687dbd0f799253d60f4172ac9a2623210f34" translate="yes" xml:space="preserve">
          <source>NOTE: we use strings, and not the types.*Type constants because our flags can have more exotic types, e.g., 'comma separated list of strings', 'whitespace separated list of strings', etc.</source>
          <target state="translated">注:ここでは文字列を使用しますが、type.*Type定数ではなく、文字列を使用します。これは、フラグがよりエキゾチックな型(例えば、'カンマ区切りの文字列のリスト'、'空白区切りの文字列のリスト'など)を持つことができるからです。</target>
        </trans-unit>
        <trans-unit id="1104eefed6514b1f5cdaa6a29c1337f707ac335d" translate="yes" xml:space="preserve">
          <source>Name prepended to all ops created by this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Distribution&lt;/code&gt; によって作成されたすべてのオペレーションに付加される名前。</target>
        </trans-unit>
        <trans-unit id="a7746578f84ffdc5775b6ba46fc11c99af24f55c" translate="yes" xml:space="preserve">
          <source>Name scope context manager.</source>
          <target state="translated">名前スコープコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="9f340ff6565652028b5a658440e8c4ba297b9762" translate="yes" xml:space="preserve">
          <source>Name-based &lt;a href=&quot;../compat/v1/train/saver&quot;&gt;&lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt;&lt;/a&gt; checkpoints from TensorFlow 1.x can be loaded using this method. Names are used to match variables. Re-encode name-based checkpoints using &lt;a href=&quot;checkpoint#save&quot;&gt;&lt;code&gt;tf.train.Checkpoint.save&lt;/code&gt;&lt;/a&gt; as soon as possible.</source>
          <target state="translated">TensorFlow 1.xからの名前ベースの&lt;a href=&quot;../compat/v1/train/saver&quot;&gt; &lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt; &lt;/a&gt;チェックポイントは、このメソッドを使用してロードできます。名前は変数の照合に使用されます。&lt;a href=&quot;checkpoint#save&quot;&gt; &lt;code&gt;tf.train.Checkpoint.save&lt;/code&gt; &lt;/a&gt;を使用して、名前ベースのチェックポイントをできるだけ早く再エンコードします。</target>
        </trans-unit>
        <trans-unit id="2a5eb5447e34cfda4ed5b878b12576d5e95aed0e" translate="yes" xml:space="preserve">
          <source>Name-based &lt;a href=&quot;saver&quot;&gt;&lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt;&lt;/a&gt; checkpoints can be loaded using this method. Names are used to match variables. No restore ops are created/run until &lt;code&gt;run_restore_ops()&lt;/code&gt; or &lt;code&gt;initialize_or_restore()&lt;/code&gt; are called on the returned status object when graph building, but there is restore-on-creation when executing eagerly. Re-encode name-based checkpoints using &lt;a href=&quot;../../../train/checkpoint#save&quot;&gt;&lt;code&gt;tf.train.Checkpoint.save&lt;/code&gt;&lt;/a&gt; as soon as possible.</source>
          <target state="translated">名前ベースの&lt;a href=&quot;saver&quot;&gt; &lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt; &lt;/a&gt;チェックポイントは、このメソッドを使用してロードできます。名前は変数の照合に使用されます。グラフ作成時に返されたステータスオブジェクトで &lt;code&gt;run_restore_ops()&lt;/code&gt; または &lt;code&gt;initialize_or_restore()&lt;/code&gt; が呼び出されるまで、復元操作は作成/実行されませんが、熱心に実行すると、復元時に作成されます。&lt;a href=&quot;../../../train/checkpoint#save&quot;&gt; &lt;code&gt;tf.train.Checkpoint.save&lt;/code&gt; &lt;/a&gt;を使用して、名前ベースのチェックポイントをできるだけ早く再エンコードします。</target>
        </trans-unit>
        <trans-unit id="28d5c9549dfad381de16f27e40b1abd9011bb761" translate="yes" xml:space="preserve">
          <source>Named outputs must be provided as a dict from string to &lt;code&gt;Tensor&lt;/code&gt;,</source>
          <target state="translated">名前付き出力は、文字列から &lt;code&gt;Tensor&lt;/code&gt; への辞書として提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="c047751220a4a022bf8b34d1d07288536626e59e" translate="yes" xml:space="preserve">
          <source>Negative means, for every element &lt;code&gt;x[i]&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;, we have &lt;code&gt;x[i] &amp;lt; 0&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is empty this is trivially satisfied.</source>
          <target state="translated">負の手段は、すべての要素のための &lt;code&gt;x[i]&lt;/code&gt; の &lt;code&gt;x&lt;/code&gt; 、我々は持っている &lt;code&gt;x[i] &amp;lt; 0&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; が空の場合、これは簡単に満たされます。</target>
        </trans-unit>
        <trans-unit id="9997061cc1df2fc344d7b363fa6a6c8dbc975409" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;args&lt;/code&gt; nor &lt;code&gt;kwargs&lt;/code&gt; may contain per-replica values. If they contain mirrored values, they will be unwrapped before calling &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; も &lt;code&gt;kwargs&lt;/code&gt; もレプリカごとの値を含むことはできません。ミラーリングされた値が含まれている場合は、 &lt;code&gt;fn&lt;/code&gt; を呼び出す前にラップ解除されます。</target>
        </trans-unit>
        <trans-unit id="d9a9abf30cef4dff5ab30c1aa4c6cfcb04ec5d70" translate="yes" xml:space="preserve">
          <source>Nesting custom gradients can lead to unintuitive results. The default behavior does not correspond to n-th order derivatives. For example</source>
          <target state="translated">カスタムグラデーションをネストすると、直感的でない結果になることがあります。デフォルトの動作は、n次の導関数には対応していません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="bbacaddc658debb06d141833d26e0cd44d13023a" translate="yes" xml:space="preserve">
          <source>Neural machine translation with attention</source>
          <target state="translated">注意を伴うニューラル機械翻訳</target>
        </trans-unit>
        <trans-unit id="55d7fd8cd5468a225d03e756ead0c2dd940cb199" translate="yes" xml:space="preserve">
          <source>Neural style transfer</source>
          <target state="translated">ニューラルスタイル転送</target>
        </trans-unit>
        <trans-unit id="df3e49001e3d6ba6769a46b475ccd41b26b3e0de" translate="yes" xml:space="preserve">
          <source>Never learns to output repeated classes, as they are collapsed in the input labels before training.</source>
          <target state="translated">学習前に入力ラベルで折りたたまれたクラスを繰り返し出力する学習をしない。</target>
        </trans-unit>
        <trans-unit id="0d8cee794ca609da92a448ad76164b7e16c75c36" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;options&quot;&gt;&lt;code&gt;tf.data.Options()&lt;/code&gt;&lt;/a&gt; object which is the result of merging self with the input &lt;a href=&quot;options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自己を入力&lt;a href=&quot;options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt;とマージした結果である新しい&lt;a href=&quot;options&quot;&gt; &lt;code&gt;tf.data.Options()&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="fe0226ce7bb4d26ccf6d7d0209ba867cc25146f1" translate="yes" xml:space="preserve">
          <source>Newlines are stripped from the output. See ReaderBase for supported methods.</source>
          <target state="translated">改行は出力から取り除かれます。サポートされているメソッドについては ReaderBase を参照してください。</target>
        </trans-unit>
        <trans-unit id="458935459d7140127b19628c83fd2e4689e9e0ca" translate="yes" xml:space="preserve">
          <source>No operations should be added to the graph inside this scope, it should only be used when creating variables (some implementations work by changing variable creation, others work by using a tf.compat.v1.colocate_with() scope).</source>
          <target state="translated">このスコープ内のグラフには何も操作を加えてはいけないので、変数を作成するときにのみ使用してください (変数の作成を変更することで動作する実装もあれば、tf.compat.v1.colocate_with()スコープを使用して動作する実装もあります)。</target>
        </trans-unit>
        <trans-unit id="e4724ced8c9eb466bc6d5981fbe7b5105a2edce4" translate="yes" xml:space="preserve">
          <source>No validity checking is performed on the indices of &lt;code&gt;A&lt;/code&gt;. However, the following input format is recommended for optimal behavior:</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; のインデックスに対して有効性チェックは実行されません。ただし、最適な動作のためには、次の入力形式をお勧めします。</target>
        </trans-unit>
        <trans-unit id="11666704a84af89311580ed98c76fe597a2315b5" translate="yes" xml:space="preserve">
          <source>Nodes with task type &lt;code&gt;worker&lt;/code&gt; can have id 0, 1, 2. Nodes with task type &lt;code&gt;ps&lt;/code&gt; can have id, 0, 1. So, &lt;code&gt;task_id&lt;/code&gt; is not unique, but the pair (&lt;code&gt;task_type&lt;/code&gt;, &lt;code&gt;task_id&lt;/code&gt;) can uniquely determine a node in the cluster.</source>
          <target state="translated">タスクタイプ &lt;code&gt;worker&lt;/code&gt; のノードはid 0、1、2を持つことができます。タスクタイプ &lt;code&gt;ps&lt;/code&gt; のノードはid、0、1を持つことができます。したがって、 &lt;code&gt;task_id&lt;/code&gt; は一意ではありませんが、ペア（ &lt;code&gt;task_type&lt;/code&gt; 、 &lt;code&gt;task_id&lt;/code&gt; ）はクラスター内のノードを一意に決定できます。</target>
        </trans-unit>
        <trans-unit id="c979e6e5d3f4ead496e670d40a836151f1ab6c4f" translate="yes" xml:space="preserve">
          <source>Non-negative means, for every element &lt;code&gt;x[i]&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;, we have &lt;code&gt;x[i] &amp;gt;= 0&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is empty this is trivially satisfied.</source>
          <target state="translated">非負の手段は、すべての要素のため &lt;code&gt;x[i]&lt;/code&gt; の &lt;code&gt;x&lt;/code&gt; 、我々は持っている &lt;code&gt;x[i] &amp;gt;= 0&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; が空の場合、これは簡単に満たされます。</target>
        </trans-unit>
        <trans-unit id="34c8973bf00e274f72e3e9d129db1bfd9504fc85" translate="yes" xml:space="preserve">
          <source>Non-numeric, unordered, and quantized types are not considered unsigned, and this function returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">非数値型、非順序型、および量子化型は、符号なしとは見なされず、この関数は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ba8ab04a76afb8ed04a27bf3433d7f51df786e2c" translate="yes" xml:space="preserve">
          <source>Non-overlapping blocks of size &lt;code&gt;block_size x block size&lt;/code&gt; are rearranged into depth at each location.</source>
          <target state="translated">サイズが &lt;code&gt;block_size x block size&lt;/code&gt; 重複しないブロックは、各位置で深度に再配置されます。</target>
        </trans-unit>
        <trans-unit id="9b52814376942be4a2e4ffe80f42e42f8bbec394" translate="yes" xml:space="preserve">
          <source>Non-overlapping blocks of size &lt;code&gt;block_size x block size&lt;/code&gt; in the height and width dimensions are rearranged into the batch dimension at each location.</source>
          <target state="translated">高さおよび幅の次元でサイズが &lt;code&gt;block_size x block size&lt;/code&gt; 重複しないブロックは、各場所でバッチ次元に再配置されます。</target>
        </trans-unit>
        <trans-unit id="64df6f701202b39390bcf5e8b4c436903270eae0" translate="yes" xml:space="preserve">
          <source>Non-positive means, for every element &lt;code&gt;x[i]&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;, we have &lt;code&gt;x[i] &amp;lt;= 0&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is empty this is trivially satisfied.</source>
          <target state="translated">非積極的な手段は、すべての要素のため &lt;code&gt;x[i]&lt;/code&gt; の &lt;code&gt;x&lt;/code&gt; 、我々は持っている &lt;code&gt;x[i] &amp;lt;= 0&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; が空の場合、これは簡単に満たされます。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="14bbac7c58836e5b5a602a379b51110d6ae97db4" translate="yes" xml:space="preserve">
          <source>None of &lt;code&gt;Estimator&lt;/code&gt;'s methods can be overridden in subclasses (its constructor enforces this). Subclasses should use &lt;code&gt;model_fn&lt;/code&gt; to configure the base class, and may add methods implementing specialized functionality.</source>
          <target state="translated">いずれも &lt;code&gt;Estimator&lt;/code&gt; の方法は、（そのコンストラクタはこれを強制する）サブクラスでオーバーライドすることはできません。サブクラスは、基本クラスを構成するために &lt;code&gt;model_fn&lt;/code&gt; を使用する必要があり、特殊な機能を実装するメソッドを追加する場合があります。</target>
        </trans-unit>
        <trans-unit id="adfb7662711b80f1013dedb7a61b85ad11154879" translate="yes" xml:space="preserve">
          <source>None or a &lt;code&gt;SessionRunArgs&lt;/code&gt; object.</source>
          <target state="translated">なし、または &lt;code&gt;SessionRunArgs&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="d8d92ebc4f96cf6d286ec1a11a06ca796351ea64" translate="yes" xml:space="preserve">
          <source>None or a tensor (or list of tensors, one per output tensor of the layer).</source>
          <target state="translated">なしまたはテンソル(またはテンソルのリスト、レイヤーの出力テンソルごとに1つ)。</target>
        </trans-unit>
        <trans-unit id="4a0fbd028589f38608b21906f558dd3f64e5ffa6" translate="yes" xml:space="preserve">
          <source>None when executing eagerly. During graph tracing this returns a TF operator that prints the specified inputs in the specified output stream or logging level. This operator will be automatically executed except inside of &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;tf.compat.v1&lt;/code&gt;&lt;/a&gt; graphs and sessions.</source>
          <target state="translated">熱心に実行する場合はなし。グラフのトレース中に、これは指定された出力ストリームまたはロギングレベルで指定された入力を出力するTF演算子を返します。この演算子は、&lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;tf.compat.v1&lt;/code&gt; &lt;/a&gt;グラフおよびセッションの内部を除いて、自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="72a4bf1028692e704541b00acacece0a73ff9a0d" translate="yes" xml:space="preserve">
          <source>None: Switch to a system default.</source>
          <target state="translated">なし:システムのデフォルトに切り替えます。</target>
        </trans-unit>
        <trans-unit id="13c325d58f707f1ad1e369aa42ee653eda1ae052" translate="yes" xml:space="preserve">
          <source>None: sets the system default.</source>
          <target state="translated">None:システムの既定値を設定します。</target>
        </trans-unit>
        <trans-unit id="7547e1f1bfa737c51026448bbe37403315a54990" translate="yes" xml:space="preserve">
          <source>Normalization equations: Consider the intermediate activations (x) of a mini-batch of size (m):</source>
          <target state="translated">正規化の方程式。サイズ(m)のミニバッチの中間活性化(x)を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="064324fb9ad9a7e601e5b04ac9bc9980e4416ae4" translate="yes" xml:space="preserve">
          <source>Normalize and scale inputs or activations. (Ioffe and Szegedy, 2014).</source>
          <target state="translated">入力または活性化を正規化し、スケールする。(Ioffe and Szegedy,2014)。</target>
        </trans-unit>
        <trans-unit id="3ddfbadcf1463f788dedd93859f2f59e781e0f26" translate="yes" xml:space="preserve">
          <source>Normalize the activations of the previous layer at each batch, i.e. applies a transformation that maintains the mean activation close to 0 and the activation standard deviation close to 1.</source>
          <target state="translated">各バッチで前の層の活性化を正規化する、すなわち、平均活性化を0に近づけ、活性化標準偏差を1に近づける変換を適用します。</target>
        </trans-unit>
        <trans-unit id="916f594677c93ac279cb0019816ce04eba385fec" translate="yes" xml:space="preserve">
          <source>Normalize the activations of the previous layer for each given example in a batch independently, rather than across a batch like Batch Normalization. i.e. applies a transformation that maintains the mean activation within each example close to 0 and the activation standard deviation close to 1.</source>
          <target state="translated">バッチ正規化のようにバッチ全体ではなく、バッチ内の各例の前のレイヤーの活性化を独立して正規化します。つまり、各例内の平均活性化を0に近づけ、活性化標準偏差を1に近づける変換を適用します。</target>
        </trans-unit>
        <trans-unit id="e58a6e978455eb49c7db072e10761ebfdcbc42d6" translate="yes" xml:space="preserve">
          <source>Normalized, scaled, offset tensor.</source>
          <target state="translated">正規化された、スケーリングされた、オフセットテンソル。</target>
        </trans-unit>
        <trans-unit id="5c4f815e6c91d4e73f820c37ba7f1bcee095c74a" translate="yes" xml:space="preserve">
          <source>Normalizes &lt;code&gt;tensor&lt;/code&gt; along dimension &lt;code&gt;axis&lt;/code&gt; using specified norm.</source>
          <target state="translated">指定されたノルムを使用して、次元 &lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;tensor&lt;/code&gt; 正規化します。</target>
        </trans-unit>
        <trans-unit id="aff38eeab4b14f7649f14f65c0b7825af7df202d" translate="yes" xml:space="preserve">
          <source>Normalizes a Numpy array.</source>
          <target state="translated">Numpy配列を正規化します。</target>
        </trans-unit>
        <trans-unit id="c7b4d2f24bb4bf14315a15330bc468f30500a09f" translate="yes" xml:space="preserve">
          <source>Normalizes a tensor by &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;variance&lt;/code&gt;, and applies (optionally) a &lt;code&gt;scale&lt;/code&gt; \(\gamma\) to it, as well as an &lt;code&gt;offset&lt;/code&gt; \(\beta\):</source>
          <target state="translated">テンソルを &lt;code&gt;mean&lt;/code&gt; と &lt;code&gt;variance&lt;/code&gt; で正規化し、（オプションで） &lt;code&gt;scale&lt;/code&gt; \（\ gamma \）と &lt;code&gt;offset&lt;/code&gt; \（\ beta \）を適用します。</target>
        </trans-unit>
        <trans-unit id="2308ef7fe7e52a90b654582b28aba02dc69d0986" translate="yes" xml:space="preserve">
          <source>Normalizes a tensor wrt the L2 norm alongside the specified axis.</source>
          <target state="translated">テンソルを指定された軸に沿ってL2ノルムで正規化します。</target>
        </trans-unit>
        <trans-unit id="c5bb725c2a1943788fbf0021b845c6ac5dd5243c" translate="yes" xml:space="preserve">
          <source>Normalizes along dimension &lt;code&gt;axis&lt;/code&gt; using an L2 norm.</source>
          <target state="translated">L2ノルムを使用して寸法 &lt;code&gt;axis&lt;/code&gt; 沿って正規化します。</target>
        </trans-unit>
        <trans-unit id="97edba55c7e8ea1e2ab91117f1f0bae959c27151" translate="yes" xml:space="preserve">
          <source>Normalizes along dimension &lt;code&gt;axis&lt;/code&gt; using an L2 norm. (deprecated arguments)</source>
          <target state="translated">L2ノルムを使用して寸法 &lt;code&gt;axis&lt;/code&gt; 沿って正規化します。（廃止された引数）</target>
        </trans-unit>
        <trans-unit id="17303e7ba9d3afb7e4db135e192b17f1cf35f45d" translate="yes" xml:space="preserve">
          <source>Normally used together with 'scope' view.</source>
          <target state="translated">通常は「スコープ」ビューと一緒に使用します。</target>
        </trans-unit>
        <trans-unit id="e1dfda3ff8dc12277e03539152639a01ac561478" translate="yes" xml:space="preserve">
          <source>Normally, the module that calls the DEFINE_xxx functions claims the flag to be its key flag. This is undesirable for modules that define additional DEFINE_yyy functions with its own flag parsers and serializers, since that module will accidentally claim flags defined by DEFINE_yyy as its key flags. After calling this function, the module disclaims flag definitions thereafter, so the key flags will be correctly attributed to the caller of DEFINE_yyy.</source>
          <target state="translated">通常、DEFINE_xxx関数を呼び出すモジュールは、そのフラグをそのキーフラグであると主張します。これは、独自のフラグ・パーサやシリアライザで追加のDEFINE_yyy関数を定義しているモジュールでは望ましくありません。この関数を呼び出した後、モジュールはその後フラグの定義を放棄するため、キーフラグはDEFINE_yyyの呼び出し元に正しく帰属します。</target>
        </trans-unit>
        <trans-unit id="d56a188097b32e96166fb55a8afc1f964b4839b3" translate="yes" xml:space="preserve">
          <source>Not all Readers support being restored, so this can produce an Unimplemented error.</source>
          <target state="translated">すべてのリーダーがリストアをサポートしているわけではないので、未実装エラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="8a82abb5f2cf27a5f3715b34b452bf30a6056cc5" translate="yes" xml:space="preserve">
          <source>Not all Readers support being serialized, so this can produce an Unimplemented error.</source>
          <target state="translated">すべてのリーダーがシリアル化をサポートしているわけではないので、未実装エラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6363875392bd4c1ceda918196093dc232be1cab2" translate="yes" xml:space="preserve">
          <source>Not compatible with eager execution. To check for &lt;code&gt;Inf&lt;/code&gt;s and &lt;code&gt;NaN&lt;/code&gt;s under eager execution, call &lt;a href=&quot;../../debugging/enable_check_numerics&quot;&gt;&lt;code&gt;tf.debugging.enable_check_numerics()&lt;/code&gt;&lt;/a&gt; once before executing the checked operations.</source>
          <target state="translated">熱心な実行と互換性がありません。熱心な実行で &lt;code&gt;Inf&lt;/code&gt; と &lt;code&gt;NaN&lt;/code&gt; をチェックするには、チェックされた操作を実行する前に&lt;a href=&quot;../../debugging/enable_check_numerics&quot;&gt; &lt;code&gt;tf.debugging.enable_check_numerics()&lt;/code&gt; を&lt;/a&gt; 1回呼び出します。</target>
        </trans-unit>
        <trans-unit id="9237eedc5589ecc6b8ee36e7cfb8a8fee3226e44" translate="yes" xml:space="preserve">
          <source>Not compatible with eager execution. To ingest data under eager execution, use the &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; API instead.</source>
          <target state="translated">熱心な実行と互換性がありません。熱心な実行でデータを取り込むには、代わりに&lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt; APIを使用してください。</target>
        </trans-unit>
        <trans-unit id="2ada071819daf1f780987786f85add4894c2abdf" translate="yes" xml:space="preserve">
          <source>Not compatible with eager execution. To write TensorBoard summaries under eager execution, use &lt;code&gt;tf.contrib.summary&lt;/code&gt; instead.</source>
          <target state="translated">熱心な実行と互換性がありません。熱心な実行でTensorBoardサマリーを書き込むには、代わりに &lt;code&gt;tf.contrib.summary&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f5e998614be9275ecb64d014a6265aaaf223bc24" translate="yes" xml:space="preserve">
          <source>Not threadsafe.</source>
          <target state="translated">スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="db7e90c0287dc26e08c3f25c9eb2d2b14f070fd1" translate="yes" xml:space="preserve">
          <source>Not well supported when graph building. From TensorFlow 1.x, &lt;a href=&quot;../compat/v1/enable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.enable_eager_execution()&lt;/code&gt;&lt;/a&gt; should run first. Calling tf.saved_model.save in a loop when graph building from TensorFlow 1.x will add new save operations to the default graph each iteration.</source>
          <target state="translated">グラフ作成時はサポートされません。TensorFlow 1.x以降では、&lt;a href=&quot;../compat/v1/enable_eager_execution&quot;&gt; &lt;code&gt;tf.compat.v1.enable_eager_execution()&lt;/code&gt; &lt;/a&gt;を最初に実行する必要があります。TensorFlow 1.xからグラフを作成するときにループでtf.saved_model.saveを呼び出すと、反復ごとにデフォルトのグラフに新しい保存操作が追加されます。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="cb184c4bb0651f62ca35c7a5b94ae490d249ae1d" translate="yes" xml:space="preserve">
          <source>Note here we derive &amp;amp; use a closed formula not present in the paper as follows:</source>
          <target state="translated">ここでは、次のように、論文にはない閉式を導出して使用していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b2a909050364856639562bf47332b2d0870db232" translate="yes" xml:space="preserve">
          <source>Note in the case that &lt;code&gt;dilation_rate&lt;/code&gt; is not uniformly 1, specifying &quot;VALID&quot; padding is equivalent to specifying &lt;code&gt;padding = &quot;SAME&quot;&lt;/code&gt; with a filter_shape of &lt;code&gt;[1]*N&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dilation_rate&lt;/code&gt; が一様に1でない場合は、「VALID」パディングを指定することは、filtering_shape &lt;code&gt;[1]*N&lt;/code&gt; で &lt;code&gt;padding = &quot;SAME&quot;&lt;/code&gt; を指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="bbe33858c120c8bcc624c14b698f8958aefff666" translate="yes" xml:space="preserve">
          <source>Note internally this op reshapes and uses the underlying 2d operation.</source>
          <target state="translated">内部的には、このオペランドはリシェイプを行い、基礎となる2次元演算を使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="4a26bc83d674c780bc68baa219aef1ce71e32c5a" translate="yes" xml:space="preserve">
          <source>Note on duality: The dilation of &lt;code&gt;input&lt;/code&gt; by the &lt;code&gt;filter&lt;/code&gt; is equal to the negation of the erosion of &lt;code&gt;-input&lt;/code&gt; by the reflected &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">双対性に関する注意： &lt;code&gt;filter&lt;/code&gt; による &lt;code&gt;input&lt;/code&gt; の膨張は、反射 &lt;code&gt;filter&lt;/code&gt; による入力の &lt;code&gt;-input&lt;/code&gt; 否定に等しい。</target>
        </trans-unit>
        <trans-unit id="538256a5d774819d8174f664f11592327abdf052" translate="yes" xml:space="preserve">
          <source>Note on duality: The dilation of &lt;code&gt;input&lt;/code&gt; by the &lt;code&gt;filters&lt;/code&gt; is equal to the negation of the erosion of &lt;code&gt;-input&lt;/code&gt; by the reflected &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">双対性に関する注意： &lt;code&gt;filters&lt;/code&gt; による &lt;code&gt;input&lt;/code&gt; の膨張は、反射 &lt;code&gt;filters&lt;/code&gt; による入力の &lt;code&gt;-input&lt;/code&gt; 否定に等しい。</target>
        </trans-unit>
        <trans-unit id="509981eb2711e602b52010090ca68b6f7a3a9779" translate="yes" xml:space="preserve">
          <source>Note on passing external constants to RNNs: You can pass &quot;external&quot; constants to the cell using the &lt;code&gt;constants&lt;/code&gt; keyword argument of &lt;a href=&quot;rnn#__call__&quot;&gt;&lt;code&gt;RNN.&lt;strong&gt;call&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; (as well as &lt;a href=&quot;rnn#call&quot;&gt;&lt;code&gt;RNN.call&lt;/code&gt;&lt;/a&gt;) method. This requires that the &lt;code&gt;cell.call&lt;/code&gt; method accepts the same keyword argument &lt;code&gt;constants&lt;/code&gt;. Such constants can be used to condition the cell transformation on additional static inputs (not changing over time), a.k.a. an attention mechanism.</source>
          <target state="translated">RNNへの外部定数の受け渡しに関する注意：RNNの &lt;code&gt;constants&lt;/code&gt; キーワード引数を使用して、「外部」定数をセルに渡すことができ&lt;a href=&quot;rnn#__call__&quot;&gt; &lt;code&gt;RNN.&lt;strong&gt;call&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;（および&lt;a href=&quot;rnn#call&quot;&gt; &lt;code&gt;RNN.call&lt;/code&gt; &lt;/a&gt;）メソッド。これには、 &lt;code&gt;cell.call&lt;/code&gt; メソッドが同じキーワード引数 &lt;code&gt;constants&lt;/code&gt; 受け入れることが必要です。そのような定数を使用して、注意メカニズムとして、追加の静的入力（時間の経過に伴って変化しない）で細胞変換を条件付けることができます。</target>
        </trans-unit>
        <trans-unit id="270d0bda224ad5af83ed8d483360479d2bba6ff4" translate="yes" xml:space="preserve">
          <source>Note on specifying the initial state of RNNs: You can specify the initial state of RNN layers symbolically by calling them with the keyword argument &lt;code&gt;initial_state&lt;/code&gt;. The value of &lt;code&gt;initial_state&lt;/code&gt; should be a tensor or list of tensors representing the initial state of the RNN layer.</source>
          <target state="translated">RNNの初期状態の指定に関する注意：RNNレイヤーの初期状態は、キーワード引数 &lt;code&gt;initial_state&lt;/code&gt; で呼び出すことにより、シンボリックに指定できます。 &lt;code&gt;initial_state&lt;/code&gt; の値は、RNN層の初期状態を表すテンソルまたはテンソルのリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a20c526cc3c0884bce765b065839388631d91867" translate="yes" xml:space="preserve">
          <source>Note on supported columns: &lt;code&gt;linear_model&lt;/code&gt; treats categorical columns as &lt;code&gt;indicator_column&lt;/code&gt;s. To be specific, assume the input as &lt;code&gt;SparseTensor&lt;/code&gt; looks like:</source>
          <target state="translated">サポートされる列に関する注意： &lt;code&gt;linear_model&lt;/code&gt; は、カテゴリー列を &lt;code&gt;indicator_column&lt;/code&gt; として扱います。具体的には、 &lt;code&gt;SparseTensor&lt;/code&gt; の入力が次のようになっているとします。</target>
        </trans-unit>
        <trans-unit id="49ff5aa79e4a7608bb5495ed706a66a929042770" translate="yes" xml:space="preserve">
          <source>Note on using statefulness in RNNs: You can set RNN layers to be 'stateful', which means that the states computed for the samples in one batch will be reused as initial states for the samples in the next batch. This assumes a one-to-one mapping between samples in different successive batches.</source>
          <target state="translated">RNNでステートフルネスを使用する際の注意点。これは,あるバッチのサンプルに対して計算された状態が,次のバッチのサンプルの初期状態として再利用されることを意味します.これは,異なる連続したバッチのサンプル間の1対1のマッピングを想定しています.</target>
        </trans-unit>
        <trans-unit id="72777dbfe4f2e5939c7704c40aca1c5dccec5d23" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;matmul&quot;&gt;&lt;code&gt;tf.matmul&lt;/code&gt;&lt;/a&gt; provides kwargs allowing for transpose of arguments. This is done with minimal cost, and is preferable to using this function. E.g.</source>
          <target state="translated">&lt;a href=&quot;matmul&quot;&gt; &lt;code&gt;tf.matmul&lt;/code&gt; &lt;/a&gt;は引数の転置を可能にするkwargsを提供することに注意してください。これは最小限のコストで実行され、この関数を使用するよりも望ましい方法です。例えば</target>
        </trans-unit>
        <trans-unit id="e568fc17bc710ccc123c49d3ba60116212a21197" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;tensor#__getitem__&quot;&gt;&lt;code&gt;tf.Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt;&lt;/a&gt; is typically a more pythonic way to perform slices, as it allows you to write &lt;code&gt;foo[3:7, :-2]&lt;/code&gt; instead of &lt;code&gt;tf.slice(foo, [3, 0], [4, foo.get_shape()[1]-2])&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;tensor#__getitem__&quot;&gt; &lt;code&gt;tf.Tensor.&lt;strong&gt;getitem&lt;/strong&gt;&lt;/code&gt; &lt;/a&gt;注意してください。&lt;strong&gt;GetItem関数は&lt;/strong&gt;、それが書き込みにあなたを可能にするように、典型的には、スライスを実行するために、よりPython的な方法である &lt;code&gt;foo[3:7, :-2]&lt;/code&gt; の代わり &lt;code&gt;tf.slice(foo, [3, 0], [4, foo.get_shape()[1]-2])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40ac51b571e44961669851b81a2bc8f6fff71e6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;A&lt;/code&gt; itself will not in general be circulant.</source>
          <target state="translated">ことを注意 &lt;code&gt;A&lt;/code&gt; 自体は、一般的に循環されません。</target>
        </trans-unit>
        <trans-unit id="1ec112c82a2c107126719b79f0120392dea4eeaa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ForwardAccumulator&lt;/code&gt;s are always applied in the order their context managers were entered, so inner accumulators will not see JVP computation from outer accumulators. Take higher-order JVPs from outer accumulators:</source>
          <target state="translated">なお &lt;code&gt;ForwardAccumulator&lt;/code&gt; sは常に順に適用され、それらのコンテキストマネージャが入力されたので、内部アキュムレータは、外側アキュムレータからJVP計算は表示されません。外部アキュムレータから高次JVPを取得します。</target>
        </trans-unit>
        <trans-unit id="a46da24c95f918ff32cd2978453114c08f12e928" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;alt&lt;/code&gt; should have the &lt;em&gt;same shape&lt;/em&gt; as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">注意 &lt;code&gt;alt&lt;/code&gt; が持つべき&lt;em&gt;同じ形状&lt;/em&gt;として &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a58a5fccc21621a4cf80221dd59a80ac92faf70" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;apply()&lt;/code&gt; can be called multiple times. When eager execution is enabled each call to apply will update the variables once, so this needs to be called in a loop.</source>
          <target state="translated">&lt;code&gt;apply()&lt;/code&gt; は複数回呼び出すことができることに注意してください。一括実行が有効になっている場合、applyを呼び出すたびに変数が1回更新されるため、これをループで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="50f6f8f321ec3b4a9cf9fab3a94eff9e934546e1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;cond&lt;/code&gt; calls &lt;code&gt;true_fn&lt;/code&gt; and &lt;code&gt;false_fn&lt;/code&gt;&lt;em&gt;exactly once&lt;/em&gt; (inside the call to &lt;code&gt;cond&lt;/code&gt;, and not at all during &lt;code&gt;Session.run()&lt;/code&gt;). &lt;code&gt;cond&lt;/code&gt; stitches together the graph fragments created during the &lt;code&gt;true_fn&lt;/code&gt; and &lt;code&gt;false_fn&lt;/code&gt; calls with some additional graph nodes to ensure that the right branch gets executed depending on the value of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; が &lt;code&gt;true_fn&lt;/code&gt; と &lt;code&gt;false_fn&lt;/code&gt; を&lt;em&gt;1回だけ&lt;/em&gt;呼び出すことに注意してください（ &lt;code&gt;cond&lt;/code&gt; への呼び出し内であり、 &lt;code&gt;Session.run()&lt;/code&gt; の間はまったく呼び出しません）。 &lt;code&gt;cond&lt;/code&gt; は、 &lt;code&gt;true_fn&lt;/code&gt; と &lt;code&gt;false_fn&lt;/code&gt; の呼び出し中に作成されたグラフフラグメントをいくつかの追加のグラフノードとつなぎ合わせて、 &lt;code&gt;pred&lt;/code&gt; の値に応じて正しいブランチが実行されるようにします。</target>
        </trans-unit>
        <trans-unit id="c35116aab4ffda3f5b8febb9a2fbfcf9f98ca4b2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;onehot_labels&lt;/code&gt; and &lt;code&gt;logits&lt;/code&gt; must have the same shape, e.g. &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;. The shape of &lt;code&gt;weights&lt;/code&gt; must be broadcastable to loss, whose shape is decided by the shape of &lt;code&gt;logits&lt;/code&gt;. In case the shape of &lt;code&gt;logits&lt;/code&gt; is &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, loss is a &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onehot_labels&lt;/code&gt; と &lt;code&gt;logits&lt;/code&gt; は同じ形状でなければならないことに注意してください（例： &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 。 &lt;code&gt;weights&lt;/code&gt; の形状は損失に対してブロードキャスト可能でなければならず、その形状は &lt;code&gt;logits&lt;/code&gt; の形状によって決定されます。 &lt;code&gt;logits&lt;/code&gt; の形状が &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 場合、損失は形状 &lt;code&gt;[batch_size]&lt;/code&gt; の &lt;code&gt;Tensor&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f1b99c871f303c6654c92ba2a6577333ec5e3056" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output&lt;/code&gt; preserves the mask dimensions &lt;code&gt;a1...aA&lt;/code&gt;; this differs from &lt;a href=&quot;../boolean_mask&quot;&gt;&lt;code&gt;tf.boolean_mask&lt;/code&gt;&lt;/a&gt;, which flattens those dimensions.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; はマスクの寸法 &lt;code&gt;a1...aA&lt;/code&gt; 保持されることに注意してください。これは、これらの寸法を平坦化する&lt;a href=&quot;../boolean_mask&quot;&gt; &lt;code&gt;tf.boolean_mask&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="b7f020afa36ab3da134530fec37d9ded2a125980" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;print_tensor&lt;/code&gt; returns a new tensor identical to &lt;code&gt;x&lt;/code&gt; which should be used in the following code. Otherwise the print operation is not taken into account during evaluation.</source>
          <target state="translated">&lt;code&gt;print_tensor&lt;/code&gt; は、次のコードで使用する &lt;code&gt;x&lt;/code&gt; と同じ新しいテンソルを返すことに注意してください。それ以外の場合、評価中に印刷操作は考慮されません。</target>
        </trans-unit>
        <trans-unit id="5354d47dcf912a72d45acaff759032e08a161cbe" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;rt1&lt;/code&gt; only contains one ragged dimension (the innermost dimension). In contrast, if &lt;code&gt;from_row_splits&lt;/code&gt; is used to construct a similar &lt;code&gt;RaggedTensor&lt;/code&gt;, then that &lt;code&gt;RaggedTensor&lt;/code&gt; will have two ragged dimensions:</source>
          <target state="translated">&lt;code&gt;rt1&lt;/code&gt; には1つの不規則な次元（最も内側の次元）のみが含まれていることに注意してください。対照的に、 &lt;code&gt;from_row_splits&lt;/code&gt; を使用して同様の &lt;code&gt;RaggedTensor&lt;/code&gt; を構築する場合、その &lt;code&gt;RaggedTensor&lt;/code&gt; には2つの不規則な次元があります。</target>
        </trans-unit>
        <trans-unit id="e5610ad5b9af5428acd48a2b3a48d463377d1dda" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;rt6&lt;/code&gt; only contains one ragged dimension (the innermost dimension). In contrast, if &lt;code&gt;from_row_splits&lt;/code&gt; is used to construct a similar &lt;code&gt;RaggedTensor&lt;/code&gt;, then that &lt;code&gt;RaggedTensor&lt;/code&gt; will have two ragged dimensions:</source>
          <target state="translated">&lt;code&gt;rt6&lt;/code&gt; には1つの不規則な次元（最も内側の次元）のみが含まれていることに注意してください。対照的に、 &lt;code&gt;from_row_splits&lt;/code&gt; を使用して同様の &lt;code&gt;RaggedTensor&lt;/code&gt; を構築する場合、その &lt;code&gt;RaggedTensor&lt;/code&gt; には2つの不規則な次元があります。</target>
        </trans-unit>
        <trans-unit id="3dda3d3a3e15aed235eeed849a924d5cb03f30cb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;while_loop&lt;/code&gt; calls &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;&lt;em&gt;exactly once&lt;/em&gt; (inside the call to &lt;code&gt;while_loop&lt;/code&gt;, and not at all during &lt;code&gt;Session.run()&lt;/code&gt;). &lt;code&gt;while_loop&lt;/code&gt; stitches together the graph fragments created during the &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; calls with some additional graph nodes to create the graph flow that repeats &lt;code&gt;body&lt;/code&gt; until &lt;code&gt;cond&lt;/code&gt; returns false.</source>
          <target state="translated">注意 &lt;code&gt;while_loop&lt;/code&gt; 呼び出して &lt;code&gt;cond&lt;/code&gt; して &lt;code&gt;body&lt;/code&gt; &lt;em&gt;正確に一度&lt;/em&gt;（の呼び出し内 &lt;code&gt;while_loop&lt;/code&gt; の間、およびすべてではないに &lt;code&gt;Session.run()&lt;/code&gt; ）。 &lt;code&gt;while_loop&lt;/code&gt; は、 &lt;code&gt;cond&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; の呼び出し中に作成されたグラフフラグメントをいくつかの追加のグラフノードとつなぎ合わせて、 &lt;code&gt;cond&lt;/code&gt; がfalseを返すまで &lt;code&gt;body&lt;/code&gt; を繰り返すグラフフローを作成します。</target>
        </trans-unit>
        <trans-unit id="8d7fa6d4c7f23e3bd24a1c5fb86f12cf2aecce4b" translate="yes" xml:space="preserve">
          <source>Note that a RNN cell has: - a &lt;code&gt;call&lt;/code&gt; method. - a &lt;code&gt;state_size&lt;/code&gt; attribute. - a &lt;code&gt;output_size&lt;/code&gt; attribute. - a &lt;code&gt;get_initial_state&lt;/code&gt; method. See the documentation on &lt;a href=&quot;../../keras/layers/rnn&quot;&gt;&lt;code&gt;tf.keras.layers.RNN&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">RNNセルには以下が含まれることに注意してください。- &lt;code&gt;call&lt;/code&gt; メソッド。- &lt;code&gt;state_size&lt;/code&gt; の属性。- &lt;code&gt;output_size&lt;/code&gt; 属性。- &lt;code&gt;get_initial_state&lt;/code&gt; 方法。詳細については、&lt;a href=&quot;../../keras/layers/rnn&quot;&gt; &lt;code&gt;tf.keras.layers.RNN&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2598e6e6e3ed83c4641fe5b7584bdf58631bc1af" translate="yes" xml:space="preserve">
          <source>Note that a RNN cell is has: - a &lt;code&gt;call&lt;/code&gt; method. - a &lt;code&gt;state_size&lt;/code&gt; attribute. - a &lt;code&gt;output_size&lt;/code&gt; attribute. - a &lt;code&gt;get_initial_state&lt;/code&gt; method. See the documentation on &lt;a href=&quot;../../keras/layers/rnn&quot;&gt;&lt;code&gt;tf.keras.layers.RNN&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">RNNセルには次のものが含まれることに注意してください。- &lt;code&gt;call&lt;/code&gt; メソッド。- &lt;code&gt;state_size&lt;/code&gt; の属性。- &lt;code&gt;output_size&lt;/code&gt; 属性。- &lt;code&gt;get_initial_state&lt;/code&gt; 方法。詳細については、&lt;a href=&quot;../../keras/layers/rnn&quot;&gt; &lt;code&gt;tf.keras.layers.RNN&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="3346ac203c551f5dee084a97a7117570693fae84" translate="yes" xml:space="preserve">
          <source>Note that a call to &lt;code&gt;sample()&lt;/code&gt; without arguments will generate a single sample.</source>
          <target state="translated">引数なしで &lt;code&gt;sample()&lt;/code&gt; を呼び出すと、単一のサンプルが生成されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="364c0af0bec38c1bc33126a30320d7920e1cae9f" translate="yes" xml:space="preserve">
          <source>Note that a regular session installs itself as the default session when it is created in a &lt;code&gt;with&lt;/code&gt; statement. The common usage in non-interactive programs is to follow that pattern:</source>
          <target state="translated">通常のセッションは、 &lt;code&gt;with&lt;/code&gt; ステートメントで作成されたときに、それ自体をデフォルトセッションとしてインストールすることに注意してください。非対話型プログラムの一般的な使用法は、そのパターンに従うことです。</target>
        </trans-unit>
        <trans-unit id="7cf4d553e1b47318848fe5f52ae9a8683fb2afa1" translate="yes" xml:space="preserve">
          <source>Note that assignments currently do not support NumPy broadcasting semantics.</source>
          <target state="translated">現在のところ、割り当てはNumPy放送セマンティクスをサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f05ab6494191c495422b3d779843d05126cda1c" translate="yes" xml:space="preserve">
          <source>Note that at this time, subclassed models can only be saved using &lt;code&gt;serving_only=True&lt;/code&gt;.</source>
          <target state="translated">現時点では、サブクラス化されたモデルは、 &lt;code&gt;serving_only=True&lt;/code&gt; を使用してのみ保存できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e77cb553dc0560db17d2e186e3bd42eaa1bf7dd3" translate="yes" xml:space="preserve">
          <source>Note that both &lt;code&gt;then_expression&lt;/code&gt; and &lt;code&gt;else_expression&lt;/code&gt; should be symbolic tensors of the &lt;em&gt;same shape&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;then_expression&lt;/code&gt; と &lt;code&gt;else_expression&lt;/code&gt; はどちらも&lt;em&gt;同じ形状の&lt;/em&gt;シンボリックテンソルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="332486ee0645460b69c61fd87acb5e3c20435fe4" translate="yes" xml:space="preserve">
          <source>Note that by convention, all sparse ops preserve the canonical ordering along increasing dimension number. The only time ordering can be violated is during manual manipulation of the indices and values to add entries.</source>
          <target state="translated">慣習的に、すべてのスパース操作は次元数の増加に沿って正準順序を維持することに注意してください。秩序に反することができるのは、エントリを追加するためにインデックスや値を手動で操作しているときだけです。</target>
        </trans-unit>
        <trans-unit id="cdaefb21a24bd1dd8a5c3e809a7ec46b615166b8" translate="yes" xml:space="preserve">
          <source>Note that checkpoints saved due to &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; will not show up in this list (to avoid ever-growing filename lists).</source>
          <target state="translated">&lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; のために保存されたチェックポイントは、このリストには表示されないことに注意してください（ファイル名リストの増大を防ぐため）。</target>
        </trans-unit>
        <trans-unit id="7ea2bdfbd0a043277143ad28f235408aa46b132f" translate="yes" xml:space="preserve">
          <source>Note that collections are not sets, so it is possible to add a value to a collection several times.</source>
          <target state="translated">コレクションはセットではないので、コレクションに値を何度か追加することができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ba0fffcab7a08b358786725ddffcd0bb7d98dc79" translate="yes" xml:space="preserve">
          <source>Note that collections are not sets, so it is possible to add a value to a collection several times. This function makes sure that duplicates in &lt;code&gt;names&lt;/code&gt; are ignored, but it will not check for pre-existing membership of &lt;code&gt;value&lt;/code&gt; in any of the collections in &lt;code&gt;names&lt;/code&gt;.</source>
          <target state="translated">コレクションはセットではないため、コレクションに値を複数回追加することが可能です。この関数は、 &lt;code&gt;names&lt;/code&gt; の重複が無視されることを確認しますが、 &lt;code&gt;names&lt;/code&gt; のコレクションのいずれかに存在する &lt;code&gt;value&lt;/code&gt; のメンバーシップをチェックしません。</target>
        </trans-unit>
        <trans-unit id="801ba4cea6838bbd2e02399dea989d5f6a9fbb1e" translate="yes" xml:space="preserve">
          <source>Note that compared to &lt;a href=&quot;gradienttape#jacobian&quot;&gt;&lt;code&gt;GradientTape.jacobian&lt;/code&gt;&lt;/a&gt; which computes gradient of each output value w.r.t each input value, this function is useful when &lt;code&gt;target[i,...]&lt;/code&gt; is independent of &lt;code&gt;source[j,...]&lt;/code&gt; for &lt;code&gt;j != i&lt;/code&gt;. This assumption allows more efficient computation as compared to &lt;a href=&quot;gradienttape#jacobian&quot;&gt;&lt;code&gt;GradientTape.jacobian&lt;/code&gt;&lt;/a&gt;. The output, as well as intermediate activations, are lower dimensional and avoid a bunch of redundant zeros which would result in the jacobian computation given the independence assumption.</source>
          <target state="translated">各入力値に対する各出力値の勾配を計算する&lt;a href=&quot;gradienttape#jacobian&quot;&gt; &lt;code&gt;GradientTape.jacobian&lt;/code&gt; &lt;/a&gt;と比較すると、この関数は、 &lt;code&gt;target[i,...]&lt;/code&gt; が &lt;code&gt;j != i&lt;/code&gt; の &lt;code&gt;source[j,...]&lt;/code&gt; から独立している場合に役立ちます。この仮定により、&lt;a href=&quot;gradienttape#jacobian&quot;&gt; &lt;code&gt;GradientTape.jacobian&lt;/code&gt; &lt;/a&gt;と比較してより効率的な計算が可能になります。中間活性化と同様に、出力は低次元であり、独立性の仮定が与えられた場合、ヤコビアン計算をもたらす冗長なゼロの束を避けます。</target>
        </trans-unit>
        <trans-unit id="4b852e27625d73d3d93735f5029a52efe498d4dc" translate="yes" xml:space="preserve">
          <source>Note that contrary to &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;feeds&lt;/code&gt; only specifies the graph elements. The tensors will be supplied by the subsequent &lt;code&gt;partial_run&lt;/code&gt; calls.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; とは逆に、 &lt;code&gt;feeds&lt;/code&gt; はグラフ要素のみを指定することに注意してください。テンソルは、後続の &lt;code&gt;partial_run&lt;/code&gt; 呼び出しによって提供されます。</target>
        </trans-unit>
        <trans-unit id="46a36ec8db81e609e755404715f4c85858c0cb57" translate="yes" xml:space="preserve">
          <source>Note that converting from floating point inputs to integer types may lead to over/underflow problems. Set saturate to &lt;code&gt;True&lt;/code&gt; to avoid such problem in problematic conversions. If enabled, saturation will clip the output into the allowed range before performing a potentially dangerous cast (and only before performing such a cast, i.e., when casting from a floating point to an integer type, and when casting from a signed to an unsigned type; &lt;code&gt;saturate&lt;/code&gt; has no effect on casts between floats, or on casts that increase the type's range).</source>
          <target state="translated">浮動小数点入力から整数型に変換すると、オーバー/アンダーフローの問題が発生する可能性があることに注意してください。問題のある変換でこのような問題を回避するには、saturateを &lt;code&gt;True&lt;/code&gt; に設定します。飽和を有効にすると、潜在的に危険なキャストを実行する前に（つまり、浮動小数点から整数型にキャストするとき、および符号付きから符号なしの型にキャストするときにのみ）、出力が許容範囲にクリップされます。 ; &lt;code&gt;saturate&lt;/code&gt; は、float間のキ​​ャスト、または型の範囲を増やすキャストには影響しません）。</target>
        </trans-unit>
        <trans-unit id="43089211f7d966bba1084d9b1cb2d624e46d32d4" translate="yes" xml:space="preserve">
          <source>Note that decimal places (from zero) are usually not the same as significant digits (measured from the most significant digit).</source>
          <target state="translated">小数点以下の桁数(ゼロからの桁数)は、通常、有効数字(最上位の桁数から測定される)とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="025c1c19d885a0b6ebb4cbc90bf2628ba9802113" translate="yes" xml:space="preserve">
          <source>Note that even if eager execution is enabled, &lt;code&gt;Input&lt;/code&gt; produces a symbolic tensor (i.e. a placeholder). This symbolic tensor can be used with other TensorFlow ops, as such:</source>
          <target state="translated">積極的な実行が有効な場合でも、 &lt;code&gt;Input&lt;/code&gt; はシンボリックテンソル（つまり、プレースホルダー）を生成することに注意してください。このシンボリックテンソルは、他のTensorFlow演算と一緒に使用できます。</target>
        </trans-unit>
        <trans-unit id="1cb5eb3fbbdba794d252abb70bc5cc13d38eb40b" translate="yes" xml:space="preserve">
          <source>Note that even if the compute dtype is float16 or bfloat16, hardware devices may not do individual adds, multiplies, and other fundamental operations in [b]float16, but instead may do some of them in float32 for numeric stability. The compute dtype is the dtype of the inputs and outputs of the TensorFlow ops that the layer executes. Internally, many TensorFlow ops will do certain internal calculations in float32, or some other device-internal intermediate format with higher precision than [b]float16, to increase numeric stability.</source>
          <target state="translated">compute dtype が float16 または bfloat16 であっても、ハードウェアデバイスは個々の加算、乗算、その他の基本的な演算を [b]float16 で行わず、数値的安定性のために float32 で行うことがあることに注意してください。compute dtype は、 レイヤーが実行する TensorFlow ops の入出力の dtype です。内部的には、多くの TensorFlow ops は、数値的安定性を高めるために、ある種の内部計算を float32、または [b]float16 よりも高精度な他のデバイス内部の中間フォーマットで行います。</target>
        </trans-unit>
        <trans-unit id="70e19c346145c0fb6ad3ab3ebca758a0424b77a5" translate="yes" xml:space="preserve">
          <source>Note that execution:</source>
          <target state="translated">実行することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b84e02044a808bbb932bde57bef7368168b23370" translate="yes" xml:space="preserve">
          <source>Note that for UTF-8, passing a replacement character expressible in 1 byte, such as ' ', will preserve string alignment to the source since invalid bytes will be replaced with a 1-byte replacement. For UTF-16-BE and UTF-16-LE, any 1 or 2 byte replacement character will preserve byte alignment to the source.</source>
          <target state="translated">UTF-8 の場合、 ' ' の よ う に 1 バ イ ト で表現可能な置換キ ャ ラ ク タ を渡 す と 、 無効なバ イ ト は 1 バ イ ト の置換キ ャ ラ ク タ に置き換え ら れますので、 ソースへの文字列ア ラ イ メ ン ト が保持 さ れますので注意 し て く だ さ い。UTF-16-BE ・ UTF-16-LE では、1 バ イ ト ま たは 2 バ イ ト の置換キ ャ ラ ク タ を渡 し て も 、 ソ ー ス ト へのバ イ ト ア ラ イ メ ン ト は保持 さ れます。</target>
        </trans-unit>
        <trans-unit id="158d7059f4ad1c1072885a9be9b7372ddbfa2d14" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;at_end&lt;/code&gt; is True, &lt;code&gt;tensors&lt;/code&gt; should not include any tensor whose evaluation produces a side effect such as consuming additional inputs.</source>
          <target state="translated">&lt;code&gt;at_end&lt;/code&gt; がTrueの場合、 &lt;code&gt;tensors&lt;/code&gt; は、追加の入力を消費するなどの副作用が生じる評価を持つテンソルを含めないでください。</target>
        </trans-unit>
        <trans-unit id="adf6de6b692d567d6bb0e8d441b44e6a714fe300" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;distance_metric=KMeansClustering.SQUARED_EUCLIDEAN_DISTANCE&lt;/code&gt;, this function returns the squared Euclidean distance while the corresponding sklearn function returns the Euclidean distance.</source>
          <target state="translated">&lt;code&gt;distance_metric=KMeansClustering.SQUARED_EUCLIDEAN_DISTANCE&lt;/code&gt; の場合、この関数は2乗ユークリッド距離を返し、対応するsklearn関数はユークリッド距離を返します。</target>
        </trans-unit>
        <trans-unit id="0ae5427b502a43a2066640827fb2560fd6c5ea15" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;tensors&lt;/code&gt; contains a NumPy array, and eager execution is not enabled, the values will be embedded in the graph as one or more &lt;a href=&quot;../../../../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; operations. For large datasets (&amp;gt; 1 GB), this can waste memory and run into byte limits of graph serialization. If &lt;code&gt;tensors&lt;/code&gt; contains one or more large NumPy arrays, consider the alternative described in &lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">場合、その音符 &lt;code&gt;tensors&lt;/code&gt; numpyの配列を含み、熱心な実行が有効になっていない、値が1つ以上のようなグラフに埋め込まれる&lt;a href=&quot;../../../../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt;操作。大きなデータセット（&amp;gt; 1 GB）の場合、これはメモリを浪費し、グラフのシリアル化のバイト制限に達する可能性があります。 &lt;code&gt;tensors&lt;/code&gt; に1つ以上の大きなNumPy配列が含まれている場合は、&lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;このガイドで&lt;/a&gt;説明されている代替方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="0a60ee121bf53c2c9d25970a777d3c84e6e10575" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;tensors&lt;/code&gt; contains a NumPy array, and eager execution is not enabled, the values will be embedded in the graph as one or more &lt;a href=&quot;../../../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; operations. For large datasets (&amp;gt; 1 GB), this can waste memory and run into byte limits of graph serialization. If &lt;code&gt;tensors&lt;/code&gt; contains one or more large NumPy arrays, consider the alternative described in &lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">場合、その音符 &lt;code&gt;tensors&lt;/code&gt; numpyの配列を含み、熱心な実行が有効になっていない、値が1つ以上のようなグラフに埋め込まれる&lt;a href=&quot;../../../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt;操作。大きなデータセット（&amp;gt; 1 GB）の場合、これはメモリを浪費し、グラフのシリアル化のバイト制限に達する可能性があります。 &lt;code&gt;tensors&lt;/code&gt; に1つ以上の大きなNumPy配列が含まれている場合は、&lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;このガイドで&lt;/a&gt;説明されている代替方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="6149cccad273c165e08d7e6144dee086ed6d8789" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;tensors&lt;/code&gt; contains a NumPy array, and eager execution is not enabled, the values will be embedded in the graph as one or more &lt;a href=&quot;../../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; operations. For large datasets (&amp;gt; 1 GB), this can waste memory and run into byte limits of graph serialization. If &lt;code&gt;tensors&lt;/code&gt; contains one or more large NumPy arrays, consider the alternative described in &lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">場合、その音符 &lt;code&gt;tensors&lt;/code&gt; numpyの配列を含み、熱心な実行が有効になっていない、値が1つ以上のようなグラフに埋め込まれる&lt;a href=&quot;../../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt;操作。大きなデータセット（&amp;gt; 1 GB）の場合、これはメモリを浪費し、グラフのシリアル化のバイト制限に達する可能性があります。 &lt;code&gt;tensors&lt;/code&gt; に1つ以上の大きなNumPy配列が含まれている場合は、&lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;このガイドで&lt;/a&gt;説明されている代替方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="b140bc33ea5918eda9257d6a5eb4297dfff01508" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;tensors&lt;/code&gt; contains a NumPy array, and eager execution is not enabled, the values will be embedded in the graph as one or more &lt;a href=&quot;../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; operations. For large datasets (&amp;gt; 1 GB), this can waste memory and run into byte limits of graph serialization. If &lt;code&gt;tensors&lt;/code&gt; contains one or more large NumPy arrays, consider the alternative described in &lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">場合、その音符 &lt;code&gt;tensors&lt;/code&gt; numpyの配列を含み、熱心な実行が有効になっていない、値が1つ以上のようなグラフに埋め込まれる&lt;a href=&quot;../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt;操作。大きなデータセット（&amp;gt; 1 GB）の場合、これはメモリを浪費し、グラフのシリアル化のバイト制限に達する可能性があります。 &lt;code&gt;tensors&lt;/code&gt; に1つ以上の大きなNumPy配列が含まれている場合は、&lt;a href=&quot;https://tensorflow.org/guide/data#consuming_numpy_arrays&quot;&gt;このガイドで&lt;/a&gt;説明されている代替方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="00bb33e7f2f86bdf06a1e536c75f45eb309c3131" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;z = [u, v]&lt;/code&gt;, then \(Beta(z) = int_0^1 t^{u-1} (1 - t)^{v-1} dt\), which defines the traditional bivariate beta function.</source>
          <target state="translated">&lt;code&gt;z = [u, v]&lt;/code&gt; 場合、従来の2変量ベータを定義する\（Beta（z）= int_0 ^ 1 t ^ {u-1}（1-t）^ {v-1} dt \）であることに注意してください関数。</target>
        </trans-unit>
        <trans-unit id="7519284befce3224d8263f11a5b37ae2ea167867" translate="yes" xml:space="preserve">
          <source>Note that if no bounding box information is available, setting &lt;code&gt;use_image_if_no_bounding_boxes = True&lt;/code&gt; will assume there is a single implicit bounding box covering the whole image. If &lt;code&gt;use_image_if_no_bounding_boxes&lt;/code&gt; is false and no bounding boxes are supplied, an error is raised.</source>
          <target state="translated">バウンディングボックス情報が利用できない場合、 &lt;code&gt;use_image_if_no_bounding_boxes = True&lt;/code&gt; を設定すると、画像全体をカバーする1つの暗黙的なバウンディングボックスがあると想定されます。 &lt;code&gt;use_image_if_no_bounding_boxes&lt;/code&gt; がfalseで、境界ボックスが指定されていない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f74e716187681901232ad385acb6272f138a2835" translate="yes" xml:space="preserve">
          <source>Note that if no bounding box information is available, setting &lt;code&gt;use_image_if_no_bounding_boxes = true&lt;/code&gt; will assume there is a single implicit bounding box covering the whole image. If &lt;code&gt;use_image_if_no_bounding_boxes&lt;/code&gt; is false and no bounding boxes are supplied, an error is raised.</source>
          <target state="translated">バウンディングボックス情報が利用できない場合、 &lt;code&gt;use_image_if_no_bounding_boxes = true&lt;/code&gt; を設定すると、画像全体をカバーする1つの暗黙的なバウンディングボックスがあると想定されます。 &lt;code&gt;use_image_if_no_bounding_boxes&lt;/code&gt; がfalseで、境界ボックスが指定されていない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f2a58af8e763b1a3ca51fe9d410888f1b8bdb075" translate="yes" xml:space="preserve">
          <source>Note that if the decorated function uses &lt;code&gt;Variable&lt;/code&gt;s, the enclosing variable scope must be using &lt;code&gt;ResourceVariable&lt;/code&gt;s.</source>
          <target state="translated">装飾された関数が &lt;code&gt;Variable&lt;/code&gt; を使用する場合、囲んでいる変数スコープは &lt;code&gt;ResourceVariable&lt;/code&gt; を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="574f3094ad03b3573fefc33c555f5a8b34f72df2" translate="yes" xml:space="preserve">
          <source>Note that if the spectrum is not Hermitian, then this operator corresponds to a complex matrix with non-zero imaginary part. In this case, setting &lt;code&gt;input_output_dtype&lt;/code&gt; to a real type will forcibly cast the output to be real, resulting in incorrect results!</source>
          <target state="translated">スペクトルがエルミートでない場合、この演算子はゼロ以外の虚数部をもつ複素行列に対応することに注意してください。この場合、 &lt;code&gt;input_output_dtype&lt;/code&gt; を実数型に設定すると、出力が強制的に実数にキャストされ、結果が不正確になります。</target>
        </trans-unit>
        <trans-unit id="802c1e3c748f52b2e8502b92a2842c236d074065" translate="yes" xml:space="preserve">
          <source>Note that if you use the defun decorator, any non-TensorFlow Python code that you may have written in your function won't get executed. See &lt;code&gt;tf.contrib.eager.defun&lt;/code&gt; for more details. The recommendation would be to debug without defun but switch to defun to get performance benefits of running map_fn in parallel.</source>
          <target state="translated">defunデコレーターを使用する場合、関数に記述した非TensorFlow Pythonコードは実行されないことに注意してください。詳細については、 &lt;code&gt;tf.contrib.eager.defun&lt;/code&gt; を参照してください。defunを使用せずにデバッグすることをお勧めしますが、defunに切り替えて、map_fnを並行して実行することでパフォーマンスを向上させます。</target>
        </trans-unit>
        <trans-unit id="1d045237fce6313ee64e728627f02291e9b72a30" translate="yes" xml:space="preserve">
          <source>Note that in V2, is_dynamic_op=False is not supported, meaning TRT engines will be built only when the corresponding TRTEngineOp is executed. But we still provide a way to avoid the cost of building TRT engines during inference (see more below).</source>
          <target state="translated">V2では、is_dynamic_op=Falseがサポートされていないことに注意してください、つまり、対応するTRTEngineOpが実行されたときにのみ、TRTエンジンが構築されることを意味します。しかし、推論中にTRTエンジンを構築するコストを回避する方法を提供しています(後述)。</target>
        </trans-unit>
        <trans-unit id="7aef98ded340bdef8c93dca85b3052da7ad45324" translate="yes" xml:space="preserve">
          <source>Note that in case of ties the identity of the return value is not guaranteed.</source>
          <target state="translated">タイの場合、戻り値の同一性は保証されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="cb8d4e9baf7359bda9fbe89f7ba6b1626ffaa22e" translate="yes" xml:space="preserve">
          <source>Note that in current implementation &lt;code&gt;estimator.evaluate&lt;/code&gt; will be called multiple times. This means that evaluation graph (including eval_input_fn) will be re-created for each &lt;code&gt;evaluate&lt;/code&gt; call. &lt;code&gt;estimator.train&lt;/code&gt; will be called only once.</source>
          <target state="translated">現在の実装では &lt;code&gt;estimator.evaluate&lt;/code&gt; が複数回呼び出されることに注意してください。つまり、評価呼び出し（eval_input_fnを含む）は、 &lt;code&gt;evaluate&lt;/code&gt; 呼び出しごとに再作成されます。 &lt;code&gt;estimator.train&lt;/code&gt; は一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2c874f4cdb32e3408a903d8be798db049f586c58" translate="yes" xml:space="preserve">
          <source>Note that in the dense implementation of this algorithm, variables and their corresponding accumulators (momentum, gradient moving average, square gradient moving average) will be updated even if the gradient is zero (i.e. accumulators will decay, momentum will be applied). The sparse implementation (used when the gradient is an &lt;code&gt;IndexedSlices&lt;/code&gt; object, typically because of &lt;a href=&quot;../../../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; or an embedding lookup in the forward pass) will not update variable slices or their accumulators unless those slices were used in the forward pass (nor is there an &quot;eventual&quot; correction to account for these omitted updates). This leads to more efficient updates for large embedding lookup tables (where most of the slices are not accessed in a particular graph execution), but differs from the published algorithm.</source>
          <target state="translated">このアルゴリズムの高密度実装では、勾配がゼロの場合でも変数とそれに対応するアキュムレーター（運動量、勾配移動平均、二乗勾配移動平均）が更新されます（つまり、アキュムレーターが減衰し、運動量が適用されます）。スパース実装（グラデーションが &lt;code&gt;IndexedSlices&lt;/code&gt; オブジェクトである場合に使用されます。通常は&lt;a href=&quot;../../../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; が&lt;/a&gt;原因です）またはフォワードパスでの埋め込みルックアップ）は、それらのスライスがフォワードパスで使用されていない限り、変数スライスまたはそれらのアキュムレータを更新しません（これらの省略された更新を説明する「最終的な」修正もありません）。これにより、大規模な埋め込みルックアップテーブル（ほとんどのスライスが特定のグラフ実行でアクセスされない）の更新がより効率的になりますが、公開されているアルゴリズムとは異なります。</target>
        </trans-unit>
        <trans-unit id="5addfb077cb90b2905455a6f6c3ac84c7a531720" translate="yes" xml:space="preserve">
          <source>Note that in the dense implementation of this algorithm, variables and their corresponding accumulators (momentum, gradient moving average, square gradient moving average) will be updated even if the gradient is zero (i.e. accumulators will decay, momentum will be applied). The sparse implementation (used when the gradient is an &lt;code&gt;IndexedSlices&lt;/code&gt; object, typically because of &lt;a href=&quot;../../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; or an embedding lookup in the forward pass) will not update variable slices or their accumulators unless those slices were used in the forward pass (nor is there an &quot;eventual&quot; correction to account for these omitted updates). This leads to more efficient updates for large embedding lookup tables (where most of the slices are not accessed in a particular graph execution), but differs from the published algorithm.</source>
          <target state="translated">このアルゴリズムの高密度実装では、勾配がゼロの場合でも変数とそれに対応するアキュムレーター（運動量、勾配移動平均、二乗勾配移動平均）が更新されます（つまり、アキュムレーターが減衰し、運動量が適用されます）。スパース実装（グラデーションが &lt;code&gt;IndexedSlices&lt;/code&gt; オブジェクトである場合に使用されます。通常は&lt;a href=&quot;../../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; が&lt;/a&gt;原因です）またはフォワードパスでの埋め込みルックアップ）は、それらのスライスがフォワードパスで使用されていない限り、変数スライスまたはそれらのアキュムレータを更新しません（これらの省略された更新を説明する「最終的な」修正もありません）。これにより、大規模な埋め込みルックアップテーブル（ほとんどのスライスが特定のグラフ実行でアクセスされない）の更新がより効率的になりますが、公開されているアルゴリズムとは異なります。</target>
        </trans-unit>
        <trans-unit id="401f6f824f04da5bfe9a2a4ccf6ab0af933625b7" translate="yes" xml:space="preserve">
          <source>Note that in the dense version of this algorithm, &lt;code&gt;accumulation&lt;/code&gt; is updated and applied regardless of a gradient's value, whereas the sparse version (when the gradient is an &lt;code&gt;IndexedSlices&lt;/code&gt;, typically because of &lt;a href=&quot;../../../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; or an embedding) only updates variable slices and corresponding &lt;code&gt;accumulation&lt;/code&gt; terms when that part of the variable was used in the forward pass.</source>
          <target state="translated">このアルゴリズムの密バージョンでは、 &lt;code&gt;accumulation&lt;/code&gt; は勾配の値に関係なく更新および適用されますが、疎バージョン（勾配が &lt;code&gt;IndexedSlices&lt;/code&gt; の場合、通常は&lt;a href=&quot;../../../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt;または埋め込みのため）は、変数スライスと対応する &lt;code&gt;accumulation&lt;/code&gt; のみを更新します。変数のその部分がフォワードパスで使用されたときの条件。</target>
        </trans-unit>
        <trans-unit id="39c3d030be7ba2922cf8bbf68f2329852ffcf52e" translate="yes" xml:space="preserve">
          <source>Note that irrespective of the context in which &lt;code&gt;map_func&lt;/code&gt; is defined (eager vs. graph), tf.data traces the function and executes it as a graph. To use Python code inside of the function you have two options:</source>
          <target state="translated">&lt;code&gt;map_func&lt;/code&gt; が定義されているコンテキスト（eager対graph）に関係なく、tf.dataは関数をトレースし、それをグラフとして実行することに注意してください。関数内でPythonコードを使用するには、2つのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="81e2886f72c4b06507aed5644584dc1de37f32c4" translate="yes" xml:space="preserve">
          <source>Note that it is a negative quantity between -1 and 0, where 0 indicates orthogonality and values closer to -1 indicate greater similarity. This makes it usable as a loss function in a setting where you try to maximize the proximity between predictions and targets.</source>
          <target state="translated">0 は直交性を示し、-1 に近い値は類似性が高いことを示します。これにより、予測値とターゲット間の近接性を最大化しようとする設定では、損失関数として使用できます。</target>
        </trans-unit>
        <trans-unit id="c28e62cca57c3d102d22c561e1a4b87e1b5c1a28" translate="yes" xml:space="preserve">
          <source>Note that linear cosine decay is more aggressive than cosine decay and larger initial learning rates can typically be used.</source>
          <target state="translated">線形余弦減衰は余弦減衰よりも攻撃的であり、より大きな初期学習率が一般的に使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="960ca71d30cfa024c4186818fe683f8901541ddd" translate="yes" xml:space="preserve">
          <source>Note that namedtuples with identical name and fields are always considered to have the same shallow structure (even with &lt;code&gt;check_types=True&lt;/code&gt;). For instance, this code will print &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">同じ名前とフィールドを持つ名前付きタプルは、常に同じ浅い構造を持つと見なされることに注意してください（ &lt;code&gt;check_types=True&lt;/code&gt; を使用した場合でも）。たとえば、次のコードは &lt;code&gt;True&lt;/code&gt; を出力します。</target>
        </trans-unit>
        <trans-unit id="b6a77bc75104df995d6f88f50b9882464033d84e" translate="yes" xml:space="preserve">
          <source>Note that near image edges the filtering kernel may be partially outside the image boundaries. For these pixels, only input pixels inside the image will be included in the filter sum, and the output value will be appropriately normalized.</source>
          <target state="translated">画像のエッジ付近では,フィルタリングカーネルが部分的に画像の境界から外れることがあることに注意してください。これらの画素については,画像内の入力画素のみがフィルタ和に含まれ,出力値は適切に正規化されます.</target>
        </trans-unit>
        <trans-unit id="f681d0bb5b7658560521a3cd86f2ed01b6b2cf79" translate="yes" xml:space="preserve">
          <source>Note that on CPU, if an out of bound index is found, an error is returned. On GPU, if an out of bound index is found, a 0 is stored in the corresponding output value.</source>
          <target state="translated">CPU では、アウトオブバウンドインデックスが見つかるとエラーが返されることに注意してください。GPUでは、アウトオブバウンドインデックスが見つかった場合、対応する出力値に0が格納されます。</target>
        </trans-unit>
        <trans-unit id="e924de5440ed92a5d655bd9edc466f27be84b709" translate="yes" xml:space="preserve">
          <source>Note that on CPU, if an out of bound index is found, an error is returned. On GPU, if an out of bound index is found, the index is ignored.</source>
          <target state="translated">CPUでは、アウトオブバウンドインデックスが見つかるとエラーが返されることに注意してください。GPUでは、アウトオブバウンドインデックスが見つかった場合、そのインデックスは無視されます。</target>
        </trans-unit>
        <trans-unit id="7bf2ca8e05c2d036783ef692d352b86293224b53" translate="yes" xml:space="preserve">
          <source>Note that only tensors with real or complex dtypes are differentiable.</source>
          <target state="translated">実数または複素数のd型を持つテンソルだけが微分可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6dd4d12e28c131a4ef36edec1e2547ad8eef803c" translate="yes" xml:space="preserve">
          <source>Note that optimizations are only applied in graph mode, (within tf.function).</source>
          <target state="translated">最適化はグラフモード(tf.function内)でのみ適用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="adaa530ba8bea623bb180c32cb91cb7914b931fc" translate="yes" xml:space="preserve">
          <source>Note that optimizations are only applied in graph mode, (within tf.function). In addition, as these are experimental options, the list is subject to change.</source>
          <target state="translated">最適化はグラフモード(tf.function内)でのみ適用されることに注意してください。さらに、これらは実験的なオプションなので、リストは変更されることがあります。</target>
        </trans-unit>
        <trans-unit id="abd13efb9bf7159213cd4e7443c620dd130c44f3" translate="yes" xml:space="preserve">
          <source>Note that repeats are allowed in the input SparseTensor. This op is useful for converting &lt;code&gt;SparseTensor&lt;/code&gt;s into dense formats for compatibility with ops that expect dense tensors.</source>
          <target state="translated">入力SparseTensorでは繰り返しが許可されていることに注意してください。この &lt;code&gt;SparseTensor&lt;/code&gt; は、密なテンソルを期待する演算との互換性のためにSparseTensorを密な形式に変換するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ecc42f0caf8eca72001bc334e02efac9851163e1" translate="yes" xml:space="preserve">
          <source>Note that since the inputs are of shape &lt;code&gt;[batch_size, d0, ... dN]&lt;/code&gt;, the corresponding pairs are computed within each batch sample but not across samples within a batch. For example, if &lt;code&gt;predictions&lt;/code&gt; represents a batch of 16 grayscale images of dimension [batch_size, 100, 200], then the set of pairs is drawn from each image, but not across images.</source>
          <target state="translated">入力は &lt;code&gt;[batch_size, d0, ... dN]&lt;/code&gt; の形状であるため、対応するペアは各バッチサンプル内で計算されますが、バッチ内のサンプル全体では計算されないことに注意してください。たとえば、 &lt;code&gt;predictions&lt;/code&gt; がディメンション[batch_size、100、200]の16のグレースケール画像のバッチを表す場合、ペアのセットは各画像から描画されますが、画像間では描画されません。</target>
        </trans-unit>
        <trans-unit id="5db26b033faf30cbafe9cfea9a99401b7c132601" translate="yes" xml:space="preserve">
          <source>Note that the 'out of vocabulary' character is only used for words that were present in the training set but are not included because they're not making the &lt;code&gt;num_words&lt;/code&gt; cut here. Words that were not seen in the training set but are in the test set have simply been skipped.</source>
          <target state="translated">「out of vocabulary」文字は、トレーニングセットに存在するが、ここでは &lt;code&gt;num_words&lt;/code&gt; を切り取っていないため含まれていない単語にのみ使用されることに注意してください。トレーニングセットにはないがテストセットにはある単語は、単にスキップされています。</target>
        </trans-unit>
        <trans-unit id="6113ba4d508f3e53788a1f5665cfc593eba750e1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;reuse&lt;/code&gt; flag is inherited: if we open a reusing scope, then all its sub-scopes become reusing as well.</source>
          <target state="translated">&lt;code&gt;reuse&lt;/code&gt; フラグが継承されることに注意してください。再利用スコープを開くと、そのすべてのサブスコープも再利用されます。</target>
        </trans-unit>
        <trans-unit id="8b3a746df435b568689ea2e75e40f139ff2e8b05" translate="yes" xml:space="preserve">
          <source>Note that the Laplace distribution can be thought of two exponential distributions spliced together &quot;back-to-back.&quot;</source>
          <target state="translated">ラプラス分布は2つの指数分布を &quot;背中合わせ &quot;で接続したと考えることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7a327f673b782b592aab19565e55d4f259175c75" translate="yes" xml:space="preserve">
          <source>Note that the above mentioned behavior matches python's str.split.</source>
          <target state="translated">上記の動作は python の str.split と一致していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7dbf7b0210d50e915dc0b161e9a8111daa542dd5" translate="yes" xml:space="preserve">
          <source>Note that the batch version of this function, &lt;code&gt;tf.parse_sequence_example&lt;/code&gt;, is written for better memory efficiency and will be faster on large &lt;code&gt;SequenceExample&lt;/code&gt;s.</source>
          <target state="translated">この関数のバッチバージョン &lt;code&gt;tf.parse_sequence_example&lt;/code&gt; は、メモリ効率を高めるために作成されており、大きな &lt;code&gt;SequenceExample&lt;/code&gt; で高速になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9e6d585d4dcdfce3574eb75d838a42e338b46f67" translate="yes" xml:space="preserve">
          <source>Note that the chief worker also does the model training job, similar to other non-chief training workers (see next paragraph). In addition to the model training, it manages some extra work, e.g., checkpoint saving and restoring, writing summaries, etc.</source>
          <target state="translated">主任作業員は、他の非主任作業員と同様に、モデルトレーニングの仕事も行うことに注意してください(次項参照)。模範訓練の他にも、チェックポイントの保存・復元、サマリーの作成などの余分な作業を管理します。</target>
        </trans-unit>
        <trans-unit id="815d2135340cb3441d170536899a25d3e970ac75" translate="yes" xml:space="preserve">
          <source>Note that the function assumes that &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; are already unit-normalized.</source>
          <target state="translated">この関数は、 &lt;code&gt;predictions&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; がすでにユニット正規化されていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="f8e0bd078f9684315af3bfa48a956847252b6cbf" translate="yes" xml:space="preserve">
          <source>Note that the hash function may change from time to time. This functionality will be deprecated and it's recommended to use &lt;a href=&quot;to_hash_bucket_fast&quot;&gt;&lt;code&gt;tf.strings.to_hash_bucket_fast()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;to_hash_bucket_strong&quot;&gt;&lt;code&gt;tf.strings.to_hash_bucket_strong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ハッシュ関数は随時変更される可能性があることに注意してください。この機能は非推奨となり、&lt;a href=&quot;to_hash_bucket_fast&quot;&gt; &lt;code&gt;tf.strings.to_hash_bucket_fast()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;to_hash_bucket_strong&quot;&gt; &lt;code&gt;tf.strings.to_hash_bucket_strong()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9ad485251b1b8a5eee42170ad14d607d7705dfc3" translate="yes" xml:space="preserve">
          <source>Note that the hash function may change from time to time. This functionality will be deprecated and it's recommended to use &lt;code&gt;tf.string_to_hash_bucket_fast()&lt;/code&gt; or &lt;code&gt;tf.string_to_hash_bucket_strong()&lt;/code&gt;.</source>
          <target state="translated">ハッシュ関数は随時変更される可能性があることに注意してください。この機能は非推奨となり、 &lt;code&gt;tf.string_to_hash_bucket_fast()&lt;/code&gt; または &lt;code&gt;tf.string_to_hash_bucket_strong()&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="129d1a89f45603733de5852bdc538919f04fd58f" translate="yes" xml:space="preserve">
          <source>Note that the input may have empty columns at the end, with no effect on this op.</source>
          <target state="translated">入力は最後に空の列を持つことがあり、このオペランドには何の影響もないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8abe593be83ba37c636e73a6158bffecf3631b83" translate="yes" xml:space="preserve">
          <source>Note that the interface for &lt;code&gt;tf.tpu.experimental.embedding_column&lt;/code&gt; is different from that of &lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt;&lt;code&gt;tf.compat.v1.feature_column.embedding_column&lt;/code&gt;&lt;/a&gt;: The following arguments are NOT supported: &lt;code&gt;ckpt_to_load_from&lt;/code&gt;, &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt;, &lt;code&gt;max_norm&lt;/code&gt; and &lt;code&gt;trainable&lt;/code&gt;.</source>
          <target state="translated">以下のためのインターフェースことを注意 &lt;code&gt;tf.tpu.experimental.embedding_column&lt;/code&gt; はとは異なっている&lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt; &lt;code&gt;tf.compat.v1.feature_column.embedding_column&lt;/code&gt; &lt;/a&gt;：次の引数がサポートされていません &lt;code&gt;ckpt_to_load_from&lt;/code&gt; 、 &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt; 、 &lt;code&gt;max_norm&lt;/code&gt; および &lt;code&gt;trainable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf780ffbcf5c45eca299de25e2e480df268ae01" translate="yes" xml:space="preserve">
          <source>Note that the interface for &lt;code&gt;tf.tpu.experimental.shared_embedding_columns&lt;/code&gt; is different from that of &lt;a href=&quot;../../feature_column/shared_embedding_columns&quot;&gt;&lt;code&gt;tf.compat.v1.feature_column.shared_embedding_columns&lt;/code&gt;&lt;/a&gt;: The following arguments are NOT supported: &lt;code&gt;ckpt_to_load_from&lt;/code&gt;, &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt;, &lt;code&gt;max_norm&lt;/code&gt; and &lt;code&gt;trainable&lt;/code&gt;.</source>
          <target state="translated">以下のためのインターフェースことを注意 &lt;code&gt;tf.tpu.experimental.shared_embedding_columns&lt;/code&gt; はとは異なっている&lt;a href=&quot;../../feature_column/shared_embedding_columns&quot;&gt; &lt;code&gt;tf.compat.v1.feature_column.shared_embedding_columns&lt;/code&gt; &lt;/a&gt;：次の引数がサポートされていません。 &lt;code&gt;ckpt_to_load_from&lt;/code&gt; 、 &lt;code&gt;tensor_name_in_ckpt&lt;/code&gt; 、 &lt;code&gt;max_norm&lt;/code&gt; および &lt;code&gt;trainable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32d78207ce6eaaece77df7019a2f96d27da9a9f2" translate="yes" xml:space="preserve">
          <source>Note that the keyword arg name &quot;cuda_only&quot; is misleading (since routine will return true when a GPU device is available irrespective of whether TF was built with CUDA support or ROCm support. However no changes here because</source>
          <target state="translated">キーワード名の &quot;cuda_only &quot;は誤解を招くことに注意してください(TFがCUDAサポートでビルドされたかROCmサポートでビルドされたかに関わらず、GPUデバイスが利用可能な場合はルーチンがtrueを返すからです)。しかし、ここでの変更はありません。</target>
        </trans-unit>
        <trans-unit id="c0270125bc4993a0541d9fa512f3fe8c1a196a78" translate="yes" xml:space="preserve">
          <source>Note that the method does not load any data by itself. If the method returns &lt;code&gt;false&lt;/code&gt;, the export directory definitely does not contain a SavedModel. If the method returns &lt;code&gt;true&lt;/code&gt;, the export directory may contain a SavedModel but provides no guarantee that it can be loaded.</source>
          <target state="translated">このメソッドはそれ自体ではデータをロードしないことに注意してください。メソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、エクスポートディレクトリにはSavedModelが含まれていません。メソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、エクスポートディレクトリにはSavedModelが含まれている可能性がありますが、ロードできるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="5f7264bc1d90f49c816d4917489736fdf408647f" translate="yes" xml:space="preserve">
          <source>Note that the possible labels are assumed to be &lt;code&gt;[0, 1, 2, 3, 4]&lt;/code&gt;, resulting in a 5x5 confusion matrix.</source>
          <target state="translated">可能なラベルは &lt;code&gt;[0, 1, 2, 3, 4]&lt;/code&gt; であると想定されているため、5x5の混同行列になります。</target>
        </trans-unit>
        <trans-unit id="40c79f656225cda5e6e51f6ea16d3455c49922f1" translate="yes" xml:space="preserve">
          <source>Note that the queue runners collected in the graph key &lt;code&gt;QUEUE_RUNNERS&lt;/code&gt; are already started automatically when you create a session with the supervisor, so unless you have non-collected queue runners to start you do not need to call this explicitly.</source>
          <target state="translated">グラフキー &lt;code&gt;QUEUE_RUNNERS&lt;/code&gt; で収集されたキューランナーは、スーパーバイザーとのセッションを作成するときに既に自動的に開始されているため、収集されていないキューランナーを開始する必要がない限り、明示的に呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="9e317428edda1b83776dc82560d20fc661ed1b6c" translate="yes" xml:space="preserve">
          <source>Note that the receiver_tensors and receiver_tensor_alternatives arguments will be automatically converted to the dict representation in either case, because the SavedModel format requires each input &lt;code&gt;Tensor&lt;/code&gt; to have a name (provided by the dict key).</source>
          <target state="translated">SavedModel形式では、各入力 &lt;code&gt;Tensor&lt;/code&gt; に名前（dictキーによって提供される）が必要であるため、receiver_tensorsおよびreceiver_tensor_alternatives引数はどちらの場合も自動的にdict表現に変換されます。</target>
        </trans-unit>
        <trans-unit id="3fe6d1eafeae4c39f85dd9382c952d6ce0c0d5cf" translate="yes" xml:space="preserve">
          <source>Note that this can only be called after calling apply_gradients() which actually generates this queuerunner.</source>
          <target state="translated">これは、実際にこのキューランナーを生成する apply_gradients()を呼び出した後にのみ呼ばれることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d5094d67f3d8892e018bb62aab3647e7a6f48b27" translate="yes" xml:space="preserve">
          <source>Note that this cell is not optimized for performance on GPU. Please use &lt;a href=&quot;cudnnlstm&quot;&gt;&lt;code&gt;tf.compat.v1.keras.layers.CuDNNLSTM&lt;/code&gt;&lt;/a&gt; for better performance on GPU.</source>
          <target state="translated">このセルはGPUでのパフォーマンスに最適化されていないことに注意してください。GPUのパフォーマンスを向上さ&lt;a href=&quot;cudnnlstm&quot;&gt; &lt;code&gt;tf.compat.v1.keras.layers.CuDNNLSTM&lt;/code&gt; &lt;/a&gt;、tf.compat.v1.keras.layers.CuDNNLSTMを使用してください。</target>
        </trans-unit>
        <trans-unit id="676d50925133445521758d01e690fca8975be084" translate="yes" xml:space="preserve">
          <source>Note that this cell is not optimized for performance. Please use &lt;code&gt;tf.contrib.cudnn_rnn.CudnnGRU&lt;/code&gt; for better performance on GPU, or &lt;code&gt;tf.contrib.rnn.GRUBlockCellV2&lt;/code&gt; for better performance on CPU.</source>
          <target state="translated">このセルはパフォーマンスが最適化されていないことに注意してください。使用してください &lt;code&gt;tf.contrib.cudnn_rnn.CudnnGRU&lt;/code&gt; を GPU、または上のパフォーマンスを向上させるため &lt;code&gt;tf.contrib.rnn.GRUBlockCellV2&lt;/code&gt; CPUのパフォーマンスを向上させるため。</target>
        </trans-unit>
        <trans-unit id="eb201df3d2b5bfd572776e39fa9037413277cb8c" translate="yes" xml:space="preserve">
          <source>Note that this cell is not optimized for performance. Please use &lt;code&gt;tf.contrib.cudnn_rnn.CudnnLSTM&lt;/code&gt; for better performance on GPU, or &lt;code&gt;tf.contrib.rnn.LSTMBlockCell&lt;/code&gt; and &lt;code&gt;tf.contrib.rnn.LSTMBlockFusedCell&lt;/code&gt; for better performance on CPU.</source>
          <target state="translated">このセルはパフォーマンスが最適化されていないことに注意してください。GPUのパフォーマンスを向上させるには &lt;code&gt;tf.contrib.cudnn_rnn.CudnnLSTM&lt;/code&gt; を使用するか、CPUのパフォーマンスを向上さ &lt;code&gt;tf.contrib.rnn.LSTMBlockFusedCell&lt;/code&gt; は &lt;code&gt;tf.contrib.rnn.LSTMBlockCell&lt;/code&gt; およびtf.contrib.rnn.LSTMBlockFusedCellを使用してください。</target>
        </trans-unit>
        <trans-unit id="83f3a3a4f4f4189819189a9354e97a10007b9dbd" translate="yes" xml:space="preserve">
          <source>Note that this cell is not optimized for performance. Please use &lt;code&gt;tf.contrib.cudnn_rnn.CudnnRNNTanh&lt;/code&gt; for better performance on GPU.</source>
          <target state="translated">このセルはパフォーマンスが最適化されていないことに注意してください。GPUのパフォーマンスを向上さ &lt;code&gt;tf.contrib.cudnn_rnn.CudnnRNNTanh&lt;/code&gt; 、tf.contrib.cudnn_rnn.CudnnRNNTanhを使用してください。</target>
        </trans-unit>
        <trans-unit id="27964ccc16ae82fcd7d78d2911af33e20462ca9a" translate="yes" xml:space="preserve">
          <source>Note that this function is different from the corresponding one in sklearn which returns the negative sum.</source>
          <target state="translated">この関数は負の和を返すsklearnの対応する関数とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ec2b844ffc0cde99c0b5406566187f053bcc143c" translate="yes" xml:space="preserve">
          <source>Note that this is different from &lt;code&gt;initialized_value()&lt;/code&gt; which runs the op that initializes the variable before returning its value. This method returns the tensor that is used by the op that initializes the variable.</source>
          <target state="translated">これは、値を返す前に変数を初期化する操作を実行する &lt;code&gt;initialized_value()&lt;/code&gt; とは異なることに注意してください。このメソッドは、変数を初期化するopによって使用されるテンソルを返します。</target>
        </trans-unit>
        <trans-unit id="4269a0cb623feb3d775921dbf7f25dbea72e2e6a" translate="yes" xml:space="preserve">
          <source>Note that this is unrelated to the &lt;a href=&quot;graph#graph_def_versions&quot;&gt;&lt;code&gt;tf.Graph.graph_def_versions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;graph#graph_def_versions&quot;&gt; &lt;code&gt;tf.Graph.graph_def_versions&lt;/code&gt; &lt;/a&gt;とは関係がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e4641dbf377897d7cafbc94dd8e7458b0ed9ea46" translate="yes" xml:space="preserve">
          <source>Note that this method performs no computation, and simply looks up a JVP that was already computed (unlike backprop using a &lt;a href=&quot;../gradienttape&quot;&gt;&lt;code&gt;tf.GradientTape&lt;/code&gt;&lt;/a&gt;, where the computation happens on the call to &lt;code&gt;tape.gradient&lt;/code&gt;).</source>
          <target state="translated">このメソッドは計算を実行せず、すでに計算されたJVPを単にルックアップすることに注意してください（&lt;a href=&quot;../gradienttape&quot;&gt; &lt;code&gt;tf.GradientTape&lt;/code&gt; &lt;/a&gt;を使用するbackpropとは異なり、計算は &lt;code&gt;tape.gradient&lt;/code&gt; の呼び出しで発生します）。</target>
        </trans-unit>
        <trans-unit id="0a411633494993285b2ca66ea033f5305ceb9ccd" translate="yes" xml:space="preserve">
          <source>Note that this op fingerprints the raw underlying buffer, and it does not fingerprint Tensor's metadata such as data type and/or shape. For example, the fingerprint values are invariant under reshapes and bitcasts as long as the batch dimension remain the same:</source>
          <target state="translated">この演算子は生の基礎となるバッファをフィンガープリントし、データタイプや形状などのTensorのメタデータをフィンガープリントしないことに注意してください。例えば、フィンガープリント値は、バッチ次元が同じである限り、リシェイプやビットキャストの下では不変です。</target>
        </trans-unit>
        <trans-unit id="b9dba7b57bd500edaeb9bc0b8ab7f9a2c33f1255" translate="yes" xml:space="preserve">
          <source>Note that this op only supports floating point and complex dtypes, due to tf.sqrt only supporting these types.</source>
          <target state="translated">tf.sqrtはこれらの型しかサポートしていないため、この演算子は浮動小数点型と複素数型しかサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c0799a68acd5cc28b1a646b6509f272d67280d7d" translate="yes" xml:space="preserve">
          <source>Note that this op splits strings into bytes, not unicode characters. To split strings into unicode characters, use &lt;a href=&quot;unicode_split&quot;&gt;&lt;code&gt;tf.strings.unicode_split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このopは、文字列をUnicode文字ではなくバイトに分割することに注意してください。文字列をユニコード文字に分割するには、&lt;a href=&quot;unicode_split&quot;&gt; &lt;code&gt;tf.strings.unicode_split&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="e12d122ac6753337440a18a6a1d0aa802f8b84be" translate="yes" xml:space="preserve">
          <source>Note that this process modifies decorator_func.</source>
          <target state="translated">この処理は decorator_func を変更することに注意してください。</target>
        </trans-unit>
        <trans-unit id="876236a77b480dcabe6632d74a00e2db650c95d7" translate="yes" xml:space="preserve">
          <source>Note that this routine only supports wildcard characters in the basename portion of the pattern, not in the directory portion. Note also that the order of filenames returned is deterministic.</source>
          <target state="translated">このルーチンは、パターンのベースネーム部分のワイルドカード文字のみをサポートし、ディレクトリ部分のワイルドカード文字はサポートしないことに注意してください。返されるファイル名の順序は決定論的であることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="f0d1946702052ea01b4b396d107d11992b78bac4" translate="yes" xml:space="preserve">
          <source>Note that this will set this session and the graph as global defaults.</source>
          <target state="translated">これにより、このセッションとグラフがグローバルデフォルトに設定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3be9b356e9054ff0eaea728af20417c9c659c12b" translate="yes" xml:space="preserve">
          <source>Note that to be serialized and deserialized, classes must implement the &lt;code&gt;get_config()&lt;/code&gt; method. Functions do not have this requirement.</source>
          <target state="translated">直列化および直列化 &lt;code&gt;get_config()&lt;/code&gt; するには、クラスがget_config（）メソッドを実装する必要があることに注意してください。関数にはこの要件はありません。</target>
        </trans-unit>
        <trans-unit id="4a91f1f0560a4b9ed496da98bbfb0a9885720ad4" translate="yes" xml:space="preserve">
          <source>Note that up to and including version 1.0, it was allowed (though explicitly discouraged) to pass False to the reuse argument, yielding undocumented behaviour slightly different from None. Starting at 1.1.0 passing None and False as reuse has exactly the same effect.</source>
          <target state="translated">バージョン1.0までは、再利用の引数にFalseを渡すことが許可されていましたが(明示的には推奨されていませんが)、ドキュメント化されていないため、Noneとは若干異なる挙動になっていたことに注意してください。1.1.0からは、NoneとFalseを再利用引数に渡しても全く同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="569aab2ab65e778fc24ba965c22ff099243998b7" translate="yes" xml:space="preserve">
          <source>Note that we provide a default version of &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; that is used when no other strategy is in scope, that provides the same API with reasonable default behavior.</source>
          <target state="translated">スコープ内に他の戦略がない場合に使用される&lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; の&lt;/a&gt;デフォルトバージョンを提供していることに注意してください。これは、同じAPIに適切なデフォルトの動作を提供します。</target>
        </trans-unit>
        <trans-unit id="c752a62b7496ca1c5e19ed8c92074d65d7e426d0" translate="yes" xml:space="preserve">
          <source>Note that we provide a default version of &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; that is used when no other strategy is in scope, that provides the same API with reasonable default behavior.</source>
          <target state="translated">スコープ内に他の戦略がない場合に使用される&lt;a href=&quot;distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; の&lt;/a&gt;デフォルトバージョンを提供していることに注意してください。これは、同じAPIに適切なデフォルトの動作を提供します。</target>
        </trans-unit>
        <trans-unit id="49df504efd1de90320b92bbd82907222413f3073" translate="yes" xml:space="preserve">
          <source>Note that when P_A == 0 the above calculation simplifies into</source>
          <target state="translated">P_A ==0 の場合、上記の計算は次のように単純化されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="13a872977c3f70438c317712189bdc6190cf3b3e" translate="yes" xml:space="preserve">
          <source>Note that when the &lt;code&gt;window&lt;/code&gt; transformation is applied to a dataset of nested elements, it produces a dataset of nested windows.</source>
          <target state="translated">ネストされた要素のデータセットに &lt;code&gt;window&lt;/code&gt; 変換が適用されると、ネストされたウィンドウのデータセットが生成されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1ed0aac11222ae873f11e5dc6c38c61ae3205a36" translate="yes" xml:space="preserve">
          <source>Note that when using models you should ensure that your variables exist when using &lt;code&gt;watch_accessed_variables=False&lt;/code&gt;. Otherwise it's quite easy to make your first iteration not have any gradients:</source>
          <target state="translated">モデルを使用するときは、 &lt;code&gt;watch_accessed_variables=False&lt;/code&gt; を使用するときに変数が存在することを確認する必要があることに注意してください。それ以外の場合、最初の反復に勾配がないようにするのは非常に簡単です。</target>
        </trans-unit>
        <trans-unit id="e220ac89835270e7612d3930a3852330a3191ee5" translate="yes" xml:space="preserve">
          <source>Note that you can manually set the global session via &lt;code&gt;K.set_session(sess)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;K.set_session(sess)&lt;/code&gt; を使用して手動でグローバルセッションを設定できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="35e829814838a40a87e9a64882348df552c61fff" translate="yes" xml:space="preserve">
          <source>Note that you must re-normalize by 1/(2n) to obtain an inverse if &lt;code&gt;norm&lt;/code&gt; is not &lt;code&gt;'ortho'&lt;/code&gt;. That is: &lt;code&gt;signal == idct(dct(signal)) * 0.5 / signal.shape[-1]&lt;/code&gt;. When &lt;code&gt;norm='ortho'&lt;/code&gt;, we have: &lt;code&gt;signal == idct(dct(signal, norm='ortho'), norm='ortho')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;norm&lt;/code&gt; が &lt;code&gt;'ortho'&lt;/code&gt; でない場合は、逆数を得るために1 /（2n）で再正規化する必要があることに注意してください。つまり、 &lt;code&gt;signal == idct(dct(signal)) * 0.5 / signal.shape[-1]&lt;/code&gt; です。とき &lt;code&gt;norm='ortho'&lt;/code&gt; 、我々は持っている： &lt;code&gt;signal == idct(dct(signal, norm='ortho'), norm='ortho')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="695160d316b33a7e2dd72201788c50694f5e52a1" translate="yes" xml:space="preserve">
          <source>Note that you still have to call the &lt;code&gt;save()&lt;/code&gt; method to save the model. Passing these arguments to the constructor will not save variables automatically for you.</source>
          <target state="translated">モデルを保存するには、 &lt;code&gt;save()&lt;/code&gt; メソッドを呼び出す必要があることに注意してください。これらの引数をコンストラクターに渡しても、変数は自動的に保存されません。</target>
        </trans-unit>
        <trans-unit id="1299f149def6c9c56c9387e40d116ad83071db3f" translate="yes" xml:space="preserve">
          <source>Note that you will likely need to use &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; with the returned dataset to further distribute it with the strategy.</source>
          <target state="translated">ストラテジーでさらに配布するには、返されたデータセットで &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4f808324e8fca6d8d656dc7ad92ecdbee3860f1b" translate="yes" xml:space="preserve">
          <source>Note that you will likely need to use tf.distribute.Strategy.experimental_distribute_dataset with the returned dataset to further distribute it with the strategy.</source>
          <target state="translated">ストラテジーを使ってさらに分散させるために、返されたデータセットでtf.distribute.Strategy.experimental_distribute_datasetを使う必要があるかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="dc8bdbc21ffa96ba14f99f122f39d6ce850bbe4b" translate="yes" xml:space="preserve">
          <source>Note that your application's flags are still defined the usual way using absl.flags DEFINE_flag() type functions.</source>
          <target state="translated">アプリケーションのフラグは absl.flags DEFINE_flag()型の関数を使って通常の方法で定義されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="42533e28866644d24b25744a516d1f6960f87b1d" translate="yes" xml:space="preserve">
          <source>Note that, the args of &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt; are most likely not used, but some Head implementations may require them.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; と &lt;code&gt;mode&lt;/code&gt; 引数は使用されない可能性が高いことに注意してください。ただし、一部のヘッド実装ではそれらが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">そのことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a06ae04ab8de10c8c7fb61efdc138663538e5ae8" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;'mixed_float16'&lt;/code&gt; policy will apply loss scaling by default in &lt;a href=&quot;../../model#fit&quot;&gt;&lt;code&gt;Model.fit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../model#train_on_batch&quot;&gt;&lt;code&gt;Model.train_on_batch&lt;/code&gt;&lt;/a&gt;, and other training methods. If no such method is used (e.g., a custom training loop is used) and &lt;code&gt;'mixed_float16'&lt;/code&gt; is used, the loss scale must be manually applied. See &lt;a href=&quot;lossscaleoptimizer&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.LossScaleOptimizer&lt;/code&gt;&lt;/a&gt; for details. For &lt;code&gt;'mixed_bfloat16'&lt;/code&gt;, no loss scaling is done and loss scaling never needs to be manually applied.</source>
          <target state="translated">&lt;code&gt;'mixed_float16'&lt;/code&gt; ポリシーは、&lt;a href=&quot;../../model#fit&quot;&gt; &lt;code&gt;Model.fit&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../model#train_on_batch&quot;&gt; &lt;code&gt;Model.train_on_batch&lt;/code&gt; &lt;/a&gt;、およびその他のトレーニングメソッドでデフォルトで損失スケーリングを適用することに注意してください。そのような方法が使用されておらず（たとえば、カスタムトレーニングループが使用されている）、 &lt;code&gt;'mixed_float16'&lt;/code&gt; が使用されている場合、損失スケールを手動で適用する必要があります。詳細については、&lt;a href=&quot;lossscaleoptimizer&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.LossScaleOptimizer&lt;/code&gt; &lt;/a&gt;を参照してください。 &lt;code&gt;'mixed_bfloat16'&lt;/code&gt; 、損失の拡大縮小は行われず、損失の拡大縮小は、決して手動で適用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="79b85dc8d51a6da6086679dde9574f6544327b4a" translate="yes" xml:space="preserve">
          <source>Note to Implementors: In addition to these abstract methods, you must also implement the task_type, task_id, and rpc_layer attributes. You may choose to implement them either as properties with getters or setters or directly set the attributes.</source>
          <target state="translated">実装者への注意事項 これらの抽象メソッドに加えて、task_type、task_id、rpc_layer 属性も実装する必要があります。これらの属性は、ゲッターやセッターを持つプロパティとして実装するか、直接属性を設定するかのいずれかを選択することができます。</target>
        </trans-unit>
        <trans-unit id="6c63f7b2e1fe52b70cb6e4024c044d873867e7b1" translate="yes" xml:space="preserve">
          <source>Note, above &lt;code&gt;P(a, x)&lt;/code&gt; (&lt;code&gt;Igamma&lt;/code&gt;) is the lower regularized complete Gamma function.</source>
          <target state="translated">上記の &lt;code&gt;P(a, x)&lt;/code&gt; （ &lt;code&gt;Igamma&lt;/code&gt; ）は、より低い正則化された完全なガンマ関数です。</target>
        </trans-unit>
        <trans-unit id="de2540fadbae1eb6e760d4d7e7f13dc8a00af55b" translate="yes" xml:space="preserve">
          <source>Note, above &lt;code&gt;Q(a, x)&lt;/code&gt; (&lt;code&gt;Igammac&lt;/code&gt;) is the upper regularized complete Gamma function.</source>
          <target state="translated">上記の &lt;code&gt;Q(a, x)&lt;/code&gt; （ &lt;code&gt;Igammac&lt;/code&gt; ）は、上位の正規化された完全なガンマ関数です。</target>
        </trans-unit>
        <trans-unit id="81ae6a2ab2fd652b5b5c6e0c656f1aaca1c48948" translate="yes" xml:space="preserve">
          <source>Note, by default (unless a custom &lt;code&gt;dropout_state_filter&lt;/code&gt; is provided), the memory state (&lt;code&gt;c&lt;/code&gt; component of any &lt;code&gt;LSTMStateTuple&lt;/code&gt;) passing through a &lt;code&gt;DropoutWrapper&lt;/code&gt; is never modified. This behavior is described in the above article.</source>
          <target state="translated">ノートは、デフォルトで（カスタムない限り &lt;code&gt;dropout_state_filter&lt;/code&gt; が設けられている）、メモリ状態（ &lt;code&gt;c&lt;/code&gt; 任意の成分 &lt;code&gt;LSTMStateTuple&lt;/code&gt; 通過） &lt;code&gt;DropoutWrapper&lt;/code&gt; は変更されることはありません。この動作は上記の記事で説明されています。</target>
        </trans-unit>
        <trans-unit id="61353057d98afbcb05a7bdf960d064322ec004e6" translate="yes" xml:space="preserve">
          <source>Note, if &lt;code&gt;cell.output_size&lt;/code&gt; is a (possibly nested) tuple of integers or &lt;code&gt;TensorShape&lt;/code&gt; objects, then &lt;code&gt;outputs&lt;/code&gt; will be a tuple having the same structure as &lt;code&gt;cell.output_size&lt;/code&gt;, containing Tensors having shapes corresponding to the shape data in &lt;code&gt;cell.output_size&lt;/code&gt;.</source>
          <target state="translated">場合は、 &lt;code&gt;cell.output_size&lt;/code&gt; は整数の（おそらくネスト）タプルであるか &lt;code&gt;TensorShape&lt;/code&gt; はオブジェクト、次いで &lt;code&gt;outputs&lt;/code&gt; 同じ構造を有するタプルなり &lt;code&gt;cell.output_size&lt;/code&gt; における形状データに対応する形状を有するテンソル含む、 &lt;code&gt;cell.output_size&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fa2d99a7e37b130d2bf017f7c652bbb40183becd" translate="yes" xml:space="preserve">
          <source>Note, once keras style has been set, it is set globally for the entire program and cannot be unset.</source>
          <target state="translated">一度kerasスタイルが設定されると、プログラム全体に対してグローバルに設定され、設定を解除することはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="03b559d2e1aefa68c92b87df3d6a56014c371f34" translate="yes" xml:space="preserve">
          <source>Note, preferably use &lt;code&gt;VarLenFeature&lt;/code&gt; (possibly in combination with a &lt;code&gt;SequenceExample&lt;/code&gt;) in order to parse out &lt;code&gt;SparseTensor&lt;/code&gt;s instead of &lt;code&gt;SparseFeature&lt;/code&gt; due to its simplicity.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; の代わりに &lt;code&gt;SparseFeature&lt;/code&gt; を解析するために、 &lt;code&gt;VarLenFeature&lt;/code&gt; を（おそらく &lt;code&gt;SequenceExample&lt;/code&gt; と組み合わせて）使用することが簡単です。</target>
        </trans-unit>
        <trans-unit id="7b4548198a643d107f04994df0dd15e63e85cc8f" translate="yes" xml:space="preserve">
          <source>Note, that this is somewhat like builtin Python file I/O, but there are semantic differences to make it more efficient for some backing filesystems. For example, a write mode file will not be opened until the first write call (to minimize RPC invocations in network filesystems).</source>
          <target state="translated">これは組み込みのPythonファイルI/Oに多少似ていますが、いくつかのバッキングファイルシステムではより効率的になるように意味的な違いがあることに注意してください。例えば、書き込みモードのファイルは最初の書き込み呼び出しまで開かれません (ネットワークファイルシステムでの RPC 呼び出しを最小化するため)。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="bd1a113245b76f772cbd5a8d732d7b5bbdccbba7" translate="yes" xml:space="preserve">
          <source>Notes (assuming we're getting a commandline of some sort as our input): --&amp;gt; For duplicate flags, the last one we hit should &quot;win&quot;. --&amp;gt; Since flags that appear later win, a flagfile's settings can be &quot;weak&quot; if the --flagfile comes at the beginning of the argument sequence, and it can be &quot;strong&quot; if the --flagfile comes at the end. --&amp;gt; A further &quot;--flagfile=</source>
          <target state="translated">注（入力として何らかのコマンドラインを取得していると想定）：-&amp;gt;重複するフラグの場合、最後にヒットしたフラグが「勝つ」はずです。-&amp;gt;後で表示されるフラグが優先されるため、-flagfileが引数シーケンスの先頭にある場合、flagfileの設定は「弱い」場合があり、-flagfileが末尾にある場合、「強い」場合があります。-&amp;gt;さらなる &quot;--flagfile =</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="13a8c93c592fc92e9aecac52a9be4b756c401a93" translate="yes" xml:space="preserve">
          <source>Notes: The parent directories need to exist. Use &lt;a href=&quot;../../../io/gfile/makedirs&quot;&gt;&lt;code&gt;tf.io.gfile.makedirs&lt;/code&gt;&lt;/a&gt; instead if there is the possibility that the parent dirs don't exist.</source>
          <target state="translated">注：親ディレクトリーが存在している必要があります。親&lt;a href=&quot;../../../io/gfile/makedirs&quot;&gt; &lt;code&gt;tf.io.gfile.makedirs&lt;/code&gt; &lt;/a&gt;が存在しない可能性がある場合は、代わりにtf.io.gfile.makedirsを使用してください。</target>
        </trans-unit>
        <trans-unit id="323fb8b8573630ac70581d8cdaf19bf54bdb5796" translate="yes" xml:space="preserve">
          <source>Notes: The parent directories need to exist. Use &lt;a href=&quot;makedirs&quot;&gt;&lt;code&gt;tf.io.gfile.makedirs&lt;/code&gt;&lt;/a&gt; instead if there is the possibility that the parent dirs don't exist.</source>
          <target state="translated">注：親ディレクトリーが存在している必要があります。親&lt;a href=&quot;makedirs&quot;&gt; &lt;code&gt;tf.io.gfile.makedirs&lt;/code&gt; &lt;/a&gt;が存在しない可能性がある場合は、代わりにtf.io.gfile.makedirsを使用してください。</target>
        </trans-unit>
        <trans-unit id="1b3f141ab87179d0755abc1d4da67f0c04e3ab7c" translate="yes" xml:space="preserve">
          <source>Nothing.</source>
          <target state="translated">Nothing.</target>
        </trans-unit>
        <trans-unit id="df411adcbc859409d5288ffe48789d187b06b316" translate="yes" xml:space="preserve">
          <source>Notice how this function avoids making a numpy array directly. This is because it is important to not hold actual numpy views to the data longer than necessary. If you do, then the interpreter can no longer be invoked, because it is possible the interpreter would resize and invalidate the referenced tensors. The NumPy API doesn't allow any mutability of the the underlying buffers.</source>
          <target state="translated">この関数はnumpy配列を直接作ることを避けていることに注目してください。これは、実際のnumpyビューを必要以上に長くデータに保持しないことが重要だからです。そうすると、インタープリタがリサイズされて参照されているテンソルが無効になってしまう可能性があるため、インタープリタを呼び出すことができなくなります。NumPy APIは、基礎となるバッファの変更を許可していません。</target>
        </trans-unit>
        <trans-unit id="1d50c26e0e094319167ab9cf4ea2664a67497326" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;scale&lt;/code&gt; has semantics more similar to standard deviation than variance. However it is not actually the std. deviation; the Student's t-distribution std. dev. is &lt;code&gt;scale sqrt(df / (df - 2))&lt;/code&gt; when &lt;code&gt;df &amp;gt; 2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scale&lt;/code&gt; セマンティクスは、分散よりも標準偏差に近いことに注意してください。ただし、実際にはstdではありません。偏差; スチューデントのt分布標準。開発者。ある &lt;code&gt;scale sqrt(df / (df - 2))&lt;/code&gt; 場合 &lt;code&gt;df &amp;gt; 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="feaa006c7cb998d0daf98aa74c2dc0b3047ff5a1" translate="yes" xml:space="preserve">
          <source>NumPy advanced indexing is currently not supported.</source>
          <target state="translated">NumPyのアドバンスドインデックスは現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="ff1bed83b6ad2769b544f9574354263198f224c9" translate="yes" xml:space="preserve">
          <source>Number of accumulated gradients currently in accumulator.</source>
          <target state="translated">現在アキュムレータに蓄積されているグラデーションの数。</target>
        </trans-unit>
        <trans-unit id="c28eef31422890e190a8a735bef2bbc3ca45dd3f" translate="yes" xml:space="preserve">
          <source>Number of batch in the Sequence.</source>
          <target state="translated">シーケンス内のバッチ数。</target>
        </trans-unit>
        <trans-unit id="88c84f9eed23b2738c86fe8c8df27a937f9b93b1" translate="yes" xml:space="preserve">
          <source>Number of gradients that have currently been aggregated in accumulator.</source>
          <target state="translated">現在アキュムレータに集約されているグラデーションの数。</target>
        </trans-unit>
        <trans-unit id="c294a32144f9624cbbda9c7a7085da61f5995d68" translate="yes" xml:space="preserve">
          <source>Number of parallel threads</source>
          <target state="translated">並列スレッド数</target>
        </trans-unit>
        <trans-unit id="273bc020e0834613612160f28f8fbeb43f04c1ba" translate="yes" xml:space="preserve">
          <source>Number of trials used to construct a sample.</source>
          <target state="translated">サンプルを構築するために使用した試行回数。</target>
        </trans-unit>
        <trans-unit id="991ad41f4eb1372ed8d8090d4cf371d4b165ad81" translate="yes" xml:space="preserve">
          <source>Numpy Compatibility</source>
          <target state="translated">Numpy互換性</target>
        </trans-unit>
        <trans-unit id="30f1b2ab4e0ff2c9c870d869e66c9512f7e0f7b4" translate="yes" xml:space="preserve">
          <source>Numpy array - value of the tensor.</source>
          <target state="translated">Numpy 配列-テンソルの値.</target>
        </trans-unit>
        <trans-unit id="b1e2609b31e3d2e9ce0cf87ec3f24aa44820553d" translate="yes" xml:space="preserve">
          <source>Numpy array(s) of predictions.</source>
          <target state="translated">予測値のNumpy配列(複数可).</target>
        </trans-unit>
        <trans-unit id="586425c3ed508309560dea818b51f3e5895cbc95" translate="yes" xml:space="preserve">
          <source>Numpy equivalent is &lt;code&gt;tensor[mask]&lt;/code&gt;.</source>
          <target state="translated">相当するNumpyは &lt;code&gt;tensor[mask]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c0bec7241f649c869673060c3e29bbf228431bab" translate="yes" xml:space="preserve">
          <source>Object of type &lt;code&gt;CustomObjectScope&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;CustomObjectScope&lt;/code&gt; のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="88bc41dfbd4c0979d50c81310b3ae4670a2d1f30" translate="yes" xml:space="preserve">
          <source>Objects exported with &lt;a href=&quot;save&quot;&gt;&lt;code&gt;tf.saved_model.save&lt;/code&gt;&lt;/a&gt; additionally have trackable objects and functions assigned to attributes:</source>
          <target state="translated">&lt;a href=&quot;save&quot;&gt; &lt;code&gt;tf.saved_model.save&lt;/code&gt; で&lt;/a&gt;エクスポートされたオブジェクトには、追跡可能なオブジェクトと関数が属性に割り当てられています。</target>
        </trans-unit>
        <trans-unit id="dbc1198baa525915f9df34e4b9a278a51a386960" translate="yes" xml:space="preserve">
          <source>Objects of this class are intended to be provided as the optimizer argument (though LinearSDCA objects do not implement the &lt;code&gt;tf.train.Optimizer&lt;/code&gt; interface) when creating &lt;a href=&quot;../linearclassifier&quot;&gt;&lt;code&gt;tf.estimator.LinearClassifier&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../linearregressor&quot;&gt;&lt;code&gt;tf.estimator.LinearRegressor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスのオブジェクトは、&lt;a href=&quot;../linearclassifier&quot;&gt; &lt;code&gt;tf.estimator.LinearClassifier&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../linearregressor&quot;&gt; &lt;code&gt;tf.estimator.LinearRegressor&lt;/code&gt; を&lt;/a&gt;作成するときに、optimizer引数として提供されることを意図しています（ただし、LinearSDCAオブジェクトは &lt;code&gt;tf.train.Optimizer&lt;/code&gt; インターフェースを実装していません）。</target>
        </trans-unit>
        <trans-unit id="2fb98b5a16bdcac87f3ce98bd2305af9a9612446" translate="yes" xml:space="preserve">
          <source>Objects that are equal automatically fail.</source>
          <target state="translated">等しいオブジェクトは自動的に失敗します。</target>
        </trans-unit>
        <trans-unit id="e8c575aea4d9a7963448001e0b8e8eb341a2a2f6" translate="yes" xml:space="preserve">
          <source>Often is the number of classes, labels, or real values to be predicted. Typically, logits is of shape &lt;code&gt;[batch_size, logits_dimension]&lt;/code&gt;.</source>
          <target state="translated">多くの場合、予測されるクラス、ラベル、または実際の値の数です。通常、ロジットの形状は &lt;code&gt;[batch_size, logits_dimension]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3e0252e164cdccd96d0caaa6a85c500f8d598fc4" translate="yes" xml:space="preserve">
          <source>Often, a numerical approximation can be used for &lt;code&gt;log_cdf(x)&lt;/code&gt; that yields a more accurate answer than simply taking the logarithm of the &lt;code&gt;cdf&lt;/code&gt; when &lt;code&gt;x &amp;lt;&amp;lt; -1&lt;/code&gt;.</source>
          <target state="translated">多くの場合、数値近似をするために使用することができます &lt;code&gt;log_cdf(x)&lt;/code&gt; は単にの対数を取るよりも正確な答え得 &lt;code&gt;cdf&lt;/code&gt; &lt;code&gt;x &amp;lt;&amp;lt; -1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bda78bed7a0f6a710d158e631a2f115e70dd3122" translate="yes" xml:space="preserve">
          <source>On CPU, solution is computed via Gaussian elimination with or without partial pivoting, depending on &lt;code&gt;partial_pivoting&lt;/code&gt; parameter. On GPU, Nvidia's cuSPARSE library is used: https://docs.nvidia.com/cuda/cusparse/index.html#gtsv</source>
          <target state="translated">CPUでは、 &lt;code&gt;partial_pivoting&lt;/code&gt; パラメータに応じて、部分的なピボットの有無にかかわらず、ガウスの消去法によって解が計算されます。GPUでは、NvidiaのcuSPARSEライブラリが使用されます：https://docs.nvidia.com/cuda/cusparse/index.html#gtsv</target>
        </trans-unit>
        <trans-unit id="d157d43dbd1b25a38191a077845611dc4b587b8e" translate="yes" xml:space="preserve">
          <source>On CPU: Caller may use SparseTensor or dense padded labels but calling with a SparseTensor will be significantly faster.</source>
          <target state="translated">CPU上で。呼び出し元は SparseTensor または高密度のパッド付きラベルを使用することができますが、SparseTensor を使用して呼び出した方が大幅に高速になります。</target>
        </trans-unit>
        <trans-unit id="611a5e996806cb9084c625b66e4eba3b7f6146d3" translate="yes" xml:space="preserve">
          <source>On TPU and GPU: Only dense padded labels are supported.</source>
          <target state="translated">TPUとGPU上。密なパッド入りラベルのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="8e6956260fd255d4a418eb60548c30ae41f00092" translate="yes" xml:space="preserve">
          <source>On construction the &lt;code&gt;QueueRunner&lt;/code&gt; adds an op to close the queue. That op will be run if the enqueue ops raise exceptions.</source>
          <target state="translated">構築時に、 &lt;code&gt;QueueRunner&lt;/code&gt; はキューを閉じるための操作を追加します。エンキュー操作で例外が発生すると、その操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="7f9810fcd997ace84c6ae88c8ae6fec9dddda47a" translate="yes" xml:space="preserve">
          <source>On the other hand, setting new_shape as [2, 3, 4] is also an error: The third dimension is smaller than the original shape &lt;a href=&quot;and%20an%0a%60invalidargumenterror%60%20will%20be%20raised&quot;&gt;2, 3, 5&lt;/a&gt;.</source>
          <target state="translated">一方、[2、3、4]としてnew_shapeを設定することも誤りである：第三の寸法が本来の形状よりも小さい&lt;a href=&quot;and%20an%0a%60invalidargumenterror%60%20will%20be%20raised&quot;&gt;2、3、5&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="786e5efaffd2535a0930a115dd35ea4e6cfb94d8" translate="yes" xml:space="preserve">
          <source>Once a visible &lt;a href=&quot;physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt; is initialized one or more &lt;a href=&quot;logicaldevice&quot;&gt;&lt;code&gt;tf.config.LogicalDevice&lt;/code&gt;&lt;/a&gt; objects are created. Use &lt;a href=&quot;set_visible_devices&quot;&gt;&lt;code&gt;tf.config.set_visible_devices&lt;/code&gt;&lt;/a&gt; to configure the visibility of a physical device and &lt;a href=&quot;set_logical_device_configuration&quot;&gt;&lt;code&gt;tf.config.set_logical_device_configuration&lt;/code&gt;&lt;/a&gt; to configure multiple &lt;a href=&quot;logicaldevice&quot;&gt;&lt;code&gt;tf.config.LogicalDevice&lt;/code&gt;&lt;/a&gt; objects for a &lt;a href=&quot;physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt;. This is useful when separation between models is needed or to simulate a multi-device environment.</source>
          <target state="translated">可視の&lt;a href=&quot;physicaldevice&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt; &lt;/a&gt;が初期化されると、1つ以上の&lt;a href=&quot;logicaldevice&quot;&gt; &lt;code&gt;tf.config.LogicalDevice&lt;/code&gt; &lt;/a&gt;オブジェクトが作成されます。使用&lt;a href=&quot;set_visible_devices&quot;&gt; &lt;code&gt;tf.config.set_visible_devices&lt;/code&gt; は、&lt;/a&gt;物理デバイスとの視認性構成する&lt;a href=&quot;set_logical_device_configuration&quot;&gt; &lt;code&gt;tf.config.set_logical_device_configuration&lt;/code&gt; を&lt;/a&gt;複数設定する&lt;a href=&quot;logicaldevice&quot;&gt; &lt;code&gt;tf.config.LogicalDevice&lt;/code&gt; の&lt;/a&gt;ためにオブジェクトを&lt;a href=&quot;physicaldevice&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt; &lt;/a&gt;。これは、モデル間の分離が必要な場合や、マルチデバイス環境をシミュレートする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="a380a819e0abe835751488f0036f75ec2d80df15" translate="yes" xml:space="preserve">
          <source>Once enabled, the check-numerics mechanism can be disabled by using &lt;a href=&quot;disable_check_numerics&quot;&gt;&lt;code&gt;tf.debugging.disable_check_numerics()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有効にすると、&lt;a href=&quot;disable_check_numerics&quot;&gt; &lt;code&gt;tf.debugging.disable_check_numerics()&lt;/code&gt; &lt;/a&gt;を使用して、数値チェックメカニズムを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="0ee7ecde4cf0b08ac81928b426328e497121fde2" translate="yes" xml:space="preserve">
          <source>Once enabled, the dumping can be disabled with the corresponding &lt;code&gt;disable_dump_debug_info()&lt;/code&gt; method under the same Python namespace. Calling this method more than once with the same &lt;code&gt;dump_root&lt;/code&gt; is idempotent. Calling this method more than once with different &lt;code&gt;tensor_debug_mode&lt;/code&gt;s leads to a &lt;code&gt;ValueError&lt;/code&gt;. Calling this method more than once with different &lt;code&gt;circular_buffer_size&lt;/code&gt;s leads to a &lt;code&gt;ValueError&lt;/code&gt;. Calling this method with a different &lt;code&gt;dump_root&lt;/code&gt; abolishes the previously-enabled &lt;code&gt;dump_root&lt;/code&gt;.</source>
          <target state="translated">有効にすると、同じPython名前空間で対応する &lt;code&gt;disable_dump_debug_info()&lt;/code&gt; メソッドを使用してダンプを無効にできます。同じ &lt;code&gt;dump_root&lt;/code&gt; でこのメソッドを複数回呼び出すことはべき等です。異なる &lt;code&gt;tensor_debug_mode&lt;/code&gt; でこのメソッドを複数回呼び出すと、 &lt;code&gt;ValueError&lt;/code&gt; が発生します。このメソッドを異なる &lt;code&gt;circular_buffer_size&lt;/code&gt; で複数回呼び出すと、 &lt;code&gt;ValueError&lt;/code&gt; が発生します。異なるでこのメソッドを呼び出す &lt;code&gt;dump_root&lt;/code&gt; することは、以前に有効廃止 &lt;code&gt;dump_root&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="46b621bf1b7b42205b3975360b4207fe02efd4d2" translate="yes" xml:space="preserve">
          <source>Once successful, the following actions are also triggered:</source>
          <target state="translated">成功すると、以下のアクションも発動します。</target>
        </trans-unit>
        <trans-unit id="fe96882ea18141ec51f448bd8ad39a29aba58073" translate="yes" xml:space="preserve">
          <source>Once the gradients have been computed, push them into gradient accumulators. Each accumulator will check the staleness and drop the stale.</source>
          <target state="translated">グラデーションを計算したら、グラデーションアキュムレータに押し込みます。それぞれのアキュムレータでスタレをチェックして落としていきます。</target>
        </trans-unit>
        <trans-unit id="46b705867e9bac681c91b44d28e06299c9cab993" translate="yes" xml:space="preserve">
          <source>Once you have a dataset, you can apply transformations to prepare the data for your model:</source>
          <target state="translated">データセットを手に入れたら、変換を適用してモデル用のデータを準備することができます。</target>
        </trans-unit>
        <trans-unit id="0fefdee3c3c28c0fc420023e879f567b73ea343d" translate="yes" xml:space="preserve">
          <source>One can set &lt;code&gt;use_tpu&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; for testing. All training, evaluation, and predict will be executed on CPU. &lt;code&gt;input_fn&lt;/code&gt; and &lt;code&gt;model_fn&lt;/code&gt; will receive &lt;code&gt;train_batch_size&lt;/code&gt; or &lt;code&gt;eval_batch_size&lt;/code&gt; unmodified as &lt;code&gt;params['batch_size']&lt;/code&gt;.</source>
          <target state="translated">テストのために、 &lt;code&gt;use_tpu&lt;/code&gt; を &lt;code&gt;False&lt;/code&gt; に設定できます。すべてのトレーニング、評価、予測はCPUで実行されます。 &lt;code&gt;input_fn&lt;/code&gt; および &lt;code&gt;model_fn&lt;/code&gt; は、変更されていない &lt;code&gt;train_batch_size&lt;/code&gt; または &lt;code&gt;eval_batch_size&lt;/code&gt; を &lt;code&gt;params['batch_size']&lt;/code&gt; として受け取ります。</target>
        </trans-unit>
        <trans-unit id="9cdbd2be2e630d6c954854753e6a1795863db859" translate="yes" xml:space="preserve">
          <source>One example of this is when using TensorFlow's RNN classes with Keras Models or Networks. Because Keras models do not properly set variable scopes, users of RNNs may either accidentally share scopes between two different models, or get errors about variables that already exist.</source>
          <target state="translated">その一例として、TensorFlowのRNNクラスをKerasモデルやネットワークで使用する場合があります。Kerasモデルは変数スコープを適切に設定しないので、RNNのユーザは誤って2つの異なるモデル間でスコープを共有してしまったり、すでに存在する変数についてエラーが発生したりすることがあります。</target>
        </trans-unit>
        <trans-unit id="2ee7c661e768665b00f9899c7bfa63c6f6693861" translate="yes" xml:space="preserve">
          <source>One might see performance advantages by batching &lt;code&gt;Example&lt;/code&gt; protos with &lt;code&gt;parse_example&lt;/code&gt; instead of using this function directly.</source>
          <target state="translated">一つは、バッチ処理によるパフォーマンス上の利点を参照してください可能性がある &lt;code&gt;Example&lt;/code&gt; でプロトを &lt;code&gt;parse_example&lt;/code&gt; の代わりに、直接この機能を使用して。</target>
        </trans-unit>
        <trans-unit id="dab0cd7480ebf7f860f247acda7fcf14eb80268b" translate="yes" xml:space="preserve">
          <source>One of &lt;a href=&quot;../keras/losses/reduction&quot;&gt;&lt;code&gt;tf.losses.Reduction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../keras/losses/reduction&quot;&gt; &lt;code&gt;tf.losses.Reduction&lt;/code&gt; の&lt;/a&gt; 1つ。</target>
        </trans-unit>
        <trans-unit id="9d878c19bfa2774c551f29410b41c12c25f72a3f" translate="yes" xml:space="preserve">
          <source>One reasonable value for &lt;code&gt;max_shard_bytes&lt;/code&gt; is &lt;code&gt;(64 &amp;lt;&amp;lt; 20) - 1&lt;/code&gt;, or almost &lt;code&gt;64MB&lt;/code&gt;, to keep below the protobuf byte limit.</source>
          <target state="translated">&lt;code&gt;max_shard_bytes&lt;/code&gt; の妥当な値の1つは、 &lt;code&gt;(64 &amp;lt;&amp;lt; 20) - 1&lt;/code&gt; またはほぼ &lt;code&gt;64MB&lt;/code&gt; であり、protobufバイト制限を下回るようにします。</target>
        </trans-unit>
        <trans-unit id="835e31555f7691800120ca12eb99164bb510fe2c" translate="yes" xml:space="preserve">
          <source>One-hot encodes a text into a list of word indexes of size n.</source>
          <target state="translated">ワンホットは、テキストをサイズnの単語インデックスのリストにエンコードします。</target>
        </trans-unit>
        <trans-unit id="334c28d7f95e6546b1f8527110248a36e83aca1b" translate="yes" xml:space="preserve">
          <source>Only accepts value typed tensors as inputs and rejects resource variable handles as input.</source>
          <target state="translated">入力としては値型のテンソルのみを受け付け、入力としてはリソース変数のハンドルを拒否します。</target>
        </trans-unit>
        <trans-unit id="2c9a5a5a96ded8e32df86874f36ecf44968ba5d1" translate="yes" xml:space="preserve">
          <source>Only after all variables have been updated, increment the global step.</source>
          <target state="translated">すべての変数が更新された後にのみ、グローバルステップをインクリメントします。</target>
        </trans-unit>
        <trans-unit id="7f16d87add9a4d1b320177e1e3408f9f4905fd3b" translate="yes" xml:space="preserve">
          <source>Only after step 4, pushes &lt;code&gt;global_step&lt;/code&gt; in the &lt;code&gt;token_queue&lt;/code&gt;, once for each worker replica. The workers can now fetch the global step, use it to update its local_step variable and start the next batch. Please note that some workers can consume multiple minibatches, while some may not consume even one. This is because each worker fetches minibatches as long as a token exists. If one worker is stuck for some reason and does not consume a token, another worker can use it.</source>
          <target state="translated">唯一のステップ4の後、プッシュ &lt;code&gt;global_step&lt;/code&gt; をして &lt;code&gt;token_queue&lt;/code&gt; 各ワーカーのレプリカの後、。ワーカーはグローバルステップをフェッチし、それを使用してlocal_step変数を更新し、次のバッチを開始できます。ワーカーによっては複数のミニバッチを使用できる場合と、1つも使用しない場合があることに注意してください。これは、トークンが存在する限り、各ワーカーがミニバッチをフェッチするためです。1つのワーカーが何らかの理由でスタックし、トークンを消費しない場合、別のワーカーがそれを使用できます。</target>
        </trans-unit>
        <trans-unit id="848aabde175071eb7d2973c6b997c576ce3f230e" translate="yes" xml:space="preserve">
          <source>Only applicable if the layer has exactly one inbound node, i.e. if it is connected to one incoming layer.</source>
          <target state="translated">レイヤーがちょうど1つのインバウンドノードを持っている場合、つまり1つのインカミングレイヤーに接続されている場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="f8ae9708c35c08dd3a91689c37a43a53d064c8a7" translate="yes" xml:space="preserve">
          <source>Only applicable if the layer has exactly one input, i.e. if it is connected to one incoming layer, or if all inputs have the same shape.</source>
          <target state="translated">レイヤーが正確に1つの入力を持っている場合、すなわち、それが1つの入力レイヤーに接続されている場合、またはすべての入力が同じ形状を持っている場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="5f93f160e8a3cd13974c1d1d07ae49506b264c02" translate="yes" xml:space="preserve">
          <source>Only applicable if the layer has exactly one input, i.e. if it is connected to one incoming layer.</source>
          <target state="translated">レイヤーが正確に1つの入力を持っている場合、すなわち1つの入力レイヤーに接続されている場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="e1a00617e9118b765a5da4cea50f9eb37fc4a6d0" translate="yes" xml:space="preserve">
          <source>Only applicable if the layer has exactly one output, i.e. if it is connected to one incoming layer.</source>
          <target state="translated">レイヤーが正確に1つの出力を持っている場合、すなわち1つの入力レイヤーに接続されている場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="46aefa0a3c890bb9ab3d8dbd7a554536f18592f1" translate="yes" xml:space="preserve">
          <source>Only applicable if the layer has one output, or if all outputs have the same shape.</source>
          <target state="translated">レ イ ヤーが 1 つの出力を持つ場合、 またはすべての出力が同じ形状を持つ場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="e5d2f36053d80483c7c77e2dabe525d87a1b0a41" translate="yes" xml:space="preserve">
          <source>Only elements not equal to zero will be present in the result. The resulting &lt;code&gt;SparseTensor&lt;/code&gt; has the same dtype and shape as the input.</source>
          <target state="translated">結果には、ゼロ以外の要素のみが含まれます。結果の &lt;code&gt;SparseTensor&lt;/code&gt; は、入力と同じdtypeと形状を持ちます。</target>
        </trans-unit>
        <trans-unit id="975a6cab99f4fc8794526ba91ae6b5de1a717063" translate="yes" xml:space="preserve">
          <source>Only exists for API compatibility with multi-backend Keras.</source>
          <target state="translated">マルチバックエンドのKerasとのAPI互換性のためだけに存在します。</target>
        </trans-unit>
        <trans-unit id="3bd483022a6b771acac0ed0f19ce4356587336fa" translate="yes" xml:space="preserve">
          <source>Only required if &lt;code&gt;featurewise_center&lt;/code&gt; or &lt;code&gt;featurewise_std_normalization&lt;/code&gt; or &lt;code&gt;zca_whitening&lt;/code&gt; are set to True.</source>
          <target state="translated">場合にのみ必要 &lt;code&gt;featurewise_center&lt;/code&gt; または &lt;code&gt;featurewise_std_normalization&lt;/code&gt; または &lt;code&gt;zca_whitening&lt;/code&gt; が Trueに設定されています。</target>
        </trans-unit>
        <trans-unit id="a0deb9469624ef3de6a5fca8370a75f399e9abc5" translate="yes" xml:space="preserve">
          <source>Only show profiler nodes consuming no less than 'min_bytes'.</source>
          <target state="translated">プロファイラノードの消費量が 'min_bytes' 以上のノードのみを表示します。</target>
        </trans-unit>
        <trans-unit id="3543223ca94b517ce1d79b980379a6e684dce160" translate="yes" xml:space="preserve">
          <source>Only show profiler nodes consuming no less than 'min_float_ops'.</source>
          <target state="translated">消費電力が「min_float_ops」以上のプロファイラノードのみを表示します。</target>
        </trans-unit>
        <trans-unit id="ecaa035d4228cf192bd8636b6e1185b75d710286" translate="yes" xml:space="preserve">
          <source>Only show profiler nodes consuming no less than 'min_micros'.</source>
          <target state="translated">消費電力が「min_micros」以上のプロファイラノードのみを表示します。</target>
        </trans-unit>
        <trans-unit id="bfa200f6671cd877447f75d362b0d97739f37e0c" translate="yes" xml:space="preserve">
          <source>Only show profiler nodes holding no less than 'min_params' parameters.</source>
          <target state="translated">min_params' 以上のパラメータを持つプロファイラ ノードのみを表示します。</target>
        </trans-unit>
        <trans-unit id="d15204c8cdf25510527c9049aa608dcb8e11ebe4" translate="yes" xml:space="preserve">
          <source>Only show profiler nodes including no less than 'min_occurrence' graph nodes.</source>
          <target state="translated">min_occurrence」以上のグラフ・ノードを含むプロファイラ・ノードのみを表示します。</target>
        </trans-unit>
        <trans-unit id="45014a153ba2554cdda5fbff52db2fccc9a3d832" translate="yes" xml:space="preserve">
          <source>Only the properties in the following list are allowed to be replaced:</source>
          <target state="translated">以下のリストのプロパティのみ置き換えが可能です。</target>
        </trans-unit>
        <trans-unit id="9bf44bdfaaf8a75129eb96c14731b91e83dbe6b3" translate="yes" xml:space="preserve">
          <source>Only top &lt;code&gt;num_words-1&lt;/code&gt; most frequent words will be taken into account. Only words known by the tokenizer will be taken into account.</source>
          <target state="translated">上位 &lt;code&gt;num_words-1&lt;/code&gt; 個の最も頻度の高い単語のみが考慮されます。トークナイザーが知っている単語のみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="6207cf0b1fcae2548ea275564b9d80af705e5075" translate="yes" xml:space="preserve">
          <source>Only topological loading (&lt;code&gt;by_name=False&lt;/code&gt;) is supported when loading weights from the TensorFlow format. Note that topological loading differs slightly between TensorFlow and HDF5 formats for user-defined classes inheriting from &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;: HDF5 loads based on a flattened list of weights, while the TensorFlow format loads based on the object-local names of attributes to which layers are assigned in the &lt;code&gt;Model&lt;/code&gt;'s constructor.</source>
          <target state="translated">TensorFlow形式から重みを読み込む場合、トポロジー読み込み（ &lt;code&gt;by_name=False&lt;/code&gt; ）のみがサポートされます。トポロジーの読み込みは、tf.keras.Modelから継承するユーザー定義クラスのTensorFlow形式とHDF5形式で少し異なります&lt;a href=&quot;../model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt;は、重みのフラット化されたリストに基づいて読み込まれますが、TensorFlow形式は、属性のオブジェクトローカル名に基づいて読み込まれます。レイヤーは &lt;code&gt;Model&lt;/code&gt; のコンストラクターで割り当てられます。</target>
        </trans-unit>
        <trans-unit id="6b4fb8cd75e1cd47b418d479e0e5ffe20c3d8a51" translate="yes" xml:space="preserve">
          <source>Only topological loading (&lt;code&gt;by_name=False&lt;/code&gt;) is supported when loading weights from the TensorFlow format. Note that topological loading differs slightly between TensorFlow and HDF5 formats for user-defined classes inheriting from &lt;a href=&quot;model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;: HDF5 loads based on a flattened list of weights, while the TensorFlow format loads based on the object-local names of attributes to which layers are assigned in the &lt;code&gt;Model&lt;/code&gt;'s constructor.</source>
          <target state="translated">TensorFlow形式から重みを読み込む場合、トポロジー読み込み（ &lt;code&gt;by_name=False&lt;/code&gt; ）のみがサポートされます。トポロジーの読み込みは、tf.keras.Modelから継承するユーザー定義クラスのTensorFlow形式とHDF5形式で少し異なります&lt;a href=&quot;model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt;は、重みのフラット化されたリストに基づいて読み込まれますが、TensorFlow形式は、属性のオブジェクトローカル名に基づいて読み込まれます。レイヤーは &lt;code&gt;Model&lt;/code&gt; のコンストラクターで割り当てられます。</target>
        </trans-unit>
        <trans-unit id="07c6635c2c9cb1a4a8d05f9319ab6dd4e5048d19" translate="yes" xml:space="preserve">
          <source>Only use for 2D matrices.</source>
          <target state="translated">2次元行列にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="4b340c8b7563412570948f5811d2e0d1fcfc6fd6" translate="yes" xml:space="preserve">
          <source>Only used when &lt;code&gt;state_is_tuple=True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;state_is_tuple=True&lt;/code&gt; の場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="b15b2e628cec174a105574d79fe2f17a084d3986" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; has specified rank or higher. If static checks determine &lt;code&gt;x&lt;/code&gt; has correct rank, a &lt;code&gt;no_op&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がランク以上を指定していない限り、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが正しいと判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="098f6e5bf7bdeda25821fc7d4a97c3d1e3084c0e" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; has specified rank or higher. If static checks determine &lt;code&gt;x&lt;/code&gt; has correct rank, a &lt;code&gt;no_op&lt;/code&gt; is returned. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がランク以上を指定していない限り、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが正しいと判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="596890038d2f4619ff502aa203e2a4fe8fbc7d6b" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; has specified rank. If static checks determine &lt;code&gt;x&lt;/code&gt; has correct rank, a &lt;code&gt;no_op&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; にランクが指定されていない限り、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが正しいと判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="06c195988461802db40ca52cef9448571d1118c6" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; has specified rank. If static checks determine &lt;code&gt;x&lt;/code&gt; has correct rank, a &lt;code&gt;no_op&lt;/code&gt; is returned. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; にランクが指定されていない限り、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが正しいと判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="e0d1d83d20389674f847577ddd6e9ef6a46070d2" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; is all negative. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がすべて負でない限り、Op は &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="ba1ee87854f8947ddd651440e36e379c615c1291" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; is all non-negative. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がすべて負でない限り、Op は &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="361fa9e13cc2c8099b40d309ed5e8e66b0d24ae8" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; is all non-positive. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がすべて正でない限り、Op は &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="3dfb0fd99082882c62cc797dfaf0f9ab1227cbda" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless &lt;code&gt;x&lt;/code&gt; is all positive. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がすべて正でない限り、Op は &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="2d6ccd9e38a5515f27f2a37371ad8f3c121c0c9a" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless all shape constraints are satisfied. If static checks determine all constraints are satisfied, a &lt;code&gt;no_op&lt;/code&gt; is returned.</source>
          <target state="translated">すべての形状制約が満たされない限り、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させます。静的チェックですべての制約が満たされていると判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d7343d9c604bc27b934f3ca86d9e1cc4a5673860" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless rank of &lt;code&gt;x&lt;/code&gt; is in &lt;code&gt;ranks&lt;/code&gt;. If static checks determine &lt;code&gt;x&lt;/code&gt; has matching rank, a &lt;code&gt;no_op&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のランクがrankにない場合、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生 &lt;code&gt;ranks&lt;/code&gt; ます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが一致すると判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="808751f20236ba9f4f46801b57a61e0d86834323" translate="yes" xml:space="preserve">
          <source>Op raising &lt;code&gt;InvalidArgumentError&lt;/code&gt; unless rank of &lt;code&gt;x&lt;/code&gt; is in &lt;code&gt;ranks&lt;/code&gt;. If static checks determine &lt;code&gt;x&lt;/code&gt; has matching rank, a &lt;code&gt;no_op&lt;/code&gt; is returned. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のランクがrankにない場合、Opは &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生 &lt;code&gt;ranks&lt;/code&gt; ます。静的チェックで &lt;code&gt;x&lt;/code&gt; のランクが一致すると判断された場合、 &lt;code&gt;no_op&lt;/code&gt; が返されます。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="6a19ee52efc0952940edf50fdbcbc099519f9e25" translate="yes" xml:space="preserve">
          <source>Op that implements the reader.</source>
          <target state="translated">リーダーを実装したOp</target>
        </trans-unit>
        <trans-unit id="1a11911596171403f2263a0a984a017e9748e964" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x != y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x != y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="b2b19c558b3588adc05816f9473cfb88b38c582d" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x != y&lt;/code&gt; is ever False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x != y&lt;/code&gt; が常にFalseの場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="09f874893b2fc224a7dfd38cfb8c6a10d790a5fc" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;gt; 0&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="464eabae7d7fa985507d2ba02ae595aa482df84f" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt; y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="a5fd2c61b376adb0a0791130d5b81aa81aa2de96" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt; y&lt;/code&gt; is False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="ba327da79e6f24d205ecb9ef42082d3a9301bc60" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= 0&lt;/code&gt; がFalseの場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="77076716bbb2b2e88130a5da704ae24948005fef" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt;= y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="6f532e09fec1098afc3963be64c488ced5dedaaa" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;gt;= y&lt;/code&gt; is False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="cf7859f98feb3c9f7d25c16475ac1246fa3778f6" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt; 0&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;lt; 0&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="d81689e7e8a76ba8fbdb2064e97ec101d0aacb7b" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt; y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="f90ad3a5b249fd5537961700f1302053660222ef" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt; y&lt;/code&gt; is False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="9b37b28d7bb99c46c4d44ae58900d328ef7202b4" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= 0&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="e581b8c6f240dd46805d52f991c0d60e535f71a8" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt;= y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="3f13f20824ad6bdff284387f7172bc4de5602335" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x &amp;lt;= y&lt;/code&gt; is False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= y&lt;/code&gt; がFalseの場合、 &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="dbb4d55356cee9c6a8b5684a56bc7b91e0cbb757" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x == y&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; がFalseの場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="ea943b48081b9bd9676cd7cc43c9e94e29c96e1e" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x == y&lt;/code&gt; is False. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; がFalseの場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="d53311e78cb142f3f9436e93d1606f9e6da6d210" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are not close enough.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; が十分に近接していない場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。</target>
        </trans-unit>
        <trans-unit id="72a4ae90a715348967138b3fcbd8685c54fa3a78" translate="yes" xml:space="preserve">
          <source>Op that raises &lt;code&gt;InvalidArgumentError&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are not close enough. This can be used with &lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;tf.control_dependencies&lt;/code&gt;&lt;/a&gt; inside of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s to block followup computation until the check has executed.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; が十分に近接していない場合に &lt;code&gt;InvalidArgumentError&lt;/code&gt; を発生させる演算。これを&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s 内のtf.control_dependenciesと&lt;a href=&quot;../control_dependencies&quot;&gt; &lt;code&gt;tf.control_dependencies&lt;/code&gt; &lt;/a&gt;に使用して、チェックが実行されるまでフォローアップ計算をブロックできます。</target>
        </trans-unit>
        <trans-unit id="52b08fd68d529008ade1eace0482c686f5187b77" translate="yes" xml:space="preserve">
          <source>Opens file &lt;code&gt;path&lt;/code&gt; and creates a &lt;code&gt;TFRecordWriter&lt;/code&gt; writing to it.</source>
          <target state="translated">ファイル &lt;code&gt;path&lt;/code&gt; を開き、 &lt;code&gt;TFRecordWriter&lt;/code&gt; 書き込むTFRecordWriterを作成します。</target>
        </trans-unit>
        <trans-unit id="ef3134c526daef3feabac60d9bea2532557040bb" translate="yes" xml:space="preserve">
          <source>Operation that sets the accumulator's time step.</source>
          <target state="translated">アキュムレータのタイムステップを設定する操作。</target>
        </trans-unit>
        <trans-unit id="b216bc043bf0865daa7a9f1e34fbf240fb88bb65" translate="yes" xml:space="preserve">
          <source>Operation was rejected because the system is not in a state to execute it.</source>
          <target state="translated">システムが実行できる状態ではないため、操作を拒否しました。</target>
        </trans-unit>
        <trans-unit id="0fe833131379f7149f6f75890d7b60087f1ee397" translate="yes" xml:space="preserve">
          <source>Operations are recorded if they are executed within this context manager and at least one of their inputs is being &quot;watched&quot;.</source>
          <target state="translated">操作は、このコンテキストマネージャ内で実行され、少なくとも1つの入力が &quot;監視 &quot;されている場合に記録されます。</target>
        </trans-unit>
        <trans-unit id="452adcb0c5eb3c57c14e11658d9251a00c2c91a1" translate="yes" xml:space="preserve">
          <source>Operations executed while this context manager is active will not be recorded on the tape. This is useful for reducing the memory used by tracing all computations.</source>
          <target state="translated">このコンテキスト・マネージャがアクティブな間に実行された操作は、テープに記録されません。これは、すべての計算をトレースして使用するメモリを削減するのに便利です。</target>
        </trans-unit>
        <trans-unit id="2ec755af8320a82448a2a6b17f8ba178dc018416" translate="yes" xml:space="preserve">
          <source>Operations for linear algebra.</source>
          <target state="translated">線形代数のための演算。</target>
        </trans-unit>
        <trans-unit id="334df36539c6e4cce07013b66310e92bcf787d75" translate="yes" xml:space="preserve">
          <source>Operations for manipulating the binary representations of integers.</source>
          <target state="translated">整数の2進表現を操作するための演算子.</target>
        </trans-unit>
        <trans-unit id="f5bad7dc8a50fe4eebd66d7fa1ad13d16ed2c8ca" translate="yes" xml:space="preserve">
          <source>Operations for working with string Tensors.</source>
          <target state="translated">文字列テンソルを扱うための操作。</target>
        </trans-unit>
        <trans-unit id="abc751fc0c326ebea8001fb31e16b8d8b1721d43" translate="yes" xml:space="preserve">
          <source>Operations for writing summary data, for use in analysis and visualization.</source>
          <target state="translated">分析や可視化に利用するためのサマリーデータを書き込むための操作。</target>
        </trans-unit>
        <trans-unit id="4b1cbaf378acc35ccbcbc07e1f83af9ab385dbbc" translate="yes" xml:space="preserve">
          <source>Operations that rely on a random seed actually derive it from two seeds: the global and operation-level seeds. This sets the global seed.</source>
          <target state="translated">ランダムシードに依存する操作は、実際にはグローバルシードと操作レベルシードの2つのシードからそれを導き出します。これはグローバルシードを設定します。</target>
        </trans-unit>
        <trans-unit id="2658e3359b4262ab02a920e6c5dec7fa284414b3" translate="yes" xml:space="preserve">
          <source>Operations that rely on a random seed actually derive it from two seeds: the graph-level and operation-level seeds. This sets the graph-level seed.</source>
          <target state="translated">ランダムシードに依存する操作は、実際にはグラフレベルシードと操作レベルシードの2つのシードからそれを導き出します。これはグラフレベルのシードを設定します。</target>
        </trans-unit>
        <trans-unit id="3d146f13f4d8e62dbc36974460cb3b660a9b1243" translate="yes" xml:space="preserve">
          <source>Operator adding dropout to inputs and outputs of the given cell.</source>
          <target state="translated">指定されたセルの入出力にドロップアウトを追加する演算子です。</target>
        </trans-unit>
        <trans-unit id="7bbab9f36e30418243383f860fc5513a33528162" translate="yes" xml:space="preserve">
          <source>Operator properties deduced from the spectrum.</source>
          <target state="translated">スペクトルから推論される演算子の性質。</target>
        </trans-unit>
        <trans-unit id="3385f7455d003dbc3d051edfc9c33774c251c0e5" translate="yes" xml:space="preserve">
          <source>Operator that ensures an RNNCell runs on a particular device.</source>
          <target state="translated">特定のデバイス上でRNNCellが確実に動作するようにするオペレータです。</target>
        </trans-unit>
        <trans-unit id="6301248b258d4f9a381794cda385e7cdd34b58d7" translate="yes" xml:space="preserve">
          <source>Operators for manipulating tensors.</source>
          <target state="translated">テンソルを操作するための演算子です。</target>
        </trans-unit>
        <trans-unit id="9ec35601b80aa19f3b4b7c5ddf43dd0a1d469e42" translate="yes" xml:space="preserve">
          <source>Operators that take advantage of special structure, while providing a consistent API to users.</source>
          <target state="translated">ユーザーに一貫したAPIを提供しながら、特殊な構造を利用する演算子。</target>
        </trans-unit>
        <trans-unit id="ac3910e0eb9ec4f52f53e69e4274f28e10a5c4a5" translate="yes" xml:space="preserve">
          <source>Ops and objects returned from a &lt;code&gt;model_fn&lt;/code&gt; and passed to &lt;code&gt;TPUEstimator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_fn&lt;/code&gt; から返され、TPUEstimatorに渡される &lt;code&gt;TPUEstimator&lt;/code&gt; とオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0e84fa506f27d9e235c1dd3f9433ae633ce53833" translate="yes" xml:space="preserve">
          <source>Ops and objects returned from a &lt;code&gt;model_fn&lt;/code&gt; and passed to an &lt;code&gt;Estimator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_fn&lt;/code&gt; から返され、 &lt;code&gt;Estimator&lt;/code&gt; に渡されるオペレーションとオブジェクト。</target>
        </trans-unit>
        <trans-unit id="40300876c268c41e58c76b564bf9d1e081234568" translate="yes" xml:space="preserve">
          <source>Ops related to Tensor Processing Units.</source>
          <target state="translated">テンソル処理ユニットに関連する操作</target>
        </trans-unit>
        <trans-unit id="5426d893d942b54b23899f742bab27b471bf0e32" translate="yes" xml:space="preserve">
          <source>Optimization parameters for Adagrad with TPU embeddings.</source>
          <target state="translated">TPUエンベッディングを用いたアダグラッドの最適化パラメータ。</target>
        </trans-unit>
        <trans-unit id="f512565257e0380650b3bc0fa1daf65251cf7470" translate="yes" xml:space="preserve">
          <source>Optimization parameters for Adagrad.</source>
          <target state="translated">アダグラッドの最適化パラメータ</target>
        </trans-unit>
        <trans-unit id="cbb2549250e3290a52381b55fea9c5ae2823fe3c" translate="yes" xml:space="preserve">
          <source>Optimization parameters for Adam with TPU embeddings.</source>
          <target state="translated">TPUエンベッディングを用いたアダムの最適化パラメータ</target>
        </trans-unit>
        <trans-unit id="a43d3c78a674d5aa846145fee1f1da005db6a080" translate="yes" xml:space="preserve">
          <source>Optimization parameters for Adam.</source>
          <target state="translated">アダムの最適化パラメータ</target>
        </trans-unit>
        <trans-unit id="867d697831ddd77fc7a7c3224735bac5910a9e0a" translate="yes" xml:space="preserve">
          <source>Optimization parameters for stochastic gradient descent for TPU embeddings.</source>
          <target state="translated">TPUエンベッディングのための確率的勾配降下のための最適化パラメータ.</target>
        </trans-unit>
        <trans-unit id="13592d7ff798a59baabd3e82f73d38f0549d8e7d" translate="yes" xml:space="preserve">
          <source>Optimization parameters for stochastic gradient descent.</source>
          <target state="translated">確率的勾配降下のための最適化パラメータ.</target>
        </trans-unit>
        <trans-unit id="38a277ebb3b736522bf69478e7a2188cbb37a6ae" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Adadelta algorithm.</source>
          <target state="translated">Adadelta アルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="228602481c7f2e8ba729c600e5efed58674b1fed" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Adagrad algorithm.</source>
          <target state="translated">Adagradアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="789cbde5dc49057407e9d1ed70e7ded6a7450f2d" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Adam algorithm.</source>
          <target state="translated">アダムアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="c8794e9a41cd3b971d66476e5a3b1b251ef019f5" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Adamax algorithm.</source>
          <target state="translated">Adamaxアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="697c1368bc112191e0cc03d43870878745b0d2ba" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the FTRL algorithm.</source>
          <target state="translated">FTRLアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="ed9d476d0a7d49448991afea7571cbf4e700af52" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Momentum algorithm.</source>
          <target state="translated">Momentumアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="31b7076e799b416e0580c81190655c33e247eed7" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the NAdam algorithm.</source>
          <target state="translated">NAdamアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="6d5b5b1196bc3b128f28d763f02c2404ecd95a58" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the Proximal Adagrad algorithm.</source>
          <target state="translated">Proximal Adagradアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="a3d453c733beca74a5f8203eff5967d046d0d9b4" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the RMSProp algorithm.</source>
          <target state="translated">RMSPropアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="36977c109aa83bcecbfac2cbcfdcd95a074b5ba0" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the RMSprop algorithm.</source>
          <target state="translated">RMSpropアルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="5520e1fae29cfb2fdac0cb031d6697d8395de04a" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the gradient descent algorithm.</source>
          <target state="translated">勾配降下アルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="a499daeedc601ee747fb3c542d345f02f8c35525" translate="yes" xml:space="preserve">
          <source>Optimizer that implements the proximal gradient descent algorithm.</source>
          <target state="translated">近接勾配降下アルゴリズムを実装したオプティマイザ。</target>
        </trans-unit>
        <trans-unit id="35756709959d376bb981bfeb576aab77c9979a59" translate="yes" xml:space="preserve">
          <source>Option Builder for Profiling API.</source>
          <target state="translated">プロファイリングAPIのオプションビルダ。</target>
        </trans-unit>
        <trans-unit id="986cb69e5478bc33b6834663afe0c7b25ae14ce7" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;../../../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; for evaluation.</source>
          <target state="translated">評価のためのオプションの&lt;a href=&quot;../../../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41cbfe393a53582d133cd8e35ebd371a2dee49f4" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;../../../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; for training.</source>
          <target state="translated">トレーニング用のオプションの&lt;a href=&quot;../../../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ce28161a073666ce7000ca9d585a27514f224cb" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; for evaluation.</source>
          <target state="translated">評価のためのオプションの&lt;a href=&quot;../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acfde78a85ff6cc95839c0d5fe29210952e75e03" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; for training.</source>
          <target state="translated">トレーニング用のオプションの&lt;a href=&quot;../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19a4bff99e03cc997da4af3e46bde75a615c671d" translate="yes" xml:space="preserve">
          <source>Optional regularizer function for the output of this layer.</source>
          <target state="translated">このレイヤーの出力に対するオプションの正則化関数。</target>
        </trans-unit>
        <trans-unit id="f2523f4dd1ae30900caaf660f5bf2122a2ae1805" translate="yes" xml:space="preserve">
          <source>Optionally writes it to filename.</source>
          <target state="translated">オプションでファイル名に書き込みます。</target>
        </trans-unit>
        <trans-unit id="79a83a8d22234adc2ac6cde80708fded13d8fa4c" translate="yes" xml:space="preserve">
          <source>Optionally, a normalizer function (or lambda) can be given. This will be called on every slice of data retrieved.</source>
          <target state="translated">オプションで、正規化関数(またはラムダ)を与えることができます。これは、取得したデータのスライスごとに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e315d4a8731e77481f7905dbd6a2d484a8569ad1" translate="yes" xml:space="preserve">
          <source>Optionally, pass &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;tensor_dtype&lt;/code&gt; for shape and type checking, otherwise, these are inferred.</source>
          <target state="translated">必要に応じて、形状と型のチェックのために &lt;code&gt;shape&lt;/code&gt; と &lt;code&gt;tensor_dtype&lt;/code&gt; を渡します。そうでない場合、これらは推測されます。</target>
        </trans-unit>
        <trans-unit id="678af0d4e07447d8b3a11706bc09d72ec249321b" translate="yes" xml:space="preserve">
          <source>Optionally, we allow callers to specify the task_type, and task_id, for if they want to target a specific TensorFlow process to query the number of accelerators. This is to support heterogenous environments, where the number of accelerators cores per host is different.</source>
          <target state="translated">オプションで、呼び出し元が特定のTensorFlowプロセスをターゲットにしてアクセラレータの数を照会したい場合のために、task_typeとtask_idを指定できるようにしています。これは、ホストごとにアクセラレータコアの数が異なる異種環境をサポートするためです。</target>
        </trans-unit>
        <trans-unit id="475db5847691eb104de650ad05e4ac951995b1b3" translate="yes" xml:space="preserve">
          <source>Options for saving to SavedModel.</source>
          <target state="translated">SavedModelに保存するためのオプション。</target>
        </trans-unit>
        <trans-unit id="d6427e4a463bcd04628d0ada2e0ec954a0ba2342" translate="yes" xml:space="preserve">
          <source>Options only effect TFRecordWriter when compression_type is not &lt;code&gt;None&lt;/code&gt;. Documentation, details, and defaults can be found in &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/lib/io/zlib_compression_options.h&quot;&gt;&lt;code&gt;zlib_compression_options.h&lt;/code&gt;&lt;/a&gt; and in the &lt;a href=&quot;http://www.zlib.net/manual.html&quot;&gt;zlib manual&lt;/a&gt;. Leaving an option as &lt;code&gt;None&lt;/code&gt; allows C++ to set a reasonable default.</source>
          <target state="translated">オプションは、compression_typeが &lt;code&gt;None&lt;/code&gt; でない場合にのみTFRecordWriterに影響します。ドキュメント、詳細、およびデフォルトは、&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/lib/io/zlib_compression_options.h&quot;&gt; &lt;code&gt;zlib_compression_options.h&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;http://www.zlib.net/manual.html&quot;&gt;zlibマニュアルにあります&lt;/a&gt;。オプションを &lt;code&gt;None&lt;/code&gt; のままにすると、C ++は適切なデフォルトを設定できます。</target>
        </trans-unit>
        <trans-unit id="537a0f6820a26091ed01e538358ddfb82e2f72a0" translate="yes" xml:space="preserve">
          <source>Options used for manipulating TFRecord files.</source>
          <target state="translated">TFRecord ファイルを操作するためのオプション。</target>
        </trans-unit>
        <trans-unit id="db88aa6cb830fd3b062fef700be66ff819b6332a" translate="yes" xml:space="preserve">
          <source>Options used to profile float operations.</source>
          <target state="translated">浮動小数点演算のプロファイリングに使用されるオプション。</target>
        </trans-unit>
        <trans-unit id="88887a79cbe617f9d5a3829c12afd3898d12b713" translate="yes" xml:space="preserve">
          <source>Options used to profile trainable variable parameters.</source>
          <target state="translated">訓練可能な変数パラメータのプロファイルを作成するために使用されるオプション。</target>
        </trans-unit>
        <trans-unit id="539bf8f885a2d4fa90c73bd6a7df14928d2a7f4b" translate="yes" xml:space="preserve">
          <source>Opts out of control flow v2.</source>
          <target state="translated">制御フロー v2 をオプトアウトします。</target>
        </trans-unit>
        <trans-unit id="165798a51709f0e015f12bc0c42a8e24fd5dc6b7" translate="yes" xml:space="preserve">
          <source>Opts out of resource variables. (deprecated)</source>
          <target state="translated">リソース変数をオプトアウトします。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="9d2b9dcda3fb7156d6c1d877823195de211ade0a" translate="yes" xml:space="preserve">
          <source>Or, to remove specific size 1 dimensions:</source>
          <target state="translated">または、特定のサイズ1の寸法を削除する。</target>
        </trans-unit>
        <trans-unit id="8e2451f0a5ee58ed76a81d985febb2e7cfdd99e6" translate="yes" xml:space="preserve">
          <source>Order the displayed profiler nodes based on a attribute.</source>
          <target state="translated">属性に基づいて表示されるプロファイラ・ノードを並べ替えます。</target>
        </trans-unit>
        <trans-unit id="5fb529f0be8e20697731cd92c7b05bd097c0330b" translate="yes" xml:space="preserve">
          <source>Original paper: Wang, Zhou, Eero P. Simoncelli, and Alan C. Bovik. &quot;Multiscale structural similarity for image quality assessment.&quot; Signals, Systems and Computers, 2004.</source>
          <target state="translated">原著論文。画質評価のためのマルチスケール構造相似性の評価」をテーマにした研究を行っています。&quot;画像品質評価のためのマルチスケール構造類似性&quot; シグナル、システム、コンピュータ、2004年</target>
        </trans-unit>
        <trans-unit id="a78dd6a466e9fed6c3876adb70733c880a1ba7ec" translate="yes" xml:space="preserve">
          <source>Other Members</source>
          <target state="translated">その他のメンバー</target>
        </trans-unit>
        <trans-unit id="3192178575369721530aa9b513196932a2f2a179" translate="yes" xml:space="preserve">
          <source>Other arguments are not automatically casted for technical reasons, but this may change in a future minor release.</source>
          <target state="translated">その他の引数は技術的な理由で自動的にはキャストされませんが、将来のマイナーリリースで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="0ac3c9882a4b70189ad1bfa57e91f5a096b4d423" translate="yes" xml:space="preserve">
          <source>Other examples:</source>
          <target state="translated">その他の例。</target>
        </trans-unit>
        <trans-unit id="a2b5c9541b97f831cc7ec96bc421fb3a1a503aa5" translate="yes" xml:space="preserve">
          <source>Otherwise a different dropout mask is applied at every time step.</source>
          <target state="translated">それ以外の場合は、毎回異なるドロップアウトマスクが適用されます。</target>
        </trans-unit>
        <trans-unit id="9a6a78864c03b57baa86e466bc1a8d4775d590fa" translate="yes" xml:space="preserve">
          <source>Otherwise this returns &lt;code&gt;fn(var, *args, **kwargs)&lt;/code&gt; colocated with &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合、このリターンは &lt;code&gt;fn(var, *args, **kwargs)&lt;/code&gt; と同じ場所に配置 &lt;code&gt;var&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d9bc18b21194155ea10d0ea79b6439d4c3e5a90" translate="yes" xml:space="preserve">
          <source>Otherwise,</source>
          <target state="translated">Otherwise,</target>
        </trans-unit>
        <trans-unit id="02f8d11c15aabd8b03db9f57d0e803f0b0478037" translate="yes" xml:space="preserve">
          <source>Otherwise, &quot;shape&quot; specifies the tensor's shape and the numpy array can not have more elements than what &quot;shape&quot; specifies.</source>
          <target state="translated">そうでなければ、&quot;shape &quot;はテンソルの形状を指定し、numpy配列は &quot;shape &quot;が指定する以上の要素を持つことはできません。</target>
        </trans-unit>
        <trans-unit id="62151ece22467a47c21e3b9ba26d5c77182e9559" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;M&lt;/code&gt; is treated as the number of diagonals for the matrix in the same batch (&lt;code&gt;M = k[1]-k[0]+1&lt;/code&gt;), and the output tensor is:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;M&lt;/code&gt; は同じバッチ内の行列の対角要素の数として扱われ（ &lt;code&gt;M = k[1]-k[0]+1&lt;/code&gt; ）、出力テンソルは次のようになります。</target>
        </trans-unit>
        <trans-unit id="f310e5b730b8c6280abb76989919bbfc78fc51eb" translate="yes" xml:space="preserve">
          <source>Otherwise, if you are implementing a ClusterResolver that will only work in open-source TensorFlow, you do not need to implement this property.</source>
          <target state="translated">そうでなければ、オープンソースのTensorFlowでのみ動作するClusterResolverを実装している場合は、このプロパティを実装する必要はありません。</target>
        </trans-unit>
        <trans-unit id="efd8f73f99ac3ecf188709c3043d9fc7417ddd48" translate="yes" xml:space="preserve">
          <source>Otherwise, it follows: &lt;code&gt;f(x) = max_value&lt;/code&gt; for &lt;code&gt;x &amp;gt;= max_value&lt;/code&gt;, &lt;code&gt;f(x) = x&lt;/code&gt; for &lt;code&gt;threshold &amp;lt;= x &amp;lt; max_value&lt;/code&gt;, &lt;code&gt;f(x) = alpha * (x - threshold)&lt;/code&gt; otherwise.</source>
          <target state="translated">それ以外の場合は、次のようになります。それ以外の場合は、 &lt;code&gt;f(x) = max_value&lt;/code&gt; for &lt;code&gt;x &amp;gt;= max_value&lt;/code&gt; 、 &lt;code&gt;f(x) = x&lt;/code&gt; for &lt;code&gt;threshold &amp;lt;= x &amp;lt; max_value&lt;/code&gt; 、 &lt;code&gt;f(x) = alpha * (x - threshold)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4bbb0712712167bd33af5b3a5891d4689d133b2" translate="yes" xml:space="preserve">
          <source>Otherwise, it follows: &lt;code&gt;f(x) = max_value&lt;/code&gt; for &lt;code&gt;x &amp;gt;= max_value&lt;/code&gt;, &lt;code&gt;f(x) = x&lt;/code&gt; for &lt;code&gt;threshold &amp;lt;= x &amp;lt; max_value&lt;/code&gt;, &lt;code&gt;f(x) = negative_slope * (x - threshold)&lt;/code&gt; otherwise.</source>
          <target state="translated">それ以外の場合は、以下： &lt;code&gt;f(x) = max_value&lt;/code&gt; 用 &lt;code&gt;x &amp;gt;= max_value&lt;/code&gt; 、 &lt;code&gt;f(x) = x&lt;/code&gt; のための &lt;code&gt;threshold &amp;lt;= x &amp;lt; max_value&lt;/code&gt; 、 &lt;code&gt;f(x) = negative_slope * (x - threshold)&lt;/code&gt; さもなければ。</target>
        </trans-unit>
        <trans-unit id="8e7aacaffe75d2dbbbcd7f460de5f4fe2952e78a" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns:</source>
          <target state="translated">それ以外の場合は戻ります。</target>
        </trans-unit>
        <trans-unit id="ed51b1936fa692ecd8ba4a4eac38810299ce713c" translate="yes" xml:space="preserve">
          <source>Otherwise, the output tensor has rank &lt;code&gt;r&lt;/code&gt; with dimensions &lt;code&gt;[I, J, ..., L, num_diags, max_diag_len]&lt;/code&gt; with values:</source>
          <target state="translated">そうでない場合、出力テンソルは次の値を持つ次元 &lt;code&gt;[I, J, ..., L, num_diags, max_diag_len]&lt;/code&gt; ランク &lt;code&gt;r&lt;/code&gt; を持ちます。</target>
        </trans-unit>
        <trans-unit id="43c5911c1215d5cf93a298642e054ee904b2b5c1" translate="yes" xml:space="preserve">
          <source>Otherwise, use &lt;a href=&quot;strategy#scope&quot;&gt;&lt;code&gt;tf.distribute.Strategy.scope&lt;/code&gt;&lt;/a&gt; to specify that a strategy should be used when building an executing your model. (This puts you in the &quot;cross-replica context&quot; for this strategy, which means the strategy is put in control of things like variable placement.)</source>
          <target state="translated">それ以外の場合は、&lt;a href=&quot;strategy#scope&quot;&gt; &lt;code&gt;tf.distribute.Strategy.scope&lt;/code&gt; &lt;/a&gt;を使用して、モデルの実行を構築するときに戦略を使用するように指定します。（これにより、この戦略の「クロスレプリカコンテキスト」に置かれます。つまり、戦略は変数配置などの制御下に置かれます。）</target>
        </trans-unit>
        <trans-unit id="9253e173b1bc501973e03f3abc4a14683009b6a8" translate="yes" xml:space="preserve">
          <source>Our Conv3D implements a form of cross-correlation.</source>
          <target state="translated">私たちのConv3Dは、相互相関を実装しています。</target>
        </trans-unit>
        <trans-unit id="c820c1824b0d4014437c0f8234ea15ebb6a34191" translate="yes" xml:space="preserve">
          <source>Output mask tensor (potentially None) or list of output mask tensors.</source>
          <target state="translated">出力マスクテンソル(潜在的には None)または出力マスクテンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="6152f9850ba1d45b5150190e0f533245bfd9605a" translate="yes" xml:space="preserve">
          <source>Output shape with &lt;code&gt;'SAME'&lt;/code&gt; padding is:</source>
          <target state="translated">&lt;code&gt;'SAME'&lt;/code&gt; パディングの出力形状は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cfeda9dec84808da1f0fcb69bcd41eaa4ffe0df9" translate="yes" xml:space="preserve">
          <source>Output shape, as an integer shape tuple (or list of shape tuples, one tuple per output tensor).</source>
          <target state="translated">整数の形状タプル(または形状タプルのリスト、出力テンソルごとに1つのタプル)としての出力形状。</target>
        </trans-unit>
        <trans-unit id="a9a24239108a80c9bd1ddee4d05e1d4434c62d89" translate="yes" xml:space="preserve">
          <source>Output shape:</source>
          <target state="translated">出力形状。</target>
        </trans-unit>
        <trans-unit id="15d6c297fac958e9c4e368c0a0d23d8b11b2bd61" translate="yes" xml:space="preserve">
          <source>Output strings (e.g. filenames) to a queue for an input pipeline. (deprecated)</source>
          <target state="translated">入力パイプラインのキューに文字列 (ファイル名など)を出力します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="2c0723dbf74f130716e7394bc11b3c2e3b26d9ff" translate="yes" xml:space="preserve">
          <source>Output tensor or list of output tensors.</source>
          <target state="translated">出力テンソルまたは出力テンソルのリスト。</target>
        </trans-unit>
        <trans-unit id="d0b2bf436e59c178c28e92f2f7de3a162823c53d" translate="yes" xml:space="preserve">
          <source>Output tensor(s).</source>
          <target state="translated">出力テンソル(複数可)。</target>
        </trans-unit>
        <trans-unit id="808a4744a4b5ed84b4255cf762e6886f621ccd16" translate="yes" xml:space="preserve">
          <source>Output tensor.</source>
          <target state="translated">出力テンソル。</target>
        </trans-unit>
        <trans-unit id="b7e36ad229e03fb65f367301b05bc0bea6f36222" translate="yes" xml:space="preserve">
          <source>Output the rows of &lt;code&gt;input_tensor&lt;/code&gt; to a queue for an input pipeline. (deprecated)</source>
          <target state="translated">&lt;code&gt;input_tensor&lt;/code&gt; の行を入力パイプラインのキューに出力します。（非推奨）</target>
        </trans-unit>
        <trans-unit id="1546fa0eff47e4dbe22051780f97b6c4a3c0f5b4" translate="yes" xml:space="preserve">
          <source>Output values as Numpy arrays.</source>
          <target state="translated">値をNumpy配列として出力します。</target>
        </trans-unit>
        <trans-unit id="aa498304d34c3c806042d023d0f6d381286ae0e9" translate="yes" xml:space="preserve">
          <source>Output will always be a list of tensors (potentially with 1 element).</source>
          <target state="translated">出力は常にテンソルのリストになります(1つの要素を持つ可能性があります)。</target>
        </trans-unit>
        <trans-unit id="459a4a6e69d232c86f9d33da550acb7bea4f199d" translate="yes" xml:space="preserve">
          <source>Output will be in the format of a flagfile.</source>
          <target state="translated">出力はフラグファイルの形式になります。</target>
        </trans-unit>
        <trans-unit id="84b894c5485df582ef7b778f6dd5481f19428c49" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer containing a single scalar value.</source>
          <target state="translated">単一のスカラー値を含む &lt;code&gt;Summary&lt;/code&gt; プロトコルバッファーを出力します。</target>
        </trans-unit>
        <trans-unit id="9b4c117216a88cdb391e417cac827622c9e8ad4a" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with a histogram.</source>
          <target state="translated">ヒストグラム付きの &lt;code&gt;Summary&lt;/code&gt; プロトコルバッファを出力します。</target>
        </trans-unit>
        <trans-unit id="258b999b9895710d3f0c5d94be3215526bce5220" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with a serialized tensor.proto.</source>
          <target state="translated">シリアル化されたtensor.protoで &lt;code&gt;Summary&lt;/code&gt; プロトコルバッファーを出力します。</target>
        </trans-unit>
        <trans-unit id="5111142ad4bfa812cc22dc0ff4124c2a320ccb18" translate="yes" xml:space="preserve">
          <source>Outputs a copy of &lt;code&gt;images&lt;/code&gt; but draws on top of the pixels zero or more bounding boxes specified by the locations in &lt;code&gt;boxes&lt;/code&gt;. The coordinates of the each bounding box in &lt;code&gt;boxes&lt;/code&gt; are encoded as &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt;. The bounding box coordinates are floats in &lt;code&gt;[0.0, 1.0]&lt;/code&gt; relative to the width and height of the underlying image.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; コピーを出力しますが、 &lt;code&gt;boxes&lt;/code&gt; の位置で指定されたゼロ個以上の境界ボックスのピクセルの上に描画します。各境界ボックスの座標 &lt;code&gt;boxes&lt;/code&gt; として符号化される &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt; 。境界ボックスの座標は、基になる画像の幅と高さを基準にした &lt;code&gt;[0.0, 1.0]&lt;/code&gt; 浮動小数点です。</target>
        </trans-unit>
        <trans-unit id="668631f3912c1e18efb54a7b560cc5d45ae6ec89" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same &lt;code&gt;DType&lt;/code&gt; and rank as &lt;code&gt;images&lt;/code&gt;. The size of the last dimension of the output is 1, containing the Grayscale value of the pixels.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; と同じ &lt;code&gt;DType&lt;/code&gt; およびランクのテンソルを出力します。出力の最後の次元のサイズは1で、ピクセルのグレースケール値が含まれています。</target>
        </trans-unit>
        <trans-unit id="9bbebc3e5d5bcfded00e308c104f362ca49571b5" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same &lt;code&gt;DType&lt;/code&gt; and rank as &lt;code&gt;images&lt;/code&gt;. The size of the last dimension of the output is 3, containing the RGB value of the pixels. The input images' last dimension must be size 1.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; と同じ &lt;code&gt;DType&lt;/code&gt; およびランクのテンソルを出力します。出力の最後の次元のサイズは3で、ピクセルのRGB値が含まれています。入力画像の最後の次元はサイズ1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c83fa41c7e40559f06112bd0323a249317a8dd6d" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the HSV value of the pixels. The output is only well defined if the value in &lt;code&gt;images&lt;/code&gt; are in &lt;code&gt;[0,1]&lt;/code&gt;.</source>
          <target state="translated">ピクセルのHSV値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。 &lt;code&gt;images&lt;/code&gt; の値が &lt;code&gt;[0,1]&lt;/code&gt; にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="1cf5a3618984c2e07b3526444a772b72864c1227" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the RGB value of the pixels. The output is only well defined if the Y value in images are in [0,1], I value are in [-0.5957,0.5957] and Q value are in [-0.5226,0.5226].</source>
          <target state="translated">ピクセルのRGB値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。画像のY値が[0,1]にあり、I値が[-0.5957,0.5957]にあり、Q値が[-0.5226,0.5226]にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="a86130d45595c9097071a1ba766b25f42cf3ef42" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the RGB value of the pixels. The output is only well defined if the Y value in images are in [0,1], U and V value are in [-0.5,0.5].</source>
          <target state="translated">ピクセルのRGB値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。画像のY値が[0,1]にあり、UおよびV値が[-0.5,0.5]にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="76981549c7fec641d47750067ffb241e70ad0171" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the RGB value of the pixels. The output is only well defined if the value in &lt;code&gt;images&lt;/code&gt; are in &lt;code&gt;[0,1]&lt;/code&gt;.</source>
          <target state="translated">ピクセルのRGB値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。 &lt;code&gt;images&lt;/code&gt; の値が &lt;code&gt;[0,1]&lt;/code&gt; にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="08581f37980a3d062bc9f295a7cfcac5d210fb61" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the YIQ value of the pixels. The output is only well defined if the value in images are in [0,1].</source>
          <target state="translated">ピクセルのYIQ値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。画像の値が[0,1]にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="4a4442350e397cbcce7054ea2ac6fd02fe315af9" translate="yes" xml:space="preserve">
          <source>Outputs a tensor of the same shape as the &lt;code&gt;images&lt;/code&gt; tensor, containing the YUV value of the pixels. The output is only well defined if the value in images are in [0,1].</source>
          <target state="translated">ピクセルのYUV値を含む、 &lt;code&gt;images&lt;/code&gt; テンソルと同じ形状のテンソルを出力します。画像の値が[0,1]にある場合にのみ、出力が適切に定義されます。</target>
        </trans-unit>
        <trans-unit id="5ade76775de4ea772e67da87c9ba5c3ece405c58" translate="yes" xml:space="preserve">
          <source>Outputs deterministic pseudorandom values from a normal distribution.</source>
          <target state="translated">正規分布から決定論的な擬似乱数値を出力します。</target>
        </trans-unit>
        <trans-unit id="ee5cf5043bce3034a4a5e92e2857e44f2db9536a" translate="yes" xml:space="preserve">
          <source>Outputs deterministic pseudorandom values from a uniform distribution.</source>
          <target state="translated">一様分布から決定論的な擬似乱数値を出力します。</target>
        </trans-unit>
        <trans-unit id="c242af46ccb7de7ecb1298fe76f77d9bbdb78a9f" translate="yes" xml:space="preserve">
          <source>Outputs deterministic pseudorandom values, truncated normally distributed.</source>
          <target state="translated">正規分布で切り捨てられた決定論的な擬似乱数値を出力します。</target>
        </trans-unit>
        <trans-unit id="d0782526ab3b14806226c710829d1cb9c6f66e64" translate="yes" xml:space="preserve">
          <source>Outputs flag documentation in XML format.</source>
          <target state="translated">フラグのドキュメントをXML形式で出力します。</target>
        </trans-unit>
        <trans-unit id="1fa399f632734f4b6a11e6ef1ada3a61297a9f3e" translate="yes" xml:space="preserve">
          <source>Outputs random values from a binomial distribution.</source>
          <target state="translated">二項分布からランダムな値を出力します。</target>
        </trans-unit>
        <trans-unit id="ec63bf4485d414e6163c55ddc56a83296586ce72" translate="yes" xml:space="preserve">
          <source>Outputs random values from a normal distribution.</source>
          <target state="translated">正規分布からランダムな値を出力します。</target>
        </trans-unit>
        <trans-unit id="084a30872a4a669f61e08fa9cbc6f3a9e6586693" translate="yes" xml:space="preserve">
          <source>Outputs random values from a truncated normal distribution.</source>
          <target state="translated">切り捨てられた正規分布からランダムな値を出力します。</target>
        </trans-unit>
        <trans-unit id="29c9347524deebd60dd0905d79aa277b84c0b951" translate="yes" xml:space="preserve">
          <source>Outputs random values from a uniform distribution.</source>
          <target state="translated">一様分布からランダムな値を出力します。</target>
        </trans-unit>
        <trans-unit id="ed8c4f10852ab0e3efb30051d3c359f47a098992" translate="yes" xml:space="preserve">
          <source>Outputs repeated classes with blanks in between, but generally does not require the decoder to collapse/merge repeated classes.</source>
          <target state="translated">ブランクを挟んで繰り返されるクラスを出力しますが、一般的にはデコーダが繰り返されるクラスを折り畳んだり、マージしたりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="d31f8dc807bfc42417be1acab0b5f7fcf17bda9e" translate="yes" xml:space="preserve">
          <source>Outputs the contents of &lt;code&gt;image&lt;/code&gt; flipped along the height dimension.</source>
          <target state="translated">高さ寸法に沿って反転された &lt;code&gt;image&lt;/code&gt; の内容を出力します。</target>
        </trans-unit>
        <trans-unit id="b10c32ab16c8b48433a818f323677463605a5aa8" translate="yes" xml:space="preserve">
          <source>Outputs the contents of &lt;code&gt;image&lt;/code&gt; flipped along the width dimension.</source>
          <target state="translated">幅寸法に沿って反転された &lt;code&gt;image&lt;/code&gt; の内容を出力します。</target>
        </trans-unit>
        <trans-unit id="952c97f90f049f06bcef60e45f9e85e97d71d218" translate="yes" xml:space="preserve">
          <source>Outside compilation should be called inside TPUReplicateContext. That is, &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; should be called inside a function that is passed to &lt;code&gt;tpu.split_compile_and_replicate()&lt;/code&gt; -- this is implied when outside compilation is invoked inside a function passed to TPUStrategy &lt;code&gt;experimental_run_v2()&lt;/code&gt;. If invoked outside of TPUReplicateContext, then this simply returns the result of &lt;code&gt;computation&lt;/code&gt;, and therefore, would be a no-op. Note that outside compilation is different from &lt;code&gt;tf.distribute.experimental.TPUStrategy.merge_call()&lt;/code&gt; as logic in outside compilation is replicated and executed separately for each replica. On the other hand, &lt;code&gt;merge_call()&lt;/code&gt; requires a &lt;code&gt;merge_fn&lt;/code&gt; to aggregate the inputs from different replicas and is executed only once.</source>
          <target state="translated">外部コンパイルはTPUReplicateContext内で呼び出す必要があります。すなわち、 &lt;code&gt;tf.tpu.outside_compilation()&lt;/code&gt; に渡される関数内で呼び出さなければならない &lt;code&gt;tpu.split_compile_and_replicate()&lt;/code&gt; -外部コンパイルがTPUStrategyのに渡される関数内呼び出されたときにこれが暗示される &lt;code&gt;experimental_run_v2()&lt;/code&gt; 。TPUReplicateContextの外部で呼び出された場合、これは単に &lt;code&gt;computation&lt;/code&gt; 結果を返すため、何も行われません。外部コンパイルのロジックはレプリカごとに個別に複製および実行されるため、外部コンパイルは &lt;code&gt;tf.distribute.experimental.TPUStrategy.merge_call()&lt;/code&gt; とは異なることに注意してください。一方、 &lt;code&gt;merge_call()&lt;/code&gt; には &lt;code&gt;merge_fn&lt;/code&gt; が必要です 異なるレプリカからの入力を集約し、一度だけ実行されます。</target>
        </trans-unit>
        <trans-unit id="f984bbbabec17bab87670ed4d910a963c7d9cb28" translate="yes" xml:space="preserve">
          <source>Overfit and underfit</source>
          <target state="translated">オーバーフィットとアンダーフィット</target>
        </trans-unit>
        <trans-unit id="1b7c4b73b4e282fd39fe2dd1699c7021d30f7bbd" translate="yes" xml:space="preserve">
          <source>Overfitting: In order to avoid overfitting, it is recommended to set up the training &lt;code&gt;input_fn&lt;/code&gt; to shuffle the training data properly.</source>
          <target state="translated">過剰適合：過剰適合を回避するために、トレーニング &lt;code&gt;input_fn&lt;/code&gt; を設定してトレーニングデータを適切にシャッフルすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ea7ebe71f80c18db8c5c627b2e3cfbe5beb8d34a" translate="yes" xml:space="preserve">
          <source>Overload for Tensor.&lt;strong&gt;getitem&lt;/strong&gt;.</source>
          <target state="translated">Tensorのオーバーロード。&lt;strong&gt;getitem&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="17ea8d1c1a13e516f7e8377406d02ac177af6484" translate="yes" xml:space="preserve">
          <source>Overrides the default adapt method to apply relevant preprocessing to the inputs before passing to the combiner.</source>
          <target state="translated">コンバイナに渡す前に入力に関連する前処理を適用するためのデフォルトの adapt メソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="97c1ec3f4fd62592a53aa7f7d5c4006a5e2ce820" translate="yes" xml:space="preserve">
          <source>Overrides the shape for this variable.</source>
          <target state="translated">この変数の形状をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="c86ec867fff8ca5a27c91bfd42d1d98a0348f32d" translate="yes" xml:space="preserve">
          <source>Overriding this method is useful for subclass implementers.</source>
          <target state="translated">このメソッドをオーバーライドすると、サブクラスの実装者にとって便利です。</target>
        </trans-unit>
        <trans-unit id="3f78a8b4cc13847389684d2c79251ec53e2ab06f" translate="yes" xml:space="preserve">
          <source>P represents a permutation matrix encoded as a list of indices each between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;M-1&lt;/code&gt;, inclusive. If P_mat denotes the permutation matrix corresponding to P, then the L, U and P satisfies P_mat * input = L * U.</source>
          <target state="translated">Pは、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;M-1&lt;/code&gt; までのインデックスのリストとしてエンコードされた順列行列を表します。P_matがPに対応する置換行列を表す場合、L、U、およびPはP_mat * input = L * Uを満たします。</target>
        </trans-unit>
        <trans-unit id="c603b603525a10df94e64bf31dbd3b4775811230" translate="yes" xml:space="preserve">
          <source>PNG-encode an image.</source>
          <target state="translated">画像をPNGでエンコードします。</target>
        </trans-unit>
        <trans-unit id="b3d47c033aba2ba1bed06450f77faeca66c2e765" translate="yes" xml:space="preserve">
          <source>Packs the list of tensors in &lt;code&gt;values&lt;/code&gt; into a tensor with rank one higher than each tensor in &lt;code&gt;values&lt;/code&gt;, by packing them along the &lt;code&gt;axis&lt;/code&gt; dimension. Given a list of length &lt;code&gt;N&lt;/code&gt; of tensors of shape &lt;code&gt;(A, B, C)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; のテンソルのリストを、 &lt;code&gt;axis&lt;/code&gt; 次元に沿ってパックすることにより、 &lt;code&gt;values&lt;/code&gt; 各テンソルより1つ高いランクのテンソルにパックします。形状 &lt;code&gt;(A, B, C)&lt;/code&gt; のテンソルの長さ &lt;code&gt;N&lt;/code&gt; のリストが与えられます。</target>
        </trans-unit>
        <trans-unit id="a61ebffec3ca5fb2b53ada1239c3d86c9bdd765a" translate="yes" xml:space="preserve">
          <source>Packs the list of tensors in &lt;code&gt;values&lt;/code&gt; into a tensor with rank one higher than each tensor in &lt;code&gt;values&lt;/code&gt;, by packing them along the first dimension. Given a list of length &lt;code&gt;N&lt;/code&gt; of tensors of shape &lt;code&gt;(A, B, C)&lt;/code&gt;; the &lt;code&gt;output&lt;/code&gt; tensor will have the shape &lt;code&gt;(N, A, B, C)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; のテンソルのリストを、最初の次元に沿ってパックすることにより、 &lt;code&gt;values&lt;/code&gt; 各テンソルより1つ高いランクのテンソルにパックします。形状 &lt;code&gt;(A, B, C)&lt;/code&gt; のテンソルの長さ &lt;code&gt;N&lt;/code&gt; のリストが与えられます。 &lt;code&gt;output&lt;/code&gt; テンソルの形状があります &lt;code&gt;(N, A, B, C)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b257bafbec1e6343fa42eac77dd3d7927c7bf57" translate="yes" xml:space="preserve">
          <source>Pad &lt;code&gt;image&lt;/code&gt; with zeros to the specified &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">パッド &lt;code&gt;image&lt;/code&gt; 指定にゼロと &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7c0215689fd7570e4013317a0b324f327a6c8b1" translate="yes" xml:space="preserve">
          <source>Pads 5D tensor with zeros along the depth, height, width dimensions.</source>
          <target state="translated">深さ、高さ、幅の寸法に沿ってゼロを持つ5Dテンソルをパッドします。</target>
        </trans-unit>
        <trans-unit id="eca900e368882080d8b473fb9393c92e6b238c49" translate="yes" xml:space="preserve">
          <source>Pads a tensor.</source>
          <target state="translated">テンソルをパッドします。</target>
        </trans-unit>
        <trans-unit id="19c65569df0e485569bf7277ede4caaff2076749" translate="yes" xml:space="preserve">
          <source>Pads sequences to the same length.</source>
          <target state="translated">シーケンスを同じ長さにパッドします。</target>
        </trans-unit>
        <trans-unit id="03cc9b9ff08d605c15c34962c8fb96e90a0cbe94" translate="yes" xml:space="preserve">
          <source>Pads the 2nd and 3rd dimensions of a 4D tensor.</source>
          <target state="translated">4Dテンソルの2次元と3次元をパッドします。</target>
        </trans-unit>
        <trans-unit id="30451e45a445c353da9d8976e896a8a73d46ebaf" translate="yes" xml:space="preserve">
          <source>Pads the middle dimension of a 3D tensor.</source>
          <target state="translated">3次元テンソルの中間次元をパッドします。</target>
        </trans-unit>
        <trans-unit id="cafe015cea917810504183c3f3755e2923bdd163" translate="yes" xml:space="preserve">
          <source>Pads these dimensions with respectively &quot;padding[0]&quot;, &quot;padding[1]&quot; and &quot;padding[2]&quot; zeros left and right.</source>
          <target state="translated">padding[0]、padding[1]、padding[2]のそれぞれの寸法を左右にゼロでパディングします。</target>
        </trans-unit>
        <trans-unit id="ba2033addf18e9b79fd595d2cb00b981d51d008e" translate="yes" xml:space="preserve">
          <source>Pair of tensors (dy, dx) holding the vertical and horizontal image gradients (1-step finite difference).</source>
          <target state="translated">垂直方向と水平方向の画像勾配を保持するテンソル(dy,dx)のペア(1段階の有限差分)。</target>
        </trans-unit>
        <trans-unit id="0a77bea52ee03ba3cf375e16d331dffd31ba0563" translate="yes" xml:space="preserve">
          <source>Parallel map on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="translated">次元0の &lt;code&gt;elems&lt;/code&gt; からアンパックされたテンソルのリストの並列マップ。</target>
        </trans-unit>
        <trans-unit id="def8ac8326c736c1762fb8107a7ba5fa4a8345ed" translate="yes" xml:space="preserve">
          <source>Parameter values leading to undefined statistics or distributions.</source>
          <target state="translated">未定義の統計量または分布につながるパラメータ値。</target>
        </trans-unit>
        <trans-unit id="7df541106a23472877991b6b4fb89f0ad11c8df3" translate="yes" xml:space="preserve">
          <source>Parametric Rectified Linear Unit.</source>
          <target state="translated">パラメトリック整流化されたリニアユニット。</target>
        </trans-unit>
        <trans-unit id="acacbd25ff73eb4b8950645091b1a2fb7531ed14" translate="yes" xml:space="preserve">
          <source>Parse a &lt;code&gt;DeviceSpec&lt;/code&gt; name into its components.</source>
          <target state="translated">&lt;code&gt;DeviceSpec&lt;/code&gt; 名をそのコンポーネントに解析します。</target>
        </trans-unit>
        <trans-unit id="3a354f5ed898ef75d52f25eb44e9c6a2dbdd061a" translate="yes" xml:space="preserve">
          <source>Parsed value may be bounded to a given upper and lower bound.</source>
          <target state="translated">解析された値は、与えられた上界と下界に拘束されることがあります。</target>
        </trans-unit>
        <trans-unit id="55bb920dde4c75e60fb727b68b525c47e1e314d5" translate="yes" xml:space="preserve">
          <source>Parser for a comma-separated list of strings.</source>
          <target state="translated">コンマで区切られた文字列リストのパーサ。</target>
        </trans-unit>
        <trans-unit id="8da293265a711dbab137d5900f207fa1f2d4d6c8" translate="yes" xml:space="preserve">
          <source>Parser for a whitespace-separated list of strings.</source>
          <target state="translated">ホワイトスペースで区切られた文字列リストのパーサ。</target>
        </trans-unit>
        <trans-unit id="f4ec27b2b8218acc5e8fb47368c0311def655e7f" translate="yes" xml:space="preserve">
          <source>Parser of a string enum value (a string value from a given set).</source>
          <target state="translated">文字列列列挙値(与えられた集合からの文字列値)のパーサ。</target>
        </trans-unit>
        <trans-unit id="666f2db27697481c5144debd0528eb62c4c27fc6" translate="yes" xml:space="preserve">
          <source>Parser of an Enum class member.</source>
          <target state="translated">Enumクラスのメンバのパーサです。</target>
        </trans-unit>
        <trans-unit id="23705e4b83ef8e598c6f5d87bc4d13b00d034fb9" translate="yes" xml:space="preserve">
          <source>Parser of an integer value.</source>
          <target state="translated">整数値のパーサ。</target>
        </trans-unit>
        <trans-unit id="e93d461060844d7f5b00135bcee9acbd4bf75bb4" translate="yes" xml:space="preserve">
          <source>Parser of boolean values.</source>
          <target state="translated">ブール値のパーサです。</target>
        </trans-unit>
        <trans-unit id="e7abdbfdc94770405fe4a29279585fae4ba29a00" translate="yes" xml:space="preserve">
          <source>Parser of floating point values.</source>
          <target state="translated">浮動小数点値のパーサです。</target>
        </trans-unit>
        <trans-unit id="7454c741c41841ce88a39e24df061717106e7a7c" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;Example&lt;/code&gt; protos into a &lt;code&gt;dict&lt;/code&gt; of tensors.</source>
          <target state="translated">解析し &lt;code&gt;Example&lt;/code&gt; にPROTOS &lt;code&gt;dict&lt;/code&gt; テンソルの。</target>
        </trans-unit>
        <trans-unit id="382edcba1a256d62e4e05248add77639491bdee5" translate="yes" xml:space="preserve">
          <source>Parses a JSON model configuration file and returns a model instance.</source>
          <target state="translated">JSONモデル設定ファイルをパースし、モデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="4ba700383a7d3f81a5dc6695953faae04cf01309" translate="yes" xml:space="preserve">
          <source>Parses a JSON tokenizer configuration file and returns a</source>
          <target state="translated">JSON トークン化設定ファイルをパースして</target>
        </trans-unit>
        <trans-unit id="05becb678d41db332eabbaf7d7db7a0cc0aff9e0" translate="yes" xml:space="preserve">
          <source>Parses a batch of &lt;code&gt;SequenceExample&lt;/code&gt; protos.</source>
          <target state="translated">&lt;code&gt;SequenceExample&lt;/code&gt; プロトのバッチを解析します。</target>
        </trans-unit>
        <trans-unit id="89639b79103f59776ee71d8eae1479be068714f3" translate="yes" xml:space="preserve">
          <source>Parses a number of serialized &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; protos given in &lt;code&gt;serialized&lt;/code&gt;. We refer to &lt;code&gt;serialized&lt;/code&gt; as a batch with &lt;code&gt;batch_size&lt;/code&gt; many entries of individual &lt;code&gt;Example&lt;/code&gt; protos.</source>
          <target state="translated">シリアル化の数解析する&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;で与えられたPROTOS &lt;code&gt;serialized&lt;/code&gt; 。個別の &lt;code&gt;Example&lt;/code&gt; &lt;code&gt;batch_size&lt;/code&gt; 多くのエントリをbatch_sizeでバッチとして &lt;code&gt;serialized&lt;/code&gt; ことを参照します。</target>
        </trans-unit>
        <trans-unit id="0fe6a74d0c057cd81def9f1d072d1cf8df8de1cd" translate="yes" xml:space="preserve">
          <source>Parses a number of serialized &lt;code&gt;Example&lt;/code&gt; protos given in &lt;code&gt;serialized&lt;/code&gt;. We refer to &lt;code&gt;serialized&lt;/code&gt; as a batch with &lt;code&gt;batch_size&lt;/code&gt; many entries of individual &lt;code&gt;Example&lt;/code&gt; protos.</source>
          <target state="translated">シリアル化の数解析する &lt;code&gt;Example&lt;/code&gt; で与えられたPROTOS &lt;code&gt;serialized&lt;/code&gt; 。個別の &lt;code&gt;Example&lt;/code&gt; &lt;code&gt;batch_size&lt;/code&gt; 多くのエントリをbatch_sizeでバッチとして &lt;code&gt;serialized&lt;/code&gt; ことを参照します。</target>
        </trans-unit>
        <trans-unit id="124043c4b5d010f3d3724d6013100c09250d0e93" translate="yes" xml:space="preserve">
          <source>Parses a single &lt;code&gt;Example&lt;/code&gt; proto.</source>
          <target state="translated">単一の &lt;code&gt;Example&lt;/code&gt; プロトを解析します。</target>
        </trans-unit>
        <trans-unit id="992f064cb3093b3ca55d617bcdf6d7d74ea4aeee" translate="yes" xml:space="preserve">
          <source>Parses a single &lt;code&gt;SequenceExample&lt;/code&gt; proto.</source>
          <target state="translated">単一の &lt;code&gt;SequenceExample&lt;/code&gt; プロトを解析します。</target>
        </trans-unit>
        <trans-unit id="018707eb7364c89d5fc13d1b7c5516ba266195af" translate="yes" xml:space="preserve">
          <source>Parses a single serialized &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt;&lt;code&gt;SequenceExample&lt;/code&gt;&lt;/a&gt; proto given in &lt;code&gt;serialized&lt;/code&gt;.</source>
          <target state="translated">単一シリアル化された構文解析し&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt; &lt;code&gt;SequenceExample&lt;/code&gt; の&lt;/a&gt;中で与えられたプロト &lt;code&gt;serialized&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ea007a196bc26f930d784bb7afa3d70de1dddf9" translate="yes" xml:space="preserve">
          <source>Parses a vector of serialized &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt;&lt;code&gt;SequenceExample&lt;/code&gt;&lt;/a&gt; protos given in &lt;code&gt;serialized&lt;/code&gt;.</source>
          <target state="translated">serializedで指定された &lt;code&gt;serialized&lt;/code&gt; れた&lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/example/example.proto&quot;&gt; &lt;code&gt;SequenceExample&lt;/code&gt; &lt;/a&gt;プロトのベクトルを解析します。</target>
        </trans-unit>
        <trans-unit id="f7f97a8d5b44b861cb188ab43b29050c98a85c0b" translate="yes" xml:space="preserve">
          <source>Parses a yaml model configuration file and returns a model instance.</source>
          <target state="translated">yamlモデル設定ファイルを解析し、モデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="9ea18454c03169edeecc171cf8161677a428da1d" translate="yes" xml:space="preserve">
          <source>Parses argument as comma-separated list of strings.</source>
          <target state="translated">引数をカンマで区切られた文字列のリストとしてパースします。</target>
        </trans-unit>
        <trans-unit id="4ef7ad1b3cbe943f2f294bbe16f4212b11883827" translate="yes" xml:space="preserve">
          <source>Parses argument as whitespace-separated list of strings.</source>
          <target state="translated">引数を空白で区切られた文字列のリストとしてパースします。</target>
        </trans-unit>
        <trans-unit id="a203d9b850783ae30a3b6868f86b8cb6b9fe84a1" translate="yes" xml:space="preserve">
          <source>Parses flags from argv; stores parsed flags into this FlagValues object.</source>
          <target state="translated">argvからフラグを解析し,解析したフラグをこのFlagValuesオブジェクトに格納します.</target>
        </trans-unit>
        <trans-unit id="9ebb16a61dcc07727d0bb5210c58744c98d0ce86" translate="yes" xml:space="preserve">
          <source>Parses one or more arguments with the installed parser.</source>
          <target state="translated">インストールされているパーサーを使用して、1つ以上の引数をパースします。</target>
        </trans-unit>
        <trans-unit id="ec314dc834d23af5860312b604879d2394ea5a5c" translate="yes" xml:space="preserve">
          <source>Parses string and sets flag value.</source>
          <target state="translated">文字列を解析し、フラグの値を設定します。</target>
        </trans-unit>
        <trans-unit id="b0c567f1070a0f35eb961bbbf3292e62eca12cd9" translate="yes" xml:space="preserve">
          <source>Parses the string argument and returns the native value.</source>
          <target state="translated">文字列の引数を解析し、ネイティブ値を返します。</target>
        </trans-unit>
        <trans-unit id="1aaa660749bcea759264357e9b26e5669a47d98e" translate="yes" xml:space="preserve">
          <source>Partitioner to allocate minimum size per slice.</source>
          <target state="translated">スライスごとに最小サイズを割り当てるパーティショナー。</target>
        </trans-unit>
        <trans-unit id="639836ff576582ce66b19858583c1ef11bddb145" translate="yes" xml:space="preserve">
          <source>Partitioner to specify a fixed number of shards along given axis.</source>
          <target state="translated">指定された軸に沿って一定数のシャードを指定するパーティショナー。</target>
        </trans-unit>
        <trans-unit id="8e2eb665cd45fc06ac2a4e507bedfb7fad10b2de" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;data&lt;/code&gt; into &lt;code&gt;num_partitions&lt;/code&gt; tensors using indices from &lt;code&gt;partitions&lt;/code&gt;.</source>
          <target state="translated">パーティションのインデックスを使用して、 &lt;code&gt;data&lt;/code&gt; を &lt;code&gt;num_partitions&lt;/code&gt; テンソルに &lt;code&gt;partitions&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d446aae1ecd79d972964f8b5d0e5b655bac17985" translate="yes" xml:space="preserve">
          <source>Parts of the bounding box may fall outside the image.</source>
          <target state="translated">バウンディングボックスの一部が画像の外に出てしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="56a7796db4b1b5588c8958efddb6ca8b85c5ffb7" translate="yes" xml:space="preserve">
          <source>Pass &quot;library_filename&quot; to a platform-specific mechanism for dynamically loading a library. The rules for determining the exact location of the library are platform-specific and are not documented here. When the library is loaded, ops and kernels registered in the library via the &lt;code&gt;REGISTER_*&lt;/code&gt; macros are made available in the TensorFlow process. Note that ops with the same name as an existing op are rejected and not registered with the process.</source>
          <target state="translated">ライブラリを動的にロードするためのプラットフォーム固有のメカニズムに「library_filename」を渡します。ライブラリの正確な場所を決定するためのルールはプラットフォーム固有であり、ここでは説明しません。ライブラリが読み込まれると、 &lt;code&gt;REGISTER_*&lt;/code&gt; マクロを介してライブラリに登録されたopsとカーネルがTensorFlowプロセスで使用できるようになります。既存の操作と同じ名前の操作は拒否され、プロセスに登録されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="047872f94d02ef0590758cf7f445a1e6c35b92a6" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;library_filename&lt;/code&gt; to a platform-specific mechanism for dynamically loading a library. The rules for determining the exact location of the library are platform-specific and are not documented here.</source>
          <target state="translated">ライブラリを動的にロードするためのプラットフォーム固有のメカニズムに &lt;code&gt;library_filename&lt;/code&gt; を渡します。ライブラリの正確な場所を決定するためのルールはプラットフォーム固有であり、ここでは説明しません。</target>
        </trans-unit>
        <trans-unit id="780f8fa333fec07941f4fe68692890c6374b0e0c" translate="yes" xml:space="preserve">
          <source>Pass this class to &lt;code&gt;tf.estimator.tpu.TPUEstimator&lt;/code&gt; via the &lt;code&gt;embedding_config_spec&lt;/code&gt; parameter. At minimum you need to specify &lt;code&gt;feature_columns&lt;/code&gt; and &lt;code&gt;optimization_parameters&lt;/code&gt;. The feature columns passed should be created with some combination of &lt;code&gt;tf.tpu.experimental.embedding_column&lt;/code&gt; and &lt;code&gt;tf.tpu.experimental.shared_embedding_columns&lt;/code&gt;.</source>
          <target state="translated">このクラスを &lt;code&gt;embedding_config_spec&lt;/code&gt; パラメータを介して &lt;code&gt;tf.estimator.tpu.TPUEstimator&lt;/code&gt; に渡します。少なくとも、 &lt;code&gt;feature_columns&lt;/code&gt; と &lt;code&gt;optimization_parameters&lt;/code&gt; を指定する必要があります。渡される機能列は、 &lt;code&gt;tf.tpu.experimental.embedding_column&lt;/code&gt; と &lt;code&gt;tf.tpu.experimental.shared_embedding_columns&lt;/code&gt; を組み合わせて作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ade90148ab6b8949a3fb2b6ffa4d0393eb16345e" translate="yes" xml:space="preserve">
          <source>Pass this to &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt; to convert sequence categorical data into dense representation for input to sequence NN, such as RNN.</source>
          <target state="translated">これを &lt;code&gt;embedding_column&lt;/code&gt; または &lt;code&gt;indicator_column&lt;/code&gt; に渡して、シーケンスカテゴリカルデータをRNNなどのシーケンスNNへの入力用の密な表現に変換します。</target>
        </trans-unit>
        <trans-unit id="b36f8dc9837b09fa8fbf4d18a29d8e0246873db5" translate="yes" xml:space="preserve">
          <source>Pass this to &lt;code&gt;tf.estimator.tpu.experimental.EmbeddingConfigSpec&lt;/code&gt; via the &lt;code&gt;optimization_parameters&lt;/code&gt; argument to set the optimizer and its parameters. See the documentation for &lt;code&gt;tf.estimator.tpu.experimental.EmbeddingConfigSpec&lt;/code&gt; for more details.</source>
          <target state="translated">これを &lt;code&gt;optimization_parameters&lt;/code&gt; 引数を介して &lt;code&gt;tf.estimator.tpu.experimental.EmbeddingConfigSpec&lt;/code&gt; に渡し、オプティマイザとそのパラメータを設定します。詳細については、 &lt;code&gt;tf.estimator.tpu.experimental.EmbeddingConfigSpec&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="081c7cedd4c37b3e7f6ee44a6d00495c6d815a3d" translate="yes" xml:space="preserve">
          <source>Path to the downloaded file</source>
          <target state="translated">ダウンロードしたファイルのパス</target>
        </trans-unit>
        <trans-unit id="df72add6f49542180d93fc552269326d74a0af39" translate="yes" xml:space="preserve">
          <source>Peephole connections allow the gates to utilize the previous internal state as well as the previous hidden state (which is what LSTMCell is limited to). This allows PeepholeLSTMCell to better learn precise timings over LSTMCell.</source>
          <target state="translated">Peephole接続により、ゲートは前の隠された状態(LSTMCellが制限されているもの)と同様に、前の内部状態を利用することができます。これにより、PeepholeLSTMCellはLSTMCellよりも正確なタイミングをより良く学習することができます。</target>
        </trans-unit>
        <trans-unit id="870e6a439b75eca5baa52bba5d5492701a355c78" translate="yes" xml:space="preserve">
          <source>Perform the KL registration.</source>
          <target state="translated">KL登録を行う。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="20e0d98d211f2321283436030f098fc8cb11921a" translate="yes" xml:space="preserve">
          <source>Performance contract</source>
          <target state="translated">履行契約</target>
        </trans-unit>
        <trans-unit id="0d07fcd99e776cfc7585d951dd0aa3386bd3641d" translate="yes" xml:space="preserve">
          <source>Performing arithmetic operations in float16 takes advantage of specialized processing units, such as NVIDIA Tensor Cores for much higher arithmetic throughput. However, due to the smaller representable range, performing the entire training with float16 can result in gradient underflow, that is, small gradient values becoming zeroes. Instead, performing only select arithmetic operations in float16 results in higher throughput and decreased training time when using compatible hardware accelerators while also reducing memory usage, typically without sacrificing model accuracy.</source>
          <target state="translated">float16 で算術演算を実行すると、NVIDIA Tensor Cores などの特殊な処理ユニットを利用して、はるかに高い算術処理能力を発揮します。しかし、表現可能な範囲が小さいため、float16 でトレーニング全体を実行すると、グラデーションアンダーフロー、つまり小さなグラデーション値がゼロになってしまう可能性があります。その代わりに、選択された算術演算のみを float16 で実行することで、互換性のあるハードウェアアクセラレータを使用した場合には、より高いスループットとトレーニング時間の短縮を実現し、同時にメモリ使用量を削減することができます。</target>
        </trans-unit>
        <trans-unit id="25732d626fde48625e07cdabc3d83fbfcfe23397" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;op&lt;/code&gt; on the space-to-batch representation of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; のスペースからバッチへの表現に対して &lt;code&gt;op&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="e44b24a79d05b50d012be9675365fdc9ca912648" translate="yes" xml:space="preserve">
          <source>Performs Gamma Correction on the input image.</source>
          <target state="translated">入力画像のガンマ補正を行います。</target>
        </trans-unit>
        <trans-unit id="fd9b4411de67f2bf4f4a29452c648c0e7eef20d9" translate="yes" xml:space="preserve">
          <source>Performs a &lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;broadcast&lt;/a&gt; with the arguments and then an element-wise equality comparison, returning a Tensor of boolean values.</source>
          <target state="translated">引数を使用して&lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;ブロードキャスト&lt;/a&gt;を実行し、次に要素ごとの等価比較を実行して、ブール値のテンソルを返します。</target>
        </trans-unit>
        <trans-unit id="6361e5d3e09097fafa46751e38dbd7f7eea007be" translate="yes" xml:space="preserve">
          <source>Performs a &lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;broadcast&lt;/a&gt; with the arguments and then an element-wise inequality comparison, returning a Tensor of boolean values.</source>
          <target state="translated">引数を使用して&lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;ブロードキャスト&lt;/a&gt;を実行し、次に要素ごとの不等比較を実行して、ブール値のテンソルを返します。</target>
        </trans-unit>
        <trans-unit id="fe41e194cfcd4c012450d5d68e33075599325707" translate="yes" xml:space="preserve">
          <source>Performs a brightness shift.</source>
          <target state="translated">輝度シフトを行います。</target>
        </trans-unit>
        <trans-unit id="d69bb21796aef3caa6a8c7cd56c48cd24a3f8d16" translate="yes" xml:space="preserve">
          <source>Performs a channel shift.</source>
          <target state="translated">チャンネルシフトを実行します。</target>
        </trans-unit>
        <trans-unit id="b65a936dab42b7aff029f8f32c05198150d07016" translate="yes" xml:space="preserve">
          <source>Performs a depthwise convolution that acts separately on channels followed by a pointwise convolution that mixes channels. Note that this is separability between dimensions &lt;code&gt;[1, 2]&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt;, not spatial separability between dimensions &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">チャネルに個別に作用する深さ方向のたたみ込みを実行し、その後、チャネルを混合する点ごとのたたみ込みを実行します。これは、次元 &lt;code&gt;[1, 2]&lt;/code&gt; と &lt;code&gt;3&lt;/code&gt; の間の分離可能性であり、次元 &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;2&lt;/code&gt; の間の空間分離可能性ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4de0228525072efd89b946b5680e4d5192bab98a" translate="yes" xml:space="preserve">
          <source>Performs a logical shift for unsigned integer types, and an arithmetic shift for signed integer types.</source>
          <target state="translated">符号なし整数型の場合は論理シフト、符号付き整数型の場合は算術シフトを実行します。</target>
        </trans-unit>
        <trans-unit id="3ab1ad4abc47740a4a8056ab64216429ae50e3e7" translate="yes" xml:space="preserve">
          <source>Performs a random brightness shift.</source>
          <target state="translated">ランダムな明るさのシフトを行います。</target>
        </trans-unit>
        <trans-unit id="8fd2e1b40896fbc87f59613fe6045b2272379d40" translate="yes" xml:space="preserve">
          <source>Performs a random channel shift.</source>
          <target state="translated">ランダムなチャンネルシフトを行います。</target>
        </trans-unit>
        <trans-unit id="fbabf9c859f61455ba40ddc150fa0534fb7943a7" translate="yes" xml:space="preserve">
          <source>Performs a random rotation of a Numpy image tensor.</source>
          <target state="translated">Numpyイメージテンソルのランダムな回転を行います。</target>
        </trans-unit>
        <trans-unit id="16b3b646cb88be60b72d1ae840875e7c7127ca08" translate="yes" xml:space="preserve">
          <source>Performs a random spatial shear of a Numpy image tensor.</source>
          <target state="translated">Numpyイメージテンソルのランダムな空間せん断を行います.</target>
        </trans-unit>
        <trans-unit id="fae1e993fd3b22e95e77e8369af5a3c3b633afb5" translate="yes" xml:space="preserve">
          <source>Performs a random spatial shift of a Numpy image tensor.</source>
          <target state="translated">Numpyイメージテンソルのランダムな空間シフトを行います.</target>
        </trans-unit>
        <trans-unit id="9e23affa8c43f41939ca6e69ac7ff678ac2e8a88" translate="yes" xml:space="preserve">
          <source>Performs a random spatial zoom of a Numpy image tensor.</source>
          <target state="translated">Numpyイメージテンソルのランダムな空間ズームを実行します.</target>
        </trans-unit>
        <trans-unit id="37a6819994179461bcded406eeb280611d19f0ea" translate="yes" xml:space="preserve">
          <source>Performs a safe reciprocal operation, element wise.</source>
          <target state="translated">エレメントワイズの安全な往復動作を行います。</target>
        </trans-unit>
        <trans-unit id="ec320a06a18400dd9a5f740cbce86afccdf8abf9" translate="yes" xml:space="preserve">
          <source>Performs a safe saturating cast of &lt;code&gt;value&lt;/code&gt; to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; への &lt;code&gt;value&lt;/code&gt; 安全な飽和キャストを実行します。</target>
        </trans-unit>
        <trans-unit id="57878755e134eeac2a80c6038fce00d877dc3842" translate="yes" xml:space="preserve">
          <source>Performs a union on underlying ClusterResolvers.</source>
          <target state="translated">基礎となるClusterResolversのユニオンを実行します。</target>
        </trans-unit>
        <trans-unit id="fedbaa43ec05fbb3307aa0ef670fd22dc8a29074" translate="yes" xml:space="preserve">
          <source>Performs algorithmically equivalent operation to tf.image.non_max_suppression, with the addition of an optional parameter which zero-pads the output to be of size &lt;code&gt;max_output_size&lt;/code&gt;. The output of this operation is a tuple containing the set of integers indexing into the input collection of bounding boxes representing the selected boxes and the number of valid indices in the index set. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; operations. For example:</source>
          <target state="translated">アルゴリズム的にtf.image.non_max_suppressionと同等の操作を実行し、オプションのパラメーターを追加して、出力のサイズを &lt;code&gt;max_output_size&lt;/code&gt; になるようにゼロ埋め込みします。この操作の出力は、選択されたボックスとインデックスセット内の有効なインデックスの数を表すバウンディングボックスの入力コレクションにインデックスを付ける整数のセットを含むタプルです。選択されたインデックスに対応するバウンディングボックスの座標は、&lt;a href=&quot;../slice&quot;&gt; &lt;code&gt;tf.slice&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt;操作を使用して取得できます。例えば：</target>
        </trans-unit>
        <trans-unit id="13f2343621d1503be2d119b3b8f22618866e3ccd" translate="yes" xml:space="preserve">
          <source>Performs an N-D pooling operation.</source>
          <target state="translated">N-D プーリング操作を実行します。</target>
        </trans-unit>
        <trans-unit id="cde33529ed2d6dc3cb9ab2f927e4b9cddfe1ef7d" translate="yes" xml:space="preserve">
          <source>Performs beam search decoding on the logits given in input.</source>
          <target state="translated">入力されたロジットに対してビームサーチデコードを行います。</target>
        </trans-unit>
        <trans-unit id="c768efdeaade19f443a09337878978bc13682466" translate="yes" xml:space="preserve">
          <source>Performs fractional average pooling on the input.</source>
          <target state="translated">入力に対して、小数平均プーリングを実行します。</target>
        </trans-unit>
        <trans-unit id="bf2e80bd9c48795b799164beea692c84bf544cc9" translate="yes" xml:space="preserve">
          <source>Performs fractional average pooling on the input. (deprecated)</source>
          <target state="translated">入力に対して小数平均プーリングを実行します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="6d92ac8296d307c335cb81822245dfcd743a827a" translate="yes" xml:space="preserve">
          <source>Performs fractional max pooling on the input.</source>
          <target state="translated">入力に対して、小数の最大プーリングを実行します。</target>
        </trans-unit>
        <trans-unit id="72164b195c8c9d3652b8b6156a1769dd5f2df761" translate="yes" xml:space="preserve">
          <source>Performs fractional max pooling on the input. (deprecated)</source>
          <target state="translated">入力に対して、小数の最大プーリングを実行します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="b760b1063d3f822c2fb236c1de45332fddbbb750" translate="yes" xml:space="preserve">
          <source>Performs fully dynamic unrolling of &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 完全に動的な展開を実行します。</target>
        </trans-unit>
        <trans-unit id="e0f37095b1fe23e5a26e5088d9362133126197b7" translate="yes" xml:space="preserve">
          <source>Performs greedy decoding on the logits given in input (best path).</source>
          <target state="translated">入力(ベストパス)で与えられたロジットに対して貪欲なデコーディングを行います。</target>
        </trans-unit>
        <trans-unit id="20a862edfe93a1a6505779641e84002ff66376ee" translate="yes" xml:space="preserve">
          <source>Performs max pooling on the input and outputs both max values and indices.</source>
          <target state="translated">入力に対して最大プーリングを実行し、最大値とインデックスの両方を出力します。</target>
        </trans-unit>
        <trans-unit id="7e9177928e73aa1ef3e46a69dff7d4af5c0a3025" translate="yes" xml:space="preserve">
          <source>Performs the average pooling on the input.</source>
          <target state="translated">入力の平均プーリングを実行します。</target>
        </trans-unit>
        <trans-unit id="7bf26f511b2687eea661a622930a1297f71024d7" translate="yes" xml:space="preserve">
          <source>Performs the avg pooling on the input.</source>
          <target state="translated">入力に対して平均プーリングを実行します。</target>
        </trans-unit>
        <trans-unit id="b3ff16e7bbe6c6d65be7503047797d8c75c47e2e" translate="yes" xml:space="preserve">
          <source>Performs the max pooling on the input.</source>
          <target state="translated">入力の最大プーリングを実行します。</target>
        </trans-unit>
        <trans-unit id="a7f01b79feaff9d24cb81f18ac5cefac4663b79c" translate="yes" xml:space="preserve">
          <source>Permute dimensions of &lt;code&gt;reshaped&lt;/code&gt; to produce &lt;code&gt;permuted&lt;/code&gt; of shape [batch / prod(block_shape),</source>
          <target state="translated">形状の &lt;code&gt;permuted&lt;/code&gt; を生成するために形状変更 &lt;code&gt;reshaped&lt;/code&gt; た寸法を並べ替える[batch / prod（block_shape）、</target>
        </trans-unit>
        <trans-unit id="55b7a32226c6a5a6200b51e29ab8eebe66273e08" translate="yes" xml:space="preserve">
          <source>Permute dimensions of &lt;code&gt;reshaped&lt;/code&gt; to produce &lt;code&gt;permuted&lt;/code&gt; of shape [batch / prod(block_shape), input_shape[1], block_shape[0], ..., input_shape[M], block_shape[M-1], input_shape[M+1], ..., input_shape[N-1]]</source>
          <target state="translated">形状の &lt;code&gt;permuted&lt;/code&gt; を生成するために &lt;code&gt;reshaped&lt;/code&gt; 形状の次元を並べ替える[batch / prod（block_shape）、input_shape [1]、block_shape [0]、...、input_shape [M]、block_shape [M-1]、input_shape [M + 1]、 ...、input_shape [N-1]]</target>
        </trans-unit>
        <trans-unit id="d858af7309e0eb51ac8ea072f4b64695965b9ad7" translate="yes" xml:space="preserve">
          <source>Permute dimensions of &lt;code&gt;reshaped_padded&lt;/code&gt; to produce &lt;code&gt;permuted_reshaped_padded&lt;/code&gt; of shape:</source>
          <target state="translated">入れ替え寸法 &lt;code&gt;reshaped_padded&lt;/code&gt; 生成する &lt;code&gt;permuted_reshaped_padded&lt;/code&gt; の形状：</target>
        </trans-unit>
        <trans-unit id="1c2ccd6ece6c1729c2562e4135603c11b1c11360" translate="yes" xml:space="preserve">
          <source>Permutes axes in a tensor.</source>
          <target state="translated">テンソルの軸を許可します。</target>
        </trans-unit>
        <trans-unit id="4e20c7bb87d6020885abe6a5ce527a02825fdb0c" translate="yes" xml:space="preserve">
          <source>Permutes the dimensions according to &lt;code&gt;perm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;perm&lt;/code&gt; に従って次元を並べ替えます。</target>
        </trans-unit>
        <trans-unit id="526c4c0280957385523ae940241ea0b054842a08" translate="yes" xml:space="preserve">
          <source>Permutes the dimensions of the input according to a given pattern.</source>
          <target state="translated">与えられたパターンに従って入力の寸法を許可します.</target>
        </trans-unit>
        <trans-unit id="703bcac271da40ae872c757aa6076b85a5bc65ec" translate="yes" xml:space="preserve">
          <source>Perturb a &lt;code&gt;LinearOperator&lt;/code&gt; with a rank &lt;code&gt;K&lt;/code&gt; update.</source>
          <target state="translated">混乱させる &lt;code&gt;LinearOperator&lt;/code&gt; ランクと &lt;code&gt;K&lt;/code&gt; の更新を。</target>
        </trans-unit>
        <trans-unit id="23bc80357c4722dfdf0c91694807718874555f49" translate="yes" xml:space="preserve">
          <source>Physical devices are hardware devices present on the host machine. By default all discovered CPU and GPU devices are considered visible.</source>
          <target state="translated">物理デバイスとは、ホストマシン上に存在するハードウェアデバイスのことです。デフォルトでは、検出されたすべてのCPUとGPUデバイスは可視とみなされます。</target>
        </trans-unit>
        <trans-unit id="e3965d47342d2002b31c98148f78bab8345bef86" translate="yes" xml:space="preserve">
          <source>Piecewise constant from boundaries and interval values.</source>
          <target state="translated">境界線と区間値からのピースワイズ定数</target>
        </trans-unit>
        <trans-unit id="8ef57d28e73677c96993fd2b8445c1eec249cdff" translate="yes" xml:space="preserve">
          <source>Pitfalls</source>
          <target state="translated">Pitfalls</target>
        </trans-unit>
        <trans-unit id="3d6b297653a1304d918a745285ef35a65c95367c" translate="yes" xml:space="preserve">
          <source>Pix2Pix</source>
          <target state="translated">Pix2Pix</target>
        </trans-unit>
        <trans-unit id="334022626faf3c331cbc4e40efd252256d919b5d" translate="yes" xml:space="preserve">
          <source>Placeholders are not compatible with eager execution.</source>
          <target state="translated">プレースホルダーは熱心な実行とは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="3b238d4e9c2efe26555902b7a27653edccaa3390" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;np.mean&lt;/code&gt; has a &lt;code&gt;dtype&lt;/code&gt; parameter that could be used to specify the output type. By default this is &lt;code&gt;dtype=float64&lt;/code&gt;. On the other hand, &lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;tf.reduce_mean&lt;/code&gt;&lt;/a&gt; has an aggressive type inference from &lt;code&gt;input_tensor&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;np.mean&lt;/code&gt; には、出力タイプを指定するために使用できる &lt;code&gt;dtype&lt;/code&gt; パラメータがあることに注意してください。デフォルトでは、これは &lt;code&gt;dtype=float64&lt;/code&gt; です。一方、&lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;tf.reduce_mean&lt;/code&gt; に&lt;/a&gt;は &lt;code&gt;input_tensor&lt;/code&gt; からの積極的な型推論があります。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="417e707e636edd35d8f981e1d2299b15aefed816" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;np.mean&lt;/code&gt; has a &lt;code&gt;dtype&lt;/code&gt; parameter that could be used to specify the output type. By default this is &lt;code&gt;dtype=float64&lt;/code&gt;. On the other hand, &lt;a href=&quot;reduce_mean&quot;&gt;&lt;code&gt;tf.reduce_mean&lt;/code&gt;&lt;/a&gt; has an aggressive type inference from &lt;code&gt;input_tensor&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;np.mean&lt;/code&gt; には、出力タイプを指定するために使用できる &lt;code&gt;dtype&lt;/code&gt; パラメータがあることに注意してください。デフォルトでは、これは &lt;code&gt;dtype=float64&lt;/code&gt; です。一方、&lt;a href=&quot;reduce_mean&quot;&gt; &lt;code&gt;tf.reduce_mean&lt;/code&gt; に&lt;/a&gt;は &lt;code&gt;input_tensor&lt;/code&gt; からの積極的な型推論があります。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="992d22e05c116d7730924c12aad4185a4a7856e1" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;np.std&lt;/code&gt; has a &lt;code&gt;dtype&lt;/code&gt; parameter that could be used to specify the output type. By default this is &lt;code&gt;dtype=float64&lt;/code&gt;. On the other hand, &lt;code&gt;tf.reduce_std&lt;/code&gt; has an aggressive type inference from &lt;code&gt;input_tensor&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;np.std&lt;/code&gt; には、出力タイプを指定するために使用できる &lt;code&gt;dtype&lt;/code&gt; パラメータがあることに注意してください。デフォルトでは、これは &lt;code&gt;dtype=float64&lt;/code&gt; です。一方、 &lt;code&gt;tf.reduce_std&lt;/code&gt; には、input_tensorからの積極的な型推論があり &lt;code&gt;input_tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c793a1ddf3c7631d365fe6ab8ffa9c96b0d2a1e" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;np.var&lt;/code&gt; has a &lt;code&gt;dtype&lt;/code&gt; parameter that could be used to specify the output type. By default this is &lt;code&gt;dtype=float64&lt;/code&gt;. On the other hand, &lt;code&gt;tf.reduce_variance&lt;/code&gt; has an aggressive type inference from &lt;code&gt;input_tensor&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;np.var&lt;/code&gt; には、出力タイプを指定するために使用できる &lt;code&gt;dtype&lt;/code&gt; パラメーターがあることに注意してください。デフォルトでは、これは &lt;code&gt;dtype=float64&lt;/code&gt; です。一方、 &lt;code&gt;tf.reduce_variance&lt;/code&gt; には、input_tensorからの積極的な型推論があり &lt;code&gt;input_tensor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6139d4a074934a86490e854b98d8cc4a4611d008" translate="yes" xml:space="preserve">
          <source>Please note that interleaving two predict outputs does not work. See: &lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/20506#issuecomment-422208517&quot;&gt;issue/20506&lt;/a&gt;</source>
          <target state="translated">2つの予測出力をインターリーブしても機能しないことに注意してください。参照：&lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/20506#issuecomment-422208517&quot;&gt;問題/ 20506&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1f3cbf92a097f48efc56315ad4f799324d88055" translate="yes" xml:space="preserve">
          <source>Please note that this utility is not recommended for distributed settings. For distributed settings, please use &lt;a href=&quot;monitoredsession&quot;&gt;&lt;code&gt;tf.compat.v1.train.MonitoredSession&lt;/code&gt;&lt;/a&gt;. The differences between &lt;code&gt;MonitoredSession&lt;/code&gt; and &lt;code&gt;SingularMonitoredSession&lt;/code&gt; are:</source>
          <target state="translated">このユーティリティは分散設定には推奨されないことに注意してください。分散設定の場合は、&lt;a href=&quot;monitoredsession&quot;&gt; &lt;code&gt;tf.compat.v1.train.MonitoredSession&lt;/code&gt; &lt;/a&gt;を使用してください。 &lt;code&gt;MonitoredSession&lt;/code&gt; と &lt;code&gt;SingularMonitoredSession&lt;/code&gt; の違いは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ead30ce4b56c11d63c21621c6b779c31384d98d1" translate="yes" xml:space="preserve">
          <source>Please see https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/profile_model_architecture.md on the caveats of calculating float operations.</source>
          <target state="translated">浮動小数点演算を計算する際の注意点については、https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/g3doc/profile_model_architecture.md を参照してください。</target>
        </trans-unit>
        <trans-unit id="deb18334d62b7a7ce55c831338adba20ccf7d11d" translate="yes" xml:space="preserve">
          <source>Please see https://www.tensorflow.org/tutorials/distribute/custom_training for more details on this.</source>
          <target state="translated">詳しくは https://www.tensorflow.org/tutorials/distribute/custom_training をご覧ください。</target>
        </trans-unit>
        <trans-unit id="8458b0bc54972ae3149edcd32c9ccb674e55da60" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://www.tensorflow.org/tutorials/distribute/custom_training&quot;&gt;custom training guide&lt;/a&gt; # pylint: disable=line-too-long for more details on this.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.tensorflow.org/tutorials/distribute/custom_training&quot;&gt;カスタムトレーニングガイド&lt;/a&gt;＃pylint：disable = line-too-longをご覧ください。</target>
        </trans-unit>
        <trans-unit id="63ac0426055926a95d4b7bcc8879d356e9bb8948" translate="yes" xml:space="preserve">
          <source>Please see the DistributeOptions.auto_shard_policy documentation for more information on each type of autosharding.</source>
          <target state="translated">オートシャーディングの各タイプの詳細については、DistributeOptions.auto_shard_policy ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7164f2138719c681550eff4bb79ab53536e9f88f" translate="yes" xml:space="preserve">
          <source>Please see the definition of these values in TPUConfig.</source>
          <target state="translated">これらの値の定義はTPUConfigを参照してください。</target>
        </trans-unit>
        <trans-unit id="1643c9b4527d79d2e664514fae756c738787d371" translate="yes" xml:space="preserve">
          <source>Please use &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; to execute this function eagerly for debugging or profiling.</source>
          <target state="translated">&lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt;を使用して、デバッグまたはプロファイリングのためにこの関数を熱心に実行してください。</target>
        </trans-unit>
        <trans-unit id="ae2ce53536aea6d05cdc28f967b3cc9c3648947c" translate="yes" xml:space="preserve">
          <source>Please use &lt;a href=&quot;../../quantization/quantize&quot;&gt;&lt;code&gt;tf.quantization.quantize&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;../../quantization/quantize&quot;&gt; &lt;code&gt;tf.quantization.quantize&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="1ada6b4962a968ec4f4463a8d75601fa2db5285e" translate="yes" xml:space="preserve">
          <source>Policies are constructed by passing a string to the constructor, e.g. &lt;code&gt;tf.keras.mixed_precision.experimental.Policy('float32')&lt;/code&gt;. The string determines the compute and variable dtypes. It can be one of the following:</source>
          <target state="translated">ポリシーは、文字列をコンストラクターに渡すことにより構築されます &lt;code&gt;tf.keras.mixed_precision.experimental.Policy('float32')&lt;/code&gt; 例：tf.keras.mixed_precision.experimental.Policy（ 'float32'））。文字列は、計算と変数のdtypeを決定します。次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="c2899f52a455f323440dff1c80f69c0c5bb41e6a" translate="yes" xml:space="preserve">
          <source>Positive means, for every element &lt;code&gt;x[i]&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;, we have &lt;code&gt;x[i] &amp;gt; 0&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is empty this is trivially satisfied.</source>
          <target state="translated">積極的な手段は、すべての要素のため &lt;code&gt;x[i]&lt;/code&gt; の &lt;code&gt;x&lt;/code&gt; 、我々は持っている &lt;code&gt;x[i] &amp;gt; 0&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; が空の場合、これは簡単に満たされます。</target>
        </trans-unit>
        <trans-unit id="090f38b6c85f4157eded89d0516470bcd9d6eb53" translate="yes" xml:space="preserve">
          <source>Potentially Ragged Tensors</source>
          <target state="translated">潜在的にぼろぼろになっているテンソル</target>
        </trans-unit>
        <trans-unit id="7709fbb19ad75f33b82632f2df40c0d2a5149b1f" translate="yes" xml:space="preserve">
          <source>Pre-padding is the default.</source>
          <target state="translated">プレパディングがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="7fa92f92b07bcf0156f7cc1cfb3023496a121e00" translate="yes" xml:space="preserve">
          <source>Precision = TP / (TP + FP) = TP / P</source>
          <target state="translated">精度=TP/(TP+FP)=TP/P</target>
        </trans-unit>
        <trans-unit id="064f5973109d48c6d6c916eeb227ce7697198751" translate="yes" xml:space="preserve">
          <source>Precision slope = dTP / dP = (TP_B - TP_A) / (P_B - P_A) = (TP - TP_A) / (P - P_A) Precision = (TP_A + slope * (P - P_A)) / P</source>
          <target state="translated">精度スロープ=dTP/dP=(TP_B-TP_A)/(P_B-P_A)=(TP-TP_A)/(P-P_A)精度=(TP_A+スロープ*(P-P_A))/P</target>
        </trans-unit>
        <trans-unit id="837276742aa90209dde3b4eef07d8e7ab26731ef" translate="yes" xml:space="preserve">
          <source>Prediction</source>
          <target state="translated">Prediction</target>
        </trans-unit>
        <trans-unit id="69bee21d8977cc3c5001451cd196ff1b38a4e5ff" translate="yes" xml:space="preserve">
          <source>Prediction on TPU is an experimental feature to support large batch inference. It is not designed for latency-critical system. In addition, due to some usability issues, for prediction with small dataset, CPU &lt;code&gt;.predict&lt;/code&gt;, i.e., creating a new &lt;code&gt;TPUEstimator&lt;/code&gt; instance with &lt;code&gt;use_tpu=False&lt;/code&gt;, might be more convenient.</source>
          <target state="translated">TPUでの予測は、大規模なバッチ推論をサポートする実験的な機能です。レイテンシが重要なシステム用には設計されていません。さらに、いくつかのユーザビリティの問題により、小さなデータセットを使用した予測では、CPU &lt;code&gt;.predict&lt;/code&gt; 、つまり、 &lt;code&gt;use_tpu=False&lt;/code&gt; を使用して新しい &lt;code&gt;TPUEstimator&lt;/code&gt; インスタンスを作成する方が便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="3696da6d811762d728c7953287ef4404ab01dc40" translate="yes" xml:space="preserve">
          <source>Prefer to use the &lt;a href=&quot;deviceassignment#build&quot;&gt;&lt;code&gt;DeviceAssignment.build()&lt;/code&gt;&lt;/a&gt; helper to construct a &lt;code&gt;DeviceAssignment&lt;/code&gt;; it is easier if less flexible than constructing a &lt;code&gt;DeviceAssignment&lt;/code&gt; directly.</source>
          <target state="translated">&lt;a href=&quot;deviceassignment#build&quot;&gt; &lt;code&gt;DeviceAssignment.build()&lt;/code&gt; &lt;/a&gt;ヘルパーを使用してDeviceAssignmentを作成することをお &lt;code&gt;DeviceAssignment&lt;/code&gt; ます。 &lt;code&gt;DeviceAssignment&lt;/code&gt; を直接作成するよりも、柔軟性が低い方が簡単です。</target>
        </trans-unit>
        <trans-unit id="1d66879a264e4b09fa279b16336c84cfd9a0a698" translate="yes" xml:space="preserve">
          <source>Prefix for the statistics recorded as counter.</source>
          <target state="translated">カウンタとして記録される統計情報の接頭辞。</target>
        </trans-unit>
        <trans-unit id="29ed417ebc6db623f150307f55e7a9c1b1e39822" translate="yes" xml:space="preserve">
          <source>Prefix to prepend all statistics recorded for the input &lt;code&gt;dataset&lt;/code&gt; with.</source>
          <target state="translated">入力 &lt;code&gt;dataset&lt;/code&gt; に対して記録されたすべての統計を前に付ける接頭辞。</target>
        </trans-unit>
        <trans-unit id="4d60067c50e0ed10e08c63b1fc685380e5b9b5cc" translate="yes" xml:space="preserve">
          <source>Premade Estimators</source>
          <target state="translated">プレメイド・エスティミッター</target>
        </trans-unit>
        <trans-unit id="3928341f18b91e77a03f8408e4b41e6aef0b9185" translate="yes" xml:space="preserve">
          <source>Preserves cached row-partitioning tensors such as &lt;code&gt;self.cached_nrows&lt;/code&gt; and &lt;code&gt;self.cached_value_rowids&lt;/code&gt; if they have values.</source>
          <target state="translated">&lt;code&gt;self.cached_nrows&lt;/code&gt; や &lt;code&gt;self.cached_value_rowids&lt;/code&gt; などのキャッシュされた行パーティションテンソルに値がある場合、それらを保持します。</target>
        </trans-unit>
        <trans-unit id="fb18c31010d4e85397d1c379156a7785406e4219" translate="yes" xml:space="preserve">
          <source>Primary symbols</source>
          <target state="translated">主な記号</target>
        </trans-unit>
        <trans-unit id="318743f5dcb56f11aeb985f7c83ce4048f29b7d7" translate="yes" xml:space="preserve">
          <source>Print the result to a file.</source>
          <target state="translated">結果をファイルに印刷します。</target>
        </trans-unit>
        <trans-unit id="c72f17290b42271bf278810cb72e46e79a702bd4" translate="yes" xml:space="preserve">
          <source>Print the result to stdout.</source>
          <target state="translated">結果を標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="91320d025c92ec3981c1e04aadf893aa23746f75" translate="yes" xml:space="preserve">
          <source>Print the specified inputs.</source>
          <target state="translated">指定された入力を印刷します。</target>
        </trans-unit>
        <trans-unit id="fc6734c965e0428fc2dfa8066eec156826ba83ee" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;message&lt;/code&gt; and the tensor value when evaluated.</source>
          <target state="translated">プリントの &lt;code&gt;message&lt;/code&gt; とテンソル値はときに評価します。</target>
        </trans-unit>
        <trans-unit id="263b79eaf1f54cd0cfe894be5aa0a3a57cd3fd12" translate="yes" xml:space="preserve">
          <source>Prints a list of tensors. (deprecated)</source>
          <target state="translated">テンソルのリストを表示します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="9708c484f080d3f2dc8bb4c9a6ca307244db9b8e" translate="yes" xml:space="preserve">
          <source>Prints a string summary of the network.</source>
          <target state="translated">ネットワークの文字列の要約を表示します。</target>
        </trans-unit>
        <trans-unit id="64f570c9307ea2236bf2f5e136948b3c029a4049" translate="yes" xml:space="preserve">
          <source>Prints the given tensors every N local steps, every N seconds, or at end.</source>
          <target state="translated">N個のローカルステップ毎、N秒毎、または終了時に、与えられたテンソルを出力します。</target>
        </trans-unit>
        <trans-unit id="2370a04675661821486ca077514ad0c853ae65c1" translate="yes" xml:space="preserve">
          <source>Probability density/mass function.</source>
          <target state="translated">確率密度/質量関数。</target>
        </trans-unit>
        <trans-unit id="65dee904c6c6511b9ba9bc33fa16a0aae1a3fee5" translate="yes" xml:space="preserve">
          <source>Probability of a &lt;code&gt;1&lt;/code&gt; outcome (vs &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; つの結果の確率（対 &lt;code&gt;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ad6723e82328becf0711a7a954917d95af7c989" translate="yes" xml:space="preserve">
          <source>Probability of drawing a &lt;code&gt;1&lt;/code&gt; in that coordinate.</source>
          <target state="translated">その座標で &lt;code&gt;1&lt;/code&gt; を描く確率。</target>
        </trans-unit>
        <trans-unit id="62dce6915c8984a2750a9509c2ef59f6546fdb42" translate="yes" xml:space="preserve">
          <source>Process the gradients as you wish.</source>
          <target state="translated">グラデーションを好きなように処理します。</target>
        </trans-unit>
        <trans-unit id="be7e5a4441aa475557a960dd665c6e8eead7eafa" translate="yes" xml:space="preserve">
          <source>Processes command line args, but also allow args to be read from file.</source>
          <target state="translated">コマンドラインの引数を処理しますが、ファイルからの引数の読み込みも可能にします。</target>
        </trans-unit>
        <trans-unit id="68ccc2489abc68b56d3dbbf85c0d1ae466652171" translate="yes" xml:space="preserve">
          <source>Processing gradients before applying them.</source>
          <target state="translated">グラデーションを適用する前に加工します。</target>
        </trans-unit>
        <trans-unit id="856a710f9626583b82c9b1b6f10cffc1f44ba38a" translate="yes" xml:space="preserve">
          <source>Produce a string tensor that encodes the state of a reader.</source>
          <target state="translated">読み手の状態をコード化する文字列テンソルを生成します。</target>
        </trans-unit>
        <trans-unit id="3c789aeae1afa6effbbb12a4cf605e6f5ebf42c2" translate="yes" xml:space="preserve">
          <source>Produces a slice of each &lt;code&gt;Tensor&lt;/code&gt; in &lt;code&gt;tensor_list&lt;/code&gt;. (deprecated)</source>
          <target state="translated">各スライスの生産 &lt;code&gt;Tensor&lt;/code&gt; で &lt;code&gt;tensor_list&lt;/code&gt; を。（非推奨）</target>
        </trans-unit>
        <trans-unit id="0e0b0ffdbe50055f1d975f7713a7edc9b955d6da" translate="yes" xml:space="preserve">
          <source>Produces the average pool of the input tensor for quantized types.</source>
          <target state="translated">量子化された型の入力テンソルの平均プールを生成します.</target>
        </trans-unit>
        <trans-unit id="ead7134e50b76e6568d388b3d7b87b6f8d15ad24" translate="yes" xml:space="preserve">
          <source>Produces the integers from 0 to limit-1 in a queue. (deprecated)</source>
          <target state="translated">キュー内の 0 から limit-1 までの整数を生成します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="896a9922194a2d3bcc27031372e2bcc5fbcde215" translate="yes" xml:space="preserve">
          <source>Produces the max pool of the input tensor for quantized types.</source>
          <target state="translated">量子化された型の入力テンソルの最大プールを生成します.</target>
        </trans-unit>
        <trans-unit id="2e7c030184570702d4290300aec2c10a20492737" translate="yes" xml:space="preserve">
          <source>Profile model.</source>
          <target state="translated">プロフィールモデル。</target>
        </trans-unit>
        <trans-unit id="ef2ce2498974fa71ba595f7e153df1bdc89fe3b0" translate="yes" xml:space="preserve">
          <source>Profile the statistics of graph nodes, organized by dataflow graph.</source>
          <target state="translated">データフローグラフで整理されたグラフノードの統計情報をプロファイル化します。</target>
        </trans-unit>
        <trans-unit id="6ad93e8ea3dd4860171fa509a0fa20429af069a9" translate="yes" xml:space="preserve">
          <source>Profile the statistics of graph nodes, organized by name scope.</source>
          <target state="translated">グラフノードの統計情報をプロファイル化し、名前のスコープで整理します。</target>
        </trans-unit>
        <trans-unit id="3d22915b81a506333dad215a53012f220963b93b" translate="yes" xml:space="preserve">
          <source>Profile the statistics of the Operation types (e.g. MatMul, Conv2D).</source>
          <target state="translated">操作タイプ(例えば,MatMul,Conv2D)の統計情報をプロファイルします.</target>
        </trans-unit>
        <trans-unit id="de3e4ccfd72e92ec1579f3f37968ab38f5f39ab9" translate="yes" xml:space="preserve">
          <source>Profile the statistics of the Python codes.</source>
          <target state="translated">Pythonコードの統計情報をプロファイルします。</target>
        </trans-unit>
        <trans-unit id="fc9950474d5c22fd0d9c32ffa8ebccd6ba5b27f0" translate="yes" xml:space="preserve">
          <source>ProfileProto binary string.</source>
          <target state="translated">ProfileProtoのバイナリ文字列。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="0ba66b164c5ba93bb09d6feca80fa0446144a93c" translate="yes" xml:space="preserve">
          <source>Provides a scope that changes to &lt;code&gt;_GLOBAL_CUSTOM_OBJECTS&lt;/code&gt; cannot escape.</source>
          <target state="translated">&lt;code&gt;_GLOBAL_CUSTOM_OBJECTS&lt;/code&gt; への変更をエスケープできないスコープを提供します。</target>
        </trans-unit>
        <trans-unit id="ae152a276b18a3765da598672ccf60c3f3a6be83" translate="yes" xml:space="preserve">
          <source>Provides a scope within which the learning phase is equal to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">学習フェーズが &lt;code&gt;value&lt;/code&gt; と等しいスコープを提供します。</target>
        </trans-unit>
        <trans-unit id="006118437d9945c76794f1a8e46138eaf7551f96" translate="yes" xml:space="preserve">
          <source>Provides information about original request to &lt;code&gt;Session.Run()&lt;/code&gt; function. SessionRunHook objects can stop the loop by calling &lt;code&gt;request_stop()&lt;/code&gt; of &lt;code&gt;run_context&lt;/code&gt;. In the future we may use this object to add more information about run without changing the Hook API.</source>
          <target state="translated">&lt;code&gt;Session.Run()&lt;/code&gt; 関数への元のリクエストに関する情報を提供します。SessionRunHookオブジェクトは、 &lt;code&gt;run_context&lt;/code&gt; の &lt;code&gt;request_stop()&lt;/code&gt; を呼び出すことによってループを停止できます。将来、このオブジェクトを使用して、フックAPIを変更せずに実行に関する詳細情報を追加する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d70107170ac1240f5eda1865b975bf4542373d84" translate="yes" xml:space="preserve">
          <source>Provides information about the &lt;code&gt;session.run()&lt;/code&gt; call being made.</source>
          <target state="translated">実行中の &lt;code&gt;session.run()&lt;/code&gt; 呼び出しに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="d63ddebd0ebe2a819b1df4691f51014895e18dbc" translate="yes" xml:space="preserve">
          <source>Provides internal support for saving variables as slices of a larger variable. This API is not public and is subject to change.</source>
          <target state="translated">変数をより大きな変数のスライスとして保存するための内部サポートを提供します。この API は公開されておらず、変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="16bb6a29ce5c0e1c86ceaaf072c62042c3292e5e" translate="yes" xml:space="preserve">
          <source>Provides the time since epoch in seconds.</source>
          <target state="translated">エポックからの時間を秒単位で提供します。</target>
        </trans-unit>
        <trans-unit id="5cbeb1b81080b7cfc0d70f787d933331d2505ea6" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; allows use of a slice of the dataset.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供すると、データセットのスライスを使用できます。</target>
        </trans-unit>
        <trans-unit id="a40a086f30be24913cea266e427879754305e19a" translate="yes" xml:space="preserve">
          <source>Prunes away boxes that have high intersection-over-union (IOU) overlap with previously selected boxes. Bounding boxes are supplied as &lt;code&gt;[y1, x1, y2, x2]&lt;/code&gt;, where &lt;code&gt;(y1, x1)&lt;/code&gt; and &lt;code&gt;(y2, x2)&lt;/code&gt; are the coordinates of any diagonal pair of box corners and the coordinates can be provided as normalized (i.e., lying in the interval &lt;code&gt;[0, 1]&lt;/code&gt;) or absolute. Note that this algorithm is agnostic to where the origin is in the coordinate system. Note that this algorithm is invariant to orthogonal transformations and translations of the coordinate system; thus translating or reflections of the coordinate system result in the same boxes being selected by the algorithm. The output of this operation is a set of integers indexing into the input collection of bounding boxes representing the selected boxes. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; operation. For example:</source>
          <target state="translated">交差（ユニオン）が高いボックスは、以前に選択したボックスとオーバーラップします。境界ボックスは &lt;code&gt;[y1, x1, y2, x2]&lt;/code&gt; として提供されます。ここで、 &lt;code&gt;(y1, x1)&lt;/code&gt; と &lt;code&gt;(y2, x2)&lt;/code&gt; はボックスコーナーの対角線のペアの座標であり、座標は正規化されて提供されます（つまり、間隔 &lt;code&gt;[0, 1]&lt;/code&gt; ）または絶対。このアルゴリズムは、原点が座標系のどこにあるかに依存しないことに注意してください。このアルゴリズムは、座標系の直交変換および平行移動に対して不変であることに注意してください。したがって、座標系の変換または反射により、同じボックスがアルゴリズムによって選択されます。この操作の出力は、選択されたボックスを表すバウンディングボックスの入力コレクションにインデックスを付ける整数のセットです。選択されたインデックスに対応する境界ボックスの座標は、&lt;a href=&quot;../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt;操作を使用して取得できます。例えば：</target>
        </trans-unit>
        <trans-unit id="71c156c7183f107c4a7b461bec2f34711a57e645" translate="yes" xml:space="preserve">
          <source>Prunes away boxes that have high overlap with previously selected boxes. N-by-n overlap values are supplied as square matrix. The output of this operation is a set of integers indexing into the input collection of bounding boxes representing the selected boxes. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt; operation. For example:</source>
          <target state="translated">以前に選択したボックスとの重なりが大きいボックスを剪定します。N行n列のオーバーラップ値は正方行列として提供されます。この操作の出力は、選択されたボックスを表すバウンディングボックスの入力コレクションにインデックスを付ける整数のセットです。選択されたインデックスに対応する境界ボックスの座標は、&lt;a href=&quot;../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt;操作を使用して取得できます。例えば：</target>
        </trans-unit>
        <trans-unit id="765b9285b097f660ff0d5d3c7334df3fcc3f7ac2" translate="yes" xml:space="preserve">
          <source>Prunes out nodes that aren't needed for inference. (deprecated)</source>
          <target state="translated">推論に必要のないノードを削除します。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="a1e368bcdd9e3ad64f80172f6605fff557c816ac" translate="yes" xml:space="preserve">
          <source>Pseudocode:</source>
          <target state="translated">Pseudocode:</target>
        </trans-unit>
        <trans-unit id="e621921e0a123f07a0a6c36aa4425da00d2de4e9" translate="yes" xml:space="preserve">
          <source>Public API for tf.audio namespace.</source>
          <target state="translated">tf.audio名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="6985dcda04083ecf4eab2b186725d1a03e5576f5" translate="yes" xml:space="preserve">
          <source>Public API for tf.autodiff namespace.</source>
          <target state="translated">tf.autodiff名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="dca39937cfd49cf9ff5aadd000a33d3b3f9d2f66" translate="yes" xml:space="preserve">
          <source>Public API for tf.autograph.experimental namespace.</source>
          <target state="translated">tf.autograph.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="7d25c1e410cf6d5e064ce1b9fc4d2a8c8304f943" translate="yes" xml:space="preserve">
          <source>Public API for tf.config namespace.</source>
          <target state="translated">tf.config名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="199c5d1d133d890fb40b4d56d8de0bf2310a493d" translate="yes" xml:space="preserve">
          <source>Public API for tf.config.experimental namespace.</source>
          <target state="translated">tf.config.experimental名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="571be23534cac9cd204b3e6f4197218042d15e62" translate="yes" xml:space="preserve">
          <source>Public API for tf.config.optimizer namespace.</source>
          <target state="translated">tf.config.optimizer名前空間のためのパブリックAPI。</target>
        </trans-unit>
        <trans-unit id="8769c0bc6b93fe48f9501765bb192143e2368302" translate="yes" xml:space="preserve">
          <source>Public API for tf.config.threading namespace.</source>
          <target state="translated">tf.config.threading名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="a78023780ef42264dca8405af9484c507aaaba25" translate="yes" xml:space="preserve">
          <source>Public API for tf.debugging namespace.</source>
          <target state="translated">tf.debugging名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="0878a45518d3487d07ea797e543b64c6a169a678" translate="yes" xml:space="preserve">
          <source>Public API for tf.debugging.experimental namespace.</source>
          <target state="translated">tf.debugging.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="e7e81f3d18e0944ad46f98178fb59285d2b0c5c1" translate="yes" xml:space="preserve">
          <source>Public API for tf.dtypes namespace.</source>
          <target state="translated">tf.dtypes名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="a3e29bf467fc678888e3cfe155fa990db3f7da3d" translate="yes" xml:space="preserve">
          <source>Public API for tf.estimator.experimental namespace.</source>
          <target state="translated">tf.estimator.experimental namespaceの公開API。</target>
        </trans-unit>
        <trans-unit id="bcf5ce196c353189e7dce530617e5629381abae1" translate="yes" xml:space="preserve">
          <source>Public API for tf.estimator.tpu namespace.</source>
          <target state="translated">tf.estimator.tpu名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="135f3095219d86ddc412d829a4adb0d000eb4008" translate="yes" xml:space="preserve">
          <source>Public API for tf.estimator.tpu.experimental namespace.</source>
          <target state="translated">tf.estimator.tpu.experimental namespaceの公開API。</target>
        </trans-unit>
        <trans-unit id="d894de7386e4c4c03395ef90a656344ad1fa2ed4" translate="yes" xml:space="preserve">
          <source>Public API for tf.experimental namespace.</source>
          <target state="translated">tf.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="d00a9d3bbca3d078d60ba606911fc4c238e188ff" translate="yes" xml:space="preserve">
          <source>Public API for tf.experimental.tensorrt namespace.</source>
          <target state="translated">tf.experimental.tensorrt名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="bc1285119e3846ee9aec1233ccd2bcfc164322ba" translate="yes" xml:space="preserve">
          <source>Public API for tf.feature_column namespace.</source>
          <target state="translated">tf.feature_column名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="f4801408c40bf090c9e25a74f6e4a585c7caaf10" translate="yes" xml:space="preserve">
          <source>Public API for tf.initializers namespace.</source>
          <target state="translated">tf.initializers名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="161f4ba3e3fea6357a904bf3dcb1485dcdb4828f" translate="yes" xml:space="preserve">
          <source>Public API for tf.io namespace.</source>
          <target state="translated">tf.io名前空間のためのパブリックAPI。</target>
        </trans-unit>
        <trans-unit id="1440b81d11699ed58a65bfd5a50c2b918e9e39a4" translate="yes" xml:space="preserve">
          <source>Public API for tf.io.gfile namespace.</source>
          <target state="translated">tf.io.gfile名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="717b97456c3f5125d37ffdbbfe8fa0f58c6a1b8d" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.applications.resnet50 namespace.</source>
          <target state="translated">tf.keras.applications.resnet50名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="7f1538afef3cc2315288cbb084f972724a979a95" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.datasets namespace.</source>
          <target state="translated">tf.keras.datasets名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="46d827163597f82cf5732268e0f28a3377a91c0a" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.experimental namespace.</source>
          <target state="translated">tf.keras.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="2d8dac1b13537d22c9f3827a7930a361877fa39e" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.layers.experimental namespace.</source>
          <target state="translated">tf.keras.layers.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="e1e3d05d78fa61851e9530586a77210c758d4546" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.layers.experimental.preprocessing namespace.</source>
          <target state="translated">tf.keras.layers.experimental.preprocessing名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="9848852250496356a5462a5631f95f46c2b08b22" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.mixed_precision namespace.</source>
          <target state="translated">tf.keras.mixed_precision名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="16b1e3fec4d86bdcb0aee302d9e668da7a262a99" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.mixed_precision.experimental namespace.</source>
          <target state="translated">tf.keras.mixed_precision.experimental名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="df8d82f00c3e90893fbea9b3dc118acc04a2f0a9" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.optimizers.schedules namespace.</source>
          <target state="translated">tf.keras.optimizers.schedules名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="38b57b49369f8e9a092801041f1b572ce52e2410" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.utils namespace.</source>
          <target state="translated">tf.keras.utils名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="0a962947cb05f5860f07b6593c27c93477765a7b" translate="yes" xml:space="preserve">
          <source>Public API for tf.keras.wrappers namespace.</source>
          <target state="translated">tf.keras.wrappers名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="ff9f353434e0d80aee415c16def56cdae771e0fa" translate="yes" xml:space="preserve">
          <source>Public API for tf.layers namespace.</source>
          <target state="translated">tf.layer名前空間のパブリックAPI。</target>
        </trans-unit>
        <trans-unit id="b8dd6ee80fa6a1a4cb39e7e90621ee23c9ebf3ca" translate="yes" xml:space="preserve">
          <source>Public API for tf.layers.experimental namespace.</source>
          <target state="translated">tf.layer.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="89a379d13b10ebd67b9008b039d4a5cde160dcce" translate="yes" xml:space="preserve">
          <source>Public API for tf.lite namespace.</source>
          <target state="translated">tf.lite名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="53b08b156484ccccc4344ecf716b387a398fb5a2" translate="yes" xml:space="preserve">
          <source>Public API for tf.lite.constants namespace.</source>
          <target state="translated">tf.lite.constants名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="94176a1a2f44318177a4fd6a4bfd1fa88c664368" translate="yes" xml:space="preserve">
          <source>Public API for tf.lite.experimental namespace.</source>
          <target state="translated">tf.lite.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="20f0e0b2147735d0d09e43ca1892be54f01f1db1" translate="yes" xml:space="preserve">
          <source>Public API for tf.lite.experimental.nn namespace.</source>
          <target state="translated">tf.lite.experimental.nn名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="13c2aa7c571bb2cc2854d88209197394c02081ba" translate="yes" xml:space="preserve">
          <source>Public API for tf.lookup namespace.</source>
          <target state="translated">tf.lookup名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="9b324a29c7abfbcc4ddbbfce3cb85e552fe8286c" translate="yes" xml:space="preserve">
          <source>Public API for tf.lookup.experimental namespace.</source>
          <target state="translated">tf.lookup.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="92cbc28b13f51b754518b6a8dde6026062618c47" translate="yes" xml:space="preserve">
          <source>Public API for tf.mixed_precision namespace.</source>
          <target state="translated">tf.mixed_precision名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="fd2af371deebcb6a0acb498114b8c22532dad6ba" translate="yes" xml:space="preserve">
          <source>Public API for tf.mixed_precision.experimental namespace.</source>
          <target state="translated">tf.mixed_precision.experimental名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="08627e1db55976dea614c5ac52f74e729e207664" translate="yes" xml:space="preserve">
          <source>Public API for tf.mlir namespace.</source>
          <target state="translated">tf.mlir名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="7c0c8909a8d00d884f64d4b848b859a85a10bfe7" translate="yes" xml:space="preserve">
          <source>Public API for tf.mlir.experimental namespace.</source>
          <target state="translated">tf.mlir.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="db55082b85b9c3647f843d4df302bf358bf66a42" translate="yes" xml:space="preserve">
          <source>Public API for tf.nest namespace.</source>
          <target state="translated">tf.nest名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="3bb1dc96eb44efbd4180a3bc79e3cc4e020521e9" translate="yes" xml:space="preserve">
          <source>Public API for tf.profiler namespace.</source>
          <target state="translated">tf.profiler名前空間のためのパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="05ee3c23933809d8f00604358068444947f7d29f" translate="yes" xml:space="preserve">
          <source>Public API for tf.quantization namespace.</source>
          <target state="translated">tf.quantization名前空間のパブリックAPI。</target>
        </trans-unit>
        <trans-unit id="ae76a9dc749424885863913ac8625ad201dab774" translate="yes" xml:space="preserve">
          <source>Public API for tf.queue namespace.</source>
          <target state="translated">tf.queue名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="146fdfccf6828c1fbf62e6d42342aeb4c475c278" translate="yes" xml:space="preserve">
          <source>Public API for tf.random namespace.</source>
          <target state="translated">tf.random名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="2cbaa718583c57b416db250d6022b71333c9c3a7" translate="yes" xml:space="preserve">
          <source>Public API for tf.random.experimental namespace.</source>
          <target state="translated">tf.random.experimental名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="a590625c30c9755354b800bbb3ca6a424bde149e" translate="yes" xml:space="preserve">
          <source>Public API for tf.raw_ops namespace.</source>
          <target state="translated">tf.raw_ops名前空間のパブリックAPI。</target>
        </trans-unit>
        <trans-unit id="da04e354419f69a0369a9ee9752f00d2855edc16" translate="yes" xml:space="preserve">
          <source>Public API for tf.saved_model namespace.</source>
          <target state="translated">tf.saved_model名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="9a1417b57e0ad6103caa1b014cdf8906289030ee" translate="yes" xml:space="preserve">
          <source>Public API for tf.saved_model.experimental namespace.</source>
          <target state="translated">tf.saved_model.experimental名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="fa0d49d50c28b68e111ddb5a401f461ae7e8871e" translate="yes" xml:space="preserve">
          <source>Public API for tf.spectral namespace.</source>
          <target state="translated">tf.spectral名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="99943c43fe9c26ea0e55143b54e0b3866e604b00" translate="yes" xml:space="preserve">
          <source>Public API for tf.summary.experimental namespace.</source>
          <target state="translated">tf.summary.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="09c7ab309e3e5b21db6349fae7e9875650b1d36f" translate="yes" xml:space="preserve">
          <source>Public API for tf.tpu.experimental namespace.</source>
          <target state="translated">tf.tpu.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="87fca713c144e11b2a6a368a5f67d0357217c5d6" translate="yes" xml:space="preserve">
          <source>Public API for tf.train.experimental namespace.</source>
          <target state="translated">tf.train.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="24e3d1135aa981ce26b9dd6d3fbfe35fb9c9d3bf" translate="yes" xml:space="preserve">
          <source>Public API for tf.train.queue_runner namespace.</source>
          <target state="translated">tf.train.queue_runner名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="abaaf7d8e4f6c51ca21f240810257d321c5d2793" translate="yes" xml:space="preserve">
          <source>Public API for tf.user_ops namespace.</source>
          <target state="translated">tf.user_ops名前空間のパブリックAPIです。</target>
        </trans-unit>
        <trans-unit id="cfb92c89cb53e04c459a11c046bcd2bc308a458f" translate="yes" xml:space="preserve">
          <source>Public API for tf.version namespace.</source>
          <target state="translated">tf.version名前空間の公開APIです。</target>
        </trans-unit>
        <trans-unit id="421722a728515dd9d97eb55931c38685942e1b09" translate="yes" xml:space="preserve">
          <source>Public API for tf.xla namespace.</source>
          <target state="translated">tf.xla名前空間の公開API。</target>
        </trans-unit>
        <trans-unit id="750fff145461df375542ee51a37de21f98a0b2a0" translate="yes" xml:space="preserve">
          <source>Public API for tf.xla.experimental namespace.</source>
          <target state="translated">tf.xla.experimental namespaceの公開APIです。</target>
        </trans-unit>
        <trans-unit id="dd530e0dae2cc75ede8b142df153852b9561a8ba" translate="yes" xml:space="preserve">
          <source>Publicly accessible method for determining the current backend.</source>
          <target state="translated">現在のバックエンドを決定するための公開された方法。</target>
        </trans-unit>
        <trans-unit id="2475701b49c6a4c56f3e05da71ec74afd7a11fca" translate="yes" xml:space="preserve">
          <source>Python 2 and 3</source>
          <target state="translated">パイソン2と3</target>
        </trans-unit>
        <trans-unit id="e33ad0a39e1919b7258c3e6c8e0f708e15c8adae" translate="yes" xml:space="preserve">
          <source>Python &lt;code&gt;bool&lt;/code&gt; describing behavior when a stat is undefined.</source>
          <target state="translated">統計が未定義の場合の動作を説明するPython &lt;code&gt;bool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4bcbf7fe8cda04487afed1715073c79dae11ae0" translate="yes" xml:space="preserve">
          <source>Python &lt;code&gt;bool&lt;/code&gt; indicating possibly expensive checks are enabled.</source>
          <target state="translated">高価になる可能性があるチェックを示すPython &lt;code&gt;bool&lt;/code&gt; が有効になっています。</target>
        </trans-unit>
        <trans-unit id="78b82cf14a257cb5e2f88a1a2b5fed924d2aa4b8" translate="yes" xml:space="preserve">
          <source>Python &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">Python &lt;code&gt;integer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a05ca8b5daea68f6003f88b8e194b4fb48d4030" translate="yes" xml:space="preserve">
          <source>Python bool; if &lt;code&gt;True&lt;/code&gt; the TensorArray can grow dynamically.</source>
          <target state="translated">Python bool; &lt;code&gt;True&lt;/code&gt; の場合、TensorArrayは動的に拡大できます。</target>
        </trans-unit>
        <trans-unit id="17b50a5cbe813d49f8facdaa9666ed00030d4551" translate="yes" xml:space="preserve">
          <source>Python dictionary.</source>
          <target state="translated">Pythonの辞書。</target>
        </trans-unit>
        <trans-unit id="fc8c480c05768904f16d54cabe3d12fe434d42d9" translate="yes" xml:space="preserve">
          <source>Python functions for directly manipulating TFRecord-formatted files.</source>
          <target state="translated">TFRecord形式のファイルを直接操作するためのPython関数です。</target>
        </trans-unit>
        <trans-unit id="9ed5483a9a63274c076822627b8380e64dc0aa98" translate="yes" xml:space="preserve">
          <source>Python integer, or None if the tensor rank is undefined.</source>
          <target state="translated">Pythonの整数,テンソルのランクが未定義の場合はNone.</target>
        </trans-unit>
        <trans-unit id="ad76baa590950e7fd5f36426f7698844a8eb01af" translate="yes" xml:space="preserve">
          <source>Python numerical arguments should only be used when they take few distinct values, such as hyperparameters like the number of layers in a neural network.</source>
          <target state="translated">Pythonの数値引数は、ニューラルネットワークのレイヤー数のようなハイパーパラメータのように、いくつかの明確な値を取る場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d80d467d7de716042d1ea937402254243119c44" translate="yes" xml:space="preserve">
          <source>Python2 Compatibility</source>
          <target state="translated">Python2 の互換性</target>
        </trans-unit>
        <trans-unit id="0635e275dc8f5a579d303113893735d6a2423d13" translate="yes" xml:space="preserve">
          <source>Quantile function. Aka &quot;inverse cdf&quot; or &quot;percent point function&quot;.</source>
          <target state="translated">分位関数。別名「逆CDF」または「パーセントポイント関数」。</target>
        </trans-unit>
        <trans-unit id="3b03b2625336c702eef541b64c6263f6982757a7" translate="yes" xml:space="preserve">
          <source>Quantization is called fake since the output is still in floating point.</source>
          <target state="translated">量子化は、出力が浮動小数点のままなのでフェイクと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="0ae38d6b0dd638c5950bf5a817fc108aa2ddb100" translate="yes" xml:space="preserve">
          <source>Quantize the 'input' tensor of type float to 'output' tensor of type 'T'.</source>
          <target state="translated">float型の'入力'テンソルを'T'型の'出力'テンソルに量子化します。</target>
        </trans-unit>
        <trans-unit id="3ae11653f6030d8c44bb8ba496a25e7c50a657ac" translate="yes" xml:space="preserve">
          <source>Quantizes then dequantizes a tensor.</source>
          <target state="translated">テンソルを量子化してから量子化解除します。</target>
        </trans-unit>
        <trans-unit id="cd1a01e766e73806e7f1deb9b803b49b992051db" translate="yes" xml:space="preserve">
          <source>QueueRunners are not compatible with eager execution. Instead, please use &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; to get data into your model.</source>
          <target state="translated">QueueRunnerは熱心な実行と互換性がありません。代わりに、&lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;を使用してモデルにデータを取得してください。</target>
        </trans-unit>
        <trans-unit id="f2e16776529ec20e7ab9880048db6446f999b28a" translate="yes" xml:space="preserve">
          <source>Queues are a convenient TensorFlow mechanism to compute tensors asynchronously using multiple threads. For example in the canonical 'Input Reader' setup one set of threads generates filenames in a queue; a second set of threads read records from the files, processes them, and enqueues tensors on a second queue; a third set of threads dequeues these input records to construct batches and runs them through training operations.</source>
          <target state="translated">キューは、複数のスレッドを使って非同期的にテンソルを計算するための便利なTensorFlowのメカニズムです。例えば、標準的な 'Input Reader' セットアップでは、1組のスレッドがキューにファイル名を生成し、2組目のスレッドがファイルからレコードを読み込み、それらを処理し、2組目のキューにテンソルを待ち受けにします;3組目のスレッドは、バッチを構築するためにこれらの入力レコードを待ち受けにし、それらをトレーニング操作を通して実行します。</target>
        </trans-unit>
        <trans-unit id="1742c084ada33668bc9c277ea9c4c6548a7c704e" translate="yes" xml:space="preserve">
          <source>Queues are not compatible with eager execution. To ingest data when eager execution is enabled, use the &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">キューは熱心な実行と互換性がありません。&lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;実行が有効になっているときにデータを取り込むには、tf.data APIを使用します。</target>
        </trans-unit>
        <trans-unit id="5f478dcc53daf61b3b48ee35fa4c1da6822da711" translate="yes" xml:space="preserve">
          <source>RFC 4180 format is expected for the CSV records. (https://tools.ietf.org/html/rfc4180) Note that we allow leading and trailing spaces with int or float field.</source>
          <target state="translated">CSVレコードはRFC 4180形式を想定しています。(https://tools.ietf.org/html/rfc4180)int または float フィールドの先頭と末尾のスペースを許可していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="31442f7d075565e096ca320749812a82d7932483" translate="yes" xml:space="preserve">
          <source>RNN cell composed sequentially of multiple simple cells.</source>
          <target state="translated">複数の単純な細胞から順次構成されるRNN細胞。</target>
        </trans-unit>
        <trans-unit id="8ffd14bb271a3402d66695d560d27e2af773d6fc" translate="yes" xml:space="preserve">
          <source>RNN that accepts a state saver for time-truncated RNN calculation. (deprecated)</source>
          <target state="translated">時間切れのRNN計算のためのステートセイバーを受け入れるRNN。(廃止予定)</target>
        </trans-unit>
        <trans-unit id="bd2c34b20ca59db3a6440066fbffd8c1187ee1b4" translate="yes" xml:space="preserve">
          <source>RNNCell wrapper that ensures cell inputs are added to the outputs.</source>
          <target state="translated">セルの入力が出力に追加されることを保証するRNNCellラッパー.</target>
        </trans-unit>
        <trans-unit id="aa5ee495e246a9d4a049acbca904000403e5fa55" translate="yes" xml:space="preserve">
          <source>Ragged Tensors.</source>
          <target state="translated">ラグド・テンソル</target>
        </trans-unit>
        <trans-unit id="9df8e83edbc3a7baecb751992f609d264501bd3b" translate="yes" xml:space="preserve">
          <source>Ragged tensors</source>
          <target state="translated">ラグドテンソル</target>
        </trans-unit>
        <trans-unit id="02a5419401d210fc6cfe07793f457cdc48b3b588" translate="yes" xml:space="preserve">
          <source>Raised if there is a flag naming conflict.</source>
          <target state="translated">フラグの名前付けの競合がある場合に発生します。</target>
        </trans-unit>
        <trans-unit id="b2d3e64b7cf2a4ba230ba51fca3bf982c6e792a5" translate="yes" xml:space="preserve">
          <source>Raised when a deadline expires before an operation could complete.</source>
          <target state="translated">操作が完了する前に期限が切れた場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f35d3b28902e6af5a71becef5a3e027b976d8dcf" translate="yes" xml:space="preserve">
          <source>Raised when a flag is unrecognized.</source>
          <target state="translated">フラグが認識されていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="3e34deebb30b5ba82fd1285a32163176714333e8" translate="yes" xml:space="preserve">
          <source>Raised when a flag name conflicts with FlagValues methods.</source>
          <target state="translated">フラグ名が FlagValues メソッドと競合する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="1f5bc090792b5a1c5005c5f6ea3c3476c4158875" translate="yes" xml:space="preserve">
          <source>Raised when a requested entity (e.g., a file or directory) was not found.</source>
          <target state="translated">要求されたエンティティ (ファイルやディレクトリなど)が見つからなかった場合に発生します。</target>
        </trans-unit>
        <trans-unit id="02ba9549d2176523e5c3ced9903cb39bfda66f34" translate="yes" xml:space="preserve">
          <source>Raised when accessing the flag value from unparsed FlagValues.</source>
          <target state="translated">アンパースされたFlagValuesからフラグ値にアクセスしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="0ae67ae659d4f9c87107299d6982f1b560efbbcd" translate="yes" xml:space="preserve">
          <source>Raised when an entity that we attempted to create already exists.</source>
          <target state="translated">作成しようとしたエンティティが既に存在する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f06e6887f7b287d17b44c4cff6fc385f5a863dc3" translate="yes" xml:space="preserve">
          <source>Raised when an operation has not been implemented.</source>
          <target state="translated">操作が実装されていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f63d446c39b0a3fa40e4468187e7d519ee6e0745" translate="yes" xml:space="preserve">
          <source>Raised when an operation iterates past the valid input range.</source>
          <target state="translated">操作が有効な入力範囲を超えた場合に発生します。</target>
        </trans-unit>
        <trans-unit id="da2516468163e92478b102f199e3f659bb5d5ff5" translate="yes" xml:space="preserve">
          <source>Raised when an operation or step is cancelled.</source>
          <target state="translated">操作またはステップがキャンセルされた場合に発生します。</target>
        </trans-unit>
        <trans-unit id="15f257ed5cb87fae74794ffaae5b8d3332c37291" translate="yes" xml:space="preserve">
          <source>Raised when an operation receives an invalid argument.</source>
          <target state="translated">操作が無効な引数を受け取ると発生します。</target>
        </trans-unit>
        <trans-unit id="78664ee08378e46c140d1654d705e084e0d423d2" translate="yes" xml:space="preserve">
          <source>Raised when flag validator constraint is not satisfied.</source>
          <target state="translated">フラグバリデータ制約が満たされていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="64518a998948d4fb4b3c525adbeae88332436ffb" translate="yes" xml:space="preserve">
          <source>Raised when flagfile fails to open.</source>
          <target state="translated">フラグファイルが開かない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="69922c371e88bf1f7ef5cd9000995bbd577147c5" translate="yes" xml:space="preserve">
          <source>Raised when the caller does not have permission to run an operation.</source>
          <target state="translated">呼び出し元が操作を実行する権限を持っていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="1bcc79886554f3612aa7c3044b1209c9f1f0ab4d" translate="yes" xml:space="preserve">
          <source>Raised when the flag command line argument is illegal.</source>
          <target state="translated">フラグのコマンドライン引数が不正な場合に発生します。</target>
        </trans-unit>
        <trans-unit id="a0d94d1d7fe4f59c631af3fb575ee3f072d2c47c" translate="yes" xml:space="preserve">
          <source>Raised when the runtime is currently unavailable.</source>
          <target state="translated">ランタイムが現在利用できない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="935ffefb4b7946fee3346a057661a07fc35b28fd" translate="yes" xml:space="preserve">
          <source>Raised when the system experiences an internal error.</source>
          <target state="translated">システムに内部エラーが発生した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="0824f9ce8ee6a9a61d37123916020f8fba459f6f" translate="yes" xml:space="preserve">
          <source>Raised when unrecoverable data loss or corruption is encountered.</source>
          <target state="translated">回復不可能なデータの損失または破損が発生した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="translated">Raises</target>
        </trans-unit>
        <trans-unit id="f9a16ac72ef6c9d7c400331bb394067bba770be3" translate="yes" xml:space="preserve">
          <source>Raises AssertionError if a and b are not equal dictionaries.</source>
          <target state="translated">a と b が等しくない辞書の場合、AssertionError を発生させます。</target>
        </trans-unit>
        <trans-unit id="ed9da2b877dfe8a9c867607689612de5885bf471" translate="yes" xml:space="preserve">
          <source>Raises TypeError: if &lt;code&gt;dataset&lt;/code&gt; is not a &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;. TypeError: if the elements produced by the dataset are not scalar strings.</source>
          <target state="translated">TypeErrorを発生させます： &lt;code&gt;dataset&lt;/code&gt; が&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;でない場合。TypeError：データセットによって生成された要素がスカラー文字列でない場合。</target>
        </trans-unit>
        <trans-unit id="a67d89a4ce0cf4a0f8d774ca23677a079bcf1f56" translate="yes" xml:space="preserve">
          <source>Raises an exception if &lt;code&gt;other&lt;/code&gt; is not compatible with this Dimension.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; がこのDimensionと互換性がない場合、例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="099b34a9797a27a7db554e95bb1e5b7c483d426a" translate="yes" xml:space="preserve">
          <source>Raises an exception if &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; do not have compatible ranks.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; が互換性のあるランクを持っていない場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="4e637fcd7c60ccc3e5e8a18f36c4b26334e89e87" translate="yes" xml:space="preserve">
          <source>Raises an exception if &lt;code&gt;self&lt;/code&gt; is not compatible with the given &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; が指定された &lt;code&gt;rank&lt;/code&gt; と互換性がない場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="f95c1f0958622be62008a71a7a1ae373c867275c" translate="yes" xml:space="preserve">
          <source>Raises an exception if &lt;code&gt;self&lt;/code&gt; is not fully defined in every dimension.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; がすべての次元で完全に定義されていない場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="c3e67f892b85ce98e5bf19974ec6165f164e3b3c" translate="yes" xml:space="preserve">
          <source>Raises exception if &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; do not represent the same shape.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; が同じ形を表していない場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="64da9921d6b5e3126a2d4d767aec2d0a4c8006e3" translate="yes" xml:space="preserve">
          <source>Raises: ValueError if called with incompatible shapes.</source>
          <target state="translated">を発生させます。互換性のない形状で呼び出された場合の ValueError。</target>
        </trans-unit>
        <trans-unit id="63bab5a3619f2bf89e17c0703ceb049db4811309" translate="yes" xml:space="preserve">
          <source>Raises: ValueError: &lt;code&gt;axis&lt;/code&gt; is neither 0 or 1.</source>
          <target state="translated">発生：ValueError： &lt;code&gt;axis&lt;/code&gt; が0でも1でもありません。</target>
        </trans-unit>
        <trans-unit id="3f0ede75276426d213c95185f57fff7351ba0c77" translate="yes" xml:space="preserve">
          <source>Raises: ValueError: if the shape inference fails.</source>
          <target state="translated">を発生させます。ValueError:形状の推論に失敗した場合。</target>
        </trans-unit>
        <trans-unit id="66f55b5afb8cd6a93b5180e7b572fe50d943b337" translate="yes" xml:space="preserve">
          <source>Raises: ValueError: if there are more writers than specified.</source>
          <target state="translated">を発生させます。ValueError:指定された数よりも多くのライターが存在する場合。</target>
        </trans-unit>
        <trans-unit id="0c6eab1f53c119ddc5d528a760b4050c34c732d4" translate="yes" xml:space="preserve">
          <source>Random number generation</source>
          <target state="translated">乱数発生</target>
        </trans-unit>
        <trans-unit id="d7d8d905a619dfcb98083660ada6bac0c32ebaaf" translate="yes" xml:space="preserve">
          <source>Random-number generator.</source>
          <target state="translated">乱数発生器。</target>
        </trans-unit>
        <trans-unit id="e4d7a547bb12c287bc9083185947a2402d77fbba" translate="yes" xml:space="preserve">
          <source>RandomNormal instance.</source>
          <target state="translated">RandomNormalインスタンス。</target>
        </trans-unit>
        <trans-unit id="6c09ada8e86215312971bfd1b8ae691b57521693" translate="yes" xml:space="preserve">
          <source>Randomly changes jpeg encoding quality for inducing jpeg noise.</source>
          <target state="translated">jpegのエンコーディング品質をランダムに変更して、jpegノイズを発生させます。</target>
        </trans-unit>
        <trans-unit id="8d027ff04ec3184dc67b9da7f1e79fab0e178a41" translate="yes" xml:space="preserve">
          <source>Randomly crops a tensor to a given size.</source>
          <target state="translated">テンソルをランダムに所定のサイズに切り抜きます。</target>
        </trans-unit>
        <trans-unit id="dc093733be12bcd7aedcf02917a08032d237428d" translate="yes" xml:space="preserve">
          <source>Randomly flip a single image.</source>
          <target state="translated">1枚の画像をランダムに反転させます。</target>
        </trans-unit>
        <trans-unit id="5f0be3270b7de1e6d4a1d7b529742127c54459cf" translate="yes" xml:space="preserve">
          <source>Randomly flip an image horizontally (left to right).</source>
          <target state="translated">ランダムに画像を水平方向(左から右へ)に反転させます。</target>
        </trans-unit>
        <trans-unit id="0f624c88d8d6470dcb910e0fe43f975452fc14ea" translate="yes" xml:space="preserve">
          <source>Randomly flip multiple images.</source>
          <target state="translated">複数の画像をランダムに反転させます。</target>
        </trans-unit>
        <trans-unit id="14f808e1ed65da818399464f55e822d7438a1b71" translate="yes" xml:space="preserve">
          <source>Randomly flips an image vertically (upside down).</source>
          <target state="translated">ランダムに画像を縦方向(逆さま)に反転させます。</target>
        </trans-unit>
        <trans-unit id="f85e2f51067ecee6529ba3eb3e42b379423d299b" translate="yes" xml:space="preserve">
          <source>Randomly shuffles a tensor along its first dimension.</source>
          <target state="translated">テンソルをその1次元に沿ってランダムにシャッフルします。</target>
        </trans-unit>
        <trans-unit id="dc0cbbf0d473db47ebfd70b7f9dd8c6c220d47c4" translate="yes" xml:space="preserve">
          <source>Randomly shuffles the elements of this dataset.</source>
          <target state="translated">このデータセットの要素をランダムにシャッフルする。</target>
        </trans-unit>
        <trans-unit id="151798cbdc40731d64c085a4789a6aac1b36b427" translate="yes" xml:space="preserve">
          <source>Rank (in the sense of tensors) of matrix corresponding to this operator.</source>
          <target state="translated">この演算子に対応する行列のランク(テンソルの意味で)。</target>
        </trans-unit>
        <trans-unit id="9beaa97411f31931aab7bfe4dde832a190e17b96" translate="yes" xml:space="preserve">
          <source>Rate parameter.</source>
          <target state="translated">レートパラメータ。</target>
        </trans-unit>
        <trans-unit id="7bb99667b41dfb582d22b4513e3c372351e27796" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/math#Segmentation&quot;&gt;the section on segmentation&lt;/a&gt; for an explanation of segments.</source>
          <target state="translated">セグメントの説明については、&lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/math#Segmentation&quot;&gt;セグメンテーションのセクションを参照して&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="36f39358547cff710506e19ec1a07d3389f917fe" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/math#about_segmentation&quot;&gt;the section on segmentation&lt;/a&gt; for an explanation of segments.</source>
          <target state="translated">セグメントの説明については、&lt;a href=&quot;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/math#about_segmentation&quot;&gt;セグメンテーションのセクションを参照して&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="44ed69b4f2171954ccc6b57657687d5d5e341309" translate="yes" xml:space="preserve">
          <source>Read more about Skipgram in this gnomic paper by Mikolov et al.: &lt;a href=&quot;http://arxiv.org/pdf/1301.3781v3.pdf&quot;&gt;Efficient Estimation of Word Representations in Vector Space&lt;/a&gt;</source>
          <target state="translated">Mikolov et al。によるこのgnomicペーパーでSkipgramの詳細を読んでください：&lt;a href=&quot;http://arxiv.org/pdf/1301.3781v3.pdf&quot;&gt;ベクトル空間での単語表現の効率的な推定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab93aab779af709c10ce5b45fa8fcf440ba905cd" translate="yes" xml:space="preserve">
          <source>Read more at https://www.tensorflow.org/guide/extend/architecture</source>
          <target state="translated">続きを読む https://www.tensorflow.org/guide/extend/architecture</target>
        </trans-unit>
        <trans-unit id="8966353927d79cebf41b0c5d833b1bebdd4bbcab" translate="yes" xml:space="preserve">
          <source>Read the value at location &lt;code&gt;index&lt;/code&gt; in the TensorArray.</source>
          <target state="translated">TensorArrayのロケーション &lt;code&gt;index&lt;/code&gt; の値を読み取ります。</target>
        </trans-unit>
        <trans-unit id="02cb2660356658c21155a3545cc459a0618eb12a" translate="yes" xml:space="preserve">
          <source>Read-only properties: name: The name of the layer (string). dtype: Default dtype of the layer's weights (default of &lt;code&gt;None&lt;/code&gt; means use the type of the first input). trainable_variables: List of trainable variables. non_trainable_variables: List of non-trainable variables. variables: List of all variables of this layer, trainable and non-trainable. updates: List of update ops of this layer. losses: List of losses added by this layer. trainable_weights: List of variables to be included in backprop. non_trainable_weights: List of variables that should not be included in backprop. weights: The concatenation of the lists trainable_weights and non_trainable_weights (in this order).</source>
          <target state="translated">読み取り専用プロパティ：name：レイヤーの名前（文字列）。 dtype：レイヤーの重みのデフォルトのdtype（デフォルトの &lt;code&gt;None&lt;/code&gt; は、最初の入力のタイプを使用することを意味します）。 trainable_variables：トレーニング可能な変数のリスト。 non_trainable_variables：トレーニング不可能な変数のリスト。 variables：このレイヤーのすべての変数のリスト。トレーニング可能およびトレーニング不可。 updates：このレイヤーの更新操作のリスト。 loss：このレイヤーによって追加された損失のリスト。 trainable_weights：バックプロップに含まれる変数のリスト。 non_trainable_weights：バックプロップに含めてはならない変数のリスト。重み：リストtrainable_weightsとnon_trainable_weightsを（この順序で）連結したもの。</target>
        </trans-unit>
        <trans-unit id="17e75bcdc8e06928b4da6fa7a4955c72999c3da7" translate="yes" xml:space="preserve">
          <source>Read-only properties: name: The name of the layer (string). dtype: The dtype of the layer's computations and weights. If mixed precision is used with a &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt;, this is instead just the dtype of the layer's weights, as the computations are done in a different dtype. updates: List of update ops of this layer. losses: List of losses added by this layer. trainable_weights: List of variables to be included in backprop. non_trainable_weights: List of variables that should not be included in backprop. weights: The concatenation of the lists trainable_weights and non_trainable_weights (in this order).</source>
          <target state="translated">読み取り専用プロパティ：name：レイヤーの名前（文字列）。dtype：レイヤーの計算と重みのdtype。混合精度が&lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt;で使用される場合、計算は別のdtypeで行われるため、これは代わりに単にレイヤーの重みのdtypeです。updates：このレイヤーの更新操作のリスト。loss：このレイヤーによって追加された損失のリスト。trainable_weights：バックプロップに含まれる変数のリスト。non_trainable_weights：バックプロップに含めてはならない変数のリスト。重み：リストtrainable_weightsとnon_trainable_weightsを（この順序で）連結したもの。</target>
        </trans-unit>
        <trans-unit id="a61c4f92531eda7ccfbe13aaf7074519b753b5bd" translate="yes" xml:space="preserve">
          <source>Readahead files not implemented; simply returns given path.</source>
          <target state="translated">リードヘッドファイルは実装されていません。</target>
        </trans-unit>
        <trans-unit id="9dcbdc5517e434bdfe2d5eb7d2765fd47be3ed50" translate="yes" xml:space="preserve">
          <source>Readers are not compatible with eager execution. Instead, please use &lt;a href=&quot;../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; to get data into your model.</source>
          <target state="translated">リーダーは熱心な実行と互換性がありません。代わりに、&lt;a href=&quot;../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt;を使用してモデルにデータを取得してください。</target>
        </trans-unit>
        <trans-unit id="5e7d19d02e158869ddbebeda20b648d628ee5911" translate="yes" xml:space="preserve">
          <source>Reads CSV files into a dataset, where each element is a (features, labels) tuple that corresponds to a batch of CSV rows. The features dictionary maps feature column names to &lt;code&gt;Tensor&lt;/code&gt;s containing the corresponding feature data, and labels is a &lt;code&gt;Tensor&lt;/code&gt; containing the batch's label data.</source>
          <target state="translated">CSVファイルをデータセットに読み取ります。各要素は、CSV行のバッチに対応する（機能、ラベル）タプルです。機能ディクショナリは、機能の列名を対応する機能データを含む &lt;code&gt;Tensor&lt;/code&gt; にマッピングし、labelsはバッチのラベル​​データを含む &lt;code&gt;Tensor&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="58d86b97a7b246fc939469e2d8fe5b8ae2eb3b2c" translate="yes" xml:space="preserve">
          <source>Reads CSV files into a dataset.</source>
          <target state="translated">CSVファイルをデータセットに読み込みます。</target>
        </trans-unit>
        <trans-unit id="e1a5a364b8ba9f0d10ad50b5109800350e1064c4" translate="yes" xml:space="preserve">
          <source>Reads and outputs the entire contents of the input filename.</source>
          <target state="translated">入力されたファイル名の内容全体を読み込んで出力します。</target>
        </trans-unit>
        <trans-unit id="ceee15a0f442f3c41ef088635bac9a0c1f7d4193" translate="yes" xml:space="preserve">
          <source>Reads the next line from the file. Leaves the '\n' at the end.</source>
          <target state="translated">Reads the next line from the file.Leave the 'Leave the 'esson' at the end.</target>
        </trans-unit>
        <trans-unit id="f2f28f8966a9a36d7d20080250311492ecae3fd7" translate="yes" xml:space="preserve">
          <source>Reads the value of a variable.</source>
          <target state="translated">変数の値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="81675ca7fddc8f659b51898578c9a5c684ae1549" translate="yes" xml:space="preserve">
          <source>Real-valued fast Fourier transform.</source>
          <target state="translated">実値高速フーリエ変換。</target>
        </trans-unit>
        <trans-unit id="eea2df8ac2bb85a68b87dccd35351eef5237d72a" translate="yes" xml:space="preserve">
          <source>Rearranges (permutes) data from batch into blocks of spatial data, followed by cropping. This is the reverse transformation of SpaceToBatch. More specifically, this op outputs a copy of the input tensor where values from the &lt;code&gt;batch&lt;/code&gt; dimension are moved in spatial blocks to the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions, followed by cropping along the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions.</source>
          <target state="translated">データをバッチから空間データのブロックに再配置（置換）してから、トリミングを行います。これはSpaceToBatchの逆変換です。より具体的には、この演算は入力テンソルのコピーを出力し、 &lt;code&gt;batch&lt;/code&gt; ディメンションからの値が空間ブロックで &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; ディメンションに移動され、その後、 &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; ディメンションに沿ってトリミングされます。</target>
        </trans-unit>
        <trans-unit id="6a75f08be773e063aee00d3a38d7ca8690bdc215" translate="yes" xml:space="preserve">
          <source>Rearranges blocks of spatial data, into depth. More specifically, this op outputs a copy of the input tensor where values from the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions are moved to the &lt;code&gt;depth&lt;/code&gt; dimension. The attr &lt;code&gt;block_size&lt;/code&gt; indicates the input block size.</source>
          <target state="translated">空間データのブロックを詳細に再配置します。より具体的には、この演算は入力テンソルのコピーを出力し、 &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; 次元からの値が &lt;code&gt;depth&lt;/code&gt; 次元に移動します。attr &lt;code&gt;block_size&lt;/code&gt; は、入力ブロックサイズを示します。</target>
        </trans-unit>
        <trans-unit id="338cce58d5eb23fb57650627ce326ba5e68dc2fb" translate="yes" xml:space="preserve">
          <source>Rearranges data from depth into blocks of spatial data. This is the reverse transformation of SpaceToDepth. More specifically, this op outputs a copy of the input tensor where values from the &lt;code&gt;depth&lt;/code&gt; dimension are moved in spatial blocks to the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions. The attr &lt;code&gt;block_size&lt;/code&gt; indicates the input block size and how the data is moved.</source>
          <target state="translated">データを深度から空間データのブロックに再配置します。これはSpaceToDepthの逆変換です。より具体的には、この演算は、入力テンソルのコピーを出力します。ここでは、 &lt;code&gt;depth&lt;/code&gt; 次元の値が空間ブロックで &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; 次元に移動されます。attr &lt;code&gt;block_size&lt;/code&gt; は、入力ブロックサイズとデータの移動方法を示します。</target>
        </trans-unit>
        <trans-unit id="ca53dd1845505323452481c167fd690bc4b2cd20" translate="yes" xml:space="preserve">
          <source>Reasonable values for &lt;code&gt;decay&lt;/code&gt; are close to 1.0, typically in the multiple-nines range: 0.999, 0.9999, etc.</source>
          <target state="translated">&lt;code&gt;decay&lt;/code&gt; 妥当な値は1.0に近く、通常は複数の9の範囲：0.999、0.9999などです。</target>
        </trans-unit>
        <trans-unit id="a8f09725017867b7413aa04d3e8170b0442af991" translate="yes" xml:space="preserve">
          <source>Recommended usage:</source>
          <target state="translated">おすすめの使い方。</target>
        </trans-unit>
        <trans-unit id="2d40a3d4b23c33dba91182fa7193e3bc8d084647" translate="yes" xml:space="preserve">
          <source>Recommended:</source>
          <target state="translated">Recommended:</target>
        </trans-unit>
        <trans-unit id="0858cfed23eb0d3a195ae64a7ddfb0141e2e7c5a" translate="yes" xml:space="preserve">
          <source>Reconstructs a signal from a framed representation.</source>
          <target state="translated">フレーム表現から信号を再構成します。</target>
        </trans-unit>
        <trans-unit id="5b2d7646abb703ab25663c89425f84ea266a427c" translate="yes" xml:space="preserve">
          <source>Record operations for automatic differentiation.</source>
          <target state="translated">自動判別のための操作を記録します。</target>
        </trans-unit>
        <trans-unit id="c53343697c5db816b66bc005051d63fbf0cf9bc2" translate="yes" xml:space="preserve">
          <source>Record the full path to the asset.</source>
          <target state="translated">アセットへのフルパスを記録します。</target>
        </trans-unit>
        <trans-unit id="121cabacb59bd358fbc34af2baed3e09272cd7da" translate="yes" xml:space="preserve">
          <source>Records the latency of producing each element of the input dataset.</source>
          <target state="translated">入力データセットの各要素を生成する際の待ち時間を記録する.</target>
        </trans-unit>
        <trans-unit id="1f65944af649fb7b101ae2b7f78e2ccc1a5fcbbc" translate="yes" xml:space="preserve">
          <source>Records the module that defines a specific flag.</source>
          <target state="translated">特定のフラグを定義したモジュールを記録します。</target>
        </trans-unit>
        <trans-unit id="c4f99594cf2d0db27044c7589bcfa5d1589097de" translate="yes" xml:space="preserve">
          <source>Records the number of bytes produced by each element of the input dataset.</source>
          <target state="translated">入力データセットの各要素が生成したバイト数を記録する。</target>
        </trans-unit>
        <trans-unit id="eb3fd2693632a80f6ab651de647c3772183fd99a" translate="yes" xml:space="preserve">
          <source>Recovers the internal saver state after a crash.</source>
          <target state="translated">クラッシュ後に内部のセイバーの状態を回復します。</target>
        </trans-unit>
        <trans-unit id="3c3fe92060378df6fc0c0619c59c0a5fd4166d6f" translate="yes" xml:space="preserve">
          <source>Recreates a Graph saved in a &lt;code&gt;MetaGraphDef&lt;/code&gt; proto.</source>
          <target state="translated">&lt;code&gt;MetaGraphDef&lt;/code&gt; プロトに保存されたグラフを再作成します。</target>
        </trans-unit>
        <trans-unit id="c862e7427eac42aa3c06b898d6b077375e8b86e1" translate="yes" xml:space="preserve">
          <source>Rectified Linear Unit activation function.</source>
          <target state="translated">整流線形単位活性化関数。</target>
        </trans-unit>
        <trans-unit id="ba709a9e2232a86b22af235a759b19c4998555ba" translate="yes" xml:space="preserve">
          <source>Rectified linear unit.</source>
          <target state="translated">整流されたリニアユニット。</target>
        </trans-unit>
        <trans-unit id="d18425438cb3938f31c468d487e641745f2e7cec" translate="yes" xml:space="preserve">
          <source>Recurrent Neural Networks (RNN) with Keras</source>
          <target state="translated">ケラスを用いたリカレントニューラルネットワーク(RNN)</target>
        </trans-unit>
        <trans-unit id="520085b15bf2b7bf075147f0a78d8d43c2f285c2" translate="yes" xml:space="preserve">
          <source>Recursive directory tree generator for directories.</source>
          <target state="translated">ディレクトリのための再帰的ディレクトリツリー生成器。</target>
        </trans-unit>
        <trans-unit id="c12a034607ac15db7dca3770211122295202a3ec" translate="yes" xml:space="preserve">
          <source>Reduce &lt;code&gt;per_replica_value&lt;/code&gt; to &lt;code&gt;destinations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;per_replica_value&lt;/code&gt; を &lt;code&gt;destinations&lt;/code&gt; 減らします。</target>
        </trans-unit>
        <trans-unit id="9ab3281eeca5bea20af9dbb1ac4dcdf614eadf2b" translate="yes" xml:space="preserve">
          <source>Reduce &lt;code&gt;value&lt;/code&gt; across replicas.</source>
          <target state="translated">レプリカ全体の &lt;code&gt;value&lt;/code&gt; を減らします。</target>
        </trans-unit>
        <trans-unit id="a601cb7ccef08b333eee77d0428a7d939504d07d" translate="yes" xml:space="preserve">
          <source>Reduce PerReplica objects in a batch.</source>
          <target state="translated">バッチでPerReplicaオブジェクトを削減します。</target>
        </trans-unit>
        <trans-unit id="963e809fe39c7b647b6cc83db942c6f84abea642" translate="yes" xml:space="preserve">
          <source>Reduce each first element in &lt;code&gt;value_destination_pairs&lt;/code&gt; to each second element which indicates the destinations.</source>
          <target state="translated">&lt;code&gt;value_destination_pairs&lt;/code&gt; の最初の各要素を、宛先を示す各2番目の要素に減らします。</target>
        </trans-unit>
        <trans-unit id="1158e9c16a20015082a4123eb4d2c6a51474c844" translate="yes" xml:space="preserve">
          <source>Reduce elems using fn to combine them from left to right.</source>
          <target state="translated">fnを使って、左から右へとエレムを減らしていきます。</target>
        </trans-unit>
        <trans-unit id="90b8ba517f0e0a53b6ef5551b1dcf391961c68a0" translate="yes" xml:space="preserve">
          <source>Reduce elems using fn to combine them from right to left.</source>
          <target state="translated">fnを使って右から左へとエレムを減らしていきます。</target>
        </trans-unit>
        <trans-unit id="740c8acdc623bb40d8470ec72e7c359f99f4428f" translate="yes" xml:space="preserve">
          <source>Reduce learning rate when a metric has stopped improving.</source>
          <target state="translated">メトリックが改善しなくなったときの学習率を下げる</target>
        </trans-unit>
        <trans-unit id="8662c3b063fbb9c4dc03b1b2a4269246143d14fa" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;input&lt;/code&gt; along the dimensions given in &lt;code&gt;axis&lt;/code&gt;. Unless &lt;code&gt;keepdims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;keepdims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; で指定された次元に沿って &lt;code&gt;input&lt;/code&gt; を減らします。 &lt;code&gt;keepdims&lt;/code&gt; がtrueでない限り、テンソルのランクは &lt;code&gt;axis&lt;/code&gt; のエントリごとに1ずつ減少します。場合 &lt;code&gt;keepdims&lt;/code&gt; が真である、縮小寸法は、長さ1で保持されています。</target>
        </trans-unit>
        <trans-unit id="224d86f0a80ce274a2a0ad741b23ff7344d8022a" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;input_tensor&lt;/code&gt; along the dimensions given in &lt;code&gt;axis&lt;/code&gt;. Unless &lt;code&gt;keepdims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;keepdims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">&lt;code&gt;input_tensor&lt;/code&gt; れた次元に沿ってinput_tensorを減らし &lt;code&gt;axis&lt;/code&gt; 。 &lt;code&gt;keepdims&lt;/code&gt; がtrueでない限り、テンソルのランクは &lt;code&gt;axis&lt;/code&gt; のエントリごとに1ずつ減少します。場合 &lt;code&gt;keepdims&lt;/code&gt; が真である、縮小寸法は、長さ1で保持されています。</target>
        </trans-unit>
        <trans-unit id="5a1976e22d95ac2a748fbc7cd67b19d774bd09fd" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;sp_input&lt;/code&gt; along the dimensions given in &lt;code&gt;axis&lt;/code&gt;. Unless &lt;code&gt;keepdims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;keepdims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">&lt;code&gt;sp_input&lt;/code&gt; れた次元に沿ってsp_inputを減らし &lt;code&gt;axis&lt;/code&gt; 。 &lt;code&gt;keepdims&lt;/code&gt; がtrueでない限り、テンソルのランクは &lt;code&gt;axis&lt;/code&gt; のエントリごとに1ずつ減少します。場合 &lt;code&gt;keepdims&lt;/code&gt; が真である、縮小寸法は、長さ1で保持されています。</target>
        </trans-unit>
        <trans-unit id="70cdc3698dad551c97f3c27f75672c79bf735119" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;sp_input&lt;/code&gt; along the dimensions given in &lt;code&gt;reduction_axes&lt;/code&gt;. Unless &lt;code&gt;keepdims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;reduction_axes&lt;/code&gt;. If &lt;code&gt;keepdims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">減少 &lt;code&gt;sp_input&lt;/code&gt; で与えられる寸法に沿っ &lt;code&gt;reduction_axes&lt;/code&gt; 。 &lt;code&gt;keepdims&lt;/code&gt; がtrueでない限り、テンソルのランクは、 &lt;code&gt;reduction_axes&lt;/code&gt; のエントリごとに1ずつ減少します。場合 &lt;code&gt;keepdims&lt;/code&gt; が真である、縮小寸法は、長さ1で保持されています。</target>
        </trans-unit>
        <trans-unit id="33f6f42469b274e2162f75f436b2ac7bd5c58ff6" translate="yes" xml:space="preserve">
          <source>Reduces sparse updates into a variable reference using the &lt;code&gt;max&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 操作を使用して、スパース更新を変数参照に減らします。</target>
        </trans-unit>
        <trans-unit id="a98876ad2d7ca4ab81bfa5e519e1343c8042b034" translate="yes" xml:space="preserve">
          <source>Reduces sparse updates into a variable reference using the &lt;code&gt;min&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 操作を使用して、スパース更新を変数参照に減らします。</target>
        </trans-unit>
        <trans-unit id="6b273f86e8ed9a1278cd5bff4d9e0c947c9a0c72" translate="yes" xml:space="preserve">
          <source>Reduces the input dataset to a single element.</source>
          <target state="translated">入力データセットを1つの要素に縮小します。</target>
        </trans-unit>
        <trans-unit id="d21001c5a6e1ca202205fcd6dfa6f9693e259a38" translate="yes" xml:space="preserve">
          <source>Reduction using NCCL all-reduce.</source>
          <target state="translated">NCCL all-reduceを使用した削減。</target>
        </trans-unit>
        <trans-unit id="399750940819b016ea67de39bca09a952716425c" translate="yes" xml:space="preserve">
          <source>Reduction using hierarchical copy all-reduce.</source>
          <target state="translated">階層的なコピーall-reduceを使った削減。</target>
        </trans-unit>
        <trans-unit id="bd76760173b50b831dfa3133348395306ec3471b" translate="yes" xml:space="preserve">
          <source>Reductions and all-reduce: A &lt;em&gt;reduction&lt;/em&gt; is some method of aggregating multiple values into one value, like &quot;sum&quot; or &quot;mean&quot;. If a strategy is doing sync training, we will perform a reduction on the gradients to a parameter from all replicas before applying the update. &lt;em&gt;All-reduce&lt;/em&gt; is an algorithm for performing a reduction on values from multiple devices and making the result available on all of those devices.</source>
          <target state="translated">削減とall-reduce：&lt;em&gt;削減&lt;/em&gt;は、「合計」や「平均」のように、複数の値を1つの値に集約するいくつかの方法です。戦略が同期トレーニングを行っている場合は、更新を適用する前に、すべてのレプリカからのパラメーターへの勾配の削減を実行します。&lt;em&gt;All-reduce&lt;/em&gt;は、複数のデバイスからの値に対して削減を実行し、それらのすべてのデバイスで結果を利用できるようにするためのアルゴリズムです。</target>
        </trans-unit>
        <trans-unit id="a83ad9a9c471fb61ecd5cff9d5e7f3b3bc06d9bb" translate="yes" xml:space="preserve">
          <source>Reductions and scans (like: &lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;tf.math.reduce_mean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../math/cumsum&quot;&gt;&lt;code&gt;tf.math.cumsum&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">削減とスキャン（例：&lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;tf.math.reduce_mean&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../math/cumsum&quot;&gt; &lt;code&gt;tf.math.cumsum&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="413a9bc44f59a9e282d5f81a1b0a18eba3c7136d" translate="yes" xml:space="preserve">
          <source>Reductions and scans (like: &lt;a href=&quot;math/reduce_mean&quot;&gt;&lt;code&gt;tf.math.reduce_mean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;math/cumsum&quot;&gt;&lt;code&gt;tf.math.cumsum&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">削減とスキャン（例：&lt;a href=&quot;math/reduce_mean&quot;&gt; &lt;code&gt;tf.math.reduce_mean&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;math/cumsum&quot;&gt; &lt;code&gt;tf.math.cumsum&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
