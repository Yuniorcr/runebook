<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="bea50d392b3ef0615c6b28199087c323e7a52001" translate="yes" xml:space="preserve">
          <source>A symbol is a constant that is identified by a name without you having to give it a numeric value.</source>
          <target state="translated">シンボルとは、数値を与えなくても名前で識別できる定数のことです。</target>
        </trans-unit>
        <trans-unit id="0002a6c2fa7d837ea9ac5977dd831aad687ad6bc" translate="yes" xml:space="preserve">
          <source>A symbol literal.</source>
          <target state="translated">シンボルリテラル。</target>
        </trans-unit>
        <trans-unit id="a7e6e90a0892b28e1cd2ebf2b93352ad6bfee14d" translate="yes" xml:space="preserve">
          <source>A time zone database may not be present on all systems, especially non-Unix systems. In this case, you may need to distribute a copy of the database with an application that depends on time zone data being available.</source>
          <target state="translated">タイムゾーンデータベースは、すべてのシステム、特にUnix以外のシステムには存在しない場合があります。この場合、タイムゾーンデータが利用可能であることに依存するアプリケーションでデータベースのコピーを配布する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6a807f66a534d02b367618fc140fe5c74dbfe1bf" translate="yes" xml:space="preserve">
          <source>A token in a CSV. It consists of a &lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt; and a value. The value only makes sense when the &lt;em&gt;kind&lt;/em&gt; is &lt;code&gt;Cell&lt;/code&gt;.</source>
          <target state="translated">CSVのトークン。 &lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt; と値で構成されます。この値は、&lt;em&gt;種類&lt;/em&gt;が &lt;code&gt;Cell&lt;/code&gt; の場合にのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="c67961d65228c3f773fbbd0b0459e20d11ab5a9f" translate="yes" xml:space="preserve">
          <source>A tuple can be created with the usual &lt;code&gt;&lt;a href=&quot;tuple#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; method or with a tuple literal:</source>
          <target state="translated">タプルは、通常の &lt;code&gt;&lt;a href=&quot;tuple#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; メソッドまたはタプルリテラルを使用して作成できます。</target>
        </trans-unit>
        <trans-unit id="9966257a00316bbd347b252ddf1aa47cdd175467" translate="yes" xml:space="preserve">
          <source>A tuple is a fixed-size, immutable, stack-allocated sequence of values of possibly different types.</source>
          <target state="translated">タプルは、固定サイズで不変、スタックに割り当てられた、異なる型の可能性のある値のシーケンスです。</target>
        </trans-unit>
        <trans-unit id="52170c54bcbcf4c31a80170b3aaebff1862f5015" translate="yes" xml:space="preserve">
          <source>A tuple literal.</source>
          <target state="translated">タプルリテラル。</target>
        </trans-unit>
        <trans-unit id="9714647a5c4024e7551e3157be93a9b0107f2e44" translate="yes" xml:space="preserve">
          <source>A type &lt;code&gt;T&lt;/code&gt; can be deserialized from YAML by invoking &lt;code&gt;T.from_yaml(string_or_io)&lt;/code&gt;. For this to work, &lt;code&gt;T&lt;/code&gt; must implement &lt;code&gt;new(ctx : &lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;, node : &lt;a href=&quot;yaml/nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; and decode a value from the given &lt;em&gt;node&lt;/em&gt;, using &lt;em&gt;ctx&lt;/em&gt; to store and retrieve anchored values (see &lt;code&gt;&lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; for an explanation of this).</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; は、 &lt;code&gt;T.from_yaml(string_or_io)&lt;/code&gt; を呼び出すことによってYAMLから逆シリアル化できます。これを機能させるには、 &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;new(ctx : &lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;, node : &lt;a href=&quot;yaml/nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; を実装し、&lt;em&gt;ctx&lt;/em&gt;を使用してアンカー値を格納および取得して、指定された&lt;em&gt;ノード&lt;/em&gt;から値をデコードする必要があります（ &lt;code&gt;&lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 参照）この説明については）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e9b15b006d9aa492922fbd4edd3dbde9240bd5e" translate="yes" xml:space="preserve">
          <source>A type declaration like &lt;code&gt;x : &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x : &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; ような型宣言：&lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a4fa3248defd666e77983dce88289171aa6e4a8" translate="yes" xml:space="preserve">
          <source>A type union, like &lt;code&gt;(&lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; のような型共用体。</target>
        </trans-unit>
        <trans-unit id="e154b12662619b3cfbd1f127c81c5ef40922e087" translate="yes" xml:space="preserve">
          <source>A typed pointer to some memory.</source>
          <target state="translated">メモリへの型付きポインタ。</target>
        </trans-unit>
        <trans-unit id="0f52b6e36c6a2176df20204d4e6b2d2ed8cd1f27" translate="yes" xml:space="preserve">
          <source>A union can consist of an arbitrary large number of types. When invoking a method on an expression whose type is a union type, all types in the union must respond to the method, otherwise a compile-time error is given. The type of the method call is the union type of the return types of those methods.</source>
          <target state="translated">ユニオンは任意の数の型から構成されます。型がユニオン型である式に対してメソッドを呼び出す場合、ユニオン内のすべての型がメソッドに応答しなければならず、そうでない場合はコンパイル時エラーが発生します。メソッド呼び出しの型は、それらのメソッドの戻り値の型のユニオン型です。</target>
        </trans-unit>
        <trans-unit id="6e1e85474fad72855c6ce988f71664901900ca9f" translate="yes" xml:space="preserve">
          <source>A union type represents the possibility of a variable or an expression having more than one possible type at compile time.</source>
          <target state="translated">ユニオン型は、コンパイル時に複数の型を持つ変数や式の可能性を表します。</target>
        </trans-unit>
        <trans-unit id="ee03f08db16f79ac2a41396d64f5fd947ebc8309" translate="yes" xml:space="preserve">
          <source>A value that may be updated atomically.</source>
          <target state="translated">アトミックに更新される可能性のある値。</target>
        </trans-unit>
        <trans-unit id="dd5ab06edb5742c5745503431043fdd7ca19572c" translate="yes" xml:space="preserve">
          <source>A variable can be marked as thread local with an attribute:</source>
          <target state="translated">変数は、属性でスレッドローカルとしてマークすることができます。</target>
        </trans-unit>
        <trans-unit id="584bdd5f7fd28b75c7d87bd8ed1c489602875300" translate="yes" xml:space="preserve">
          <source>A visibility modifier</source>
          <target state="translated">可視性修飾子</target>
        </trans-unit>
        <trans-unit id="d4f7ff457122438908eb83f3abf162d063ea2a77" translate="yes" xml:space="preserve">
          <source>A warning</source>
          <target state="translated">警告</target>
        </trans-unit>
        <trans-unit id="202efd561828c77d296ba9ca6663068a370b4487" translate="yes" xml:space="preserve">
          <source>A working installation of &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com&quot;&gt;Gitの&lt;/a&gt;動作するインストール</target>
        </trans-unit>
        <trans-unit id="0015d9d3cf1bbd038a212094a60f27c017a63c74" translate="yes" xml:space="preserve">
          <source>A working installation of the &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Crystal compiler&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../using_the_compiler/index&quot;&gt;Crystalコンパイラの&lt;/a&gt;動作するインストール</target>
        </trans-unit>
        <trans-unit id="80814895f792a6f7f246bd42c09aff79acf96718" translate="yes" xml:space="preserve">
          <source>A write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object to compress data in the DEFLATE format.</source>
          <target state="translated">DEFLATE形式でデータを圧縮するための書き込み専用 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="15c401d41ed6e8c32f3b97f91f4060008ceb0beb" translate="yes" xml:space="preserve">
          <source>A write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object to compress data in the gzip format.</source>
          <target state="translated">データをgzip形式で圧縮するための書き込み専用 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3936f652062e595d31c5443e211e43675583ad05" translate="yes" xml:space="preserve">
          <source>A write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object to compress data in the zlib format.</source>
          <target state="translated">zlib形式でデータを圧縮するための書き込み専用 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="6dbd46220632f48f97cae38bc948baa46aff23c4" translate="yes" xml:space="preserve">
          <source>ABI#abi_info</source>
          <target state="translated">ABI#abi_info</target>
        </trans-unit>
        <trans-unit id="41e1e80aebb8f85f488e59e64658e5a9acc9c202" translate="yes" xml:space="preserve">
          <source>ABI#align</source>
          <target state="translated">ABI#align</target>
        </trans-unit>
        <trans-unit id="9c6ebda708661d4beff71ea2e8d78dfeb4bc4e08" translate="yes" xml:space="preserve">
          <source>ABI#align_offset</source>
          <target state="translated">ABI#align_offset</target>
        </trans-unit>
        <trans-unit id="d03b8246e59d07facae1a8c15fa6998d98615d6c" translate="yes" xml:space="preserve">
          <source>ABI#osx?</source>
          <target state="translated">ABI#osx?</target>
        </trans-unit>
        <trans-unit id="9ef29609ca8f55e3a9a9a17930f768cbd1b2d736" translate="yes" xml:space="preserve">
          <source>ABI#size</source>
          <target state="translated">ABI#size</target>
        </trans-unit>
        <trans-unit id="a86d17de047803ec33c0771a155d674373d93b16" translate="yes" xml:space="preserve">
          <source>ABI#target_data</source>
          <target state="translated">ABI#target_data</target>
        </trans-unit>
        <trans-unit id="26d7a5ccc7e1199f00ae5f6bf9e7a10f135ff93e" translate="yes" xml:space="preserve">
          <source>ABI#windows?</source>
          <target state="translated">ABI#windows?</target>
        </trans-unit>
        <trans-unit id="8bd44a620dbf82ffea1394d7247d9718b6a1180b" translate="yes" xml:space="preserve">
          <source>ABI.new</source>
          <target state="translated">ABI.new</target>
        </trans-unit>
        <trans-unit id="c855782d3e901340a68d9d3b29ae3a167e8423ab" translate="yes" xml:space="preserve">
          <source>ABI::AArch64</source>
          <target state="translated">ABI::AArch64</target>
        </trans-unit>
        <trans-unit id="2110d5dde46e5fd44ddf49ac2f2ae009059714f5" translate="yes" xml:space="preserve">
          <source>ABI::AArch64#abi_info</source>
          <target state="translated">ABI::AArch64#abi_info</target>
        </trans-unit>
        <trans-unit id="31ecf8949573726ab74113a04bf949a262c4fc89" translate="yes" xml:space="preserve">
          <source>ABI::AArch64#align</source>
          <target state="translated">ABI::AArch64#align</target>
        </trans-unit>
        <trans-unit id="8ba0da878eec58a378d9e140b6c6ad5b7e35adc9" translate="yes" xml:space="preserve">
          <source>ABI::AArch64#homogeneous_aggregate?</source>
          <target state="translated">ABI::AArch64#homogeneous_aggregate?</target>
        </trans-unit>
        <trans-unit id="970bfadf61929f6bdd5a6e6c79ec60069fc62d5d" translate="yes" xml:space="preserve">
          <source>ABI::AArch64#register?</source>
          <target state="translated">ABI::AArch64#register?</target>
        </trans-unit>
        <trans-unit id="792f3776822ac4243036428ad600602d7320344e" translate="yes" xml:space="preserve">
          <source>ABI::AArch64#size</source>
          <target state="translated">ABI::AArch64#size</target>
        </trans-unit>
        <trans-unit id="091cdd3ab00ff43dad40e22a8336ceed20943de3" translate="yes" xml:space="preserve">
          <source>ABI::ARM</source>
          <target state="translated">ABI::ARM</target>
        </trans-unit>
        <trans-unit id="c0716c326322b4ca5a2f965e65f099bd028697f5" translate="yes" xml:space="preserve">
          <source>ABI::ARM#abi_info</source>
          <target state="translated">ABI::ARM#abi_info</target>
        </trans-unit>
        <trans-unit id="d969c2eabfa5471649ca900ef01bd255ea35ccc5" translate="yes" xml:space="preserve">
          <source>ABI::ARM#align</source>
          <target state="translated">ABI::ARM#align</target>
        </trans-unit>
        <trans-unit id="818d51fabafe495bdec6d5bdecdb6a74a61de283" translate="yes" xml:space="preserve">
          <source>ABI::ARM#register?</source>
          <target state="translated">ABI::ARM#register?</target>
        </trans-unit>
        <trans-unit id="75adc977a88c1ffa1106b5bac0b2d1736bdf773c" translate="yes" xml:space="preserve">
          <source>ABI::ARM#size</source>
          <target state="translated">ABI::ARM#size</target>
        </trans-unit>
        <trans-unit id="8447eab6f940fa2d3524be9aad4dcd687089703d" translate="yes" xml:space="preserve">
          <source>ABI::ArgKind</source>
          <target state="translated">ABI::ArgKind</target>
        </trans-unit>
        <trans-unit id="442c5298d02c2eb872cab7a0e31dcd241347307a" translate="yes" xml:space="preserve">
          <source>ABI::ArgKind#direct?</source>
          <target state="translated">ABI::ArgKind#direct?</target>
        </trans-unit>
        <trans-unit id="f0af8af3a20d810d59281dcb216105696c7c9c2b" translate="yes" xml:space="preserve">
          <source>ABI::ArgKind#ignore?</source>
          <target state="translated">ABI::ArgKind#ignore?</target>
        </trans-unit>
        <trans-unit id="dae0cb9ed8fb934b16611ee0428ca0d5113645a0" translate="yes" xml:space="preserve">
          <source>ABI::ArgKind#indirect?</source>
          <target state="translated">ABI::ArgKind#indirect?</target>
        </trans-unit>
        <trans-unit id="1783c1408ce4532631dfc429d7399d8738bbd80c" translate="yes" xml:space="preserve">
          <source>ABI::ArgType</source>
          <target state="translated">ABI::ArgType</target>
        </trans-unit>
        <trans-unit id="9b43a71dd01950cb0ce000afd7d1fe236ffebd14" translate="yes" xml:space="preserve">
          <source>ABI::ArgType#attr</source>
          <target state="translated">ABI::ArgType#attr</target>
        </trans-unit>
        <trans-unit id="613b9ffdff0114c3df7b81a59815f0acb57b30f0" translate="yes" xml:space="preserve">
          <source>ABI::ArgType#cast</source>
          <target state="translated">ABI::ArgType#cast</target>
        </trans-unit>
        <trans-unit id="114ca0f02eb8974cb882554c32764bf3e46ea181" translate="yes" xml:space="preserve">
          <source>ABI::ArgType#kind</source>
          <target state="translated">ABI::ArgType#kind</target>
        </trans-unit>
        <trans-unit id="246d261af67e1107cc3e06e802e86cd756cd322a" translate="yes" xml:space="preserve">
          <source>ABI::ArgType#pad</source>
          <target state="translated">ABI::ArgType#pad</target>
        </trans-unit>
        <trans-unit id="8348d3e3d114eb5b14a68106e451c50b36022167" translate="yes" xml:space="preserve">
          <source>ABI::ArgType#type</source>
          <target state="translated">ABI::ArgType#type</target>
        </trans-unit>
        <trans-unit id="d34383a4005b64532fca800501c1a27296936845" translate="yes" xml:space="preserve">
          <source>ABI::ArgType.direct</source>
          <target state="translated">ABI::ArgType.direct</target>
        </trans-unit>
        <trans-unit id="ac488295d7feb76090e912490251513dc1095e3b" translate="yes" xml:space="preserve">
          <source>ABI::ArgType.ignore</source>
          <target state="translated">ABI::ArgType.ignore</target>
        </trans-unit>
        <trans-unit id="e8dc414eab41239142bda99eb6054169cc067242" translate="yes" xml:space="preserve">
          <source>ABI::ArgType.indirect</source>
          <target state="translated">ABI::ArgType.indirect</target>
        </trans-unit>
        <trans-unit id="15d01c62e6c8745d1708d6da0eed989a9e9f7dc0" translate="yes" xml:space="preserve">
          <source>ABI::ArgType.new</source>
          <target state="translated">ABI::ArgType.new</target>
        </trans-unit>
        <trans-unit id="d971720ff4c32de83530491aeaafd81e0c45cc7b" translate="yes" xml:space="preserve">
          <source>ABI::FunctionType</source>
          <target state="translated">ABI::FunctionType</target>
        </trans-unit>
        <trans-unit id="4453db799e10a912621f280f7f4c36a3fdb4869e" translate="yes" xml:space="preserve">
          <source>ABI::FunctionType#arg_types</source>
          <target state="translated">ABI::FunctionType#arg_types</target>
        </trans-unit>
        <trans-unit id="85ed91c847d214db45499f15531107a49910484f" translate="yes" xml:space="preserve">
          <source>ABI::FunctionType#return_type</source>
          <target state="translated">ABI::FunctionType#return_type</target>
        </trans-unit>
        <trans-unit id="411e00a5e99ffb9040ad7bd4461cd88bdfa04eef" translate="yes" xml:space="preserve">
          <source>ABI::FunctionType.new</source>
          <target state="translated">ABI::FunctionType.new</target>
        </trans-unit>
        <trans-unit id="92f9a6cb807f2e5bee9897ca8eb2bbe578cbd920" translate="yes" xml:space="preserve">
          <source>ABI::X86</source>
          <target state="translated">ABI::X86</target>
        </trans-unit>
        <trans-unit id="4939fcef101219190720ddc75873700f8b0bba4d" translate="yes" xml:space="preserve">
          <source>ABI::X86#abi_info</source>
          <target state="translated">ABI::X86#abi_info</target>
        </trans-unit>
        <trans-unit id="fcde1ec66e506aa8b16703edafee2fa07ca15450" translate="yes" xml:space="preserve">
          <source>ABI::X86#align</source>
          <target state="translated">ABI::X86#align</target>
        </trans-unit>
        <trans-unit id="e534921cc804f32c53d852047664a84a5dd7dae7" translate="yes" xml:space="preserve">
          <source>ABI::X86#size</source>
          <target state="translated">ABI::X86#size</target>
        </trans-unit>
        <trans-unit id="ac5058c09b4d60cd90227b46f1e3589aa2b0f6bb" translate="yes" xml:space="preserve">
          <source>ABI::X86_64</source>
          <target state="translated">ABI::X86_64</target>
        </trans-unit>
        <trans-unit id="359ef3baa52783dede706edfd969a95d5c6bdfec" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#abi_info</source>
          <target state="translated">ABI::X86_64#abi_info</target>
        </trans-unit>
        <trans-unit id="92ad4f97bc0558f3bf2e5802cb42a3001f7b5212" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#align</source>
          <target state="translated">ABI::X86_64#align</target>
        </trans-unit>
        <trans-unit id="688e0e06728d85e362e12d319b52fe4a1d8c3466" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#all_mem</source>
          <target state="translated">ABI::X86_64#all_mem</target>
        </trans-unit>
        <trans-unit id="8dfa68a1a956f324160c7ffe5f4d6990b62c6404" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#classify</source>
          <target state="translated">ABI::X86_64#classify</target>
        </trans-unit>
        <trans-unit id="81b23505edb4b677bfca3e5aa9b461eab7d3719f" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#classify_struct</source>
          <target state="translated">ABI::X86_64#classify_struct</target>
        </trans-unit>
        <trans-unit id="b8c24be71ecc24c9a0fd9d7ba0f2ba91d25c733b" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#fixup</source>
          <target state="translated">ABI::X86_64#fixup</target>
        </trans-unit>
        <trans-unit id="15fdbfe3f1bb5d3832c5472100c29c1b89436946" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#llreg</source>
          <target state="translated">ABI::X86_64#llreg</target>
        </trans-unit>
        <trans-unit id="978d9fd7ccdd893de3ca52a7160bd20bbe2673c8" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#llvec_len</source>
          <target state="translated">ABI::X86_64#llvec_len</target>
        </trans-unit>
        <trans-unit id="671f656686ccfb6a70bfbfb6eb9c87f2c90bd008" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#pass_by_val?</source>
          <target state="translated">ABI::X86_64#pass_by_val?</target>
        </trans-unit>
        <trans-unit id="688334f390d037bb4981cab2105038b1ba5af3b6" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#register?</source>
          <target state="translated">ABI::X86_64#register?</target>
        </trans-unit>
        <trans-unit id="d6f5357c9f7605a4c146a471fbdf4a234aa5eefc" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#size</source>
          <target state="translated">ABI::X86_64#size</target>
        </trans-unit>
        <trans-unit id="6c9e99dd4aa8e7673cd84035ffe8530a631f742a" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#sret?</source>
          <target state="translated">ABI::X86_64#sret?</target>
        </trans-unit>
        <trans-unit id="0bbba22c23a914b3b8dd9f10ff8eefe2b17e3b41" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#unify</source>
          <target state="translated">ABI::X86_64#unify</target>
        </trans-unit>
        <trans-unit id="cf92048b0d80e91c7cf4c61136cbe6ed40ac7bca" translate="yes" xml:space="preserve">
          <source>ABI::X86_64#x86_64_type</source>
          <target state="translated">ABI::X86_64#x86_64_type</target>
        </trans-unit>
        <trans-unit id="74cab500e317799717334de1dadb0d33356a6d2e" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass</source>
          <target state="translated">ABI::X86_64::RegClass</target>
        </trans-unit>
        <trans-unit id="261a3f7686e04012c1f990696bd1999a0e3fe35b" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#complex_x87?</source>
          <target state="translated">ABI::X86_64::RegClass#complex_x87?</target>
        </trans-unit>
        <trans-unit id="b276804f86031d425f95454b1a8d651d94fbac7c" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#int?</source>
          <target state="translated">ABI::X86_64::RegClass#int?</target>
        </trans-unit>
        <trans-unit id="2cf83c2c250eb649892e7dc9ce9f6e36a66d0379" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#memory?</source>
          <target state="translated">ABI::X86_64::RegClass#memory?</target>
        </trans-unit>
        <trans-unit id="73b13d673047f089b142a3fea87d074d9151f89a" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#no_class?</source>
          <target state="translated">ABI::X86_64::RegClass#no_class?</target>
        </trans-unit>
        <trans-unit id="9eea8df62470d1a434a04255d54a92b1e460c690" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse?</source>
          <target state="translated">ABI::X86_64::RegClass#sse?</target>
        </trans-unit>
        <trans-unit id="e04d5c2b1cc403d52079623d2df0de9636f8c5b3" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_ds?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_ds?</target>
        </trans-unit>
        <trans-unit id="51749ee08184e7e3583b4bc4f705caa68a0e1c10" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_dv?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_dv?</target>
        </trans-unit>
        <trans-unit id="7752ba25d63fda7504362b75fecab6907a1b2bfc" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_fs?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_fs?</target>
        </trans-unit>
        <trans-unit id="22218c06179eefb1a69b0b48319c60bbd6bbff4e" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_fv?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_fv?</target>
        </trans-unit>
        <trans-unit id="edf7ff0875e94f4161e37e1b29702f8db509378b" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_int?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_int?</target>
        </trans-unit>
        <trans-unit id="c326559fc2a6011a3d50fc2b91730ff47b5b00e3" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#sse_up?</source>
          <target state="translated">ABI::X86_64::RegClass#sse_up?</target>
        </trans-unit>
        <trans-unit id="89dca61ec95a3045d48e88d3794fd2eb1cdd824c" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#x87?</source>
          <target state="translated">ABI::X86_64::RegClass#x87?</target>
        </trans-unit>
        <trans-unit id="7e36d6b7a8ed7945d93e10b31c1ecaea47714213" translate="yes" xml:space="preserve">
          <source>ABI::X86_64::RegClass#x87_up?</source>
          <target state="translated">ABI::X86_64::RegClass#x87_up?</target>
        </trans-unit>
        <trans-unit id="cd927d1e3457b1657a623da29e241c96af4178d5" translate="yes" xml:space="preserve">
          <source>About the Cost</source>
          <target state="translated">コストについて</target>
        </trans-unit>
        <trans-unit id="cdf9adb0ffd4ae9f8847b6ffb17381f25508ca79" translate="yes" xml:space="preserve">
          <source>Abstract class of all YAML tree nodes.</source>
          <target state="translated">すべてのYAMLツリーノードの抽象クラス。</target>
        </trans-unit>
        <trans-unit id="347f6fec431f2a2d41de26a0a3f703cee796117d" translate="yes" xml:space="preserve">
          <source>Abstract methods can also be defined in modules, and the compiler will check that including types implement them.</source>
          <target state="translated">抽象メソッドはモジュールで定義することもでき、コンパイラは型を含めてそれらを実装しているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="d30cecc2da3df7ae331ad82d2a3335fd758d406f" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection and returns the client socket.</source>
          <target state="translated">着信接続を受け入れ、クライアントソケットを返します。</target>
        </trans-unit>
        <trans-unit id="d7c4432e592a484a7838809d55e9f57529f93124" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection and yields the client socket to the block.</source>
          <target state="translated">着信接続を受け入れ、ブロックにクライアントソケットを渡します。</target>
        </trans-unit>
        <trans-unit id="641449ac1ebe02fdee57ceec95b4ee272d50045e" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection and yields the client socket to the block. Eventually closes the connection when the block returns.</source>
          <target state="translated">着信接続を受け入れ、ブロックにクライアントソケットを渡します。最終的には、ブロックが戻ってきたときに接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="29ea8f061fa8c06d8a31be9b596433350c25021b" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection.</source>
          <target state="translated">着信接続を受け付けます。</target>
        </trans-unit>
        <trans-unit id="45d344a6edf29f16a8a29db75abd6f1c6a140784" translate="yes" xml:space="preserve">
          <source>Accepts an optional &lt;em&gt;offset&lt;/em&gt; parameter, which tells it to start counting from there. So, a more human friendly version of the previous snippet would be:</source>
          <target state="translated">オプションの&lt;em&gt;オフセット&lt;/em&gt;パラメーターを受け入れ、そこからカウントを開始するように指示します。したがって、前のスニペットのより人間に優しいバージョンは次のようになります。</target>
        </trans-unit>
        <trans-unit id="4e8c830173e4905d0b4247b14c93113df2a74486" translate="yes" xml:space="preserve">
          <source>Accepts an optional parameter &lt;em&gt;if_none&lt;/em&gt;, to set what gets returned if no element is found (defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">オプションのパラメーター&lt;em&gt;if_noneを&lt;/em&gt;受け入れ、要素が見つからない場合に何を返すかを設定します（デフォルトは &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13633ec8234dee401ddb9a029a1e7c6b3c0caf78" translate="yes" xml:space="preserve">
          <source>Access to an instance variable, e.g. &lt;code&gt;obj.@var&lt;/code&gt;.</source>
          <target state="translated">インスタンス変数へのアクセス（例： &lt;code&gt;obj.@var&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d1d234f5fde713a94454f268833adcd39835fe8" translate="yes" xml:space="preserve">
          <source>AccessToken</source>
          <target state="translated">AccessToken</target>
        </trans-unit>
        <trans-unit id="4d7d0c4f68db61873a9eb533547b52b1ff8293d2" translate="yes" xml:space="preserve">
          <source>AccessToken#access_token</source>
          <target state="translated">AccessToken#access_token</target>
        </trans-unit>
        <trans-unit id="d9ac497ca5ad23527b6b926375597e38d2aaf6c1" translate="yes" xml:space="preserve">
          <source>AccessToken#access_token=</source>
          <target state="translated">AccessToken#access_token=</target>
        </trans-unit>
        <trans-unit id="93fb5dc735eb68c7a68b9bd67f1769178a38018b" translate="yes" xml:space="preserve">
          <source>AccessToken#authenticate</source>
          <target state="translated">AccessToken#authenticate</target>
        </trans-unit>
        <trans-unit id="aa820cfe7845b6e83c3c67f43a1af04868d4e350" translate="yes" xml:space="preserve">
          <source>AccessToken#expires_in</source>
          <target state="translated">AccessToken#expires_in</target>
        </trans-unit>
        <trans-unit id="719f76c6e1d64d5bd8589e5745ae0432343c202f" translate="yes" xml:space="preserve">
          <source>AccessToken#expires_in=</source>
          <target state="translated">AccessToken#expires_in=</target>
        </trans-unit>
        <trans-unit id="dc27213cb2effcfd73a7243993d53695b48756e6" translate="yes" xml:space="preserve">
          <source>AccessToken#extra</source>
          <target state="translated">AccessToken#extra</target>
        </trans-unit>
        <trans-unit id="4616e0a27ced8bb580e8c1137625f9ae105a816c" translate="yes" xml:space="preserve">
          <source>AccessToken#extra=</source>
          <target state="translated">AccessToken#extra=</target>
        </trans-unit>
        <trans-unit id="a5d2e19c428deab36f5b767a5a58d89221496210" translate="yes" xml:space="preserve">
          <source>AccessToken#refresh_token</source>
          <target state="translated">AccessToken#refresh_token</target>
        </trans-unit>
        <trans-unit id="3d2d2f312123136e4c64b4200945cf5719468163" translate="yes" xml:space="preserve">
          <source>AccessToken#refresh_token=</source>
          <target state="translated">AccessToken#refresh_token=</target>
        </trans-unit>
        <trans-unit id="436366d5945e01e55d3fa918115ca09bfbb99f86" translate="yes" xml:space="preserve">
          <source>AccessToken#scope</source>
          <target state="translated">AccessToken#scope</target>
        </trans-unit>
        <trans-unit id="49ad10142a58360bc5aae4fb7977bbe9d26b15a3" translate="yes" xml:space="preserve">
          <source>AccessToken#scope=</source>
          <target state="translated">AccessToken#scope=</target>
        </trans-unit>
        <trans-unit id="b778af9bde6fc110f77d3fcf9d67eff009e753a6" translate="yes" xml:space="preserve">
          <source>AccessToken#secret</source>
          <target state="translated">AccessToken#secret</target>
        </trans-unit>
        <trans-unit id="ab5d26c93ba240b9f299bd570b84c30b5eb169c5" translate="yes" xml:space="preserve">
          <source>AccessToken#to_json</source>
          <target state="translated">AccessToken#to_json</target>
        </trans-unit>
        <trans-unit id="742071248d8cbf6c72b4cdcaf2da43e6ff8d55ab" translate="yes" xml:space="preserve">
          <source>AccessToken#token</source>
          <target state="translated">AccessToken#token</target>
        </trans-unit>
        <trans-unit id="7603906a360325a06a4f2a56e5eaabb6e4068e17" translate="yes" xml:space="preserve">
          <source>AccessToken.from_response</source>
          <target state="translated">AccessToken.from_response</target>
        </trans-unit>
        <trans-unit id="cd9680366f3d8ae3773300b0b07a5148bae55c67" translate="yes" xml:space="preserve">
          <source>AccessToken.new</source>
          <target state="translated">AccessToken.new</target>
        </trans-unit>
        <trans-unit id="367e378047504f0f39a9641f9467bccef22f60f4" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer</source>
          <target state="translated">AccessToken::Bearer</target>
        </trans-unit>
        <trans-unit id="57c085ec479e6b755290d4cc34ac43eb55064ec2" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#==</source>
          <target state="translated">AccessToken::Bearer#==</target>
        </trans-unit>
        <trans-unit id="88d3b43cfae9fce1d3ecfab8b061792a353a819d" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#authenticate</source>
          <target state="translated">AccessToken::Bearer#authenticate</target>
        </trans-unit>
        <trans-unit id="a4fe66ed035ef33f65266b667a8ca13bbb7d1012" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#hash</source>
          <target state="translated">AccessToken::Bearer#hash</target>
        </trans-unit>
        <trans-unit id="2e22e0ddf808d5255820cf7138700ac79e9b2397" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#to_json</source>
          <target state="translated">AccessToken::Bearer#to_json</target>
        </trans-unit>
        <trans-unit id="1271a475e32d46af73d5b7a99f9dc998ea4f7205" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer#token_type</source>
          <target state="translated">AccessToken::Bearer#token_type</target>
        </trans-unit>
        <trans-unit id="8adb828eaa01c01694810e20eaaec554bba7ad02" translate="yes" xml:space="preserve">
          <source>AccessToken::Bearer.new</source>
          <target state="translated">AccessToken::Bearer.new</target>
        </trans-unit>
        <trans-unit id="142f03e3c6df892dc51f6af3077f915764d571ac" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac</source>
          <target state="translated">AccessToken::Mac</target>
        </trans-unit>
        <trans-unit id="0e4d845b10465b0e5c7b4272afbeafd94881a824" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#==</source>
          <target state="translated">AccessToken::Mac#==</target>
        </trans-unit>
        <trans-unit id="b30f699cbedf0a4cacde993cde84d015828cf324" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#authenticate</source>
          <target state="translated">AccessToken::Mac#authenticate</target>
        </trans-unit>
        <trans-unit id="d18199918b3f67c6f09e1bab6d020bbb938d9881" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#hash</source>
          <target state="translated">AccessToken::Mac#hash</target>
        </trans-unit>
        <trans-unit id="b80ade4b421874cbd457eb379b4d8f1fa8e7e461" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#issued_at</source>
          <target state="translated">AccessToken::Mac#issued_at</target>
        </trans-unit>
        <trans-unit id="a859a95c8b7b1bf8d4c06970836b9ee8f8fa5104" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#issued_at=</source>
          <target state="translated">AccessToken::Mac#issued_at=</target>
        </trans-unit>
        <trans-unit id="1f863abbd8969dbff5e80100eab883f374c91f8c" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_algorithm</source>
          <target state="translated">AccessToken::Mac#mac_algorithm</target>
        </trans-unit>
        <trans-unit id="2d1a4535cdc7b99bd50d1fc853d8381a7b3141ce" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_algorithm=</source>
          <target state="translated">AccessToken::Mac#mac_algorithm=</target>
        </trans-unit>
        <trans-unit id="ec7489252dfb77332dc51e1d9b554459e1a18bb9" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_key</source>
          <target state="translated">AccessToken::Mac#mac_key</target>
        </trans-unit>
        <trans-unit id="51162e878d3c8a46feb1b909101942a80fe442ec" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#mac_key=</source>
          <target state="translated">AccessToken::Mac#mac_key=</target>
        </trans-unit>
        <trans-unit id="263751d981dfda38bcbbd45085b1a11319bd26ad" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#to_json</source>
          <target state="translated">AccessToken::Mac#to_json</target>
        </trans-unit>
        <trans-unit id="d610d4e42edf24c0fc03f53f8cf14b04c3188f05" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac#token_type</source>
          <target state="translated">AccessToken::Mac#token_type</target>
        </trans-unit>
        <trans-unit id="e1bfc7249ae800303f17365d30d554c4b686ddbc" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac.new</source>
          <target state="translated">AccessToken::Mac.new</target>
        </trans-unit>
        <trans-unit id="fd01ba05464708f5462bba3876a680ad00de0ccc" translate="yes" xml:space="preserve">
          <source>AccessToken::Mac.signature</source>
          <target state="translated">AccessToken::Mac.signature</target>
        </trans-unit>
        <trans-unit id="164e57f1785cf77edc9aa5db8c5a2e98c1fd9634" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/README.md&quot;&gt;the Crystal Shards README&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/README.md&quot;&gt;Crystal Shards READMEに&lt;/a&gt;よると、</target>
        </trans-unit>
        <trans-unit id="daa5a20600dfa18d97895e2bf6b12a8dba40f8c2" translate="yes" xml:space="preserve">
          <source>Accordingly, in the input that says &lt;code&gt;tag version&lt;/code&gt;, type &lt;code&gt;v0.1.0&lt;/code&gt;. Make sure this matches the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;shard.yml&lt;/code&gt;. Title it &lt;code&gt;v0.1.0&lt;/code&gt; and write a short description for the release.</source>
          <target state="translated">したがって、 &lt;code&gt;tag version&lt;/code&gt; 示す入力で、 &lt;code&gt;v0.1.0&lt;/code&gt; と入力します。これが &lt;code&gt;shard.yml&lt;/code&gt; の &lt;code&gt;version&lt;/code&gt; と一致していることを確認してください。タイトルを &lt;code&gt;v0.1.0&lt;/code&gt; にし、リリースの短い説明を書いてください。</target>
        </trans-unit>
        <trans-unit id="116672ae6ceb211b89b5cc24d53045f44bb76b12" translate="yes" xml:space="preserve">
          <source>Acronyms</source>
          <target state="translated">Acronyms</target>
        </trans-unit>
        <trans-unit id="40bf7bf6cfb0a8b6fcf22d67a590b153132b18a1" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;description&lt;/code&gt; to your &lt;code&gt;shard.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shard.yml&lt;/code&gt; に &lt;code&gt;description&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="663c1c655cf310ee4fbe9eef114d25c2d8b6507e" translate="yes" xml:space="preserve">
          <source>Add and commit everything:</source>
          <target state="translated">すべてを追加してコミットします。</target>
        </trans-unit>
        <trans-unit id="aafac0104ae814f8d0ea977883bf403e89e4673f" translate="yes" xml:space="preserve">
          <source>Add the following &lt;code&gt;script&lt;/code&gt; to your &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">次の &lt;code&gt;script&lt;/code&gt; を &lt;code&gt;.travis.yml&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="b6355c5980f16856486284bfb00b8e9c31c366c9" translate="yes" xml:space="preserve">
          <source>Add the following lines to your &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; に次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="ce9d987d91453d896e3121d6dea7076a523cb502" translate="yes" xml:space="preserve">
          <source>Add the following markdown build badge below the description in your README to inform users what the most current release is: (Be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">READMEの説明の下に次の &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; ビルドバッジを追加して、最新のリリースをユーザーに通知します（必ず&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;と &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; を適宜置き換えてください）。</target>
        </trans-unit>
        <trans-unit id="a5d5e6d1d69842e31b66ed7a9c41787aea4c5c77" translate="yes" xml:space="preserve">
          <source>Add the remote: (Be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">リモートを追加します（ &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; を適宜置き換えてください）。</target>
        </trans-unit>
        <trans-unit id="95ee7d10571430d0e9ad15dd8fba1c4b4959a36e" translate="yes" xml:space="preserve">
          <source>Adding a page</source>
          <target state="translated">ページの追加</target>
        </trans-unit>
        <trans-unit id="e6c70d69ea8e44f4e898c8f66e171cdf5a057546" translate="yes" xml:space="preserve">
          <source>Addition: returns a new set containing the unique elements from both sets.</source>
          <target state="translated">追加:両方のセットから一意の要素を含む新しいセットを返します。</target>
        </trans-unit>
        <trans-unit id="219ef57240c3407a75d176dec39e4b747e5ef6cf" translate="yes" xml:space="preserve">
          <source>Additional examples:</source>
          <target state="translated">追加の例。</target>
        </trans-unit>
        <trans-unit id="45092b388a42ed354fd88abaa8a6103d711016c2" translate="yes" xml:space="preserve">
          <source>Additionally, a &lt;code&gt;&lt;a href=&quot;csv/row&quot;&gt;Row&lt;/a&gt;&lt;/code&gt; object can be obtained with the &lt;code&gt;&lt;a href=&quot;csv#row:Row-instance-method&quot;&gt;#row&lt;/a&gt;&lt;/code&gt; method which provides similar methods and can be converted to an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">さらに、 &lt;code&gt;&lt;a href=&quot;csv/row&quot;&gt;Row&lt;/a&gt;&lt;/code&gt; オブジェクトは &lt;code&gt;&lt;a href=&quot;csv#row:Row-instance-method&quot;&gt;#row&lt;/a&gt;&lt;/code&gt; メソッドで取得できます。これは、同様のメソッドを提供し、 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; に変換できます。</target>
        </trans-unit>
        <trans-unit id="add876ac86d789b9a751c04b427677fb97819cbd" translate="yes" xml:space="preserve">
          <source>Additionally, a call argument can have a splat (&lt;code&gt;*&lt;/code&gt;) or double splat (&lt;code&gt;**&lt;/code&gt;). A splat expands a &lt;a href=&quot;literals/tuple&quot;&gt;Tuple&lt;/a&gt; into positional arguments, while a double splat expands a &lt;a href=&quot;literals/named_tuple&quot;&gt;NamedTuple&lt;/a&gt; into named arguments. Multiple argument splats and double splats are allowed.</source>
          <target state="translated">さらに、呼び出し引数には、スプラット（ &lt;code&gt;*&lt;/code&gt; ）または二重スプラット（ &lt;code&gt;**&lt;/code&gt; ）を含めることができます。スプラットは&lt;a href=&quot;literals/tuple&quot;&gt;タプル&lt;/a&gt;を位置引数に展開しますが、&lt;a href=&quot;literals/named_tuple&quot;&gt;ダブルスプラット&lt;/a&gt;はNamedTupleを名前付き引数に展開します。複数の引数スプラットとダブルスプラットを使用できます。</target>
        </trans-unit>
        <trans-unit id="21925137817ad47244f4db97302a672bcd5743fa" translate="yes" xml:space="preserve">
          <source>Additionally, fresh variables with respect to some other AST node can be declared with &lt;code&gt;%var{key1, key2, ..., keyN}&lt;/code&gt;. For example:</source>
          <target state="translated">さらに、他のいくつかのASTノードに関する新しい変数は、 &lt;code&gt;%var{key1, key2, ..., keyN}&lt;/code&gt; で宣言できます。例えば：</target>
        </trans-unit>
        <trans-unit id="a51d462ae90a9de196ff1da187d7aa5b69603595" translate="yes" xml:space="preserve">
          <source>Additionally, if a program is compiled with &lt;code&gt;--release&lt;/code&gt;, the &lt;code&gt;release&lt;/code&gt; flag will be set.</source>
          <target state="translated">さらに、プログラムが &lt;code&gt;--release&lt;/code&gt; でコンパイルされている場合、 &lt;code&gt;release&lt;/code&gt; フラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="2d62f6a45de00933beae11017da5cddf920c1abc" translate="yes" xml:space="preserve">
          <source>Additionally, in the &lt;code&gt;else&lt;/code&gt; branch the type of the variable is guaranteed to be restricted to the types that don&amp;rsquo;t respond to that method:</source>
          <target state="translated">さらに、 &lt;code&gt;else&lt;/code&gt; ブランチでは、変数の型がそのメソッドに応答しない型に制限されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="2661f9ee6b5db0ac955786f0d707a146fb27f849" translate="yes" xml:space="preserve">
          <source>Additionally, in the &lt;code&gt;else&lt;/code&gt; branch the type of the variable is guaranteed to not be restricted by that type:</source>
          <target state="translated">さらに、 &lt;code&gt;else&lt;/code&gt; ブランチでは、変数の型がその型によって制限されないことが保証されています。</target>
        </trans-unit>
        <trans-unit id="9a548f32f0760d30d8107a491b59791f798e4dd4" translate="yes" xml:space="preserve">
          <source>Additionally, it provides some conveniences like &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;to_unsafe&lt;/code&gt; so writing bindings is as painless as possible.</source>
          <target state="translated">さらに、 &lt;code&gt;out&lt;/code&gt; や &lt;code&gt;to_unsafe&lt;/code&gt; のようないくつかの便利さを提供するので、バインディングの記述は可能な限り簡単です。</target>
        </trans-unit>
        <trans-unit id="430069b9f09c41c6fa22db949b609445a2eb34a3" translate="yes" xml:space="preserve">
          <source>Additionally, several methods, like &lt;code&gt;#gets&lt;/code&gt;, are implemented in a more efficient way.</source>
          <target state="translated">さらに、 &lt;code&gt;#gets&lt;/code&gt; などのいくつかのメソッドは、より効率的な方法で実装されています。</target>
        </trans-unit>
        <trans-unit id="36bea00f7d52315f11bd6288ff8d91abf5f24cce" translate="yes" xml:space="preserve">
          <source>Additionally, some &lt;code&gt;Enum&lt;/code&gt; methods check the &lt;code&gt;@[Flags]&lt;/code&gt; attribute. For example:</source>
          <target state="translated">さらに、一部の &lt;code&gt;Enum&lt;/code&gt; メソッドは &lt;code&gt;@[Flags]&lt;/code&gt; 属性をチェックします。例えば：</target>
        </trans-unit>
        <trans-unit id="f98b0777da6e8f32c83093bbc040eb1852ed4d3e" translate="yes" xml:space="preserve">
          <source>Additionally, some methods change their behaviour.</source>
          <target state="translated">さらに、いくつかの方法では、その行動が変化します。</target>
        </trans-unit>
        <trans-unit id="4de8cd497abe19bf72ddd61f36f91ca1a73f1401" translate="yes" xml:space="preserve">
          <source>Additionally, using &lt;code&gt;*&lt;/code&gt; when interpolating an &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt;&lt;code&gt;ArrayLiteral&lt;/code&gt;&lt;/a&gt; interpolates the elements separated by commas:</source>
          <target state="translated">さらに、&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt; &lt;code&gt;ArrayLiteral&lt;/code&gt; を&lt;/a&gt;補間するときに &lt;code&gt;*&lt;/code&gt; を使用すると、コンマで区切られた要素が補間されます。</target>
        </trans-unit>
        <trans-unit id="d70f93df5e8f9b55be44fbeee9d203972e3383d4" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">Address</target>
        </trans-unit>
        <trans-unit id="53cce0631f5ba4546493e150cc5ef970434eef7f" translate="yes" xml:space="preserve">
          <source>Address already in use</source>
          <target state="translated">既に使用されているアドレス</target>
        </trans-unit>
        <trans-unit id="cf3745f20c2bcb9c33dec185e795a8e5bec761e0" translate="yes" xml:space="preserve">
          <source>Address family not supported by protocol family</source>
          <target state="translated">プロトコルファミリでサポートされていないアドレスファミリ</target>
        </trans-unit>
        <trans-unit id="b15ad68e328b19604a79b65bad88d125e6933493" translate="yes" xml:space="preserve">
          <source>Address#==</source>
          <target state="translated">Address#==</target>
        </trans-unit>
        <trans-unit id="ead9d213b9ffa86135837647c803efbfa1183013" translate="yes" xml:space="preserve">
          <source>Address#family</source>
          <target state="translated">Address#family</target>
        </trans-unit>
        <trans-unit id="22e8491153dca828c976eb0200daf3fb673c4af9" translate="yes" xml:space="preserve">
          <source>Address#size</source>
          <target state="translated">Address#size</target>
        </trans-unit>
        <trans-unit id="d6af19a70813afd13d3310a629337600b4ac538a" translate="yes" xml:space="preserve">
          <source>Address#to_unsafe</source>
          <target state="translated">Address#to_unsafe</target>
        </trans-unit>
        <trans-unit id="dc791b4653b5a3907345f7321010770722782648" translate="yes" xml:space="preserve">
          <source>Address.from</source>
          <target state="translated">Address.from</target>
        </trans-unit>
        <trans-unit id="e7697e73fc5b026b7937958d2054304b1e93c6d6" translate="yes" xml:space="preserve">
          <source>Address.new</source>
          <target state="translated">Address.new</target>
        </trans-unit>
        <trans-unit id="055cb406d1d67aba06ddd7890251a64eef68fbd4" translate="yes" xml:space="preserve">
          <source>Address.parse</source>
          <target state="translated">Address.parse</target>
        </trans-unit>
        <trans-unit id="f6ad0e65ce9cac6f040675d094861848e31d4535" translate="yes" xml:space="preserve">
          <source>Addrinfo</source>
          <target state="translated">Addrinfo</target>
        </trans-unit>
        <trans-unit id="73d757cbe9f0c8063218f863eec3b0c38b4baeec" translate="yes" xml:space="preserve">
          <source>Addrinfo#family</source>
          <target state="translated">Addrinfo#family</target>
        </trans-unit>
        <trans-unit id="ac81fbad86e4c530d33461ef1bbc7915744df138" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip_address</source>
          <target state="translated">Addrinfo#ip_address</target>
        </trans-unit>
        <trans-unit id="d4b7d00b42438ccdfac67c0572cb6c5a408b53f7" translate="yes" xml:space="preserve">
          <source>Addrinfo#protocol</source>
          <target state="translated">Addrinfo#protocol</target>
        </trans-unit>
        <trans-unit id="458557fd4b51ba5a3ae858540f77c027533b86a9" translate="yes" xml:space="preserve">
          <source>Addrinfo#size</source>
          <target state="translated">Addrinfo#size</target>
        </trans-unit>
        <trans-unit id="20866b49fd56bdba1365ea63e4ac9a2fc569be3e" translate="yes" xml:space="preserve">
          <source>Addrinfo#to_unsafe</source>
          <target state="translated">Addrinfo#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d47e1aedcb0d3cbf5e09968698290591315cb4cc" translate="yes" xml:space="preserve">
          <source>Addrinfo#type</source>
          <target state="translated">Addrinfo#type</target>
        </trans-unit>
        <trans-unit id="3162154fda79a1a00ec8d83800770ec2a7a35b40" translate="yes" xml:space="preserve">
          <source>Addrinfo.resolve</source>
          <target state="translated">Addrinfo.resolve</target>
        </trans-unit>
        <trans-unit id="d885ae884501e1bdbadb0d36b8d2c8ad5e51c5f4" translate="yes" xml:space="preserve">
          <source>Addrinfo.tcp</source>
          <target state="translated">Addrinfo.tcp</target>
        </trans-unit>
        <trans-unit id="fe05fbc0742884c07b95b99140eb5429458875be" translate="yes" xml:space="preserve">
          <source>Addrinfo.udp</source>
          <target state="translated">Addrinfo.udp</target>
        </trans-unit>
        <trans-unit id="fa25e31e276262832d0e80ea6c11e1ef7fd4c6cc" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it.</source>
          <target state="translated">このコレクション内の &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt; - Cookieヘッダーを指定された &lt;code&gt;HTTP::Header&lt;/code&gt; インスタンスに追加して返します。</target>
        </trans-unit>
        <trans-unit id="b76a531a7d8295e429c48b4832f0a6f1d6a49383" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">このコレクション内の &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt; - Cookieヘッダーを指定された &lt;code&gt;HTTP::Header&lt;/code&gt; インスタンスに追加して返します。既存の &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; ヘッダーを削除します。</target>
        </trans-unit>
        <trans-unit id="91fffbff52dbd7a20cd88af437ad30205257d40c" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it.</source>
          <target state="translated">このコレクション内の &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; のヘッダーを指定された &lt;code&gt;HTTP::Header&lt;/code&gt; インスタンスに追加して返します。</target>
        </trans-unit>
        <trans-unit id="4d783e150b3c217c69e7df1895c63784d6e4c4ce" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers for the cookies in this collection to the given &lt;code&gt;HTTP::Header&lt;/code&gt; instance and returns it. Removes any existing &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in it.</source>
          <target state="translated">このコレクション内の &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; のヘッダーを指定された &lt;code&gt;HTTP::Header&lt;/code&gt; インスタンスに追加して返します。その中の既存の &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; ヘッダーを削除します。</target>
        </trans-unit>
        <trans-unit id="c4c1568e0a5b583dc1773886b8b2a5d7dbaca22a" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;&lt;a href=&quot;set#each(&amp;amp;block)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; element of &lt;em&gt;elems&lt;/em&gt; to the set and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set#each(&amp;amp;block)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 要素を&lt;em&gt;セット&lt;/em&gt;に追加し、 &lt;code&gt;self&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9e360ddab03d37a841d5ab4f28c8bdd59714a444" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all results of the passed block for each element in the collection.</source>
          <target state="translated">コレクション内の各要素について、渡されたブロックの&lt;em&gt;初期&lt;/em&gt;結果とすべての結果を追加します。</target>
        </trans-unit>
        <trans-unit id="41c3f6de2b122b7479a5f2c51748e58ac7340956" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together.</source>
          <target state="translated">コレクション内の&lt;em&gt;初期&lt;/em&gt;要素とすべての要素を一緒に追加します。</target>
        </trans-unit>
        <trans-unit id="b6227744b2750239b3f87f2a527ce2b4d145ed78" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together. The type of &lt;em&gt;initial&lt;/em&gt; will be the type of the sum, so use this if (for instance) you need to specify a large enough type to avoid overflow.</source>
          <target state="translated">コレクション内の&lt;em&gt;初期&lt;/em&gt;要素とすべての要素を一緒に追加します。タイプ&lt;em&gt;初期には、&lt;/em&gt;（例えば）あなたがオーバーフローを回避するために十分な大きさの型を指定する必要がある場合に、これを使用し、和の型になります。</target>
        </trans-unit>
        <trans-unit id="dec355527a302fc0bd89dda8ae3c9b5c17ea2e30" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;object&lt;/em&gt; to the set and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;をセットに追加し、 &lt;code&gt;self&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d2d0995ccb49c94a2428f7667e8810a33074f532" translate="yes" xml:space="preserve">
          <source>Adds &lt;em&gt;object&lt;/em&gt; to the set and returns &lt;code&gt;true&lt;/code&gt; on success and &lt;code&gt;false&lt;/code&gt; if the value was already in the set.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;をセットに追加し、成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、値がすでにセット内にある場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="6ab5b4bde9d8b6addc1c802478b54860d5ec2ce7" translate="yes" xml:space="preserve">
          <source>Adds JSON support to &lt;code&gt;&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;&lt;/code&gt; for use in a JSON mapping.</source>
          <target state="translated">JSONマッピングで使用するために、JSONサポートを &lt;code&gt;&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="82a5fba306ff7bbc646c427a6b45392aa092155d" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;&lt;em&gt;socket&lt;/em&gt; to this server.</source>
          <target state="translated">このサーバーに &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; &lt;em&gt;ソケット&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="47f54f50d80809d5bee8fadbacc25554c3b71426" translate="yes" xml:space="preserve">
          <source>Adds a callback to execute before each request.</source>
          <target state="translated">各リクエストの前に実行するコールバックを追加します。</target>
        </trans-unit>
        <trans-unit id="15437fe8b32967e595f0dd5ba34000a17d382d37" translate="yes" xml:space="preserve">
          <source>Adds a callback to execute before each request. This is usually used to set an authorization header. Any number of callbacks can be added.</source>
          <target state="translated">各リクエストの前に実行するコールバックを追加します。これは通常、認可ヘッダを設定するために使用されます。任意の数のコールバックを追加することができます。</target>
        </trans-unit>
        <trans-unit id="870968f6f752c1fa08cce73e14a403db0d45d3db" translate="yes" xml:space="preserve">
          <source>Adds a directory entry that will have the given &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;名前&lt;/em&gt;を持つディレクトリエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="473657f6f540cfeb4de6a5dcd13b99d657625276" translate="yes" xml:space="preserve">
          <source>Adds a form part called &lt;em&gt;name&lt;/em&gt;, with data from &lt;em&gt;io&lt;/em&gt; as the value.</source>
          <target state="translated">&lt;em&gt;io&lt;/em&gt;からのデータを値として、&lt;em&gt;name&lt;/em&gt;と呼ばれるフォームパーツを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f842f79e5d2c634b68586d37fc8bd207885dfb47" translate="yes" xml:space="preserve">
          <source>Adds a form part called &lt;em&gt;name&lt;/em&gt;, with data from &lt;em&gt;io&lt;/em&gt; as the value. &lt;em&gt;Metadata&lt;/em&gt; can be provided to add extra metadata about the file to the Content-Disposition header for the form part. Other headers can be added using &lt;em&gt;headers&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;io&lt;/em&gt;からのデータを値として、&lt;em&gt;name&lt;/em&gt;と呼ばれるフォームパーツを追加します。&lt;em&gt;メタデータ&lt;/em&gt;を提供して、ファイルに関する追加のメタデータをフォームパーツのContent-Dispositionヘッダーに追加できます。その他のヘッダが使用して追加することができ&lt;em&gt;ヘッダを&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47e06a9c78876f6c1cbca8192afa5deaed108e85" translate="yes" xml:space="preserve">
          <source>Adds a form part with the given &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値で&lt;/em&gt;フォームパーツを追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dcd2e9e3df4e0d99f403570c73489dfb8469a2c1" translate="yes" xml:space="preserve">
          <source>Adds a form part with the given &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;. &lt;em&gt;Headers&lt;/em&gt; can optionally be provided for the form part.</source>
          <target state="translated">指定された&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値で&lt;/em&gt;フォームパーツを追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;ヘッダー&lt;/em&gt;は、フォームパーツにオプションで提供できます。</target>
        </trans-unit>
        <trans-unit id="db81710d3c6f41b93a0c57b485239ede24510e74" translate="yes" xml:space="preserve">
          <source>Adds a key-value pair to the params being built.</source>
          <target state="translated">ビルド中のパラメータにキーと値のペアを追加します。</target>
        </trans-unit>
        <trans-unit id="a537c0b80c92783bfcf2801c4c2f8ac39783c012" translate="yes" xml:space="preserve">
          <source>Adds a separator, with an optional header message, that will be used to print the help.</source>
          <target state="translated">ヘルプを印刷するために使用される、オプションのヘッダメッセージ付きの区切り文字を追加します。</target>
        </trans-unit>
        <trans-unit id="901103f61dabee539e9f0e5120c408f494d294cc" translate="yes" xml:space="preserve">
          <source>Adds a temporary ECDH key curve to the TLS context.</source>
          <target state="translated">TLS コンテキストに一時的な ECDH キーカーブを追加します。</target>
        </trans-unit>
        <trans-unit id="018abadec4aba8a2af804a968ee16459f6a95f34" translate="yes" xml:space="preserve">
          <source>Adds a temporary ECDH key curve to the TLS context. This is required to enable the EECDH cipher suites. By default the prime256 curve will be used.</source>
          <target state="translated">一時的な ECDH 鍵曲線を TLS コンテキストに追加します。これは EECDH 暗号スイートを有効にするために必要です。デフォルトでは prime256 曲線が使用されます。</target>
        </trans-unit>
        <trans-unit id="ff111c813e05bbce43214f568bb9041aaf59e25f" translate="yes" xml:space="preserve">
          <source>Adds all of the given &lt;em&gt;values&lt;/em&gt; as key-value pairs to the params being built.</source>
          <target state="translated">指定されたすべての&lt;em&gt;値&lt;/em&gt;をキーと値のペアとして、構築中のパラメータに追加します。</target>
        </trans-unit>
        <trans-unit id="693b3697255ff02fcd1c0e850a87362f4dd9196b" translate="yes" xml:space="preserve">
          <source>Adds all results of the passed block for each element in the collection.</source>
          <target state="translated">コレクション内の各要素に対して、渡されたブロックのすべての結果を追加します。</target>
        </trans-unit>
        <trans-unit id="e184d976c847d1c787e6a1daac38ff6851607acc" translate="yes" xml:space="preserve">
          <source>Adds all the elements in the collection together.</source>
          <target state="translated">コレクションのすべての要素をまとめて追加します。</target>
        </trans-unit>
        <trans-unit id="d95d3b1254f479e05599544274812f706d9d4ca8" translate="yes" xml:space="preserve">
          <source>Adds an entry and yields &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">エントリを追加し、そのエントリの内容を書き込むための &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="01e34b0797aa5748b17b912557a1cde8c1a455af" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have &lt;em&gt;bytes&lt;/em&gt; as its contents.</source>
          <target state="translated">内容として&lt;em&gt;バイト&lt;/em&gt;を持つエントリを追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bc0ef49094b215deec3cc52408b126807dc0bbd2" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have &lt;em&gt;string&lt;/em&gt; as its contents.</source>
          <target state="translated">内容として&lt;em&gt;文字列&lt;/em&gt;を持つエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="5cea71f7c67569bacd42bb3d67eee2842efd9e32" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have its data copied from the given &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;からデータをコピーするエントリを追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0fc220a2b0450e33386560fcbaa578c4eb818b5d" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have its data copied from the given &lt;em&gt;data&lt;/em&gt;. If the given &lt;em&gt;data&lt;/em&gt; is a &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt;, it is automatically closed after data is copied from it.</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;からデータをコピーするエントリを追加し&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;::File&lt;/a&gt;&lt;/code&gt; の場合、データがコピーされた後、データは自動的に閉じられます。</target>
        </trans-unit>
        <trans-unit id="4b5b684cb763866a93371db2eb599d6fff22d2f7" translate="yes" xml:space="preserve">
          <source>Adds an entry that will have the given &lt;em&gt;filename&lt;/em&gt; and current time (&lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt;) and yields an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to write that entry's contents.</source>
          <target state="translated">指定された&lt;em&gt;ファイル名&lt;/em&gt;と現在の時刻（ &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）を持つエントリを追加し、そのエントリの内容を書き込むための &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="01643e4428b9393982f4d7194b8861725e827b9d" translate="yes" xml:space="preserve">
          <source>Adds an item to the beginning of the deque.</source>
          <target state="translated">デクの先頭にアイテムを追加します。</target>
        </trans-unit>
        <trans-unit id="d9ffba15c256997925ce4a918f654b6276fcf2ca" translate="yes" xml:space="preserve">
          <source>Adds an item to the end of the deque.</source>
          <target state="translated">デクの最後にアイテムを追加します。</target>
        </trans-unit>
        <trans-unit id="8067a23c99d370d02058359e6ed00c5ca184a68a" translate="yes" xml:space="preserve">
          <source>Adds code to be benchmarked</source>
          <target state="translated">ベンチマークするコードを追加</target>
        </trans-unit>
        <trans-unit id="e45778df2f6d4a3af80097e904d2d389f747059c" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to left of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;.</source>
          <target state="translated">少なくとも&lt;em&gt;lenの&lt;/em&gt;サイズになるまで、文字列の左側に&lt;em&gt;charの&lt;/em&gt;インスタンスを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b8d4805444379ae71e34a50807eecdd919b1c64b" translate="yes" xml:space="preserve">
          <source>Adds instances of &lt;em&gt;char&lt;/em&gt; to right of the string until it is at least size of &lt;em&gt;len&lt;/em&gt;.</source>
          <target state="translated">少なくとも&lt;em&gt;lenの&lt;/em&gt;サイズになるまで、文字列の右側に&lt;em&gt;charの&lt;/em&gt;インスタンスを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bde8316220f187a646ab14e619c9a8424824ba9" translate="yes" xml:space="preserve">
          <source>Adds modes to the TLS context.</source>
          <target state="translated">TLS コンテキストにモードを追加します。</target>
        </trans-unit>
        <trans-unit id="7fa766820c32b1024ee3657014a4edfaa1ea07aa" translate="yes" xml:space="preserve">
          <source>Adds options to the TLS context.</source>
          <target state="translated">TLS コンテキストにオプションを追加します。</target>
        </trans-unit>
        <trans-unit id="ea52fa6fe6d4cbd2cb037eeaeb401e8398993fd2" translate="yes" xml:space="preserve">
          <source>Adds or replaces a key.</source>
          <target state="translated">キーを追加または置換します。</target>
        </trans-unit>
        <trans-unit id="fcb106d887035e9402f207d331c5671d345ebe00" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;em&gt;cookie&lt;/em&gt; to this collection, overrides an existing cookie with the same name if present.</source>
          <target state="translated">指定された&lt;em&gt;Cookie&lt;/em&gt;をこのコレクションに追加し、存在する場合は同じ名前の既存のCookieをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a92142c11fb7ff7fbed13a72d98c23d2e4912952" translate="yes" xml:space="preserve">
          <source>Adds the value of &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の値を&lt;em&gt;otherに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="15916ea228038978ff5e724cafbd80324fd51736" translate="yes" xml:space="preserve">
          <source>Adler32</source>
          <target state="translated">Adler32</target>
        </trans-unit>
        <trans-unit id="4fc1fe471571043082f5d462ba8ff3d264b415b7" translate="yes" xml:space="preserve">
          <source>Advanced the cursor to the next row.</source>
          <target state="translated">カーソルを次の行に進めます。</target>
        </trans-unit>
        <trans-unit id="080980327c1286649958fbdedbd4d8d6fdafeb07" translate="yes" xml:space="preserve">
          <source>Advanced the cursor to the next row. Must be called once to position the cursor in the first row. Returns &lt;code&gt;true&lt;/code&gt; if a next row was found, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">カーソルを次の行に進めます。カーソルを最初の行に配置するには、1回呼び出す必要があります。次の行が見つかった場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f2f5415b1fb7be631b467a986eaba1158f241d60" translate="yes" xml:space="preserve">
          <source>After a file from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; has been read, it's removed from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以下からのファイルの後 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; が読み込まれている、それはから削除されます &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ada52a363361796458f62d6500a608f177e10c0" translate="yes" xml:space="preserve">
          <source>After an &lt;code&gt;if&lt;/code&gt;, a variable&amp;rsquo;s type depends on the type of the expressions used in both branches.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; の後、変数のタイプは両方のブランチで使用される式のタイプに依存します。</target>
        </trans-unit>
        <trans-unit id="76a1a524879c90d98cccf859c86a05101364e13f" translate="yes" xml:space="preserve">
          <source>After defining all server sockets to listen to, the server can be started by calling &lt;code&gt;&lt;a href=&quot;server#listen-instance-method&quot;&gt;#listen&lt;/a&gt;&lt;/code&gt;. This call blocks until the server is closed.</source>
          <target state="translated">リッスンするすべてのサーバーソケットを定義し &lt;code&gt;&lt;a href=&quot;server#listen-instance-method&quot;&gt;#listen&lt;/a&gt;&lt;/code&gt; を呼び出してサーバーを起動できます。この呼び出しは、サーバーが閉じるまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="456ebce51f188a175dd39dcf531587d1e4d15e11" translate="yes" xml:space="preserve">
          <source>After executing this, whenever the current process receives the corresponding signal, the passed function will be called (instead of the OS default). The handler will run in a signal-safe fiber thought the event loop; there is no limit to what functions can be called, unlike raw signals that run on the sigaltstack.</source>
          <target state="translated">これを実行すると、現在のプロセスが対応するシグナルを受信するたびに、渡された関数が(OSのデフォルトの代わりに)呼ばれます。ハンドラはイベントループをシグナルセーフなファイバーで実行されます。</target>
        </trans-unit>
        <trans-unit id="cfe962cfba01b8b0290927eddfc10ddc59ef7db9" translate="yes" xml:space="preserve">
          <source>After reading a next entry, previous entries can no longer be read (their &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will be closed.)</source>
          <target state="translated">次のエントリを読み取った後、以前のエントリを読み取ることができなくなります（その &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; は閉じられます）。</target>
        </trans-unit>
        <trans-unit id="02f02485ab679a9031f461bdbd3edab48ea42a79" translate="yes" xml:space="preserve">
          <source>Algorithm</source>
          <target state="translated">Algorithm</target>
        </trans-unit>
        <trans-unit id="c5ca6b8852e8e949362173f34c02d1cc72c8a08e" translate="yes" xml:space="preserve">
          <source>Algorithm#md4?</source>
          <target state="translated">Algorithm#md4?</target>
        </trans-unit>
        <trans-unit id="eb358e5c2ea58e9b72a8892cb893d10e88824fdc" translate="yes" xml:space="preserve">
          <source>Algorithm#md5?</source>
          <target state="translated">Algorithm#md5?</target>
        </trans-unit>
        <trans-unit id="fc55fd3c0ed3fd9b9be0124d6d110a60ed783a57" translate="yes" xml:space="preserve">
          <source>Algorithm#ripemd160?</source>
          <target state="translated">Algorithm#ripemd160?</target>
        </trans-unit>
        <trans-unit id="8fd08606e8a22e8cd5c35560317d04efcd637904" translate="yes" xml:space="preserve">
          <source>Algorithm#sha1?</source>
          <target state="translated">Algorithm#sha1?</target>
        </trans-unit>
        <trans-unit id="7ee86ef55787f0edec0476b77ee03ef91d15b3d8" translate="yes" xml:space="preserve">
          <source>Algorithm#sha224?</source>
          <target state="translated">Algorithm#sha224?</target>
        </trans-unit>
        <trans-unit id="2e9152e688f25664b7644d5c782ae8dfcf8f40a1" translate="yes" xml:space="preserve">
          <source>Algorithm#sha256?</source>
          <target state="translated">Algorithm#sha256?</target>
        </trans-unit>
        <trans-unit id="4ee02bae4327ee5051e01562d9c2a51e6fcef88a" translate="yes" xml:space="preserve">
          <source>Algorithm#sha384?</source>
          <target state="translated">Algorithm#sha384?</target>
        </trans-unit>
        <trans-unit id="02b5846a9f8a96ab736c2838fdbcb0130f4169b8" translate="yes" xml:space="preserve">
          <source>Algorithm#sha512?</source>
          <target state="translated">Algorithm#sha512?</target>
        </trans-unit>
        <trans-unit id="5d1449c162d387e37dd0da2c4ca887903d7fadf7" translate="yes" xml:space="preserve">
          <source>Algorithm#to_evp</source>
          <target state="translated">Algorithm#to_evp</target>
        </trans-unit>
        <trans-unit id="36de75e90e74736595f32f9b45c1bc89f6b64db7" translate="yes" xml:space="preserve">
          <source>Alias Definition</source>
          <target state="translated">エイリアスの定義</target>
        </trans-unit>
        <trans-unit id="5554774377a2bceb2be81fa0e4a1db1cc76a4ffd" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="4ba64c38d09841505e86a4e534f3786690c02d4e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;dir#new(path)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#new(path)-class-method&quot;&gt;.new(path)&lt;/a&gt;&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="881afbbe1bf94a918d577d8b10f3703a35216ed0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;set#add(object:T)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set#add(object:T)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="c54cc3d003cd569fb9a4f9b894a013c93ba015b6" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;iterator#each_slice(n,reuse=false)-instance-method&quot;&gt;#each_slice&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator#each_slice(n,reuse=false)-instance-method&quot;&gt;#each_slice&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="561bfd549530fe95f6336c6d13be1dbb9b694a2e" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;set#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="26d019919a51bd05d800bef4ce0b4346e7e2ba89" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;span#abs:Time::Span-instance-method&quot;&gt;#abs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span#abs:Time::Span-instance-method&quot;&gt;#abs&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="ab6c4cc1f9c142f328fe3457a8ca15f079749348" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;&lt;a href=&quot;span#total_seconds:Float64-instance-method&quot;&gt;#total_seconds&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span#total_seconds:Float64-instance-method&quot;&gt;#total_seconds&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="c9ef9d5993ccf1df02b48435c3895d21ddf8607c" translate="yes" xml:space="preserve">
          <source>Aliases are useful to avoid writing long type names, but also to be able to talk about recursive types:</source>
          <target state="translated">エイリアスは、長い型名を書かないようにするために便利ですが、再帰型の話ができるようにするためにも便利です。</target>
        </trans-unit>
        <trans-unit id="5b79de3b5277bd7c674bda8bb07677ff281eb536" translate="yes" xml:space="preserve">
          <source>All &quot;emitting&quot; methods support specifying a &quot;reference&quot; object that will be associated to the emitted object, so that when that reference object is emitted again an anchor and an alias will be created. This generates both more compact documents and allows handling recursive data structures.</source>
          <target state="translated">すべての &quot;放出 &quot;メソッドは、放出されたオブジェクトに関連付けられる &quot;参照 &quot;オブジェクトの指定をサポートしており、その参照オブジェクトが再び放出されたときにアンカーとエイリアスが作成されるようになっています。これにより、よりコンパクトなドキュメントを生成し、再帰的なデータ構造を扱うことができます。</target>
        </trans-unit>
        <trans-unit id="1b5d4892d7a84ca2fc2f6db42011b2bcae1bdef7" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../operators&quot;&gt;Crystal operators&lt;/a&gt; can be used as symbol names unquoted:</source>
          <target state="translated">すべての&lt;a href=&quot;../operators&quot;&gt;Crystal演算子&lt;/a&gt;は、引用符で囲まれていないシンボル名として使用できます。</target>
        </trans-unit>
        <trans-unit id="7d2bb16d4fc86fd3ba3cf30ad270e37eec4bd5d3" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;files&lt;/code&gt; arguments are concatenated into a single Crystal source. If an argument points to a folder, all spec files inside that folder are appended. If no &lt;code&gt;files&lt;/code&gt; argument is provided, the default is &lt;code&gt;./spec&lt;/code&gt;. A filename can be suffixed by &lt;code&gt;:&lt;/code&gt; and a line number, providing this location to the &lt;code&gt;--location&lt;/code&gt; runner option (see below).</source>
          <target state="translated">すべての &lt;code&gt;files&lt;/code&gt; 引数は、単一のCrystalソースに連結されます。引数がフォルダーを指す場合、そのフォルダー内のすべてのスペックファイルが追加されます。 &lt;code&gt;files&lt;/code&gt; 引数を指定しない場合、デフォルトは &lt;code&gt;./spec&lt;/code&gt; です。ファイル名の末尾には &lt;code&gt;:&lt;/code&gt; と行番号を付けることができ、この場所を &lt;code&gt;--location&lt;/code&gt; ランナーオプションに提供します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="67f6116292328f74371e84d7c7df2bdc08649f4a" translate="yes" xml:space="preserve">
          <source>All arguments can also be specified, in addition to their position, by their name. For example:</source>
          <target state="translated">すべての引数は、その位置に加えて、その名前で指定することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3f29e64b69bc02399ec156ed9f73c73f3838890c" translate="yes" xml:space="preserve">
          <source>All available methods to perform statements in a database are defined in &lt;code&gt;DB::QueryMethods&lt;/code&gt;.</source>
          <target state="translated">データベースでステートメントを実行するために使用できるすべてのメソッドは、 &lt;code&gt;DB::QueryMethods&lt;/code&gt; 定義されています。</target>
        </trans-unit>
        <trans-unit id="6b7afe9da79758753126f06d6a17c3742190bf58" translate="yes" xml:space="preserve">
          <source>All capture groups in the patterns after the first one will have their indexes offset.</source>
          <target state="translated">最初の1つ目以降のパターンのすべてのキャプチャグループは、そのインデックスがオフセットされます。</target>
        </trans-unit>
        <trans-unit id="b0f6bb156f1c69a27f6b520d1cae954ab6dea71a" translate="yes" xml:space="preserve">
          <source>All capture groups in the second operand will have their indexes offset.</source>
          <target state="translated">2番目のオペランドのすべてのキャプチャグループは、そのインデックスがオフセットされます。</target>
        </trans-unit>
        <trans-unit id="798d3f9fc024b57f612dfb0b22080ea85ad43e25" translate="yes" xml:space="preserve">
          <source>All elements in &lt;code&gt;self&lt;/code&gt; are returned in the Array. If matching elements in &lt;em&gt;others&lt;/em&gt; are missing (because they don't have that many elements) &lt;code&gt;nil&lt;/code&gt; is returned inside that tuple index.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 内のすべての要素は配列で返されます。&lt;em&gt;他の&lt;/em&gt;要素の一致する要素が欠落して&lt;em&gt;いる&lt;/em&gt;場合（要素の数が少ないため）、そのタプルインデックス内に &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e854558d081a3c00feefe4bce3c02398e982abf1" translate="yes" xml:space="preserve">
          <source>All enums inherit from &lt;a href=&quot;http://crystal-lang.org/api/Enum.html&quot;&gt;Enum&lt;/a&gt;.</source>
          <target state="translated">すべての列挙型は&lt;a href=&quot;http://crystal-lang.org/api/Enum.html&quot;&gt;Enumを&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="06d5b5079d41a14aedd696bf9c886ce1774fe6fc" translate="yes" xml:space="preserve">
          <source>All of the above macro calls work because we invoked &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt;, and the generated code looks like this:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; を呼び出したため、上記のマクロ呼び出しはすべて機能し、生成されたコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="ac497d2444a21830bb415d65149d4e4653dcda94" translate="yes" xml:space="preserve">
          <source>All of the elements in &lt;code&gt;self&lt;/code&gt; will be yielded: if &lt;em&gt;others&lt;/em&gt; don't have that many elements they will be returned as &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 内のすべての要素が生成されます。&lt;em&gt;他の&lt;/em&gt;要素がそれほど多くの要素を持たない場合、それらは &lt;code&gt;nil&lt;/code&gt; として返されます。</target>
        </trans-unit>
        <trans-unit id="86c33a013a38503d180dc530e1d4c9e41181e785" translate="yes" xml:space="preserve">
          <source>All options following the command are delegated to &lt;code&gt;crystal build&lt;/code&gt;.</source>
          <target state="translated">コマンドに続くすべてのオプションは、 &lt;code&gt;crystal build&lt;/code&gt; 委任されます。</target>
        </trans-unit>
        <trans-unit id="3f2cfd65cbfd1faf677d949bc828a8ef1bb77188" translate="yes" xml:space="preserve">
          <source>All possible JSON types.</source>
          <target state="translated">可能なすべてのJSON型。</target>
        </trans-unit>
        <trans-unit id="52353774126be868b80022f03c558bbd5cdc0d78" translate="yes" xml:space="preserve">
          <source>All valid YAML core schema types.</source>
          <target state="translated">すべての有効なYAMLコアスキーマタイプ</target>
        </trans-unit>
        <trans-unit id="55676b525f360c6bd3c024ef63960a1a1481d331" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to &lt;em&gt;value&lt;/em&gt; and returns a pointer to the first byte from that memory.</source>
          <target state="translated">&lt;em&gt;valueに&lt;/em&gt;初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て、そのメモリから最初のバイトへのポインタを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="815858c07d60bc4a1508b7d27ce8a80c12ab0148" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to &lt;em&gt;value&lt;/em&gt; and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">&lt;em&gt;valueに&lt;/em&gt;初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て、そのメモリから最初のバイトへのポインタを返します。メモリは &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; によって割り当てられるため、このメモリへのポインタがない場合、メモリは自動的に解放されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7525763b89938d45cd37b2d1519974d2a960980c" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0...size&lt;/code&gt;) and returns a pointer to the first byte from that memory.</source>
          <target state="translated">ブロックによって返された値に初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て（これは &lt;code&gt;0...size&lt;/code&gt; の範囲の各インデックスで1回呼び出されます）、そのメモリから最初のバイトへのポインターを返します。</target>
        </trans-unit>
        <trans-unit id="e81cced5423b4cd2ed1a36bdb1c46ba80f8753a1" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0...size&lt;/code&gt;) and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">ブロックによって返された値に初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て（これは &lt;code&gt;0...size&lt;/code&gt; の範囲の各インデックスで1回呼び出されます）、そのメモリから最初のバイトへのポインターを返します。メモリは &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; によって割り当てられるため、このメモリへのポインタがない場合、メモリは自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="42243fbe3d724a885ad57ecb0f99cbb4a6002eb4" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to zero and returns a pointer to the first byte from that memory.</source>
          <target state="translated">ゼロに初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て、そのメモリから最初のバイトへのポインターを返します。</target>
        </trans-unit>
        <trans-unit id="6d7e1fe6a5ee4277b6a952f6b897cdcc59156430" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes from the system's heap initialized to zero and returns a pointer to the first byte from that memory. The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">ゼロに初期化されたシステムのヒープから &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て、そのメモリから最初のバイトへのポインターを返します。メモリは &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; によって割り当てられるため、このメモリへのポインタがない場合、メモリは自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="84607e75ebcf2ee71dccd01f9be35cbf641e2e18" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to &lt;em&gt;value&lt;/em&gt; and returns a slice pointing to that memory.</source>
          <target state="translated">&lt;em&gt;value &lt;/em&gt; &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトの&lt;em&gt;valueに&lt;/em&gt;初期化されたヒープメモリを割り当て、そのメモリを指すスライスを返します。</target>
        </trans-unit>
        <trans-unit id="3b6e491d09a9451e62b010ab3851330018e5f3d9" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to the value returned by the block (which is invoked once with each index in the range &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;) and returns a slice pointing to that memory.</source>
          <target state="translated">ブロックから返された値に初期化されたヒープメモリの &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトを割り当て（ &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; の範囲の各インデックスで一度呼び出されます）、そのメモリを指すスライスを返します。</target>
        </trans-unit>
        <trans-unit id="cdb49b992b624d31c0bb94d7f481cb01e8ea9d43" translate="yes" xml:space="preserve">
          <source>Allocates &lt;code&gt;size * sizeof(T)&lt;/code&gt; bytes of heap memory initialized to zero and returns a slice pointing to that memory.</source>
          <target state="translated">ゼロに初期化された &lt;code&gt;size * sizeof(T)&lt;/code&gt; バイトのヒープメモリを割り当て、そのメモリを指すスライスを返します。</target>
        </trans-unit>
        <trans-unit id="76f8e1af8ff2f3754d3830e85e8cbac17a977b5e" translate="yes" xml:space="preserve">
          <source>Allocating any new object instances during garbage-collection might result in undefined behavior and most likely crashing your program.</source>
          <target state="translated">ガベージコレクション中に新しいオブジェクトインスタンスを割り当てると、定義されていない動作になり、プログラムがクラッシュする可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="b57f3f8196cb75396f7e010b1b01268cd6ce9bb9" translate="yes" xml:space="preserve">
          <source>Allocating heap memory is slow, and it puts more pressure on the Garbage Collector (GC) as it will later have to free that memory.</source>
          <target state="translated">ヒープメモリの割り当ては遅く、後でメモリを解放しなければならないため、ガーベッジコレクタ (GC)に大きな圧力がかかります。</target>
        </trans-unit>
        <trans-unit id="b873a37d86010dc0409af11fe6e5f33086a4aaa8" translate="yes" xml:space="preserve">
          <source>Allows computing Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">ハッシュベースのメッセージ認証コード(HMAC)の計算が可能です。</target>
        </trans-unit>
        <trans-unit id="4b5a94e0e6b6ecb3f548cb64adce75c230873496" translate="yes" xml:space="preserve">
          <source>Allows only valid number strings with an optional negative sign.</source>
          <target state="translated">オプションの負の符号を持つ有効な数値文字列のみを許可します。</target>
        </trans-unit>
        <trans-unit id="d9706c08760d7040c46bae5dacf9634182873fa4" translate="yes" xml:space="preserve">
          <source>Allows the cookie to be sent by the browser during top-level navigations that use a &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;safe&lt;/a&gt; HTTP method.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;安全な&lt;/a&gt; HTTPメソッドを使用するトップレベルのナビゲーション中にブラウザがCookieを送信できるようにします。</target>
        </trans-unit>
        <trans-unit id="c4c11aacaa21cb2a020746d4fdd48ff108e52631" translate="yes" xml:space="preserve">
          <source>Allows to iterate over all name-value pairs.</source>
          <target state="translated">すべての名前と値のペアを反復処理することができます。</target>
        </trans-unit>
        <trans-unit id="e6bf9d81ea21ed2c1b76096a6e487f0f8187f6fb" translate="yes" xml:space="preserve">
          <source>Alpine Linux includes the Crystal compiler in the community repository, starting from version Alpine 3.7.</source>
          <target state="translated">Alpine Linuxには、Alpine 3.7以降のコミュニティリポジトリにCrystalコンパイラが含まれています。</target>
        </trans-unit>
        <trans-unit id="33e15dd1e55a6281b3f01ed1859f204c34db6bb4" translate="yes" xml:space="preserve">
          <source>Also note that because &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; is a regular method, unlike the pseudo-method &lt;code&gt;as&lt;/code&gt;, you can't specify some types in the type grammar using a short notation, so specifying a static array must always be done as &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt;, a tuple as &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; and so on, never as &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; or &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;&lt;a href=&quot;object#unsafe_as(type:T.class)forallT-instance-method&quot;&gt;#unsafe_as&lt;/a&gt;&lt;/code&gt; は通常のメソッドであるため、擬似メソッドの &lt;code&gt;as&lt;/code&gt; とは異なり、短い文法を使用して型文法で一部の型を指定できないため、静的配列の指定は常に &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(T, N)&lt;/code&gt; として行う必要があります。、タプルは &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(...)&lt;/code&gt; などのように、 &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;[4]&lt;/code&gt; や &lt;code&gt;{&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;}&lt;/code&gt; にはなりません。</target>
        </trans-unit>
        <trans-unit id="b6fada26ca731b1c8917c2f76dc1eff3860f366f" translate="yes" xml:space="preserve">
          <source>Also note that sometimes the output of &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will look like a Crystal expression that will compile, but this isn't always the case, nor is it necessary. Notably, &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; return values that don't compile.</source>
          <target state="translated">また、 &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; の出力がコンパイルされるCrystal式のように見える場合がありますが、これは常にそうであるとは限らず、また、必ずしもそうである必要はありません。特に、 &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; は、コンパイルしない値を返します。</target>
        </trans-unit>
        <trans-unit id="724bc2fbf20ff7f320b6df3d286c4dc74f380d93" translate="yes" xml:space="preserve">
          <source>Also note that sometimes the output of &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will look like a Crystal expression that will compile, but this isn't always the case, nor is it necessary. Notably, &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; return values that don't compile.</source>
          <target state="translated">また、 &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; の出力がコンパイルされるCrystal式のように見える場合がありますが、これは常にそうであるとは限らず、また、必ずしもそうである必要はありません。特に、 &lt;code&gt;&lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;Reference#inspect&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;Struct#inspect&lt;/a&gt;&lt;/code&gt; は、コンパイルしない値を返します。</target>
        </trans-unit>
        <trans-unit id="77cff585754248eda4c6778c90e805f6d31f9c83" translate="yes" xml:space="preserve">
          <source>Also note that the compiler doesn't check whether a method argument is reassigned a different value:</source>
          <target state="translated">また、コンパイラはメソッドの引数が別の値に再割り当てされているかどうかをチェックしないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="f1705473d931bfc802bafae041665030b4e6cd60" translate="yes" xml:space="preserve">
          <source>Also returns &lt;code&gt;true&lt;/code&gt; if this and &lt;em&gt;other&lt;/em&gt; are the same object.</source>
          <target state="translated">thisと&lt;em&gt;other&lt;/em&gt;が同じオブジェクトの場合も &lt;code&gt;true&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8198198e56d1b2b0fe6c060612d3120c9b3f6a11" translate="yes" xml:space="preserve">
          <source>Also some drivers may offer additional functionality like postgres &lt;code&gt;LISTEN&lt;/code&gt;/&lt;code&gt;NOTIFY&lt;/code&gt;.</source>
          <target state="translated">また、一部のドライバはpostgres &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; などの追加機能を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="006396db126789a5caf639146a2b6d3e3edd1500" translate="yes" xml:space="preserve">
          <source>Alternative ways to do error handling</source>
          <target state="translated">エラー処理を行う別の方法</target>
        </trans-unit>
        <trans-unit id="5c330948d0dae4539dc73d680b1aae16cdf27d5c" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a non yielding &lt;code&gt;DB.open&lt;/code&gt; method as long as &lt;code&gt;Database#close&lt;/code&gt; is called at the end.</source>
          <target state="translated">あるいは、最後に &lt;code&gt;Database#close&lt;/code&gt; が呼び出される限り、非生成 &lt;code&gt;DB.open&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="b0050dcb909faa19099b4bc05ca51bfda72717fd" translate="yes" xml:space="preserve">
          <source>Alternatively, a backslash followed by a newline can be inserted inside the string literal:</source>
          <target state="translated">また、文字列リテラルの中にバックスラッシュと改行を挿入することもできます。</target>
        </trans-unit>
        <trans-unit id="c12e7360e9a201c76f7f0f9e52a60c80082164cb" translate="yes" xml:space="preserve">
          <source>Alternatively, use a smart port builder like &lt;a href=&quot;https://github.com/jrmarino/synth&quot;&gt;Synth&lt;/a&gt;, which automatically decides to download dependencies as binary packages when there's no reason to rebuild them.</source>
          <target state="translated">または、&lt;a href=&quot;https://github.com/jrmarino/synth&quot;&gt;Synth&lt;/a&gt;などのスマートポートビルダーを使用します。これは、依存関係を再構築する理由がない場合に、依存関係をバイナリパッケージとしてダウンロードすることを自動的に決定します。</target>
        </trans-unit>
        <trans-unit id="af63c3b8d4bd4679c90d5dab9527a47e78236b6d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create an &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; and then invoke its &lt;code&gt;&lt;a href=&quot;oauth/consumer#authenticate(client:HTTP::Client,token:AccessToken):Nil-instance-method&quot;&gt;OAuth::Consumer#authenticate&lt;/a&gt;&lt;/code&gt; method, or create an &lt;code&gt;&lt;a href=&quot;oauth/accesstoken&quot;&gt;OAuth::AccessToken&lt;/a&gt;&lt;/code&gt; and invoke its &lt;code&gt;&lt;a href=&quot;oauth/accesstoken#authenticate(client,consumer_key,consumer_secret,extra_params=nil)-instance-method&quot;&gt;OAuth::AccessToken#authenticate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">または、 &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; を作成して &lt;code&gt;&lt;a href=&quot;oauth/consumer#authenticate(client:HTTP::Client,token:AccessToken):Nil-instance-method&quot;&gt;OAuth::Consumer#authenticate&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すか、 &lt;code&gt;&lt;a href=&quot;oauth/accesstoken&quot;&gt;OAuth::AccessToken&lt;/a&gt;&lt;/code&gt; を作成して &lt;code&gt;&lt;a href=&quot;oauth/accesstoken#authenticate(client,consumer_key,consumer_secret,extra_params=nil)-instance-method&quot;&gt;OAuth::AccessToken#authenticate&lt;/a&gt;&lt;/code&gt; を呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="1b4f3ab7d307a33f22bc49854c52fbaceb7efda2" translate="yes" xml:space="preserve">
          <source>Alternatives can be separated using a &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC12&quot;&gt;vertical bar&lt;/a&gt; (&lt;code&gt;|&lt;/code&gt;). Any single character can be represented by &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC7&quot;&gt;dot&lt;/a&gt; (&lt;code&gt;.&lt;/code&gt;). When matching only one character, specific alternatives can be expressed as a &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC9&quot;&gt;character class&lt;/a&gt;, enclosed in square brackets (&lt;code&gt;[]&lt;/code&gt;):</source>
          <target state="translated">選択肢は&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC12&quot;&gt;縦棒&lt;/a&gt;（ &lt;code&gt;|&lt;/code&gt; ）を使用して区切ることができます。任意の1文字を&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC7&quot;&gt;ドット&lt;/a&gt;（ &lt;code&gt;.&lt;/code&gt; ）で表すことができます。1つの文字のみに一致する場合、特定の代替は角括弧（ &lt;code&gt;[]&lt;/code&gt; ）で囲まれた&lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC9&quot;&gt;文字クラス&lt;/a&gt;として表すことができます。</target>
        </trans-unit>
        <trans-unit id="12bf45e012bec13b28c68bf5e8cc8b5dbbda6e65" translate="yes" xml:space="preserve">
          <source>Although exceptions are available as one of the mechanisms for handling errors, they are not your only choice. Raising an exception involves allocating memory, and executing an exception handler is generally slow.</source>
          <target state="translated">例外はエラーを処理するメカニズムの一つとして利用できますが、例外だけが唯一の選択肢ではありません。例外を発生させるにはメモリを確保する必要があり、例外ハンドラの実行は一般的に遅くなります。</target>
        </trans-unit>
        <trans-unit id="092092ba8084ac391272057dcc87be9cd3a75fee" translate="yes" xml:space="preserve">
          <source>Although it is obvious that &lt;code&gt;a&lt;/code&gt; will always be assigned a value, the compiler will still think &lt;code&gt;a&lt;/code&gt; might never had a chance to be initialized. Even though this logic might improve in the future, right now it forces you to keep your exception handlers to their necessary minimum, making the code's intention more clear:</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; には常に値が割り当てられることは明らかですが、コンパイラーは &lt;code&gt;a&lt;/code&gt; が初期化される機会がなかったと考えます。このロジックは将来的に改善される可能性がありますが、現時点では、例外ハンドラーを必要最小限に抑え、コードの意図をより明確にする必要があります。</target>
        </trans-unit>
        <trans-unit id="6523499aaa42434f357d3872515873e47e6d1ab6" translate="yes" xml:space="preserve">
          <source>Although not enforced by the compiler, a &lt;code&gt;lib&lt;/code&gt;'s name usually starts with &lt;code&gt;Lib&lt;/code&gt;.</source>
          <target state="translated">コンパイラーによって強制されませんが、 &lt;code&gt;lib&lt;/code&gt; の名前は通常 &lt;code&gt;Lib&lt;/code&gt; で始まります。</target>
        </trans-unit>
        <trans-unit id="76f88240a9fcee64c3a99f61350c598fa0caa0b4" translate="yes" xml:space="preserve">
          <source>Although not enforced by the compiler, constants are usually named with all capital letters and underscores to separate words.</source>
          <target state="translated">コンパイラでは強制されませんが、定数の名前は通常、単語を区切るためにすべて大文字とアンダースコアで付けられます。</target>
        </trans-unit>
        <trans-unit id="165f717b57e31acedb1b33c3109877752a477410" translate="yes" xml:space="preserve">
          <source>Always deletes any existing filesystam pathname first, in order to cleanup any leftover socket file.</source>
          <target state="translated">残っているソケットファイルをクリーンアップするために、既存の filesystam パス名を常に最初に削除します。</target>
        </trans-unit>
        <trans-unit id="ece6d2b8d25f7e32d8add83d8c774dd15929c5ea" translate="yes" xml:space="preserve">
          <source>Always quote</source>
          <target state="translated">常に引用</target>
        </trans-unit>
        <trans-unit id="71b305814b607b7e0466e1bcabfde35d6b6172f7" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a read-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これは読み取り専用の &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; であるため、常に &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="4562c4ff5008c32beff245ac5315a043e680da10" translate="yes" xml:space="preserve">
          <source>Always raises &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; because this is a write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これは書き込み専用の &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; であるため、常に &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="707d334f0320c5b4b6ec5d296b9b6020e09a7f70" translate="yes" xml:space="preserve">
          <source>Always remember that it's not just the time that has improved: memory usage is also decreased.</source>
          <target state="translated">改善されたのは時間だけではなく、メモリ使用量も減っていることを常に覚えておきましょう。</target>
        </trans-unit>
        <trans-unit id="e0b181a7de79130a3609477b5e07c35fc316f7ce" translate="yes" xml:space="preserve">
          <source>AlwaysInline</source>
          <target state="translated">AlwaysInline</target>
        </trans-unit>
        <trans-unit id="e47cc0ecab796473873ab114c8725da3ae72e102" translate="yes" xml:space="preserve">
          <source>Ambiguous time zone transitions such as gaps and overlaps have no effect on the result because it retains the same instant.</source>
          <target state="translated">ギャップやオーバーラップなどの曖昧な時間帯の遷移は、同じ瞬間を保持するため、結果に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="0fb44ea8e8a1b668a05a6766b0a7a038757a776d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; is an ordered and integer-indexed generic collection of elements of a specific type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/api/Array.html&quot;&gt;アレイは、&lt;/a&gt;特定のタイプの要素の順序付けられた整数インデックスジェネリックコレクションである &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2722ae696b0330b116f753f9b9f2da8572c0b62f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) evaluates its left hand side. If it's &lt;em&gt;truthy&lt;/em&gt;, it evaluates its right hand side and has that value. Otherwise it has the value of the left hand side. Its type is the union of the types of both sides.</source>
          <target state="translated">AN &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （と）は、その左側を評価します。それが&lt;em&gt;真実&lt;/em&gt;である場合、それはその右側を評価し、その値を持っています。それ以外の場合は、左側の値になります。そのタイプは、両側のタイプの結合です。</target>
        </trans-unit>
        <trans-unit id="678447df7444e4fdc73de11f540f52551da2ae68" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) expression</source>
          <target state="translated">アン &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （と）の発現</target>
        </trans-unit>
        <trans-unit id="6ebafa9aa964d92f391974c69f7f5dc0a31c770c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;.is_a?&lt;/code&gt; or &lt;code&gt;.nil?&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;.is_a?&lt;/code&gt; または &lt;code&gt;.nil?&lt;/code&gt; コール。</target>
        </trans-unit>
        <trans-unit id="b1f212ad29c85f080023674243f9ec74e4f9e658" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; over a file descriptor.</source>
          <target state="translated">アン &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ファイルディスクリプタを超えます。</target>
        </trans-unit>
        <trans-unit id="cf283d32146e1e15d15cdea0ff2f8807d8ae167e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that reads and writes from a buffer in memory.</source>
          <target state="translated">メモリ内のバッファから読み書きする &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a06ecd17f43a76aa4898d4f11f3401d541ac4d0a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that wraps another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and only reads up to the beginning of a specified delimiter.</source>
          <target state="translated">別の &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; をラップし、指定された区切り文字の先頭までのみを読み取る &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb4dfe5a4a1ae975a3a82d968c4d66898e733e18" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; that wraps another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, setting a limit for the number of bytes that can be read.</source>
          <target state="translated">AN &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 別のラップ &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を、読み取ることができるバイト数の制限を設定します。</target>
        </trans-unit>
        <trans-unit id="7bf76bff278302ff8c9be8870f132430ff915876" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; which writes to a number of underlying writer IOs.</source>
          <target state="translated">アン &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 根底にあるライターのIOの数に書き込みます。</target>
        </trans-unit>
        <trans-unit id="fd606610b3ae2e1fb24bcd73d88e531fe9dbf05f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; can be created using the usual &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; method (several are provided), or with an array literal:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 通常使用して作成することができる &lt;code&gt;&lt;a href=&quot;array#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; （いくつかが提供される）メソッドを、または配列リテラルを有します：</target>
        </trans-unit>
        <trans-unit id="183a5cfe5b83458a3ea4cdc142f656d462046cff" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; can have mixed types, meaning T will be a union of types, but these are determined when the array is created, either by specifying T or by using an array literal. In the latter case, T will be set to the union of the array literal elements' types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; TがTを指定することにより、または配列リテラルを使用して、いずれかのタイプの組合であるが、アレイが作成されるとき、これらが決定される意味、混合型を有することができます。後者の場合、Tは配列リテラル要素の型の和集合に設定されます。</target>
        </trans-unit>
        <trans-unit id="ab4cec228e0c6a9956399e1750684e1423473e09" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; is an ordered, integer-indexed collection of objects of type T.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 型Tのオブジェクトの順序付けられた、整数インデックス付きコレクションであります</target>
        </trans-unit>
        <trans-unit id="4d4da7169d251096c9550eaf5c34e5231954a3f2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; is implemented using an internal buffer of some capacity and is reallocated when elements are pushed to it when more capacity is needed. This is normally known as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;dynamic array&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; いくつかの容量の内部バッファを使用して実装されており、より多くの容量が必要な場合の要素は、それに押されたときに再割り当てされます。これは通常、&lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;動的配列と&lt;/a&gt;呼ばれます。</target>
        </trans-unit>
        <trans-unit id="618b3a9867e50d7141831d98cb91b9d948e589c3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; object can be converted to &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;#to_set&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; オブジェクトがに変換することができます &lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;#to_set&lt;/code&gt; の方法を。</target>
        </trans-unit>
        <trans-unit id="86c81e00cb615c05824fa11dce4a78e30e77110d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;error&quot;&gt;XML::Error&lt;/a&gt;&lt;/code&gt; is raised if attempting to generate an invalid XML (for example, if invoking &lt;code&gt;&lt;a href=&quot;builder#end_element:Nil-instance-method&quot;&gt;#end_element&lt;/a&gt;&lt;/code&gt; without a matching &lt;code&gt;&lt;a href=&quot;builder#start_element(name:String):Nil-instance-method&quot;&gt;#start_element&lt;/a&gt;&lt;/code&gt;, or trying to use a non-string value as an object's field name)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error&quot;&gt;XML::Error&lt;/a&gt;&lt;/code&gt; 発生し、無効なXMLを生成しようとする場合（例えば、呼び出した場合 &lt;code&gt;&lt;a href=&quot;builder#end_element:Nil-instance-method&quot;&gt;#end_element&lt;/a&gt;&lt;/code&gt; を照合せずに &lt;code&gt;&lt;a href=&quot;builder#start_element(name:String):Nil-instance-method&quot;&gt;#start_element&lt;/a&gt;&lt;/code&gt; 、またはオブジェクトのフィールド名などの非文字列値を使用しようとしています）</target>
        </trans-unit>
        <trans-unit id="77e25c52d2a33af8f2bf6e0bda0cb44c3d8acd66" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; can be set an encoding with the &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; method. When this is set, all string operations (&lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;) will write in the given encoding, and read from the given encoding. Byte operations (&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt;) never do encoding/decoding operations.</source>
          <target state="translated">AN &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を有するエンコーディング設定することができる &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;#set_encoding&lt;/a&gt;&lt;/code&gt; の方法。これが設定されている場合、すべての文字列操作（ &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; は）指定されたエンコーディングに書き込み、所定の符号化から読み出されます。バイト操作（ &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;#write_byte&lt;/a&gt;&lt;/code&gt; ）は、エンコード/デコード操作を行いません。</target>
        </trans-unit>
        <trans-unit id="96ab58e110ca9fda9d8d6dcac2f06dbb685c2633" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; for reading files from &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; からファイルを読み取るための &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17812698fab60ed495e8bb990a3891a690141227" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; allows processing sequences lazily, as opposed to &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; which processes sequences eagerly and produces an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; in most of its methods.</source>
          <target state="translated">AN &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; とは対照的に、遅延した配列を処理することができ &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 熱心配列を処理して生成する &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 、その方法のほとんどです。</target>
        </trans-unit>
        <trans-unit id="913eb0e8924d8928ab2d18c1a2ae72a0cdb67f04" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;alias&lt;/code&gt; declaration inside a &lt;code&gt;lib&lt;/code&gt; declares a C &lt;code&gt;typedef&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 内の &lt;code&gt;alias&lt;/code&gt; 宣言は、Cの &lt;code&gt;typedef&lt;/code&gt; を宣言します。</target>
        </trans-unit>
        <trans-unit id="d0c5fdfa1eb815f109debdc185369c8bd49ffdb6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;alias&lt;/code&gt; is most useful to avoid writing long types over and over, but also to declare a type based on compile-time flags:</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; 何度も長いタイプを書いて避けるために最も有用であるが、また、コンパイル時のフラグに基づいて型を宣言します：</target>
        </trans-unit>
        <trans-unit id="0a9fa015ad8c1430ff73b9b07f0bd498c7ec19ff" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;else&lt;/code&gt; clause can only be specified if at least one &lt;code&gt;rescue&lt;/code&gt; clause is specified.</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 少なくとも1つのが句にのみ指定することができ &lt;code&gt;rescue&lt;/code&gt; 句が指定されています。</target>
        </trans-unit>
        <trans-unit id="0a734e35c29a03192e77bff9fa1f8df519d3307a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;else&lt;/code&gt; clause is executed only if no exceptions were rescued:</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 句は、例外が救出されなかった場合にのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="e82a82f48241376dc9a18328e8584a080cbbaa46" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ensure&lt;/code&gt; clause is executed at the end of a &lt;code&gt;begin ... end&lt;/code&gt; or &lt;code&gt;begin ... rescue ... end&lt;/code&gt; expression regardless of whether an exception was raised or not:</source>
          <target state="translated">&lt;code&gt;ensure&lt;/code&gt; 句はの終了時に実行される &lt;code&gt;begin ... end&lt;/code&gt; または &lt;code&gt;begin ... rescue ... end&lt;/code&gt; にかかわらず、例外が発生したかどうかの発現：</target>
        </trans-unit>
        <trans-unit id="7417a2f5d3557e64a52cec6ac7b1c8c30ee55b21" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;enum&lt;/code&gt; declaration inside a &lt;code&gt;lib&lt;/code&gt; declares a C enum:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 内の &lt;code&gt;enum&lt;/code&gt; 型宣言はC列挙型を宣言します。</target>
        </trans-unit>
        <trans-unit id="512db505028c6348f135ce09856fd68af8d0dc7d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extend&lt;/code&gt; makes a type include methods defined in that module as class methods:</source>
          <target state="translated">&lt;code&gt;extend&lt;/code&gt; タイプは、クラスメソッドとしてそのモジュールで定義された方法を含むことができます。</target>
        </trans-unit>
        <trans-unit id="1154aad7617a46c04d9d6b288fff88656bd371d9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; can be written as an expression&amp;rsquo;s suffix:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 、式の接尾辞のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="ee99ee8f7145a50808f502c3ca383fa938dbb375" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; evaluates the given branch if its condition is &lt;em&gt;truthy&lt;/em&gt;. Otherwise, it evaluates the &lt;code&gt;else&lt;/code&gt; branch if present.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; その条件がある場合に与えられた枝を評価&lt;em&gt;truthy&lt;/em&gt;。それ以外の場合は、存在する場合は &lt;code&gt;else&lt;/code&gt; ブランチを評価します。</target>
        </trans-unit>
        <trans-unit id="9a264ebbcf0da4f95d814d1a5467b2d3461ec1ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;include&lt;/code&gt; makes a type include methods defined in that module as instance methods:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; タイプがインスタンスメソッドとしてそのモジュールで定義された方法を含むことができます。</target>
        </trans-unit>
        <trans-unit id="b77aefe858970d60d4dec2c253350d2e375a6660" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;instance_sizeof&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;instance_sizeof&lt;/code&gt; 表現。</target>
        </trans-unit>
        <trans-unit id="9073bb8fa31001f13f5911ee7bcb5ffc571b1d6f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;it&lt;/code&gt; block contains an example that should invoke the code to be tested and define what is expected of it. Each example can contain multiple expectations, but it should test only one specific behaviour.</source>
          <target state="translated">&lt;code&gt;it&lt;/code&gt; ブロックが試験されるコードを呼び出し、それを期待されているものを定義すべきである例を含んでいます。各例には複数の期待値を含めることができますが、特定の動作を1つだけテストする必要があります。</target>
        </trans-unit>
        <trans-unit id="df4a9796cdd365507410ecd5e905363e2288704b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;offsetof&lt;/code&gt; expression returns the byte offset of an instance variable in a struct or class type. It accepts the type as first argument and the instance variable name prefixed by an &lt;code&gt;@&lt;/code&gt; as second argument:</source>
          <target state="translated">&lt;code&gt;offsetof&lt;/code&gt; は、発現は、構造体またはクラスタイプのインスタンス変数のバイトオフセットを返します。最初の引数として型を受け入れ、 &lt;code&gt;@&lt;/code&gt; が前に付いたインスタンス変数名を2番目の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="7cc3bea98f4fa16f25109f500b3b1bf92e905d97" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;offsetof&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;offsetof&lt;/code&gt; は表現。</target>
        </trans-unit>
        <trans-unit id="785b35135df43a31749cd66082354779546dd218" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;out&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; 表現。</target>
        </trans-unit>
        <trans-unit id="23bd64288a461fb83f2dfb32c9eb5c6e5c9c0942" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;unless&lt;/code&gt; evaluates the then branch if its condition is &lt;em&gt;falsey&lt;/em&gt;, and evaluates the &lt;code&gt;else branch&lt;/code&gt;, if there&amp;rsquo;s any, otherwise. That is, it behaves in the opposite way of an &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;unless&lt;/code&gt; 評価するその条件があるならば、枝&lt;em&gt;falsey&lt;/em&gt;、と評価し &lt;code&gt;else branch&lt;/code&gt; それ以外の場合は、任意の場合があります。つまり、 &lt;code&gt;if&lt;/code&gt; とは逆の動作をします。</target>
        </trans-unit>
        <trans-unit id="b5f851261ca2a35497954c436f85f509dfcf76e3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;until&lt;/code&gt; executes its body until its condition is &lt;em&gt;truthy&lt;/em&gt;. An &lt;code&gt;until&lt;/code&gt; is just syntax sugar for a &lt;code&gt;while&lt;/code&gt; with the condition negated:</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; その状態になるまで、その本体を実行&lt;em&gt;truthy&lt;/em&gt;。 &lt;code&gt;until&lt;/code&gt; のためだけの構文糖である &lt;code&gt;while&lt;/code&gt; 否定条件付き：</target>
        </trans-unit>
        <trans-unit id="f9a0afa3bc53e673c9dd776119215f5ba1a03537" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;||&lt;/code&gt; (or) evaluates its left hand side. If it's &lt;em&gt;falsey&lt;/em&gt;, it evaluates its right hand side and has that value. Otherwise it has the value of the left hand side. Its type is the union of the types of both sides.</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; （または）その左側を評価します。&lt;em&gt;falseの&lt;/em&gt;場合、右側を評価し、その値を持ちます。それ以外の場合は、左側の値になります。そのタイプは、両側のタイプの結合です。</target>
        </trans-unit>
        <trans-unit id="360a7956916ccbe4a45debf5988288f18c23e876" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;||&lt;/code&gt; (or) expression</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; （または）式</target>
        </trans-unit>
        <trans-unit id="50a661b076108661cc84572bc1cbd39786d3698b" translate="yes" xml:space="preserve">
          <source>An HTTP Client.</source>
          <target state="translated">HTTPクライアント。</target>
        </trans-unit>
        <trans-unit id="46c2f239a5fafa75ffb1b504a9266ac49d11315c" translate="yes" xml:space="preserve">
          <source>An HTTP request.</source>
          <target state="translated">HTTPリクエスト。</target>
        </trans-unit>
        <trans-unit id="fbe6e9119d0af544f7e338d044cdd2d955942a48" translate="yes" xml:space="preserve">
          <source>An OAuth consumer.</source>
          <target state="translated">OAuthの消費者。</target>
        </trans-unit>
        <trans-unit id="a7fb4326b9912d8c7cd63b326e770bbcfc1c5cf4" translate="yes" xml:space="preserve">
          <source>An OAuth2 client.</source>
          <target state="translated">OAuth2クライアント。</target>
        </trans-unit>
        <trans-unit id="7873b59bef86b6db6dc2acbc6c84fddb4be1fefa" translate="yes" xml:space="preserve">
          <source>An OAuth2 session makes it easy to implement APIs that need to refresh an access token once its expired before executing an HTTP request.</source>
          <target state="translated">OAuth2セッションでは、HTTPリクエストを実行する前にアクセストークンの有効期限が切れたらアクセストークンを更新する必要があるAPIを簡単に実装できます。</target>
        </trans-unit>
        <trans-unit id="e8bd3602b5edda3fe108cf045bc458272ab4bd2a" translate="yes" xml:space="preserve">
          <source>An XML builder generates valid XML.</source>
          <target state="translated">XMLビルダーは、有効なXMLを生成します。</target>
        </trans-unit>
        <trans-unit id="edd2faf0eb05cde4bd6c39d95298f3cefee91838" translate="yes" xml:space="preserve">
          <source>An alias.</source>
          <target state="translated">別名です。</target>
        </trans-unit>
        <trans-unit id="895a78400639094f60f1593feea330a032b644c8" translate="yes" xml:space="preserve">
          <source>An annotation could be used to designate a property as an ORM column. The name and type of the instance variable can be read off the &lt;code&gt;TypeNode&lt;/code&gt; in addition to the annotation; removing the need for any ORM specific macro. The annotation itself could also be used to store metadata about the column, such as if it is nullable, the name of the column, or if it is the primary key.</source>
          <target state="translated">プロパティをORM列として指定するために注釈を使用できます。インスタンス変数の名前と型は、注釈に加えて &lt;code&gt;TypeNode&lt;/code&gt; から読み取ることができます。ORM固有のマクロの必要性を排除します。注釈自体を使用して、列に関するメタデータを格納することもできます。たとえば、null許容、列の名前、または主キーである場合などです。</target>
        </trans-unit>
        <trans-unit id="cec8fd37191a71e5ed4978129ff6e45947795db4" translate="yes" xml:space="preserve">
          <source>An annotation on top of a type or variable.</source>
          <target state="translated">型や変数の上にあるアノテーション。</target>
        </trans-unit>
        <trans-unit id="f6c51937f73de1a68841a4c8c89f13ec2ca26635" translate="yes" xml:space="preserve">
          <source>An array literal.</source>
          <target state="translated">配列リテラル。</target>
        </trans-unit>
        <trans-unit id="1fc0801c6bd7fa8491d41426ddeb2af0ba6ae04a" translate="yes" xml:space="preserve">
          <source>An array of arguments passed to the program.</source>
          <target state="translated">プログラムに渡される引数の配列。</target>
        </trans-unit>
        <trans-unit id="84ac29ab3ad8784f78b7e5fbdf424dd9e98003e0" translate="yes" xml:space="preserve">
          <source>An assignment can be passed too, but in this case the type of the variable must be easily inferrable from the initial value:</source>
          <target state="translated">代入も渡すことができますが、この場合、変数の型は初期値から容易に推測できるものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c062f63bf34455f4aaa5250dfb3160cdd3c26bdf" translate="yes" xml:space="preserve">
          <source>An atomic flag, that can be set or not.</source>
          <target state="translated">設定できるかどうかの原子フラグ。</target>
        </trans-unit>
        <trans-unit id="ae27d006cda6af0546c17fa303559f1252464b72" translate="yes" xml:space="preserve">
          <source>An easy way to remember which one is inclusive and which one is exclusive it to think of the extra dot as if it pushes &lt;em&gt;y&lt;/em&gt; further away, thus leaving it outside of the range.</source>
          <target state="translated">どのドットが包括的で、どのドットが排他的であるかを覚えておくための簡単な方法は、余分なドットが&lt;em&gt;yを&lt;/em&gt;さらに遠ざけるように考え、範囲外に残すことです。</target>
        </trans-unit>
        <trans-unit id="f39c66b1d4d9222dbb665d49a69856c4b32d2ca8" translate="yes" xml:space="preserve">
          <source>An entry inside a &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 内のエントリ。</target>
        </trans-unit>
        <trans-unit id="44291848e90ac29ea60c573edd6de553343736f0" translate="yes" xml:space="preserve">
          <source>An entry to write into a &lt;code&gt;&lt;a href=&quot;../writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt; に書き込むエントリ。</target>
        </trans-unit>
        <trans-unit id="28e5d6c740329c41307dfce01d5fa13fe0523add" translate="yes" xml:space="preserve">
          <source>An enum automatically defines question methods for each member, using &lt;code&gt;&lt;a href=&quot;string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; for the method name.</source>
          <target state="translated">enum は、メソッド名に &lt;code&gt;&lt;a href=&quot;string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; を使用して、各メンバーの質問メソッドを自動的に定義します。</target>
        </trans-unit>
        <trans-unit id="92a46ea4b3e5248f13585594048fab72c16f8f59" translate="yes" xml:space="preserve">
          <source>An enum can be created from an integer:</source>
          <target state="translated">整数からenumを作成することができます。</target>
        </trans-unit>
        <trans-unit id="8188e5451f1191462f35966374076751d1e2906a" translate="yes" xml:space="preserve">
          <source>An enum can be marked with &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt;. This changes the default values. The first constant's value is 1, and successive constants are multiplied by 2.</source>
          <target state="translated">列挙型は &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; マークできます。これにより、デフォルト値が変更されます。最初の定数の値は1で、後続の定数は2倍されます。</target>
        </trans-unit>
        <trans-unit id="f6e084aeebea9608635b12dc976e369d5fa3640e" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; attribute. This changes the default values:</source>
          <target state="translated">列挙型は &lt;code&gt;@[&lt;a href=&quot;flags&quot;&gt;Flags&lt;/a&gt;]&lt;/code&gt; 属性でマークできます。これにより、デフォルト値が変更されます。</target>
        </trans-unit>
        <trans-unit id="1e306195c394a6d99149848c58a94cbd34d298c0" translate="yes" xml:space="preserve">
          <source>An enum can be marked with the &lt;code&gt;@[Flags]&lt;/code&gt; attribute. This changes the default values:</source>
          <target state="translated">列挙型は &lt;code&gt;@[Flags]&lt;/code&gt; 属性でマークできます。これにより、デフォルト値が変更されます。</target>
        </trans-unit>
        <trans-unit id="ba5f3e512776c44c5a89f0c69007f2ca595bed8c" translate="yes" xml:space="preserve">
          <source>An enum is a set of integer values, where each value has an associated name. For example:</source>
          <target state="translated">列挙型は整数値の集合で、各値には関連する名前が付けられています。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b1417c72c57bf950e767879de2693b1bfc9efb89" translate="yes" xml:space="preserve">
          <source>An enum is defined with the &lt;code&gt;enum&lt;/code&gt; keyword, followed by its name. The enum's body contains the values. Values start with the value &lt;code&gt;0&lt;/code&gt; and are incremented by one. The default value can be overwritten:</source>
          <target state="translated">enumは、 &lt;code&gt;enum&lt;/code&gt; キーワードとそれに続く名前で定義されます。列挙型の本体には値が含まれています。値は値 &lt;code&gt;0&lt;/code&gt; から始まり、1ずつ増加します。デフォルト値は上書きできます：</target>
        </trans-unit>
        <trans-unit id="1077bc9444e7cda257b662b88aa57d078df699c8" translate="yes" xml:space="preserve">
          <source>An enum that provides additional support around HTTP status codes.</source>
          <target state="translated">HTTP ステータスコードに関する追加サポートを提供する enum。</target>
        </trans-unit>
        <trans-unit id="b35c9503399fbbac17582175d4880f3025415694" translate="yes" xml:space="preserve">
          <source>An exact copy of &lt;em&gt;uri&lt;/em&gt; is returned if</source>
          <target state="translated">次の場合、&lt;em&gt;uri&lt;/em&gt;の正確なコピーが返されます</target>
        </trans-unit>
        <trans-unit id="1f5cd982d6e3ec3aa9cf8e31fe9632e00c6f7a5a" translate="yes" xml:space="preserve">
          <source>An example of a module as a namespace:</source>
          <target state="translated">名前空間としてのモジュールの例。</target>
        </trans-unit>
        <trans-unit id="cc8381009158943e2b3e2e4c44605fc324bd2f27" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;Xs&lt;/code&gt; to construct a range:</source>
          <target state="translated">&lt;code&gt;Xs&lt;/code&gt; を使用して範囲を構築する例：</target>
        </trans-unit>
        <trans-unit id="3b8202f5bf9e604fa29617cbf17864ff2b7318ed" translate="yes" xml:space="preserve">
          <source>An example with a variable:</source>
          <target state="translated">変数を使用した例。</target>
        </trans-unit>
        <trans-unit id="27fadfc45341514f1857dfb1c3d37412e1ce6355" translate="yes" xml:space="preserve">
          <source>An example with an instance variable:</source>
          <target state="translated">インスタンス変数を使用した例。</target>
        </trans-unit>
        <trans-unit id="3c4fc68e5d04c88120a62f4402fc89bfe8844b7e" translate="yes" xml:space="preserve">
          <source>An example with assignments (in this case the compiler must be able to infer the types from the default values):</source>
          <target state="translated">代入を使用した例 (この場合、コンパイラはデフォルト値から型を推測することができなければなりません)。</target>
        </trans-unit>
        <trans-unit id="c6201f25f663ca0b5e026b8bfde2e90f6f745020" translate="yes" xml:space="preserve">
          <source>An example with multiple arguments:</source>
          <target state="translated">複数の引数を持つ例。</target>
        </trans-unit>
        <trans-unit id="8bc2c4ce726e1ea98ca0ea8fdcfbc7d169377f7c" translate="yes" xml:space="preserve">
          <source>An example with the block version:</source>
          <target state="translated">ブロック版を使用した例。</target>
        </trans-unit>
        <trans-unit id="be2652a458915ebaed2f6e05b1a84696584d3d24" translate="yes" xml:space="preserve">
          <source>An example with type declarations and default values:</source>
          <target state="translated">型宣言とデフォルト値の例。</target>
        </trans-unit>
        <trans-unit id="3df4748a95659eef070e4293c8e0a59ba6546ae1" translate="yes" xml:space="preserve">
          <source>An explicit type can be specified by immediately following the closing bracket with &lt;code&gt;of&lt;/code&gt; and a type, each separated by whitespace. This overwrites the inferred type and can be used for example to create an array that holds only some types initially but can accept other types later.</source>
          <target state="translated">明示的な型を指定するには、閉じ括弧の直後に &lt;code&gt;of&lt;/code&gt; とtypeを指定し、それぞれを空白で区切ります。これは推定された型を上書きし、たとえば、最初は一部の型のみを保持し、後で他の型を受け入れることができる配列を作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="89ca8cc0079183d6490a91cd74fccbe83eb2906e" translate="yes" xml:space="preserve">
          <source>An external name can be specified for a method argument. The external name is the one used when passing an argument as a named argument, and the internal name is the one used inside the method definition:</source>
          <target state="translated">メソッドの引数には外部名を指定することができます。外部名は引数を名前付き引数として渡す際に使用するもので、内部名はメソッド定義内で使用するものです。</target>
        </trans-unit>
        <trans-unit id="e67a0ce71ff9efdefd540e50e1ca2b074fe31d7d" translate="yes" xml:space="preserve">
          <source>An if expression.</source>
          <target state="translated">if式。</target>
        </trans-unit>
        <trans-unit id="6b544e651b307c8253d2daf051a47ad8c80c51d9" translate="yes" xml:space="preserve">
          <source>An initial capacity can be specified, and it will be set as the initial capacity of the internal &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">初期容量を指定でき、内部 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 初期容量として設定されます。</target>
        </trans-unit>
        <trans-unit id="94385e9457589c01dc355afd09343fcde7d1b1fa" translate="yes" xml:space="preserve">
          <source>An instance of each class that includes &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; is a random number generator with its own state. Usually such RNGs can be initialized with a seed, which defines their initial state. It is guaranteed that after initializing two different instances with the same seed, and then executing the same calls on both of them, you will get the same results. This allows exactly reproducing the same seemingly random events by just keeping the seed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; を含む各クラスのインスタンスは、独自の状態を持つ乱数ジェネレーターです。通常、このようなRNGは、初期状態を定義するシードで初期化できます。同じシードで2つの異なるインスタンスを初期化し、両方のインスタンスで同じ呼び出しを実行すると、同じ結果が得られることが保証されています。これにより、シードを保持するだけで、一見ランダムな同じイベントを正確に再現できます。</target>
        </trans-unit>
        <trans-unit id="24d2314f6d77a7609715e686b02384c79a8c583a" translate="yes" xml:space="preserve">
          <source>An instance variable.</source>
          <target state="translated">インスタンス変数。</target>
        </trans-unit>
        <trans-unit id="9588885a572ce94d393fe3605d7b3371f28b5284" translate="yes" xml:space="preserve">
          <source>An integer literal is an optional &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; sign, followed by a sequence of digits and underscores, optionally followed by a suffix. If no suffix is present, the literal's type is the lowest between &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int64&lt;/code&gt; and &lt;code&gt;UInt64&lt;/code&gt; in which the number fits:</source>
          <target state="translated">整数リテラルは、オプションの &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; 記号で、その後に一連の数字とアンダースコアが続き、オプションでその後に接尾辞が続きます。接尾辞が存在しない場合、リテラルのタイプは、数値が適合する &lt;code&gt;Int32&lt;/code&gt; 、 &lt;code&gt;Int64&lt;/code&gt; 、および &lt;code&gt;UInt64&lt;/code&gt; の中で最も低いものです。</target>
        </trans-unit>
        <trans-unit id="85d6a78149fd6fb501c2625f845bbe4056675702" translate="yes" xml:space="preserve">
          <source>An integer literal is an optional &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; sign, followed by a sequence of digits and underscores, optionally followed by a suffix. If no suffix is present, the literal's type is the lowest between &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; in which the number fits:</source>
          <target state="translated">整数リテラルはオプションの &lt;code&gt;&lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;#+&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; 記号であり、その後に一連の数字とアンダースコアが続き、オプションでその後に接尾辞が続きます。接尾辞が存在しない場合、リテラルのタイプは、数値が適合する &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; の中で最も低いものです。</target>
        </trans-unit>
        <trans-unit id="ddb51bf3856ec42fe3001169af6f6cc5bb279eab" translate="yes" xml:space="preserve">
          <source>An interpolated string like &lt;code&gt;&quot;Hello, #{name}!&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;Hello, #{name}!&quot;&lt;/code&gt; ような補間された文字列 。</target>
        </trans-unit>
        <trans-unit id="7e2e828664a243bd3db58c10742685469a22506d" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigdecimal#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;bigdecimal#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fff87f29954508e84f1a12771315b4e5545d5fd0" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigfloat#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;bigfloat#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2cfb16fb4d101f2f7670c3e8fdb8296989b2ed84" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="264fab578b1f404979f89965a820cc9b25982baa" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f8228970d9d31004b46ccefd0276b057dd48d287" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;float32#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;float32#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d04cfbdd0635cd45447e8d770af48fd5f21aeb46" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;float64#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;float64#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="48c31f67b2c862b79714f61b4aa470765baebfe5" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;int#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;int#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="44a17b8f5ea400e9ad197597feaa484e0f3a35bc" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c48589b2fd5be2ea8df0b54930ae4c07548d374a" translate="yes" xml:space="preserve">
          <source>An object must never append itself to the io argument, as this will in turn call &lt;code&gt;&lt;a href=&quot;proc#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトが自分自身をio引数に追加してはなりません。これにより、オブジェクトが &lt;code&gt;&lt;a href=&quot;proc#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="02486a860941c5250817f7a9ff8f06be671cd3d3" translate="yes" xml:space="preserve">
          <source>An object's internal state, if any, can only be queried by invoking methods.</source>
          <target state="translated">オブジェクトの内部状態がある場合は、メソッドを呼び出すことでのみ問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="dc4e6af94edf5ec2a1e798e0113708f1b60aa1be" translate="yes" xml:space="preserve">
          <source>An unary &lt;code&gt;not&lt;/code&gt; (&lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">単項 &lt;code&gt;not&lt;/code&gt; （ &lt;code&gt;!&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a3251bf30c3e005833a433ee7c3270597d377d35" translate="yes" xml:space="preserve">
          <source>An unary expression</source>
          <target state="translated">単項式</target>
        </trans-unit>
        <trans-unit id="923c53fd069939335bc92ab77aca21d1699ee194" translate="yes" xml:space="preserve">
          <source>An uncaught exception in a signal handler is a fatal error.</source>
          <target state="translated">シグナルハンドラで捕捉されなかった例外は致命的なエラーです。</target>
        </trans-unit>
        <trans-unit id="0d88b833e43ee4c49735bee3a0173290719aa336" translate="yes" xml:space="preserve">
          <source>An underscore is allowed in type restrictions. It matches anything:</source>
          <target state="translated">アンダースコアは、型の制限で許可されています。何にでもマッチします。</target>
        </trans-unit>
        <trans-unit id="98f34b692868705fd4fe03ef4c5bed5d8a585478" translate="yes" xml:space="preserve">
          <source>An unhandleable error that results in a program crash</source>
          <target state="translated">プログラムがクラッシュしてしまう扱いにくいエラー</target>
        </trans-unit>
        <trans-unit id="0e9ef7e7c861c701a95f02cbefd0b4851ee26b62" translate="yes" xml:space="preserve">
          <source>An uninitialized variable declaration: &lt;code&gt;a = uninitialized &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">初期化されていない変数宣言： &lt;code&gt;a = uninitialized &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3ba05c548c54172c25e6da416c6084032c790e8" translate="yes" xml:space="preserve">
          <source>Anatomy of a spec file</source>
          <target state="translated">スペックファイルの構造</target>
        </trans-unit>
        <trans-unit id="033d51a4c227593e67138f290835a1951b23db5f" translate="yes" xml:space="preserve">
          <source>And always be sure to profile your program to learn what its bottlenecks are. For profiling, on macOS you can use &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Instrument-TimeProfiler.html&quot;&gt;Instruments Time Profiler&lt;/a&gt;, which comes with XCode. On Linux, any program that can profile C/C++ programs, like &lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt; or &lt;a href=&quot;http://valgrind.org/docs/manual/cl-manual.html&quot;&gt;Callgrind&lt;/a&gt;, should work.</source>
          <target state="translated">そして、常にボトルネックが何であるかを知るためにあなたのプログラムをプロファイリングするようにしてください。プロファイリングの場合、macOSではXCodeに付属する&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Instrument-TimeProfiler.html&quot;&gt;Instruments Time Profilerを&lt;/a&gt;使用できます。Linuxでは、&lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt;や&lt;a href=&quot;http://valgrind.org/docs/manual/cl-manual.html&quot;&gt;Callgrind&lt;/a&gt;などのC / C ++プログラムをプロファイルできるプログラムであれば、どれでも機能するはずです。</target>
        </trans-unit>
        <trans-unit id="5e63fe6a09d81545aa581fcc549d2bb5d224ff6d" translate="yes" xml:space="preserve">
          <source>And it is also available to &lt;a href=&quot;operators#indexing&quot;&gt;indexers&lt;/a&gt; (&lt;code&gt;[]=&lt;/code&gt;):</source>
          <target state="translated">また、&lt;a href=&quot;operators#indexing&quot;&gt;インデクサー&lt;/a&gt;（ &lt;code&gt;[]=&lt;/code&gt; ）でも使用できます。</target>
        </trans-unit>
        <trans-unit id="cee022f2c721cb36f2b54286d3bb49dd4ee1ef0c" translate="yes" xml:space="preserve">
          <source>And to access it, use a syntax similar to type restrictions:</source>
          <target state="translated">そして、それにアクセスするには、型の制限に似た構文を使用します。</target>
        </trans-unit>
        <trans-unit id="1b0ae47054bef67d9f0a65235f1b5d69bf3afbee" translate="yes" xml:space="preserve">
          <source>And we can also use the &lt;code&gt;commit&lt;/code&gt; method:</source>
          <target state="translated">また、 &lt;code&gt;commit&lt;/code&gt; メソッドを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="74dc68d72e7c6f05cb32f3c5f38a50a1624e1e2a" translate="yes" xml:space="preserve">
          <source>Annotations</source>
          <target state="translated">Annotations</target>
        </trans-unit>
        <trans-unit id="d85c2f6e974f674ccf4a5b9e51922d8fa7d53b82" translate="yes" xml:space="preserve">
          <source>Annotations are best used to store metadata about a given instance variable, type, or method so that it can be read at compile time using macros. One of the main benefits of annotations is that they are applied directly to instance variables/methods, which causes classes to look more natural since a standard macro is not needed to create these properties/methods.</source>
          <target state="translated">アノテーションは、与えられたインスタンス変数、型、またはメソッドに関するメタデータを格納し、マクロを使用してコンパイル時に読み取れるようにするために使用するのが最適です。アノテーションの主な利点の 1 つは、インスタンス変数methods に直接適用されることで、これらのプロパティメソッドを作成するために標準のマクロが必要ないため、クラスがより自然に見えるようになります。</target>
        </trans-unit>
        <trans-unit id="d3a17018c6074aa912149e471576e9c719fde828" translate="yes" xml:space="preserve">
          <source>Annotations can be read off of a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt;&lt;code&gt;Def&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/MetaVar.html&quot;&gt;&lt;code&gt;MetaVar&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; method. This method return an &lt;a href=&quot;https://crystal-lang.org/api/master/Crystal/Macros/Annotation.html&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; object representing the applied annotation of the supplied type.</source>
          <target state="translated">注釈は、 &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; メソッドを使用して、&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt; &lt;code&gt;Def&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/MetaVar.html&quot;&gt; &lt;code&gt;MetaVar&lt;/code&gt; &lt;/a&gt;から読み取ることができます。このメソッドは、指定されたタイプの適用された注釈を表す&lt;a href=&quot;https://crystal-lang.org/api/master/Crystal/Macros/Annotation.html&quot;&gt; &lt;code&gt;Annotation&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="431d5a5a5cc2b02ee1ab27e7894831136e38fd5d" translate="yes" xml:space="preserve">
          <source>Annotations can be used to add metadata to certain features in the source code. Types, methods and instance variables may be annotated. User-defined annotations, such as the standard library's &lt;a href=&quot;https://crystal-lang.org/api/JSON/Field.html&quot;&gt;JSON::Field&lt;/a&gt;, are defined using the &lt;code&gt;annotation&lt;/code&gt; keyword. A number of &lt;a href=&quot;annotations/built_in_annotations&quot;&gt;built-in annotations&lt;/a&gt; are provided by the compiler.</source>
          <target state="translated">アノテーションを使用して、ソースコードの特定の機能にメタデータを追加できます。タイプ、メソッド、インスタンス変数に注釈を付けることができます。標準ライブラリの&lt;a href=&quot;https://crystal-lang.org/api/JSON/Field.html&quot;&gt;JSON :: Field&lt;/a&gt;などのユーザー定義の注釈は、 &lt;code&gt;annotation&lt;/code&gt; キーワードを使用して定義されます。多くの&lt;a href=&quot;annotations/built_in_annotations&quot;&gt;組み込み注釈&lt;/a&gt;がコンパイラーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="569ef2fad303e8f94b492ff7a4d052e1b9a6eaf7" translate="yes" xml:space="preserve">
          <source>Annotations: results matching &amp;quot;&amp;quot;</source>
          <target state="translated">注釈：「」に一致する結果</target>
        </trans-unit>
        <trans-unit id="315c40ed33cde3e03335cd5dcaa44eda4b8f50d3" translate="yes" xml:space="preserve">
          <source>Another case is &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt;:</source>
          <target state="translated">別のケースは &lt;code&gt;||&lt;/code&gt; および &lt;code&gt;||=&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7eb62c8dd69782e6a03889b68780fcf6091c35b5" translate="yes" xml:space="preserve">
          <source>Another common case is sending formdata to a server using HTTP::Client. Here is an example showing how to upload a file to the server above in crystal.</source>
          <target state="translated">他にもよくあるケースとして、HTTP::Clientを使ってformdataをサーバに送信する方法があります。ここでは、crystalで上記のサーバにファイルをアップロードする方法を示す例を示しています。</target>
        </trans-unit>
        <trans-unit id="cb41237f8d89052c0c930aef528f43193f9cd61c" translate="yes" xml:space="preserve">
          <source>Another option is to use &lt;a href=&quot;https://crystal-lang.org/api/Object.html#try%28%26block%29-instance-method&quot;&gt;&lt;code&gt;Object#try&lt;/code&gt;&lt;/a&gt; found in the standard library which only executes the block if the value is not &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">別のオプションは、値が &lt;code&gt;nil&lt;/code&gt; でない場合にのみブロックを実行する標準ライブラリにある&lt;a href=&quot;https://crystal-lang.org/api/Object.html#try%28%26block%29-instance-method&quot;&gt; &lt;code&gt;Object#try&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="fcd4814a072177046a402c751bad6680ec0f0981" translate="yes" xml:space="preserve">
          <source>Another way is this:</source>
          <target state="translated">もう一つの方法はこれです。</target>
        </trans-unit>
        <trans-unit id="022539c1fffa58f3ba026992ba9a23c3c0ad2575" translate="yes" xml:space="preserve">
          <source>Another way to create a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; is by capturing a block:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; を作成するもう1つの方法は、ブロックをキャプチャすることです。</target>
        </trans-unit>
        <trans-unit id="db6ef6cad016afc1f0f1616254deb59bb10eeae8" translate="yes" xml:space="preserve">
          <source>Another way to define a nested macro is by using the special &lt;code&gt;verbatim&lt;/code&gt; call. Using this you will not be able to use any variable interpolation but will not need to escape the inner macro characters.</source>
          <target state="translated">ネストされたマクロを定義する別の方法は、特別な &lt;code&gt;verbatim&lt;/code&gt; 呼び出しを使用することです。これを使用すると、変数補間を使用できなくなりますが、内部のマクロ文字をエスケープする必要はありません。</target>
        </trans-unit>
        <trans-unit id="bc71bee09348307b6ec909dfda94aee4980369f1" translate="yes" xml:space="preserve">
          <source>Any expression may be placed inside the interpolated section, but it&amp;rsquo;s best to keep the expression small for readability.</source>
          <target state="translated">補間されたセクション内に任意の式を配置できますが、読みやすくするために式を小さくしておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="409b054f573564b96c63724128f29ec5e6ee93c4" translate="yes" xml:space="preserve">
          <source>Any name can be used for type arguments:</source>
          <target state="translated">型の引数には任意の名前を使用することができます。</target>
        </trans-unit>
        <trans-unit id="bd047716d7d1bc2cc48d76fe5d512ba3634ceb90" translate="yes" xml:space="preserve">
          <source>Any number literal.</source>
          <target state="translated">任意の数字のリテラル。</target>
        </trans-unit>
        <trans-unit id="e0f170770c0017b3b4d0b3d56f65b8ae991b2651" translate="yes" xml:space="preserve">
          <source>Any or all of the customizable URIs &lt;em&gt;authorize_uri&lt;/em&gt; and &lt;em&gt;token_uri&lt;/em&gt; can be relative or absolute. If they are relative, the given &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt; and &lt;em&gt;scheme&lt;/em&gt; will be used. If they are absolute, the absolute URL will be used.</source>
          <target state="translated">カスタマイズ可能なURI &lt;em&gt;authorize_uri&lt;/em&gt;および&lt;em&gt;token_uriの一部&lt;/em&gt;またはすべては、相対または絶対にすることができます。それらが相対的である場合、指定された&lt;em&gt;ホスト&lt;/em&gt;、&lt;em&gt;ポート&lt;/em&gt;、&lt;em&gt;スキーム&lt;/em&gt;が使用されます。絶対URLの場合、絶対URLが使用されます。</target>
        </trans-unit>
        <trans-unit id="0585ed80862d5f79c644d57f70a6529688d1f8f4" translate="yes" xml:space="preserve">
          <source>Any or all of the customizable URIs &lt;em&gt;request_token_uri&lt;/em&gt;, &lt;em&gt;authorize_uri&lt;/em&gt; and &lt;em&gt;access_token_uri&lt;/em&gt; can be relative or absolute. If they are relative, the given &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt; and &lt;em&gt;scheme&lt;/em&gt; will be used. If they are absolute, the absolute URL will be used.</source>
          <target state="translated">カスタマイズ可能なURI &lt;em&gt;request_token_uri&lt;/em&gt;、&lt;em&gt;authorize_uri&lt;/em&gt;、および&lt;em&gt;access_token_uriの一部&lt;/em&gt;またはすべては、相対または絶対にすることができます。それらが相対的である場合、指定された&lt;em&gt;ホスト&lt;/em&gt;、&lt;em&gt;ポート&lt;/em&gt;、&lt;em&gt;スキーム&lt;/em&gt;が使用されます。絶対URLの場合、絶対URLが使用されます。</target>
        </trans-unit>
        <trans-unit id="8a775da44db16b03e32fefcc04471d9b17fcc105" translate="yes" xml:space="preserve">
          <source>Any other character following a backslash is interpreted as the character itself.</source>
          <target state="translated">バックスラッシュの後に続くその他の文字は、その文字そのものとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="4d028b419d64baf25c9652fc104f3f4a2a66ba3b" translate="yes" xml:space="preserve">
          <source>Any other value (such as &lt;code&gt;&quot;Europe/Berlin&quot;&lt;/code&gt;) is tried to be resolved using &lt;code&gt;&lt;a href=&quot;location#load(name:String):Location-class-method&quot;&gt;Location.load&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">その他の値（ &lt;code&gt;&quot;Europe/Berlin&quot;&lt;/code&gt; など）は、 &lt;code&gt;&lt;a href=&quot;location#load(name:String):Location-class-method&quot;&gt;Location.load&lt;/a&gt;&lt;/code&gt; を使用して解決しようとします。</target>
        </trans-unit>
        <trans-unit id="82a6614beab8db0704c5921429c49797ce9b7526" translate="yes" xml:space="preserve">
          <source>Any string literal can span multiple lines:</source>
          <target state="translated">任意の文字列リテラルは複数行に渡ることができます。</target>
        </trans-unit>
        <trans-unit id="b53adfd856de94019d99f82c9716e65e6bfb4e02" translate="yes" xml:space="preserve">
          <source>Any#==</source>
          <target state="translated">Any#==</target>
        </trans-unit>
        <trans-unit id="112be8d2e694b06d66a10f9996a4e37e8b66e945" translate="yes" xml:space="preserve">
          <source>Any#[]</source>
          <target state="translated">Any#[]</target>
        </trans-unit>
        <trans-unit id="2742a2605e85b20760c4d9ac3ad994fd0b8cbc6a" translate="yes" xml:space="preserve">
          <source>Any#[]?</source>
          <target state="translated">Any#[]?</target>
        </trans-unit>
        <trans-unit id="b80a9b62d9a284fc265fbe6bf21401ba994f5b3e" translate="yes" xml:space="preserve">
          <source>Any#as_a</source>
          <target state="translated">Any#as_a</target>
        </trans-unit>
        <trans-unit id="3b416a12c830c961447306b6b6f1538ccdd42076" translate="yes" xml:space="preserve">
          <source>Any#as_a?</source>
          <target state="translated">Any#as_a?</target>
        </trans-unit>
        <trans-unit id="b0ff173bff52757ea3d720e7d51e7ad444ccd9bb" translate="yes" xml:space="preserve">
          <source>Any#as_bool</source>
          <target state="translated">Any#as_bool</target>
        </trans-unit>
        <trans-unit id="3cdb2993a7a061448e7b8e50d8af802187d16547" translate="yes" xml:space="preserve">
          <source>Any#as_bool?</source>
          <target state="translated">Any#as_bool?</target>
        </trans-unit>
        <trans-unit id="17151558929070e626e1f5bef45d60f9c60cd029" translate="yes" xml:space="preserve">
          <source>Any#as_bytes</source>
          <target state="translated">Any#as_bytes</target>
        </trans-unit>
        <trans-unit id="5ff3e0aaa65b9b16ff6ffe2cfdf4c4127207c54f" translate="yes" xml:space="preserve">
          <source>Any#as_bytes?</source>
          <target state="translated">Any#as_bytes?</target>
        </trans-unit>
        <trans-unit id="14b2d773f0b84e04b68f0c0a98a50167a97108bc" translate="yes" xml:space="preserve">
          <source>Any#as_f</source>
          <target state="translated">Any#as_f</target>
        </trans-unit>
        <trans-unit id="6bfa982dfc4e74bfe6099dfcd914f79b5fac6ea3" translate="yes" xml:space="preserve">
          <source>Any#as_f32</source>
          <target state="translated">Any#as_f32</target>
        </trans-unit>
        <trans-unit id="dde8780445185469240d66a9d3001b1a16a53321" translate="yes" xml:space="preserve">
          <source>Any#as_f32?</source>
          <target state="translated">Any#as_f32?</target>
        </trans-unit>
        <trans-unit id="744e2a549a2989ed3566935c771d8d54e7e9810a" translate="yes" xml:space="preserve">
          <source>Any#as_f?</source>
          <target state="translated">Any#as_f?</target>
        </trans-unit>
        <trans-unit id="dc7a5ce21b265fe51a266bc851be9171386c37c6" translate="yes" xml:space="preserve">
          <source>Any#as_h</source>
          <target state="translated">Any#as_h</target>
        </trans-unit>
        <trans-unit id="a7196aeef5ab7e8831e48e4ab4cf3694decb494f" translate="yes" xml:space="preserve">
          <source>Any#as_h?</source>
          <target state="translated">Any#as_h?</target>
        </trans-unit>
        <trans-unit id="3f29c0c82ccd02bb34a053f94c18ca492983f0a7" translate="yes" xml:space="preserve">
          <source>Any#as_i</source>
          <target state="translated">Any#as_i</target>
        </trans-unit>
        <trans-unit id="5e3902ec3d0b0790d519ec70adeb33bbc21d4c1a" translate="yes" xml:space="preserve">
          <source>Any#as_i64</source>
          <target state="translated">Any#as_i64</target>
        </trans-unit>
        <trans-unit id="47fb00eb47cd001f491200f0fed7e54e96dbf4a2" translate="yes" xml:space="preserve">
          <source>Any#as_i64?</source>
          <target state="translated">Any#as_i64?</target>
        </trans-unit>
        <trans-unit id="7ad8ab24654b8494e79cad1649e3820006f7315d" translate="yes" xml:space="preserve">
          <source>Any#as_i?</source>
          <target state="translated">Any#as_i?</target>
        </trans-unit>
        <trans-unit id="c68a855320f34cc17839e663a6f7633144278828" translate="yes" xml:space="preserve">
          <source>Any#as_nil</source>
          <target state="translated">Any#as_nil</target>
        </trans-unit>
        <trans-unit id="24ec8d83a22602574a5fc59f14a4545da35496bc" translate="yes" xml:space="preserve">
          <source>Any#as_s</source>
          <target state="translated">Any#as_s</target>
        </trans-unit>
        <trans-unit id="7f43772dd3a2b76ed6f9d438460297b62b8b75ec" translate="yes" xml:space="preserve">
          <source>Any#as_s?</source>
          <target state="translated">Any#as_s?</target>
        </trans-unit>
        <trans-unit id="6c7d30ae17ce5bcf5179d81e2e8cd7960e9b232f" translate="yes" xml:space="preserve">
          <source>Any#as_time</source>
          <target state="translated">Any#as_time</target>
        </trans-unit>
        <trans-unit id="a618127480801f9d14e335b1dc63892716bdbbcd" translate="yes" xml:space="preserve">
          <source>Any#as_time?</source>
          <target state="translated">Any#as_time?</target>
        </trans-unit>
        <trans-unit id="af3bb0e14cb0fd6c4bbeb2fe405fe90292555eef" translate="yes" xml:space="preserve">
          <source>Any#clone</source>
          <target state="translated">Any#clone</target>
        </trans-unit>
        <trans-unit id="af44ff023e07f0470366251b8a75d66744f2bd28" translate="yes" xml:space="preserve">
          <source>Any#dig</source>
          <target state="translated">Any#dig</target>
        </trans-unit>
        <trans-unit id="2f9352508f82ccd1a330cdf87d6b94c2a13a26d5" translate="yes" xml:space="preserve">
          <source>Any#dig?</source>
          <target state="translated">Any#dig?</target>
        </trans-unit>
        <trans-unit id="e9f4b3c3f720fa501a2d3ee0e61f5ae9dc815428" translate="yes" xml:space="preserve">
          <source>Any#dup</source>
          <target state="translated">Any#dup</target>
        </trans-unit>
        <trans-unit id="1947dd36a291ad18be24199eff7bb8228fac82b2" translate="yes" xml:space="preserve">
          <source>Any#hash</source>
          <target state="translated">Any#hash</target>
        </trans-unit>
        <trans-unit id="5c3a005ce5acce304d259cb3f0d75abbc8f44c84" translate="yes" xml:space="preserve">
          <source>Any#raw</source>
          <target state="translated">Any#raw</target>
        </trans-unit>
        <trans-unit id="07856cc55486767a3c85c459d50f87d176de7307" translate="yes" xml:space="preserve">
          <source>Any#size</source>
          <target state="translated">Any#size</target>
        </trans-unit>
        <trans-unit id="20d75ac63a2430d01743d0cf19221b66524a94d7" translate="yes" xml:space="preserve">
          <source>Any#to_json</source>
          <target state="translated">Any#to_json</target>
        </trans-unit>
        <trans-unit id="c37d721df435818cb7293215c8d2b53c9b5a5c44" translate="yes" xml:space="preserve">
          <source>Any#to_json_object_key</source>
          <target state="translated">Any#to_json_object_key</target>
        </trans-unit>
        <trans-unit id="aa5d26e44dccfafe66fef1d8a693668fc86cd29c" translate="yes" xml:space="preserve">
          <source>Any#to_yaml</source>
          <target state="translated">Any#to_yaml</target>
        </trans-unit>
        <trans-unit id="a6a64c2dd9923f8abb7c1930fbcb4de95d5b0a45" translate="yes" xml:space="preserve">
          <source>Any.new</source>
          <target state="translated">Any.new</target>
        </trans-unit>
        <trans-unit id="2cf58f2aa1c66ab402bad4b706f85f1102d473ca" translate="yes" xml:space="preserve">
          <source>Any::Type</source>
          <target state="translated">Any::Type</target>
        </trans-unit>
        <trans-unit id="e8b5fa63ab59f20902f4c5cbd86a02c71b02b62f" translate="yes" xml:space="preserve">
          <source>AnyReg</source>
          <target state="translated">AnyReg</target>
        </trans-unit>
        <trans-unit id="92c2c4c622b24d471fa6fc9a135e660924288ceb" translate="yes" xml:space="preserve">
          <source>Append multiple values.</source>
          <target state="translated">複数の値を追加します。</target>
        </trans-unit>
        <trans-unit id="9b7e135e6bea97de4153d3dedc5673190f7bcce4" translate="yes" xml:space="preserve">
          <source>Append multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to push into &lt;code&gt;self&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">複数の値を追加します。 &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; と同じですが、任意の数の値を取得して &lt;code&gt;self&lt;/code&gt; にプッシュします。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f2903e2088270b463902676f3d83c206c4baacf4" translate="yes" xml:space="preserve">
          <source>Append.</source>
          <target state="translated">Append.</target>
        </trans-unit>
        <trans-unit id="005a0d6972449dc5bcf15172db99029728c54ba3" translate="yes" xml:space="preserve">
          <source>Append. Alias for &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">追加。 &lt;code&gt;&lt;a href=&quot;array#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; のエイリアス。</target>
        </trans-unit>
        <trans-unit id="134a93ccaa1599893a808030a1d7b5e8488d8c82" translate="yes" xml:space="preserve">
          <source>Append. Pushes one value to the end of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="translated">追加。値のタイプが&lt;em&gt;T&lt;/em&gt;（単一のタイプまたはタイプの和集合である可能性がある）である場合、1つの値を &lt;code&gt;self&lt;/code&gt; の終わりにプッシュします。このメソッドは &lt;code&gt;self&lt;/code&gt; を返すため、複数の呼び出しをチェーンできます。反対の効果については &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e65ceb80602a8b1c9b2d8842430f00d11d5ac17" translate="yes" xml:space="preserve">
          <source>Appender</source>
          <target state="translated">Appender</target>
        </trans-unit>
        <trans-unit id="fe4e86aaa99a6f1a24c0ba6249c9bb44d6753df3" translate="yes" xml:space="preserve">
          <source>Appender#&amp;lt;&amp;lt;</source>
          <target state="translated">Appender#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="623b7c7711e9c06bf7a4d64decafb4b67cbc0ed4" translate="yes" xml:space="preserve">
          <source>Appender#pointer</source>
          <target state="translated">Appender#pointer</target>
        </trans-unit>
        <trans-unit id="52bd064b58f9b297b6be8625057e0b3a600501b7" translate="yes" xml:space="preserve">
          <source>Appender#size</source>
          <target state="translated">Appender#size</target>
        </trans-unit>
        <trans-unit id="21a0ec48cdf30fb7a9bc90eb42f3656b9d11ccbc" translate="yes" xml:space="preserve">
          <source>Appender.new</source>
          <target state="translated">Appender.new</target>
        </trans-unit>
        <trans-unit id="aff95d2e1ec32e966d2138494495653618e53ea3" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;&quot;true&quot;&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;&quot;false&quot;&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; to the given IO.</source>
          <target state="translated">追加 &lt;code&gt;&quot;true&quot;&lt;/code&gt; のために &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;&quot;false&quot;&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; 与えIOへ。</target>
        </trans-unit>
        <trans-unit id="9d73534333da9c50324001b25d28799c92b77914" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and and non-ascii characters (unicode codepoints &amp;gt; 128), but not wrapped in quotes.</source>
          <target state="translated">特殊文字の文字エスケープと非ASCII文字（Unicodeコードポイント&amp;gt; 128）を使用して、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに &lt;code&gt;self&lt;/code&gt; を追加しますが、引用符で囲みません。</target>
        </trans-unit>
        <trans-unit id="41d500ab7b0cae6434b10d00b5ce86a50fdd3e44" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and and non-ascii characters (unicode codepoints &amp;gt; 128), wrapped in quotes.</source>
          <target state="translated">特殊文字の文字エスケープと非ASCII文字（Unicodeコードポイント&amp;gt; 128）を使用して、引用符で囲まれた &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに &lt;code&gt;self&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="e4f3e2c8c36fc0fbc5cf841bbd0773492a04821e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters and wrapped in double quotes.</source>
          <target state="translated">特殊文字の文字エスケープを使用し、二重引用符で囲んで、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに &lt;code&gt;self&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="eb7739696c9409dc2c5e484c2efa5d0d96044361" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;self&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object using character escapes for special characters but not wrapped in quotes.</source>
          <target state="translated">特殊文字のエスケープを使用して、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに &lt;code&gt;self&lt;/code&gt; を追加しますが、引用符で囲みません。</target>
        </trans-unit>
        <trans-unit id="457e0c4fed14010ecbbb69ae458c8a59751f780c" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;データ&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="44cc102b5bc5cd8f705980099e232f6198039be0" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;データ&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; が呼び出された場合、またはボディパーツが追加されていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="78f90369b8c5420ad970cbfe696fbee67ea8a5e3" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;データ&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="0a1337c8c3ebd1c2cf260a904c3fafa754e08c16" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;data&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;データ&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="30f276db325e66f9cd6cfac4ab1d88687df77acd" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;preamble_io&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="a02a6dfa1a8f042099ec4a87180892a8ea40cb6c" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;preamble_io&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; が呼び出された場合、またはボディパーツが追加されていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f964d943264f7923c8e29ad38876483c48cede2d" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;preamble_io&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="74b71f2249c8915bc38b3d5dcae0de01bd6bfbe4" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;preamble_io&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;preamble_io&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="7806b57316694aacc46c7893a01ecd70930c2957" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the epilogue segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;文字列&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="51f0e9f004d8b2c217afbae0699b9e7079013f04" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the epilogue segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">マルチパートメッセージのエピローグセグメントに&lt;em&gt;文字列&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; が呼び出された場合、またはボディパーツが追加されていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="8ed0dd98c035102c2c156e6fe2874c3271b08296" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the preamble segment of the multipart message.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;文字列&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="9814f620f53c8ee5a66b8ce6795469b9c1e890e1" translate="yes" xml:space="preserve">
          <source>Appends &lt;em&gt;string&lt;/em&gt; to the preamble segment of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">マルチパートメッセージのプリアンブルセグメントに&lt;em&gt;文字列&lt;/em&gt;を追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="acd218d9a394df3689d7144841d1453101e3e8f9" translate="yes" xml:space="preserve">
          <source>Appends CSV data to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に CSVデータを追加します。</target>
        </trans-unit>
        <trans-unit id="c2b5d55ed7554d5a9053d1b36b2cb8538197ff71" translate="yes" xml:space="preserve">
          <source>Appends CSV data to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. This yields a &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; that writes to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に CSVデータを追加します。これにより、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込む &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; が生成されます。</target>
        </trans-unit>
        <trans-unit id="5a4e654def14db1066b5e839fefff084adf99c0c" translate="yes" xml:space="preserve">
          <source>Appends INI data to the given IO.</source>
          <target state="translated">与えられたIOにINIデータを追加します。</target>
        </trans-unit>
        <trans-unit id="0ffad84072f327dcd0bb9b3bfbb8ecb227033462" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this enum member to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">この列挙型メンバーの &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表現を指定された&lt;em&gt;ioに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="665feebec7de57a20695da119ecf59a29a905d18" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this enum member to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">この列挙型メンバーの &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表現を指定された&lt;em&gt;ioに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="94e8123b44a0dd1a1cb9b96d894f13e71239fdfd" translate="yes" xml:space="preserve">
          <source>Appends a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation of this object to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">このオブジェクトの &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表現を、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="ad0e7acdb8c39c61440e7b6b422629366e77be8e" translate="yes" xml:space="preserve">
          <source>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</source>
          <target state="translated">このオブジェクトのクラス名、オブジェクトアドレス、すべてのインスタンス変数の値を含む文字列表現を追加します。</target>
        </trans-unit>
        <trans-unit id="a81991a4b4e09219cb3d8e4b0faa3f1e6e99b57e" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダー&lt;/em&gt;と&lt;em&gt;データ&lt;/em&gt;を使用して、本文部分をマルチパートメッセージに追加します。</target>
        </trans-unit>
        <trans-unit id="b4b451d4dd49a6ad6009a92cbfc4574f4023fb07" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダー&lt;/em&gt;と&lt;em&gt;データ&lt;/em&gt;を使用して、本文部分をマルチパートメッセージに追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f609808259c9fa31e53131d5400024c71146f41c" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダー&lt;/em&gt;と&lt;em&gt;文字列&lt;/em&gt;を使用して、本文部分をマルチパートメッセージに追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9efe12770137bda7378ca598492e682d634c11a7" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and &lt;em&gt;string&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダー&lt;/em&gt;と&lt;em&gt;文字列&lt;/em&gt;を使用して、本文部分をマルチパートメッセージに追加し&lt;em&gt;ます&lt;/em&gt;。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5a60858c3d54d890f2c552b84e66c52547e76af4" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and data from &lt;em&gt;body_io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;body_io&lt;/em&gt;からの特定の&lt;em&gt;ヘッダー&lt;/em&gt;とデータを&lt;em&gt;使用&lt;/em&gt;して、本文部分をマルチパートメッセージに追加します。</target>
        </trans-unit>
        <trans-unit id="806f205151429bc35c277fa7081b5c2c3cd6e58a" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and data from &lt;em&gt;body_io&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">&lt;em&gt;body_io&lt;/em&gt;からの特定の&lt;em&gt;ヘッダー&lt;/em&gt;とデータを&lt;em&gt;使用&lt;/em&gt;して、本文部分をマルチパートメッセージに追加します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="55f56912e267dc2e39a7ab4b88cf156505a7eba0" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and no body data.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダーを&lt;/em&gt;持ち、本文データがないマルチパートメッセージに本文部分を追加します。</target>
        </trans-unit>
        <trans-unit id="d200a2ec9c3b70846470daa5b6ca18f212504768" translate="yes" xml:space="preserve">
          <source>Appends a body part to the multipart message with the given &lt;em&gt;headers&lt;/em&gt; and no body data. Throws is &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダーを&lt;/em&gt;持ち、本文データがないマルチパートメッセージに本文部分を追加します。 &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; は#finishまたは &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; がこのメソッドの前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6efd05e602694d5d0b36eb7ca5bb614ff69e5cad" translate="yes" xml:space="preserve">
          <source>Appends a comma, thus skipping a cell.</source>
          <target state="translated">カンマを追加し、セルをスキップします。</target>
        </trans-unit>
        <trans-unit id="9a41e64f8b68525fed37b2a432f9676a10970dd0" translate="yes" xml:space="preserve">
          <source>Appends a group that is surrounded by the given &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; objects, and optionally is surrounded by the given breakable objects.</source>
          <target state="translated">所与によって囲まれているグループ追加&lt;em&gt;左&lt;/em&gt;及び&lt;em&gt;右&lt;/em&gt;オブジェクト、及び任意に与えられた破壊可能なオブジェクトに囲まれています。</target>
        </trans-unit>
        <trans-unit id="80c8dcd3257e892778cb5dd19c7b12e832f9bf2c" translate="yes" xml:space="preserve">
          <source>Appends a list of elements surrounded by &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; and separated by commas, yielding each element to the given block.</source>
          <target state="translated">&lt;em&gt;左&lt;/em&gt;と&lt;em&gt;右で&lt;/em&gt;囲まれ、コンマで区切られた要素のリストを追加して、各要素を指定されたブロックに生成します。</target>
        </trans-unit>
        <trans-unit id="9ad8ea88b265ee81117ea71bea554a972b19b51b" translate="yes" xml:space="preserve">
          <source>Appends a list of elements surrounded by &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; and separated by commas.</source>
          <target state="translated">&lt;em&gt;左&lt;/em&gt;と&lt;em&gt;右で&lt;/em&gt;囲まれ、コンマで区切られた要素のリストを追加します。</target>
        </trans-unit>
        <trans-unit id="0718a5d08e2a7bfb845cf1f8d69b624832240597" translate="yes" xml:space="preserve">
          <source>Appends a node into this sequence.</source>
          <target state="translated">このシーケンスにノードを追加します。</target>
        </trans-unit>
        <trans-unit id="e2d97093528e4e88227e5cb407cffa30f0be5649" translate="yes" xml:space="preserve">
          <source>Appends a node to this document.</source>
          <target state="translated">このドキュメントにノードを追加します。</target>
        </trans-unit>
        <trans-unit id="ce3c378a5d56996069f33bd055706f85318cb1a9" translate="yes" xml:space="preserve">
          <source>Appends a node to this document. Raises if more than one node is appended.</source>
          <target state="translated">このドキュメントにノードを追加します。複数のノードが追加された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="9e6d7e4ad933058d4726228e09167ebc7e8861b7" translate="yes" xml:space="preserve">
          <source>Appends a short String representation of this object which includes its class name and its object address.</source>
          <target state="translated">このオブジェクトのクラス名とオブジェクトのアドレスを含む短い文字列表現を追加します。</target>
        </trans-unit>
        <trans-unit id="5989ca8ea660e9d375a8c02a916c78b3dde9de41" translate="yes" xml:space="preserve">
          <source>Appends a single node into this mapping.</source>
          <target state="translated">このマッピングに単一のノードを追加します。</target>
        </trans-unit>
        <trans-unit id="5bfa3eb5eba3b9dd2ce94b86fdab7b84c5d12341" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this named tuple to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この名前付きタプルの文字列表現を、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="124d73b62aa9d04eba8daa976701121d959b56f7" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this object to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">このオブジェクトの文字列表現を、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="f5dc9652918bbfdd3f4278de95bb3f576c97ff3c" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this pointer to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, including its type and address in hexadecimal.</source>
          <target state="translated">このポインタの文字列表現を、16進数のタイプとアドレスを含め、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="fc16f73fb863173d6d226af5198ce782e37eb5c6" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this static array to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この静的配列の文字列表現を、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="ae46e03ba9bf87fccc1bc34952fb6b3e0cbe384b" translate="yes" xml:space="preserve">
          <source>Appends a string representation of this tuple to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このタプルの文字列表現を指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="144ce172a84be3ade2c4fae0d86bfe4c8aa75801" translate="yes" xml:space="preserve">
          <source>Appends a text element.</source>
          <target state="translated">テキスト要素を追加します。</target>
        </trans-unit>
        <trans-unit id="bd2926a2016b6bf1b0cdfdeb0b1d06be672f3764" translate="yes" xml:space="preserve">
          <source>Appends an element that can turn into a newline if necessary.</source>
          <target state="translated">必要に応じて改行に変換できる要素を追加します。</target>
        </trans-unit>
        <trans-unit id="bb1b6da32738fbb41e8062bc71f0b1d9f9034fe0" translate="yes" xml:space="preserve">
          <source>Appends new value for specified param &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">指定されたパラメータ&lt;em&gt;名に&lt;/em&gt;新しい値を追加します。</target>
        </trans-unit>
        <trans-unit id="2ab281dc79fd23f51a4b1aa21a78125867c194bf" translate="yes" xml:space="preserve">
          <source>Appends new value for specified param &lt;em&gt;name&lt;/em&gt;. Creates param when there was no such param.</source>
          <target state="translated">指定されたパラメータ&lt;em&gt;名に&lt;/em&gt;新しい値を追加します。そのようなパラメーターがなかったときにパラメーターを作成します。</target>
        </trans-unit>
        <trans-unit id="d946c2ea232f7ad9b22b6c894d37165bfd69a2d0" translate="yes" xml:space="preserve">
          <source>Appends the elements of &lt;em&gt;other&lt;/em&gt; to &lt;code&gt;self&lt;/code&gt;, and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">要素追加&lt;em&gt;他&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; 、およびリターンの &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcb7b70c039e7acfd8e091fb0672fef6c7bf010c" translate="yes" xml:space="preserve">
          <source>Appends the given &lt;em&gt;part&lt;/em&gt; to this path and returns the joined path.</source>
          <target state="translated">指定された&lt;em&gt;部分&lt;/em&gt;をこのパスに追加し、結合されたパスを返します。</target>
        </trans-unit>
        <trans-unit id="bcfcbb890b444766ace338d569eeffc7fb664285" translate="yes" xml:space="preserve">
          <source>Appends the given &lt;em&gt;parts&lt;/em&gt; to this path and returns the joined path.</source>
          <target state="translated">指定された&lt;em&gt;部分&lt;/em&gt;をこのパスに追加し、結合されたパスを返します。</target>
        </trans-unit>
        <trans-unit id="b6005704a74a8f9d727a785770b63e83d8896adb" translate="yes" xml:space="preserve">
          <source>Appends the given value to this row.</source>
          <target state="translated">指定した値をこの行に追加します。</target>
        </trans-unit>
        <trans-unit id="8256bb5d40f8db47bc2bef824ad74d98a6e15766" translate="yes" xml:space="preserve">
          <source>Appends the given values as a single row, and then a newline.</source>
          <target state="translated">与えられた値を1行として追加し、その後改行します。</target>
        </trans-unit>
        <trans-unit id="7de5d3b6ef8254a2d25dfdb9363aae0c60f36acf" translate="yes" xml:space="preserve">
          <source>Appends the given values to this row.</source>
          <target state="translated">与えられた値をこの行に追加します。</target>
        </trans-unit>
        <trans-unit id="0f0a8f63b5085aaa9da78d6d5614e7c0f4df424c" translate="yes" xml:space="preserve">
          <source>Appends the string representation of this path to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">このパスの文字列表現を&lt;em&gt;ioに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="b853e3b724db8955cde01c9bfd78a38028091e9b" translate="yes" xml:space="preserve">
          <source>Appends the symbol's name to the passed &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">渡された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にシンボルの名前を追加します。</target>
        </trans-unit>
        <trans-unit id="c760dd13d0ce9834c4bda6fc09c5950a5450cb4d" translate="yes" xml:space="preserve">
          <source>Appends this char as a string that contains a char literal to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この文字を、文字リテラルを含む文字列として、指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="73ab35b0f8334036af3397b091c0036c3ce09aaf" translate="yes" xml:space="preserve">
          <source>Appends this char to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この文字を指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="75097835ad9fb30d356ef76ab6c36f1b93592276" translate="yes" xml:space="preserve">
          <source>Appends this internal buffer to the given &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この内部バッファを指定された &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="82fe76247c9152f7930a7060b48bb3ff3b82a29c" translate="yes" xml:space="preserve">
          <source>Appends this object's value to &lt;em&gt;hasher&lt;/em&gt;, and returns the modified &lt;em&gt;hasher&lt;/em&gt;.</source>
          <target state="translated">このオブジェクトの値を&lt;em&gt;hasher&lt;/em&gt;に追加し、変更された&lt;em&gt;hasher&lt;/em&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="87e0e9b01b206deeaf70a312bb96d884b75d0b2b" translate="yes" xml:space="preserve">
          <source>Appends this struct's name and instance variables names and values to the given IO.</source>
          <target state="translated">この構造体の名前とインスタンス変数の名前と値を、与えられたIOに追加します。</target>
        </trans-unit>
        <trans-unit id="8325d305f1ce076fc5296c566d5a5f98c39faaf2" translate="yes" xml:space="preserve">
          <source>Appends two nodes into this mapping.</source>
          <target state="translated">このマッピングに 2 つのノードを追加します。</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="8ae72dd6ea2df06a6f9d70adf5823a7dea3c82dc" translate="yes" xml:space="preserve">
          <source>Applications can register their own MIME types:</source>
          <target state="translated">アプリケーションは独自の MIME タイプを登録することができます。</target>
        </trans-unit>
        <trans-unit id="c028748c87e468f24334767c05321d4f4b66b6c8" translate="yes" xml:space="preserve">
          <source>Arch Linux includes the Crystal compiler in the Community repository. You should also install &lt;code&gt;shards&lt;/code&gt;, Crystal's dependency manager (see &lt;a href=&quot;../the_shards_command/index&quot;&gt;The Shards command&lt;/a&gt;).</source>
          <target state="translated">Arch LinuxのコミュニティリポジトリにはCrystalコンパイラが含まれています。Crystalの依存関係マネージャーである &lt;code&gt;shards&lt;/code&gt; もインストールする必要があります&lt;a href=&quot;../the_shards_command/index&quot;&gt;（Shardsコマンドを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b8bc95515466bfd1d5820bfea495f62a49211b2b" translate="yes" xml:space="preserve">
          <source>Argument list too long</source>
          <target state="translated">引数リストが長すぎる</target>
        </trans-unit>
        <trans-unit id="649115d22398e9eb64f88197e12ca82333fec41a" translate="yes" xml:space="preserve">
          <source>Argument to a &lt;code&gt;seek&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;seek&lt;/code&gt; 操作への引数。</target>
        </trans-unit>
        <trans-unit id="41ed7b8f7c8e97d4eaa49d91cf5d985f2894e409" translate="yes" xml:space="preserve">
          <source>ArgumentError</source>
          <target state="translated">ArgumentError</target>
        </trans-unit>
        <trans-unit id="4b795f1ce004d075dc998de340641e9a28d98a44" translate="yes" xml:space="preserve">
          <source>ArgumentError.new</source>
          <target state="translated">ArgumentError.new</target>
        </trans-unit>
        <trans-unit id="86dc099c2338cad0373a484db74ee0fe2995cea6" translate="yes" xml:space="preserve">
          <source>Arguments can be used with the short syntax argument as well:</source>
          <target state="translated">引数は、短い構文の引数でも使用できます。</target>
        </trans-unit>
        <trans-unit id="7909716542d098c134fd8c368c6311dab8b15f98" translate="yes" xml:space="preserve">
          <source>Arguments past the splat argument can only be passed as named arguments:</source>
          <target state="translated">splat 引数を超えた引数は、名前付き引数としてのみ渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b367ecd9479b1856bb17884792fb945cf8fa508a" translate="yes" xml:space="preserve">
          <source>Arguments past the splat method without a default value are required named arguments:</source>
          <target state="translated">デフォルト値のないsplatメソッドの過去の引数は、必須の名前付き引数です。</target>
        </trans-unit>
        <trans-unit id="a97ef56659bbf08382be611dfb8413b463a8d229" translate="yes" xml:space="preserve">
          <source>Arguments past the star can also have default values. It means: they must be passed as named arguments, but they aren't required (so: optional named arguments):</source>
          <target state="translated">星を過ぎた引数はデフォルト値を持つこともできます。つまり、それらは名前付き引数として渡されなければなりませんが、必須ではありません (つまり、オプションの名前付き引数)。</target>
        </trans-unit>
        <trans-unit id="75c93d2d0d36a86a6a5968dd32c9a7425673e6b5" translate="yes" xml:space="preserve">
          <source>Arguments to the compiled binary can be separated with double dash &lt;code&gt;--&lt;/code&gt; from the compiler arguments. The binary executable is stored in a temporary location between compiling and running.</source>
          <target state="translated">コンパイルされたバイナリへの引数は、二重ダッシュで分離することができます &lt;code&gt;--&lt;/code&gt; コンパイラ引数から。バイナリ実行可能ファイルは、コンパイルと実行の間の一時的な場所に保存されます。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="1eeb49b3a75511a08d74fc3fed7bd03947af7c01" translate="yes" xml:space="preserve">
          <source>Array indexing starts at 0. A negative index is assumed to be relative to the end of the array: -1 indicates the last element, -2 is the next to last element, and so on.</source>
          <target state="translated">配列のインデキシングは 0 から始まります。 負のインデキは配列の末尾からの相対的なものとみなされます。-1 は最後の要素を表し、-2 は最後の要素の次の要素を表します。</target>
        </trans-unit>
        <trans-unit id="fee1d9e7ef796491ad0939b5b4a5591ba90792d1" translate="yes" xml:space="preserve">
          <source>Array of identifiers that make up the pre-release metadata</source>
          <target state="translated">リリース前のメタデータを構成する識別子の配列</target>
        </trans-unit>
        <trans-unit id="1785a7e99e8839406357ffe12c789a0f237512c0" translate="yes" xml:space="preserve">
          <source>Array#*</source>
          <target state="translated">Array#*</target>
        </trans-unit>
        <trans-unit id="ea7e6f1c2900c2be00538af11ed47629427abba0" translate="yes" xml:space="preserve">
          <source>Array#+</source>
          <target state="translated">Array#+</target>
        </trans-unit>
        <trans-unit id="901304a54ce0e672b893a92a421f35d0c440dba1" translate="yes" xml:space="preserve">
          <source>Array#-</source>
          <target state="translated">Array#-</target>
        </trans-unit>
        <trans-unit id="ee80898c450589a7b87c42bc6555be8956d47998" translate="yes" xml:space="preserve">
          <source>Array#==</source>
          <target state="translated">Array#==</target>
        </trans-unit>
        <trans-unit id="537adfb1ac511931919e578fb668dced0b56cbc3" translate="yes" xml:space="preserve">
          <source>Array#[]</source>
          <target state="translated">Array#[]</target>
        </trans-unit>
        <trans-unit id="b5b21b1c6ed710113553c78a8526fb62c11004cb" translate="yes" xml:space="preserve">
          <source>Array#[]=</source>
          <target state="translated">Array#[]=</target>
        </trans-unit>
        <trans-unit id="959f570123175290e02739723446fc0ab3bcc404" translate="yes" xml:space="preserve">
          <source>Array#[]?</source>
          <target state="translated">Array#[]?</target>
        </trans-unit>
        <trans-unit id="caf4a4fc6b725191d3189fcce46b6ac06407bfa1" translate="yes" xml:space="preserve">
          <source>Array#dup</source>
          <target state="translated">Array#dup</target>
        </trans-unit>
        <trans-unit id="0680b137333feab141da2d7a4c115e299b15337f" translate="yes" xml:space="preserve">
          <source>Array#fill</source>
          <target state="translated">Array#fill</target>
        </trans-unit>
        <trans-unit id="d4ad52a28381c34966d5024f426c89abad59a5d4" translate="yes" xml:space="preserve">
          <source>Array#last</source>
          <target state="translated">Array#last</target>
        </trans-unit>
        <trans-unit id="5f4422479c15beec2a25b4fda17b3fc5b4ebd3c3" translate="yes" xml:space="preserve">
          <source>Array#map</source>
          <target state="translated">Array#map</target>
        </trans-unit>
        <trans-unit id="e9a90cc86d79d60d4ba722b7872bdbfd463d9e25" translate="yes" xml:space="preserve">
          <source>Array#map!</source>
          <target state="translated">Array#map!</target>
        </trans-unit>
        <trans-unit id="82a5a3ac60cbcda423120b8ee0d822738f3ceb95" translate="yes" xml:space="preserve">
          <source>Array#pop</source>
          <target state="translated">Array#pop</target>
        </trans-unit>
        <trans-unit id="9a6c1483abc00764438323b54d649a90c456c879" translate="yes" xml:space="preserve">
          <source>Array#pop?</source>
          <target state="translated">Array#pop?</target>
        </trans-unit>
        <trans-unit id="16f95d333f21d5a163bac8dc7da84b8b8a96cd72" translate="yes" xml:space="preserve">
          <source>Array#push</source>
          <target state="translated">Array#push</target>
        </trans-unit>
        <trans-unit id="9fdfe2f638917be044f74524c71d0c876723c783" translate="yes" xml:space="preserve">
          <source>Array#size</source>
          <target state="translated">Array#size</target>
        </trans-unit>
        <trans-unit id="a040c7fab49290c01f97abf694ad3a53bbfe9dec" translate="yes" xml:space="preserve">
          <source>Array#skip</source>
          <target state="translated">Array#skip</target>
        </trans-unit>
        <trans-unit id="4d05f2f7061e600f46c2e357e0b02f98c78e4dcd" translate="yes" xml:space="preserve">
          <source>Array#sort</source>
          <target state="translated">Array#sort</target>
        </trans-unit>
        <trans-unit id="a7c35a4364c2586430a18808d79ff1401da65553" translate="yes" xml:space="preserve">
          <source>Array#swap</source>
          <target state="translated">Array#swap</target>
        </trans-unit>
        <trans-unit id="d874da5efc43b2ef59715d5f3af71371b4abdda3" translate="yes" xml:space="preserve">
          <source>Array#to_a</source>
          <target state="translated">Array#to_a</target>
        </trans-unit>
        <trans-unit id="974c5cd21a18eeebb9fe7afa2db481bcf8e21ede" translate="yes" xml:space="preserve">
          <source>Array#to_s</source>
          <target state="translated">Array#to_s</target>
        </trans-unit>
        <trans-unit id="bdb54ed6419560b12aa4d7defa46baa5a833689c" translate="yes" xml:space="preserve">
          <source>Array#uniq</source>
          <target state="translated">Array#uniq</target>
        </trans-unit>
        <trans-unit id="de7c0d4c7c2c504a6f77a3c0be2f80bae1939952" translate="yes" xml:space="preserve">
          <source>Array#|</source>
          <target state="translated">Array#|</target>
        </trans-unit>
        <trans-unit id="283ac17e267aadeb5fd61fc1fa3cb8c5f09ddd97" translate="yes" xml:space="preserve">
          <source>Array(T)</source>
          <target state="translated">Array(T)</target>
        </trans-unit>
        <trans-unit id="5d876c0d5f0c5a520e254ab916ad4f5565c42809" translate="yes" xml:space="preserve">
          <source>Array-like</source>
          <target state="translated">Array-like</target>
        </trans-unit>
        <trans-unit id="0cf51a42a3c152f255420f900ac5c671c76b77ff" translate="yes" xml:space="preserve">
          <source>Array-like Type Literal</source>
          <target state="translated">配列状の型文字列</target>
        </trans-unit>
        <trans-unit id="9a6f20b74ec7e4421211751a8fe57a1eb813fb65" translate="yes" xml:space="preserve">
          <source>Array.new</source>
          <target state="translated">Array.new</target>
        </trans-unit>
        <trans-unit id="758a976b0f2ec4cb53890fd320651c326047ea0d" translate="yes" xml:space="preserve">
          <source>Arrays are typically created with an array literal denoted by square brackets (&lt;code&gt;[]&lt;/code&gt;) and individual elements separated by a comma (&lt;code&gt;,&lt;/code&gt;).</source>
          <target state="translated">配列は通常、角括弧（ &lt;code&gt;[]&lt;/code&gt; ）で示される配列リテラルと、コンマ（ &lt;code&gt;,&lt;/code&gt; ）で区切られた個々の要素で作成されます。</target>
        </trans-unit>
        <trans-unit id="78b34c74922da2efeeca753c16b621861507c038" translate="yes" xml:space="preserve">
          <source>As a code base grows, these issues gain more relevance: understanding a project becomes harder, and compile times become unbearable.</source>
          <target state="translated">コードベースが大きくなればなるほど、これらの問題の関連性が高まり、プロジェクトの理解が難しくなり、コンパイル時間が耐えられなくなります。</target>
        </trans-unit>
        <trans-unit id="31ce8338bbc6d8f37ce8c02e16fee017dc58d6ae" translate="yes" xml:space="preserve">
          <source>As a convention, &lt;code&gt;clone&lt;/code&gt; is the method used to create a deep copy of an object, but this logic isn't defined generically for every type because cycles could be involved, and the clone logic might not need to clone everything.</source>
          <target state="translated">慣例として、 &lt;code&gt;clone&lt;/code&gt; はオブジェクトのディープコピーを作成するために使用されるメソッドですが、サイクルが関係する可能性があるため、このロジックはすべてのタイプに対して一般的に定義されているわけではなく、クローンロジックはすべてをクローンする必要がない場合があります。</target>
        </trans-unit>
        <trans-unit id="140273463944d3fc8f438fd6146b0afcbddad756" translate="yes" xml:space="preserve">
          <source>As a side note, since &lt;code&gt;Person&lt;/code&gt; inherits &lt;code&gt;Reference&lt;/code&gt; the second definition of &lt;code&gt;==&lt;/code&gt; is not needed, since it's already defined in &lt;code&gt;Reference&lt;/code&gt;.</source>
          <target state="translated">補足として、 &lt;code&gt;Person&lt;/code&gt; は &lt;code&gt;Reference&lt;/code&gt; を継承するため、 &lt;code&gt;==&lt;/code&gt; の2番目の定義はすでに &lt;code&gt;Reference&lt;/code&gt; で定義されているため、必要ありません。</target>
        </trans-unit>
        <trans-unit id="4d013bd7460e28ba3bb985476569521c8dd5e410" translate="yes" xml:space="preserve">
          <source>As a side note, we can define &lt;code&gt;become_older&lt;/code&gt; inside the original &lt;code&gt;Person&lt;/code&gt; definition, or in a separate definition: Crystal combines all definitions into a single class. The following works just fine:</source>
          <target state="translated">補足として、元の &lt;code&gt;Person&lt;/code&gt; 定義内または別の定義で &lt;code&gt;become_older&lt;/code&gt; を定義できます。Crystalはすべての定義を単一のクラスに結合します。以下はうまく動作します：</target>
        </trans-unit>
        <trans-unit id="8e1613095510b95d985ce9ce0fae4a4212e07769" translate="yes" xml:space="preserve">
          <source>As a suffix</source>
          <target state="translated">接尾語として</target>
        </trans-unit>
        <trans-unit id="52010cb742973e6b63990653d4aa24b7c35a5b08" translate="yes" xml:space="preserve">
          <source>As an additional note, Ruby's Psych YAML parser also implements a custom time parser, probably for this same reason.</source>
          <target state="translated">追記として、RubyのPsych YAMLパーサーはカスタムタイムパーサーも実装しています。</target>
        </trans-unit>
        <trans-unit id="a1b0356443fd94e17ce249202a6b727019e2e75d" translate="yes" xml:space="preserve">
          <source>As an alternative, the operating system also provides a monotonic clock. Its time-line has no specfied starting point but is strictly linearly increasing.</source>
          <target state="translated">別の方法として、オペレーティングシステムは単調なクロックも提供しています。その時間軸には始点が指定されていませんが、厳密には直線的に増加します。</target>
        </trans-unit>
        <trans-unit id="0b80a626240b719a78010722dd798df2ca4cb6e8" translate="yes" xml:space="preserve">
          <source>As an example, let's compute the first three numbers in the range &lt;code&gt;1..10_000_000&lt;/code&gt; that are even, multiplied by three. One way to do this is:</source>
          <target state="translated">例として、 &lt;code&gt;1..10_000_000&lt;/code&gt; の範囲の最初の3つの数値を計算して、3を掛けます。これを行う1つの方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c6b380834f62517f2eee569325795e3c405fa78f" translate="yes" xml:space="preserve">
          <source>As an expression</source>
          <target state="translated">表現として</target>
        </trans-unit>
        <trans-unit id="ced979163cc221436372e0006be3e61bca467dab" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;literals/proc&quot;&gt;proc literals&lt;/a&gt; section, a Proc can also be created from existing methods:</source>
          <target state="translated">&lt;a href=&quot;literals/proc&quot;&gt;procリテラルの&lt;/a&gt;セクションで説明したように、Procは既存のメソッドから作成することもできます。</target>
        </trans-unit>
        <trans-unit id="08121242023b2430f9d5263e9cf09b5775566024" translate="yes" xml:space="preserve">
          <source>As in C, the first member of the enum has a value of zero and each successive value is incremented by one.</source>
          <target state="translated">Cの場合と同様に、列挙型の最初のメンバの値は0で、それ以降の値は1ずつインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="9158f7670382b2baa8f45e68c98b8669456c65ba" translate="yes" xml:space="preserve">
          <source>As soon as you instantiate a &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;Char::Reader&lt;/a&gt;&lt;/code&gt; it will decode the first char in the &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, which can be accessed by invoking &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt;. At this point &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;, the current position in the string, will equal zero. Successive calls to &lt;code&gt;&lt;a href=&quot;reader#next_char-instance-method&quot;&gt;#next_char&lt;/a&gt;&lt;/code&gt; return the next chars in the string, advancing &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reader&quot;&gt;Char::Reader&lt;/a&gt;&lt;/code&gt; をインスタンス化するとすぐに、 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; を呼び出してアクセスできる &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; の最初の文字をデコードします。この時点で、文字列内の現在位置 &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; はゼロになります。 &lt;code&gt;&lt;a href=&quot;reader#next_char-instance-method&quot;&gt;#next_char&lt;/a&gt;&lt;/code&gt; を連続して呼び出すと、文字列内の次の文字が返され、 &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; が進みます。</target>
        </trans-unit>
        <trans-unit id="5bfdba98e0da5c141b82ef9ddad6ba3b7afcefe7" translate="yes" xml:space="preserve">
          <source>As the name suggests, a nested transaction is a transaction created inside the scope of another transaction. Here is an example:</source>
          <target state="translated">その名が示すように、入れ子になったトランザクションは、別のトランザクションのスコープ内で作成されたトランザクションです。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="704056d533f4633744a9709905a47e4734036196" translate="yes" xml:space="preserve">
          <source>As the previous example, the exception cause the transaction to rollback and then is rescued by us.</source>
          <target state="translated">前の例のように、例外はトランザクションがロールバックする原因となり、その後、私たちによって救出されます。</target>
        </trans-unit>
        <trans-unit id="5f9c7c9de783ff9c2f81a7fef14922a74549e5f4" translate="yes" xml:space="preserve">
          <source>As we mentioned early, an &lt;strong&gt;implicit rollback&lt;/strong&gt; gets executed when an exception is raised, and it&amp;rsquo;s worth mentioning that the exception may be rescued by us.</source>
          <target state="translated">先に述べたように、例外が発生すると&lt;strong&gt;暗黙のロールバック&lt;/strong&gt;が実行され、例外は私たちによって救出される可能性があることを言及する価値があります。</target>
        </trans-unit>
        <trans-unit id="008dae11b419896f056bb3d748317712b679bdbd" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ve already seen, a rollback may be fired at any time (by an exception or by sending the message &lt;code&gt;rollback&lt;/code&gt; explicitly)</source>
          <target state="translated">すでに見てきたように、ロールバックはいつでも発生する可能性があります（例外またはメッセージの &lt;code&gt;rollback&lt;/code&gt; 明示的に送信することにより）</target>
        </trans-unit>
        <trans-unit id="9703c7166e2940d5315d025f31cf22ee620867b6" translate="yes" xml:space="preserve">
          <source>As with other keg-only formulas there are some caveats shown in &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; that shows how to link pkg-config with this library.</source>
          <target state="translated">他のkegのみの数式と同様に、 &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; には、pkg-configをこのライブラリにリンクする方法を示す警告がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="0580b0813cf801f13e30d0279973172221f46496" translate="yes" xml:space="preserve">
          <source>As you can see, some basic math is allowed for a member value: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">ご覧のように、メンバー値に対していくつかの基本的な数学が許可されています： &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 、および &lt;code&gt;%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b297a1ec5aaaf02a6906c39dcffc3716089b1cc" translate="yes" xml:space="preserve">
          <source>Assign expression.</source>
          <target state="translated">式を代入します。</target>
        </trans-unit>
        <trans-unit id="e55df441e8955746182110c3946288f381520e83" translate="yes" xml:space="preserve">
          <source>Assignment</source>
          <target state="translated">Assignment</target>
        </trans-unit>
        <trans-unit id="25fb925e5b5c356b1470420023e9456187e294da" translate="yes" xml:space="preserve">
          <source>Assignment is done using the equals sign (&lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">割り当ては、等号（ &lt;code&gt;=&lt;/code&gt; ）を使用して行われます。</target>
        </trans-unit>
        <trans-unit id="971c50d0d52c5e9547946ecfcddfb432e0e5b232" translate="yes" xml:space="preserve">
          <source>Associates an object with an anchor.</source>
          <target state="translated">オブジェクトとアンカーを関連付けます。</target>
        </trans-unit>
        <trans-unit id="643b89aaf0f576c41e794835981cda219cbec716" translate="yes" xml:space="preserve">
          <source>Assumes that &lt;code&gt;self&lt;/code&gt; is an array of arrays and transposes the rows and columns.</source>
          <target state="translated">自分 &lt;code&gt;self&lt;/code&gt; が配列の配列であると想定し、行と列を転置します。</target>
        </trans-unit>
        <trans-unit id="b44ff3357019a1b63c2122e6245fe17e189202c1" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key, or &lt;code&gt;nil&lt;/code&gt; if the key is not present.</source>
          <target state="translated">基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、指定されたキーを持つ要素を返します。キーが存在しない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="68fa29f2a0c6e65a6c2929a02b6e1717ce830534" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key, or &lt;code&gt;nil&lt;/code&gt; if the key is not present. Raises if the underlying value is not a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、指定されたキーを持つ要素を返します。キーが存在しない場合は &lt;code&gt;nil&lt;/code&gt; を返します。基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="e7004fee6e676bd26421c4ae09ad5a7bed641fe0" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key.</source>
          <target state="translated">基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、指定されたキーを持つ要素を返します。</target>
        </trans-unit>
        <trans-unit id="91584523709af54bcbe5523a0f5dbe13dff57510" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element with the given key. Raises if the underlying value is not a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、指定されたキーを持つ要素を返します。基本となる値が &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="13b3b79ff5110c92978e1ba3d0305865f46751dc" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index, or &lt;code&gt;nil&lt;/code&gt; if out of bounds.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; と想定し、指定されたインデックスの要素を返します。範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8e9c53b6de3deab3cbdbfbbcaf9a24d229c40261" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index, or &lt;code&gt;nil&lt;/code&gt; if out of bounds. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; と想定し、指定されたインデックスの要素を返します。範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。基本となる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ではない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="adaeab0f2b2da410e312ddd3e167f31b4f40fc6e" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; と想定し、指定されたインデックスの要素を返します。</target>
        </trans-unit>
        <trans-unit id="b4f3af8e2425df111f3ab3bc124f2ec900d2cb5d" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and returns the element at the given index. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; と想定し、指定されたインデックスの要素を返します。基本となる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ではない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="20ffe630a874ca69711398ba8063a182a71d5fec" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns its size.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、そのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="38fb9774774b2f264223605eab4ac746e4a2523f" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns its size. Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、そのサイズを返します。基本となる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="cece227c545b34cf71e3c4a4fff7f074a9e9fb15" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if out of bounds or the key is missing.</source>
          <target state="translated">基礎となる値があると仮定 &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 又は &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と所定の位置にある要素を返し&lt;em&gt;index_or_key&lt;/em&gt;、又は &lt;code&gt;nil&lt;/code&gt; 境界のうち、キー場合は欠落しています。</target>
        </trans-unit>
        <trans-unit id="3d7ae6cebf8533b313bb9c4db20db80b9793c309" translate="yes" xml:space="preserve">
          <source>Assumes the underlying value is an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns the element at the given &lt;em&gt;index_or_key&lt;/em&gt;.</source>
          <target state="translated">基になる値が &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; と想定し、指定された&lt;em&gt;index_or_keyの&lt;/em&gt;要素を返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="35d1515a869e4c20cbc5deb54f76c8d8f37be2bd" translate="yes" xml:space="preserve">
          <source>Assuming the &lt;em&gt;pull_parser&lt;/em&gt; is positioned in a scalar, parses it according to the core schema, taking the scalar's style and tag into account, then advances the pull parser.</source>
          <target state="translated">&lt;em&gt;pull_parser&lt;/em&gt;がスカラーに配置されていると仮定すると、コアスキーマに従ってスカラーのスタイルとタグを考慮して解析し、&lt;em&gt;プルパーサー&lt;/em&gt;を進めます。</target>
        </trans-unit>
        <trans-unit id="57cd82f7fc8e7e6576c38a8ae533c579d3c7a7ca" translate="yes" xml:space="preserve">
          <source>Assuming this type is a struct, returns its name.</source>
          <target state="translated">この型が構造体であると仮定して、その名前を返します。</target>
        </trans-unit>
        <trans-unit id="22bfe05792ecee4fefe07ca0df98b1917d42def5" translate="yes" xml:space="preserve">
          <source>Assuming this type is a struct, returns its name. The name can be &lt;code&gt;nil&lt;/code&gt; if the struct is anonymous. Raises if this type is not a struct.</source>
          <target state="translated">この型が構造体であると仮定して、その名前を返します。構造体が匿名の場合、名前は &lt;code&gt;nil&lt;/code&gt; にすることができます。この型が構造体でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="c6c8f4138847fdf439ce3a740614a7fce2bc726f" translate="yes" xml:space="preserve">
          <source>Assuming you have an access token, its secret, the consumer key and the consumer secret, you can setup an &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to be authenticated with OAuth using this code:</source>
          <target state="translated">アクセストークン、そのシークレット、コンシューマキー、およびコンシューマシークレットがあるとすると、次のコードを使用して、 &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; をOAuthで認証されるように設定できます。</target>
        </trans-unit>
        <trans-unit id="6d99ea65d72d7abc54332a422ebd374b9e8a9c69" translate="yes" xml:space="preserve">
          <source>Assuming you have an access token, you can setup an &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to be authenticated with OAuth2 using this code:</source>
          <target state="translated">アクセストークンがあると仮定すると、次のコードを使用して、 &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; をOAuth2で認証されるように設定できます。</target>
        </trans-unit>
        <trans-unit id="4474831c1b67e20384c436bc499297382c831d85" translate="yes" xml:space="preserve">
          <source>At least one of the &lt;em&gt;lib&lt;/em&gt;, &lt;em&gt;ldflags&lt;/em&gt;, &lt;em&gt;framework&lt;/em&gt; arguments needs to be specified.</source>
          <target state="translated">&lt;em&gt;lib&lt;/em&gt;、&lt;em&gt;ldflags&lt;/em&gt;、&lt;em&gt;フレームワーク&lt;/em&gt;引数の少なくとも1つを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2230a0510ec31ee33f44f9da888bda26572f60b5" translate="yes" xml:space="preserve">
          <source>At the end of the call chain we get back a new iterator: we need to consume it, either using &lt;code&gt;&lt;a href=&quot;iterator#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">コールチェーンの終わりに私たちは、新しいイテレータを取り戻す：私たちはそれを消費する必要があり、いずれかを使用して &lt;code&gt;&lt;a href=&quot;iterator#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c7d6e3d2fe3527e143eccaa3c56c67fc94d2770d" translate="yes" xml:space="preserve">
          <source>At the end of the if, &lt;code&gt;a&lt;/code&gt; will have the &lt;code&gt;Int32 | String&lt;/code&gt; type, read &quot;the union of Int32 and String&quot;. This union type is created automatically by the compiler. At runtime, &lt;code&gt;a&lt;/code&gt; will of course be of one type only. This can be seen by invoking the &lt;code&gt;class&lt;/code&gt; method:</source>
          <target state="translated">ifの最後に、 &lt;code&gt;a&lt;/code&gt; は &lt;code&gt;Int32 | String&lt;/code&gt; を持ちます。文字列型。「Int32と文字列の結合」をお読みください。この共用体タイプは、コンパイラーによって自動的に作成されます。実行時には、もちろん、1種類のみとなります。これは、 &lt;code&gt;class&lt;/code&gt; メソッドを呼び出すことで確認できます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca3b5ed1b251d5bfeabd7cb367761f53a2ed928d" translate="yes" xml:space="preserve">
          <source>At the moment of this writing, Crystal has concurrency support but not parallelism: several tasks can be executed, and a bit of time will be spent on each of these, but two code paths are never executed at the same exact time.</source>
          <target state="translated">この記事を書いている時点では、Crystal は並行性をサポートしていますが、並列性はサポートしていません。いくつかのタスクを実行することができ、それぞれに少しの時間が費やされますが、2つのコードパスが正確に同時に実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="f3023cb8188912c321e51f84008e15af7ab75428" translate="yes" xml:space="preserve">
          <source>Atomic</source>
          <target state="translated">Atomic</target>
        </trans-unit>
        <trans-unit id="cfc98260892eb13ada6ed33db5bc607e42a77267" translate="yes" xml:space="preserve">
          <source>Atomic#add</source>
          <target state="translated">Atomic#add</target>
        </trans-unit>
        <trans-unit id="ad0cc79200d90a652bd955d9e4a760f77df291f6" translate="yes" xml:space="preserve">
          <source>Atomic#and</source>
          <target state="translated">Atomic#and</target>
        </trans-unit>
        <trans-unit id="7411cc5b54cd7f4f6b39c8379f4a4d9bbdf63130" translate="yes" xml:space="preserve">
          <source>Atomic#get</source>
          <target state="translated">Atomic#get</target>
        </trans-unit>
        <trans-unit id="3fefa7590a02534c63a3f3f60602a473ba7202ba" translate="yes" xml:space="preserve">
          <source>Atomic#max</source>
          <target state="translated">Atomic#max</target>
        </trans-unit>
        <trans-unit id="b7f283d2b7efc9bbf647c6389494a2fc8a602b35" translate="yes" xml:space="preserve">
          <source>Atomic#min</source>
          <target state="translated">Atomic#min</target>
        </trans-unit>
        <trans-unit id="31559545d4449322c41f993f26da15fdadb8124d" translate="yes" xml:space="preserve">
          <source>Atomic#nand</source>
          <target state="translated">Atomic#nand</target>
        </trans-unit>
        <trans-unit id="9e1cd3bb3b8d0bf33f6c245b5e76aecd9803599c" translate="yes" xml:space="preserve">
          <source>Atomic#or</source>
          <target state="translated">Atomic#or</target>
        </trans-unit>
        <trans-unit id="ca192c6441c573832235c39fc426871bf9d3c1f5" translate="yes" xml:space="preserve">
          <source>Atomic#set</source>
          <target state="translated">Atomic#set</target>
        </trans-unit>
        <trans-unit id="4456eeb1b7b00ab6a87d419326d31242c3da8ebe" translate="yes" xml:space="preserve">
          <source>Atomic#sub</source>
          <target state="translated">Atomic#sub</target>
        </trans-unit>
        <trans-unit id="1ed4e8ff8a46e3454ab001567a857a36739340fb" translate="yes" xml:space="preserve">
          <source>Atomic#swap</source>
          <target state="translated">Atomic#swap</target>
        </trans-unit>
        <trans-unit id="e5b6cf37ea954824631d98e82baa3bb6c25e81f8" translate="yes" xml:space="preserve">
          <source>Atomic#xor</source>
          <target state="translated">Atomic#xor</target>
        </trans-unit>
        <trans-unit id="1f7c3f39a931759db59b3885da0c81379d654b30" translate="yes" xml:space="preserve">
          <source>Atomic(T)</source>
          <target state="translated">Atomic(T)</target>
        </trans-unit>
        <trans-unit id="0790c4a154eab13c9e5a291e2ef20b8d57b52a63" translate="yes" xml:space="preserve">
          <source>Atomic.new</source>
          <target state="translated">Atomic.new</target>
        </trans-unit>
        <trans-unit id="84789144f52483edd031559eb143aab824c9ef28" translate="yes" xml:space="preserve">
          <source>Atomic::Flag</source>
          <target state="translated">Atomic::Flag</target>
        </trans-unit>
        <trans-unit id="71b1b66065a978162488537afccd2f9d704bb3ac" translate="yes" xml:space="preserve">
          <source>AtomicOrdering</source>
          <target state="translated">AtomicOrdering</target>
        </trans-unit>
        <trans-unit id="67e16d2f146ee1278b0b919272c54c393ee631cc" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#acquire?</source>
          <target state="translated">AtomicOrdering#acquire?</target>
        </trans-unit>
        <trans-unit id="8793ae1bc7164da7630b8545ab1f4dbabdeb68a6" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#acquire_release?</source>
          <target state="translated">AtomicOrdering#acquire_release?</target>
        </trans-unit>
        <trans-unit id="0099e6994df9e5b8912d03fb639462687766f18b" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#monotonic?</source>
          <target state="translated">AtomicOrdering#monotonic?</target>
        </trans-unit>
        <trans-unit id="544691302ac69836b491c044ef9b04e1168c3721" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#not_atomic?</source>
          <target state="translated">AtomicOrdering#not_atomic?</target>
        </trans-unit>
        <trans-unit id="6382d0df7ffff6fb0230a41c78f94a1ce12ef9a1" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#release?</source>
          <target state="translated">AtomicOrdering#release?</target>
        </trans-unit>
        <trans-unit id="4cbca18dc8f480aae06ab5e7367a1a0546c18cc2" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#sequentially_consistent?</source>
          <target state="translated">AtomicOrdering#sequentially_consistent?</target>
        </trans-unit>
        <trans-unit id="c33255da377b645adaf0e66d6796712e937b5435" translate="yes" xml:space="preserve">
          <source>AtomicOrdering#unordered?</source>
          <target state="translated">AtomicOrdering#unordered?</target>
        </trans-unit>
        <trans-unit id="8b2e3bb39ed25e693b01aa2369916bb2e2317b81" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp</source>
          <target state="translated">AtomicRMWBinOp</target>
        </trans-unit>
        <trans-unit id="e4fe5629957941732f0ebd5b0f98293bd00abe64" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#add?</source>
          <target state="translated">AtomicRMWBinOp#add?</target>
        </trans-unit>
        <trans-unit id="6c9ad13128bb62fc3fa935cf346ab15e49bf5583" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#and?</source>
          <target state="translated">AtomicRMWBinOp#and?</target>
        </trans-unit>
        <trans-unit id="27d83954bbf8479c056385751d16382ff60cd0e9" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#max?</source>
          <target state="translated">AtomicRMWBinOp#max?</target>
        </trans-unit>
        <trans-unit id="8546d023ca38c6007e6a35750fa57d87adaf702b" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#min?</source>
          <target state="translated">AtomicRMWBinOp#min?</target>
        </trans-unit>
        <trans-unit id="a3382cefccb59ff50e476137d54a3d5e32ccfa75" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#nand?</source>
          <target state="translated">AtomicRMWBinOp#nand?</target>
        </trans-unit>
        <trans-unit id="8d1793971f35f670d3589149023264473aa6d84b" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#or?</source>
          <target state="translated">AtomicRMWBinOp#or?</target>
        </trans-unit>
        <trans-unit id="135472bc32537731f9c3bc4677a620a53a5545db" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#sub?</source>
          <target state="translated">AtomicRMWBinOp#sub?</target>
        </trans-unit>
        <trans-unit id="c28dcecf18216ec5681ad53851a95b16c5777e6c" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#u_max?</source>
          <target state="translated">AtomicRMWBinOp#u_max?</target>
        </trans-unit>
        <trans-unit id="7723875a186a0ac1b854a4249c951fcd841608c5" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#u_min?</source>
          <target state="translated">AtomicRMWBinOp#u_min?</target>
        </trans-unit>
        <trans-unit id="07005c274285101c2c19b31d73167f7c8486c5bc" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#xchg?</source>
          <target state="translated">AtomicRMWBinOp#xchg?</target>
        </trans-unit>
        <trans-unit id="3f6f5ab41c2fadff77625dee9d8741b895e97cc9" translate="yes" xml:space="preserve">
          <source>AtomicRMWBinOp#xor?</source>
          <target state="translated">AtomicRMWBinOp#xor?</target>
        </trans-unit>
        <trans-unit id="93074833abc0ea4c62437c6eb1433b692172674f" translate="yes" xml:space="preserve">
          <source>Atomically clears the flag.</source>
          <target state="translated">原子的にフラグをクリアします。</target>
        </trans-unit>
        <trans-unit id="25df4d6d68ad0f1c79a56181b86475826050f37b" translate="yes" xml:space="preserve">
          <source>Atomically returns this atomic's value.</source>
          <target state="translated">原子的にこのアトミックの値を返します。</target>
        </trans-unit>
        <trans-unit id="836c3abbefa6cf452da9098d7b0740c22a6c58f5" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">このアトミックの値を原子的にvalueに設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0460d29e81b5f80b6c7c63547861c197a40b834b" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;. Returns the &lt;strong&gt;new&lt;/strong&gt; value.</source>
          <target state="translated">このアトミックの値を原子的にvalueに設定し&lt;em&gt;ます&lt;/em&gt;。&lt;strong&gt;新しい&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="aaaf5579d5b3a16bdc94efa6b22abc3c83a18a93" translate="yes" xml:space="preserve">
          <source>Atomically sets this atomic's value to &lt;em&gt;value&lt;/em&gt;. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">このアトミックの値を原子的にvalueに設定し&lt;em&gt;ます&lt;/em&gt;。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="5d7d6ee5222533c4bd843605fbd89dae3cfd7c77" translate="yes" xml:space="preserve">
          <source>Atomically tries to set the flag.</source>
          <target state="translated">原子的にフラグを設定しようとします。</target>
        </trans-unit>
        <trans-unit id="de31806784e941c742fb9f4e4c8eb3615a840d90" translate="yes" xml:space="preserve">
          <source>Atomically tries to set the flag. Only succeeds and returns &lt;code&gt;true&lt;/code&gt; if the flag wasn't previously set; returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">原子的にフラグを設定しようとします。成功し、フラグが以前に設定されていなかった場合にのみ &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="411e8ebedad7889453dfa421b4c2b0fb2c775e96" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of each file given in the &lt;em&gt;paths&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;paths&lt;/em&gt;パラメータで指定された各ファイルのアクセス時刻と変更時刻を、&lt;em&gt;timeで&lt;/em&gt;指定された値に設定しようとします。</target>
        </trans-unit>
        <trans-unit id="939705c976928a81912b609e5a688e0ddd019d6a" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;em&gt;filename&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;パラメータで指定された&lt;em&gt;ファイル&lt;/em&gt;のアクセス時刻と変更時刻を、&lt;em&gt;timeで&lt;/em&gt;指定された値に設定しようとします。</target>
        </trans-unit>
        <trans-unit id="1e5f3a20b3e34ab7d841486daa6a08a42b141652" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;em&gt;path&lt;/em&gt; parameter to the value given in &lt;em&gt;time&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt;パラメータで指定されたファイルのアクセス時刻と変更時刻を、&lt;em&gt;timeで&lt;/em&gt;指定された値に設定しようとします。</target>
        </trans-unit>
        <trans-unit id="d06f3bccd2ffe8ae97c73c752094adbd6a306e7f" translate="yes" xml:space="preserve">
          <source>Attempts to skip &lt;em&gt;until&lt;/em&gt; the given &lt;em&gt;pattern&lt;/em&gt; is found after the scan offset.</source>
          <target state="translated">スキャンオフセットの後、指定された&lt;em&gt;パターン&lt;/em&gt;が見つかる&lt;em&gt;まで&lt;/em&gt;スキップを試みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e46a8ab9f9b9800b20cccd1c336a287337a5ffa9" translate="yes" xml:space="preserve">
          <source>Attempts to skip &lt;em&gt;until&lt;/em&gt; the given &lt;em&gt;pattern&lt;/em&gt; is found after the scan offset. In other words, the pattern is not anchored to the current scan offset.</source>
          <target state="translated">スキャンオフセットの後、指定された&lt;em&gt;パターン&lt;/em&gt;が見つかる&lt;em&gt;まで&lt;/em&gt;スキップを試みます。つまり、パターンは現在のスキャンオフセットに固定されていません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55be175ea7278cc7f0f571d824bc0cf0509f95e2" translate="yes" xml:space="preserve">
          <source>Attempts to skip over the given &lt;em&gt;pattern&lt;/em&gt; beginning with the scan offset.</source>
          <target state="translated">スキャンオフセットで始まる特定の&lt;em&gt;パターンの&lt;/em&gt;スキップを試みます。</target>
        </trans-unit>
        <trans-unit id="5d6d92da5c4d5c8cba214ddb252d2122f5caf133" translate="yes" xml:space="preserve">
          <source>Attempts to skip over the given &lt;em&gt;pattern&lt;/em&gt; beginning with the scan offset. In other words, the pattern is not anchored to the current scan offset.</source>
          <target state="translated">スキャンオフセットで始まる特定の&lt;em&gt;パターンの&lt;/em&gt;スキップを試みます。つまり、パターンは現在のスキャンオフセットに固定されていません。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="4f4fb01b0206dcf9bb882d27e1af10c8bfc7b88e" translate="yes" xml:space="preserve">
          <source>Attribute index are either ReturnIndex (0), FunctionIndex (-1) or a parameter number ranging from 1 to N.</source>
          <target state="translated">属性インデックスは、ReturnIndex (0)、FunctionIndex (-1)、または1からNまでのパラメータ番号のいずれかです。</target>
        </trans-unit>
        <trans-unit id="306fa98ef1537e448cd2e036e40df4e7452ca59a" translate="yes" xml:space="preserve">
          <source>Attribute#alignment?</source>
          <target state="translated">Attribute#alignment?</target>
        </trans-unit>
        <trans-unit id="cad359dafe5821c76d8603a486257357dee9754a" translate="yes" xml:space="preserve">
          <source>Attribute#alloc_size?</source>
          <target state="translated">Attribute#alloc_size?</target>
        </trans-unit>
        <trans-unit id="94985e5d19468dcbf3c3ba7756970415faa68807" translate="yes" xml:space="preserve">
          <source>Attribute#always_inline?</source>
          <target state="translated">Attribute#always_inline?</target>
        </trans-unit>
        <trans-unit id="2f66fb58014a76e3df41907ad4d9114205dea4a5" translate="yes" xml:space="preserve">
          <source>Attribute#arg_mem_only?</source>
          <target state="translated">Attribute#arg_mem_only?</target>
        </trans-unit>
        <trans-unit id="981fe2e29d9404343650b1b888701d0105984f1b" translate="yes" xml:space="preserve">
          <source>Attribute#builtin?</source>
          <target state="translated">Attribute#builtin?</target>
        </trans-unit>
        <trans-unit id="a5d0331023efc883e993977f5dafe1bb210f28cc" translate="yes" xml:space="preserve">
          <source>Attribute#by_val?</source>
          <target state="translated">Attribute#by_val?</target>
        </trans-unit>
        <trans-unit id="695b3b813d200304f29e3f0eddd5509c96a5f3bf" translate="yes" xml:space="preserve">
          <source>Attribute#cold?</source>
          <target state="translated">Attribute#cold?</target>
        </trans-unit>
        <trans-unit id="65e744cb64d2bb9cd450d8bedd9aeea90d9cc220" translate="yes" xml:space="preserve">
          <source>Attribute#convergent?</source>
          <target state="translated">Attribute#convergent?</target>
        </trans-unit>
        <trans-unit id="3ab416f0d24d2d49ccff198033e00246849d40c6" translate="yes" xml:space="preserve">
          <source>Attribute#dereferenceable?</source>
          <target state="translated">Attribute#dereferenceable?</target>
        </trans-unit>
        <trans-unit id="e07337e21f925f79e2506494cea105b1506d05be" translate="yes" xml:space="preserve">
          <source>Attribute#dereferenceable_or_null?</source>
          <target state="translated">Attribute#dereferenceable_or_null?</target>
        </trans-unit>
        <trans-unit id="04dbec3533424e1a7f3491437b336281ed4d285f" translate="yes" xml:space="preserve">
          <source>Attribute#each_kind</source>
          <target state="translated">Attribute#each_kind</target>
        </trans-unit>
        <trans-unit id="9bc544d15fc2282a704c9272d8662871bf6b9675" translate="yes" xml:space="preserve">
          <source>Attribute#in_alloca?</source>
          <target state="translated">Attribute#in_alloca?</target>
        </trans-unit>
        <trans-unit id="4acb0c5533d362e90699de5aced65543f1948031" translate="yes" xml:space="preserve">
          <source>Attribute#in_reg?</source>
          <target state="translated">Attribute#in_reg?</target>
        </trans-unit>
        <trans-unit id="a85362e49ffe151c432cb2848f23d30d7766cb06" translate="yes" xml:space="preserve">
          <source>Attribute#inaccessible_mem_only?</source>
          <target state="translated">Attribute#inaccessible_mem_only?</target>
        </trans-unit>
        <trans-unit id="3fc61c416ca94b4be251a8b1b38128274a91919c" translate="yes" xml:space="preserve">
          <source>Attribute#inaccessible_mem_or_arg_mem_only?</source>
          <target state="translated">Attribute#inaccessible_mem_or_arg_mem_only?</target>
        </trans-unit>
        <trans-unit id="bb137c46e640ccaed20f78a3bd68ac5fa88060f4" translate="yes" xml:space="preserve">
          <source>Attribute#inline_hint?</source>
          <target state="translated">Attribute#inline_hint?</target>
        </trans-unit>
        <trans-unit id="dba4e3017681f1db9ac14afe6363cc4f9cd29c34" translate="yes" xml:space="preserve">
          <source>Attribute#jump_table?</source>
          <target state="translated">Attribute#jump_table?</target>
        </trans-unit>
        <trans-unit id="af6634252d4a4c71aab580faf4e5af29ae5913e1" translate="yes" xml:space="preserve">
          <source>Attribute#min_size?</source>
          <target state="translated">Attribute#min_size?</target>
        </trans-unit>
        <trans-unit id="279541a0b3b6dd3ef83b00b41a0701a57c9251c7" translate="yes" xml:space="preserve">
          <source>Attribute#naked?</source>
          <target state="translated">Attribute#naked?</target>
        </trans-unit>
        <trans-unit id="ce2e83024a370ead4354b8492ac3eecd6335d9e7" translate="yes" xml:space="preserve">
          <source>Attribute#nest?</source>
          <target state="translated">Attribute#nest?</target>
        </trans-unit>
        <trans-unit id="daaa8f488811d607e42147a7106de80a2bb53dc5" translate="yes" xml:space="preserve">
          <source>Attribute#no_alias?</source>
          <target state="translated">Attribute#no_alias?</target>
        </trans-unit>
        <trans-unit id="5fe0d731fed1cea56756bac6d1c723c81e927931" translate="yes" xml:space="preserve">
          <source>Attribute#no_builtin?</source>
          <target state="translated">Attribute#no_builtin?</target>
        </trans-unit>
        <trans-unit id="bd6f6a99adb4564a6004ad3de44a425f6c244920" translate="yes" xml:space="preserve">
          <source>Attribute#no_capture?</source>
          <target state="translated">Attribute#no_capture?</target>
        </trans-unit>
        <trans-unit id="a0ee8b4373d8dc088dd99ba3e17df83c846d7af7" translate="yes" xml:space="preserve">
          <source>Attribute#no_duplicate?</source>
          <target state="translated">Attribute#no_duplicate?</target>
        </trans-unit>
        <trans-unit id="1069992bfa0f14452fda9adc57101a290525bed4" translate="yes" xml:space="preserve">
          <source>Attribute#no_implicit_float?</source>
          <target state="translated">Attribute#no_implicit_float?</target>
        </trans-unit>
        <trans-unit id="44c3c3efb8a5fa05002b85aac7e09f3f83f056bc" translate="yes" xml:space="preserve">
          <source>Attribute#no_inline?</source>
          <target state="translated">Attribute#no_inline?</target>
        </trans-unit>
        <trans-unit id="ad6a33e7844ffc3d28ceeb7dfe90bdeb7869b672" translate="yes" xml:space="preserve">
          <source>Attribute#no_recurse?</source>
          <target state="translated">Attribute#no_recurse?</target>
        </trans-unit>
        <trans-unit id="0bf6060b8b9947ff53c0b3352c4a2f5ed2e0723f" translate="yes" xml:space="preserve">
          <source>Attribute#no_red_zone?</source>
          <target state="translated">Attribute#no_red_zone?</target>
        </trans-unit>
        <trans-unit id="e567de8ab85e7b64618ac9c701728ba52bf45fc9" translate="yes" xml:space="preserve">
          <source>Attribute#no_return?</source>
          <target state="translated">Attribute#no_return?</target>
        </trans-unit>
        <trans-unit id="3bd210021913a313c405fac4d93efb15af46b988" translate="yes" xml:space="preserve">
          <source>Attribute#no_unwind?</source>
          <target state="translated">Attribute#no_unwind?</target>
        </trans-unit>
        <trans-unit id="35ab635d4f314303b3dc46ad809de6159efcf0b7" translate="yes" xml:space="preserve">
          <source>Attribute#non_lazy_bind?</source>
          <target state="translated">Attribute#non_lazy_bind?</target>
        </trans-unit>
        <trans-unit id="a732ac3514fd857c00b58fc162427d488a135b46" translate="yes" xml:space="preserve">
          <source>Attribute#non_null?</source>
          <target state="translated">Attribute#non_null?</target>
        </trans-unit>
        <trans-unit id="5bafe477bd54b0825facc0d3a4398540c4ded542" translate="yes" xml:space="preserve">
          <source>Attribute#none?</source>
          <target state="translated">Attribute#none?</target>
        </trans-unit>
        <trans-unit id="6995ca569ed1348d64dc9eee730bf32163771337" translate="yes" xml:space="preserve">
          <source>Attribute#optimize_for_size?</source>
          <target state="translated">Attribute#optimize_for_size?</target>
        </trans-unit>
        <trans-unit id="90fea523b4700b921956a82cd4fa2ef7fa99a84c" translate="yes" xml:space="preserve">
          <source>Attribute#optimize_none?</source>
          <target state="translated">Attribute#optimize_none?</target>
        </trans-unit>
        <trans-unit id="ce45b13c9f500dd29ce3c99c0bb1969762d4b0a8" translate="yes" xml:space="preserve">
          <source>Attribute#read_none?</source>
          <target state="translated">Attribute#read_none?</target>
        </trans-unit>
        <trans-unit id="8b9b3b9a7e25820713f7658ee666c8eb87f72bf4" translate="yes" xml:space="preserve">
          <source>Attribute#read_only?</source>
          <target state="translated">Attribute#read_only?</target>
        </trans-unit>
        <trans-unit id="a43d28331436f1a0dcef19235a56af676fcb5695" translate="yes" xml:space="preserve">
          <source>Attribute#returned?</source>
          <target state="translated">Attribute#returned?</target>
        </trans-unit>
        <trans-unit id="9fa5c35978e931f72752ba1e3c9f9da4add39baf" translate="yes" xml:space="preserve">
          <source>Attribute#returns_twice?</source>
          <target state="translated">Attribute#returns_twice?</target>
        </trans-unit>
        <trans-unit id="46c8e9cda3d6cb072eb22187affa7a5d0bd5e686" translate="yes" xml:space="preserve">
          <source>Attribute#s_ext?</source>
          <target state="translated">Attribute#s_ext?</target>
        </trans-unit>
        <trans-unit id="a9c989a7782ff0883a0cd0cc518e20ed58962421" translate="yes" xml:space="preserve">
          <source>Attribute#safe_stack?</source>
          <target state="translated">Attribute#safe_stack?</target>
        </trans-unit>
        <trans-unit id="7dc0e96a61cad5d57fa69c44f28198001a76cbeb" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_address?</source>
          <target state="translated">Attribute#sanitize_address?</target>
        </trans-unit>
        <trans-unit id="8b30d55b001900ffc2c4f8fe99e06cc3c864e4cc" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_memory?</source>
          <target state="translated">Attribute#sanitize_memory?</target>
        </trans-unit>
        <trans-unit id="c340fd1add45ddc541f4354a31a86657f422fc61" translate="yes" xml:space="preserve">
          <source>Attribute#sanitize_thread?</source>
          <target state="translated">Attribute#sanitize_thread?</target>
        </trans-unit>
        <trans-unit id="4e77c67e89ffadc34d03cbabbf6528974c01627d" translate="yes" xml:space="preserve">
          <source>Attribute#stack_alignment?</source>
          <target state="translated">Attribute#stack_alignment?</target>
        </trans-unit>
        <trans-unit id="ff426aedd4b6017f850bed7014fe821d568d664c" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect?</source>
          <target state="translated">Attribute#stack_protect?</target>
        </trans-unit>
        <trans-unit id="b58c55729faee0e4d199ee01e0ef519d7a9af9d9" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect_req?</source>
          <target state="translated">Attribute#stack_protect_req?</target>
        </trans-unit>
        <trans-unit id="b272bf92befbdebaa24df6a1ea5581ef0b979bab" translate="yes" xml:space="preserve">
          <source>Attribute#stack_protect_strong?</source>
          <target state="translated">Attribute#stack_protect_strong?</target>
        </trans-unit>
        <trans-unit id="4f3d23fbdb199321d909ae925d2cdc3aa2b782c7" translate="yes" xml:space="preserve">
          <source>Attribute#struct_ret?</source>
          <target state="translated">Attribute#struct_ret?</target>
        </trans-unit>
        <trans-unit id="acf5e20301c8ca3433b771f323220d2e847e777a" translate="yes" xml:space="preserve">
          <source>Attribute#swift_error?</source>
          <target state="translated">Attribute#swift_error?</target>
        </trans-unit>
        <trans-unit id="4503e1aa905ff2b6e9f9b70ff40a36297264745b" translate="yes" xml:space="preserve">
          <source>Attribute#swift_self?</source>
          <target state="translated">Attribute#swift_self?</target>
        </trans-unit>
        <trans-unit id="798c3d5c8e17eaf884b37fc1ca05dcb9146b6677" translate="yes" xml:space="preserve">
          <source>Attribute#uw_table?</source>
          <target state="translated">Attribute#uw_table?</target>
        </trans-unit>
        <trans-unit id="4e743d81ce608b377384f91100849adb82d28cce" translate="yes" xml:space="preserve">
          <source>Attribute#write_only?</source>
          <target state="translated">Attribute#write_only?</target>
        </trans-unit>
        <trans-unit id="d2667019a149c28c4059b8d5785ad4b03020fc00" translate="yes" xml:space="preserve">
          <source>Attribute#z_ext?</source>
          <target state="translated">Attribute#z_ext?</target>
        </trans-unit>
        <trans-unit id="897f7cbff2b25236f61dabf6a55513e105c66ea7" translate="yes" xml:space="preserve">
          <source>Attribute.from_kind</source>
          <target state="translated">Attribute.from_kind</target>
        </trans-unit>
        <trans-unit id="9d072985e372e3de8b219d112123a597483efd92" translate="yes" xml:space="preserve">
          <source>Attribute.kind_for</source>
          <target state="translated">Attribute.kind_for</target>
        </trans-unit>
        <trans-unit id="bb96d311bdb39254752217d9768a3f7e49d39e7a" translate="yes" xml:space="preserve">
          <source>AttributeIndex</source>
          <target state="translated">AttributeIndex</target>
        </trans-unit>
        <trans-unit id="51d048cf4b60b4aef01cac576e248004d59aac52" translate="yes" xml:space="preserve">
          <source>AttributeIndex#function_index?</source>
          <target state="translated">AttributeIndex#function_index?</target>
        </trans-unit>
        <trans-unit id="c957367f0c1018cb8d0caa380659012b0a54e807" translate="yes" xml:space="preserve">
          <source>AttributeIndex#return_index?</source>
          <target state="translated">AttributeIndex#return_index?</target>
        </trans-unit>
        <trans-unit id="7a09241d1f2113554d6dcff668039946b30f4377" translate="yes" xml:space="preserve">
          <source>AttributeSelection</source>
          <target state="translated">AttributeSelection</target>
        </trans-unit>
        <trans-unit id="b8cac5b0a0dff16d655103264f9f7a9390ae185e" translate="yes" xml:space="preserve">
          <source>AttributeSelection#none?</source>
          <target state="translated">AttributeSelection#none?</target>
        </trans-unit>
        <trans-unit id="3d50e5ca7d19c09181a16da908b5e83f27700a61" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsadrain?</source>
          <target state="translated">AttributeSelection#tcsadrain?</target>
        </trans-unit>
        <trans-unit id="201507b6b3649da52d4c9a6e2beb3f1898b031b8" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsaflush?</source>
          <target state="translated">AttributeSelection#tcsaflush?</target>
        </trans-unit>
        <trans-unit id="dc8b2b9d510f6337421fafaec1ba0d6e0258dda6" translate="yes" xml:space="preserve">
          <source>AttributeSelection#tcsanow?</source>
          <target state="translated">AttributeSelection#tcsanow?</target>
        </trans-unit>
        <trans-unit id="34398a9fad64ccc257cc8c434dc943dcf739d657" translate="yes" xml:space="preserve">
          <source>AttributeType</source>
          <target state="translated">AttributeType</target>
        </trans-unit>
        <trans-unit id="d191d762e62323755a7d036f4123f72d2345f1df" translate="yes" xml:space="preserve">
          <source>AttributeType#cdata?</source>
          <target state="translated">AttributeType#cdata?</target>
        </trans-unit>
        <trans-unit id="53eabbcc73fb2f6d1893d02b89e7a3674af5651d" translate="yes" xml:space="preserve">
          <source>AttributeType#entities?</source>
          <target state="translated">AttributeType#entities?</target>
        </trans-unit>
        <trans-unit id="a3cbbee2218b8c6502b97e62ef0ab8f8cac225b5" translate="yes" xml:space="preserve">
          <source>AttributeType#entity?</source>
          <target state="translated">AttributeType#entity?</target>
        </trans-unit>
        <trans-unit id="35e68fa92088767f27581a0f9f907cd9c8b25f49" translate="yes" xml:space="preserve">
          <source>AttributeType#enumeration?</source>
          <target state="translated">AttributeType#enumeration?</target>
        </trans-unit>
        <trans-unit id="813bf256b1dc179a95c2d806b23b8972a2cde383" translate="yes" xml:space="preserve">
          <source>AttributeType#id?</source>
          <target state="translated">AttributeType#id?</target>
        </trans-unit>
        <trans-unit id="9c2df037916f5a1b7fb76d7d25774cd697dc3570" translate="yes" xml:space="preserve">
          <source>AttributeType#idref?</source>
          <target state="translated">AttributeType#idref?</target>
        </trans-unit>
        <trans-unit id="bbad2e586428a9eef4f95329ec095f1c084c5d8b" translate="yes" xml:space="preserve">
          <source>AttributeType#idrefs?</source>
          <target state="translated">AttributeType#idrefs?</target>
        </trans-unit>
        <trans-unit id="10883ec370ef265cf5d134b68d96b33168c07c04" translate="yes" xml:space="preserve">
          <source>AttributeType#nmtoken?</source>
          <target state="translated">AttributeType#nmtoken?</target>
        </trans-unit>
        <trans-unit id="0c7448cb938e1c7a36f198750f12182cb9e32d0a" translate="yes" xml:space="preserve">
          <source>AttributeType#nmtokens?</source>
          <target state="translated">AttributeType#nmtokens?</target>
        </trans-unit>
        <trans-unit id="29aad82602a91f53c9e3024201a563f8e7c6e744" translate="yes" xml:space="preserve">
          <source>AttributeType#notation?</source>
          <target state="translated">AttributeType#notation?</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="59d45d5ba71453a1a8d9a708e16e372c4673d7f9" translate="yes" xml:space="preserve">
          <source>Attributes are used to pass flags to the linker to find external libraries:</source>
          <target state="translated">属性は、外部ライブラリを見つけるためにリンカにフラグを渡すために使用されます。</target>
        </trans-unit>
        <trans-unit id="374e212e372c04987fc8f206f92aa3e3db9565f2" translate="yes" xml:space="preserve">
          <source>Attributes can be omitted if the library is implicitly linked, as in the case of libc.</source>
          <target state="translated">libc のようにライブラリが暗黙的にリンクされている場合は、属性を省略することができます。</target>
        </trans-unit>
        <trans-unit id="0887f1453dcf1a030d57a0fb7c4a0fe3744b49bf" translate="yes" xml:space="preserve">
          <source>Attributes not mapped with &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; are not defined as properties. Also, missing attributes raise a &lt;code&gt;&lt;a href=&quot;yaml/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; でマッピングされていない属性は、プロパティとして定義されていません。また、欠落している属性は &lt;code&gt;&lt;a href=&quot;yaml/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="8c1eb37c0f8c6acc81b5da5608481befc3b7c768" translate="yes" xml:space="preserve">
          <source>Attributes#[]</source>
          <target state="translated">Attributes#[]</target>
        </trans-unit>
        <trans-unit id="ec2c9c992c0857679d42fc3fd3b59a648ec9e596" translate="yes" xml:space="preserve">
          <source>Attributes#[]=</source>
          <target state="translated">Attributes#[]=</target>
        </trans-unit>
        <trans-unit id="a0cf68da8e86865304ffccc8283a5f83b8a7a06e" translate="yes" xml:space="preserve">
          <source>Attributes#[]?</source>
          <target state="translated">Attributes#[]?</target>
        </trans-unit>
        <trans-unit id="395bb8dd91a0032ae13ca48d96e73eedf4bd5993" translate="yes" xml:space="preserve">
          <source>Attributes#delete</source>
          <target state="translated">Attributes#delete</target>
        </trans-unit>
        <trans-unit id="8162fd98481ddedcd97714b77f8141677742d5bd" translate="yes" xml:space="preserve">
          <source>Attributes#each</source>
          <target state="translated">Attributes#each</target>
        </trans-unit>
        <trans-unit id="39e750490cc594ddbcae3425d26a45bfaca83dfb" translate="yes" xml:space="preserve">
          <source>Attributes#empty?</source>
          <target state="translated">Attributes#empty?</target>
        </trans-unit>
        <trans-unit id="c474e0417f2eea1b9857c5ed56dbc1ea2ed906b0" translate="yes" xml:space="preserve">
          <source>Attributes#inspect</source>
          <target state="translated">Attributes#inspect</target>
        </trans-unit>
        <trans-unit id="4a26a16334a604a555622b43b4ee71a7e1cedc5d" translate="yes" xml:space="preserve">
          <source>Attributes#to_s</source>
          <target state="translated">Attributes#to_s</target>
        </trans-unit>
        <trans-unit id="834b3bb5992ab33a69fe12c6f754ba95912b9a0c" translate="yes" xml:space="preserve">
          <source>Attributes.new</source>
          <target state="translated">Attributes.new</target>
        </trans-unit>
        <trans-unit id="7f461cd3cb2e38d4a2fc4123a090ae80687b05b2" translate="yes" xml:space="preserve">
          <source>Authenticated an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; to add an OAuth authorization header, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3&quot;&gt;RFC 5849, Section 3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3&quot;&gt;RFC 5849のセクション3で&lt;/a&gt;指定されているように、 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; を認証してOAuth認証ヘッダーを追加しました。</target>
        </trans-unit>
        <trans-unit id="84d75701d51e872fe66f74da2dbbdd941b941d42" translate="yes" xml:space="preserve">
          <source>Authenticates an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;, refreshing the access token if it is expired.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 認証し、期限切れのアクセストークンを更新します。</target>
        </trans-unit>
        <trans-unit id="08cb9c816d5ad644dea4db76b2c187cbefa3eaf2" translate="yes" xml:space="preserve">
          <source>Automatic help message generation</source>
          <target state="translated">ヘルプメッセージの自動生成</target>
        </trans-unit>
        <trans-unit id="cd35d07b7e4ae39178d33dae2e788398a09873b9" translate="yes" xml:space="preserve">
          <source>Available attributes:</source>
          <target state="translated">利用可能な属性。</target>
        </trans-unit>
        <trans-unit id="38b706eb5faeca0fb6279722259f6ee315060a46" translate="yes" xml:space="preserve">
          <source>Available colors are:</source>
          <target state="translated">利用可能な色は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c1483ce79645846dc8ecfc27708f8a6a5d2ddac8" translate="yes" xml:space="preserve">
          <source>Available escape sequences:</source>
          <target state="translated">利用可能なエスケープシーケンス。</target>
        </trans-unit>
        <trans-unit id="510940ae6a95c230df0a58e0acc519bf6e164458" translate="yes" xml:space="preserve">
          <source>Available text decorations are:</source>
          <target state="translated">利用可能なテキスト装飾は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="67c34c16c0b55f14373af1b9db90b32ae76c6d3b" translate="yes" xml:space="preserve">
          <source>Avoid IO allocation for string building</source>
          <target state="translated">文字列構築のための IO 割り当てを回避</target>
        </trans-unit>
        <trans-unit id="d5633977ad69841a03be941e65b29a0c8c0389ef" translate="yes" xml:space="preserve">
          <source>Avoid creating temporary objects over and over</source>
          <target state="translated">一時的なオブジェクトを何度も作成しないようにする</target>
        </trans-unit>
        <trans-unit id="48de5e3e76f3a0feee823933f7390eba854e79bd" translate="yes" xml:space="preserve">
          <source>Avoiding memory allocations</source>
          <target state="translated">メモリの割り当てを避ける</target>
        </trans-unit>
        <trans-unit id="f66b522860ee19e89aad8dc329d6c7af31f96db3" translate="yes" xml:space="preserve">
          <source>BM::Job</source>
          <target state="translated">BM::Job</target>
        </trans-unit>
        <trans-unit id="07e2e45d34288bec03896864642fb10c3e75ae8a" translate="yes" xml:space="preserve">
          <source>BM::Job#report</source>
          <target state="translated">BM::Job#report</target>
        </trans-unit>
        <trans-unit id="89c45fba18bf6a7b2c0503d3185ada6e2f5c0b63" translate="yes" xml:space="preserve">
          <source>BM::Tms</source>
          <target state="translated">BM::Tms</target>
        </trans-unit>
        <trans-unit id="8af1d5cee09fb0d19fc07b40f6c354fb732306b1" translate="yes" xml:space="preserve">
          <source>BM::Tms#cstime</source>
          <target state="translated">BM::Tms#cstime</target>
        </trans-unit>
        <trans-unit id="10424edb14d0c533b9e77c374eccffc262127e41" translate="yes" xml:space="preserve">
          <source>BM::Tms#cutime</source>
          <target state="translated">BM::Tms#cutime</target>
        </trans-unit>
        <trans-unit id="7db7b39f36d1c910d03e4eb05af73ecc94315e8d" translate="yes" xml:space="preserve">
          <source>BM::Tms#label</source>
          <target state="translated">BM::Tms#label</target>
        </trans-unit>
        <trans-unit id="588420bcfeb6492e7c079847894a5969c0d81e27" translate="yes" xml:space="preserve">
          <source>BM::Tms#real</source>
          <target state="translated">BM::Tms#real</target>
        </trans-unit>
        <trans-unit id="ae606437d5109ce5be44a685979d9964bc6715b8" translate="yes" xml:space="preserve">
          <source>BM::Tms#stime</source>
          <target state="translated">BM::Tms#stime</target>
        </trans-unit>
        <trans-unit id="f09692c7b114274f0cf2b0eefbee206ee0060766" translate="yes" xml:space="preserve">
          <source>BM::Tms#to_s</source>
          <target state="translated">BM::Tms#to_s</target>
        </trans-unit>
        <trans-unit id="de79ad274ddb5544179ac7533293cf524f59af61" translate="yes" xml:space="preserve">
          <source>BM::Tms#total</source>
          <target state="translated">BM::Tms#total</target>
        </trans-unit>
        <trans-unit id="c4a68344eeeb847d94f1e04a3598dc9688291619" translate="yes" xml:space="preserve">
          <source>BM::Tms#utime</source>
          <target state="translated">BM::Tms#utime</target>
        </trans-unit>
        <trans-unit id="80c6687f13ab05888939e7155d6af9471b9185d4" translate="yes" xml:space="preserve">
          <source>BUG</source>
          <target state="translated">BUG</target>
        </trans-unit>
        <trans-unit id="74e25ae462f4d620f38c196422fe42c88f8cef4e" translate="yes" xml:space="preserve">
          <source>Backreferences are expressed in the form &lt;code&gt;&quot;\\d&quot;&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;&quot;\\k&amp;lt;name&amp;gt;&quot;&lt;/code&gt; where &lt;em&gt;name&lt;/em&gt; is the name of a named capture group. A sequence of literal characters resembling a backreference can be expressed by placing &lt;code&gt;&quot;\\&quot;&lt;/code&gt; before the sequence.</source>
          <target state="translated">後方参照は、 &lt;code&gt;&quot;\\d&quot;&lt;/code&gt; （&lt;em&gt;d&lt;/em&gt;はグループ番号）または &lt;code&gt;&quot;\\k&amp;lt;name&amp;gt;&quot;&lt;/code&gt; （&lt;em&gt;name&lt;/em&gt;は名前付きキャプチャグループの名前）の形式で表されます。後方参照に似たリテラル文字のシーケンスは、シーケンスの前に &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 置くことで表現できます。</target>
        </trans-unit>
        <trans-unit id="d6315d3a8cf9ea02353d1b7701638e937744fb3f" translate="yes" xml:space="preserve">
          <source>Backreferences are expressed in the form &lt;code&gt;&quot;\\d&quot;&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;&quot;\\k&lt;name&gt;&quot;&lt;/name&gt;&lt;/code&gt; where &lt;em&gt;name&lt;/em&gt; is the name of a named capture group. A sequence of literal characters resembling a backreference can be expressed by placing &lt;code&gt;&quot;\\&quot;&lt;/code&gt; before the sequence.</source>
          <target state="translated">後方参照の形式で表現される &lt;code&gt;&quot;\\d&quot;&lt;/code&gt; 、&lt;em&gt;Dは&lt;/em&gt;グループ番号、またはある &lt;code&gt;&quot;\\k&lt;name&gt;&quot;&lt;/name&gt;&lt;/code&gt; ここで、&lt;em&gt;name&lt;/em&gt;は名前付きキャプチャグループの名前です。後方参照に似たリテラル文字のシーケンスは、シーケンスの前に &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 置くことで表現できます。</target>
        </trans-unit>
        <trans-unit id="1afefdad8f394c65ed6d000a865d699a38489c6f" translate="yes" xml:space="preserve">
          <source>Bad address</source>
          <target state="translated">不良アドレス</target>
        </trans-unit>
        <trans-unit id="100269e198b12a051ab659ff66bd324a08031278" translate="yes" xml:space="preserve">
          <source>Bad file descriptor</source>
          <target state="translated">不正なファイルディスクリプタ</target>
        </trans-unit>
        <trans-unit id="551cd91c11cd1216214e9eb9e26d84be076f8948" translate="yes" xml:space="preserve">
          <source>Bad message</source>
          <target state="translated">悪いメッセージ</target>
        </trans-unit>
        <trans-unit id="b5c9213525d127d4652ef2a59216a99a46a9f056" translate="yes" xml:space="preserve">
          <source>Base can be from 0 to 36 with digits from '0' to '9' and 'a' to 'z' or 'A' to 'Z'.</source>
          <target state="translated">ベースは0から36までで、'0'から'9'、'a'から'z'または'A'から'Z'までの桁数を持つことができます。</target>
        </trans-unit>
        <trans-unit id="c09ad5daf4b380564a8d548ff2c9c42198db49f4" translate="yes" xml:space="preserve">
          <source>Base class for the two possible access tokens: Bearer and Mac.</source>
          <target state="translated">2 つのアクセストークンの基底クラス。Bearer と Mac です。</target>
        </trans-unit>
        <trans-unit id="58457c881f4d9df35dcce1f98a24ba7aa7e6e8f7" translate="yes" xml:space="preserve">
          <source>Base type for file information related to zip entries.</source>
          <target state="translated">zip エントリに関連するファイル情報のベースタイプです。</target>
        </trans-unit>
        <trans-unit id="8d5ef8cec8af042cde447b3c6fe5996edf361a46" translate="yes" xml:space="preserve">
          <source>Base.base64digest</source>
          <target state="translated">Base.base64digest</target>
        </trans-unit>
        <trans-unit id="416604d9d96b9661dced94d8074544ed95d977f8" translate="yes" xml:space="preserve">
          <source>Base.digest</source>
          <target state="translated">Base.digest</target>
        </trans-unit>
        <trans-unit id="5448f0d471ec7d5def242d101bee31535ec1bdb2" translate="yes" xml:space="preserve">
          <source>Base.hexdigest</source>
          <target state="translated">Base.hexdigest</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="00a424dffa81e1994005f900ea670e0b2850f976" translate="yes" xml:space="preserve">
          <source>Base64::Error</source>
          <target state="translated">Base64::Error</target>
        </trans-unit>
        <trans-unit id="bbbc7d63521d385aeb5d6034a5c294f209b9aa6d" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;Hypertext Transfer Protocol (HTTP) Status Code Registry&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;ハイパーテキスト転送プロトコル（HTTP）ステータスコードレジストリに&lt;/a&gt;基づく</target>
        </trans-unit>
        <trans-unit id="f0b4f365cf94cf7330e4b0d3b8ab3d25cfd39857" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/dfe8bd10fe6763e0a1d5d55fa2574ecba27d3e2e/src/librustc_trans/cabi_arm.rs</source>
          <target state="translated">https:/github.comrust-langrustblobdfe8bd10fe6763e0a1d5d55fa2574ecba27d3e2esrclibrustc_transcabi_arm.rsに基づいています。</target>
        </trans-unit>
        <trans-unit id="27bb7bc4f469d35acc89d0e29c0cf3bde05a7fa2" translate="yes" xml:space="preserve">
          <source>Based on https://github.com/rust-lang/rust/blob/master/src/librustc_trans/cabi_aarch64.rs</source>
          <target state="translated">https:/github.comrust-langrustblobmastersrclibrustc_transcabi_aarch64.rs に基づいています。</target>
        </trans-unit>
        <trans-unit id="de4170e8d22bb2e0912d3b03aba91a32b185c2d0" translate="yes" xml:space="preserve">
          <source>Basic example:</source>
          <target state="translated">基本的な例。</target>
        </trans-unit>
        <trans-unit id="5dd696704b278e1b2f99e9bb77dd05d6ce9727bd" translate="yes" xml:space="preserve">
          <source>BasicBlock</source>
          <target state="translated">BasicBlock</target>
        </trans-unit>
        <trans-unit id="31d8312ab5ff9afb1d89520ba26aab4040581537" translate="yes" xml:space="preserve">
          <source>BasicBlock#delete</source>
          <target state="translated">BasicBlock#delete</target>
        </trans-unit>
        <trans-unit id="313b181622cd7c7bcfb2e63f00f1d842a96e1e24" translate="yes" xml:space="preserve">
          <source>BasicBlock#instructions</source>
          <target state="translated">BasicBlock#instructions</target>
        </trans-unit>
        <trans-unit id="a3f6ada50ecb125ff5f7262c8e79e08d586c2921" translate="yes" xml:space="preserve">
          <source>BasicBlock#name</source>
          <target state="translated">BasicBlock#name</target>
        </trans-unit>
        <trans-unit id="4ce7dd7b641030d3b21213b6ba47b05856bbeaa0" translate="yes" xml:space="preserve">
          <source>BasicBlock#to_unsafe</source>
          <target state="translated">BasicBlock#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d697f1b5297bc21b2b16aac609e7dbf428a9ebec" translate="yes" xml:space="preserve">
          <source>BasicBlock.new</source>
          <target state="translated">BasicBlock.new</target>
        </trans-unit>
        <trans-unit id="3970c967a7fba3c961ac684c1d745f98938c69b6" translate="yes" xml:space="preserve">
          <source>BasicBlock.null</source>
          <target state="translated">BasicBlock.null</target>
        </trans-unit>
        <trans-unit id="6a58b6da8858b3e1ab6eded8b6e2771aa3e9b220" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection</source>
          <target state="translated">BasicBlockCollection</target>
        </trans-unit>
        <trans-unit id="5a2d5a3e2968388f968dd6d79cf5157dacb388f1" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection#append</source>
          <target state="translated">BasicBlockCollection#append</target>
        </trans-unit>
        <trans-unit id="4b154d0c5a428cd20206cecbc1caeff7f18ac967" translate="yes" xml:space="preserve">
          <source>BasicBlockCollection.new</source>
          <target state="translated">BasicBlockCollection.new</target>
        </trans-unit>
        <trans-unit id="edd76f36427e0be6ee4ea72fcc2b48f9dc5f829a" translate="yes" xml:space="preserve">
          <source>BaudRate</source>
          <target state="translated">BaudRate</target>
        </trans-unit>
        <trans-unit id="49723ef7be0862576e9b22d13f9a5c40d70a5822" translate="yes" xml:space="preserve">
          <source>BaudRate#b0?</source>
          <target state="translated">BaudRate#b0?</target>
        </trans-unit>
        <trans-unit id="ca2680cb88c65e01efa2e8d5a01d9fbfd32d01a6" translate="yes" xml:space="preserve">
          <source>BaudRate#b110?</source>
          <target state="translated">BaudRate#b110?</target>
        </trans-unit>
        <trans-unit id="c0ce28374b5434d8b6f30bcc06ea74bd3cc08872" translate="yes" xml:space="preserve">
          <source>BaudRate#b1200?</source>
          <target state="translated">BaudRate#b1200?</target>
        </trans-unit>
        <trans-unit id="7d158bdc6c79fa6a3f2c9c9577850e1cae436522" translate="yes" xml:space="preserve">
          <source>BaudRate#b134?</source>
          <target state="translated">BaudRate#b134?</target>
        </trans-unit>
        <trans-unit id="32f854570d66ba8d175bac1eb0502ebcedfb376b" translate="yes" xml:space="preserve">
          <source>BaudRate#b150?</source>
          <target state="translated">BaudRate#b150?</target>
        </trans-unit>
        <trans-unit id="11f58437ca3b4b951f43c3b76734a5ce95a50c5f" translate="yes" xml:space="preserve">
          <source>BaudRate#b1800?</source>
          <target state="translated">BaudRate#b1800?</target>
        </trans-unit>
        <trans-unit id="532da2e6cad370112a92c23060753f9f4f2a0cc0" translate="yes" xml:space="preserve">
          <source>BaudRate#b19200?</source>
          <target state="translated">BaudRate#b19200?</target>
        </trans-unit>
        <trans-unit id="e1283708e3f8fa9414eae57c5aea87745244a82d" translate="yes" xml:space="preserve">
          <source>BaudRate#b200?</source>
          <target state="translated">BaudRate#b200?</target>
        </trans-unit>
        <trans-unit id="5dd9d07f421d749f7cff0515a9de26e027489470" translate="yes" xml:space="preserve">
          <source>BaudRate#b2400?</source>
          <target state="translated">BaudRate#b2400?</target>
        </trans-unit>
        <trans-unit id="22b1a4572b1dad0fd22829a1eee8858d60fc1ae4" translate="yes" xml:space="preserve">
          <source>BaudRate#b300?</source>
          <target state="translated">BaudRate#b300?</target>
        </trans-unit>
        <trans-unit id="6433fbc2a9c351f75854a57a551d716c28574ad7" translate="yes" xml:space="preserve">
          <source>BaudRate#b38400?</source>
          <target state="translated">BaudRate#b38400?</target>
        </trans-unit>
        <trans-unit id="dad59d45df96c215ff50918faa7f89db889e1f7c" translate="yes" xml:space="preserve">
          <source>BaudRate#b4800?</source>
          <target state="translated">BaudRate#b4800?</target>
        </trans-unit>
        <trans-unit id="329f261f86c680c4d48d6bde16ca05ab699bcf77" translate="yes" xml:space="preserve">
          <source>BaudRate#b50?</source>
          <target state="translated">BaudRate#b50?</target>
        </trans-unit>
        <trans-unit id="6d7c9f11d63102da04ac90c6eadac614cdddb1a4" translate="yes" xml:space="preserve">
          <source>BaudRate#b600?</source>
          <target state="translated">BaudRate#b600?</target>
        </trans-unit>
        <trans-unit id="616f7cedb61529af38a2fa2438920889d16d3c9a" translate="yes" xml:space="preserve">
          <source>BaudRate#b75?</source>
          <target state="translated">BaudRate#b75?</target>
        </trans-unit>
        <trans-unit id="63a355a61b48f4e3591d106f59d5e1e63f12fa24" translate="yes" xml:space="preserve">
          <source>BaudRate#b9600?</source>
          <target state="translated">BaudRate#b9600?</target>
        </trans-unit>
        <trans-unit id="1dc0ac2ecd092b6f470147f86e773062202f7070" translate="yes" xml:space="preserve">
          <source>Bcrypt</source>
          <target state="translated">Bcrypt</target>
        </trans-unit>
        <trans-unit id="741645e3c64ddf2deebeafbb49af2f2bff3a8aa3" translate="yes" xml:space="preserve">
          <source>Bcrypt#cost</source>
          <target state="translated">Bcrypt#cost</target>
        </trans-unit>
        <trans-unit id="0e7addf388566074bd161e6a6c614d4196795a9f" translate="yes" xml:space="preserve">
          <source>Bcrypt#digest</source>
          <target state="translated">Bcrypt#digest</target>
        </trans-unit>
        <trans-unit id="1e6a5d11b100693fccdeb3bce48ac82591293663" translate="yes" xml:space="preserve">
          <source>Bcrypt#inspect</source>
          <target state="translated">Bcrypt#inspect</target>
        </trans-unit>
        <trans-unit id="fb708adade66bdaf49c672dd8b49062858b4cd65" translate="yes" xml:space="preserve">
          <source>Bcrypt#password</source>
          <target state="translated">Bcrypt#password</target>
        </trans-unit>
        <trans-unit id="0f5ed2597549273a8582090313e2c712e6af86db" translate="yes" xml:space="preserve">
          <source>Bcrypt#salt</source>
          <target state="translated">Bcrypt#salt</target>
        </trans-unit>
        <trans-unit id="81980903ef7ed8d755c4e1e0451484d8e23461c0" translate="yes" xml:space="preserve">
          <source>Bcrypt#to_s</source>
          <target state="translated">Bcrypt#to_s</target>
        </trans-unit>
        <trans-unit id="0eaae7269dde88ef7b96d1de7581718e0c8f4503" translate="yes" xml:space="preserve">
          <source>Bcrypt#to_slice</source>
          <target state="translated">Bcrypt#to_slice</target>
        </trans-unit>
        <trans-unit id="b72fb354c2a3c397b8ed69e4cfc57791b6c36cd7" translate="yes" xml:space="preserve">
          <source>Bcrypt, like the PBKDF2 or scrypt ciphers, are designed to be slow, so generating rainbow tables or cracking passwords is nearly impossible. Yet, computers are always getting faster and faster, so the actual cost must be incremented every once in a while. Always use the maximum cost that is tolerable, performance wise, for your application. Be sure to test and select this based on your server, not your home computer.</source>
          <target state="translated">Bcryptは、PBKDF2やscrypt暗号のように、低速に設計されているので、レインボーテーブルを生成したり、パスワードをクラックしたりすることはほぼ不可能です。とはいえ、コンピュータは常に高速化しているので、実際のコストはたまにインクリメントしなければなりません。常に、アプリケーションのパフォーマンスを考慮して、許容できる最大のコストを使用してください。これは、自宅のコンピュータではなく、サーバーでテストして選択するようにしてください。</target>
        </trans-unit>
        <trans-unit id="b8934490debcafa8fa47af1b53fcd092dcbc16bd" translate="yes" xml:space="preserve">
          <source>Bcrypt.hash_secret</source>
          <target state="translated">Bcrypt.hash_secret</target>
        </trans-unit>
        <trans-unit id="618e8499a99a27b550edbcf73fed4e4ad0ed62cc" translate="yes" xml:space="preserve">
          <source>Bcrypt.new</source>
          <target state="translated">Bcrypt.new</target>
        </trans-unit>
        <trans-unit id="fb3b8e8c48892752f07c78c7bbd6de108a7ab1a2" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password</source>
          <target state="translated">Bcrypt::Password</target>
        </trans-unit>
        <trans-unit id="82714737fa95b08d4c1e1415807d116fc2174375" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#==</source>
          <target state="translated">Bcrypt::Password#==</target>
        </trans-unit>
        <trans-unit id="33cc66f5b6a589ca7f8fd1a4fc09fa6b083bdc0d" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#cost</source>
          <target state="translated">Bcrypt::Password#cost</target>
        </trans-unit>
        <trans-unit id="4da11aeb87d85219aed0b791c5b4bd52a22469e8" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#digest</source>
          <target state="translated">Bcrypt::Password#digest</target>
        </trans-unit>
        <trans-unit id="987257fb4389fc6b90cde966bd0f232b8ea4cab4" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#inspect</source>
          <target state="translated">Bcrypt::Password#inspect</target>
        </trans-unit>
        <trans-unit id="69e23534b36b159277835ef7ada405ac9e82c75e" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#salt</source>
          <target state="translated">Bcrypt::Password#salt</target>
        </trans-unit>
        <trans-unit id="0ec4be09798f482b25786433624821e61f5dad13" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#to_s</source>
          <target state="translated">Bcrypt::Password#to_s</target>
        </trans-unit>
        <trans-unit id="41d1649028890056b4ccdd80ed7d9cd2966fa2de" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#verify</source>
          <target state="translated">Bcrypt::Password#verify</target>
        </trans-unit>
        <trans-unit id="23ef9f9e4d7237474c0a222d8dd15ac35cc87ae7" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password#version</source>
          <target state="translated">Bcrypt::Password#version</target>
        </trans-unit>
        <trans-unit id="818191efa739be50ea22ff52392ba065b6e0b83c" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password.create</source>
          <target state="translated">Bcrypt::Password.create</target>
        </trans-unit>
        <trans-unit id="83f404721ed17a170499ebdef05d6318d21fd1ba" translate="yes" xml:space="preserve">
          <source>Bcrypt::Password.new</source>
          <target state="translated">Bcrypt::Password.new</target>
        </trans-unit>
        <trans-unit id="bfc60b49c35f5c2d2a8a956c2545e88c6457b71e" translate="yes" xml:space="preserve">
          <source>Be able to call C code by writing bindings to it in Crystal.</source>
          <target state="translated">CrystalでC言語のコードにバインディングを書くことで、C言語のコードを呼び出すことができるようになります。</target>
        </trans-unit>
        <trans-unit id="c78216f5e0514574ee7c370588648afd283f0b05" translate="yes" xml:space="preserve">
          <source>Be statically type-checked, but without having to specify the type of variables or method arguments.</source>
          <target state="translated">変数やメソッドの引数の型を指定しなくても、静的に型チェックを行うことができます。</target>
        </trans-unit>
        <trans-unit id="08cd956c043cf088f588507538c30ab592b39880" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is a value type, this method returns &lt;code&gt;self&lt;/code&gt;, which already involves a shallow copy of this object because value types are passed by value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; は値の型であるため、このメソッドは &lt;code&gt;self&lt;/code&gt; を返します。値の型は値によって渡されるため、このメソッドはすでにこのオブジェクトの浅いコピーを含んでいます。</target>
        </trans-unit>
        <trans-unit id="40b5d90db64ddca5fdd90378866d4fa5a36841a8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is a value type, this method returns &lt;code&gt;self&lt;/code&gt;, which already involves a shallow copy of this object because value types are passed by value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; は値の型であるため、このメソッドは &lt;code&gt;self&lt;/code&gt; を返します。値の型は値によって渡されるため、このメソッドはすでにこのオブジェクトの浅いコピーを含んでいます。</target>
        </trans-unit>
        <trans-unit id="81f3218c26bb4a76ff138b655f3f4e120981447b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;pointerof&lt;/code&gt; involves pointers, it is considered &lt;a href=&quot;unsafe&quot;&gt;unsafe&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pointerof&lt;/code&gt; にはポインタが含まれるため、&lt;a href=&quot;unsafe&quot;&gt;安全&lt;/a&gt;ではないと見なされます。</target>
        </trans-unit>
        <trans-unit id="e6fdb2f110109caeeb73b7940d32410813c2b510" translate="yes" xml:space="preserve">
          <source>Because a &lt;a href=&quot;c_bindings/fun&quot;&gt;lib function&lt;/a&gt; must have explicit types, the compiler can use the &lt;code&gt;out&lt;/code&gt; argument's type, which should be a pointer type, and use the dereferenced type as a guess.</source>
          <target state="translated">&lt;a href=&quot;c_bindings/fun&quot;&gt;lib関数に&lt;/a&gt;は明示的な型が必要であるため、コンパイラーはポインター型であるはずの &lt;code&gt;out&lt;/code&gt; 引数の型を使用し、逆参照型を推測として使用できます。</target>
        </trans-unit>
        <trans-unit id="04e424258d866cea3f4f84a83041934bd45ff52f" translate="yes" xml:space="preserve">
          <source>Because a &lt;a href=&quot;c_bindings/fun&quot;&gt;lib function&lt;/a&gt; must have explicit types, the compiler can use the return type when assigning it to an instance variable.</source>
          <target state="translated">&lt;a href=&quot;c_bindings/fun&quot;&gt;lib関数に&lt;/a&gt;は明示的な型が必要であるため、コンパイラーはインスタンス変数に割り当てるときに戻り型を使用できます。</target>
        </trans-unit>
        <trans-unit id="e04e9bc23f8fc762f424676f71d24bb5578e157a" translate="yes" xml:space="preserve">
          <source>Because a non-captured block is always inlined, the above method invocation is &lt;strong&gt;exactly the same&lt;/strong&gt; as writing this:</source>
          <target state="translated">キャプチャされていないブロックは常にインライン化されるため、上記のメソッド呼び出しはこれを書くのと&lt;strong&gt;まったく同じ&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="2bc523746212c713c54dbf2f930f58b6494bf529" translate="yes" xml:space="preserve">
          <source>Because arguments (without a default value) after the splat method argument must be passed by name, two methods with different required named arguments overload:</source>
          <target state="translated">splat メソッドの引数の後の引数 (デフォルト値なし)は名前で渡さなければならないので、必要とされる名前付き引数が異なる 2 つのメソッドはオーバーロードします。</target>
        </trans-unit>
        <trans-unit id="aad76c021209d184f66249e56317940ef5c0b84f" translate="yes" xml:space="preserve">
          <source>Because at this moment there's only a single thread executing your code, accessing and modifying a class variable in different fibers will work just fine. However, once multiple threads (parallelism) is introduced in the language, it might break. That's why the recommended mechanism to communicate data is using channels and sending messages between them. Internally, a channel implements all the locking mechanisms to avoid data races, but from the outside you use them as communication primitives, so you (the user) don't have to use locks.</source>
          <target state="translated">現時点では、あなたのコードを実行しているのは1つのスレッドだけなので、異なるファイバーでクラス変数にアクセスしたり変更したりしても問題なく動作します。しかし、言語に複数スレッド(並列性)が導入されると途端に壊れてしまうかもしれません。そのため、データを通信するために推奨される仕組みは、チャンネルを使用して、チャンネル間でメッセージを送信することです。内部的には、チャネルはデータの競合を避けるためにすべてのロック機構を実装していますが、外部からは通信プリミティブとして使用するので、あなた(ユーザ)はロックを使用する必要がありません。</target>
        </trans-unit>
        <trans-unit id="f4ac9c288fe9812655b9f8954b09eb3833284a6d" translate="yes" xml:space="preserve">
          <source>Because iterators only go forward, when using methods that consume it entirely or partially &amp;ndash; &lt;code&gt;to_a&lt;/code&gt;, &lt;code&gt;any?&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;none?&lt;/code&gt;, &lt;code&gt;one?&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; &amp;ndash; subsequent calls will give a different result as there will be less elements to consume.</source>
          <target state="translated">イテレータは前進するだけなので、それを完全にまたは部分的に消費するメソッドを使用する場合、 &lt;code&gt;to_a&lt;/code&gt; などはあり &lt;code&gt;any?&lt;/code&gt; 、 &lt;code&gt;count&lt;/code&gt; 、 &lt;code&gt;none?&lt;/code&gt; 、 &lt;code&gt;one?&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; &amp;ndash;使用する要素が少なくなるため、以降の呼び出しでは異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="8aa002d25e89dd1cebdbdaf68bcafd51dc2b9092" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;if&lt;/code&gt; above (well, technically a ternary operator, but it's similar to an &lt;code&gt;if&lt;/code&gt;) has integer literals, &lt;code&gt;@age&lt;/code&gt; is successfully inferred to be &lt;code&gt;Int32&lt;/code&gt; without requiring a redundant type restriction.</source>
          <target state="translated">上記の &lt;code&gt;if&lt;/code&gt; （まあ、 &lt;code&gt;@age&lt;/code&gt; は3項演算子ですが、 &lt;code&gt;if&lt;/code&gt; に似ています）には整数リテラルがあるため、冗長な型制限を必要とせずに@ageが &lt;code&gt;Int32&lt;/code&gt; であると推測されます。</target>
        </trans-unit>
        <trans-unit id="7ebe6163e922a5e9bce5147d1c58f3b9d11bdea9" translate="yes" xml:space="preserve">
          <source>Before talking about control expressions we need to know what &lt;em&gt;truthy&lt;/em&gt; and &lt;em&gt;falsey&lt;/em&gt; values are.</source>
          <target state="translated">制御式について話す前に、&lt;em&gt;真&lt;/em&gt;と&lt;em&gt;偽の&lt;/em&gt;値が何であるかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="42be5304287d63674490b7c3b804842de63fc2f5" translate="yes" xml:space="preserve">
          <source>Begin by using &lt;a href=&quot;../using_the_compiler/index&quot;&gt;the Crystal compiler&lt;/a&gt;'s &lt;code&gt;init lib&lt;/code&gt; command to create a Crystal library with the standard directory structure.</source>
          <target state="translated">使用することから始め&lt;a href=&quot;../using_the_compiler/index&quot;&gt;クリスタルコンパイラ&lt;/a&gt;の &lt;code&gt;init lib&lt;/code&gt; 標準のディレクトリ構造を持つクリスタルライブラリを作成するコマンドを。</target>
        </trans-unit>
        <trans-unit id="9ed99e75a9b04f273de29c9fef2bd3fb53d2e2de" translate="yes" xml:space="preserve">
          <source>Benchmark</source>
          <target state="translated">Benchmark</target>
        </trans-unit>
        <trans-unit id="a321fae7b018910d0189d321faf838b4fa6d8fac" translate="yes" xml:space="preserve">
          <source>Benchmark IPS calculates the number of iterations per second for a given block of code. The strategy is to use two stages: a warmup stage and a calculation stage.</source>
          <target state="translated">Benchmark IPSは、与えられたコードブロックの1秒あたりの反復回数を計算します。ウォームアップステージと計算ステージの2つのステージを使用する戦略です。</target>
        </trans-unit>
        <trans-unit id="8364d9a5c108b61b125f1a6dcb27cc5d8ef5886f" translate="yes" xml:space="preserve">
          <source>Benchmark#bm</source>
          <target state="translated">Benchmark#bm</target>
        </trans-unit>
        <trans-unit id="9a476bff203c1e45b59b4127b29616f47da023dd" translate="yes" xml:space="preserve">
          <source>Benchmark#ips</source>
          <target state="translated">Benchmark#ips</target>
        </trans-unit>
        <trans-unit id="07efec7d3b4fab53d630bb92e0853fd078987c4e" translate="yes" xml:space="preserve">
          <source>Benchmark::BM</source>
          <target state="translated">Benchmark::BM</target>
        </trans-unit>
        <trans-unit id="848a1049e213183aaf6c747234a2270bdb737275" translate="yes" xml:space="preserve">
          <source>Benchmark::BM::Job</source>
          <target state="translated">Benchmark::BM::Job</target>
        </trans-unit>
        <trans-unit id="218f487ca1e693b53de901b987fce59217a4f95a" translate="yes" xml:space="preserve">
          <source>Benchmark::BM::Tms</source>
          <target state="translated">Benchmark::BM::Tms</target>
        </trans-unit>
        <trans-unit id="eb79f3851dbd81594192efdf097da561769ae8c6" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS</source>
          <target state="translated">Benchmark::IPS</target>
        </trans-unit>
        <trans-unit id="e34803b1805b294a600840aa3bff408ae2b4ad53" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS::Entry</source>
          <target state="translated">Benchmark::IPS::Entry</target>
        </trans-unit>
        <trans-unit id="2c92977c90cbf9cebb6c4e16084c1e3c9c672228" translate="yes" xml:space="preserve">
          <source>Benchmark::IPS::Job</source>
          <target state="translated">Benchmark::IPS::Job</target>
        </trans-unit>
        <trans-unit id="8cbf01713b700bc330bea64a882af1f0da7490ef" translate="yes" xml:space="preserve">
          <source>Besides double-quotes strings, Crystal also supports string literals indicated by a percent sign (&lt;code&gt;%&lt;/code&gt;) and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested meaning a start delimiter inside the string escapes the next end delimiter.</source>
          <target state="translated">文字列の二重引用符に加えて、Crystalはパーセント記号（ &lt;code&gt;%&lt;/code&gt; ）と2つの区切り文字で示される文字列リテラルもサポートしています。有効な区切り文字は、括弧 &lt;code&gt;()&lt;/code&gt; 、大括弧 &lt;code&gt;[]&lt;/code&gt; 、中括弧 &lt;code&gt;{}&lt;/code&gt; 、角度 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; およびパイプ &lt;code&gt;||&lt;/code&gt; です。。パイプを除いて、すべての区切り文字をネストできます。つまり、文字列内の開始区切り文字は次の終了区切り文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="ecaa8ecbaa06b622a1bf13768dd48ee20a156deb" translate="yes" xml:space="preserve">
          <source>Besides slash-delimited literals, regular expressions may also be expressed as a percent literal indicated by &lt;code&gt;%r&lt;/code&gt; and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested; meaning a start delimiter inside the literal escapes the next end delimiter.</source>
          <target state="translated">スラッシュで区切られたリテラルに加えて、正規表現は、 &lt;code&gt;%r&lt;/code&gt; で示されたパーセントリテラルと区切り文字のペアとして表すこともできます。有効な区切り文字は、括弧 &lt;code&gt;()&lt;/code&gt; 、大括弧 &lt;code&gt;[]&lt;/code&gt; 、中括弧 &lt;code&gt;{}&lt;/code&gt; 、角度 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; およびパイプ &lt;code&gt;||&lt;/code&gt; です。。パイプを除いて、すべての区切り文字はネストできます。リテラル内の開始区切り文字が次の終了区切り文字をエスケープすることを意味します。</target>
        </trans-unit>
        <trans-unit id="d904ebd65175b557d7a553ff09bf552643ce07ed" translate="yes" xml:space="preserve">
          <source>Besides the single string literal, there is also a percent literal to create an &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; of strings. It is indicated by &lt;code&gt;%w&lt;/code&gt; and a pair of delimiters. Valid delimiters are as same as &lt;a href=&quot;#percent-string-literals&quot;&gt;percent string literals&lt;/a&gt;.</source>
          <target state="translated">単一の文字列リテラルの他に、文字列の&lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;配列&lt;/a&gt;を作成するためのパーセントリテラルもあります。 &lt;code&gt;%w&lt;/code&gt; と1組の区切り文字で示されます。有効な区切り文字は&lt;a href=&quot;#percent-string-literals&quot;&gt;パーセント文字列リテラル&lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="ab1e0b5748b92516123bbc78f5976a2129271982" translate="yes" xml:space="preserve">
          <source>Besides the single symbol literal, there is also a percent literal to create an &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;Array&lt;/a&gt; of symbols. It is indicated by &lt;code&gt;%i&lt;/code&gt; and a pair of delimiters. Valid delimiters are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested; meaning a start delimiter inside the string escapes the next end delimiter.</source>
          <target state="translated">単一のシンボルリテラルの他に、シンボルの&lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;配列&lt;/a&gt;を作成するためのパーセントリテラルもあります。 &lt;code&gt;%i&lt;/code&gt; と2つの区切り文字で示されます。有効な区切り文字は、括弧 &lt;code&gt;()&lt;/code&gt; 、大括弧 &lt;code&gt;[]&lt;/code&gt; 、中括弧 &lt;code&gt;{}&lt;/code&gt; 、角度 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; およびパイプ &lt;code&gt;||&lt;/code&gt; です。。パイプを除いて、すべての区切り文字はネストできます。文字列内の開始区切り文字が次の終了区切り文字をエスケープすることを意味します。</target>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="6aa15d7a5a3f72caa6de1eb6147b849df0ee1529" translate="yes" xml:space="preserve">
          <source>BigDecimal#*</source>
          <target state="translated">BigDecimal#*</target>
        </trans-unit>
        <trans-unit id="e088c01a9a4d359dda6d869713792182c1ce82ac" translate="yes" xml:space="preserve">
          <source>BigDecimal#**</source>
          <target state="translated">BigDecimal#**</target>
        </trans-unit>
        <trans-unit id="fc2afbd6280721e4fdf432d34e31d33bd74762f6" translate="yes" xml:space="preserve">
          <source>BigDecimal#+</source>
          <target state="translated">BigDecimal#+</target>
        </trans-unit>
        <trans-unit id="a3ea42f99e67cb878af84a2fe427262134f2fe48" translate="yes" xml:space="preserve">
          <source>BigDecimal#-</source>
          <target state="translated">BigDecimal#-</target>
        </trans-unit>
        <trans-unit id="19436b733f68543ea9ce9cdda14d7d82ce395238" translate="yes" xml:space="preserve">
          <source>BigDecimal#/</source>
          <target state="translated">BigDecimal#/</target>
        </trans-unit>
        <trans-unit id="4198b8846475985140031b6094919e3bbd67b88f" translate="yes" xml:space="preserve">
          <source>BigDecimal#==</source>
          <target state="translated">BigDecimal#==</target>
        </trans-unit>
        <trans-unit id="aaca63f77a35ed2925b5b00132007d8ba6624638" translate="yes" xml:space="preserve">
          <source>BigDecimal#ceil</source>
          <target state="translated">BigDecimal#ceil</target>
        </trans-unit>
        <trans-unit id="679748685b0a0da08d7f34f3c6276d355e988c53" translate="yes" xml:space="preserve">
          <source>BigDecimal#div</source>
          <target state="translated">BigDecimal#div</target>
        </trans-unit>
        <trans-unit id="b6d4d9614aa3366eb1755e0e9201bfef378c15a8" translate="yes" xml:space="preserve">
          <source>BigDecimal#hash</source>
          <target state="translated">BigDecimal#hash</target>
        </trans-unit>
        <trans-unit id="5756178e61ccc555b83afd3314a42bd4bf7d025c" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_f</source>
          <target state="translated">BigDecimal#to_f</target>
        </trans-unit>
        <trans-unit id="66de9ba6a1c68e36a9605f92589970d29c8a4a79" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_i</source>
          <target state="translated">BigDecimal#to_i</target>
        </trans-unit>
        <trans-unit id="537f53aae931225e4ca0948f4c913c01271a48a1" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_s</source>
          <target state="translated">BigDecimal#to_s</target>
        </trans-unit>
        <trans-unit id="97686113969ba8c93ff542eb3ce99acf92bcd3cf" translate="yes" xml:space="preserve">
          <source>BigDecimal#to_u</source>
          <target state="translated">BigDecimal#to_u</target>
        </trans-unit>
        <trans-unit id="14b577dfd5b5cfe02eae9f5e1df21c2a9078df2a" translate="yes" xml:space="preserve">
          <source>BigDecimal.new</source>
          <target state="translated">BigDecimal.new</target>
        </trans-unit>
        <trans-unit id="7c2689d3a02fe5d98837abdadf145389a443a460" translate="yes" xml:space="preserve">
          <source>BigFloat</source>
          <target state="translated">BigFloat</target>
        </trans-unit>
        <trans-unit id="33cbe28f969091ad1f5a6d299dd9725e1ef472fe" translate="yes" xml:space="preserve">
          <source>BigFloat#*</source>
          <target state="translated">BigFloat#*</target>
        </trans-unit>
        <trans-unit id="9db61e69472e348434207877a76b0a96e15d90a7" translate="yes" xml:space="preserve">
          <source>BigFloat#**</source>
          <target state="translated">BigFloat#**</target>
        </trans-unit>
        <trans-unit id="0890908f9fc64814a4d6df3cd47828100c80d2ab" translate="yes" xml:space="preserve">
          <source>BigFloat#+</source>
          <target state="translated">BigFloat#+</target>
        </trans-unit>
        <trans-unit id="21bbc8aa89a8ed308647296c81c4886c3656822f" translate="yes" xml:space="preserve">
          <source>BigFloat#-</source>
          <target state="translated">BigFloat#-</target>
        </trans-unit>
        <trans-unit id="a17216103fc71d6036d2ebfa0904efdbf2965e98" translate="yes" xml:space="preserve">
          <source>BigFloat#/</source>
          <target state="translated">BigFloat#/</target>
        </trans-unit>
        <trans-unit id="e1bf95fe87b381bd14196173e277c385c03d0240" translate="yes" xml:space="preserve">
          <source>BigFloat#abs</source>
          <target state="translated">BigFloat#abs</target>
        </trans-unit>
        <trans-unit id="ed3ac0b26098c05b56313319f0dcd48233f8ee01" translate="yes" xml:space="preserve">
          <source>BigFloat#ceil</source>
          <target state="translated">BigFloat#ceil</target>
        </trans-unit>
        <trans-unit id="94c3fd31bb7fdc52ee3e4202aa4e19bcc0fa9107" translate="yes" xml:space="preserve">
          <source>BigFloat#hash</source>
          <target state="translated">BigFloat#hash</target>
        </trans-unit>
        <trans-unit id="66d93f8767b2e841803d4a49d8d3bf740706f0f9" translate="yes" xml:space="preserve">
          <source>BigFloat#to_f</source>
          <target state="translated">BigFloat#to_f</target>
        </trans-unit>
        <trans-unit id="97d7e210f29cc31d2bd2cece6eb5038277f4343d" translate="yes" xml:space="preserve">
          <source>BigFloat#to_i</source>
          <target state="translated">BigFloat#to_i</target>
        </trans-unit>
        <trans-unit id="df422aeb18ac3b5c62119fc498923efd374b4052" translate="yes" xml:space="preserve">
          <source>BigFloat#to_s</source>
          <target state="translated">BigFloat#to_s</target>
        </trans-unit>
        <trans-unit id="9a46a211f89cccc796695d73e962d01b9de90052" translate="yes" xml:space="preserve">
          <source>BigFloat#to_u</source>
          <target state="translated">BigFloat#to_u</target>
        </trans-unit>
        <trans-unit id="8e4b6919ce1fc0000e7df339830c0bb979d87dbe" translate="yes" xml:space="preserve">
          <source>BigFloat.new</source>
          <target state="translated">BigFloat.new</target>
        </trans-unit>
        <trans-unit id="948f70e8d9053f46439ba57d043632fa6e5a5de4" translate="yes" xml:space="preserve">
          <source>BigInt</source>
          <target state="translated">BigInt</target>
        </trans-unit>
        <trans-unit id="4997866855c2231441e044630bd6ad8f74bf3717" translate="yes" xml:space="preserve">
          <source>BigInt#%</source>
          <target state="translated">BigInt#%</target>
        </trans-unit>
        <trans-unit id="028c9dcc64e5bd9c38cb268c2a364ef668ccdf19" translate="yes" xml:space="preserve">
          <source>BigInt#*</source>
          <target state="translated">BigInt#*</target>
        </trans-unit>
        <trans-unit id="f8478d045fe0c71939c7c40770964fa56c03f64f" translate="yes" xml:space="preserve">
          <source>BigInt#**</source>
          <target state="translated">BigInt#**</target>
        </trans-unit>
        <trans-unit id="1c4ec8c349472044f1e44edaa98045f7541afc93" translate="yes" xml:space="preserve">
          <source>BigInt#+</source>
          <target state="translated">BigInt#+</target>
        </trans-unit>
        <trans-unit id="350dc006dfa4db75f715e63e956e56e6d96b5d24" translate="yes" xml:space="preserve">
          <source>BigInt#-</source>
          <target state="translated">BigInt#-</target>
        </trans-unit>
        <trans-unit id="7d30b9f477ed47e9cfc7cd91cc7b3544fceaa39b" translate="yes" xml:space="preserve">
          <source>BigInt#/</source>
          <target state="translated">BigInt#/</target>
        </trans-unit>
        <trans-unit id="3a821d346b370116a003897497d82ba0865de28a" translate="yes" xml:space="preserve">
          <source>BigInt#//</source>
          <target state="translated">BigInt#//</target>
        </trans-unit>
        <trans-unit id="7e3424d271fe4ab92420dc2926651df4713be9b7" translate="yes" xml:space="preserve">
          <source>BigInt#^</source>
          <target state="translated">BigInt#^</target>
        </trans-unit>
        <trans-unit id="c098edbeccced2aa88ee89185065c2f2c8f947b2" translate="yes" xml:space="preserve">
          <source>BigInt#abs</source>
          <target state="translated">BigInt#abs</target>
        </trans-unit>
        <trans-unit id="8f9c8fc43f45b4cfa03ff47a685ce1bf99b0fdf4" translate="yes" xml:space="preserve">
          <source>BigInt#gcd</source>
          <target state="translated">BigInt#gcd</target>
        </trans-unit>
        <trans-unit id="45e1b1d7eafaea3cac02f24506e8a351b5004184" translate="yes" xml:space="preserve">
          <source>BigInt#hash</source>
          <target state="translated">BigInt#hash</target>
        </trans-unit>
        <trans-unit id="149eefd5dfad37ac717b8475a871098d6a6ae5fc" translate="yes" xml:space="preserve">
          <source>BigInt#lcm</source>
          <target state="translated">BigInt#lcm</target>
        </trans-unit>
        <trans-unit id="3f8863cf1e4d1af82b8b3fb8cb187c322000c5aa" translate="yes" xml:space="preserve">
          <source>BigInt#tdiv</source>
          <target state="translated">BigInt#tdiv</target>
        </trans-unit>
        <trans-unit id="1d38da3f30ff58e76e4931e5d5a74af28d7363fb" translate="yes" xml:space="preserve">
          <source>BigInt#to_f</source>
          <target state="translated">BigInt#to_f</target>
        </trans-unit>
        <trans-unit id="9cca341fe8b94e44d8395c3482bb274f79cb71a1" translate="yes" xml:space="preserve">
          <source>BigInt#to_i</source>
          <target state="translated">BigInt#to_i</target>
        </trans-unit>
        <trans-unit id="f58902c6c9236fd65ade8cddce07a472dc67576a" translate="yes" xml:space="preserve">
          <source>BigInt#to_s</source>
          <target state="translated">BigInt#to_s</target>
        </trans-unit>
        <trans-unit id="ca631d1d3f4eee76de25426320ca690eb3d9b582" translate="yes" xml:space="preserve">
          <source>BigInt#to_u</source>
          <target state="translated">BigInt#to_u</target>
        </trans-unit>
        <trans-unit id="fbfcdbe2651ca5eb7c118d8e4c66887b5a7ad8a9" translate="yes" xml:space="preserve">
          <source>BigInt#|</source>
          <target state="translated">BigInt#|</target>
        </trans-unit>
        <trans-unit id="b1d2ce1c4f596b54c49ad49ad8f5078b9cd72ead" translate="yes" xml:space="preserve">
          <source>BigInt#~</source>
          <target state="translated">BigInt#~</target>
        </trans-unit>
        <trans-unit id="857982da0ae886ec694385257c63e06d42776df4" translate="yes" xml:space="preserve">
          <source>BigInt.new</source>
          <target state="translated">BigInt.new</target>
        </trans-unit>
        <trans-unit id="b9fa17bc2fa9726a9ea6089f9d1c1179dc4917e2" translate="yes" xml:space="preserve">
          <source>BigRational</source>
          <target state="translated">BigRational</target>
        </trans-unit>
        <trans-unit id="748e3248bbab90a16209aa31f511df332a9fa25f" translate="yes" xml:space="preserve">
          <source>BigRational#*</source>
          <target state="translated">BigRational#*</target>
        </trans-unit>
        <trans-unit id="6d2756928f401cf5f4c997aee3633cde2680beac" translate="yes" xml:space="preserve">
          <source>BigRational#**</source>
          <target state="translated">BigRational#**</target>
        </trans-unit>
        <trans-unit id="139f57bf88723ec53207ffd0c7bd75c02ff0cf6c" translate="yes" xml:space="preserve">
          <source>BigRational#+</source>
          <target state="translated">BigRational#+</target>
        </trans-unit>
        <trans-unit id="d2a9cc28eb367a948bd63165b4fae245e43b7ac9" translate="yes" xml:space="preserve">
          <source>BigRational#-</source>
          <target state="translated">BigRational#-</target>
        </trans-unit>
        <trans-unit id="f255a7623e9c79c8cedc2e288fb3fe77bb844942" translate="yes" xml:space="preserve">
          <source>BigRational#/</source>
          <target state="translated">BigRational#/</target>
        </trans-unit>
        <trans-unit id="6fcecd68f43b36b22cf8866b34b8ac16f1709225" translate="yes" xml:space="preserve">
          <source>BigRational#abs</source>
          <target state="translated">BigRational#abs</target>
        </trans-unit>
        <trans-unit id="23238c434e153438f500e8766f5d4533b1f5efd2" translate="yes" xml:space="preserve">
          <source>BigRational#ceil</source>
          <target state="translated">BigRational#ceil</target>
        </trans-unit>
        <trans-unit id="c80f27fbf901958881d583ca93bb8c371c1f1fa4" translate="yes" xml:space="preserve">
          <source>BigRational#hash</source>
          <target state="translated">BigRational#hash</target>
        </trans-unit>
        <trans-unit id="ff708f6d56dab0edb836f616754b6d9c9061ab4b" translate="yes" xml:space="preserve">
          <source>BigRational#inv</source>
          <target state="translated">BigRational#inv</target>
        </trans-unit>
        <trans-unit id="67167595ad36f1cce73afe7d8d21de6b9c3d3c7f" translate="yes" xml:space="preserve">
          <source>BigRational#to_f</source>
          <target state="translated">BigRational#to_f</target>
        </trans-unit>
        <trans-unit id="f3505700123e651fea2a5b9538bda6684eff715d" translate="yes" xml:space="preserve">
          <source>BigRational#to_s</source>
          <target state="translated">BigRational#to_s</target>
        </trans-unit>
        <trans-unit id="ec8acbbbeae70d840fe235642998f12c81ee0a16" translate="yes" xml:space="preserve">
          <source>BigRational.new</source>
          <target state="translated">BigRational.new</target>
        </trans-unit>
        <trans-unit id="7b8367420664536bae9ad44d112f4ef538e2e1cf" translate="yes" xml:space="preserve">
          <source>Binary number conversion</source>
          <target state="translated">2進数変換</target>
        </trans-unit>
        <trans-unit id="c51558028b3c61383657bab2e6089a459a02e586" translate="yes" xml:space="preserve">
          <source>Binary numbers start with &lt;code&gt;0b&lt;/code&gt;:</source>
          <target state="translated">2進数は &lt;code&gt;0b&lt;/code&gt; で始まります。</target>
        </trans-unit>
        <trans-unit id="bb96cbd05d1971e3d28050245a8829dd6b6aafd2" translate="yes" xml:space="preserve">
          <source>Binary operators</source>
          <target state="translated">バイナリ演算子</target>
        </trans-unit>
        <trans-unit id="e3bcfb0ed20ef9b26a0c347daf7b05d2a65fb10c" translate="yes" xml:space="preserve">
          <source>Binary search needs sorted array, so &lt;code&gt;self&lt;/code&gt; has to be sorted.</source>
          <target state="translated">二分探索はソートされた配列を必要とするので、 &lt;code&gt;self&lt;/code&gt; ソートする必要があります。</target>
        </trans-unit>
        <trans-unit id="07fe684cc7f874e1e3e562ca4c15131e7f5ff9bd" translate="yes" xml:space="preserve">
          <source>BinaryPrefixFormat</source>
          <target state="translated">BinaryPrefixFormat</target>
        </trans-unit>
        <trans-unit id="b9c02a0f51cc7cd15a62182ffb0438a0b4b4fde7" translate="yes" xml:space="preserve">
          <source>BinaryPrefixFormat#iec?</source>
          <target state="translated">BinaryPrefixFormat#iec?</target>
        </trans-unit>
        <trans-unit id="e85a5f76b077c6d2f73b6af85c86be99989dc6a0" translate="yes" xml:space="preserve">
          <source>BinaryPrefixFormat#jedec?</source>
          <target state="translated">BinaryPrefixFormat#jedec?</target>
        </trans-unit>
        <trans-unit id="c40b11b34c08d1c4cba5dd8fe56b67500870b693" translate="yes" xml:space="preserve">
          <source>Binding to sockets</source>
          <target state="translated">ソケットへのバインド</target>
        </trans-unit>
        <trans-unit id="fc4843f8fff5af11a413c5db7673f554cdf89606" translate="yes" xml:space="preserve">
          <source>Binds a socket to the &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt; combination.</source>
          <target state="translated">ソケットを&lt;em&gt;ホスト&lt;/em&gt;と&lt;em&gt;ポートの&lt;/em&gt;組み合わせにバインドします。</target>
        </trans-unit>
        <trans-unit id="581329f8e9e6624e54bcbba556abb168fd10d8bd" translate="yes" xml:space="preserve">
          <source>Binds the OpenSSL MD5 hash functions.</source>
          <target state="translated">OpenSSL の MD5 ハッシュ関数をバインドします。</target>
        </trans-unit>
        <trans-unit id="e861e73219fe632f43feb5b95ade2443bf5ec4bb" translate="yes" xml:space="preserve">
          <source>Binds the OpenSSL SHA1 hash functions.</source>
          <target state="translated">OpenSSL SHA1 ハッシュ関数をバインドします。</target>
        </trans-unit>
        <trans-unit id="b74fac0fe4a203f1a06712fc4d79130c1a7f22b8" translate="yes" xml:space="preserve">
          <source>Binds the socket on &lt;em&gt;port&lt;/em&gt; to all local interfaces.</source>
          <target state="translated">&lt;em&gt;ポート&lt;/em&gt;上のソケットをすべてのローカルインターフェイスにバインドします。</target>
        </trans-unit>
        <trans-unit id="3673d3a19e58f7c7db70887801bcee601fef3d80" translate="yes" xml:space="preserve">
          <source>Binds the socket to a local address.</source>
          <target state="translated">ソケットをローカルアドレスにバインドします。</target>
        </trans-unit>
        <trans-unit id="93ea79c838264d2a1d87b4b0c60302c8a973255c" translate="yes" xml:space="preserve">
          <source>BitArray</source>
          <target state="translated">BitArray</target>
        </trans-unit>
        <trans-unit id="d19477c414cffb9474378ce662c51d24c832933c" translate="yes" xml:space="preserve">
          <source>BitArray is an array data structure that compactly stores bits.</source>
          <target state="translated">BitArrayは、ビットをコンパクトに格納した配列データ構造体です。</target>
        </trans-unit>
        <trans-unit id="c1df9aa128f90be57a66751d8b9a3bd403773e00" translate="yes" xml:space="preserve">
          <source>BitArray#==</source>
          <target state="translated">BitArray#==</target>
        </trans-unit>
        <trans-unit id="5d85b27858ca76cffd3cc783dba4ac3592af02ac" translate="yes" xml:space="preserve">
          <source>BitArray#[]</source>
          <target state="translated">BitArray#[]</target>
        </trans-unit>
        <trans-unit id="f3cc9899f7989034de4a785fca551a57474bb8d6" translate="yes" xml:space="preserve">
          <source>BitArray#[]=</source>
          <target state="translated">BitArray#[]=</target>
        </trans-unit>
        <trans-unit id="422a004d093dffb7b43696a112cf6153cc79aaac" translate="yes" xml:space="preserve">
          <source>BitArray#hash</source>
          <target state="translated">BitArray#hash</target>
        </trans-unit>
        <trans-unit id="c56352ca04a997ac75da738161518da99706871a" translate="yes" xml:space="preserve">
          <source>BitArray#size</source>
          <target state="translated">BitArray#size</target>
        </trans-unit>
        <trans-unit id="eab3a2f4d412b67de4b34cc47d0fcc639c12f6cc" translate="yes" xml:space="preserve">
          <source>BitArray#to_s</source>
          <target state="translated">BitArray#to_s</target>
        </trans-unit>
        <trans-unit id="e31feb45bcb0e2d8f4edee4633971b1b5b8c1b6c" translate="yes" xml:space="preserve">
          <source>BitArray.new</source>
          <target state="translated">BitArray.new</target>
        </trans-unit>
        <trans-unit id="62790c27ccf112f27f75eadc33447da98132dd95" translate="yes" xml:space="preserve">
          <source>Bits externally represented as &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;s are stored internally as &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt;s. The total number of bits stored is set at creation and is immutable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; として外部的に表現されたビットは、 &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt; として内部的に格納されます。格納されるビットの総数は作成時に設定され、不変です。</target>
        </trans-unit>
        <trans-unit id="ffba6db82603dad8914301fabc35b8806c66bd9d" translate="yes" xml:space="preserve">
          <source>Bitwise AND.</source>
          <target state="translated">ビットごとのAND。</target>
        </trans-unit>
        <trans-unit id="64b6bb80c2531d89add92e215ebee07abd30ad56" translate="yes" xml:space="preserve">
          <source>Bitwise AND. Returns &lt;code&gt;true&lt;/code&gt; if this bool and &lt;em&gt;other&lt;/em&gt; are &lt;code&gt;true&lt;/code&gt;, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ビットごとのAND。戻り値 &lt;code&gt;true&lt;/code&gt; このブール値とあれば&lt;em&gt;、他のは&lt;/em&gt;ある &lt;code&gt;true&lt;/code&gt; 、そうでない場合は返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6cce76615b422f50d91d4d2e6ab10761c70e02d" translate="yes" xml:space="preserve">
          <source>Bitwise OR.</source>
          <target state="translated">ビットごとのOR。</target>
        </trans-unit>
        <trans-unit id="44372855737f430b061ea60bce585c88c48902b7" translate="yes" xml:space="preserve">
          <source>Bitwise OR. Returns &lt;code&gt;true&lt;/code&gt; if this bool or &lt;em&gt;other&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ビットごとのOR。戻り値 &lt;code&gt;true&lt;/code&gt; このブール値またはあれば&lt;em&gt;他は&lt;/em&gt;ある &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfbe395b6ff593ced03bac36c099d59799a6252c" translate="yes" xml:space="preserve">
          <source>Block device required</source>
          <target state="translated">ブロック装置が必要</target>
        </trans-unit>
        <trans-unit id="749f9871229c842ef058d498f60feedf1b0cd27b" translate="yes" xml:space="preserve">
          <source>Block forwarding</source>
          <target state="translated">ブロック転送</target>
        </trans-unit>
        <trans-unit id="f774137e71a6e33c293fae8fbda19f7ba28745a4" translate="yes" xml:space="preserve">
          <source>Blocks and Procs</source>
          <target state="translated">ブロックとプロック</target>
        </trans-unit>
        <trans-unit id="acdb9e33cd9ab287828b4d16780b9e56aee80f80" translate="yes" xml:space="preserve">
          <source>Blocks the current Fiber for the specified time span.</source>
          <target state="translated">指定された時間の間、現在のファイバーをブロックします。</target>
        </trans-unit>
        <trans-unit id="d33acd8c1c7537246cb1d845ee003dd5f9819530" translate="yes" xml:space="preserve">
          <source>Blocks the current fiber for the specified number of seconds.</source>
          <target state="translated">指定された秒数の間、現在のファイバーをブロックします。</target>
        </trans-unit>
        <trans-unit id="b1b03da0b911881b5110c6b6b34fffb19b8e12eb" translate="yes" xml:space="preserve">
          <source>Blocks the current fiber forever.</source>
          <target state="translated">現在のファイバーを永遠にブロックします。</target>
        </trans-unit>
        <trans-unit id="a6a6cc1c6c34e00f61be8a8c251a0e48237ab0a0" translate="yes" xml:space="preserve">
          <source>Blowfish</source>
          <target state="translated">Blowfish</target>
        </trans-unit>
        <trans-unit id="5e40336731a1090fcaa509fef68edb08b72c0c6f" translate="yes" xml:space="preserve">
          <source>Blowfish#decrypt_pair</source>
          <target state="translated">Blowfish#decrypt_pair</target>
        </trans-unit>
        <trans-unit id="b0c68eb22ed1133e8a85de918d2a468618248e03" translate="yes" xml:space="preserve">
          <source>Blowfish#encrypt_pair</source>
          <target state="translated">Blowfish#encrypt_pair</target>
        </trans-unit>
        <trans-unit id="9114563585f203f52d614fd37be3fd80e8464419" translate="yes" xml:space="preserve">
          <source>Blowfish#expand_key</source>
          <target state="translated">Blowfish#expand_key</target>
        </trans-unit>
        <trans-unit id="fe0ba8f494cde774b370f66849cd74944c794b46" translate="yes" xml:space="preserve">
          <source>Blowfish.new</source>
          <target state="translated">Blowfish.new</target>
        </trans-unit>
        <trans-unit id="f69f233005f15802770fd26fbf7ead52ec13d9e6" translate="yes" xml:space="preserve">
          <source>Book</source>
          <target state="translated">Book</target>
        </trans-unit>
        <trans-unit id="2633c4be9b2eb05fe95cee951bd21aa402ecd557" translate="yes" xml:space="preserve">
          <source>Book: Language</source>
          <target state="translated">本。言語</target>
        </trans-unit>
        <trans-unit id="daf760a167a8047cee872015a8e80002f3b67442" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="translated">Bool</target>
        </trans-unit>
        <trans-unit id="673e10e9132dd81221e727468470ce6c242da1e2" translate="yes" xml:space="preserve">
          <source>Bool has only two possible values: &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. They are constructed using these literals:</source>
          <target state="translated">Boolには、 &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; の 2つの値しかありません。これらは次のリテラルを使用して構築されます。</target>
        </trans-unit>
        <trans-unit id="6f68690883f9d332f7462ade36a69aea4d5d96fe" translate="yes" xml:space="preserve">
          <source>Bool#!=</source>
          <target state="translated">Bool#!=</target>
        </trans-unit>
        <trans-unit id="58c2cb3a18f11b7765a67a2cc1b8cd41314208b7" translate="yes" xml:space="preserve">
          <source>Bool#==</source>
          <target state="translated">Bool#==</target>
        </trans-unit>
        <trans-unit id="5c4c2b21ce716c38452816f59def0368c21ee97c" translate="yes" xml:space="preserve">
          <source>Bool#^</source>
          <target state="translated">Bool#^</target>
        </trans-unit>
        <trans-unit id="9324a2442839af44cd3ffdf77043659ed598abea" translate="yes" xml:space="preserve">
          <source>Bool#hash</source>
          <target state="translated">Bool#hash</target>
        </trans-unit>
        <trans-unit id="628170b908ada2a3a83172e7cee7e8c22c833365" translate="yes" xml:space="preserve">
          <source>Bool#to_s</source>
          <target state="translated">Bool#to_s</target>
        </trans-unit>
        <trans-unit id="89e333fba60674c72b8d35815239944a50a690de" translate="yes" xml:space="preserve">
          <source>Bool#|</source>
          <target state="translated">Bool#|</target>
        </trans-unit>
        <trans-unit id="801f00814276a3c910d3d60184b9f4a35f49364a" translate="yes" xml:space="preserve">
          <source>Bool.new</source>
          <target state="translated">Bool.new</target>
        </trans-unit>
        <trans-unit id="853b60eb789f6dbad9527a811c501f6ced7c8f2e" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances show a different local date-time, but they represent the same date-time in the instant time-line, therefore they are considered equal:</source>
          <target state="translated">両方の &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; インスタンスは異なるローカルの日時を示していますが、インスタントタイムラインでは同じ日時を表しているため、等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="f3f533b5daf955800e459340b5962056de5ddfda" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt; make constants defined in the module available to the including/extending type.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; と &lt;code&gt;extend&lt;/code&gt; はどちらも、モジュールで定義された定数をinclude / extendingタイプで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="3e650e0c546b96f7c8d5d243691e502db6afb8c9" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;method_missing&lt;/code&gt; and &lt;code&gt;method_added&lt;/code&gt; only apply to calls or methods in the same class that the macro is defined in, or only in the top level if the macro is defined outside of a class. For example:</source>
          <target state="translated">&lt;code&gt;method_missing&lt;/code&gt; と &lt;code&gt;method_added&lt;/code&gt; はどちらも、マクロが定義されている同じクラスの呼び出しまたはメソッドにのみ適用されます。または、マクロがクラスの外部で定義されている場合は最上位にのみ適用されます。例えば：</target>
        </trans-unit>
        <trans-unit id="02b06fedbe75ac699f049496a129875e36fb3855" translate="yes" xml:space="preserve">
          <source>Both endpoints and the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s are closed after the block (even if &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">エンドポイントと基になる &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; の両方がブロックの後に閉じられます（ &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合でも）。</target>
        </trans-unit>
        <trans-unit id="09ec3a9e1528302bebe126b53130baced85d765f" translate="yes" xml:space="preserve">
          <source>Both of them can be used at the top level to avoid writing a namespace over and over (although the chances of name clashes increase):</source>
          <target state="translated">どちらもトップレベルで使用することで、名前空間を何度も書くことを避けることができます(名前の衝突の可能性は高くなりますが)。</target>
        </trans-unit>
        <trans-unit id="92b9b00943b799aac92add502fd57ee8942614c6" translate="yes" xml:space="preserve">
          <source>Both structs's instance vars are compared to each other. Thus, two structs are considered equal if each of their instance variables are equal. Subclasses should override this method to provide specific equality semantics.</source>
          <target state="translated">両方の構造体のインスタンス変数が互いに比較されます。したがって、2 つの構造体は、それぞれのインスタンス変数が等しい場合、等しいとみなされます。サブクラスは、このメソッドをオーバーライドして、特定の等質性セマンティクスを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="239ca5767afac9641593464ce02bc454d6ac07a9" translate="yes" xml:space="preserve">
          <source>Box</source>
          <target state="translated">Box</target>
        </trans-unit>
        <trans-unit id="4ca6c023911c4d00706b977fd3102a98fbd1b6f1" translate="yes" xml:space="preserve">
          <source>Box(T)</source>
          <target state="translated">Box(T)</target>
        </trans-unit>
        <trans-unit id="8e33f6dc3c568a19f721c8910f0cf42803c81358" translate="yes" xml:space="preserve">
          <source>Box.box</source>
          <target state="translated">Box.box</target>
        </trans-unit>
        <trans-unit id="d7063d27c96ca1bc802dab8543758a1b2aef456b" translate="yes" xml:space="preserve">
          <source>Box.new</source>
          <target state="translated">Box.new</target>
        </trans-unit>
        <trans-unit id="c7dfd8323fd5e72ce649953eb9bbb100abdbf328" translate="yes" xml:space="preserve">
          <source>Broken pipe</source>
          <target state="translated">パイプのかたまり</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
