<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="472e6487f68d04bf8fdb5f7c1716adfc521275a9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;memlimit&lt;/em&gt; argument specifies a limit (in bytes) on the amount of memory that the decompressor can use. When this argument is used, decompression will fail with an &lt;a href=&quot;#lzma.LZMAError&quot;&gt;&lt;code&gt;LZMAError&lt;/code&gt;&lt;/a&gt; if it is not possible to decompress the input within the given memory limit.</source>
          <target state="translated">&lt;em&gt;MEMLIMITの&lt;/em&gt;引数は、減圧装置が使用できるメモリの量に（バイト単位で）制限を指定します。この引数を使用すると、指定されたメモリ制限内で入力を解凍できない場合、解凍は&lt;a href=&quot;#lzma.LZMAError&quot;&gt; &lt;code&gt;LZMAError&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="5ed4f7ee0127a5c81a5c5fe6eca67c71e17a81c7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;message_set&lt;/em&gt; options to commands below is a string specifying one or more messages to be acted upon. It may be a simple message number (&lt;code&gt;'1'&lt;/code&gt;), a range of message numbers (&lt;code&gt;'2:4'&lt;/code&gt;), or a group of non-contiguous ranges separated by commas (&lt;code&gt;'1:3,6:9'&lt;/code&gt;). A range can contain an asterisk to indicate an infinite upper bound (&lt;code&gt;'3:*'&lt;/code&gt;).</source>
          <target state="translated">以下のコマンドの&lt;em&gt;message_set&lt;/em&gt;オプションは、処理する1つ以上のメッセージを指定する文字列です。単純なメッセージ番号（ &lt;code&gt;'1'&lt;/code&gt; ）、メッセージ番号の範囲（ &lt;code&gt;'2:4'&lt;/code&gt; ）、またはコンマで区切られた不連続な範囲のグループ（ &lt;code&gt;'1:3,6:9'&lt;/code&gt; ）を指定できます。範囲には、無限の上限を示すアスタリスクを含めることができます（ &lt;code&gt;'3:*'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ac518a8261cd76e3d572450cd69c2da8d19e734" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;method&lt;/em&gt; for computing quantiles can be varied depending on whether the &lt;em&gt;data&lt;/em&gt; includes or excludes the lowest and highest possible values from the population.</source>
          <target state="translated">&lt;em&gt;方法&lt;/em&gt;変位値を計算するためには、かどうかに応じて変化させることができる&lt;em&gt;データが&lt;/em&gt;母集団から最低と最高の可能な値を含むか排除します。</target>
        </trans-unit>
        <trans-unit id="8ecb6288199428438fe4ea40f2513dfb74080c75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mock&lt;/em&gt; argument is the mock object to configure. If &lt;code&gt;None&lt;/code&gt; (the default) then a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; will be created for you, with the API limited to methods or attributes available on standard file handles.</source>
          <target state="translated">&lt;em&gt;モック&lt;/em&gt;引数は、configureにモックオブジェクトです。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）を&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; は&lt;/a&gt; APIで、あなたのために作成されません方法に限定されるものか、標準のファイルハンドルに使用可能な属性。</target>
        </trans-unit>
        <trans-unit id="895803f0fac68124dcdbdc694aeabdf8d07767b7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mod_name&lt;/em&gt; argument should be an absolute module name. If the module name refers to a package rather than a normal module, then that package is imported and the &lt;code&gt;__main__&lt;/code&gt; submodule within that package is then executed and the resulting module globals dictionary returned.</source>
          <target state="translated">&lt;em&gt;MOD_NAMEの&lt;/em&gt;引数には、絶対的なモジュール名でなければなりません。モジュール名が通常のモジュールではなくパッケージを参照している場合、そのパッケージがインポートされ、そのパッケージ内の &lt;code&gt;__main__&lt;/code&gt; サブモジュールが実行され、結果のモジュールグローバルディクショナリが返されます。</target>
        </trans-unit>
        <trans-unit id="a6df0bfcf373c1c06747418e51fd35f70f7733a3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;&quot;r&quot;&lt;/code&gt;, &lt;code&gt;&quot;rb&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;wb&quot;&lt;/code&gt;, &lt;code&gt;&quot;x&quot;&lt;/code&gt;, &lt;code&gt;&quot;xb&quot;&lt;/code&gt;, &lt;code&gt;&quot;a&quot;&lt;/code&gt; or &lt;code&gt;&quot;ab&quot;&lt;/code&gt; for binary mode, or &lt;code&gt;&quot;rt&quot;&lt;/code&gt;, &lt;code&gt;&quot;wt&quot;&lt;/code&gt;, &lt;code&gt;&quot;xt&quot;&lt;/code&gt;, or &lt;code&gt;&quot;at&quot;&lt;/code&gt; for text mode. The default is &lt;code&gt;&quot;rb&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は任意とすることができる &lt;code&gt;&quot;r&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;rb&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;wb&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;x&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;xb&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;a&quot;&lt;/code&gt; 又は &lt;code&gt;&quot;ab&quot;&lt;/code&gt; バイナリモード、またはのための &lt;code&gt;&quot;rt&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;wt&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;xt&quot;&lt;/code&gt; 、またはテキストモードの &lt;code&gt;&quot;at&quot;&lt;/code&gt; 。デフォルトは &lt;code&gt;&quot;rb&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8d1ad98a2dd540caaea8a1f22878e9101d4e6629" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'xb'&lt;/code&gt; for binary mode, or &lt;code&gt;'rt'&lt;/code&gt;, &lt;code&gt;'at'&lt;/code&gt;, &lt;code&gt;'wt'&lt;/code&gt;, or &lt;code&gt;'xt'&lt;/code&gt; for text mode. The default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は、のいずれかであることができる &lt;code&gt;'r'&lt;/code&gt; 、 &lt;code&gt;'rb'&lt;/code&gt; 、 &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'ab'&lt;/code&gt; 、 &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'wb'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; または &lt;code&gt;'xb'&lt;/code&gt; バイナリモード、またはのための &lt;code&gt;'rt'&lt;/code&gt; 、 &lt;code&gt;'at'&lt;/code&gt; 、 &lt;code&gt;'wt'&lt;/code&gt; 、またはテキストモードの場合は &lt;code&gt;'xt'&lt;/code&gt; 。デフォルトは &lt;code&gt;'rb'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e823bc32f269eed5bbc36974b6041d7caeefce7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, or &lt;code&gt;'xb'&lt;/code&gt;, depending on whether the file will be read or written. The default is the mode of &lt;em&gt;fileobj&lt;/em&gt; if discernible; otherwise, the default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は、のいずれかであることができる &lt;code&gt;'r'&lt;/code&gt; 、 &lt;code&gt;'rb'&lt;/code&gt; 、 &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'ab'&lt;/code&gt; 、 &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'wb'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、または &lt;code&gt;'xb'&lt;/code&gt; ファイルが読み取りまたは書き込みされるかどうかに応じて、 。認識できる場合、デフォルトは&lt;em&gt;fileobj&lt;/em&gt;のモードです。それ以外の場合、デフォルトは &lt;code&gt;'rb'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="05f2a9cda1e91039c7b1edb582c41248bba08bd5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'xb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt; or &lt;code&gt;'ab'&lt;/code&gt; for binary mode, or &lt;code&gt;'rt'&lt;/code&gt;, &lt;code&gt;'wt'&lt;/code&gt;, &lt;code&gt;'xt'&lt;/code&gt;, or &lt;code&gt;'at'&lt;/code&gt; for text mode. The default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は任意とすることができる &lt;code&gt;'r'&lt;/code&gt; 、 &lt;code&gt;'rb'&lt;/code&gt; 、 &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'wb'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、 &lt;code&gt;'xb'&lt;/code&gt; 、 &lt;code&gt;'a'&lt;/code&gt; または &lt;code&gt;'ab'&lt;/code&gt; バイナリモードのために、または &lt;code&gt;'rt'&lt;/code&gt; 、 &lt;code&gt;'wt'&lt;/code&gt; 、 &lt;code&gt;'xt'&lt;/code&gt; 、またはテキストモードの場合は &lt;code&gt;'at'&lt;/code&gt; 。デフォルトは &lt;code&gt;'rb'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f4dcb1c4c38de2058990b6b6c09d3880a922fe2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be either &lt;code&gt;&quot;r&quot;&lt;/code&gt; for reading (default), &lt;code&gt;&quot;w&quot;&lt;/code&gt; for overwriting, &lt;code&gt;&quot;x&quot;&lt;/code&gt; for exclusive creation, or &lt;code&gt;&quot;a&quot;&lt;/code&gt; for appending. These can equivalently be given as &lt;code&gt;&quot;rb&quot;&lt;/code&gt;, &lt;code&gt;&quot;wb&quot;&lt;/code&gt;, &lt;code&gt;&quot;xb&quot;&lt;/code&gt; and &lt;code&gt;&quot;ab&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は、いずれかになります &lt;code&gt;&quot;r&quot;&lt;/code&gt; 読み取るための（デフォルト）、 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 、上書きのための &lt;code&gt;&quot;x&quot;&lt;/code&gt; 排他的な作成のために、または &lt;code&gt;&quot;a&quot;&lt;/code&gt; 追加するため。これらは、それぞれ &lt;code&gt;&quot;rb&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;wb&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;xb&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;ab&quot;&lt;/code&gt; として同等に指定できます。</target>
        </trans-unit>
        <trans-unit id="f3bbeddbe7940e4c0cf370c80c9188d583fa75ae" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be either &lt;code&gt;'r'&lt;/code&gt; for reading (default), &lt;code&gt;'w'&lt;/code&gt; for overwriting, &lt;code&gt;'x'&lt;/code&gt; for exclusive creation, or &lt;code&gt;'a'&lt;/code&gt; for appending. These can equivalently be given as &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'xb'&lt;/code&gt; and &lt;code&gt;'ab'&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;引数は、いずれかになります &lt;code&gt;'r'&lt;/code&gt; 、（デフォルト）を読み込むための &lt;code&gt;'w'&lt;/code&gt; 、上書きする &lt;code&gt;'x'&lt;/code&gt; 排他的に作成するため、または &lt;code&gt;'a'&lt;/code&gt; 追加するため。これらは、それぞれ &lt;code&gt;'rb'&lt;/code&gt; 、 &lt;code&gt;'wb'&lt;/code&gt; 、 &lt;code&gt;'xb'&lt;/code&gt; および &lt;code&gt;'ab'&lt;/code&gt; として同等に指定できます。</target>
        </trans-unit>
        <trans-unit id="8e63d1cb834b1ab465f8f51a8d33b391f5ded1c0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument specifies what kind of code must be compiled; it can be &lt;code&gt;'exec'&lt;/code&gt; if &lt;em&gt;source&lt;/em&gt; consists of a sequence of statements, &lt;code&gt;'eval'&lt;/code&gt; if it consists of a single expression, or &lt;code&gt;'single'&lt;/code&gt; if it consists of a single interactive statement (in the latter case, expression statements that evaluate to something other than &lt;code&gt;None&lt;/code&gt; will be printed).</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;コンパイルする必要があり、コードのどのような引数指定します。それはすることができます &lt;code&gt;'exec'&lt;/code&gt; 場合&lt;em&gt;、ソースは&lt;/em&gt;一連の文で構成され、 &lt;code&gt;'eval'&lt;/code&gt; それは単一の式で構成されている場合、または &lt;code&gt;'single'&lt;/code&gt; それは後者の場合に、単一のインタラクティブステートメント（、何かに評価表現の文で構成されている場合 &lt;code&gt;None&lt;/code&gt; 以外は印刷されます）。</target>
        </trans-unit>
        <trans-unit id="ef0505b4bacc6ef52a11195116452b65f0988586" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; can be &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt; for reading (default), writing, exclusive creation or appending. The file will be created if it doesn&amp;rsquo;t exist when opened for writing or appending; it will be truncated when opened for writing. &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; will be raised if it already exists when opened for creating. Opening a file for creating implies writing, so this mode behaves in a similar way to &lt;code&gt;'w'&lt;/code&gt;. Add a &lt;code&gt;'+'&lt;/code&gt; to the mode to allow simultaneous reading and writing.</source>
          <target state="translated">&lt;em&gt;モードが&lt;/em&gt;可能 &lt;code&gt;'r'&lt;/code&gt; 、 &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; または &lt;code&gt;'a'&lt;/code&gt; （デフォルト）を読み取るための、書き込み、排他的な作成または追加します。ファイルは、書き込みまたは追加のために開かれたときに存在しない場合に作成されます。書き込み用に開くと切り捨てられます。&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;は、作成のために開かれたときにすでに存在する場合に発生します。作成のためにファイルを開くことは書き込みを意味するため、このモードは &lt;code&gt;'w'&lt;/code&gt; と同様に動作します。モードに &lt;code&gt;'+'&lt;/code&gt; を追加すると、読み取りと書き込みを同時に行うことができます。</target>
        </trans-unit>
        <trans-unit id="c36342d9b2cd8356ce1d1833db576291385536ce" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter can be used to specify how the library is loaded. For details, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen(3)&lt;/a&gt;&lt;/em&gt; manpage. On Windows, &lt;em&gt;mode&lt;/em&gt; is ignored. On posix systems, RTLD_NOW is always added, and is not configurable.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;パラメータは、ライブラリがロードされる方法を指定するために使用することができます。詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen（3）の&lt;/a&gt;&lt;/em&gt;マンページを参照してください。Windowsでは、&lt;em&gt;モード&lt;/em&gt;は無視されます。posixシステムでは、RTLD_NOWは常に追加され、構成できません。</target>
        </trans-unit>
        <trans-unit id="f9fa2d230db8cbbf537de152e5285ab6acbcd9db" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter defaults to &lt;code&gt;'w+b'&lt;/code&gt; so that the file created can be read and written without being closed. Binary mode is used so that it behaves consistently on all platforms without regard for the data that is stored. &lt;em&gt;buffering&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; are interpreted as for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;へのパラメータのデフォルトは &lt;code&gt;'w+b'&lt;/code&gt; そうせずに読み書きすることができ、作成したファイルは閉じられていること。バイナリー・モードは、保管されているデータに関係なく、すべてのプラットフォームで一貫して動作するように使用されます。&lt;em&gt;バッファリング&lt;/em&gt;、&lt;em&gt;エンコーディング&lt;/em&gt;、&lt;em&gt;エラー&lt;/em&gt;、&lt;em&gt;改行&lt;/em&gt;は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;と同様に解釈され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="12a05a95436429873a1482da4eed5e970b00fe32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter is passed to &lt;a href=&quot;#os.mkdir&quot;&gt;&lt;code&gt;mkdir()&lt;/code&gt;&lt;/a&gt; for creating the leaf directory; see &lt;a href=&quot;#mkdir-modebits&quot;&gt;the mkdir() description&lt;/a&gt; for how it is interpreted. To set the file permission bits of any newly-created parent directories you can set the umask before invoking &lt;a href=&quot;#os.makedirs&quot;&gt;&lt;code&gt;makedirs()&lt;/code&gt;&lt;/a&gt;. The file permission bits of existing parent directories are not changed.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;パラメータが渡され&lt;a href=&quot;#os.mkdir&quot;&gt; &lt;code&gt;mkdir()&lt;/code&gt; &lt;/a&gt;の葉のディレクトリを作成します。解釈方法について&lt;a href=&quot;#mkdir-modebits&quot;&gt;は、mkdir（）の説明&lt;/a&gt;を参照してください。新しく作成された親ディレクトリのファイル許可ビットを設定するには、&lt;a href=&quot;#os.makedirs&quot;&gt; &lt;code&gt;makedirs()&lt;/code&gt; &lt;/a&gt;を呼び出す前にumaskを設定できます。既存の親ディレクトリのファイル許可ビットは変更されません。</target>
        </trans-unit>
        <trans-unit id="4d337cbd57242ea9761dc2650a1be72d8a8a94e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter should be &lt;code&gt;'r'&lt;/code&gt; to read an existing file, &lt;code&gt;'w'&lt;/code&gt; to truncate and write a new file, &lt;code&gt;'a'&lt;/code&gt; to append to an existing file, or &lt;code&gt;'x'&lt;/code&gt; to exclusively create and write a new file. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'x'&lt;/code&gt; and &lt;em&gt;file&lt;/em&gt; refers to an existing file, a &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'a'&lt;/code&gt; and &lt;em&gt;file&lt;/em&gt; refers to an existing ZIP file, then additional files are added to it. If &lt;em&gt;file&lt;/em&gt; does not refer to a ZIP file, then a new ZIP archive is appended to the file. This is meant for adding a ZIP archive to another file (such as &lt;code&gt;python.exe&lt;/code&gt;). If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'a'&lt;/code&gt; and the file does not exist at all, it is created. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, the file should be seekable.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;パラメータは、あるべき &lt;code&gt;'r'&lt;/code&gt; 既存のファイルを読むために、 &lt;code&gt;'w'&lt;/code&gt; 新しいファイルを切り捨てると書くため、 &lt;code&gt;'a'&lt;/code&gt; 既存のファイルに追加する、または &lt;code&gt;'x'&lt;/code&gt; 独占的に新しいファイルを作成して書くこと。場合は&lt;em&gt;モードが&lt;/em&gt;ある &lt;code&gt;'x'&lt;/code&gt; と&lt;em&gt;、ファイルが&lt;/em&gt;既存のファイルを指し、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; が&lt;/a&gt;発生します。場合は&lt;em&gt;モードが&lt;/em&gt;ある &lt;code&gt;'a'&lt;/code&gt; と&lt;em&gt;、ファイルが&lt;/em&gt;既存のZIPファイルを参照し、その後、追加ファイルが追加されています。もし&lt;em&gt;ファイル&lt;/em&gt;はZIPファイルを参照せず、新しいZIPアーカイブがファイルに追加されます。これは、ZIPアーカイブを別のファイル（ &lt;code&gt;python.exe&lt;/code&gt; など）に追加するためのものです。場合は&lt;em&gt;モードが&lt;/em&gt;ある &lt;code&gt;'a'&lt;/code&gt; と、ファイルが全く存在しない、それが作成されます。場合は&lt;em&gt;モードが&lt;/em&gt;ある &lt;code&gt;'r'&lt;/code&gt; または &lt;code&gt;'a'&lt;/code&gt; 、ファイルがシーク可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="cd48b9ded8ca0d722432b92316f5d1e26f89e9e8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;module&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt; arguments are the same as for function &lt;a href=&quot;#doctest.testsource&quot;&gt;&lt;code&gt;testsource()&lt;/code&gt;&lt;/a&gt; above. The synthesized Python script for the named object&amp;rsquo;s docstring is written to a temporary file, and then that file is run under the control of the Python debugger, &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;モジュール&lt;/em&gt;と&lt;em&gt;名前&lt;/em&gt;引数が関数の場合と同じである&lt;a href=&quot;#doctest.testsource&quot;&gt; &lt;code&gt;testsource()&lt;/code&gt; &lt;/a&gt;上記。名前付きオブジェクトのdocstring用に合成されたPythonスクリプトが一時ファイルに書き込まれ、そのファイルがPythonデバッガー&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; の&lt;/a&gt;制御下で実行されます。</target>
        </trans-unit>
        <trans-unit id="517f12b7316c7403a28c06c48d710faa268ca17d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;module&lt;/em&gt; argument takes a module that will be used instead of the module returned when you import &lt;a href=&quot;#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; whose filter will be protected. This argument exists primarily for testing the &lt;a href=&quot;#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module itself.</source>
          <target state="translated">&lt;em&gt;モジュールの&lt;/em&gt;引数ではなく、インポート時に返されたモジュールを使用することになるモジュール取り&lt;a href=&quot;#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;そのフィルタで保護されます。この引数は、主に&lt;a href=&quot;#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュール自体をテストするために存在します。</target>
        </trans-unit>
        <trans-unit id="d00f6e8f367001c13e02ed8c348b2926151b62a6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mtime&lt;/em&gt; argument is an optional numeric timestamp to be written to the last modification time field in the stream when compressing. It should only be provided in compression mode. If omitted or &lt;code&gt;None&lt;/code&gt;, the current time is used. See the &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt; attribute for more details.</source>
          <target state="translated">&lt;em&gt;mtimeのの&lt;/em&gt;引数は、圧縮ストリームに最終更新時刻フィールドに書き込まれるオプションの数値タイムスタンプです。圧縮モードでのみ提供する必要があります。省略するか &lt;code&gt;None&lt;/code&gt; の場合、現在の時刻が使用されます。詳細については、&lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt;属性を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1d5693119572560e6e6dbcbc1051d1f559f7129" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; argument is optional. If specified it must be a string that will be used as the value returned by the &lt;a href=&quot;#datetime.datetime.tzname&quot;&gt;&lt;code&gt;datetime.tzname()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;名前の&lt;/em&gt;引数はオプションです。指定する場合は、&lt;a href=&quot;#datetime.datetime.tzname&quot;&gt; &lt;code&gt;datetime.tzname()&lt;/code&gt; &lt;/a&gt;メソッドによって返される値として使用される文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="fa307273ebb313531c87777abdad301164d885b3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; argument specifies the database name that will be copied: it must be a string containing either &lt;code&gt;&quot;main&quot;&lt;/code&gt;, the default, to indicate the main database, &lt;code&gt;&quot;temp&quot;&lt;/code&gt; to indicate the temporary database or the name specified after the &lt;code&gt;AS&lt;/code&gt; keyword in an &lt;code&gt;ATTACH DATABASE&lt;/code&gt; statement for an attached database.</source>
          <target state="translated">&lt;em&gt;名前の&lt;/em&gt;引数がコピーされるデータベース名を指定します：それはどちらか含む文字列でなければならない &lt;code&gt;&quot;main&quot;&lt;/code&gt; 、メインデータベースを示すために、デフォルトの &lt;code&gt;&quot;temp&quot;&lt;/code&gt; した後、指定された一時データベースまたは名前を示すために、 &lt;code&gt;AS&lt;/code&gt; の中のキーワードを接続されたデータベースの &lt;code&gt;ATTACH DATABASE&lt;/code&gt; ステートメント。</target>
        </trans-unit>
        <trans-unit id="bfc8b3c755aaf4e07d8b3ad9aeb11f0bb28a5cf0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; can be one of two things:</source>
          <target state="translated">&lt;em&gt;名前は、&lt;/em&gt; 2つのいずれかを指定できます。</target>
        </trans-unit>
        <trans-unit id="fecd24072b185fb1c044fa851a04b4bb4c15cc73" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type as a &lt;code&gt;(uri,
localname)&lt;/code&gt; tuple, the &lt;em&gt;qname&lt;/em&gt; parameter contains the raw XML 1.0 name used in the source document, and the &lt;em&gt;attrs&lt;/em&gt; parameter holds an instance of the &lt;code&gt;AttributesNS&lt;/code&gt; interface (see &lt;a href=&quot;xml.sax.reader#attributes-ns-objects&quot;&gt;The AttributesNS Interface&lt;/a&gt;) containing the attributes of the element. If no namespace is associated with the element, the &lt;em&gt;uri&lt;/em&gt; component of &lt;em&gt;name&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt;. The object passed as &lt;em&gt;attrs&lt;/em&gt; may be re-used by the parser; holding on to a reference to it is not a reliable way to keep a copy of the attributes. To keep a copy of the attributes, use the &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;attrs&lt;/em&gt; object.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;パラメータは、のように要素型の名前含有 &lt;code&gt;(uri, localname)&lt;/code&gt; タプルを、&lt;em&gt;のQNameの&lt;/em&gt;パラメータは、ソース文書で使用される生のXML 1.0名を含み、&lt;em&gt;ATTRS&lt;/em&gt;のインスタンスを保持するパラメータ &lt;code&gt;AttributesNS&lt;/code&gt; のインターフェースは、（参照&lt;a href=&quot;xml.sax.reader#attributes-ns-objects&quot;&gt;AttributesNSインタフェース&lt;/a&gt;）要素の属性を含みます。名前空間が要素に関連付けされていない場合は、&lt;em&gt;URI&lt;/em&gt;のコンポーネント&lt;em&gt;名は&lt;/em&gt;なりません &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;attrs&lt;/em&gt;として渡されたオブジェクトは、パーサーで再利用できます。それへの参照を保持することは、属性のコピーを保持する信頼できる方法ではありません。属性のコピーを保持するには、&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;attrs&lt;/em&gt;オブジェクトの copy（）メソッド。</target>
        </trans-unit>
        <trans-unit id="5686dcac020c22f354bee25b44d2e503d24cea05" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type, just as with the &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt;&lt;code&gt;startElement()&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">&lt;em&gt;名前の&lt;/em&gt;パラメータは、ちょうどのように、要素型の名前が含まれている&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt; &lt;code&gt;startElement()&lt;/code&gt; &lt;/a&gt;イベント。</target>
        </trans-unit>
        <trans-unit id="4e221dbdf5f7dd9b982f8886d4d96d71dfbcb1e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type, just as with the &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElementNS&quot;&gt;&lt;code&gt;startElementNS()&lt;/code&gt;&lt;/a&gt; method, likewise the &lt;em&gt;qname&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;パラメータは、単にと同様に、要素タイプの名前を含む&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElementNS&quot;&gt; &lt;code&gt;startElementNS()&lt;/code&gt; &lt;/a&gt;メソッド、同様&lt;em&gt;のQName&lt;/em&gt;パラメータ。</target>
        </trans-unit>
        <trans-unit id="c5dd95780a96ed373c7c08723087bc92012499d7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the raw XML 1.0 name of the element type as a string and the &lt;em&gt;attrs&lt;/em&gt; parameter holds an object of the &lt;code&gt;Attributes&lt;/code&gt; interface (see &lt;a href=&quot;xml.sax.reader#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;) containing the attributes of the element. The object passed as &lt;em&gt;attrs&lt;/em&gt; may be re-used by the parser; holding on to a reference to it is not a reliable way to keep a copy of the attributes. To keep a copy of the attributes, use the &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;attrs&lt;/em&gt; object.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;パラメータは、文字列として要素型との生のXML 1.0名前含ま&lt;em&gt;ATTRS&lt;/em&gt;の物体保持パラメータ &lt;code&gt;Attributes&lt;/code&gt; インタフェース（参照&lt;a href=&quot;xml.sax.reader#attributes-objects&quot;&gt;インターフェイス属性&lt;/a&gt;要素の属性を含む）を。&lt;em&gt;attrs&lt;/em&gt;として渡されたオブジェクトは、パーサーで再利用できます。それへの参照を保持することは、属性のコピーを保持する信頼できる方法ではありません。属性のコピーを保持するには、&lt;em&gt;attrs&lt;/em&gt;オブジェクトの&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e827cc072d58a9231eccc94d7418aeb0f39c07c9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name_of_module&lt;/em&gt; argument can specify (as a string or tuple thereof) what module(s) an API could be defined in order to be detected as a public API. One case for this is when &lt;em&gt;module&lt;/em&gt; imports part of its public API from other modules, possibly a C backend (like &lt;code&gt;csv&lt;/code&gt; and its &lt;code&gt;_csv&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;name_of_moduleの&lt;/em&gt;引数は、APIをパブリックAPIとして検出されるために定義することができるものモジュール（単数または複数）（その文字列またはタプルとして）指定することができます。この1つのケースは、&lt;em&gt;モジュール&lt;/em&gt;が他のモジュール（おそらくCバックエンド（ &lt;code&gt;csv&lt;/code&gt; とその &lt;code&gt;_csv&lt;/code&gt; など））からそのパブリックAPIの一部をインポートする場合&lt;em&gt;です&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6a1f53a033eeb2f5efeb8e128aa8a34ec6956a47" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;new_callable&lt;/em&gt; argument is useful where you want to use an alternative class to the default &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for the created mock. For example, if you wanted a &lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt;&lt;code&gt;NonCallableMock&lt;/code&gt;&lt;/a&gt; to be used:</source>
          <target state="translated">&lt;em&gt;new_callable&lt;/em&gt;デフォルトに代わるクラスを使用する場所の引数は便利です&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;作成モックのために。たとえば、&lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt; &lt;code&gt;NonCallableMock&lt;/code&gt; &lt;/a&gt;を使用する場合：</target>
        </trans-unit>
        <trans-unit id="1c928def7d6f7fec2025663bfc3a4700caf1d2a7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;newline&lt;/em&gt; argument works like that of &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;. The default is to consider only &lt;code&gt;\n&lt;/code&gt; characters as ends of lines and to do no newline translation. If &lt;em&gt;newline&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, newlines are written as &lt;code&gt;\n&lt;/code&gt; on all platforms, but universal newline decoding is still performed when reading.</source>
          <target state="translated">&lt;em&gt;改行&lt;/em&gt;引数はそのように動作します&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;。デフォルトでは、 &lt;code&gt;\n&lt;/code&gt; 文字だけを行末と見なし、改行変換は行いません。&lt;em&gt;改行&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、改行はすべてのプラットフォームで &lt;code&gt;\n&lt;/code&gt; として書き込まれますが、読み取り時にはユニバーサル改行のデコードが実行されます。</target>
        </trans-unit>
        <trans-unit id="0bd8453f1fdcfd787ce338a47e0ea718dd8b6c75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object-or-type&lt;/em&gt; determines the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-method-resolution-order&quot;&gt;method resolution order&lt;/a&gt; to be searched. The search starts from the class right after the &lt;em&gt;type&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;オブジェクトまたは型&lt;/em&gt;決定&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-method-resolution-order&quot;&gt;方法解像度順&lt;/a&gt;に検索されることを。&lt;em&gt;タイプの&lt;/em&gt;直後のクラスから検索が始まります。</target>
        </trans-unit>
        <trans-unit id="ad83ccab5379d93ec053e2b163a548ae3d4e6b98" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object_pairs_hook&lt;/em&gt; parameter can be used to alter this behavior.</source>
          <target state="translated">&lt;em&gt;object_pairs_hookの&lt;/em&gt;パラメータは、この動作を変更するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="835096ab0ab29d4008ca14710ddfaea3d6d22ec4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;offset&lt;/em&gt; argument must be specified as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object representing the difference between the local time and UTC. It must be strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt;, otherwise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;オフセット&lt;/em&gt;引数として指定されなければならない&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;ローカル時刻とUTCとの差を表すオブジェクト。それは厳密に &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; と &lt;code&gt;timedelta(hours=24)&lt;/code&gt; の間でなければなりません。そうでない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="ddd25287fdb9896e097a9db9e3706fae6e9da314" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opener&lt;/em&gt; parameter was added.</source>
          <target state="translated">&lt;em&gt;オープナーの&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="03b092d93249375bcb0323a6702343bfbe9ceae6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;openhook&lt;/em&gt;, when given, must be a function that takes two arguments, &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;mode&lt;/em&gt;, and returns an accordingly opened file-like object. You cannot use &lt;em&gt;inplace&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; together.</source>
          <target state="translated">&lt;em&gt;openhookを&lt;/em&gt;与えられ、2つの引数、とる関数でなければならない&lt;em&gt;ファイル名&lt;/em&gt;と&lt;em&gt;モードを&lt;/em&gt;、それに応じて開かれたファイルオブジェクトを返します。あなたは使用することはできません&lt;em&gt;インプレースを&lt;/em&gt;して&lt;em&gt;openhookを&lt;/em&gt;一緒に。</target>
        </trans-unit>
        <trans-unit id="e5eb496e4b2c0fde320c695eb452f9ff1a917c58" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;optimization&lt;/em&gt; parameter is used to specify the optimization level of the bytecode file. An empty string represents no optimization, so &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; with an &lt;em&gt;optimization&lt;/em&gt; of &lt;code&gt;''&lt;/code&gt; will result in a bytecode path of &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; causes the interpreter&amp;rsquo;s optimization level to be used. Any other value&amp;rsquo;s string representation is used, so &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; with an &lt;em&gt;optimization&lt;/em&gt; of &lt;code&gt;2&lt;/code&gt; will lead to the bytecode path of &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.opt-2.pyc&lt;/code&gt;. The string representation of &lt;em&gt;optimization&lt;/em&gt; can only be alphanumeric, else &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;最適化&lt;/em&gt;パラメータは、バイトコードファイルの最適化レベルを指定するために使用されます。空の文字列は最適化なしを表すため、 &lt;code&gt;''&lt;/code&gt; の&lt;em&gt;最適化&lt;/em&gt;を &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; は、/ &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; / bar / __ pycache __ / baz.cpython-32.pycのバイトコードパスになります。 &lt;code&gt;None&lt;/code&gt; は、インタプリタの最適化レベルが使用されます。他の値の文字列表現が使用されるため、&lt;em&gt;最適化&lt;/em&gt;が &lt;code&gt;2&lt;/code&gt; の &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; は、/ &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.opt-2.pyc&lt;/code&gt; / bar / __pycache__ / baz.cpython-32.opt-2.pycのバイトコードパスにつながります。&lt;em&gt;最適化&lt;/em&gt;の文字列表現&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;英数字のみで、それ以外の&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;はValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="aeab2b3e4c0bce06083aef5c507ae9b49420eb23" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;password&lt;/em&gt; argument may be a function to call to get the password for decrypting the private key. It will only be called if the private key is encrypted and a password is necessary. It will be called with no arguments, and it should return a string, bytes, or bytearray. If the return value is a string it will be encoded as UTF-8 before using it to decrypt the key. Alternatively a string, bytes, or bytearray value may be supplied directly as the &lt;em&gt;password&lt;/em&gt; argument. It will be ignored if the private key is not encrypted and no password is needed.</source>
          <target state="translated">&lt;em&gt;パスワードの&lt;/em&gt;引数は、秘密鍵を復号化するためのパスワードを取得するために呼び出す関数であってもよいです。秘密鍵が暗号化されており、パスワードが必要な場合にのみ呼び出されます。引数なしで呼び出され、文字列、バイト、またはバイト配列を返す必要があります。戻り値が文字列の場合、それを使用してキーを復号化する前にUTF-8としてエンコードされます。あるいは、文字列、バイト、またはバイト配列値を&lt;em&gt;パスワード&lt;/em&gt;引数として直接指定することもできます。秘密鍵が暗号化されておらず、パスワードが不要な場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="5894a49d9fd67c04eb2502774f6b556f37efb59f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; argument is the directory for which the finder is in charge of searching.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;引数は、ファインダーが検索を担当しているディレクトリです。</target>
        </trans-unit>
        <trans-unit id="b3b64714cf1d89975545a84417ebd84d5e337d0a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; parameter is the path to the executable file.The &lt;em&gt;path&lt;/em&gt; should contain a directory.Use &lt;a href=&quot;#os.posix_spawnp&quot;&gt;&lt;code&gt;posix_spawnp()&lt;/code&gt;&lt;/a&gt; to pass an executable file without directory.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;パラメータは、実行file.Theのパスである&lt;em&gt;パス&lt;/em&gt; directory.Useを含まなければならない&lt;a href=&quot;#os.posix_spawnp&quot;&gt; &lt;code&gt;posix_spawnp()&lt;/code&gt; &lt;/a&gt;ディレクトリずに実行可能ファイルを渡します。</target>
        </trans-unit>
        <trans-unit id="9c46f81dad7b34554c6c2af6f64f9d65570f63a5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pax_headers&lt;/em&gt; argument is an optional dictionary of strings which will be added as a pax global header if &lt;em&gt;format&lt;/em&gt; is &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;pax_headersの&lt;/em&gt;引数があればPAXグローバルヘッダとして追加される文字列の任意の辞書である&lt;em&gt;フォーマットが&lt;/em&gt;ある&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="385c9a120811afd54baa69bd7076c1e6f5593f01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;payload&lt;/em&gt; is either a string or bytes object, in the case of simple message objects, or a list of &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects, for MIME container documents such as &lt;em&gt;multipart/*&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt; message objects.</source>
          <target state="translated">&lt;em&gt;ペイロードは、&lt;/em&gt;いずれかの文字列であるか、または簡単なメッセージオブジェクトの場合、オブジェクトをバイト、またはリスト&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のは&lt;/a&gt;等MIMEコンテナ文書のオブジェクト&lt;em&gt;マルチパート/ *&lt;/em&gt;および&lt;em&gt;メッセージ/ RFC822の&lt;/em&gt;メッセージオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ea70b7df974c3fb9e6c0547260aae38aa155e773" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preamble&lt;/em&gt; attribute contains this leading extra-armor text for MIME documents. When the &lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; discovers some text after the headers but before the first boundary string, it assigns this text to the message&amp;rsquo;s &lt;em&gt;preamble&lt;/em&gt; attribute. When the &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; is writing out the plain text representation of a MIME message, and it finds the message has a &lt;em&gt;preamble&lt;/em&gt; attribute, it will write this text in the area between the headers and the first boundary. See &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;email.generator&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;em&gt;プリアンブル&lt;/em&gt;属性は、MIME文書については、この主要な超装甲テキストが含まれています。とき&lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;、ヘッダーの後で最初の境界文字列の前にいくつかのテキストを発見し、それはメッセージのこのテキストを割り当て&lt;em&gt;プリアンブル&lt;/em&gt;属性。&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;がMIMEメッセージのプレーンテキスト表現を書き出しており、メッセージに&lt;em&gt;プリアンブル&lt;/em&gt;属性があることがわかった場合、ジェネレーターはこのテキストをヘッダーと最初の境界の間の領域に書き込みます。詳細については、&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;email.generator&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1a54fdfb6b6943ecad12822e748b19740f664e27" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;precision&lt;/em&gt; is a decimal number indicating how many digits should be displayed after the decimal point for a floating point value formatted with &lt;code&gt;'f'&lt;/code&gt; and &lt;code&gt;'F'&lt;/code&gt;, or before and after the decimal point for a floating point value formatted with &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;. For non-number types the field indicates the maximum field size - in other words, how many characters will be used from the field content. The &lt;em&gt;precision&lt;/em&gt; is not allowed for integer values.</source>
          <target state="translated">&lt;em&gt;精度&lt;/em&gt;でフォーマット浮動小数点値の小数点の後に表示されるべきである何桁示す進数で &lt;code&gt;'f'&lt;/code&gt; と &lt;code&gt;'F'&lt;/code&gt; でフォーマットされた浮動小数点値のために、または小数点の前と後の &lt;code&gt;'g'&lt;/code&gt; 又は &lt;code&gt;'G'&lt;/code&gt; 。数値以外のタイプの場合、フィールドは最大フィールドサイズ、つまりフィールドコンテンツから使用される文字数を示します。&lt;em&gt;精度は&lt;/em&gt;、整数値で許可されていません。</target>
        </trans-unit>
        <trans-unit id="9a42059a7398e0076eb8d110fcba8360dfcfb871" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preexec_fn&lt;/em&gt; parameter is not safe to use in the presence of threads in your application. The child process could deadlock before exec is called. If you must use it, keep it trivial! Minimize the number of libraries you call into.</source>
          <target state="translated">&lt;em&gt;preexec_fnに&lt;/em&gt;パラメータは、アプリケーション内のスレッドの存在下で使用しても安全ではありません。子プロセスは、execが呼び出される前にデッドロックする可能性があります。使用する必要がある場合は、簡単に使用してください。呼び出すライブラリの数を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="7c2cc6abdc0befc2720b7ccef1d9ae061ce483f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;prefix&lt;/em&gt;, &lt;em&gt;suffix&lt;/em&gt;, and &lt;em&gt;dir&lt;/em&gt; arguments are the same as for &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;接頭辞&lt;/em&gt;、&lt;em&gt;接尾辞&lt;/em&gt;、および&lt;em&gt;DIR&lt;/em&gt;引数はと同じです&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02180b4f716501a7667649b1f96c422fcb8aa64b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preset&lt;/em&gt; argument (if provided) should be an integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; (inclusive), optionally OR-ed with the constant &lt;code&gt;PRESET_EXTREME&lt;/code&gt;. If neither &lt;em&gt;preset&lt;/em&gt; nor &lt;em&gt;filters&lt;/em&gt; are given, the default behavior is to use &lt;code&gt;PRESET_DEFAULT&lt;/code&gt; (preset level &lt;code&gt;6&lt;/code&gt;). Higher presets produce smaller output, but make the compression process slower.</source>
          <target state="translated">&lt;em&gt;予め設定された&lt;/em&gt;引数（提供される場合は）の間の整数でなければならない &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;9&lt;/code&gt; 定数（包括的）、必要に応じてOR-ED &lt;code&gt;PRESET_EXTREME&lt;/code&gt; 。&lt;em&gt;プリセット&lt;/em&gt;も&lt;em&gt;フィルター&lt;/em&gt;も指定&lt;em&gt;されてい&lt;/em&gt;ない場合、デフォルトの動作は &lt;code&gt;PRESET_DEFAULT&lt;/code&gt; （プリセットレベル &lt;code&gt;6&lt;/code&gt; ）を使用することです。プリセットを高くすると、出力は小さくなりますが、圧縮プロセスが遅くなります。</target>
        </trans-unit>
        <trans-unit id="9895acc66c3f18475ff9f0db5201b4c6a71ff0e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a subclass of the &lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;SubprocessProtocol&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;em&gt;protocol_factoryは&lt;/em&gt;のサブクラスを返す呼び出し可能でなければなりません&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;SubprocessProtocol&lt;/code&gt; の&lt;/a&gt;クラスを。</target>
        </trans-unit>
        <trans-unit id="f711c66569fb5d19645c5457dbc47d4d07d6d7c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a subclass of the &lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;asyncio.SubprocessProtocol&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;em&gt;protocol_factoryは&lt;/em&gt;のサブクラスを返す呼び出し可能でなければなりません&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;asyncio.SubprocessProtocol&lt;/code&gt; の&lt;/a&gt;クラスを。</target>
        </trans-unit>
        <trans-unit id="401443787918a85da5a18eb500ca9cde85fb13e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;purpose&lt;/em&gt; flag specifies what kind of CA certificates are loaded. The default settings &lt;a href=&quot;#ssl.Purpose.SERVER_AUTH&quot;&gt;&lt;code&gt;Purpose.SERVER_AUTH&lt;/code&gt;&lt;/a&gt; loads certificates, that are flagged and trusted for TLS web server authentication (client side sockets). &lt;a href=&quot;#ssl.Purpose.CLIENT_AUTH&quot;&gt;&lt;code&gt;Purpose.CLIENT_AUTH&lt;/code&gt;&lt;/a&gt; loads CA certificates for client certificate verification on the server side.</source>
          <target state="translated">&lt;em&gt;目的の&lt;/em&gt;ロードされたCA証明書の種類のフラグを指定します。デフォルト設定の&lt;a href=&quot;#ssl.Purpose.SERVER_AUTH&quot;&gt; &lt;code&gt;Purpose.SERVER_AUTH&lt;/code&gt; &lt;/a&gt;は、TLS Webサーバー認証（クライアント側ソケット）に対してフラグが付けられ、信頼されている証明書をロードします。&lt;a href=&quot;#ssl.Purpose.CLIENT_AUTH&quot;&gt; &lt;code&gt;Purpose.CLIENT_AUTH&lt;/code&gt; &lt;/a&gt;は、サーバー側でクライアント証明書を検証するためのCA証明書をロードします。</target>
        </trans-unit>
        <trans-unit id="4dc1ae68be8c928ff8ced55af039b97dee0f266d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;readrc&lt;/em&gt; argument defaults to true and controls whether Pdb will load .pdbrc files from the filesystem.</source>
          <target state="translated">&lt;em&gt;readrc&lt;/em&gt; PDBがファイルシステムから.pdbrcファイルをロードするかどうかを真とコントロールへの引数のデフォルト。</target>
        </trans-unit>
        <trans-unit id="46e14dc3cbadaa634897551ddab605eacd0ed865" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; argument is as documented for &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;要求&lt;/em&gt;のために文書化されているように引数がある&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd5524c970b27a1790f26c76be61a832fdb402cb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; object (usually a &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; instance) must support the methods &lt;code&gt;get_full_url()&lt;/code&gt;, &lt;code&gt;get_host()&lt;/code&gt;, &lt;code&gt;get_type()&lt;/code&gt;, &lt;code&gt;unverifiable()&lt;/code&gt;, &lt;code&gt;has_header()&lt;/code&gt;, &lt;code&gt;get_header()&lt;/code&gt;, &lt;code&gt;header_items()&lt;/code&gt;, &lt;code&gt;add_unredirected_header()&lt;/code&gt; and &lt;code&gt;origin_req_host&lt;/code&gt; attribute as documented by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;リクエスト&lt;/em&gt;オブジェクト（通常&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;インスタンス）メソッドをサポートしなければならない &lt;code&gt;get_full_url()&lt;/code&gt; 、 &lt;code&gt;get_host()&lt;/code&gt; 、 &lt;code&gt;get_type()&lt;/code&gt; 、 &lt;code&gt;unverifiable()&lt;/code&gt; 、 &lt;code&gt;has_header()&lt;/code&gt; 、 &lt;code&gt;get_header()&lt;/code&gt; 、 &lt;code&gt;header_items()&lt;/code&gt; 、 &lt;code&gt;add_unredirected_header()&lt;/code&gt; と &lt;code&gt;origin_req_host&lt;/code&gt; を&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; で&lt;/a&gt;文書化されている属性。</target>
        </trans-unit>
        <trans-unit id="6076db6f2a9e32f368a89ef0cd834117df42f630" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; object (usually a &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; instance) must support the methods &lt;code&gt;get_full_url()&lt;/code&gt;, &lt;code&gt;get_host()&lt;/code&gt;, &lt;code&gt;unverifiable()&lt;/code&gt;, and &lt;code&gt;origin_req_host&lt;/code&gt; attribute, as documented by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;. The request is used to set default values for cookie-attributes as well as for checking that the cookie is allowed to be set.</source>
          <target state="translated">&lt;em&gt;リクエスト&lt;/em&gt;オブジェクト（通常&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;インスタンス）メソッドをサポートしなければならない &lt;code&gt;get_full_url()&lt;/code&gt; &lt;code&gt;get_host()&lt;/code&gt; 、 &lt;code&gt;unverifiable()&lt;/code&gt; 及び &lt;code&gt;origin_req_host&lt;/code&gt; の属性によって文書化&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;。この要求は、Cookie属性のデフォルト値を設定するため、およびCookieの設定が許可されていることを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e2f1c2f586a7c581cf5d92cb55cc5d4a2a88d0cd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; parameter is limited to values that can fit in 32-bits. Additional constants of interest for use as the &lt;em&gt;request&lt;/em&gt; argument can be found in the &lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt; module, under the same names as used in the relevant C header files.</source>
          <target state="translated">&lt;em&gt;リクエスト&lt;/em&gt;パラメータは、32ビットに収まる値に制限されます。&lt;em&gt;リクエストの&lt;/em&gt;引数として使用する追加の定数は、関連するCヘッダーファイルで使用されているのと同じ名前で、&lt;a href=&quot;termios#module-termios&quot;&gt; &lt;code&gt;termios&lt;/code&gt; &lt;/a&gt;モジュールにあります。</target>
        </trans-unit>
        <trans-unit id="249de6ab2421958fe5451ea48601c9e94f9750cb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;response&lt;/em&gt; object (usually the result of a call to &lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt;&lt;code&gt;urllib.request.urlopen()&lt;/code&gt;&lt;/a&gt;, or similar) should support an &lt;code&gt;info()&lt;/code&gt; method, which returns an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;em&gt;レスポンス・&lt;/em&gt;オブジェクト（TO呼び出しの通常の結果&lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt; &lt;code&gt;urllib.request.urlopen()&lt;/code&gt; &lt;/a&gt;、または同様の）がサポートすべき &lt;code&gt;info()&lt;/code&gt; を返すメソッド、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="04ce21268d40bc71f1f9a9083f103f2659796911" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;response&lt;/em&gt; that is returned as the first item in the return tuple of almost all methods is the server&amp;rsquo;s response: a string beginning with a three-digit code. If the server&amp;rsquo;s response indicates an error, the method raises one of the above exceptions.</source>
          <target state="translated">&lt;em&gt;応答&lt;/em&gt;のほぼすべてのメソッドの戻り値のタプルの最初の項目として返され、サーバーの応答です：3桁のコードで始まる文字列。サーバーの応答がエラーを示している場合、メソッドは上記の例外の1つを発生させます。</target>
        </trans-unit>
        <trans-unit id="2a08f6a3c82a95e392e1e6e160bcc0d359886a5e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;rounding&lt;/em&gt; option is one of the constants listed in the section &lt;a href=&quot;#rounding-modes&quot;&gt;Rounding Modes&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;丸め&lt;/em&gt;オプションは、セクションに記載されている定数の1つです&lt;a href=&quot;#rounding-modes&quot;&gt;丸めモード&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6d46553ec93f51e386c82746a812fbd9cb5fc2e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;safe&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt;, and &lt;em&gt;errors&lt;/em&gt; parameters are passed down to &lt;em&gt;quote_via&lt;/em&gt; (the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters are only passed when a query element is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;安全&lt;/em&gt;、&lt;em&gt;符号化&lt;/em&gt;、及び&lt;em&gt;エラー&lt;/em&gt;パラメータは、に渡される&lt;em&gt;quote_via&lt;/em&gt;（&lt;em&gt;符号化&lt;/em&gt;および&lt;em&gt;エラー&lt;/em&gt;クエリ要素である場合のパラメータのみ渡され&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="45c6ec6d33577622f7757d14f0820e4e75833046" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scheduler&lt;/em&gt; argument must be a tuple containing the (optional) scheduler policy and an instance of &lt;a href=&quot;#os.sched_param&quot;&gt;&lt;code&gt;sched_param&lt;/code&gt;&lt;/a&gt; with the scheduler parameters. A value of &lt;code&gt;None&lt;/code&gt; in the place of the scheduler policy indicates that is not being provided. This argument is a combination of the C library &lt;code&gt;POSIX_SPAWN_SETSCHEDPARAM&lt;/code&gt; and &lt;code&gt;POSIX_SPAWN_SETSCHEDULER&lt;/code&gt; flags.</source>
          <target state="translated">&lt;em&gt;スケジューラ&lt;/em&gt;引数（オプション）スケジューラポリシーのインスタンスタプルでなければならない&lt;a href=&quot;#os.sched_param&quot;&gt; &lt;code&gt;sched_param&lt;/code&gt; &lt;/a&gt;スケジューラパラメータです。スケジューラー・ポリシーの代わりに「 &lt;code&gt;None&lt;/code&gt; の値は、それが提供されていないことを示します。この引数は、Cライブラリの組み合わせです &lt;code&gt;POSIX_SPAWN_SETSCHEDPARAM&lt;/code&gt; と &lt;code&gt;POSIX_SPAWN_SETSCHEDULER&lt;/code&gt; のフラグ。</target>
        </trans-unit>
        <trans-unit id="7ec1f6a11cc0295f4e6de025d3da51e89252d526" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scheme&lt;/em&gt; argument gives the default addressing scheme, to be used only if the URL does not specify one. It should be the same type (text or bytes) as &lt;em&gt;urlstring&lt;/em&gt;, except that the default value &lt;code&gt;''&lt;/code&gt; is always allowed, and is automatically converted to &lt;code&gt;b''&lt;/code&gt; if appropriate.</source>
          <target state="translated">&lt;em&gt;スキームの&lt;/em&gt;引数は、デフォルトのアドレス指定方式を与えるURLは1を指定しない場合にのみ使用すること。これは&lt;em&gt;urlstring&lt;/em&gt;と同じタイプ（テキストまたはバイト）でなければなりませんが、デフォルト値 &lt;code&gt;''&lt;/code&gt; は常に許可され、適切な場合は自動的に &lt;code&gt;b''&lt;/code&gt; 変換されます。</target>
        </trans-unit>
        <trans-unit id="9c3d14f8574339300c0dd4daab37b014b3b42911" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;server_name_callback&lt;/em&gt; callback passed to &lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt;&lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt;&lt;/a&gt; will get an &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; instance instead of a &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; instance as its first parameter.</source>
          <target state="translated">&lt;em&gt;server_name_callbackの&lt;/em&gt;に渡されたコールバック&lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt; &lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt; が&lt;/a&gt;取得する&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;代わりのインスタンス&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;その最初のパラメータとしてインスタンス。</target>
        </trans-unit>
        <trans-unit id="9490a29cd2edeaa045d35fc7cad654528add8e39" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;server_side&lt;/em&gt;, &lt;em&gt;server_hostname&lt;/em&gt; and &lt;em&gt;session&lt;/em&gt; parameters have the same meaning as in &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;server_side&lt;/em&gt;、&lt;em&gt;server_hostname&lt;/em&gt;および&lt;em&gt;セッション&lt;/em&gt;パラメータはにおけるのと同じ意味を持っている&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a673e1ab33e5fd9a4b186a8ac8f33a5a9fa4ca7b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;setpgroup&lt;/em&gt; argument will set the process group of the child to the value specified. If the value specified is 0, the child&amp;rsquo;s process group ID will be made the same as its process ID. If the value of &lt;em&gt;setpgroup&lt;/em&gt; is not set, the child will inherit the parent&amp;rsquo;s process group ID. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETPGROUP&lt;/code&gt; flag.</source>
          <target state="translated">&lt;em&gt;setpgroupの&lt;/em&gt;引数が指定された値に子プロセスのプロセス・グループを設定します。指定した値が0の場合、子のプロセスグループIDはそのプロセスIDと同じになります。&lt;em&gt;setpgroup&lt;/em&gt;の値が設定されていない場合、子は親のプロセスグループIDを継承します。この引数は、Cライブラリの &lt;code&gt;POSIX_SPAWN_SETPGROUP&lt;/code&gt; フラグに対応しています。</target>
        </trans-unit>
        <trans-unit id="ff1d457cea9007b652c10d501e50abc8a21daa32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;setsigmask&lt;/em&gt; argument will set the signal mask to the signal set specified. If the parameter is not used, then the child inherits the parent&amp;rsquo;s signal mask. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETSIGMASK&lt;/code&gt; flag.</source>
          <target state="translated">&lt;em&gt;setsigmaskの&lt;/em&gt;引数が指定されたシグナル・セットにシグナルマスクを設定します。パラメータが使用されていない場合、子は親のシグナルマスクを継承します。この引数は、Cライブラリの &lt;code&gt;POSIX_SPAWN_SETSIGMASK&lt;/code&gt; フラグに対応しています。</target>
        </trans-unit>
        <trans-unit id="a24d31ceaa7c092d726d770a0cf41f125d0aebf5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shallow&lt;/em&gt; parameter has the same meaning and default value as for &lt;a href=&quot;#filecmp.cmp&quot;&gt;&lt;code&gt;filecmp.cmp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;浅いの&lt;/em&gt;パラメーターは、同じ意味とデフォルト値を持っている&lt;a href=&quot;#filecmp.cmp&quot;&gt; &lt;code&gt;filecmp.cmp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a80e01db550d1bd3a7bd6ebc74b18d968e849fe" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shell&lt;/em&gt; argument (which defaults to &lt;code&gt;False&lt;/code&gt;) specifies whether to use the shell as the program to execute. If &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, it is recommended to pass &lt;em&gt;args&lt;/em&gt; as a string rather than as a sequence.</source>
          <target state="translated">&lt;em&gt;シェル&lt;/em&gt;の引数（デフォルト &lt;code&gt;False&lt;/code&gt; ）を実行するためのプログラムとして、シェルを使用するかどうかを指定します。&lt;em&gt;shell&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;em&gt;args&lt;/em&gt;をシーケンスとしてではなく文字列として渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="64685938fa2858e93dc0ebb23445efd4d0c5e167" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sigdef&lt;/em&gt; argument will reset the disposition of all signals in the set specified. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETSIGDEF&lt;/code&gt; flag.</source>
          <target state="translated">&lt;em&gt;sigdef&lt;/em&gt;引数は、指定されたセット内のすべての信号の&lt;em&gt;後処理&lt;/em&gt;をリセットします。この引数は、Cライブラリの &lt;code&gt;POSIX_SPAWN_SETSIGDEF&lt;/code&gt; フラグに対応しています。</target>
        </trans-unit>
        <trans-unit id="6cab8b73313d2d8e8c5f669a403b631d6f400e9f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sign&lt;/em&gt; option is only valid for number types, and can be one of the following:</source>
          <target state="translated">&lt;em&gt;サイン&lt;/em&gt;オプションは数値型に対してのみ有効ですし、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="a1b57cb9c563c9860f94c21c54bbaa756fd93cb9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;signed&lt;/em&gt; argument determines whether two&amp;rsquo;s complement is used to represent the integer. If &lt;em&gt;signed&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a negative integer is given, an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised. The default value for &lt;em&gt;signed&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;署名された&lt;/em&gt;引数は、2の補数の整数を表すために使用されたか否かを判定する。場合は&lt;em&gt;署名が&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; と負の整数が与えられ、&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; をを&lt;/a&gt;上げています。&lt;em&gt;signed&lt;/em&gt;のデフォルト値は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="371f7246c775e34157c3af19c7e256b43858f6a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;signed&lt;/em&gt; argument indicates whether two&amp;rsquo;s complement is used to represent the integer.</source>
          <target state="translated">&lt;em&gt;署名された&lt;/em&gt;引数は、2の補数の整数を表すために使用されているか否かを示します。</target>
        </trans-unit>
        <trans-unit id="c1af8aa11bb01ff7639b96a4988e666df7acd3f2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;size&lt;/em&gt; argument indicates the approximate maximum number of encoded bytes or code points to read for decoding. The decoder can modify this setting as appropriate. The default value -1 indicates to read and decode as much as possible. This parameter is intended to prevent having to decode huge files in one step.</source>
          <target state="translated">&lt;em&gt;サイズ&lt;/em&gt;引数は、復号化のために読むために符号化されたバイトコードポイントのおおよその最大数を示します。デコーダーはこの設定を適切に変更できます。デフォルト値-1は、可能な限り読み取りとデコードを行うことを示します。このパラメータは、1つの手順で巨大なファイルをデコードする必要がないようにするためのものです。</target>
        </trans-unit>
        <trans-unit id="d355dd9c76833b2b080632c6620ca9de793f66dc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;size&lt;/em&gt; argument is normally passed to the decorated test method as an extra argument. If &lt;em&gt;dry_run&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the value passed to the test method may be less than the requested value. If &lt;em&gt;dry_run&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, it means the test doesn&amp;rsquo;t support dummy runs when &lt;code&gt;-M&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;em&gt;サイズ&lt;/em&gt;引数は、通常、余分な引数として飾られたテストメソッドに渡されます。&lt;em&gt;dry_run&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、テストメソッドに渡される値は、要求された値よりも小さい場合があります。&lt;em&gt;dry_run&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;-M&lt;/code&gt; が指定されていない場合、テストはダミー実行をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="151dde5b0ba7cb1869ce8877b126a35442579a25" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;skip&lt;/em&gt; argument, if given, must be an iterable of glob-style module name patterns. The debugger will not step into frames that originate in a module that matches one of these patterns. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;スキップ&lt;/em&gt;引数は、与えられた場合、globスタイルモジュール名パターンの反復可能でなければなりません。デバッガーは、これらのパターンのいずれかに一致するモジュールで発生したフレームにステップインしません。&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c97b4a14038331f376db5a76543fd70a20e5addc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;skip&lt;/em&gt; argument, if given, must be an iterable of glob-style module name patterns. The debugger will not step into frames that originate in a module that matches one of these patterns. Whether a frame is considered to originate in a certain module is determined by the &lt;code&gt;__name__&lt;/code&gt; in the frame globals.</source>
          <target state="translated">&lt;em&gt;スキップ&lt;/em&gt;引数は、与えられた場合、globスタイルモジュール名パターンの反復可能でなければなりません。デバッガーは、これらのパターンのいずれかに一致するモジュールで発生したフレームにステップインしません。フレームが特定のモジュールで発生したと見なされるかどうかは、フレームグローバルの &lt;code&gt;__name__&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="d44decd9d7b523509313fc74a2d69d1a2b290502" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sleep&lt;/em&gt; argument specifies the number of seconds to sleep by between successive attempts to backup remaining pages, can be specified either as an integer or a floating point value.</source>
          <target state="translated">&lt;em&gt;スリープ&lt;/em&gt;引数は、バックアップ残りのページへの連続試行間によりスリープする秒数を指定する整数または浮動小数点値のいずれかとして指定することができます。</target>
        </trans-unit>
        <trans-unit id="166a331e704e3a141fa3c371379efa856fe7128c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sni_callback&lt;/em&gt; function must return &lt;code&gt;None&lt;/code&gt; to allow the TLS negotiation to continue. If a TLS failure is required, a constant &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_*&lt;/code&gt;&lt;/a&gt; can be returned. Other return values will result in a TLS fatal error with &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sni_callbackの&lt;/em&gt;機能は返さない必要があります &lt;code&gt;None&lt;/code&gt; TLS交渉が継続できるようにします。TLSの失敗が必要な場合、定数&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_*&lt;/code&gt; &lt;/a&gt;を返すことができます。他の戻り値は、&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt; で&lt;/a&gt; TLSの致命的なエラーになります。</target>
        </trans-unit>
        <trans-unit id="955cb7b76408c61d468a2564832812df5fa5e51a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter is a sound association name from the registry. If the registry contains no such name, play the system default sound unless &lt;a href=&quot;#winsound.SND_NODEFAULT&quot;&gt;&lt;code&gt;SND_NODEFAULT&lt;/code&gt;&lt;/a&gt; is also specified. If no default sound is registered, raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. Do not use with &lt;a href=&quot;#winsound.SND_FILENAME&quot;&gt;&lt;code&gt;SND_FILENAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;音の&lt;/em&gt;パラメータがレジストリにある音声データに関連付けられた名前です。レジストリにそのような名前が含まれていない場合は、&lt;a href=&quot;#winsound.SND_NODEFAULT&quot;&gt; &lt;code&gt;SND_NODEFAULT&lt;/code&gt; &lt;/a&gt;も指定されていない限り、システムのデフォルトのサウンドを再生します。デフォルトのサウンドが登録されていない場合は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; を送出し&lt;/a&gt;ます。&lt;a href=&quot;#winsound.SND_FILENAME&quot;&gt; &lt;code&gt;SND_FILENAME&lt;/code&gt; &lt;/a&gt;と一緒に使用しないでください。</target>
        </trans-unit>
        <trans-unit id="b134798684044ca68a3fcd2a983ed363cbdb1b27" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter is the name of a WAV file. Do not use with &lt;a href=&quot;#winsound.SND_ALIAS&quot;&gt;&lt;code&gt;SND_ALIAS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;音の&lt;/em&gt;パラメータは、WAVファイルの名前です。&lt;a href=&quot;#winsound.SND_ALIAS&quot;&gt; &lt;code&gt;SND_ALIAS&lt;/code&gt; &lt;/a&gt;と一緒に使用しないでください。</target>
        </trans-unit>
        <trans-unit id="494b12ba5734dc2ca9617a8112a2a9a15dd567ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter to &lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt; is a memory image of a WAV file, as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#winsound.PlaySound&quot;&gt; &lt;code&gt;PlaySound()&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;サウンド&lt;/em&gt;パラメータは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;としてのWAVファイルのメモリイメージです。</target>
        </trans-unit>
        <trans-unit id="03f6dce2a0c575617067c550aeaa2aeb5a0a02ea" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;spawn&lt;/em&gt; and &lt;em&gt;forkserver&lt;/em&gt; start methods</source>
          <target state="translated">&lt;em&gt;卵&lt;/em&gt;と&lt;em&gt;forkserver&lt;/em&gt;スタート法</target>
        </trans-unit>
        <trans-unit id="812f74adf35e9bd9c0a7d57ac0e4adfe7af57bde" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;spec&lt;/em&gt; and &lt;em&gt;spec_set&lt;/em&gt; keyword arguments are passed to the &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; if patch is creating one for you.</source>
          <target state="translated">&lt;em&gt;スペック&lt;/em&gt;と&lt;em&gt;spec_set&lt;/em&gt;引数が渡されたキーワード&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;パッチはあなたのための1つを作成している場合。</target>
        </trans-unit>
        <trans-unit id="bd76eed69117ffe302594bd904142e1af0f14d91" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stacklevel&lt;/em&gt; parameter is passed from code calling the &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; and other APIs. If greater than 1, the excess is used to skip stack frames before determining the values to be returned. This will generally be useful when calling logging APIs from helper/wrapper code, so that the information in the event log refers not to the helper/wrapper code, but to the code that calls it.</source>
          <target state="translated">&lt;em&gt;stacklevel&lt;/em&gt;パラメータは、呼び出し元のコードから渡された&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;および他のAPI。1より大きい場合、超過分は、返される値を決定する前にスタックフレームをスキップするために使用されます。これは通常、ヘルパー/ラッパーコードからログAPIを呼び出すときに役立ちます。そのため、イベントログの情報はヘルパー/ラッパーコードではなく、それを呼び出すコードを参照します。</target>
        </trans-unit>
        <trans-unit id="eee7bb5e1f93d0aa7def4b926657f815b96ba449" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;start_serving&lt;/em&gt; keyword-only parameter to &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; allows creating a Server object that is not accepting connections initially. In this case &lt;code&gt;Server.start_serving()&lt;/code&gt;, or &lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt;&lt;code&gt;Server.serve_forever()&lt;/code&gt;&lt;/a&gt; can be used to make the Server start accepting connections.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;start_serving&lt;/em&gt;キーワードのみのパラメーターを使用すると、最初に接続を受け入れないServerオブジェクトを作成できます。この場合、 &lt;code&gt;Server.start_serving()&lt;/code&gt; または&lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt; &lt;code&gt;Server.serve_forever()&lt;/code&gt; &lt;/a&gt;を使用して、サーバーに接続の受け入れを開始させることができます。</target>
        </trans-unit>
        <trans-unit id="ff845514b67e263cd929598b99bd6da9b00014a1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stmt&lt;/em&gt; and &lt;em&gt;setup&lt;/em&gt; parameters can also take objects that are callable without arguments. This will embed calls to them in a timer function that will then be executed by &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;. Note that the timing overhead is a little larger in this case because of the extra function calls.</source>
          <target state="translated">&lt;em&gt;STMT&lt;/em&gt;および&lt;em&gt;設定&lt;/em&gt;パラメータも引数なしで呼び出し可能なオブジェクトを取ることができます。これにより、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;によって実行されるタイマー関数にそれらの呼び出しが埋め込まれます。この場合、追加の関数呼び出しのために、タイミングのオーバーヘッドが少し大きくなることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d459734c7b70a35885ce8138ec50017c8cb4923e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object open for reading text or binary data, as appropriate for the specific codec.</source>
          <target state="translated">&lt;em&gt;ストリーム&lt;/em&gt;引数には、特定のコーデックに応じて、テキストまたはバイナリデータを読み込むためのファイルオブジェクトのオープンでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9421205ba92f1959114a601b65062efde304270" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object open for writing text or binary data, as appropriate for the specific codec.</source>
          <target state="translated">&lt;em&gt;ストリーム&lt;/em&gt;引数には、ファイルのようなオブジェクトのオープン特定のコーデックに応じて、テキストまたはバイナリデータを書き込むためでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a4f9796f885c7ccb144d9aef721b442954ff6936" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object.</source>
          <target state="translated">&lt;em&gt;ストリーム&lt;/em&gt;引数には、ファイルのようなオブジェクトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e23660071587e149c908f2b1a9eb0b91e48c3be1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;strict_timestamps&lt;/em&gt; argument, when set to &lt;code&gt;False&lt;/code&gt;, allows to zip files older than 1980-01-01 at the cost of setting the timestamp to 1980-01-01. Similar behavior occurs with files newer than 2107-12-31, the timestamp is also set to the limit.</source>
          <target state="translated">&lt;em&gt;strict_timestamps&lt;/em&gt;に設定すると、引数を &lt;code&gt;False&lt;/code&gt; には、1980年1月1日にタイムスタンプを設定するの費用で1980年1月1日より古いzipファイルにできます。2107-12-31より新しいファイルでも同様の動作が発生し、タイムスタンプも制限に設定されます。</target>
        </trans-unit>
        <trans-unit id="4bd056fc144b78ef948e2d71b7ab2d9023d675c2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;style&lt;/em&gt; parameter can be one of &amp;lsquo;%&amp;rsquo;, &amp;lsquo;{&amp;lsquo; or &amp;lsquo;$&amp;rsquo; and determines how the format string will be merged with its data: using one of %-formatting, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#formatting-styles&quot;&gt;Using particular formatting styles throughout your application&lt;/a&gt; for more information on using {- and $-formatting for log messages.</source>
          <target state="translated">&lt;em&gt;スタイル&lt;/em&gt;パラメータが「{」、「％」のいずれかになりますか「$」とは、フォーマット文字列は、そのデータとマージされる方法を決定します。％-formatting、のいずれかを使用して&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; を&lt;/a&gt;。ログメッセージに{-および$ -formattingを使用&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#formatting-styles&quot;&gt;する方法&lt;/a&gt;の詳細については、アプリケーション全体での特定のフォーマットスタイルの使用を参照してください。</target>
        </trans-unit>
        <trans-unit id="f91bb789f435e7bbe9d7a96d06995f3f8d43b2f7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;symbol&lt;/em&gt; argument determines whether &lt;em&gt;source&lt;/em&gt; is compiled as a statement (&lt;code&gt;'single'&lt;/code&gt;, the default) or as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; (&lt;code&gt;'eval'&lt;/code&gt;). Any other value will cause &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">&lt;em&gt;シンボルの&lt;/em&gt;引数は、かどうかを決定する&lt;em&gt;ソースが&lt;/em&gt;声明（としてコンパイルされる &lt;code&gt;'single'&lt;/code&gt; 、デフォルト）または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;表現&lt;/a&gt;（ &lt;code&gt;'eval'&lt;/code&gt; ）。その他の値を指定すると、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="e44c727c722cd091526a9f92fdf653d13be39f3c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;table&lt;/em&gt; argument must be one of the predefined tables in the MSI schema, e.g. &lt;code&gt;'Feature'&lt;/code&gt;, &lt;code&gt;'File'&lt;/code&gt;, &lt;code&gt;'Component'&lt;/code&gt;, &lt;code&gt;'Dialog'&lt;/code&gt;, &lt;code&gt;'Control'&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;em&gt;テーブルの&lt;/em&gt;引数など、MSIスキーマで定義済みのテーブルのいずれかでなければなりません &lt;code&gt;'Feature'&lt;/code&gt; 、 &lt;code&gt;'File'&lt;/code&gt; 、 &lt;code&gt;'Component'&lt;/code&gt; 、 &lt;code&gt;'Dialog'&lt;/code&gt; 、 &lt;code&gt;'Control'&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="43e5dbf1eb2f65e62249791eebe2af8f0a85e617" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; argument is the name of the tag converted to lower case.</source>
          <target state="translated">&lt;em&gt;タグ&lt;/em&gt;引数はタグの名前を小文字に変換しています。</target>
        </trans-unit>
        <trans-unit id="678ee0b27d4f67663dcfba5935b84a5a9919a39f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; argument is the name of the tag converted to lower case. The &lt;em&gt;attrs&lt;/em&gt; argument is a list of &lt;code&gt;(name, value)&lt;/code&gt; pairs containing the attributes found inside the tag&amp;rsquo;s &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; brackets. The &lt;em&gt;name&lt;/em&gt; will be translated to lower case, and quotes in the &lt;em&gt;value&lt;/em&gt; have been removed, and character and entity references have been replaced.</source>
          <target state="translated">&lt;em&gt;タグ&lt;/em&gt;引数はタグの名前を小文字に変換しています。&lt;em&gt;ATTRSの&lt;/em&gt;引数はリストである &lt;code&gt;(name, value)&lt;/code&gt; タグの中に発見する属性を含むペア &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; かっこ。&lt;em&gt;名前は&lt;/em&gt;小文字に変換され、そして引用符&lt;em&gt;値が&lt;/em&gt;削除されている、文字実体参照が置き換えられています。</target>
        </trans-unit>
        <trans-unit id="8055f97fb11a0ac404880fc21479eb1700734e23" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; values are strings, with these meanings:</source>
          <target state="translated">&lt;em&gt;タグ&lt;/em&gt;値は、これらの意味を持つ文字列を、以下のとおりです。</target>
        </trans-unit>
        <trans-unit id="b20f83bb0150a6498b1b44a47a57fb80da5c5a8a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;target&lt;/em&gt; argument determines where the resulting archive will be written:</source>
          <target state="translated">&lt;em&gt;ターゲット&lt;/em&gt;引数は、結果のアーカイブが書き込まれる場所を決定します。</target>
        </trans-unit>
        <trans-unit id="1e10c168e7e125b3ad9c496694fc6cf4572a554e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tarinfo&lt;/em&gt; argument can be used to replace the default &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; class with a different one.</source>
          <target state="translated">&lt;em&gt;TarInfo&lt;/em&gt;引数は、デフォルトの代わりに使用することができ&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;異なるものにクラスを。</target>
        </trans-unit>
        <trans-unit id="526fb955ea344b7381f36e74d15dd0727d123ce0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;testLoader&lt;/em&gt; argument has to be a &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; instance, and defaults to &lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt;&lt;code&gt;defaultTestLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;testLoaderの&lt;/em&gt;引数がなければならない&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; の&lt;/a&gt;インスタンス、およびデフォルト&lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt; &lt;code&gt;defaultTestLoader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ee5fd830ce393d63a0fedec8d6d4ba56b87e218" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;testRunner&lt;/em&gt; argument can either be a test runner class or an already created instance of it. By default &lt;code&gt;main&lt;/code&gt; calls &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; with an exit code indicating success or failure of the tests run.</source>
          <target state="translated">&lt;em&gt;テストランナーの&lt;/em&gt;引数には、いずれかのテストランナークラスまたはそれを既に作成されたインスタンスをすることができます。デフォルトでは、 &lt;code&gt;main&lt;/code&gt; は、実行されたテストの成功または失敗を示す終了コードを使用して&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f1d67f40b7914af3788448149baeacbe91461387" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;timeout&lt;/em&gt; argument is passed to &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt;. If the timeout expires, the child process will be killed and waited for. The &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; exception will be re-raised after the child process has terminated.</source>
          <target state="translated">&lt;em&gt;タイムアウト&lt;/em&gt;引数が渡され&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;。タイムアウトになると、子プロセスは強制終了され、待機されます。&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; の&lt;/a&gt;子プロセスが終了した後に例外が再発生します。</target>
        </trans-unit>
        <trans-unit id="7b693b5b8037c056a4f62f7c7c759475e832507e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;transport&lt;/em&gt; argument is the transport representing the connection. The protocol is responsible for storing the reference to its transport.</source>
          <target state="translated">&lt;em&gt;輸送&lt;/em&gt;引数は、接続を表すトランスポートです。プロトコルは、そのトランスポートへの参照を格納する責任があります。</target>
        </trans-unit>
        <trans-unit id="53c2a3e3b3eb98863bde5d4305376d1fa9980862" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;traps&lt;/em&gt; and &lt;em&gt;flags&lt;/em&gt; fields list any signals to be set. Generally, new contexts should only set traps and leave the flags clear.</source>
          <target state="translated">&lt;em&gt;トラップ&lt;/em&gt;と&lt;em&gt;フラグ&lt;/em&gt;フィールドが設定される任意の信号をリストアップ。一般に、新しいコンテキストはトラップを設定し、フラグをクリアしたままにする必要があります。</target>
        </trans-unit>
        <trans-unit id="4c741294182b97a2d1aa5f08589cea85a0af5c1d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tuple&lt;/em&gt; should be &lt;code&gt;(nchannels, sampwidth, framerate, nframes, comptype,
compname)&lt;/code&gt;, with values valid for the &lt;code&gt;set*()&lt;/code&gt; methods. Sets all parameters.</source>
          <target state="translated">&lt;em&gt;タプルが&lt;/em&gt;なければなりません &lt;code&gt;(nchannels, sampwidth, framerate, nframes, comptype, compname)&lt;/code&gt; の有効な値で、 &lt;code&gt;set*()&lt;/code&gt; メソッド。すべてのパラメータを設定します。</target>
        </trans-unit>
        <trans-unit id="b7ee36144f195c06ce56a0eda12cbb5df2802992" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;type&lt;/em&gt; of an enumeration member is the enumeration it belongs to:</source>
          <target state="translated">列挙型メンバーの&lt;em&gt;タイプ&lt;/em&gt;は、それが属する列挙&lt;em&gt;型&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="31f48dd378c2469953b274b9fc49aab7aa53a5d5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unraisable&lt;/em&gt; argument has the following attributes:</source>
          <target state="translated">&lt;em&gt;unraisable&lt;/em&gt;引数には、次の属性があります。</target>
        </trans-unit>
        <trans-unit id="08cc62e6a77cc57a42acffe8d231f2d3231ee2b4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;use_errno&lt;/em&gt; parameter, when set to true, enables a ctypes mechanism that allows accessing the system &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; error number in a safe way. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; maintains a thread-local copy of the systems &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; variable; if you call foreign functions created with &lt;code&gt;use_errno=True&lt;/code&gt; then the &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; value before the function call is swapped with the ctypes private copy, the same happens immediately after the function call.</source>
          <target state="translated">&lt;em&gt;use_errnoの&lt;/em&gt; trueに設定したパラメータは、システムにアクセスできますctypesのメカニズムが可能&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;安全な方法でエラー番号を。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;は、システムの&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;変数のスレッドローカルコピーを維持します。 &lt;code&gt;use_errno=True&lt;/code&gt; で作成された外部関数を呼び出すと、関数呼び出しがctypesプライベートコピーと入れ替えられる前の&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;値は、関数呼び出しの直後に発生します。</target>
        </trans-unit>
        <trans-unit id="86cfed265a7f536800ec9f3650cbd08a05b9bc49" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;use_last_error&lt;/em&gt; parameter, when set to true, enables the same mechanism for the Windows error code which is managed by the &lt;a href=&quot;#ctypes.GetLastError&quot;&gt;&lt;code&gt;GetLastError()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SetLastError()&lt;/code&gt; Windows API functions; &lt;a href=&quot;#ctypes.get_last_error&quot;&gt;&lt;code&gt;ctypes.get_last_error()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ctypes.set_last_error&quot;&gt;&lt;code&gt;ctypes.set_last_error()&lt;/code&gt;&lt;/a&gt; are used to request and change the ctypes private copy of the windows error code.</source>
          <target state="translated">&lt;em&gt;use_last_errorの&lt;/em&gt; trueに設定すると、パラメータは、によって管理されているWindowsのエラーコードの同じメカニズムが可能&lt;a href=&quot;#ctypes.GetLastError&quot;&gt; &lt;code&gt;GetLastError()&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;SetLastError()&lt;/code&gt; Windows API関数を、&lt;a href=&quot;#ctypes.get_last_error&quot;&gt; &lt;code&gt;ctypes.get_last_error()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ctypes.set_last_error&quot;&gt; &lt;code&gt;ctypes.set_last_error()&lt;/code&gt; &lt;/a&gt;は、Windowsエラーコードのctypesプライベートコピーを要求および変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5423d3d6187ddeee811ab8af8e82496d2df3fc15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;value&lt;/em&gt; argument can be any object, which is then converted to a string.</source>
          <target state="translated">&lt;em&gt;値の&lt;/em&gt;引数は、文字列に変換される任意のオブジェクトとすることができます。</target>
        </trans-unit>
        <trans-unit id="ae0ea92bd8512288395f2eac3ca31db0455c95fe" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;verbose&lt;/em&gt; argument is unused and deprecated.</source>
          <target state="translated">&lt;em&gt;冗長&lt;/em&gt;引数は未使用と非推奨です。</target>
        </trans-unit>
        <trans-unit id="6a3d598de8cb43d84c851a82d72602df8acab107" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;version&lt;/em&gt; argument indicates the data format that &lt;code&gt;dump&lt;/code&gt; should use (see below).</source>
          <target state="translated">&lt;em&gt;バージョン&lt;/em&gt;引数には、データ・フォーマットを示している &lt;code&gt;dump&lt;/code&gt; （下記参照）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="915638ef494048f3a2b93140ef40d6b653d16e99" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;version&lt;/em&gt; argument indicates the data format that &lt;code&gt;dumps&lt;/code&gt; should use (see below).</source>
          <target state="translated">&lt;em&gt;バージョン&lt;/em&gt;引数には、データ形式を示す &lt;code&gt;dumps&lt;/code&gt; （下記参照）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff231d54e756958842b7640abbcd92fef9fd13fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;warnings&lt;/em&gt; argument specifies the &lt;a href=&quot;warnings#warning-filter&quot;&gt;warning filter&lt;/a&gt; that should be used while running the tests. If it&amp;rsquo;s not specified, it will remain &lt;code&gt;None&lt;/code&gt; if a &lt;code&gt;-W&lt;/code&gt; option is passed to &lt;strong&gt;python&lt;/strong&gt; (see &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-warnings&quot;&gt;Warning control&lt;/a&gt;), otherwise it will be set to &lt;code&gt;'default'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;警告の&lt;/em&gt;引数を指定し&lt;a href=&quot;warnings#warning-filter&quot;&gt;、警告フィルタ&lt;/a&gt;テストを実行中に使用すべきです。これが指定されていない場合、 &lt;code&gt;-W&lt;/code&gt; オプションが&lt;strong&gt;pythonに&lt;/strong&gt;渡されると（ &lt;code&gt;None&lt;/code&gt; のまま）（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-warnings&quot;&gt;警告コントロールを&lt;/a&gt;参照）、それ以外の場合は &lt;code&gt;'default'&lt;/code&gt; に設定されます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8821b03c739e7bb5a0c16c56cf4b025ee726fecf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; argument controls the size of the history buffer (or the &amp;ldquo;window size&amp;rdquo;) used when compressing data, and whether a header and trailer is included in the output. It can take several ranges of values, defaulting to &lt;code&gt;15&lt;/code&gt; (MAX_WBITS):</source>
          <target state="translated">&lt;em&gt;WBITS&lt;/em&gt;引数コントロールは、履歴バッファ（または「ウィンドウサイズ」）のサイズは、データを圧縮する際に使用される、とするかどうかをヘッダとトレイラが出力に含まれています。いくつかの範囲の値をとることができ、デフォルトは &lt;code&gt;15&lt;/code&gt; （MAX_WBITS）です。</target>
        </trans-unit>
        <trans-unit id="588d73b4848378951d405715f75f323ade2906e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; parameter controls the size of the history buffer (or &amp;ldquo;window size&amp;rdquo;), and what header and trailer format is expected. It is similar to the parameter for &lt;a href=&quot;#zlib.compressobj&quot;&gt;&lt;code&gt;compressobj()&lt;/code&gt;&lt;/a&gt;, but accepts more ranges of values:</source>
          <target state="translated">&lt;em&gt;WBITS&lt;/em&gt;制御パラメータ履歴バッファのサイズ（または「ウィンドウサイズ」）、およびどのヘッダとトレーラフォーマットが期待されています。これは、&lt;a href=&quot;#zlib.compressobj&quot;&gt; &lt;code&gt;compressobj()&lt;/code&gt; の&lt;/a&gt;パラメーターに似ていますが、より多くの範囲の値を受け入れます。</target>
        </trans-unit>
        <trans-unit id="56f7b96f1606c2648c328d526d73fc9a757e342f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; parameter controls the size of the history buffer (or the &amp;ldquo;window size&amp;rdquo;), and what header and trailer format is expected. It has the same meaning as &lt;a href=&quot;#decompress-wbits&quot;&gt;described for decompress()&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;WBITS&lt;/em&gt;制御パラメータ履歴バッファのサイズ（または「ウィンドウサイズ」）、およびどのヘッダとトレーラフォーマットが期待されています。これは、&lt;a href=&quot;#decompress-wbits&quot;&gt;decompress（）で説明し&lt;/a&gt;たのと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="a39abfdff05160cffd980e736dec49577cf18f65" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;weightA&lt;/em&gt; and &lt;em&gt;weightB&lt;/em&gt; arguments are parameters for a simple digital filter and default to &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;em&gt;weightA&lt;/em&gt;と&lt;em&gt;weightBは&lt;/em&gt;引数の簡単なデジタルフィルタと、デフォルトのパラメータである &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;0&lt;/code&gt; をそれぞれ。</target>
        </trans-unit>
        <trans-unit id="2f53b362c6070875065143332b6ab04bce22e663" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;weights&lt;/em&gt; or &lt;em&gt;cum_weights&lt;/em&gt; can use any numeric type that interoperates with the &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values returned by &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt; (that includes integers, floats, and fractions but excludes decimals). Weights are assumed to be non-negative.</source>
          <target state="translated">&lt;em&gt;重み&lt;/em&gt;又は&lt;em&gt;cum_weightsが&lt;/em&gt;相互運用する任意の数値型を使用することができ&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;値によって返された&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;（整数、浮動小数点数、及び画分が、除外の小数を含むこと）。重みは負ではないと見なされます。</target>
        </trans-unit>
        <trans-unit id="3c17783948cbf0dc9055cd0a70b59a79f07178e5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;winmode&lt;/em&gt; parameter is used on Windows to specify how the library is loaded (since &lt;em&gt;mode&lt;/em&gt; is ignored). It takes any value that is valid for the Win32 API &lt;code&gt;LoadLibraryEx&lt;/code&gt; flags parameter. When omitted, the default is to use the flags that result in the most secure DLL load to avoiding issues such as DLL hijacking. Passing the full path to the DLL is the safest way to ensure the correct library and dependencies are loaded.</source>
          <target state="translated">&lt;em&gt;winmodeの&lt;/em&gt;パラメータは、（以降、ライブラリがロードされる方法を指定するには、Windows上で使用されている&lt;em&gt;モードは&lt;/em&gt;無視されます）。Win32 API &lt;code&gt;LoadLibraryEx&lt;/code&gt; フラグパラメータに有効な任意の値を取ります。省略した場合、デフォルトでは、DLLのハイジャックなどの問題を回避するために最も安全なDLLのロードをもたらすフラグを使用します。DLLへの完全なパスを渡すことは、正しいライブラリと依存関係が読み込まれるようにするための最も安全な方法です。</target>
        </trans-unit>
        <trans-unit id="d4c56f152b380a49d2010425932c120b11eb953a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day&lt;/em&gt; arguments are required. &lt;em&gt;tzinfo&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;, or an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass. The remaining arguments must be integers in the following ranges:</source>
          <target state="translated">&lt;em&gt;年&lt;/em&gt;、&lt;em&gt;月&lt;/em&gt;と&lt;em&gt;日の&lt;/em&gt;引数が必要です。&lt;em&gt;tzinfo&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; か、&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスです。残りの引数は、次の範囲の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d7cce18ab3585b4f15d60b0009c7d580585e27b7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;zdict&lt;/em&gt; parameter specifies a predefined compression dictionary. If provided, this must be the same dictionary as was used by the compressor that produced the data that is to be decompressed.</source>
          <target state="translated">&lt;em&gt;zdict&lt;/em&gt;パラメータを指定A事前に定義された圧縮辞書。指定する場合、これは、圧縮解除するデータを生成した圧縮プログラムが使用した辞書と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="fcf90de0cf7d5a594641c5c96a73337eebf219b6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;preferred&lt;/strong&gt; function to get the running event loop.</source>
          <target state="translated">実行中のイベントループを取得するための&lt;strong&gt;推奨&lt;/strong&gt;関数。</target>
        </trans-unit>
        <trans-unit id="f60d956207da8637154e9bb57b31087cb2d4d778" translate="yes" xml:space="preserve">
          <source>The ABC &lt;code&gt;MyIterable&lt;/code&gt; defines the standard iterable method, &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, as an abstract method. The implementation given here can still be called from subclasses. The &lt;code&gt;get_iterator()&lt;/code&gt; method is also part of the &lt;code&gt;MyIterable&lt;/code&gt; abstract base class, but it does not have to be overridden in non-abstract derived classes.</source>
          <target state="translated">ABC &lt;code&gt;MyIterable&lt;/code&gt; は、標準の反復可能メソッド&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;抽象メソッドとして定義します。ここで指定された実装は、サブクラスから呼び出すことができます。 &lt;code&gt;get_iterator()&lt;/code&gt; メソッドもの一部である &lt;code&gt;MyIterable&lt;/code&gt; 抽象基底クラスが、それは非抽象派生クラスでオーバーライドする必要はありません。</target>
        </trans-unit>
        <trans-unit id="faa22bc6bce0a5e04681e2a974e7cae8acce023c" translate="yes" xml:space="preserve">
          <source>The ADPCM coders have never been tried against other ADPCM coders, only against themselves. It could well be that I misinterpreted the standards in which case they will not be interoperable with the respective standards.</source>
          <target state="translated">ADPCMコーダは、他のADPCMコーダに対して裁判にかけられたことは一度もありません。私が規格を誤解していた可能性もありますが、その場合は、それぞれの規格との相互運用性はありません。</target>
        </trans-unit>
        <trans-unit id="8528587fd89e0952d7a00dbb0e05d60038f18b25" translate="yes" xml:space="preserve">
          <source>The AF_* and SOCK_* constants are now &lt;code&gt;AddressFamily&lt;/code&gt; and &lt;code&gt;SocketKind&lt;/code&gt;&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; collections.</source>
          <target state="translated">AF_ *およびSOCK_ *定数は、 &lt;code&gt;AddressFamily&lt;/code&gt; および &lt;code&gt;SocketKind&lt;/code&gt; &lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;コレクションになりました。</target>
        </trans-unit>
        <trans-unit id="1afb49999cdc36f38970839ccf0a7b7f6b8216b2" translate="yes" xml:space="preserve">
          <source>The API below differs from textbook heap algorithms in two aspects: (a) We use zero-based indexing. This makes the relationship between the index for a node and the indexes for its children slightly less obvious, but is more suitable since Python uses zero-based indexing. (b) Our pop method returns the smallest item, not the largest (called a &amp;ldquo;min heap&amp;rdquo; in textbooks; a &amp;ldquo;max heap&amp;rdquo; is more common in texts because of its suitability for in-place sorting).</source>
          <target state="translated">以下のAPIは、2つの点でテキストヒープアルゴリズムと異なります。（a）ゼロベースのインデックスを使用します。これにより、ノードのインデックスとその子のインデックスの関係が少しわかりにくくなりますが、Pythonはゼロベースのインデックスを使用するため、より適しています。（b）popメソッドは、最大ではなく最小の項目を返します（教科書では「最小ヒープ」と呼ばれます。「最大ヒープ」は、インプレースソートに適しているため、テキストではより一般的です）。</target>
        </trans-unit>
        <trans-unit id="76f3b439a545c7eb9ff445a4bdd93b428bc75166" translate="yes" xml:space="preserve">
          <source>The API provided by this module is likely to change in future releases; such changes may not be backward compatible.</source>
          <target state="translated">このモジュールが提供するAPIは、将来のリリースで変更される可能性があり、そのような変更は下位互換性がない可能性があります。</target>
        </trans-unit>
        <trans-unit id="e322260aafb4a2f2a2ca6cdac3c65b6a2316bc3a" translate="yes" xml:space="preserve">
          <source>The Any type</source>
          <target state="translated">任意のタイプの</target>
        </trans-unit>
        <trans-unit id="e1f06186c630db765adc5cb7fa1d1a7415bae3ea" translate="yes" xml:space="preserve">
          <source>The AutoCompleteWindow (ACW) will open after a predefined delay (default is two seconds) after a &amp;lsquo;.&amp;rsquo; or (in a string) an os.sep is typed. If after one of those characters (plus zero or more other characters) a tab is typed the ACW will open immediately if a possible continuation is found.</source>
          <target state="translated">AutoCompleteWindow（ACW）は、「。」の後、事前定義された遅延（デフォルトは2秒）の後に開きます。または（文字列で）os.sepが入力されます。これらの文字のいずれか（および0個以上の他の文字）の後にタブが入力された場合、可能な継続が見つかると、ACWはすぐに開きます。</target>
        </trans-unit>
        <trans-unit id="b2041194f9f02b3ffb833c005cb8c357700fb19a" translate="yes" xml:space="preserve">
          <source>The BCJ filters are intended to be applied to machine code. They convert relative branches, calls and jumps in the code to use absolute addressing, with the aim of increasing the redundancy that can be exploited by the compressor. These filters support one option, &lt;code&gt;start_offset&lt;/code&gt;. This specifies the address that should be mapped to the beginning of the input data. The default is 0.</source>
          <target state="translated">BCJフィルターは、マシンコードに適用することを目的としています。これらは、コードで相対分岐、呼び出し、およびジャンプを変換して、絶対アドレッシングを使用し、コンプレッサーで利用できる冗長性を高めることを目的としています。これらのフィルターは、1つのオプション &lt;code&gt;start_offset&lt;/code&gt; をサポートします。入力データの先頭にマッピングするアドレスを指定します。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="c2e8e2dc67f7620982af31145da08c3a0edd2e25" translate="yes" xml:space="preserve">
          <source>The BSD name for &lt;a href=&quot;#resource.RLIMIT_NOFILE&quot;&gt;&lt;code&gt;RLIMIT_NOFILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resource.RLIMIT_NOFILE&quot;&gt; &lt;code&gt;RLIMIT_NOFILE&lt;/code&gt; &lt;/a&gt;のBSD名。</target>
        </trans-unit>
        <trans-unit id="8bd75df7a2ed31b671b15ba9f2a6053a27354cf7" translate="yes" xml:space="preserve">
          <source>The C API version for this interpreter. Programmers may find this useful when debugging version conflicts between Python and extension modules.</source>
          <target state="translated">このインタプリタの C API バージョン。プログラマは、Python と拡張モジュール間のバージョンの競合をデバッグする際に便利です。</target>
        </trans-unit>
        <trans-unit id="e54c0cca00a30bb23c9c25454179867adcaae900" translate="yes" xml:space="preserve">
          <source>The C code was partly rewritten for Python by &lt;em&gt;Christian Heimes&lt;/em&gt;.</source>
          <target state="translated">Cコードは、&lt;em&gt;Christian Heimes&lt;/em&gt;によってPython用に部分的に書き直され&lt;em&gt;ました&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3987a1d7761e1a27305f1fc4189f71d26993d320" translate="yes" xml:space="preserve">
          <source>The C standard defines the locale as a program-wide property that may be relatively expensive to change. On top of that, some implementation are broken in such a way that frequent locale changes may cause core dumps. This makes the locale somewhat painful to use correctly.</source>
          <target state="translated">C標準ではロケールをプログラム全体のプロパティとして定義しており、変更には比較的コストがかかる可能性があります。その上、いくつかの実装では、頻繁にロケールを変更するとコアダンプが発生するような壊れ方をしています。このため、ロケールを正しく使うには少々骨の折れるものとなっています。</target>
        </trans-unit>
        <trans-unit id="8d971f33fa3546c84e58c819f6dfcf232e9c699b" translate="yes" xml:space="preserve">
          <source>The CSS class for a weekday occurring in the previous or coming month.</source>
          <target state="translated">前月または来月に発生する平日のCSSクラス。</target>
        </trans-unit>
        <trans-unit id="504a86218f68cab32113c8eb840de3669681f12d" translate="yes" xml:space="preserve">
          <source>The CSS class for the table head for the whole year (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;year&quot;&lt;/code&gt;.</source>
          <target state="translated">通年のテーブルヘッドのCSSクラス（&lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; で&lt;/a&gt;使用）。デフォルト値は &lt;code&gt;&quot;year&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ee09fe1f5481a133063a3d6ee9e619dcd1e87e5" translate="yes" xml:space="preserve">
          <source>The CSS class for the whole month&amp;rsquo;s table (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatmonth&quot;&gt;&lt;code&gt;formatmonth()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;month&quot;&lt;/code&gt;.</source>
          <target state="translated">月全体のテーブルのCSSクラス（&lt;a href=&quot;#calendar.HTMLCalendar.formatmonth&quot;&gt; &lt;code&gt;formatmonth()&lt;/code&gt; で&lt;/a&gt;使用）。デフォルト値は &lt;code&gt;&quot;month&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="772191c229f3b2e05ab1df0d074ffe18b8d47d83" translate="yes" xml:space="preserve">
          <source>The CSS class for the whole year&amp;rsquo;s table of tables (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;year&quot;&lt;/code&gt;.</source>
          <target state="translated">通年のテーブルテーブルのCSSクラス（&lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; で&lt;/a&gt;使用）。デフォルト値は &lt;code&gt;&quot;year&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7103ea431534ee4b79f98427b6116337e9dc5615" translate="yes" xml:space="preserve">
          <source>The Catalog constructor</source>
          <target state="translated">カタログのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="96cf03cbb4d0932be4497cf99cf72eade4d3bc41" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 recommendation defines a single exception, &lt;a href=&quot;#xml.dom.DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt;, and a number of constants that allow applications to determine what sort of error occurred. &lt;a href=&quot;#xml.dom.DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; instances carry a &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute that provides the appropriate value for the specific exception.</source>
          <target state="translated">DOMレベル2の推奨事項では、単一の例外&lt;a href=&quot;#xml.dom.DOMException&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;と、アプリケーションが発生したエラーの種類を判別できるようにするいくつかの定数を定義しています。&lt;a href=&quot;#xml.dom.DOMException&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;インスタンスは、特定の例外に適切な値を提供する&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性を保持します。</target>
        </trans-unit>
        <trans-unit id="947495ed5aa7070a06069dcaba8341b2fcdc9d42" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 recommendation defines one method and one attribute for these objects:</source>
          <target state="translated">DOM Level 2 の勧告では、これらのオブジェクトに対して 1 つのメソッドと 1 つの属性が定義されています。</target>
        </trans-unit>
        <trans-unit id="b5ba2f5f1b68b0824d76ea1829d1ce34696f29a6" translate="yes" xml:space="preserve">
          <source>The DOM is extremely useful for random-access applications. SAX only allows you a view of one bit of the document at a time. If you are looking at one SAX element, you have no access to another. If you are looking at a text node, you have no access to a containing element. When you write a SAX application, you need to keep track of your program&amp;rsquo;s position in the document somewhere in your own code. SAX does not do it for you. Also, if you need to look ahead in the XML document, you are just out of luck.</source>
          <target state="translated">DOMはランダムアクセスアプリケーションに非常に役立ちます。SAXでは、一度に1ビットのドキュメントしか表示できません。1つのSAX要素を表示している場合、別の要素にアクセスすることはできません。テキストノードを表示している場合、包含要素にはアクセスできません。SAXアプリケーションを作成するときは、独自のコードのどこかにある文書内でのプログラムの位置を追跡する必要があります。SAXはあなたのためにそれをしません。また、XMLドキュメントを先読みする必要がある場合は、運が悪いだけです。</target>
        </trans-unit>
        <trans-unit id="6f03607955e97fbc57d05556b36ae065c2787ae3" translate="yes" xml:space="preserve">
          <source>The Document Object Model is being defined by the W3C in stages, or &amp;ldquo;levels&amp;rdquo; in their terminology. The Python mapping of the API is substantially based on the DOM Level 2 recommendation.</source>
          <target state="translated">ドキュメントオブジェクトモデルは、W3Cによって段階的に、または用語の「レベル」で定義されています。APIのPythonマッピングは、実質的にDOMレベル2の推奨に基づいています。</target>
        </trans-unit>
        <trans-unit id="3e5ece1120688047118eff8518636d6814ff5e85" translate="yes" xml:space="preserve">
          <source>The Document Object Model, or &amp;ldquo;DOM,&amp;rdquo; is a cross-language API from the World Wide Web Consortium (W3C) for accessing and modifying XML documents. A DOM implementation presents an XML document as a tree structure, or allows client code to build such a structure from scratch. It then gives access to the structure through a set of objects which provided well-known interfaces.</source>
          <target state="translated">Document Object Model、つまり「DOM」は、XMLドキュメントにアクセスして変更するためのWorld Wide Web Consortium（W3C）のクロス言語APIです。DOM実装は、XMLドキュメントをツリー構造として提示するか、クライアントコードがそのような構造をゼロから構築できるようにします。次に、既知のインターフェースを提供するオブジェクトのセットを介して構造へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="1ce2ab8c2362dbe23653589b17cfaf7def8ffd50" translate="yes" xml:space="preserve">
          <source>The ElementInclude module replaces the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element with the root element from the &lt;strong&gt;source.xml&lt;/strong&gt; document. The result might look something like this:</source>
          <target state="translated">ElementIncludeモジュールは、 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; &lt;strong&gt;include&lt;/strong&gt;要素を&lt;strong&gt;source.xml&lt;/strong&gt;ドキュメントのルート要素に&lt;strong&gt;置き換え&lt;/strong&gt;ます。結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="9af5016a363dd95d607deaf0cfed0a4507aba7fa" translate="yes" xml:space="preserve">
          <source>The Ellipsis Object</source>
          <target state="translated">楕円形オブジェクト</target>
        </trans-unit>
        <trans-unit id="f32c4d6597786d2d5b11af91f776181bf1e19cc5" translate="yes" xml:space="preserve">
          <source>The Enum members. This can be a whitespace or comma separated string (values will start at 1 unless otherwise specified):</source>
          <target state="translated">Enum のメンバー。これは、空白またはカンマで区切られた文字列です (特に指定がない限り、値は1から始まります)。</target>
        </trans-unit>
        <trans-unit id="9ea9c857f769b13c24616d563b892a00d4487c4a" translate="yes" xml:space="preserve">
          <source>The Expat XML Parser</source>
          <target state="translated">エクスパット XML パーサー</target>
        </trans-unit>
        <trans-unit id="87d6d8f851f8a21b755e3b2015fc0f3520bceff4" translate="yes" xml:space="preserve">
          <source>The FAQ for the &lt;strong&gt;fetchmail&lt;/strong&gt; POP/IMAP client collects information on POP3 server variations and RFC noncompliance that may be useful if you need to write an application based on the POP protocol.</source>
          <target state="translated">&lt;strong&gt;fetchmail&lt;/strong&gt; POP / IMAPクライアントのFAQは、POP3サーバーのバリエーションとRFCの非準拠に関する情報を収集します。これらの情報は、POPプロトコルに基づいてアプリケーションを作成する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3b7b076070cfeaac7ce8d6b6005200d5cc7bf13d" translate="yes" xml:space="preserve">
          <source>The FIPS 180-2 publication on Secure Hash Algorithms.</source>
          <target state="translated">セキュアハッシュアルゴリズムに関するFIPS 180-2の出版物。</target>
        </trans-unit>
        <trans-unit id="a740e018f19ed6fd64cc21ac3ef422a76d04f855" translate="yes" xml:space="preserve">
          <source>The Future object was designed to mimic &lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt;&lt;code&gt;concurrent.futures.Future&lt;/code&gt;&lt;/a&gt;. Key differences include:</source>
          <target state="translated">Futureオブジェクトは、&lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt; &lt;code&gt;concurrent.futures.Future&lt;/code&gt; &lt;/a&gt;を模倣するように設計されています。主な違いは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f8b73749b9403577a859cf4146436530c3030907" translate="yes" xml:space="preserve">
          <source>The GC classifies objects into three generations depending on how many collection sweeps they have survived. New objects are placed in the youngest generation (generation &lt;code&gt;0&lt;/code&gt;). If an object survives a collection it is moved into the next older generation. Since generation &lt;code&gt;2&lt;/code&gt; is the oldest generation, objects in that generation remain there after a collection. In order to decide when to run, the collector keeps track of the number object allocations and deallocations since the last collection. When the number of allocations minus the number of deallocations exceeds &lt;em&gt;threshold0&lt;/em&gt;, collection starts. Initially only generation &lt;code&gt;0&lt;/code&gt; is examined. If generation &lt;code&gt;0&lt;/code&gt; has been examined more than &lt;em&gt;threshold1&lt;/em&gt; times since generation &lt;code&gt;1&lt;/code&gt; has been examined, then generation &lt;code&gt;1&lt;/code&gt; is examined as well. Similarly, &lt;em&gt;threshold2&lt;/em&gt; controls the number of collections of generation &lt;code&gt;1&lt;/code&gt; before collecting generation &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">GCは、オブジェクトが生き残ったコレクションスイープの数に応じて、オブジェクトを3つの世代に分類します。新しいオブジェクトは、最も新しい世代（世代 &lt;code&gt;0&lt;/code&gt; ）に配置されます。オブジェクトがコレクションを生き延びた場合、次の古い世代に移動されます。世代 &lt;code&gt;2&lt;/code&gt; は最も古い世代であるため、その世代のオブジェクトはコレクション後もそこに残ります。いつ実行するかを決定するために、コレクターは最後のコレクション以降のオブジェクトの割り当てと割り当て解除の数を追跡します。割り当ての数から割り当て解除の数を引いた数が&lt;em&gt;threshold0&lt;/em&gt;を&lt;em&gt;超えると&lt;/em&gt;、収集が開始されます。最初は世代 &lt;code&gt;0&lt;/code&gt; のみが検査されます。世代 &lt;code&gt;0&lt;/code&gt; が&lt;em&gt;しきい値1&lt;/em&gt;よりも多く調べられた&lt;em&gt;場合&lt;/em&gt;世代以降の回 &lt;code&gt;1&lt;/code&gt; 世代、その後、検討されている &lt;code&gt;1&lt;/code&gt; ウェルとして検討されています。同様に、&lt;em&gt;threshold2&lt;/em&gt;は、世代 &lt;code&gt;2&lt;/code&gt; を収集する前に世代 &lt;code&gt;1&lt;/code&gt; の収集の数を制御します。</target>
        </trans-unit>
        <trans-unit id="1ae2bdc70c1e8e7581209a0a31a94868a49311af" translate="yes" xml:space="preserve">
          <source>The GNU tar format (&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt;). It supports long filenames and linknames, files bigger than 8 GiB and sparse files. It is the de facto standard on GNU/Linux systems. &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; fully supports the GNU tar extensions for long names, sparse file support is read-only.</source>
          <target state="translated">GNU tarフォーマット（&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt; &lt;code&gt;GNU_FORMAT&lt;/code&gt; &lt;/a&gt;）。長いファイル名とリンク名、8 GiBより大きいファイル、スパースファイルをサポートしています。これは、GNU / Linuxシステムの事実上の標準です。&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;は長い名前のGNU tar拡張を完全にサポートしています。スパースファイルのサポートは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="112e6111d5aee2deded99838bec29a35f5e5765a" translate="yes" xml:space="preserve">
          <source>The HKEY object implements &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; and thus supports the context protocol for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">HKEYオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;を実装しているため、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントのコンテキストプロトコルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c71c33c40ba7395c73110a285fefd5bc28a566e0" translate="yes" xml:space="preserve">
          <source>The HTML rendering, and some liberal editing, was produced from a FrameMaker version by Ken Manheimer.</source>
          <target state="translated">HTMLのレンダリングと多少の自由な編集は、Ken Manheimer氏によるFrameMakerのバージョンから作成されました。</target>
        </trans-unit>
        <trans-unit id="895c87c33e6e85565a15be7d071b5d53c67b0b24" translate="yes" xml:space="preserve">
          <source>The HTTP headers used for error responses. This should be a list of WSGI response headers (&lt;code&gt;(name, value)&lt;/code&gt; tuples), as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. The default list just sets the content type to &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">エラー応答に使用されるHTTPヘッダー。&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 3333で&lt;/strong&gt;&lt;/a&gt;説明されているように、これはWSGI応答ヘッダー（ &lt;code&gt;(name, value)&lt;/code&gt; タプル）のリストである必要があります。デフォルトのリストは、コンテンツタイプを &lt;code&gt;text/plain&lt;/code&gt; に設定するだけです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc84f6a14e073ef0781e89812bc11bcc21df30a7" translate="yes" xml:space="preserve">
          <source>The HTTP request method to use. By default its value is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, which means that &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt; will do its normal computation of the method to be used. Its value can be set (thus overriding the default computation in &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt;) either by providing a default value by setting it at the class level in a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; subclass, or by passing a value in to the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; constructor via the &lt;em&gt;method&lt;/em&gt; argument.</source>
          <target state="translated">使用するHTTPリクエストメソッド。デフォルトでは、その値は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。つまり、&lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt; &lt;code&gt;get_method()&lt;/code&gt; &lt;/a&gt;は、使用されるメソッドの通常の計算を行います。その値は、&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;サブクラスのクラスレベルで設定することによってデフォルト値を提供するか、または&lt;em&gt;メソッド&lt;/em&gt;引数を介して&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;コンストラクターに値を渡すことによって設定できます（したがって、&lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt; &lt;code&gt;get_method()&lt;/code&gt; の&lt;/a&gt;デフォルト計算をオーバーライドします）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="102e26b238faccf8b9327c868bff78cb340168c8" translate="yes" xml:space="preserve">
          <source>The HTTP response headers for the HTTP request that caused the &lt;a href=&quot;#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; の&lt;/a&gt;原因となったHTTPリクエストのHTTP応答ヘッダー。</target>
        </trans-unit>
        <trans-unit id="875aaefb3d305183b3f017feb60dceacc6899535" translate="yes" xml:space="preserve">
          <source>The HTTP status used for error responses. This should be a status string as defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;; it defaults to a 500 code and message.</source>
          <target state="translated">エラー応答に使用されるHTTPステータス。これは&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 3333で&lt;/strong&gt;&lt;/a&gt;定義されているステータス文字列である必要があります。デフォルトでは500コードとメッセージです。</target>
        </trans-unit>
        <trans-unit id="7ec9df72f5c095b2cb5ecc4f03530853db502b81" translate="yes" xml:space="preserve">
          <source>The I/O mode for the file, either &lt;code&gt;&quot;r&quot;&lt;/code&gt;, &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, or &lt;code&gt;&quot;w&quot;&lt;/code&gt;.</source>
          <target state="translated">ファイルのI / Oモード。 &lt;code&gt;&quot;r&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;rw&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;w&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b613d88a17aac3a0fe826d3aec8b07e41aebbb46" translate="yes" xml:space="preserve">
          <source>The ID is a 4-byte string which identifies the type of chunk.</source>
          <target state="translated">ID はチャンクの種類を識別する 4 バイトの文字列です。</target>
        </trans-unit>
        <trans-unit id="221f6efb5eebf643c4c6862eda19d65b5773f066" translate="yes" xml:space="preserve">
          <source>The ID of the integrity check used by the input stream. This may be &lt;code&gt;CHECK_UNKNOWN&lt;/code&gt; until enough of the input has been decoded to determine what integrity check it uses.</source>
          <target state="translated">入力ストリームによって使用される整合性チェックのID。使用する整合性チェックを決定するのに十分な入力がデコードされるまで、これは &lt;code&gt;CHECK_UNKNOWN&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="5d699dfb29e673ac9b34d385b78f0cb6477d087f" translate="yes" xml:space="preserve">
          <source>The IDL definitions do not fully embody the requirements of the W3C DOM API, such as the notion of certain objects, such as the return value of &lt;code&gt;getElementsByTagName()&lt;/code&gt;, being &amp;ldquo;live&amp;rdquo;. The Python DOM API does not require implementations to enforce such requirements.</source>
          <target state="translated">IDL定義は、 &lt;code&gt;getElementsByTagName()&lt;/code&gt; の戻り値などの特定のオブジェクトの概念が「ライブ」であるなど、W3C DOM APIの要件を完全に具体化していません。Python DOM APIは、そのような要件を実施するための実装を必要としません。</target>
        </trans-unit>
        <trans-unit id="73534adea22ef371fa587b81eb62e33afe03dae6" translate="yes" xml:space="preserve">
          <source>The IDL types used in the DOM specification are mapped to Python types according to the following table.</source>
          <target state="translated">DOM 仕様で使用されている IDL 型は、以下の表に従って Python 型にマッピングされています。</target>
        </trans-unit>
        <trans-unit id="9e8e9b8afe37760ceaad6d8ab19fbe4d24ba22a6" translate="yes" xml:space="preserve">
          <source>The IDLE code running in the execution process adds frames to the call stack that would not be there otherwise. IDLE wraps &lt;code&gt;sys.getrecursionlimit&lt;/code&gt; and &lt;code&gt;sys.setrecursionlimit&lt;/code&gt; to reduce the effect of the additional stack frames.</source>
          <target state="translated">実行プロセスで実行されているIDLEコードは、他の方法では存在しないフレームをコールスタックに追加します。IDLEは &lt;code&gt;sys.getrecursionlimit&lt;/code&gt; と &lt;code&gt;sys.setrecursionlimit&lt;/code&gt; をラップして、追加のスタックフレームの影響を減らします。</target>
        </trans-unit>
        <trans-unit id="4f9a8214de2797a406bbc420c4dc6181a8c731c9" translate="yes" xml:space="preserve">
          <source>The IEEE 754 binary16 &amp;ldquo;half precision&amp;rdquo; type was introduced in the 2008 revision of the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point#IEEE_754-2008&quot;&gt;IEEE 754 standard&lt;/a&gt;. It has a sign bit, a 5-bit exponent and 11-bit precision (with 10 bits explicitly stored), and can represent numbers between approximately &lt;code&gt;6.1e-05&lt;/code&gt; and &lt;code&gt;6.5e+04&lt;/code&gt; at full precision. This type is not widely supported by C compilers: on a typical machine, an unsigned short can be used for storage, but not for math operations. See the Wikipedia page on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&quot;&gt;half-precision floating-point format&lt;/a&gt; for more information.</source>
          <target state="translated">IEEE 754バイナリ16の「半精度」タイプは、&lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point#IEEE_754-2008&quot;&gt;IEEE 754標準の&lt;/a&gt; 2008年改訂で導入されました。符号ビット、5ビットの指数、11ビットの精度（10ビットが明示的に格納されています）があり、約 &lt;code&gt;6.1e-05&lt;/code&gt; から &lt;code&gt;6.5e+04&lt;/code&gt; までの数値を完全な精度で表すことができます。このタイプは、Cコンパイラでは広くサポートされていません。通常のマシンでは、符号なしshortをストレージに使用できますが、数学演算には使用できません。詳細については、&lt;a href=&quot;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&quot;&gt;半精度浮動小数点形式&lt;/a&gt;のWikipediaページを参照してください。</target>
        </trans-unit>
        <trans-unit id="b24db9631befbb1d797b6887700ff491fc6cb519" translate="yes" xml:space="preserve">
          <source>The IEEE 754 special values of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt;, and &lt;code&gt;-inf&lt;/code&gt; will be handled according to IEEE rules. Specifically, &lt;code&gt;NaN&lt;/code&gt; is not considered close to any other value, including &lt;code&gt;NaN&lt;/code&gt;. &lt;code&gt;inf&lt;/code&gt; and &lt;code&gt;-inf&lt;/code&gt; are only considered close to themselves.</source>
          <target state="translated">IEEE 754の &lt;code&gt;NaN&lt;/code&gt; 、 &lt;code&gt;inf&lt;/code&gt; 、および &lt;code&gt;-inf&lt;/code&gt; の特別な値は、IEEE規則に従って処理されます。具体的には、 &lt;code&gt;NaN&lt;/code&gt; は &lt;code&gt;NaN&lt;/code&gt; を含む他の値に近いとは見なされません。 &lt;code&gt;inf&lt;/code&gt; と &lt;code&gt;-inf&lt;/code&gt; は、それら自体に近いと見なされます。</target>
        </trans-unit>
        <trans-unit id="2623b34e7e6ad22abb7cc5f224cc233ff2421da0" translate="yes" xml:space="preserve">
          <source>The ISO calendar is a widely used variant of the Gregorian calendar. &lt;a href=&quot;#id7&quot; id=&quot;id3&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">ISOカレンダーは、広く使用されているグレゴリオ暦の変形です。&lt;a href=&quot;#id7&quot; id=&quot;id3&quot;&gt;３&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e5ad6d935091f9e83d009d71f64cd300714d7ea" translate="yes" xml:space="preserve">
          <source>The ISO year consists of 52 or 53 full weeks, and where a week starts on a Monday and ends on a Sunday. The first week of an ISO year is the first (Gregorian) calendar week of a year containing a Thursday. This is called week number 1, and the ISO year of that Thursday is the same as its Gregorian year.</source>
          <target state="translated">ISO年は52または53週で構成されており、1週間が月曜日に始まり、日曜日に終了します。ISO年の最初の週は、木曜日を含む年の最初の(グレゴリオ暦の)カレンダー週です。これは第1週目と呼ばれ、その木曜日のISO年はグレゴリオ暦の年と同じです。</target>
        </trans-unit>
        <trans-unit id="1f9f1f2433b85fce4cb660f34278dfa1065ffa23" translate="yes" xml:space="preserve">
          <source>The JSON document being parsed.</source>
          <target state="translated">解析されている JSON ドキュメント。</target>
        </trans-unit>
        <trans-unit id="9334515a214a3518850a43c548ab10b96e20d520" translate="yes" xml:space="preserve">
          <source>The JSON file to be validated or pretty-printed:</source>
          <target state="translated">検証対象のJSONファイル、またはプリティプリントされたもの。</target>
        </trans-unit>
        <trans-unit id="cb1b5cf7601644b9782c510e837b5298f18e72db" translate="yes" xml:space="preserve">
          <source>The JSON format is specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; and by &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404&lt;/a&gt;. This section details this module&amp;rsquo;s level of compliance with the RFC. For simplicity, &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; subclasses, and parameters other than those explicitly mentioned, are not considered.</source>
          <target state="translated">JSON形式は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404で&lt;/a&gt;指定されてい&lt;strong&gt;ます&lt;/strong&gt;。このセクションでは、このモジュールのRFCへの準拠レベルについて詳しく説明します。簡単にするために、&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; の&lt;/a&gt;サブクラス、および明示的に言及されたもの以外のパラメーターは考慮されません。</target>
        </trans-unit>
        <trans-unit id="876e1c3c101a9ec9b7e2f177815520f974d7df87" translate="yes" xml:space="preserve">
          <source>The Julian day &lt;em&gt;n&lt;/em&gt; (1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 365). Leap days are not counted, so in all years February 28 is day 59 and March 1 is day 60.</source>
          <target state="translated">ユリウス日&lt;em&gt;n&lt;/em&gt;（1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 365）。うるう日はカウントされないため、すべての年において2月28日は59日目で、3月1日は60日目です。</target>
        </trans-unit>
        <trans-unit id="e536171d6fc7a17689f9e357f627d94a3ea3655f" translate="yes" xml:space="preserve">
          <source>The LMTP protocol, which is very similar to ESMTP, is heavily based on the standard SMTP client. It&amp;rsquo;s common to use Unix sockets for LMTP, so our &lt;code&gt;connect()&lt;/code&gt; method must support that as well as a regular host:port server. The optional arguments local_hostname and source_address have the same meaning as they do in the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class. To specify a Unix socket, you must use an absolute path for &lt;em&gt;host&lt;/em&gt;, starting with a &amp;lsquo;/&amp;rsquo;.</source>
          <target state="translated">ESMTPによく似たLMTPプロトコルは、標準のSMTPクライアントに大きく基づいています。LMTPにはUnixソケットを使用するのが一般的であるため、 &lt;code&gt;connect()&lt;/code&gt; メソッドは通常のhost：portサーバーと同様にそれをサポートする必要があります。オプションの引数local_hostnameおよびsource_addressは、&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;クラスと同じ意味です。Unixソケットを指定するには、「/」で始まる&lt;em&gt;ホストの&lt;/em&gt;絶対パスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d3fba6ce34a94ace0a97a85e907800f74b784af9" translate="yes" xml:space="preserve">
          <source>The LogRecord has a number of attributes, most of which are derived from the parameters to the constructor. (Note that the names do not always correspond exactly between the LogRecord constructor parameters and the LogRecord attributes.) These attributes can be used to merge data from the record into the format string. The following table lists (in alphabetical order) the attribute names, their meanings and the corresponding placeholder in a %-style format string.</source>
          <target state="translated">LogRecord には多くの属性があり、そのほとんどはコンストラクタのパラメータから派生したものです(名前が必ずしも LogRecord のコンストラクタのパラメータと LogRecord の属性の間で正確に対応しているわけではないことに注意してください)。(名前は常に LogRecord コンストラクタのパラメータと LogRecord 属性の間で正確に対応しているとは限らないことに注意してください)。これらの属性は、レコードからフォーマット文字列にデータをマージするために使用できます。次の表は、属性名、その意味、および % スタイルのフォーマット文字列に対応するプレースホルダを (アルファベット順に)リストしています。</target>
        </trans-unit>
        <trans-unit id="b7fd284826bbd625b7ac5342e8ef0b2f60f602e7" translate="yes" xml:space="preserve">
          <source>The Maildir specification requires the use of a colon (&lt;code&gt;':'&lt;/code&gt;) in certain message file names. However, some operating systems do not permit this character in file names, If you wish to use a Maildir-like format on such an operating system, you should specify another character to use instead. The exclamation point (&lt;code&gt;'!'&lt;/code&gt;) is a popular choice. For example:</source>
          <target state="translated">Maildir仕様では、特定のメッセージファイル名にコロン（ &lt;code&gt;':'&lt;/code&gt; ）を使用する必要があります。ただし、一部のオペレーティングシステムでは、ファイル名にこの文字を使用できません。そのようなオペレーティングシステムでMaildirのような形式を使用する場合は、代わりに使用する別の文字を指定する必要があります。感嘆符（ &lt;code&gt;'!'&lt;/code&gt; ）が一般的な選択肢です。例えば：</target>
        </trans-unit>
        <trans-unit id="2ca8704e898feadac45b47aecee721d7345b424d" translate="yes" xml:space="preserve">
          <source>The Mock Class</source>
          <target state="translated">模擬授業</target>
        </trans-unit>
        <trans-unit id="155fcae67f36b1120104c28ff0aa6a2ca6ef2a6c" translate="yes" xml:space="preserve">
          <source>The Namespace object</source>
          <target state="translated">名前空間オブジェクト</target>
        </trans-unit>
        <trans-unit id="c244a1998ff5b9fbc3c32a89fe8abcf93cbcfce5" translate="yes" xml:space="preserve">
          <source>The Netscape protocol with the bugs fixed. Uses &lt;em&gt;Set-Cookie2&lt;/em&gt; in place of &lt;em&gt;Set-Cookie&lt;/em&gt;. Not widely used.</source>
          <target state="translated">バグが修正されたNetscapeプロトコル。使用&lt;em&gt;するSet-Cookie2&lt;/em&gt;の代わりに&lt;em&gt;するSet-Cookie&lt;/em&gt;。広く使用されていません。</target>
        </trans-unit>
        <trans-unit id="9e811022cd0aac44894b0fa01dda129f51245480" translate="yes" xml:space="preserve">
          <source>The NotImplemented Object</source>
          <target state="translated">インプリメントされていないオブジェクト</target>
        </trans-unit>
        <trans-unit id="2d88e55940ba65789bd478289ba5ef66aaa6476b" translate="yes" xml:space="preserve">
          <source>The Null Object</source>
          <target state="translated">ヌルオブジェクト</target>
        </trans-unit>
        <trans-unit id="d8d19c38b56784ca153a1dfbfff3704006a6f7d7" translate="yes" xml:space="preserve">
          <source>The Numeric Python extension (NumPy) defines another array type; see &lt;a href=&quot;http://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt; for further information about Numerical Python.</source>
          <target state="translated">Numeric Python拡張機能（NumPy）は、別の配列型を定義します。Numerical Pythonの詳細については、&lt;a href=&quot;http://www.numpy.org/&quot;&gt;http：//www.numpy.org/&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a9e2cd6058ec976a36128b743cd36be50deb3c81" translate="yes" xml:space="preserve">
          <source>The Numerical Python Documentation</source>
          <target state="translated">数値化された Python ドキュメント</target>
        </trans-unit>
        <trans-unit id="29a8f4d932090adf9fba37b9d15fe98be224e869" translate="yes" xml:space="preserve">
          <source>The PEP to add the import hooks that help this module work.</source>
          <target state="translated">このモジュールの動作を助けるインポートフックを追加するためのPEP。</target>
        </trans-unit>
        <trans-unit id="cd4be1c13c5613f15135d4c42fb4d6960f2b081a" translate="yes" xml:space="preserve">
          <source>The POP3 TOP command this method uses, unlike the RETR command, doesn&amp;rsquo;t set the message&amp;rsquo;s seen flag; unfortunately, TOP is poorly specified in the RFCs and is frequently broken in off-brand servers. Test this method by hand against the POP3 servers you will use before trusting it.</source>
          <target state="translated">このメソッドが使用するPOP3 TOPコマンドは、RETRコマンドとは異なり、メッセージの既読フラグを設定しません。残念ながら、TOPはRFCで十分に指定されておらず、ブランド外のサーバーでは頻繁に壊れています。このメソッドを信頼する前に、使用するPOP3サーバーに対して手動でテストしてください。</target>
        </trans-unit>
        <trans-unit id="c8a2773313a96e78dc753d28c768a2fee670d084" translate="yes" xml:space="preserve">
          <source>The POSIX.1-1988 ustar format (&lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt;&lt;code&gt;USTAR_FORMAT&lt;/code&gt;&lt;/a&gt;). It supports filenames up to a length of at best 256 characters and linknames up to 100 characters. The maximum file size is 8 GiB. This is an old and limited but widely supported format.</source>
          <target state="translated">POSIX.1-1988 ustarフォーマット（&lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt; &lt;code&gt;USTAR_FORMAT&lt;/code&gt; &lt;/a&gt;）。最大256文字の長さのファイル名と最大100文字のリンク名をサポートします。最大ファイルサイズは8 GiBです。これは古くて制限されていますが、広くサポートされている形式です。</target>
        </trans-unit>
        <trans-unit id="3a2b7ddf5592736fae745667d84bd41548545653" translate="yes" xml:space="preserve">
          <source>The POSIX.1-2001 pax format (&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;). It is the most flexible format with virtually no limits. It supports long filenames and linknames, large files and stores pathnames in a portable way. Modern tar implementations, including GNU tar, bsdtar/libarchive and star, fully support extended &lt;em&gt;pax&lt;/em&gt; features; some old or unmaintained libraries may not, but should treat &lt;em&gt;pax&lt;/em&gt; archives as if they were in the universally-supported &lt;em&gt;ustar&lt;/em&gt; format. It is the current default format for new archives.</source>
          <target state="translated">POSIX.1-2001 paxフォーマット（&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;）。実質的に制限がなく、最も柔軟なフォーマットです。長いファイル名とリンク名、大きなファイルをサポートし、パス名を移植可能な方法で保存します。 GNU tar、bsdtar / libarchiveおよびstarを含む最新のtar実装は、拡張された&lt;em&gt;pax&lt;/em&gt;機能を完全にサポートします。一部の古いライブラリまたはメンテナンスされていないライブラリは、そうではないかもしれませんが、&lt;em&gt;pax&lt;/em&gt;アーカイブを、普遍的にサポートされている&lt;em&gt;ustar&lt;/em&gt;形式であるかのように扱う必要があります。これは、新しいアーカイブの現在のデフォルト形式です。</target>
        </trans-unit>
        <trans-unit id="48f55ddcf8c21fcd18b7aab7a650f356e579978f" translate="yes" xml:space="preserve">
          <source>The Packer</source>
          <target state="translated">パッカー</target>
        </trans-unit>
        <trans-unit id="4d3cbd26cc18d883fce3423f3e8a2d5ef0540f3d" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity so that the Locator provides useful information.</source>
          <target state="translated">パーサは、文字データの各チャンクを報告するためにこのメソッドを呼び出します。SAXパーサは、連続する全ての文字データを単一のチャンクで返すか、複数のチャンクに分割することができます。しかし、ロケータが有用な情報を提供するために、単一のイベントの全ての文字は同じ外部エンティティから来ていなければなりません。</target>
        </trans-unit>
        <trans-unit id="4ae9d67de63ced48ddf55430725d32dedbe9dfd5" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each entity skipped. Non-validating processors may skip entities if they have not seen the declarations (because, for example, the entity was declared in an external DTD subset). All processors may skip external entities, depending on the values of the &lt;code&gt;feature_external_ges&lt;/code&gt; and the &lt;code&gt;feature_external_pes&lt;/code&gt; properties.</source>
          <target state="translated">パーサーは、スキップされたエンティティごとにこのメソッドを1回呼び出します。非検証プロセッサは、宣言を確認していない場合、エンティティをスキップすることがあります（たとえば、エンティティが外部DTDサブセットで宣言されているため）。すべてのプロセッサは、の値に応じて、外部エンティティをスキップして &lt;code&gt;feature_external_ges&lt;/code&gt; と &lt;code&gt;feature_external_pes&lt;/code&gt; のプロパティ。</target>
        </trans-unit>
        <trans-unit id="3cc97f14d1c6ed34640e855f6a0e48fc1a501ede" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">パーサは見つけられた各処理命令のために一度このメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="76bb55a33805478d33597a12af8474cc775cdba2" translate="yes" xml:space="preserve">
          <source>The Plural formula is taken from the catalog header. It is a C or Python expression that has a free variable &lt;em&gt;n&lt;/em&gt;; the expression evaluates to the index of the plural in the catalog. See &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html&quot;&gt;the GNU gettext documentation&lt;/a&gt; for the precise syntax to be used in &lt;code&gt;.po&lt;/code&gt; files and the formulas for a variety of languages.</source>
          <target state="translated">複数の式はカタログヘッダーから取得されます。これは、自由変数&lt;em&gt;n&lt;/em&gt;を持つCまたはPython式です。式はカタログ内の複数のインデックスに評価されます。 &lt;code&gt;.po&lt;/code&gt; ファイルで使用される正確な構文とさまざまな言語の式について&lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html&quot;&gt;は、GNU gettextのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d85809a7ab1199bed21e4d02a17dc8bc8a8d5f44" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module by default issues a &lt;code&gt;BEGIN&lt;/code&gt; statement implicitly before a Data Modification Language (DML) statement (i.e. &lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;/&lt;code&gt;REPLACE&lt;/code&gt;).</source>
          <target state="translated">Python &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールは、デフォルトでデータ変更言語（DML）ステートメントの前に暗黙的に &lt;code&gt;BEGIN&lt;/code&gt; ステートメントを発行します（つまり、 &lt;code&gt;INSERT&lt;/code&gt; / &lt;code&gt;UPDATE&lt;/code&gt; / &lt;code&gt;DELETE&lt;/code&gt; / &lt;code&gt;REPLACE&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f50658b2df65ef37c2e5e3a28feec3af7c6b2de4" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;global interpreter lock&lt;/a&gt; is released before calling any function exported by these libraries, and reacquired afterwards.</source>
          <target state="translated">Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;グローバルインタープリターロック&lt;/a&gt;は、これらのライブラリによってエクスポートされた関数を呼び出す前に解放され、後で再取得されます。</target>
        </trans-unit>
        <trans-unit id="2e3b3878e6b1514addea56227281a773c6e515ca" translate="yes" xml:space="preserve">
          <source>The Python DOM API, however, &lt;em&gt;does&lt;/em&gt; require that normal attribute access work. This means that the typical surrogates generated by Python IDL compilers are not likely to work, and wrapper objects may be needed on the client if the DOM objects are accessed via CORBA. While this does require some additional consideration for CORBA DOM clients, the implementers with experience using DOM over CORBA from Python do not consider this a problem. Attributes that are declared &lt;code&gt;readonly&lt;/code&gt; may not restrict write access in all DOM implementations.</source>
          <target state="translated">ただし、Python DOM APIでは、通常の属性アクセス&lt;em&gt;が機能&lt;/em&gt;する必要&lt;em&gt;が&lt;/em&gt;あります。つまり、Python IDLコンパイラーによって生成される典型的なサロゲートは機能しない可能性が高く、CORBAを介してDOMオブジェクトにアクセスする場合、クライアントでラッパーオブジェクトが必要になる可能性があります。これにはCORBA DOMクライアントに関する追加の考慮事項が必要ですが、PythonからCORBA経由でDOMを使用した経験のある実装者は、これを問題とは見なしません。 &lt;code&gt;readonly&lt;/code&gt; と宣言された属性は、すべてのDOM実装で書き込みアクセスを制限しない場合があります。</target>
        </trans-unit>
        <trans-unit id="a206098364b484165e8287cb349dce95f61567a5" translate="yes" xml:space="preserve">
          <source>The Python DOM interface provides the constants, but also expands the set of exceptions so that a specific exception exists for each of the exception codes defined by the DOM. The implementations must raise the appropriate specific exception, each of which carries the appropriate value for the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">Python DOMインターフェースは定数を提供しますが、DOMによって定義された各例外コードに特定の例外が存在するように、一連の例外を拡張します。実装は、適切な特定の例外を発生させる必要があります。それぞれの例外は、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性に適切な値を持っています。</target>
        </trans-unit>
        <trans-unit id="3623e9f5502ae30e63b6ff1528d1650f4f52886f" translate="yes" xml:space="preserve">
          <source>The Python Enhancement Proposal which proposed this addition to Python.</source>
          <target state="translated">このPythonへの追加を提案したPythonエンハンスメント案。</target>
        </trans-unit>
        <trans-unit id="16a4aad38a3322fd0c7f6a1a39fbd8541bd549de" translate="yes" xml:space="preserve">
          <source>The Python Profilers</source>
          <target state="translated">パイソンのプロファイラー</target>
        </trans-unit>
        <trans-unit id="68c54fa443db89d7ca0f9bbdbd9b7297be40a028" translate="yes" xml:space="preserve">
          <source>The Python Testing Tools Taxonomy</source>
          <target state="translated">Pythonテストツールの分類法</target>
        </trans-unit>
        <trans-unit id="a80a8e5314f2596cc8e38aeb9211edeb47d6195d" translate="yes" xml:space="preserve">
          <source>The Python Tkinter Topic Guide provides a great deal of information on using Tk from Python and links to other sources of information on Tk.</source>
          <target state="translated">PythonのTkinterトピックガイドでは、PythonからTkを利用する際の多くの情報や、Tkに関する他の情報源へのリンクが掲載されています。</target>
        </trans-unit>
        <trans-unit id="fc0b7656660df44baec5ab40803f65464e6222e3" translate="yes" xml:space="preserve">
          <source>The Python Zip Application Archive Format</source>
          <target state="translated">PythonのZipアプリケーションアーカイブフォーマット</target>
        </trans-unit>
        <trans-unit id="24305685b310d869a7c6bf7e92bb45e946c72628" translate="yes" xml:space="preserve">
          <source>The Python byte compiler can be invoked on an ST object to produce code objects which can be used as part of a call to the built-in &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; functions. This function provides the interface to the compiler, passing the internal parse tree from &lt;em&gt;st&lt;/em&gt; to the parser, using the source file name specified by the &lt;em&gt;filename&lt;/em&gt; parameter. The default value supplied for &lt;em&gt;filename&lt;/em&gt; indicates that the source was an ST object.</source>
          <target state="translated">PythonバイトコンパイラをSTオブジェクトで呼び出して、組み込みの&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;関数またはeval（）関数の呼び出しの一部として使用できるコードオブジェクトを生成できます。この関数はコンパイラーへのインターフェースを提供し、&lt;em&gt;filename&lt;/em&gt;パラメーターで指定されたソースファイル名を使用して、内部解析ツリーを&lt;em&gt;st&lt;/em&gt;からパーサーに渡します。&lt;em&gt;filenameに&lt;/em&gt;指定されたデフォルト値は、ソースがSTオブジェクトであることを示しています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aed821ec2313afc84ef94ac17cfa17e343147d7" translate="yes" xml:space="preserve">
          <source>The Python compiler currently generates the following bytecode instructions.</source>
          <target state="translated">現在、Pythonコンパイラは以下のバイトコード命令を生成しています。</target>
        </trans-unit>
        <trans-unit id="84bb1ebb68c17bfe88d2ed5dd2f381d99feff246" translate="yes" xml:space="preserve">
          <source>The Python files which contain certificates can contain a sequence of certificates, sometimes called a &lt;em&gt;certificate chain&lt;/em&gt;. This chain should start with the specific certificate for the principal who &amp;ldquo;is&amp;rdquo; the client or server, and then the certificate for the issuer of that certificate, and then the certificate for the issuer of &lt;em&gt;that&lt;/em&gt; certificate, and so on up the chain till you get to a certificate which is &lt;em&gt;self-signed&lt;/em&gt;, that is, a certificate which has the same subject and issuer, sometimes called a &lt;em&gt;root certificate&lt;/em&gt;. The certificates should just be concatenated together in the certificate file. For example, suppose we had a three certificate chain, from our server certificate to the certificate of the certification authority that signed our server certificate, to the root certificate of the agency which issued the certification authority&amp;rsquo;s certificate:</source>
          <target state="translated">証明書を含むPythonファイルには、&lt;em&gt;証明書チェーン&lt;/em&gt;と呼ばれることもある一連の証明書を含めることができます。このチェーンは、クライアントまたはサーバーであるプリンシパルの特定の証明書で始まり、次にその証明書の発行者の証明書、次にその証明書の発行者の証明書&lt;em&gt;という&lt;/em&gt;ように、チェーンまで続く必要があります。&lt;em&gt;自己署名さ&lt;/em&gt;れた証明書、つまり、サブジェクトと発行者が同じであり、&lt;em&gt;ルート証明書&lt;/em&gt;と呼ばれることのある&lt;em&gt;証明書を取得する&lt;/em&gt;。証明書は、証明書ファイル内で連結されるだけです。たとえば、サーバー証明書から、サーバー証明書に署名した証明機関の証明書、証明機関の証明書を発行した機関のルート証明書までの3つの証明書チェーンがあるとします。</target>
        </trans-unit>
        <trans-unit id="d668df70b1012a771ce85c79c768bca15d3a2ee7" translate="yes" xml:space="preserve">
          <source>The Python installers for the Windows platform usually include the entire standard library and often also include many additional components. For Unix-like operating systems Python is normally provided as a collection of packages, so it may be necessary to use the packaging tools provided with the operating system to obtain some or all of the optional components.</source>
          <target state="translated">Windows プラットフォーム用の Python インストーラは通常、標準ライブラリ全体を含み、多くの追加コンポーネントも含みます。Unix ライクなオペレーティングシステムでは、Python は通常パッケージの集合体として提供されていますので、オプションのコンポーネントのいくつかまたはすべてを取得するために、オペレーティングシステムで提供されているパッケージングツールを使用する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e39381baeb675becc61bfe651b0384d01c0ecc02" translate="yes" xml:space="preserve">
          <source>The Python interface is a straightforward transliteration of the Unix system call and library interface for sockets to Python&amp;rsquo;s object-oriented style: the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function returns a &lt;em&gt;socket object&lt;/em&gt; whose methods implement the various socket system calls. Parameter types are somewhat higher-level than in the C interface: as with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; operations on Python files, buffer allocation on receive operations is automatic, and buffer length is implicit on send operations.</source>
          <target state="translated">Pythonインターフェースは、UnixシステムコールとソケットのライブラリインターフェースをPythonのオブジェクト指向スタイルに直接変換したものです&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;関数は、さまざまなソケットシステムコールを実装するメソッドを持つ&lt;em&gt;ソケットオブジェクト&lt;/em&gt;を返します。パラメータタイプは、Cインターフェースよりもやや高レベルです。Pythonファイルの &lt;code&gt;read()&lt;/code&gt; および &lt;code&gt;write()&lt;/code&gt; 操作と同様に、受信操作でのバッファ割り当ては自動的に行われ、バッファ長は送信操作で暗黙的です。</target>
        </trans-unit>
        <trans-unit id="a0c4a529f0722167f2c4ba898392f0015bfae784" translate="yes" xml:space="preserve">
          <source>The Python interpreter has a number of functions and types built into it that are always available. They are listed here in alphabetical order.</source>
          <target state="translated">Python インタープリタには、常に利用可能な多くの関数や型が組み込まれています。ここではアルファベット順にリストアップしています。</target>
        </trans-unit>
        <trans-unit id="9326ea45f498d239e80ceb0e3060d4907816c0fb" translate="yes" xml:space="preserve">
          <source>The Python module providing secure hash functions.</source>
          <target state="translated">セキュアなハッシュ関数を提供する Python モジュール。</target>
        </trans-unit>
        <trans-unit id="5c70b76112bff8f234c081d6c7a3acbb6832303b" translate="yes" xml:space="preserve">
          <source>The Python runtime does not enforce function and variable type annotations. They can be used by third party tools such as type checkers, IDEs, linters, etc.</source>
          <target state="translated">Pythonランタイムは、関数や変数の型アノテーションを強制しません。これらは、型チェッカー、IDE、リンターなどのサードパーティのツールで使用することができます。</target>
        </trans-unit>
        <trans-unit id="20e932146154996d93ed84e9bb70077634ce4a18" translate="yes" xml:space="preserve">
          <source>The Python standard library provides two different implementations of the same profiling interface:</source>
          <target state="translated">Python標準ライブラリは、同じプロファイリングインターフェースの2つの異なる実装を提供しています。</target>
        </trans-unit>
        <trans-unit id="00c57304482cc2aeefdb4600f8e3ef9b77b1caa7" translate="yes" xml:space="preserve">
          <source>The RFC does not explicitly forbid JSON strings which contain byte sequences that don&amp;rsquo;t correspond to valid Unicode characters (e.g. unpaired UTF-16 surrogates), but it does note that they may cause interoperability problems. By default, this module accepts and outputs (when present in the original &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;) code points for such sequences.</source>
          <target state="translated">RFCは、有効なUnicode文字に対応しないバイトシーケンス（たとえば、ペアになっていないUTF-16サロゲート）を含むJSON文字列を明示的に禁止していませんが、相互運用性の問題を引き起こす可能性があることに注意しています。デフォルトでは、このモジュールはそのようなシーケンスのコードポイントを受け入れ、出力します（元の&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;に存在する場合）。</target>
        </trans-unit>
        <trans-unit id="a21611c1abaea76578ca01231f4e34f3cea77291" translate="yes" xml:space="preserve">
          <source>The RFC does not permit the representation of infinite or NaN number values. Despite that, by default, this module accepts and outputs &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt; as if they were valid JSON number literal values:</source>
          <target state="translated">RFCでは、無限またはNaNの数値の表現は許可されていません。それにもかかわらず、デフォルトでは、このモジュールは &lt;code&gt;Infinity&lt;/code&gt; 、 &lt;code&gt;-Infinity&lt;/code&gt; 、および &lt;code&gt;NaN&lt;/code&gt; を受け入れ、有効なJSON数値リテラル値であるかのように出力します。</target>
        </trans-unit>
        <trans-unit id="1d56e81c90cade5d7a8cd14714bd520f16d520a4" translate="yes" xml:space="preserve">
          <source>The RFC prohibits adding a byte order mark (BOM) to the start of a JSON text, and this module&amp;rsquo;s serializer does not add a BOM to its output. The RFC permits, but does not require, JSON deserializers to ignore an initial BOM in their input. This module&amp;rsquo;s deserializer raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when an initial BOM is present.</source>
          <target state="translated">RFCは、JSONテキストの先頭にバイトオーダーマーク（BOM）を追加することを禁止しており、このモジュールのシリアライザーは、その出力にBOMを追加しません。RFCでは、JSONデシリアライザーが入力の最初のBOMを無視することを許可していますが、必須ではありません。このモジュールのデ&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;は、初期BOMが存在する場合にValueErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="28a0c061baaa6d098aea953c60411ddd94747207" translate="yes" xml:space="preserve">
          <source>The RFC requires that JSON be represented using either UTF-8, UTF-16, or UTF-32, with UTF-8 being the recommended default for maximum interoperability.</source>
          <target state="translated">RFCでは、JSONはUTF-8、UTF-16、またはUTF-32のいずれかを使用して表現することを要求しています。</target>
        </trans-unit>
        <trans-unit id="23658f6ac2fddbb213f90b08b1d920e9ec72edc0" translate="yes" xml:space="preserve">
          <source>The RFC specifies that the names within a JSON object should be unique, but does not mandate how repeated names in JSON objects should be handled. By default, this module does not raise an exception; instead, it ignores all but the last name-value pair for a given name:</source>
          <target state="translated">RFCでは、JSONオブジェクト内の名前は一意でなければならないと規定されていますが、JSONオブジェクト内で繰り返される名前をどのように扱うべきかは規定されていません。デフォルトでは、このモジュールは例外を発生させず、その代わりに、与えられた名前の最後の名前と値のペア以外はすべて無視します。</target>
        </trans-unit>
        <trans-unit id="ebb53a0bf22d95c16083195b220ed98dcd13adc1" translate="yes" xml:space="preserve">
          <source>The Rmail manual, with some information on Babyl semantics.</source>
          <target state="translated">Rmailマニュアル、バビルセマンティクスに関するいくつかの情報を掲載しています。</target>
        </trans-unit>
        <trans-unit id="1e7b89846a8ae03eb96b19c9bea0cacf3c76d698" translate="yes" xml:space="preserve">
          <source>The SAX API defines four kinds of handlers: content handlers, DTD handlers, error handlers, and entity resolvers. Applications normally only need to implement those interfaces whose events they are interested in; they can implement the interfaces in a single object or in multiple objects. Handler implementations should inherit from the base classes provided in the module &lt;a href=&quot;#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;, so that all methods get default implementations.</source>
          <target state="translated">SAX APIは、コンテンツハンドラー、DTDハンドラー、エラーハンドラー、およびエンティティリゾルバーの4種類のハンドラーを定義します。アプリケーションは通常、関心のあるイベントを持つインターフェースのみを実装する必要があります。単一のオブジェクトまたは複数のオブジェクトにインターフェイスを実装できます。ハンドラーの実装は、すべてのメソッドがデフォルトの実装を取得できるように、モジュール&lt;a href=&quot;#module-xml.sax.handler&quot;&gt; &lt;code&gt;xml.sax.handler&lt;/code&gt; &lt;/a&gt;で提供される基本クラスから継承する必要があります。</target>
        </trans-unit>
        <trans-unit id="8e45a78d79d0524145dc4edd32e06f22f85cede3" translate="yes" xml:space="preserve">
          <source>The SAX parser will ignore this if there is also a character stream specified, but it will use a byte stream in preference to opening a URI connection itself.</source>
          <target state="translated">SAXパーサは、文字ストリームが指定されている場合はこれを無視しますが、URI接続自体を開く代わりにバイトストリームを使用します。</target>
        </trans-unit>
        <trans-unit id="707dc789f59e976c73fe4ffebb33bc0207ccae0c" translate="yes" xml:space="preserve">
          <source>The SAX parser will invoke this method only once, and it will be the last method invoked during the parse. The parser shall not invoke this method until it has either abandoned parsing (because of an unrecoverable error) or reached the end of input.</source>
          <target state="translated">SAXパーサはこのメソッドを一度だけ呼び出し、解析中に最後に呼び出されるメソッドとする。パーサは、(回復不可能なエラーのために)パースを放棄するか、入力の終わりに達するまで、このメソッドを呼び出してはならない。</target>
        </trans-unit>
        <trans-unit id="12f3a1297e14e9b828efc8bdfb73d80a8d01bec8" translate="yes" xml:space="preserve">
          <source>The SAX parser will invoke this method only once, before any other methods in this interface or in DTDHandler (except for &lt;a href=&quot;#xml.sax.handler.ContentHandler.setDocumentLocator&quot;&gt;&lt;code&gt;setDocumentLocator()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">SAXパーサーは、このメソッドをこのインターフェースまたはDTDHandler（&lt;a href=&quot;#xml.sax.handler.ContentHandler.setDocumentLocator&quot;&gt; &lt;code&gt;setDocumentLocator()&lt;/code&gt; &lt;/a&gt;を除く）の他のメソッドの前に1回だけ呼び出します。</target>
        </trans-unit>
        <trans-unit id="7e8e8330c21b74043b8205ded9ff9a5829bf01f2" translate="yes" xml:space="preserve">
          <source>The SKIP flag can also be used for temporarily &amp;ldquo;commenting out&amp;rdquo; examples.</source>
          <target state="translated">SKIPフラグは、例を一時的に「コメントアウト」するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="f4390f432eb2ffe2df3a4d9609866a7b2b82664d" translate="yes" xml:space="preserve">
          <source>The SMTP server refused to accept the message data.</source>
          <target state="translated">SMTPサーバがメッセージデータの受け入れを拒否しました。</target>
        </trans-unit>
        <trans-unit id="963f7e97b0fccc8fe8ffa791fe316f759f135cf9" translate="yes" xml:space="preserve">
          <source>The SQLite web page; the documentation describes the syntax and the available data types for the supported SQL dialect.</source>
          <target state="translated">SQLite の Web ページです。</target>
        </trans-unit>
        <trans-unit id="beffeb6dadecb40fadf90c17df812ca7ad08d63c" translate="yes" xml:space="preserve">
          <source>The SSL context created above will only allow TLSv1.2 and later (if supported by your system) connections to a server. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; implies certificate validation and hostname checks by default. You have to load certificates into the context.</source>
          <target state="translated">上記で作成されたSSLコンテキストは、サーバーへのTLSv1.2以降（システムでサポートされている場合）接続のみを許可します。&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; &lt;/a&gt;は、デフォルトで証明書の検証とホスト名のチェックを行います。コンテキストに証明書をロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="a0e2d72a60f11662a8e29849a7b2b192660b7e39" translate="yes" xml:space="preserve">
          <source>The SSL handshake itself will be non-blocking: the &lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt;&lt;code&gt;SSLSocket.do_handshake()&lt;/code&gt;&lt;/a&gt; method has to be retried until it returns successfully. Here is a synopsis using &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; to wait for the socket&amp;rsquo;s readiness:</source>
          <target state="translated">SSLハンドシェイク自体はノンブロッキングになります&lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt; &lt;code&gt;SSLSocket.do_handshake()&lt;/code&gt; &lt;/a&gt;メソッドは、正常に戻るまで再試行する必要があります。以下は、&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;を使用してソケットの準備が整うまで待機する概要です。</target>
        </trans-unit>
        <trans-unit id="7fb047f21fae24e28383d98ea942a6e80e264d6c" translate="yes" xml:space="preserve">
          <source>The SSL version to use (defaults to &lt;a href=&quot;ssl#ssl.PROTOCOL_SSLv23&quot;&gt;&lt;code&gt;ssl.PROTOCOL_SSLv23&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">使用するSSLバージョン（デフォルトは&lt;a href=&quot;ssl#ssl.PROTOCOL_SSLv23&quot;&gt; &lt;code&gt;ssl.PROTOCOL_SSLv23&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4c7e282a13558a44891e2e101c6cf6d12c13e561" translate="yes" xml:space="preserve">
          <source>The ST objects are not required to support the functionality of this module, but are provided for three purposes: to allow an application to amortize the cost of processing complex parse trees, to provide a parse tree representation which conserves memory space when compared to the Python list or tuple representation, and to ease the creation of additional modules in C which manipulate parse trees. A simple &amp;ldquo;wrapper&amp;rdquo; class may be created in Python to hide the use of ST objects.</source>
          <target state="translated">STオブジェクトは、このモジュールの機能をサポートする必要はありませんが、3つの目的のために提供されています。アプリケーションが複雑な解析ツリーの処理のコストを償却できるようにすること、Pythonと比較してメモリ空間を節約する解析ツリー表現を提供することリストまたはタプル表現、および解析ツリーを操作するCでの追加モジュールの作成を容易にする シンプルな「ラッパー」クラスをPythonで作成して、STオブジェクトの使用を非表示にすることができます。</target>
        </trans-unit>
        <trans-unit id="c9c355f4b21e15033d897535af6a95e51399ced7" translate="yes" xml:space="preserve">
          <source>The Shell window also has an output squeezing facility explained in the &lt;em&gt;Python Shell window&lt;/em&gt; subsection below.</source>
          <target state="translated">シェルウィンドウには、以下の&lt;em&gt;Pythonシェルウィンドウ&lt;/em&gt;サブセクションで説明する出力絞り込み機能もあります。</target>
        </trans-unit>
        <trans-unit id="1ea690a46ecf07b29fe276979038395655dc2267" translate="yes" xml:space="preserve">
          <source>The Signature object represents the call signature of a callable object and its return annotation. To retrieve a Signature object, use the &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Signatureオブジェクトは、呼び出し可能なオブジェクトの呼び出し署名とその戻りアノテーションを表します。Signatureオブジェクトを取得するには、&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="f14d6f9e95b7ec47f48e2395c9457f82042675cb" translate="yes" xml:space="preserve">
          <source>The Solaris OS has a &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; timer that attempts to use an optimal hardware source, and may give close to nanosecond resolution. &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; is the nonadjustable, high-resolution clock.</source>
          <target state="translated">Solaris OSには、最適なハードウェアソースを使用しようとする &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; タイマーがあり、ナノ秒に近い分解能が得られる場合があります。 &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; は、調整不可能な高分解能クロックです。</target>
        </trans-unit>
        <trans-unit id="cc3eb93ee8c21fc37dd86535f775f5eb431b9c88" translate="yes" xml:space="preserve">
          <source>The Solaris operating system defines its own binary &lt;code&gt;.mo&lt;/code&gt; file format, but since no documentation can be found on this format, it is not supported at this time.</source>
          <target state="translated">Solarisオペレーティングシステムは独自のバイナリ &lt;code&gt;.mo&lt;/code&gt; ファイル形式を定義していますが、この形式に関するドキュメントが見つからないため、現時点ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d0ac37e8315bdb7114c046319dce82f883d628c8" translate="yes" xml:space="preserve">
          <source>The SunOS tar extended format. This format is a variant of the POSIX.1-2001 pax format, but is not compatible.</source>
          <target state="translated">SunOS の tar 拡張フォーマット。このフォーマットは POSIX.1-2001 pax フォーマットの変形ですが、互換性はありません。</target>
        </trans-unit>
        <trans-unit id="4c6064fcd51da76a4b8688cbb79d85ed3cbe6902" translate="yes" xml:space="preserve">
          <source>The Task is &lt;em&gt;cancelled&lt;/em&gt; when the cancellation was requested with &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; and the wrapped coroutine propagated the &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception thrown into it.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;でキャンセルが要求され、ラップされたコルーチンがスローされた&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;例外を伝播すると、タスクは&lt;em&gt;キャンセルさ&lt;/em&gt;れます。</target>
        </trans-unit>
        <trans-unit id="c832c625e27d27b2df4a2f2747f5f1ffb11ed665" translate="yes" xml:space="preserve">
          <source>The Time Zone Database (often called tz, tzdata or zoneinfo) contains code and data that represent the history of local time for many representative locations around the globe. It is updated periodically to reflect changes made by political bodies to time zone boundaries, UTC offsets, and daylight-saving rules.</source>
          <target state="translated">タイムゾーンデータベース(tz、tzdata、zoneinfoと呼ばれることもある)には、世界中の多くの代表的な場所の現地時間の歴史を表すコードとデータが含まれています。定期的に更新され、タイムゾーンの境界、UTCオフセット、サマータイムルールなどの政治的な変更を反映しています。</target>
        </trans-unit>
        <trans-unit id="90e26b26d9a0af28886fde0a18d530daf10ace98" translate="yes" xml:space="preserve">
          <source>The Tk part of the Tk Widgets implement the final mapping to &amp;hellip;</source>
          <target state="translated">TkウィジェットのTk部分は、最終的なマッピングを&amp;hellip;に実装します。</target>
        </trans-unit>
        <trans-unit id="a8035c8d4a76baa8e0c5f30604affaf05adf9c98" translate="yes" xml:space="preserve">
          <source>The Tk/Tcl development is largely taking place at ActiveState.</source>
          <target state="translated">Tk/Tclの開発はActiveStateで大きく行われています。</target>
        </trans-unit>
        <trans-unit id="bb2e0c5b0d8a8fbb506b26541482bf9fad625ee9" translate="yes" xml:space="preserve">
          <source>The Treeview widget generates the following virtual events.</source>
          <target state="translated">Treeview ウィジェットは、以下の仮想イベントを生成します。</target>
        </trans-unit>
        <trans-unit id="197ec35dbcf1ac2c21896fa47f315993bf446dd5" translate="yes" xml:space="preserve">
          <source>The Treeview widget supports horizontal and vertical scrolling, according to the options described in &lt;a href=&quot;#scrollable-widget-options&quot;&gt;Scrollable Widget Options&lt;/a&gt; and the methods &lt;a href=&quot;#tkinter.ttk.Treeview.xview&quot;&gt;&lt;code&gt;Treeview.xview()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview.yview&quot;&gt;&lt;code&gt;Treeview.yview()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Treeviewウィジェットは、スクロール&lt;a href=&quot;#scrollable-widget-options&quot;&gt;可能なウィジェットのオプションで&lt;/a&gt;説明されているオプションと&lt;a href=&quot;#tkinter.ttk.Treeview.xview&quot;&gt; &lt;code&gt;Treeview.xview()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#tkinter.ttk.Treeview.yview&quot;&gt; &lt;code&gt;Treeview.yview()&lt;/code&gt; メソッド&lt;/a&gt;に従って、水平および垂直スクロールをサポートします。</target>
        </trans-unit>
        <trans-unit id="c6114ecf3800a7be16c1cceda8f0ef24d4070d2d" translate="yes" xml:space="preserve">
          <source>The URI authority, typically a host, but may also contain a port separated by a colon.</source>
          <target state="translated">URI権限、通常はホストですが、コロンで区切られたポートを含むこともあります。</target>
        </trans-unit>
        <trans-unit id="28b94c4c5d2f79c9e8d639c6cdb0ef5a62f7c53c" translate="yes" xml:space="preserve">
          <source>The URI of the XHTML namespace as defined by &lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;XHTML 1.0: The Extensible HyperText Markup Language&lt;/a&gt; (section 3.1.1).</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;XHTML 1.0：Extensible HyperText Markup Language&lt;/a&gt;（セクション3.1.1）で定義されているXHTML名前空間のURI 。</target>
        </trans-unit>
        <trans-unit id="46e2b896a8750fe169be7a5ca65a3f1110bc2ba4" translate="yes" xml:space="preserve">
          <source>The URI or URL that triggered the error.</source>
          <target state="translated">エラーの原因となったURIまたはURL。</target>
        </trans-unit>
        <trans-unit id="675c281e0cb1795bfbcb6b86336646e2a1113c23" translate="yes" xml:space="preserve">
          <source>The URI path. If the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; uses a proxy, then selector will be the full URL that is passed to the proxy.</source>
          <target state="translated">URIパス。&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;がプロキシを使用する場合、セレクタはプロキシに渡される完全なURLになります。</target>
        </trans-unit>
        <trans-unit id="f2c63ee71e5d56e82a263265f0b8cfef06ac654b" translate="yes" xml:space="preserve">
          <source>The URI scheme.</source>
          <target state="translated">URIスキーム。</target>
        </trans-unit>
        <trans-unit id="4a032d6b5843fa436cc4c90b072280e903ed7533" translate="yes" xml:space="preserve">
          <source>The URL parsing functions focus on splitting a URL string into its components, or on combining URL components into a URL string.</source>
          <target state="translated">URL 解析関数は、URL 文字列をコンポーネントに分割したり、URL コンポーネントを URL 文字列に結合したりすることに重点を置いています。</target>
        </trans-unit>
        <trans-unit id="0da793b6172e55a10633bab2dfb6db89e488f43e" translate="yes" xml:space="preserve">
          <source>The URL parsing functions were originally designed to operate on character strings only. In practice, it is useful to be able to manipulate properly quoted and encoded URLs as sequences of ASCII bytes. Accordingly, the URL parsing functions in this module all operate on &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects in addition to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">URL解析関数は、もともと文字列のみを操作するように設計されていました。実際には、適切に引用されエンコードされたURLをASCIIバイトのシーケンスとして操作できると便利です。したがって、このモジュールのURL解析関数はすべて、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトに加えて、&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;オブジェクトとbytearrayオブジェクトを操作し&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="767746494e5992b19ee4215ca1c553ccc7ef02b6" translate="yes" xml:space="preserve">
          <source>The URL quoting functions focus on taking program data and making it safe for use as URL components by quoting special characters and appropriately encoding non-ASCII text. They also support reversing these operations to recreate the original data from the contents of a URL component if that task isn&amp;rsquo;t already covered by the URL parsing functions above.</source>
          <target state="translated">URL引用機能は、プログラムデータを取得し、特殊文字を引用して非ASCIIテキストを適切にエンコードすることにより、URLコンポーネントとして安全に使用できるようにすることに重点を置いています。また、これらの操作を逆にして、URLコンポーネントのコンテンツから元のデータを再作成することもサポートします（そのタスクが上記のURL解析関数でカバーされていない場合）。</target>
        </trans-unit>
        <trans-unit id="54066892316ef33a7c80c7cc0ef79d07ebc23fea" translate="yes" xml:space="preserve">
          <source>The UTC timezone, &lt;code&gt;timezone(timedelta(0))&lt;/code&gt;.</source>
          <target state="translated">UTCタイムゾーン &lt;code&gt;timezone(timedelta(0))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="230fce554aaa73006fcdc744072561d1b035264b" translate="yes" xml:space="preserve">
          <source>The UUID as a 128-bit integer.</source>
          <target state="translated">UUIDを128ビット整数で指定します。</target>
        </trans-unit>
        <trans-unit id="ada1c18a51eb3eac79e65818a624c02eaee85742" translate="yes" xml:space="preserve">
          <source>The UUID as a 16-byte string (containing the six integer fields in big-endian byte order).</source>
          <target state="translated">16バイトの文字列としてのUUID(ビッグエンディアンバイト順に6つの整数フィールドを含む)。</target>
        </trans-unit>
        <trans-unit id="2381ab9006b77ecac0111ea046ff0cb7e8dfd5d1" translate="yes" xml:space="preserve">
          <source>The UUID as a 16-byte string (with &lt;em&gt;time_low&lt;/em&gt;, &lt;em&gt;time_mid&lt;/em&gt;, and &lt;em&gt;time_hi_version&lt;/em&gt; in little-endian byte order).</source>
          <target state="translated">16バイト文字列としてのUUID（&lt;em&gt;time_low&lt;/em&gt;、&lt;em&gt;time_mid&lt;/em&gt;、および&lt;em&gt;time_hi_version&lt;/em&gt;がリトルエンディアンのバイト順）。</target>
        </trans-unit>
        <trans-unit id="1c6aa8c5331e6dfe4b2198d9e5600b8c7ebfc894" translate="yes" xml:space="preserve">
          <source>The UUID as a 32-character hexadecimal string.</source>
          <target state="translated">UUIDは32文字の16進数文字列です。</target>
        </trans-unit>
        <trans-unit id="177533cf244a77a50c952f3fbe78b63c34c13f4c" translate="yes" xml:space="preserve">
          <source>The UUID as a URN as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4122で&lt;/strong&gt;&lt;/a&gt;指定されているURNとしてのUUID 。</target>
        </trans-unit>
        <trans-unit id="4ce88db58d1bd2cff41f02584142c4d5b6236bbd" translate="yes" xml:space="preserve">
          <source>The UUID variant, which determines the internal layout of the UUID. This will be one of the constants &lt;a href=&quot;#uuid.RESERVED_NCS&quot;&gt;&lt;code&gt;RESERVED_NCS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.RFC_4122&quot;&gt;&lt;code&gt;RFC_4122&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.RESERVED_MICROSOFT&quot;&gt;&lt;code&gt;RESERVED_MICROSOFT&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#uuid.RESERVED_FUTURE&quot;&gt;&lt;code&gt;RESERVED_FUTURE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UUIDの内部レイアウトを決定するUUIDバリアント。これは、定数&lt;a href=&quot;#uuid.RESERVED_NCS&quot;&gt; &lt;code&gt;RESERVED_NCS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.RFC_4122&quot;&gt; &lt;code&gt;RFC_4122&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.RESERVED_MICROSOFT&quot;&gt; &lt;code&gt;RESERVED_MICROSOFT&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#uuid.RESERVED_FUTURE&quot;&gt; &lt;code&gt;RESERVED_FUTURE&lt;/code&gt; の&lt;/a&gt;いずれかになります。</target>
        </trans-unit>
        <trans-unit id="c342fe24c4cbcb0d257de674ff4759e57b22adbe" translate="yes" xml:space="preserve">
          <source>The UUID version number (1 through 5, meaningful only when the variant is &lt;a href=&quot;#uuid.RFC_4122&quot;&gt;&lt;code&gt;RFC_4122&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">UUIDバージョン番号（1から5、バリアントが&lt;a href=&quot;#uuid.RFC_4122&quot;&gt; &lt;code&gt;RFC_4122&lt;/code&gt; の&lt;/a&gt;場合にのみ意味があります）。</target>
        </trans-unit>
        <trans-unit id="a51363554bd414c12851cae7faea9edf2a962fd9" translate="yes" xml:space="preserve">
          <source>The UUID was generated by the platform in a multiprocessing-safe way.</source>
          <target state="translated">UUIDはプラットフォームによってマルチプロセッシングセーフな方法で生成されました。</target>
        </trans-unit>
        <trans-unit id="47a9a2e59e442cbdb8a457590010b0cf856f5044" translate="yes" xml:space="preserve">
          <source>The UUID was not generated in a multiprocessing-safe way.</source>
          <target state="translated">UUIDは、マルチプロセシングセーフな方法で生成されませんでした。</target>
        </trans-unit>
        <trans-unit id="2a47f74b6e550e89792615dcf5953a8088aa9f2e" translate="yes" xml:space="preserve">
          <source>The Unicode standard defines various normalization forms of a Unicode string, based on the definition of canonical equivalence and compatibility equivalence. In Unicode, several characters can be expressed in various way. For example, the character U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA) can also be expressed as the sequence U+0043 (LATIN CAPITAL LETTER C) U+0327 (COMBINING CEDILLA).</source>
          <target state="translated">Unicode標準では、正準等価と互換等価の定義に基づいて、Unicode文字列の様々な正規化形式を定義しています。Unicodeでは、いくつかの文字を様々な方法で表現することができます。例えば、文字 U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA)は、シーケンス U+0043 (LATIN CAPITAL LETTER C)U+0327 (COMBINING CEDILLA)として表現することもできます。</target>
        </trans-unit>
        <trans-unit id="c04d63dca6dbfa35a8eb332fbd0e71599ed04307" translate="yes" xml:space="preserve">
          <source>The Unix man page for &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrlimit(2)&quot;&gt;getrlimit(2)&lt;/a&gt;&lt;/em&gt; lists the available resources. Note that not all systems use the same symbol or same value to denote the same resource. This module does not attempt to mask platform differences &amp;mdash; symbols not defined for a platform will not be available from this module on that platform.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrlimit(2)&quot;&gt;getrlimit（2）&lt;/a&gt;&lt;/em&gt;のUnixマニュアルページに、使用可能なリソースがリストされています。すべてのシステムが同じリソースを示すために同じシンボルまたは同じ値を使用するわけではないことに注意してください。このモジュールはプラットフォームの違いを隠そうとしません&amp;mdash;プラットフォームに定義されていないシンボルは、そのプラットフォームのこのモジュールからは利用できません。</target>
        </trans-unit>
        <trans-unit id="5a7c44388893db174e9ea999556cdbef90f21c4a" translate="yes" xml:space="preserve">
          <source>The W3C recommendation for the DOM supported by &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; で&lt;/a&gt;サポートされているDOMに対するW3C勧告。</target>
        </trans-unit>
        <trans-unit id="12834e293d8b743cd66ae767c77319fb9cdda8c3" translate="yes" xml:space="preserve">
          <source>The W3C recommendation for the DOM supported by &lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; で&lt;/a&gt;サポートされているDOMに対するW3C勧告。</target>
        </trans-unit>
        <trans-unit id="31da42b88e14c17335b5f3c69d5530c7bbb076fe" translate="yes" xml:space="preserve">
          <source>The W3C recommendation upon which the Python DOM API is based.</source>
          <target state="translated">Python DOM API をベースにした W3C の勧告。</target>
        </trans-unit>
        <trans-unit id="7f9e002ad4780ba707a87e87fd969fb608c7c36f" translate="yes" xml:space="preserve">
          <source>The Warnings Filter</source>
          <target state="translated">警告フィルター</target>
        </trans-unit>
        <trans-unit id="10331ee2cc67db663d1588e865683c3ef36476ce" translate="yes" xml:space="preserve">
          <source>The Web Server Gateway Interface (WSGI) is a standard interface between web server software and web applications written in Python. Having a standard interface makes it easy to use an application that supports WSGI with a number of different web servers.</source>
          <target state="translated">Web Server Gateway Interface (WSGI)は、Pythonで書かれたWebサーバソフトウェアとWebアプリケーション間の標準インターフェースです。標準インターフェースを持つことで、WSGIをサポートしているアプリケーションを多くの異なるWebサーバで簡単に使用することができます。</target>
        </trans-unit>
        <trans-unit id="2ae5961df21f86344f6e296a655c0d9ff73bdfd3" translate="yes" xml:space="preserve">
          <source>The Window Manager</source>
          <target state="translated">ウィンドウマネージャー</target>
        </trans-unit>
        <trans-unit id="65c6ce80c74663bba1681b82368d9ef75309faf6" translate="yes" xml:space="preserve">
          <source>The XML format for plist files.</source>
          <target state="translated">plist ファイルの XML フォーマット。</target>
        </trans-unit>
        <trans-unit id="fc2e75c413853f6e04459cc96ca7e162e334c720" translate="yes" xml:space="preserve">
          <source>The XML handling submodules are:</source>
          <target state="translated">XMLを扱うサブモジュールは</target>
        </trans-unit>
        <trans-unit id="ee22895916a9fd9bfc78eca970b52547580e8558" translate="yes" xml:space="preserve">
          <source>The XML modules are not secure against erroneous or maliciously constructed data. If you need to parse untrusted or unauthenticated data see the &lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt; and &lt;a href=&quot;#defused-packages&quot;&gt;The defusedxml and defusedexpat Packages&lt;/a&gt; sections.</source>
          <target state="translated">XMLモジュールは、誤ったデータまたは悪意を持って作成されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XMLの脆弱性&lt;/a&gt;と&lt;a href=&quot;#defused-packages&quot;&gt;defusedxmlおよびdefusedexpatパッケージの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9c0f2cf621a14c2bbdbfa819908f6b587d931318" translate="yes" xml:space="preserve">
          <source>The XML processing modules are not secure against maliciously constructed data. An attacker can abuse XML features to carry out denial of service attacks, access local files, generate network connections to other machines, or circumvent firewalls.</source>
          <target state="translated">XML 処理モジュールは、悪意を持って構築されたデータに対して安全ではありません。攻撃者は XML 機能を悪用してサービス拒否攻撃を実行したり、ローカルファイルにアクセスしたり、他のマシンへのネットワーク接続を生成したり、ファイアウォールを回避したりすることができます。</target>
        </trans-unit>
        <trans-unit id="252486bd245ee68d35a40ade01a5e1d9f61f7038" translate="yes" xml:space="preserve">
          <source>The ZIP file format does not support timestamps before 1980.</source>
          <target state="translated">ZIPファイル形式は1980年以前のタイムスタンプには対応していません。</target>
        </trans-unit>
        <trans-unit id="c63b3aee37e3a038e39805f29c23907870ffa3ea" translate="yes" xml:space="preserve">
          <source>The ZIP file format is a common archive and compression standard. This module provides tools to create, read, write, append, and list a ZIP file. Any advanced use of this module will require an understanding of the format, as defined in &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP Application Note&lt;/a&gt;.</source>
          <target state="translated">ZIPファイル形式は、一般的なアーカイブと圧縮の標準です。このモジュールは、ZIPファイルを作成、読み取り、書き込み、追加、およびリストするためのツールを提供します。このモジュールを高度に使用するには、&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIPアプリケーションノートで&lt;/a&gt;定義されているように、形式を理解する必要があります。</target>
        </trans-unit>
        <trans-unit id="442d8cccd431e779c9116f151ef53c174751f57b" translate="yes" xml:space="preserve">
          <source>The ZIP file format specification has included support for bzip2 compression since 2001, and for LZMA compression since 2006. However, some tools (including older Python releases) do not support these compression methods, and may either refuse to process the ZIP file altogether, or fail to extract individual files.</source>
          <target state="translated">ZIP ファイルフォーマットの仕様には、2001 年以降の bzip2 圧縮と 2006 年以降の LZMA 圧縮のサポートが含まれています。しかし、いくつかのツール (古い Python リリースを含む)はこれらの圧縮方法をサポートしておらず、ZIP ファイルの処理を完全に拒否したり、個々のファイルの抽出に失敗したりすることがあります。</target>
        </trans-unit>
        <trans-unit id="98199ae838f2d5784421f8c9d0b795a0bb8b257d" translate="yes" xml:space="preserve">
          <source>The above &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; functions are useful for finding insertion points but can be tricky or awkward to use for common searching tasks. The following five functions show how to transform them into the standard lookups for sorted lists:</source>
          <target state="translated">上記の&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;関数は、挿入ポイントを見つけるのに役立ちますが、一般的な検索タスクに使用するのは難しい場合があります。次の5つの関数は、それらをソート済みリストの標準ルックアップに変換する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="407e21ba6d5dd1ee8eee311341a7ab707eb91302" translate="yes" xml:space="preserve">
          <source>The above YAML snippet defines three formatters. The first, with id &lt;code&gt;brief&lt;/code&gt;, is a standard &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;logging.Formatter&lt;/code&gt;&lt;/a&gt; instance with the specified format string. The second, with id &lt;code&gt;default&lt;/code&gt;, has a longer format and also defines the time format explicitly, and will result in a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;logging.Formatter&lt;/code&gt;&lt;/a&gt; initialized with those two format strings. Shown in Python source form, the &lt;code&gt;brief&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; formatters have configuration sub-dictionaries:</source>
          <target state="translated">上記のYAMLスニペットは3つのフォーマッターを定義します。最初のIDは &lt;code&gt;brief&lt;/code&gt; で、指定されたフォーマット文字列を持つ標準の&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;logging.Formatter&lt;/code&gt; &lt;/a&gt;インスタンスです。2番目はid &lt;code&gt;default&lt;/code&gt; で、より長いフォーマットを持ち、時間フォーマットも明示的に定義しており、これら2つのフォーマット文字列で初期化される&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;logging.Formatter&lt;/code&gt; になり&lt;/a&gt;ます。Pythonソース形式で示されている、 &lt;code&gt;brief&lt;/code&gt; フォーマッタと &lt;code&gt;default&lt;/code&gt; フォーマッタには、構成サブディクショナリがあります。</target>
        </trans-unit>
        <trans-unit id="e62cbf4b6548b919e4fdec7b561bc7cfed74c41b" translate="yes" xml:space="preserve">
          <source>The above action would run &lt;a href=&quot;re#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; and print profile results like the following:</source>
          <target state="translated">上記のアクションは&lt;a href=&quot;re#re.compile&quot;&gt; &lt;code&gt;re.compile()&lt;/code&gt; &lt;/a&gt;を実行し、次のようなプロファイル結果を出力します。</target>
        </trans-unit>
        <trans-unit id="cb5b571b0f55359c686525ade99c560ac76753ed" translate="yes" xml:space="preserve">
          <source>The above code print a series of &lt;code&gt;0 0&lt;/code&gt; lines, because the array contents is initialized to zeros.</source>
          <target state="translated">上記のコードは、配列の内容がゼロに初期化されるため、一連の &lt;code&gt;0 0&lt;/code&gt; 行を出力します。</target>
        </trans-unit>
        <trans-unit id="61e4b2d674d629816be9e5499f8d6280a73b0d50" translate="yes" xml:space="preserve">
          <source>The above constants are available on Unix and Windows.</source>
          <target state="translated">上記の定数はUnixとWindowsで利用可能です。</target>
        </trans-unit>
        <trans-unit id="8f7cdc222bbf8c590edefed4e2c6e102f38a77a0" translate="yes" xml:space="preserve">
          <source>The above constants are extensions and not present if they are not defined by the C library.</source>
          <target state="translated">上記の定数は拡張子であり、C ライブラリで定義されていない場合は存在しません。</target>
        </trans-unit>
        <trans-unit id="e2f9edc72b7c0f0352c1e5c0fd791c1214095743" translate="yes" xml:space="preserve">
          <source>The above constants are only available on Unix.</source>
          <target state="translated">上記の定数はUnixでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="26b1ca703884f216a942e677e3510315043cacee" translate="yes" xml:space="preserve">
          <source>The above constants are only available on Windows.</source>
          <target state="translated">上記の定数はWindowsでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="3ed3f8c425e1cebe6ddfe02fdc52e00207f48926" translate="yes" xml:space="preserve">
          <source>The above example defines a read-only property; you can also define a read-write abstract property by appropriately marking one or more of the underlying methods as abstract:</source>
          <target state="translated">上記の例では、読み取り専用のプロパティを定義していますが、基礎となるメソッドの 1 つ以上を適切に抽象化することで、読み書き可能な抽象プロパティを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="05d7f78147c227eb5aae0acc97674a01a9ebf658" translate="yes" xml:space="preserve">
          <source>The above examples show the most commonly used &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; features which are sufficient to meet many everyday testing needs. The remainder of the documentation explores the full feature set from first principles.</source>
          <target state="translated">上記の例は、多くの日常的なテストのニーズを満たすのに十分な、最も一般的に使用される&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;機能を示しています。ドキュメントの残りの部分では、第一原理から完全な機能セットを探ります。</target>
        </trans-unit>
        <trans-unit id="74957a5b993467a874f6d190c9036f6da0f9c8fd" translate="yes" xml:space="preserve">
          <source>The above implicitly extends to text files, since the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function will wrap a buffered object inside a &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;. This includes standard streams and therefore affects the built-in function &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; as well.</source>
          <target state="translated">&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数はバッファリングされたオブジェクトを&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;内にラップするため、上記は暗黙的にテキストファイルに拡張されます。これには標準ストリームが含まれるため、組み込み関数&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;にも影響します。</target>
        </trans-unit>
        <trans-unit id="ef1df1ceccbb344550c1134611aa680a6ca57474" translate="yes" xml:space="preserve">
          <source>The above module-level convenience functions, which delegate to the root logger, call &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt; to ensure that at least one handler is available. Because of this, they should &lt;em&gt;not&lt;/em&gt; be used in threads, in versions of Python earlier than 2.7.1 and 3.2, unless at least one handler has been added to the root logger &lt;em&gt;before&lt;/em&gt; the threads are started. In earlier versions of Python, due to a thread safety shortcoming in &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt;, this can (under rare circumstances) lead to handlers being added multiple times to the root logger, which can in turn lead to multiple messages for the same event.</source>
          <target state="translated">ルートロガーに委譲する上記のモジュールレベルの便利な関数は、&lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; &lt;/a&gt;を呼び出して、少なくとも1つのハンドラーが使用可能であることを確認します。このため、2.7.1および3.2より前のバージョンのPythonでは、スレッドを開始する&lt;em&gt;前に&lt;/em&gt;少なくとも1つのハンドラーをルートロガー&lt;em&gt;に&lt;/em&gt;追加していない限り、スレッドで使用し&lt;em&gt;ない&lt;/em&gt;でください。以前のバージョンのPythonでは、&lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; の&lt;/a&gt;スレッドセーフティの欠点により、（まれな状況で）ハンドラーがルートロガーに複数回追加され、同じイベントの複数のメッセージが表示される可能性があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d8d492094673232d29c1078b172cdc265b56e9a" translate="yes" xml:space="preserve">
          <source>The above snippet indicates that logger named &lt;code&gt;foo.bar.baz&lt;/code&gt; should have two handlers attached to it, which are described by the handler ids &lt;code&gt;h1&lt;/code&gt; and &lt;code&gt;h2&lt;/code&gt;. The formatter for &lt;code&gt;h1&lt;/code&gt; is that described by id &lt;code&gt;brief&lt;/code&gt;, and the formatter for &lt;code&gt;h2&lt;/code&gt; is that described by id &lt;code&gt;precise&lt;/code&gt;.</source>
          <target state="translated">上記のスニペットは、 &lt;code&gt;foo.bar.baz&lt;/code&gt; という名前のロガーに2つのハンドラーをアタッチする必要があることを示しています。これらのハンドラーは、ハンドラーID &lt;code&gt;h1&lt;/code&gt; および &lt;code&gt;h2&lt;/code&gt; によって記述されます。 &lt;code&gt;h1&lt;/code&gt; のフォーマッタは、id &lt;code&gt;brief&lt;/code&gt; によって記述されたものであり、 &lt;code&gt;h2&lt;/code&gt; のフォーマッタは、id &lt;code&gt;precise&lt;/code&gt; によって記述されたものです。</target>
        </trans-unit>
        <trans-unit id="5afdd19ff2762aaad15324735d06fbba48a09f88" translate="yes" xml:space="preserve">
          <source>The above will add a header that looks like this:</source>
          <target state="translated">上記のようなヘッダーが追加されます。</target>
        </trans-unit>
        <trans-unit id="f25ebcb4ed21c461f51c70e01467241e07cea134" translate="yes" xml:space="preserve">
          <source>The above will execute &lt;code&gt;somefile.py&lt;/code&gt; and generate annotated listings of all Python modules imported during the execution into the current directory.</source>
          <target state="translated">上記は &lt;code&gt;somefile.py&lt;/code&gt; を実行し、実行中に現在のディレクトリにインポートされたすべてのPythonモジュールの注釈付きリストを生成します。</target>
        </trans-unit>
        <trans-unit id="ce5bd96b918301cb95de685eaccadac99a16c5c7" translate="yes" xml:space="preserve">
          <source>The abstract base class defining the interface of finder objects on &lt;a href=&quot;#sys.meta_path&quot;&gt;&lt;code&gt;meta_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.meta_path&quot;&gt; &lt;code&gt;meta_path&lt;/code&gt; &lt;/a&gt;上のファインダーオブジェクトのインターフェースを定義する抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="cd5f23b2d3c373fb28eef9fa8f1f6d899e6031e2" translate="yes" xml:space="preserve">
          <source>The abstract base class for all I/O classes, acting on streams of bytes. There is no public constructor.</source>
          <target state="translated">すべての I/O クラスの抽象基底クラスであり、バイトのストリームで動作します。パブリックコンストラクタはありません。</target>
        </trans-unit>
        <trans-unit id="c659b88cd8236075a43a087f99d1f6f299c2eadd" translate="yes" xml:space="preserve">
          <source>The abstract base classes also provide default implementations of some methods in order to help implementation of concrete stream classes. For example, &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; provides unoptimized implementations of &lt;code&gt;readinto()&lt;/code&gt; and &lt;a href=&quot;#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抽象基本クラスは、具象ストリームクラスの実装を支援するために、いくつかのメソッドのデフォルト実装も提供します。たとえば、&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;readinto()&lt;/code&gt; および&lt;a href=&quot;#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; の&lt;/a&gt;最適化されていない実装を提供します。</target>
        </trans-unit>
        <trans-unit id="1f9fe10078c0b0af1e6a6803c79431e9d237a736" translate="yes" xml:space="preserve">
          <source>The abstract base classes making up the numeric tower.</source>
          <target state="translated">数字の塔を構成する抽象的な基底クラス。</target>
        </trans-unit>
        <trans-unit id="5433534b54436760d1f4d8f1c5502666c388c4e5" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; defines the interface expected of finders by Python&amp;rsquo;s import system. &lt;code&gt;importlib.metadata&lt;/code&gt; extends this protocol by looking for an optional &lt;code&gt;find_distributions&lt;/code&gt; callable on the finders from &lt;code&gt;sys.meta_path&lt;/code&gt; and presents this extended interface as the &lt;code&gt;DistributionFinder&lt;/code&gt; abstract base class, which defines this abstract method:</source>
          <target state="translated">抽象クラス&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;は、Pythonのインポートシステムがファインダーに期待するインターフェースを定義します。 &lt;code&gt;importlib.metadata&lt;/code&gt; は、 &lt;code&gt;sys.meta_path&lt;/code&gt; からのファインダーで呼び出し可能なオプションの &lt;code&gt;find_distributions&lt;/code&gt; を探すことによってこのプロトコルを拡張し、この拡張インターフェースを、この抽象メソッドを定義する &lt;code&gt;DistributionFinder&lt;/code&gt; 抽象基本クラスとして提示します。</target>
        </trans-unit>
        <trans-unit id="997702cd66ff1ee75f7fe9b2315881a481a29682" translate="yes" xml:space="preserve">
          <source>The abstract event loop policy base class is defined as follows:</source>
          <target state="translated">抽象イベントループポリシー基底クラスは以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="b822e2129fda13f824b88f911238744a0942dfa9" translate="yes" xml:space="preserve">
          <source>The abstract grammar is currently defined as follows:</source>
          <target state="translated">現在、抽象文法は以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="22685ed5927596fd28d7ba1c6153d574f910d052" translate="yes" xml:space="preserve">
          <source>The abstract method returns an iterable of no items.</source>
          <target state="translated">抽象メソッドは、項目のないイテレータブルを返します。</target>
        </trans-unit>
        <trans-unit id="2d8da79b65eb77d7ab2dbbc1e796e48b7e1aa054" translate="yes" xml:space="preserve">
          <source>The abstract methods defined by this class are to add optional bytecode file support. Not implementing these optional methods (or causing them to raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;) causes the loader to only work with source code. Implementing the methods allows the loader to work with source &lt;em&gt;and&lt;/em&gt; bytecode files; it does not allow for &lt;em&gt;sourceless&lt;/em&gt; loading where only bytecode is provided. Bytecode files are an optimization to speed up loading by removing the parsing step of Python&amp;rsquo;s compiler, and so no bytecode-specific API is exposed.</source>
          <target state="translated">このクラスによって定義される抽象メソッドは、オプションのバイトコードファイルサポートを追加することです。これらのオプションのメソッドを実装しない（またはそれらに&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;を発生させる）と、ローダーはソースコードでのみ機能します。メソッドを実装すると、ローダーはソースファイル&lt;em&gt;と&lt;/em&gt;バイトコードファイルを操作できます。バイトコードのみが提供される&lt;em&gt;ソースレスの&lt;/em&gt;ロードはできません。バイトコードファイルは、Pythonのコンパイラの解析ステップを削除することでロードを高速化するための最適化であり、バイトコード固有のAPIは公開されていません。</target>
        </trans-unit>
        <trans-unit id="bac918bfaa9fbf1f60536a1f9a285735540a9661" translate="yes" xml:space="preserve">
          <source>The actual messages are inspected to determine which labels exist in the mailbox rather than consulting the list of labels in the Babyl options section, but the Babyl section is updated whenever the mailbox is modified.</source>
          <target state="translated">実際のメッセージは、Babylオプションセクションのラベルのリストを参照するのではなく、メールボックスにどのラベルが存在するかを検査しますが、Babylセクションはメールボックスが変更されるたびに更新されます。</target>
        </trans-unit>
        <trans-unit id="ec59d57f13dbc7f6e8f220cf7108a96c7845d01c" translate="yes" xml:space="preserve">
          <source>The actual representation of values is determined by the machine architecture (strictly speaking, by the C implementation). The actual size can be accessed through the &lt;code&gt;itemsize&lt;/code&gt; attribute.</source>
          <target state="translated">値の実際の表現は、マシンのアーキテクチャー（厳密には、Cの実装）によって決まります。実際のサイズには、 &lt;code&gt;itemsize&lt;/code&gt; 属性を使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8bbd67fedc62d6744e578e383acd313d41f0348f" translate="yes" xml:space="preserve">
          <source>The add_argument() method</source>
          <target state="translated">add_argument()メソッド</target>
        </trans-unit>
        <trans-unit id="6162253165783060c2db0f1fb8a4141706505e29" translate="yes" xml:space="preserve">
          <source>The addition of new required attributes must go through the normal PEP process. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">新しい必須属性の追加は、通常のPEPプロセスを通過する必要があります。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="55a0169a9941fb11dafda49bd2ffe19ca9ee69cc" translate="yes" xml:space="preserve">
          <source>The address (&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;) without network information.</source>
          <target state="translated">ネットワーク情報なしのアドレス（&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="341c8834b822a019f9534dcafa2d84b7b101ecd9" translate="yes" xml:space="preserve">
          <source>The address format required by a particular socket object is automatically selected based on the address family specified when the socket object was created. Socket addresses are represented as follows:</source>
          <target state="translated">特定のソケットオブジェクトが必要とするアドレス形式は、ソケットオブジェクトの作成時に指定されたアドレスファミリに基づいて自動的に選択されます。ソケットアドレスは以下のように表されます。</target>
        </trans-unit>
        <trans-unit id="4cb6e2569f1a198791a025941f4508602c56ffb5" translate="yes" xml:space="preserve">
          <source>The address from which the last accepted connection came. If this is unavailable then it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">最後に受け入れられた接続の発信元のアドレス。これが利用できない場合は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9eb11849699377b31e52eceb4abebe16ec4ad447" translate="yes" xml:space="preserve">
          <source>The address of an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket bound to a file system node is represented as a string, using the file system encoding and the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;). An address in Linux&amp;rsquo;s abstract namespace is returned as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; with an initial null byte; note that sockets in this namespace can communicate with normal file system sockets, so programs intended to run on Linux may need to deal with both types of address. A string or bytes-like object can be used for either type of address when passing it as an argument.</source>
          <target state="translated">ファイルシステムノードにバインドされた&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;ソケットのアドレスは、ファイルシステムエンコーディングと &lt;code&gt;'surrogateescape'&lt;/code&gt; エラーハンドラーを使用して、文字列として表されます（&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383を&lt;/strong&gt;&lt;/a&gt;参照）。 Linuxの抽象名前空間のアドレスは、最初のnullバイトを持つ&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;として返されます。この名前空間のソケットは通常のファイルシステムソケットと通信できるため、Linuxで実行することを目的としたプログラムは両方のタイプのアドレスを処理する必要がある場合があることに注意してください。文字列またはバイトのようなオブジェクトは、引数として渡すときにどちらのタイプのアドレスにも使用できます。</target>
        </trans-unit>
        <trans-unit id="77c6e2e4aa0afd9f0da731748d6868e43cbbddde" translate="yes" xml:space="preserve">
          <source>The address on which the server is listening. The format of addresses varies depending on the protocol family; see the documentation for the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module for details. For Internet protocols, this is a tuple containing a string giving the address, and an integer port number: &lt;code&gt;('127.0.0.1', 80)&lt;/code&gt;, for example.</source>
          <target state="translated">サーバーがリッスンしているアドレス。アドレスの形式はプロトコルファミリによって異なります。詳細については、&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。インターネットプロトコルの場合、これはアドレスを指定する文字列と整数のポート番号を含むタプルです：（ &lt;code&gt;('127.0.0.1', 80)&lt;/code&gt; など。</target>
        </trans-unit>
        <trans-unit id="caadcf5c749441fdfeb412491158e95d616c65f2" translate="yes" xml:space="preserve">
          <source>The address used by the manager.</source>
          <target state="translated">管理者が使用しているアドレスです。</target>
        </trans-unit>
        <trans-unit id="48fc7614dc7d8c1c17cef309edaa19277c62a924" translate="yes" xml:space="preserve">
          <source>The address which is being used by the Listener object.</source>
          <target state="translated">リスナーオブジェクトが使用しているアドレス。</target>
        </trans-unit>
        <trans-unit id="0a2d1ad99859dd0fa1ab93fa74d153ed148b3f11" translate="yes" xml:space="preserve">
          <source>The advanced API revolves around two container classes, which are used to store the interactive examples extracted from doctest cases:</source>
          <target state="translated">高度なAPIは、doctestケースから抽出されたインタラクティブな例を保存するために使用される2つのコンテナクラスを中心に展開します。</target>
        </trans-unit>
        <trans-unit id="0fc8b7f68557d45d430eb3ca143cc623a95cbbb8" translate="yes" xml:space="preserve">
          <source>The advantage of the &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; type over a regular &lt;a href=&quot;#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; is that a &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; values, calculating individual items and subranges as needed).</source>
          <target state="translated">利点&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;正規上型&lt;a href=&quot;#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;ことである&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;それだけ格納するようにオブジェクトが常にメモリの同じ（小）を要するであろう、いいえそれが表す範囲（のサイズを問わ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;stop&lt;/code&gt; 、および &lt;code&gt;step&lt;/code&gt; 値、必要に応じて個々のアイテムと部分範囲を計算します）。</target>
        </trans-unit>
        <trans-unit id="9d8f4a6fe7a31398136778071ccf8af380a56654" translate="yes" xml:space="preserve">
          <source>The advantage over the standard traceback is that source lines in the compiled template will be displayed. The optional &lt;em&gt;file&lt;/em&gt; argument directs where the traceback is sent; it defaults to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">標準のトレースバックに対する利点は、コンパイルされたテンプレートのソース行が表示されることです。オプションの&lt;em&gt;ファイル&lt;/em&gt;引数は、トレースバックの送信先を指示し&lt;em&gt;ます&lt;/em&gt;。デフォルトは&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="389d9047d4c01bea441e0465f8bdadf31d1765e6" translate="yes" xml:space="preserve">
          <source>The aggregate class must implement a &lt;code&gt;step&lt;/code&gt; method, which accepts the number of parameters &lt;em&gt;num_params&lt;/em&gt; (if &lt;em&gt;num_params&lt;/em&gt; is -1, the function may take any number of arguments), and a &lt;code&gt;finalize&lt;/code&gt; method which will return the final result of the aggregate.</source>
          <target state="translated">集約クラスは、パラメーター&lt;em&gt;num_params&lt;/em&gt;（&lt;em&gt;num_params&lt;/em&gt;が-1の場合、関数は任意の数の引数を取ることができます）を受け入れる &lt;code&gt;step&lt;/code&gt; メソッドと、集約の最終結果を返す &lt;code&gt;finalize&lt;/code&gt; メソッドを実装する必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c81a91b366c2ca5f6e3514aebee395b76c6e737f" translate="yes" xml:space="preserve">
          <source>The algorithm uses a simple language-independent definition of a word as groups of consecutive letters. The definition works in many contexts but it means that apostrophes in contractions and possessives form word boundaries, which may not be the desired result:</source>
          <target state="translated">このアルゴリズムは、連続した文字のグループとしての単語の単純な言語に依存しない定義を使用しています。この定義は多くの文脈で機能しますが、短縮形や所有格のアポストロフィが単語の境界を形成することを意味し、望ましい結果ではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="1ea76dcb40c4b9fd7e68dc2ee0f71417668bf322" translate="yes" xml:space="preserve">
          <source>The algorithm&amp;rsquo;s accuracy depends on IEEE-754 arithmetic guarantees and the typical case where the rounding mode is half-even. On some non-Windows builds, the underlying C library uses extended precision addition and may occasionally double-round an intermediate sum causing it to be off in its least significant bit.</source>
          <target state="translated">アルゴリズムの精度は、IEEE-754演算の保証と、丸めモードが偶数である一般的なケースに依存します。一部のWindows以外のビルドでは、基礎となるCライブラリが拡張精度の加算を使用し、中間合計を2倍に丸めて、最下位ビットでオフにすることがあります。</target>
        </trans-unit>
        <trans-unit id="5606a01152f52f4dc81a70ca0b1f2ca9568376be" translate="yes" xml:space="preserve">
          <source>The alternate form causes a leading &lt;code&gt;'0x'&lt;/code&gt; or &lt;code&gt;'0X'&lt;/code&gt; (depending on whether the &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'X'&lt;/code&gt; format was used) to be inserted before the first digit.</source>
          <target state="translated">代替形式では、先頭の &lt;code&gt;'0x'&lt;/code&gt; または &lt;code&gt;'0X'&lt;/code&gt; （ &lt;code&gt;'x'&lt;/code&gt; または &lt;code&gt;'X'&lt;/code&gt; 形式のどちらが使用されたかに応じて）が最初の数字の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="d42a4d8ad1a3383ee5320a3a16eb31b75813d0d6" translate="yes" xml:space="preserve">
          <source>The alternate form causes a leading octal specifier (&lt;code&gt;'0o'&lt;/code&gt;) to be inserted before the first digit.</source>
          <target state="translated">代替形式では、先頭の8進指定子（ &lt;code&gt;'0o'&lt;/code&gt; ）が最初の数字の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="14d9acf2bea379bd058e7c06b2fff1c83daa4669" translate="yes" xml:space="preserve">
          <source>The alternate form causes the result to always contain a decimal point, and trailing zeroes are not removed as they would otherwise be.</source>
          <target state="translated">別の形式では、結果には常に小数点が含まれ、末尾のゼロは削除されません。</target>
        </trans-unit>
        <trans-unit id="a98cf5f39210ac846eda4b14e995b3862902ef83" translate="yes" xml:space="preserve">
          <source>The alternate form causes the result to always contain a decimal point, even if no digits follow it.</source>
          <target state="translated">別の形式を使用すると、結果に小数点が付いていなくても、小数点が常に含まれるようになります。</target>
        </trans-unit>
        <trans-unit id="2b2e794a1178ef7414daa6fc5f835215e754345d" translate="yes" xml:space="preserve">
          <source>The ancient V7 format. This is the first tar format from Unix Seventh Edition, storing only regular files and directories. Names must not be longer than 100 characters, there is no user/group name information. Some archives have miscalculated header checksums in case of fields with non-ASCII characters.</source>
          <target state="translated">古くからあるV7フォーマット。これはUnix第7版からの最初のtar形式で、通常のファイルとディレクトリのみを保存します。名前は100文字を超えてはならず、ユーザ/グループ名の情報はありません。一部のアーカイブでは、ASCII 以外の文字を含むフィールドの場合、ヘッダのチェックサムが誤算されていることがあります。</target>
        </trans-unit>
        <trans-unit id="10c51d8f800517ca58ba2468a6c02fd8a7104b3b" translate="yes" xml:space="preserve">
          <source>The annotation for the parameter. If the parameter has no annotation, this attribute is set to &lt;a href=&quot;#inspect.Parameter.empty&quot;&gt;&lt;code&gt;Parameter.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パラメータの注釈。パラメータに注釈がない場合、この属性は&lt;a href=&quot;#inspect.Parameter.empty&quot;&gt; &lt;code&gt;Parameter.empty&lt;/code&gt; に&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="33bada18ff53849b6ee3f7316070d7ee69b27b87" translate="yes" xml:space="preserve">
          <source>The appropriate version number: &lt;code&gt;4&lt;/code&gt; for IPv4, &lt;code&gt;6&lt;/code&gt; for IPv6.</source>
          <target state="translated">適切なバージョン番号：IPv4の場合は &lt;code&gt;4&lt;/code&gt; 、IPv6の場合は &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e8292e76576f5b761b335d8aabbcc591cdfb09e" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;bytes&lt;/em&gt; must either be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or an iterable producing bytes.</source>
          <target state="translated">引数&lt;em&gt;bytes&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;または反復可能な生成バイトのいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="d8890dbba084fa181e02072ab15efd96356246f1" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;file&lt;/em&gt; must have three methods, a read() method that takes an integer argument, a readinto() method that takes a buffer argument and a readline() method that requires no arguments, as in the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface. Thus &lt;em&gt;file&lt;/em&gt; can be an on-disk file opened for binary reading, an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; object, or any other custom object that meets this interface.</source>
          <target state="translated">引数&lt;em&gt;ファイルには、&lt;/em&gt;三つの方法、整数の引数、バッファ引数と同様に、引数を必要としないのreadline（）メソッドかかりreadinto（）メソッドかかりread（）メソッド有していなければならない&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; の&lt;/a&gt;インターフェイスを。したがって、&lt;em&gt;ファイル&lt;/em&gt;は、バイナリ読み取り用に開かれたディスク上のファイル、&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;オブジェクト、またはこのインターフェイスを満たすその他のカスタムオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="41dee21e7ee0cafe46125a9e6fc36855c2f04d0a" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;optimize&lt;/em&gt; specifies the optimization level of the compiler; the default value of &lt;code&gt;-1&lt;/code&gt; selects the optimization level of the interpreter as given by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; options. Explicit levels are &lt;code&gt;0&lt;/code&gt; (no optimization; &lt;code&gt;__debug__&lt;/code&gt; is true), &lt;code&gt;1&lt;/code&gt; (asserts are removed, &lt;code&gt;__debug__&lt;/code&gt; is false) or &lt;code&gt;2&lt;/code&gt; (docstrings are removed too).</source>
          <target state="translated">引数&lt;em&gt;optimize&lt;/em&gt;は、コンパイラーの最適化レベルを指定します。デフォルト値の &lt;code&gt;-1&lt;/code&gt; は、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;オプションで指定されたインタープリターの最適化レベルを選択します。明示的なレベルは &lt;code&gt;0&lt;/code&gt; （最適化なし、 &lt;code&gt;__debug__&lt;/code&gt; はtrue）、 &lt;code&gt;1&lt;/code&gt; （アサートが削除され、 &lt;code&gt;__debug__&lt;/code&gt; はfalse）または &lt;code&gt;2&lt;/code&gt; （docstringも削除されます）です。</target>
        </trans-unit>
        <trans-unit id="3deabf3aa9abdc670f9e79ed2b9d15db402ea8d0" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;workers&lt;/em&gt; specifies how many workers are used to compile files in parallel. The default is to not use multiple workers. If the platform can&amp;rsquo;t use multiple workers and &lt;em&gt;workers&lt;/em&gt; argument is given, then sequential compilation will be used as a fallback. If &lt;em&gt;workers&lt;/em&gt; is 0, the number of cores in the system is used. If &lt;em&gt;workers&lt;/em&gt; is lower than &lt;code&gt;0&lt;/code&gt;, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">引数&lt;em&gt;worker&lt;/em&gt;は、ファイルを並列にコンパイルするために使用される&lt;em&gt;ワーカーの数を&lt;/em&gt;指定します。デフォルトでは、複数のワーカーを使用しません。プラットフォームが複数のワーカーを使用できず、&lt;em&gt;ワーカー&lt;/em&gt;引数が指定されている場合、順次コンパイルがフォールバックとして使用されます。&lt;em&gt;ワーカー&lt;/em&gt;が0の場合、システム内のコアの数が使用されます。&lt;em&gt;ワーカー&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; より小さい場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="be43a16008bbf7f5842dd3fda9c5c730dc968fa1" translate="yes" xml:space="preserve">
          <source>The argument is either an exception object or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. The latter means a regular EOF is received, or the connection was aborted or closed by this side of the connection.</source>
          <target state="translated">引数は、例外オブジェクトまたは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;いずれかです。後者は、通常のEOFを受信したか、接続がこの側で中止またはクローズされたことを意味します。</target>
        </trans-unit>
        <trans-unit id="6a211995914e53c0ffa8f7f501f1d50e2819dbbf" translate="yes" xml:space="preserve">
          <source>The arguments &lt;em&gt;server_side&lt;/em&gt;, &lt;em&gt;do_handshake_on_connect&lt;/em&gt;, and &lt;em&gt;suppress_ragged_eofs&lt;/em&gt; have the same meaning as &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数&lt;em&gt;server_side&lt;/em&gt;、&lt;em&gt;do_handshake_on_connect&lt;/em&gt;、および&lt;em&gt;suppress_ragged_eofs&lt;/em&gt;は、&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="9c66f3eebc3d176e9c1b552e8a8c2895de8a2a96" translate="yes" xml:space="preserve">
          <source>The arguments are a string and optional globals and locals. If provided, &lt;em&gt;globals&lt;/em&gt; must be a dictionary. If provided, &lt;em&gt;locals&lt;/em&gt; can be any mapping object.</source>
          <target state="translated">引数は文字列とオプションのグローバルとローカルです。指定する場合、&lt;em&gt;グローバル&lt;/em&gt;は辞書である必要があります。提供される場合、&lt;em&gt;ローカル&lt;/em&gt;は任意のマッピングオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="c69cfb296a29db62964592dbb716832142521412" translate="yes" xml:space="preserve">
          <source>The arguments are an object and a string. The result is &lt;code&gt;True&lt;/code&gt; if the string is the name of one of the object&amp;rsquo;s attributes, &lt;code&gt;False&lt;/code&gt; if not. (This is implemented by calling &lt;code&gt;getattr(object, name)&lt;/code&gt; and seeing whether it raises an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; or not.)</source>
          <target state="translated">引数はオブジェクトと文字列です。文字列がオブジェクトの属性の1つの名前である場合、結果は &lt;code&gt;True&lt;/code&gt; であり、そうでない場合は &lt;code&gt;False&lt;/code&gt; です。（これは &lt;code&gt;getattr(object, name)&lt;/code&gt; を呼び出して、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生するかどうかを確認することによって実装されます。）</target>
        </trans-unit>
        <trans-unit id="be56149bda6c7546999f067085edf5b3a937c31c" translate="yes" xml:space="preserve">
          <source>The arguments are the components that make up a class definition header: the class name, the base classes (in order) and the keyword arguments (such as &lt;code&gt;metaclass&lt;/code&gt;).</source>
          <target state="translated">引数は、クラス定義ヘッダーを構成するコンポーネントです。クラス名、基本クラス（順番）、キーワード引数（ &lt;code&gt;metaclass&lt;/code&gt; など）です。</target>
        </trans-unit>
        <trans-unit id="e7c93246599d96c035a94a1928bc7c60c28e3fdf" translate="yes" xml:space="preserve">
          <source>The arguments for the logging message.</source>
          <target state="translated">ロギングメッセージの引数です。</target>
        </trans-unit>
        <trans-unit id="fa6396e70f630f892434a48120296055f84dd5e2" translate="yes" xml:space="preserve">
          <source>The arguments for this method are the same as those for the &lt;a href=&quot;#difflib.HtmlDiff.make_file&quot;&gt;&lt;code&gt;make_file()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドの引数は、&lt;a href=&quot;#difflib.HtmlDiff.make_file&quot;&gt; &lt;code&gt;make_file()&lt;/code&gt; &lt;/a&gt;メソッドの引数と同じです。</target>
        </trans-unit>
        <trans-unit id="fed5e86f10a7fbd166030f1e196e3f269c1fcfc8" translate="yes" xml:space="preserve">
          <source>The arguments must be types and there must be at least one.</source>
          <target state="translated">引数には型を指定し、最低でも1つは必要です。</target>
        </trans-unit>
        <trans-unit id="f69c3cdc02ca8f80c2baba13a605a2fbc228eaa5" translate="yes" xml:space="preserve">
          <source>The arguments must have numeric types. With mixed operand types, the coercion rules for binary arithmetic operators apply. For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands, the result has the same type as the operands (after coercion) unless the second argument is negative; in that case, all arguments are converted to float and a float result is delivered. For example, &lt;code&gt;10**2&lt;/code&gt; returns &lt;code&gt;100&lt;/code&gt;, but &lt;code&gt;10**-2&lt;/code&gt; returns &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">引数は数値型でなければなりません。混合オペランドタイプでは、2項算術演算子の強制ルールが適用されます。ため&lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 2番目の引数が負でない限り、オペランド、結果は（強制後）オペランドと同じ型を有します。その場合、すべての引数が浮動小数点数に変換され、浮動小数点数の結果が配信されます。たとえば、 &lt;code&gt;10**2&lt;/code&gt; は &lt;code&gt;100&lt;/code&gt; を返しますが、 &lt;code&gt;10**-2&lt;/code&gt; は &lt;code&gt;0.01&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ae91bd9ff1ecbb16b6d067052bf6873482f52192" translate="yes" xml:space="preserve">
          <source>The arguments provided (if any) can be used to limit the list down to the significant entries. Initially, the list is taken to be the complete set of profiled functions. Each restriction is either an integer (to select a count of lines), or a decimal fraction between 0.0 and 1.0 inclusive (to select a percentage of lines), or a string that will interpreted as a regular expression (to pattern match the standard name that is printed). If several restrictions are provided, then they are applied sequentially. For example:</source>
          <target state="translated">与えられた引数(もしあれば)は、リストを重要な項目に絞り込むために使用できます。初期状態では、リストはプロファイルされた関数の完全なセットとみなされます。各制限は、整数(行数を選択するため)、0.0から1.0までの小数(行の割合を選択するため)、正規表現として解釈される文字列(印刷される標準名にパターンマッチするため)のいずれかです。複数の制限が提供されている場合、それらは順次適用されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="87f25b82b9642ea89296265907e6ccc346f4cbea" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely some common ones. The full function signature is largely the same as that of &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; - most arguments are passed directly through to that interface. However, explicitly passing &lt;code&gt;input=None&lt;/code&gt; to inherit the parent&amp;rsquo;s standard input file handle is not supported.</source>
          <target state="translated">上記の引数は一般的なものにすぎません。完全な関数シグネチャは、&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; の&lt;/a&gt;シグネチャとほぼ同じです。ほとんどの引数は、そのインターフェースに直接渡されます。ただし、明示的に &lt;code&gt;input=None&lt;/code&gt; を渡して親の標準入力ファイルハンドルを継承することはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="2043e37b5d3a7c056dc2f3ac3ded2b83680185c6" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely some common ones. The full function signature is the same as that of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor - this function passes all supplied arguments other than &lt;em&gt;timeout&lt;/em&gt; directly through to that interface.</source>
          <target state="translated">上記の引数は一般的なものにすぎません。関数の完全なシグネチャは、&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;コンストラクターのシグネチャと同じです。この関数は、&lt;em&gt;タイムアウト&lt;/em&gt;以外のすべての指定された引数を、そのインターフェイスに直接渡します。</target>
        </trans-unit>
        <trans-unit id="f78dbd2fcda8d7db784dd89d094ca5c7188a12e9" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely the most common ones, described below in &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt; (hence the use of keyword-only notation in the abbreviated signature). The full function signature is largely the same as that of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor - most of the arguments to this function are passed through to that interface. (&lt;em&gt;timeout&lt;/em&gt;, &lt;em&gt;input&lt;/em&gt;, &lt;em&gt;check&lt;/em&gt;, and &lt;em&gt;capture_output&lt;/em&gt; are not.)</source>
          <target state="translated">上記の引数は最も一般的なものにすぎません。以下の「&lt;a href=&quot;#frequently-used-arguments&quot;&gt;よく使用される引数」&lt;/a&gt;で説明します（そのため、省略された署名ではキーワードのみの表記を使用しています）。関数の完全なシグネチャは、&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;コンストラクターのシグネチャとほとんど同じです。この関数への引数のほとんどは、そのインターフェイスに渡されます。 （&lt;em&gt;timeout&lt;/em&gt;、&lt;em&gt;input&lt;/em&gt;、&lt;em&gt;check&lt;/em&gt;、および&lt;em&gt;capture_output&lt;/em&gt;はそうではありません。）</target>
        </trans-unit>
        <trans-unit id="a8d3dbfa6a2a64fda3f1f33232ef56b7a73086d5" translate="yes" xml:space="preserve">
          <source>The arguments to the range constructor must be integers (either built-in &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; or any object that implements the &lt;code&gt;__index__&lt;/code&gt; special method). If the &lt;em&gt;step&lt;/em&gt; argument is omitted, it defaults to &lt;code&gt;1&lt;/code&gt;. If the &lt;em&gt;start&lt;/em&gt; argument is omitted, it defaults to &lt;code&gt;0&lt;/code&gt;. If &lt;em&gt;step&lt;/em&gt; is zero, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">範囲コンストラクターへの引数は整数でなければなりません（組み込みの&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;__index__&lt;/code&gt; 特殊メソッドを実装するオブジェクト）。場合は&lt;em&gt;ステップ&lt;/em&gt;引数はに、それデフォルトは省略されている &lt;code&gt;1&lt;/code&gt; 。場合は&lt;em&gt;、開始&lt;/em&gt;引数はに、それデフォルトは省略されている &lt;code&gt;0&lt;/code&gt; 。場合は&lt;em&gt;ステップが&lt;/em&gt;ゼロである、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="392a22c741f2ff789b1aa5cfae6c8530e0bcedb5" translate="yes" xml:space="preserve">
          <source>The arguments used to launch the process. This may be a list or a string.</source>
          <target state="translated">プロセスの起動に使用される引数。これはリストまたは文字列です。</target>
        </trans-unit>
        <trans-unit id="6eaf471383801c20f082c922e184753ba6eeb675" translate="yes" xml:space="preserve">
          <source>The arithmetic mean is the sum of the data divided by the number of data points. It is commonly called &amp;ldquo;the average&amp;rdquo;, although it is only one of many different mathematical averages. It is a measure of the central location of the data.</source>
          <target state="translated">算術平均は、データの合計をデータポイントの数で割ったものです。多くの異なる数学的平均の1つにすぎませんが、一般に「平均」と呼ばれます。これは、データの中心的な場所の尺度です。</target>
        </trans-unit>
        <trans-unit id="6a4efce9426389d16ea55fb24f2a2130bb207613" translate="yes" xml:space="preserve">
          <source>The assert passes if the mock has &lt;em&gt;ever&lt;/em&gt; been called, unlike &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; that only pass if the call is the most recent one, and in the case of &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; it must also be the only call.</source>
          <target state="translated">アサートは、モックがいる場合に渡し&lt;em&gt;、これまで&lt;/em&gt;とは異なり、呼び出され&lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;の呼び出しが最新のものである、とした場合には場合にのみ渡すこと&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;それはまた、唯一の呼び出しでなければなりません。</target>
        </trans-unit>
        <trans-unit id="55baf18423476bc2f5cb22bc735bf84833a2ded6" translate="yes" xml:space="preserve">
          <source>The associated child window will be displayed, and the previously-selected window (if different) is unmapped. If &lt;em&gt;tab_id&lt;/em&gt; is omitted, returns the widget name of the currently selected pane.</source>
          <target state="translated">関連する子ウィンドウが表示され、以前に選択したウィンドウ（異なる場合）のマッピングが解除されます。場合&lt;em&gt;tab_idが&lt;/em&gt;省略され、現在選択されているウィンドウのウィジェット名を返します。</target>
        </trans-unit>
        <trans-unit id="1ebc6759ec468be9cd5ca8641b23467e5c0dcc16" translate="yes" xml:space="preserve">
          <source>The asynchronous execution can be performed with threads, using &lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;, or separate processes, using &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;. Both implement the same interface, which is defined by the abstract &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">非同期実行は、&lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;を使用してスレッドで実行することも、&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;を使用して個別のプロセスで実行することもできます。どちらも、抽象&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;クラスによって定義される同じインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="3ccad3e454a2b6bbe8bd6d9030a1c9f1ee44f789" translate="yes" xml:space="preserve">
          <source>The asynchronous input buffer size (default &lt;code&gt;4096&lt;/code&gt;).</source>
          <target state="translated">非同期入力バッファーのサイズ（デフォルトは &lt;code&gt;4096&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="648cf457811b8fb2322a6e0f67989021d19d68db" translate="yes" xml:space="preserve">
          <source>The asynchronous output buffer size (default &lt;code&gt;4096&lt;/code&gt;).</source>
          <target state="translated">非同期出力バッファーのサイズ（デフォルトは &lt;code&gt;4096&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1b3cd46b2d23224528d0f92919781b3cb4fb638a" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;httponly&lt;/code&gt; specifies that the cookie is only transferred in HTTP requests, and is not accessible through JavaScript. This is intended to mitigate some forms of cross-site scripting.</source>
          <target state="translated">属性 &lt;code&gt;httponly&lt;/code&gt; は、CookieがHTTPリクエストでのみ転送され、JavaScriptを介してアクセスできないことを指定します。これは、いくつかの形式のクロスサイトスクリプティングを軽減することを目的としています。</target>
        </trans-unit>
        <trans-unit id="8edf79b23d57e5bcd86427cee16457915983e577" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;samesite&lt;/code&gt; specifies that the browser is not allowed to send the cookie along with cross-site requests. This helps to mitigate CSRF attacks. Valid values for this attribute are &amp;ldquo;Strict&amp;rdquo; and &amp;ldquo;Lax&amp;rdquo;.</source>
          <target state="translated">属性 &lt;code&gt;samesite&lt;/code&gt; は、ブラウザがクロスサイトリクエストとともにCookieを送信できないことを指定します。これは、CSRF攻撃を緩和するのに役立ちます。この属性の有効な値は、「Strict」と「Lax」です。</target>
        </trans-unit>
        <trans-unit id="f6ce7ef8307bed2a756ba73ac5ba362e481ae023" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;sys.float_info.dig&lt;/code&gt; needs further explanation. If &lt;code&gt;s&lt;/code&gt; is any string representing a decimal number with at most &lt;code&gt;sys.float_info.dig&lt;/code&gt; significant digits, then converting &lt;code&gt;s&lt;/code&gt; to a float and back again will recover a string representing the same decimal value:</source>
          <target state="translated">属性 &lt;code&gt;sys.float_info.dig&lt;/code&gt; には、さらに説明が必要です。場合 &lt;code&gt;s&lt;/code&gt; は最大で10進数を表す文字列である &lt;code&gt;sys.float_info.dig&lt;/code&gt; 有効桁、次に変換 &lt;code&gt;s&lt;/code&gt; 再びフロートおよび、同じ小数値を表す文字列を回復します。</target>
        </trans-unit>
        <trans-unit id="80c36253735c07d920791417fa7a7a1a529dab82" translate="yes" xml:space="preserve">
          <source>The attribute name. In a namespace-using document it may include a colon.</source>
          <target state="translated">属性名。名前空間を使用するドキュメントでは、コロンを含むことがあります。</target>
        </trans-unit>
        <trans-unit id="34c7c2faa30f7bd05bfb9c7041417be557d23784" translate="yes" xml:space="preserve">
          <source>The attribute of every character in the window is changed to the new background attribute.</source>
          <target state="translated">ウィンドウ内のすべての文字の属性が新しい背景属性に変更されます。</target>
        </trans-unit>
        <trans-unit id="07392340727348ac2f4a66a50ef8232a5df7f9aa" translate="yes" xml:space="preserve">
          <source>The attributes &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;maximum_version&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt;&lt;code&gt;minimum_version&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; all affect the supported SSL and TLS versions of the context. The implementation does not prevent invalid combination. For example a context with &lt;a href=&quot;#ssl.OP_NO_TLSv1_2&quot;&gt;&lt;code&gt;OP_NO_TLSv1_2&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;maximum_version&lt;/code&gt;&lt;/a&gt; set to &lt;a href=&quot;#ssl.TLSVersion.TLSv1_2&quot;&gt;&lt;code&gt;TLSVersion.TLSv1_2&lt;/code&gt;&lt;/a&gt; will not be able to establish a TLS 1.2 connection.</source>
          <target state="translated">属性&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;maximum_version&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt; &lt;code&gt;minimum_version&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; は&lt;/a&gt;すべて、サポートされているSSLおよびTLSバージョンのコンテキストに影響します。実装は無効な組み合わせを防ぎません。たとえば、&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#ssl.OP_NO_TLSv1_2&quot;&gt; &lt;code&gt;OP_NO_TLSv1_2&lt;/code&gt; &lt;/a&gt;があり、&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;maximum_version&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#ssl.TLSVersion.TLSv1_2&quot;&gt; &lt;code&gt;TLSVersion.TLSv1_2&lt;/code&gt; に&lt;/a&gt;設定されているコンテキストは、TLS 1.2接続を確立できません。</target>
        </trans-unit>
        <trans-unit id="4d2a6e5c3540f613e4a515b7af1ff266b0046448" translate="yes" xml:space="preserve">
          <source>The attributes &lt;code&gt;Color.RED&lt;/code&gt;, &lt;code&gt;Color.GREEN&lt;/code&gt;, etc., are &lt;em&gt;enumeration members&lt;/em&gt; (or &lt;em&gt;enum members&lt;/em&gt;) and are functionally constants.</source>
          <target state="translated">属性 &lt;code&gt;Color.RED&lt;/code&gt; 、 &lt;code&gt;Color.GREEN&lt;/code&gt; などは、&lt;em&gt;列挙型メンバー&lt;/em&gt;（または&lt;em&gt;列挙型メンバー&lt;/em&gt;）であり、機能的に定数です。</target>
        </trans-unit>
        <trans-unit id="91a4811aba038c398e725d4c575b44d92daff913" translate="yes" xml:space="preserve">
          <source>The audio device objects returned by &lt;a href=&quot;#ossaudiodev.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; define the following methods and (read-only) attributes:</source>
          <target state="translated">&lt;a href=&quot;#ossaudiodev.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返されるオーディオデバイスオブジェクトは、次のメソッドと（読み取り専用）属性を定義します。</target>
        </trans-unit>
        <trans-unit id="04d9760b94e9697b28062a4f0fcfb4a6a38d064d" translate="yes" xml:space="preserve">
          <source>The authors strongly suggest getting a copy of the Tk man pages. Specifically, the man pages in the &lt;code&gt;manN&lt;/code&gt; directory are most useful. The &lt;code&gt;man3&lt;/code&gt; man pages describe the C interface to the Tk library and thus are not especially helpful for script writers.</source>
          <target state="translated">著者は、Tk manページのコピーを入手することを強く推奨します。具体的には、 &lt;code&gt;manN&lt;/code&gt; ディレクトリのmanページが最も役立ちます。 &lt;code&gt;man3&lt;/code&gt; manページはTkのライブラリへのCインタフェースを記述するため、スクリプト作成者にとって特に有用ではありません。</target>
        </trans-unit>
        <trans-unit id="64330833d6daf7d99e3cc896f57c75f2eeab2fd3" translate="yes" xml:space="preserve">
          <source>The available exception and functions in this module are:</source>
          <target state="translated">このモジュールで利用可能な例外と関数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="45e4ec41244c100fe61e74f34e82a254e2fcc455" translate="yes" xml:space="preserve">
          <source>The available integer presentation types are:</source>
          <target state="translated">利用可能な整数のプレゼンテーションタイプは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f9c8d6e8588482313d7f2606674509cd39c2ade3" translate="yes" xml:space="preserve">
          <source>The available presentation types for floating point and decimal values are:</source>
          <target state="translated">浮動小数点値と10進数値で利用可能なプレゼンテーションタイプは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cf7e6f76bb90144b319d33f3985485d202d127c2" translate="yes" xml:space="preserve">
          <source>The available string presentation types are:</source>
          <target state="translated">利用可能な文字列のプレゼンテーションタイプは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e1cc522ce200b02d1be94463c7dbc8f36cdd953e" translate="yes" xml:space="preserve">
          <source>The barrier can be reused any number of times for the same number of threads.</source>
          <target state="translated">バリアは同じスレッド数であれば何度でも再利用できます。</target>
        </trans-unit>
        <trans-unit id="1d64881eda8fb439140210f929f502081dc3c6e3" translate="yes" xml:space="preserve">
          <source>The base &lt;code&gt;Codec&lt;/code&gt; class defines these methods which also define the function interfaces of the stateless encoder and decoder:</source>
          <target state="translated">基本 &lt;code&gt;Codec&lt;/code&gt; クラスは、ステートレスエンコーダーおよびデコーダーの関数インターフェイスも定義する以下のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="d36539260f7d520c14f309593d9749c7167bf7a1" translate="yes" xml:space="preserve">
          <source>The base class for all built-in exceptions. It is not meant to be directly inherited by user-defined classes (for that, use &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;). If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; is called on an instance of this class, the representation of the argument(s) to the instance are returned, or the empty string when there were no arguments.</source>
          <target state="translated">すべての組み込み例外の基本クラス。ユーザー定義のクラスによって直接継承されることを意図していません（そのためには、&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; を&lt;/a&gt;使用してください）。場合は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;このクラスのインスタンスで呼び出され、インスタンスへの引数（複数可）の表現が返され、または引数はありませんでした、空の文字列されています。</target>
        </trans-unit>
        <trans-unit id="37d870854fd3e6d86ede1e5e4056a04f59674dcc" translate="yes" xml:space="preserve">
          <source>The base class for implementing datagram (UDP) protocols.</source>
          <target state="translated">データグラム(UDP)プロトコルを実装するための基底クラス。</target>
        </trans-unit>
        <trans-unit id="e6edb4bd859a927d0a782f77b29c7e76d77dfc75" translate="yes" xml:space="preserve">
          <source>The base class for implementing protocols communicating with child processes (unidirectional pipes).</source>
          <target state="translated">子プロセスと通信するプロトコル(一方向パイプ)を実装するための基底クラスです。</target>
        </trans-unit>
        <trans-unit id="037876c88a29da839e41f411005cef5212fc3b7d" translate="yes" xml:space="preserve">
          <source>The base class for implementing streaming protocols (TCP, Unix sockets, etc).</source>
          <target state="translated">ストリーミングプロトコル(TCP、Unix ソケットなど)を実装するための基底クラス。</target>
        </trans-unit>
        <trans-unit id="720a5bb3a4d291051b191f1d34b8551facac8967" translate="yes" xml:space="preserve">
          <source>The base class for the exceptions that are raised when a key or index used on a mapping or sequence is invalid: &lt;a href=&quot;#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;. This can be raised directly by &lt;a href=&quot;codecs#codecs.lookup&quot;&gt;&lt;code&gt;codecs.lookup()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マッピングまたはシーケンスで使用されるキーまたはインデックスが無効な場合に発生する例外の基本クラス：&lt;a href=&quot;#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。これは&lt;a href=&quot;codecs#codecs.lookup&quot;&gt; &lt;code&gt;codecs.lookup()&lt;/code&gt; &lt;/a&gt;によって直接発生させることができます。</target>
        </trans-unit>
        <trans-unit id="d91f7435686fb107d68c4bacb73c9970d4f18e58" translate="yes" xml:space="preserve">
          <source>The base class for those built-in exceptions that are raised for various arithmetic errors: &lt;a href=&quot;#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#FloatingPointError&quot;&gt;&lt;code&gt;FloatingPointError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さまざまな算術エラーに対して発生する組み込み例外の基本クラス：&lt;a href=&quot;#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#FloatingPointError&quot;&gt; &lt;code&gt;FloatingPointError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5be1b03a2559b8dbbf5e82b0787d6c7a0613ed82" translate="yes" xml:space="preserve">
          <source>The base class of all &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="translated">すべての&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;例外の基本クラス。</target>
        </trans-unit>
        <trans-unit id="0d598c1c31072f1d5bb7fce71b965147de8b6233" translate="yes" xml:space="preserve">
          <source>The base class of the other exceptions in this module. It is a subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールの他の例外の基本クラス。これは&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="e9d7127298b4ff6be01bcb830aa1f5c9b7b8e1ea" translate="yes" xml:space="preserve">
          <source>The base exception class. &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; has a single public attribute &lt;code&gt;msg&lt;/code&gt; containing the description of the error.</source>
          <target state="translated">基本例外クラス。&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;は、エラーの説明を含む単一のパブリック属性 &lt;code&gt;msg&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="478754849bb693c84213dee13796bc23b118363e" translate="yes" xml:space="preserve">
          <source>The base implementation formats the record to merge the message, arguments, and exception information, if present. It also removes unpickleable items from the record in-place.</source>
          <target state="translated">基本的な実装は、メッセージ、引数、例外情報があればそれをマージするようにレコードをフォーマットします。また、その場でレコードからピックルできない項目を削除します。</target>
        </trans-unit>
        <trans-unit id="e08426a91a7035e4c2d72c85c9c7b7cd719829df" translate="yes" xml:space="preserve">
          <source>The base implementation uses &lt;code&gt;get()&lt;/code&gt;. You may want to override this method if you want to use timeouts or work with custom queue implementations.</source>
          <target state="translated">基本実装は &lt;code&gt;get()&lt;/code&gt; を使用します。タイムアウトを使用したり、カスタムキュー実装を操作したりする場合は、このメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="cb9a116b8103bca120218fe5a882926ba73692a3" translate="yes" xml:space="preserve">
          <source>The based class for all other module-specific exceptions.</source>
          <target state="translated">他のすべてのモジュール固有の例外のための基底クラス。</target>
        </trans-unit>
        <trans-unit id="d4f200fcdf75b7beb6b2c030a2febabba55c0a7d" translate="yes" xml:space="preserve">
          <source>The basic API is a simple wrapper that&amp;rsquo;s intended to make doctest easy to use. It is fairly flexible, and should meet most users&amp;rsquo; needs; however, if you require more fine-grained control over testing, or wish to extend doctest&amp;rsquo;s capabilities, then you should use the advanced API.</source>
          <target state="translated">基本的なAPIは、doctestを使いやすくすることを目的とした単純なラッパーです。それはかなり柔軟で、ほとんどのユーザーのニーズを満たすはずです。ただし、テストをより詳細に制御する必要がある場合、またはdoctestの機能を拡張する場合は、高度なAPIを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c46a98898a854487d370b50e8f5e79d547a5abf6" translate="yes" xml:space="preserve">
          <source>The basic building blocks of unit testing are &lt;em&gt;test cases&lt;/em&gt; &amp;mdash; single scenarios that must be set up and checked for correctness. In &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;, test cases are represented by &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; instances. To make your own test cases you must write subclasses of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; or use &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt;&lt;code&gt;FunctionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単体テストの基本的な構成要素は&lt;em&gt;テストケース&lt;/em&gt;です。&lt;em&gt;テストケース&lt;/em&gt;は、セットアップして正確性を確認する必要がある単一のシナリオです。&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt;、テストケースは、で表され&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;インスタンス。独自のテストケースを作成するには、&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; の&lt;/a&gt;サブクラスを記述するか、&lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt; &lt;code&gt;FunctionTestCase&lt;/code&gt; を&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1631527b4d4b04ac30516c30c03bdc201a159063" translate="yes" xml:space="preserve">
          <source>The basic classes defined by the module, together with their functions, are listed below.</source>
          <target state="translated">モジュールによって定義された基本的なクラスとその機能を以下に示します。</target>
        </trans-unit>
        <trans-unit id="0621714f64d694606df173391b93313eeac34756" translate="yes" xml:space="preserve">
          <source>The basic data compression module needed to support the &lt;strong&gt;gzip&lt;/strong&gt; file format.</source>
          <target state="translated">&lt;strong&gt;gzip&lt;/strong&gt;ファイル形式をサポートするために必要な基本的なデータ圧縮モジュール。</target>
        </trans-unit>
        <trans-unit id="f3ea23849e09db81b8cf44483296cfa966e4cf09" translate="yes" xml:space="preserve">
          <source>The basic idea behind both modules is to create one or more network &lt;em&gt;channels&lt;/em&gt;, instances of class &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;. Creating the channels adds them to a global map, used by the &lt;a href=&quot;#asyncore.loop&quot;&gt;&lt;code&gt;loop()&lt;/code&gt;&lt;/a&gt; function if you do not provide it with your own &lt;em&gt;map&lt;/em&gt;.</source>
          <target state="translated">両方のモジュールの背後にある基本的な考え方は、1つ以上のネットワーク&lt;em&gt;チャネル&lt;/em&gt;、クラス&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; の&lt;/a&gt;インスタンスを作成することです。チャネルを作成すると、チャネルがグローバルマップに追加され、独自の&lt;em&gt;マップを&lt;/em&gt;提供しない場合に&lt;a href=&quot;#asyncore.loop&quot;&gt; &lt;code&gt;loop()&lt;/code&gt; &lt;/a&gt;関数で使用され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a2ffd84d87aba9b9e8fc01342a423d56d02dd44a" translate="yes" xml:space="preserve">
          <source>The basic idea for &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; is to separate, to the extent possible, the code implementing a widget&amp;rsquo;s behavior from the code implementing its appearance.</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;の基本的な考え方は、ウィジェットの動作を実装するコードとその外観を実装するコードを可能な限り分離することです。</target>
        </trans-unit>
        <trans-unit id="16e9e78405f309044c1b7fe1bffdce4599a86f91" translate="yes" xml:space="preserve">
          <source>The basic principle is that you patch where an object is &lt;em&gt;looked up&lt;/em&gt;, which is not necessarily the same place as where it is defined. A couple of examples will help to clarify this.</source>
          <target state="translated">基本的な原則は、オブジェクトが&lt;em&gt;検索される&lt;/em&gt;場所にパッチを適用することです。これは、オブジェクトが定義されている場所と同じ場所であるとは限りません。いくつかの例がこれを明確にするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="35a19f280d80a953c16e49e081b424d6cbff98c0" translate="yes" xml:space="preserve">
          <source>The basic type used for binary data read from or written to a file is &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. Other &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; are accepted as method arguments too. Text I/O classes work with &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data.</source>
          <target state="translated">ファイルの読み取りまたは書き込みを行うバイナリデータに使用される基本的なタイプは&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;です。他の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;もメソッドの引数として受け入れられます。テキストI / Oクラスは&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;データを処理します。</target>
        </trans-unit>
        <trans-unit id="1a0089a139acba0f4ef316c21fe484b7943e9402" translate="yes" xml:space="preserve">
          <source>The behavior is same as &lt;a href=&quot;#urllib.request.HTTPErrorProcessor.http_response&quot;&gt;&lt;code&gt;http_response()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">動作は&lt;a href=&quot;#urllib.request.HTTPErrorProcessor.http_response&quot;&gt; &lt;code&gt;http_response()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="509167a2d22d3e262915b45c8a13aa32c0c6f112" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;#mailbox.Mailbox.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; is unlike that of dictionaries, which iterate over keys.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;の動作は、キーを反復処理する辞書の動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="7ed5e3c6e5fccac07bc7e1871b7a1d111d3de3c4" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; for floats can be surprising: for example, &lt;code&gt;round(2.675, 2)&lt;/code&gt; gives &lt;code&gt;2.67&lt;/code&gt; instead of the expected &lt;code&gt;2.68&lt;/code&gt;. This is not a bug: it&amp;rsquo;s a result of the fact that most decimal fractions can&amp;rsquo;t be represented exactly as a float. See &lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt; for more information.</source>
          <target state="translated">float の&lt;a href=&quot;#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;の動作は驚くべきものになる可能性があります。たとえば、 &lt;code&gt;round(2.675, 2)&lt;/code&gt; は、期待される &lt;code&gt;2.68&lt;/code&gt; ではなく &lt;code&gt;2.67&lt;/code&gt; を返します。これはバグではありません。これは、ほとんどの小数部が浮動小数点として正確に表現できないという事実の結果です。詳細については、&lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;浮動小数点演算：問題と制限&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9031477af7e15d083a487073bb2d0a4eb97e4c9" translate="yes" xml:space="preserve">
          <source>The behavior of Python&amp;rsquo;s comparison operators can be a little surprising where a &lt;code&gt;NaN&lt;/code&gt; is involved. A test for equality where one of the operands is a quiet or signaling &lt;code&gt;NaN&lt;/code&gt; always returns &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (even when doing &lt;code&gt;Decimal('NaN')==Decimal('NaN')&lt;/code&gt;), while a test for inequality always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. An attempt to compare two Decimals using any of the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt; operators will raise the &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt; signal if either operand is a &lt;code&gt;NaN&lt;/code&gt;, and return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if this signal is not trapped. Note that the General Decimal Arithmetic specification does not specify the behavior of direct comparisons; these rules for comparisons involving a &lt;code&gt;NaN&lt;/code&gt; were taken from the IEEE 854 standard (see Table 3 in section 5.7). To ensure strict standards-compliance, use the &lt;code&gt;compare()&lt;/code&gt; and &lt;code&gt;compare-signal()&lt;/code&gt; methods instead.</source>
          <target state="translated">Pythonの比較演算子の動作は、 &lt;code&gt;NaN&lt;/code&gt; が関係している場合、少し驚くかもしれません。オペランドの1つがクワイエットまたはシグナル &lt;code&gt;NaN&lt;/code&gt; である等式のテストは常に（ &lt;code&gt;Decimal('NaN')==Decimal('NaN')&lt;/code&gt; を実行している場合でも）&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;を返しますが、不等式のテストは常に&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;gt;=&lt;/code&gt; 演算子のいずれかを使用して2つの10進数を比較しようとすると、いずれかのオペランドが &lt;code&gt;NaN&lt;/code&gt; の場合に&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;シグナルが発生し、&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; が&lt;/a&gt;返されます。この信号がトラップされない場合。General Decimal Arithmetic仕様では、直接比較の動作を指定していないことに注意してください。 &lt;code&gt;NaN&lt;/code&gt; を含む比較に関するこれらの規則は、IEEE 854標準から取得されました（セクション5.7の表3を参照）。標準に厳密に準拠するには、代わりに、 &lt;code&gt;compare()&lt;/code&gt; および &lt;code&gt;compare-signal()&lt;/code&gt; メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="2cc2a05a47982852d6024377eba4e6d10a25ebe4" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is-not&quot;&gt;&lt;code&gt;is not&lt;/code&gt;&lt;/a&gt; operators cannot be customized; also they can be applied to any two objects and never raise an exception.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is-not&quot;&gt; &lt;code&gt;is not&lt;/code&gt; &lt;/a&gt;演算子の動作はカスタマイズできません。また、これらは任意の2つのオブジェクトに適用でき、例外を発生させることはありません。</target>
        </trans-unit>
        <trans-unit id="544260a58eab8deefccf4a61698b8f81198ba13f" translate="yes" xml:space="preserve">
          <source>The behavior of the call is dependent on the value of &lt;em&gt;how&lt;/em&gt;, as follows.</source>
          <target state="translated">呼び出しの動作は、次のように&lt;em&gt;how&lt;/em&gt;の値に依存します。</target>
        </trans-unit>
        <trans-unit id="40956b4e017ec60e6e630696961357aedfdf755a" translate="yes" xml:space="preserve">
          <source>The behavior of this function may be overridden by an earlier call to the &lt;a href=&quot;https://docs.python.org/3.8/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt;&lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt;&lt;/a&gt;, however, it should always be considered interchangeable with &lt;code&gt;open(path, 'rb')&lt;/code&gt;. Overriding the behavior is intended for additional validation or preprocessing of the file.</source>
          <target state="translated">この関数の動作は、以前の&lt;a href=&quot;https://docs.python.org/3.8/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt; &lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt; の&lt;/a&gt;呼び出しによってオーバーライドされる場合がありますが、常に &lt;code&gt;open(path, 'rb')&lt;/code&gt; と交換可能であると見なされます。動作のオーバーライドは、ファイルの追加検証または前処理を目的としています。</target>
        </trans-unit>
        <trans-unit id="b73eb81df2ab1d8f8cce0693e52a357a71025f62" translate="yes" xml:space="preserve">
          <source>The behaviour described in this section applies only to the URL parsing functions. The URL quoting functions use their own rules when producing or consuming byte sequences as detailed in the documentation of the individual URL quoting functions.</source>
          <target state="translated">このセクションで説明されている動作は、URL 解析関数にのみ適用されます。URL クオティング関数は、個々の URL クオティング関数のドキュメントで詳細に説明されているように、バイトシーケンスを生成または消費する際に独自のルールを使用します。</target>
        </trans-unit>
        <trans-unit id="fccb0864af618f1eda4209875389b23fdd17be04" translate="yes" xml:space="preserve">
          <source>The best (no more than &lt;em&gt;n&lt;/em&gt;) matches among the possibilities are returned in a list, sorted by similarity score, most similar first.</source>
          <target state="translated">可能性の中で最高（&lt;em&gt;n以下&lt;/em&gt;）の一致がリストに返され、類似性スコアでソートされます。</target>
        </trans-unit>
        <trans-unit id="6e16ef4c7892d882d4fb24850f803bc72293e9c1" translate="yes" xml:space="preserve">
          <source>The binary data encapsulated by the &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; instance. The data is provided as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;インスタンスによってカプセル化されたバイナリデータ。データは、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとして提供されます。</target>
        </trans-unit>
        <trans-unit id="4b2c516a69d7acb2c687bf6c7fbf1597a2d16d23" translate="yes" xml:space="preserve">
          <source>The binary format for plist files</source>
          <target state="translated">plist ファイルのバイナリフォーマット</target>
        </trans-unit>
        <trans-unit id="252ee8840198291e490d998e86244d7d8e35b498" translate="yes" xml:space="preserve">
          <source>The binary representation of this address - a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object of the appropriate length (most significant octet first). This is 4 bytes for IPv4 and 16 bytes for IPv6.</source>
          <target state="translated">このアドレスのバイナリ表現- 適切な長さの&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクト（最上位オクテットが最初）。これは、IPv4の場合は4バイト、IPv6の場合は16バイトです。</target>
        </trans-unit>
        <trans-unit id="0812f781105763b6ad83547e0dd0926227d1acb3" translate="yes" xml:space="preserve">
          <source>The binary sequence of byte values to remove may be any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">削除するバイト値のバイナリシーケンスは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのような&lt;/a&gt;任意のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="79985ad5b74e6b2174133e206b38c0aac43f893a" translate="yes" xml:space="preserve">
          <source>The binary stream API is described in detail in the docs of &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイナリストリームAPIについては、&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;のドキュメントで詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="4bbdb4bdfe9695f4a095f27b2e5074bc83e4388e" translate="yes" xml:space="preserve">
          <source>The bind method from the widget command allows you to watch for certain events and to have a callback function trigger when that event type occurs. The form of the bind method is:</source>
          <target state="translated">ウィジェットコマンドの bind メソッドを使うと、特定のイベントを監視し、そのイベントタイプが発生したときにコールバック関数をトリガーさせることができます。bindメソッドの形式は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e93fbed83a2a6d08231b63e0601395b4e1d9ac92" translate="yes" xml:space="preserve">
          <source>The bootstrapping process has side effects on both &lt;code&gt;sys.path&lt;/code&gt; and &lt;code&gt;os.environ&lt;/code&gt;. Invoking the command line interface in a subprocess instead allows these side effects to be avoided.</source>
          <target state="translated">ブートストラッププロセスは、 &lt;code&gt;sys.path&lt;/code&gt; と &lt;code&gt;os.environ&lt;/code&gt; の両方に副作用があります。代わりに、サブプロセスでコマンドラインインターフェイスを呼び出すと、これらの副作用を回避できます。</target>
        </trans-unit>
        <trans-unit id="f515285eaaa8a5dd687b8c8d9114206f8ad89259" translate="yes" xml:space="preserve">
          <source>The bootstrapping process may install additional modules required by &lt;code&gt;pip&lt;/code&gt;, but other software should not assume those dependencies will always be present by default (as the dependencies may be removed in a future version of &lt;code&gt;pip&lt;/code&gt;).</source>
          <target state="translated">ブートストラッププロセスでは、 &lt;code&gt;pip&lt;/code&gt; に必要な追加のモジュールがインストールされる場合がありますが、他のソフトウェアでは、これらの依存関係がデフォルトで常に存在するとは限りません（依存関係は将来のバージョンの &lt;code&gt;pip&lt;/code&gt; で削除される可能性があるため）。</target>
        </trans-unit>
        <trans-unit id="c5d92c927226a7e06bd64aa8058a997143922e20" translate="yes" xml:space="preserve">
          <source>The breakpoint hit count.</source>
          <target state="translated">ブレイクポイントのヒット数。</target>
        </trans-unit>
        <trans-unit id="1cba654c3d7f4efba7391fd33ea1f1150e43af8b" translate="yes" xml:space="preserve">
          <source>The breakpoint number.</source>
          <target state="translated">ブレークポイント番号。</target>
        </trans-unit>
        <trans-unit id="53bf604092d847435ec91583c0ecb4652c552bdb" translate="yes" xml:space="preserve">
          <source>The broadcast address for the network. Packets sent to the broadcast address should be received by every host on the network.</source>
          <target state="translated">ネットワークのブロードキャストアドレス。ブロードキャストアドレスに送信されたパケットは、ネットワーク上のすべてのホストで受信される必要があります。</target>
        </trans-unit>
        <trans-unit id="7d40ac1836068b896d22f880fb080c4129bf0cf8" translate="yes" xml:space="preserve">
          <source>The built in configuration would correspond to the following turtle.cfg:</source>
          <target state="translated">組み込みの設定は以下の turtle.cfg に対応しています。</target>
        </trans-unit>
        <trans-unit id="e7fa923936d6d1b71a2acb45dbdbd4cb369c9d51" translate="yes" xml:space="preserve">
          <source>The built-in &lt;a href=&quot;#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; function is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal &amp;mdash; this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade).</source>
          <target state="translated">組み込みの&lt;a href=&quot;#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;関数は、安定していることが保証されています。等しいと比較する要素の相対的な順序を変更しないことが保証されている場合、並べ替えは安定しています。これは、複数のパスで並べ替える場合に便利です（たとえば、部門で並べ替えてから、給与の等級で並べ替えます）。</target>
        </trans-unit>
        <trans-unit id="a0892e50ab43cc568814a6df06313480188876dd" translate="yes" xml:space="preserve">
          <source>The built-in default configuration mimics the appearance and behaviour of the old turtle module in order to retain best possible compatibility with it.</source>
          <target state="translated">組み込みのデフォルト設定は、古い turtle モジュールとの互換性を最大限に保つために、古い turtle モジュールの外観や動作を真似しています。</target>
        </trans-unit>
        <trans-unit id="eb1483a41a7a356efe8918b5b9cc6c72b5b93268" translate="yes" xml:space="preserve">
          <source>The built-in exception classes can be subclassed to define new exceptions; programmers are encouraged to derive new exceptions from the &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class or one of its subclasses, and not from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;. More information on defining exceptions is available in the Python Tutorial under &lt;a href=&quot;https://docs.python.org/3.8/tutorial/errors.html#tut-userexceptions&quot;&gt;User-defined Exceptions&lt;/a&gt;.</source>
          <target state="translated">組み込みの例外クラスをサブクラス化して、新しい例外を定義できます。プログラマは、&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;ではなく、&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;クラスまたはそのサブクラスの1つから新しい例外を派生させることをお勧めします。例外の定義の詳細については、Pythonチュートリアルの「&lt;a href=&quot;https://docs.python.org/3.8/tutorial/errors.html#tut-userexceptions&quot;&gt;ユーザー定義の例外」を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3828a20aa9a305e843887279463a549fc13bad92" translate="yes" xml:space="preserve">
          <source>The built-in exceptions listed below can be generated by the interpreter or built-in functions. Except where mentioned, they have an &amp;ldquo;associated value&amp;rdquo; indicating the detailed cause of the error. This may be a string or a tuple of several items of information (e.g., an error code and a string explaining the code). The associated value is usually passed as arguments to the exception class&amp;rsquo;s constructor.</source>
          <target state="translated">以下にリストされている組み込み例外は、インタープリターまたは組み込み関数によって生成されます。言及されている場合を除き、エラーの詳細な原​​因を示す「関連する値」があります。これは、文字列またはいくつかの情報項目のタプル（たとえば、エラーコードとコードを説明する文字列）の場合があります。関連する値は通常、例外クラスのコンストラクターに引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="ce16b2d882c9465a0733bec038b7dbc1af59c9ba" translate="yes" xml:space="preserve">
          <source>The built-in function &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; invokes the online help system in the interactive interpreter, which uses &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; to generate its documentation as text on the console. The same text documentation can also be viewed from outside the Python interpreter by running &lt;strong&gt;pydoc&lt;/strong&gt; as a script at the operating system&amp;rsquo;s command prompt. For example, running</source>
          <target state="translated">組み込み関数&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;は、対話型インタープリターのオンラインヘルプシステムを呼び出します。これは、&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;を使用して、コンソールにテキストとしてドキュメントを生成します。オペレーティングシステムのコマンドプロンプトで&lt;strong&gt;pydoc&lt;/strong&gt;をスクリプトとして実行することにより、Pythonインタープリターの外部から同じテキストドキュメントを表示することもできます。たとえば、実行中</target>
        </trans-unit>
        <trans-unit id="2032bd3ab7af47f02c71e038cf4e4ffa2d3f7fc7" translate="yes" xml:space="preserve">
          <source>The built-in functions &lt;a href=&quot;#globals&quot;&gt;&lt;code&gt;globals()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; return the current global and local dictionary, respectively, which may be useful to pass around for use as the second and third argument to &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">組み込み関数&lt;a href=&quot;#globals&quot;&gt; &lt;code&gt;globals()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;は、それぞれ現在のグローバルディクショナリとローカルディクショナリを返します。これは、&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; の&lt;/a&gt; 2番目と3番目の引数として使用するために渡すのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ad5e8010d0807348a7e3e895536079ec4ac5755b" translate="yes" xml:space="preserve">
          <source>The built-in string class provides the ability to do complex variable substitutions and value formatting via the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; method described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class in the &lt;a href=&quot;#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; module allows you to create and customize your own string formatting behaviors using the same implementation as the built-in &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">組み込みの文字列クラスは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3101で&lt;/strong&gt;&lt;/a&gt;説明されている&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;メソッドを介して、複雑な変数の置換と値のフォーマットを行う機能を提供します。&lt;a href=&quot;#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;クラスを使用すると、組み込みの&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;メソッドと同じ実装を使用して、独自の文字列フォーマット動作を作成およびカスタマイズできます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7779d62430e6d828e7796b70c889aebdd5d5b2a7" translate="yes" xml:space="preserve">
          <source>The bytearray version of this method does &lt;em&gt;not&lt;/em&gt; operate in place - it always produces a new object, even if no changes were made.</source>
          <target state="translated">このメソッドのbytearrayバージョンは適切に動作しませ&lt;em&gt;ん&lt;/em&gt; -変更が加えられていなくても、常に新しいオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="825f32039ec2b8c6f1ad7632fe9653dd855a0a80" translate="yes" xml:space="preserve">
          <source>The bytecode analysis API allows pieces of Python code to be wrapped in a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; object that provides easy access to details of the compiled code.</source>
          <target state="translated">バイトコード分析APIを使用すると、Pythonコードの一部を&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;オブジェクトにラップして、コンパイルされたコードの詳細に簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f4e72ff3f77625381d6ebb85da38770f77d7d8d2" translate="yes" xml:space="preserve">
          <source>The bytes contained in &lt;em&gt;fp&lt;/em&gt; must be formatted as a block of &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; (or, if &lt;code&gt;utf8&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;) style headers and header continuation lines, optionally preceded by an envelope header. The header block is terminated either by the end of the data or by a blank line. Following the header block is the body of the message (which may contain MIME-encoded subparts, including subparts with a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; of &lt;code&gt;8bit&lt;/code&gt;).</source>
          <target state="translated">バイトに含まれている&lt;em&gt;FP&lt;/em&gt;のブロックとしてフォーマットされなければならない&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;（場合、または &lt;code&gt;utf8&lt;/code&gt; ある &lt;code&gt;True&lt;/code&gt; 、&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;形式のヘッダおよびヘッダ継続行、必要に応じてエンベロープヘッダが先行します）。ヘッダーブロックは、データの最後または空白行で終了します。ヘッダーブロックの後にはメッセージの本文があります（これには、 &lt;code&gt;8bit&lt;/code&gt; &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;を持つサブパートを含む、MIMEエンコードされたサブパートが含まれる場合があります）。</target>
        </trans-unit>
        <trans-unit id="72979803b3b76ceaedcd3e763678e9c5bdfe19e9" translate="yes" xml:space="preserve">
          <source>The bytes which represent the bytecode version number. If you need help with loading/writing bytecode then consider &lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイトコードのバージョン番号を表すバイト。バイトコードのロード/書き込みのヘルプが必要な場合は、&lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt; &lt;/a&gt;を検討してください。</target>
        </trans-unit>
        <trans-unit id="63b8460a5fd05daeaaaaeca07ed037cc843d40ae" translate="yes" xml:space="preserve">
          <source>The cache (or part of it) can be cleared manually if a rescan of &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; is necessary.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; の&lt;/a&gt;再スキャンが必要な場合は、キャッシュ（またはその一部）を手動でクリアできます。</target>
        </trans-unit>
        <trans-unit id="ed9c68f517e26b2e6a3625184bdd623a5e8c02e6" translate="yes" xml:space="preserve">
          <source>The caching feature of &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; has been disabled until someone finds the time to hack proper processing of Expiration time headers.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;のキャッシュ機能は、誰かがExpiration時間ヘッダーの適切な処理をハッキングする時間が見つかるまで無効になっています。</target>
        </trans-unit>
        <trans-unit id="4c502152227f3ef8521b4fb7861c4b965c780d96" translate="yes" xml:space="preserve">
          <source>The calculated size of the struct (and hence of the bytes object produced by the &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; method) corresponding to &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format&lt;/code&gt; に&lt;/a&gt;対応する構造体（したがって、&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; &lt;/a&gt;メソッドによって生成されるbytesオブジェクト）の計算サイズ。</target>
        </trans-unit>
        <trans-unit id="c83bb87cd08de64e758cd798a710959973f92aa3" translate="yes" xml:space="preserve">
          <source>The callback function will be called with three arguments; the first being the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, the second is a string that represents the server name that the client is intending to communicate (or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the TLS Client Hello does not contain a server name) and the third argument is the original &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;. The server name argument is text. For internationalized domain name, the server name is an IDN A-label (&lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt;).</source>
          <target state="translated">コールバック関数は3つの引数で呼び出されます。1 つ目は&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;で、2つ目はクライアントが通信しようとしているサーバー名を表す文字列（またはTLS Client Helloにサーバー名が含まれていない場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;）で、3番目の引数は元の&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;です。サーバー名の引数はテキストです。国際化ドメイン名の場合、サーバー名はIDN Aラベル（ &lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="cd8e655e9eed9b74bde977375823ab681334e73c" translate="yes" xml:space="preserve">
          <source>The callback will be invoked by &lt;em&gt;loop&lt;/em&gt;, along with other queued callbacks and runnable coroutines of that event loop. Unlike signal handlers registered using &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, a callback registered with this function is allowed to interact with the event loop.</source>
          <target state="translated">コールバックは、他のキューに入れられたコールバックおよびそのイベントループの実行可能なコルーチンとともに、&lt;em&gt;loop&lt;/em&gt;によって呼び出されます。&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;を使用して登録されたシグナルハンドラーとは異なり、この関数で登録されたコールバックは、イベントループと対話できます。</target>
        </trans-unit>
        <trans-unit id="22bd53399975bb33fc06872aa0715a547b88ac9e" translate="yes" xml:space="preserve">
          <source>The caller may release or mutate &lt;em&gt;b&lt;/em&gt; after this method returns, so the implementation should only access &lt;em&gt;b&lt;/em&gt; during the method call.</source>
          <target state="translated">このメソッドが戻った後、呼び出し元は&lt;em&gt;bを&lt;/em&gt;解放または変更する可能性があるため、実装はメソッド呼び出し中にのみ&lt;em&gt;b&lt;/em&gt;にアクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="eff6d403c84e9dd6cfb7f05890938d3f3448560b" translate="yes" xml:space="preserve">
          <source>The canonical form of the filename which contains the frame.</source>
          <target state="translated">フレームを含むファイル名の正規形。</target>
        </trans-unit>
        <trans-unit id="c8533238eda8a62e9128958e4776c77a39312314" translate="yes" xml:space="preserve">
          <source>The canonical name of this HMAC, always lowercase, e.g. &lt;code&gt;hmac-md5&lt;/code&gt;.</source>
          <target state="translated">このHMACの正規名。常に小文字です（例： &lt;code&gt;hmac-md5&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="ff8c6491e39ff96156d9120d3205f0365e5d01cf" translate="yes" xml:space="preserve">
          <source>The canonical name of this hash, always lowercase and always suitable as a parameter to &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt; to create another hash of this type.</source>
          <target state="translated">このハッシュの正規名。常に小文字であり、常にこのタイプの別のハッシュを作成する&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; の&lt;/a&gt;パラメーターとして適しています。</target>
        </trans-unit>
        <trans-unit id="86383e1461d35f27675e6567047706ab486a7820" translate="yes" xml:space="preserve">
          <source>The casefolding algorithm is described in section 3.13 of the Unicode Standard.</source>
          <target state="translated">ケースフォールディングアルゴリズムは Unicode 規格の 3.13 節に記述されています。</target>
        </trans-unit>
        <trans-unit id="09bc2e18042eda7d06b3a19559cc299378be13d8" translate="yes" xml:space="preserve">
          <source>The ceiling for the process&amp;rsquo;s nice level (calculated as 20 - rlim_cur).</source>
          <target state="translated">プロセスのniceレベルの上限（20-rlim_curとして計算）。</target>
        </trans-unit>
        <trans-unit id="8ce6ab2c12963a27ddd741a54afdd9198d059d94" translate="yes" xml:space="preserve">
          <source>The ceiling of the real-time priority.</source>
          <target state="translated">リアルタイム優先の天井。</target>
        </trans-unit>
        <trans-unit id="639203ac4f7750e330cf2cd16c6fd78a1b956598" translate="yes" xml:space="preserve">
          <source>The central class in the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package is the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, imported from the &lt;a href=&quot;#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module. It is the base class for the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; object model. &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; provides the core functionality for setting and querying header fields, for accessing message bodies, and for creating or modifying structured messages.</source>
          <target state="translated">で、中央クラス&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージです&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のの&lt;/a&gt;からインポート、クラス&lt;a href=&quot;#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; の&lt;/a&gt;モジュール。これは、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;オブジェクトモデルの基本クラスです。&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;は、ヘッダーフィールドの設定とクエリ、メッセージ本文へのアクセス、構造化メッセージの作成または変更のためのコア機能を提供します。</target>
        </trans-unit>
        <trans-unit id="4e36386588c7d08f4857bc3785fb1d4d5c17d9fa" translate="yes" xml:space="preserve">
          <source>The central component of the package is an &amp;ldquo;object model&amp;rdquo; that represents email messages. An application interacts with the package primarily through the object model interface defined in the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt; sub-module. The application can use this API to ask questions about an existing email, to construct a new email, or to add or remove email subcomponents that themselves use the same object model interface. That is, following the nature of email messages and their MIME subcomponents, the email object model is a tree structure of objects that all provide the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">パッケージの中心的なコンポーネントは、電子メールメッセージを表す「オブジェクトモデル」です。アプリケーションは、主に&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt;サブモジュールで定義されたオブジェクトモデルインターフェイスを介してパッケージと対話します。アプリケーションはこのAPIを使用して、既存のメールについて質問したり、新しいメールを作成したり、同じオブジェクトモデルインターフェースを使用するメールサブコンポーネントを追加または削除したりできます。つまり、電子メールメッセージとそのMIMEサブコンポーネントの性質に従って、電子メールオブジェクトモデルは、すべて&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; APIを提供するオブジェクトのツリー構造です。</target>
        </trans-unit>
        <trans-unit id="b8ad1ef8b31c9d3d4272c53dd49dd5587dde6ea9" translate="yes" xml:space="preserve">
          <source>The channel continues to collect data forever</source>
          <target state="translated">チャンネルは永遠にデータを収集し続ける</target>
        </trans-unit>
        <trans-unit id="990b5a1da94f1bd10326a2f8f9f4f2d725871e25" translate="yes" xml:space="preserve">
          <source>The character conventionally used by the operating system to separate search path components (as in &lt;code id=&quot;index-44&quot;&gt;PATH&lt;/code&gt;), such as &lt;code&gt;':'&lt;/code&gt; for POSIX or &lt;code&gt;';'&lt;/code&gt; for Windows. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">POSIXの &lt;code&gt;':'&lt;/code&gt; や &lt;code&gt;';'&lt;/code&gt; など、検索パスコンポーネントを分離するためにオペレーティングシステムで従来から使用されている文字（ &lt;code id=&quot;index-44&quot;&gt;PATH&lt;/code&gt; など）。Windows用。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="3d99da8fe6d18c618150889ebc5804acc1de27a2" translate="yes" xml:space="preserve">
          <source>The character encoding is platform-dependent. Non-Windows platforms use the locale encoding (see &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字エンコーディングはプラットフォームに依存します。Windows以外のプラットフォームは、ロケールエンコーディングを使用します（&lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="bfc93a686eda7c49ec3507891da13ae0c98e36c9" translate="yes" xml:space="preserve">
          <source>The character set, &lt;a href=&quot;string#string.ascii_letters&quot;&gt;&lt;code&gt;string.ascii_letters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string#string.digits&quot;&gt;&lt;code&gt;string.digits&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;!#$%&amp;amp;'*+-.^_`|~:&lt;/code&gt; denote the set of valid characters allowed by this module in Cookie name (as &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字セット&lt;a href=&quot;string#string.ascii_letters&quot;&gt; &lt;code&gt;string.ascii_letters&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;string#string.digits&quot;&gt; &lt;code&gt;string.digits&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;!#$%&amp;amp;'*+-.^_`|~:&lt;/code&gt; Cookie名（&lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;として）でこのモジュールによって許可されている有効な文字のセットを示します。</target>
        </trans-unit>
        <trans-unit id="f3c8562e2db6ea59a857d6692fcd05b5595aad09" translate="yes" xml:space="preserve">
          <source>The character used by the operating system to separate pathname components. This is &lt;code&gt;'/'&lt;/code&gt; for POSIX and &lt;code&gt;'\\'&lt;/code&gt; for Windows. Note that knowing this is not sufficient to be able to parse or concatenate pathnames &amp;mdash; use &lt;a href=&quot;os.path#os.path.split&quot;&gt;&lt;code&gt;os.path.split()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os.path#os.path.join&quot;&gt;&lt;code&gt;os.path.join()&lt;/code&gt;&lt;/a&gt; &amp;mdash; but it is occasionally useful. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パス名コンポーネントを区切るためにオペレーティングシステムによって使用される文字。これは、POSIX &lt;code&gt;'/'&lt;/code&gt; 場合は「/ &lt;code&gt;'\\'&lt;/code&gt; 、Windows の場合は「\\」です。これを知っていても、パス名を解析または連結するには十分ではないことに注意してください&amp;mdash; &lt;a href=&quot;os.path#os.path.split&quot;&gt; &lt;code&gt;os.path.split()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;os.path#os.path.join&quot;&gt; &lt;code&gt;os.path.join()&lt;/code&gt; を&lt;/a&gt;使用してください&amp;mdash;場合によっては便利です。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="309bb84393dbc6c91d360c133c257980087f7321" translate="yes" xml:space="preserve">
          <source>The character used to draw separator lines under the help-message headers. If empty, no ruler line is drawn. It defaults to &lt;code&gt;'='&lt;/code&gt;.</source>
          <target state="translated">ヘルプメッセージヘッダーの下に区切り線を描画するために使用される文字。空の場合、定規線は描画されません。デフォルトは &lt;code&gt;'='&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0ea51325acbd5404b45bf3a9645468bed81b871e" translate="yes" xml:space="preserve">
          <source>The character which separates the base filename from the extension; for example, the &lt;code&gt;'.'&lt;/code&gt; in &lt;code&gt;os.py&lt;/code&gt;. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基本ファイル名と拡張子を区切る文字。たとえば、 &lt;code&gt;'.'&lt;/code&gt; で &lt;code&gt;os.py&lt;/code&gt; 。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="f625dcb310956d459da71c49e55907d5aaf7c87f" translate="yes" xml:space="preserve">
          <source>The child process is not killed if the timeout expires, so in order to cleanup properly a well-behaved application should kill the child process and finish communication:</source>
          <target state="translated">タイムアウトが切れても子プロセスは終了しないので、適切にクリーンアップするためには、きちんとしたアプリケーションが子プロセスを終了させて通信を終了させる必要があります。</target>
        </trans-unit>
        <trans-unit id="6548909ff9d18497967c143ac6e0f73e274ac502" translate="yes" xml:space="preserve">
          <source>The child return code, set by &lt;a href=&quot;#subprocess.Popen.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.Popen.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; (and indirectly by &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt;). A &lt;code&gt;None&lt;/code&gt; value indicates that the process hasn&amp;rsquo;t terminated yet.</source>
          <target state="translated">子の戻りコード&lt;a href=&quot;#subprocess.Popen.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#subprocess.Popen.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;によって設定されます（および、&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;によって間接的に設定されます）。 &lt;code&gt;None&lt;/code&gt; 値は、プロセスがまだ終了していないことを示しています。</target>
        </trans-unit>
        <trans-unit id="249b5d2d494ab6f926a71d2362ead22383753022" translate="yes" xml:space="preserve">
          <source>The child&amp;rsquo;s exit code. This will be &lt;code&gt;None&lt;/code&gt; if the process has not yet terminated. A negative value &lt;em&gt;-N&lt;/em&gt; indicates that the child was terminated by signal &lt;em&gt;N&lt;/em&gt;.</source>
          <target state="translated">子の終了コード。プロセスがまだ終了していない場合、これは &lt;code&gt;None&lt;/code&gt; になります。負の値&lt;em&gt;-N&lt;/em&gt;は、子がシグナル&lt;em&gt;N&lt;/em&gt;によって終了されたことを示します。</target>
        </trans-unit>
        <trans-unit id="0c7e9fdca9f228eaff4bb459dac6747ec6ddefb6" translate="yes" xml:space="preserve">
          <source>The choice of which database package will be used (such as &lt;a href=&quot;dbm#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;dbm#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;) depends on which interface is available. Therefore it is not safe to open the database directly using &lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;. The database is also (unfortunately) subject to the limitations of &lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;, if it is used &amp;mdash; this means that (the pickled representation of) the objects stored in the database should be fairly small, and in rare cases key collisions may cause the database to refuse updates.</source>
          <target state="translated">使用するデータベースパッケージ（&lt;a href=&quot;dbm#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;dbm#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; など&lt;/a&gt;）の選択は、使用可能なインターフェースによって異なります。したがって、&lt;a href=&quot;dbm#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;を使用してデータベースを直接開くのは安全ではありません。データベースは、（残念ながら）&lt;a href=&quot;dbm#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;が使用されている場合、その制限にも影響を受けます。つまり、データベースに格納されているオブジェクト（のピクル表示）はかなり小さくなければならず、まれに、キーの衝突によってデータベースが更新を拒否します。</target>
        </trans-unit>
        <trans-unit id="641b5aed9850d067945c10edf2925a45f43bfb8b" translate="yes" xml:space="preserve">
          <source>The chronological synopsis of the underlying operation is as follows:</source>
          <target state="translated">下敷きになっている操作の時系列的なあらすじは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d5e64182f2236479d6838cc99f8595dca788e504" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;#msilib.CAB&quot;&gt;&lt;code&gt;CAB&lt;/code&gt;&lt;/a&gt; represents a CAB file. During MSI construction, files will be added simultaneously to the &lt;code&gt;Files&lt;/code&gt; table, and to a CAB file. Then, when all files have been added, the CAB file can be written, then added to the MSI file.</source>
          <target state="translated">クラス&lt;a href=&quot;#msilib.CAB&quot;&gt; &lt;code&gt;CAB&lt;/code&gt; &lt;/a&gt;はCABファイルを表します。MSIの構築中、ファイルは &lt;code&gt;Files&lt;/code&gt; テーブルとCABファイルに同時に追加されます。次に、すべてのファイルが追加されたら、CABファイルを書き込み、MSIファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="4fc389f3d71edbec0527ca0760a3cd2d7c5166d0" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Color&lt;/code&gt; is an &lt;em&gt;enumeration&lt;/em&gt; (or &lt;em&gt;enum&lt;/em&gt;)</source>
          <target state="translated">クラス &lt;code&gt;Color&lt;/code&gt; は&lt;em&gt;列挙型&lt;/em&gt;（または&lt;em&gt;enum&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="f9d013c76081da9c5c270257f29700914efbf655" translate="yes" xml:space="preserve">
          <source>The class attribute &lt;code&gt;C.z&lt;/code&gt; will be &lt;code&gt;10&lt;/code&gt;, the class attribute &lt;code&gt;C.t&lt;/code&gt; will be &lt;code&gt;20&lt;/code&gt;, and the class attributes &lt;code&gt;C.x&lt;/code&gt; and &lt;code&gt;C.y&lt;/code&gt; will not be set.</source>
          <target state="translated">クラス属性 &lt;code&gt;C.z&lt;/code&gt; は &lt;code&gt;10&lt;/code&gt; 、クラス属性 &lt;code&gt;C.t&lt;/code&gt; は &lt;code&gt;20&lt;/code&gt; 、クラス属性 &lt;code&gt;C.x&lt;/code&gt; と &lt;code&gt;C.y&lt;/code&gt; は設定されません。</target>
        </trans-unit>
        <trans-unit id="35421f70e067873d5f1e6c9a350a9cd53c04e5f2" translate="yes" xml:space="preserve">
          <source>The class can be used to simulate nested scopes and is useful in templating.</source>
          <target state="translated">このクラスは、ネストされたスコープをシミュレートするために使用することができ、テンプレートを作成する際に便利です。</target>
        </trans-unit>
        <trans-unit id="36961ba5b73fc5b81b86c2c4a82a8030e61ec555" translate="yes" xml:space="preserve">
          <source>The class for reading and writing ZIP files. See section &lt;a href=&quot;#zipfile-objects&quot;&gt;ZipFile Objects&lt;/a&gt; for constructor details.</source>
          <target state="translated">ZIPファイルを読み書きするためのクラス。コンストラクタの詳細については、「&lt;a href=&quot;#zipfile-objects&quot;&gt;ZipFileオブジェクト」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d13bab7dac8afe400af05e5ac5c428448bda17c6" translate="yes" xml:space="preserve">
          <source>The class hierarchy for built-in exceptions is:</source>
          <target state="translated">組み込みの例外のクラス階層は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f62ddfd2faaa7f84859ae34b4dabf08d739e4525" translate="yes" xml:space="preserve">
          <source>The class hierarchy looks complicated, but in actual practice, application programmers almost always refer to the classes at the very bottom of the hierarchy.</source>
          <target state="translated">クラス階層は複雑に見えますが、実際にはアプリケーションプログラマはほとんどの場合、階層の一番下にあるクラスを参照しています。</target>
        </trans-unit>
        <trans-unit id="11acc8f9993621da6ab27b43e0137b38b7b7a4a1" translate="yes" xml:space="preserve">
          <source>The class implementing primitive lock objects. Once a thread has acquired a lock, subsequent attempts to acquire it block, until it is released; any thread may release it.</source>
          <target state="translated">プリミティブなロックオブジェクトを実装したクラス。スレッドが一度ロックを取得すると、それ以降の取得の試みは、それが解放されるまでブロックされます;どのスレッドもそれを解放することができます。</target>
        </trans-unit>
        <trans-unit id="97d60cfb78fc29a2188c1e8e530bba513612e7fc" translate="yes" xml:space="preserve">
          <source>The class must define one of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;. In addition, the class should supply an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">クラスは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;いずれかを定義する必要があります。さらに、クラスは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="a554b687dbf11ba71cc8de41c11ea71e511af98b" translate="yes" xml:space="preserve">
          <source>The class of the original traceback.</source>
          <target state="translated">元のトレースバックのクラス。</target>
        </trans-unit>
        <trans-unit id="6f41a7aa24987af381eb3cfdc36177bde5d48ab8" translate="yes" xml:space="preserve">
          <source>The class of the result returned by &lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt;&lt;code&gt;Pool.apply_async()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt;&lt;code&gt;Pool.map_async()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt; &lt;code&gt;Pool.apply_async()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt; &lt;code&gt;Pool.map_async()&lt;/code&gt; &lt;/a&gt;によって返される結果のクラス。</target>
        </trans-unit>
        <trans-unit id="f996acfc2842340ff19f3be54d9a7bbdc048eb8b" translate="yes" xml:space="preserve">
          <source>The class provides the following concrete implementations of the abstract methods of &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このクラスは、次の&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; の&lt;/a&gt;抽象メソッドの具体的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5dccf24c2a64fd1d1642a87c5b4ceefbc8b4548b" translate="yes" xml:space="preserve">
          <source>The class setting can be overridden in individual test methods by assigning an instance attribute, self.longMessage, to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; before calling the assert methods.</source>
          <target state="translated">クラスの設定は、assertメソッドを呼び出す前にインスタンス属性self.longMessageを &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; に割り当てることにより、個々のテストメソッドでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="4fb7f174a74b65f3dd94a096df16ea30953a0068" translate="yes" xml:space="preserve">
          <source>The class setting gets reset before each test call.</source>
          <target state="translated">クラスの設定は、各テストコールの前にリセットされます。</target>
        </trans-unit>
        <trans-unit id="9f589d651376efd47cd3c71b4a534513e314e255" translate="yes" xml:space="preserve">
          <source>The class to which a class instance belongs.</source>
          <target state="translated">クラスインスタンスが属するクラス。</target>
        </trans-unit>
        <trans-unit id="355cb42d141ca89adac71b050c3ab2434b32b6ee" translate="yes" xml:space="preserve">
          <source>The class used to represent an address group. The general form of an address group is:</source>
          <target state="translated">アドレスグループを表現するために使用されるクラス。アドレスグループの一般的な形式は</target>
        </trans-unit>
        <trans-unit id="e4a0b7dcb2051eb55138851ecdd24023ca364443" translate="yes" xml:space="preserve">
          <source>The class used to represent an email address. The general form of an address is:</source>
          <target state="translated">メールアドレスを表すために使用されるクラス。アドレスの一般的な形式は</target>
        </trans-unit>
        <trans-unit id="bfa706500f9a8aaf4d9b36f7e8cf2f4edccd139d" translate="yes" xml:space="preserve">
          <source>The class which implements the sequence behavior provided by the module is available for subclassing as well:</source>
          <target state="translated">モジュールが提供するシーケンス動作を実装したクラスは、サブクラスとしても利用可能です。</target>
        </trans-unit>
        <trans-unit id="aae6ed8b229fce1c1f5a84dd0061e129c39af6d2" translate="yes" xml:space="preserve">
          <source>The class will however, run the CGI script, instead of serving it as a file, if it guesses it to be a CGI script. Only directory-based CGI are used &amp;mdash; the other common server configuration is to treat special extensions as denoting CGI scripts.</source>
          <target state="translated">ただし、CGIスクリプトであると推測された場合、クラスはファイルとして提供するのではなく、CGIスクリプトを実行します。ディレクトリベースのCGIのみが使用されます&amp;mdash;他の一般的なサーバー構成は、特別な拡張機能をCGIスクリプトを示すものとして扱うことです。</target>
        </trans-unit>
        <trans-unit id="14895e9455625ea3905a043291b8d94e88a9a62c" translate="yes" xml:space="preserve">
          <source>The class, &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; acts as a wrapper around dictionary objects. The need for this class has been partially supplanted by the ability to subclass directly from &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;; however, this class can be easier to work with because the underlying dictionary is accessible as an attribute.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;クラスは、辞書オブジェクトのラッパーとして機能します。このクラスの必要性は、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;から直接サブクラス化する機能によって部分的に取って代わられました。ただし、基になるディクショナリは属性としてアクセスできるため、このクラスは操作が簡単です。</target>
        </trans-unit>
        <trans-unit id="d174a1d7f851da4b93f967fb6954b8658cb60437" translate="yes" xml:space="preserve">
          <source>The class, &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; acts as a wrapper around string objects. The need for this class has been partially supplanted by the ability to subclass directly from &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;; however, this class can be easier to work with because the underlying string is accessible as an attribute.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;クラスは、文字列オブジェクトのラッパーとして機能します。このクラスの必要性は、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;から直接サブクラス化する機能によって部分的に取って代わられました。ただし、基になる文字列は属性としてアクセスできるため、このクラスは操作が簡単です。</target>
        </trans-unit>
        <trans-unit id="5500c02e097010b4c8f6204fff9a65578fc826eb" translate="yes" xml:space="preserve">
          <source>The class-based API of the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module gives you more flexibility and greater convenience than the GNU &lt;strong&gt;gettext&lt;/strong&gt; API. It is the recommended way of localizing your Python applications and modules. &lt;code&gt;gettext&lt;/code&gt; defines a &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; class which implements the parsing of GNU &lt;code&gt;.mo&lt;/code&gt; format files, and has methods for returning strings. Instances of this class can also install themselves in the built-in namespace as the function &lt;code&gt;_()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;モジュールのクラスベースのAPIは、GNU &lt;strong&gt;gettext&lt;/strong&gt; API よりも柔軟性と利便性を高めます。これは、Pythonアプリケーションおよびモジュールをローカライズするための推奨される方法です。 &lt;code&gt;gettext&lt;/code&gt; は、GNU &lt;code&gt;.mo&lt;/code&gt; 形式のファイルの解析を実装する&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt;クラスを定義し、文字列を返すためのメソッドを備えています。このクラスのインスタンスは、組み込みの名前空間に関数 &lt;code&gt;_()&lt;/code&gt; としてインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="c13471f17673e1d2e66bc6085c5a5e90090a6bc9" translate="yes" xml:space="preserve">
          <source>The client code for the preceding server:</source>
          <target state="translated">先行サーバのクライアントコード。</target>
        </trans-unit>
        <trans-unit id="b1f854376f85fdbc545caa4175dd50a74dcba07c" translate="yes" xml:space="preserve">
          <source>The client gets the image and saves it to a file:</source>
          <target state="translated">クライアントは画像を取得し、ファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="4ab7c3dd55c07004f21171421d1885b6e9798e35" translate="yes" xml:space="preserve">
          <source>The client that interacts with the above server is included in &lt;code&gt;Lib/xmlrpc/client.py&lt;/code&gt;:</source>
          <target state="translated">上記のサーバーと対話するクライアントは、 &lt;code&gt;Lib/xmlrpc/client.py&lt;/code&gt; に含まれています。</target>
        </trans-unit>
        <trans-unit id="608024e3b56c218bd3b7db1f81cc2c4367596096" translate="yes" xml:space="preserve">
          <source>The clipboard functions are also available in context menus.</source>
          <target state="translated">クリップボードの機能は、コンテキストメニューでも利用できます。</target>
        </trans-unit>
        <trans-unit id="60463a3de47534f196bb050046587ea8de1a88f2" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.combinations&quot;&gt;&lt;code&gt;combinations()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.permutations&quot;&gt;&lt;code&gt;permutations()&lt;/code&gt;&lt;/a&gt; after filtering entries where the elements are not in sorted order (according to their position in the input pool):</source>
          <target state="translated">要素がソートされた順序ではない（入力プール内の位置に従って&lt;a href=&quot;#itertools.permutations&quot;&gt; &lt;code&gt;permutations()&lt;/code&gt; &lt;/a&gt;エントリをフィルタリングした後、&lt;a href=&quot;#itertools.combinations&quot;&gt; &lt;code&gt;combinations()&lt;/code&gt; &lt;/a&gt;のコードはpermutations（）のサブシーケンスとして表すこともできます。</target>
        </trans-unit>
        <trans-unit id="42d5eab0dfe9ab9a1feea6f7f8bc6b66cd010c25" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.combinations_with_replacement&quot;&gt;&lt;code&gt;combinations_with_replacement()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.product&quot;&gt;&lt;code&gt;product()&lt;/code&gt;&lt;/a&gt; after filtering entries where the elements are not in sorted order (according to their position in the input pool):</source>
          <target state="translated">&lt;a href=&quot;#itertools.combinations_with_replacement&quot;&gt; &lt;code&gt;combinations_with_replacement()&lt;/code&gt; &lt;/a&gt;のコードは、要素が（入力プール内の位置に従って）ソートされていないエントリをフィルタリングした後の&lt;a href=&quot;#itertools.product&quot;&gt; &lt;code&gt;product()&lt;/code&gt; の&lt;/a&gt;サブシーケンスとして表すこともできます。</target>
        </trans-unit>
        <trans-unit id="5d24621b4d5417bdfdf2582fa71fca0ab60793e2" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.permutations&quot;&gt;&lt;code&gt;permutations()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.product&quot;&gt;&lt;code&gt;product()&lt;/code&gt;&lt;/a&gt;, filtered to exclude entries with repeated elements (those from the same position in the input pool):</source>
          <target state="translated">&lt;a href=&quot;#itertools.permutations&quot;&gt; &lt;code&gt;permutations()&lt;/code&gt; &lt;/a&gt;のコードは&lt;a href=&quot;#itertools.product&quot;&gt; &lt;code&gt;product()&lt;/code&gt; の&lt;/a&gt;サブシーケンスとして表現することもでき、フィルターされた要素（入力プールの同じ位置にあるもの）を含むエントリを除外するためにフィルター処理されます。</target>
        </trans-unit>
        <trans-unit id="703d509dc902a2797f32a1cd580178bc07de8485" translate="yes" xml:space="preserve">
          <source>The code for the sample CGI used in the above example is:</source>
          <target state="translated">上記の例で使用したサンプルCGIのコードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="85fb1e301318f4a3be03adcd9de36da57823dfa5" translate="yes" xml:space="preserve">
          <source>The code handling the FTP protocol cannot differentiate between a file and a directory. This can lead to unexpected behavior when attempting to read a URL that points to a file that is not accessible. If the URL ends in a &lt;code&gt;/&lt;/code&gt;, it is assumed to refer to a directory and will be handled accordingly. But if an attempt to read a file leads to a 550 error (meaning the URL cannot be found or is not accessible, often for permission reasons), then the path is treated as a directory in order to handle the case when a directory is specified by a URL but the trailing &lt;code&gt;/&lt;/code&gt; has been left off. This can cause misleading results when you try to fetch a file whose read permissions make it inaccessible; the FTP code will try to read it, fail with a 550 error, and then perform a directory listing for the unreadable file. If fine-grained control is needed, consider using the &lt;a href=&quot;ftplib#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt; module, subclassing &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt;, or changing &lt;em&gt;_urlopener&lt;/em&gt; to meet your needs.</source>
          <target state="translated">FTPプロトコルを処理するコードは、ファイルとディレクトリを区別できません。これにより、アクセスできないファイルを指すURLを読み取ろうとすると、予期しない動作が発生する可能性があります。 URLが &lt;code&gt;/&lt;/code&gt; で終わっている場合は、ディレクトリを参照していると見なされ、それに応じて処理されます。しかし、ファイルを読み取ろうとすると550エラーが発生する場合（URLが見つからないか、アクセスできないことを意味します。多くの場合、アクセス許可の理由により）、ディレクトリが指定されている場合に対処するために、パスはディレクトリとして扱われます。 URLによるが、末尾 &lt;code&gt;/&lt;/code&gt; 中止されました。これにより、読み取り権限でアクセスできないファイルをフェッチしようとすると、誤解を招く結果になる可能性があります。FTPコードはそれを読み取ろうとし、550エラーで失敗し、読み取り不可能なファイルのディレクトリ一覧を実行します。きめの細かい制御が必要な場合は、使用を検討し&lt;a href=&quot;ftplib#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; の&lt;/a&gt;、モジュールのサブクラス&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;、または変更&lt;em&gt;_urlopenerの&lt;/em&gt;ニーズを満たすために。</target>
        </trans-unit>
        <trans-unit id="4fd6893c62a4fe9dae88f1c3b04f9d6d6548dc2b" translate="yes" xml:space="preserve">
          <source>The code object has a variable keyword parameter (&lt;code&gt;**kwargs&lt;/code&gt;-like).</source>
          <target state="translated">コードオブジェクトには、可変のキーワードパラメーター（ &lt;code&gt;**kwargs&lt;/code&gt; のような）があります。</target>
        </trans-unit>
        <trans-unit id="0979e7acdfaef407b5b5097fc26f4a26bcb8cdf1" translate="yes" xml:space="preserve">
          <source>The code object has a variable positional parameter (&lt;code&gt;*args&lt;/code&gt;-like).</source>
          <target state="translated">コードオブジェクトには、可変位置パラメーター（ &lt;code&gt;*args&lt;/code&gt; のような）があります。</target>
        </trans-unit>
        <trans-unit id="080cac35a0f36ed235e2876fd22854eef029be12" translate="yes" xml:space="preserve">
          <source>The code object is optimized, using fast locals.</source>
          <target state="translated">コードオブジェクトは、高速なローカルを使用して最適化されています。</target>
        </trans-unit>
        <trans-unit id="47a377ea1cb4376dfc822cfb1e3d5bc1d7585dd2" translate="yes" xml:space="preserve">
          <source>The code supports &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;, plus the &lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE and &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt; SMTPUTF8 extensions.</source>
          <target state="translated">このコードは&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;に加えて、&lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZEおよび&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt; SMTPUTF8拡張をサポートしてい&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4817874f40ce2ab856a7cb1cf5cd601ddcb8bfd6" translate="yes" xml:space="preserve">
          <source>The collections module offers the following &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;ABCs&lt;/a&gt;:</source>
          <target state="translated">コレクションモジュールは、次の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;ABCを&lt;/a&gt;提供します。</target>
        </trans-unit>
        <trans-unit id="3e84acb27476c2c05eba0a4f4a824cd8ec501c13" translate="yes" xml:space="preserve">
          <source>The column corresponding to &lt;em&gt;pos&lt;/em&gt; (may be &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;posに&lt;/em&gt;対応する列（ &lt;code&gt;None&lt;/code&gt; の場合があります）。</target>
        </trans-unit>
        <trans-unit id="a56243341a69d0e12d71b0d910747be9b8112c7b" translate="yes" xml:space="preserve">
          <source>The column corresponding to &lt;em&gt;pos&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;posに&lt;/em&gt;対応する列。</target>
        </trans-unit>
        <trans-unit id="52291400b098238a6b1adf88eaf1c290f1adcf33" translate="yes" xml:space="preserve">
          <source>The combobox widgets generates a &lt;strong&gt;&amp;lt;&amp;lt;ComboboxSelected&amp;gt;&amp;gt;&lt;/strong&gt; virtual event when the user selects an element from the list of values.</source>
          <target state="translated">ユーザーが値のリストから要素を選択すると、コンボボックスウィジェットは&lt;strong&gt;&amp;lt;&amp;lt; ComboboxSelected &amp;gt;&amp;gt;&lt;/strong&gt;仮想イベントを生成します。</target>
        </trans-unit>
        <trans-unit id="0a0ffc5780ada254563235dcef8afc5b94088687" translate="yes" xml:space="preserve">
          <source>The command line can also be used for test discovery, for running all of the tests in a project or just a subset.</source>
          <target state="translated">コマンドラインは、プロジェクト内のすべてのテストを実行したり、サブセットだけを実行したりと、テストの発見にも使用できます。</target>
        </trans-unit>
        <trans-unit id="9d6a9ddd026e421ebebeb4fd4a12d14a163fea6c" translate="yes" xml:space="preserve">
          <source>The command line interface is invoked using the interpreter&amp;rsquo;s &lt;code&gt;-m&lt;/code&gt; switch.</source>
          <target state="translated">コマンドラインインターフェイスは、インタープリターの &lt;code&gt;-m&lt;/code&gt; スイッチを使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0ad815c39bd5fc01a37786842578018d08d7a616" translate="yes" xml:space="preserve">
          <source>The command or option attempted is not supported by the server.</source>
          <target state="translated">試みたコマンドまたはオプションは、サーバーがサポートしていません。</target>
        </trans-unit>
        <trans-unit id="4b2372b300214e5a9d80b5b465939fec489d9cce" translate="yes" xml:space="preserve">
          <source>The command, if run with &lt;code&gt;-h&lt;/code&gt;, will show the available options:</source>
          <target state="translated">コマンドを &lt;code&gt;-h&lt;/code&gt; で実行すると、使用可能なオプションが表示されます。</target>
        </trans-unit>
        <trans-unit id="6e345e636adf7e9a665df637497de8ab138640b2" translate="yes" xml:space="preserve">
          <source>The commands recognized by the debugger are listed below. Most commands can be abbreviated to one or two letters as indicated; e.g. &lt;code&gt;h(elp)&lt;/code&gt; means that either &lt;code&gt;h&lt;/code&gt; or &lt;code&gt;help&lt;/code&gt; can be used to enter the help command (but not &lt;code&gt;he&lt;/code&gt; or &lt;code&gt;hel&lt;/code&gt;, nor &lt;code&gt;H&lt;/code&gt; or &lt;code&gt;Help&lt;/code&gt; or &lt;code&gt;HELP&lt;/code&gt;). Arguments to commands must be separated by whitespace (spaces or tabs). Optional arguments are enclosed in square brackets (&lt;code&gt;[]&lt;/code&gt;) in the command syntax; the square brackets must not be typed. Alternatives in the command syntax are separated by a vertical bar (&lt;code&gt;|&lt;/code&gt;).</source>
          <target state="translated">デバッガが認識するコマンドを以下に示します。ほとんどのコマンドは、示されているように1文字または2文字に短縮できます。たとえば &lt;code&gt;h(elp)&lt;/code&gt; は、 &lt;code&gt;h&lt;/code&gt; または &lt;code&gt;help&lt;/code&gt; を使用してヘルプコマンドを入力できることを意味します（ただし、 &lt;code&gt;he&lt;/code&gt; または &lt;code&gt;hel&lt;/code&gt; 、または &lt;code&gt;H&lt;/code&gt; または &lt;code&gt;Help&lt;/code&gt; または &lt;code&gt;HELP&lt;/code&gt; は使用できません）。コマンドの引数は、空白（スペースまたはタブ）で区切る必要があります。オプションの引数は、コマンド構文では角括弧（ &lt;code&gt;[]&lt;/code&gt; ）で囲まれています。角括弧は入力しないでください。コマンド構文の選択肢は、縦棒（ &lt;code&gt;|&lt;/code&gt; ）で区切られています。</target>
        </trans-unit>
        <trans-unit id="1b0c4e95df2cc092cf548fbafd773a5feced6509" translate="yes" xml:space="preserve">
          <source>The comment associated with the ZIP file as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. If assigning a comment to a &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; instance created with mode &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, it should be no longer than 65535 bytes. Comments longer than this will be truncated.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとしてのZIPファイルに関連付けられたコメント。モード &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、または &lt;code&gt;'a'&lt;/code&gt; で作成された&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;インスタンスにコメントを割り当てる場合、コメントは65535バイト以下にする必要があります。これより長いコメントは切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="c3d4ab182c2db8443dd330fa9a538692f30951a8" translate="yes" xml:space="preserve">
          <source>The comparison between expected outputs and actual outputs is done by an &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt;. This comparison may be customized with a number of option flags; see section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt; for more information. If the option flags are insufficient, then the comparison may also be customized by passing a subclass of &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; to the constructor.</source>
          <target state="translated">予想される出力と実際の出力の比較は、&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt;によって行われます。この比較は、いくつかのオプションフラグでカスタマイズできます。詳細については、&lt;a href=&quot;#doctest-options&quot;&gt;オプションフラグ&lt;/a&gt;を参照してください。オプションフラグが不十分な場合は、&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; の&lt;/a&gt;サブクラスをコンストラクターに渡して、比較をカスタマイズすることもできます。</target>
        </trans-unit>
        <trans-unit id="79c38cc9654a2b0cf446da2a3b3b6ba57617ee75" translate="yes" xml:space="preserve">
          <source>The comparisons &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;&lt;em&gt;always&lt;/em&gt; return a &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, no matter the type of the compared object:</source>
          <target state="translated">比較 &lt;code&gt;==&lt;/code&gt; または &lt;code&gt;!=&lt;/code&gt; は、比較されるオブジェクトのタイプに関係なく、&lt;em&gt;常に&lt;/em&gt;&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="8f4b16d657cdc57fcbb86894a1bc1965b3eac791" translate="yes" xml:space="preserve">
          <source>The compiled code object.</source>
          <target state="translated">コンパイルされたコードオブジェクト。</target>
        </trans-unit>
        <trans-unit id="cffbd898eeee4166206889c430a7c4f2732ae94c" translate="yes" xml:space="preserve">
          <source>The compiled versions of the most recent format strings passed to &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; and the module-level functions are cached, so programs that use only a few format strings needn&amp;rsquo;t worry about reusing a single &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; に&lt;/a&gt;渡された最新のフォーマット文字列のコンパイル済みバージョンとモジュールレベルの関数はキャッシュされるため、少数のフォーマット文字列のみを使用するプログラムは、単一の&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt;インスタンスを再利用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ab52247f4c90217fe220c0e00be40b43bc3d4ecb" translate="yes" xml:space="preserve">
          <source>The compiled versions of the most recent patterns passed to &lt;a href=&quot;#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; and the module-level matching functions are cached, so programs that use only a few regular expressions at a time needn&amp;rsquo;t worry about compiling regular expressions.</source>
          <target state="translated">&lt;a href=&quot;#re.compile&quot;&gt; &lt;code&gt;re.compile()&lt;/code&gt; に&lt;/a&gt;渡された最新のパターンのコンパイル済みバージョンとモジュールレベルのマッチング関数はキャッシュされるため、一度に少数の正規表現のみを使用するプログラムは、正規表現のコンパイルについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5a86d93007da3d0cb6dd563da533af1864349897" translate="yes" xml:space="preserve">
          <source>The complete signature is:</source>
          <target state="translated">完全なサインです。</target>
        </trans-unit>
        <trans-unit id="52f0ad2782ff79ba1413d52ccaa72b70245608bf" translate="yes" xml:space="preserve">
          <source>The complex type is described in &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;.</source>
          <target state="translated">複合型については、&lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;数値型-int、float、complexで説明してい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8423b10aee34a14219c852ad4786792dda570ef3" translate="yes" xml:space="preserve">
          <source>The compression settings can be specified either as a preset compression level (with the &lt;em&gt;preset&lt;/em&gt; argument), or in detail as a custom filter chain (with the &lt;em&gt;filters&lt;/em&gt; argument).</source>
          <target state="translated">圧縮設定は、事前設定の圧縮レベル（&lt;em&gt;preset&lt;/em&gt;引数を使用）として、またはカスタムフィルターチェーン（&lt;em&gt;filters&lt;/em&gt;引数を使用）として詳細に指定できます。</target>
        </trans-unit>
        <trans-unit id="aa97a83ece05b5a0a5d5b194b33927d529e0027e" translate="yes" xml:space="preserve">
          <source>The compressor cannot be used after this method has been called.</source>
          <target state="translated">このメソッドが呼び出された後は、コンプレッサを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="0f2141b3d65ba701015cb35367a7f27ebd2455cf" translate="yes" xml:space="preserve">
          <source>The compressor object may not be used after this method has been called.</source>
          <target state="translated">このメソッドが呼び出された後は、コンプレッサーオブジェクトは使用できません。</target>
        </trans-unit>
        <trans-unit id="64c7be1f9a57000f18a2a61a8fefda7d5860289a" translate="yes" xml:space="preserve">
          <source>The concatenation of the &lt;a href=&quot;#string.ascii_lowercase&quot;&gt;&lt;code&gt;ascii_lowercase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#string.ascii_uppercase&quot;&gt;&lt;code&gt;ascii_uppercase&lt;/code&gt;&lt;/a&gt; constants described below. This value is not locale-dependent.</source>
          <target state="translated">以下で説明する&lt;a href=&quot;#string.ascii_lowercase&quot;&gt; &lt;code&gt;ascii_lowercase&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#string.ascii_uppercase&quot;&gt; &lt;code&gt;ascii_uppercase&lt;/code&gt; &lt;/a&gt;定数の連結。この値はロケールに依存しません。</target>
        </trans-unit>
        <trans-unit id="ca85ed6988e6d21605f779695c181fffd7ea4c90" translate="yes" xml:space="preserve">
          <source>The concatenation of the drive and root:</source>
          <target state="translated">ドライブとルートの連結。</target>
        </trans-unit>
        <trans-unit id="e092972f0114d0d2ff37172e3be9c56bde7107c7" translate="yes" xml:space="preserve">
          <source>The conceptual model provided by a &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object is that of an ordered dictionary of headers with additional methods for accessing both specialized information from the headers, for accessing the payload, for generating a serialized version of the message, and for recursively walking over the object tree. Note that duplicate headers are supported but special methods must be used to access them.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトによって提供される概念モデルは、ヘッダーからの特殊な情報へのアクセス、ペイロードへのアクセス、メッセージのシリアル化されたバージョンの生成、およびオブジェクトツリーの再帰的なウォークのための追加メソッドを持つヘッダーの順序付けられた辞書のモデルです。 。重複するヘッダーがサポートされていますが、それらにアクセスするには特別な方法を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="aa9fdff52eeada3a2000fe3606dc76d6f1a9438c" translate="yes" xml:space="preserve">
          <source>The conceptual model provided by an &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object is that of an ordered dictionary of headers coupled with a &lt;em&gt;payload&lt;/em&gt; that represents the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; body of the message, which might be a list of sub-&lt;code&gt;EmailMessage&lt;/code&gt; objects. In addition to the normal dictionary methods for accessing the header names and values, there are methods for accessing specialized information from the headers (for example the MIME content type), for operating on the payload, for generating a serialized version of the message, and for recursively walking over the object tree.</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;オブジェクトによって提供される概念モデルは、メッセージの&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;本体を表す&lt;em&gt;ペイロード&lt;/em&gt;と結合されたヘッダーの順序付けされた辞書のモデルであり、サブ &lt;code&gt;EmailMessage&lt;/code&gt; オブジェクトのリストである場合があります。ヘッダーの名前と値にアクセスするための通常のディクショナリメソッドに加えて、ヘッダーからの特殊な情報（MIMEコンテンツタイプなど）にアクセスするため、ペイロードを操作するため、メッセージのシリアル化されたバージョンを生成するためのメソッド、およびオブジェクトツリーを再帰的に歩くため。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a7ce1e8829b2baa1cee35ef7caa7def938910c0" translate="yes" xml:space="preserve">
          <source>The concrete class which &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; should return instances of.</source>
          <target state="translated">&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;がインスタンスを返す具象クラス。</target>
        </trans-unit>
        <trans-unit id="8b47d19d847be464de32c419aa4cb13a86a81fe9" translate="yes" xml:space="preserve">
          <source>The concurrent package</source>
          <target state="translated">コンカレントパッケージ</target>
        </trans-unit>
        <trans-unit id="570b777eec02b54837ba5c38cb8c956eb69457cf" translate="yes" xml:space="preserve">
          <source>The condition that causes a break.</source>
          <target state="translated">断線の原因となる状態。</target>
        </trans-unit>
        <trans-unit id="12bf8455ae3938296c7e397895720025d423f807" translate="yes" xml:space="preserve">
          <source>The configuration &lt;em&gt;options&lt;/em&gt; are as follows:</source>
          <target state="translated">構成&lt;em&gt;オプション&lt;/em&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="59c7bb6eed19501d87b1a0d7f39e43f6d3d05ab2" translate="yes" xml:space="preserve">
          <source>The configuration file for &lt;code&gt;libedit&lt;/code&gt; is different from that of GNU readline. If you programmatically load configuration strings you can check for the text &amp;ldquo;libedit&amp;rdquo; in &lt;code&gt;readline.__doc__&lt;/code&gt; to differentiate between GNU readline and libedit.</source>
          <target state="translated">&lt;code&gt;libedit&lt;/code&gt; の設定ファイルは、GNU readline の設定ファイルとは異なります。プログラムで設定文字列をロードする場合は、 &lt;code&gt;readline.__doc__&lt;/code&gt; テキスト「libedit」をチェックして、GNU readlineとlibeditを区別できます。</target>
        </trans-unit>
        <trans-unit id="53b52acbb2a777e6ab327fff01a2fbdb919c5154" translate="yes" xml:space="preserve">
          <source>The configuration file format understood by &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; is based on &lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; functionality. The file must contain sections called &lt;code&gt;[loggers]&lt;/code&gt;, &lt;code&gt;[handlers]&lt;/code&gt; and &lt;code&gt;[formatters]&lt;/code&gt; which identify by name the entities of each type which are defined in the file. For each such entity, there is a separate section which identifies how that entity is configured. Thus, for a logger named &lt;code&gt;log01&lt;/code&gt; in the &lt;code&gt;[loggers]&lt;/code&gt; section, the relevant configuration details are held in a section &lt;code&gt;[logger_log01]&lt;/code&gt;. Similarly, a handler called &lt;code&gt;hand01&lt;/code&gt; in the &lt;code&gt;[handlers]&lt;/code&gt; section will have its configuration held in a section called &lt;code&gt;[handler_hand01]&lt;/code&gt;, while a formatter called &lt;code&gt;form01&lt;/code&gt; in the &lt;code&gt;[formatters]&lt;/code&gt; section will have its configuration specified in a section called &lt;code&gt;[formatter_form01]&lt;/code&gt;. The root logger configuration must be specified in a section called &lt;code&gt;[logger_root]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt;が理解する構成ファイルの形式は、&lt;a href=&quot;configparser#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;機能に基づいています。ファイルには、 &lt;code&gt;[loggers]&lt;/code&gt; 、 &lt;code&gt;[handlers]&lt;/code&gt; 、 &lt;code&gt;[formatters]&lt;/code&gt; と呼ばれるセクションが含まれている必要があります。これらのセクションは、ファイルで定義されている各タイプのエンティティを名前で識別します。このようなエンティティごとに、そのエンティティの構成方法を示す個別のセクションがあります。したがって、名前付きロガーの &lt;code&gt;log01&lt;/code&gt; で &lt;code&gt;[loggers]&lt;/code&gt; セクション、関連する構成の詳細はセクション内に保持されている &lt;code&gt;[logger_log01]&lt;/code&gt; 。同様に、 &lt;code&gt;[handlers]&lt;/code&gt; の &lt;code&gt;hand01&lt;/code&gt; というハンドラーセクションは、その構成は、と呼ばれるセクション内に保持しているであろう &lt;code&gt;[handler_hand01]&lt;/code&gt; フォーマッタと呼ばれるが、 &lt;code&gt;form01&lt;/code&gt; で &lt;code&gt;[formatters]&lt;/code&gt; そのコンフィギュレーションと呼ばれるセクションで指定したであろう部分を &lt;code&gt;[formatter_form01]&lt;/code&gt; 。ルートロガーの設定は、 &lt;code&gt;[logger_root]&lt;/code&gt; というセクションで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e9b651af8db79babcce4e20eeaec528de157decc" translate="yes" xml:space="preserve">
          <source>The configuration options in Tk are given in lists of hyphened tags followed by values. In Tkinter, options are specified as keyword-arguments in the instance constructor, and keyword-args for configure calls or as instance indices, in dictionary style, for established instances. See section &lt;a href=&quot;#tkinter-setting-options&quot;&gt;Setting Options&lt;/a&gt; on setting options.</source>
          <target state="translated">Tkの設定オプションは、値が後に続くハイフン付きタグのリストで与えられます。Tkinterでは、オプションはインスタンスコンストラクターのキーワード引数として、構成呼び出しのキーワード引数として、または確立されたインスタンスのディクショナリースタイルのインスタンスインデックスとして指定されます。&lt;a href=&quot;#tkinter-setting-options&quot;&gt;オプションの&lt;/a&gt;設定については、オプションの設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="c1a61b4a52925d6e4ff824c49fb0c8d7e73702dc" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for keys &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;datefmt&lt;/code&gt; (with defaults of &lt;code&gt;None&lt;/code&gt;) and these are used to construct a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">構成 &lt;code&gt;datefmt&lt;/code&gt; は、キーの &lt;code&gt;format&lt;/code&gt; とdatefmt（デフォルトは &lt;code&gt;None&lt;/code&gt; ）を検索し、これらを使用して&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;インスタンスを構築します。</target>
        </trans-unit>
        <trans-unit id="05ad2ef2a6dd6a0426dfded13d5ea25a19a75ea1" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for the following keys:</source>
          <target state="translated">configuring dictは以下のキーで検索されます。</target>
        </trans-unit>
        <trans-unit id="d6070b1488ec8a72afe1a4161755ca71fa01d4f9" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for the key &lt;code&gt;name&lt;/code&gt; (defaulting to the empty string) and this is used to construct a &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;logging.Filter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">構成辞書はキー &lt;code&gt;name&lt;/code&gt; （デフォルトでは空の文字列）を検索し、これを使用して&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;logging.Filter&lt;/code&gt; &lt;/a&gt;インスタンスを構築します。</target>
        </trans-unit>
        <trans-unit id="22098bdd88d261e748ed7287ce44dd49d82e7d6e" translate="yes" xml:space="preserve">
          <source>The connection is established and a &lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;transport&lt;/a&gt; is created for it.</source>
          <target state="translated">接続が確立され、そのための&lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;トランスポート&lt;/a&gt;が作成されます。</target>
        </trans-unit>
        <trans-unit id="ad28af9c1892c375346d6b75312ea79291b1c88f" translate="yes" xml:space="preserve">
          <source>The constant string used by the operating system to refer to the current directory. This is &lt;code&gt;'.'&lt;/code&gt; for Windows and POSIX. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オペレーティングシステムが現在のディレクトリを参照するために使用する定数文字列。これは &lt;code&gt;'.'&lt;/code&gt; WindowsおよびPOSIX。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="83f1f1fda282af44b7cfb075ada1e9aaf0f04e93" translate="yes" xml:space="preserve">
          <source>The constant string used by the operating system to refer to the parent directory. This is &lt;code&gt;'..'&lt;/code&gt; for Windows and POSIX. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オペレーティングシステムが親ディレクトリを参照するために使用する定数文字列。これは、WindowsおよびPOSIX &lt;code&gt;'..'&lt;/code&gt; 場合は「..」です。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="01770734e88c7a4ab5e6980d5f00daa7ef0c1c5f" translate="yes" xml:space="preserve">
          <source>The constants defined in this module are:</source>
          <target state="translated">このモジュールで定義されている定数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b08a2e82bd5dc334f732ff6ab5b3f9da3808da16" translate="yes" xml:space="preserve">
          <source>The constants in the model type group are:</source>
          <target state="translated">モデル型グループの定数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9ddd636a4f621e05ed2865944f1e483ab09fd535" translate="yes" xml:space="preserve">
          <source>The constants in the quantifier group are:</source>
          <target state="translated">定数化グループの定数は</target>
        </trans-unit>
        <trans-unit id="0a15e83ade8de633314e05199e3e1378b4c6379a" translate="yes" xml:space="preserve">
          <source>The constants in this section are only relevant for the C module. They are also included in the pure Python version for compatibility.</source>
          <target state="translated">このセクションの定数はCモジュールにのみ関連しています。これらは互換性のために純粋な Python バージョンにも含まれています。</target>
        </trans-unit>
        <trans-unit id="4cb2fb40748577c1742ac7584db3943ced5d2257" translate="yes" xml:space="preserve">
          <source>The constructor accepts any object with a truth value.</source>
          <target state="translated">コンストラクタは、真理値を持つ任意のオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="de65c1ef0adbf85286791da99438ac61fbc8f3c0" translate="yes" xml:space="preserve">
          <source>The constructor builds a list whose items are the same and in the same order as &lt;em&gt;iterable&lt;/em&gt;&amp;rsquo;s items. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container that supports iteration, or an iterator object. If &lt;em&gt;iterable&lt;/em&gt; is already a list, a copy is made and returned, similar to &lt;code&gt;iterable[:]&lt;/code&gt;. For example, &lt;code&gt;list('abc')&lt;/code&gt; returns &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; and &lt;code&gt;list( (1, 2, 3) )&lt;/code&gt; returns &lt;code&gt;[1, 2, 3]&lt;/code&gt;. If no argument is given, the constructor creates a new empty list, &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">コンストラクターは、&lt;em&gt;イテラブル&lt;/em&gt;のアイテムと同じで同じ順序のアイテムのリストを作成します。&lt;em&gt;iterable&lt;/em&gt;は、シーケンス、反復をサポートするコンテナ、またはイテレータオブジェクトのいずれかです。&lt;em&gt;iterable&lt;/em&gt;がすでにリストである場合は、 &lt;code&gt;iterable[:]&lt;/code&gt; と同様に、コピーが作成されて返されます。たとえば、 &lt;code&gt;list('abc')&lt;/code&gt; は &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; を返し &lt;code&gt;list( (1, 2, 3) )&lt;/code&gt; は &lt;code&gt;[1, 2, 3]&lt;/code&gt; 返します。引数が指定されていない場合、コンストラクターは新しい空のリスト &lt;code&gt;[]&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="29519469d10505e3d049e63dd290612ed49fc46c" translate="yes" xml:space="preserve">
          <source>The constructor builds a tuple whose items are the same and in the same order as &lt;em&gt;iterable&lt;/em&gt;&amp;rsquo;s items. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container that supports iteration, or an iterator object. If &lt;em&gt;iterable&lt;/em&gt; is already a tuple, it is returned unchanged. For example, &lt;code&gt;tuple('abc')&lt;/code&gt; returns &lt;code&gt;('a', 'b', 'c')&lt;/code&gt; and &lt;code&gt;tuple( [1, 2, 3] )&lt;/code&gt; returns &lt;code&gt;(1, 2, 3)&lt;/code&gt;. If no argument is given, the constructor creates a new empty tuple, &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">コンストラクターは、アイテムが&lt;em&gt;反復可能&lt;/em&gt;アイテムのアイテムと同じ順序で同じタプルを作成します。&lt;em&gt;iterable&lt;/em&gt;は、シーケンス、反復をサポートするコンテナ、またはイテレータオブジェクトのいずれかです。場合は&lt;em&gt;反復可能で&lt;/em&gt;、すでにタプルで、それがそのまま返されます。たとえば、 &lt;code&gt;tuple('abc')&lt;/code&gt; は &lt;code&gt;('a', 'b', 'c')&lt;/code&gt; を返し &lt;code&gt;tuple( [1, 2, 3] )&lt;/code&gt; は &lt;code&gt;(1, 2, 3)&lt;/code&gt; ）を返します。引数が指定されていない場合、コンストラクターは新しい空のタプル &lt;code&gt;()&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="c9dd0eda3540f657a7e0a9a4a8c77a6032885080" translate="yes" xml:space="preserve">
          <source>The constructor creates a &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; for the given readable &lt;em&gt;raw&lt;/em&gt; stream and &lt;em&gt;buffer_size&lt;/em&gt;. If &lt;em&gt;buffer_size&lt;/em&gt; is omitted, &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">コンストラクターは、指定された読み取り可能な&lt;em&gt;raw&lt;/em&gt;ストリームと&lt;em&gt;buffer_sizeの&lt;/em&gt;&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;を作成します。場合&lt;em&gt;BUFFER_SIZEが&lt;/em&gt;省略され、&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; が&lt;/a&gt;使用されています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5ff054c7924dc7261d0aed35f217835da758c86" translate="yes" xml:space="preserve">
          <source>The constructor creates a &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; for the given writeable &lt;em&gt;raw&lt;/em&gt; stream. If the &lt;em&gt;buffer_size&lt;/em&gt; is not given, it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターは、指定された書き込み可能な&lt;em&gt;raw&lt;/em&gt;ストリームの&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;を作成します。&lt;em&gt;buffer_size&lt;/em&gt;が&lt;em&gt;指定され&lt;/em&gt;ていない場合、デフォルトは&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt;です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dbdbc1d7bc6e3588721a37331f619e648a20ac7" translate="yes" xml:space="preserve">
          <source>The constructor creates a reader and writer for a seekable raw stream, given in the first argument. If the &lt;em&gt;buffer_size&lt;/em&gt; is omitted it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクタは、最初の引数で指定されたシーク可能なrawストリームのリーダーとライターを作成します。場合&lt;em&gt;BUFFER_SIZEは&lt;/em&gt;にデフォルトは省略されている&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09fba04fdb03d601e27ad6e5c1a62a7c6837bb41" translate="yes" xml:space="preserve">
          <source>The constructor for this class is:</source>
          <target state="translated">このクラスのコンストラクタは</target>
        </trans-unit>
        <trans-unit id="27d963a1efe9374acd799a7437355a7f128b6742" translate="yes" xml:space="preserve">
          <source>The constructor of a class &lt;code&gt;ast.T&lt;/code&gt; parses its arguments as follows:</source>
          <target state="translated">クラス &lt;code&gt;ast.T&lt;/code&gt; のコンストラクターは、次のように引数を解析します。</target>
        </trans-unit>
        <trans-unit id="bd786e1e93280b6a0e5b1a1fd99c22ce347e8d8f" translate="yes" xml:space="preserve">
          <source>The constructor of a policy class can be passed various keyword arguments. The arguments that may be specified are any non-method properties on this class, plus any additional non-method properties on the concrete class. A value specified in the constructor will override the default value for the corresponding attribute.</source>
          <target state="translated">ポリシークラスのコンストラクタには、さまざまなキーワード引数を渡すことができます。指定できる引数は、このクラスの任意の非メソッドプロパティに加えて、具象クラスの任意の追加の非メソッドプロパティです。コンストラクタで指定された値は、対応する属性のデフォルト値を上書きします。</target>
        </trans-unit>
        <trans-unit id="3ee2574b5d9e6bcc9b944e93fc5b27e68e52b42e" translate="yes" xml:space="preserve">
          <source>The constructor often actually returns a subclass of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, as described in &lt;a href=&quot;#os-exceptions&quot;&gt;OS exceptions&lt;/a&gt; below. The particular subclass depends on the final &lt;a href=&quot;#OSError.errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; value. This behaviour only occurs when constructing &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; directly or via an alias, and is not inherited when subclassing.</source>
          <target state="translated">以下の&lt;a href=&quot;#os-exceptions&quot;&gt;OSの例外で&lt;/a&gt;説明するように、コンストラクターは実際には&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;サブクラスを返すことがよくあります。特定のサブクラスは、最終的な&lt;a href=&quot;#OSError.errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;値によって異なります。この動作は、&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を&lt;/a&gt;直接またはエイリアスを介して構築する場合にのみ発生し、サブクラス化する場合は継承されません。</target>
        </trans-unit>
        <trans-unit id="34da053fc68df3d3c1c7315428ce28358a25e31e" translate="yes" xml:space="preserve">
          <source>The constructor parameters have the same meaning as for &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;em&gt;return_value&lt;/em&gt; and &lt;em&gt;side_effect&lt;/em&gt; which have no meaning on a non-callable mock.</source>
          <target state="translated">コンストラクターパラメーターは、&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;と同じ意味を持ちますが、呼び出し不可のモックでは意味を持たない&lt;em&gt;return_value&lt;/em&gt;と&lt;em&gt;side_effect&lt;/em&gt;を除きます。</target>
        </trans-unit>
        <trans-unit id="92a4c4d75e4bbfdb57df8a0f0ff2b7e566c251f3" translate="yes" xml:space="preserve">
          <source>The constructor parameters have the same meaning as for &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターのパラメーターは&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="2a6b7b5892a6a7371b6a7eb794526e89b84a8ce7" translate="yes" xml:space="preserve">
          <source>The constructor sets this attribute to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">コンストラクターは、この属性を &lt;code&gt;True&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="82938dfd4d3b4884cceee3e3895d3aed984dc32f" translate="yes" xml:space="preserve">
          <source>The constructor should always be called with keyword arguments. &lt;em&gt;group&lt;/em&gt; should always be &lt;code&gt;None&lt;/code&gt;; it exists solely for compatibility with &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;target&lt;/em&gt; is the callable object to be invoked by the &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method. It defaults to &lt;code&gt;None&lt;/code&gt;, meaning nothing is called. &lt;em&gt;name&lt;/em&gt; is the process name (see &lt;a href=&quot;#multiprocessing.Process.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; for more details). &lt;em&gt;args&lt;/em&gt; is the argument tuple for the target invocation. &lt;em&gt;kwargs&lt;/em&gt; is a dictionary of keyword arguments for the target invocation. If provided, the keyword-only &lt;em&gt;daemon&lt;/em&gt; argument sets the process &lt;a href=&quot;#multiprocessing.Process.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; flag to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;None&lt;/code&gt; (the default), this flag will be inherited from the creating process.</source>
          <target state="translated">コンストラクターは常にキーワード引数を指定して呼び出す必要があります。&lt;em&gt;group&lt;/em&gt;は常に &lt;code&gt;None&lt;/code&gt; でなければなりません。&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;との互換性のためだけに存在します。&lt;em&gt;target&lt;/em&gt;は、&lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出される呼び出し可能なオブジェクトです。デフォルトは &lt;code&gt;None&lt;/code&gt; で、何も呼び出されません。&lt;em&gt;名前が&lt;/em&gt;（参照プロセス名である&lt;a href=&quot;#multiprocessing.Process.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;詳細）。&lt;em&gt;args&lt;/em&gt;は、ターゲット呼び出しの引数タプルです。&lt;em&gt;kwargs&lt;/em&gt;は、ターゲット呼び出しのキーワード引数の辞書です。キーワードのみの&lt;em&gt;デーモン&lt;/em&gt;引数を指定すると、プロセス&lt;a href=&quot;#multiprocessing.Process.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;フラグが次のように設定されます。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; 。 &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、このフラグは作成プロセスから継承されます。</target>
        </trans-unit>
        <trans-unit id="32a46ef7f69310a283260ddb83ad03cfa971b3e1" translate="yes" xml:space="preserve">
          <source>The constructor takes a single argument which is the template string.</source>
          <target state="translated">コンストラクタはテンプレート文字列を引数にとります。</target>
        </trans-unit>
        <trans-unit id="85fb777e8dbaf45dd04245b451b4e3b6e600f758" translate="yes" xml:space="preserve">
          <source>The constructor takes a statement to be timed, an additional statement used for setup, and a timer function. Both statements default to &lt;code&gt;'pass'&lt;/code&gt;; the timer function is platform-dependent (see the module doc string). &lt;em&gt;stmt&lt;/em&gt; and &lt;em&gt;setup&lt;/em&gt; may also contain multiple statements separated by &lt;code&gt;;&lt;/code&gt; or newlines, as long as they don&amp;rsquo;t contain multi-line string literals. The statement will by default be executed within timeit&amp;rsquo;s namespace; this behavior can be controlled by passing a namespace to &lt;em&gt;globals&lt;/em&gt;.</source>
          <target state="translated">コンストラクターは、タイミングをとるステートメント、セットアップに使用される追加のステートメント、およびタイマー関数を取ります。どちらのステートメントもデフォルトで &lt;code&gt;'pass'&lt;/code&gt; になります。タイマー関数はプラットフォームに依存します（モジュールのドキュメント文字列を参照）。&lt;em&gt;stmt&lt;/em&gt;と&lt;em&gt;setupに&lt;/em&gt;は、で区切られた複数のステートメントを含めることもできます &lt;code&gt;;&lt;/code&gt; または複数行の文字列リテラルを含まない限り、改行。ステートメントはデフォルトでtimeitの名前空間内で実行されます。この動作は、名前空間を&lt;em&gt;グローバルに&lt;/em&gt;渡すことで制御でき&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="faeaf3d519344bfb81584ecfbe3e2e030553ca32" translate="yes" xml:space="preserve">
          <source>The constructors for both classes work the same:</source>
          <target state="translated">両方のクラスのコンストラクタは同じように動作します。</target>
        </trans-unit>
        <trans-unit id="16bddd8e166a7aa3664f7fc3cb9f30d4b8d6972f" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; elements is returned as is, without further parsing:</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; および &lt;code&gt;style&lt;/code&gt; 要素のコンテンツは、さらに解析することなく、そのまま返されます。</target>
        </trans-unit>
        <trans-unit id="b885742c99fa8fa5d295658e3b1e7a351b43c4b6" translate="yes" xml:space="preserve">
          <source>The content of Internet Explorer conditional comments (condcoms) will also be sent to this method, so, for &lt;code&gt;&amp;lt;!--[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]--&amp;gt;&lt;/code&gt;, this method will receive &lt;code&gt;'[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]'&lt;/code&gt;.</source>
          <target state="translated">Internet Explorerの条件付きコメント（condcoms）のコンテンツもこのメソッドに送信されるため、 &lt;code&gt;&amp;lt;!--[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]--&amp;gt;&lt;/code&gt; 場合、このメソッドは &lt;code&gt;'[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ffbbe2070577e91a7c0b3ac8a7f6a190c051ef3" translate="yes" xml:space="preserve">
          <source>The content of the comment as a string. The attribute contains all characters between the leading &lt;code&gt;&amp;lt;!-&lt;/code&gt;&lt;code&gt;-&lt;/code&gt; and trailing &lt;code&gt;-&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;, but does not include them.</source>
          <target state="translated">文字列としてのコメントの内容。属性は、大手との間のすべての文字が含まれている &lt;code&gt;&amp;lt;!-&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; と末尾 &lt;code&gt;-&lt;/code&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; が、それらが含まれていません。</target>
        </trans-unit>
        <trans-unit id="23414cbc9467ed1198fa805e0f5a50cf39d17661" translate="yes" xml:space="preserve">
          <source>The content of the processing instruction following the first whitespace character.</source>
          <target state="translated">最初の空白文字に続く処理命令の内容。</target>
        </trans-unit>
        <trans-unit id="c57db44960c79dd27aae70094f1d2c24fd86db14" translate="yes" xml:space="preserve">
          <source>The content of the processing instruction up to the first whitespace character. This is a read-only attribute.</source>
          <target state="translated">最初の空白文字までの処理命令の内容。これは読み取り専用の属性です。</target>
        </trans-unit>
        <trans-unit id="462b31a1bee4d3987ae97dfe20b6bb46bc905084" translate="yes" xml:space="preserve">
          <source>The content of the text node as a string.</source>
          <target state="translated">テキストノードの内容を文字列で表します。</target>
        </trans-unit>
        <trans-unit id="43ad9f96468af5b1c07ea10a5a72713aa31ff0be" translate="yes" xml:space="preserve">
          <source>The content type string, in the form &lt;code&gt;maintype/subtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maintype/subtype&lt;/code&gt; の形式のコンテンツタイプ文字列。</target>
        </trans-unit>
        <trans-unit id="a3b150ca1eb633d638b6149b49714354917314a8" translate="yes" xml:space="preserve">
          <source>The contents of this dictionary should not be modified; changes may not affect the values of local and free variables used by the interpreter.</source>
          <target state="translated">この辞書の内容を変更してはいけません。変更は、インタープリタによって使用されるローカル変数やフリー変数の値に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="8d72744048e2ef7304cd545255ca3e4d86637d15" translate="yes" xml:space="preserve">
          <source>The context diff format normally has a header for filenames and modification times. Any or all of these may be specified using strings for &lt;em&gt;fromfile&lt;/em&gt;, &lt;em&gt;tofile&lt;/em&gt;, &lt;em&gt;fromfiledate&lt;/em&gt;, and &lt;em&gt;tofiledate&lt;/em&gt;. The modification times are normally expressed in the ISO 8601 format. If not specified, the strings default to blanks.</source>
          <target state="translated">コンテキスト差分形式には、通常、ファイル名と変更時刻のヘッダーがあります。これらのいずれか、またはすべてがための文字列を使用して指定することができる&lt;em&gt;FROMFILE&lt;/em&gt;、&lt;em&gt;TOFILE&lt;/em&gt;、&lt;em&gt;fromfiledate&lt;/em&gt;、および&lt;em&gt;tofiledateを&lt;/em&gt;。変更時間は通常、ISO 8601形式で表されます。指定しない場合、文字列はデフォルトで空白になります。</target>
        </trans-unit>
        <trans-unit id="ae74fa43390909c47e9bab374fdc0e7d65c183ae" translate="yes" xml:space="preserve">
          <source>The context flag is set whenever the condition is encountered. After the computation, flags may be checked for informational purposes (for instance, to determine whether a computation was exact). After checking the flags, be sure to clear all flags before starting the next computation.</source>
          <target state="translated">コンテキストフラグは、条件に遭遇するたびに設定されます。計算の後、情報提供のためにフラグをチェックすることがあります(例えば、計算が正確であったかどうかを判断するため)。フラグをチェックした後は,次の計算を始める前に必ずすべてのフラグをクリアしてください.</target>
        </trans-unit>
        <trans-unit id="09eded2e636fd012ef76bbb3909bd7a364dad9e0" translate="yes" xml:space="preserve">
          <source>The context for arithmetic is an environment specifying precision, rounding rules, limits on exponents, flags indicating the results of operations, and trap enablers which determine whether signals are treated as exceptions. Rounding options include &lt;a href=&quot;#decimal.ROUND_CEILING&quot;&gt;&lt;code&gt;ROUND_CEILING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_DOWN&quot;&gt;&lt;code&gt;ROUND_DOWN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_FLOOR&quot;&gt;&lt;code&gt;ROUND_FLOOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_DOWN&quot;&gt;&lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_UP&quot;&gt;&lt;code&gt;ROUND_UP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.ROUND_05UP&quot;&gt;&lt;code&gt;ROUND_05UP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">算術のコンテキストは、精度、丸め規則、指数の制限、演算の結果を示すフラグ、および信号を例外として扱うかどうかを決定するトラップイネーブラーを指定する環境です。丸めオプションが含ま&lt;a href=&quot;#decimal.ROUND_CEILING&quot;&gt; &lt;code&gt;ROUND_CEILING&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_DOWN&quot;&gt; &lt;code&gt;ROUND_DOWN&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_FLOOR&quot;&gt; &lt;code&gt;ROUND_FLOOR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_HALF_DOWN&quot;&gt; &lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.ROUND_UP&quot;&gt; &lt;code&gt;ROUND_UP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#decimal.ROUND_05UP&quot;&gt; &lt;code&gt;ROUND_05UP&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bafd7adbe3cc9b05aa5e0e3dcce674dac350bfa8" translate="yes" xml:space="preserve">
          <source>The context management protocol can be used for a similar effect, using the &lt;code&gt;with&lt;/code&gt; statement:</source>
          <target state="translated">コンテキスト管理プロトコルは、 &lt;code&gt;with&lt;/code&gt; ステートメントを使用して同様の効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="8ba17141915382244ea967ecdf5422870a5b2122" translate="yes" xml:space="preserve">
          <source>The context manager creates a temporary directory in the current directory with name &lt;em&gt;name&lt;/em&gt; before temporarily changing the current working directory. If &lt;em&gt;name&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the temporary directory is created using &lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンテキストマネージャは、現在の作業ディレクトリを一時的に変更する前に、name &lt;em&gt;という名前の&lt;/em&gt;一時ディレクトリを現在のディレクトリに作成します。場合は&lt;em&gt;名前が&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、一時ディレクトリを使用して作成され&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e83b5b1e4a02d60f54d38e4c14284f0b9e0c2f5" translate="yes" xml:space="preserve">
          <source>The context manager is designed to be used like this:</source>
          <target state="translated">コンテキストマネージャーは、このような使い方をするように設計されています。</target>
        </trans-unit>
        <trans-unit id="c93372b7d432a94a90013fda0f1e81f91883d191" translate="yes" xml:space="preserve">
          <source>The context manager will store the caught exception object in its &lt;code&gt;exception&lt;/code&gt; attribute. This can be useful if the intention is to perform additional checks on the exception raised:</source>
          <target state="translated">コンテキストマネージャは、キャッチした例外オブジェクトを &lt;code&gt;exception&lt;/code&gt; 属性に格納します。これは、発生した例外に対して追加のチェックを行うことが目的である場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="a8a527687a59be5f54b43bf5cdbcd3a25dd1f0a6" translate="yes" xml:space="preserve">
          <source>The context manager will store the caught warning object in its &lt;code&gt;warning&lt;/code&gt; attribute, and the source line which triggered the warnings in the &lt;code&gt;filename&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes. This can be useful if the intention is to perform additional checks on the warning caught:</source>
          <target state="translated">コンテキストマネージャーは、キャッチされた警告オブジェクトを &lt;code&gt;warning&lt;/code&gt; 属性に保存し、警告をトリガーしたソース行を &lt;code&gt;filename&lt;/code&gt; と &lt;code&gt;lineno&lt;/code&gt; 属性に保存します。これは、キャッチした警告に対して追加のチェックを行うことが目的である場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="b1be860097b2ea275b23bb066160fdd50362d1e4" translate="yes" xml:space="preserve">
          <source>The control component is the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; module. Every &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, every &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;, and every &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; has an associated &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; object that controls its behavior. Usually an application only needs to specify the policy when an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is created, either by directly instantiating an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; to create a new email, or by parsing an input stream using a &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt;. But the policy can be changed when the message is serialized using a &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;. This allows, for example, a generic email message to be parsed from disk, but to serialize it using standard SMTP settings when sending it to an email server.</source>
          <target state="translated">制御コンポーネントは&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;モジュールです。すべての&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;、すべての&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt;、およびすべての&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;は、その動作を制御する&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;オブジェクトが関連付けられています。通常、アプリケーションは、ときにのみポリシーを指定する必要があります&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のが&lt;/a&gt;作成され、直接インスタンス化することにより、いずれか、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のを&lt;/a&gt;新しい電子メールを作成したり、使用して入力ストリームを解析することによって&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;。ただし、&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt;を使用してメッセージがシリアル化されるときに、ポリシーを変更できます。これにより、たとえば、汎用の電子メールメッセージをディスクから解析できますが、電子メールサーバーに送信するときに、標準のSMTP設定を使用してシリアル化できます。</target>
        </trans-unit>
        <trans-unit id="42d9a5e0285e83ad97753c1affe2e30fd3b5c598" translate="yes" xml:space="preserve">
          <source>The control-c handling signal handler attempts to remain compatible with code or tests that install their own &lt;code&gt;signal.SIGINT&lt;/code&gt; handler. If the &lt;code&gt;unittest&lt;/code&gt; handler is called but &lt;em&gt;isn&amp;rsquo;t&lt;/em&gt; the installed &lt;code&gt;signal.SIGINT&lt;/code&gt; handler, i.e. it has been replaced by the system under test and delegated to, then it calls the default handler. This will normally be the expected behavior by code that replaces an installed handler and delegates to it. For individual tests that need &lt;code&gt;unittest&lt;/code&gt; control-c handling disabled the &lt;a href=&quot;#unittest.removeHandler&quot;&gt;&lt;code&gt;removeHandler()&lt;/code&gt;&lt;/a&gt; decorator can be used.</source>
          <target state="translated">control-c処理シグナルハンドラーは、独自の &lt;code&gt;signal.SIGINT&lt;/code&gt; ハンドラーをインストールするコードまたはテストとの互換性を維持しようとします。場合 &lt;code&gt;unittest&lt;/code&gt; のハンドラが呼び出されますが&lt;em&gt;ない&lt;/em&gt;インストール &lt;code&gt;signal.SIGINT&lt;/code&gt; のハンドラ、すなわち、それはテスト中のシステムに置き換えるとに委任されている、それはデフォルトのハンドラを呼び出します。これは通常、インストールされているハンドラーを置き換えてそれに委任するコードによって予期される動作です。個々のテストのために必要なことを &lt;code&gt;unittest&lt;/code&gt; の制御-cが無効になって取り扱い&lt;a href=&quot;#unittest.removeHandler&quot;&gt; &lt;code&gt;removeHandler()&lt;/code&gt; &lt;/a&gt;デコレータを使用することができます。</target>
        </trans-unit>
        <trans-unit id="f0fec426b51ce6460abf94b5b235156f847e881d" translate="yes" xml:space="preserve">
          <source>The convenience functions are:</source>
          <target state="translated">便利な機能があります。</target>
        </trans-unit>
        <trans-unit id="56531a899db00e70169892fd06fed6a16f80619f" translate="yes" xml:space="preserve">
          <source>The convention has been adopted that subclasses defining &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; or &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; methods are named &lt;code&gt;*Processor&lt;/code&gt;; all others are named &lt;code&gt;*Handler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; または &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; メソッドを定義するサブクラスに &lt;code&gt;*Processor&lt;/code&gt; という名前の規則が採用されました。他のすべての名前は &lt;code&gt;*Handler&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04aed1935d025bbe545d917616fb5a05a7966b05" translate="yes" xml:space="preserve">
          <source>The convention of allowing a special section of default values for other sections or interpolation purposes is a powerful concept of this library, letting users create complex declarative configurations. This section is normally called &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; but this can be customized to point to any other valid section name. Some typical values include: &lt;code&gt;&quot;general&quot;&lt;/code&gt; or &lt;code&gt;&quot;common&quot;&lt;/code&gt;. The name provided is used for recognizing default sections when reading from any source and is used when writing configuration back to a file. Its current value can be retrieved using the &lt;code&gt;parser_instance.default_section&lt;/code&gt; attribute and may be modified at runtime (i.e. to convert files from one format to another).</source>
          <target state="translated">他のセクションまたは補間目的でデフォルト値の特別なセクションを許可する規則は、このライブラリの強力な概念であり、ユーザーが複雑な宣言型構成を作成できるようにします。このセクションは通常 &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; と呼ばれますが、他の有効なセクション名を指すようにカスタマイズできます。一般的な値には、 &lt;code&gt;&quot;general&quot;&lt;/code&gt; または &lt;code&gt;&quot;common&quot;&lt;/code&gt; ます。指定された名前は、任意のソースから読み取るときにデフォルトのセクションを認識するために使用され、構成をファイルに書き戻すときに使用されます。現在の値は、 &lt;code&gt;parser_instance.default_section&lt;/code&gt; 属性を使用して取得でき、実行時に変更できます（つまり、ファイルをある形式から別の形式に変換するため）。</target>
        </trans-unit>
        <trans-unit id="04f50c40567ef791799d2985a7c9a953f20d7dc2" translate="yes" xml:space="preserve">
          <source>The conversion flag characters are:</source>
          <target state="translated">変換フラグの文字は</target>
        </trans-unit>
        <trans-unit id="a7662277ad21af100a1d5f044a71168e6f8c38a0" translate="yes" xml:space="preserve">
          <source>The conversion is exact. Raise OverflowError on infinities and ValueError on NaNs.</source>
          <target state="translated">変換は正確です。無限大の場合はOverflowErrorを、NaNsの場合はValueErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="9a0858db8166719a0548328bc9ef5c570f7cfad8" translate="yes" xml:space="preserve">
          <source>The conversion types are:</source>
          <target state="translated">変換タイプは</target>
        </trans-unit>
        <trans-unit id="105b71d0f8e9a7689ed5c98aeb32a3a6cbc24366" translate="yes" xml:space="preserve">
          <source>The conversion will be zero padded for numeric values.</source>
          <target state="translated">変換は数値の場合はゼロパディングになります。</target>
        </trans-unit>
        <trans-unit id="7703cc3d251bd654ea393b2b50dea7fa2568320d" translate="yes" xml:space="preserve">
          <source>The converted value is left adjusted (overrides the &lt;code&gt;'0'&lt;/code&gt; conversion if both are given).</source>
          <target state="translated">変換された値は左揃えされます（両方が指定されている場合、 &lt;code&gt;'0'&lt;/code&gt; 変換をオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="232d6e721f1a28fd8262831489f11e15ce117ac5" translate="yes" xml:space="preserve">
          <source>The core built-in types for manipulating binary data are &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. They are supported by &lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; which uses the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; to access the memory of other binary objects without needing to make a copy.</source>
          <target state="translated">バイナリデータを操作するためのコア組み込み型は、&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;です。それらは、コピーを作成する必要なしに他のバイナリオブジェクトのメモリにアクセスするために&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファプロトコル&lt;/a&gt;を使用する&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="dc4d92fe7f0a481b0cfb48417959be4f39e5294d" translate="yes" xml:space="preserve">
          <source>The coroutine then has a chance to clean up or even deny the request by suppressing the exception with a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block. Therefore, unlike &lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt;&lt;code&gt;Future.cancel()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;Task.cancel()&lt;/code&gt;&lt;/a&gt; does not guarantee that the Task will be cancelled, although suppressing cancellation completely is not common and is actively discouraged.</source>
          <target state="translated">その後、コルーチンは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; &amp;hellip;&amp;hellip;&amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip; を除いて例外を抑制し、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ブロックすることにより、要求をクリーンアップまたは拒否する可能性もあります。したがって、&lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt; &lt;code&gt;Future.cancel()&lt;/code&gt; &lt;/a&gt;とは異なり、キャンセルを完全に抑制することは一般的ではなく、積極的に推奨されていませんが、&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;Task.cancel()&lt;/code&gt; &lt;/a&gt;はタスクがキャンセルされることを保証しません。</target>
        </trans-unit>
        <trans-unit id="bc1b5bbe66f8d0dac7e549cc0180896743986591" translate="yes" xml:space="preserve">
          <source>The corresponding error message, as provided by the operating system. It is formatted by the C functions &lt;code&gt;perror()&lt;/code&gt; under POSIX, and &lt;code&gt;FormatMessage()&lt;/code&gt; under Windows.</source>
          <target state="translated">オペレーティングシステムによって提供される、対応するエラーメッセージ。POSIXではC関数の &lt;code&gt;perror()&lt;/code&gt; 、Windowsでは &lt;code&gt;FormatMessage()&lt;/code&gt; でフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="70d5450d9e84a7624d246a14f8334e480e6ee9b1" translate="yes" xml:space="preserve">
          <source>The corresponding simplest possible writing example is:</source>
          <target state="translated">対応する最もシンプルな書き方の例は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="99ba8850b932395d55f5c7b65d46a83173ec0e7a" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer calls &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;queue#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">アイテムがキューに追加されるたびに、未完了のタスクの数が増えます。コンシューマーが&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;を呼び出してアイテムが取得され、そのアイテムに対するすべての作業が完了したことを示すと、カウントは減少します。未完了のタスクの数がゼロになると、&lt;a href=&quot;queue#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;はブロックを解除します。</target>
        </trans-unit>
        <trans-unit id="b83253d660a4a6f7f73e5535fc2a5ea3481eca66" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer coroutine calls &lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;#asyncio.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">アイテムがキューに追加されるたびに、未完了のタスクの数が増えます。コンシューマーコルーチンが&lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;を呼び出してアイテムが取得され、そのアイテムに対するすべての作業が完了したことを示すと、カウントは減少します。未完了のタスクの数がゼロになると、&lt;a href=&quot;#asyncio.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;はブロックを解除します。</target>
        </trans-unit>
        <trans-unit id="39ba1f2977ddb0979cf75b4e181dad95efd3edcb" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer thread calls &lt;a href=&quot;#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">アイテムがキューに追加されるたびに、未完了のタスクの数が増えます。コンシューマスレッドが&lt;a href=&quot;#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;を呼び出してアイテムが取得され、そのアイテムに対するすべての作業が完了したことを示すと、カウントは減少します。未完了のタスクの数がゼロになると、&lt;a href=&quot;#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;はブロックを解除します。</target>
        </trans-unit>
        <trans-unit id="e08e1d045e84c6cb3e0262a5e1278aaaa956caeb" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;pyvenv.cfg&lt;/code&gt; file also includes the &lt;code&gt;include-system-site-packages&lt;/code&gt; key, set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;venv&lt;/code&gt; is run with the &lt;code&gt;--system-site-packages&lt;/code&gt; option, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">作成した &lt;code&gt;pyvenv.cfg&lt;/code&gt; のファイルも含まれて &lt;code&gt;include-system-site-packages&lt;/code&gt; に設定キー、 &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;venv&lt;/code&gt; がで実行され &lt;code&gt;--system-site-packages&lt;/code&gt; 、オプション &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="4361350e28309ad8fede5d4bbb572c800f97e105" translate="yes" xml:space="preserve">
          <source>The created transport is an implementation-dependent bidirectional stream.</source>
          <target state="translated">作成されたトランスポートは、実装依存の双方向ストリームである。</target>
        </trans-unit>
        <trans-unit id="b42a75b2b3e3e154cd9c1ea1403f52e8177428d0" translate="yes" xml:space="preserve">
          <source>The crux of each test is a call to &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; to check for an expected result; &lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt;&lt;code&gt;assertTrue()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt;&lt;code&gt;assertFalse()&lt;/code&gt;&lt;/a&gt; to verify a condition; or &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; to verify that a specific exception gets raised. These methods are used instead of the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement so the test runner can accumulate all test results and produce a report.</source>
          <target state="translated">各テストの要点は、期待される結果を確認するための&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; の&lt;/a&gt;呼び出しです。条件を検証するための&lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt; &lt;code&gt;assertTrue()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt; &lt;code&gt;assertFalse()&lt;/code&gt; &lt;/a&gt;。または&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;を使用して、特定の例外が発生することを確認します。これらのメソッドは、&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;ステートメントの代わりに使用されるため、テストランナーはすべてのテスト結果を蓄積してレポートを生成できます。</target>
        </trans-unit>
        <trans-unit id="029b9273dbb02b6ea7417a3252afee02f4033d0b" translate="yes" xml:space="preserve">
          <source>The current algorithm has an early-out when it encounters a zero in the input. This means that the subsequent inputs are not tested for validity. (This behavior may change in the future.)</source>
          <target state="translated">現在のアルゴリズムは、入力でゼロに遭遇したときにアーリーアウトします。これは、後続の入力が有効かどうかテストされないことを意味します。(この動作は将来変更される可能性があります)。</target>
        </trans-unit>
        <trans-unit id="3d8bb9e42cfd6a06200a85ffbadb0aae65550388" translate="yes" xml:space="preserve">
          <source>The current implementation wakes up exactly &lt;em&gt;n&lt;/em&gt; threads, if at least &lt;em&gt;n&lt;/em&gt; threads are waiting. However, it&amp;rsquo;s not safe to rely on this behavior. A future, optimized implementation may occasionally wake up more than &lt;em&gt;n&lt;/em&gt; threads.</source>
          <target state="translated">現在の実装では、少なくとも&lt;em&gt;n個の&lt;/em&gt;スレッドが待機している場合、正確に&lt;em&gt;n個の&lt;/em&gt;スレッドが起動します。ただし、この動作に依存するのは安全ではありません。将来の最適化された実装では、&lt;em&gt;n個を&lt;/em&gt;超えるスレッドが起動する場合があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52a436678a1020bde214c0d97cdeb64bf8a1589a" translate="yes" xml:space="preserve">
          <source>The current internal state of the generator can also be queried. This is mostly useful for testing purposes, to ensure that internal state is being updated as expected:</source>
          <target state="translated">ジェネレーターの現在の内部状態を問い合わせることもできます。これは、内部状態が期待通りに更新されていることを確認するためのテスト目的に便利です。</target>
        </trans-unit>
        <trans-unit id="b161fdbf8f8dfdde9548c335694aae4ea27b9243" translate="yes" xml:space="preserve">
          <source>The current line in the current frame is indicated by &lt;code&gt;-&amp;gt;&lt;/code&gt;. If an exception is being debugged, the line where the exception was originally raised or propagated is indicated by &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, if it differs from the current line.</source>
          <target state="translated">現在のフレームの現在の行は &lt;code&gt;-&amp;gt;&lt;/code&gt; で示されます。例外がデバッグされている場合、例外が最初に発生または伝搬された行は、現在の行と異なる場合、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; で示されます。</target>
        </trans-unit>
        <trans-unit id="68241a388af98feb65b13ec5fad01a05b24e1abb" translate="yes" xml:space="preserve">
          <source>The current process is replaced immediately. Open file objects and descriptors are not flushed, so if there may be data buffered on these open files, you should flush them using &lt;code&gt;sys.stdout.flush()&lt;/code&gt; or &lt;a href=&quot;#os.fsync&quot;&gt;&lt;code&gt;os.fsync()&lt;/code&gt;&lt;/a&gt; before calling an &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">現在のプロセスはすぐに置き換えられます。開いているファイルオブジェクトと記述子はフラッシュされないため、これらの開いているファイルにデータがバッファリングされている可能性がある場合は、&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*&lt;/code&gt; &lt;/a&gt;関数を呼び出す前に &lt;code&gt;sys.stdout.flush()&lt;/code&gt; または&lt;a href=&quot;#os.fsync&quot;&gt; &lt;code&gt;os.fsync()&lt;/code&gt; &lt;/a&gt;を使用してそれらをフラッシュする必要があります。</target>
        </trans-unit>
        <trans-unit id="dc9aa1e766143ced63bf297199daa209252dd44e" translate="yes" xml:space="preserve">
          <source>The current value of the progress bar. In &amp;ldquo;determinate&amp;rdquo; mode, this represents the amount of work completed. In &amp;ldquo;indeterminate&amp;rdquo; mode, it is interpreted as modulo &lt;em&gt;maximum&lt;/em&gt;; that is, the progress bar completes one &amp;ldquo;cycle&amp;rdquo; when its value increases by &lt;em&gt;maximum&lt;/em&gt;.</source>
          <target state="translated">プログレスバーの現在の値。「確定」モードでは、これは完了した作業の量を表します。「不確定」モードでは、モジュロ&lt;em&gt;最大値&lt;/em&gt;として解釈されます。つまり、進行状況バーは、その値が&lt;em&gt;最大まで&lt;/em&gt;増加すると1つの「サイクル」を完了します。</target>
        </trans-unit>
        <trans-unit id="44c920e93ea8d45fdfebab1da8fb98b10091f105" translate="yes" xml:space="preserve">
          <source>The current-value setting of some widgets (like text entry widgets) can be connected directly to application variables by using special options. These options are &lt;code&gt;variable&lt;/code&gt;, &lt;code&gt;textvariable&lt;/code&gt;, &lt;code&gt;onvalue&lt;/code&gt;, &lt;code&gt;offvalue&lt;/code&gt;, and &lt;code&gt;value&lt;/code&gt;. This connection works both ways: if the variable changes for any reason, the widget it&amp;rsquo;s connected to will be updated to reflect the new value.</source>
          <target state="translated">一部のウィジェット（テキスト入力ウィジェットなど）の現在値の設定は、特別なオプションを使用してアプリケーション変数に直接接続できます。これらのオプションは、 &lt;code&gt;variable&lt;/code&gt; 、 &lt;code&gt;textvariable&lt;/code&gt; 、 &lt;code&gt;onvalue&lt;/code&gt; 、 &lt;code&gt;offvalue&lt;/code&gt; 、および &lt;code&gt;value&lt;/code&gt; です。この接続は両方の方法で機能します。何らかの理由で変数が変更されると、接続先のウィジェットが更新され、新しい値が反映されます。</target>
        </trans-unit>
        <trans-unit id="a44b4e7cf28e49605dc244254c36f226b6f6a70e" translate="yes" xml:space="preserve">
          <source>The curses library does &amp;ldquo;line-breakout optimization&amp;rdquo; by looking for typeahead periodically while updating the screen. If input is found, and it is coming from a tty, the current update is postponed until refresh or doupdate is called again, allowing faster response to commands typed in advance. This function allows specifying a different file descriptor for typeahead checking.</source>
          <target state="translated">cursesライブラリーは、画面の更新中に定期的に先行入力を探すことにより、「行分割最適化」を行います。入力が見つかり、それがttyからのものである場合、現在の更新は、refreshまたはdoupdateが再度呼び出されるまで延期され、事前に入力されたコマンドに対する応答が速くなります。この関数を使用すると、先行入力チェックに別のファイル記述子を指定できます。</target>
        </trans-unit>
        <trans-unit id="b01dfa066d22cfd22c2fff03df93dd7ff0910062" translate="yes" xml:space="preserve">
          <source>The cursor method accepts a single optional parameter &lt;em&gt;factory&lt;/em&gt;. If supplied, this must be a callable returning an instance of &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; or its subclasses.</source>
          <target state="translated">カーソルメソッドは、単一のオプションパラメータ&lt;em&gt;ファクトリを&lt;/em&gt;受け入れます。指定する場合、これは&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;またはそのサブクラスのインスタンスを返す呼び出し可能オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="b06811008992340fc2dc7c59bbd5693bc9ce0ee4" translate="yes" xml:space="preserve">
          <source>The cursor will be unusable from this point forward; a &lt;a href=&quot;#sqlite3.ProgrammingError&quot;&gt;&lt;code&gt;ProgrammingError&lt;/code&gt;&lt;/a&gt; exception will be raised if any operation is attempted with the cursor.</source>
          <target state="translated">この時点以降、カーソルは使用できなくなります。カーソルを使用して操作を実行しようとすると、&lt;a href=&quot;#sqlite3.ProgrammingError&quot;&gt; &lt;code&gt;ProgrammingError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2adfa03e9423251347d2ddec72ca24f15adda1d8" translate="yes" xml:space="preserve">
          <source>The cut points are linearly interpolated from the two nearest data points. For example, if a cut point falls one-third of the distance between two sample values, &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;112&lt;/code&gt;, the cut-point will evaluate to &lt;code&gt;104&lt;/code&gt;.</source>
          <target state="translated">カットポイントは、最も近い2つのデータポイントから線形補間されます。たとえば、カットポイントが2つのサンプル値 &lt;code&gt;100&lt;/code&gt; と &lt;code&gt;112&lt;/code&gt; の間の距離の3分の1に該当する場合、カットポイントは &lt;code&gt;104&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="e3acee39c7abbab9115fc8f08a2afc5d777a683e" translate="yes" xml:space="preserve">
          <source>The data compression is provided by the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">データ圧縮は&lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;モジュールによって提供されます。</target>
        </trans-unit>
        <trans-unit id="4732c01492e63cdd9d7c665f57a987ee799fc855" translate="yes" xml:space="preserve">
          <source>The data format used by &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; is Python-specific. This has the advantage that there are no restrictions imposed by external standards such as JSON or XDR (which can&amp;rsquo;t represent pointer sharing); however it means that non-Python programs may not be able to reconstruct pickled Python objects.</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;が使用するデータ形式はPython固有です。これには、JSONやXDR（ポインターの共有を表すことができない）などの外部標準によって課される制限がないという利点があります。ただし、Python以外のプログラムでは、ピクルされたPythonオブジェクトを再構築できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad490902b06ce6c474539cea2f88c4d882fde489" translate="yes" xml:space="preserve">
          <source>The data read is buffered in memory, so do not use this method if the data size is large or unlimited.</source>
          <target state="translated">読み込んだデータはメモリ内にバッファリングされているので、データサイズが大きい場合や無制限の場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="381273eadd2ef918438fcbe00869dea87bc7b0ee" translate="yes" xml:space="preserve">
          <source>The data returned by &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; is the raw data returned by the server. This may be binary data (such as an image), plain text or (for example) HTML. The HTTP protocol provides type information in the reply header, which can be inspected by looking at the &lt;em&gt;Content-Type&lt;/em&gt; header. If the returned data is HTML, you can use the module &lt;a href=&quot;html.parser#module-html.parser&quot;&gt;&lt;code&gt;html.parser&lt;/code&gt;&lt;/a&gt; to parse it.</source>
          <target state="translated">データは、によって返さ&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;サーバによって返された生データです。これは、バイナリイメージ（画像など）、プレーンテキスト、または（たとえば）HTMLの場合があります。HTTPプロトコルは、応答ヘッダーにタイプ情報を提供します。これは、&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーを調べることで検査できます。返されたデータがHTMLの場合は、モジュール&lt;a href=&quot;html.parser#module-html.parser&quot;&gt; &lt;code&gt;html.parser&lt;/code&gt; &lt;/a&gt;を使用して解析できます。</target>
        </trans-unit>
        <trans-unit id="cb6758afc9485fe5a6fb81c1866b77aa22d9b3e5" translate="yes" xml:space="preserve">
          <source>The data you&amp;rsquo;ve saved is persistent and is available in subsequent sessions:</source>
          <target state="translated">保存したデータは永続的で、後続のセッションで使用できます。</target>
        </trans-unit>
        <trans-unit id="07798be371fad61c3fb93bf3ac316396b61294ce" translate="yes" xml:space="preserve">
          <source>The database will contain just the schema and the validation records when this function returns.</source>
          <target state="translated">この関数が戻ると、データベースにはスキーマとバリデーションレコードだけが格納されます。</target>
        </trans-unit>
        <trans-unit id="d274876e4079ca20009328bf8e5cde4e56d7abf9" translate="yes" xml:space="preserve">
          <source>The debugger is extensible &amp;ndash; it is actually defined as the class &lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt;. This is currently undocumented but easily understood by reading the source. The extension interface uses the modules &lt;a href=&quot;bdb#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmd#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デバッガは拡張可能です。実際には、&lt;a href=&quot;#pdb.Pdb&quot;&gt; &lt;code&gt;Pdb&lt;/code&gt; &lt;/a&gt;クラスとして定義されています。これは現在文書化されていませんが、ソースを読むことで簡単に理解できます。拡張インターフェースは、モジュール&lt;a href=&quot;bdb#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;cmd#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="095b5670be6e411b1e73958df31e2f6ac1da2d0c" translate="yes" xml:space="preserve">
          <source>The debugger supports &lt;a href=&quot;#debugger-aliases&quot;&gt;aliases&lt;/a&gt;. Aliases can have parameters which allows one a certain level of adaptability to the context under examination.</source>
          <target state="translated">デバッガは&lt;a href=&quot;#debugger-aliases&quot;&gt;エイリアスを&lt;/a&gt;サポートしています。エイリアスには、調査中のコンテキストへの特定のレベルの適応性を可能にするパラメータを含めることができます。</target>
        </trans-unit>
        <trans-unit id="6427247e8f8887424311f6b6d15aa4b617225615" translate="yes" xml:space="preserve">
          <source>The debugger&amp;rsquo;s prompt is &lt;code&gt;(Pdb)&lt;/code&gt;. Typical usage to run a program under control of the debugger is:</source>
          <target state="translated">デバッガーのプロンプトは &lt;code&gt;(Pdb)&lt;/code&gt; です。デバッガーの制御下でプログラムを実行する一般的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5def3aa4d7a228de01c175df183f95bac9ef0b71" translate="yes" xml:space="preserve">
          <source>The debugging flags necessary for the collector to print information about a leaking program (equal to &lt;code&gt;DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE |
DEBUG_SAVEALL&lt;/code&gt;).</source>
          <target state="translated">コレクターがリークプログラムに関する情報を出力するために必要なデバッグフラグ（ &lt;code&gt;DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | DEBUG_SAVEALL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90287af497864716aa30b5d7a8cbe1542d08cbc7" translate="yes" xml:space="preserve">
          <source>The decimal module incorporates a notion of significant places so that &lt;code&gt;1.30
+ 1.20&lt;/code&gt; is &lt;code&gt;2.50&lt;/code&gt;. The trailing zero is kept to indicate significance. This is the customary presentation for monetary applications. For multiplication, the &amp;ldquo;schoolbook&amp;rdquo; approach uses all the figures in the multiplicands. For instance, &lt;code&gt;1.3 * 1.2&lt;/code&gt; gives &lt;code&gt;1.56&lt;/code&gt; while &lt;code&gt;1.30 *
1.20&lt;/code&gt; gives &lt;code&gt;1.5600&lt;/code&gt;.</source>
          <target state="translated">decimalモジュールには、重要な場所の概念が組み込まれているため、 &lt;code&gt;1.30 + 1.20&lt;/code&gt; は &lt;code&gt;2.50&lt;/code&gt; です。後続ゼロは、重要性を示すために保持されます。これは、通貨アプリケーションの通常のプレゼンテーションです。乗算の場合、「教科書」のアプローチでは、被乗数のすべての数値を使用します。たとえば、 &lt;code&gt;1.3 * 1.2&lt;/code&gt; は &lt;code&gt;1.56&lt;/code&gt; を与え、 &lt;code&gt;1.30 * 1.20&lt;/code&gt; は &lt;code&gt;1.5600&lt;/code&gt; を与えます。</target>
        </trans-unit>
        <trans-unit id="bc5331a4ec577ee10bc6dc4f46c2d0c2800f6ff8" translate="yes" xml:space="preserve">
          <source>The decimal module was designed to support &amp;ldquo;without prejudice, both exact unrounded decimal arithmetic (sometimes called fixed-point arithmetic) and rounded floating-point arithmetic.&amp;rdquo; &amp;ndash; excerpt from the decimal arithmetic specification.</source>
          <target state="translated">decimalモジュールは、「偏りなく、正確な丸められていない10進数演算（固定小数点演算と呼ばれることもあります）と丸められた浮動小数点演算の両方をサポートするように設計されました。」&amp;ndash; 10進数演算仕様からの抜粋。</target>
        </trans-unit>
        <trans-unit id="fcd953820c180c8fd51fd721bc40a9145788703c" translate="yes" xml:space="preserve">
          <source>The decoder must be able to handle zero length input and return an empty object of the output object type in this situation.</source>
          <target state="translated">デコーダはゼロ長の入力を処理し、この状況では出力オブジェクト型の空のオブジェクトを返すことができなければなりません。</target>
        </trans-unit>
        <trans-unit id="4370c4771bb3ea3eff3bcc09178bfbdc4274e2bd" translate="yes" xml:space="preserve">
          <source>The decorated method will take in the &lt;strong&gt;name&lt;/strong&gt; of the module to be loaded as expected for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. If the module is not found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; then a new one is constructed. Regardless of where the module came from, &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; set to &lt;strong&gt;self&lt;/strong&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; is set based on what &lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt;&lt;/a&gt; returns (if available). These attributes are set unconditionally to support reloading.</source>
          <target state="translated">デコレートされたメソッドは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダーの&lt;/a&gt;期待どおりにロードされるモジュールの&lt;strong&gt;名前&lt;/strong&gt;を受け取ります。モジュールが&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; で&lt;/a&gt;見つからない場合は、新しいモジュールが構築されます。モジュールがどこから来たかに関係なく、&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;は&lt;strong&gt;selfに&lt;/strong&gt;設定され、__ package__は&lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt; &lt;/a&gt;が返すものに基づいて設定されます（可能な場合）。これらの属性は、再ロードをサポートするために無条件に設定されます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cffc98a45b4b4fc8fac139e7a5b9aef8a25d0d4" translate="yes" xml:space="preserve">
          <source>The decorator also provides a &lt;code&gt;cache_clear()&lt;/code&gt; function for clearing or invalidating the cache.</source>
          <target state="translated">デコレータは、キャッシュをクリアまたは無効にする &lt;code&gt;cache_clear()&lt;/code&gt; 関数も提供します。</target>
        </trans-unit>
        <trans-unit id="9241d41c4f3d0d35ed609d927b5431512d3a0115" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; mechanism behaves differently with different types of objects, as it attempts to produce the most relevant, rather than complete, information:</source>
          <target state="translated">デフォルトの&lt;a href=&quot;#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;メカニズムは、完全ではなく最も関連性の高い情報を生成しようとするため、オブジェクトのタイプによって動作が異なります。</target>
        </trans-unit>
        <trans-unit id="d84a97fb732f65d135a8de533f5d2309e5002866" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; iterator iterates over message representations, not keys as the default dictionary iterator does. Moreover, modification of a mailbox during iteration is safe and well-defined. Messages added to the mailbox after an iterator is created will not be seen by the iterator. Messages removed from the mailbox before the iterator yields them will be silently skipped, though using a key from an iterator may result in a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if the corresponding message is subsequently removed.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;反復子は、デフォルトの辞書反復子のようにキーではなく、メッセージ表現を反復処理します。さらに、反復中のメールボックスの変更は安全で明確に定義されています。イテレータの作成後にメールボックスに追加されたメッセージは、イテレータからは見えません。イテレータが生成する前にメールボックスから削除されたメッセージは、黙ってスキップされますが、イテレータのキーを使用すると、対応するメッセージが後で削除された場合に&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9f6bd331cdd8851c589608705300fea060ae29b3" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;PathFinder&lt;/code&gt; for Python includes a hook that calls into &lt;code&gt;importlib.metadata.MetadataPathFinder&lt;/code&gt; for finding distributions loaded from typical file-system-based paths.</source>
          <target state="translated">Python のデフォルトの &lt;code&gt;PathFinder&lt;/code&gt; には、 &lt;code&gt;importlib.metadata.MetadataPathFinder&lt;/code&gt; を呼び出して、一般的なファイルシステムベースのパスからロードされたディストリビューションを検索するフックが含まれています。</target>
        </trans-unit>
        <trans-unit id="e08f1b8ed360aa3fdbcb31fe8c46e2aefb98f856" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;format_spec&lt;/em&gt; is an empty string which usually gives the same effect as calling &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str(value)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトの&lt;em&gt;format_spec&lt;/em&gt;は空の文字列で、通常&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str(value)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="916e4b68347b1b5b55f8b8dfbbfb3aa9f77bde33" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;locals&lt;/em&gt; act as described for function &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; below: modifications to the default &lt;em&gt;locals&lt;/em&gt; dictionary should not be attempted. Pass an explicit &lt;em&gt;locals&lt;/em&gt; dictionary if you need to see effects of the code on &lt;em&gt;locals&lt;/em&gt; after function &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">デフォルトの&lt;em&gt;ローカル&lt;/em&gt;は、以下の関数&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; で&lt;/a&gt;説明されているように機能します。デフォルトの&lt;em&gt;ローカル&lt;/em&gt;ディクショナリへの変更は試行しないでください。関数&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;が戻った後、&lt;em&gt;ローカル&lt;/em&gt;に対するコードの影響を確認する必要がある場合は、明示的な&lt;em&gt;ローカル&lt;/em&gt;ディクショナリを渡します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcc1fc4b3a3ae0a82e1e9c7f968eba8efba69cd8" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;method&lt;/em&gt; is &amp;ldquo;exclusive&amp;rdquo; and is used for data sampled from a population that can have more extreme values than found in the samples. The portion of the population falling below the &lt;em&gt;i-th&lt;/em&gt; of &lt;em&gt;m&lt;/em&gt; sorted data points is computed as &lt;code&gt;i / (m + 1)&lt;/code&gt;. Given nine sample values, the method sorts them and assigns the following percentiles: 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%.</source>
          <target state="translated">デフォルトの&lt;em&gt;方法&lt;/em&gt;は「排他的」で、サンプルで見られるよりも極端な値を持つ可能性のある母集団からサンプリングされたデータに使用されます。母集団のうち、&lt;em&gt;m &lt;/em&gt;&lt;em&gt;番目&lt;/em&gt;にソートされたデータポイントの&lt;em&gt;i番目&lt;/em&gt;を下回る部分は、 &lt;code&gt;i / (m + 1)&lt;/code&gt; として計算されます。9つのサンプル値が与えられると、メソッドはそれらを並べ替え、次のパーセンタイルを割り当てます：10％、20％、30％、40％、50％、60％、70％、80％、90％。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc26c9794d7c7424fc9e7bc14e214666252c9274" translate="yes" xml:space="preserve">
          <source>The default asyncio event loop implementation on &lt;strong&gt;Windows&lt;/strong&gt; does not support subprocesses. Subprocesses are available for Windows if a &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is used. See &lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Subprocess Support on Windows&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;Windowsで&lt;/strong&gt;のデフォルトのasyncioイベントループ実装は、サブプロセスをサポートしていません。あればサブプロセスは、Windowsで利用可能な&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; が&lt;/a&gt;使用されています。詳細については&lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;、Windows&lt;/a&gt;でのサブプロセスのサポートを参照してください。</target>
        </trans-unit>
        <trans-unit id="73f9f71a010dfccdb59de7aba2ccdae124aedfba" translate="yes" xml:space="preserve">
          <source>The default asyncio event loop on &lt;strong&gt;Windows&lt;/strong&gt; does not support subprocesses. See &lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Subprocess Support on Windows&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;Windows&lt;/strong&gt;のデフォルトのasyncioイベントループはサブプロセスをサポートしていません。詳細については&lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;、Windows&lt;/a&gt;でのサブプロセスのサポートを参照してください。</target>
        </trans-unit>
        <trans-unit id="320d764d5f91986c0ce197a99b5dafc84e75fdbe" translate="yes" xml:space="preserve">
          <source>The default asyncio policy. Uses &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; on Unix and &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; on Windows.</source>
          <target state="translated">デフォルトのasyncioポリシー。Unix では&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;、Windowsでは&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="99843d8504993a7ac9fb3c4008f6662e1e83ea6f" translate="yes" xml:space="preserve">
          <source>The default category for &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt;のデフォルトのカテゴリ。</target>
        </trans-unit>
        <trans-unit id="32f43bb65b67ab4e0064d8679c4a8ed6f5c74251" translate="yes" xml:space="preserve">
          <source>The default character encoding: &lt;code&gt;'utf-8'&lt;/code&gt; on Windows, the value returned by &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">デフォルトの文字エンコード：Windowsでは &lt;code&gt;'utf-8'&lt;/code&gt; 、それ以外の場合は&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;によって返される値。</target>
        </trans-unit>
        <trans-unit id="699b9c61ff10c5e5fb972c7c169896f4dd36a566" translate="yes" xml:space="preserve">
          <source>The default converters are registered under the name &amp;ldquo;date&amp;rdquo; for &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; and under the name &amp;ldquo;timestamp&amp;rdquo; for &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトコンバータはの名前、「日」の下に登録されている&lt;a href=&quot;datetime#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;との名称「タイムスタンプ」の下&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3141ba81acf49f8773568f9b1b5765ab02702638" translate="yes" xml:space="preserve">
          <source>The default environment variables to be included in every request&amp;rsquo;s WSGI environment. By default, this is a copy of &lt;code&gt;os.environ&lt;/code&gt; at the time that &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt;&lt;code&gt;wsgiref.handlers&lt;/code&gt;&lt;/a&gt; was imported, but subclasses can either create their own at the class or instance level. Note that the dictionary should be considered read-only, since the default value is shared between multiple classes and instances.</source>
          <target state="translated">すべてのリクエストのWSGI環境に含まれるデフォルトの環境変数。デフォルトでは、これは&lt;a href=&quot;#module-wsgiref.handlers&quot;&gt; &lt;code&gt;wsgiref.handlers&lt;/code&gt; &lt;/a&gt;がインポートされたときの &lt;code&gt;os.environ&lt;/code&gt; のコピーですが、サブクラスはクラスまたはインスタンスレベルで独自に作成できます。デフォルト値は複数のクラスとインスタンス間で共有されるため、ディクショナリは読み取り専用と見なす必要があります。</target>
        </trans-unit>
        <trans-unit id="767891311ec1c9837f1ed84b97b20ded10b66b5a" translate="yes" xml:space="preserve">
          <source>The default exception handler implementation.</source>
          <target state="translated">デフォルトの例外ハンドラの実装。</target>
        </trans-unit>
        <trans-unit id="3d5425253eafabfc0e77cfbd292665f236078454" translate="yes" xml:space="preserve">
          <source>The default for &lt;em&gt;start&lt;/em&gt; is 0, which means to start at the beginning of the file. The default for &lt;em&gt;len&lt;/em&gt; is 0 which means to lock to the end of the file. The default for &lt;em&gt;whence&lt;/em&gt; is also 0.</source>
          <target state="translated">&lt;em&gt;start&lt;/em&gt;のデフォルトは0です。これは、ファイルの先頭から開始することを意味します。&lt;em&gt;len&lt;/em&gt;のデフォルトは0で、ファイルの最後にロックされます。&lt;em&gt;whence&lt;/em&gt;のデフォルトも0です。</target>
        </trans-unit>
        <trans-unit id="abe205ba756ba81b25d657d298d23ad7a01daa01" translate="yes" xml:space="preserve">
          <source>The default format for creating archives. This is currently &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アーカイブを作成するためのデフォルトのフォーマット。これは現在&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="c9c328c8250ee7fbc742006787cb7e770c62bb77" translate="yes" xml:space="preserve">
          <source>The default hook formats &lt;em&gt;err_msg&lt;/em&gt; and &lt;em&gt;object&lt;/em&gt; as: &lt;code&gt;f'{err_msg}: {object!r}'&lt;/code&gt;; use &amp;ldquo;Exception ignored in&amp;rdquo; error message if &lt;em&gt;err_msg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">デフォルトのフックは&lt;em&gt;err_msg&lt;/em&gt;と&lt;em&gt;オブジェクトを次の&lt;/em&gt;ようにフォーマットし&lt;em&gt;ます&lt;/em&gt;： &lt;code&gt;f'{err_msg}: {object!r}'&lt;/code&gt; ; &lt;em&gt;err_msg&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合は、「例外は無視されました」エラーメッセージを使用します。</target>
        </trans-unit>
        <trans-unit id="1589b3dd1729a28688aa3d39f228898b217d6cf6" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">デフォルトの実装では、タプル追加 &lt;code&gt;(test, formatted_err)&lt;/code&gt; インスタンスのに&lt;a href=&quot;#unittest.TestResult.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;属性、&lt;em&gt;formatted_errが&lt;/em&gt;由来するフォーマットトレースバックである&lt;em&gt;ERR&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b56f4f78eb0697ad959e9a5452169aa756143e2d" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.expectedFailures&quot;&gt;&lt;code&gt;expectedFailures&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">デフォルトの実装では、タプル追加 &lt;code&gt;(test, formatted_err)&lt;/code&gt; インスタンスのに&lt;a href=&quot;#unittest.TestResult.expectedFailures&quot;&gt; &lt;code&gt;expectedFailures&lt;/code&gt; の&lt;/a&gt;属性、&lt;em&gt;formatted_errが&lt;/em&gt;由来するフォーマットトレースバックである&lt;em&gt;ERR&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="21d58dd74e7a05377422bda965cebdafd7e57ccd" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.failures&quot;&gt;&lt;code&gt;failures&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">デフォルトの実装では、タプル追加 &lt;code&gt;(test, formatted_err)&lt;/code&gt; インスタンスのに&lt;a href=&quot;#unittest.TestResult.failures&quot;&gt; &lt;code&gt;failures&lt;/code&gt; &lt;/a&gt;属性、&lt;em&gt;formatted_errが&lt;/em&gt;由来するフォーマットトレースバックである&lt;em&gt;ERR&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="43823f6cabcd0ef79ab62b973c7aee77f8f732d4" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, reason)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.skipped&quot;&gt;&lt;code&gt;skipped&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">デフォルトの実装では、インスタンスの&lt;a href=&quot;#unittest.TestResult.skipped&quot;&gt; &lt;code&gt;skipped&lt;/code&gt; &lt;/a&gt;属性にタプル &lt;code&gt;(test, reason)&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="a68c1418f74a6200967462b2f59268c9e36ca435" translate="yes" xml:space="preserve">
          <source>The default implementation appends the test to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt;&lt;code&gt;unexpectedSuccesses&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">デフォルトの実装では、インスタンスの&lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt; &lt;code&gt;unexpectedSuccesses&lt;/code&gt; &lt;/a&gt;属性にテストが追加されます。</target>
        </trans-unit>
        <trans-unit id="85209bebc3f90535b12a5ecb3ddcc009e82c4607" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &amp;lsquo;namer&amp;rsquo; attribute of the handler, if it&amp;rsquo;s callable, passing the default name to it. If the attribute isn&amp;rsquo;t callable (the default is &lt;code&gt;None&lt;/code&gt;), the name is returned unchanged.</source>
          <target state="translated">デフォルトの実装は、ハンドラーの 'namer'属性を呼び出し、呼び出し可能であれば、デフォルト名をハンドラーに渡します。属性が呼び出し可能でない場合（デフォルトは &lt;code&gt;None&lt;/code&gt; ）、名前は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="cc7fe6b93c4fa5530304a79d65cec6508761d9ab" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &amp;lsquo;rotator&amp;rsquo; attribute of the handler, if it&amp;rsquo;s callable, passing the source and dest arguments to it. If the attribute isn&amp;rsquo;t callable (the default is &lt;code&gt;None&lt;/code&gt;), the source is simply renamed to the destination.</source>
          <target state="translated">デフォルトの実装は、ハンドラーの 'rotator'属性を呼び出し可能であれば呼び出し、sourceおよびdest引数をそれに渡します。属性が呼び出し可能でない場合（デフォルトは &lt;code&gt;None&lt;/code&gt; ）、ソースは単に宛先に名前変更されます。</target>
        </trans-unit>
        <trans-unit id="8abbab4876bdfe46805a30d39840791095f498ce" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &lt;code&gt;append&lt;/code&gt; method of the &lt;code&gt;defects&lt;/code&gt; attribute of &lt;em&gt;obj&lt;/em&gt;. When the email package calls &lt;a href=&quot;#email.policy.Policy.handle_defect&quot;&gt;&lt;code&gt;handle_defect&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;obj&lt;/em&gt; will normally have a &lt;code&gt;defects&lt;/code&gt; attribute that has an &lt;code&gt;append&lt;/code&gt; method. Custom object types used with the email package (for example, custom &lt;code&gt;Message&lt;/code&gt; objects) should also provide such an attribute, otherwise defects in parsed messages will raise unexpected errors.</source>
          <target state="translated">デフォルトの実装では、&lt;em&gt;objの&lt;/em&gt; &lt;code&gt;defects&lt;/code&gt; 属性の &lt;code&gt;append&lt;/code&gt; メソッドを呼び出します。電子メールパッケージが&lt;a href=&quot;#email.policy.Policy.handle_defect&quot;&gt; &lt;code&gt;handle_defect&lt;/code&gt; を&lt;/a&gt;呼び出す場合、&lt;em&gt;objに&lt;/em&gt;は通常、 &lt;code&gt;append&lt;/code&gt; メソッドを持つ &lt;code&gt;defects&lt;/code&gt; 属性があります。電子メールパッケージで使用されるカスタムオブジェクトタイプ（カスタム &lt;code&gt;Message&lt;/code&gt; オブジェクトなど）もこのような属性を提供する必要があります。そうしないと、解析されたメッセージの欠陥により予期しないエラーが発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd2beae2a9d6bd5ba6ba29d1fa217c82f8717685" translate="yes" xml:space="preserve">
          <source>The default implementation checks the &lt;a href=&quot;#email.policy.Policy.raise_on_defect&quot;&gt;&lt;code&gt;raise_on_defect&lt;/code&gt;&lt;/a&gt; flag. If it is &lt;code&gt;True&lt;/code&gt;, &lt;em&gt;defect&lt;/em&gt; is raised as an exception. If it is &lt;code&gt;False&lt;/code&gt; (the default), &lt;em&gt;obj&lt;/em&gt; and &lt;em&gt;defect&lt;/em&gt; are passed to &lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt;&lt;code&gt;register_defect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトの実装では、&lt;a href=&quot;#email.policy.Policy.raise_on_defect&quot;&gt; &lt;code&gt;raise_on_defect&lt;/code&gt; &lt;/a&gt;フラグがチェックされます。もしそうであれば &lt;code&gt;True&lt;/code&gt; 、&lt;em&gt;欠陥が&lt;/em&gt;例外として発生します。それがある場合 &lt;code&gt;False&lt;/code&gt; （デフォルト）、&lt;em&gt;OBJ&lt;/em&gt;と&lt;em&gt;欠陥&lt;/em&gt;に渡され&lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt; &lt;code&gt;register_defect()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4694874ec5c0e9b8375091742765ef75ea74e946" translate="yes" xml:space="preserve">
          <source>The default implementation decides how to dispatch a frame, depending on the type of event (passed as a string) that is about to be executed. &lt;em&gt;event&lt;/em&gt; can be one of the following:</source>
          <target state="translated">デフォルトの実装は、実行されようとしているイベントのタイプ（ストリングとして渡される）に応じて、フレームをディスパッチする方法を決定します。&lt;em&gt;イベント&lt;/em&gt;は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="61b526d9bcd0fde98e256c446b3ae46e0b58b532" translate="yes" xml:space="preserve">
          <source>The default implementation defers to &lt;a href=&quot;#io.RawIOBase.readall&quot;&gt;&lt;code&gt;readall()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトの実装では、&lt;a href=&quot;#io.RawIOBase.readall&quot;&gt; &lt;code&gt;readall()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; が&lt;/a&gt;使用されます。</target>
        </trans-unit>
        <trans-unit id="30e7acef377f89e7b6c8ef2a0dae31deb9d115cc" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing when the outcome is a success, and records subtest failures as normal failures.</source>
          <target state="translated">デフォルトの実装では、結果が成功した場合は何もせず、サブテストの失敗を通常の失敗として記録します。</target>
        </trans-unit>
        <trans-unit id="917b792910290b9f104f9e9bb1c1c376f6e62a1b" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
          <target state="translated">デフォルトの実装では何もしません。</target>
        </trans-unit>
        <trans-unit id="67df62e256ec06c97f02e23b90b57d437ba78502" translate="yes" xml:space="preserve">
          <source>The default implementation first consults the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;. If that is set to &lt;code&gt;&quot;0&quot;&lt;/code&gt; then this function returns immediately; i.e. it is a no-op. If the environment variable is not set, or is set to the empty string, &lt;code&gt;pdb.set_trace()&lt;/code&gt; is called. Otherwise this variable should name a function to run, using Python&amp;rsquo;s dotted-import nomenclature, e.g. &lt;code&gt;package.subpackage.module.function&lt;/code&gt;. In this case, &lt;code&gt;package.subpackage.module&lt;/code&gt; would be imported and the resulting module must have a callable named &lt;code&gt;function()&lt;/code&gt;. This is run, passing in &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kws&lt;/code&gt;, and whatever &lt;code&gt;function()&lt;/code&gt; returns, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; returns to the built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">デフォルトの実装では、最初に環境変数&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; を調べ&lt;/a&gt;ます。それが &lt;code&gt;&quot;0&quot;&lt;/code&gt; 設定されている場合、この関数はすぐに戻ります。つまり、何もしません。環境変数が設定されていない場合、または空の文字列に設定されている場合は、 &lt;code&gt;pdb.set_trace()&lt;/code&gt; が呼び出されます。それ以外の場合、この変数は、Pythonのドット付きインポートの命名法（ &lt;code&gt;package.subpackage.module.function&lt;/code&gt; など）を使用して、実行する関数を指定する必要があります。この場合、 &lt;code&gt;package.subpackage.module&lt;/code&gt; がインポートされ、結果のモジュールには &lt;code&gt;function()&lt;/code&gt; という名前の呼び出し可能オブジェクトが必要です。 &lt;code&gt;*args&lt;/code&gt; と &lt;code&gt;**kws&lt;/code&gt; を渡して実行され、 &lt;code&gt;function()&lt;/code&gt; が返すものは何でも、 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; は組み込みの&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;関数に戻ります。</target>
        </trans-unit>
        <trans-unit id="f74656a8a819a518271e05ab776cc077ee5133d3" translate="yes" xml:space="preserve">
          <source>The default implementation for both functions will read and return up to 1024 bytes each time the function is called. The &lt;em&gt;master_read&lt;/em&gt; callback is passed the pseudoterminal&amp;rsquo;s master file descriptor to read output from the child process, and &lt;em&gt;stdin_read&lt;/em&gt; is passed file descriptor 0, to read from the parent process&amp;rsquo;s standard input.</source>
          <target state="translated">両方の関数のデフォルトの実装は、関数が呼び出されるたびに最大1024バイトを読み取って返します。&lt;em&gt;master_readの&lt;/em&gt;コールバックは、子プロセスからの出力を読み込むための擬似端末のマスタ・ファイル・ディスクリプタを渡され、&lt;em&gt;stdin_readには&lt;/em&gt;、親プロセスの標準入力から読み取るように、ファイルディスクリプタ0が渡されます。</target>
        </trans-unit>
        <trans-unit id="b33ae6a6fa76317fab7538fb2a3cca4c005e4023" translate="yes" xml:space="preserve">
          <source>The default implementation just uses the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_status&quot;&gt;&lt;code&gt;error_status&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_headers&quot;&gt;&lt;code&gt;error_headers&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_body&quot;&gt;&lt;code&gt;error_body&lt;/code&gt;&lt;/a&gt; attributes to generate an output page. Subclasses can override this to produce more dynamic error output.</source>
          <target state="translated">デフォルトの実装では、&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_status&quot;&gt; &lt;code&gt;error_status&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_headers&quot;&gt; &lt;code&gt;error_headers&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_body&quot;&gt; &lt;code&gt;error_body&lt;/code&gt; &lt;/a&gt;属性を使用して出力ページを生成します。サブクラスはこれをオーバーライドして、より動的なエラー出力を生成できます。</target>
        </trans-unit>
        <trans-unit id="90a3901aebe023145f5de84c1fe64e79959585c1" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;のデフォルトの実装では、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="16085cdaef9820e3e043c1b7e4309f2a7ae3234c" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.tzname&quot;&gt;&lt;code&gt;tzname()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.tzname&quot;&gt; &lt;code&gt;tzname()&lt;/code&gt; &lt;/a&gt;のデフォルトの実装はNotImplementedErrorを発生さ&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="eaa2ded4dfd4b8b4517a84086b0a0546ef2a859e" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;のデフォルトの実装では、NotImplementedErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="82debffda06a601a8240a52d0811cf0e418c2167" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does not strictly follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;, which says that 301 and 302 responses to &lt;code&gt;POST&lt;/code&gt; requests must not be automatically redirected without confirmation by the user. In reality, browsers do allow automatic redirection of these responses, changing the POST to a &lt;code&gt;GET&lt;/code&gt;, and the default implementation reproduces this behavior.</source>
          <target state="translated">このメソッドのデフォルトの実装は&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;に厳密に従っ&lt;strong&gt;て&lt;/strong&gt;いません&lt;strong&gt;。RFC2616は&lt;/strong&gt;、 &lt;code&gt;POST&lt;/code&gt; リクエストに対する301と302の応答は、ユーザーの確認なしに自動的にリダイレクトされるべきではないと述べています。実際には、ブラウザーはこれらの応答の自動リダイレクトを許可し、POSTを &lt;code&gt;GET&lt;/code&gt; に変更します。デフォルトの実装では、この動作が再現されます。</target>
        </trans-unit>
        <trans-unit id="13b55b955e1b08c46172d6efc871c03e0099cb57" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;None&lt;/code&gt; for all header names.</source>
          <target state="translated">デフォルトの実装は、すべてのヘッダー名に対して &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="725d6d53b5cf3c3613770adb4e50064aa80e4e7a" translate="yes" xml:space="preserve">
          <source>The default implementation used by &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It enables values to contain format strings which refer to other values in the same section, or values in the special default section &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;1&lt;/a&gt;. Additional default values can be provided on initialization.</source>
          <target state="translated">&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; が&lt;/a&gt;使用するデフォルトの実装。これにより、同じセクションの他の値、または特別なデフォルトセクション&lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;1&lt;/a&gt;の値を参照するフォーマット文字列を値に含めることができます。初期化時に追加のデフォルト値を提供できます。</target>
        </trans-unit>
        <trans-unit id="cd0ce3c256ee146bb362a470cd49483296837acf" translate="yes" xml:space="preserve">
          <source>The default is &amp;ldquo;tree headings&amp;rdquo;, i.e., show all elements.</source>
          <target state="translated">デフォルトは「ツリーの見出し」です。つまり、すべての要素を表示します。</target>
        </trans-unit>
        <trans-unit id="4a764b527c8c39c412a231d74d381ecae9e42fbc" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1b02b629dda45d997c18db19eedefdbf65477e98" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;long&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="814a9a510f2c1120c69400a1ceca8ba606beab6f" translate="yes" xml:space="preserve">
          <source>The default locale directory is system dependent; for example, on RedHat Linux it is &lt;code&gt;/usr/share/locale&lt;/code&gt;, but on Solaris it is &lt;code&gt;/usr/lib/locale&lt;/code&gt;. The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module does not try to support these system dependent defaults; instead its default is &lt;code&gt;&lt;em&gt;sys.prefix&lt;/em&gt;/share/locale&lt;/code&gt; (see &lt;a href=&quot;sys#sys.prefix&quot;&gt;&lt;code&gt;sys.prefix&lt;/code&gt;&lt;/a&gt;). For this reason, it is always best to call &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt; with an explicit absolute path at the start of your application.</source>
          <target state="translated">デフォルトのロケールディレクトリはシステムに依存します。たとえば、RedHat Linuxでは &lt;code&gt;/usr/share/locale&lt;/code&gt; ですが、Solarisでは &lt;code&gt;/usr/lib/locale&lt;/code&gt; です。&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; の&lt;/a&gt;モジュールは、これらのシステム依存の標準設定をサポートしません。代わりに、デフォルトは &lt;code&gt;&lt;em&gt;sys.prefix&lt;/em&gt;/share/locale&lt;/code&gt; です（&lt;a href=&quot;sys#sys.prefix&quot;&gt; &lt;code&gt;sys.prefix&lt;/code&gt; を&lt;/a&gt;参照）。このため、アプリケーションの開始時に明示的な絶対パスを指定して&lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt;を呼び出すことが常に最善です。</target>
        </trans-unit>
        <trans-unit id="794f48952ceef8edd0efaf6e7f1edca546f6b6ec" translate="yes" xml:space="preserve">
          <source>The default log level is &lt;code&gt;logging.INFO&lt;/code&gt;, which can be easily adjusted:</source>
          <target state="translated">デフォルトのログレベルは &lt;code&gt;logging.INFO&lt;/code&gt; で、簡単に調整できます。</target>
        </trans-unit>
        <trans-unit id="c10a46682ece55208f06ff3244ee92307d192950" translate="yes" xml:space="preserve">
          <source>The default mappings are:</source>
          <target state="translated">デフォルトのマッピングは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="bf79d526fbfe64d1c7da84c2d5bc4927946eb59b" translate="yes" xml:space="preserve">
          <source>The default message can be overridden with the &lt;code&gt;usage=&lt;/code&gt; keyword argument:</source>
          <target state="translated">デフォルトのメッセージは、 &lt;code&gt;usage=&lt;/code&gt; キーワード引数で上書きできます。</target>
        </trans-unit>
        <trans-unit id="141a3d8b5d2695d6fbe0a56d367c38aab3863374" translate="yes" xml:space="preserve">
          <source>The default mode is &lt;code&gt;'r'&lt;/code&gt; (open for reading text, synonym of &lt;code&gt;'rt'&lt;/code&gt;). Modes &lt;code&gt;'w+'&lt;/code&gt; and &lt;code&gt;'w+b'&lt;/code&gt; open and truncate the file. Modes &lt;code&gt;'r+'&lt;/code&gt; and &lt;code&gt;'r+b'&lt;/code&gt; open the file with no truncation.</source>
          <target state="translated">デフォルトのモードは &lt;code&gt;'r'&lt;/code&gt; （テキストを読み取るために開かれ、 &lt;code&gt;'rt'&lt;/code&gt; の同義語）です。モード &lt;code&gt;'w+'&lt;/code&gt; および &lt;code&gt;'w+b'&lt;/code&gt; は、ファイルを開いて切り捨てます。モード &lt;code&gt;'r+'&lt;/code&gt; および &lt;code&gt;'r+b'&lt;/code&gt; は、切り捨てなしでファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="03390741ae3195ccf5b5eb50f31c643c59a729d2" translate="yes" xml:space="preserve">
          <source>The default mode which is used to load shared libraries. On OSX 10.3, this is &lt;em&gt;RTLD_GLOBAL&lt;/em&gt;, otherwise it is the same as &lt;em&gt;RTLD_LOCAL&lt;/em&gt;.</source>
          <target state="translated">共有ライブラリをロードするために使用されるデフォルトのモード。OSX 10.3では、これは&lt;em&gt;RTLD_GLOBALですが&lt;/em&gt;、それ以外は&lt;em&gt;RTLD_LOCAL&lt;/em&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="73d6ea81836b7e091d9707bef84bfc523b16338a" translate="yes" xml:space="preserve">
          <source>The default opener raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;urllib.Request&lt;/code&gt; with arguments &lt;code&gt;fullurl&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt; taken from the request object.</source>
          <target state="translated">デフォルトのオープナーは、リクエストオブジェクトから &lt;code&gt;urllib.Request&lt;/code&gt; した引数 &lt;code&gt;fullurl&lt;/code&gt; 、 &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;headers&lt;/code&gt; 、 &lt;code&gt;method&lt;/code&gt; を使用して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;urllib.Requestを発生させます。</target>
        </trans-unit>
        <trans-unit id="39acba55dd14c83398ea0bbfc6e7d2a50c30c9e7" translate="yes" xml:space="preserve">
          <source>The default ordering of tests created by the unittest test loaders is to group all tests from the same modules and classes together. This will lead to &lt;code&gt;setUpClass&lt;/code&gt; / &lt;code&gt;setUpModule&lt;/code&gt; (etc) being called exactly once per class and module. If you randomize the order, so that tests from different modules and classes are adjacent to each other, then these shared fixture functions may be called multiple times in a single test run.</source>
          <target state="translated">unittestテストローダーによって作成されるテストのデフォルトの順序は、同じモジュールとクラスからのすべてのテストをグループ化することです。これにより、クラスおよびモジュールごとに1回だけ呼び出される &lt;code&gt;setUpClass&lt;/code&gt; / &lt;code&gt;setUpModule&lt;/code&gt; （など）が発生します。順序をランダム化して、異なるモジュールおよびクラスからのテストが互いに隣接するようにすると、これらの共有フィクスチャ関数が1回のテスト実行で複数回呼び出される可能性があります。</target>
        </trans-unit>
        <trans-unit id="a58a0491ff3eb550980796cd579ce9dfd157abf1" translate="yes" xml:space="preserve">
          <source>The default port for the HTTP protocol (always &lt;code&gt;80&lt;/code&gt;).</source>
          <target state="translated">HTTPプロトコルのデフォルトポート（常に &lt;code&gt;80&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="425beadae2e2f6a2971a75d3712f9625b055af90" translate="yes" xml:space="preserve">
          <source>The default port for the HTTPS protocol (always &lt;code&gt;443&lt;/code&gt;).</source>
          <target state="translated">HTTPSプロトコルのデフォルトポート（常に &lt;code&gt;443&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="30751022518c3e586bbf05c4dc10e57e1471f76b" translate="yes" xml:space="preserve">
          <source>The default return value is a mock object and you can configure it in the normal way:</source>
          <target state="translated">デフォルトの戻り値はモックオブジェクトで、通常の方法で設定できます。</target>
        </trans-unit>
        <trans-unit id="24a346496310974b8e67170483456ec9392111fd" translate="yes" xml:space="preserve">
          <source>The default scheduling policy.</source>
          <target state="translated">デフォルトのスケジューリングポリシーです。</target>
        </trans-unit>
        <trans-unit id="c002f3ffcf614b415ab0107e01446f36339d947d" translate="yes" xml:space="preserve">
          <source>The default search path used by &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*p*&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*p*&lt;/code&gt;&lt;/a&gt; if the environment doesn&amp;rsquo;t have a &lt;code&gt;'PATH'&lt;/code&gt; key. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">環境に &lt;code&gt;'PATH'&lt;/code&gt; キーがない場合に、&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*p*&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*p*&lt;/code&gt; &lt;/a&gt;によって使用されるデフォルトの検索パス。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="3efa5b275105c170638fc7b7f17c83558f25e9f6" translate="yes" xml:space="preserve">
          <source>The default selector class, using the most efficient implementation available on the current platform. This should be the default choice for most users.</source>
          <target state="translated">デフォルトのセレクタクラスで、現在のプラットフォームで利用可能な最も効率的な実装を使用します。これは、ほとんどのユーザにとってデフォルトの選択となるはずです。</target>
        </trans-unit>
        <trans-unit id="3ca70f786f3be38669a0f5f13987139bc5f61d99" translate="yes" xml:space="preserve">
          <source>The default setting is determined by calling &lt;a href=&quot;#locale.getdefaultlocale&quot;&gt;&lt;code&gt;getdefaultlocale()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;category&lt;/em&gt; defaults to &lt;a href=&quot;#locale.LC_ALL&quot;&gt;&lt;code&gt;LC_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルト設定は、&lt;a href=&quot;#locale.getdefaultlocale&quot;&gt; &lt;code&gt;getdefaultlocale()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって決定されます。&lt;em&gt;カテゴリーの&lt;/em&gt;デフォルトは&lt;a href=&quot;#locale.LC_ALL&quot;&gt; &lt;code&gt;LC_ALL&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="043146855b6cd351175d4c3c050e9e53a9299fde" translate="yes" xml:space="preserve">
          <source>The default timer, which is always &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトのタイマー。これは常に&lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e880a55fe07fce5b685fc9b8ca7365567a017ce2" translate="yes" xml:space="preserve">
          <source>The default traceback display code shows these chained exceptions in addition to the traceback for the exception itself. An explicitly chained exception in &lt;code&gt;__cause__&lt;/code&gt; is always shown when present. An implicitly chained exception in &lt;code&gt;__context__&lt;/code&gt; is shown only if &lt;code&gt;__cause__&lt;/code&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__suppress_context__&lt;/code&gt; is false.</source>
          <target state="translated">デフォルトのトレースバック表示コードは、例外自体のトレースバックに加えて、これらのチェーンされた例外を示します。 &lt;code&gt;__cause__&lt;/code&gt; の明示的にチェーンされた例外は、存在する場合は常に表示されます。 &lt;code&gt;__context__&lt;/code&gt; の暗黙的なチェーン例外は、__ &lt;code&gt;__cause__&lt;/code&gt; が&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; で&lt;/a&gt;、 &lt;code&gt;__suppress_context__&lt;/code&gt; がfalseの場合にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="7a3e28e031082803bf5f54778e88107b6b7e3956" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;a href=&quot;#email.policy.Policy.message_factory&quot;&gt;&lt;code&gt;message_factory&lt;/code&gt;&lt;/a&gt; attribute is &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.policy.Policy.message_factory&quot;&gt; &lt;code&gt;message_factory&lt;/code&gt; &lt;/a&gt;属性のデフォルト値は&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1e2dbad85c6df37fd7251dd032bd384d20f99676" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;em&gt;policy&lt;/em&gt; keyword for the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; classes and the parser convenience functions &lt;strong&gt;will be changing&lt;/strong&gt; in a future version of Python. Therefore you should &lt;strong&gt;always specify explicitly which policy you want to use&lt;/strong&gt; when calling any of the classes and functions described in the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;クラスの&lt;em&gt;ポリシー&lt;/em&gt;キーワードのデフォルト値とパーサーコンビニエンス関数&lt;strong&gt;は&lt;/strong&gt;、Pythonの将来のバージョンで&lt;strong&gt;変更&lt;/strong&gt;される予定です。したがって、&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュールで記述されているクラスや関数を呼び出すとき&lt;strong&gt;に使用するポリシーを常に明示的に指定&lt;/strong&gt;する必要&lt;strong&gt;があり&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="144a7dcfe8a056320c86d88ccef9dfb777d3754c" translate="yes" xml:space="preserve">
          <source>The default value for the parameter. If the parameter has no default value, this attribute is set to &lt;a href=&quot;#inspect.Parameter.empty&quot;&gt;&lt;code&gt;Parameter.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パラメータのデフォルト値。パラメータにデフォルト値がない場合、この属性は&lt;a href=&quot;#inspect.Parameter.empty&quot;&gt; &lt;code&gt;Parameter.empty&lt;/code&gt; に&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="aa35640f1a27bf8e96f3301b8c8fd0e1450703e6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt; if the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; is set to a non-empty string, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">環境変数&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt; &lt;/a&gt;が空でない文字列に設定されている場合、デフォルト値は &lt;code&gt;True&lt;/code&gt; です。それ以外の場合は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca3fe88381a2828f01851afbbbb72484af83f4b3" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt;. If Python is compiled without threads, the C version automatically disables the expensive thread local context machinery. In this case, the value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;True&lt;/code&gt; です。Pythonがスレッドなしでコンパイルされている場合、Cバージョンは高価なスレッドローカルコンテキスト機構を自動的に無効にします。この場合、値は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0e1de354cd457579854e47a6cc794e8c9ac39320" translate="yes" xml:space="preserve">
          <source>The default values are &lt;code&gt;prec&lt;/code&gt;=&lt;code&gt;28&lt;/code&gt;, &lt;code&gt;rounding&lt;/code&gt;=&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;, and enabled traps for &lt;a href=&quot;#decimal.Overflow&quot;&gt;&lt;code&gt;Overflow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;prec&lt;/code&gt; = &lt;code&gt;28&lt;/code&gt; 、 &lt;code&gt;rounding&lt;/code&gt; = &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#decimal.Overflow&quot;&gt; &lt;code&gt;Overflow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; の&lt;/a&gt;有効なトラップです。</target>
        </trans-unit>
        <trans-unit id="7299c60092b16e730787f8b6c4a0d4d274cb1509" translate="yes" xml:space="preserve">
          <source>The defaults are implementation-specific. If only the high watermark is given, the low watermark defaults to an implementation-specific value less than or equal to the high watermark. Setting &lt;em&gt;high&lt;/em&gt; to zero forces &lt;em&gt;low&lt;/em&gt; to zero as well, and causes &lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt; to be called whenever the buffer becomes non-empty. Setting &lt;em&gt;low&lt;/em&gt; to zero causes &lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt; to be called only once the buffer is empty. Use of zero for either limit is generally sub-optimal as it reduces opportunities for doing I/O and computation concurrently.</source>
          <target state="translated">デフォルトは実装固有です。最高水準点のみが指定されている場合、最低水準点はデフォルトで最高水準点以下の実装固有の値になります。&lt;em&gt;ハイ&lt;/em&gt;をゼロに設定すると、&lt;em&gt;ローも&lt;/em&gt;ゼロに強制され、バッファーが空でなくなるたびに&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt; &lt;code&gt;pause_writing()&lt;/code&gt; &lt;/a&gt;が呼び出されます。&lt;em&gt;low&lt;/em&gt;を0に設定すると、バッファが空になったときにだけ&lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt; &lt;code&gt;resume_writing()&lt;/code&gt; &lt;/a&gt;が呼び出されます。どちらかの制限にゼロを使用すると、I / Oと計算を同時に実行する機会が減るため、通常は最適とは言えません。</target>
        </trans-unit>
        <trans-unit id="221847e9edd5eaa3b267e4d1c2549650caad5b6f" translate="yes" xml:space="preserve">
          <source>The definition of the DOM API for Python is given as part of the &lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; module documentation. This section lists the differences between the API and &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python用のDOM APIの定義は、&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントの一部として提供されています。このセクションでは、APIと&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; の&lt;/a&gt;違いを示します。</target>
        </trans-unit>
        <trans-unit id="943baea73b814dec74b8d72bb621d33b0bfe1d54" translate="yes" xml:space="preserve">
          <source>The definitive documentation for the DOM is the DOM specification from the W3C.</source>
          <target state="translated">DOM の決定的なドキュメントは W3C の DOM 仕様です。</target>
        </trans-unit>
        <trans-unit id="5e673798c7b447103357a31e16119d6dac467057" translate="yes" xml:space="preserve">
          <source>The delta filter stores the differences between bytes, producing more repetitive input for the compressor in certain circumstances. It supports one option, &lt;code&gt;dist&lt;/code&gt;. This indicates the distance between bytes to be subtracted. The default is 1, i.e. take the differences between adjacent bytes.</source>
          <target state="translated">デルタフィルターはバイト間の差異を保存し、特定の状況でコンプレッサーにより多くの繰り返し入力を生成します。1つのオプション &lt;code&gt;dist&lt;/code&gt; をサポートしています。これは、減算されるバイト間の距離を示します。デフォルトは1です。つまり、隣接するバイト間の差を取ります。</target>
        </trans-unit>
        <trans-unit id="0b079df41b809fa4419856c946739f02648c68a2" translate="yes" xml:space="preserve">
          <source>The demo scripts are:</source>
          <target state="translated">デモスクリプトは</target>
        </trans-unit>
        <trans-unit id="cf9ee77bb8cddcf823d4f4ddb3095b093bcd8b4a" translate="yes" xml:space="preserve">
          <source>The descriptors returned by these functions are instances of Function and Class classes. Users are not expected to create instances of these classes.</source>
          <target state="translated">これらの関数が返すディスクリプタは、FunctionクラスとClassクラスのインスタンスです。ユーザはこれらのクラスのインスタンスを作成することは期待していません。</target>
        </trans-unit>
        <trans-unit id="0da76bef1aa2212782aa0ff026cf66c2f179b048" translate="yes" xml:space="preserve">
          <source>The design is such that one can use the factory functions returned by the &lt;a href=&quot;#codecs.lookup&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; function to construct the instance.</source>
          <target state="translated">デザインは、&lt;a href=&quot;#codecs.lookup&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;関数によって返されたファクトリ関数を使用してインスタンスを構築できるようになっています。</target>
        </trans-unit>
        <trans-unit id="e304666702c62ac9c3cf811c3a927f2350dc8077" translate="yes" xml:space="preserve">
          <source>The design of all built-in operating system dependent modules of Python is such that as long as the same functionality is available, it uses the same interface; for example, the function &lt;code&gt;os.stat(path)&lt;/code&gt; returns stat information about &lt;em&gt;path&lt;/em&gt; in the same format (which happens to have originated with the POSIX interface).</source>
          <target state="translated">Pythonのすべての組み込みオペレーティングシステム依存モジュールの設計は、同じ機能が利用可能である限り、同じインターフェイスを使用するようになっています。たとえば、関数 &lt;code&gt;os.stat(path)&lt;/code&gt; は、同じ形式で&lt;em&gt;path&lt;/em&gt;に関するstat情報を返します（これは、たまたまPOSIXインターフェースで発生したものです）。</target>
        </trans-unit>
        <trans-unit id="906a6d45a451c5d5583451af0ec9ab63f8309bb8" translate="yes" xml:space="preserve">
          <source>The design of this module is loosely based on Java&amp;rsquo;s threading model. However, where Java makes locks and condition variables basic behavior of every object, they are separate objects in Python. Python&amp;rsquo;s &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; class supports a subset of the behavior of Java&amp;rsquo;s Thread class; currently, there are no priorities, no thread groups, and threads cannot be destroyed, stopped, suspended, resumed, or interrupted. The static methods of Java&amp;rsquo;s Thread class, when implemented, are mapped to module-level functions.</source>
          <target state="translated">このモジュールの設計は、大まかにJavaのスレッドモデルに基づいています。ただし、Javaがすべてのオブジェクトの基本的な動作であるロックと条件変数を作成する場合、それらはPythonでは個別のオブジェクトです。Pythonの&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;クラスは、JavaのThreadクラスの動作のサブセットをサポートしています。現在、優先順位やスレッドグループはなく、スレッドを破棄、停止、一時停止、再開、または中断することはできません。JavaのThreadクラスの静的メソッドが実装されると、モジュールレベルの関数にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="c00c1643f45af0e7e9eae104f3f428178b879e63" translate="yes" xml:space="preserve">
          <source>The destination format is restricted to a single element native format in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; syntax. One of the formats must be a byte format (&amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo;). The byte length of the result must be the same as the original length.</source>
          <target state="translated">宛先フォーマットは、&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;構文では単一要素のネイティブフォーマットに制限されています。形式の1つはバイト形式でなければなりません（「B」、「b」、または「c」）。結果のバイト長は、元の長さと同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="853310cf1caf3d9ea6dbb0a860eb9bb473765452" translate="yes" xml:space="preserve">
          <source>The destination location must be writable; otherwise, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception will be raised. If &lt;em&gt;dst&lt;/em&gt; already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function.</source>
          <target state="translated">宛先の場所は書き込み可能でなければなりません。そうでない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;em&gt;dstが&lt;/em&gt;すでに存在する場合は、置き換えられます。キャラクターデバイスやブロックデバイス、パイプなどの特殊ファイルは、この関数ではコピーできません。</target>
        </trans-unit>
        <trans-unit id="12a01ce48953ff6624ef00113b65baf1192d859c" translate="yes" xml:space="preserve">
          <source>The detailed specification, implementation details and examples.</source>
          <target state="translated">詳細な仕様、実装の詳細、事例などを掲載しています。</target>
        </trans-unit>
        <trans-unit id="a567d6a1a9be2c908411e43745159c73a975ef4b" translate="yes" xml:space="preserve">
          <source>The details of character conversion in &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; are controlled by the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; keyword arguments of the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;の文字変換の詳細は、&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;クラスの&lt;em&gt;encoding&lt;/em&gt;および&lt;em&gt;errors&lt;/em&gt;キーワード引数によって制御されます。</target>
        </trans-unit>
        <trans-unit id="34da012fa9dff8518788c0b3d7cb092045825a91" translate="yes" xml:space="preserve">
          <source>The details of this function differ on Unix and Windows.</source>
          <target state="translated">この機能の詳細はUnixとWindowsで異なります。</target>
        </trans-unit>
        <trans-unit id="a14d6055539d17fe330c28c0379041872d8cb00d" translate="yes" xml:space="preserve">
          <source>The determination whether to issue a warning message is controlled by the &lt;a href=&quot;#warning-filter&quot;&gt;warning filter&lt;/a&gt;, which is a sequence of matching rules and actions. Rules can be added to the filter by calling &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt; and reset to its default state by calling &lt;a href=&quot;#warnings.resetwarnings&quot;&gt;&lt;code&gt;resetwarnings()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">警告メッセージを発行するかどうかの決定は、一致するルールとアクションのシーケンスである&lt;a href=&quot;#warning-filter&quot;&gt;警告フィルター&lt;/a&gt;によって制御されます。&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; &lt;/a&gt;を呼び出してルールをフィルターに追加し、&lt;a href=&quot;#warnings.resetwarnings&quot;&gt; &lt;code&gt;resetwarnings()&lt;/code&gt; を&lt;/a&gt;呼び出してデフォルトの状態にリセットできます。</target>
        </trans-unit>
        <trans-unit id="73dca0bcff737d2d3b02394f5fe723496528dac5" translate="yes" xml:space="preserve">
          <source>The dictionary passed to &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; must contain the following keys:</source>
          <target state="translated">&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; に&lt;/a&gt;渡されるディクショナリには、次のキーが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="a309b10a0ef1998ea5956b5985c47332b3ca7484" translate="yes" xml:space="preserve">
          <source>The difference between shallow and deep copying is only relevant for compound objects (objects that contain other objects, like lists or class instances):</source>
          <target state="translated">浅いコピーと深いコピーの違いは、複合オブジェクト(リストやクラスインスタンスのように他のオブジェクトを含むオブジェクト)にのみ関係します。</target>
        </trans-unit>
        <trans-unit id="f13a9d0f0f57f180befad466255cd497424b6d22" translate="yes" xml:space="preserve">
          <source>The difference is that the &lt;code&gt;readline()&lt;/code&gt; call in the second handler will call &lt;code&gt;recv()&lt;/code&gt; multiple times until it encounters a newline character, while the single &lt;code&gt;recv()&lt;/code&gt; call in the first handler will just return what has been sent from the client in one &lt;code&gt;sendall()&lt;/code&gt; call.</source>
          <target state="translated">違いがあることである &lt;code&gt;readline()&lt;/code&gt; 第二ハンドラ内で呼び出しが呼び出す &lt;code&gt;recv()&lt;/code&gt; 、それは改行文字に遭遇するまで、単一ながら、複数回 &lt;code&gt;recv()&lt;/code&gt; 最初のハンドラ内で呼び出しが一つだけで、クライアントから送られてきたものを返します。 &lt;code&gt;sendall()&lt;/code&gt; 呼び出し。</target>
        </trans-unit>
        <trans-unit id="7f4ce614fc3c5ce47e342e7509a9fcd6e2263cba" translate="yes" xml:space="preserve">
          <source>The dircmp class</source>
          <target state="translated">dircmp クラス</target>
        </trans-unit>
        <trans-unit id="5b186c9536ac444951a67e97a0ba165a32d7d506" translate="yes" xml:space="preserve">
          <source>The directories are allowed to exist (for when an existing environment is being upgraded).</source>
          <target state="translated">ディレクトリの存在を許可します(既存の環境をアップグレードする場合)。</target>
        </trans-unit>
        <trans-unit id="3ed7571611b51b5a7d9d0b2c98a40156f70c51d5" translate="yes" xml:space="preserve">
          <source>The directory &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">ディレクトリ&lt;em&gt;a&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="39cd511f81d10b80603aff273f9c039527add995" translate="yes" xml:space="preserve">
          <source>The directory &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">ディレクトリ&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2d510cfc449c5e8636e56f356ec78fb5d4b7cfca" translate="yes" xml:space="preserve">
          <source>The directory can be explicitly cleaned up by calling the &lt;code&gt;cleanup()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;cleanup()&lt;/code&gt; メソッドを呼び出すことにより、ディレクトリを明示的にクリーンアップできます。</target>
        </trans-unit>
        <trans-unit id="6990eba23c2a267e829ead12a6b14c528cdac3d4" translate="yes" xml:space="preserve">
          <source>The directory is opaque when viewed through a union stack.</source>
          <target state="translated">ユニオンスタックを通して見ると、ディレクトリは不透明になります。</target>
        </trans-unit>
        <trans-unit id="2357d402069095a1d69201172b2c12576d482c6c" translate="yes" xml:space="preserve">
          <source>The directory name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned object. When the returned object is used as a context manager, the &lt;code&gt;name&lt;/code&gt; will be assigned to the target of the &lt;code&gt;as&lt;/code&gt; clause in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, if there is one.</source>
          <target state="translated">ディレクトリ名は、返されたオブジェクトの &lt;code&gt;name&lt;/code&gt; 属性から取得できます。返されたオブジェクトがコンテキストマネージャとして使用される場合、 &lt;code&gt;name&lt;/code&gt; は、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントの &lt;code&gt;as&lt;/code&gt; 句のターゲットに割り当てられます（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="b35f56c191faad6472c0141b116290aca2391a78" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-1&quot;&gt;TMPDIR&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code id=&quot;index-1&quot;&gt;TMPDIR&lt;/code&gt; 環境変数で指定されたディレクトリ。</target>
        </trans-unit>
        <trans-unit id="29814fe7aa509a2b063de5230c93f3cba90feca2" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-2&quot;&gt;TEMP&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code id=&quot;index-2&quot;&gt;TEMP&lt;/code&gt; 環境変数で指定されたディレクトリ。</target>
        </trans-unit>
        <trans-unit id="4f86539184fc4d2d2f0f9bffd91b762cb482c710" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-3&quot;&gt;TMP&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code id=&quot;index-3&quot;&gt;TMP&lt;/code&gt; 環境変数で指定されたディレクトリ。</target>
        </trans-unit>
        <trans-unit id="bd4aec7dd167f631c8a4341121b8d6994d521f9b" translate="yes" xml:space="preserve">
          <source>The disadvantage of a self-signed certificate is that it is its own root certificate, and no one else will have it in their cache of known (and trusted) root certificates.</source>
          <target state="translated">自己署名証明書の欠点は、それが自分自身のルート証明書であり、他の誰にも知られた(信頼された)ルート証明書のキャッシュにはないということです。</target>
        </trans-unit>
        <trans-unit id="e4d43bffa96f6204d6ae5629ccd514e5d9ce5afe" translate="yes" xml:space="preserve">
          <source>The disassembly is written as text to the supplied &lt;em&gt;file&lt;/em&gt; argument if provided and to &lt;code&gt;sys.stdout&lt;/code&gt; otherwise.</source>
          <target state="translated">逆アセンブリは、指定されている場合は指定された&lt;em&gt;ファイル&lt;/em&gt;引数にテキストとして書き込まれ、そうでない場合は &lt;code&gt;sys.stdout&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="6b60e6af892f070f5741292c864890daf4177c61" translate="yes" xml:space="preserve">
          <source>The disk balancing algorithms which are current, nowadays, are more annoying than clever, and this is a consequence of the seeking capabilities of the disks. On devices which cannot seek, like big tape drives, the story was quite different, and one had to be very clever to ensure (far in advance) that each tape movement will be the most effective possible (that is, will best participate at &amp;ldquo;progressing&amp;rdquo; the merge). Some tapes were even able to read backwards, and this was also used to avoid the rewinding time. Believe me, real good tape sorts were quite spectacular to watch! From all times, sorting has always been a Great Art! :-)</source>
          <target state="translated">現在、現在のディスクバランシングアルゴリズムは、賢いというよりも迷惑なものです。これは、ディスクのシーク機能の結果です。大きなテープドライブのようにシークできないデバイスでは、状況はまったく異なり、各テープの動きが最も効果的なものになるように（事前に）非常に賢くする必要がありました（つまり、マージ」の進行中）。一部のテープは逆方向に読み取ることさえでき、これは巻き戻し時間を回避するためにも使用されました。私を信じて、本当に良いテープの種類は見るのにかなり壮観でした！いつでも、並べ替えは常に素晴らしいアートです。:-)</target>
        </trans-unit>
        <trans-unit id="de4509458b5999b814732a12ee716e1291daa74d" translate="yes" xml:space="preserve">
          <source>The display name portion of the address, if any, with all quoting removed. If the address does not have a display name, this attribute will be an empty string.</source>
          <target state="translated">アドレスの表示名の部分 (もしあれば、すべての引用符を削除したもの)。アドレスに表示名がない場合、この属性は空の文字列となります。</target>
        </trans-unit>
        <trans-unit id="b3ffe664da088c28c4dfb305539a430b26d2cd27" translate="yes" xml:space="preserve">
          <source>The distinction between aware and naive doesn&amp;rsquo;t apply to &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">認識とナイーブの区別は、&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトには適用されません。</target>
        </trans-unit>
        <trans-unit id="a88b02874a2183ab63db978cb3d089c5c1c77714" translate="yes" xml:space="preserve">
          <source>The docstrings of the functions which are derived from methods have a modified form:</source>
          <target state="translated">メソッドから派生した関数のdocstringsは修正された形をしています。</target>
        </trans-unit>
        <trans-unit id="15a57359f59d33fd95cd9fd1878284e1c5612b40" translate="yes" xml:space="preserve">
          <source>The doctest command line accepts the option &lt;code&gt;-f&lt;/code&gt; as a shorthand for &lt;code&gt;-o
FAIL_FAST&lt;/code&gt;.</source>
          <target state="translated">doctestコマンド行は、オプション &lt;code&gt;-f&lt;/code&gt; を &lt;code&gt;-o FAIL_FAST&lt;/code&gt; 省略形として受け入れます。</target>
        </trans-unit>
        <trans-unit id="f7edc27c9b251af25f08e439a5fa1ae563449aee" translate="yes" xml:space="preserve">
          <source>The document attempted to remove the namespace declaration associated with a prefix.</source>
          <target state="translated">このドキュメントでは、プレフィックスに関連付けられた名前空間宣言を削除しようとしました。</target>
        </trans-unit>
        <trans-unit id="10a2ff25b70c156c1132e77ce7ede7c43d4ef115" translate="yes" xml:space="preserve">
          <source>The document contained no document element at all.</source>
          <target state="translated">文書には文書要素が全く含まれていませんでした。</target>
        </trans-unit>
        <trans-unit id="8b1d05974dee6ddfa33f763e960cb8596c6c89b6" translate="yes" xml:space="preserve">
          <source>The document contains no elements (XML requires all documents to contain exactly one top-level element)..</source>
          <target state="translated">ドキュメントには要素が含まれていません(XMLでは、すべてのドキュメントにトップレベルの要素を正確に1つ含むことが要求されます)。</target>
        </trans-unit>
        <trans-unit id="0e022fadcd6ebdd4dce2b1340fd4cc2d36f4effa" translate="yes" xml:space="preserve">
          <source>The document encoding is not supported by Expat.</source>
          <target state="translated">ドキュメントのエンコードはExpatではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="45eb94f8f738860eeb2b172bec8e84ce78dc6574" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; on PyPI has further information about all known attack vectors with examples and references.</source>
          <target state="translated">PyPIの&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt;のドキュメントには、既知のすべての攻撃ベクトルに関する詳細と例とリファレンスが含まれています。</target>
        </trans-unit>
        <trans-unit id="52d6ee35bc489f9c966545e9c6e4189b68230cec" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; packages are the definition of the Python bindings for the DOM and SAX interfaces.</source>
          <target state="translated">&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;パッケージのドキュメントは、DOMおよびSAXインターフェースのPythonバインディングの定義です。</target>
        </trans-unit>
        <trans-unit id="98dc23305981bc90fc36fd9227d9b674c345d97d" translate="yes" xml:space="preserve">
          <source>The earlier SAX 1 interface provided by the Python XML Special Interest Group used a more Java-like interface for this method. Since most parsers used from Python did not take advantage of the older interface, the simpler signature was chosen to replace it. To convert old code to the new interface, use &lt;em&gt;content&lt;/em&gt; instead of slicing content with the old &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; parameters.</source>
          <target state="translated">Python XML Special Interest Groupによって提供された以前のSAX 1インターフェースは、このメソッドによりJavaに似たインターフェースを使用していました。Pythonから使用されるほとんどのパーサーは古いインターフェースを利用していなかったため、単純なシグニチャーがそれを置き換えるために選択されました。新しいインターフェイス、使用に古いコードを変換するには&lt;em&gt;、コンテンツ&lt;/em&gt;の代わりに古いとスライスコンテンツの&lt;em&gt;オフセット&lt;/em&gt;と&lt;em&gt;長さ&lt;/em&gt;のパラメーター。</target>
        </trans-unit>
        <trans-unit id="76ec6d13cceb3b560d2ffecdd1e137e7f039d3d4" translate="yes" xml:space="preserve">
          <source>The earliest representable &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;datetime(MINYEAR, 1, 1,
tzinfo=None)&lt;/code&gt;.</source>
          <target state="translated">表現可能な最も古い&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;datetime(MINYEAR, 1, 1, tzinfo=None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9003e875acf880f08070ec4d1db25f2fc4aa782b" translate="yes" xml:space="preserve">
          <source>The earliest representable &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;time(0, 0, 0, 0)&lt;/code&gt;.</source>
          <target state="translated">表現可能な最も早い&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;time(0, 0, 0, 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47c650a99a648604cd819bc36b58ac25362286da" translate="yes" xml:space="preserve">
          <source>The earliest representable date, &lt;code&gt;date(MINYEAR, 1, 1)&lt;/code&gt;.</source>
          <target state="translated">表現可能な最も早い日付 &lt;code&gt;date(MINYEAR, 1, 1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bef193c5f3fa08733d4d4cd070fcd5c19da9c977" translate="yes" xml:space="preserve">
          <source>The easiest way to create a binary stream is with &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;'b'&lt;/code&gt; in the mode string:</source>
          <target state="translated">バイナリストリームを作成する最も簡単な方法は、モード文字列に &lt;code&gt;'b'&lt;/code&gt; した&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="d1d8d451e096581c982d771f39ecd4c6c3d239d0" translate="yes" xml:space="preserve">
          <source>The easiest way to create a text stream is with &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, optionally specifying an encoding:</source>
          <target state="translated">テキストストリームを作成する最も簡単な方法は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を使用し&lt;/a&gt;、オプションでエンコーディングを指定することです。</target>
        </trans-unit>
        <trans-unit id="78c60cbccd7a51f00d2d498ba443cdd533a6176c" translate="yes" xml:space="preserve">
          <source>The easiest way to provide your own policy is to override this class and call its methods in your overridden implementations before adding your own additional checks:</source>
          <target state="translated">独自のポリシーを提供する最も簡単な方法は、独自の追加チェックを追加する前に、このクラスをオーバーライドし、オーバーライドされた実装でそのメソッドを呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="6c33291f3e651294d4ee970ee9b4832d9009fad1" translate="yes" xml:space="preserve">
          <source>The editing features described in previous subsections work when entering code interactively. IDLE&amp;rsquo;s Shell window also responds to the following keys.</source>
          <target state="translated">前のサブセクションで説明した編集機能は、コードをインタラクティブに入力するときに機能します。IDLEのシェルウィンドウは、次のキーにも応答します。</target>
        </trans-unit>
        <trans-unit id="08a9deab57a6e87ba13c9cef116a534a382e5487" translate="yes" xml:space="preserve">
          <source>The effects of round-off error can be amplified by the addition or subtraction of nearly offsetting quantities resulting in loss of significance. Knuth provides two instructive examples where rounded floating point arithmetic with insufficient precision causes the breakdown of the associative and distributive properties of addition:</source>
          <target state="translated">丸め誤差の影響は,ほぼ相殺された量の加算や減算によって増幅され,有意性を失うことになります.Knuth は、精度が不十分な丸みを帯びた浮動小数点演算が、加算の連想性と分布性を破壊する原因となる 2 つの有益な例を提供しています。</target>
        </trans-unit>
        <trans-unit id="af646cedcd480fc2845b3a6b4f0d2380953bd50c" translate="yes" xml:space="preserve">
          <source>The element name, attribute names, and attribute values can be either bytestrings or Unicode strings. &lt;em&gt;parent&lt;/em&gt; is the parent element. &lt;em&gt;tag&lt;/em&gt; is the subelement name. &lt;em&gt;attrib&lt;/em&gt; is an optional dictionary, containing element attributes. &lt;em&gt;extra&lt;/em&gt; contains additional attributes, given as keyword arguments. Returns an element instance.</source>
          <target state="translated">要素名、属性名、および属性値は、バイト文字列またはUnicode文字列のいずれかです。&lt;em&gt;parent&lt;/em&gt;は親要素です。&lt;em&gt;tag&lt;/em&gt;はサブエレメント名です。&lt;em&gt;attrib&lt;/em&gt;はオプションのディクショナリで、要素の属性が含まれています。&lt;em&gt;extraに&lt;/em&gt;は、キーワード引数として指定された追加の属性が含まれます。要素のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="3d0be1524ec53ac85afea89617259f2a7e5f14e4" translate="yes" xml:space="preserve">
          <source>The element name, attribute names, and attribute values can be either bytestrings or Unicode strings. &lt;em&gt;tag&lt;/em&gt; is the element name. &lt;em&gt;attrib&lt;/em&gt; is an optional dictionary, containing element attributes. &lt;em&gt;extra&lt;/em&gt; contains additional attributes, given as keyword arguments.</source>
          <target state="translated">要素名、属性名、および属性値は、バイト文字列またはUnicode文字列のいずれかです。&lt;em&gt;tag&lt;/em&gt;は要素名です。&lt;em&gt;attrib&lt;/em&gt;はオプションのディクショナリで、要素の属性が含まれています。&lt;em&gt;extraに&lt;/em&gt;は、キーワード引数として指定された追加の属性が含まれます。</target>
        </trans-unit>
        <trans-unit id="cdb4dcd901151ab5c9a7f2175c497daa8c2b36c5" translate="yes" xml:space="preserve">
          <source>The element named by the model name was declared to have a content model of &lt;code&gt;ANY&lt;/code&gt;.</source>
          <target state="translated">モデル名で指定された要素が &lt;code&gt;ANY&lt;/code&gt; のコンテンツモデルを持つように宣言されました。</target>
        </trans-unit>
        <trans-unit id="534871b2bf6d13b459184db326339923a278d5b6" translate="yes" xml:space="preserve">
          <source>The element type name. In a namespace-using document it may have colons in it. The value is a string.</source>
          <target state="translated">要素の型名。名前空間を使用するドキュメントでは、コロンを含むことがあります。値は文字列です。</target>
        </trans-unit>
        <trans-unit id="34e66592bc4e2c1b0614156015fd164a4e4c8c82" translate="yes" xml:space="preserve">
          <source>The email package calls this method with a list of strings, each string ending with the line separation characters found in the source being parsed. The first line includes the field header name and separator. All whitespace in the source is preserved. The method should return the &lt;code&gt;(name, value)&lt;/code&gt; tuple that is to be stored in the &lt;code&gt;Message&lt;/code&gt; to represent the parsed header.</source>
          <target state="translated">電子メールパッケージは、文字列のリストを使用してこのメ​​ソッドを呼び出します。各文字列は、解析されるソースで見つかった行区切り文字で終わります。最初の行には、フィールドヘッダー名とセパレーターが含まれています。ソース内のすべての空白は保持されます。このメソッドは、解析されたヘッダーを表すために &lt;code&gt;Message&lt;/code&gt; に格納される &lt;code&gt;(name, value)&lt;/code&gt; タプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="3438c25b441b90b95233d8048c7ba543c03b2ff7" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; currently stored in the &lt;code&gt;Message&lt;/code&gt; for a given header. The method should return a string that represents that header &amp;ldquo;folded&amp;rdquo; correctly (according to the policy settings) by composing the &lt;em&gt;name&lt;/em&gt; with the &lt;em&gt;value&lt;/em&gt; and inserting &lt;a href=&quot;#email.policy.Policy.linesep&quot;&gt;&lt;code&gt;linesep&lt;/code&gt;&lt;/a&gt; characters at the appropriate places. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; for a discussion of the rules for folding email headers.</source>
          <target state="translated">電子メールパッケージは、指定されたヘッダーの &lt;code&gt;Message&lt;/code&gt; 現在格納されている&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値を使用&lt;/em&gt;してこのメ​​ソッドを呼び出します。メソッドは、&lt;em&gt;名前&lt;/em&gt;を&lt;em&gt;値で&lt;/em&gt;構成し、適切な場所に&lt;a href=&quot;#email.policy.Policy.linesep&quot;&gt; &lt;code&gt;linesep&lt;/code&gt; &lt;/a&gt;文字を挿入することにより、（ポリシー設定に従って）正しく「折りたたまれた」ヘッダーを表す文字列を返す必要があり&lt;em&gt;ます&lt;/em&gt;。電子メールヘッダーの折りたたみのルールについては、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb63a95898c5c4fb4763a2febdcbf523de818d32" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; currently stored in the &lt;code&gt;Message&lt;/code&gt; when that header is requested by the application program, and whatever the method returns is what is passed back to the application as the value of the header being retrieved. Note that there may be more than one header with the same name stored in the &lt;code&gt;Message&lt;/code&gt;; the method is passed the specific name and value of the header destined to be returned to the application.</source>
          <target state="translated">電子メールパッケージは、アプリケーションプログラムによってヘッダーが要求されると、 &lt;code&gt;Message&lt;/code&gt; に現在格納されている&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値を使用&lt;/em&gt;してこのメ​​ソッドを呼び出します。メソッドが返すものはすべて、取得されるヘッダーの値としてアプリケーションに返されるものです。 &lt;code&gt;Message&lt;/code&gt; に保存されている同じ名前のヘッダーが複数存在する場合があることに注意してください。メソッドには、アプリケーションに返される予定のヘッダーの特定の名前と値が渡されます。</target>
        </trans-unit>
        <trans-unit id="b640d8f2580ab201b636d35ed547ad20d6e09b6b" translate="yes" xml:space="preserve">
          <source>The email package calls this method with the name and value provided by the application program when the application program is modifying a &lt;code&gt;Message&lt;/code&gt; programmatically (as opposed to a &lt;code&gt;Message&lt;/code&gt; created by a parser). The method should return the &lt;code&gt;(name, value)&lt;/code&gt; tuple that is to be stored in the &lt;code&gt;Message&lt;/code&gt; to represent the header.</source>
          <target state="translated">電子メールパッケージは、アプリケーションプログラムが &lt;code&gt;Message&lt;/code&gt; （パーサーによって作成された &lt;code&gt;Message&lt;/code&gt; はなく）プログラムで変更しているときに、アプリケーションプログラムによって提供された名前と値を使用してこのメ​​ソッドを呼び出します。このメソッドは、ヘッダーを表すために &lt;code&gt;Message&lt;/code&gt; に格納される &lt;code&gt;(name, value)&lt;/code&gt; タプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="8f240002ee824e034224951554eb1c96d1d49a99" translate="yes" xml:space="preserve">
          <source>The email package does its best to hide the details of the various governing RFCs from the application. Conceptually the application should be able to treat the email message as a structured tree of unicode text and binary attachments, without having to worry about how these are represented when serialized. In practice, however, it is often necessary to be aware of at least some of the rules governing MIME messages and their structure, specifically the names and nature of the MIME &amp;ldquo;content types&amp;rdquo; and how they identify multipart documents. For the most part this knowledge should only be required for more complex applications, and even then it should only be the high level structure in question, and not the details of how those structures are represented. Since MIME content types are used widely in modern internet software (not just email), this will be a familiar concept to many programmers.</source>
          <target state="translated">電子メールパッケージは、さまざまな管理RFCの詳細をアプリケーションから隠すために最善を尽くします。概念的には、アプリケーションは、シリアル化されたときにこれらがどのように表されるかについて心配する必要なく、電子メールメッセージをUnicodeテキストとバイナリ添付ファイルの構造化ツリーとして扱うことができる必要があります。ただし、実際には、MIMEメッセージとその構造、特にMIMEの「コンテンツタイプ」の名前と性質、およびマルチパートドキュメントの識別方法を管理するルールの少なくとも一部を認識する必要があることがよくあります。ほとんどの場合、この知識はより複雑なアプリケーションにのみ必要であり、それでも問題の高レベルの構造のみであり、それらの構造の表現方法の詳細ではありません。 MIMEコンテンツタイプは、（電子メールだけでなく）最新のインターネットソフトウェアで広く使用されているため、これは多くのプログラマにとっておなじみの概念です。</target>
        </trans-unit>
        <trans-unit id="101c5ba6b37aa8005a49597770b8d1f23548c119" translate="yes" xml:space="preserve">
          <source>The encoded data will have newlines every 76 characters as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html#section-6.8&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2045 section 6.8&lt;/strong&gt;&lt;/a&gt;, which was the de facto standard base64 specification when the XML-RPC spec was written.</source>
          <target state="translated">エンコードされたデータには、&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html#section-6.8&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2045セクション6.8&lt;/strong&gt;&lt;/a&gt;に従って、76文字ごとに改行があり&lt;strong&gt;ます&lt;/strong&gt;。これは、XML-RPC仕様が作成されたときの事実上の標準base64仕様でした。</target>
        </trans-unit>
        <trans-unit id="79fd1f20636ced312cd94cdc52fdef0b7a8bfe16" translate="yes" xml:space="preserve">
          <source>The encoded value of the cookie &amp;mdash; this is what should be sent.</source>
          <target state="translated">Cookieのエンコードされた値&amp;mdash;これは送信されるものです。</target>
        </trans-unit>
        <trans-unit id="96b435363fcdcb22ea2d43ea881834604e657ced" translate="yes" xml:space="preserve">
          <source>The encoder must be able to handle zero length input and return an empty object of the output object type in this situation.</source>
          <target state="translated">エンコーダは、この状況でゼロ長の入力を処理し、出力オブジェクトタイプの空のオブジェクトを返すことができなければなりません。</target>
        </trans-unit>
        <trans-unit id="1631cb3d0d8698dbeb4af6cf19ae8b8843f6321c" translate="yes" xml:space="preserve">
          <source>The encoding attribute of the &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; is ignored if the &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; also contains a character stream.</source>
          <target state="translated">エンコード属性&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;無視され&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;また、文字ストリームが含まれています。</target>
        </trans-unit>
        <trans-unit id="8d5827c34a301ab6bf0ace40ea931ae2aac9ab7c" translate="yes" xml:space="preserve">
          <source>The encoding must be a string acceptable for an XML encoding declaration (see section 4.3.3 of the XML recommendation).</source>
          <target state="translated">エンコーディングは,XMLエンコーディング宣言に許容される文字列でなければならない(XML勧告の4.3.3項参照)。</target>
        </trans-unit>
        <trans-unit id="6a2f46957b3ba99c6e50d62370c70192d43b8f63" translate="yes" xml:space="preserve">
          <source>The encoding name included in the XML output should conform to the appropriate standards. For example, &amp;ldquo;UTF-8&amp;rdquo; is valid, but &amp;ldquo;UTF8&amp;rdquo; is not valid in an XML document&amp;rsquo;s declaration, even though Python accepts it as an encoding name. See &lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt; and &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;.</source>
          <target state="translated">XML出力に含まれるエンコーディング名は、適切な標準に準拠している必要があります。たとえば、「UTF-8」は有効ですが、Pythonがエンコーディング名として受け入れても、「UTF8」はXMLドキュメントの宣言では無効です。&lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt;および&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtmlを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="eb0d09476afe905814a4dfa19f625362273705bd" translate="yes" xml:space="preserve">
          <source>The encoding string included in XML output should conform to the appropriate standards. For example, &amp;ldquo;UTF-8&amp;rdquo; is valid, but &amp;ldquo;UTF8&amp;rdquo; is not. See &lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt; and &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtml&lt;/a&gt;.</source>
          <target state="translated">XML出力に含まれるエンコード文字列は、適切な標準に準拠している必要があります。たとえば、「UTF-8」は有効ですが、「UTF8」は無効です。&lt;a href=&quot;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&quot;&gt;https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl&lt;/a&gt;および&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;https://www.iana.org/assignments/character-sets/character-sets.xhtmlを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="896c3228e957e8bc5147701e30cd58b086cc96dd" translate="yes" xml:space="preserve">
          <source>The end user guide for installing Python packages</source>
          <target state="translated">Pythonパッケージをインストールするためのエンドユーザーガイド</target>
        </trans-unit>
        <trans-unit id="d5f67970109087508d1d4050202b6e61741b9f1a" translate="yes" xml:space="preserve">
          <source>The end-point value &lt;code&gt;b&lt;/code&gt; may or may not be included in the range depending on floating-point rounding in the equation &lt;code&gt;a + (b-a) * random()&lt;/code&gt;.</source>
          <target state="translated">エンドポイント値 &lt;code&gt;b&lt;/code&gt; は、式 &lt;code&gt;a + (b-a) * random()&lt;/code&gt; 浮動小数点の丸めに応じて、範囲に含まれる場合と含まれない場合があります。</target>
        </trans-unit>
        <trans-unit id="a7d3c35f0e85c1a6bf781b776ea72d3b7217b57e" translate="yes" xml:space="preserve">
          <source>The entire Python program exits when no alive non-daemon threads are left.</source>
          <target state="translated">デーモンではないスレッドが残っていない場合、Pythonプログラム全体が終了します。</target>
        </trans-unit>
        <trans-unit id="1295da24b6424a5f2becb1d572a40d22568b6040" translate="yes" xml:space="preserve">
          <source>The entire set of key/value pairs are placed into a dictionary and set as the &amp;ldquo;protected&amp;rdquo; &lt;code&gt;_info&lt;/code&gt; instance variable.</source>
          <target state="translated">キーと値のペアのセット全体がディクショナリに配置され、「保護された」 &lt;code&gt;_info&lt;/code&gt; インスタンス変数として設定されます。</target>
        </trans-unit>
        <trans-unit id="f626d177c89f813c8672bbbbf5ed6f0e7658688e" translate="yes" xml:space="preserve">
          <source>The entity body for the request, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">リクエストのエンティティボディ。指定されていない場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10c3943f73ea65136af21ded034c30fd235e6dc9" translate="yes" xml:space="preserve">
          <source>The entries &lt;em&gt;exampleturtle&lt;/em&gt; and &lt;em&gt;examplescreen&lt;/em&gt; define the names of these objects as they occur in the docstrings. The transformation of method-docstrings to function-docstrings will delete these names from the docstrings.</source>
          <target state="translated">エントリ&lt;em&gt;exampleturtle&lt;/em&gt;と&lt;em&gt;examplescreen&lt;/em&gt;は、これらのオブジェクトの名前をdocstringに出現するときに定義します。method-docstringsをfunction-docstringsに変換すると、これらの名前がdocstringsから削除されます。</target>
        </trans-unit>
        <trans-unit id="2d3bf2bcd11a295a8919305fa1689658a574d326" translate="yes" xml:space="preserve">
          <source>The entries are separated by one or more newlines. Now we convert the string into a list with each nonempty line having its own entry:</source>
          <target state="translated">エントリは1つ以上の改行で区切られています。ここで、文字列をリストに変換し、空でない行にはそれぞれ独自のエントリを持つようにします。</target>
        </trans-unit>
        <trans-unit id="a046690533f2ceb581ea9120c3d79e1cf1efa2ca" translate="yes" xml:space="preserve">
          <source>The entry&amp;rsquo;s base filename, relative to the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パス&lt;/em&gt;引数に関連するエントリのベースファイル名。</target>
        </trans-unit>
        <trans-unit id="85163f028cbe41023b8741f26141bdf866b4ffad" translate="yes" xml:space="preserve">
          <source>The entry&amp;rsquo;s full path name: equivalent to &lt;code&gt;os.path.join(scandir_path,
entry.name)&lt;/code&gt; where &lt;em&gt;scandir_path&lt;/em&gt; is the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument. The path is only absolute if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument was absolute. If the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument was a &lt;a href=&quot;#path-fd&quot;&gt;file descriptor&lt;/a&gt;, the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attribute is the same as the &lt;a href=&quot;#os.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">エントリの完全パス名： &lt;code&gt;os.path.join(scandir_path, entry.name)&lt;/code&gt; と&lt;em&gt;同じ&lt;/em&gt;です。ここで、&lt;em&gt;scandir_path&lt;/em&gt;は&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パス&lt;/em&gt;引数です。パスは、&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パス&lt;/em&gt;引数が絶対&lt;em&gt;パスである&lt;/em&gt;場合にのみ絶対&lt;em&gt;パスになり&lt;/em&gt;ます。場合&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パスの&lt;/em&gt;引数がした&lt;a href=&quot;#path-fd&quot;&gt;ファイルディスクリプタ&lt;/a&gt;、&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;属性が同じである&lt;a href=&quot;#os.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="6af325104c8e57bb1184ac87ae3edda497672155" translate="yes" xml:space="preserve">
          <source>The enum members have &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;values&lt;/em&gt; (the name of &lt;code&gt;Color.RED&lt;/code&gt; is &lt;code&gt;RED&lt;/code&gt;, the value of &lt;code&gt;Color.BLUE&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;, etc.)</source>
          <target state="translated">enumメンバーには&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;があり&lt;em&gt;ます&lt;/em&gt;（ &lt;code&gt;Color.RED&lt;/code&gt; の名前は &lt;code&gt;RED&lt;/code&gt; 、 &lt;code&gt;Color.BLUE&lt;/code&gt; の値は &lt;code&gt;3&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="e4cc568c813d1cdfe613369fc63617a986880d21" translate="yes" xml:space="preserve">
          <source>The equality operation for &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; checks for matching order.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;の等価演算は、一致する順序をチェックします。</target>
        </trans-unit>
        <trans-unit id="cb1db0558f0a93652ed687f8a8a1425bb424eec1" translate="yes" xml:space="preserve">
          <source>The equivalent operation using the &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module is somewhat longer, and allows the intermediate internal parse tree to be retained as an ST object:</source>
          <target state="translated">&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュールを使用した同等の操作は多少長くなり、中間の内部解析ツリーをSTオブジェクトとして保持できます。</target>
        </trans-unit>
        <trans-unit id="20d51c761b7e7fd34e36d41458d9971587168a68" translate="yes" xml:space="preserve">
          <source>The equivalent regular expression would be</source>
          <target state="translated">これに相当する正規表現は次のようになります。</target>
        </trans-unit>
        <trans-unit id="417fb3947ac5e64f68d7832fa02e6981fc975ca4" translate="yes" xml:space="preserve">
          <source>The equivalent to the built-in &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; that uses the formatting imposed by the instance.</source>
          <target state="translated">インスタンスによって課されるフォーマットを使用する組み込みの&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="140dbe22d5460219ceb93bdba6b9eac6084d4dcb" translate="yes" xml:space="preserve">
          <source>The error code.</source>
          <target state="translated">エラーコードです。</target>
        </trans-unit>
        <trans-unit id="3387baccbf0f6b7105d8a7d8370887d7ee98efc1" translate="yes" xml:space="preserve">
          <source>The error message or diagnostic string.</source>
          <target state="translated">エラーメッセージまたは診断文字列。</target>
        </trans-unit>
        <trans-unit id="b195b26d47178842e7757e9f55d9d77dfe1a846b" translate="yes" xml:space="preserve">
          <source>The error raised for bad ZIP files.</source>
          <target state="translated">不正なZIPファイルに対して発生したエラーです。</target>
        </trans-unit>
        <trans-unit id="01d21ac2a73f61496f718d2bb37954e437ac49a3" translate="yes" xml:space="preserve">
          <source>The error raised when a ZIP file would require ZIP64 functionality but that has not been enabled.</source>
          <target state="translated">ZIP ファイルに ZIP64 機能が必要だが、それが有効になっていない場合に発生するエラー。</target>
        </trans-unit>
        <trans-unit id="a2b36dbb8bd95a7886aaee9447c81bc891531ec5" translate="yes" xml:space="preserve">
          <source>The error response body. This should be an HTTP response body bytestring. It defaults to the plain text, &amp;ldquo;A server error occurred. Please contact the administrator.&amp;rdquo;</source>
          <target state="translated">エラーレスポンスの本文。これは、HTTP応答本文のバイト文字列である必要があります。デフォルトはプレーンテキストです。「サーバーエラーが発生しました。管理者に連絡してください。」</target>
        </trans-unit>
        <trans-unit id="b073172d27313054835e89372929b95496f3e307" translate="yes" xml:space="preserve">
          <source>The error setting of the decoder or encoder.</source>
          <target state="translated">デコーダまたはエンコーダのエラー設定。</target>
        </trans-unit>
        <trans-unit id="052c1e179a0c79f767c6604197b82ab12f14cc1d" translate="yes" xml:space="preserve">
          <source>The event loop is the core of every asyncio application. Event loops run asynchronous tasks and callbacks, perform network IO operations, and run subprocesses.</source>
          <target state="translated">イベントループは、すべてのasyncioアプリケーションの中核です。イベントループは、非同期タスクやコールバックを実行したり、ネットワーク IO 操作を実行したり、サブプロセスを実行したりします。</target>
        </trans-unit>
        <trans-unit id="20660ae21639a13bb9cdcdb9cc1ae330bad31fc2" translate="yes" xml:space="preserve">
          <source>The events have the following meaning:</source>
          <target state="translated">イベントには次のような意味があります。</target>
        </trans-unit>
        <trans-unit id="7d8e48b282637e6b7ae111368c295425b248fd49" translate="yes" xml:space="preserve">
          <source>The exact functionality is system dependent.</source>
          <target state="translated">正確な機能はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="325e0452fd2926eb393f8ebf3681a81d525396d6" translate="yes" xml:space="preserve">
          <source>The exact meaning and resolution of the &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt; attributes depend on the operating system and the file system. For example, on Windows systems using the FAT or FAT32 file systems, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt; has 2-second resolution, and &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt; has only 1-day resolution. See your operating system documentation for details.</source>
          <target state="translated">&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt; &lt;code&gt;st_ctime&lt;/code&gt; &lt;/a&gt;属性の正確な意味と解決策は、オペレーティングシステムとファイルシステムによって異なります。たとえば、FATまたはFAT32ファイルシステムを使用するWindowsシステムでは、&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; の&lt;/a&gt;解像度は2秒で、&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; の&lt;/a&gt;解像度は1日のみです。詳細については、オペレーティングシステムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="38f4793ab661ef074bccde7fedd44e2caaaf1c00" translate="yes" xml:space="preserve">
          <source>The exact output format is implementation dependent. In this version, it&amp;rsquo;s written as an ordinary XML file.</source>
          <target state="translated">正確な出力形式は実装に依存します。このバージョンでは、通常のXMLファイルとして記述されています。</target>
        </trans-unit>
        <trans-unit id="9df7a5622dfa1e314fc973d30f87d7dc1d47ea52" translate="yes" xml:space="preserve">
          <source>The exact token type names can be displayed using the &lt;a href=&quot;#cmdoption-tokenize-e&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">正確なトークンタイプ名は、&lt;a href=&quot;#cmdoption-tokenize-e&quot;&gt; &lt;code&gt;-e&lt;/code&gt; &lt;/a&gt;オプションを使用して表示できます。</target>
        </trans-unit>
        <trans-unit id="d4e55e4f1f047d534549d94721436aa9890d2906" translate="yes" xml:space="preserve">
          <source>The exactness carries over into arithmetic. In decimal floating point, &lt;code&gt;0.1
+ 0.1 + 0.1 - 0.3&lt;/code&gt; is exactly equal to zero. In binary floating point, the result is &lt;code&gt;5.5511151231257827e-017&lt;/code&gt;. While near to zero, the differences prevent reliable equality testing and differences can accumulate. For this reason, decimal is preferred in accounting applications which have strict equality invariants.</source>
          <target state="translated">正確さは算術に引き継がれます。10進浮動小数点では、 &lt;code&gt;0.1 + 0.1 + 0.1 - 0.3&lt;/code&gt; は正確にゼロと等しくなります。2進浮動小数点では、結果は &lt;code&gt;5.5511151231257827e-017&lt;/code&gt; です。ゼロに近い間、違いは信頼できる同等性テストを妨げ、違いが蓄積する可能性があります。このため、厳密な等価不変量を持つ会計アプリケーションでは、10進数が推奨されます。</target>
        </trans-unit>
        <trans-unit id="368a4f8d51918859c50dacebe141ec8fb33b0cfc" translate="yes" xml:space="preserve">
          <source>The example above shows part of the implementation of &lt;a href=&quot;collections#collections.Counter&quot;&gt;&lt;code&gt;collections.Counter&lt;/code&gt;&lt;/a&gt;. A different &lt;code&gt;__missing__&lt;/code&gt; method is used by &lt;a href=&quot;collections#collections.defaultdict&quot;&gt;&lt;code&gt;collections.defaultdict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上記の例は、&lt;a href=&quot;collections#collections.Counter&quot;&gt; &lt;code&gt;collections.Counter&lt;/code&gt; &lt;/a&gt;の実装の一部を示しています。別の &lt;code&gt;__missing__&lt;/code&gt; メソッドが&lt;a href=&quot;collections#collections.defaultdict&quot;&gt; &lt;code&gt;collections.defaultdict&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="6c4257b7bd5948bf81998e31354c476d75868ec9" translate="yes" xml:space="preserve">
          <source>The example above uses a very &amp;ldquo;nonrandom&amp;rdquo; stream of data (a stream of &lt;code&gt;b&amp;rdquo;z&amp;rdquo;&lt;/code&gt; chunks). Random data tends to compress poorly, while ordered, repetitive data usually yields a high compression ratio.</source>
          <target state="translated">上記の例では、非常に「ランダムでない」データストリーム（ &lt;code&gt;b&amp;rdquo;z&amp;rdquo;&lt;/code&gt; チャンクのストリーム）を使用しています。ランダムデータは圧縮率が低い傾向がありますが、順序付けられた繰り返しデータは通常、高い圧縮率をもたらします。</target>
        </trans-unit>
        <trans-unit id="1267a760796a415fef6f4e4d1d4ca429236931c8" translate="yes" xml:space="preserve">
          <source>The example also includes a basic record and playback facility implemented with the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; method which is responsible for converting the input to lowercase and writing the commands to a file. The &lt;code&gt;do_playback()&lt;/code&gt; method reads the file and adds the recorded commands to the &lt;code&gt;cmdqueue&lt;/code&gt; for immediate playback:</source>
          <target state="translated">この例には、入力を小文字に変換してコマンドをファイルに書き込む&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;メソッドで実装された基本的な記録および再生機能も含まれています。 &lt;code&gt;do_playback()&lt;/code&gt; メソッドは、ファイルを読み込み、に記録されたコマンドが追加されます &lt;code&gt;cmdqueue&lt;/code&gt; 即時再生のために：</target>
        </trans-unit>
        <trans-unit id="7b737e4581b9ae3288063ada39c5b91ad8523116" translate="yes" xml:space="preserve">
          <source>The example below defines a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass capturing time zone information for Kabul, Afghanistan, which used +4 UTC until 1945 and then +4:30 UTC thereafter:</source>
          <target state="translated">以下の例では、アフガニスタンのカブールのタイムゾーン情報をキャプチャする&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスを定義しています。これは、1945年まで+4 UTCを使用し、その後+4：30 UTCを使用していました。</target>
        </trans-unit>
        <trans-unit id="80f9b52354f157c05b33826ceabd33e38abbf32d" translate="yes" xml:space="preserve">
          <source>The example below would like to show how to register a pickle function and how it will be used:</source>
          <target state="translated">以下の例では、ピクルス関数の登録方法とその使用方法を紹介したいと思います。</target>
        </trans-unit>
        <trans-unit id="f23e546d4eedcd0835e69c312998d72018282090" translate="yes" xml:space="preserve">
          <source>The example&amp;rsquo;s actual output.</source>
          <target state="translated">例の実際の出力。</target>
        </trans-unit>
        <trans-unit id="0e8a68c5bb27e57e61ade020d47d64138b073ee1" translate="yes" xml:space="preserve">
          <source>The example&amp;rsquo;s indentation in the containing string, i.e., the number of space characters that precede the example&amp;rsquo;s first prompt.</source>
          <target state="translated">文字列内の例のインデント、つまり、例の最初のプロンプトの前にあるスペース文字の数。</target>
        </trans-unit>
        <trans-unit id="9bf28d77364e14c64c07990a46b33865cddc4a3c" translate="yes" xml:space="preserve">
          <source>The examples above use integers for enumeration values. Using integers is short and handy (and provided by default by the &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;), but not strictly enforced. In the vast majority of use-cases, one doesn&amp;rsquo;t care what the actual value of an enumeration is. But if the value &lt;em&gt;is&lt;/em&gt; important, enumerations can have arbitrary values.</source>
          <target state="translated">上記の例では、列挙値に整数を使用しています。整数の使用は短くて便利です（そして、&lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;によってデフォルトで提供されます）が、厳密に強制されていません。ほとんどのユースケースでは、列挙の実際の値が何であるかは気にしません。ただし、値&lt;em&gt;が&lt;/em&gt;重要な場合、列挙には任意の値を指定できます。</target>
        </trans-unit>
        <trans-unit id="7fc5a1f6e5e16fd1c43d25e60bde4d2913909e68" translate="yes" xml:space="preserve">
          <source>The examples are run in the namespace &lt;code&gt;test.globs&lt;/code&gt;. If &lt;em&gt;clear_globs&lt;/em&gt; is true (the default), then this namespace will be cleared after the test runs, to help with garbage collection. If you would like to examine the namespace after the test completes, then use &lt;em&gt;clear_globs=False&lt;/em&gt;.</source>
          <target state="translated">これらの例は、名前空間 &lt;code&gt;test.globs&lt;/code&gt; で実行されます。場合&lt;em&gt;clear_globsが&lt;/em&gt; true（デフォルト）の場合、この名前空間は、ガベージコレクションのヘルプに、テストの実行後にクリアされます。テストの完了後に名前空間を確認する場合は、&lt;em&gt;clear_globs = Falseを&lt;/em&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="823e2bd7f9e34fbe4a8d02393f5bc3f7b60e03c1" translate="yes" xml:space="preserve">
          <source>The exception (or &lt;code&gt;None&lt;/code&gt; if no exception was set) is returned only if the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">例外（または、例外が設定されていない場合は &lt;code&gt;None&lt;/code&gt; ）は、Futureが&lt;em&gt;完了した&lt;/em&gt;場合にのみ返さ&lt;em&gt;れ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f398fd082f435634395bcad6277043303156476f" translate="yes" xml:space="preserve">
          <source>The exception codes defined in the DOM recommendation map to the exceptions described above according to this table:</source>
          <target state="translated">DOM 勧告で定義された例外コードは、この表に従って上述の例外に対応する。</target>
        </trans-unit>
        <trans-unit id="761f0c94b4f4af1545fc471496949910ccb868b5" translate="yes" xml:space="preserve">
          <source>The exception message generated by the example, if the example is expected to generate an exception; or &lt;code&gt;None&lt;/code&gt; if it is not expected to generate an exception. This exception message is compared against the return value of &lt;a href=&quot;traceback#traceback.format_exception_only&quot;&gt;&lt;code&gt;traceback.format_exception_only()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#doctest.Example.exc_msg&quot;&gt;&lt;code&gt;exc_msg&lt;/code&gt;&lt;/a&gt; ends with a newline unless it&amp;rsquo;s &lt;code&gt;None&lt;/code&gt;. The constructor adds a newline if needed.</source>
          <target state="translated">例が例外を生成すると予想される場合、例によって生成された例外メッセージ。または &lt;code&gt;None&lt;/code&gt; 例外を発生することが予想されていない場合。この例外メッセージは、&lt;a href=&quot;traceback#traceback.format_exception_only&quot;&gt; &lt;code&gt;traceback.format_exception_only()&lt;/code&gt; の&lt;/a&gt;戻り値と比較されます。&lt;a href=&quot;#doctest.Example.exc_msg&quot;&gt; &lt;code&gt;exc_msg&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;None&lt;/code&gt; でない限り、改行で終了します。コンストラクタは必要に応じて改行を追加します。</target>
        </trans-unit>
        <trans-unit id="16fb466df1ef569cc795696df9b928061a52e60d" translate="yes" xml:space="preserve">
          <source>The exception object has a single attribute &lt;code&gt;value&lt;/code&gt;, which is given as an argument when constructing the exception, and defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例外オブジェクトには、例外を作成するときに引数として指定される単一の属性 &lt;code&gt;value&lt;/code&gt; があり、デフォルトは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="967015b7587a452e7a6969f9fcdf9472b004aa13" translate="yes" xml:space="preserve">
          <source>The exception passed in should never be reraised explicitly - instead, this method should return a false value to indicate that the method completed successfully and does not want to suppress the raised exception. This allows context management code to easily detect whether or not an &lt;a href=&quot;#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method has actually failed.</source>
          <target state="translated">渡された例外は明示的に再発生しないでください。代わりに、このメソッドはfalse値を返して、メソッドが正常に完了し、発生した例外を抑制しないことを示す必要があります。これにより、コンテキスト管理コードは&lt;a href=&quot;#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドが実際に失敗したかどうかを簡単に検出できます。</target>
        </trans-unit>
        <trans-unit id="cb4e339c8d30fe262a428d0d8ad73a99d4beb69c" translate="yes" xml:space="preserve">
          <source>The exception raised when Expat reports an error. See section &lt;a href=&quot;#expaterror-objects&quot;&gt;ExpatError Exceptions&lt;/a&gt; for more information on interpreting Expat errors.</source>
          <target state="translated">Expatがエラーを報告するときに発生する例外。Expatエラーの解釈の詳細については、「&lt;a href=&quot;#expaterror-objects&quot;&gt;ExpatError例外&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="5eb7279a402a5d146f2e0d67cb68745febd71c19" translate="yes" xml:space="preserve">
          <source>The exception raised will likely be an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; but it could be something else.</source>
          <target state="translated">発生する例外は、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; です&lt;/a&gt;が、それ以外の場合もあります。</target>
        </trans-unit>
        <trans-unit id="9439b68fdd4692f623f1d833b070e00895671a64" translate="yes" xml:space="preserve">
          <source>The exception to this is if the mock has a name. This allows you to prevent the &amp;ldquo;parenting&amp;rdquo; if for some reason you don&amp;rsquo;t want it to happen.</source>
          <target state="translated">これの例外は、モックに名前がある場合です。これにより、なんらかの理由で発生させたくない場合に、「子育て」を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="44273158bebd408d0ca1686e330e8221aed6bf91" translate="yes" xml:space="preserve">
          <source>The execution time of &lt;em&gt;setup&lt;/em&gt; is excluded from the overall timed execution run.</source>
          <target state="translated">&lt;em&gt;セットアップ&lt;/em&gt;の実行時間は、全体的な時限実行の実行から除外されます。</target>
        </trans-unit>
        <trans-unit id="8d5a336dad5945abfb44492ff957a88e5c60afa7" translate="yes" xml:space="preserve">
          <source>The execution time of the I/O selector is logged if it takes too long to perform an I/O operation.</source>
          <target state="translated">I/Oセレクタの実行時間は、I/O操作の実行に時間がかかりすぎるとログに記録されます。</target>
        </trans-unit>
        <trans-unit id="056d4e2c3774cbd88921f11b4e8d264ee0e9d283" translate="yes" xml:space="preserve">
          <source>The exit status or error message that is passed to the constructor. (Defaults to &lt;code&gt;None&lt;/code&gt;.)</source>
          <target state="translated">コンストラクターに渡される終了ステータスまたはエラーメッセージ。（デフォルトは &lt;code&gt;None&lt;/code&gt; です。）</target>
        </trans-unit>
        <trans-unit id="dc5be0b65bb8c374ab86c659a4b84daa7fc4f814" translate="yes" xml:space="preserve">
          <source>The expected output for an exception must start with a traceback header, which may be either of the following two lines, indented the same as the first line of the example:</source>
          <target state="translated">例外に対する期待される出力は、トレースバックヘッダで開始しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c46a79830e587beeb1c2d33f69db71dc6d8a9e7f" translate="yes" xml:space="preserve">
          <source>The expected output from running the example&amp;rsquo;s source code (either from stdout, or a traceback in case of exception). &lt;a href=&quot;#doctest.Example.want&quot;&gt;&lt;code&gt;want&lt;/code&gt;&lt;/a&gt; ends with a newline unless no output is expected, in which case it&amp;rsquo;s an empty string. The constructor adds a newline when necessary.</source>
          <target state="translated">例のソースコードの実行からの予想される出力（stdout、または例外の場合はトレースバック）。出力が予期されない場合を除いて、&lt;a href=&quot;#doctest.Example.want&quot;&gt; &lt;code&gt;want&lt;/code&gt; &lt;/a&gt;は改行で終了します。この場合、空の文字列です。コンストラクタは必要に応じて改行を追加します。</target>
        </trans-unit>
        <trans-unit id="1dab8d87c095f36844379c2f05305caab6d7338e" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;t2 - t3&lt;/code&gt; will always be equal to the expression &lt;code&gt;t2 + (-t3)&lt;/code&gt; except when t3 is equal to &lt;code&gt;timedelta.max&lt;/code&gt;; in that case the former will produce a result while the latter will overflow.</source>
          <target state="translated">式 &lt;code&gt;t2 - t3&lt;/code&gt; は、t3が &lt;code&gt;timedelta.max&lt;/code&gt; に等しい場合を除いて、常に式 &lt;code&gt;t2 + (-t3)&lt;/code&gt; -t3 ）に等しくなります。その場合、前者は結果を生成し、後者はオーバーフローします。</target>
        </trans-unit>
        <trans-unit id="8705600e71bb79cd85436c8e2641d3a03b2276dd" translate="yes" xml:space="preserve">
          <source>The expression following &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; must be an exception or &lt;code&gt;None&lt;/code&gt;. It will be set as &lt;code&gt;__cause__&lt;/code&gt; on the raised exception. Setting &lt;code&gt;__cause__&lt;/code&gt; also implicitly sets the &lt;code&gt;__suppress_context__&lt;/code&gt; attribute to &lt;code&gt;True&lt;/code&gt;, so that using &lt;code&gt;raise new_exc from None&lt;/code&gt; effectively replaces the old exception with the new one for display purposes (e.g. converting &lt;a href=&quot;#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;), while leaving the old exception available in &lt;code&gt;__context__&lt;/code&gt; for introspection when debugging.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt; &lt;code&gt;from&lt;/code&gt; に&lt;/a&gt;続く式は、例外または &lt;code&gt;None&lt;/code&gt; でなければなりません。発生した例外で &lt;code&gt;__cause__&lt;/code&gt; として設定されます。設定 &lt;code&gt;__cause__&lt;/code&gt; をもすることは、暗黙的に設定します &lt;code&gt;__suppress_context__&lt;/code&gt; に属性 &lt;code&gt;True&lt;/code&gt; 使用してそのことを、 &lt;code&gt;raise new_exc from None&lt;/code&gt; 効果的に（例えば変換表示目的のために新しいものと古い例外を置き換える&lt;a href=&quot;#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外を&lt;/a&gt;に&lt;a href=&quot;#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;に利用できる古い例外を残したまま、） &lt;code&gt;__context__&lt;/code&gt; デバッグ時イントロスペクションのために。</target>
        </trans-unit>
        <trans-unit id="77e08f5c9069670de504969f5f7ccf6331f6b9ce" translate="yes" xml:space="preserve">
          <source>The expression is in the syntax suitable for the &lt;code&gt;regex()&lt;/code&gt; function from the C library, which might differ from the syntax used in &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">式は、Cライブラリの &lt;code&gt;regex()&lt;/code&gt; 関数に適した構文であり、&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; で&lt;/a&gt;使用されている構文とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="c63cc66a535039b3f2bae8483c016e26a4fade05" translate="yes" xml:space="preserve">
          <source>The expression&amp;rsquo;s behaviour can be modified by specifying a &lt;em&gt;flags&lt;/em&gt; value. Values can be any of the following variables, combined using bitwise OR (the &lt;code&gt;|&lt;/code&gt; operator).</source>
          <target state="translated">式の動作は、&lt;em&gt;フラグ&lt;/em&gt;値を指定することで変更できます。値は、ビットごとのOR（ &lt;code&gt;|&lt;/code&gt; 演算子）を使用して結合された次の変数のいずれかです。</target>
        </trans-unit>
        <trans-unit id="93fe9e394c294b7387fcfa2d42a16831c1ddb5a7" translate="yes" xml:space="preserve">
          <source>The extended tools offer the same high performance as the underlying toolset. The superior memory performance is kept by processing elements one at a time rather than bringing the whole iterable into memory all at once. Code volume is kept small by linking the tools together in a functional style which helps eliminate temporary variables. High speed is retained by preferring &amp;ldquo;vectorized&amp;rdquo; building blocks over the use of for-loops and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s which incur interpreter overhead.</source>
          <target state="translated">拡張ツールは、基礎となるツールセットと同じ高いパフォーマンスを提供します。優れたメモリパフォーマンスは、反復可能オブジェクト全体を一度にメモリに取り込むのではなく、要素を1つずつ処理することによって維持されます。一時的な変数を排除するのに役立つ関数スタイルでツールをリンクすることにより、コード量は小さく保たれます。インタープリターのオーバーヘッドが発生するforループや&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;の使用よりも「ベクトル化された」ビルディングブロックを優先することで、高速性が維持されます。</target>
        </trans-unit>
        <trans-unit id="f2e36429012b6a62032d18db64413f54c62b905a" translate="yes" xml:space="preserve">
          <source>The extraction in zipfile module might fail due to some pitfalls listed below.</source>
          <target state="translated">zipfileモジュールでの抽出は、以下のような落とし穴があるために失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="4fedb89b337393b16b1bba324c08f1822e44a807" translate="yes" xml:space="preserve">
          <source>The fact that &lt;code&gt;Type[C]&lt;/code&gt; is covariant implies that all subclasses of &lt;code&gt;C&lt;/code&gt; should implement the same constructor signature and class method signatures as &lt;code&gt;C&lt;/code&gt;. The type checker should flag violations of this, but should also allow constructor calls in subclasses that match the constructor calls in the indicated base class. How the type checker is required to handle this particular case may change in future revisions of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">事実 &lt;code&gt;Type[C]&lt;/code&gt; 共変では、すべてのサブクラスであることを意味 &lt;code&gt;C&lt;/code&gt; が同じコンストラクタ署名及びクラスメソッドシグネチャを実装する必要が &lt;code&gt;C&lt;/code&gt; 。型チェッカーは、これの違反にフラグを立てる必要がありますが、示された基本クラスのコンストラクター呼び出しと一致するサブクラスのコンストラクター呼び出しも許可する必要があります。この特定のケースを処理するためにタイプチェッカーが必要とされる方法は、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 484の&lt;/strong&gt;&lt;/a&gt;将来のリビジョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="28ec65a4d201d4d2ca5fe997a58b19245ad33e30" translate="yes" xml:space="preserve">
          <source>The fact that standard Python has a frozen module and a frozen package (indicated by the negative &lt;code&gt;size&lt;/code&gt; member) is not well known, it is only used for testing. Try it out with &lt;code&gt;import __hello__&lt;/code&gt; for example.</source>
          <target state="translated">標準のPythonに凍結モジュールと凍結パッケージ（負の &lt;code&gt;size&lt;/code&gt; メンバーで示される）があるという事実はよく知られていませんが、テストにのみ使用されます。たとえば、 &lt;code&gt;import __hello__&lt;/code&gt; で試してください。</target>
        </trans-unit>
        <trans-unit id="9dac46a441d5e72f6712035d99797ee965eb1bab" translate="yes" xml:space="preserve">
          <source>The factory has the following signature:</source>
          <target state="translated">工場には以下のようなサインがあります。</target>
        </trans-unit>
        <trans-unit id="8d779be886850f3923e598392c5fdf6aff33f4b0" translate="yes" xml:space="preserve">
          <source>The factory method of &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; is here overridden to create a UDP socket (&lt;a href=&quot;socket#socket.SOCK_DGRAM&quot;&gt;&lt;code&gt;socket.SOCK_DGRAM&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ここでは、&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; &lt;/a&gt;のファクトリメソッドをオーバーライドして、UDPソケット（&lt;a href=&quot;socket#socket.SOCK_DGRAM&quot;&gt; &lt;code&gt;socket.SOCK_DGRAM&lt;/code&gt; &lt;/a&gt;）を作成します。</target>
        </trans-unit>
        <trans-unit id="77d68cc31e2812d769a8a7e134820d797b4ff412" translate="yes" xml:space="preserve">
          <source>The false value of the &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt; type. Assignments to &lt;code&gt;False&lt;/code&gt; are illegal and raise a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;型のfalse値。 &lt;code&gt;False&lt;/code&gt; への代入は違法であり、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c398d0a8157f47bce0b9136a5d6e426f6c205b0e" translate="yes" xml:space="preserve">
          <source>The family of protocols to which the server&amp;rsquo;s socket belongs. Common examples are &lt;a href=&quot;socket#socket.AF_INET&quot;&gt;&lt;code&gt;socket.AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt;&lt;code&gt;socket.AF_UNIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サーバーのソケットが属するプロトコルのファミリー。一般的な例は、&lt;a href=&quot;socket#socket.AF_INET&quot;&gt; &lt;code&gt;socket.AF_INET&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt; &lt;code&gt;socket.AF_UNIX&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="7188cd9594911bcd5eab7fcf3154e9fac54fc86a" translate="yes" xml:space="preserve">
          <source>The fault handler is called on catastrophic cases and therefore can only use signal-safe functions (e.g. it cannot allocate memory on the heap). Because of this limitation traceback dumping is minimal compared to normal Python tracebacks:</source>
          <target state="translated">fault ハンドラは壊滅的なケースで呼び出されるため、シグナルセーフ関数のみを使用することができます (例:ヒープ上にメモリを確保することはできません)。この制限のため、通常の Python トレースバックと比較してトレースバックダンプは最小限に抑えられています。</target>
        </trans-unit>
        <trans-unit id="aee0bd171455a1448e4fe84e8a54699f4edda95b" translate="yes" xml:space="preserve">
          <source>The fault handler is compatible with system fault handlers like Apport or the Windows fault handler. The module uses an alternative stack for signal handlers if the &lt;code&gt;sigaltstack()&lt;/code&gt; function is available. This allows it to dump the traceback even on a stack overflow.</source>
          <target state="translated">障害ハンドラーは、ApportやWindows障害ハンドラーなどのシステム障害ハンドラーと互換性があります。 &lt;code&gt;sigaltstack()&lt;/code&gt; 関数が使用可能な場合、モジュールはシグナルハンドラーに代替スタックを使用します。これにより、スタックオーバーフローでもトレースバックをダンプできます。</target>
        </trans-unit>
        <trans-unit id="b6b64a8d474bdfb3f601c33aa7ab1c0f65b1af78" translate="yes" xml:space="preserve">
          <source>The field type must be a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type like &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt;, or any other derived &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type: structure, union, array, pointer.</source>
          <target state="translated">フィールドタイプは、&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; の&lt;/a&gt;ような&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;タイプ、またはその他の派生&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;タイプ（構造体、共用体、配列、ポインター）でなければなりません。</target>
        </trans-unit>
        <trans-unit id="53b6c519d9cc69ec98567c08f6e4fa682bc959ee" translate="yes" xml:space="preserve">
          <source>The fields &lt;code&gt;ru_utime&lt;/code&gt; and &lt;code&gt;ru_stime&lt;/code&gt; of the return value are floating point values representing the amount of time spent executing in user mode and the amount of time spent executing in system mode, respectively. The remaining values are integers. Consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrusage(2)&quot;&gt;getrusage(2)&lt;/a&gt;&lt;/em&gt; man page for detailed information about these values. A brief summary is presented here:</source>
          <target state="translated">戻り値のフィールド &lt;code&gt;ru_utime&lt;/code&gt; と &lt;code&gt;ru_stime&lt;/code&gt; は、それぞれユーザーモードでの実行に費やされた時間とシステムモードでの実行に費やされた時間を表す浮動小数点値です。残りの値は整数です。これらの値の詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrusage(2)&quot;&gt;getrusage（2）の&lt;/a&gt;&lt;/em&gt;マニュアルページを参照してください。ここに簡単な要約を示します。</target>
        </trans-unit>
        <trans-unit id="7c0e7a9b930aacec36d9f5dfb5ae8968c5cdb619" translate="yes" xml:space="preserve">
          <source>The fields listed in this variable must be structure or union type fields. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; will create descriptors in the structure type that allows accessing the nested fields directly, without the need to create the structure or union field.</source>
          <target state="translated">この変数にリストされるフィールドは、構造体または共用体タイプのフィールドでなければなりません。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;は、構造体または共用体フィールドを作成する必要なく、ネストされたフィールドに直接アクセスできるようにする構造体型で記述子を作成します。</target>
        </trans-unit>
        <trans-unit id="49d3ffb20600ae906d592727228c4b314bf7b93a" translate="yes" xml:space="preserve">
          <source>The fields of the return value each describe how a particular system resource has been used, e.g. amount of time spent running is user mode or number of times the process was swapped out of main memory. Some values are dependent on the clock tick internal, e.g. the amount of memory the process is using.</source>
          <target state="translated">戻り値のフィールドはそれぞれ、特定のシステムリソースがどのように使用されたかを記述します。例えば、ユーザーモードでの実行時間やプロセスがメインメモリからスワップアウトされた回数などです。いくつかの値は、プロセスが使用しているメモリの量など、内部のクロックティックに依存します。</target>
        </trans-unit>
        <trans-unit id="d4a8d9c00fb9d3badfff43f650201a575fe2a0f4" translate="yes" xml:space="preserve">
          <source>The file extension of the final component, if any:</source>
          <target state="translated">最終コンポーネントのファイル拡張子。</target>
        </trans-unit>
        <trans-unit id="d0114120d1c89a385da27d07f78b44e470d40fc6" translate="yes" xml:space="preserve">
          <source>The file is a snapshot file.</source>
          <target state="translated">スナップショットファイルになっています。</target>
        </trans-unit>
        <trans-unit id="a6176b9e04bfbfddfce8592a319fadaf7ad306a6" translate="yes" xml:space="preserve">
          <source>The file is now non-inheritable.</source>
          <target state="translated">これで、ファイルは本能的ではないものになりました。</target>
        </trans-unit>
        <trans-unit id="2776c6bc9673d40e5b7bff3091258d276b726028" translate="yes" xml:space="preserve">
          <source>The file is opened and then closed. The optional parameters have the same meaning as in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルを開いてから閉じます。オプションのパラメーターは、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="cfcbd03a414732fbc2abf88348cc273cba1d3bb2" translate="yes" xml:space="preserve">
          <source>The file is overwritten if it already exists, thus wiping all the cookies it contains. Saved cookies can be restored later using the &lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt;&lt;code&gt;revert()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">ファイルがすでに存在する場合、ファイルは上書きされるため、そのファイルに含まれるすべてのCookieが消去されます。保存されたCookieは、後で&lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt; &lt;code&gt;revert()&lt;/code&gt; &lt;/a&gt;メソッドを使用して復元できます。</target>
        </trans-unit>
        <trans-unit id="ca8bc2b3859735a59f7c5727ee833f2c2996847f" translate="yes" xml:space="preserve">
          <source>The file is read and scanned in chunks of &lt;em&gt;chunksize&lt;/em&gt; bytes.</source>
          <target state="translated">ファイルは、&lt;em&gt;chunksize&lt;/em&gt;バイトのチャンクで読み取られ、スキャンされます。</target>
        </trans-unit>
        <trans-unit id="584531cc428f460d16ee3b493d1ccde738f49bc0" translate="yes" xml:space="preserve">
          <source>The file is stored compressed (Mac OS X 10.6+).</source>
          <target state="translated">ファイルが圧縮されて保存されます(Mac OS X 10.6+)。</target>
        </trans-unit>
        <trans-unit id="2a6be25ba740062f6f2dbf5af7928dcd58c0349b" translate="yes" xml:space="preserve">
          <source>The file may be archived.</source>
          <target state="translated">アーカイブされている可能性があります。</target>
        </trans-unit>
        <trans-unit id="7e106002d1dd5d4cf8bd7c146bae64e3ff7f7f8d" translate="yes" xml:space="preserve">
          <source>The file may not be changed.</source>
          <target state="translated">ファイルを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="70ef31fa917154dc071d61c035311872073ab6ed" translate="yes" xml:space="preserve">
          <source>The file may not be renamed or deleted.</source>
          <target state="translated">ファイル名の変更や削除はできません。</target>
        </trans-unit>
        <trans-unit id="1c7fbbc2ba48b35481b7eda3d7ce8a87c73ded62" translate="yes" xml:space="preserve">
          <source>The file may only be appended to.</source>
          <target state="translated">にのみ追加することができます。</target>
        </trans-unit>
        <trans-unit id="2a32edd222a3bd6c55ca9732d33c575dc042d587" translate="yes" xml:space="preserve">
          <source>The file name of the importer&amp;rsquo;s associated ZIP file, without a possible subpath.</source>
          <target state="translated">可能なサブパスを除いた、インポーターに関連付けられたZIPファイルのファイル名。</target>
        </trans-unit>
        <trans-unit id="22d881f57735735b7beb6cd26cea8ae5f33f6cf5" translate="yes" xml:space="preserve">
          <source>The file name. This is the file descriptor of the file when no name is given in the constructor.</source>
          <target state="translated">ファイル名。コンストラクタで名前が与えられていない場合のファイルの記述子です。</target>
        </trans-unit>
        <trans-unit id="80e34d3d98320355b57f01ca1f7d293ca570add4" translate="yes" xml:space="preserve">
          <source>The file path of the null device. For example: &lt;code&gt;'/dev/null'&lt;/code&gt; for POSIX, &lt;code&gt;'nul'&lt;/code&gt; for Windows. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">nullデバイスのファイルパス。たとえば、POSIXの場合は &lt;code&gt;'/dev/null'&lt;/code&gt; &lt;code&gt;'nul'&lt;/code&gt; 、Windowsの場合は「nul」です。&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;からも利用できます。</target>
        </trans-unit>
        <trans-unit id="9db19e8d7b718718ef1be032413eab83e5e95bd6" translate="yes" xml:space="preserve">
          <source>The file selected by the above constructor must have been created by the corresponding version of &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;. To be specific, there is &lt;em&gt;no&lt;/em&gt; file compatibility guaranteed with future versions of this profiler, and there is no compatibility with files produced by other profilers, or the same profiler run on a different operating system. If several files are provided, all the statistics for identical functions will be coalesced, so that an overall view of several processes can be considered in a single report. If additional files need to be combined with data in an existing &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#pstats.Stats.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">上記のコンストラクターによって選択されたファイルは、対応するバージョンの&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;によって作成されている必要があります。具体的には、ありません&lt;em&gt;何&lt;/em&gt;このプロファイラの将来のバージョンで保証されたファイルの互換性、および他のプロファイラ、または別のオペレーティングシステム上で実行同じプロファイラによって生成されたファイルとの互換性はありません。複数のファイルが提供されている場合、同一機能のすべての統計が合体されるため、複数のプロセスの全体的なビューを1つのレポートで検討できます。追加のファイルを既存の&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;オブジェクトのデータと組み合わせる必要がある場合は、&lt;a href=&quot;#pstats.Stats.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="713611df88c51a63c43837f66ca9e56dec2977b1" translate="yes" xml:space="preserve">
          <source>The file should not be displayed in a GUI (Mac OS X 10.5+).</source>
          <target state="translated">GUI(Mac OS X 10.5+)では表示されないようにしてください。</target>
        </trans-unit>
        <trans-unit id="72a6a7edb309ffffc9ff50c4223a156901528c2e" translate="yes" xml:space="preserve">
          <source>The file system encoding must guarantee to successfully decode all bytes below 128. If the file system encoding fails to provide this guarantee, API functions may raise UnicodeErrors.</source>
          <target state="translated">ファイルシステムのエンコーディングは、128 以下のすべてのバイトのデコードに成功することを保証しなければなりません。ファイルシステムのエンコーディングがこの保証を提供できない場合、API 関数は UnicodeErrors を発生させることがあります。</target>
        </trans-unit>
        <trans-unit id="94792315cec8c9be1d87163086775ef5d07712b0" translate="yes" xml:space="preserve">
          <source>The file upload draft standard entertains the possibility of uploading multiple files from one field (using a recursive &lt;em&gt;multipart/*&lt;/em&gt; encoding). When this occurs, the item will be a dictionary-like &lt;code&gt;FieldStorage&lt;/code&gt; item. This can be determined by testing its &lt;code&gt;type&lt;/code&gt; attribute, which should be &lt;em&gt;multipart/form-data&lt;/em&gt; (or perhaps another MIME type matching &lt;em&gt;multipart/*&lt;/em&gt;). In this case, it can be iterated over recursively just like the top-level form object.</source>
          <target state="translated">ファイルアップロードドラフト標準では、1つのフィールドから複数のファイルをアップロードする可能性があります（再帰的な&lt;em&gt;multipart / *&lt;/em&gt;エンコーディングを使用）。これが発生すると、アイテムは辞書のような &lt;code&gt;FieldStorage&lt;/code&gt; アイテムになります。これは、&lt;em&gt;multipart / form-data&lt;/em&gt;（または&lt;em&gt;multipart / *に&lt;/em&gt;一致する別のMIMEタイプ）である必要がある &lt;code&gt;type&lt;/code&gt; 属性をテストすることで決定できます。この場合、トップレベルのフォームオブジェクトと同じように再帰的に反復できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01c3cef533c6e179cf68ea7712d222e220b7be4d" translate="yes" xml:space="preserve">
          <source>The files &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; can also be invoked as a script to profile another script. For example:</source>
          <target state="translated">ファイル&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt;は、別のスクリプトをプロファイルするスクリプトとして呼び出すこともできます。例えば：</target>
        </trans-unit>
        <trans-unit id="a703e11dae059161ce34a8e26e190e5aa60fdce6" translate="yes" xml:space="preserve">
          <source>The files are added to the CAB file in the order they appear in the list. All files are added into a single CAB file, using the MSZIP compression algorithm.</source>
          <target state="translated">ファイルはリストに表示された順にCABファイルに追加されます。すべてのファイルは、MSZIP圧縮アルゴリズムを使用して、1つのCABファイルに追加されます。</target>
        </trans-unit>
        <trans-unit id="628200e3be239ea4113714e001538bfc9cba8656" translate="yes" xml:space="preserve">
          <source>The final block shows a simple way to run the tests. &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; provides a command-line interface to the test script. When run from the command line, the above script produces an output that looks like this:</source>
          <target state="translated">最後のブロックは、テストを実行する簡単な方法を示しています。&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;は、テストスクリプトへのコマンドラインインターフェイスを提供します。コマンドラインから実行すると、上記のスクリプトは次のような出力を生成します。</target>
        </trans-unit>
        <trans-unit id="cde464fe0dc63abb87ca4aee7a531390b4905635" translate="yes" xml:space="preserve">
          <source>The final list of fields is, in order, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt;. The final type of &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;, as specified in class &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">フィールドの最終的なリストは、順番に &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、 &lt;code&gt;z&lt;/code&gt; です。クラス &lt;code&gt;C&lt;/code&gt; で指定されているように、 &lt;code&gt;x&lt;/code&gt; の最後の型は &lt;code&gt;int&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d814d211e8c60b1de47f81cd19922cc90ce77a99" translate="yes" xml:space="preserve">
          <source>The final path component, without its suffix:</source>
          <target state="translated">最後のパスコンポーネントで、接尾辞は含まれていません。</target>
        </trans-unit>
        <trans-unit id="19a9fd943d48e088d27c035c23e17046cb6ea3d1" translate="yes" xml:space="preserve">
          <source>The final path component.</source>
          <target state="translated">最終的なパスコンポーネント。</target>
        </trans-unit>
        <trans-unit id="cc0b59ae33b229e5d52ff81dd24e96cfff04266c" translate="yes" xml:space="preserve">
          <source>The final prediction goes to the largest posterior. This is known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_a_posteriori_estimation&quot;&gt;maximum a posteriori&lt;/a&gt; or MAP:</source>
          <target state="translated">最終的な予測は最大の事後です。これは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_a_posteriori_estimation&quot;&gt;最大事後&lt;/a&gt;またはMAP として知られています。</target>
        </trans-unit>
        <trans-unit id="80e06e46879bab91c1fc77685094ac909d2a64d5" translate="yes" xml:space="preserve">
          <source>The finalizer can be called directly as well. However the finalizer will invoke the callback at most once.</source>
          <target state="translated">ファイナライザは直接呼び出すこともできます。ただし、ファイナライザは最大一度だけコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="324b78c6634c0758c37a7197ebd0b45ebca8cff7" translate="yes" xml:space="preserve">
          <source>The finder will cache the directory contents as necessary, making stat calls for each module search to verify the cache is not outdated. Because cache staleness relies upon the granularity of the operating system&amp;rsquo;s state information of the file system, there is a potential race condition of searching for a module, creating a new file, and then searching for the module the new file represents. If the operations happen fast enough to fit within the granularity of stat calls, then the module search will fail. To prevent this from happening, when you create a module dynamically, make sure to call &lt;a href=&quot;#importlib.invalidate_caches&quot;&gt;&lt;code&gt;importlib.invalidate_caches()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファインダーは必要に応じてディレクトリの内容をキャッシュし、各モジュールの検索に対してstat呼び出しを行って、キャッシュが古くないことを確認します。キャッシュの古さはオペレーティングシステムのファイルシステムの状態情報の粒度に依存しているため、モジュールの検索、新しいファイルの作成、新しいファイルが表すモジュールの検索という競合状態が発生する可能性があります。 stat呼び出しの細分性に収まるのに十分な速さで操作が行われる場合、モジュール検索は失敗します。これを防ぐには、モジュールを動的に作成するときに、必ず&lt;a href=&quot;#importlib.invalidate_caches&quot;&gt; &lt;code&gt;importlib.invalidate_caches()&lt;/code&gt; &lt;/a&gt;を呼び出してください。</target>
        </trans-unit>
        <trans-unit id="02b87a907d4c2d81f667613e2387e3b1c465d816" translate="yes" xml:space="preserve">
          <source>The fine print:</source>
          <target state="translated">細かい印刷だ</target>
        </trans-unit>
        <trans-unit id="aa3c351870f273c37e4f66d5a29426ed1177d605" translate="yes" xml:space="preserve">
          <source>The firing of low-level events at certain times or in certain connection states tells the asynchronous loop that certain higher-level events have taken place. For example, if we have asked for a socket to connect to another host, we know that the connection has been made when the socket becomes writable for the first time (at this point you know that you may write to it with the expectation of success). The implied higher-level events are:</source>
          <target state="translated">特定のタイミングや接続状態で低レベルのイベントが発生すると、非同期ループに高レベルのイベントが発生したことを知らせます。例えば、ソケットに他のホストへの接続を要求した場合、ソケットが初めて書き込み可能になった時に接続が完了したことを知ることができます(この時点では、ソケットへの書き込みが成功したことを知ることができます)。想定される上位レベルのイベントは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="feeadec3b2801616fe6a8b3a64c74c94879374e9" translate="yes" xml:space="preserve">
          <source>The first argument is a list of regular expressions, either compiled (&lt;a href=&quot;re#re-objects&quot;&gt;regex objects&lt;/a&gt;) or uncompiled (byte strings). The optional second argument is a timeout, in seconds; the default is to block indefinitely.</source>
          <target state="translated">最初の引数は、コンパイル済み（&lt;a href=&quot;re#re-objects&quot;&gt;regexオブジェクト&lt;/a&gt;）または未コンパイル（バイト文字列）の正規表現のリストです。オプションの2番目の引数は、秒単位のタイムアウトです。デフォルトでは無期限にブロックされます。</target>
        </trans-unit>
        <trans-unit id="1c6b514b7c6b751da2eb0e1ffc8d72e9f29203f5" translate="yes" xml:space="preserve">
          <source>The first argument provides the initial value for the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; attribute; it defaults to &lt;code&gt;None&lt;/code&gt;. All remaining arguments are treated the same as if they were passed to the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; constructor, including keyword arguments.</source>
          <target state="translated">最初の引数は、&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;属性の初期値を提供します。デフォルトは &lt;code&gt;None&lt;/code&gt; です。残りのすべての引数は、キーワード引数を含め、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;コンストラクターに渡された場合と同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="205e58d9499aafe9cdb607f8d35493057d84cfb1" translate="yes" xml:space="preserve">
          <source>The first argument to the callback signifies what kind of operation is to be authorized. The second and third argument will be arguments or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; depending on the first argument. The 4th argument is the name of the database (&amp;ldquo;main&amp;rdquo;, &amp;ldquo;temp&amp;rdquo;, etc.) if applicable. The 5th argument is the name of the inner-most trigger or view that is responsible for the access attempt or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if this access attempt is directly from input SQL code.</source>
          <target state="translated">コールバックへの最初の引数は、どの種類の操作が許可されるかを示します。2番目と3番目の引数は、最初の引数に応じて引数または&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;になります。4番目の引数は、該当する場合、データベースの名前（「main」、「temp」など）です。5番目の引数は、アクセス試行を担当する最も内側のトリガーまたはビューの名前です。このアクセス試行が入力SQLコードから直接行われた場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="71a29578a01ad10028e29ebf89ef4d001c2a9cfe" translate="yes" xml:space="preserve">
          <source>The first call will actually sort the list by function name, and the second call will print out the statistics. The following are some interesting calls to experiment with:</source>
          <target state="translated">最初の呼び出しは実際に関数名でリストをソートし、2回目の呼び出しで統計情報を出力します。次のような興味深い呼び出しで実験してみましょう。</target>
        </trans-unit>
        <trans-unit id="030d76d81608222603d09c4d4d4c94ee206bc1ca" translate="yes" xml:space="preserve">
          <source>The first child of the node, if there are any, or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">ノードの最初の子（ある場合）、または &lt;code&gt;None&lt;/code&gt; 。これは読み取り専用属性です。</target>
        </trans-unit>
        <trans-unit id="325d7875dfe1839450d2dfe98a6d36a120b66778" translate="yes" xml:space="preserve">
          <source>The first example shows the most common usage of &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">最初の例は、&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; の&lt;/a&gt;最も一般的な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="385191c7e22d5d00e8c01f733769abf79ae0e9cf" translate="yes" xml:space="preserve">
          <source>The first four lines correspond to the arguments of the &lt;code&gt;Screen.setup()&lt;/code&gt; method.</source>
          <target state="translated">最初の4行は &lt;code&gt;Screen.setup()&lt;/code&gt; メソッドの引数に対応しています。</target>
        </trans-unit>
        <trans-unit id="42f8632ad7c20d5fdbbd018b653108a6af8d9377" translate="yes" xml:space="preserve">
          <source>The first function notation is supported by all platforms that define &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初の関数表記は、&lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; &lt;/a&gt;を定義するすべてのプラットフォームでサポートされています。</target>
        </trans-unit>
        <trans-unit id="43529dac190a43326357cd2f5a9d21f0ccec3671" translate="yes" xml:space="preserve">
          <source>The first group of options define test semantics, controlling aspects of how doctest decides whether actual output matches an example&amp;rsquo;s expected output:</source>
          <target state="translated">オプションの最初のグループは、テストのセマンティクスを定義し、実際の出力がサンプルの予期される出力と一致するかどうかをdoctestがどのように決定するかの側面を制御します。</target>
        </trans-unit>
        <trans-unit id="a61627c597bc87ccaa5b8516aab05143b8e515c1" translate="yes" xml:space="preserve">
          <source>The first index of invalid data in &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;内の無効なデータの最初のインデックス。</target>
        </trans-unit>
        <trans-unit id="54ec8104a8dcb6fdc67594e88b1749c9e091d524" translate="yes" xml:space="preserve">
          <source>The first item is an integer containing a combination of direction flags for the parameter:</source>
          <target state="translated">最初の項目は、パラメータの方向フラグの組み合わせを含む整数である。</target>
        </trans-unit>
        <trans-unit id="0ca4b9ef66540ab18c3155d91436466ad9c2f991" translate="yes" xml:space="preserve">
          <source>The first letter can be either of &lt;code&gt;'-'&lt;/code&gt; (which means the command reads its standard input), &lt;code&gt;'f'&lt;/code&gt; (which means the commands reads a given file on the command line) or &lt;code&gt;'.'&lt;/code&gt; (which means the commands reads no input, and hence must be first.)</source>
          <target state="translated">最初の文字は、 &lt;code&gt;'-'&lt;/code&gt; （コマンドが標準入力を読み取ることを意味する）、 &lt;code&gt;'f'&lt;/code&gt; （コマンドがコマンドラインで指定されたファイルを読み取ることを意味する）、または &lt;code&gt;'.'&lt;/code&gt; いずれかです。（つまり、コマンドは入力を読み取らないため、最初にする必要があります。）</target>
        </trans-unit>
        <trans-unit id="71c4ea972d5bdb15f737a2bfb933afebcd39c2f7" translate="yes" xml:space="preserve">
          <source>The first line indicates that 197 calls were monitored. Of those calls, 192 were &lt;em&gt;primitive&lt;/em&gt;, meaning that the call was not induced via recursion. The next line: &lt;code&gt;Ordered by: standard name&lt;/code&gt;, indicates that the text string in the far right column was used to sort the output. The column headings include:</source>
          <target state="translated">最初の行は、197件のコールが監視されたことを示しています。これらの呼び出しのうち、192は&lt;em&gt;プリミティブ&lt;/em&gt;でした。これは、呼び出しが再帰によって引き起こされなかったことを意味します。次の行： &lt;code&gt;Ordered by: standard name&lt;/code&gt; 、右端の列のテキスト文字列が出力のソートに使用されたことを示しています。列見出しは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="88b750bdde2a92f041228f07e4bb845b9726c8f5" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;em&gt;function&lt;/em&gt;, is the function which raised the exception; it depends on the platform and implementation. The second parameter, &lt;em&gt;path&lt;/em&gt;, will be the path name passed to &lt;em&gt;function&lt;/em&gt;. The third parameter, &lt;em&gt;excinfo&lt;/em&gt;, will be the exception information returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;. Exceptions raised by &lt;em&gt;onerror&lt;/em&gt; will not be caught.</source>
          <target state="translated">最初のパラメーター&lt;em&gt;function&lt;/em&gt;は、例外を発生させた関数です。それはプラットフォームと実装に依存します。2番目のパラメーター&lt;em&gt;pathは&lt;/em&gt;、&lt;em&gt;functionに&lt;/em&gt;渡されるパス名になり&lt;em&gt;ます&lt;/em&gt;。3番目のパラメーター&lt;em&gt;excinfoは&lt;/em&gt;、&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される例外情報になります。&lt;em&gt;onerror&lt;/em&gt;によって発生した例外はキャッチされません。</target>
        </trans-unit>
        <trans-unit id="773640730c7cf1ed138ed10047b4279b77d04ee8" translate="yes" xml:space="preserve">
          <source>The first part of this documentation covers the features of &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; that defines the features that are common to all policy objects, including &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;. This includes certain hook methods that are called internally by the email package, which a custom policy could override to obtain different behavior. The second part describes the concrete classes &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;, which implement the hooks that provide the standard behavior and the backward compatible behavior and features, respectively.</source>
          <target state="translated">このドキュメントの最初の部分では、&lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;を含むすべてのポリシーオブジェクトに共通の機能を定義する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;である&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;の機能について説明します。これには、電子メールパッケージによって内部的に呼び出される特定のフックメソッドが含まれます。カスタムポリシーは、異なる動作を取得するためにオーバーライドできます。 2番目の部分では、具体的なクラスである&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; &lt;/a&gt;について説明します。これらは、それぞれ標準の動作と下位互換性のある動作と機能を提供するフックを実装しています。</target>
        </trans-unit>
        <trans-unit id="260b4cde00c691683b690b8fefbfeb939e1a12af" translate="yes" xml:space="preserve">
          <source>The first seven arguments are (&lt;code&gt;args&lt;/code&gt;, &lt;code&gt;varargs&lt;/code&gt;, &lt;code&gt;varkw&lt;/code&gt;, &lt;code&gt;defaults&lt;/code&gt;, &lt;code&gt;kwonlyargs&lt;/code&gt;, &lt;code&gt;kwonlydefaults&lt;/code&gt;, &lt;code&gt;annotations&lt;/code&gt;).</source>
          <target state="translated">最初の7つの引数は（ &lt;code&gt;args&lt;/code&gt; 、 &lt;code&gt;varargs&lt;/code&gt; 、 &lt;code&gt;varkw&lt;/code&gt; 、 &lt;code&gt;defaults&lt;/code&gt; 、 &lt;code&gt;kwonlyargs&lt;/code&gt; 、 &lt;code&gt;kwonlydefaults&lt;/code&gt; 、 &lt;code&gt;annotations&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="eca277394ed7c2896c7c7d772bf656447668dd51" translate="yes" xml:space="preserve">
          <source>The first source line of the code object (if available)</source>
          <target state="translated">コードオブジェクトの最初のソース行 (利用可能な場合)</target>
        </trans-unit>
        <trans-unit id="1b7000eb925b584e4133d7b28aa26d69000c610f" translate="yes" xml:space="preserve">
          <source>The first step in using the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; is creating an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;を使用する最初のステップは、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;オブジェクトを作成することです。</target>
        </trans-unit>
        <trans-unit id="9b2e1b9bcae7f1307e5235d867471e2e7c3ddf99" translate="yes" xml:space="preserve">
          <source>The first string specifies the program executable, and the remaining strings specify the arguments. Together, string arguments form the &lt;code&gt;argv&lt;/code&gt; of the program.</source>
          <target state="translated">最初の文字列はプログラムの実行可能ファイルを指定し、残りの文字列は引数を指定します。一緒に、文字列引数はプログラムの &lt;code&gt;argv&lt;/code&gt; を形成します。</target>
        </trans-unit>
        <trans-unit id="69c597f00dce4e812c0bf05fd7ab11267fe6c188" translate="yes" xml:space="preserve">
          <source>The first such file name that exists is returned by &lt;a href=&quot;#gettext.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;. If no such file is found, then &lt;code&gt;None&lt;/code&gt; is returned. If &lt;em&gt;all&lt;/em&gt; is given, it returns a list of all file names, in the order in which they appear in the languages list or the environment variables.</source>
          <target state="translated">存在する最初のそのようなファイル名は、&lt;a href=&quot;#gettext.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;によって返されます。そのようなファイルが見つからない場合は、 &lt;code&gt;None&lt;/code&gt; が返されます。場合は&lt;em&gt;、すべてが&lt;/em&gt;与えられ、それは言語のリストや環境変数に表示される順序で、すべてのファイル名のリストを返します。</target>
        </trans-unit>
        <trans-unit id="f15cc87f948ec88467eca7ad326067dfb4d43de2" translate="yes" xml:space="preserve">
          <source>The first three arguments are the components that make up a class definition header: the class name, the base classes (in order), the keyword arguments (such as &lt;code&gt;metaclass&lt;/code&gt;).</source>
          <target state="translated">最初の3つの引数は、クラス定義ヘッダーを構成するコンポーネントです。クラス名、基本クラス（順番）、キーワード引数（ &lt;code&gt;metaclass&lt;/code&gt; など）です。</target>
        </trans-unit>
        <trans-unit id="ac9fb53fa591519e788fdff11ee11fadfcffe45f" translate="yes" xml:space="preserve">
          <source>The first two examples support IPv4 only.</source>
          <target state="translated">最初の2つの例では、IPv4のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="154dd11293b4f0a9c622295b949fa0e55da8605a" translate="yes" xml:space="preserve">
          <source>The first variation of &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; that is provided is also a subclass of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;. Members of an &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; can be compared to integers; by extension, integer enumerations of different types can also be compared to each other:</source>
          <target state="translated">提供される&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;の最初のバリエーションも&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;サブクラスです。&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; の&lt;/a&gt;メンバーは整数と比較できます。さらに、さまざまなタイプの整数列挙を互いに比較することもできます。</target>
        </trans-unit>
        <trans-unit id="7d60dcd520644aae4a51c2783ce939a1618d8cd2" translate="yes" xml:space="preserve">
          <source>The first version requires that &lt;em&gt;numerator&lt;/em&gt; and &lt;em&gt;denominator&lt;/em&gt; are instances of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with value &lt;code&gt;numerator/denominator&lt;/code&gt;. If &lt;em&gt;denominator&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, it raises a &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;. The second version requires that &lt;em&gt;other_fraction&lt;/em&gt; is an instance of &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt; and returns a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with the same value. The next two versions accept either a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance, and return a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance with exactly the same value. Note that due to the usual issues with binary floating-point (see &lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt;), the argument to &lt;code&gt;Fraction(1.1)&lt;/code&gt; is not exactly equal to 11/10, and so &lt;code&gt;Fraction(1.1)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; return &lt;code&gt;Fraction(11, 10)&lt;/code&gt; as one might expect. (But see the documentation for the &lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt;&lt;code&gt;limit_denominator()&lt;/code&gt;&lt;/a&gt; method below.) The last version of the constructor expects a string or unicode instance. The usual form for this instance is:</source>
          <target state="translated">最初のバージョンでは、&lt;em&gt;分子&lt;/em&gt;と&lt;em&gt;分母&lt;/em&gt;が&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; の&lt;/a&gt;インスタンスである必要があり、値 &lt;code&gt;numerator/denominator&lt;/code&gt; を持つ新しい&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスを返します。&lt;em&gt;分母&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; の場合、&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; が発生し&lt;/a&gt;ます。第二のバージョンはそれを必要と&lt;em&gt;other_fractionで&lt;/em&gt;のインスタンスで&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;戻る&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;同じ値でインスタンス。次の2つのバージョンは、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;インスタンスを受け入れ、&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;を返します&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;まったく同じ値のインスタンス。バイナリ浮動小数点との通常の問題に起因する（参照することを注意&lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;：問題と制限浮動小数点演算を&lt;/a&gt;、引数） &lt;code&gt;Fraction(1.1)&lt;/code&gt; 正確に11/10に等しくなく、かつので &lt;code&gt;Fraction(1.1)&lt;/code&gt; ない&lt;em&gt;ではない&lt;/em&gt;返す &lt;code&gt;Fraction(11, 10)&lt;/code&gt; 11、10 ）予想通り。 （ただし、以下の&lt;a href=&quot;#fractions.Fraction.limit_denominator&quot;&gt; &lt;code&gt;limit_denominator()&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントを参照してください。）コンストラクタの最後のバージョンでは、文字列またはUnicodeインスタンスが必要です。このインスタンスの通常の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0a66aba6e485ab9f7939b6d026c0abcf553b5f4e" translate="yes" xml:space="preserve">
          <source>The first version returns the nearest &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self&lt;/code&gt;, rounding half to even. The second version rounds &lt;code&gt;self&lt;/code&gt; to the nearest multiple of &lt;code&gt;Fraction(1, 10**ndigits)&lt;/code&gt; (logically, if &lt;code&gt;ndigits&lt;/code&gt; is negative), again rounding half toward even. This method can also be accessed through the &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">最初のバージョンは、最も近い&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;self&lt;/code&gt; に返し、半分に丸めます。2番目のバージョンは、 &lt;code&gt;self&lt;/code&gt; を &lt;code&gt;Fraction(1, 10**ndigits)&lt;/code&gt; の最も近い倍数に丸めます（論理的には、 &lt;code&gt;ndigits&lt;/code&gt; が負の場合）。このメソッドには、&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;関数からもアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8469a524945b16d1ec34b200182d5e6c61700cb3" translate="yes" xml:space="preserve">
          <source>The flag is set if there are no free or cell variables.</source>
          <target state="translated">このフラグは、フリー変数やセル変数がない場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="ed52b2ed227b010284477f61a5a82abcb5746897" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a coroutine function. When the code object is executed it returns a coroutine object. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">このフラグは、コードオブジェクトがコルーチン関数の場合に設定されます。コードオブジェクトが実行されると、コルーチンオブジェクトが返されます。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3948c22b1c91f14b44ee0f8962182b1c03b07992" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a generator function, i.e. a generator object is returned when the code object is executed.</source>
          <target state="translated">このフラグは、コードオブジェクトがジェネレータ関数である場合、すなわち、コードオブジェクトが実行されたときにジェネレータオブジェクトが返される場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="0ec5f37142a811991c100249624cda19de5e3ecf" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is a nested function.</source>
          <target state="translated">このフラグは、コードオブジェクトがネストされた関数である場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="67db30428201e8fb3c706e18a40ea74df8dfc9a8" translate="yes" xml:space="preserve">
          <source>The flag is set when the code object is an asynchronous generator function. When the code object is executed it returns an asynchronous generator object. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">このフラグは、コードオブジェクトが非同期ジェネレーター関数である場合に設定されます。コードオブジェクトが実行されると、非同期ジェネレーターオブジェクトが返されます。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="814aa93788cd39271af8f2ff1334ffe907eef62c" translate="yes" xml:space="preserve">
          <source>The flag is used to transform generators into generator-based coroutines. Generator objects with this flag can be used in &lt;code&gt;await&lt;/code&gt; expression, and can &lt;code&gt;yield from&lt;/code&gt; coroutine objects. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">フラグは、ジェネレーターをジェネレーターベースのコルーチンに変換するために使用されます。このフラグを持つジェネレーターオブジェクトは、 &lt;code&gt;await&lt;/code&gt; 式で使用でき &lt;code&gt;yield from&lt;/code&gt; コルーチンオブジェクトから生成できます。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="472ef2122f93d92a4d6151f3b1a3fc79dda359ab" translate="yes" xml:space="preserve">
          <source>The flags are specific to CPython, and may not be defined in other Python implementations. Furthermore, the flags are an implementation detail, and can be removed or deprecated in future Python releases. It&amp;rsquo;s recommended to use public APIs from the &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module for any introspection needs.</source>
          <target state="translated">フラグはCPythonに固有であり、他のPython実装では定義されていない場合があります。さらに、フラグは実装の詳細であり、将来のPythonリリースで削除または廃止される可能性があります。イントロスペクションの必要性がある場合は、&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;モジュールのパブリックAPIを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7b65eef96d81c5617b228952c6bdd02752ed58a5" translate="yes" xml:space="preserve">
          <source>The flags argument contains a bitwise OR of zero or more of the following flags:</source>
          <target state="translated">flags 引数には、以下のフラグのうち 0 個以上のビット単位の OR が含まれます。</target>
        </trans-unit>
        <trans-unit id="a4ed5bbe8d763440ed3806e2c210ec422dec4cdd" translate="yes" xml:space="preserve">
          <source>The flags argument is a bit mask that can contain zero or more of the following values ORed together: &lt;a href=&quot;#os.GRND_RANDOM&quot;&gt;&lt;code&gt;os.GRND_RANDOM&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">flags引数はビットマスクであり、0個以上の次の値をORで結合して含めることができます：&lt;a href=&quot;#os.GRND_RANDOM&quot;&gt; &lt;code&gt;os.GRND_RANDOM&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e42e6fb9b1c8d82e67ecac0f6d6031b833228308" translate="yes" xml:space="preserve">
          <source>The flags for certificate verification operations. You can set flags like &lt;a href=&quot;#ssl.VERIFY_CRL_CHECK_LEAF&quot;&gt;&lt;code&gt;VERIFY_CRL_CHECK_LEAF&lt;/code&gt;&lt;/a&gt; by ORing them together. By default OpenSSL does neither require nor verify certificate revocation lists (CRLs). Available only with openssl version 0.9.8+.</source>
          <target state="translated">証明書検証操作のフラグ。&lt;a href=&quot;#ssl.VERIFY_CRL_CHECK_LEAF&quot;&gt; &lt;code&gt;VERIFY_CRL_CHECK_LEAF&lt;/code&gt; の&lt;/a&gt;ようなフラグを一緒にOR することで設定できます。デフォルトでは、OpenSSLは証明書失効リスト（CRL）を要求も検証もしません。opensslバージョン0.9.8以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="c7e52a18a4bd1a25b0dadd8f95a2ddf5d9b66f31" translate="yes" xml:space="preserve">
          <source>The float type implements the &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;numbers.Real&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;. float also has the following additional methods.</source>
          <target state="translated">float型は、&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;numbers.Real&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラスを&lt;/a&gt;実装します。floatには、次の追加メソッドもあります。</target>
        </trans-unit>
        <trans-unit id="92f2a154936409f6982bec487393509f452999b7" translate="yes" xml:space="preserve">
          <source>The float type is described in &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;.</source>
          <target state="translated">float型については、&lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;数値型-int、float、complexで説明してい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="89fb9d615ea00e40317c5f9968a1d62d02815cb3" translate="yes" xml:space="preserve">
          <source>The floor is computed and the remainder (if any) is thrown away. In the second case, an integer is returned. (3)</source>
          <target state="translated">フロアが計算され、残りの部分(あれば)が捨てられます。2番目の場合は整数が返されます。(3)</target>
        </trans-unit>
        <trans-unit id="cd4f887b55eeea791769598b7071c612e7f2c0e7" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; methods are meant for use in unit tests and &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">以下の&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;メソッドは、単体テストおよび&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;実装で使用するためのものです。</target>
        </trans-unit>
        <trans-unit id="78d23bc14b87f27435176d1c007b23cff76c66a4" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; method is intended to be called by code using the email library to create policy instances with custom settings:</source>
          <target state="translated">次の&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;メソッドは、メールライブラリを使用するコードによって呼び出され、カスタム設定でポリシーインスタンスを作成するためのものです。</target>
        </trans-unit>
        <trans-unit id="57447dead23ff464ff3d7bf38606b16eaa9986c7" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; subclasses are provided for reading and writing.</source>
          <target state="translated">次の&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;サブクラスは、読み取りおよび書き込み用に提供されています。</target>
        </trans-unit>
        <trans-unit id="941e9d82eb275d485c825efd74180297955eef50" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;RUSAGE_*&lt;/code&gt; symbols are passed to the &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; function to specify which processes information should be provided for.</source>
          <target state="translated">次の &lt;code&gt;RUSAGE_*&lt;/code&gt; シンボルは&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;関数に渡され、どのプロセス情報を提供するかを指定します。</target>
        </trans-unit>
        <trans-unit id="8e590fd88205ef9e15a283b79c60eb9e96a14455" translate="yes" xml:space="preserve">
          <source>The following Python code helps explain what &lt;em&gt;tee&lt;/em&gt; does (although the actual implementation is more complex and uses only a single underlying</source>
          <target state="translated">次のPythonコードは、&lt;em&gt;Tシャツの&lt;/em&gt;機能を説明するのに役立ちます（ただし、実際の実装はより複雑で、単一の基本的な</target>
        </trans-unit>
        <trans-unit id="e926ba94f9d733ea5f82756a4605d41839945c93" translate="yes" xml:space="preserve">
          <source>The following Python types can thus be sent to SQLite without any problem:</source>
          <target state="translated">このように、以下のPythonの型は問題なくSQLiteに送ることができます。</target>
        </trans-unit>
        <trans-unit id="a6784883eb3348f6fc5ea7e327435f77a01ccee1" translate="yes" xml:space="preserve">
          <source>The following W3C document, &lt;a href=&quot;https://www.w3.org/International/O-charset&quot;&gt;https://www.w3.org/International/O-charset&lt;/a&gt;, lists the various ways in which an (X)HTML or an XML document could have specified its encoding information.</source>
          <target state="translated">次のW3Cドキュメント&lt;a href=&quot;https://www.w3.org/International/O-charset&quot;&gt;https://www.w3.org/International/O-charset&lt;/a&gt;は、（X）HTMLまたはXMLドキュメントがエンコード情報を指定するさまざまな方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4329043e2577e3e7375d57bbfa47e67713420c76" translate="yes" xml:space="preserve">
          <source>The following additional characters may be appended to the flag to control how the database is opened:</source>
          <target state="translated">データベースがどのように開かれるかを制御するために、以下の追加文字をフラグに追加することができます。</target>
        </trans-unit>
        <trans-unit id="f04d5255067d8b5087d6c7f2f54cf21788f68331" translate="yes" xml:space="preserve">
          <source>The following applies to all start methods.</source>
          <target state="translated">以下は、すべての開始方法に適用されます。</target>
        </trans-unit>
        <trans-unit id="fe0b5f0ab021ddc435da4df2426e3b6a7d64523e" translate="yes" xml:space="preserve">
          <source>The following are defined as class-level attributes of &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下は&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; の&lt;/a&gt;クラスレベルの属性として定義されています：</target>
        </trans-unit>
        <trans-unit id="493f6ff18fe3ca63e3f57c1cbbddbc4bfdc65230" translate="yes" xml:space="preserve">
          <source>The following are optional NNTP extensions defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;. Some of them have been superseded by newer commands in &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">以下は、&lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2980で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるオプションのNNTP拡張機能です。それらのいくつかは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3977の&lt;/strong&gt;&lt;/a&gt;新しいコマンドに置き換えられました。</target>
        </trans-unit>
        <trans-unit id="1dee97e7d46ddeef07ad66ff95b44fdec12cbbff" translate="yes" xml:space="preserve">
          <source>The following are the valid string and SortKey:</source>
          <target state="translated">有効な文字列とSortKeyは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2bb90197cfa182080451d9e4160dcb0640565187" translate="yes" xml:space="preserve">
          <source>The following attribute and methods should only be used by classes derived from &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の属性とメソッドは、&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;から派生したクラスによってのみ使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="bb23742802da9eb7259b6abdcb456333d0a48b2c" translate="yes" xml:space="preserve">
          <source>The following attributes are also available:</source>
          <target state="translated">また、以下のような属性があります。</target>
        </trans-unit>
        <trans-unit id="4eceabfa85f58879acaae3fe2f9f8b84e838e470" translate="yes" xml:space="preserve">
          <source>The following attributes are defined on instances of &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; の&lt;/a&gt;インスタンスでは、次の属性が定義されています。</target>
        </trans-unit>
        <trans-unit id="436a20c21ef45203d573ca4aa36d5e1c54e2e851" translate="yes" xml:space="preserve">
          <source>The following attributes are provided for convenience, and are the most useful combinations of the above flags:</source>
          <target state="translated">以下の属性は便宜上提供されており、上記のフラグの最も有用な組み合わせです。</target>
        </trans-unit>
        <trans-unit id="e8e6bd955c5c9b643aaae8484e0863b9e6f73b80" translate="yes" xml:space="preserve">
          <source>The following attributes contain values relating to the current parse location in an &lt;code&gt;xmlparser&lt;/code&gt; object. During a callback reporting a parse event they indicate the location of the first of the sequence of characters that generated the event. When called outside of a callback, the position indicated will be just past the last parse event (regardless of whether there was an associated callback).</source>
          <target state="translated">次の属性には、 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクトの現在の解析場所に関連する値が含まれています。解析イベントを報告するコールバック中に、イベントを生成した最初の文字シーケンスの場所を示します。コールバックの外で呼び出された場合、示された位置は、（関連付けられたコールバックがあったかどうかに関係なく）最後の解析イベントの直後になります。</target>
        </trans-unit>
        <trans-unit id="7113a820fb71237b75638d22c11096a14dea5d8d" translate="yes" xml:space="preserve">
          <source>The following attributes contain values relating to the most recent error encountered by an &lt;code&gt;xmlparser&lt;/code&gt; object, and will only have correct values once a call to &lt;code&gt;Parse()&lt;/code&gt; or &lt;code&gt;ParseFile()&lt;/code&gt; has raised an &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;xml.parsers.expat.ExpatError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">次の属性には、 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクトで発生した最新のエラーに関連する値が含まれており、 &lt;code&gt;Parse()&lt;/code&gt; または &lt;code&gt;ParseFile()&lt;/code&gt; の&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;xml.parsers.expat.ExpatError&lt;/code&gt; &lt;/a&gt;例外が発生した場合にのみ正しい値が含まれます。</target>
        </trans-unit>
        <trans-unit id="b8029e19ee3bc98ea3f739d0b23b2fa8cece911f" translate="yes" xml:space="preserve">
          <source>The following attributes have values that are different from the &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; default:</source>
          <target state="translated">以下の属性には、&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;デフォルトとは異なる値があります。</target>
        </trans-unit>
        <trans-unit id="19a7dc07900c158b5f98d8b86469216de3ba29ba" translate="yes" xml:space="preserve">
          <source>The following attributes of a &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; can be configured either by subclassing or assignment on an instance:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;の以下の属性は、インスタンスのサブクラス化または割り当てによって構成できます。</target>
        </trans-unit>
        <trans-unit id="6f46b8f3ca7021134f6fc09e1b3c895db0e323ea" translate="yes" xml:space="preserve">
          <source>The following callbacks are called on &lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt;&lt;code&gt;BufferedProtocol&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">次のコールバックは、&lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt; &lt;code&gt;BufferedProtocol&lt;/code&gt; &lt;/a&gt;インスタンスで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4ce04e341e5b95ab13da3a2b67690a015d59cdcb" translate="yes" xml:space="preserve">
          <source>The following class implements a parser that will be used to illustrate more examples:</source>
          <target state="translated">以下のクラスは、より多くの例を説明するために使用されるパーサーを実装しています。</target>
        </trans-unit>
        <trans-unit id="c1e9e8dbaf83d4bd1b564c338b27a5b8ac01490b" translate="yes" xml:space="preserve">
          <source>The following classes are available:</source>
          <target state="translated">以下のクラスがあります。</target>
        </trans-unit>
        <trans-unit id="cf77f9e884fd9a2e64c18b91e96221bdac8e8a18" translate="yes" xml:space="preserve">
          <source>The following classes are provided:</source>
          <target state="translated">以下のような授業を行っています。</target>
        </trans-unit>
        <trans-unit id="776ad4b0b1fc73870feeb0df3aa3500c99e92113" translate="yes" xml:space="preserve">
          <source>The following classes are the classes used to represent data parsed from structured headers and can, in general, be used by an application program to construct structured values to assign to specific headers.</source>
          <target state="translated">以下のクラスは、構造化されたヘッダから解析されたデータを表現するために使用されるクラスで、一般的には、アプリケーションプログラムが特定のヘッダに割り当てる構造化された値を構築するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="4cf852c278240688680230326012f83f01ee8dda" translate="yes" xml:space="preserve">
          <source>The following classes provide the implementations of the parse results when operating on &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">次のクラスは、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;オブジェクトを操作するときの解析結果の実装を提供します。</target>
        </trans-unit>
        <trans-unit id="2a8f9a5fce9e21a0ddb67e16a8bd2016f44c9426" translate="yes" xml:space="preserve">
          <source>The following classes provide the implementations of the structured parse results when operating on &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">次のクラスは、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトを操作するときに、構造化された解析結果の実装を提供します。</target>
        </trans-unit>
        <trans-unit id="6bc4a1812e683c53af6ce054907acc1948bcc44a" translate="yes" xml:space="preserve">
          <source>The following client code will call the methods made available by the preceding server:</source>
          <target state="translated">以下のクライアントコードは、先行するサーバが利用可能なメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b9f5855661bc69d1bbc9f188edcc6422538bf453" translate="yes" xml:space="preserve">
          <source>The following code connects to the server and receives some data from the server:</source>
          <target state="translated">以下のコードは、サーバーに接続し、サーバーからいくつかのデータを受信します。</target>
        </trans-unit>
        <trans-unit id="68ebfc5f9876cf31f85eec23cbd7606dde463890" translate="yes" xml:space="preserve">
          <source>The following code is a Python program that takes a list of integers and produces either the sum or the max:</source>
          <target state="translated">次のコードは、整数のリストを受け取り、和または最大値を生成する Python プログラムです。</target>
        </trans-unit>
        <trans-unit id="33c4f1b9f7868200d82e533f806095ec68f717b3" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; to wait for messages from multiple processes at once:</source>
          <target state="translated">次のコードは、&lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;を使用して、複数のプロセスからのメッセージを同時に待機します。</target>
        </trans-unit>
        <trans-unit id="b52ed289a53f55a282ec7ec617b97682fe024623" translate="yes" xml:space="preserve">
          <source>The following codec provides a text transform: a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; mapping. It is not supported by &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt; (which only produces &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; output).</source>
          <target state="translated">次のコーデックはテキスト変換を提供します：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;へのマッピング。&lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt;ではサポートされていません（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;出力のみを生成します）。</target>
        </trans-unit>
        <trans-unit id="7e744597dd53841c8c8102ea3b4cc315bd8163a6" translate="yes" xml:space="preserve">
          <source>The following codecs provide &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; encoding and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; decoding, similar to the Unicode text encodings.</source>
          <target state="translated">次のコーデックは、Unicodeテキストエンコーディングと同様に、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;エンコーディングと&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;から&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; への&lt;/a&gt;デコードを提供します。</target>
        </trans-unit>
        <trans-unit id="d259fb7cc5745e79d6cd750e440d2f1424078478" translate="yes" xml:space="preserve">
          <source>The following codecs provide binary transforms: &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; mappings. They are not supported by &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; (which only produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; output).</source>
          <target state="translated">次のコーデックはバイナリ変換を提供し&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;ます&lt;/a&gt;：バイトのようなオブジェクトから&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;マッピング。これらは&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;ではサポートされていません（&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;出力のみを生成します）。</target>
        </trans-unit>
        <trans-unit id="434fdf5c9b0ef216b7167b3a268500f99ef7d459" translate="yes" xml:space="preserve">
          <source>The following constant is the only parameter that can be sent to &lt;a href=&quot;#time.clock_settime&quot;&gt;&lt;code&gt;clock_settime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の定数は、&lt;a href=&quot;#time.clock_settime&quot;&gt; &lt;code&gt;clock_settime()&lt;/code&gt; に&lt;/a&gt;送信できる唯一のパラメーターです。</target>
        </trans-unit>
        <trans-unit id="9ee4a57faca157f748bf6c4be3e1f4055c7770ce" translate="yes" xml:space="preserve">
          <source>The following constants are available at the module level:</source>
          <target state="translated">モジュール・レベルでは、以下の定数を使用できます。</target>
        </trans-unit>
        <trans-unit id="15620e1a702d8f287c721f0664c56441b8748c38" translate="yes" xml:space="preserve">
          <source>The following constants are available:</source>
          <target state="translated">以下のような定数があります。</target>
        </trans-unit>
        <trans-unit id="bc75344c855052cd9b4b292032d5d1cfb31f8eab" translate="yes" xml:space="preserve">
          <source>The following constants are defined for use in many &lt;code&gt;_winreg&lt;/code&gt; functions.</source>
          <target state="translated">以下の定数は、多くの &lt;code&gt;_winreg&lt;/code&gt; 関数で使用するために定義されています。</target>
        </trans-unit>
        <trans-unit id="5b2ba821f4691679e132dc8fb174f36e59b7e4d3" translate="yes" xml:space="preserve">
          <source>The following constants are options for the &lt;em&gt;flags&lt;/em&gt; parameter to the &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. They can be combined using the bitwise OR operator &lt;code&gt;|&lt;/code&gt;. Some of them are not available on all platforms. For descriptions of their availability and use, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/open(2)&quot;&gt;open(2)&lt;/a&gt;&lt;/em&gt; manual page on Unix or &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx&quot;&gt;the MSDN&lt;/a&gt; on Windows.</source>
          <target state="translated">次の定数は、&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数の&lt;em&gt;flags&lt;/em&gt;パラメータのオプションです。これらは、ビットごとのOR演算子を使用して組み合わせることができます &lt;code&gt;|&lt;/code&gt; 。それらの一部は、すべてのプラットフォームで使用できるわけではありません。それらの可用性と使用法の説明については、UNIXの&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/open(2)&quot;&gt;open（2）&lt;/a&gt;&lt;/em&gt;マニュアルページまたはWindows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx&quot;&gt;のMSDN&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e771abc8230c815b506e59c042235b7c4a6b8e3f" translate="yes" xml:space="preserve">
          <source>The following constants are provided for use with &lt;a href=&quot;#gc.set_debug&quot;&gt;&lt;code&gt;set_debug()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次の定数は、&lt;a href=&quot;#gc.set_debug&quot;&gt; &lt;code&gt;set_debug()&lt;/code&gt; &lt;/a&gt;で使用するために提供されています。</target>
        </trans-unit>
        <trans-unit id="cb205eca9391cfc2f056a1dbf90721ffe5b16978" translate="yes" xml:space="preserve">
          <source>The following constants are provided in the &lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt;&lt;code&gt;xml.parsers.expat.errors&lt;/code&gt;&lt;/a&gt; module. These constants are useful in interpreting some of the attributes of the &lt;code&gt;ExpatError&lt;/code&gt; exception objects raised when an error has occurred. Since for backwards compatibility reasons, the constants&amp;rsquo; value is the error &lt;em&gt;message&lt;/em&gt; and not the numeric error &lt;em&gt;code&lt;/em&gt;, you do this by comparing its &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute with &lt;code&gt;errors.codes[errors.XML_ERROR_&lt;em&gt;CONSTANT_NAME&lt;/em&gt;]&lt;/code&gt;.</source>
          <target state="translated">次の定数は、&lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt; &lt;code&gt;xml.parsers.expat.errors&lt;/code&gt; &lt;/a&gt;モジュールで提供されます。これらの定数は、エラーが発生したときに発生する &lt;code&gt;ExpatError&lt;/code&gt; 例外オブジェクトの属性の一部を解釈するのに役立ちます。下位互換性の理由から、定数の値はエラー&lt;em&gt;メッセージ&lt;/em&gt;であり、数値のエラー&lt;em&gt;コード&lt;/em&gt;ではないため、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;errors.codes[errors.XML_ERROR_&lt;em&gt;CONSTANT_NAME&lt;/em&gt;]&lt;/code&gt; と比較することでこれを行います。</target>
        </trans-unit>
        <trans-unit id="5965b72a7c2bdd2aca53ce47e480c9fabe7ebc28" translate="yes" xml:space="preserve">
          <source>The following constitutes a valid IPv4 address:</source>
          <target state="translated">以下は有効なIPv4アドレスです。</target>
        </trans-unit>
        <trans-unit id="4e910096327b043ad9d2afa009406429c804c3b3" translate="yes" xml:space="preserve">
          <source>The following constitutes a valid IPv6 address:</source>
          <target state="translated">以下は有効なIPv6アドレスです。</target>
        </trans-unit>
        <trans-unit id="b58ccb42402de11fe64b8157bdb31be1accde61b" translate="yes" xml:space="preserve">
          <source>The following convenience methods combine several ioctls, or one ioctl and some simple calculations.</source>
          <target state="translated">以下の便利なメソッドは、複数のioctls、または1つのioctlといくつかの簡単な計算を組み合わせたものです。</target>
        </trans-unit>
        <trans-unit id="590a13c463d04c026d81a3b0c4e4d9904786e9ba" translate="yes" xml:space="preserve">
          <source>The following data attributes are also available:</source>
          <target state="translated">また、以下のようなデータ属性があります。</target>
        </trans-unit>
        <trans-unit id="daf053b174bad2ee3cbf65af4b7568faf14c1319" translate="yes" xml:space="preserve">
          <source>The following data items and methods are also supported:</source>
          <target state="translated">また、以下のデータ項目やメソッドにも対応しています。</target>
        </trans-unit>
        <trans-unit id="41a59667c8838599d897ed21cec38179460a4746" translate="yes" xml:space="preserve">
          <source>The following data values are used to support path manipulation operations. These are defined for all platforms.</source>
          <target state="translated">以下のデータ値は、パス操作操作をサポートするために使用されます。これらはすべてのプラットフォームで定義されています。</target>
        </trans-unit>
        <trans-unit id="040395c6a3618bf3ebfcd5244fdff59b1dda2f42" translate="yes" xml:space="preserve">
          <source>The following decorators and exception implement test skipping and expected failures:</source>
          <target state="translated">以下のデコレータと例外は、テストのスキップと予期される失敗を実装しています。</target>
        </trans-unit>
        <trans-unit id="2f67176ca68e7b05b36fe46d06bf8c43a493c901" translate="yes" xml:space="preserve">
          <source>The following dictionary-like methods work on the element attributes.</source>
          <target state="translated">以下の辞書的なメソッドは、要素の属性に対して働きます。</target>
        </trans-unit>
        <trans-unit id="1dc50e2836f9aa579e4b0f696d2f357a755d8b8a" translate="yes" xml:space="preserve">
          <source>The following directives can be embedded in the &lt;em&gt;format&lt;/em&gt; string. They are shown without the optional field width and precision specification, and are replaced by the indicated characters in the &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; result:</source>
          <target state="translated">以下のディレクティブを&lt;em&gt;フォーマット&lt;/em&gt;文字列に埋め込むことができます。オプションのフィールド幅と精度の指定なしで表示され、&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; の&lt;/a&gt;結果で指定された文字に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="729ba8c5a9bc8860d3a6a359878f9ca2b87f2ec6" translate="yes" xml:space="preserve">
          <source>The following error handlers are only applicable to &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;:</source>
          <target state="translated">次のエラーハンドラは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディングに&lt;/a&gt;のみ適用されます。</target>
        </trans-unit>
        <trans-unit id="b7712bbe1533b2f2e58112643a78ef6e4d3ffd90" translate="yes" xml:space="preserve">
          <source>The following example achieves the same goal but supports concurrent interactive sessions, by only appending the new history.</source>
          <target state="translated">次の例は、新しい履歴を追加するだけで、同じ目標を達成しますが、同時進行の対話型セッションをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d4555e1da28cdc40e782dd2248ed5c1ef7fe192f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a practical use of the &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; class with &lt;a href=&quot;https://www.numpy.org/&quot;&gt;NumPy arrays&lt;/a&gt;, accessing the same &lt;code&gt;numpy.ndarray&lt;/code&gt; from two distinct Python shells:</source>
          <target state="translated">次の例では、実用化を実証する&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;を持つクラス&lt;a href=&quot;https://www.numpy.org/&quot;&gt;numpyのアレイを&lt;/a&gt;同一のアクセス、 &lt;code&gt;numpy.ndarray&lt;/code&gt; を二つの別個のPythonシェルから：</target>
        </trans-unit>
        <trans-unit id="dd40c9b71705ee03f60f196a9ed9560cf96a2b42" translate="yes" xml:space="preserve">
          <source>The following example demonstrates basic use of a &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">次の例は、&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;インスタンスの基本的な使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="636d7599cc64ae9844d830daf79292dae85c3e9c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates basic use of the &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">次の例は、&lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; &lt;/a&gt;クラスの基本的な使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ebe02adeb943f0142409336cb1c7fc44d532dbfe" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">次の例は、&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;モジュールの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="184d08b3a3ddcb361e3da601454cd3a57e4847c3" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s history reading and writing functions to automatically load and save a history file named &lt;code&gt;.python_history&lt;/code&gt; from the user&amp;rsquo;s home directory. The code below would normally be executed automatically during interactive sessions from the user&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">次の例は、&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;モジュールの履歴読み取りおよび書き込み関数を使用して、ユーザーのホームディレクトリから &lt;code&gt;.python_history&lt;/code&gt; という名前の履歴ファイルを自動的にロードおよび保存する方法を示しています。以下のコードは通常、ユーザーの&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;ファイルからのインタラクティブセッション中に自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="26e6cc83687c3de89725cf30864401269275c60e" translate="yes" xml:space="preserve">
          <source>The following example demonstrates low-level use of &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">次の例は、&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;インスタンスの低レベルの使用を示しています。</target>
        </trans-unit>
        <trans-unit id="db1a4ea3897dc228cbe242e1563fbe5add0d99f9" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the basic mechanisms of a &lt;code&gt;SharedMemoryManager&lt;/code&gt;:</source>
          <target state="translated">次の例は、 &lt;code&gt;SharedMemoryManager&lt;/code&gt; の基本的なメカニズムを示しています。</target>
        </trans-unit>
        <trans-unit id="ec9664604236f3fb600fa6948a7aacd8381f5a02" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the different ways to print and format the exception and traceback:</source>
          <target state="translated">次の例では、例外とトレースバックを印刷してフォーマットするさまざまな方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f11233dbb56229c8fdfe160786d97ca12f552ea0" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of a pool:</source>
          <target state="translated">次の例は、プールの使用を示しています。</target>
        </trans-unit>
        <trans-unit id="5a60e7418b2653dc05bc9c009baf5076b4b7e356" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this.</source>
          <target state="translated">次の例はこれを実証しています。</target>
        </trans-unit>
        <trans-unit id="3d5ef660ad94efd9bc11f1431691817680e67dd7" translate="yes" xml:space="preserve">
          <source>The following example depicts a potentially more convenient pattern for using &lt;code&gt;SharedMemoryManager&lt;/code&gt; objects via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to ensure that all shared memory blocks are released after they are no longer needed:</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを介して &lt;code&gt;SharedMemoryManager&lt;/code&gt; オブジェクトを使用して、すべての共有メモリブロックが不要になった後で確実に解放されるようにするための、より便利なパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="f612736a42a1b32b9815a49d4f5b313138a8a7d1" translate="yes" xml:space="preserve">
          <source>The following example depicts how one, two, or many processes may access the same &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; by supplying the name of the shared memory block behind it:</source>
          <target state="translated">次の例は、1つ、2つ、または多くのプロセスが、その背後にある共有メモリブロックの名前を指定することによって、同じ&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; に&lt;/a&gt;アクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0753e44451c3f0b3ee4bcc7279542a665e363cad" translate="yes" xml:space="preserve">
          <source>The following example extends the &lt;a href=&quot;code#code.InteractiveConsole&quot;&gt;&lt;code&gt;code.InteractiveConsole&lt;/code&gt;&lt;/a&gt; class to support history save/restore.</source>
          <target state="translated">次の例では、履歴の保存/復元をサポートするように&lt;a href=&quot;code#code.InteractiveConsole&quot;&gt; &lt;code&gt;code.InteractiveConsole&lt;/code&gt; &lt;/a&gt;クラスを拡張しています。</target>
        </trans-unit>
        <trans-unit id="7460e2e46aac0aa0a2a187996f8166def8725bce" translate="yes" xml:space="preserve">
          <source>The following example fetches address information for a hypothetical TCP connection to &lt;code&gt;example.org&lt;/code&gt; on port 80 (results may differ on your system if IPv6 isn&amp;rsquo;t enabled):</source>
          <target state="translated">次の例は、ポート80の &lt;code&gt;example.org&lt;/code&gt; への架空のTCP接続のアドレス情報をフェッチします（IPv6が有効になっていない場合、システムによって結果が異なる場合があります）。</target>
        </trans-unit>
        <trans-unit id="233c2eac45bffe4b40d65d000bc52972a51f3c56" translate="yes" xml:space="preserve">
          <source>The following example illustrates both approaches.</source>
          <target state="translated">以下の例では、両方のアプローチを説明しています。</target>
        </trans-unit>
        <trans-unit id="09c592e8e72f8e8c38f8b29004ae767bc0ce7251" translate="yes" xml:space="preserve">
          <source>The following example illustrates how any arguments besides &lt;em&gt;days&lt;/em&gt;, &lt;em&gt;seconds&lt;/em&gt; and &lt;em&gt;microseconds&lt;/em&gt; are &amp;ldquo;merged&amp;rdquo; and normalized into those three resulting attributes:</source>
          <target state="translated">次の例は、&lt;em&gt;days&lt;/em&gt;、&lt;em&gt;seconds&lt;/em&gt;、および&lt;em&gt;microseconds&lt;/em&gt;以外の引数がどのように「マージ」され、これらの3つの属性に正規化されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="473a235bcb270a8b7bf0781c5cd2588bed3305f5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how coroutines can intercept the cancellation request:</source>
          <target state="translated">以下の例では、コルーチンがどのようにしてキャンセル要求を傍受することができるかを示しています。</target>
        </trans-unit>
        <trans-unit id="5f9f5db6889dd345007e3618d45dca48718d28ec" translate="yes" xml:space="preserve">
          <source>The following example illustrates the most common usage scenario:</source>
          <target state="translated">以下の例は、最も一般的な使用例を示しています。</target>
        </trans-unit>
        <trans-unit id="c125f0fb4b508646178c139c8b90c2cd7e59b967" translate="yes" xml:space="preserve">
          <source>The following example included in the &lt;code&gt;Lib/xmlrpc/server.py&lt;/code&gt; module shows a server allowing dotted names and registering a multicall function.</source>
          <target state="translated">&lt;code&gt;Lib/xmlrpc/server.py&lt;/code&gt; モジュールに含まれている次の例は、ドット表記名を許可し、マルチコール関数を登録するサーバーを示しています。</target>
        </trans-unit>
        <trans-unit id="a815f49a1b6e8791aa8e0e5716a50c9445ca6e15" translate="yes" xml:space="preserve">
          <source>The following example reads the resulting pickled data.</source>
          <target state="translated">以下の例では、結果として得られた漬け込みデータを読み込んでいます。</target>
        </trans-unit>
        <trans-unit id="e969b44471e10e6ec4169ca5098e2f658d20ed5c" translate="yes" xml:space="preserve">
          <source>The following example records some hostnames and a corresponding title, and then prints out the contents of the database:</source>
          <target state="translated">以下の例では、いくつかのホスト名とそれに対応するタイトルを記録し、データベースの内容をプリントアウトしています。</target>
        </trans-unit>
        <trans-unit id="d4f2f9424de8830be3359c54ab8840c0691aa87c" translate="yes" xml:space="preserve">
          <source>The following example shows a custom collation that sorts &amp;ldquo;the wrong way&amp;rdquo;:</source>
          <target state="translated">次の例は、「間違った方法」でソートするカスタム照合を示しています。</target>
        </trans-unit>
        <trans-unit id="18fb8bc80d8c8ffdcc48d97894d2b3372d1bb899" translate="yes" xml:space="preserve">
          <source>The following example shows a simple use of &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; to display all the files (excluding directories) in the given &lt;em&gt;path&lt;/em&gt; that don&amp;rsquo;t start with &lt;code&gt;'.'&lt;/code&gt;. The &lt;code&gt;entry.is_file()&lt;/code&gt; call will generally not make an additional system call:</source>
          <target state="translated">次の例は、&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;'.'&lt;/code&gt; 始まらない特定の&lt;em&gt;パス&lt;/em&gt;内のすべてのファイル（ディレクトリを除く）を表示する方法を示しています。。 &lt;code&gt;entry.is_file()&lt;/code&gt; の呼び出しは、一般的に、追加のシステムコールをすることはありません。</target>
        </trans-unit>
        <trans-unit id="974861a110f79768420c0b56aa2cea90629919d4" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; can be used to compare three different expressions:</source>
          <target state="translated">次の例は、&lt;a href=&quot;#timeit-command-line-interface&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;を使用して3つの異なる式を比較する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3f24f10a54f470bebf08211935bfc4932125efae" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; can be used to create an executable archive from a directory containing Python code. When run, the archive will execute the &lt;code&gt;main&lt;/code&gt; function from the module &lt;code&gt;myapp&lt;/code&gt; in the archive.</source>
          <target state="translated">次の例は、&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;を使用して、Pythonコードを含むディレクトリから実行可能アーカイブを作成する方法を示しています。実行すると、アーカイブはアーカイブ内のモジュール &lt;code&gt;myapp&lt;/code&gt; から &lt;code&gt;main&lt;/code&gt; 関数を実行します。</target>
        </trans-unit>
        <trans-unit id="5387717e46daa1d1fb09309d90ec9017ac4aeae0" translate="yes" xml:space="preserve">
          <source>The following example shows the difference between &lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt;&lt;code&gt;parse_known_args()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt;: the former returns &lt;code&gt;['2',
'3']&lt;/code&gt; as unparsed arguments, while the latter collects all the positionals into &lt;code&gt;rest&lt;/code&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt; &lt;code&gt;parse_known_args()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;の違いを示しています &lt;code&gt;['2', '3']&lt;/code&gt; 前者は、解析されていない引数として['2'、 '3']を返し、後者はすべての定位置を &lt;code&gt;rest&lt;/code&gt; 収集します。</target>
        </trans-unit>
        <trans-unit id="09bc38c527d29e07030d23816d50a18331ddce5c" translate="yes" xml:space="preserve">
          <source>The following example shows the different ways to print and format the stack:</source>
          <target state="translated">次の例では、スタックを印刷してフォーマットするためのさまざまな方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e28ec9102e645592cb8e03af31b2b0218080391d" translate="yes" xml:space="preserve">
          <source>The following example uses an explicitly specified HTTP proxy, overriding environment settings:</source>
          <target state="translated">以下の例では、明示的に指定された HTTP プロキシを使用し、環境設定をオーバーライドしています。</target>
        </trans-unit>
        <trans-unit id="51523232557ef0a616ce3c18bbdfaebe0e359676" translate="yes" xml:space="preserve">
          <source>The following example uses no proxies at all, overriding environment settings:</source>
          <target state="translated">次の例では、環境設定をオーバーライドしてプロキシを全く使用していません。</target>
        </trans-unit>
        <trans-unit id="36336aa66464423853a80695f8df9ad8c463df59" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;os#dir-fd&quot;&gt;dir_fd&lt;/a&gt; parameter of the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function to open a file relative to a given directory:</source>
          <target state="translated">次の例では、&lt;a href=&quot;os#dir-fd&quot;&gt;os.open &lt;/a&gt;&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;関数のdir_fdパラメータを使用して、特定のディレクトリに関連するファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="11a904405145e91622a82db01f34bc213af70e4d" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;POST&lt;/code&gt; method instead. Note that params output from urlencode is encoded to bytes before it is sent to urlopen as data:</source>
          <target state="translated">次の例では、代わりに &lt;code&gt;POST&lt;/code&gt; メソッドを使用しています。urlencodeからのparams出力は、データとしてurlopenに送信される前にバイトにエンコードされます。</target>
        </trans-unit>
        <trans-unit id="fe0755c15884c78c133b93caaacdb7fc49baca8c" translate="yes" xml:space="preserve">
          <source>The following examples show how to time expressions that contain multiple lines. Here we compare the cost of using &lt;a href=&quot;functions#hasattr&quot;&gt;&lt;code&gt;hasattr()&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; to test for missing and present object attributes:</source>
          <target state="translated">次の例は、複数の行を含む式の時間を計測する方法を示しています。ここでは、使用してのコスト比較&lt;a href=&quot;functions#hasattr&quot;&gt; &lt;code&gt;hasattr()&lt;/code&gt; &lt;/a&gt;対を&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt;行方不明と現在のオブジェクト属性のテストに：</target>
        </trans-unit>
        <trans-unit id="07e37073905bea7c4eb74a69c1d1c47655907bae" translate="yes" xml:space="preserve">
          <source>The following exception classes are defined in the &lt;a href=&quot;#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">次の例外クラスが&lt;a href=&quot;#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。</target>
        </trans-unit>
        <trans-unit id="d4a4983aecf7afdeeb3354953e0b0515cf7a965b" translate="yes" xml:space="preserve">
          <source>The following exception classes are defined in the &lt;a href=&quot;#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">次の例外クラスが&lt;a href=&quot;#module-mailbox&quot;&gt; &lt;code&gt;mailbox&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。</target>
        </trans-unit>
        <trans-unit id="56731f15f7a9d03e09bf280a271931a72d17e445" translate="yes" xml:space="preserve">
          <source>The following exception is also defined:</source>
          <target state="translated">また、以下のような例外も定義されています。</target>
        </trans-unit>
        <trans-unit id="da86b38f78af4156bc5b283d1b568dd9bea03abc" translate="yes" xml:space="preserve">
          <source>The following exception is defined:</source>
          <target state="translated">以下のような例外が定義されています。</target>
        </trans-unit>
        <trans-unit id="8219e18afa673e0330df877fcabe377a8af796cc" translate="yes" xml:space="preserve">
          <source>The following exceptions are kept for compatibility with previous versions; starting from Python 3.3, they are aliases of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下の例外は、以前のバージョンとの互換性のために残されています。Python 3.3以降、これらは&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="d9625c47947897978d56fe5ccc3cc2b12128ad44" translate="yes" xml:space="preserve">
          <source>The following exceptions are raised as appropriate:</source>
          <target state="translated">以下のような例外を適宜提起します。</target>
        </trans-unit>
        <trans-unit id="2fc99860efaf397b22c0734ca264d2f5c8cebed9" translate="yes" xml:space="preserve">
          <source>The following exceptions are raised by &lt;a href=&quot;#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; as appropriate:</source>
          <target state="translated">以下の例外は、必要に応じて&lt;a href=&quot;#module-urllib.error&quot;&gt; &lt;code&gt;urllib.error&lt;/code&gt; &lt;/a&gt;によって発生します。</target>
        </trans-unit>
        <trans-unit id="919505ce9e2b1eb1bd2317ab625de8404a8f9a85" translate="yes" xml:space="preserve">
          <source>The following exceptions are subclasses of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, they get raised depending on the system error code.</source>
          <target state="translated">次の例外は&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;サブクラスであり、システムエラーコードに応じて発生します。</target>
        </trans-unit>
        <trans-unit id="3234c73e5179ec0bf51b9851151a512eff6798cd" translate="yes" xml:space="preserve">
          <source>The following exceptions are the exceptions that are usually raised.</source>
          <target state="translated">通常は以下のような例外が出てきます。</target>
        </trans-unit>
        <trans-unit id="6cac3069b88d1e924825a076fc095f0bc160c839" translate="yes" xml:space="preserve">
          <source>The following exceptions are used as warning categories; see the &lt;a href=&quot;warnings#warning-categories&quot;&gt;Warning Categories&lt;/a&gt; documentation for more details.</source>
          <target state="translated">以下の例外は警告カテゴリーとして使用されます。詳細については、&lt;a href=&quot;warnings#warning-categories&quot;&gt;警告カテゴリの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="bf34ea7d31725235d03d88d5679992bde7777bfe" translate="yes" xml:space="preserve">
          <source>The following exceptions are used mostly as base classes for other exceptions.</source>
          <target state="translated">以下の例外は、ほとんどの場合、他の例外の基底クラスとして使用されます。</target>
        </trans-unit>
        <trans-unit id="3a03745ebccf67a5017fa4eb4e8afc477e8486f4" translate="yes" xml:space="preserve">
          <source>The following exit codes are defined and can be used with &lt;a href=&quot;#os._exit&quot;&gt;&lt;code&gt;_exit()&lt;/code&gt;&lt;/a&gt;, although they are not required. These are typically used for system programs written in Python, such as a mail server&amp;rsquo;s external command delivery program.</source>
          <target state="translated">次の終了コードが定義されており、必須ではありませんが、&lt;a href=&quot;#os._exit&quot;&gt; &lt;code&gt;_exit()&lt;/code&gt; &lt;/a&gt;で使用できます。これらは通常、メールサーバーの外部コマンド配信プログラムなど、Pythonで記述されたシステムプログラムに使用されます。</target>
        </trans-unit>
        <trans-unit id="07a35a3673af42652ef6cc9a9b0cd0d2eb1a9b0f" translate="yes" xml:space="preserve">
          <source>The following flags can also be used in the &lt;em&gt;mode&lt;/em&gt; argument of &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次のフラグは、&lt;a href=&quot;os#os.chmod&quot;&gt; &lt;code&gt;os.chmod()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;モード&lt;/em&gt;引数でも使用でき&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="50fdab17f4c511a2bd981d9f16416d6cbc1642e0" translate="yes" xml:space="preserve">
          <source>The following flags can be used in the &lt;em&gt;flags&lt;/em&gt; argument of &lt;a href=&quot;os#os.chflags&quot;&gt;&lt;code&gt;os.chflags()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;os#os.chflags&quot;&gt; &lt;code&gt;os.chflags()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt; flags&lt;/em&gt;引数では、次のフラグを使用できます。</target>
        </trans-unit>
        <trans-unit id="0d2b677018a5fc91e1c52ff16415ab440b896d28" translate="yes" xml:space="preserve">
          <source>The following format &lt;code&gt;'llh0l'&lt;/code&gt; specifies two pad bytes at the end, assuming longs are aligned on 4-byte boundaries:</source>
          <target state="translated">次のフォーマット &lt;code&gt;'llh0l'&lt;/code&gt; は、longが4バイト境界に整列していると仮定して、末尾に2つの埋め込みバイトを指定します。</target>
        </trans-unit>
        <trans-unit id="2dd6a0fd41fecfe4d17317d4204e40f9818a4207" translate="yes" xml:space="preserve">
          <source>The following function has been added as a useful debugging tool. It should &lt;em&gt;not&lt;/em&gt; be considered part of the supported public interface for the package.</source>
          <target state="translated">便利なデバッグツールとして以下の機能を追加しました。パッケージでサポートされているパブリックインターフェイスの一部と見なすべきではあり&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="da305af26f9cbcbeb6c5f275e457fad8bb285a85" translate="yes" xml:space="preserve">
          <source>The following function is the primary interface of this module:</source>
          <target state="translated">以下の機能がこのモジュールの主なインタフェースです。</target>
        </trans-unit>
        <trans-unit id="ff45ffb8d9411a36a16d6d809eaa7c1a78d7dbc9" translate="yes" xml:space="preserve">
          <source>The following function sends the list of file descriptors &lt;em&gt;fds&lt;/em&gt; over an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket, on systems which support the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism. See also &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の関数は、ファイルディスクリプタのリスト送信&lt;em&gt;FDSを&lt;/em&gt;かけ&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; を&lt;/a&gt;サポートしているシステムで、ソケット &lt;code&gt;SCM_RIGHTS&lt;/code&gt; のメカニズムを。&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="4e3d6b50f1cb6afc139200a4d017ad6f95613306" translate="yes" xml:space="preserve">
          <source>The following function takes either a single-character string or integer value; it returns a string.</source>
          <target state="translated">以下の関数は、1文字の文字列または整数値のいずれかを受け取り、文字列を返します。</target>
        </trans-unit>
        <trans-unit id="13cf5d0144d472efbe8d37582b67d12dc02f8fbc" translate="yes" xml:space="preserve">
          <source>The following functions all create &lt;a href=&quot;#socket-objects&quot;&gt;socket objects&lt;/a&gt;.</source>
          <target state="translated">次の関数はすべて&lt;a href=&quot;#socket-objects&quot;&gt;ソケットオブジェクトを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="a90899ab2a1b3723f7dc7f39dfe8546f510b2db4" translate="yes" xml:space="preserve">
          <source>The following functions and classes are ported from the Python 2 module &lt;code&gt;urllib&lt;/code&gt; (as opposed to &lt;code&gt;urllib2&lt;/code&gt;). They might become deprecated at some point in the future.</source>
          <target state="translated">次の関数とクラスは、Python 2モジュール &lt;code&gt;urllib&lt;/code&gt; （ &lt;code&gt;urllib2&lt;/code&gt; ではなく）から移植されています。将来的には廃止される可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e205f409e70ccbdada46ad7374f5371cb998862" translate="yes" xml:space="preserve">
          <source>The following functions are available.</source>
          <target state="translated">以下のような機能があります。</target>
        </trans-unit>
        <trans-unit id="50b9a1d0acd56c19cd33c52597cd720ec528f31a" translate="yes" xml:space="preserve">
          <source>The following functions are defined:</source>
          <target state="translated">以下の機能が定義されています。</target>
        </trans-unit>
        <trans-unit id="b90dccda72ce0f29d283b6adf62da389efc25651" translate="yes" xml:space="preserve">
          <source>The following functions are deprecated:</source>
          <target state="translated">以下の関数は非推奨です。</target>
        </trans-unit>
        <trans-unit id="fc5bf00bc0ec88b71236977c192f4ac766952ac9" translate="yes" xml:space="preserve">
          <source>The following functions are provided by this module. Except when explicitly noted otherwise, all return values are floats.</source>
          <target state="translated">このモジュールでは、以下の関数が提供されています。明示的に指定されている場合を除き、すべての戻り値はフロートです。</target>
        </trans-unit>
        <trans-unit id="b8a73287c5b8efe7a8f104d252583b6712796202" translate="yes" xml:space="preserve">
          <source>The following functions are provided:</source>
          <target state="translated">以下の機能を備えています。</target>
        </trans-unit>
        <trans-unit id="27440c6f6aa8e07ded29a2c00b0e5f21f2502954" translate="yes" xml:space="preserve">
          <source>The following functions can be used to convert from the native rectangular coordinates to polar coordinates and back.</source>
          <target state="translated">以下の関数を使用して、ネイティブの直方体座標から極座標への変換を行ったり戻したりすることができます。</target>
        </trans-unit>
        <trans-unit id="7138bd79e2aa0cd1f1706edff9a21ee42719a2b2" translate="yes" xml:space="preserve">
          <source>The following functions can be used to get and set the policy for the current process:</source>
          <target state="translated">現在のプロセスのポリシーを取得・設定するには、以下の関数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="1722423e811c5f2d1e9190b66ddd0937f6d483ea" translate="yes" xml:space="preserve">
          <source>The following functions configure the logging module. They are located in the &lt;a href=&quot;#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt; module. Their use is optional &amp;mdash; you can configure the logging module using these functions or by making calls to the main API (defined in &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; itself) and defining handlers which are declared either in &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下の関数は、ロギングモジュールを構成します。これらは、&lt;a href=&quot;#module-logging.config&quot;&gt; &lt;code&gt;logging.config&lt;/code&gt; &lt;/a&gt;モジュールにあります。これらの使用はオプションです。これらの関数を使用するか、メインAPI（&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;自体で定義）を呼び出し、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;で宣言されるハンドラーを定義することにより、ロギングモジュールを構成できます。</target>
        </trans-unit>
        <trans-unit id="298eed0d1e6e397ae4710411294cadbb3b684a71" translate="yes" xml:space="preserve">
          <source>The following functions generate specific real-valued distributions. Function parameters are named after the corresponding variables in the distribution&amp;rsquo;s equation, as used in common mathematical practice; most of these equations can be found in any statistics text.</source>
          <target state="translated">次の関数は、特定の実数値分布を生成します。関数パラメーターは、一般的な数学的手法で使用されているように、分布の方程式の対応する変数にちなんで名付けられています。これらの方程式のほとんどは、統計テキストにあります。</target>
        </trans-unit>
        <trans-unit id="5d51dc40e66b7a6cd9fea075650c420c4c2f1ce7" translate="yes" xml:space="preserve">
          <source>The following functions operate on a global history list:</source>
          <target state="translated">以下の関数は、グローバル履歴リストに対して動作します。</target>
        </trans-unit>
        <trans-unit id="7759694e086b90baaa66ee395073e6f07cb02b9f" translate="yes" xml:space="preserve">
          <source>The following functions operate on a history file:</source>
          <target state="translated">以下の機能は、履歴ファイルに対して動作します。</target>
        </trans-unit>
        <trans-unit id="64789b1037502a079a852b4b2b8db153ea6b7a62" translate="yes" xml:space="preserve">
          <source>The following functions operate on the line buffer:</source>
          <target state="translated">ラインバッファに対しては、以下の機能が動作します。</target>
        </trans-unit>
        <trans-unit id="43da4d98b6c5375698601c186a476296083ea958" translate="yes" xml:space="preserve">
          <source>The following functions relate to implementing a custom word completion function. This is typically operated by the Tab key, and can suggest and automatically complete a word being typed. By default, Readline is set up to be used by &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; to complete Python identifiers for the interactive interpreter. If the &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module is to be used with a custom completer, a different set of word delimiters should be set.</source>
          <target state="translated">次の関数は、カスタム単語補完関数の実装に関連しています。これは通常、Tabキーで操作し、入力中の単語を提案して自動的に補完できます。デフォルトでは、Readlineは対話型インタープリターのPython識別子を完成させるために&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;によって使用されるように設定されています。&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;モジュールをカスタムコンプリーターで使用する場合は、別の単語区切り文字のセットを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="92323350568081e68e83ac2a59f8aae14a2f26c5" translate="yes" xml:space="preserve">
          <source>The following functions relate to the init file and user configuration:</source>
          <target state="translated">以下の関数は、initファイルとユーザ設定に関連しています。</target>
        </trans-unit>
        <trans-unit id="4fcb3b8d729958b242cb8efd022b8f92cc756aa2" translate="yes" xml:space="preserve">
          <source>The following functions take a process status code as returned by &lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; as a parameter. They may be used to determine the disposition of a process.</source>
          <target state="translated">次の関数は、&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; から&lt;/a&gt;返されたプロセスステータスコードをパラメーターとして受け取ります。それらは、プロセスの性質を決定するために使用できます。</target>
        </trans-unit>
        <trans-unit id="beb00315a2f748529b36d585bd95fdcf3d54dd82" translate="yes" xml:space="preserve">
          <source>The following functions use the global state created by &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;fileinput.input()&lt;/code&gt;&lt;/a&gt;; if there is no active state, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">次の関数は、&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;fileinput.input()&lt;/code&gt; &lt;/a&gt;によって作成されたグローバル状態を使用します。アクティブな状態がない場合、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="34f703b1e0e9c15c0897a1841ee395a9ceb30302" translate="yes" xml:space="preserve">
          <source>The following image types are recognized, as listed below with the return value from &lt;a href=&quot;#imghdr.what&quot;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下にリストされているように、&lt;a href=&quot;#imghdr.what&quot;&gt; &lt;code&gt;what()&lt;/code&gt; &lt;/a&gt;からの戻り値とともに、次の画像タイプが認識されます。</target>
        </trans-unit>
        <trans-unit id="280be161783a14c0920bb19c3ae869ff10b8f196" translate="yes" xml:space="preserve">
          <source>The following instances of &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; provide defaults suitable for specific application domains. Note that in the future the behavior of these instances (in particular the &lt;code&gt;HTTP&lt;/code&gt; instance) may be adjusted to conform even more closely to the RFCs relevant to their domains.</source>
          <target state="translated">次の&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; の&lt;/a&gt;インスタンスは、特定のアプリケーションドメインに適したデフォルトを提供します。今後、これらのインスタンス（特に &lt;code&gt;HTTP&lt;/code&gt; インスタンス）の動作は、それらのドメインに関連するRFCにさらに厳密に準拠するように調整される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="36786723f378fafa3d1898954065c6c261f994dc" translate="yes" xml:space="preserve">
          <source>The following interfaces have no implementation in &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次のインターフェースは&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; に&lt;/a&gt;実装されていません。</target>
        </trans-unit>
        <trans-unit id="a2d16d61637d3640bacadcaa73df4c60909570ae" translate="yes" xml:space="preserve">
          <source>The following is a list of all the format codes that the 1989 C standard requires, and these work on all platforms with a standard C implementation.</source>
          <target state="translated">以下は1989年のC標準が要求するすべてのフォーマットコードのリストで、これらは標準Cの実装を持つすべてのプラットフォームで動作します。</target>
        </trans-unit>
        <trans-unit id="9bbcfdfa416ee0a8a6d18043dc1c0fc4e3673e2d" translate="yes" xml:space="preserve">
          <source>The following is an example of using magic methods with the ordinary Mock class:</source>
          <target state="translated">以下は、通常のMockクラスでマジックメソッドを使用した例です。</target>
        </trans-unit>
        <trans-unit id="f2c5d34f2d1e1f79cbe6149cbd185555a4725b75" translate="yes" xml:space="preserve">
          <source>The following item options may be specified for items in the insert and item widget commands.</source>
          <target state="translated">以下の項目オプションは、挿入コマンドと項目ウィジェットコマンドで項目に対して指定することができます。</target>
        </trans-unit>
        <trans-unit id="e29a9adf004c9f7ac2d7a89f0143bc9acb153b58" translate="yes" xml:space="preserve">
          <source>The following keyword arguments are supported.</source>
          <target state="translated">以下のキーワード引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="5be2e474d40be9b697f7ce09f1abb8f435b1c3b4" translate="yes" xml:space="preserve">
          <source>The following low-level functions can be used to get, set, or create an event loop:</source>
          <target state="translated">以下の低レベル関数を使用して、イベントループの取得、設定、または作成を行うことができます。</target>
        </trans-unit>
        <trans-unit id="b61e7817f137704c9eeac3b5ade762440604c20d" translate="yes" xml:space="preserve">
          <source>The following method is also provided:</source>
          <target state="translated">また、以下のような方法も用意されています。</target>
        </trans-unit>
        <trans-unit id="3c4bd14872b021d62effe80ccc7b6722ce458bfd" translate="yes" xml:space="preserve">
          <source>The following methods MUST be overridden in a subclass:</source>
          <target state="translated">以下のメソッドは、サブクラスでオーバーライドしなければなりません(MUST)。</target>
        </trans-unit>
        <trans-unit id="0c9a3fab840f80e792969e1c6d30487fdf15285a" translate="yes" xml:space="preserve">
          <source>The following methods are also available:</source>
          <target state="translated">また、以下のような方法もあります。</target>
        </trans-unit>
        <trans-unit id="5d1a84015cfed0b396f9aadd71cc3704958e67dc" translate="yes" xml:space="preserve">
          <source>The following methods are available:</source>
          <target state="translated">以下のような方法があります。</target>
        </trans-unit>
        <trans-unit id="6da18558c268f3b787fcf73b6e36956c31ab86fc" translate="yes" xml:space="preserve">
          <source>The following methods are called when data or markup elements are encountered and they are meant to be overridden in a subclass. The base class implementations do nothing (except for &lt;a href=&quot;#html.parser.HTMLParser.handle_startendtag&quot;&gt;&lt;code&gt;handle_startendtag()&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">次のメソッドは、データまたはマークアップ要素が検出されたときに呼び出され、サブクラスでオーバーライドされることを意図しています。基本クラスの実装は何もしません（&lt;a href=&quot;#html.parser.HTMLParser.handle_startendtag&quot;&gt; &lt;code&gt;handle_startendtag()&lt;/code&gt; &lt;/a&gt;を除く）：</target>
        </trans-unit>
        <trans-unit id="e4de795b18dd4b4fd7bcd1a2167543959de3c0cf" translate="yes" xml:space="preserve">
          <source>The following methods are overridden from the base class implementation:</source>
          <target state="translated">以下のメソッドは、ベースクラスの実装からオーバーライドされています。</target>
        </trans-unit>
        <trans-unit id="126480cdf2831b1516aa5168ce4b513b07ee9449" translate="yes" xml:space="preserve">
          <source>The following methods are public:</source>
          <target state="translated">以下のメソッドは公開されています。</target>
        </trans-unit>
        <trans-unit id="487dc7006143997609be279701723a8c2465f409" translate="yes" xml:space="preserve">
          <source>The following methods describe &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s public interface, and so all may be overridden in subclasses. It also defines several public attributes that can be used by clients to inspect the parsed request.</source>
          <target state="translated">次のメソッドは&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;のパブリックインターフェースを説明しているため、すべてサブクラスでオーバーライドできます。また、クライアントが解析されたリクエストを検査するために使用できるいくつかのパブリック属性も定義します。</target>
        </trans-unit>
        <trans-unit id="63d90593d14145bbb48645d676dbce7a50e1b653" translate="yes" xml:space="preserve">
          <source>The following methods each map to exactly one &lt;code&gt;ioctl()&lt;/code&gt; system call. The correspondence is obvious: for example, &lt;code&gt;setfmt()&lt;/code&gt; corresponds to the &lt;code&gt;SNDCTL_DSP_SETFMT&lt;/code&gt; ioctl, and &lt;code&gt;sync()&lt;/code&gt; to &lt;code&gt;SNDCTL_DSP_SYNC&lt;/code&gt; (this can be useful when consulting the OSS documentation). If the underlying &lt;code&gt;ioctl()&lt;/code&gt; fails, they all raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のメソッドは、それぞれ1つの &lt;code&gt;ioctl()&lt;/code&gt; システムコールにマップされます。対応が明らかである：例えば、 &lt;code&gt;setfmt()&lt;/code&gt; に対応 &lt;code&gt;SNDCTL_DSP_SETFMT&lt;/code&gt; の IOCTL、および &lt;code&gt;sync()&lt;/code&gt; に &lt;code&gt;SNDCTL_DSP_SYNC&lt;/code&gt; （OSSのドキュメントを調べる場合に有用であることができます）。基礎となる &lt;code&gt;ioctl()&lt;/code&gt; が失敗した場合、それらはすべて&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="19638ef10a7443439dd157547b9556e83f68ed56" translate="yes" xml:space="preserve">
          <source>The following methods exist but are &lt;em&gt;not&lt;/em&gt; supported as they are either in use by mock, can&amp;rsquo;t be set dynamically, or can cause problems:</source>
          <target state="translated">次のメソッドは存在しますが、モックで使用されているか、動的に設定できないか、問題を引き起こす可能性がある&lt;em&gt;ため、&lt;/em&gt;サポートされていません。</target>
        </trans-unit>
        <trans-unit id="5ba539dea251194908a930ae6d4de0259644b7c9" translate="yes" xml:space="preserve">
          <source>The following methods implement a mapping-like interface for accessing the message&amp;rsquo;s &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; headers. Note that there are some semantic differences between these methods and a normal mapping (i.e. dictionary) interface. For example, in a dictionary there are no duplicate keys, but here there may be duplicate message headers. Also, in dictionaries there is no guaranteed order to the keys returned by &lt;a href=&quot;#email.message.Message.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt;, but in a &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object, headers are always returned in the order they appeared in the original message, or were added to the message later. Any header deleted and then re-added are always appended to the end of the header list.</source>
          <target state="translated">次のメソッドは、メッセージの&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;ヘッダーにアクセスするためのマッピングのようなインターフェースを実装しています。これらのメソッドと通常のマッピング（ディクショナリ）インターフェイスとの間には、いくつかの意味上の違いがあることに注意してください。たとえば、辞書には重複するキーはありませんが、ここには重複するメッセージヘッダーがある場合があります。また、辞書では&lt;a href=&quot;#email.message.Message.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;によって返されるキーの順序は保証されていませんが、&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトでは、ヘッダーは常に元のメッセージに表示された順序で返されるか、後でメッセージに追加されました。削除されてから再度追加されたヘッダーは、常にヘッダーリストの最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="2bcb89a371cdba7f9ba387d3a82557337285cf40" translate="yes" xml:space="preserve">
          <source>The following methods implement the mapping-like interface for accessing the message&amp;rsquo;s headers. Note that there are some semantic differences between these methods and a normal mapping (i.e. dictionary) interface. For example, in a dictionary there are no duplicate keys, but here there may be duplicate message headers. Also, in dictionaries there is no guaranteed order to the keys returned by &lt;a href=&quot;#email.message.EmailMessage.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt;, but in an &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object, headers are always returned in the order they appeared in the original message, or in which they were added to the message later. Any header deleted and then re-added is always appended to the end of the header list.</source>
          <target state="translated">次のメソッドは、メッセージのヘッダーにアクセスするためのマッピングのようなインターフェースを実装しています。これらのメソッドと通常のマッピング（ディクショナリ）インターフェイスとの間には、いくつかの意味上の違いがあることに注意してください。たとえば、辞書には重複するキーはありませんが、ここには重複するメッセージヘッダーがある場合があります。また、ディクショナリでは、&lt;a href=&quot;#email.message.EmailMessage.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;によって返されるキーの順序は保証されていませんが、&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;オブジェクトでは、ヘッダーは常に、元のメッセージに表示された順序、または後でメッセージに追加された順序で返されます。削除されてから再度追加されたヘッダーは、常にヘッダーリストの最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="a03fef5945c0da211457269f86e4849454bed953" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; normally don&amp;rsquo;t need to be overridden.</source>
          <target state="translated">通常、&lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt;の以下のメソッドをオーバーライドする必要はありません。</target>
        </trans-unit>
        <trans-unit id="37c544609e6c6a5d1717ba9961dd7becb0ee90d3" translate="yes" xml:space="preserve">
          <source>The following methods of the &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; class are used to maintain the internal data structures, and may be extended in subclasses to support additional reporting requirements. This is particularly useful in building tools which support interactive reporting while tests are being run.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;クラスの以下のメソッドは、内部データ構造を維持するために使用され、追加のレポート要件をサポートするためにサブクラスで拡張できます。これは、テストの実行中にインタラクティブレポートをサポートするツールを構築する場合に特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="6fc4c0cac153b54cd58567b6bf639a9e7367be81" translate="yes" xml:space="preserve">
          <source>The following methods on bytes and bytearray objects assume the use of ASCII compatible binary formats and should not be applied to arbitrary binary data. Note that all of the bytearray methods in this section do &lt;em&gt;not&lt;/em&gt; operate in place, and instead produce new objects.</source>
          <target state="translated">次のbytesおよびbytearrayオブジェクトのメソッドは、ASCII互換のバイナリ形式の使用を想定しており、任意のバイナリデータには適用しないでください。このセクションのすべてのbytearrayメソッドは適切に機能する&lt;em&gt;わけで&lt;/em&gt;は&lt;em&gt;なく&lt;/em&gt;、代わりに新しいオブジェクトを生成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="84d88c6a5fdc3d75ff22b7df602b0699287c51d7" translate="yes" xml:space="preserve">
          <source>The following methods on bytes and bytearray objects can be used with arbitrary binary data.</source>
          <target state="translated">バイトおよびバイトアレイオブジェクトに対する以下のメソッドは、任意のバイナリデータで使用することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
