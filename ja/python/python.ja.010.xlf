<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="9e04e3f91bf11b867e737db3820385321c5dd5a3" translate="yes" xml:space="preserve">
          <source>Force bytes held in the buffer into the raw stream. A &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; should be raised if the raw stream blocks.</source>
          <target state="translated">バッファに保持されているバイトをrawストリームに強制します。A &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; は&lt;/a&gt;、生のストリームブロック場合に発生する必要があります。</target>
        </trans-unit>
        <trans-unit id="3814643afec1943c4c3295af6d5883427e7464b5" translate="yes" xml:space="preserve">
          <source>Force processing of all buffered data as if it were followed by an end-of-file mark. This method may be redefined by a derived class to define additional processing at the end of the input, but the redefined version should always call the &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; base class method &lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バッファリングされたすべてのデータを、ファイルの終わりマークが後に続くかのように強制的に処理します。このメソッドは、入力の最後に追加の処理を定義するために派生クラスによって再定義される場合がありますが、再定義されたバージョンは常に&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;基本クラスメソッド&lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="af599334f590af897809afaeb762277ded4e96df" translate="yes" xml:space="preserve">
          <source>Force rebuild even if timestamps are up-to-date.</source>
          <target state="translated">タイムスタンプが最新であっても強制的に再構築する。</target>
        </trans-unit>
        <trans-unit id="9a64202427e8fe21214e70464bd1aec2542b9f21" translate="yes" xml:space="preserve">
          <source>Force the &lt;code&gt;malloc()&lt;/code&gt; heap to clean itself up and return unused blocks to the operating system. On failure, this raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;malloc()&lt;/code&gt; ヒープを強制的にクリーンアップし、未使用のブロックをオペレーティングシステムに返します。失敗すると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="19d31fd6b2df693dc550368a6c845c371544b270" translate="yes" xml:space="preserve">
          <source>Force use of &lt;code&gt;CRAM-MD5&lt;/code&gt; authentication when identifying the client to protect the password. Will only work if the server &lt;code&gt;CAPABILITY&lt;/code&gt; response includes the phrase &lt;code&gt;AUTH=CRAM-MD5&lt;/code&gt;.</source>
          <target state="translated">パスワードを保護するためにクライアントを識別するときに &lt;code&gt;CRAM-MD5&lt;/code&gt; 認証の使用を強制します。サーバーの &lt;code&gt;CAPABILITY&lt;/code&gt; 応答に &lt;code&gt;AUTH=CRAM-MD5&lt;/code&gt; というフレーズが含まれている場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="ab13cdc95de3d7531cb31f5ddbb861e2d8b77785" translate="yes" xml:space="preserve">
          <source>Force write of everything to disk.</source>
          <target state="translated">ディスクにすべてのものを強制的に書き込みます。</target>
        </trans-unit>
        <trans-unit id="a2d96a80900bc13facf56d7742e8d8ff57e15a8c" translate="yes" xml:space="preserve">
          <source>Force write of file with filedescriptor &lt;em&gt;fd&lt;/em&gt; to disk. Does not force update of metadata.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;を持つファイルをディスクに強制的に書き込みます。メタデータの更新を強制しません。</target>
        </trans-unit>
        <trans-unit id="4c49957cff34733d16e38876ce4dd54c1c1dc339" translate="yes" xml:space="preserve">
          <source>Force write of file with filedescriptor &lt;em&gt;fd&lt;/em&gt; to disk. On Unix, this calls the native &lt;code&gt;fsync()&lt;/code&gt; function; on Windows, the MS &lt;code&gt;_commit()&lt;/code&gt; function.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;を持つファイルをディスクに強制的に書き込みます。Unixでは、これはネイティブの &lt;code&gt;fsync()&lt;/code&gt; 関数を呼び出します。Windowsでは、MS &lt;code&gt;_commit()&lt;/code&gt; 関数。</target>
        </trans-unit>
        <trans-unit id="b57f0c15791c6915cb3fe418d16a695f3e93406f" translate="yes" xml:space="preserve">
          <source>Forces the field to be centered within the available space.</source>
          <target state="translated">空いているスペース内でフィールドを強制的に中央に配置します。</target>
        </trans-unit>
        <trans-unit id="89bf2d916edc333230584e34f64cea573d2cc13c" translate="yes" xml:space="preserve">
          <source>Forces the field to be left-aligned within the available space (this is the default for most objects).</source>
          <target state="translated">利用可能なスペース内でフィールドを強制的に左揃えにします(ほとんどのオブジェクトではこれがデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="72cd2faf3a66abe4dfd120a3b0bee5e88182838a" translate="yes" xml:space="preserve">
          <source>Forces the field to be right-aligned within the available space (this is the default for numbers).</source>
          <target state="translated">利用可能なスペース内でフィールドを強制的に右揃えにします(これは数値の場合のデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="02886633a6050534b2f499dba88d89c2fa0ba3d6" translate="yes" xml:space="preserve">
          <source>Forces the padding to be placed after the sign (if any) but before the digits. This is used for printing fields in the form &amp;lsquo;+000000120&amp;rsquo;. This alignment option is only valid for numeric types. It becomes the default when &amp;lsquo;0&amp;rsquo; immediately precedes the field width.</source>
          <target state="translated">符号（存在する場合）の後、数字の前にパディングを配置します。これは、「+ 000000120」の形式でフィールドを印刷するために使用されます。この配置オプションは、数値型に対してのみ有効です。フィールド幅の直前に '0'があると、これがデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="92a345d72de9b39978fa7f3c0773802f918e7f9d" translate="yes" xml:space="preserve">
          <source>Foreign functions</source>
          <target state="translated">外部機能</target>
        </trans-unit>
        <trans-unit id="e9b0e4d2b6b7914c709024acdcc872d645aad7b3" translate="yes" xml:space="preserve">
          <source>Foreign functions can also be created by instantiating function prototypes. Function prototypes are similar to function prototypes in C; they describe a function (return type, argument types, calling convention) without defining an implementation. The factory functions must be called with the desired result type and the argument types of the function, and can be used as decorator factories, and as such, be applied to functions through the &lt;code&gt;@wrapper&lt;/code&gt; syntax. See &lt;a href=&quot;#ctypes-callback-functions&quot;&gt;Callback functions&lt;/a&gt; for examples.</source>
          <target state="translated">関数プロトタイプをインスタンス化することによって、外部関数を作成することもできます。関数プロトタイプは、Cの関数プロトタイプに似ています。実装を定義せずに関数（戻り値の型、引数の型、呼び出し規約）を記述します。ファクトリ関数は、目的の結果タイプと関数の引数タイプで呼び出す必要があり、デコレータファクトリとして使用できるため、 &lt;code&gt;@wrapper&lt;/code&gt; 構文を介して関数に適用できます。例については、&lt;a href=&quot;#ctypes-callback-functions&quot;&gt;コールバック関数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab6062a9bf3c1239139985c0532b99c45de86a25" translate="yes" xml:space="preserve">
          <source>Fork a child process, using a new pseudo-terminal as the child&amp;rsquo;s controlling terminal. Return a pair of &lt;code&gt;(pid, fd)&lt;/code&gt;, where &lt;em&gt;pid&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; in the child, the new child&amp;rsquo;s process id in the parent, and &lt;em&gt;fd&lt;/em&gt; is the file descriptor of the master end of the pseudo-terminal. For a more portable approach, use the &lt;a href=&quot;pty#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module. If an error occurs &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">新しい疑似端末を子の制御端末として使用して、子プロセスをフォークします。 &lt;code&gt;(pid, fd)&lt;/code&gt; ペアを返します。ここで、&lt;em&gt;pid&lt;/em&gt;は子では &lt;code&gt;0&lt;/code&gt; 、新しい子のプロセスIDは親で、&lt;em&gt;fd&lt;/em&gt;は疑似端末のマスター側のファイル記述子です。よりポータブルなアプローチについては、&lt;a href=&quot;pty#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;モジュールを使用してください。エラーが発生すると&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が送出されます。</target>
        </trans-unit>
        <trans-unit id="e0d97d3344fdceb7bc86849ce6036b4be1a30227" translate="yes" xml:space="preserve">
          <source>Fork a child process. Return &lt;code&gt;0&lt;/code&gt; in the child and the child&amp;rsquo;s process id in the parent. If an error occurs &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">子プロセスをフォークします。子では &lt;code&gt;0&lt;/code&gt; を、親では子のプロセスIDを返します。エラーが発生すると&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が送出されます。</target>
        </trans-unit>
        <trans-unit id="6c3f80da59ba5e11794147586cf0ae148cfe6834" translate="yes" xml:space="preserve">
          <source>Fork. Connect the child&amp;rsquo;s controlling terminal to a pseudo-terminal. Return value is &lt;code&gt;(pid, fd)&lt;/code&gt;. Note that the child gets &lt;em&gt;pid&lt;/em&gt; 0, and the &lt;em&gt;fd&lt;/em&gt; is &lt;em&gt;invalid&lt;/em&gt;. The parent&amp;rsquo;s return value is the &lt;em&gt;pid&lt;/em&gt; of the child, and &lt;em&gt;fd&lt;/em&gt; is a file descriptor connected to the child&amp;rsquo;s controlling terminal (and also to the child&amp;rsquo;s standard input and output).</source>
          <target state="translated">フォーク。子の制御端末を疑似端末に接続します。戻り値は &lt;code&gt;(pid, fd)&lt;/code&gt; です。子は&lt;em&gt;pid&lt;/em&gt; 0を取得し、&lt;em&gt;fd&lt;/em&gt;は&lt;em&gt;無効である&lt;/em&gt;ことに注意してください。親の戻り値は子の&lt;em&gt;pid&lt;/em&gt;であり、&lt;em&gt;fd&lt;/em&gt;は子の制御端末（および子の標準入出力）に接続されたファイル記述子です。</target>
        </trans-unit>
        <trans-unit id="6e6d282a9a8ae97493898a42e4495ac86a104597" translate="yes" xml:space="preserve">
          <source>Forking and threading versions of each type of server can be created using these mix-in classes. For instance, &lt;a href=&quot;#socketserver.ThreadingUDPServer&quot;&gt;&lt;code&gt;ThreadingUDPServer&lt;/code&gt;&lt;/a&gt; is created as follows:</source>
          <target state="translated">各タイプのサーバーのフォークバージョンとスレッドバージョンは、これらのミックスインクラスを使用して作成できます。たとえば、&lt;a href=&quot;#socketserver.ThreadingUDPServer&quot;&gt; &lt;code&gt;ThreadingUDPServer&lt;/code&gt; &lt;/a&gt;は次のように作成されます。</target>
        </trans-unit>
        <trans-unit id="6232d936da3d991295fc973ffc88f6d3ca50c6ac" translate="yes" xml:space="preserve">
          <source>Form Feed</source>
          <target state="translated">フォームフィード</target>
        </trans-unit>
        <trans-unit id="a8d1615368c5065046bab0898a96fbe6dca3de1c" translate="yes" xml:space="preserve">
          <source>Form Geometry Manager</source>
          <target state="translated">フォームジオメトリーマネージャー</target>
        </trans-unit>
        <trans-unit id="55550d89e7ca43740394fa9c2e706f8405aa15d0" translate="yes" xml:space="preserve">
          <source>Form feed</source>
          <target state="translated">フォームフィード</target>
        </trans-unit>
        <trans-unit id="bb19b54a8d464023b04f51da8fb6284d19d9c645" translate="yes" xml:space="preserve">
          <source>Formally, the Python zip application format is therefore:</source>
          <target state="translated">形式的には、Pythonのzipアプリケーションの形式は、したがって。</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="0b7058a284208f0fb334e10da7ad7849788c227c" translate="yes" xml:space="preserve">
          <source>Format Characters</source>
          <target state="translated">フォーマット文字</target>
        </trans-unit>
        <trans-unit id="270eba9fa5ca72ba811b960e20a70b4f961e511a" translate="yes" xml:space="preserve">
          <source>Format Paragraph</source>
          <target state="translated">フォーマットパラグラフ</target>
        </trans-unit>
        <trans-unit id="cdfbc79810d02d00dae00668258cb47d02812341" translate="yes" xml:space="preserve">
          <source>Format Specification Mini-Language</source>
          <target state="translated">形式指定ミニ言語</target>
        </trans-unit>
        <trans-unit id="e0e31adb6cc861ffe4700cf93625baf412604bf7" translate="yes" xml:space="preserve">
          <source>Format String Syntax</source>
          <target state="translated">形式 文字列構文</target>
        </trans-unit>
        <trans-unit id="f82f3ba2d1f13d26a5fb68ab9ee065f776ab30d9" translate="yes" xml:space="preserve">
          <source>Format Strings</source>
          <target state="translated">書式文字列</target>
        </trans-unit>
        <trans-unit id="edf2592d9cfc0320ac33dfd0ca3fb8b951ab5d54" translate="yes" xml:space="preserve">
          <source>Format a form in HTML.</source>
          <target state="translated">HTMLでフォームをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="fb1728865c9987d6065233b0aabfe29331bc6f32" translate="yes" xml:space="preserve">
          <source>Format a pretty argument spec from the four values returned by &lt;a href=&quot;#inspect.getargvalues&quot;&gt;&lt;code&gt;getargvalues()&lt;/code&gt;&lt;/a&gt;. The format* arguments are the corresponding optional formatting functions that are called to turn names and values into strings.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getargvalues&quot;&gt; &lt;code&gt;getargvalues()&lt;/code&gt; &lt;/a&gt;によって返された4つの値からプリティ引数仕様をフォーマットします。format *引数は、名前と値を文字列に変換するために呼び出される、対応するオプションのフォーマット関数です。</target>
        </trans-unit>
        <trans-unit id="89d6eedb8bb9193b1b9778a5ab136660fa0cf4cd" translate="yes" xml:space="preserve">
          <source>Format a pretty argument spec from the values returned by &lt;a href=&quot;#inspect.getfullargspec&quot;&gt;&lt;code&gt;getfullargspec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getfullargspec&quot;&gt; &lt;code&gt;getfullargspec()&lt;/code&gt; &lt;/a&gt;によって返された値からプリティ引数仕様をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="6684becb04a53e35be19fdc4a2836b5c2f0ba283" translate="yes" xml:space="preserve">
          <source>Format a stack trace and the exception information. The arguments have the same meaning as the corresponding arguments to &lt;a href=&quot;#traceback.print_exception&quot;&gt;&lt;code&gt;print_exception()&lt;/code&gt;&lt;/a&gt;. The return value is a list of strings, each ending in a newline and some containing internal newlines. When these lines are concatenated and printed, exactly the same text is printed as does &lt;a href=&quot;#traceback.print_exception&quot;&gt;&lt;code&gt;print_exception()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スタックトレースと例外情報をフォーマットします。引数は、&lt;a href=&quot;#traceback.print_exception&quot;&gt; &lt;code&gt;print_exception()&lt;/code&gt; の&lt;/a&gt;対応する引数と同じ意味を持っています。戻り値は文字列のリストで、それぞれが改行で終わり、一部は内部改行を含みます。これらの行が連結されて印刷されると、&lt;a href=&quot;#traceback.print_exception&quot;&gt; &lt;code&gt;print_exception()&lt;/code&gt; &lt;/a&gt;とまったく同じテキストが印刷されます。</target>
        </trans-unit>
        <trans-unit id="efb013790256b8ef5e9b3a1315d0eba0e7855b24" translate="yes" xml:space="preserve">
          <source>Format a warning the standard way. This returns a string which may contain embedded newlines and ends in a newline. &lt;em&gt;line&lt;/em&gt; is a line of source code to be included in the warning message; if &lt;em&gt;line&lt;/em&gt; is not supplied, &lt;a href=&quot;#warnings.formatwarning&quot;&gt;&lt;code&gt;formatwarning()&lt;/code&gt;&lt;/a&gt; will try to read the line specified by &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;lineno&lt;/em&gt;.</source>
          <target state="translated">警告を標準的な方法でフォーマットします。これは、埋め込まれた改行を含み、改行で終わる文字列を返します。&lt;em&gt;line&lt;/em&gt;は、警告メッセージに含まれるソースコードの行です。&lt;em&gt;行&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;#warnings.formatwarning&quot;&gt; &lt;code&gt;formatwarning()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;filename&lt;/em&gt;と&lt;em&gt;linenoで&lt;/em&gt;指定された行を読み取ろうとします。</target>
        </trans-unit>
        <trans-unit id="27f07db4717ed9daeb0ea1cfa7002355a47df647" translate="yes" xml:space="preserve">
          <source>Format characters have the following meaning; the conversion between C and Python values should be obvious given their types. The &amp;lsquo;Standard size&amp;rsquo; column refers to the size of the packed value in bytes when using standard size; that is, when the format string starts with one of &lt;code&gt;'&amp;lt;'&lt;/code&gt;, &lt;code&gt;'&amp;gt;'&lt;/code&gt;, &lt;code&gt;'!'&lt;/code&gt; or &lt;code&gt;'='&lt;/code&gt;. When using native size, the size of the packed value is platform-dependent.</source>
          <target state="translated">フォーマット文字には次の意味があります。CとPythonの値の間の変換は、それらの型を考えると明らかなはずです。「標準サイズ」列は、標準サイズを使用する場合のパック値のサイズをバイト単位で示します。つまり、フォーマット文字列が &lt;code&gt;'&amp;lt;'&lt;/code&gt; 、 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 、 &lt;code&gt;'!'&lt;/code&gt; のいずれかで始まる場合 または &lt;code&gt;'='&lt;/code&gt; 。ネイティブサイズを使用する場合、パックされた値のサイズはプラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="a82c3163ea3ab9e53fb2cea07cd209bfb937d3de" translate="yes" xml:space="preserve">
          <source>Format examples</source>
          <target state="translated">フォーマットの例</target>
        </trans-unit>
        <trans-unit id="1ac9d89f980b709d2eee4c28343a724ae6f0be53" translate="yes" xml:space="preserve">
          <source>Format menu (Editor window only)</source>
          <target state="translated">フォーマットメニュー(エディタウィンドウのみ</target>
        </trans-unit>
        <trans-unit id="5bff82abd36d7764c58ff2df3512a31d36fa2e37" translate="yes" xml:space="preserve">
          <source>Format of Version 5 Babyl Files</source>
          <target state="translated">バージョン5のバビルファイルの形式</target>
        </trans-unit>
        <trans-unit id="1f49759e2e13c3e9c99136a9ebb248df955d8330" translate="yes" xml:space="preserve">
          <source>Format strings are the mechanism used to specify the expected layout when packing and unpacking data. They are built up from &lt;a href=&quot;#format-characters&quot;&gt;Format Characters&lt;/a&gt;, which specify the type of data being packed/unpacked. In addition, there are special characters for controlling the &lt;a href=&quot;#struct-alignment&quot;&gt;Byte Order, Size, and Alignment&lt;/a&gt;.</source>
          <target state="translated">フォーマット文字列は、データをパックおよびアンパックするときに予想されるレイアウトを指定するために使用されるメカニズムです。それらは、パック/アンパックされるデータのタイプを指定する&lt;a href=&quot;#format-characters&quot;&gt;フォーマット文字&lt;/a&gt;から構築されます。さらに、&lt;a href=&quot;#struct-alignment&quot;&gt;バイトオーダー、サイズ、および配置&lt;/a&gt;を制御するための特殊文字があります。</target>
        </trans-unit>
        <trans-unit id="977d2603bbd7ce88ed46464ff7b8c4d0bd0777d9" translate="yes" xml:space="preserve">
          <source>Format strings contain &amp;ldquo;replacement fields&amp;rdquo; surrounded by curly braces &lt;code&gt;{}&lt;/code&gt;. Anything that is not contained in braces is considered literal text, which is copied unchanged to the output. If you need to include a brace character in the literal text, it can be escaped by doubling: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">書式文字列には、中括弧 &lt;code&gt;{}&lt;/code&gt; で囲まれた「置換フィールド」が含まれています。ブレースに含まれていないものはすべてリテラルテキストと見なされ、変更されずに出力にコピーされます。ブレース文字をリテラルテキストに含める必要がある場合は、 &lt;code&gt;{{&lt;/code&gt; および &lt;code&gt;}}&lt;/code&gt; を 2倍にするとエスケープできます。</target>
        </trans-unit>
        <trans-unit id="ada86ab71a0296a81d385ffe9ebda7450e9141f1" translate="yes" xml:space="preserve">
          <source>Format the current directory in HTML.</source>
          <target state="translated">カレントディレクトリをHTMLでフォーマットします。</target>
        </trans-unit>
        <trans-unit id="6887032ead2866abfbc852a1baf00f3a87abe4e3" translate="yes" xml:space="preserve">
          <source>Format the exception part of a traceback. The arguments are the exception type and value such as given by &lt;code&gt;sys.last_type&lt;/code&gt; and &lt;code&gt;sys.last_value&lt;/code&gt;. The return value is a list of strings, each ending in a newline. Normally, the list contains a single string; however, for &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exceptions, it contains several lines that (when printed) display detailed information about where the syntax error occurred. The message indicating which exception occurred is the always last string in the list.</source>
          <target state="translated">トレースバックの例外部分をフォーマットします。引数は、 &lt;code&gt;sys.last_type&lt;/code&gt; や &lt;code&gt;sys.last_value&lt;/code&gt; で指定されるような例外のタイプと値です。戻り値は、それぞれが改行で終了する文字列のリストです。通常、リストには単一の文字列が含まれています。ただし、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;例外の場合、構文エラーが発生した場所に関する詳細情報を（印刷時に）表示する複数の行が含まれます。発生した例外を示すメッセージは、常にリストの最後の文字列です。</target>
        </trans-unit>
        <trans-unit id="a52a79ddad57812b440010d5464618dca805c815" translate="yes" xml:space="preserve">
          <source>Format the exception part of the traceback.</source>
          <target state="translated">トレースバックの例外部分をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="133a6862d1cae1284919a2f001c0aeacdd72c000" translate="yes" xml:space="preserve">
          <source>Format the exception.</source>
          <target state="translated">例外をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="42596a2d24fc2c73e65e7068f53abc165c76e75c" translate="yes" xml:space="preserve">
          <source>Format the shell environment in HTML.</source>
          <target state="translated">シェル環境をHTMLでフォーマットします。</target>
        </trans-unit>
        <trans-unit id="908af1ba6a5e39aff8925f6fe6975073286cfd06" translate="yes" xml:space="preserve">
          <source>Format the traceback as a list of lines with newlines. Use the &lt;a href=&quot;linecache#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module to retrieve lines from the source code. If &lt;em&gt;limit&lt;/em&gt; is set, format the &lt;em&gt;limit&lt;/em&gt; most recent frames if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, format the &lt;code&gt;abs(limit)&lt;/code&gt; oldest frames. If &lt;em&gt;most_recent_first&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the order of the formatted frames is reversed, returning the most recent frame first instead of last.</source>
          <target state="translated">トレースバックを改行付きの行のリストとしてフォーマットします。使用&lt;a href=&quot;linecache#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;ソースコードから行を取得するためのモジュールを。場合は&lt;em&gt;制限が&lt;/em&gt;設定され、フォーマット&lt;em&gt;の限界に&lt;/em&gt;あれば、最新のフレームを&lt;em&gt;限度が&lt;/em&gt;正です。それ以外の場合は、 &lt;code&gt;abs(limit)&lt;/code&gt; の最も古いフレームをフォーマットします。&lt;em&gt;most_recent_first&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、フォーマットされたフレームの順序が逆になり、最新のフレームが最後ではなく最初に返されます。</target>
        </trans-unit>
        <trans-unit id="e94ffc42a625185c4ee1b07594bd1b3720789d8e" translate="yes" xml:space="preserve">
          <source>Formats a floating point number using the same format as the built-in function &lt;code&gt;str(float)&lt;/code&gt;, but takes the decimal point into account.</source>
          <target state="translated">組み込み関数 &lt;code&gt;str(float)&lt;/code&gt; と同じ形式を使用して浮動小数点数をフォーマットしますが、小数点を考慮します。</target>
        </trans-unit>
        <trans-unit id="026a04261cdb2c80deece60787b101a3f57e7a0b" translate="yes" xml:space="preserve">
          <source>Formats a number &lt;em&gt;val&lt;/em&gt; according to the current &lt;a href=&quot;#locale.LC_MONETARY&quot;&gt;&lt;code&gt;LC_MONETARY&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">現在の&lt;a href=&quot;#locale.LC_MONETARY&quot;&gt; &lt;code&gt;LC_MONETARY&lt;/code&gt; &lt;/a&gt;設定に従って数値&lt;em&gt;valを&lt;/em&gt;フォーマットします。</target>
        </trans-unit>
        <trans-unit id="eacb6e288f5f9db17404ead37a2ec0529507d79d" translate="yes" xml:space="preserve">
          <source>Formats a number &lt;em&gt;val&lt;/em&gt; according to the current &lt;a href=&quot;#locale.LC_NUMERIC&quot;&gt;&lt;code&gt;LC_NUMERIC&lt;/code&gt;&lt;/a&gt; setting. The format follows the conventions of the &lt;code&gt;%&lt;/code&gt; operator. For floating point values, the decimal point is modified if appropriate. If &lt;em&gt;grouping&lt;/em&gt; is true, also takes the grouping into account.</source>
          <target state="translated">現在の&lt;a href=&quot;#locale.LC_NUMERIC&quot;&gt; &lt;code&gt;LC_NUMERIC&lt;/code&gt; &lt;/a&gt;設定に従って数値&lt;em&gt;valを&lt;/em&gt;フォーマットします。形式は &lt;code&gt;%&lt;/code&gt; 演算子の規則に従います。浮動小数点値の場合、小数点は必要に応じて変更されます。&lt;em&gt;グループ化&lt;/em&gt;がtrueの場合、グループ化も考慮に入れます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0112f00a08e9d79ead751aada10a7ecf020a0c9" translate="yes" xml:space="preserve">
          <source>Formats the record and sends it to the specified addressees.</source>
          <target state="translated">レコードをフォーマットし、指定した宛先に送信します。</target>
        </trans-unit>
        <trans-unit id="e3d51e4f2fd3c854b2bc53b4f04b934fba801ca8" translate="yes" xml:space="preserve">
          <source>Formats the specified exception information (a standard exception tuple as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;) as a string. This default implementation just uses &lt;a href=&quot;traceback#traceback.print_exception&quot;&gt;&lt;code&gt;traceback.print_exception()&lt;/code&gt;&lt;/a&gt;. The resulting string is returned.</source>
          <target state="translated">指定された例外情報（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される標準の例外タプル）を文字列としてフォーマットします。このデフォルトの実装では、&lt;a href=&quot;traceback#traceback.print_exception&quot;&gt; &lt;code&gt;traceback.print_exception()&lt;/code&gt; を&lt;/a&gt;使用します。結果の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="478091ac3ec3684574c3babf6b432088610f3d97" translate="yes" xml:space="preserve">
          <source>Formats the specified stack information (a string as returned by &lt;a href=&quot;traceback#traceback.print_stack&quot;&gt;&lt;code&gt;traceback.print_stack()&lt;/code&gt;&lt;/a&gt;, but with the last newline removed) as a string. This default implementation just returns the input value.</source>
          <target state="translated">指定されたスタック情報（&lt;a href=&quot;traceback#traceback.print_stack&quot;&gt; &lt;code&gt;traceback.print_stack()&lt;/code&gt; &lt;/a&gt;によって返される文字列ですが、最後の改行が削除された文字列）を文字列としてフォーマットします。このデフォルトの実装は、入力値を返すだけです。</target>
        </trans-unit>
        <trans-unit id="5c7560c39c5c5ff187fc628a573d6335f1647305" translate="yes" xml:space="preserve">
          <source>Formatter Objects</source>
          <target state="translated">フォーマッタオブジェクト</target>
        </trans-unit>
        <trans-unit id="fbbd31613f1e2dcbd79221469710d04b5144430c" translate="yes" xml:space="preserve">
          <source>Formatters specify the layout of log records in the final output.</source>
          <target state="translated">フォーマッタは、最終出力におけるログレコードのレイアウトを指定します。</target>
        </trans-unit>
        <trans-unit id="b447427aa08f3dda2bd0b3397dc8f0988f032e14" translate="yes" xml:space="preserve">
          <source>Formatting is performed using &lt;code&gt;PyObject_Format()&lt;/code&gt;. The result is pushed on the stack.</source>
          <target state="translated">フォーマットは &lt;code&gt;PyObject_Format()&lt;/code&gt; を使用して実行されます。結果はスタックにプッシュされます。</target>
        </trans-unit>
        <trans-unit id="fbf057be17177f97ad4833a585c800edbe99787a" translate="yes" xml:space="preserve">
          <source>Formatting methods for specific types are implemented as methods with a name based on the type name. In the method name, &lt;strong&gt;TYPE&lt;/strong&gt; is replaced by &lt;code&gt;'_'.join(type(obj).__name__.split())&lt;/code&gt;. Dispatch to these methods is handled by &lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt;&lt;code&gt;repr1()&lt;/code&gt;&lt;/a&gt;. Type-specific methods which need to recursively format a value should call &lt;code&gt;self.repr1(subobj, level - 1)&lt;/code&gt;.</source>
          <target state="translated">特定のタイプのフォーマットメソッドは、タイプ名に基づく名前を持つメソッドとして実装されます。メソッド名では、&lt;strong&gt;TYPE&lt;/strong&gt;は &lt;code&gt;'_'.join(type(obj).__name__.split())&lt;/code&gt; 置き換えられます。これらのメソッドへのディスパッチは&lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt; &lt;code&gt;repr1()&lt;/code&gt; &lt;/a&gt;によって処理されます。値を再帰的にフォーマットする必要があるタイプ固有のメソッドは &lt;code&gt;self.repr1(subobj, level - 1)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="53ee3b12a8116f5062f23c10d0f0f41886e86fc4" translate="yes" xml:space="preserve">
          <source>Fortunately, once you have managed to get your script to execute &lt;em&gt;some&lt;/em&gt; code, you can easily send tracebacks to the Web browser using the &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module. If you haven&amp;rsquo;t done so already, just add the lines:</source>
          <target state="translated">あなたのスクリプトを実行するために得ることができたら幸いなことに、&lt;em&gt;いくつか&lt;/em&gt;のコードを、あなたは簡単に使用して、Webブラウザにトレースバックを送信することができます&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; の&lt;/a&gt;モジュールを。まだ行っていない場合は、次の行を追加してください。</target>
        </trans-unit>
        <trans-unit id="5e96e7529d107df0e1753fe21bd01b67d79778d3" translate="yes" xml:space="preserve">
          <source>Forwarded</source>
          <target state="translated">Forwarded</target>
        </trans-unit>
        <trans-unit id="f20aa79556158af01d19fe1bdfaaba61f2eba597" translate="yes" xml:space="preserve">
          <source>Forwarded, resent, or bounced</source>
          <target state="translated">転送、再送、バウンス</target>
        </trans-unit>
        <trans-unit id="204adbe299b86a188ab068c84642d64fb57b9d04" translate="yes" xml:space="preserve">
          <source>Four input formats are allowed:</source>
          <target state="translated">4つの入力形式が可能です。</target>
        </trans-unit>
        <trans-unit id="95a1f04add15be7ebf45b9a37b275d6fe1eeba76" translate="yes" xml:space="preserve">
          <source>Fragment identifier</source>
          <target state="translated">フラグメント識別子</target>
        </trans-unit>
        <trans-unit id="91b0658329efa06d4da89c23a162b41dfcee5202" translate="yes" xml:space="preserve">
          <source>Frame</source>
          <target state="translated">Frame</target>
        </trans-unit>
        <trans-unit id="2c1869f6cb698c92bcc04970dc1fb69c51e4202e" translate="yes" xml:space="preserve">
          <source>Frame of a traceback.</source>
          <target state="translated">トレースバックのフレーム。</target>
        </trans-unit>
        <trans-unit id="ae12c8f249c1108618862d4a780aa0e958c8d187" translate="yes" xml:space="preserve">
          <source>FrameSummary Objects</source>
          <target state="translated">フレームサマリーオブジェクト</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="77cece0affae2ecaefc39ef0c2a8e23ee328ebc0" translate="yes" xml:space="preserve">
          <source>Frameworks expecting callback functions of specific signatures might be type hinted using &lt;code&gt;Callable[[Arg1Type, Arg2Type], ReturnType]&lt;/code&gt;.</source>
          <target state="translated">特定のシグネチャのコールバック関数を &lt;code&gt;Callable[[Arg1Type, Arg2Type], ReturnType]&lt;/code&gt; しているフレームワークは、Callable [[Arg1Type、Arg2Type]、ReturnType]を使用してタイプヒントされる場合があります。</target>
        </trans-unit>
        <trans-unit id="d751d8aea744f19dc0702494fa4a87cea4624802" translate="yes" xml:space="preserve">
          <source>Fran&amp;ccedil;ois Pinard</source>
          <target state="translated">フランソワ・ピナール</target>
        </trans-unit>
        <trans-unit id="676e349fb10a9ac7e26e69e9ff9f61aa2b453ac6" translate="yes" xml:space="preserve">
          <source>Fredrik Lundh elaborated and revised the class interface descriptions, to get them current with Tk 4.2.</source>
          <target state="translated">Fredrik Lundh氏は、Tk 4.2に対応するために、クラスインターフェースの説明を精緻化し、修正しました。</target>
        </trans-unit>
        <trans-unit id="f7a46b2d862652fa6dd4ca177b3c94b34e0551df" translate="yes" xml:space="preserve">
          <source>Fredrik Lundh&amp;rsquo;s &amp;ldquo;unofficial errata, intended to clarify certain details in the XML-RPC specification, as well as hint at &amp;lsquo;best practices&amp;rsquo; to use when designing your own XML-RPC implementations.&amp;rdquo;</source>
          <target state="translated">Fredrik Lundhの「非公式の正誤表。XML-RPC仕様の特定の詳細を明確にすること、および独自のXML-RPC実装を設計するときに使用する「ベストプラクティス」のヒントを提供することを目的としています。」</target>
        </trans-unit>
        <trans-unit id="7941894bbf9320910711bb27aa31db4822f37203" translate="yes" xml:space="preserve">
          <source>Freeze all the objects tracked by gc - move them to a permanent generation and ignore all the future collections. This can be used before a POSIX fork() call to make the gc copy-on-write friendly or to speed up collection. Also collection before a POSIX fork() call may free pages for future allocation which can cause copy-on-write too so it&amp;rsquo;s advised to disable gc in parent process and freeze before fork and enable gc in child process.</source>
          <target state="translated">gcによって追跡されているすべてのオブジェクトをフリーズします-それらを永続的な世代に移動し、将来のすべてのコレクションを無視します。これは、POSIX fork（）呼び出しの前に使用して、GCをコピーオンライト対応にするか、コレクションを高速化できます。また、POSIX fork（）呼び出しの前のコレクションは、将来の割り当てのためにページを解放し、コピーオンライトも引き起こす可能性があるため、親プロセスでgcを無効にし、forkの前にフリーズして子プロセスでgcを有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5f9f6dd59fd9d87ed4234e22a85d44c72d20b660" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions About Fetchmail</source>
          <target state="translated">Fetchmailについてのよくある質問</target>
        </trans-unit>
        <trans-unit id="931016677a60f24d5b6710c6675421493cdd480f" translate="yes" xml:space="preserve">
          <source>Frequently Used Arguments</source>
          <target state="translated">よく使われる議論</target>
        </trans-unit>
        <trans-unit id="c8315ccb47f6bf0d7a511f023cc6a139ae985bb3" translate="yes" xml:space="preserve">
          <source>Friedl, Jeffrey. Mastering Regular Expressions. 3rd ed., O&amp;rsquo;Reilly Media, 2009. The third edition of the book no longer covers Python at all, but the first edition covered writing good regular expression patterns in great detail.</source>
          <target state="translated">フリードル、ジェフリー。正規表現をマスターする。第3版、O'Reilly Media、2009年。本の第3版では、Pythonはまったく取り上げられていませんが、第1版では、優れた正規表現パターンを詳細に記述することを扱っています。</target>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="843e5f9670f08c69a59833608d59b51cae8ce9fc" translate="yes" xml:space="preserve">
          <source>From Python 2.5 onward, it&amp;rsquo;s much more convenient to cut in at the Abstract Syntax Tree (AST) generation and compilation stage, using the &lt;a href=&quot;ast#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Python 2.5以降では、&lt;a href=&quot;ast#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;モジュールを使用して、抽象構文ツリー（AST）の生成とコンパイルの段階に割り込む方がはるかに便利です。</target>
        </trans-unit>
        <trans-unit id="020414031327a3ef7db22111fd1b439df6d9523d" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance can also be constructed directly from a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.2以降、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスは&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;から直接作成することもできます。</target>
        </trans-unit>
        <trans-unit id="8f429dea18858dc76e2dafe218fb1bd41640f703" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, you can also construct a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance directly from a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Python 3.2以降では、&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;インスタンスから&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスを直接作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9a9212b07590ed38d2383035c9834db7561be821" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, you can also construct a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance directly from a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.2以降では、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;から直接&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスを構築することもできます。</target>
        </trans-unit>
        <trans-unit id="c4eb3439bf7316847977346c0d104584a3402e3c" translate="yes" xml:space="preserve">
          <source>From an iterable of integers: &lt;code&gt;bytearray(range(20))&lt;/code&gt;</source>
          <target state="translated">整数の反復可能 &lt;code&gt;bytearray(range(20))&lt;/code&gt; から：bytearray（range（20））</target>
        </trans-unit>
        <trans-unit id="5d65ee2397bd4b1147e1b46eacb2bf3de76b34db" translate="yes" xml:space="preserve">
          <source>From an iterable of integers: &lt;code&gt;bytes(range(20))&lt;/code&gt;</source>
          <target state="translated">反復可能な整数から： &lt;code&gt;bytes(range(20))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce6f98bc32d8c08752e339ab6b8ff93f135e878c" translate="yes" xml:space="preserve">
          <source>From file itself</source>
          <target state="translated">ファイル自体から</target>
        </trans-unit>
        <trans-unit id="5948b3c8804d9acb15720ae7c2746d371d0a6dd0" translate="yes" xml:space="preserve">
          <source>From the application view, this means that any header obtained through the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is a header object with extra attributes, whose string value is the fully decoded unicode value of the header. Likewise, a header may be assigned a new value, or a new header created, using a unicode string, and the policy will take care of converting the unicode string into the correct RFC encoded form.</source>
          <target state="translated">これは、アプリケーションビューから、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;を介して取得されるヘッダーは、追加の属性を持つヘッダーオブジェクトであり、その文字列値は完全にデコードされたヘッダーのUnicode値であることを意味します。同様に、Unicode文字列を使用して、ヘッダーに新しい値を割り当てたり、新しいヘッダーを作成したりできます。Unicode文字列は、RFCエンコードされた正しい形式に変換されます。</target>
        </trans-unit>
        <trans-unit id="21179744e0644e6bf06e66ec0ad650d68bce7278" translate="yes" xml:space="preserve">
          <source>From the perspective of this ABC, a &lt;em&gt;resource&lt;/em&gt; is a binary artifact that is shipped within a package. Typically this is something like a data file that lives next to the &lt;code&gt;__init__.py&lt;/code&gt; file of the package. The purpose of this class is to help abstract out the accessing of such data files so that it does not matter if the package and its data file(s) are stored in a e.g. zip file versus on the file system.</source>
          <target state="translated">このABCの観点から見ると、&lt;em&gt;リソース&lt;/em&gt;はパッケージ内で出荷されるバイナリアーティファクトです。通常、これは、パッケージの &lt;code&gt;__init__.py&lt;/code&gt; ファイルの隣にあるデータファイルのようなものです。このクラスの目的は、パッケージとそのデータファイルがファイルシステムなどのzipファイルなどに格納されているかどうかが問題にならないように、そのようなデータファイルへのアクセスを抽象化することです。</target>
        </trans-unit>
        <trans-unit id="c3d589e23cb112ec1a392aed611bb2ec8fdbc0b4" translate="yes" xml:space="preserve">
          <source>From the top down:</source>
          <target state="translated">上から下に向かって</target>
        </trans-unit>
        <trans-unit id="4e50569cef50379ee448e1f2b049fa0157a0bc2d" translate="yes" xml:space="preserve">
          <source>Frozen instances</source>
          <target state="translated">凍結したインスタンス</target>
        </trans-unit>
        <trans-unit id="d25dcf5f0613027176cc69f800b0a4c3bde6be0d" translate="yes" xml:space="preserve">
          <source>Full details of the class creation process supported by these functions</source>
          <target state="translated">これらの関数がサポートするクラス作成プロセスの完全な詳細</target>
        </trans-unit>
        <trans-unit id="657da8017607a10cc9f2aa3b39c739a2321091a5" translate="yes" xml:space="preserve">
          <source>Full documentation</source>
          <target state="translated">完全なドキュメント</target>
        </trans-unit>
        <trans-unit id="d13f42e2080d339be6d0c5783d644631e98b32e6" translate="yes" xml:space="preserve">
          <source>Full pathname of the source file where the logging call was issued (if available).</source>
          <target state="translated">ロギングコールが発行されたソースファイルの完全なパス名 (利用可能な場合)。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="5afa679cb93c0bd650f0afd89a95239d9f992f6b" translate="yes" xml:space="preserve">
          <source>Function &lt;a href=&quot;#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt; can parse 2-digit years when given &lt;code&gt;%y&lt;/code&gt; format code. When 2-digit years are parsed, they are converted according to the POSIX and ISO C standards: values 69&amp;ndash;99 are mapped to 1969&amp;ndash;1999, and values 0&amp;ndash;68 are mapped to 2000&amp;ndash;2068.</source>
          <target state="translated">関数&lt;a href=&quot;#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;%y&lt;/code&gt; 形式のコードを指定すると、2桁の年を解析できます。2桁の年が解析されると、POSIXおよびISO C標準に従って変換されます。値69〜99は1969〜1999にマッピングされ、値0〜68は2000〜2068にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="0ca544d7457648c14cce40272868cda27ebf4451" translate="yes" xml:space="preserve">
          <source>Function Objects</source>
          <target state="translated">関数オブジェクト</target>
        </trans-unit>
        <trans-unit id="734d7223ffe438b863c3d4ed08f1962984a9515e" translate="yes" xml:space="preserve">
          <source>Function details</source>
          <target state="translated">機能詳細</target>
        </trans-unit>
        <trans-unit id="bd1db34fa306e69fb02c3351244f932d38da00d3" translate="yes" xml:space="preserve">
          <source>Function keys. Up to 64 function keys are supported.</source>
          <target state="translated">ファンクションキーです。最大64個のファンクションキーに対応しています。</target>
        </trans-unit>
        <trans-unit id="1775d6d229c09c127b9640c5b78d4c4c6d982d34" translate="yes" xml:space="preserve">
          <source>Function not implemented</source>
          <target state="translated">実装されていない関数</target>
        </trans-unit>
        <trans-unit id="1ab2eabce4bce0325608c94002ed583542a65dba" translate="yes" xml:space="preserve">
          <source>Function objects are created by function definitions. The only operation on a function object is to call it: &lt;code&gt;func(argument-list)&lt;/code&gt;.</source>
          <target state="translated">関数オブジェクトは、関数定義によって作成されます。関数オブジェクトに対する唯一の操作は、それを呼び出すことです： &lt;code&gt;func(argument-list)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44d21b2d2a609265eca39ae0493e9003be8fed96" translate="yes" xml:space="preserve">
          <source>Function prototypes</source>
          <target state="translated">関数プロトタイプ</target>
        </trans-unit>
        <trans-unit id="dee4cfd77aac5369a6e89ce97088e5be1bcd0c57" translate="yes" xml:space="preserve">
          <source>Function prototypes created by these factory functions can be instantiated in different ways, depending on the type and number of the parameters in the call:</source>
          <target state="translated">これらのファクトリー関数によって作成された関数プロトタイプは、呼び出し中のパラメータのタイプと数に応じて、さまざまな方法でインスタンス化することができます。</target>
        </trans-unit>
        <trans-unit id="364902d4170f1b19b4532663e7d91e3f1dc0864f" translate="yes" xml:space="preserve">
          <source>Function to be used to compare method names when sorting them in &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt; and all the &lt;code&gt;loadTestsFrom*()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; &lt;/a&gt;およびすべての &lt;code&gt;loadTestsFrom*()&lt;/code&gt; メソッドでソートするときにメソッド名を比較するために使用される関数。</target>
        </trans-unit>
        <trans-unit id="a052eea89f50224a7569eae8a87ea1a83e18f9d3" translate="yes" xml:space="preserve">
          <source>Functional API</source>
          <target state="translated">機能API</target>
        </trans-unit>
        <trans-unit id="d58bef8c404893294e965bc9372c8872c43f8fda" translate="yes" xml:space="preserve">
          <source>Functional Programming</source>
          <target state="translated">関数型プログラミング</target>
        </trans-unit>
        <trans-unit id="7f8a9380207393fc9db2b2b2593936320bf03503" translate="yes" xml:space="preserve">
          <source>Functional Programming Modules</source>
          <target state="translated">機能的なプログラミングモジュール</target>
        </trans-unit>
        <trans-unit id="62daf931ffeccc7257bc3a492560ec903684c927" translate="yes" xml:space="preserve">
          <source>Functionality within this package requires that the &lt;code&gt;__main__&lt;/code&gt; module be importable by the children. This is covered in &lt;a href=&quot;#multiprocessing-programming&quot;&gt;Programming guidelines&lt;/a&gt; however it is worth pointing out here. This means that some examples, such as the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;multiprocessing.pool.Pool&lt;/code&gt;&lt;/a&gt; examples will not work in the interactive interpreter. For example:</source>
          <target state="translated">このパッケージ内の機能では、 &lt;code&gt;__main__&lt;/code&gt; モジュールが子によってインポート可能である必要があります。これは&lt;a href=&quot;#multiprocessing-programming&quot;&gt;プログラミングのガイドラインで説明&lt;/a&gt;されていますが、ここで指摘する価値があります。つまり、&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;multiprocessing.pool.Pool&lt;/code&gt; の&lt;/a&gt;例など、一部の例はインタラクティブインタープリターでは機能しません。例えば：</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="13fe3097140d48f45796f13a773a611406bf8724" translate="yes" xml:space="preserve">
          <source>Functions and Exceptions</source>
          <target state="translated">関数と例外</target>
        </trans-unit>
        <trans-unit id="4dde1747c55cbb65aed850307ffa6149bfedba82" translate="yes" xml:space="preserve">
          <source>Functions and classes provided:</source>
          <target state="translated">提供される機能とクラス。</target>
        </trans-unit>
        <trans-unit id="20b1e6d5deb339e7436ae27526f0a0d790e768e8" translate="yes" xml:space="preserve">
          <source>Functions are accessed as attributes of dll objects:</source>
          <target state="translated">関数は dll オブジェクトの属性としてアクセスされます。</target>
        </trans-unit>
        <trans-unit id="4dc9f4ae68f16fcbe0530e1139c1d5ccbd47a458" translate="yes" xml:space="preserve">
          <source>Functions for integers</source>
          <target state="translated">整数の関数</target>
        </trans-unit>
        <trans-unit id="5aeda873fe4d68e6f1f8db4aabf74a1ac2058809" translate="yes" xml:space="preserve">
          <source>Functions for sequences</source>
          <target state="translated">シーケンス用の関数</target>
        </trans-unit>
        <trans-unit id="921bac2868750926523aa803476aa0880a75d1f2" translate="yes" xml:space="preserve">
          <source>Functions or methods being mocked will have their arguments checked to ensure that they are called with the correct signature.</source>
          <target state="translated">モックされる関数やメソッドは、それらの引数をチェックして、正しいシグネチャで呼び出されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3e1ed89bdc06bad6024febc65146a33f87bcd499" translate="yes" xml:space="preserve">
          <source>Functions registered for execution before forking are called in reverse registration order. Functions registered for execution after forking (either in the parent or in the child) are called in registration order.</source>
          <target state="translated">フォーク前の実行に登録された関数は、逆登録順に呼び出されます。フォーク後(親または子)の実行に登録された関数は、登録順に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="31b99da682255324534f87c3b41fa2d80eb3d3d0" translate="yes" xml:space="preserve">
          <source>Functions that convert doctests to Python code, and possibly run the synthesized code under the debugger:</source>
          <target state="translated">doctests を Python コードに変換し、合成されたコードをデバッガの下で実行する関数。</target>
        </trans-unit>
        <trans-unit id="c244de50efd900af23f95e74816e4a77ce0046dd" translate="yes" xml:space="preserve">
          <source>Functions with output parameters will automatically return the output parameter value if there is a single one, or a tuple containing the output parameter values when there are more than one, so the GetWindowRect function now returns a RECT instance, when called.</source>
          <target state="translated">出力パラメータを持つ関数は、出力パラメータの値が 1 つの場合は自動的に返され、複数の場合は出力パラメータの値を含むタプルが返されるようになったので、GetWindowRect 関数が呼び出されると RECT インスタンスを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="b0e6e4325e12bb480ddedba753c0f8ff52392cb8" translate="yes" xml:space="preserve">
          <source>Functions, Constants, and Exceptions</source>
          <target state="translated">関数、定数、および例外</target>
        </trans-unit>
        <trans-unit id="b4fb46cd353c41a8b5f72483a104c7283e890b98" translate="yes" xml:space="preserve">
          <source>Fundamental data types</source>
          <target state="translated">基本データ型</target>
        </trans-unit>
        <trans-unit id="75dfbb4ae8b96227bde6c5115b67cdcd67dd0280" translate="yes" xml:space="preserve">
          <source>Fundamental data types, when returned as foreign function call results, or, for example, by retrieving structure field members or array items, are transparently converted to native Python types. In other words, if a foreign function has a &lt;code&gt;restype&lt;/code&gt; of &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt;, you will always receive a Python bytes object, &lt;em&gt;not&lt;/em&gt; a &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">基本的なデータ型は、外部関数呼び出しの結果として返される場合、または、たとえば、構造体フィールドメンバーや配列項目を取得する場合に、ネイティブのPython型に透過的に変換されます。外部関数が持っている言い換えれば、 &lt;code&gt;restype&lt;/code&gt; の&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; を&lt;/a&gt;、あなたは常にPythonのバイトオブジェクト、受け取る&lt;em&gt;ない&lt;/em&gt;&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; の&lt;/a&gt;インスタンスを。</target>
        </trans-unit>
        <trans-unit id="aed766328b20ea5d898558b5e226e4031f0fcb56" translate="yes" xml:space="preserve">
          <source>Further Examples</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="15f5c4496b8b834674cbc8ab8fb26c5c51e088ee" translate="yes" xml:space="preserve">
          <source>Further documentation on these functions can be found in the Platform API documentation.</source>
          <target state="translated">これらの関数に関する詳細なドキュメントは、Platform API のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bf65796b579e013fd0c63bc3940e46318e678ee0" translate="yes" xml:space="preserve">
          <source>Further explanation is available in the FAQ entry &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-multidimensional-list&quot;&gt;How do I create a multidimensional list?&lt;/a&gt;.</source>
          <target state="translated">詳細については、FAQエントリを参照してください&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-multidimensional-list&quot;&gt;。多次元リストを作成するにはどうすればよいですか？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="629fce60fcf94411565c6cc87f1eb2b8f5946829" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;add_parser&lt;/code&gt; supports an additional &lt;code&gt;aliases&lt;/code&gt; argument, which allows multiple strings to refer to the same subparser. This example, like &lt;code&gt;svn&lt;/code&gt;, aliases &lt;code&gt;co&lt;/code&gt; as a shorthand for &lt;code&gt;checkout&lt;/code&gt;:</source>
          <target state="translated">さらに、 &lt;code&gt;add_parser&lt;/code&gt; は、複数の文字列が同じサブパーサーを参照できるようにする追加の &lt;code&gt;aliases&lt;/code&gt; 引数をサポートしています。この例では、 &lt;code&gt;svn&lt;/code&gt; のように、 &lt;code&gt;checkout&lt;/code&gt; 省略形として &lt;code&gt;co&lt;/code&gt; をエイリアス化しています。</target>
        </trans-unit>
        <trans-unit id="36c32ddb93b70b3b0d66489f7cc081835756def8" translate="yes" xml:space="preserve">
          <source>Furthermore, all functions without a return type or parameter types will implicitly default to using &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">さらに、戻り値の型またはパラメーターの型がないすべての関数は、暗黙的にデフォルトで&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="8f0c49f21362241b8542d0a3c68222c26cf5407b" translate="yes" xml:space="preserve">
          <source>Furthermore, any functions and classes defined by the executed code are not guaranteed to work correctly after a &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; function has returned. If that limitation is not acceptable for a given use case, &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; is likely to be a more suitable choice than this module.</source>
          <target state="translated">さらに、実行されたコードによって定義された関数とクラスは、&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;関数が返された後に正しく動作することが保証されていません。特定のユースケースでその制限が受け入れられない場合は、このモジュールよりも&lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt;の方が適していると考えられます。</target>
        </trans-unit>
        <trans-unit id="0555f6f9e263f192be068a009836d2a2523e37d9" translate="yes" xml:space="preserve">
          <source>Furthermore, there is not a compelling case for arbitrarily altering the object graph of loggers, handlers, filters, formatters at run-time, once a configuration is set up; the verbosity of loggers and handlers can be controlled just by setting levels (and, in the case of loggers, propagation flags). Changing the object graph arbitrarily in a safe way is problematic in a multi-threaded environment; while not impossible, the benefits are not worth the complexity it adds to the implementation.</source>
          <target state="translated">さらに、ロガー、ハンドラ、フィルタ、フォーマッタのオブジェクトグラフをランタイムで任意に変更することには説得力がありません。安全な方法でオブジェクトグラフを任意に変更することは、マルチスレッド環境では問題となります。</target>
        </trans-unit>
        <trans-unit id="46806aa64dafed90bfb876c61bba7987d063cf08" translate="yes" xml:space="preserve">
          <source>Fused multiply-add. Return self*other+third with no rounding of the intermediate product self*other.</source>
          <target state="translated">融合乗算加算。中間積self*otherを丸めずにself*other+3番目を返します。</target>
        </trans-unit>
        <trans-unit id="ed8b6a30978a9c952f9c9df10088a33c954813bd" translate="yes" xml:space="preserve">
          <source>Future Functions</source>
          <target state="translated">将来の機能</target>
        </trans-unit>
        <trans-unit id="040c5373d5621aa737e101cc596fa0199c9dc5ff" translate="yes" xml:space="preserve">
          <source>Future Object</source>
          <target state="translated">フューチャーオブジェクト</target>
        </trans-unit>
        <trans-unit id="7afdbd06b8b7618d0daf7e6ccc98c609e58e8e9f" translate="yes" xml:space="preserve">
          <source>Future Objects</source>
          <target state="translated">フューチャーオブジェクト</target>
        </trans-unit>
        <trans-unit id="18e4acee739b17a1065f82661408ae77421afefb" translate="yes" xml:space="preserve">
          <source>Future is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; object. Coroutines can await on Future objects until they either have a result or an exception set, or until they are cancelled.</source>
          <target state="translated">未来は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;待ち望まれる&lt;/a&gt;オブジェクトです。コルーチンは、結果または例外が設定されるか、キャンセルされるまで、Futureオブジェクトを待機できます。</target>
        </trans-unit>
        <trans-unit id="3feb6a8fec72549860ff9b054d1b990159ab9d6c" translate="yes" xml:space="preserve">
          <source>Future objects in asyncio are needed to allow callback-based code to be used with async/await.</source>
          <target state="translated">asyncio の将来のオブジェクトは、コールバックベースのコードを async/await で使用できるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="f3c8c35a0717de250776c3a109889f261085ce97" translate="yes" xml:space="preserve">
          <source>Future objects, sometimes exposed by libraries and some asyncio APIs, can be awaited:</source>
          <target state="translated">将来のオブジェクトは、ライブラリやいくつかのasyncio APIによって公開されることがあります。</target>
        </trans-unit>
        <trans-unit id="b5fcc0b7fc3f9b4a713a58338f8eab747e7ec9c4" translate="yes" xml:space="preserve">
          <source>Future statements</source>
          <target state="translated">今後の見通し</target>
        </trans-unit>
        <trans-unit id="293b9c2c76d6969ac75fae9cc6bc05878d13b9ce" translate="yes" xml:space="preserve">
          <source>Future statements are specified by bits which can be bitwise ORed together to specify multiple statements. The bitfield required to specify a given feature can be found as the &lt;code&gt;compiler_flag&lt;/code&gt; attribute on the &lt;code&gt;_Feature&lt;/code&gt; instance in the &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">将来のステートメントは、複数のステートメントを指定するためにビット単位のORをとることができるビットによって指定されます。特定の機能を指定するために必要なビットフィールドは、&lt;a href=&quot;__future__#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;モジュールの &lt;code&gt;_Feature&lt;/code&gt; インスタンスの &lt;code&gt;compiler_flag&lt;/code&gt; 属性として見つけることができます。</target>
        </trans-unit>
        <trans-unit id="943e868a2624e15afba6299f4ed4ded48727c51e" translate="yes" xml:space="preserve">
          <source>FutureWarning</source>
          <target state="translated">FutureWarning</target>
        </trans-unit>
        <trans-unit id="965db80f650641f51dead99c13720e4035c9ef70" translate="yes" xml:space="preserve">
          <source>Futures</source>
          <target state="translated">Futures</target>
        </trans-unit>
        <trans-unit id="4c25945d461c0634df34d19c19a37fb40386b467" translate="yes" xml:space="preserve">
          <source>GEN_CLOSED: Execution has completed.</source>
          <target state="translated">GEN_CLOSEDです。実行が完了しました。</target>
        </trans-unit>
        <trans-unit id="650b3ffe0606ed0d5caee29b91e192c6db844113" translate="yes" xml:space="preserve">
          <source>GEN_CREATED: Waiting to start execution.</source>
          <target state="translated">GEN_CREATEDです。実行開始待ちです。</target>
        </trans-unit>
        <trans-unit id="b1fe62534e6aac45bba898aa978e224194a8f480" translate="yes" xml:space="preserve">
          <source>GEN_RUNNING: Currently being executed by the interpreter.</source>
          <target state="translated">GEN_RUNNING:現在、インタープリタによって実行されています。</target>
        </trans-unit>
        <trans-unit id="2643066350ead1c0a8664b7667b6b4bc694078a2" translate="yes" xml:space="preserve">
          <source>GEN_SUSPENDED: Currently suspended at a yield expression.</source>
          <target state="translated">GEN_SUSPENDED:現在、イールド式でサスペンドされています。</target>
        </trans-unit>
        <trans-unit id="a246c5f8bb908d1c393f6923487aecfa272e691b" translate="yes" xml:space="preserve">
          <source>GIF 87a and 89a Files</source>
          <target state="translated">GIF 87aと89aファイル</target>
        </trans-unit>
        <trans-unit id="29b0c001de448507eeda37b597ce4ce0ec650ba5" translate="yes" xml:space="preserve">
          <source>GNOME uses a version of the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module by James Henstridge, but this version has a slightly different API. Its documented usage was:</source>
          <target state="translated">GNOMEはJames Henstridgeによる&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;モジュールのバージョンを使用しますが、このバージョンのAPIは少し異なります。文書化された使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e6520e025af22317712e26a57b07cbcd978f6fae" translate="yes" xml:space="preserve">
          <source>GNU &lt;strong&gt;gettext&lt;/strong&gt; API</source>
          <target state="translated">GNU &lt;strong&gt;gettext&lt;/strong&gt; API</target>
        </trans-unit>
        <trans-unit id="0852894f9b2a41ca0b12f6e51a66ede0a0cffce6" translate="yes" xml:space="preserve">
          <source>GNU tar format.</source>
          <target state="translated">GNU tar フォーマット。</target>
        </trans-unit>
        <trans-unit id="77104d0ac72d310bfb0a065e06a3dcbeab2ef352" translate="yes" xml:space="preserve">
          <source>GNU tar manual, Basic Tar Format</source>
          <target state="translated">GNU tar マニュアル,基本的なタール形式</target>
        </trans-unit>
        <trans-unit id="f1c7eabb625a30cd8386b723eb7564d690dc3bda" translate="yes" xml:space="preserve">
          <source>GUI classes</source>
          <target state="translated">GUIクラス</target>
        </trans-unit>
        <trans-unit id="cdac0a16fe6c8715769cabffbcf5b111542185f3" translate="yes" xml:space="preserve">
          <source>Gamma distribution. (&lt;em&gt;Not&lt;/em&gt; the gamma function!) Conditions on the parameters are &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; and &lt;code&gt;beta &amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">ガンマ分布。（ガンマ関数&lt;em&gt;で&lt;/em&gt;は&lt;em&gt;ありません&lt;/em&gt;！）パラメーターの条件は &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; および &lt;code&gt;beta &amp;gt; 0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9c36f27f079aad3d99c9aa2c98a958440131d7a5" translate="yes" xml:space="preserve">
          <source>Gathering statistics about garbage collection, such as how often various generations are collected, and how long the collection takes.</source>
          <target state="translated">様々な世代がどのくらいの頻度で収集されているのか、どのくらいの期間で収集されているのかなど、ゴミ収集に関する統計を収集します。</target>
        </trans-unit>
        <trans-unit id="94e14ba841dd9989631b47b319bec6cacb6f1eea" translate="yes" xml:space="preserve">
          <source>Gaussian distribution. &lt;em&gt;mu&lt;/em&gt; is the mean, and &lt;em&gt;sigma&lt;/em&gt; is the standard deviation. This is slightly faster than the &lt;a href=&quot;#random.normalvariate&quot;&gt;&lt;code&gt;normalvariate()&lt;/code&gt;&lt;/a&gt; function defined below.</source>
          <target state="translated">ガウス分布。&lt;em&gt;mu&lt;/em&gt;は平均、&lt;em&gt;sigma&lt;/em&gt;は標準偏差です。これは、以下で定義される&lt;a href=&quot;#random.normalvariate&quot;&gt; &lt;code&gt;normalvariate()&lt;/code&gt; &lt;/a&gt;関数よりもわずかに高速です。</target>
        </trans-unit>
        <trans-unit id="d5884a44b6d020c29a2f374e66fdf68d2522d7a5" translate="yes" xml:space="preserve">
          <source>General calendar related functions.</source>
          <target state="translated">カレンダー関連機能全般。</target>
        </trans-unit>
        <trans-unit id="c55d5d54d0be20d8b60e13b1e058e6199fc67a9b" translate="yes" xml:space="preserve">
          <source>General calendar-related functions. &lt;a href=&quot;calendar#calendar.timegm&quot;&gt;&lt;code&gt;timegm()&lt;/code&gt;&lt;/a&gt; is the inverse of &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; from this module.</source>
          <target state="translated">一般的なカレンダー関連機能。&lt;a href=&quot;calendar#calendar.timegm&quot;&gt; &lt;code&gt;timegm()&lt;/code&gt; &lt;/a&gt;は、このモジュールの&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="9ceee6648db6ad65058c1365753f6d071c93ac56" translate="yes" xml:space="preserve">
          <source>General format. For a given precision &lt;code&gt;p &amp;gt;= 1&lt;/code&gt;, this rounds the number to &lt;code&gt;p&lt;/code&gt; significant digits and then formats the result in either fixed-point format or in scientific notation, depending on its magnitude.</source>
          <target state="translated">一般的なフォーマット。与えられた精度 &lt;code&gt;p &amp;gt;= 1&lt;/code&gt; 場合、これは数値を有効桁数 &lt;code&gt;p&lt;/code&gt; に丸め、結果をその大きさに応じて固定小数点形式または科学表記法でフォーマットします。</target>
        </trans-unit>
        <trans-unit id="f322561eef774a62c9210e7625ce378d4c97d613" translate="yes" xml:space="preserve">
          <source>General format. Same as &lt;code&gt;'g'&lt;/code&gt; except switches to &lt;code&gt;'E'&lt;/code&gt; if the number gets too large. The representations of infinity and NaN are uppercased, too.</source>
          <target state="translated">一般的なフォーマット。数値が大きくなりすぎた場合に &lt;code&gt;'E'&lt;/code&gt; 切り替わる以外は、 &lt;code&gt;'g'&lt;/code&gt; 同じです。無限大とNaNの表現も大文字です。</target>
        </trans-unit>
        <trans-unit id="ede442e713df309353f00b1e6c5eca3991f17a5a" translate="yes" xml:space="preserve">
          <source>General properties</source>
          <target state="translated">一般物性</target>
        </trans-unit>
        <trans-unit id="bf6bda4587aff077462187186bdf6576ccc550c7" translate="yes" xml:space="preserve">
          <source>General rules</source>
          <target state="translated">一般的なルール</target>
        </trans-unit>
        <trans-unit id="068195143092a9c76f7f35d028344c892962b8b0" translate="yes" xml:space="preserve">
          <source>General strictness switches:</source>
          <target state="translated">一般的な厳しさのスイッチ。</target>
        </trans-unit>
        <trans-unit id="e4a6b871e250a74d5d8b375dda6c5463d02ee60e" translate="yes" xml:space="preserve">
          <source>Generally synchronization primitives are not as necessary in a multiprocess program as they are in a multithreaded program. See the documentation for &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">一般に、同期プリミティブは、マルチスレッドプログラムの場合のようにマルチプロセスプログラムでは必要ありません。&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="18a9756dceb01305df40a47834a42c5432a22e44" translate="yes" xml:space="preserve">
          <source>Generally, argument defaults are specified either by passing a default to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; or by calling the &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; methods with a specific set of name-value pairs. Sometimes however, it may be useful to specify a single parser-wide default for arguments. This can be accomplished by passing the &lt;code&gt;argument_default=&lt;/code&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. For example, to globally suppress attribute creation on &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; calls, we supply &lt;code&gt;argument_default=SUPPRESS&lt;/code&gt;:</source>
          <target state="translated">一般に、引数のデフォルトは、デフォルトを&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; に&lt;/a&gt;渡すか、名前と値のペアの特定のセットで&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって指定されます。ただし、引数に単一のパーサー全体のデフォルトを指定すると便利な場合があります。これは、渡すことによって達成することができる &lt;code&gt;argument_default=&lt;/code&gt; にキーワード引数を&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;。たとえば、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;呼び出しでの属性の作成をグローバルに抑制するには、 &lt;code&gt;argument_default=SUPPRESS&lt;/code&gt; を指定します。</target>
        </trans-unit>
        <trans-unit id="760d892cb151b00c2aba0b8d86a8bb2cd386807c" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;SIGABRT&lt;/code&gt; signal to the current process. On Unix, the default behavior is to produce a core dump; on Windows, the process immediately returns an exit code of &lt;code&gt;3&lt;/code&gt;. Be aware that calling this function will not call the Python signal handler registered for &lt;code&gt;SIGABRT&lt;/code&gt; with &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のプロセスに &lt;code&gt;SIGABRT&lt;/code&gt; シグナルを生成します。Unixでは、デフォルトの動作はコアダンプを生成することです。Windowsでは、プロセスはすぐに終了コード &lt;code&gt;3&lt;/code&gt; を返します。この関数を呼び出しても、 &lt;code&gt;SIGABRT&lt;/code&gt; に登録されたPythonシグナルハンドラーが&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;で呼び出されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="58a95565098b688544062529a9855e160d91e91d" translate="yes" xml:space="preserve">
          <source>Generate a CAB file, add it as a stream to the MSI file, put it into the &lt;code&gt;Media&lt;/code&gt; table, and remove the generated file from the disk.</source>
          <target state="translated">CABファイルを生成し、MSIファイルにストリームとして追加し、それを &lt;code&gt;Media&lt;/code&gt; テーブルに入れ、生成されたファイルをディスクから削除します。</target>
        </trans-unit>
        <trans-unit id="5329a732ca7f35819388ce77de62767aca915104" translate="yes" xml:space="preserve">
          <source>Generate a UUID based on the MD5 hash of a namespace identifier (which is a UUID) and a name (which is a string).</source>
          <target state="translated">名前空間識別子(UUID)と名前(文字列)のMD5ハッシュに基づいてUUIDを生成します。</target>
        </trans-unit>
        <trans-unit id="e254e1d1587616df23d81a95de4537b712650d32" translate="yes" xml:space="preserve">
          <source>Generate a UUID based on the SHA-1 hash of a namespace identifier (which is a UUID) and a name (which is a string).</source>
          <target state="translated">名前空間識別子 (UUID)と名前 (文字列)の SHA-1 ハッシュに基づいて UUID を生成します。</target>
        </trans-unit>
        <trans-unit id="3e2dda6f18229b616248722abe6bc7c08b0ae156" translate="yes" xml:space="preserve">
          <source>Generate a UUID from a host ID, sequence number, and the current time. If &lt;em&gt;node&lt;/em&gt; is not given, &lt;a href=&quot;#uuid.getnode&quot;&gt;&lt;code&gt;getnode()&lt;/code&gt;&lt;/a&gt; is used to obtain the hardware address. If &lt;em&gt;clock_seq&lt;/em&gt; is given, it is used as the sequence number; otherwise a random 14-bit sequence number is chosen.</source>
          <target state="translated">ホストID、シーケンス番号、および現在の時刻からUUIDを生成します。&lt;em&gt;node&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;#uuid.getnode&quot;&gt; &lt;code&gt;getnode()&lt;/code&gt; &lt;/a&gt;を使用してハードウェアアドレスを取得します。&lt;em&gt;clock_seq&lt;/em&gt;が指定されている場合、それがシーケンス番号として使用されます。それ以外の場合は、ランダムな14ビットのシーケンス番号が選択されます。</target>
        </trans-unit>
        <trans-unit id="fe41ab241f1f685b0dbb424e0207c19044174796" translate="yes" xml:space="preserve">
          <source>Generate a hard-to-guess temporary URL containing a security token suitable for password recovery applications:</source>
          <target state="translated">パスワード回復アプリケーションに適したセキュリティトークンを含む、推測しにくい一時的なURLを生成します。</target>
        </trans-unit>
        <trans-unit id="c2ffe2e554218a5f937438f8460923a2c93a492c" translate="yes" xml:space="preserve">
          <source>Generate a random UUID.</source>
          <target state="translated">ランダムなUUIDを生成します。</target>
        </trans-unit>
        <trans-unit id="eeabda0fa004edbf77932a794b4287d23b30cd9b" translate="yes" xml:space="preserve">
          <source>Generate a stereo fragment from a mono fragment. Each pair of samples in the stereo fragment are computed from the mono sample, whereby left channel samples are multiplied by &lt;em&gt;lfactor&lt;/em&gt; and right channel samples by &lt;em&gt;rfactor&lt;/em&gt;.</source>
          <target state="translated">モノフラグメントからステレオフラグメントを生成します。ステレオフラグメントのサンプルの各ペアはモノラルサンプルから計算されます。これにより、左チャネルサンプルには&lt;em&gt;lfactor&lt;/em&gt;が乗算され、右チャネルサンプルには&lt;em&gt;rfactor&lt;/em&gt;が乗算され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bb0de2380f61c8b3b5ce97b16629785ba2f3c883" translate="yes" xml:space="preserve">
          <source>Generate a ten-character alphanumeric password with at least one lowercase character, at least one uppercase character, and at least three digits:</source>
          <target state="translated">少なくとも1つの小文字、少なくとも1つの大文字、少なくとも3桁の数字を持つ10文字の英数字パスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="d737efc68fd8c95bb0b04bfa067c27c815266bd2" translate="yes" xml:space="preserve">
          <source>Generate an &lt;a href=&quot;https://xkcd.com/936/&quot;&gt;XKCD-style passphrase&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://xkcd.com/936/&quot;&gt;XKCDスタイルのパスフレーズ&lt;/a&gt;を生成します。</target>
        </trans-unit>
        <trans-unit id="5254e77c49e3726b9ce7afa0602745d90779e6d7" translate="yes" xml:space="preserve">
          <source>Generate an eight-character alphanumeric password:</source>
          <target state="translated">8文字の英数字のパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="9c47bb489aa92718ba831cc71a1f8f2e2fe4b431" translate="yes" xml:space="preserve">
          <source>Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory &lt;em&gt;top&lt;/em&gt; (including &lt;em&gt;top&lt;/em&gt; itself), it yields a 3-tuple &lt;code&gt;(dirpath, dirnames,
filenames)&lt;/code&gt;.</source>
          <target state="translated">ツリーをトップダウンまたはボトムアップでウォークして、ディレクトリツリーにファイル名を生成します。ディレクトリをルートとするツリー内の各ディレクトリの&lt;em&gt;トップ&lt;/em&gt;（含む&lt;em&gt;トップ&lt;/em&gt;自体）を、それが3タプルが得られる &lt;code&gt;(dirpath, dirnames, filenames)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a176b8716da502b7a00a24adf4a150b1dcaccace" translate="yes" xml:space="preserve">
          <source>Generated just after setting the focus item to open=False.</source>
          <target state="translated">フォーカス項目をopen=Falseに設定した直後に生成されます。</target>
        </trans-unit>
        <trans-unit id="0376f849b020636ee4b54a60454a83645273bf92" translate="yes" xml:space="preserve">
          <source>Generated just before settings the focus item to open=True.</source>
          <target state="translated">フォーカス項目をopen=Trueに設定する直前に生成されます。</target>
        </trans-unit>
        <trans-unit id="725cd661f4740654b5db99af933817749928d8b8" translate="yes" xml:space="preserve">
          <source>Generated pseudo-random byte sequences will be unique if they are of sufficient length, but are not necessarily unpredictable. They can be used for non-cryptographic purposes and for certain purposes in cryptographic protocols, but usually not for key generation etc.</source>
          <target state="translated">生成された疑似ランダムバイト列は、十分な長さであれば一意性がありますが、必ずしも予測できないわけではありません。これらは暗号化されていない目的や暗号化プロトコルの特定の目的に使用することができますが、通常は鍵の生成などには使用されません。</target>
        </trans-unit>
        <trans-unit id="ead06510ef285ebb7f6220395aade6782b29c550" translate="yes" xml:space="preserve">
          <source>Generated whenever the selection changes.</source>
          <target state="translated">選択範囲が変更されるたびに生成されます。</target>
        </trans-unit>
        <trans-unit id="b0bc8d38af1670401a998afe93ec1319cc1b94a4" translate="yes" xml:space="preserve">
          <source>Generates &lt;em&gt;n&lt;/em&gt; random samples for a given mean and standard deviation. Returns a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">指定された平均値と標準偏差に対して&lt;em&gt;n個の&lt;/em&gt;ランダムサンプルを生成します。&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;値の&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="eac497b73b4148960c71a958d63bde7183c58b8a" translate="yes" xml:space="preserve">
          <source>Generates a string representation of an XML element, including all subelements. &lt;em&gt;element&lt;/em&gt; is an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; is the output encoding (default is US-ASCII). Use &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; to generate a Unicode string (otherwise, a bytestring is generated). &lt;em&gt;method&lt;/em&gt; is either &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt; or &lt;code&gt;&quot;text&quot;&lt;/code&gt; (default is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;). &lt;em&gt;xml_declaration&lt;/em&gt;, &lt;em&gt;default_namespace&lt;/em&gt; and &lt;em&gt;short_empty_elements&lt;/em&gt; has the same meaning as in &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt;. Returns an (optionally) encoded string containing the XML data.</source>
          <target state="translated">すべてのサブ要素を含む、XML要素の文字列表現を生成します。&lt;em&gt;element&lt;/em&gt;は&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;エンコーディング&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;は出力エンコーディングです（デフォルトはUS-ASCIIです）。使用 &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; Unicode文字列（そうでなければ、バイト文字列が生成される）を生成します。&lt;em&gt;method&lt;/em&gt;は &lt;code&gt;&quot;xml&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; または &lt;code&gt;&quot;text&quot;&lt;/code&gt; のいずれかです（デフォルトは &lt;code&gt;&quot;xml&quot;&lt;/code&gt; です）。&lt;em&gt;xml_declaration&lt;/em&gt;、&lt;em&gt;default_namespace&lt;/em&gt;、および&lt;em&gt;short_empty_elements&lt;/em&gt;は、&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;ElementTree.write()&lt;/code&gt; &lt;/a&gt;と同じ意味です。XMLデータを含む（オプションで）エンコードされた文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6204d45d6bba3d8356ab2594a70a820efafd7b4b" translate="yes" xml:space="preserve">
          <source>Generates a string representation of an XML element, including all subelements. &lt;em&gt;element&lt;/em&gt; is an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; is the output encoding (default is US-ASCII). Use &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; to generate a Unicode string (otherwise, a bytestring is generated). &lt;em&gt;method&lt;/em&gt; is either &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt; or &lt;code&gt;&quot;text&quot;&lt;/code&gt; (default is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;). &lt;em&gt;xml_declaration&lt;/em&gt;, &lt;em&gt;default_namespace&lt;/em&gt; and &lt;em&gt;short_empty_elements&lt;/em&gt; has the same meaning as in &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt;. Returns a list of (optionally) encoded strings containing the XML data. It does not guarantee any specific sequence, except that &lt;code&gt;b&quot;&quot;.join(tostringlist(element)) == tostring(element)&lt;/code&gt;.</source>
          <target state="translated">すべてのサブ要素を含む、XML要素の文字列表現を生成します。&lt;em&gt;element&lt;/em&gt;は&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;エンコーディング&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;は出力エンコーディングです（デフォルトはUS-ASCIIです）。使用 &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; Unicode文字列（そうでなければ、バイト文字列が生成される）を生成します。&lt;em&gt;method&lt;/em&gt;は &lt;code&gt;&quot;xml&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; または &lt;code&gt;&quot;text&quot;&lt;/code&gt; のいずれかです（デフォルトは &lt;code&gt;&quot;xml&quot;&lt;/code&gt; です）。&lt;em&gt;xml_declaration&lt;/em&gt;、&lt;em&gt;default_namespace&lt;/em&gt;、および&lt;em&gt;short_empty_elements&lt;/em&gt;は、&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;ElementTree.write()&lt;/code&gt; &lt;/a&gt;と同じ意味です。。 XMLデータを含む（オプションで）エンコードされた文字列のリストを返します。 &lt;code&gt;b&quot;&quot;.join(tostringlist(element)) == tostring(element)&lt;/code&gt; を除き、特定のシーケンスは保証されません。</target>
        </trans-unit>
        <trans-unit id="708786a80761c18bb49de75d753c2402b77bb538" translate="yes" xml:space="preserve">
          <source>Generating Symbol Tables</source>
          <target state="translated">シンボルテーブルの生成</target>
        </trans-unit>
        <trans-unit id="47e3a19806fd6ae855bc1e14ecf253bfc6c478ca" translate="yes" xml:space="preserve">
          <source>Generating a plist:</source>
          <target state="translated">plist を生成します。</target>
        </trans-unit>
        <trans-unit id="cbad253020b7e1c56a37eb457d6613f3ba57d4a8" translate="yes" xml:space="preserve">
          <source>Generating tokens</source>
          <target state="translated">トークンの生成</target>
        </trans-unit>
        <trans-unit id="e3833cf62cfdb901cbd45270e457754bafbc5c12" translate="yes" xml:space="preserve">
          <source>Generator Types</source>
          <target state="translated">発電機の種類</target>
        </trans-unit>
        <trans-unit id="f1c6dab37c8f8bbc2a1a1c78f437217210eb50ad" translate="yes" xml:space="preserve">
          <source>Generator-based Coroutines</source>
          <target state="translated">ジェネレータベースのコルーチン</target>
        </trans-unit>
        <trans-unit id="9318bd97ef11f214febd817fed04cbde02eb2197" translate="yes" xml:space="preserve">
          <source>Generator-based coroutines predate async/await syntax. They are Python generators that use &lt;code&gt;yield from&lt;/code&gt; expressions to await on Futures and other coroutines.</source>
          <target state="translated">ジェネレータベースのコルーチンは、非同期/待機構文よりも古いものです。これらはPythonジェネレーターであり &lt;code&gt;yield from&lt;/code&gt; 式からのyieldを使用して、Futureやその他のコルーチンを待機します。</target>
        </trans-unit>
        <trans-unit id="c463bc7eba03866e87736c2166b5208e94578261" translate="yes" xml:space="preserve">
          <source>Generator-based coroutines should be decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@asyncio.coroutine&lt;/code&gt;&lt;/a&gt;, although this is not enforced.</source>
          <target state="translated">ジェネレータベースのコルーチンは&lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@asyncio.coroutine&lt;/code&gt; &lt;/a&gt;で装飾する必要がありますが、これは強制されていません。</target>
        </trans-unit>
        <trans-unit id="091c54c4935a2ee35bc6aef14311233891434110" translate="yes" xml:space="preserve">
          <source>GeneratorExit</source>
          <target state="translated">GeneratorExit</target>
        </trans-unit>
        <trans-unit id="0e0fbaa97fbe2d5968844c44481eeeeaa9d8cf4d" translate="yes" xml:space="preserve">
          <source>Generic Operating System Services</source>
          <target state="translated">汎用オペレーティングシステムサービス</target>
        </trans-unit>
        <trans-unit id="4ef339fbad9266b6e7fe779f770b71d1ef6059da" translate="yes" xml:space="preserve">
          <source>Generic element structure builder. This builder converts a sequence of start, data, end, comment and pi method calls to a well-formed element structure. You can use this class to build an element structure using a custom XML parser, or a parser for some other XML-like format.</source>
          <target state="translated">汎用的な要素構造体ビルダです。このビルダは、開始、データ、終了、コメント、およびπメソッドの呼び出しのシーケンスを、整形された要素構造に変換します。このクラスを使用して、カスタム XML パーサや他の XML ライクな形式のパーサを使用して要素構造を構築することができます。</target>
        </trans-unit>
        <trans-unit id="03071c1aabb41ff2ab0d6cc5a458c21d1dd11e1c" translate="yes" xml:space="preserve">
          <source>Generic implementation of the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;&lt;code&gt;load_tests&lt;/code&gt; protocol for use in test packages. &lt;em&gt;pkg_dir&lt;/em&gt; is the root directory of the package; &lt;em&gt;loader&lt;/em&gt;, &lt;em&gt;standard_tests&lt;/em&gt;, and &lt;em&gt;pattern&lt;/em&gt; are the arguments expected by &lt;code&gt;load_tests&lt;/code&gt;. In simple cases, the test package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt; can be the following:</source>
          <target state="translated">一般的な実装&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;load_tests&lt;/code&gt; のテストパッケージで使用するためのプロトコル。&lt;em&gt;pkg_dir&lt;/em&gt;はパッケージのルートディレクトリです。&lt;em&gt;loader&lt;/em&gt;、&lt;em&gt;standard_tests&lt;/em&gt;、および&lt;em&gt;pattern&lt;/em&gt;は、 &lt;code&gt;load_tests&lt;/code&gt; が予期する引数です。単純なケースでは、テストパッケージの &lt;code&gt;__init__.py&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="293fd67a1e9b6b131f8a1081860292ba633bb726" translate="yes" xml:space="preserve">
          <source>Generic interface to &lt;code&gt;dbm&lt;/code&gt;-style databases.</source>
          <target state="translated">&lt;code&gt;dbm&lt;/code&gt; スタイルのデータベースへの汎用インターフェース。</target>
        </trans-unit>
        <trans-unit id="ccb8e82277924f89b0be2c9144f908b084a885ad" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;IO[AnyStr]&lt;/code&gt; and its subclasses &lt;code&gt;TextIO(IO[str])&lt;/code&gt; and &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; represent the types of I/O streams such as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ジェネリック型 &lt;code&gt;IO[AnyStr]&lt;/code&gt; とそのサブクラス &lt;code&gt;TextIO(IO[str])&lt;/code&gt; および &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; は、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返されるようなI / Oストリームのタイプを表します。</target>
        </trans-unit>
        <trans-unit id="a3b7c04b18cd92e8bd3dbd66ec9303b0a0d542df" translate="yes" xml:space="preserve">
          <source>Generic version of &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;. Useful for annotating return types. To annotate arguments it is preferred to use an abstract collection type such as &lt;a href=&quot;#typing.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;汎用バージョン。戻り型に注釈を付けるのに役立ちます。引数に注釈を付けるには、&lt;a href=&quot;#typing.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;などの抽象コレクション型を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="0945c1dff6718f21aa4e4deeaab1b0eddc4c4cdc" translate="yes" xml:space="preserve">
          <source>Generics can be parameterized by using a new factory available in typing called &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt;と呼ばれる、タイピングで使用可能な新しいファクトリーを使用することにより、ジェネリックスをパラメーター化できます。</target>
        </trans-unit>
        <trans-unit id="1f99913680f7b744ab9431fbca519442e0fa1092" translate="yes" xml:space="preserve">
          <source>Geometric mean of data.</source>
          <target state="translated">データの幾何平均。</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="5e3619ade03466db61cd043463581c6cfbb2ff29" translate="yes" xml:space="preserve">
          <source>Get HTTP headers</source>
          <target state="translated">HTTP ヘッダの取得</target>
        </trans-unit>
        <trans-unit id="f09a08050952ccfb3acada1aca77f75efbcddc68" translate="yes" xml:space="preserve">
          <source>Get Mac OS version information and return it as tuple &lt;code&gt;(release, versioninfo,
machine)&lt;/code&gt; with &lt;em&gt;versioninfo&lt;/em&gt; being a tuple &lt;code&gt;(version, dev_stage,
non_release_version)&lt;/code&gt;.</source>
          <target state="translated">Mac OSのバージョン情報を取得し、タプルとしてそれを返す &lt;code&gt;(release, versioninfo, machine)&lt;/code&gt; と&lt;em&gt;VERSIONINFO&lt;/em&gt;タプルであること &lt;code&gt;(version, dev_stage, non_release_version)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="925b109ddf15351d05a8dddb0cb2a1abe8a6314b" translate="yes" xml:space="preserve">
          <source>Get a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; object for &lt;em&gt;module_or_name&lt;/em&gt;.</source>
          <target state="translated">取得&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダ&lt;/a&gt;のオブジェクト&lt;em&gt;module_or_nameを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="72d86f39c38483c75cc09653c3ddc241de805a8b" translate="yes" xml:space="preserve">
          <source>Get a character, returning a string instead of an integer, as &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; does. Function keys, keypad keys and other special keys return a multibyte string containing the key name. In no-delay mode, raise an exception if there is no input.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;が行うように、整数の代わりに文字列を返す文字を取得します。ファンクションキー、キーパッドキー、その他の特殊キーは、キー名を含むマルチバイト文字列を返します。遅延なしモードでは、入力がない場合は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6900a0c6cf3e15082dad7841462c7795b199570e" translate="yes" xml:space="preserve">
          <source>Get a character. Note that the integer returned does &lt;em&gt;not&lt;/em&gt; have to be in ASCII range: function keys, keypad keys and so on are represented by numbers higher than 255. In no-delay mode, return &lt;code&gt;-1&lt;/code&gt; if there is no input, otherwise wait until a key is pressed.</source>
          <target state="translated">キャラクターを取得します。返される整数は、ASCII範囲である必要は&lt;em&gt;ない&lt;/em&gt;ことに注意してください。ファンクションキー、キーパッドキーなどは、255より大きい数値で表されます。遅延なしモードでは、入力がない場合は &lt;code&gt;-1&lt;/code&gt; を返し、それ以外の場合はキーが表示されるまで待機しますが押されます。</target>
        </trans-unit>
        <trans-unit id="93b9156a4fc2066890c20b75a92de09ebab9456c" translate="yes" xml:space="preserve">
          <source>Get a child process watcher object.</source>
          <target state="translated">子プロセスウォッチャーオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="39098f6d062afd1a16e563ea56384bfbee189021" translate="yes" xml:space="preserve">
          <source>Get a description for a single group &lt;em&gt;group&lt;/em&gt;. If more than one group matches (if &amp;lsquo;group&amp;rsquo; is a real wildmat string), return the first match. If no group matches, return an empty string.</source>
          <target state="translated">単一のグループ&lt;em&gt;groupの&lt;/em&gt;説明を取得します。複数のグループが一致する場合（「group」が実際のワイルドマット文字列の場合）、最初の一致を返します。一致するグループがない場合は、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6df154c15550831d92d53462e0064abdf70ba6e4" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a date in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の時代に基づく方法で日付を表すための&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="21a8f80cea6f42070d455f9a01f487c95110be35" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a time in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の元号に基づいた方法で時刻を表す&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="36cacd63f5269b7f2289c301e7939d05fc6f8a5c" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent date and time in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の時代に基づく方法で日付と時刻を表すための&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="7d7dfbaa516474dd4c7e1837620af5c2c9270f58" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent time in the am/pm format.</source>
          <target state="translated">&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;形式で時刻を表すtime.strftime（）の形式文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="779b4604d3285273845eec25f955cd191148bbb6" translate="yes" xml:space="preserve">
          <source>Get a list of enabled ciphers. The list is in order of cipher priority. See &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有効な暗号のリストを取得します。リストは暗号の優先順位の順です。&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3e7ce190d87e4a26bc8ee72ce60dccb04d75c9a2" translate="yes" xml:space="preserve">
          <source>Get a list of frame records for a frame and all outer frames. These frames represent the calls that lead to the creation of &lt;em&gt;frame&lt;/em&gt;. The first entry in the returned list represents &lt;em&gt;frame&lt;/em&gt;; the last entry represents the outermost call on &lt;em&gt;frame&lt;/em&gt;&amp;rsquo;s stack.</source>
          <target state="translated">フレームとすべての外部フレームのフレームレコードのリストを取得します。これらのフレームは、の創造につながるの呼び出しを表す&lt;em&gt;フレームを&lt;/em&gt;。返されるリストの最初のエントリは&lt;em&gt;フレームを&lt;/em&gt;表し&lt;em&gt;ます&lt;/em&gt;。最後のエントリは、&lt;em&gt;フレーム&lt;/em&gt;のスタックの最も外側の呼び出しを表します。</target>
        </trans-unit>
        <trans-unit id="7f4c093b2f65ea31077045cdbdc6cb56aae52fea" translate="yes" xml:space="preserve">
          <source>Get a list of frame records for a traceback&amp;rsquo;s frame and all inner frames. These frames represent calls made as a consequence of &lt;em&gt;frame&lt;/em&gt;. The first entry in the list represents &lt;em&gt;traceback&lt;/em&gt;; the last entry represents where the exception was raised.</source>
          <target state="translated">トレースバックのフレームとすべての内部フレームのフレームレコードのリストを取得します。これらのフレームは、&lt;em&gt;フレームの&lt;/em&gt;結果として行われた呼び出しを表します。リストの最初のエントリは&lt;em&gt;トレースバックを&lt;/em&gt;表します。最後のエントリは、例外が発生した場所を表します。</target>
        </trans-unit>
        <trans-unit id="f1cb38ae88663b4d14fae92b17af5d048a78c197" translate="yes" xml:space="preserve">
          <source>Get a list of loaded &amp;ldquo;certification authority&amp;rdquo; (CA) certificates. If the &lt;code&gt;binary_form&lt;/code&gt; parameter is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; each list entry is a dict like the output of &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;. Otherwise the method returns a list of DER-encoded certificates. The returned list does not contain certificates from &lt;em&gt;capath&lt;/em&gt; unless a certificate was requested and loaded by a SSL connection.</source>
          <target state="translated">ロードされた「認証局」（CA）証明書のリストを取得します。 &lt;code&gt;binary_form&lt;/code&gt; パラメータが&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、各リストエントリは&lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; の&lt;/a&gt;出力のような辞書です。それ以外の場合、メソッドはDERエンコードされた証明書のリストを返します。返されたリストには、証明書が要求され、SSL接続によってロードされない限り、&lt;em&gt;capath&lt;/em&gt;からの証明書は含まれません。</target>
        </trans-unit>
        <trans-unit id="4d5e35a9ec661b8b336617dd56388e3578f9bcaf" translate="yes" xml:space="preserve">
          <source>Get a list of records for a frame and all higher (calling) and lower frames, and the size of the higher part.</source>
          <target state="translated">フレームとすべての上位(呼び出し)と下位フレームのレコードのリストと、上位部分のサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="b607418b2f9f5fc800736360b9d80cde873b574c" translate="yes" xml:space="preserve">
          <source>Get a regular expression that can be used with the regex function to recognize a positive response to a yes/no question.</source>
          <target state="translated">yes/noの質問に対する肯定的な応答を認識するためにregex関数で使用できる正規表現を取得します。</target>
        </trans-unit>
        <trans-unit id="79a142b2d506f97b9fb5762c6cdf9c0302dc08af" translate="yes" xml:space="preserve">
          <source>Get a regular expression that can be used with the regex(3) function to recognize a negative response to a yes/no question.</source>
          <target state="translated">yes/no の質問に対する否定的な応答を認識するために regex(3)関数で使用できる正規表現を取得。</target>
        </trans-unit>
        <trans-unit id="d3eeac88da2cc27ce1e1ed87177dc3dfa221e00e" translate="yes" xml:space="preserve">
          <source>Get a representation of up to 100 values used to represent the values 0 to 99.</source>
          <target state="translated">0 から 99 までの値の表現に使用される 100 までの値の表現を取得します。</target>
        </trans-unit>
        <trans-unit id="64b3b1f3e933b44a31fc73a92cc1c78260a70a72" translate="yes" xml:space="preserve">
          <source>Get a resource from a package.</source>
          <target state="translated">パッケージからリソースを取得します。</target>
        </trans-unit>
        <trans-unit id="7fe7caecfd8320cedfe667b5784ba16646cca4d6" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a date in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で日付を表すために、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="311be40c8088b83ef5389b49e19888ce42e3323e" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a time in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で時刻を表すために、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="2716d1bcbc1da0920dc17276d3e242e7949d040e" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent date and time in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で日時を表す&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="c22c4986b7973b0bdf63cc50710f9ea10065ba7b" translate="yes" xml:space="preserve">
          <source>Get a string that represents the era used in the current locale.</source>
          <target state="translated">現在のロケールで使われている時代を表す文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="8ecbeb2948a064a1d000fcce4ea7595bf126a0a3" translate="yes" xml:space="preserve">
          <source>Get a string with the name of the character encoding used in the selected locale.</source>
          <target state="translated">選択したロケールで使用している文字エンコーディングの名前を含む文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="3e20e2ff8c2d677c284ec272725f5d83c5c4213a" translate="yes" xml:space="preserve">
          <source>Get a wide character. Return a character for most keys, or an integer for function keys, keypad keys, and other special keys. In no-delay mode, raise an exception if there is no input.</source>
          <target state="translated">ワイド文字を取得します。ほとんどのキーについては文字を、ファンクションキー、キーパッドキー、その他の特殊なキーについては整数を返します。ノーディレイモードでは、入力がない場合は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="f7d2c3adbad9eae4cd085407b57af1cda7e455a0" translate="yes" xml:space="preserve">
          <source>Get additional version information from the Windows Registry and return a tuple &lt;code&gt;(release, version, csd, ptype)&lt;/code&gt; referring to OS release, version number, CSD level (service pack) and OS type (multi/single processor).</source>
          <target state="translated">Windowsレジストリから追加のバージョン情報を取得し、OSリリース、バージョン番号、CSDレベル（サービスパック）、OSタイプ（マルチ/シングルプロセッサ）を参照するタプル &lt;code&gt;(release, version, csd, ptype)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9deb349b97a97850ba9998a4ae913d86c706f166" translate="yes" xml:space="preserve">
          <source>Get an &lt;em&gt;option&lt;/em&gt; value for the named &lt;em&gt;section&lt;/em&gt;. If &lt;em&gt;vars&lt;/em&gt; is provided, it must be a dictionary. The &lt;em&gt;option&lt;/em&gt; is looked up in &lt;em&gt;vars&lt;/em&gt; (if provided), &lt;em&gt;section&lt;/em&gt;, and in &lt;em&gt;DEFAULTSECT&lt;/em&gt; in that order. If the key is not found and &lt;em&gt;fallback&lt;/em&gt; is provided, it is used as a fallback value. &lt;code&gt;None&lt;/code&gt; can be provided as a &lt;em&gt;fallback&lt;/em&gt; value.</source>
          <target state="translated">名前付き&lt;em&gt;セクションの&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;値を取得し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;varsを指定する&lt;/em&gt;場合は、辞書でなければなりません。&lt;em&gt;オプション&lt;/em&gt;で検索された&lt;em&gt;VARS&lt;/em&gt;（提供される場合）、&lt;em&gt;セクション&lt;/em&gt;、およびで&lt;em&gt;DEFAULTSECT&lt;/em&gt;そのために。キーが見つからず、&lt;em&gt;フォールバック&lt;/em&gt;が提供されている場合、それはフォールバック値として使用されます。&lt;em&gt;フォールバック&lt;/em&gt;値として提供できるものはあり &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08f3c39de28bbb234f03726aa9b5ed3ded2bd201" translate="yes" xml:space="preserve">
          <source>Get an attribute, raising &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">属性を取得し、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生した場合は&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="01ae41efe44d095c763c4c0a0f3afb34f4d7e286" translate="yes" xml:space="preserve">
          <source>Get an event loop instance (current or via the policy).</source>
          <target state="translated">イベントループのインスタンスを取得します(現在またはポリシーを介して)。</target>
        </trans-unit>
        <trans-unit id="09e57fb7d36421267708207c1d86d1574ffc7414" translate="yes" xml:space="preserve">
          <source>Get channel binding data for current connection, as a bytes object. Returns &lt;code&gt;None&lt;/code&gt; if not connected or the handshake has not been completed.</source>
          <target state="translated">現在の接続のチャネルバインディングデータをバイトオブジェクトとして取得します。接続されていない場合、またはハンドシェイクが完了していない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3f64df69cb849e00861c89ea45d6eb10e222793a" translate="yes" xml:space="preserve">
          <source>Get current state of a coroutine object. The function is intended to be used with coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions, but will accept any coroutine-like object that has &lt;code&gt;cr_running&lt;/code&gt; and &lt;code&gt;cr_frame&lt;/code&gt; attributes.</source>
          <target state="translated">コルーチンオブジェクトの現在の状態を取得します。この関数は、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;関数によって作成されたコルーチンオブジェクトで使用することを目的としてい &lt;code&gt;cr_running&lt;/code&gt; 、 &lt;code&gt;cr_frame&lt;/code&gt; 属性とcr_frame属性を持つ任意のコルーチンのようなオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="3bb4f5a84c2768dc4799d08ccb39e5edf77da68e" translate="yes" xml:space="preserve">
          <source>Get current state of a generator-iterator.</source>
          <target state="translated">ジェネレータ・イテレータの現在の状態を取得します。</target>
        </trans-unit>
        <trans-unit id="d23ebf469da242376e8f1406637cf81a48764515" translate="yes" xml:space="preserve">
          <source>Get information about a frame or traceback object. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; is returned.</source>
          <target state="translated">フレームまたはトレースバックオブジェクトに関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="b5c10f03a20464d9e4021f1c2f9a0a198366fccb" translate="yes" xml:space="preserve">
          <source>Get information about arguments passed into a particular frame. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the argument names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; arguments or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;locals&lt;/em&gt; is the locals dictionary of the given frame.</source>
          <target state="translated">特定のフレームに渡された引数に関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;は引数名のリストです。&lt;em&gt;varargs&lt;/em&gt;および&lt;em&gt;キーワード&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; 引数の名前、または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;locals&lt;/em&gt;は、指定されたフレームのローカル辞書です。</target>
        </trans-unit>
        <trans-unit id="82b4c672b45ae2ae6c3a3440d2312eaaed338213" translate="yes" xml:space="preserve">
          <source>Get information on the specified clock as a namespace object. Supported clock names and the corresponding functions to read their value are:</source>
          <target state="translated">指定されたクロックの情報を名前空間オブジェクトとして取得します。サポートされているクロック名と、その値を読み込むための対応する関数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0b8c4ad525dab4788364bb3a3c2c58bb4651d6cd" translate="yes" xml:space="preserve">
          <source>Get line &lt;em&gt;lineno&lt;/em&gt; from file named &lt;em&gt;filename&lt;/em&gt;. This function will never raise an exception &amp;mdash; it will return &lt;code&gt;''&lt;/code&gt; on errors (the terminating newline character will be included for lines that are found).</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;から&lt;em&gt;lineno&lt;/em&gt;行目を取得し&lt;em&gt;ます&lt;/em&gt;。この関数は決して例外を発生させません&amp;mdash; エラーの場合は &lt;code&gt;''&lt;/code&gt; を返します（見つかった行には終了改行文字が含まれます）。</target>
        </trans-unit>
        <trans-unit id="56abfe685ae982167bb48299cfb9366af1b3abe6" translate="yes" xml:space="preserve">
          <source>Get mailbox status. The result is a tuple of 2 integers: &lt;code&gt;(message count,
mailbox size)&lt;/code&gt;.</source>
          <target state="translated">メールボックスのステータスを取得します。結果は、2つの整数のタプル &lt;code&gt;(message count, mailbox size)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7725098627fdeaae6f27cbee4c8b4b5dc41d897e" translate="yes" xml:space="preserve">
          <source>Get or set the current default isolation level. &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; for autocommit mode or one of &amp;ldquo;DEFERRED&amp;rdquo;, &amp;ldquo;IMMEDIATE&amp;rdquo; or &amp;ldquo;EXCLUSIVE&amp;rdquo;. See section &lt;a href=&quot;#sqlite3-controlling-transactions&quot;&gt;Controlling Transactions&lt;/a&gt; for a more detailed explanation.</source>
          <target state="translated">現在のデフォルトの分離レベルを取得または設定します。自動コミットモードの場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、または「DEFERRED」、「IMMEDIATE」、「EXCLUSIVE」のいずれか。詳細については、&lt;a href=&quot;#sqlite3-controlling-transactions&quot;&gt;トランザクションの制御を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3bc03417d6cbea7e3ecb6629fad7db83a931b0a6" translate="yes" xml:space="preserve">
          <source>Get program scheduling priority. The value &lt;em&gt;which&lt;/em&gt; is one of &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;, and &lt;em&gt;who&lt;/em&gt; is interpreted relative to &lt;em&gt;which&lt;/em&gt; (a process identifier for &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, process group identifier for &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, and a user ID for &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;). A zero value for &lt;em&gt;who&lt;/em&gt; denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process.</source>
          <target state="translated">プログラムのスケジュールの優先順位を取得します。値の一つである&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;、そしてに対して解釈さ&lt;em&gt;れる&lt;/em&gt;（のためのプロセス識別子&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、ためのプロセスグループ識別子&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、及びためのユーザID &lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;）。&lt;em&gt;who&lt;/em&gt;のゼロ値は、（それぞれ）呼び出しプロセス、呼び出しプロセスのプロセスグループ、または呼び出しプロセスの実際のユーザーIDを示します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d02c37308a4ca42011190869a6abe80a460bff7" translate="yes" xml:space="preserve">
          <source>Get source code segment of the &lt;em&gt;source&lt;/em&gt; that generated &lt;em&gt;node&lt;/em&gt;. If some location information (&lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;end_lineno&lt;/code&gt;, &lt;code&gt;col_offset&lt;/code&gt;, or &lt;code&gt;end_col_offset&lt;/code&gt;) is missing, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ノード&lt;/em&gt;を生成した&lt;em&gt;ソースの&lt;/em&gt;ソースコードセグメントを取得し&lt;em&gt;ます&lt;/em&gt;。一部の位置情報（ &lt;code&gt;lineno&lt;/code&gt; 、 &lt;code&gt;end_lineno&lt;/code&gt; 、 &lt;code&gt;col_offset&lt;/code&gt; 、または &lt;code&gt;end_col_offset&lt;/code&gt; ）が欠落している場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5d32ba11b8ed874a1d107cf2469497841bdeac2d" translate="yes" xml:space="preserve">
          <source>Get statistics about quantities of loaded X.509 certificates, count of X.509 certificates flagged as CA certificates and certificate revocation lists as dictionary.</source>
          <target state="translated">読み込まれた X.509 証明書の量、CA 証明書としてフラグが立てられた X.509 証明書の数、および証明書の失効リストに関する統計情報を辞書として取得します。</target>
        </trans-unit>
        <trans-unit id="5cca3416b42404100e335aaac411014a84493036" translate="yes" xml:space="preserve">
          <source>Get statistics about the SSL sessions created or managed by this context. A dictionary is returned which maps the names of each &lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/ssl/SSL_CTX_sess_number.html&quot;&gt;piece of information&lt;/a&gt; to their numeric values. For example, here is the total number of hits and misses in the session cache since the context was created:</source>
          <target state="translated">このコンテキストによって作成または管理されるSSLセッションに関する統計を取得します。各&lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/ssl/SSL_CTX_sess_number.html&quot;&gt;情報の&lt;/a&gt;名前をそれらの数値にマップする辞書が返されます。たとえば、コンテキストが作成されてからのセッションキャッシュでのヒットとミスの総数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0034d7cf901bfe3dc98a8e569a5fa6dfdc2d9a7f" translate="yes" xml:space="preserve">
          <source>Get statistics as a sorted list of &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; instances grouped by &lt;em&gt;key_type&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;key_typeで&lt;/em&gt;グループ化された&lt;a href=&quot;#tracemalloc.Statistic&quot;&gt; &lt;code&gt;Statistic&lt;/code&gt; &lt;/a&gt;インスタンスのソートされたリストとして統計を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71a0d0c6b96d9e27bc9d9b0133075d626bb1a8a5" translate="yes" xml:space="preserve">
          <source>Get the &amp;ldquo;inheritable&amp;rdquo; flag of the specified file descriptor (a boolean).</source>
          <target state="translated">指定されたファイル記述子（ブール値）の「継承可能」フラグを取得します。</target>
        </trans-unit>
        <trans-unit id="6da89fa1ba2bf713a2515d037096219c1c84b16e" translate="yes" xml:space="preserve">
          <source>Get the &amp;ldquo;inheritable&amp;rdquo; flag of the specified handle (a boolean).</source>
          <target state="translated">指定されたハンドルの「継承可能」フラグを取得します（ブール値）。</target>
        </trans-unit>
        <trans-unit id="99a204199f8ab11de39c4cefe33c73816977b3b5" translate="yes" xml:space="preserve">
          <source>Get the &lt;a href=&quot;os#fd-inheritance&quot;&gt;inheritable flag&lt;/a&gt; of the socket&amp;rsquo;s file descriptor or socket&amp;rsquo;s handle: &lt;code&gt;True&lt;/code&gt; if the socket can be inherited in child processes, &lt;code&gt;False&lt;/code&gt; if it cannot.</source>
          <target state="translated">ソケットのファイル記述子またはソケットのハンドルの&lt;a href=&quot;os#fd-inheritance&quot;&gt;継承可能なフラグ&lt;/a&gt;を取得します。ソケットが子プロセスで継承できる場合は &lt;code&gt;True&lt;/code&gt; 、継承できない場合は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a11594e7f4440dd22817c1d42fb3dfdf5a8fae93" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;ACL&lt;/code&gt;s for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">&lt;em&gt;メールボックス&lt;/em&gt;の &lt;code&gt;ACL&lt;/code&gt; を取得し&lt;em&gt;ます&lt;/em&gt;。このメソッドは非標準ですが、 &lt;code&gt;Cyrus&lt;/code&gt; サーバーでサポートされています。</target>
        </trans-unit>
        <trans-unit id="62ed1935a345fb89b1f42290845822923a2d4e23" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;quota&lt;/code&gt;&lt;em&gt;root&lt;/em&gt;&amp;rsquo;s resource usage and limits. This method is part of the IMAP4 QUOTA extension defined in rfc2087.</source>
          <target state="translated">&lt;code&gt;quota&lt;/code&gt; &lt;em&gt;ルート&lt;/em&gt;のリソース使用量と制限を取得します。このメソッドは、rfc2087で定義されているIMAP4 QUOTA拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="3a961039695bf6ec70838cd0a62ba649bc21c194" translate="yes" xml:space="preserve">
          <source>Get the &lt;em&gt;high&lt;/em&gt; and &lt;em&gt;low&lt;/em&gt; watermarks for write flow control. Return a tuple &lt;code&gt;(low, high)&lt;/code&gt; where &lt;em&gt;low&lt;/em&gt; and &lt;em&gt;high&lt;/em&gt; are positive number of bytes.</source>
          <target state="translated">書き込みフロー制御の&lt;em&gt;最高水準点&lt;/em&gt;と&lt;em&gt;最低&lt;/em&gt;水準点を取得します。タプルを返す &lt;code&gt;(low, high)&lt;/code&gt; &lt;em&gt;低&lt;/em&gt;及び&lt;em&gt;高&lt;/em&gt;バイトの正の数であるが。</target>
        </trans-unit>
        <trans-unit id="950213a057a7b0f3c148a395b7d76a1a57669d58" translate="yes" xml:space="preserve">
          <source>Get the abbreviated name of the n-th day of the week.</source>
          <target state="translated">N番目の曜日の略称を取得します。</target>
        </trans-unit>
        <trans-unit id="2606b866e21df1e456ea346f3ba77c930e8e772e" translate="yes" xml:space="preserve">
          <source>Get the abbreviated name of the n-th month.</source>
          <target state="translated">n番目の月の略称を取得します。</target>
        </trans-unit>
        <trans-unit id="cd047d70fed736913d2d4ddb822753146b7e0c61" translate="yes" xml:space="preserve">
          <source>Get the beginning or ending index of the completion scope. These indexes are the &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; arguments passed to the &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; callback of the underlying library.</source>
          <target state="translated">完了スコープの開始または終了インデックスを取得します。これらのインデックスは、基になるライブラリの &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; コールバックに渡される&lt;em&gt;開始&lt;/em&gt;引数と&lt;em&gt;終了&lt;/em&gt;引数です。</target>
        </trans-unit>
        <trans-unit id="2a36e6bb528c0dc3b81202199caa718a57570eb8" translate="yes" xml:space="preserve">
          <source>Get the blocking mode of the file descriptor: &lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#os.O_NONBLOCK&quot;&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag is set, &lt;code&gt;True&lt;/code&gt; if the flag is cleared.</source>
          <target state="translated">ファイル記述子のブロッキングモードを取得します&lt;a href=&quot;#os.O_NONBLOCK&quot;&gt; &lt;code&gt;O_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグが設定されている場合は &lt;code&gt;False&lt;/code&gt; 、フラグがクリアされている場合は &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d75e1fa5d5d51e274fc8468c8ced8caf9883e2e" translate="yes" xml:space="preserve">
          <source>Get the byte stream for this input source.</source>
          <target state="translated">この入力ソースのバイトストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="2dd1f4352605a34e9229c97f7a82c7f75c343dc1" translate="yes" xml:space="preserve">
          <source>Get the character encoding of this InputSource.</source>
          <target state="translated">このInputSourceの文字エンコーディングを取得します。</target>
        </trans-unit>
        <trans-unit id="95de35f00d3f32900bfe5c66c4ea0aaa669628f3" translate="yes" xml:space="preserve">
          <source>Get the character stream for this input source.</source>
          <target state="translated">この入力ソースの文字ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="18faa6d92447d0677d396db1eec4f83e30d32ce8" translate="yes" xml:space="preserve">
          <source>Get the completer function, or &lt;code&gt;None&lt;/code&gt; if no completer function has been set.</source>
          <target state="translated">補完関数を取得します。補完関数が設定されていない場合は &lt;code&gt;None&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c9552545be668379a153f9b3e0012ad6492851ac" translate="yes" xml:space="preserve">
          <source>Get the currency symbol, preceded by &amp;ldquo;-&amp;rdquo; if the symbol should appear before the value, &amp;ldquo;+&amp;rdquo; if the symbol should appear after the value, or &amp;ldquo;.&amp;rdquo; if the symbol should replace the radix character.</source>
          <target state="translated">通貨記号を取得します。値の前に記号を表示する場合は「-」、値の後に記号を表示する場合は「+」、または「。」を前に付けます。シンボルが基数文字を置き換えるかどうか。</target>
        </trans-unit>
        <trans-unit id="af676806212458a98a5fcaf1ecd37e932430adf7" translate="yes" xml:space="preserve">
          <source>Get the current coroutine origin tracking depth, as set by &lt;a href=&quot;#sys.set_coroutine_origin_tracking_depth&quot;&gt;&lt;code&gt;set_coroutine_origin_tracking_depth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.set_coroutine_origin_tracking_depth&quot;&gt; &lt;code&gt;set_coroutine_origin_tracking_depth()&lt;/code&gt; で&lt;/a&gt;設定された現在のコルーチン起点追跡深度を取得します。</target>
        </trans-unit>
        <trans-unit id="21bc3e18b69cedb70fba9d2d7af46bb81851c651" translate="yes" xml:space="preserve">
          <source>Get the current debug mode.</source>
          <target state="translated">現在のデバッグモードを取得します。</target>
        </trans-unit>
        <trans-unit id="9147306d385a899f0990612dc38a5e8cbd44b174" translate="yes" xml:space="preserve">
          <source>Get the current event loop. If there is no current event loop set in the current OS thread and &lt;a href=&quot;#asyncio.set_event_loop&quot;&gt;&lt;code&gt;set_event_loop()&lt;/code&gt;&lt;/a&gt; has not yet been called, asyncio will create a new event loop and set it as the current one.</source>
          <target state="translated">現在のイベントループを取得します。現在のOSスレッドに現在のイベントループが設定されておらず、&lt;a href=&quot;#asyncio.set_event_loop&quot;&gt; &lt;code&gt;set_event_loop()&lt;/code&gt; &lt;/a&gt;がまだ呼び出されていない場合、asyncioは新しいイベントループを作成し、それを現在のイベントループとして設定します。</target>
        </trans-unit>
        <trans-unit id="9fbacbbcf2b837c80ba45aea42673fc9e4cf458a" translate="yes" xml:space="preserve">
          <source>Get the current exception handler.</source>
          <target state="translated">現在の例外ハンドラを取得します。</target>
        </trans-unit>
        <trans-unit id="4197cb00152b09fb11f3cc03418b4e6a301eb8da" translate="yes" xml:space="preserve">
          <source>Get the current size and peak size of memory blocks traced by the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module as a tuple: &lt;code&gt;(current: int, peak: int)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールによってトレースされたメモリブロックの現在のサイズとピークサイズをタプルとして取得します： &lt;code&gt;(current: int, peak: int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="626d548bdef64d0a48f07c8cda0a11f5c10bcbfc" translate="yes" xml:space="preserve">
          <source>Get the debug mode (&lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;) of the event loop.</source>
          <target state="translated">イベントループのデバッグモード（&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;）を取得します。</target>
        </trans-unit>
        <trans-unit id="8ded36169c7cff99c312b7341fa1bdec62461193" translate="yes" xml:space="preserve">
          <source>Get the default value for a namespace attribute, as set by either &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">いずれかの方法でセットとして、名前空間属性のデフォルト値を取得します&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;またはによって&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fd913673fefa31b516e470f7cb6bcbec7e7a99e1" translate="yes" xml:space="preserve">
          <source>Get the documentation string for an object, cleaned up with &lt;a href=&quot;#inspect.cleandoc&quot;&gt;&lt;code&gt;cleandoc()&lt;/code&gt;&lt;/a&gt;. If the documentation string for an object is not provided and the object is a class, a method, a property or a descriptor, retrieve the documentation string from the inheritance hierarchy.</source>
          <target state="translated">&lt;a href=&quot;#inspect.cleandoc&quot;&gt; &lt;code&gt;cleandoc()&lt;/code&gt; &lt;/a&gt;でクリーンアップされたオブジェクトの説明文字列を取得します。オブジェクトの説明文字列が提供されておらず、オブジェクトがクラス、メソッド、プロパティ、または記述子である場合は、継承階層から説明文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="26444a9c7dae84ae670e89b9e343f089a402bf15" translate="yes" xml:space="preserve">
          <source>Get the event loop for the current context.</source>
          <target state="translated">現在のコンテキストのイベントループを取得します。</target>
        </trans-unit>
        <trans-unit id="10b306fb1b873fece8b5be20d28de802e14a266d" translate="yes" xml:space="preserve">
          <source>Get the factory &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt;&lt;code&gt;loop.create_task()&lt;/code&gt;&lt;/a&gt; uses to create &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Tasks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt; &lt;code&gt;loop.create_task()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Tasks&lt;/code&gt; の&lt;/a&gt;作成に使用するファクトリーを取得します。</target>
        </trans-unit>
        <trans-unit id="d3e5d5493d44e924f29fef4accb44b80d73eed0d" translate="yes" xml:space="preserve">
          <source>Get the hardware address as a 48-bit positive integer. The first time this runs, it may launch a separate program, which could be quite slow. If all attempts to obtain the hardware address fail, we choose a random 48-bit number with the multicast bit (least significant bit of the first octet) set to 1 as recommended in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;. &amp;ldquo;Hardware address&amp;rdquo; means the MAC address of a network interface. On a machine with multiple network interfaces, universally administered MAC addresses (i.e. where the second least significant bit of the first octet is &lt;em&gt;unset&lt;/em&gt;) will be preferred over locally administered MAC addresses, but with no other ordering guarantees.</source>
          <target state="translated">ハードウェアアドレスを48ビットの正の整数として取得します。これが初めて実行されるときに、別のプログラムを起動する可能性があります。ハードウェアアドレスを取得するすべての試みが失敗した場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4122で&lt;/strong&gt;&lt;/a&gt;推奨されているように、マルチキャストビット（最初のオクテットの最下位ビット）が1に設定されたランダムな48ビット番号を選択します。 「ハードウェアアドレス」とは、ネットワークインターフェイスのMACアドレスを意味します。複数のネットワークインターフェースを備えたマシンでは、ユニバーサルに管理されるMACアドレス（つまり、最初のオクテットの2番目の最下位ビットが&lt;em&gt;設定&lt;/em&gt;されていない）がローカルで管理されるMACアドレスよりも優先されますが、他の順序の保証はありません。</target>
        </trans-unit>
        <trans-unit id="86bdc03571623456348b97e7751c036a41840cbf" translate="yes" xml:space="preserve">
          <source>Get the list of &lt;code&gt;quota&lt;/code&gt;&lt;code&gt;roots&lt;/code&gt; for the named &lt;em&gt;mailbox&lt;/em&gt;. This method is part of the IMAP4 QUOTA extension defined in rfc2087.</source>
          <target state="translated">指定された&lt;em&gt;メールボックスの&lt;/em&gt; &lt;code&gt;quota&lt;/code&gt; &lt;code&gt;roots&lt;/code&gt; のリストを取得し&lt;em&gt;ます&lt;/em&gt;。このメソッドは、rfc2087で定義されているIMAP4 QUOTA拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="c9a0f4fdae3a78828ee0d60e9492707425bddc34" translate="yes" xml:space="preserve">
          <source>Get the mapping of external name references in a Python function or method &lt;em&gt;func&lt;/em&gt; to their current values. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; is returned. &lt;em&gt;nonlocals&lt;/em&gt; maps referenced names to lexical closure variables, &lt;em&gt;globals&lt;/em&gt; to the function&amp;rsquo;s module globals and &lt;em&gt;builtins&lt;/em&gt; to the builtins visible from the function body. &lt;em&gt;unbound&lt;/em&gt; is the set of names referenced in the function that could not be resolved at all given the current module globals and builtins.</source>
          <target state="translated">Python関数またはメソッド&lt;em&gt;func&lt;/em&gt;の外部名参照の現在の値へのマッピングを取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; 返されます。&lt;em&gt;nonlocals&lt;/em&gt;は、参照名を字句閉鎖変数に、&lt;em&gt;グローバル&lt;/em&gt;を関数のモジュールグローバルに、&lt;em&gt;ビルトイン&lt;/em&gt;を関数本体から見える&lt;em&gt;ビルトイン&lt;/em&gt;にマッピングします。&lt;em&gt;unbound&lt;/em&gt;は、現在のモジュールグローバルとビルトインが指定されているため、まったく解決できなかった、関数で参照されている名前のセットです。</target>
        </trans-unit>
        <trans-unit id="c22b31eb9439f4414864003fe23d0a2bf9e90c0a" translate="yes" xml:space="preserve">
          <source>Get the mapping of live local variables in &lt;em&gt;generator&lt;/em&gt; to their current values. A dictionary is returned that maps from variable names to values. This is the equivalent of calling &lt;a href=&quot;functions#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; in the body of the generator, and all the same caveats apply.</source>
          <target state="translated">&lt;em&gt;ジェネレーターの&lt;/em&gt;ライブローカル変数の現在の値へのマッピングを取得します。変数名から値にマップする辞書が返されます。これは、ジェネレータの本体で&lt;a href=&quot;functions#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じであり、すべて同じ警告が適用されます。</target>
        </trans-unit>
        <trans-unit id="beed10cfe2d77794b1bbb3bbdc91c0102b02eadb" translate="yes" xml:space="preserve">
          <source>Get the maximum number of frames stored in the traceback of a trace.</source>
          <target state="translated">トレースのトレースバックに格納されている最大フレーム数を取得します。</target>
        </trans-unit>
        <trans-unit id="875f24fe095e6b18c21feed2477aac6da64b14a3" translate="yes" xml:space="preserve">
          <source>Get the maximum priority value for &lt;em&gt;policy&lt;/em&gt;. &lt;em&gt;policy&lt;/em&gt; is one of the scheduling policy constants above.</source>
          <target state="translated">&lt;em&gt;ポリシーの&lt;/em&gt;優先度の最大値を取得します。&lt;em&gt;policy&lt;/em&gt;は、上記のスケジューリングポリシー定数の1つです。</target>
        </trans-unit>
        <trans-unit id="d831a3fe762715d892a6266acc85d2860eacbda6" translate="yes" xml:space="preserve">
          <source>Get the memory usage in bytes of the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module used to store traces of memory blocks. Return an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリブロックのトレースを格納するために使用される&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールのメモリ使用量をバイト単位で取得します。&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5fca68a5a7ae5234cb479afea741b6da40bf623c" translate="yes" xml:space="preserve">
          <source>Get the minimum priority value for &lt;em&gt;policy&lt;/em&gt;. &lt;em&gt;policy&lt;/em&gt; is one of the scheduling policy constants above.</source>
          <target state="translated">&lt;em&gt;ポリシーの&lt;/em&gt;優先度の最小値を取得します。&lt;em&gt;policy&lt;/em&gt;は、上記のスケジューリングポリシー定数の1つです。</target>
        </trans-unit>
        <trans-unit id="d8ac71296ef3a58835643bd261a8ccd491ad148f" translate="yes" xml:space="preserve">
          <source>Get the name of the n-th day of the week.</source>
          <target state="translated">N番目の曜日の名前を取得します。</target>
        </trans-unit>
        <trans-unit id="177c736ff7d8d1f378de31fc0c8a6a656a7d692b" translate="yes" xml:space="preserve">
          <source>Get the name of the n-th month.</source>
          <target state="translated">n番目の月の名前を取得します。</target>
        </trans-unit>
        <trans-unit id="cdf70fb867a7db976d8f951c29595f87261634f2" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; is returned:</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプルが&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="f96a65f3bc54287ada72c5b7fe9623f023a380a0" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the parameter names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; parameters or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;defaults&lt;/em&gt; is a tuple of default argument values or &lt;code&gt;None&lt;/code&gt; if there are no default arguments; if this tuple has &lt;em&gt;n&lt;/em&gt; elements, they correspond to the last &lt;em&gt;n&lt;/em&gt; elements listed in &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;はパラメーター名のリストです。&lt;em&gt;varargs&lt;/em&gt;および&lt;em&gt;キーワード&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; パラメーターの名前、または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;defaults&lt;/em&gt;はデフォルトの引数値のタプルです。デフォルトの引数がない場合は &lt;code&gt;None&lt;/code&gt; です。このタプルに&lt;em&gt;n個の&lt;/em&gt;要素がある&lt;em&gt;場合&lt;/em&gt;、それらは&lt;em&gt;argsに&lt;/em&gt;リストされている最後の&lt;em&gt;n個の&lt;/em&gt;要素に対応します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="338f1e4cd4abd99d9096cc0a0fe019657231fcb8" translate="yes" xml:space="preserve">
          <source>Get the object wrapped by &lt;em&gt;func&lt;/em&gt;. It follows the chain of &lt;code&gt;__wrapped__&lt;/code&gt; attributes returning the last object in the chain.</source>
          <target state="translated">&lt;em&gt;funcで&lt;/em&gt;ラップされたオブジェクトを取得します。 &lt;code&gt;__wrapped__&lt;/code&gt; 属性のチェーンに従い、チェーンの最後のオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="eeb0543617fc198eb7f84637ea5bfb7ba0fb9e29" translate="yes" xml:space="preserve">
          <source>Get the profiler function as set by &lt;a href=&quot;#sys.setprofile&quot;&gt;&lt;code&gt;setprofile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.setprofile&quot;&gt; &lt;code&gt;setprofile()&lt;/code&gt; で&lt;/a&gt;設定されたプロファイラー関数を取得します。</target>
        </trans-unit>
        <trans-unit id="d1faa97d2137acdfa90b6bf60ff4c74956dba073" translate="yes" xml:space="preserve">
          <source>Get the radix character (decimal dot, decimal comma, etc.).</source>
          <target state="translated">基数文字(10進数ドット、10進数カンマなど)を取得します。</target>
        </trans-unit>
        <trans-unit id="c01a5ccde9ac49c55eb2b32526014a7b15ecf2ae" translate="yes" xml:space="preserve">
          <source>Get the separator character for thousands (groups of three digits).</source>
          <target state="translated">数千(3桁のグループ)の区切り文字を取得します。</target>
        </trans-unit>
        <trans-unit id="0e78eed124f99dc526d554a9b3edaa9f5e91b866" translate="yes" xml:space="preserve">
          <source>Get the size of the terminal window.</source>
          <target state="translated">ターミナルウィンドウのサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="0a9e259bb5fda4714972337dc041313d9ac70f7b" translate="yes" xml:space="preserve">
          <source>Get the status of a file or a file descriptor. Perform the equivalent of a &lt;code&gt;stat()&lt;/code&gt; system call on the given path. &lt;em&gt;path&lt;/em&gt; may be specified as either a string or bytes &amp;ndash; directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface &amp;ndash; or as an open file descriptor. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ファイルまたはファイル記述子のステータスを取得します。指定されたパスで &lt;code&gt;stat()&lt;/code&gt; システムコールに相当するものを実行します。&lt;em&gt;パス&lt;/em&gt;は、文字列またはバイトのいずれかとして（&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを介して直接または間接的に）、またはオープンファイル記述子として指定できます。&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0ca243f70cf806ef62d1afffa88dfc484f305191" translate="yes" xml:space="preserve">
          <source>Get the status of the file descriptor &lt;em&gt;fd&lt;/em&gt;. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdの&lt;/em&gt;ステータスを取得します。&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="8dd3f7ebeb39e689a6b4f2254d583df995061fb3" translate="yes" xml:space="preserve">
          <source>Get the trace function as set by &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; で&lt;/a&gt;設定されたトレース関数を取得します。</target>
        </trans-unit>
        <trans-unit id="2bb9c949f80db687c4f3b3bcb5ae6488810e0e05" translate="yes" xml:space="preserve">
          <source>Get the traceback of a memory block</source>
          <target state="translated">メモリブロックのトレースバックを取得</target>
        </trans-unit>
        <trans-unit id="96491598d89e33d5f629f33a8e143413fe56b6b3" translate="yes" xml:space="preserve">
          <source>Get the traceback where the Python object &lt;em&gt;obj&lt;/em&gt; was allocated. Return a &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance, or &lt;code&gt;None&lt;/code&gt; if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is not tracing memory allocations or did not trace the allocation of the object.</source>
          <target state="translated">Pythonオブジェクト&lt;em&gt;obj&lt;/em&gt;が割り当てられたトレースバックを取得します。&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールがメモリ割り当てをトレースしていないか、オブジェクトの割り当てをトレースしていなかった場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e0cd0d7d768a7bc89269e2610f57234df9dc174c" translate="yes" xml:space="preserve">
          <source>Get the type of completion being attempted. This returns the &lt;code&gt;rl_completion_type&lt;/code&gt; variable in the underlying library as an integer.</source>
          <target state="translated">試行されている補完のタイプを取得します。これは、基になるライブラリの &lt;code&gt;rl_completion_type&lt;/code&gt; 変数を整数として返します。</target>
        </trans-unit>
        <trans-unit id="14634fd7695059ed33b02f9c5c68979403fb0a78" translate="yes" xml:space="preserve">
          <source>Get up to &lt;em&gt;size&lt;/em&gt; random bytes. The function can return less bytes than requested.</source>
          <target state="translated">最大&lt;em&gt;サイズの&lt;/em&gt;ランダムバイトを取得します。この関数は、要求されたバイトよりも少ないバイトを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="01cc5b73e04d7942d8b95f16fb4f30afb296c429" translate="yes" xml:space="preserve">
          <source>Get user/password for given realm and URI, if any. This method will return &lt;code&gt;(None, None)&lt;/code&gt; if there is no matching user/password.</source>
          <target state="translated">特定のレルムとURIのユーザー/パスワードがあれば取​​得します。このメソッドは、一致するユーザー/パスワードがない場合 &lt;code&gt;(None, None)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8cc37b119889ac835c7737c5753d9caa568b7839" translate="yes" xml:space="preserve">
          <source>Gets the element attribute named &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;という名前の要素属性を取得します。</target>
        </trans-unit>
        <trans-unit id="760100f396e380d5b81eb981f228550498eeda61" translate="yes" xml:space="preserve">
          <source>Gets the options maintained by the Tix scheme mechanism.</source>
          <target state="translated">Tix スキーム機構が保持するオプションを取得します。</target>
        </trans-unit>
        <trans-unit id="54f6b9f42996ad493427dc7a89ff5033c4ae88a3" translate="yes" xml:space="preserve">
          <source>Getting and Setting the Policy</source>
          <target state="translated">ポリシーの取得と設定</target>
        </trans-unit>
        <trans-unit id="de41be2be50480bb76b3f0a07f5885974cbf1c6f" translate="yes" xml:space="preserve">
          <source>Given &lt;em&gt;field_name&lt;/em&gt; as returned by &lt;a href=&quot;#string.Formatter.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; (see above), convert it to an object to be formatted. Returns a tuple (obj, used_key). The default version takes strings of the form defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;, such as &amp;ldquo;0[name]&amp;rdquo; or &amp;ldquo;label.title&amp;rdquo;. &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; are as passed in to &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt;. The return value &lt;em&gt;used_key&lt;/em&gt; has the same meaning as the &lt;em&gt;key&lt;/em&gt; parameter to &lt;a href=&quot;#string.Formatter.get_value&quot;&gt;&lt;code&gt;get_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所与&lt;em&gt;FIELD_NAMEを&lt;/em&gt;によって返される&lt;a href=&quot;#string.Formatter.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;フォーマットされるオブジェクトに変換し、（上記参照）。タプル（obj、used_key）を返します。デフォルトのバージョンは、「0 [name]」や「label.title」など、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;で定義された形式の文字列を取ります。&lt;em&gt;args&lt;/em&gt;と&lt;em&gt;kwargs&lt;/em&gt;は&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; に&lt;/a&gt;渡されるとおりです。戻り値&lt;em&gt;used_key&lt;/em&gt;は、&lt;a href=&quot;#string.Formatter.get_value&quot;&gt; &lt;code&gt;get_value()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;キー&lt;/em&gt;パラメータと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="6f55d836d4948d424938d2512af324936d2aeb59" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;sequence&lt;/em&gt; produced by &lt;a href=&quot;#difflib.Differ.compare&quot;&gt;&lt;code&gt;Differ.compare()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt;, extract lines originating from file 1 or 2 (parameter &lt;em&gt;which&lt;/em&gt;), stripping off line prefixes.</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ.compare&quot;&gt; &lt;code&gt;Differ.compare()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;によって生成された&lt;em&gt;シーケンス&lt;/em&gt;を前提として、ファイル1または2（パラメーター&lt;em&gt;which&lt;/em&gt;）から始まる行を抽出し、行のプレフィックスを取り除きます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05595a6c90f0a99ee3d09b89a7cd936fde90ed53" translate="yes" xml:space="preserve">
          <source>Given a certificate as a DER-encoded blob of bytes, returns a PEM-encoded string version of the same certificate.</source>
          <target state="translated">証明書がDERエンコードされたバイト数のブロブとして与えられると、同じ証明書のPEMエンコードされた文字列バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="3a46c2f2901d1cbae641511ae251e6f2a6550436" translate="yes" xml:space="preserve">
          <source>Given a certificate as an ASCII PEM string, returns a DER-encoded sequence of bytes for that same certificate.</source>
          <target state="translated">証明書がASCII PEM文字列として与えられると、その証明書のDERエンコードされたバイト列を返します。</target>
        </trans-unit>
        <trans-unit id="f45ddf3586cd5194519fa8686d71f3049a3d0b96" translate="yes" xml:space="preserve">
          <source>Given a class defining one or more rich comparison ordering methods, this class decorator supplies the rest. This simplifies the effort involved in specifying all of the possible rich comparison operations:</source>
          <target state="translated">1 つ以上のリッチ比較順序付けメソッドを定義するクラスがある場合、このクラス デコレータは残りのメソッドを提供します。これにより、可能なすべてのリッチ比較操作を指定する手間が省けます。</target>
        </trans-unit>
        <trans-unit id="f7b3e25f5e05ce99668bfb371e67ba352cbbde2c" translate="yes" xml:space="preserve">
          <source>Given a list of tuples or &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects as returned by &lt;a href=&quot;#traceback.extract_tb&quot;&gt;&lt;code&gt;extract_tb()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#traceback.extract_stack&quot;&gt;&lt;code&gt;extract_stack()&lt;/code&gt;&lt;/a&gt;, return a list of strings ready for printing. Each string in the resulting list corresponds to the item with the same index in the argument list. Each string ends in a newline; the strings may contain internal newlines as well, for those items whose source text line is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#traceback.extract_tb&quot;&gt; &lt;code&gt;extract_tb()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#traceback.extract_stack&quot;&gt; &lt;code&gt;extract_stack()&lt;/code&gt; &lt;/a&gt;によって返されるタプルまたは&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;オブジェクトのリストを指定すると、印刷の準備ができている文字列のリストを返します。結果のリストの各文字列は、引数リストの同じインデックスを持つアイテムに対応します。各文字列は改行で終わります。文字列には、ソーステキスト行が &lt;code&gt;None&lt;/code&gt; ではない項目の内部改行も含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="8e790336403204248eacd64786fa774cb6247304" translate="yes" xml:space="preserve">
          <source>Given a string &lt;code&gt;cfg://handlers.myhandler.mykey.123&lt;/code&gt;, this will resolve to &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt;. If the string is specified as &lt;code&gt;cfg://handlers.myhandler.mykey[123]&lt;/code&gt;, the system will attempt to retrieve the value from &lt;code&gt;config_dict['handlers']['myhandler']['mykey'][123]&lt;/code&gt;, and fall back to &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; if that fails.</source>
          <target state="translated">文字列 &lt;code&gt;cfg://handlers.myhandler.mykey.123&lt;/code&gt; を指定すると、これは &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; ます。文字列が &lt;code&gt;cfg://handlers.myhandler.mykey[123]&lt;/code&gt; として指定されている場合、システムは &lt;code&gt;config_dict['handlers']['myhandler']['mykey'][123]&lt;/code&gt; から値を取得しようとし、戻っ &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; それが失敗した場合。</target>
        </trans-unit>
        <trans-unit id="d84b01d7456dcc777d8a082e4eabece2ca9ed79a" translate="yes" xml:space="preserve">
          <source>Given a string representing one Unicode character, return an integer representing the Unicode code point of that character. For example, &lt;code&gt;ord('a')&lt;/code&gt; returns the integer &lt;code&gt;97&lt;/code&gt; and &lt;code&gt;ord('&amp;euro;')&lt;/code&gt; (Euro sign) returns &lt;code&gt;8364&lt;/code&gt;. This is the inverse of &lt;a href=&quot;#chr&quot;&gt;&lt;code&gt;chr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">1つのUnicode文字を表す文字列を指定すると、その文字のUnicodeコードポイントを表す整数を返します。たとえば、 &lt;code&gt;ord('a')&lt;/code&gt; は整数 &lt;code&gt;97&lt;/code&gt; を返し、 &lt;code&gt;ord('&amp;euro;')&lt;/code&gt; （ユーロ記号）は &lt;code&gt;8364&lt;/code&gt; を返します。これは&lt;a href=&quot;#chr&quot;&gt; &lt;code&gt;chr()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="1e6e2f86433a718f222be5f912b3a524bf362339" translate="yes" xml:space="preserve">
          <source>Given the &lt;em&gt;path&lt;/em&gt; to a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; file name, return the associated source code file path. For example, if &lt;em&gt;path&lt;/em&gt; is &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; the returned path would be &lt;code&gt;/foo/bar/baz.py&lt;/code&gt;. &lt;em&gt;path&lt;/em&gt; need not exist, however if it does not conform to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; format, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If &lt;code&gt;sys.implementation.cache_tag&lt;/code&gt; is not defined, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;ファイル名への&lt;em&gt;パス&lt;/em&gt;を指定すると、関連するソースコードファイルパスを返します。たとえば、&lt;em&gt;パス&lt;/em&gt;が &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; の場合、返される&lt;em&gt;パス&lt;/em&gt;は/foo/bar/baz.pyになり &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; 。&lt;em&gt;パス&lt;/em&gt;が存在する必要はありませんが、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;または&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;形式に準拠していない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。 &lt;code&gt;sys.implementation.cache_tag&lt;/code&gt; が定義されていない場合、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08ed0d8e8bad29829940b285ece41c02bdf11fd1" translate="yes" xml:space="preserve">
          <source>Given the address &lt;code&gt;addr&lt;/code&gt; of an SSL-protected server, as a (&lt;em&gt;hostname&lt;/em&gt;, &lt;em&gt;port-number&lt;/em&gt;) pair, fetches the server&amp;rsquo;s certificate, and returns it as a PEM-encoded string. If &lt;code&gt;ssl_version&lt;/code&gt; is specified, uses that version of the SSL protocol to attempt to connect to the server. If &lt;code&gt;ca_certs&lt;/code&gt; is specified, it should be a file containing a list of root certificates, the same format as used for the same parameter in &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;. The call will attempt to validate the server certificate against that set of root certificates, and will fail if the validation attempt fails.</source>
          <target state="translated">SSLで保護されたサーバーのアドレス &lt;code&gt;addr&lt;/code&gt; を（&lt;em&gt;hostname&lt;/em&gt;、&lt;em&gt;port-number&lt;/em&gt;）ペアとして指定すると、サーバーの証明書をフェッチして、PEMエンコードされた文字列として返します。 &lt;code&gt;ssl_version&lt;/code&gt; が指定されている場合、SSLプロトコルのそのバージョンを使用してサーバーへの接続を試みます。 &lt;code&gt;ca_certs&lt;/code&gt; を指定する場合は、ルート証明書のリストを含むファイルにする必要があります&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;同じパラメーターに使用されるのと同じ形式です。呼び出しは、その一連のルート証明書に対してサーバー証明書の検証を試み、検証の試みが失敗すると失敗します。</target>
        </trans-unit>
        <trans-unit id="ed1cc9e34fb1d371b7d753410f4cb40d45c04f7f" translate="yes" xml:space="preserve">
          <source>Given the following test function:</source>
          <target state="translated">次のようなテスト関数があるとします。</target>
        </trans-unit>
        <trans-unit id="9ccf5a3550325aa609fd4d8289371b325a3aab2b" translate="yes" xml:space="preserve">
          <source>Giving a name to the &amp;ldquo;no flags set&amp;rdquo; condition does not change its boolean value:</source>
          <target state="translated">「フラグ設定なし」条件に名前を付けても、ブール値は変更されません。</target>
        </trans-unit>
        <trans-unit id="3e2578c8d3e2264288e1d7a420984d59a44f0d09" translate="yes" xml:space="preserve">
          <source>Glob the given relative &lt;em&gt;pattern&lt;/em&gt; in the directory represented by this path, yielding all matching files (of any kind):</source>
          <target state="translated">このパスで表されるディレクトリ内の指定された相対&lt;em&gt;パターンを&lt;/em&gt;取得し、（すべての種類の）すべての一致するファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="70ae8e14e7d7a8122e7468fd602556f9b4388301" translate="yes" xml:space="preserve">
          <source>Global variables</source>
          <target state="translated">グローバル変数</target>
        </trans-unit>
        <trans-unit id="763165ef1af70712caac84a0ad4d0d255c31eed2" translate="yes" xml:space="preserve">
          <source>Go to File/Line</source>
          <target state="translated">ファイル/ラインに移動</target>
        </trans-unit>
        <trans-unit id="98a2592d28e0bc9b3ae17e6fc5fd6e49205211a0" translate="yes" xml:space="preserve">
          <source>Go to Line</source>
          <target state="translated">ラインへ</target>
        </trans-unit>
        <trans-unit id="7b92a290556d84784e64aaddf1fbea6d40138fe0" translate="yes" xml:space="preserve">
          <source>Go to file/line</source>
          <target state="translated">ファイル/行に移動</target>
        </trans-unit>
        <trans-unit id="eead8cc449a5fdb49abd4cc5eb6d4c8fb413f5a1" translate="yes" xml:space="preserve">
          <source>Go to left edge of window.</source>
          <target state="translated">ウィンドウの左端に移動します。</target>
        </trans-unit>
        <trans-unit id="563cd67337a9db639ff613ae3b62460c15808b8b" translate="yes" xml:space="preserve">
          <source>Go to right edge (stripspaces off) or end of line (stripspaces on).</source>
          <target state="translated">右端(stripspaces off)または線の端(stripspaces on)に行く。</target>
        </trans-unit>
        <trans-unit id="46f9595417e3e508f5e81f695930a38e4fb89c1b" translate="yes" xml:space="preserve">
          <source>Graphical User Interfaces with Tk</source>
          <target state="translated">Tkを使ったグラフィカルユーザーインターフェース</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="933bf21afdd55a0d2283845fed0e7bbdd1f5db49" translate="yes" xml:space="preserve">
          <source>Green</source>
          <target state="translated">Green</target>
        </trans-unit>
        <trans-unit id="7e1a78fc7119624ad45bbfba5788d2e14052b1c6" translate="yes" xml:space="preserve">
          <source>Group ID of the user who originally stored this member.</source>
          <target state="translated">このメンバーを元々保存していたユーザーのグループID。</target>
        </trans-unit>
        <trans-unit id="7c12f123a309d736f2ff94b7014ed4186a9c5e23" translate="yes" xml:space="preserve">
          <source>Group Separator</source>
          <target state="translated">グループセパレータ</target>
        </trans-unit>
        <trans-unit id="f5868c9eb60476a70674ffb21a653d9b1b541f04" translate="yes" xml:space="preserve">
          <source>Group database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;group&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">グループデータベースエントリはタプルのようなオブジェクトとして報告され、その属性は &lt;code&gt;group&lt;/code&gt; 構造のメンバーに対応します（以下の属性フィールド、 &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt; を参照）：</target>
        </trans-unit>
        <trans-unit id="f6735a5ee92cee7bdb9905cfbf3933c275bf1379" translate="yes" xml:space="preserve">
          <source>Group has execute permission.</source>
          <target state="translated">グループには実行権限があります。</target>
        </trans-unit>
        <trans-unit id="8475ab1269f38d6db9942d6f399693e2156d4e54" translate="yes" xml:space="preserve">
          <source>Group has read permission.</source>
          <target state="translated">グループは許可を読み取っています。</target>
        </trans-unit>
        <trans-unit id="c53ff78e371c1a2b8d488e2fc1d060ea6dec5848" translate="yes" xml:space="preserve">
          <source>Group has write permission.</source>
          <target state="translated">グループは書き込み許可を得ています。</target>
        </trans-unit>
        <trans-unit id="dc1013ffa9a8c2a7ebc3e1c3f775829468dd76b2" translate="yes" xml:space="preserve">
          <source>Group id of the owner.</source>
          <target state="translated">オーナーのグループID。</target>
        </trans-unit>
        <trans-unit id="8149aea9d2347b3cab2f08f676e4e22ad9daae9c" translate="yes" xml:space="preserve">
          <source>Group identifier of the file owner.</source>
          <target state="translated">ファイルの所有者のグループ識別子。</target>
        </trans-unit>
        <trans-unit id="3a5ba5e4d64a0b9c657db67debb9a8fb91f77421" translate="yes" xml:space="preserve">
          <source>Group name.</source>
          <target state="translated">グループ名。</target>
        </trans-unit>
        <trans-unit id="73fb2dd5cc2643e9f02bc351410b98713e0c50c9" translate="yes" xml:space="preserve">
          <source>Group separator</source>
          <target state="translated">グループセパレータ</target>
        </trans-unit>
        <trans-unit id="cbe6cbbb63fb55bfe88f791b01a0841ea8d25a95" translate="yes" xml:space="preserve">
          <source>Group separator used for monetary values.</source>
          <target state="translated">金額に使用されるグループ区切り文字。</target>
        </trans-unit>
        <trans-unit id="bdfa8009f2b9366fe1470f6950953385bb537b83" translate="yes" xml:space="preserve">
          <source>Grouping tests</source>
          <target state="translated">グループ化テスト</target>
        </trans-unit>
        <trans-unit id="763f4b22517ce2940bbeade6d76120551ce59fff" translate="yes" xml:space="preserve">
          <source>Guess the extension for a file based on its MIME type, given by &lt;em&gt;type&lt;/em&gt;. The return value is a string giving a filename extension, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;). The extension is not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type &lt;em&gt;type&lt;/em&gt; by &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt;. If no extension can be guessed for &lt;em&gt;type&lt;/em&gt;, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">与えられるMIME型に基づいてファイルの拡張子、ゲス&lt;em&gt;タイプ&lt;/em&gt;。戻り値は、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含む、ファイル名拡張子を与える文字列です。拡張機能が特定のデータストリームに関連付けられていることは保証されていませんが、&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;によってMIMEタイプ&lt;em&gt;タイプに&lt;/em&gt;マップされます。&lt;em&gt;typeの&lt;/em&gt;拡張子を推測できない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ccac2e946e402380d6bff133365e1d281155811" translate="yes" xml:space="preserve">
          <source>Guess the extensions for a file based on its MIME type, given by &lt;em&gt;type&lt;/em&gt;. The return value is a list of strings giving all possible filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;). The extensions are not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type &lt;em&gt;type&lt;/em&gt; by &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与えられるMIME型に基づいてファイルの拡張子を推測&lt;em&gt;タイプ&lt;/em&gt;。戻り値は、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含むすべての可能なファイル拡張子を与える文字列のリストです。拡張機能が特定のデータストリームに関連付けられていることは保証されていませんが、&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;によってMIMEタイプ&lt;em&gt;タイプに&lt;/em&gt;マップされます。</target>
        </trans-unit>
        <trans-unit id="a84a6acc761ddfa3d7bc427639d3f7d94a20bd3e" translate="yes" xml:space="preserve">
          <source>Guess the type of a file based on its filename, path or URL, given by &lt;em&gt;url&lt;/em&gt;. URL can be a string or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;url&lt;/em&gt;で指定されたファイル名、パス、またはURLに基​​づいてファイルのタイプを推測します。URLは文字列または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">ガイドとチュートリアル</target>
        </trans-unit>
        <trans-unit id="2ce51484b12a05894f2f9727173e21a3b67e36f9" translate="yes" xml:space="preserve">
          <source>Gustavo Niemeyer</source>
          <target state="translated">グスタボ・ニーマイヤー</target>
        </trans-unit>
        <trans-unit id="50d7c437b1b17589574e811d5085ed34a4b22340" translate="yes" xml:space="preserve">
          <source>HELO</source>
          <target state="translated">HELO</target>
        </trans-unit>
        <trans-unit id="ee7929cef18bd1007cbda8ca0208846f8487ec62" translate="yes" xml:space="preserve">
          <source>HELP</source>
          <target state="translated">HELP</target>
        </trans-unit>
        <trans-unit id="7b58c8c80353422c3ae74a11c240a7ae53c8ea23" translate="yes" xml:space="preserve">
          <source>HKEY_* Constants</source>
          <target state="translated">HKEY_*定数</target>
        </trans-unit>
        <trans-unit id="a6a018281adec46cfdc4ecaba3d91384521c02b2" translate="yes" xml:space="preserve">
          <source>HTMLParser Methods</source>
          <target state="translated">HTMLParser メソッド</target>
        </trans-unit>
        <trans-unit id="83800fbcaacbc135f6269ae99e3235f1de3f5cf5" translate="yes" xml:space="preserve">
          <source>HTTP cookie classes, principally useful for server-side code. The &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; modules do not depend on each other.</source>
          <target state="translated">HTTP Cookieクラス。主にサーバー側のコードに役立ちます。&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;モジュールは、お互いに依存しません。</target>
        </trans-unit>
        <trans-unit id="7044d88f7a2347a2f5b8dbb82ed197be53ebf64a" translate="yes" xml:space="preserve">
          <source>HTTP cookie handling for web &lt;em&gt;clients&lt;/em&gt;. The &lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; modules do not depend on each other.</source>
          <target state="translated">Web &lt;em&gt;クライアントの&lt;/em&gt; HTTP Cookie処理。&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;モジュールは、お互いに依存しません。</target>
        </trans-unit>
        <trans-unit id="5b613f0c29f1f2272729222b79dd0363bf366e91" translate="yes" xml:space="preserve">
          <source>HTTP protocol version used by server. 10 for HTTP/1.0, 11 for HTTP/1.1.</source>
          <target state="translated">サーバが使用するHTTPプロトコルのバージョン。HTTP/1.0なら10、HTTP/1.1なら11。</target>
        </trans-unit>
        <trans-unit id="4786bcad00754f90607cd03b51ae4f2dfc8958ec" translate="yes" xml:space="preserve">
          <source>HTTP status codes</source>
          <target state="translated">HTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="b9c5e6f4000e0c7c081dcb3f748956d95b414dc8" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.2.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.2.1</target>
        </trans-unit>
        <trans-unit id="55ce7ae41bf5482f4b02d07a75916731331b4ed7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.1</target>
        </trans-unit>
        <trans-unit id="37a2b8e98ce9a80ff50cc2187f3d5f66d4acf192" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.2</target>
        </trans-unit>
        <trans-unit id="4c4886664f75483fc582d91c7885848287888d95" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.3</target>
        </trans-unit>
        <trans-unit id="24d12da9a592b38862e6bb5010136705da6a12e0" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.4</target>
        </trans-unit>
        <trans-unit id="bc2df2a2575cf8642877678203bd4860c3893ed2" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.5</target>
        </trans-unit>
        <trans-unit id="a04d14d65cbc4a943cd4f902fac7148c0f14008b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.2.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.2.2</target>
        </trans-unit>
        <trans-unit id="60d7f81d19333e5f74e5e2e3d6de6347b79c2b62" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.7</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.7</target>
        </trans-unit>
        <trans-unit id="8ac7152bb59f9e6637cda1fc09f358e6db1eb3b3" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.1</target>
        </trans-unit>
        <trans-unit id="e307f3ae76be18f3cf56334d2d1203897c84c6ad" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.2</target>
        </trans-unit>
        <trans-unit id="ee054e8754930b1255d65d88b0043dc9abf8e0d4" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.3</target>
        </trans-unit>
        <trans-unit id="39a70a33114bc2491f95a95af6970771b5372ba1" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.4</target>
        </trans-unit>
        <trans-unit id="384a5fc0754896060e5523e9ce8e1e038c2bb546" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.5</target>
        </trans-unit>
        <trans-unit id="03716883f4ec8e56d07cf1ed63059674945a1990" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.6</target>
        </trans-unit>
        <trans-unit id="f9958b9874f5f09f1d26017ef8c8b19a1d5b34a9" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.7</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.7</target>
        </trans-unit>
        <trans-unit id="f6b89763f9eecf951499a41c4f4e0c65e612b9ed" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.8</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.8</target>
        </trans-unit>
        <trans-unit id="84de879f447b29b467c932ff8b9ce36e8e1a4f7b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.9</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.9</target>
        </trans-unit>
        <trans-unit id="2b6fd84ea11b2f50a32335158a9ab3686eb9f2f9" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.10</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.10</target>
        </trans-unit>
        <trans-unit id="335ff0bcffd8b0fd0de1378d22cd8e84e89a4261" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.11</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.11</target>
        </trans-unit>
        <trans-unit id="e01d39961a26d5b9c9f6dd4ebe218724de832d1e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.12</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.12</target>
        </trans-unit>
        <trans-unit id="11a8ebffb476f28642499a3354379840b4e688ed" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.13</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.13</target>
        </trans-unit>
        <trans-unit id="8e61d87a1209863b433f52f01e48ec24085ebde7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.14</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.14</target>
        </trans-unit>
        <trans-unit id="cd573541605da49c903c6cc03bf2f770fd72ff49" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.1</target>
        </trans-unit>
        <trans-unit id="e607a0572ff848176765a17465646cd7950bdd53" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-44&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.15</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-44&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.15</target>
        </trans-unit>
        <trans-unit id="3150efe460b4acc154ce6666bc5e252941006cb4" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.1</target>
        </trans-unit>
        <trans-unit id="c1ee3d04c1d4b378d8083b355afbe1b1fe506ef6" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.2</target>
        </trans-unit>
        <trans-unit id="f79ee66680bc43a42866e96f43db95cc0ed8752d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.2</target>
        </trans-unit>
        <trans-unit id="99e7084ca12948106471b49b2622d019645afab7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.3</target>
        </trans-unit>
        <trans-unit id="e4759171c1fb4967d60b990bb93676987a5cf4b3" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.4</target>
        </trans-unit>
        <trans-unit id="2fac3411ccae7fcec4f1663d7e5bae7f78f4f902" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.5</target>
        </trans-unit>
        <trans-unit id="30145c38c7c08a7aa07868063aec66cda90b7250" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.6</target>
        </trans-unit>
        <trans-unit id="ad10d61f8497e284c4e42f54b87d7befb7f7bb4a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.3</target>
        </trans-unit>
        <trans-unit id="570e8e441bb712b3ceaf16252a0b5f014e0d1b50" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.4</target>
        </trans-unit>
        <trans-unit id="ffad6c577656adc8500d58706fc5478fe1bef909" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.5</target>
        </trans-unit>
        <trans-unit id="b02e682b1572382c00b992fa789f6d9af0faa90e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.6</target>
        </trans-unit>
        <trans-unit id="750f03d3a04b5b9fb5badbdc798f143092e85f5a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;、セクション4.1</target>
        </trans-unit>
        <trans-unit id="aa8c1ccd1c55a0e2f0c2a76c3826c6ef56d61275" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;、セクション4.2</target>
        </trans-unit>
        <trans-unit id="4adc18410cbba25856c6bdd9448a7ad840bf05fe" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;、セクション4.1</target>
        </trans-unit>
        <trans-unit id="c20505e0555301a7bc4ee1331f3b2d926b5473fd" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.1</source>
          <target state="translated">HTTP / 1.1認証&lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;、セクション3.1</target>
        </trans-unit>
        <trans-unit id="69cf6de3769ba9d495eb3b6efa56d5f7957cdb38" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.2</source>
          <target state="translated">HTTP / 1.1認証&lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;、セクション3.2</target>
        </trans-unit>
        <trans-unit id="a660a28415a0784612682b4336f837d4de547889" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Range Requests &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.4</source>
          <target state="translated">HTTP / 1.1範囲要求&lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;、セクション4.4</target>
        </trans-unit>
        <trans-unit id="c8aff230069c68b6481e911a7a37adbc1649f530" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;, Section 9.1.2</source>
          <target state="translated">HTTP / 2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;、セクション9.1.2</target>
        </trans-unit>
        <trans-unit id="9d26016dae7061b85a9ca989c851ab31c4415626" translate="yes" xml:space="preserve">
          <source>HTTPBasicAuthHandler Objects</source>
          <target state="translated">HTTPBasicAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="128e3ebc7076bef1925dd717a403a4dc3d9659f4" translate="yes" xml:space="preserve">
          <source>HTTPConnection Objects</source>
          <target state="translated">HTTPConnection オブジェクト</target>
        </trans-unit>
        <trans-unit id="992be6a3f16ce33effbee02a1156178fc68cb00e" translate="yes" xml:space="preserve">
          <source>HTTPCookieProcessor Objects</source>
          <target state="translated">HTTPCookieProcessor オブジェクト</target>
        </trans-unit>
        <trans-unit id="1e8ebe01f2e245be530b383e742fd400bed10252" translate="yes" xml:space="preserve">
          <source>HTTPDigestAuthHandler Objects</source>
          <target state="translated">HTTPDigestAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="f0b6e00c82a6ffc0f054e5c4ca84fd58770cdaf0" translate="yes" xml:space="preserve">
          <source>HTTPErrorProcessor Objects</source>
          <target state="translated">HTTPErrorProcessor オブジェクト</target>
        </trans-unit>
        <trans-unit id="79343075e3ae1afb1578a564ea8e6d0d84b3eee2" translate="yes" xml:space="preserve">
          <source>HTTPHandler</source>
          <target state="translated">HTTPHandler</target>
        </trans-unit>
        <trans-unit id="a08a17af60574eff9b7ee5ac7b2db3a31d02f832" translate="yes" xml:space="preserve">
          <source>HTTPHandler Objects</source>
          <target state="translated">HTTPHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="447f588678db2da1df1b94aa5459163954ff9120" translate="yes" xml:space="preserve">
          <source>HTTPMessage Objects</source>
          <target state="translated">HTTPメッセージオブジェクト</target>
        </trans-unit>
        <trans-unit id="301815c67c8cd0ad1a930659ccda2ea0cd020278" translate="yes" xml:space="preserve">
          <source>HTTPPasswordMgr Objects</source>
          <target state="translated">HTTPPasswordMgr オブジェクト</target>
        </trans-unit>
        <trans-unit id="3c6fce6dce26799f5d8d6e86061bb672133362b3" translate="yes" xml:space="preserve">
          <source>HTTPPasswordMgrWithPriorAuth Objects</source>
          <target state="translated">HTTPPasswordMgrWithPriorAuth オブジェクト</target>
        </trans-unit>
        <trans-unit id="c368139a6cae206daecec5d01f7387777ed6220b" translate="yes" xml:space="preserve">
          <source>HTTPRedirectHandler Objects</source>
          <target state="translated">HTTPRedirectHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="65a9b485d9c99e924fdb190254a5a76d482c4751" translate="yes" xml:space="preserve">
          <source>HTTPResponse Objects</source>
          <target state="translated">HTTPResponse オブジェクト</target>
        </trans-unit>
        <trans-unit id="47ab16ab140fbbc7564373cc76986157e8f07f7c" translate="yes" xml:space="preserve">
          <source>HTTPS support is only available if Python was compiled with SSL support (through the &lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">HTTPSサポートは、Pythonが（&lt;a href=&quot;ssl#module-ssl&quot;&gt; &lt;code&gt;ssl&lt;/code&gt; &lt;/a&gt;モジュールを介して）SSLサポート付きでコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="987667d8eaeca62f8d43a6cb0520e0a03563e9fc" translate="yes" xml:space="preserve">
          <source>HTTPSHandler Objects</source>
          <target state="translated">HTTPSHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="321702e8b1e7bda4040e4dd8768fe5092626cce6" translate="yes" xml:space="preserve">
          <source>Handle DTD events.</source>
          <target state="translated">DTD イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="56d20071c05406e234f9cf1190e9affc6ac1aedb" translate="yes" xml:space="preserve">
          <source>Handle a &lt;em&gt;defect&lt;/em&gt; found on &lt;em&gt;obj&lt;/em&gt;. When the email package calls this method, &lt;em&gt;defect&lt;/em&gt; will always be a subclass of &lt;code&gt;Defect&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;objで&lt;/em&gt;見つかった&lt;em&gt;欠陥を&lt;/em&gt;処理します。電子メールパッケージがこのメソッドを呼び出すと、&lt;em&gt;defect&lt;/em&gt;は常に &lt;code&gt;Defect&lt;/code&gt; のサブクラスになります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="107e56fca7a09c74f23045e39860024fb9eaed74" translate="yes" xml:space="preserve">
          <source>Handle a notation declaration event.</source>
          <target state="translated">記法宣言イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="6d380080eaa511f673e257b847cc06cd190a3031" translate="yes" xml:space="preserve">
          <source>Handle a record.</source>
          <target state="translated">レコードを扱う。</target>
        </trans-unit>
        <trans-unit id="1308c12d298ebc17be8e6f7205d8f3bfc4b593f5" translate="yes" xml:space="preserve">
          <source>Handle an XML-RPC request. If &lt;em&gt;request_text&lt;/em&gt; is given, it should be the POST data provided by the HTTP server, otherwise the contents of stdin will be used.</source>
          <target state="translated">XML-RPCリクエストを処理します。&lt;em&gt;request_text&lt;/em&gt;を指定する場合は、HTTPサーバーによって提供されるPOSTデータである必要があります。それ以外の場合は、stdinの内容が使用されます。</target>
        </trans-unit>
        <trans-unit id="9d8e258c0b6e5d1168969c669327feb855d41c04" translate="yes" xml:space="preserve">
          <source>Handle an authentication request by getting a user/password pair, and re-trying the request. &lt;em&gt;authreq&lt;/em&gt; should be the name of the header where the information about the realm is included in the request, &lt;em&gt;host&lt;/em&gt; specifies the URL and path to authenticate for, &lt;em&gt;req&lt;/em&gt; should be the (failed) &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, and &lt;em&gt;headers&lt;/em&gt; should be the error headers.</source>
          <target state="translated">ユーザー/パスワードのペアを取得して認証リクエストを処理し、リクエストを再試行します。&lt;em&gt;AUTHREQは&lt;/em&gt;レルムに関する情報が要求に含まれるヘッダの名前でなければなら、&lt;em&gt;ホストは&lt;/em&gt;、認証のためにURLとパスを指定&lt;em&gt;REQが&lt;/em&gt;（失敗）でなければならない&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクト、及び&lt;em&gt;ヘッダが&lt;/em&gt;エラーヘッダーであるべきです。</target>
        </trans-unit>
        <trans-unit id="062e437b01efebe8849f8f8ced1f07810ec988e5" translate="yes" xml:space="preserve">
          <source>Handle an error of the given protocol. This will call the registered error handlers for the given protocol with the given arguments (which are protocol specific). The HTTP protocol is a special case which uses the HTTP response code to determine the specific error handler; refer to the &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; methods of the handler classes.</source>
          <target state="translated">指定されたプロトコルのエラーを処理します。これは、指定された引数（プロトコル固有）を使用して、指定されたプロトコルの登録済みエラーハンドラーを呼び出します。HTTPプロトコルは、HTTP応答コードを使用して特定のエラーハンドラーを決定する特殊なケースです。ハンドラクラスの &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a276c3fe5b84b1615109b01fd49c20d2b394e289" translate="yes" xml:space="preserve">
          <source>Handle an unparsed entity declaration event.</source>
          <target state="translated">アンパースされたエンティティ宣言イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="88220eb8720a2bc1735b528b203386438a372258" translate="yes" xml:space="preserve">
          <source>Handle an unraisable exception.</source>
          <target state="translated">レイス不能な例外を処理します。</target>
        </trans-unit>
        <trans-unit id="1060bc6c7b88726a08b50df11671c5366cd9d24c" translate="yes" xml:space="preserve">
          <source>Handle authentication with the proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported.</source>
          <target state="translated">プロキシで認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="16dc31a241c55ceeae234120336a22eafb971e87" translate="yes" xml:space="preserve">
          <source>Handle authentication with the remote host. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. HTTPBasicAuthHandler will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when presented with a wrong Authentication scheme.</source>
          <target state="translated">リモートホストとの認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。HTTPBasicAuthHandlerは、誤った認証スキームが提示されると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="099ecb73fd6f904c0f4b5605d72f0a36103ca94d" translate="yes" xml:space="preserve">
          <source>Handle authentication with the remote host. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. When both Digest Authentication Handler and Basic Authentication Handler are both added, Digest Authentication is always tried first. If the Digest Authentication returns a 40x response again, it is sent to Basic Authentication handler to Handle. This Handler method will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when presented with an authentication scheme other than Digest or Basic.</source>
          <target state="translated">リモートホストとの認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。ダイジェスト認証ハンドラーと基本認証ハンドラーの両方が追加された場合、常に最初にダイジェスト認証が試行されます。ダイジェスト認証が再び40x応答を返す場合、それは処理するために基本認証ハンドラーに送信されます。このHandlerメソッドは、DigestまたはBasic以外の認証スキームが提示されると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="2e877e234920ac6dd114466dccb707642ee7aca1" translate="yes" xml:space="preserve">
          <source>Handle how a breakpoint must be removed when it is a temporary one.</source>
          <target state="translated">ブレークポイントが一時的なものである場合に、どのように削除しなければならないかを処理します。</target>
        </trans-unit>
        <trans-unit id="c275e80e41cb467befe8a992aa8ef142dc1b4cd4" translate="yes" xml:space="preserve">
          <source>Handle objects can be converted to an integer (e.g., using the built-in &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; function), in which case the underlying Windows handle value is returned. You can also use the &lt;a href=&quot;#winreg.PyHKEY.Detach&quot;&gt;&lt;code&gt;Detach()&lt;/code&gt;&lt;/a&gt; method to return the integer handle, and also disconnect the Windows handle from the handle object.</source>
          <target state="translated">ハンドルオブジェクトは整数に変換できます（たとえば、組み込みの&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;関数を使用して）。この場合、基になるWindowsハンドル値が返されます。&lt;a href=&quot;#winreg.PyHKEY.Detach&quot;&gt; &lt;code&gt;Detach()&lt;/code&gt; &lt;/a&gt;メソッドを使用して整数ハンドルを返し、Windowsハンドルをハンドルオブジェクトから切断することもできます。</target>
        </trans-unit>
        <trans-unit id="8385c6fa8af7de5af62c9fd3a69dd17642c7c9d1" translate="yes" xml:space="preserve">
          <source>Handle objects provide semantics for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__bool__&quot;&gt;&lt;code&gt;__bool__()&lt;/code&gt;&lt;/a&gt; &amp;ndash; thus</source>
          <target state="translated">ハンドルオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__bool__&quot;&gt; &lt;code&gt;__bool__()&lt;/code&gt; &lt;/a&gt;セマンティクスを提供します&amp;ndash;したがって</target>
        </trans-unit>
        <trans-unit id="2afaf4f89a5a11064c833154986f2f5a84c15945" translate="yes" xml:space="preserve">
          <source>Handle requests until an explicit &lt;a href=&quot;#socketserver.BaseServer.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; request. Poll for shutdown every &lt;em&gt;poll_interval&lt;/em&gt; seconds. Ignores the &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; attribute. It also calls &lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt;&lt;code&gt;service_actions()&lt;/code&gt;&lt;/a&gt;, which may be used by a subclass or mixin to provide actions specific to a given service. For example, the &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; class uses &lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt;&lt;code&gt;service_actions()&lt;/code&gt;&lt;/a&gt; to clean up zombie child processes.</source>
          <target state="translated">明示的な&lt;a href=&quot;#socketserver.BaseServer.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt;要求まで要求を処理します。&lt;em&gt;poll_interval&lt;/em&gt;秒ごとにシャットダウンをポーリングします。&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;属性を無視します。また、&lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt; &lt;code&gt;service_actions()&lt;/code&gt; &lt;/a&gt;も呼び出します。これは、特定のサービスに固有のアクションを提供するためにサブクラスまたはミックスインで使用できます。たとえば、&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;クラスは&lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt; &lt;code&gt;service_actions()&lt;/code&gt; &lt;/a&gt;を使用してゾンビの子プロセスをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="bb6c587f11689be2d6937f95e7f78dacb7880c2d" translate="yes" xml:space="preserve">
          <source>Handle uncaught exception raised by &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;Thread.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;Thread.run()&lt;/code&gt; &lt;/a&gt;によって発生したキャッチされない例外を処理します。</target>
        </trans-unit>
        <trans-unit id="be02a9f775c20e09c3a657bc25211bd693cc8d23" translate="yes" xml:space="preserve">
          <source>Handler Objects</source>
          <target state="translated">ハンドラオブジェクト</target>
        </trans-unit>
        <trans-unit id="7eb34507475372acbffdf6d92308c8251b5e3824" translate="yes" xml:space="preserve">
          <source>Handlers have the following attributes and methods. Note that &lt;a href=&quot;#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; is never instantiated directly; this class acts as a base for more useful subclasses. However, the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method in subclasses needs to call &lt;a href=&quot;#logging.Handler.__init__&quot;&gt;&lt;code&gt;Handler.__init__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ハンドラーには次の属性とメソッドがあります。注意&lt;a href=&quot;#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt;直接インスタンス化されることはありません。このクラスは、より有用なサブクラスのベースとして機能します。ただし、サブクラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;#logging.Handler.__init__&quot;&gt; &lt;code&gt;Handler.__init__()&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5d46c9ae22acb5d3645908e5bf4511d544f3a6b7" translate="yes" xml:space="preserve">
          <source>Handlers send the log records (created by loggers) to the appropriate destination.</source>
          <target state="translated">ハンドラは、(ロガーによって作成された)ログレコードを適切な宛先に送信します。</target>
        </trans-unit>
        <trans-unit id="84b8e969da65bf24a329495e90cf29dd7b94f19e" translate="yes" xml:space="preserve">
          <source>Handlers with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; are called to handle the request. This stage ends when a handler either returns a non-&lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; value (ie. a response), or raises an exception (usually &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;). Exceptions are allowed to propagate.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; のような名前のメソッドを持つハンドラーは、要求を処理するために呼び出されます。このステージは、ハンドラーが&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 以外の&lt;/a&gt;値（つまり、応答）を返すか、例外（通常は&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;）を発生させると終了します。例外の伝播が許可されています。</target>
        </trans-unit>
        <trans-unit id="8bcb894d769a4dd64c40d2bdb7b0ee4952c58f5b" translate="yes" xml:space="preserve">
          <source>Handles a doctype declaration. &lt;em&gt;name&lt;/em&gt; is the doctype name. &lt;em&gt;pubid&lt;/em&gt; is the public identifier. &lt;em&gt;system&lt;/em&gt; is the system identifier. This method does not exist on the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">doctype宣言を処理します。&lt;em&gt;name&lt;/em&gt;はdoctype名です。&lt;em&gt;pubid&lt;/em&gt;は公開識別子です。&lt;em&gt;system&lt;/em&gt;はシステム識別子です。このメソッドは、デフォルトの&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;クラスには存在しません。</target>
        </trans-unit>
        <trans-unit id="56c022088fb27c6c5c9d8bcb3c440786808ef179" translate="yes" xml:space="preserve">
          <source>Handles a record by passing it to all handlers associated with this logger and its ancestors (until a false value of &lt;em&gt;propagate&lt;/em&gt; is found). This method is used for unpickled records received from a socket, as well as those created locally. Logger-level filtering is applied using &lt;a href=&quot;#logging.Logger.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このロガーとその祖先に関連付けられているすべてのハンドラーにレコードを渡すことにより、レコードを処理します（&lt;em&gt;伝播の&lt;/em&gt; false値が見つかるまで）。このメソッドは、ソケットから受信したunpickledレコード、およびローカルで作成されたレコードに使用されます。ロガーレベルのフィルタリングは、&lt;a href=&quot;#logging.Logger.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;を使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="2c3b04664d696d0fa7762642ed6eccefdf4d892c" translate="yes" xml:space="preserve">
          <source>Handles an error which has occurred during &lt;a href=&quot;#logging.handlers.SocketHandler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt;. The most likely cause is a lost connection. Closes the socket so that we can retry on the next event.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.SocketHandler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; の実行&lt;/a&gt;中に発生したエラーを処理します。最も可能性の高い原因は、接続の切断です。ソケットを閉じて、次のイベントで再試行できるようにします。</target>
        </trans-unit>
        <trans-unit id="d7568474b0c5d0deb421b6274fcb2bf0af693b7b" translate="yes" xml:space="preserve">
          <source>Handles the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header.</source>
          <target state="translated">ハンドル&lt;em&gt;コンテンツ転送エンコード&lt;/em&gt;ヘッダー。</target>
        </trans-unit>
        <trans-unit id="2ba87bc15b853d0b3254ce18760f988d9c907655" translate="yes" xml:space="preserve">
          <source>Handling Stateful Objects</source>
          <target state="translated">ステートフルオブジェクトの取り扱い</target>
        </trans-unit>
        <trans-unit id="d4c17076488bf64b63db8111e44b0dde598cfc0f" translate="yes" xml:space="preserve">
          <source>Handling positional arguments.</source>
          <target state="translated">位置的な引数を扱う。</target>
        </trans-unit>
        <trans-unit id="80fe32e67eb7aed793b1d67d211a8198a39506a3" translate="yes" xml:space="preserve">
          <source>Handling zero-or-more and one-or-more style arguments.</source>
          <target state="translated">ゼロ以上と1以上のスタイルの引数を処理します。</target>
        </trans-unit>
        <trans-unit id="914fc1ca59d60f8b53aaaa51e2728e761cc31a75" translate="yes" xml:space="preserve">
          <source>Handy Reference</source>
          <target state="translated">便利なリファレンス</target>
        </trans-unit>
        <trans-unit id="0d8a35cbc11bb2986e111bb7048bc661f162a028" translate="yes" xml:space="preserve">
          <source>Hang up happened on the assoc. fd</source>
          <target state="translated">電話が切られたのは、アソシエーション・ファンドで起きた。</target>
        </trans-unit>
        <trans-unit id="28ac25e382cbf0d1025fd3f532ff2aeb20012d52" translate="yes" xml:space="preserve">
          <source>Harmonic mean of data.</source>
          <target state="translated">データのハーモニック平均。</target>
        </trans-unit>
        <trans-unit id="5d5f0cfcaa9f574e8a332a820d4d9d82eea71bb3" translate="yes" xml:space="preserve">
          <source>Has two optional arguments which must be specified as keyword arguments.</source>
          <target state="translated">キーワード引数として指定する必要がある 2 つのオプションの引数を持ちます。</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="2a9a23956b6c95b1bda07fb332057044e9c2584a" translate="yes" xml:space="preserve">
          <source>Hash algorithms</source>
          <target state="translated">ハッシュアルゴリズム</target>
        </trans-unit>
        <trans-unit id="e146edfef10cc2f76cac45cb7eeb8f7a5d679e6a" translate="yes" xml:space="preserve">
          <source>Hash objects from this module follow the API of standard library&amp;rsquo;s &lt;a href=&quot;#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このモジュールのハッシュオブジェクトは、標準ライブラリの&lt;a href=&quot;#module-hashlib&quot;&gt; &lt;code&gt;hashlib&lt;/code&gt; &lt;/a&gt;オブジェクトのAPIに従います。</target>
        </trans-unit>
        <trans-unit id="c6aeab0420dd390a78c9b7dfabcf5a39921d254c" translate="yes" xml:space="preserve">
          <source>Hash objects with different digest sizes have completely different outputs (shorter hashes are &lt;em&gt;not&lt;/em&gt; prefixes of longer hashes); BLAKE2b and BLAKE2s produce different outputs even if the output length is the same:</source>
          <target state="translated">異なるダイジェストサイズのハッシュオブジェクトは出力が完全に異なります（短いハッシュは長いハッシュのプレフィックスではあり&lt;em&gt;ません&lt;/em&gt;）。出力長が同じでも、BLAKE2bとBLAKE2sは異なる出力を生成します。</target>
        </trans-unit>
        <trans-unit id="ad92929e3b14f9ded46f9153491efe74c6f63f1f" translate="yes" xml:space="preserve">
          <source>Hashing Methods</source>
          <target state="translated">ハッシュ化の方法</target>
        </trans-unit>
        <trans-unit id="303fce0ac745167c9c8a05f3e0aa201a3f84b7a1" translate="yes" xml:space="preserve">
          <source>Hashing of numeric types</source>
          <target state="translated">数値型のハッシュ化</target>
        </trans-unit>
        <trans-unit id="b194cf3788207606ecc3b2e7d17d26585f5d57e6" translate="yes" xml:space="preserve">
          <source>Hashlib provides the following constant attributes:</source>
          <target state="translated">Hashlibは以下の定数属性を提供します。</target>
        </trans-unit>
        <trans-unit id="8503ede3ea63ea360679c1a7bb9c6feb415c1aeb" translate="yes" xml:space="preserve">
          <source>Have fun!</source>
          <target state="translated">楽しもう!</target>
        </trans-unit>
        <trans-unit id="78f963073bec4db63e808e2d6e30b53085d9d799" translate="yes" xml:space="preserve">
          <source>Having two enum members with the same name is invalid:</source>
          <target state="translated">同じ名前を持つ2つの列挙メンバを持つことは無効です。</target>
        </trans-unit>
        <trans-unit id="956e067b3f83c675f83b89ad77530a84a25325b3" translate="yes" xml:space="preserve">
          <source>Header folding is controlled by the &lt;a href=&quot;#email.policy.EmailPolicy.refold_source&quot;&gt;&lt;code&gt;refold_source&lt;/code&gt;&lt;/a&gt; policy setting. A value is considered to be a &amp;lsquo;source value&amp;rsquo; if and only if it does not have a &lt;code&gt;name&lt;/code&gt; attribute (having a &lt;code&gt;name&lt;/code&gt; attribute means it is a header object of some sort). If a source value needs to be refolded according to the policy, it is converted into a header object by passing the &lt;em&gt;name&lt;/em&gt; and the &lt;em&gt;value&lt;/em&gt; with any CR and LF characters removed to the &lt;code&gt;header_factory&lt;/code&gt;. Folding of a header object is done by calling its &lt;code&gt;fold&lt;/code&gt; method with the current policy.</source>
          <target state="translated">ヘッダーの折りたたみは、&lt;a href=&quot;#email.policy.EmailPolicy.refold_source&quot;&gt; &lt;code&gt;refold_source&lt;/code&gt; &lt;/a&gt;ポリシー設定によって制御されます。値は、もし「元の値」であると考えられ、それは持っていない場合にのみ、 &lt;code&gt;name&lt;/code&gt; （持つ属性 &lt;code&gt;name&lt;/code&gt; 属性手段を、それがある種のヘッダーオブジェクトです）。ポリシーに従ってソース値を &lt;code&gt;header_factory&lt;/code&gt; する必要がある&lt;em&gt;場合&lt;/em&gt;、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;をCR_LF文字を削除してheader_factoryに渡すことで、ソースオブジェクトはヘッダーオブジェクトに変換されます。ヘッダーオブジェクトの折りたたみは、現在のポリシーでその &lt;code&gt;fold&lt;/code&gt; メソッドを呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="6901a3735f0255d8719b4fb97692a6865119569f" translate="yes" xml:space="preserve">
          <source>Header-encode a &lt;em&gt;string&lt;/em&gt; by converting it first to bytes.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を最初にバイトに変換して、ヘッダーエンコードします。</target>
        </trans-unit>
        <trans-unit id="5fe13d069f9bcd0482900a73296e2aa37b5e706a" translate="yes" xml:space="preserve">
          <source>Header-encode the string &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">文字&lt;em&gt;列stringを&lt;/em&gt;ヘッダーエンコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a7ea6a21e332b0e60f835d8a4c6db06db904c6b7" translate="yes" xml:space="preserve">
          <source>Headers are folded using the &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; folding algorithm, which preserves existing line breaks in the value, and wraps each resulting line to the &lt;code&gt;max_line_length&lt;/code&gt;. If &lt;code&gt;cte_type&lt;/code&gt; is &lt;code&gt;7bit&lt;/code&gt;, non-ascii binary data is CTE encoded using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset. Otherwise the original source header is used, with its existing line breaks and any (RFC invalid) binary data it may contain.</source>
          <target state="translated">ヘッダーは、&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;折りたたみアルゴリズムを使用して折りたたまれます。これは、値の既存の改行を保持し、結果の各行を &lt;code&gt;max_line_length&lt;/code&gt; に折り返します。 &lt;code&gt;cte_type&lt;/code&gt; が &lt;code&gt;7bit&lt;/code&gt; の場合、非ASCIIバイナリデータは、 &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してCTEエンコードされます。それ以外の場合は、元のソースヘッダーが使用され、既存の改行とそこに含まれる可能性のある（RFC無効）バイナリデータが含まれます。</target>
        </trans-unit>
        <trans-unit id="ebe8caffa7403f60ddcd1cc993c5dd8678905a97" translate="yes" xml:space="preserve">
          <source>Headers are folded using the &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; folding algorithm, which preserves existing line breaks in the value, and wraps each resulting line to the &lt;code&gt;max_line_length&lt;/code&gt;. Non-ASCII binary data are CTE encoded using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset.</source>
          <target state="translated">ヘッダーは、&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;折りたたみアルゴリズムを使用して折りたたまれます。これは、値の既存の改行を保持し、結果の各行を &lt;code&gt;max_line_length&lt;/code&gt; に折り返します。非ASCIIバイナリデータは、 &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してCTEエンコードされます。</target>
        </trans-unit>
        <trans-unit id="a98bc6401562f58049cacbc1e7407670111c1e89" translate="yes" xml:space="preserve">
          <source>Headers are represented by customized subclasses of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. The particular class used to represent a given header is determined by the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt;&lt;code&gt;header_factory&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; in effect when the headers are created. This section documents the particular &lt;code&gt;header_factory&lt;/code&gt; implemented by the email package for handling &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; compliant email messages, which not only provides customized header objects for various header types, but also provides an extension mechanism for applications to add their own custom header types.</source>
          <target state="translated">ヘッダーは&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;カスタマイズされたサブクラスによって表されます。所定のヘッダを表すために使用される特定のクラスは、によって決定される&lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt; &lt;code&gt;header_factory&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;ヘッダが作成されるときに有効です。このセクションでは、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;準拠の電子メールメッセージを処理するために電子メールパッケージによって実装される特定の &lt;code&gt;header_factory&lt;/code&gt; について説明します。これは、さまざまなヘッダータイプのカスタマイズされたヘッダーオブジェクトを提供するだけでなく、アプリケーションが独自のカスタムヘッダータイプを追加するための拡張メカニズムも提供します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e393fa6a2b7360dfa38d3d9b9332735fa20c75f1" translate="yes" xml:space="preserve">
          <source>Heap elements can be tuples. This is useful for assigning comparison values (such as task priorities) alongside the main record being tracked:</source>
          <target state="translated">ヒープ要素はタプルにすることができます。これは、追跡されているメインレコードと並んで比較値(タスクの優先度など)を割り当てるのに便利です。</target>
        </trans-unit>
        <trans-unit id="f05c2ca1637855efab589e3146dfd91ec2b8dfd7" translate="yes" xml:space="preserve">
          <source>Heaps are also very useful in big disk sorts. You most probably all know that a big sort implies producing &amp;ldquo;runs&amp;rdquo; (which are pre-sorted sequences, whose size is usually related to the amount of CPU memory), followed by a merging passes for these runs, which merging is often very cleverly organised &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. It is very important that the initial sort produces the longest runs possible. Tournaments are a good way to achieve that. If, using all the memory available to hold a tournament, you replace and percolate items that happen to fit the current run, you&amp;rsquo;ll produce runs which are twice the size of the memory for random input, and much better for input fuzzily ordered.</source>
          <target state="translated">ヒープは、大きなディスクのソートにも非常に役立ちます。おそらく、すべての人が知っていることですが、大きなソートは「実行」（通常はCPUメモリの量に関連するサイズが事前にソートされたシーケンス）を生成し、その後にこれらの実行のマージパスが続くことを意味します。整理された&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。最初のソートが可能な限り最長の実行を生成することが非常に重要です。トーナメントはそれを達成する良い方法です。トーナメントを開催するために利用可能なすべてのメモリを使用して、たまたま現在の実行に適合するアイテムを置き換えてパーコレートすると、ランダム入力のメモリの2倍のサイズの実行が生成され、あいまいに順序付けられた入力の場合ははるかに良くなります。</target>
        </trans-unit>
        <trans-unit id="94253428243000d37b9f634428431d09481c1836" translate="yes" xml:space="preserve">
          <source>Heaps are arrays for which &lt;code&gt;a[k] &amp;lt;= a[2*k+1]&lt;/code&gt; and &lt;code&gt;a[k] &amp;lt;= a[2*k+2]&lt;/code&gt; for all &lt;em&gt;k&lt;/em&gt;, counting elements from 0. For the sake of comparison, non-existing elements are considered to be infinite. The interesting property of a heap is that &lt;code&gt;a[0]&lt;/code&gt; is always its smallest element.</source>
          <target state="translated">ヒープは、配列であるために &lt;code&gt;a[k] &amp;lt;= a[2*k+1]&lt;/code&gt; 及び &lt;code&gt;a[k] &amp;lt;= a[2*k+2]&lt;/code&gt; すべてのための&lt;em&gt;K&lt;/em&gt;、比較のために0からカウント要素、非-既存の要素は無限と見なされます。ヒープの興味深い特性は、 &lt;code&gt;a[0]&lt;/code&gt; が常に最小の要素であることです。</target>
        </trans-unit>
        <trans-unit id="f0958aba14742bb54b868bb2e7efefba45a47ee7" translate="yes" xml:space="preserve">
          <source>Heaps are binary trees for which every parent node has a value less than or equal to any of its children. This implementation uses arrays for which &lt;code&gt;heap[k] &amp;lt;= heap[2*k+1]&lt;/code&gt; and &lt;code&gt;heap[k] &amp;lt;= heap[2*k+2]&lt;/code&gt; for all &lt;em&gt;k&lt;/em&gt;, counting elements from zero. For the sake of comparison, non-existing elements are considered to be infinite. The interesting property of a heap is that its smallest element is always the root, &lt;code&gt;heap[0]&lt;/code&gt;.</source>
          <target state="translated">ヒープは、すべての親ノードがその子のいずれか以下の値を持つバイナリツリーです。この実装は、すべての&lt;em&gt;kに対して&lt;/em&gt; &lt;code&gt;heap[k] &amp;lt;= heap[2*k+1]&lt;/code&gt; および &lt;code&gt;heap[k] &amp;lt;= heap[2*k+2]&lt;/code&gt; である配列を使用し、ゼロから要素をカウントします。比較のために、存在しない要素は無限であると見なされます。ヒープの興味深い特性は、その最小要素が常にルート &lt;code&gt;heap[0]&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="59b3a81a6811a92bb1cf8fec2fbe19d8c89c6cf1" translate="yes" xml:space="preserve">
          <source>Height of the terminal window in characters.</source>
          <target state="translated">ターミナルウィンドウの高さを文字数で指定します。</target>
        </trans-unit>
        <trans-unit id="ecb0bdc009a4e94b619f238e5c038184e5a5c5ef" translate="yes" xml:space="preserve">
          <source>Hello World with call_soon()</source>
          <target state="translated">call_soon()を使ったハローワールド</target>
        </trans-unit>
        <trans-unit id="2ef7bde608ce5404e97d5f042f95f89f1c232871" translate="yes" xml:space="preserve">
          <source>Hello World!</source>
          <target state="translated">ハローワールド</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">Help</target>
        </trans-unit>
        <trans-unit id="28e7dce7cb9f9601d24981a334e76f6c313bf469" translate="yes" xml:space="preserve">
          <source>Help and configuration</source>
          <target state="translated">ヘルプと設定</target>
        </trans-unit>
        <trans-unit id="a18d02323a87b03f7466d8b1da693ffe43a62734" translate="yes" xml:space="preserve">
          <source>Help and preferences</source>
          <target state="translated">ヘルプと好み</target>
        </trans-unit>
        <trans-unit id="1e5e41c77d62a1f28e9ed2f5576b34dc1f7958ab" translate="yes" xml:space="preserve">
          <source>Help menu (Shell and Editor)</source>
          <target state="translated">ヘルプメニュー(シェルとエディタ</target>
        </trans-unit>
        <trans-unit id="793e97ee72773880ffe54983bbdef3032df6fc32" translate="yes" xml:space="preserve">
          <source>Help menu entry &amp;ldquo;IDLE Help&amp;rdquo; displays a formatted html version of the IDLE chapter of the Library Reference. The result, in a read-only tkinter text window, is close to what one sees in a web browser. Navigate through the text with a mousewheel, the scrollbar, or up and down arrow keys held down. Or click the TOC (Table of Contents) button and select a section header in the opened box.</source>
          <target state="translated">ヘルプメニューエントリ「IDLE Help」は、ライブラリリファレンスのIDLE章のフォーマットされたhtmlバージョンを表示します。結果は、読み取り専用のtkinterテキストウィンドウで、Webブラウザーに表示されるものに近くなります。マウスホイール、スクロールバー、または押したままの上下矢印キーを使用して、テキスト内を移動します。または、目次（目次）ボタンをクリックして、開いたボックスでセクションヘッダーを選択します。</target>
        </trans-unit>
        <trans-unit id="b11a1a8fed4583088aeda48052c86ca844eebd01" translate="yes" xml:space="preserve">
          <source>Help menu entry &amp;ldquo;Python Docs&amp;rdquo; opens the extensive sources of help, including tutorials, available at &lt;code&gt;docs.python.org/x.y&lt;/code&gt;, where &amp;lsquo;x.y&amp;rsquo; is the currently running Python version. If your system has an off-line copy of the docs (this may be an installation option), that will be opened instead.</source>
          <target state="translated">ヘルプメニューエントリ「Python Docs」は、 &lt;code&gt;docs.python.org/x.y&lt;/code&gt; で利用できるチュートリアルを含むヘルプの広範なソースを開きます。「x.y」は現在実行中のPythonバージョンです。システムにドキュメントのオフラインコピーがある場合（これはインストールオプションである場合があります）、代わりに開かれます。</target>
        </trans-unit>
        <trans-unit id="dfb5d6579c133dffbacf19caeed708a180fc034d" translate="yes" xml:space="preserve">
          <source>Help sources</source>
          <target state="translated">ヘルプソース</target>
        </trans-unit>
        <trans-unit id="934835a36e88b263f02948e4dbd8c5dd04401bc0" translate="yes" xml:space="preserve">
          <source>Helper functions</source>
          <target state="translated">ヘルパー機能</target>
        </trans-unit>
        <trans-unit id="9f94e06f2e8ee19ef9699de5b8431b151fa4c9ee" translate="yes" xml:space="preserve">
          <source>Helper to print a traceback from the timed code.</source>
          <target state="translated">タイムドコードからのトレースバックを表示するヘルパー。</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="9bad4c938651ee76ce6a287a012d5591687a09bc" translate="yes" xml:space="preserve">
          <source>Hence an &lt;em&gt;iterable&lt;/em&gt; of &lt;code&gt;[(1,2), (3, 4)]&lt;/code&gt; results in &lt;code&gt;[func(1,2),
func(3,4)]&lt;/code&gt;.</source>
          <target state="translated">したがって&lt;em&gt;反復可能&lt;/em&gt;の &lt;code&gt;[(1,2), (3, 4)]&lt;/code&gt; をもたらす &lt;code&gt;[func(1,2), func(3,4)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b44d2a2afad6e9544558991fb0f0fd1e144d478b" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;floatnumber&lt;/code&gt; is the form of a Python floating-point literal, described in &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#floating&quot;&gt;Floating point literals&lt;/a&gt;. Case is not significant, so, for example, &amp;ldquo;inf&amp;rdquo;, &amp;ldquo;Inf&amp;rdquo;, &amp;ldquo;INFINITY&amp;rdquo; and &amp;ldquo;iNfINity&amp;rdquo; are all acceptable spellings for positive infinity.</source>
          <target state="translated">ここで &lt;code&gt;floatnumber&lt;/code&gt; に記載Pythonの浮動小数点リテラルの形態である&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#floating&quot;&gt;浮動小数点リテラル&lt;/a&gt;。大文字と小文字は区別されないため、たとえば、「inf」、「Inf」、「INFINITY」、「iNfINity」はすべて、正の無限大で使用できるスペルです。</target>
        </trans-unit>
        <trans-unit id="e9577fd9feab5cb1e4b56a6d0ea9de1dd1d4a07d" translate="yes" xml:space="preserve">
          <source>Here all warnings will be caught, and the test code tests the captured warnings directly.</source>
          <target state="translated">ここではすべての警告が捕捉され、テストコードは捕捉された警告を直接テストします。</target>
        </trans-unit>
        <trans-unit id="d4cbf6d694573a6b35a8882624d22cfd46ff632e" translate="yes" xml:space="preserve">
          <source>Here are a few examples of how to use the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package to read, write, and send simple email messages, as well as more complex MIME messages.</source>
          <target state="translated">以下に、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージを使用して、単純な電子メールメッセージや、より複雑なMIMEメッセージを読み取り、書き込み、送信する方法の例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="c9c7cc8a120a0af672345b3356e3d523999fbe1c" translate="yes" xml:space="preserve">
          <source>Here are a few recipes that serve as utility functions and that demonstrate ways to work with the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">ユーティリティ関数として機能し、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;クラスを操作する方法を示すいくつかのレシピを次に示します。</target>
        </trans-unit>
        <trans-unit id="cc7e228700c1b92ad7ac1415ee4e043abb38dd76" translate="yes" xml:space="preserve">
          <source>Here are four minimal example programs using the TCP/IP protocol: a server that echoes all data that it receives back (servicing only one client), and a client using it. Note that a server must perform the sequence &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.bind&quot;&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; (possibly repeating the &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; to service more than one client), while a client only needs the sequence &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt;. Also note that the server does not &lt;a href=&quot;#socket.socket.sendall&quot;&gt;&lt;code&gt;sendall()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; on the socket it is listening on but on the new socket returned by &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">TCP / IPプロトコルを使用した4つの最小限のサンプルプログラムを次に示します。サーバーが受信したすべてのデータをエコーするサーバー（1つのクライアントのみにサービスを提供）と、それを使用するクライアントです。サーバーはシーケンス&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.bind&quot;&gt; &lt;code&gt;bind()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; を&lt;/a&gt;実行する必要があることに注意してください（複数のクライアントにサービスを提供する&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;、おそらくaccept（）を繰り返す）クライアントはシーケンス&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;のみを必要とします（）。また、サーバーは、&lt;a href=&quot;#socket.socket.sendall&quot;&gt; &lt;code&gt;sendall()&lt;/code&gt; &lt;/a&gt;しているソケットではなく、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;によって返された新しいソケットではsendall（） / &lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;を送信しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="848203b6ef6b35a2defc3dccc96affca56775c19" translate="yes" xml:space="preserve">
          <source>Here are some additional useful header related methods:</source>
          <target state="translated">ここでは、その他の便利なヘッダ関連のメソッドをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="90a7aeffda70ad496e94cfcc706ad61c2e0aaa10" translate="yes" xml:space="preserve">
          <source>Here are some additional useful methods:</source>
          <target state="translated">ここでは、さらにいくつかの便利な方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="1ac2adcb2af1c2b090a1c0d1be0dc3af785419f4" translate="yes" xml:space="preserve">
          <source>Here are some examples for Windows. Note that &lt;code&gt;msvcrt&lt;/code&gt; is the MS standard C library containing most standard C functions, and uses the cdecl calling convention:</source>
          <target state="translated">Windowsの例をいくつか示します。 &lt;code&gt;msvcrt&lt;/code&gt; は、ほとんどの標準C関数を含むMS標準Cライブラリであり、cdecl呼び出し規約を使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f862bd79424f8f419f9104ffde0b99c655fec57" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage of the &lt;a href=&quot;#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;モジュールの一般的な使用例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="421e4af8c302f92252068c4e665eb8048a72f5d5" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage of the &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">以下に、&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;モジュールの一般的な使用例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="d96b3e058a1f9b5592e9360379e20ef013857e85" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage:</source>
          <target state="translated">代表的な使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">ここでは、いくつかの例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="12ec0a6b54e682604fd1f54622b08efce3df4999" translate="yes" xml:space="preserve">
          <source>Here are some notes on the parsing semantics:</source>
          <target state="translated">ここでは、構文解析のセマンティクスについての注意点を説明します。</target>
        </trans-unit>
        <trans-unit id="e3edc31d64bca5d6336f03a57993926d153773bd" translate="yes" xml:space="preserve">
          <source>Here are some other methods and attributes you may wish to override. This list is only a summary, however, and does not include every method that can be overridden. You should consult the docstrings and source code for additional information before attempting to create a customized &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">オーバーライドしたいその他のメソッドと属性を以下に示します。ただし、このリストは要約にすぎず、オーバーライドできるすべてのメソッドが含まれているわけではありません。カスタマイズされた&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;サブクラスを作成する前に、追加情報についてdocstringsとソースコードを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="f5ba1cb3713902ae4550268fb70da7530b34b57c" translate="yes" xml:space="preserve">
          <source>Here are some simple examples:</source>
          <target state="translated">簡単な例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="850baf30242031506b0e614d9eb98d9a7955b34d" translate="yes" xml:space="preserve">
          <source>Here are the classes:</source>
          <target state="translated">授業の様子をご紹介します。</target>
        </trans-unit>
        <trans-unit id="f6fe11950cf6fa846a750dbaed423167118cf8e0" translate="yes" xml:space="preserve">
          <source>Here are the encoding functions provided:</source>
          <target state="translated">用意されているエンコード機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b95c5e82df057126a3c36996dbffbc4c5362267f" translate="yes" xml:space="preserve">
          <source>Here are the methods of the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラスのメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ed31d258ad18f9d3c2b6b8464a85b09de67bd9b4" translate="yes" xml:space="preserve">
          <source>Here are the rules governing implicit creation of a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Note that you cannot both have an explicit &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method in your dataclass and set &lt;code&gt;unsafe_hash=True&lt;/code&gt;; this will result in a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドの暗黙的な作成を管理するルールを次に示します。 &lt;code&gt;unsafe_hash=True&lt;/code&gt; 明示的な&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを含めず、unsafe_hash = Trueを設定することはできません。これは&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8c196634973a8d99ccdf18cbc5696310bd7964c7" translate="yes" xml:space="preserve">
          <source>Here are the rules in detail:</source>
          <target state="translated">ここではルールを詳しくご紹介します。</target>
        </trans-unit>
        <trans-unit id="557b26034ea3c92b6163bb318046d2bddeae00b9" translate="yes" xml:space="preserve">
          <source>Here are two small examples of how it can be used. To list some statistics about a newsgroup and print the subjects of the last 10 articles:</source>
          <target state="translated">どのように使うことができるのか、2 つの小さな例を紹介します。ニュースグループの統計情報をリストアップし、過去10回の記事の主題を表示する。</target>
        </trans-unit>
        <trans-unit id="179d40c94384439c79c1a720dc54f39e17c70bfb" translate="yes" xml:space="preserve">
          <source>Here is a RECT structure which contains two POINTs named &lt;em&gt;upperleft&lt;/em&gt; and &lt;em&gt;lowerright&lt;/em&gt;:</source>
          <target state="translated">次に、&lt;em&gt;upperleft&lt;/em&gt;および&lt;em&gt;lowerright&lt;/em&gt;という名前の2つのPOINTを含むRECT構造を示します。</target>
        </trans-unit>
        <trans-unit id="b11c4199d90d38db06d33ee228fd632c8e05e0b6" translate="yes" xml:space="preserve">
          <source>Here is a basic echo server that uses the &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class to accept connections and dispatches the incoming connections to a handler:</source>
          <target state="translated">次に、&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;クラスを使用して接続を受け入れ、着信接続をハンドラにディスパッチする基本的なエコーサーバーを示します。</target>
        </trans-unit>
        <trans-unit id="89e92dab799df20513ba190ff69a355bbb907809" translate="yes" xml:space="preserve">
          <source>Here is a comprehensive example presenting how persistent ID can be used to pickle external objects by reference.</source>
          <target state="translated">ここでは、参照による外部オブジェクトのピクルスに永続的なIDを使用する方法を包括的に提示しています。</target>
        </trans-unit>
        <trans-unit id="aedf046734d92d5ea82f1b03a1f6ccdaf708f3e6" translate="yes" xml:space="preserve">
          <source>Here is a minimal example (without error checking) that opens a mailbox and retrieves and prints all messages:</source>
          <target state="translated">ここでは、メールボックスを開き、すべてのメッセージを取得して印刷する最小限の例(エラーチェックなし)を示します。</target>
        </trans-unit>
        <trans-unit id="858763321472e2f89573939e2e2b2ebbc0e0b92e" translate="yes" xml:space="preserve">
          <source>Here is a minimal example program. It uses the &lt;a href=&quot;#signal.alarm&quot;&gt;&lt;code&gt;alarm()&lt;/code&gt;&lt;/a&gt; function to limit the time spent waiting to open a file; this is useful if the file is for a serial device that may not be turned on, which would normally cause the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; to hang indefinitely. The solution is to set a 5-second alarm before opening the file; if the operation takes too long, the alarm signal will be sent, and the handler raises an exception.</source>
          <target state="translated">これは最小限のサンプルプログラムです。これは、&lt;a href=&quot;#signal.alarm&quot;&gt; &lt;code&gt;alarm()&lt;/code&gt; &lt;/a&gt;関数を使用して、ファイルを開くまでの待機時間を制限します。これは、ファイルがオンになっていない可能性があるシリアルデバイス用であり、通常は&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;が無期限にハングする原因となる場合に役立ちます。解決策は、ファイルを開く前に5秒のアラームを設定することです。操作に時間がかかりすぎると、アラーム信号が送信され、ハンドラーが例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="4b5a1b75d30a7b9670ad29284b16f1578dc79c1c" translate="yes" xml:space="preserve">
          <source>Here is a more advanced example, it uses the &lt;code&gt;strchr&lt;/code&gt; function, which expects a string pointer and a char, and returns a pointer to a string:</source>
          <target state="translated">次に、より高度な例を示します &lt;code&gt;strchr&lt;/code&gt; 関数を使用します。これは、文字列ポインターと文字を想定し、文字列へのポインターを返します。</target>
        </trans-unit>
        <trans-unit id="95cef5f0126a27e10141faf5133f1bcbbd2d52f4" translate="yes" xml:space="preserve">
          <source>Here is a sample session with the turtle shell showing the help functions, using blank lines to repeat commands, and the simple record and playback facility:</source>
          <target state="translated">ここでは、ヘルプ機能、空行を使ったコマンドの繰り返し、簡単な録音・再生機能を示す、Turtle shell のサンプルセッションを紹介します。</target>
        </trans-unit>
        <trans-unit id="5ea82f3080f5f08a1cf6ae1393c3531d56e8c858" translate="yes" xml:space="preserve">
          <source>Here is a short script to test three string methods:</source>
          <target state="translated">ここでは、3つの文字列メソッドをテストするための短いスクリプトです。</target>
        </trans-unit>
        <trans-unit id="c1d0b87a033dc901ab5b05a6a511ade5fd204b7c" translate="yes" xml:space="preserve">
          <source>Here is a simple echo server implementation:</source>
          <target state="translated">ここでは、簡単なエコーサーバの実装を紹介します。</target>
        </trans-unit>
        <trans-unit id="783c88dec80dbc359cd0a54cb73ef2e8956c06df" translate="yes" xml:space="preserve">
          <source>Here is a simple example of a POINT structure, which contains two integers named &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, and also shows how to initialize a structure in the constructor:</source>
          <target state="translated">以下は、POINT構造の簡単な例です。これには、&lt;em&gt;x&lt;/em&gt;および&lt;em&gt;y&lt;/em&gt;という名前の2つの整数が含まれており、コンストラクターで構造を初期化する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="a220f7a767cad9812c7f5e9e71729724691d793a" translate="yes" xml:space="preserve">
          <source>Here is a simple example where we allow pickling and reconstructing a given class:</source>
          <target state="translated">ここでは、与えられたクラスのピックリングと再構築を許可する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="66492cba692800cf02c93560d0a4ae5260cd7a45" translate="yes" xml:space="preserve">
          <source>Here is a simplified example of using the &lt;code&gt;subdirs&lt;/code&gt; attribute to search recursively through two directories to show common different files:</source>
          <target state="translated">次に、 &lt;code&gt;subdirs&lt;/code&gt; 属性を使用して2つのディレクトリを再帰的に検索し、一般的な異なるファイルを表示する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="1a1651c42d3d327851c93c93b01b9268244b9102" translate="yes" xml:space="preserve">
          <source>Here is a trivial example where we implement a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; subclass able to participate in out-of-band buffer pickling:</source>
          <target state="translated">以下は、帯域外バッファー&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;に参加できるbytearrayサブクラスを実装する簡単な例です。</target>
        </trans-unit>
        <trans-unit id="4083b0132c7f289dc2cfe594fe0062d0a2928f45" translate="yes" xml:space="preserve">
          <source>Here is a very basic HTTP client that uses the &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class to implement its socket handling:</source>
          <target state="translated">&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;クラスを使用してソケット処理を実装する非常に基本的なHTTPクライアントを次に示します。</target>
        </trans-unit>
        <trans-unit id="9681060e036ebeaa6ecc1812f0a2f746613da2c5" translate="yes" xml:space="preserve">
          <source>Here is an XML example that incorporates two namespaces, one with the prefix &amp;ldquo;fictional&amp;rdquo; and the other serving as the default namespace:</source>
          <target state="translated">以下は、2つの名前空間を組み込んだXMLの例です。1つは接頭辞「fictional」があり、もう1つはデフォルトの名前空間として機能します。</target>
        </trans-unit>
        <trans-unit id="0137522adaa7f5c187c163e2786035a7e02c8078" translate="yes" xml:space="preserve">
          <source>Here is an example how &lt;code&gt;HTMLCalendar&lt;/code&gt; can be customized:</source>
          <target state="translated">&lt;code&gt;HTMLCalendar&lt;/code&gt; をカスタマイズする方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="bcefb4d49c909a6b98daaf5656641cc671df0062" translate="yes" xml:space="preserve">
          <source>Here is an example of a TCP echo client written using asyncio streams:</source>
          <target state="translated">以下は、asyncio ストリームを使用して書かれた TCP エコークライアントの例です。</target>
        </trans-unit>
        <trans-unit id="926e62c32ff349304967e48a181cbc5cd0a5da18" translate="yes" xml:space="preserve">
          <source>Here is an example of a somewhat artificial data type, a structure containing 4 POINTs among other stuff:</source>
          <target state="translated">ここでは、やや人工的なデータ型の例として、他のものの中で4つのPOINTを含む構造体を示します。</target>
        </trans-unit>
        <trans-unit id="1942a35fca33fb69eb410e653fed29f38ff15dac" translate="yes" xml:space="preserve">
          <source>Here is an example of an unpickler allowing only few safe classes from the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module to be loaded:</source>
          <target state="translated">以下は、&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールからの安全なクラスのロードのみを許可するunpicklerの例です。</target>
        </trans-unit>
        <trans-unit id="1f6e174ce0930d3a688e6d301ba445e413a2bbb8" translate="yes" xml:space="preserve">
          <source>Here is an example of doing a &lt;code&gt;PUT&lt;/code&gt; request using &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;PUT&lt;/code&gt; リクエストを実行する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="63ad9e85ec02c74d345d067024e9c8bf8c414e3c" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use a Template:</source>
          <target state="translated">テンプレートの使い方の一例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="c1f9b5f62c8ca8b8cc7088a5760fdc9620a09236" translate="yes" xml:space="preserve">
          <source>Here is an example of how you would catch one of these exceptions:</source>
          <target state="translated">ここでは、これらの例外の1つをどのようにキャッチするかの例を示します。</target>
        </trans-unit>
        <trans-unit id="cdea6c32a97f82e690ca75ac4f0f1c74eb11d810" translate="yes" xml:space="preserve">
          <source>Here is an example session that shows how to &lt;code&gt;POST&lt;/code&gt; requests:</source>
          <target state="translated">以下は、リクエストを &lt;code&gt;POST&lt;/code&gt; する方法を示すセッションの例です。</target>
        </trans-unit>
        <trans-unit id="b4e1b4a71bce105f36f4683385341397898087cc" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;GET&lt;/code&gt; method to retrieve a URL containing parameters:</source>
          <target state="translated">以下は、 &lt;code&gt;GET&lt;/code&gt; メソッドを使用してパラメーターを含むURLを取得するセッションの例です。</target>
        </trans-unit>
        <trans-unit id="f87b25be67df6c09e308fe796ffe42b228c4a0f4" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;GET&lt;/code&gt; method:</source>
          <target state="translated">以下は、 &lt;code&gt;GET&lt;/code&gt; メソッドを使用するセッションの例です。</target>
        </trans-unit>
        <trans-unit id="f01802ba30e14aa2f7ef06fd05eb038cefe62ea7" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;HEAD&lt;/code&gt; method. Note that the &lt;code&gt;HEAD&lt;/code&gt; method never returns any data.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; メソッドを使用するセッションの例を次に示します。ことに注意してください &lt;code&gt;HEAD&lt;/code&gt; の方法は、任意のデータを返すことはありません。</target>
        </trans-unit>
        <trans-unit id="7637c0fb791cb33301b7c50ec5939de2528983d7" translate="yes" xml:space="preserve">
          <source>Here is an example that imports a module from a ZIP archive - note that the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module is not explicitly used.</source>
          <target state="translated">以下は、ZIPアーカイブからモジュールをインポートする例です&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;モジュールは明示的に使用されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="63b8653a775ca02f4de9cf85a3ea50f01399ce67" translate="yes" xml:space="preserve">
          <source>Here is an example transformer that rewrites all occurrences of name lookups (&lt;code&gt;foo&lt;/code&gt;) to &lt;code&gt;data['foo']&lt;/code&gt;:</source>
          <target state="translated">次に、名前の検索（ &lt;code&gt;foo&lt;/code&gt; ）のすべての出現箇所を &lt;code&gt;data['foo']&lt;/code&gt; 書き換えるトランスフォーマーの例を示します。</target>
        </trans-unit>
        <trans-unit id="4c22ac49a0c9c7336e5edbfbe2e372032dc66845" translate="yes" xml:space="preserve">
          <source>Here is an example type (Windows):</source>
          <target state="translated">ここでは例のタイプ(Windows)を紹介します。</target>
        </trans-unit>
        <trans-unit id="0e4f971444f1d77e09759bbb6d4eb09fd55bc2d3" translate="yes" xml:space="preserve">
          <source>Here is an example with a non-byte format:</source>
          <target state="translated">ここでは、ノンバイト形式の例を示します。</target>
        </trans-unit>
        <trans-unit id="3222c631b1d6a91645cefd87ad0f0babb9291a43" translate="yes" xml:space="preserve">
          <source>Here is an example, a format for dates compatible with that specified in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; Internet email standard. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;インターネット電子メール標準で指定されている日付と互換性のある日付の形式の例を次に示します。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="3e1dafbc069fa301268390cf627b3ca5c064c24e" translate="yes" xml:space="preserve">
          <source>Here is how the above snippet can be fixed:</source>
          <target state="translated">上記のスニペットを修正する方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0193f048235ff1d1526f09d38ae6b2bf5b52e26a" translate="yes" xml:space="preserve">
          <source>Here is one way you can handle this situation:</source>
          <target state="translated">そんな時の対処法を一つご紹介します。</target>
        </trans-unit>
        <trans-unit id="cbb8b723b6c194f091fb87df1d26aab4a18efa52" translate="yes" xml:space="preserve">
          <source>Here is the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class description:</source>
          <target state="translated">ここで&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;クラスの説明：</target>
        </trans-unit>
        <trans-unit id="43a4df7c9db3f85bfab609815a30ff46e6d1db35" translate="yes" xml:space="preserve">
          <source>Here is the API for the &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;のAPIは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="312593d370700c530b8c77ba64f5bf70d0d4e0d1" translate="yes" xml:space="preserve">
          <source>Here is the list of handlers that can be set. To set a handler on an &lt;code&gt;xmlparser&lt;/code&gt; object &lt;em&gt;o&lt;/em&gt;, use &lt;code&gt;o.handlername = func&lt;/code&gt;. &lt;em&gt;handlername&lt;/em&gt; must be taken from the following list, and &lt;em&gt;func&lt;/em&gt; must be a callable object accepting the correct number of arguments. The arguments are all strings, unless otherwise stated.</source>
          <target state="translated">設定できるハンドラのリストは次のとおりです。 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクト&lt;em&gt;oに&lt;/em&gt;ハンドラーを設定するには、 &lt;code&gt;o.handlername = func&lt;/code&gt; 使用します。&lt;em&gt;handlername&lt;/em&gt;は次のリストから取得&lt;em&gt;する&lt;/em&gt;必要があり、&lt;em&gt;func&lt;/em&gt;は正しい数の引数を受け入れる呼び出し可能なオブジェクトでなければなりません。特に明記しない限り、引数はすべて文字列です。</target>
        </trans-unit>
        <trans-unit id="44f421add6ba0457382d5aadb027259940af6a3d" translate="yes" xml:space="preserve">
          <source>Here is the list of the defects that the &lt;a href=&quot;email.parser#email.parser.FeedParser&quot;&gt;&lt;code&gt;FeedParser&lt;/code&gt;&lt;/a&gt; can find while parsing messages. Note that the defects are added to the message where the problem was found, so for example, if a message nested inside a &lt;em&gt;multipart/alternative&lt;/em&gt; had a malformed header, that nested message object would have a defect, but the containing messages would not.</source>
          <target state="translated">&lt;a href=&quot;email.parser#email.parser.FeedParser&quot;&gt; &lt;code&gt;FeedParser&lt;/code&gt; &lt;/a&gt;がメッセージの解析中に検出できる欠陥のリストを次に示します。問題が見つかったメッセージに欠陥が追加されることに注意してください。たとえば、&lt;em&gt;multipart / alternative&lt;/em&gt;内にネストされたメッセージに不正な形式のヘッダーがあった場合、そのネストされたメッセージオブジェクトには欠陥がありますが、含まれているメッセージには欠陥がありません。</target>
        </trans-unit>
        <trans-unit id="4d14bc3f810050260ad93db46eca920d45cd6587" translate="yes" xml:space="preserve">
          <source>Here is the wrapping with &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">これが&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; による&lt;/a&gt;ラッピングです：</target>
        </trans-unit>
        <trans-unit id="d8d136ce4fcf131b38249ad4b4cdd7b36aab6b59" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;message&lt;/code&gt; parts are not &lt;code&gt;multiparts&lt;/code&gt;, but they do contain subparts. &lt;code&gt;is_multipart()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;walk&lt;/code&gt; descends into the subparts.</source>
          <target state="translated">ここで、 &lt;code&gt;message&lt;/code&gt; パートは &lt;code&gt;multiparts&lt;/code&gt; ではありませんが、サブパートが含まれています。 &lt;code&gt;is_multipart()&lt;/code&gt; は &lt;code&gt;True&lt;/code&gt; を返し、 &lt;code&gt;walk&lt;/code&gt; はサブパートに下降します。</target>
        </trans-unit>
        <trans-unit id="f8c5b2d5d4895e63936c3e39f9ea5a092742e33a" translate="yes" xml:space="preserve">
          <source>Here the fields, accessed through &lt;code&gt;form[key]&lt;/code&gt;, are themselves instances of &lt;code&gt;FieldStorage&lt;/code&gt; (or &lt;code&gt;MiniFieldStorage&lt;/code&gt;, depending on the form encoding). The &lt;code&gt;value&lt;/code&gt; attribute of the instance yields the string value of the field. The &lt;code&gt;getvalue()&lt;/code&gt; method returns this string value directly; it also accepts an optional second argument as a default to return if the requested key is not present.</source>
          <target state="translated">ここで、 &lt;code&gt;form[key]&lt;/code&gt; を介してアクセスされるフィールドは、それ自体が &lt;code&gt;FieldStorage&lt;/code&gt; （またはフォームのエンコードに応じて &lt;code&gt;MiniFieldStorage&lt;/code&gt; ）のインスタンスです。インスタンスの &lt;code&gt;value&lt;/code&gt; 属性は、フィールドの文字列値を生成します。 &lt;code&gt;getvalue()&lt;/code&gt; メソッドは、直接文字列値を返します。また、要求されたキーが存在しない場合に返されるオプションの2番目の引数をデフォルトとして受け入れます。</target>
        </trans-unit>
        <trans-unit id="6427d6dc542f2fe91c5f973e0fbee08e0775e6b1" translate="yes" xml:space="preserve">
          <source>Here we are telling &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; to use the RFC correct line separator characters when creating the binary string to feed into &lt;code&gt;sendmail's&lt;/code&gt;&lt;code&gt;stdin&lt;/code&gt;, where the default policy would use &lt;code&gt;\n&lt;/code&gt; line separators.</source>
          <target state="translated">ここでは、&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;に、バイナリ文字列を作成して &lt;code&gt;sendmail's&lt;/code&gt; &lt;code&gt;stdin&lt;/code&gt; にフィードするときにRFCの正しい行区切り文字を使用するように指示しています。デフォルトのポリシーでは、 &lt;code&gt;\n&lt;/code&gt; 行区切り文字を使用します。</target>
        </trans-unit>
        <trans-unit id="54089b0f798d064b6d27440468c160d6be3d5a87" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete but small example module:</source>
          <target state="translated">以下は、完全ですが小さなサンプルモジュールです。</target>
        </trans-unit>
        <trans-unit id="deb069a2481d34b576a644f623c5cdd014912641" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a function that prompts for a password with echoing turned off. Note the technique using a separate &lt;a href=&quot;#termios.tcgetattr&quot;&gt;&lt;code&gt;tcgetattr()&lt;/code&gt;&lt;/a&gt; call and a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statement to ensure that the old tty attributes are restored exactly no matter what happens:</source>
          <target state="translated">これは、エコーをオフにした状態でパスワードを要求する関数です。別個の&lt;a href=&quot;#termios.tcgetattr&quot;&gt; &lt;code&gt;tcgetattr()&lt;/code&gt; &lt;/a&gt;呼び出しと&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ステートメントを使用して、何が起こっても正確に古いtty属性が確実に復元されるようにするテクニックに注意してください。</target>
        </trans-unit>
        <trans-unit id="6674d68cc38ec668a73b9a90f473982a8cb3962a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample session using the &lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt;&lt;code&gt;FTP_TLS&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt; &lt;code&gt;FTP_TLS&lt;/code&gt; &lt;/a&gt;クラスを使用したサンプルセッションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b965a2500a417c17e252df58aa948ceb534c9ecf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample session using the &lt;a href=&quot;#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; &lt;/a&gt;モジュールを使用したサンプルセッションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f08d50bf7a9f9628e3dfc06b109485deda2e28cc" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a shorter example using a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;を使用した短い例を次に示します。</target>
        </trans-unit>
        <trans-unit id="9dda69001f51d32dcd158718121626161a3763b1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a table showing which versions in a client (down the side) can connect to which versions in a server (along the top):</source>
          <target state="translated">次の表は、クライアントの（横の）バージョンがサーバーの（上の）バージョンに接続できることを示しています。</target>
        </trans-unit>
        <trans-unit id="96026c277ce40c4cdd39c60d4a2b06b7e1e42842" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of both styles:</source>
          <target state="translated">両方のスタイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="2e7bb34249467c365c51e5881f607b0336fcd6fe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of computing an inverse for &lt;code&gt;38&lt;/code&gt; modulo &lt;code&gt;97&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;97&lt;/code&gt; を法とする &lt;code&gt;38&lt;/code&gt; の逆数を計算する例です。</target>
        </trans-unit>
        <trans-unit id="76246c5edc6c07c691c2ccc2d065398990a99ecd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of doing this for a context manager that accepts resource acquisition and release functions, along with an optional validation function, and maps them to the context management protocol:</source>
          <target state="translated">これは、リソースの取得機能と解放機能、およびオプションの検証機能を受け入れ、それらをコンテキスト管理プロトコルにマップするコンテキストマネージャーに対してこれを行う例です。</target>
        </trans-unit>
        <trans-unit id="6972a9388d5a46c9aaecbb359917ffc8f7f4389d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of hashing a minimal tree with two leaf nodes:</source>
          <target state="translated">これは、2つのリーフノードを持つ最小のツリーをハッシュする例です。</target>
        </trans-unit>
        <trans-unit id="70402f4d7b8b4f0408298cad94624fc0f6c8e0e1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how asyncio can run a shell command and obtain its result:</source>
          <target state="translated">asyncioがシェルコマンドを実行してその結果を取得する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="86ceb4f04a6903fd4ae47ac5dd9b2e83e0478d72" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to create an HTML message with an alternative plain text version. To make things a bit more interesting, we include a related image in the html part, and we save a copy of what we are going to send to disk, as well as sending it.</source>
          <target state="translated">次に、代替のプレーンテキストバージョンを使用してHTMLメッセージを作成する方法の例を示します。もう少し面白くするために、関連する画像をhtml部分に含め、送信するもののコピーをディスクに保存して送信します。</target>
        </trans-unit>
        <trans-unit id="10477766db4d4994ddeccf936edb955ea8a8956e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to send a MIME message containing a bunch of family pictures that may be residing in a directory:</source>
          <target state="translated">ディレクトリにある可能性のある家族の写真の束を含むMIMEメッセージを送信する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="66824fe559b5fa4e6945d482d0b46be90bee75d5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to send the entire contents of a directory as an email message: &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">ディレクトリの内容全体を電子メールメッセージとして送信する方法の例を次に示します&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;。1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa965e6e6082f3cdbd60fcddb869e401f5052f16" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to unpack a MIME message like the one above, into a directory of files:</source>
          <target state="translated">上記のようなMIMEメッセージをファイルのディレクトリにアンパックする方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="ffbb9d384a13892dc11f3dbd35da43e2b51be8b9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how you might use &lt;a href=&quot;#email.message_from_bytes&quot;&gt;&lt;code&gt;message_from_bytes()&lt;/code&gt;&lt;/a&gt; at an interactive Python prompt:</source>
          <target state="translated">インタラクティブなPythonプロンプトで&lt;a href=&quot;#email.message_from_bytes&quot;&gt; &lt;code&gt;message_from_bytes()&lt;/code&gt; &lt;/a&gt;を使用する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="8cf6f62163178581796424c7a9a02f1f7e9fb2fa" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of it in use:</source>
          <target state="translated">使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0bdb2cef4a98e2dcf73f5700dd318281ea7481bd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of typical usage for this API:</source>
          <target state="translated">このAPIの一般的な使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a9713683791f9c6f99a0e91da9917c7974bb232d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that demonstrates some of the XPath capabilities of the module. We&amp;rsquo;ll be using the &lt;code&gt;countrydata&lt;/code&gt; XML document from the &lt;a href=&quot;#elementtree-parsing-xml&quot;&gt;Parsing XML&lt;/a&gt; section:</source>
          <target state="translated">以下は、モジュールのXPath機能の一部を示す例です。ここでは、XML &lt;a href=&quot;#elementtree-parsing-xml&quot;&gt;解析&lt;/a&gt;セクションの &lt;code&gt;countrydata&lt;/code&gt; XMLドキュメントを使用します。</target>
        </trans-unit>
        <trans-unit id="cb47414132a1661346f2cf123a39f4ccf00798b7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that demonstrates use of the XInclude module. To include an XML document in the current document, use the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element and set the &lt;strong&gt;parse&lt;/strong&gt; attribute to &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, and use the &lt;strong&gt;href&lt;/strong&gt; attribute to specify the document to include.</source>
          <target state="translated">XIncludeモジュールの使用法を示す例を次に示します。現在のドキュメントにXMLドキュメントを含めるには、 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; include 要素を使用して&lt;strong&gt;parse&lt;/strong&gt;属性を &lt;code&gt;&quot;xml&quot;&lt;/code&gt; に設定し、&lt;strong&gt;href&lt;/strong&gt;属性を使用して含めるドキュメントを指定します。</target>
        </trans-unit>
        <trans-unit id="709f58d0a032f4f2fd538e028e1bf2d5bba72072" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that prints the MIME type of every part of a multipart message structure:</source>
          <target state="translated">マルチパートメッセージ構造のすべてのパートのMIMEタイプを出力する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="706b810952f86acc8d676e08674be3f570661c4c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that shows how to modify pickling behavior for a class. The &lt;code&gt;TextReader&lt;/code&gt; class opens a text file, and returns the line number and line contents each time its &lt;code&gt;readline()&lt;/code&gt; method is called. If a &lt;code&gt;TextReader&lt;/code&gt; instance is pickled, all attributes &lt;em&gt;except&lt;/em&gt; the file object member are saved. When the instance is unpickled, the file is reopened, and reading resumes from the last location. The &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; methods are used to implement this behavior.</source>
          <target state="translated">以下は、クラスの酸洗い動作を変更する方法を示す例です。 &lt;code&gt;TextReader&lt;/code&gt; クラスは、テキストファイルを開き、その都度行番号及びラインの内容を戻す &lt;code&gt;readline()&lt;/code&gt; メソッドが呼び出されています。場合 &lt;code&gt;TextReader&lt;/code&gt; インスタンスがpickle化され、すべての属性&lt;em&gt;を除く&lt;/em&gt;ファイルオブジェクトのメンバーが保存されます。インスタンスがアンピックルされると、ファイルが再度開かれ、最後の場所から読み取りが再開されます。&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;メソッドは、この動作を実装するために使用されています。</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b8109b877000b870b322f3f396b556ca2e7627e4" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the same example as before, but considering blanks to be junk. That prevents &lt;code&gt;' abcd'&lt;/code&gt; from matching the &lt;code&gt;' abcd'&lt;/code&gt; at the tail end of the second sequence directly. Instead only the &lt;code&gt;'abcd'&lt;/code&gt; can match, and matches the leftmost &lt;code&gt;'abcd'&lt;/code&gt; in the second sequence:</source>
          <target state="translated">これは前と同じ例ですが、空白はジャンクであると考えています。防止することを &lt;code&gt;' abcd'&lt;/code&gt; 一致からの &lt;code&gt;' abcd'&lt;/code&gt; 直接第二の配列の末尾に。代わりに、 &lt;code&gt;'abcd'&lt;/code&gt; のみが一致し、2番目のシーケンスの左端の &lt;code&gt;'abcd'&lt;/code&gt; に一致します。</target>
        </trans-unit>
        <trans-unit id="4db73af24839df174d254d19165dc6b71cd36feb" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;spam.ham&lt;/code&gt; module is returned from &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt;. From this object, the names to import are retrieved and assigned to their respective names.</source>
          <target state="translated">ここでは、 &lt;code&gt;spam.ham&lt;/code&gt; モジュールが&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;から返されます。このオブジェクトから、インポートする名前が取得され、それぞれの名前に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="29017850c0ee8b88df141fa0569f666bcbc4fbcf" translate="yes" xml:space="preserve">
          <source>Here, you want to mark the strings in the &lt;code&gt;animals&lt;/code&gt; list as being translatable, but you don&amp;rsquo;t actually want to translate them until they are printed.</source>
          <target state="translated">ここでは、 &lt;code&gt;animals&lt;/code&gt; リストの文字列を翻訳可能としてマークしたいが、実際に印刷されるまで翻訳したくありません。</target>
        </trans-unit>
        <trans-unit id="9a472603c4793ba32a26895360ca1c167352b47b" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using lower-case letters for the digits above 9.</source>
          <target state="translated">16進数形式。16進数で出力します。9以上の数字は小文字で出力します。</target>
        </trans-unit>
        <trans-unit id="6dae4fd41d115d12c3ce48b5466486b2c13fb380" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using upper-case letters for the digits above 9.</source>
          <target state="translated">16進数で出力します。16進数で出力し、9以上の数字は大文字で出力します。</target>
        </trans-unit>
        <trans-unit id="6ab8e16a9942b4cc932e601bc438522c8cc2f9ab" translate="yes" xml:space="preserve">
          <source>Hide the panel. This does not delete the object, it just makes the window on screen invisible.</source>
          <target state="translated">パネルを非表示にします。これはオブジェクトを削除するのではなく、画面上のウィンドウを非表示にするだけです。</target>
        </trans-unit>
        <trans-unit id="975b00c7afb7ab7c68c7138afb2f613f421d8011" translate="yes" xml:space="preserve">
          <source>Hides the tab specified by &lt;em&gt;tab_id&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;tab_idで&lt;/em&gt;指定されたタブを非表示にします。</target>
        </trans-unit>
        <trans-unit id="fc588738c60ecb4b4a8aba29ccba016b1c955025" translate="yes" xml:space="preserve">
          <source>Hides the window. Another window will be activated.</source>
          <target state="translated">ウィンドウを非表示にします。別のウィンドウが起動します。</target>
        </trans-unit>
        <trans-unit id="e16da0d6095b36a564a8943ec4d9d0b7f4859225" translate="yes" xml:space="preserve">
          <source>Hierarchical ListBox</source>
          <target state="translated">階層型リストボックス</target>
        </trans-unit>
        <trans-unit id="d3d148e78aea31488c9234ddf73cf485b8c09186" translate="yes" xml:space="preserve">
          <source>Hierarchical path</source>
          <target state="translated">階層的なパス</target>
        </trans-unit>
        <trans-unit id="5d60881335567c9090b8c4245ea4e81ecb33da15" translate="yes" xml:space="preserve">
          <source>High median of data.</source>
          <target state="translated">データの中央値が高い。</target>
        </trans-unit>
        <trans-unit id="6282a11a5eca3c9a65529cea745db1d70b87d28f" translate="yes" xml:space="preserve">
          <source>High priority read/write. Allows block-based filesystems to use polling of the device, which provides lower latency, but may use additional resources.</source>
          <target state="translated">優先度の高い読み書き。ブロックベースのファイルシステムでデバイスのポーリングを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="4a87a2489640795cc234e71d98784b569f68d6c1" translate="yes" xml:space="preserve">
          <source>High-level API Index</source>
          <target state="translated">高レベルAPIインデックス</target>
        </trans-unit>
        <trans-unit id="3a945e4de6304d6bdbf4f30080b6be3140c870fe" translate="yes" xml:space="preserve">
          <source>High-level APIs</source>
          <target state="translated">高レベルAPI</target>
        </trans-unit>
        <trans-unit id="418113d56ae3ac7d324cf436937deab0a3a252fe" translate="yes" xml:space="preserve">
          <source>High-level APIs to work with network IO.</source>
          <target state="translated">ネットワークIOを操作するための高レベルAPI。</target>
        </trans-unit>
        <trans-unit id="b70e4a5c864a275c250115363446ef5404321ea2" translate="yes" xml:space="preserve">
          <source>High-level Module Interface</source>
          <target state="translated">ハイレベルモジュールインタフェース</target>
        </trans-unit>
        <trans-unit id="7654a4bda6a850b2d646ed42a943709375af4e66" translate="yes" xml:space="preserve">
          <source>High-level async/await object to receive network data.</source>
          <target state="translated">ネットワークデータを受信するための高レベルのasync/awaitオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4062c19052bd6f8e57b9924a18dbaadbde67c050" translate="yes" xml:space="preserve">
          <source>High-level async/await object to send network data.</source>
          <target state="translated">ネットワークデータを送信するための高レベルのasync/awaitオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2311abfb64cb296285cf9c7ba19e1fc3798a93fa" translate="yes" xml:space="preserve">
          <source>High-level utilities to create and read compressed and archived files are also provided. They rely on the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tarfile#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">圧縮およびアーカイブされたファイルを作成および読み取るための高レベルのユーティリティも提供されます。それらは&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;tarfile#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールに依存しています。</target>
        </trans-unit>
        <trans-unit id="56deb8932e61f797ed677a061b4f0f80922f76d6" translate="yes" xml:space="preserve">
          <source>High-performance serialization of built-in types.</source>
          <target state="translated">組み込み型の高性能なシリアライズ</target>
        </trans-unit>
        <trans-unit id="dfb97476260bc6e078c0bc5f5b524817d1b955cb" translate="yes" xml:space="preserve">
          <source>High-resolution per-process timer from the CPU.</source>
          <target state="translated">CPUからの高解像度のプロセスごとのタイマー。</target>
        </trans-unit>
        <trans-unit id="ad402f6ce49e651e75ee74d257e55d8a8d2867a5" translate="yes" xml:space="preserve">
          <source>Higher Level Interface</source>
          <target state="translated">高次レベルインタフェース</target>
        </trans-unit>
        <trans-unit id="137f307b8ef5696b386b347dfd64aebeeefd159a" translate="yes" xml:space="preserve">
          <source>Higher-level operations on pathnames are defined in the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">パス名の上位レベルの操作は&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。</target>
        </trans-unit>
        <trans-unit id="3771c52715fb43b3e757ae1a3d984d3cda0f28a9" translate="yes" xml:space="preserve">
          <source>Highlight the surrounding parenthesis.</source>
          <target state="translated">周囲の括弧を強調表示します。</target>
        </trans-unit>
        <trans-unit id="fabedad26856d16459739a389abdcea783e78b9b" translate="yes" xml:space="preserve">
          <source>Hilbert &amp;amp; Koch curves</source>
          <target state="translated">ヒルベルト＆コッホ曲線</target>
        </trans-unit>
        <trans-unit id="540c634e3749d6c586b2a2f144b6702b6d534584" translate="yes" xml:space="preserve">
          <source>Hint: if you want to specify default values for a specific section, use &lt;code&gt;read_dict()&lt;/code&gt; before you read the actual file.</source>
          <target state="translated">ヒント：特定のセクションのデフォルト値を指定する場合は、実際のファイルを読み取る前に &lt;code&gt;read_dict()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="3d1f110ffacfcfd0164c3693450d07c42f1a288c" translate="yes" xml:space="preserve">
          <source>Hints: dynamic execution of statements is supported by the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;#globals&quot;&gt;&lt;code&gt;globals()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; functions returns the current global and local dictionary, respectively, which may be useful to pass around for use by &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヒント：ステートメントの動的実行は&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;関数でサポートされています。&lt;a href=&quot;#globals&quot;&gt; &lt;code&gt;globals()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;関数は、で使用するために周りに通過するのに有用であり得る、それぞれ、現在のグローバルとローカル辞書を返す&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="977f72f33fd0f7ecd2f6fdfcaed6ab6f202170b2" translate="yes" xml:space="preserve">
          <source>History file</source>
          <target state="translated">履歴ファイル</target>
        </trans-unit>
        <trans-unit id="b0479c60429c78f9c90b30067d18270acd2fcd91" translate="yes" xml:space="preserve">
          <source>History list</source>
          <target state="translated">歴史一覧</target>
        </trans-unit>
        <trans-unit id="b4e97ef75c73cb49dbe471f2a8fc87f85f477bfa" translate="yes" xml:space="preserve">
          <source>Hm. We certainly expected the last statement to print &lt;code&gt;3 4 1 2&lt;/code&gt;. What happened? Here are the steps of the &lt;code&gt;rc.a, rc.b = rc.b, rc.a&lt;/code&gt; line above:</source>
          <target state="translated">うーん。私たちは確かに最後のステートメントが &lt;code&gt;3 4 1 2&lt;/code&gt; を出力することを期待していました。どうした？上記の &lt;code&gt;rc.a, rc.b = rc.b, rc.a&lt;/code&gt; 行の手順は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="84380fa08840c12769a5e603533d5049bf656770" translate="yes" xml:space="preserve">
          <source>Holds a list of strings containing the addresses identified in the &amp;ldquo;RCPT TO:&amp;rdquo; lines from the client.</source>
          <target state="translated">クライアントからの「RCPT TO：」行で識別されたアドレスを含む文字列のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="b1594c5d044abc97b4f02f7439bee39849e8d91b" translate="yes" xml:space="preserve">
          <source>Holds a list of the line strings (decoded using UTF-8) received from the client. The lines have their &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; line ending translated to &lt;code&gt;&quot;\n&quot;&lt;/code&gt;.</source>
          <target state="translated">クライアントから受信したライン文字列（UTF-8を使用してデコード）のリストを保持します。行の &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; 行は &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 翻訳されます。</target>
        </trans-unit>
        <trans-unit id="756edd3ad364172179fc4bd28c47aba2e28ee462" translate="yes" xml:space="preserve">
          <source>Holds a string containing all of the data sent by the client during the DATA state, up to but not including the terminating &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt;.</source>
          <target state="translated">DATA状態の間にクライアントによって送信されたすべてのデータを含む文字列を保持します。終了文字列 &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt; を含みません。</target>
        </trans-unit>
        <trans-unit id="173c57b2edd8e26c070f7e3dc3845383b5f7e22f" translate="yes" xml:space="preserve">
          <source>Holds a string containing the address identified in the &amp;ldquo;MAIL FROM:&amp;rdquo; line from the client.</source>
          <target state="translated">クライアントからの「MAIL FROM：」行で識別されたアドレスを含む文字列を保持します。</target>
        </trans-unit>
        <trans-unit id="3e97286c991e6ccb42a2a1d0c99c5d6bbf6ae803" translate="yes" xml:space="preserve">
          <source>Holds a string containing the greeting sent by the client in its &amp;ldquo;HELO&amp;rdquo;.</source>
          <target state="translated">クライアントから送信された挨拶を含む文字列を「HELO」に保持します。</target>
        </trans-unit>
        <trans-unit id="cd7148d74352a877af7eb8ce8dea2f82f4e06603" translate="yes" xml:space="preserve">
          <source>Holds an instance of the class specified by the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.MessageClass&quot;&gt;&lt;code&gt;MessageClass&lt;/code&gt;&lt;/a&gt; class variable. This instance parses and manages the headers in the HTTP request. The &lt;a href=&quot;http.client#http.client.parse_headers&quot;&gt;&lt;code&gt;parse_headers()&lt;/code&gt;&lt;/a&gt; function from &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; is used to parse the headers and it requires that the HTTP request provide a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; style header.</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.MessageClass&quot;&gt; &lt;code&gt;MessageClass&lt;/code&gt; &lt;/a&gt;クラス変数で指定されたクラスのインスタンスを保持します。このインスタンスは、HTTPリクエストのヘッダーを解析および管理します。&lt;a href=&quot;http.client#http.client.parse_headers&quot;&gt; &lt;code&gt;parse_headers()&lt;/code&gt; &lt;/a&gt;から関数&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; は&lt;/a&gt;ヘッダを解析するために使用され、これは、HTTP要求が有効提供することを要求&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;形式のヘッダを。</target>
        </trans-unit>
        <trans-unit id="9265fe64481830dee7db00b81cb03da2a4116e1c" translate="yes" xml:space="preserve">
          <source>Holds the &lt;a href=&quot;#smtpd.SMTPServer&quot;&gt;&lt;code&gt;SMTPServer&lt;/code&gt;&lt;/a&gt; that spawned this channel.</source>
          <target state="translated">このチャネルを生成した&lt;a href=&quot;#smtpd.SMTPServer&quot;&gt; &lt;code&gt;SMTPServer&lt;/code&gt; &lt;/a&gt;を保持します。</target>
        </trans-unit>
        <trans-unit id="e6689fb001eadb907fa93d352c8361eba9cb20a4" translate="yes" xml:space="preserve">
          <source>Holds the address of the client, the second value returned by &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">クライアントのアドレスを保持します&lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept&lt;/code&gt; &lt;/a&gt;によって返される2番目の値です。</target>
        </trans-unit>
        <trans-unit id="119d2c3ab03cae2266b2eb5305549d108edb800b" translate="yes" xml:space="preserve">
          <source>Holds the current state of the channel. This will be either &lt;code&gt;COMMAND&lt;/code&gt; initially and then &lt;code&gt;DATA&lt;/code&gt; after the client sends a &amp;ldquo;DATA&amp;rdquo; line.</source>
          <target state="translated">チャネルの現在の状態を保持します。これは、最初は &lt;code&gt;COMMAND&lt;/code&gt; 、次にクライアントが「DATA」行を送信した後は &lt;code&gt;DATA&lt;/code&gt; のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8f000494374b62d38904da327ccc63a75a5a6e7e" translate="yes" xml:space="preserve">
          <source>Holds the fully-qualified domain name of the server as returned by &lt;a href=&quot;socket#socket.getfqdn&quot;&gt;&lt;code&gt;socket.getfqdn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.getfqdn&quot;&gt; &lt;code&gt;socket.getfqdn()&lt;/code&gt; &lt;/a&gt;によって返されたサーバーの完全修飾ドメイン名を保持します。</target>
        </trans-unit>
        <trans-unit id="7770cf3e40c26a8548c1a22aecf430e6fd9a88f6" translate="yes" xml:space="preserve">
          <source>Holds the name of the client peer as returned by &lt;code&gt;conn.getpeername()&lt;/code&gt; where &lt;code&gt;conn&lt;/code&gt; is &lt;a href=&quot;#smtpd.SMTPChannel.conn&quot;&gt;&lt;code&gt;conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;conn&lt;/code&gt; が&lt;a href=&quot;#smtpd.SMTPChannel.conn&quot;&gt; &lt;code&gt;conn&lt;/code&gt; &lt;/a&gt;である &lt;code&gt;conn.getpeername()&lt;/code&gt; によって返されるクライアントピアの名前を保持します。</target>
        </trans-unit>
        <trans-unit id="c43acfb18827d1f4ab3a7fb4b51beb5556091b5e" translate="yes" xml:space="preserve">
          <source>Holds the socket object connecting to the client.</source>
          <target state="translated">クライアントに接続するソケットオブジェクトを保持します。</target>
        </trans-unit>
        <trans-unit id="70f8bb9a8a5393ef080507a89e4b98d139000d65" translate="yes" xml:space="preserve">
          <source>Home</source>
          <target state="translated">Home</target>
        </trans-unit>
        <trans-unit id="9f502739ab97f32f0169d7d2a89836a8f3d60183" translate="yes" xml:space="preserve">
          <source>Home down or bottom (lower left)</source>
          <target state="translated">ホーム下または下(左下</target>
        </trans-unit>
        <trans-unit id="b1ad0ce4fc4f46bb58f19b70095b12ebe09c3089" translate="yes" xml:space="preserve">
          <source>Home key (upward+left arrow)</source>
          <target state="translated">ホームキー(上向き+左矢印</target>
        </trans-unit>
        <trans-unit id="82cc12384e3a382be4706e4e097a96b4d36d7997" translate="yes" xml:space="preserve">
          <source>Home page of &lt;strong&gt;nmh&lt;/strong&gt;, an updated version of the original &lt;strong&gt;mh&lt;/strong&gt;.</source>
          <target state="translated">オリジナルの&lt;strong&gt;mhの&lt;/strong&gt;更新バージョンである&lt;strong&gt;nmhの&lt;/strong&gt;ホームページ。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6283e72fcc111c07fd35510504e83a1879e65314" translate="yes" xml:space="preserve">
          <source>Home page of the Expat project.</source>
          <target state="translated">エクパットプロジェクトのホームページです。</target>
        </trans-unit>
        <trans-unit id="bd9948dcc8a1b00e0cac588a4f60d2df9c17fd17" translate="yes" xml:space="preserve">
          <source>Hook method executed just after a command dispatch is finished. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses. &lt;em&gt;line&lt;/em&gt; is the command line which was executed, and &lt;em&gt;stop&lt;/em&gt; is a flag which indicates whether execution will be terminated after the call to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt;; this will be the return value of the &lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt;&lt;code&gt;onecmd()&lt;/code&gt;&lt;/a&gt; method. The return value of this method will be used as the new value for the internal flag which corresponds to &lt;em&gt;stop&lt;/em&gt;; returning false will cause interpretation to continue.</source>
          <target state="translated">コマンドディスパッチが終了した直後に実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。&lt;em&gt;line&lt;/em&gt;は実行されたコマンドラインで、&lt;em&gt;stop&lt;/em&gt;は&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; の&lt;/a&gt;呼び出し後に実行を終了するかどうかを示すフラグです。これは、&lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt; &lt;code&gt;onecmd()&lt;/code&gt; &lt;/a&gt;メソッドの戻り値になります。このメソッドの戻り値は、&lt;em&gt;stopに&lt;/em&gt;対応する内部フラグの新しい値として使用されます。 falseを返すと、解釈が続行されます。</target>
        </trans-unit>
        <trans-unit id="449ea143caf53c5e39b0355dcec294af589bb71b" translate="yes" xml:space="preserve">
          <source>Hook method executed just before the command line &lt;em&gt;line&lt;/em&gt; is interpreted, but after the input prompt is generated and issued. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses. The return value is used as the command which will be executed by the &lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt;&lt;code&gt;onecmd()&lt;/code&gt;&lt;/a&gt; method; the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; implementation may re-write the command or simply return &lt;em&gt;line&lt;/em&gt; unchanged.</source>
          <target state="translated">コマンドライン&lt;em&gt;line&lt;/em&gt;が解釈される直前、ただし入力プロンプトが生成されて発行された後に実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。戻り値は、&lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt; &lt;code&gt;onecmd()&lt;/code&gt; &lt;/a&gt;メソッドによって実行されるコマンドとして使用されます。&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;の実装では、コマンドを再書き込み、または単に返すことが&lt;em&gt;行&lt;/em&gt;変わりません。</target>
        </trans-unit>
        <trans-unit id="9045e8acde6cdc71927bf33200a8d7172ae0f172" translate="yes" xml:space="preserve">
          <source>Hook method executed once when &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; is about to return. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;が戻る直前に 1回実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。</target>
        </trans-unit>
        <trans-unit id="087ffacadf4afb6c47c00dbd186afdecd1130959" translate="yes" xml:space="preserve">
          <source>Hook method executed once when &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; is called. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに1回実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。</target>
        </trans-unit>
        <trans-unit id="ef2e93e3cb2e42c7a2289b69a4580ae9d70a03b2" translate="yes" xml:space="preserve">
          <source>Hooks are added using the &lt;a href=&quot;#sys.addaudithook&quot;&gt;&lt;code&gt;sys.addaudithook()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;&lt;code&gt;PySys_AddAuditHook()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">フックは&lt;a href=&quot;#sys.addaudithook&quot;&gt; &lt;code&gt;sys.addaudithook()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt; &lt;code&gt;PySys_AddAuditHook()&lt;/code&gt; &lt;/a&gt;関数を使用して追加されます。</target>
        </trans-unit>
        <trans-unit id="5eda08bad54f52c7bdb5179cf6a75b60587955cd" translate="yes" xml:space="preserve">
          <source>Horizontal highlight</source>
          <target state="translated">水平方向のハイライト</target>
        </trans-unit>
        <trans-unit id="a5a7e131a5cb8762553101bda765297974113fa2" translate="yes" xml:space="preserve">
          <source>Host is down</source>
          <target state="translated">ホストがダウンしています</target>
        </trans-unit>
        <trans-unit id="191f7808ee27d0914021b6bf49daf82e21931c8e" translate="yes" xml:space="preserve">
          <source>Host name (lower case)</source>
          <target state="translated">ホスト名(小文字</target>
        </trans-unit>
        <trans-unit id="b5e18f2451a0719cbdf851704cee573f6887f1e1" translate="yes" xml:space="preserve">
          <source>Hostname of the server: &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; type, or &lt;code&gt;None&lt;/code&gt; for server-side socket or if the hostname was not specified in the constructor.</source>
          <target state="translated">サーバーのホスト名：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;タイプ、サーバー側ソケットの場合は &lt;code&gt;None&lt;/code&gt; 、またはコンストラクターでホスト名が指定されていない場合。</target>
        </trans-unit>
        <trans-unit id="425c6644ee61c9a230fcbf65d7494b117f494021" translate="yes" xml:space="preserve">
          <source>Hour (12-hour clock) as a decimal number [01,12].</source>
          <target state="translated">時間(12時間時計)を10進数[01,12]で表示します。</target>
        </trans-unit>
        <trans-unit id="f59212d5750be40abbdaa5bbb82d3fdc34b42955" translate="yes" xml:space="preserve">
          <source>Hour (12-hour clock) as a zero-padded decimal number.</source>
          <target state="translated">時間(12時間時計)を0進数で表します。</target>
        </trans-unit>
        <trans-unit id="fb9eb08a7d5aa5786e2bc10ef029f16e805c8a84" translate="yes" xml:space="preserve">
          <source>Hour (24-hour clock) as a decimal number [00,23].</source>
          <target state="translated">時間(24時間時計)を10進数[00,23]で表示します。</target>
        </trans-unit>
        <trans-unit id="00929e29b383160b1e2458e720fcf861fdf67571" translate="yes" xml:space="preserve">
          <source>Hour (24-hour clock) as a zero-padded decimal number.</source>
          <target state="translated">時間(24時間時計)を0進数で表します。</target>
        </trans-unit>
        <trans-unit id="9e25a34e635a123f8958bbe26e7c4843278597fb" translate="yes" xml:space="preserve">
          <source>Hours</source>
          <target state="translated">Hours</target>
        </trans-unit>
        <trans-unit id="2093b61ef7ae08159816a865e810be957ff212f4" translate="yes" xml:space="preserve">
          <source>Hours (zero-based)</source>
          <target state="translated">時間(ゼロベース</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="3cf8194af8b431024aea161c0d72843e4d494297" translate="yes" xml:space="preserve">
          <source>How Tk and Tkinter are Related</source>
          <target state="translated">TkとTkinterの関係性</target>
        </trans-unit>
        <trans-unit id="786543e016a5fcb5bd0820fa60ef4b7c492ab041" translate="yes" xml:space="preserve">
          <source>How To Use This Section</source>
          <target state="translated">このセクションの使い方</target>
        </trans-unit>
        <trans-unit id="b6a3579a533572ecb0e0f96eccc0c564589a41d7" translate="yes" xml:space="preserve">
          <source>How are Docstring Examples Recognized?</source>
          <target state="translated">ドクストリングの例はどのように認識されるのですか?</target>
        </trans-unit>
        <trans-unit id="8b82a90e60fe771b243b5707683f611d5a457c14" translate="yes" xml:space="preserve">
          <source>How are Enums different?</source>
          <target state="translated">Enumsはどう違うのですか?</target>
        </trans-unit>
        <trans-unit id="b49c247604ffa94c5e6d2020bc2401f351cdc8a4" translate="yes" xml:space="preserve">
          <source>How many bytes should tokens use?</source>
          <target state="translated">トークンは何バイトを使うべきか?</target>
        </trans-unit>
        <trans-unit id="06cb3a2370ac3af4084ddb6774ba1f927d10f1da" translate="yes" xml:space="preserve">
          <source>How the compiler treats future imports.</source>
          <target state="translated">コンパイラが将来のインポートをどのように扱うか。</target>
        </trans-unit>
        <trans-unit id="9621e5b402eaf2bc653d7acbb6c0fc8aec7dbcee" translate="yes" xml:space="preserve">
          <source>How to configure Screen and Turtles</source>
          <target state="translated">スクリーンとタートルズの設定方法</target>
        </trans-unit>
        <trans-unit id="8a47b2e2c48117dfb7843cebb091861bfbbbe021" translate="yes" xml:space="preserve">
          <source>How to create an archive and reset the user information using the &lt;em&gt;filter&lt;/em&gt; parameter in &lt;a href=&quot;#tarfile.TarFile.add&quot;&gt;&lt;code&gt;TarFile.add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile.add&quot;&gt; &lt;code&gt;TarFile.add()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;フィルター&lt;/em&gt;パラメーターを使用してアーカイブを作成し、ユーザー情報をリセットする方法：</target>
        </trans-unit>
        <trans-unit id="e8fa6daa5f75642da8422e72ceb883cde131d7f0" translate="yes" xml:space="preserve">
          <source>How to create an uncompressed tar archive from a list of filenames:</source>
          <target state="translated">ファイル名のリストから圧縮されていない tar アーカイブを作成する方法。</target>
        </trans-unit>
        <trans-unit id="54799d0a1acb21e18739c385fc568caa565a6484" translate="yes" xml:space="preserve">
          <source>How to extract a subset of a tar archive with &lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt;&lt;code&gt;TarFile.extractall()&lt;/code&gt;&lt;/a&gt; using a generator function instead of a list:</source>
          <target state="translated">リストの代わりにジェネレータ関数を使用して&lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt; &lt;code&gt;TarFile.extractall()&lt;/code&gt; で&lt;/a&gt; tarアーカイブのサブセットを抽出する方法：</target>
        </trans-unit>
        <trans-unit id="125dc6e327af012b85b1699c8d0b4aea4fd5aa6e" translate="yes" xml:space="preserve">
          <source>How to extract an entire tar archive to the current working directory:</source>
          <target state="translated">tar アーカイブ全体を現在の作業ディレクトリに展開する方法。</target>
        </trans-unit>
        <trans-unit id="6187ce11d668add52961b9aad04fcebce97277f5" translate="yes" xml:space="preserve">
          <source>How to read a gzip compressed tar archive and display some member information:</source>
          <target state="translated">gzip圧縮されたtarアーカイブを読み込んで、一部のメンバー情報を表示する方法。</target>
        </trans-unit>
        <trans-unit id="6979f33c643743b3e1710eb3c8b04ebe15229773" translate="yes" xml:space="preserve">
          <source>How to use help</source>
          <target state="translated">ヘルプの使い方</target>
        </trans-unit>
        <trans-unit id="0ca8006d50f8b1fe3fcd3fbdbf73e28bca7fec95" translate="yes" xml:space="preserve">
          <source>How you use the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module in your code depends on whether you are internationalizing a single module or your entire application. The next two sections will discuss each case.</source>
          <target state="translated">コードで&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;モジュールを使用する方法は、単一のモジュールを国際化するか、アプリケーション全体を国際化するかによって異なります。次の2つのセクションでは、各ケースについて説明します。</target>
        </trans-unit>
        <trans-unit id="cc2d951db9dd240ca5bf48d29a4e5261e13b4412" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;protocol.eof_received()&lt;/code&gt;&lt;/a&gt; is called at most once. Once &lt;code&gt;eof_received()&lt;/code&gt; is called, &lt;code&gt;data_received()&lt;/code&gt; is not called anymore.</source>
          <target state="translated">ただし、&lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt; &lt;code&gt;protocol.eof_received()&lt;/code&gt; &lt;/a&gt;は最大で1回呼び出されます。いったん &lt;code&gt;eof_received()&lt;/code&gt; 、と呼ばれている &lt;code&gt;data_received()&lt;/code&gt; もはや呼び出されません。</target>
        </trans-unit>
        <trans-unit id="a0a858d192763a36609cbf2152f0a6b9ea1b92e5" translate="yes" xml:space="preserve">
          <source>However, a more generic mechanism is needed for user-defined objects which are not known to the &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module. For example, consider &lt;a href=&quot;logging.handlers#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;logging.handlers.MemoryHandler&lt;/code&gt;&lt;/a&gt;, which takes a &lt;code&gt;target&lt;/code&gt; argument which is another handler to delegate to. Since the system already knows about this class, then in the configuration, the given &lt;code&gt;target&lt;/code&gt; just needs to be the object id of the relevant target handler, and the system will resolve to the handler from the id. If, however, a user defines a &lt;code&gt;my.package.MyHandler&lt;/code&gt; which has an &lt;code&gt;alternate&lt;/code&gt; handler, the configuration system would not know that the &lt;code&gt;alternate&lt;/code&gt; referred to a handler. To cater for this, a generic resolution system allows the user to specify:</source>
          <target state="translated">ただし、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;モジュールが認識していないユーザー定義オブジェクトには、より一般的なメカニズムが必要です。たとえば、委譲する別のハンドラーである &lt;code&gt;target&lt;/code&gt; 引数を取る&lt;a href=&quot;logging.handlers#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;logging.handlers.MemoryHandler&lt;/code&gt; を&lt;/a&gt;検討してください。システムはすでにこのクラスを認識しているため、構成では、指定された &lt;code&gt;target&lt;/code&gt; は関連するターゲットハンドラーのオブジェクトIDである必要があり、システムはIDからハンドラーに解決します。しかし、ユーザが定義する場合 &lt;code&gt;my.package.MyHandler&lt;/code&gt; 有する &lt;code&gt;alternate&lt;/code&gt; ハンドラを、構成システムはそれを知っているだろう &lt;code&gt;alternate&lt;/code&gt; ハンドラーを参照しました。これに対応するために、一般的な解決システムでは、ユーザーが以下を指定できます。</target>
        </trans-unit>
        <trans-unit id="f378a310ff84ad7919807057388f38c47b1c65e4" translate="yes" xml:space="preserve">
          <source>However, consider the alternative scenario where instead of &lt;code&gt;from a import
SomeClass&lt;/code&gt; module b does &lt;code&gt;import a&lt;/code&gt; and &lt;code&gt;some_function&lt;/code&gt; uses &lt;code&gt;a.SomeClass&lt;/code&gt;. Both of these import forms are common. In this case the class we want to patch is being looked up in the module and so we have to patch &lt;code&gt;a.SomeClass&lt;/code&gt; instead:</source>
          <target state="translated">ただし、 &lt;code&gt;from a import SomeClass&lt;/code&gt; モジュールbが &lt;code&gt;import a&lt;/code&gt; からではなく、aをインポートし、 &lt;code&gt;some_function&lt;/code&gt; が &lt;code&gt;a.SomeClass&lt;/code&gt; を使用する別のシナリオを検討してください。これらのインポート形式はどちらも一般的です。この場合、パッチを適用するクラスはモジュールで検索されているため、代わりに &lt;code&gt;a.SomeClass&lt;/code&gt; にパッチを適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="439bf14282c72fd1ed84e1410444feb63481ab8b" translate="yes" xml:space="preserve">
          <source>However, global variables which are just module level constants cause no problems.</source>
          <target state="translated">しかし、モジュールレベルの定数に過ぎないグローバル変数であれば問題はありません。</target>
        </trans-unit>
        <trans-unit id="8da1514a7f4d0b15655c2472b7999f9854a1d368" translate="yes" xml:space="preserve">
          <source>However, handling of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; methods is notoriously implementation specific, since it depends on internal details of the interpreter&amp;rsquo;s garbage collector implementation.</source>
          <target state="translated">ただし、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;メソッドの処理は、インタープリターのガベージコレクター実装の内部の詳細に依存するため、悪用されがちです。</target>
        </trans-unit>
        <trans-unit id="524385f4308742264684061a603d78f1b65969ea" translate="yes" xml:space="preserve">
          <source>However, if you are writing a library (and do not control in which context its code will be executed), be aware that the standard streams may be replaced with file-like objects like &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;io.StringIO&lt;/code&gt;&lt;/a&gt; which do not support the &lt;code&gt;buffer&lt;/code&gt; attribute.</source>
          <target state="translated">ただし、ライブラリを作成している場合（およびそのコードが実行されるコンテキストを制御しない場合）、標準のストリームが、&lt;a href=&quot;io#io.StringIO&quot;&gt; &lt;code&gt;io.StringIO&lt;/code&gt; の&lt;/a&gt;ような、 &lt;code&gt;buffer&lt;/code&gt; 属性をサポートしないファイルのようなオブジェクトに置き換えられる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b769de1746f60e4baa053e7572f0057d9c8fe3d0" translate="yes" xml:space="preserve">
          <source>However, if you really do need to use some shared data then &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; provides a couple of ways of doing so.</source>
          <target state="translated">ただし、共有データを実際に使用する必要がある場合は、&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;いくつかの方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="23eebfaf8db57314d57e41112830f6a06b63dacc" translate="yes" xml:space="preserve">
          <source>However, in a Windows path, changing the local root doesn&amp;rsquo;t discard the previous drive setting:</source>
          <target state="translated">ただし、Windowsパスでは、ローカルルートを変更しても以前のドライブ設定は破棄されません。</target>
        </trans-unit>
        <trans-unit id="f42d2d8c9bca01face2f0640d30c8b6b4f7aef41" translate="yes" xml:space="preserve">
          <source>However, it is possible to create a &lt;a href=&quot;#typing.NewType&quot;&gt;&lt;code&gt;NewType()&lt;/code&gt;&lt;/a&gt; based on a &amp;lsquo;derived&amp;rsquo; &lt;code&gt;NewType&lt;/code&gt;:</source>
          <target state="translated">ただし、「派生した」 &lt;code&gt;NewType&lt;/code&gt; に基づいて&lt;a href=&quot;#typing.NewType&quot;&gt; &lt;code&gt;NewType()&lt;/code&gt; &lt;/a&gt;を作成することは可能です。</target>
        </trans-unit>
        <trans-unit id="d78b154c37b0dfd16aaf863d992caf9a3e8512e0" translate="yes" xml:space="preserve">
          <source>However, should you want to customize the building of your test suite, you can do it yourself:</source>
          <target state="translated">しかし、テストスイートの構築をカスタマイズしたい場合は、自分で行うことができます。</target>
        </trans-unit>
        <trans-unit id="2e105ff00b24b9693a483aad8940ba6101edec1f" translate="yes" xml:space="preserve">
          <source>However, since the SSL (and TLS) protocol has its own framing atop of TCP, the SSL sockets abstraction can, in certain respects, diverge from the specification of normal, OS-level sockets. See especially the &lt;a href=&quot;#ssl-nonblocking&quot;&gt;notes on non-blocking sockets&lt;/a&gt;.</source>
          <target state="translated">ただし、SSL（およびTLS）プロトコルにはTCPの上に独自のフレーミングがあるため、SSLソケットの抽象化は、特定の点で、通常のOSレベルのソケットの仕様とは異なる場合があります。特に&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングソケットに関する注意を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a8fede9e85907b8edc885805dba8e1a629627b87" translate="yes" xml:space="preserve">
          <source>However, the &lt;a href=&quot;#module-multiprocessing.connection&quot;&gt;&lt;code&gt;multiprocessing.connection&lt;/code&gt;&lt;/a&gt; module allows some extra flexibility. It basically gives a high level message oriented API for dealing with sockets or Windows named pipes. It also has support for &lt;em&gt;digest authentication&lt;/em&gt; using the &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; module, and for polling multiple connections at the same time.</source>
          <target state="translated">ただし、&lt;a href=&quot;#module-multiprocessing.connection&quot;&gt; &lt;code&gt;multiprocessing.connection&lt;/code&gt; &lt;/a&gt;モジュールを使用すると、柔軟性がさらに向上します。基本的に、ソケットまたはWindows名前付きパイプを処理するための高レベルのメッセージ指向APIを提供します。また、&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; &lt;/a&gt;モジュールを使用した&lt;em&gt;ダイジェスト認証&lt;/em&gt;、および複数の接続の同時ポーリングもサポートしています。</target>
        </trans-unit>
        <trans-unit id="bf6a9f983b8ff7cdac272806e8c7920846eea877" translate="yes" xml:space="preserve">
          <source>However, they still can&amp;rsquo;t be compared to standard &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; enumerations:</source>
          <target state="translated">ただし、標準の&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;列挙と比較することはできません。</target>
        </trans-unit>
        <trans-unit id="91333f2e4bfca97b3f05dfcc743022c8782b7559" translate="yes" xml:space="preserve">
          <source>However, to match the shell as closely as possible, it is recommended to always use &lt;code&gt;posix&lt;/code&gt; and &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; when using &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt;, which will negate &lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt;&lt;code&gt;wordchars&lt;/code&gt;&lt;/a&gt; entirely.</source>
          <target state="translated">しかし、密接にできるだけシェルを一致させるために、常に使用することをお勧めし &lt;code&gt;posix&lt;/code&gt; と&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; を&lt;/a&gt;使用している場合&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;否定するだろう、&lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt; &lt;code&gt;wordchars&lt;/code&gt; を&lt;/a&gt;完全に。</target>
        </trans-unit>
        <trans-unit id="9b74bb3116de6c2b6f2b5b3489fa54307c65fc89" translate="yes" xml:space="preserve">
          <source>However, two enum members are allowed to have the same value. Given two members A and B with the same value (and A defined first), B is an alias to A. By-value lookup of the value of A and B will return A. By-name lookup of B will also return A:</source>
          <target state="translated">ただし、2 つの enum メンバが同じ値を持つことは許されています。同じ値を持つ2つのメンバAとBがある場合(最初に定義されているのはA)、BはAのエイリアスになります。</target>
        </trans-unit>
        <trans-unit id="d317839ba4e2c85ee86b52a46ee27291e7f15167" translate="yes" xml:space="preserve">
          <source>However, when using a proxy for a namespace object, an attribute beginning with &lt;code&gt;'_'&lt;/code&gt; will be an attribute of the proxy and not an attribute of the referent:</source>
          <target state="translated">ただし、名前空間オブジェクトにプロキシを使用する場合、 &lt;code&gt;'_'&lt;/code&gt; 始まる属性はプロキシの属性であり、参照先の属性ではありません。</target>
        </trans-unit>
        <trans-unit id="9db1c257cbf6348bd2bdc6bec9835ad1ee2611cd" translate="yes" xml:space="preserve">
          <source>Human-readable time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created. By default this is of the form &amp;lsquo;2003-07-08 16:49:45,896&amp;rsquo; (the numbers after the comma are millisecond portion of the time).</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;が作成された、人間が読める形式の時刻。デフォルトでは、これは「2003-07-08 16：49：45,896」の形式です（カンマの後の数字は時間のミリ秒部分です）。</target>
        </trans-unit>
        <trans-unit id="9c8511b78ed54aa0fa96cb081001b1a2bf46efeb" translate="yes" xml:space="preserve">
          <source>Human-readable version of &lt;a href=&quot;#wave.Wave_read.getcomptype&quot;&gt;&lt;code&gt;getcomptype()&lt;/code&gt;&lt;/a&gt;. Usually &lt;code&gt;'not compressed'&lt;/code&gt; parallels &lt;code&gt;'NONE'&lt;/code&gt;.</source>
          <target state="translated">人間が読めるバージョンの&lt;a href=&quot;#wave.Wave_read.getcomptype&quot;&gt; &lt;code&gt;getcomptype()&lt;/code&gt; &lt;/a&gt;。通常、 &lt;code&gt;'not compressed'&lt;/code&gt; Parallelsの &lt;code&gt;'NONE'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="add9ea21e0134d1a6dc92640398cf0190b05790e" translate="yes" xml:space="preserve">
          <source>Hung up</source>
          <target state="translated">吊るし上げ</target>
        </trans-unit>
        <trans-unit id="f3ed3aadb3c9adb061d870e136cd1453348e8c73" translate="yes" xml:space="preserve">
          <source>Hyperbolic functions</source>
          <target state="translated">双曲関数</target>
        </trans-unit>
        <trans-unit id="de2470c480abd98424dacb0f44f27ca062690dfb" translate="yes" xml:space="preserve">
          <source>I will present an example here which uses the standard C library&amp;rsquo;s &lt;code&gt;qsort()&lt;/code&gt; function, that is used to sort items with the help of a callback function. &lt;code&gt;qsort()&lt;/code&gt; will be used to sort an array of integers:</source>
          <target state="translated">ここでは、コールバック関数を使用してアイテムをソートするために使用される標準Cライブラリの &lt;code&gt;qsort()&lt;/code&gt; 関数を使用する例を示します。 &lt;code&gt;qsort()&lt;/code&gt; は整数の配列をソートするために使用されます：</target>
        </trans-unit>
        <trans-unit id="9a9c3553918e97b386614c46b9394f4b8471c979" translate="yes" xml:space="preserve">
          <source>I/O Base Classes</source>
          <target state="translated">I/Oベースクラス</target>
        </trans-unit>
        <trans-unit id="0676b814ab2a9d403059287e94b18b3f3ed5e63c" translate="yes" xml:space="preserve">
          <source>I/O error</source>
          <target state="translated">入出力エラー</target>
        </trans-unit>
        <trans-unit id="2711395734586dad19e3e7e6bf6c599633c758e2" translate="yes" xml:space="preserve">
          <source>I/O operations may fail even when &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; indicates that they would succeed, particularly for operations on network filesystems which may have permissions semantics beyond the usual POSIX permission-bit model.</source>
          <target state="translated">特に、通常のPOSIXアクセス許可ビットモデルを超えるアクセス許可のセマンティクスを持つネットワークファイルシステムでの操作の場合、&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;が成功することを示しても、I / O操作は失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f7d467a87245290159a1b6af42928666730653f6" translate="yes" xml:space="preserve">
          <source>IANA</source>
          <target state="translated">IANA</target>
        </trans-unit>
        <trans-unit id="fd1cdb7e9dcbc4982fb094e6764772bf3b00e12c" translate="yes" xml:space="preserve">
          <source>IANA TLS: Transport Layer Security (TLS) Parameters</source>
          <target state="translated">IANA TLS:Transport Layer Security (TLS)パラメータ</target>
        </trans-unit>
        <trans-unit id="5936f115af9d290a0d4c51a3b370fe51eb023734" translate="yes" xml:space="preserve">
          <source>IANA timezone database</source>
          <target state="translated">IANAタイムゾーンデータベース</target>
        </trans-unit>
        <trans-unit id="bce52158db4ea934391bad4260ff69db81d9b587" translate="yes" xml:space="preserve">
          <source>IBM&amp;rsquo;s General Decimal Arithmetic Specification, &lt;a href=&quot;http://speleotrove.com/decimal/decarith.html&quot;&gt;The General Decimal Arithmetic Specification&lt;/a&gt;.</source>
          <target state="translated">IBMのGeneral Decimal Arithmetic Specification、&lt;a href=&quot;http://speleotrove.com/decimal/decarith.html&quot;&gt;The General Decimal Arithmetic Specification&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d384f46aa316c46d9da3980789c420f3f02914f" translate="yes" xml:space="preserve">
          <source>IBM037, IBM039</source>
          <target state="translated">IBM037、IBM039</target>
        </trans-unit>
        <trans-unit id="25c9f2e3939dfc2b3f7f8e99803711ba0f10dd8f" translate="yes" xml:space="preserve">
          <source>IBM775</source>
          <target state="translated">IBM775</target>
        </trans-unit>
        <trans-unit id="2e03293740ecf9023db87941f55d98d607008460" translate="yes" xml:space="preserve">
          <source>IBM864</source>
          <target state="translated">IBM864</target>
        </trans-unit>
        <trans-unit id="d0c6332e03ed7288ab9fabcfcbe8f7d47ead9f1d" translate="yes" xml:space="preserve">
          <source>IDL Type</source>
          <target state="translated">IDL型</target>
        </trans-unit>
        <trans-unit id="6bf8911095af71a660308ff2f022e3f091e35f17" translate="yes" xml:space="preserve">
          <source>IDL attributes map to instance attributes. For compatibility with the OMG IDL language mapping for Python, an attribute &lt;code&gt;foo&lt;/code&gt; can also be accessed through accessor methods &lt;code&gt;_get_foo()&lt;/code&gt; and &lt;code&gt;_set_foo()&lt;/code&gt;. &lt;code&gt;readonly&lt;/code&gt; attributes must not be changed; this is not enforced at runtime.</source>
          <target state="translated">IDL属性はインスタンス属性にマップされます。PythonのOMG IDL言語マッピングとの互換性のために、属性 &lt;code&gt;foo&lt;/code&gt; には、アクセサーメソッド &lt;code&gt;_get_foo()&lt;/code&gt; および &lt;code&gt;_set_foo()&lt;/code&gt; を介してアクセスすることもできます。 &lt;code&gt;readonly&lt;/code&gt; 属性は変更しないでください。これは実行時に強制されません。</target>
        </trans-unit>
        <trans-unit id="4646e9f2b71a8bdc5087acabdc0352b0d257af74" translate="yes" xml:space="preserve">
          <source>IDLE</source>
          <target state="translated">IDLE</target>
        </trans-unit>
        <trans-unit id="619274f5a3734b1f62b9c727af1d75beec311b03" translate="yes" xml:space="preserve">
          <source>IDLE Help</source>
          <target state="translated">IDLEヘルプ</target>
        </trans-unit>
        <trans-unit id="898dce9ecf90e7e7d5d02cf64e27fe2734513168" translate="yes" xml:space="preserve">
          <source>IDLE assumes that files with a known .py* extension contain Python code and that other files do not. Run Python code with the Run menu.</source>
          <target state="translated">IDLE は、既知の .py*拡張子を持つファイルには Python コードが含まれており、他のファイルには含まれていないことを前提としています。実行メニューでPythonコードを実行します。</target>
        </trans-unit>
        <trans-unit id="75bbc791a4aa40f6497c42cba8acc7f613d3b8cb" translate="yes" xml:space="preserve">
          <source>IDLE contains an extension facility. Preferences for extensions can be changed with the Extensions tab of the preferences dialog. See the beginning of config-extensions.def in the idlelib directory for further information. The only current default extension is zzdummy, an example also used for testing.</source>
          <target state="translated">IDLE には拡張機能があります。拡張機能の環境設定は、環境設定ダイアログの拡張機能タブで変更することができます。詳細は idlelib ディレクトリの config-extensions.def の冒頭を参照してください。現在のデフォルトの拡張機能は zzdummy だけです。</target>
        </trans-unit>
        <trans-unit id="9ea11f11dfc2e4dc9fcce02ad959e9a853a35043" translate="yes" xml:space="preserve">
          <source>IDLE has the following features:</source>
          <target state="translated">IDLEには以下のような機能があります。</target>
        </trans-unit>
        <trans-unit id="44f3701f5db6a9639148f6560d8fff5476184868" translate="yes" xml:space="preserve">
          <source>IDLE has two main window types, the Shell window and the Editor window. It is possible to have multiple editor windows simultaneously. On Windows and Linux, each has its own top menu. Each menu documented below indicates which window type it is associated with.</source>
          <target state="translated">IDLEには、シェルウィンドウとエディタウィンドウの2つの主要なウィンドウがあります。同時に複数のエディタウィンドウを持つことができます。WindowsとLinuxでは、それぞれにトップメニューがあります。以下に説明されている各メニューは、どのウィンドウタイプに関連付けられているかを示しています。</target>
        </trans-unit>
        <trans-unit id="44fac21ae0e0592212109932c2b71c550bd61ce6" translate="yes" xml:space="preserve">
          <source>IDLE is Python&amp;rsquo;s Integrated Development and Learning Environment.</source>
          <target state="translated">IDLEはPythonの統合開発および学習環境です。</target>
        </trans-unit>
        <trans-unit id="6e56c2de541f27a1c04500e97b2142294c0794aa" translate="yes" xml:space="preserve">
          <source>IDLE is intentionally different from standard Python in order to facilitate development of tkinter programs. Enter &lt;code&gt;import tkinter as tk;
root = tk.Tk()&lt;/code&gt; in standard Python and nothing appears. Enter the same in IDLE and a tk window appears. In standard Python, one must also enter &lt;code&gt;root.update()&lt;/code&gt; to see the window. IDLE does the equivalent in the background, about 20 times a second, which is about every 50 milliseconds. Next enter &lt;code&gt;b = tk.Button(root, text='button'); b.pack()&lt;/code&gt;. Again, nothing visibly changes in standard Python until one enters &lt;code&gt;root.update()&lt;/code&gt;.</source>
          <target state="translated">IDLEは、tkinterプログラムの開発を容易にするために、標準のPythonとは意図的に異なります。 &lt;code&gt;import tkinter as tk; root = tk.Tk()&lt;/code&gt; 入力します。標準Pythonではroot = tk.Tk（）で、何も表示されません。同じことをIDLEに入力すると、tkウィンドウが表示されます。標準のPythonでは、ウィンドウを表示するために &lt;code&gt;root.update()&lt;/code&gt; も入力する必要があります。 IDLEは、バックグラウンドで同等の処理を1秒あたり約20回、つまり約50ミリ秒ごとに実行します。次に &lt;code&gt;b = tk.Button(root, text='button'); b.pack()&lt;/code&gt; 。繰り返しますが、標準のPythonでは、 &lt;code&gt;root.update()&lt;/code&gt; に入るまで目に見える変化はありません。</target>
        </trans-unit>
        <trans-unit id="8d796c27be2cf21ed59c8759c905bc23b350d7b4" translate="yes" xml:space="preserve">
          <source>IDLE may open editor windows when it starts, depending on settings and how you start IDLE. Thereafter, use the File menu. There can be only one open editor window for a given file.</source>
          <target state="translated">設定やIDLEの起動方法によっては、起動時にエディタウィンドウが開くことがあります。それ以降は、ファイルメニューを使用してください。指定されたファイルに対して、開いているエディタ ウィンドウは 1 つしかありません。</target>
        </trans-unit>
        <trans-unit id="253f821a5f3a1c94a0536918c1450667d7b406ce" translate="yes" xml:space="preserve">
          <source>IDLE on macOS</source>
          <target state="translated">macOSのIDLE</target>
        </trans-unit>
        <trans-unit id="07b20364b24d2a4a15afcdbe6b5431a328e5b391" translate="yes" xml:space="preserve">
          <source>IDLE uses a socket to communicate between the IDLE GUI process and the user code execution process. A connection must be established whenever the Shell starts or restarts. (The latter is indicated by a divider line that says &amp;lsquo;RESTART&amp;rsquo;). If the user process fails to connect to the GUI process, it displays a &lt;code&gt;Tk&lt;/code&gt; error box with a &amp;lsquo;cannot connect&amp;rsquo; message that directs the user here. It then exits.</source>
          <target state="translated">IDLEはソケットを使用して、IDLE GUIプロセスとユーザーコード実行プロセスの間の通信を行います。シェルが起動または再起動するたびに接続を確立する必要があります。 （後者は、「再起動」という分割線で示されます）。ユーザープロセスがGUIプロセスへの接続に失敗した場合、 &lt;code&gt;Tk&lt;/code&gt; エラーボックスに「接続できません」というメッセージが表示され、ここでユーザーに指示されます。その後、終了します。</target>
        </trans-unit>
        <trans-unit id="294f9b9e7d21007e31d5bb92fc308b2f7b9ed947" translate="yes" xml:space="preserve">
          <source>IDLE&amp;rsquo;s standard stream replacements are not inherited by subprocesses created in the execution process, whether directly by user code or by modules such as multiprocessing. If such subprocess use &lt;code&gt;input&lt;/code&gt; from sys.stdin or &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; to sys.stdout or sys.stderr, IDLE should be started in a command line window. The secondary subprocess will then be attached to that window for input and output.</source>
          <target state="translated">IDLEの標準ストリーム置換は、ユーザーコードによって直接、またはマルチプロセッシングなどのモジュールによって、実行プロセスで作成されたサブプロセスによって継承されません。そのようなサブプロセスの使用の場合は &lt;code&gt;input&lt;/code&gt; sys.stdinをまたはから &lt;code&gt;print&lt;/code&gt; または &lt;code&gt;write&lt;/code&gt; sys.stdoutのかsys.stderrを持ちまで、IDLEは、コマンドラインウィンドウで起動する必要があります。次に、セカンダリサブプロセスがそのウィンドウに接続され、入力と出力が行われます。</target>
        </trans-unit>
        <trans-unit id="aea80ada688c48062d55019e094cc1143e3a0adc" translate="yes" xml:space="preserve">
          <source>IETF</source>
          <target state="translated">IETF</target>
        </trans-unit>
        <trans-unit id="f9c9fbbc612c61efdc44101bdc0b4c61f818bba4" translate="yes" xml:space="preserve">
          <source>IIS can be configured to pass the correct &lt;code&gt;PATH_INFO&lt;/code&gt;, but this causes another bug where &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; is wrong. Luckily this variable is rarely used and is not guaranteed by WSGI. On IIS&amp;lt;7, though, the setting can only be made on a vhost level, affecting all other script mappings, many of which break when exposed to the &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; bug. For this reason IIS&amp;lt;7 is almost never deployed with the fix. (Even IIS7 rarely uses it because there is still no UI for it.)</source>
          <target state="translated">IISは正しい &lt;code&gt;PATH_INFO&lt;/code&gt; を渡すように構成できますが、これにより &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; が間違っている別のバグが発生します。幸い、この変数はめったに使用されず、WSGIでは保証されていません。ただし、IIS &amp;lt;7では、設定は仮想ホストレベルでのみ行うことができ、他のすべてのスクリプトマッピングに影響します。その多くは、 &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; バグにさらされると機能しなくなります。このため、IIS &amp;lt;7は修正プログラムと共に展開されることはほとんどありません。（UIがないため、IIS7でもめったに使用しません。）</target>
        </trans-unit>
        <trans-unit id="dc5982d33dd23bd8d90805fafc24a3114eaf3d91" translate="yes" xml:space="preserve">
          <source>IMAP (Internet Message Access Protocol) client</source>
          <target state="translated">アイエムエーピー</target>
        </trans-unit>
        <trans-unit id="ee980c33b9d65ac696be3577604e43ad769530f5" translate="yes" xml:space="preserve">
          <source>IMAP4 Example</source>
          <target state="translated">IMAP4の例</target>
        </trans-unit>
        <trans-unit id="0bf33cf42855fe39a37a956bf4ca9bce143662b0" translate="yes" xml:space="preserve">
          <source>IMAP4 Objects</source>
          <target state="translated">IMAP4 オブジェクト</target>
        </trans-unit>
        <trans-unit id="54a2e0f83d696897f7938ff4e902b96cfe7ebe39" translate="yes" xml:space="preserve">
          <source>IMAP4 server errors cause this exception to be raised. This is a sub-class of &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt;&lt;code&gt;IMAP4.error&lt;/code&gt;&lt;/a&gt;. Note that closing the instance and instantiating a new one will usually allow recovery from this exception.</source>
          <target state="translated">IMAP4サーバーエラーにより、この例外が発生します。これは&lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt; &lt;code&gt;IMAP4.error&lt;/code&gt; の&lt;/a&gt;サブクラスです。インスタンスを閉じて新しいインスタンスをインスタンス化すると、通常はこの例外から回復できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a7aaaf8103e147f7508e66b5f7be824742d34faa" translate="yes" xml:space="preserve">
          <source>IOError</source>
          <target state="translated">IOError</target>
        </trans-unit>
        <trans-unit id="2ccb5c6f3f5eedcfc4714430d8777d910b94fd71" translate="yes" xml:space="preserve">
          <source>IP Addresses</source>
          <target state="translated">IPアドレス</target>
        </trans-unit>
        <trans-unit id="9e3725069a7ec82ac5ffec06a0726dc4f7d933d6" translate="yes" xml:space="preserve">
          <source>IP Network definitions</source>
          <target state="translated">IPネットワークの定義</target>
        </trans-unit>
        <trans-unit id="0c1d08e522b1ada055f757b0f439e1183ee338ed" translate="yes" xml:space="preserve">
          <source>ISO 8601 week as a decimal number with Monday as the first day of the week. Week 01 is the week containing Jan 4.</source>
          <target state="translated">ISO 8601 週は月曜日を週の最初の日とする10進数です。週01は1月4日を含む週です。</target>
        </trans-unit>
        <trans-unit id="f8995e635cfe9c3a98e07c9ba781f0a6358cb3c9" translate="yes" xml:space="preserve">
          <source>ISO 8601 weekday as a decimal number where 1 is Monday.</source>
          <target state="translated">ISO 8601 平日は、1が月曜日である10進数である。</target>
        </trans-unit>
        <trans-unit id="514bf155d39ffefb08418af80af6de7e45130d9e" translate="yes" xml:space="preserve">
          <source>ISO 8601 year with century representing the year that contains the greater part of the ISO week (&lt;code&gt;%V&lt;/code&gt;).</source>
          <target state="translated">ISO 8601年。世紀はISO週の大部分を含む年を表します（ &lt;code&gt;%V&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f55f5622b2b522bc805cc41ff05e2c603a2bf278" translate="yes" xml:space="preserve">
          <source>ISO/IEC 9899:1999. &amp;ldquo;Programming languages &amp;ndash; C.&amp;rdquo; A public draft of this standard is available at &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&lt;/a&gt;.</source>
          <target state="translated">ISO / IEC 9899：1999。「プログラミング言語-C」この標準の公開草案は、&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="acd1e6f9426d838c20ce10c0d69c37b84f105784" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; except that &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; also attempts to preserve file metadata.</source>
          <target state="translated">&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;もファイルのメタデータを保持しようとする点を除いて、&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="3b67836a7558b5c8eb65d018d9c3da891c5dbd61" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt;&lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt;&lt;/a&gt;, except it also includes any time that the system is suspended.</source>
          <target state="translated">&lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt; &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; &lt;/a&gt;と同じですが、システムが一時停止されている時間も含まれます。</target>
        </trans-unit>
        <trans-unit id="82e2063541c7fa099ab5e5a901852b54a66c49b9" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#decimal.Decimal.to_integral_value&quot;&gt;&lt;code&gt;to_integral_value()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;to_integral&lt;/code&gt; name has been kept for compatibility with older versions.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.to_integral_value&quot;&gt; &lt;code&gt;to_integral_value()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。 &lt;code&gt;to_integral&lt;/code&gt; 名は旧バージョンとの互換性のために保管されています。</target>
        </trans-unit>
        <trans-unit id="46f3fa216b3c32403a41514a86cd404ca3c83cb5" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="a45d4848c68ab0522b00bbc2c7242ac143f0b900" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="c6bfdcc3ee2262d164aa72a90a32911e18ec94a5" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.subn&quot;&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.subn&quot;&gt; &lt;code&gt;subn()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="c2f8627bc91378e78cf995740ad3e1715d475219" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.iter_unpack&quot;&gt;&lt;code&gt;iter_unpack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes must be a multiple of &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#struct.iter_unpack&quot;&gt; &lt;code&gt;iter_unpack()&lt;/code&gt; &lt;/a&gt;関数と同じで、コンパイル済みフォーマットを使用します。バッファーのサイズ（バイト単位）は、&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; の&lt;/a&gt;倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d21eeb3027709bab3da92975257519368ad08d9e" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. (&lt;code&gt;len(result)&lt;/code&gt; will equal &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">コンパイルされたフォーマットを使用する&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; &lt;/a&gt;関数と同じです。（ &lt;code&gt;len(result)&lt;/code&gt; は&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;と同じになります。）</target>
        </trans-unit>
        <trans-unit id="c3375660e2fad4e52469c1195b329fc8e41df84c" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.pack_into&quot;&gt;&lt;code&gt;pack_into()&lt;/code&gt;&lt;/a&gt; function, using the compiled format.</source>
          <target state="translated">コンパイルされたフォーマットを使用して、&lt;a href=&quot;#struct.pack_into&quot;&gt; &lt;code&gt;pack_into()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="0d39ae1b34f63264f0cee42f0a4d4a1a122e5077" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.unpack&quot;&gt;&lt;code&gt;unpack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes must equal &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンパイルされたフォーマットを使用して、&lt;a href=&quot;#struct.unpack&quot;&gt; &lt;code&gt;unpack()&lt;/code&gt; &lt;/a&gt;関数と同じです。バッファーのサイズ（バイト単位）は、&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="a4fe688fb8f7fbdc7bcfef76db53d21a9a791cad" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.unpack_from&quot;&gt;&lt;code&gt;unpack_from()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes, starting at position &lt;em&gt;offset&lt;/em&gt;, must be at least &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンパイル済みフォーマットを使用して、&lt;a href=&quot;#struct.unpack_from&quot;&gt; &lt;code&gt;unpack_from()&lt;/code&gt; &lt;/a&gt;関数と同じです。位置&lt;em&gt;offset&lt;/em&gt;から始まるバッファーのサイズ（バイト単位）は、少なくとも&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="01924aa1a07ec0c16adf4b5d09634cea505a484d" translate="yes" xml:space="preserve">
          <source>Identifier of the device on which this file resides.</source>
          <target state="translated">このファイルが存在するデバイスの識別子。</target>
        </trans-unit>
        <trans-unit id="7c1a745105ff9b6c357cf50bdd91090ffef6ae55" translate="yes" xml:space="preserve">
          <source>Identifier removed</source>
          <target state="translated">識別子の削除</target>
        </trans-unit>
        <trans-unit id="1e75596418519eaa6fe966ace8634031be7fdfca" translate="yes" xml:space="preserve">
          <source>Identify the client using a plaintext password. The &lt;em&gt;password&lt;/em&gt; will be quoted.</source>
          <target state="translated">プレーンテキストのパスワードを使用してクライアントを識別します。&lt;em&gt;パスワードが&lt;/em&gt;引用されます。</target>
        </trans-unit>
        <trans-unit id="20298f2cb970734bced6da962363cfab14944346" translate="yes" xml:space="preserve">
          <source>Identify yourself to an ESMTP server using &lt;code&gt;EHLO&lt;/code&gt;. The hostname argument defaults to the fully qualified domain name of the local host. Examine the response for ESMTP option and store them for use by &lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt;&lt;code&gt;has_extn()&lt;/code&gt;&lt;/a&gt;. Also sets several informational attributes: the message returned by the server is stored as the &lt;code&gt;ehlo_resp&lt;/code&gt; attribute, &lt;code&gt;does_esmtp&lt;/code&gt; is set to true or false depending on whether the server supports ESMTP, and &lt;code&gt;esmtp_features&lt;/code&gt; will be a dictionary containing the names of the SMTP service extensions this server supports, and their parameters (if any).</source>
          <target state="translated">&lt;code&gt;EHLO&lt;/code&gt; を使用して、ESMTPサーバーに対して自分自身を識別します。 hostname引数のデフォルトは、ローカルホストの完全修飾ドメイン名です。 ESMTPオプションの応答を&lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt; &lt;code&gt;has_extn()&lt;/code&gt; &lt;/a&gt;、has_extn（）で使用できるように保存します。サーバーから返されたメッセージは次のように格納されます。また、いくつかの情報の属性設定 &lt;code&gt;ehlo_resp&lt;/code&gt; の属性、 &lt;code&gt;does_esmtp&lt;/code&gt; は、サーバーがESMTPをサポートしているかどうかに応じて、trueまたはfalseに設定されている、と &lt;code&gt;esmtp_features&lt;/code&gt; は、このサーバーのSMTPサービス拡張の名前を含む辞書になりますがサポート、およびそれらのパラメータ（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="1a6cc0c49eff29b1de2a0094d71e3e849917c5a5" translate="yes" xml:space="preserve">
          <source>Identify yourself to the SMTP server using &lt;code&gt;HELO&lt;/code&gt;. The hostname argument defaults to the fully qualified domain name of the local host. The message returned by the server is stored as the &lt;code&gt;helo_resp&lt;/code&gt; attribute of the object.</source>
          <target state="translated">&lt;code&gt;HELO&lt;/code&gt; を使用して、SMTPサーバーに対して自分自身を識別します。hostname引数のデフォルトは、ローカルホストの完全修飾ドメイン名です。サーバーから返されたメッセージは、オブジェクトの &lt;code&gt;helo_resp&lt;/code&gt; 属性として格納されます。</target>
        </trans-unit>
        <trans-unit id="7e5a975b6add84fd53e3710a9ceac15eb06663b7" translate="yes" xml:space="preserve">
          <source>Identity</source>
          <target state="translated">Identity</target>
        </trans-unit>
        <trans-unit id="bf6a9618acf9bc1e72899605a417801bb69aeed6" translate="yes" xml:space="preserve">
          <source>Idle defaults to black on white text, but colors text with special meanings. For the shell, these are shell output, shell error, user output, and user error. For Python code, at the shell prompt or in an editor, these are keywords, builtin class and function names, names following &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;def&lt;/code&gt;, strings, and comments. For any text window, these are the cursor (when present), found text (when possible), and selected text.</source>
          <target state="translated">Idleはデフォルトで白いテキストでは黒になりますが、特別な意味を持つテキストに色が付けられます。シェルの場合、これらはシェル出力、シェルエラー、ユーザー出力、およびユーザーエラーです。Pythonコードの場合、シェルプロンプトまたはエディターでは、キーワード、組み込みクラスと関数の名前、 &lt;code&gt;class&lt;/code&gt; と &lt;code&gt;def&lt;/code&gt; に続く名前、文字列、コメントです。テキストウィンドウの場合、これらはカーソル（存在する場合）、見つかったテキスト（可能な場合）、および選択されたテキストです。</target>
        </trans-unit>
        <trans-unit id="4dbc654d77cb8c9c5dc993be159da8b61b1ecd5b" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;from&amp;rdquo; is used as the value of &lt;em&gt;etype&lt;/em&gt;, &lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt;&lt;code&gt;element_create()&lt;/code&gt;&lt;/a&gt; will clone an existing element. &lt;em&gt;args&lt;/em&gt; is expected to contain a themename, from which the element will be cloned, and optionally an element to clone from. If this element to clone from is not specified, an empty element will be used. &lt;em&gt;kw&lt;/em&gt; is discarded.</source>
          <target state="translated">「from」が&lt;em&gt;etype&lt;/em&gt;の値として使用されている場合、&lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt; &lt;code&gt;element_create()&lt;/code&gt; &lt;/a&gt;は既存の要素を複製します。&lt;em&gt;argsに&lt;/em&gt;は、要素のクローン元となるテーマ名と、オプションでクローン元の要素が含まれている必要があります。クローン元のこの要素が指定されていない場合、空の要素が使用されます。&lt;em&gt;kw&lt;/em&gt;は破棄されます。</target>
        </trans-unit>
        <trans-unit id="f944010bcb8e6d344f99a27fdf59f6cb446f5d23" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;image&amp;rdquo; is used, &lt;em&gt;args&lt;/em&gt; should contain the default image name followed by statespec/value pairs (this is the imagespec), and &lt;em&gt;kw&lt;/em&gt; may have the following options:</source>
          <target state="translated">「image」を使用する場合、&lt;em&gt;argsに&lt;/em&gt;は、デフォルトのイメージ名と、それに続くstatespec / valueのペア（これはimagespecです）が含まれている必要があり、&lt;em&gt;kwに&lt;/em&gt;は次のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="14802572f6d100ba7a53b320def8eef6093842e7" translate="yes" xml:space="preserve">
          <source>If 0 bytes are returned, and &lt;em&gt;size&lt;/em&gt; was not 0, this indicates end of file. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">0バイトが返され、&lt;em&gt;サイズ&lt;/em&gt;が0でない場合、これはファイルの終わりを示します。オブジェクトが非ブロッキングモードであり、使用可能なバイトがない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c02c4acde96b174846ba50faba8ca5546f01adef" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#asyncio.loop.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called before &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; is called, the loop will poll the I/O selector once with a timeout of zero, run all callbacks scheduled in response to I/O events (and those that were already scheduled), and then exit.</source>
          <target state="translated">場合は&lt;a href=&quot;#asyncio.loop.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;の前に呼び出される&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; &lt;/a&gt;と呼ばれ、ループがゼロのタイムアウトで一度I / Oセレクタをポーリングする、I / Oイベント（およびすでにスケジュールされたもの）に応じて、予定のすべてのコールバックを実行し、その後、終了します。</target>
        </trans-unit>
        <trans-unit id="05e8eca43c8b5bd5bc36cb778852fb6cfcbe90e4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#asyncio.loop.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called while &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; is running, the loop will run the current batch of callbacks and then exit. Note that new callbacks scheduled by callbacks will not run in this case; instead, they will run the next time &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.loop.run_until_complete&quot;&gt;&lt;code&gt;run_until_complete()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">場合は&lt;a href=&quot;#asyncio.loop.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;しながら、呼ばれ&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; が&lt;/a&gt;実行されて、ループがコールバックして終了の現在のバッチを実行します。この場合、コールバックによってスケジュールされた新しいコールバックは実行されないことに注意してください。代わりに、次に&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#asyncio.loop.run_until_complete&quot;&gt; &lt;code&gt;run_until_complete()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="d1678f57ce6088308b33179279e335b67a5b9075" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#cmdoption-timeit-n&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/a&gt; is not given, a suitable number of loops is calculated by trying successive powers of 10 until the total time is at least 0.2 seconds.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-timeit-n&quot;&gt; &lt;code&gt;-n&lt;/code&gt; &lt;/a&gt;が指定されていない場合、合計時間が少なくとも0.2秒になるまで10の累乗を試行することにより、適切なループ数が計算されます。</target>
        </trans-unit>
        <trans-unit id="582ba31da26c45d3b235552a7d51ae121320d8b0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;None&lt;/code&gt;, it is called without arguments to provide a default value for the given &lt;em&gt;key&lt;/em&gt;, this value is inserted in the dictionary for the &lt;em&gt;key&lt;/em&gt;, and returned.</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、引数なしで呼び出され、指定された&lt;em&gt;keyの&lt;/em&gt;デフォルト値を提供します。この値は、&lt;em&gt;key&lt;/em&gt;のディクショナリに挿入されて返されます。</target>
        </trans-unit>
        <trans-unit id="9cde1ada951bb0301fa7df4ab6c0c9e7ef70a81d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; is used just as a simple decorator with no parameters, it acts as if it has the default values documented in this signature. That is, these three uses of &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; are equivalent:</source>
          <target state="translated">場合&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;だけパラメータなしで単純なデコレータとして使用され、それは、このシグネチャに記載デフォルト値を有するかのように作用します。つまり、これら3つの&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; の&lt;/a&gt;使用法は同等です。</target>
        </trans-unit>
        <trans-unit id="06790524e2c9624dd66bf4e80174a491c71a47d3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance &lt;em&gt;d&lt;/em&gt; is naive, this is the same as &lt;code&gt;d.timetuple()&lt;/code&gt; except that &lt;code&gt;tm_isdst&lt;/code&gt; is forced to 0 regardless of what &lt;code&gt;d.dst()&lt;/code&gt; returns. DST is never in effect for a UTC time.</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス&lt;em&gt;d&lt;/em&gt;がナイーブの場合、 &lt;code&gt;d.dst()&lt;/code&gt; が返すものに関係なく &lt;code&gt;tm_isdst&lt;/code&gt; が強制的に0になることを除いて、これは &lt;code&gt;d.timetuple()&lt;/code&gt; と同じです。DSTがUTC時間で有効になることはありません。</target>
        </trans-unit>
        <trans-unit id="7e0c40c35052a5f701990cfae358459eb5e545e6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.dst(self)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.dst(self)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f8caa4545a15722244f6b65e83c6c19542a6ab44" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.tzname(self)&lt;/code&gt;, raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a string object,</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;ある &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.tzname(self)&lt;/code&gt; 後者は返さないしない場合は、例外を発生させ &lt;code&gt;None&lt;/code&gt; か、文字列オブジェクトを、</target>
        </trans-unit>
        <trans-unit id="009d47938690bf44a446761016995961a2f2f6ff" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.utcoffset(self)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.utcoffset(self)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="aa3f64ecaf560bd1451a3c877d9f543b04fcbe06" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, a string is appended, giving the UTC offset:</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;返しません &lt;code&gt;None&lt;/code&gt; を、文字列は、UTCオフセットを与える、追加されます：</target>
        </trans-unit>
        <trans-unit id="e7fddffca5059ab1879694ef1968947dba191d2e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.dst(None)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt;, or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">もし&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;あるん &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.dst(None)&lt;/code&gt; 、後者が戻らない場合には例外を発生させます &lt;code&gt;None&lt;/code&gt; 、または&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;、1日未満の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f9853982dbae22fa9c2c2cdec0356caa1586b4dd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.tzname(None)&lt;/code&gt;, or raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a string object.</source>
          <target state="translated">もし&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;あるん &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.tzname(None)&lt;/code&gt; 、または後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か、文字列オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="01eb5a0fb7bdeeed7668f56b440e9918155d69bd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.utcoffset(None)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.utcoffset(None)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bf4cf586488675e2ebba410a57aa3e353d6385cd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; should not return &lt;code&gt;None&lt;/code&gt; either.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返さない場合、&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;も &lt;code&gt;None&lt;/code&gt; を返すべきではありません。</target>
        </trans-unit>
        <trans-unit id="9011595808dcf4d293ad800bfc6c37bf4507550c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; has not been called before &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; will automatically create a new context for use in the current thread.</source>
          <target state="translated">&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; の&lt;/a&gt;前に&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;が呼び出されていない場合、&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt;は現在のスレッドで使用する新しいコンテキストを自動的に作成します。</target>
        </trans-unit>
        <trans-unit id="21415457c1d139549ef89f97140496dfdfab045c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#email.policy.Policy.cte_type&quot;&gt;&lt;code&gt;cte_type&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;8bit&lt;/code&gt;, non-ASCII binary data is converted back into bytes. Headers with binary data are not refolded, regardless of the &lt;code&gt;refold_header&lt;/code&gt; setting, since there is no way to know whether the binary data consists of single byte characters or multibyte characters.</source>
          <target state="translated">&lt;a href=&quot;#email.policy.Policy.cte_type&quot;&gt; &lt;code&gt;cte_type&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;8bit&lt;/code&gt; の場合、非ASCIIバイナリデータはバイトに変換されます。バイナリデータがシングルバイト文字で構成されているかマルチバイト文字で構成されているかを知る方法がないため、 &lt;code&gt;refold_header&lt;/code&gt; 設定に関係なく、バイナリデータを含むヘッダーは再折りたたみされません。</target>
        </trans-unit>
        <trans-unit id="c4c20a0126fb2339f46306a2ced37ad168e88f98" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#gc.DEBUG_SAVEALL&quot;&gt;&lt;code&gt;DEBUG_SAVEALL&lt;/code&gt;&lt;/a&gt; is set, then all unreachable objects will be added to this list rather than freed.</source>
          <target state="translated">&lt;a href=&quot;#gc.DEBUG_SAVEALL&quot;&gt; &lt;code&gt;DEBUG_SAVEALL&lt;/code&gt; &lt;/a&gt;が設定されている場合、到達できないオブジェクトはすべて解放されるのではなく、このリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="5b0b664a2e9905229df91a5d790cbb723cbe0e9d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; returns true for the cookie domain, &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; is called for the cookie path. Otherwise, &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; are never called for that cookie domain. If &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; returns true, &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; is called with the &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; object itself for a full check. Otherwise, &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; is never called for that cookie path.</source>
          <target state="translated">場合&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; は、&lt;/a&gt; Cookieドメインについてtrueを返す、&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; は&lt;/a&gt;クッキーのパスのために呼ばれています。それ以外の場合、&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;は、そのCookieドメインに対して呼び出されることはありません。場合&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; が&lt;/a&gt; trueを返す、&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; を&lt;/a&gt;使って呼び出され&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;フルチェックのためのオブジェクトそのもの。そうでない場合、そのcookieパスに対して&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;が呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="f9948b67acbf113dce0d3f91e1cc50fba431b125" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;spec.loader.create_module&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, then any pre-existing attributes will not be reset. Also, no &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if triggered while accessing &lt;strong&gt;spec&lt;/strong&gt; or setting an attribute on the module.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;spec.loader.create_module&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返さない場合、既存の属性はリセットされません。また、モジュールへの&lt;strong&gt;仕様&lt;/strong&gt;へのアクセスまたは属性の設定中にトリガーされた場合、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;は発生しません。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d25bfcae1ced7878a90923a3bbc911ce54352476" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; is defined, backwards-compatible functionality is provided.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;が定義されている場合、下位互換性のある機能が提供されます。</target>
        </trans-unit>
        <trans-unit id="f015a253da746e1e2dd5daec6dd710fa4d38756c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; is defined then backwards-compatible functionality is provided.</source>
          <target state="translated">場合&lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; は&lt;/a&gt;、次に定義されている下位互換機能が提供されます。</target>
        </trans-unit>
        <trans-unit id="9b326804ec799be875e38c1a2930a4c25cd8cef4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#memoryview.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; is one of the native format specifiers from the &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module, indexing with an integer or a tuple of integers is also supported and returns a single &lt;em&gt;element&lt;/em&gt; with the correct type. One-dimensional memoryviews can be indexed with an integer or a one-integer tuple. Multi-dimensional memoryviews can be indexed with tuples of exactly &lt;em&gt;ndim&lt;/em&gt; integers where &lt;em&gt;ndim&lt;/em&gt; is the number of dimensions. Zero-dimensional memoryviews can be indexed with the empty tuple.</source>
          <target state="translated">&lt;a href=&quot;#memoryview.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールのネイティブ形式指定子の1つである場合、整数または整数のタプルを使用したインデックス付けもサポートされ、正しいタイプの単一の&lt;em&gt;要素&lt;/em&gt;を返します。1次元のメモリビューには、整数または1整数のタプルでインデックスを付けることができます。多次元メモリ&lt;em&gt;ビューに&lt;/em&gt;は、&lt;em&gt;ndim&lt;/em&gt;が次元数である&lt;em&gt;ndim&lt;/em&gt;整数のタプルを使用してインデックスを付けることができます。ゼロ次元のメモリビューは、空のタプルでインデックス化できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e778bfa133d88df69f23727150ca404e8c30f386" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; returns a false value, the &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method will not be called upon unpickling.</source>
          <target state="translated">場合&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt; falseを返し、&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;メソッドは、unpickle化で呼び出されません。</target>
        </trans-unit>
        <trans-unit id="a3e787ee0d7f7e8be6223781b46958dd72b0562d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; is not provided, a modified copy of this mapping may be passed to the appropriate process-creation functions to cause child processes to use a modified environment.</source>
          <target state="translated">場合&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;提供されていない、このマッピングの変更コピーが変更された環境を使用して子プロセスを引き起こすために適切なプロセス生成関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="475a717000de0e2b757369a1ff16dc88df2752ce" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;obj&lt;/em&gt; is pickled as usual. Any other value causes &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; to emit the returned value as a persistent ID for &lt;em&gt;obj&lt;/em&gt;. The meaning of this persistent ID should be defined by &lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt;&lt;code&gt;Unpickler.persistent_load()&lt;/code&gt;&lt;/a&gt;. Note that the value returned by &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; cannot itself have a persistent ID.</source>
          <target state="translated">&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返す場合、&lt;em&gt;obj&lt;/em&gt;は通常どおりにピクルされます。その他の値を指定すると、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;は戻り値を&lt;em&gt;objの&lt;/em&gt;永続IDとして&lt;em&gt;発行し&lt;/em&gt;ます。この永続IDの意味は、&lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt; &lt;code&gt;Unpickler.persistent_load()&lt;/code&gt; で&lt;/a&gt;定義する必要があります。&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;によって返される値自体は、永続的なIDを持つことはできません。</target>
        </trans-unit>
        <trans-unit id="b6eb3f096073e3576908ab443228929f5d208920" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, any character not declared to be a word character, whitespace, or a quote will be returned as a single-character token. If it is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; will only split words in whitespaces;</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、単語文字、空白、または引用符として宣言されていない文字は、1文字のトークンとして返されます。 &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;は単語を空白でのみ分割します。</target>
        </trans-unit>
        <trans-unit id="18eeb508085769b9d25fd4a01e99172032cc7b0e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;getdefaulttimeout()&lt;/code&gt;&lt;/a&gt; is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, sockets returned by the &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; method inherit that timeout. Otherwise, the behaviour depends on settings of the listening socket:</source>
          <target state="translated">&lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;でない場合、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;メソッドによって返されるソケットはそのタイムアウトを継承します。それ以外の場合、動作はリスニングソケットの設定によって異なります。</target>
        </trans-unit>
        <trans-unit id="1595b340863f62eada1ad0f3d8d078a3995d33d4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.CompletedProcess.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; is non-zero, raise a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.CompletedProcess.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;がゼロ以外の場合は、&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9911da4fc9a0f7d03f013c47079f09932dd87298" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESHOWWINDOW&quot;&gt;&lt;code&gt;STARTF_USESHOWWINDOW&lt;/code&gt;&lt;/a&gt;, this attribute can be any of the values that can be specified in the &lt;code&gt;nCmdShow&lt;/code&gt; parameter for the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms633548(v=vs.85).aspx&quot;&gt;ShowWindow&lt;/a&gt; function, except for &lt;code&gt;SW_SHOWDEFAULT&lt;/code&gt;. Otherwise, this attribute is ignored.</source>
          <target state="translated">場合&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; パラメータ&lt;/a&gt;を指定&lt;a href=&quot;#subprocess.STARTF_USESHOWWINDOW&quot;&gt; &lt;code&gt;STARTF_USESHOWWINDOW&lt;/code&gt; &lt;/a&gt;、この属性はで指定できる値のいずれかとすることができる &lt;code&gt;nCmdShow&lt;/code&gt; のためのパラメータ&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms633548(v=vs.85).aspx&quot;&gt;のShowWindowの&lt;/a&gt;を除いて、機能 &lt;code&gt;SW_SHOWDEFAULT&lt;/code&gt; 。それ以外の場合、この属性は無視されます。</target>
        </trans-unit>
        <trans-unit id="17afb4874f7b74c33ba1f0a22fdede7fd8bbd2cb" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard error handle for the process. Otherwise, this attribute is ignored and the default for standard error is the console window&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定する場合、この属性はプロセスの標準エラーハンドルです。それ以外の場合、この属性は無視され、標準エラーのデフォルトはコンソールウィンドウのバッファです。</target>
        </trans-unit>
        <trans-unit id="8fb5e8f987ab98575e4a5bf2c5bf6153ecdee636" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard input handle for the process. If &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt; is not specified, the default for standard input is the keyboard buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定している場合、この属性はプロセスの標準入力ハンドルです。場合&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; が&lt;/a&gt;指定されていない場合、標準入力のデフォルトはキーボードバッファです。</target>
        </trans-unit>
        <trans-unit id="2459b411dc5f72300ea61c717f86aac25d4f6c97" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard output handle for the process. Otherwise, this attribute is ignored and the default for standard output is the console window&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定している場合、この属性はプロセスの標準出力ハンドルです。それ以外の場合、この属性は無視され、標準出力のデフォルトはコンソールウィンドウのバッファになります。</target>
        </trans-unit>
        <trans-unit id="0a30adf3ca5293f47c1189f27a38687cc18999e3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; has not been called prior to the call to &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;openlog()&lt;/code&gt; will be called with no arguments.</source>
          <target state="translated">場合&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;する前にコールに呼び出されていない&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;openlog()&lt;/code&gt; 引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa24a5d03ba78592ea146659696b16ffe43b9a77" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt; is false and &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; is true, each tab character will be replaced by a single space, which is &lt;em&gt;not&lt;/em&gt; the same as tab expansion.</source>
          <target state="translated">場合&lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; が&lt;/a&gt;虚偽であると&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; が&lt;/a&gt;真で、各タブ文字は単一のスペースで置き換えられます&lt;em&gt;ない&lt;/em&gt;タブ拡張と同じ。</target>
        </trans-unit>
        <trans-unit id="401fb6d910d793ac1a606938fd5c1e335d50c524" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; is false, newlines may appear in the middle of a line and cause strange output. For this reason, text should be split into paragraphs (using &lt;a href=&quot;stdtypes#str.splitlines&quot;&gt;&lt;code&gt;str.splitlines()&lt;/code&gt;&lt;/a&gt; or similar) which are wrapped separately.</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; &lt;/a&gt;がfalseの場合、改行が行の途中に表示され、奇妙な出力を引き起こす可能性があります。このため、テキストは（&lt;a href=&quot;stdtypes#str.splitlines&quot;&gt; &lt;code&gt;str.splitlines()&lt;/code&gt; &lt;/a&gt;などを使用して）段落に分割し、個別にラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="5440dd0e7910d37a11dd3863c46d6c4daaf6a686" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; fails, meaning that &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;ことを意味し、失敗した&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;呼び出されない場合、追加されたクリーンアップ関数はまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="11e9aa6a0b626486b9748ffe7b0fd4868dfa4de3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; succeeded, &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; will be run whether the test method succeeded or not.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; が&lt;/a&gt;成功した場合、テストメソッドが成功したかどうかにかかわらず、&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;が実行されます。</target>
        </trans-unit>
        <trans-unit id="2f754fa973712c4da8b8b5a253b88e6d78c5436a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; fails, meaning that &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;ことを意味し、失敗した&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; が&lt;/a&gt;呼び出されない場合、追加の任意のクリーンアップ機能がまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a56b554a11ada97428e4f6b7fc43139d2ce66dfd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; is set then it will be called after the call has been recorded, so if &lt;code&gt;side_effect&lt;/code&gt; raises an exception the call is still recorded.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; が&lt;/a&gt;設定されているコールが記録された後、それがあればそう、呼び出されます &lt;code&gt;side_effect&lt;/code&gt; は例外を発生させ、コールがまだ記録されています。</target>
        </trans-unit>
        <trans-unit id="0daae280f7ddf940c3563e2d3ab6d3e152cdba08" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; is used as a context manager, the value returned by the context manager is a dictionary where created mocks are keyed by name:</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; は、&lt;/a&gt;コンテキストマネージャとして使用される、コンテキストマネージャによって返される値は、作成したモックの名前をキーれる辞書です。</target>
        </trans-unit>
        <trans-unit id="7ea197c7086cd8e399adabc6fac58ed3712540b4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt;&lt;code&gt;origin_server&lt;/code&gt;&lt;/a&gt; is true, this string attribute is used to set the HTTP version of the response set to the client. It defaults to &lt;code&gt;&quot;1.0&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt; &lt;code&gt;origin_server&lt;/code&gt; が&lt;/a&gt; trueの場合、この文字列属性は、クライアントに設定され、応答のHTTPバージョンを設定するために使用されます。デフォルトは &lt;code&gt;&quot;1.0&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="273da1adde160734ed233b111094a596981762d8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt;&lt;code&gt;buffer_text&lt;/code&gt;&lt;/a&gt; is enabled, the number of bytes stored in the buffer. These bytes represent UTF-8 encoded text. This attribute has no meaningful interpretation when &lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt;&lt;code&gt;buffer_text&lt;/code&gt;&lt;/a&gt; is false.</source>
          <target state="translated">&lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt; &lt;code&gt;buffer_text&lt;/code&gt; &lt;/a&gt;が有効な場合、バッファに格納されているバイト数。これらのバイトは、UTF-8でエンコードされたテキストを表します。&lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt; &lt;code&gt;buffer_text&lt;/code&gt; &lt;/a&gt;がfalseの場合、この属性には意味のある解釈がありません。</target>
        </trans-unit>
        <trans-unit id="5969c407e8a5884e8705a2163a3f42bcc5ab4f5f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, any defects encountered will be raised as errors. If &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (the default), defects will be passed to the &lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt;&lt;code&gt;register_defect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、発生した欠陥はエラーとして発生します。&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;（デフォルト）の場合、欠陥は&lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt; &lt;code&gt;register_defect()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="fef1119ed2a7515183a2fa43ee13d86ddee0c639" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, lines starting with &lt;em&gt;&amp;ldquo;From &amp;ldquo;&lt;/em&gt; in the body are escaped by putting a &lt;code&gt;&amp;gt;&lt;/code&gt; in front of them. This parameter is used when the message is being serialized by a generator. Default: &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、本文の&lt;em&gt;「From」&lt;/em&gt;で始まる行は、その前に &lt;code&gt;&amp;gt;&lt;/code&gt; を付けることでエスケープされます。このパラメーターは、メッセージがジェネレーターによってシリアル化されるときに使用されます。デフォルト：&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3847911e0aa3faa42e57a768e6d9c9134161e5d0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not explicit defined, or if it is set to &lt;code&gt;None&lt;/code&gt;, then &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;may&lt;/em&gt; add an implicit &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Although not recommended, you can force &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; to create a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method with &lt;code&gt;unsafe_hash=True&lt;/code&gt;. This might be the case if your class is logically immutable but can nonetheless be mutated. This is a specialized use case and should be considered carefully.</source>
          <target state="translated">もし&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;明示的に定義されていないか、またはそれが設定されている場合は &lt;code&gt;None&lt;/code&gt; 、その後、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;も&lt;/em&gt;暗黙の追加&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを。お勧めしませんが、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;unsafe_hash=True&lt;/code&gt; を指定して__hash &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを作成するように強制できます。これは、クラスが論理的に不変であるにもかかわらず、変更できる場合に当てはまります。これは特殊な使用例であり、慎重に検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="e04c3d63f8f0b660bf5ea6424df45f9aabfeea2f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; is defined the value of the enum member will be passed to those methods:</source>
          <target state="translated">場合&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;定義される列挙体の値は、これらのメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="2a87d22d7e499f0ee61056877808ca82fe9ec45b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data is passed in, the result will also contain only &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. If &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; data is passed in, the result will contain only &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data.</source>
          <target state="translated">場合は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;データが渡され、結果ものみ含まれます&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;データを。場合は&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;データが渡され、その結果は含まれています&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;のデータを。</target>
        </trans-unit>
        <trans-unit id="aed3bfed2c45e20b453e673260527b4602b0fa6c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; is passed in, it is returned unchanged. Otherwise &lt;a href=&quot;#os.PathLike.__fspath__&quot;&gt;&lt;code&gt;__fspath__()&lt;/code&gt;&lt;/a&gt; is called and its value is returned as long as it is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. In all other cases, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">場合は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;渡され、それがそのまま返されます。それ以外の場合、&lt;a href=&quot;#os.PathLike.__fspath__&quot;&gt; &lt;code&gt;__fspath__()&lt;/code&gt; &lt;/a&gt;が呼び出され、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトである限り、その値が返されます。その他の場合はすべて、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="caf032867f63b3726a28645ba313d2c3e89d2da5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, or &lt;code&gt;r&lt;/code&gt; is used, all arguments are placed in &lt;code&gt;sys.argv[1:...]&lt;/code&gt; and &lt;code&gt;sys.argv[0]&lt;/code&gt; is set to &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'-c'&lt;/code&gt;, or &lt;code&gt;'-r'&lt;/code&gt;. No editor window is opened, even if that is the default set in the Options dialog.</source>
          <target state="translated">もし &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt; 、または &lt;code&gt;r&lt;/code&gt; 使用される、すべての引数が中に配置されている &lt;code&gt;sys.argv[1:...]&lt;/code&gt; と &lt;code&gt;sys.argv[0]&lt;/code&gt; に設定されている &lt;code&gt;''&lt;/code&gt; 、 &lt;code&gt;'-c'&lt;/code&gt; 、または &lt;code&gt;'-r'&lt;/code&gt; 。[オプション]ダイアログでデフォルトで設定されている場合でも、エディタウィンドウは開きません。</target>
        </trans-unit>
        <trans-unit id="21627f7daf7e31d0ed2c5b5ad287f10a5bba0e4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; is supplied at the command line, the ArgumentParser help will be printed:</source>
          <target state="translated">場合 &lt;code&gt;-h&lt;/code&gt; または &lt;code&gt;--help&lt;/code&gt; をコマンドラインで供給され、ArgumentParserのヘルプが印刷されます。</target>
        </trans-unit>
        <trans-unit id="c7a9c72b700c6c23304dc413d4be9c57f931cd8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; and &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; without sharing any other knowledge, then the appropriate shared operation is the one involving the built in &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;, and both &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt; s land there, so &lt;code&gt;a+b
== b+a&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; と &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; 他の知識を共有することなく、適切な共有の動作が組み込ま含むものである&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;、そして両方&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt;が複数のランドは、そう &lt;code&gt;a+b == b+a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b801947cfd092d953ccf6831d669c267f173f35e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; defines an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; which accepts &lt;code&gt;b&lt;/code&gt;, all is well.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; が &lt;code&gt;b&lt;/code&gt; を受け入れる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;を定義している場合、すべて順調です。</target>
        </trans-unit>
        <trans-unit id="ed23788452e71ff7756d04b76ef0e4ea7b1ec3ee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; falls back to the boilerplate code, and it were to return a value from &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;, we&amp;rsquo;d miss the possibility that &lt;code&gt;B&lt;/code&gt; defines a more intelligent &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt;, so the boilerplate should return &lt;a href=&quot;constants#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;. (Or &lt;code&gt;A&lt;/code&gt; may not implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; at all.)</source>
          <target state="translated">場合 &lt;code&gt;A&lt;/code&gt; はバック定型コードに落ち、それから値を返すようにした&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;、我々はその可能性欠場だろ &lt;code&gt;B&lt;/code&gt; は、よりインテリジェントな定義&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt;定型が返す必要がありますので、&lt;a href=&quot;constants#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;。（または、 &lt;code&gt;A&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;をまったく実装しない場合があります。）</target>
        </trans-unit>
        <trans-unit id="c99da1870c17ce7d3d3018a203be0bafc8dccfae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;B &amp;lt;: A&lt;/code&gt;, Python tries &lt;code&gt;B.__radd__&lt;/code&gt; before &lt;code&gt;A.__add__&lt;/code&gt;. This is ok, because it was implemented with knowledge of &lt;code&gt;A&lt;/code&gt;, so it can handle those instances before delegating to &lt;a href=&quot;#numbers.Complex&quot;&gt;&lt;code&gt;Complex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;B &amp;lt;: A&lt;/code&gt; 場合、Pythonは &lt;code&gt;B.__radd__&lt;/code&gt; 前にB .__ radd__を &lt;code&gt;A.__add__&lt;/code&gt; ます。 &lt;code&gt;A&lt;/code&gt; の知識で実装されているため、これは問題ありません。そのため、&lt;a href=&quot;#numbers.Complex&quot;&gt; &lt;code&gt;Complex&lt;/code&gt; &lt;/a&gt;に委任する前にそれらのインスタンスを処理できます。</target>
        </trans-unit>
        <trans-unit id="c0b502541a012336c972c1fd26bc2444183bb6c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, follow &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, supporting non-ASCII characters in headers by encoding them as &amp;ldquo;encoded words&amp;rdquo;. If &lt;code&gt;True&lt;/code&gt;, follow &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt; and use &lt;code&gt;utf-8&lt;/code&gt; encoding for headers. Messages formatted in this way may be passed to SMTP servers that support the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; の場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;に従い、ヘッダーの非ASCII文字を「エンコードされた単語」としてエンコードすることでサポートします。 &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;に従い、ヘッダーに &lt;code&gt;utf-8&lt;/code&gt; エンコーディングを使用します。この方法でフォーマットされたメッセージは、 &lt;code&gt;SMTPUTF8&lt;/code&gt; 拡張（&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;）をサポートするSMTPサーバーに渡される場合があります。</target>
        </trans-unit>
        <trans-unit id="f0aa57a54bd4c37d36f82fb559a78314f58cdaa4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SMTPUTF8&lt;/code&gt; is included in &lt;em&gt;mail_options&lt;/em&gt;, and the server supports it, &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; may contain non-ASCII characters.</source>
          <target state="translated">場合 &lt;code&gt;SMTPUTF8&lt;/code&gt; が含まれ&lt;em&gt;mail_options&lt;/em&gt;、サーバーがサポートしている、&lt;em&gt;from_addr&lt;/em&gt;と&lt;em&gt;to_addrsは、&lt;/em&gt;非ASCII文字が含まれていてもよいです。</target>
        </trans-unit>
        <trans-unit id="b5dc45558ebcea6d610bad35d84ea39326606ff5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TOS&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object it is left as is. Otherwise, implements &lt;code&gt;TOS = iter(TOS)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;TOS&lt;/code&gt; がある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;ジェネレータイテレータ&lt;/a&gt;や&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;対象であるとして、それが残されています。それ以外の場合は、 &lt;code&gt;TOS = iter(TOS)&lt;/code&gt; 実装します。</target>
        </trans-unit>
        <trans-unit id="711424b518e686db6f3128ec091800680cf2d7e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, tokens will only be split in whitespaces. This is useful, for example, for parsing command lines with &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;, getting tokens in a similar way to shell arguments. When used in combination with &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt;, tokens will be split on whitespace in addition to those characters.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; の場合、トークンは空白でのみ分割されます。これは、たとえば、&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;を使用してコマンドラインを解析し、シェル引数と同様の方法でトークンを取得する場合に役立ちます。&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​すると、トークンはこれらの文字に加えて空白で分割されます。</target>
        </trans-unit>
        <trans-unit id="17f7ba8d172e5c3d522143611d4e644d4d525629" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WIFEXITED(status)&lt;/code&gt; is true, return the integer parameter to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;exit(2)&lt;/a&gt;&lt;/em&gt; system call. Otherwise, the return value is meaningless.</source>
          <target state="translated">場合 &lt;code&gt;WIFEXITED(status)&lt;/code&gt; 真である、の整数パラメータを戻す&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;出口（2）&lt;/a&gt;&lt;/em&gt;システムコール。それ以外の場合、戻り値は無意味です。</target>
        </trans-unit>
        <trans-unit id="eab713d9f34725181e53e9763d51930268ca8cbd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;arcname&lt;/code&gt; (or &lt;code&gt;filename&lt;/code&gt;, if &lt;code&gt;arcname&lt;/code&gt; is not given) contains a null byte, the name of the file in the archive will be truncated at the null byte.</source>
          <target state="translated">場合 &lt;code&gt;arcname&lt;/code&gt; （または &lt;code&gt;filename&lt;/code&gt; 場合、 &lt;code&gt;arcname&lt;/code&gt; が与えられていない）はヌルバイトが含まれている、アーカイブ内のファイルの名前には、NULLバイトで切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="fe6d01c5807b14dd92c652de9261e96f2f0d4073" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is an instance of &lt;a href=&quot;#multiprocessing.BufferTooShort&quot;&gt;&lt;code&gt;BufferTooShort&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;e.args[0]&lt;/code&gt; will give the message as a byte string.</source>
          <target state="translated">場合 &lt;code&gt;e&lt;/code&gt; のインスタンスである&lt;a href=&quot;#multiprocessing.BufferTooShort&quot;&gt; &lt;code&gt;BufferTooShort&lt;/code&gt; &lt;/a&gt;次いで &lt;code&gt;e.args[0]&lt;/code&gt; バイト列としてメッセージを与えます。</target>
        </trans-unit>
        <trans-unit id="700a5fc739f38418d59d1b88b3aa6552134ba97a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are both true, by default &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; will generate a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method for you. If &lt;code&gt;eq&lt;/code&gt; is true and &lt;code&gt;frozen&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;None&lt;/code&gt;, marking it unhashable (which it is, since it is mutable). If &lt;code&gt;eq&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be left untouched meaning the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method of the superclass will be used (if the superclass is &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, this means it will fall back to id-based hashing).</source>
          <target state="translated">場合は &lt;code&gt;eq&lt;/code&gt; と &lt;code&gt;frozen&lt;/code&gt; 、デフォルトでは、真の両方である&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;が生成されます&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;あなたのための方法を。場合は &lt;code&gt;eq&lt;/code&gt; 真とされ &lt;code&gt;frozen&lt;/code&gt; 偽、ある&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;に設定されます &lt;code&gt;None&lt;/code&gt; （これは変更可能であることから、それは、ある）非ハッシュそれをマーク、。 &lt;code&gt;eq&lt;/code&gt; がfalseの場合、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;はそのまま残り、スーパークラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドが使用されます（スーパークラスが&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; の&lt;/a&gt;場合、IDベースのハッシュにフォールバックします）。</target>
        </trans-unit>
        <trans-unit id="0b14e032175d28c1ba6eb0b6e2412729c87fd343" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filename.py&lt;/code&gt; is specified its contents are tokenized to stdout. Otherwise, tokenization is performed on stdin.</source>
          <target state="translated">&lt;code&gt;filename.py&lt;/code&gt; が指定されている場合、その内容はトークン化されてstdoutになります。それ以外の場合、トークン化はstdinで実行されます。</target>
        </trans-unit>
        <trans-unit id="b78ebbf676987b9b08d03411af825fbaec6187a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;gather()&lt;/code&gt; is &lt;em&gt;cancelled&lt;/em&gt;, all submitted awaitables (that have not completed yet) are also &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">場合は &lt;code&gt;gather()&lt;/code&gt; された&lt;em&gt;キャンセル&lt;/em&gt;、（まだ完了していない）すべての提出awaitablesもされている&lt;em&gt;キャンセル&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="98e2ca390d09cb4c5d93c787d1a1e77d3b50a6b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;load_tests&lt;/code&gt; exists then discovery does &lt;em&gt;not&lt;/em&gt; recurse into the package, &lt;code&gt;load_tests&lt;/code&gt; is responsible for loading all tests in the package.</source>
          <target state="translated">&lt;code&gt;load_tests&lt;/code&gt; が存在する場合、検出はパッケージに再帰しませ&lt;em&gt;ん&lt;/em&gt; &lt;code&gt;load_tests&lt;/code&gt; は、パッケージ内のすべてのテストをロードします。</target>
        </trans-unit>
        <trans-unit id="9a58c1405d0e16b64227f1566491186e0f5dddcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;module&lt;/code&gt; is not supplied, and Enum cannot determine what it is, the new Enum members will not be unpicklable; to keep errors closer to the source, pickling will be disabled.</source>
          <target state="translated">場合は &lt;code&gt;module&lt;/code&gt; 提供されていない、と列挙型はそれが何であるかを判断することはできません、新しい列挙型メンバーはunpickle不可能ではありません。エラーをソースに近づけるために、酸洗いは無効になります。</target>
        </trans-unit>
        <trans-unit id="ab3736d9d355c250769a78d1fa815bd9cfa2ab47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newline=''&lt;/code&gt; is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use &lt;code&gt;\r\n&lt;/code&gt; linendings on write an extra &lt;code&gt;\r&lt;/code&gt; will be added. It should always be safe to specify &lt;code&gt;newline=''&lt;/code&gt;, since the csv module does its own (&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal&lt;/a&gt;) newline handling.</source>
          <target state="translated">&lt;code&gt;newline=''&lt;/code&gt; が指定されていない場合、引用フィールド内に埋め込まれた改行は正しく解釈されず、 &lt;code&gt;\r\n&lt;/code&gt; ライニングを使用するプラットフォームでは、追加の &lt;code&gt;\r&lt;/code&gt; が追加されます。csvモジュールは独自の（&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル&lt;/a&gt;）改行処理を行うため、常に &lt;code&gt;newline=''&lt;/code&gt; を指定しても安全です。</target>
        </trans-unit>
        <trans-unit id="abd59bc323474e8d28c3b6cf30956ad3087d1391" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.chflags in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the flags of a symbolic link. (&lt;code&gt;os.chflags&lt;/code&gt; is not available on all platforms.)</source>
          <target state="translated">&lt;code&gt;os.chflags in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクのフラグを変更できます。（ &lt;code&gt;os.chflags&lt;/code&gt; はすべてのプラットフォームで使用できるわけではありません。）</target>
        </trans-unit>
        <trans-unit id="8e10e24faf09ce3b9d96dd7e061eb030aca8d0b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.chmod in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the permission bits of a symbolic link.</source>
          <target state="translated">&lt;code&gt;os.chmod in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクの許可ビットを変更できます。</target>
        </trans-unit>
        <trans-unit id="33018c8d997e147843c0242b5f72f3cc52abfcee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.utime in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the last access and modification times of a symbolic link.</source>
          <target state="translated">&lt;code&gt;os.utime in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクの最終アクセス時刻と変更時刻を変更できます。</target>
        </trans-unit>
        <trans-unit id="a05957a485610f250e41b862c6cf8205d2ef4e95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proxy&lt;/code&gt; is a proxy whose referent is &lt;code&gt;obj&lt;/code&gt; then the expression</source>
          <target state="translated">場合は &lt;code&gt;proxy&lt;/code&gt; その参照先であるプロキシである &lt;code&gt;obj&lt;/code&gt; その式</target>
        </trans-unit>
        <trans-unit id="4198a79dad12cd8b876f2f71ca5d8af1485c0d0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;related&lt;/code&gt; is not included in &lt;em&gt;preferencelist&lt;/em&gt;, consider the root part (or subpart of the root part) of any related encountered as a candidate if the (sub-)part matches a preference.</source>
          <target state="translated">場合は &lt;code&gt;related&lt;/code&gt; 含まれていない&lt;em&gt;preferencelist&lt;/em&gt;、任意の関連（サブ）の部分は好みと一致した場合に候補として遭遇したの根元部分（またはルート一部のサブパートを）検討してください。</target>
        </trans-unit>
        <trans-unit id="876e1c7c8abfc9cc30ff4722fb3870e77a933987" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;respect_handler_level&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, a handler&amp;rsquo;s level is respected (compared with the level for the message) when deciding whether to pass messages to that handler; otherwise, the behaviour is as in previous Python versions - to always pass each message to each handler.</source>
          <target state="translated">場合 &lt;code&gt;respect_handler_level&lt;/code&gt; がある &lt;code&gt;True&lt;/code&gt; 、ハンドラのレベルは、そのハンドラにメッセージを渡すかどうかを決定する（メッセージのレベルと比較して）、尊敬されています。それ以外の場合の動作は、以前のPythonバージョンと同じです。つまり、常に各メッセージを各ハンドラーに渡します。</target>
        </trans-unit>
        <trans-unit id="b8ba649cc272ffd32fbf67fb183157eb6f6df18c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self.tzinfo&lt;/code&gt; is &lt;em&gt;tz&lt;/em&gt;, &lt;code&gt;self.astimezone(tz)&lt;/code&gt; is equal to &lt;em&gt;self&lt;/em&gt;: no adjustment of date or time data is performed. Else the result is local time in the timezone &lt;em&gt;tz&lt;/em&gt;, representing the same UTC time as &lt;em&gt;self&lt;/em&gt;: after &lt;code&gt;astz = dt.astimezone(tz)&lt;/code&gt;, &lt;code&gt;astz - astz.utcoffset()&lt;/code&gt; will have the same date and time data as &lt;code&gt;dt - dt.utcoffset()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self.tzinfo&lt;/code&gt; が&lt;em&gt;tzの&lt;/em&gt;場合、 &lt;code&gt;self.astimezone(tz)&lt;/code&gt; は&lt;em&gt;self&lt;/em&gt;と同じです。日付または時刻データの調整は実行されません。そうでなければ、結果はタイムゾーンの現地時間である&lt;em&gt;TZ&lt;/em&gt;と同じUTC時刻表現、&lt;em&gt;自己を&lt;/em&gt;：後 &lt;code&gt;astz = dt.astimezone(tz)&lt;/code&gt; 、 &lt;code&gt;astz - astz.utcoffset()&lt;/code&gt; と同じ日付と時刻データを持つことになります &lt;code&gt;dt - dt.utcoffset()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="367bdb474eb8abb8f4c9cfe3276f05ae7bdd8611" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setUpModule()&lt;/code&gt; fails, meaning that &lt;code&gt;tearDownModule()&lt;/code&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合 &lt;code&gt;setUpModule()&lt;/code&gt; ことを意味し、失敗した &lt;code&gt;tearDownModule()&lt;/code&gt; が呼び出されない場合、追加の任意のクリーンアップ機能がまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5df6e6854ff33d1db70399b9e7421342b26d1f49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;side_effect&lt;/code&gt; is a function then whatever that function returns is what calls to the mock return. The &lt;code&gt;side_effect&lt;/code&gt; function is called with the same arguments as the mock. This allows you to vary the return value of the call dynamically, based on the input:</source>
          <target state="translated">場合 &lt;code&gt;side_effect&lt;/code&gt; は機能が、その後は何でもその関数の戻りはモックリターンに呼んで。 &lt;code&gt;side_effect&lt;/code&gt; の機能はモックと同じ引数で呼び出されます。これにより、入力に基づいて、呼び出しの戻り値を動的に変化させることができます。</target>
        </trans-unit>
        <trans-unit id="087e65b3a7a454d1f380ea833e17e5e2da02afee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;signal.SIGINT&lt;/code&gt; isn&amp;rsquo;t handled by Python (it was set to &lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt;), this function does nothing.</source>
          <target state="translated">&lt;code&gt;signal.SIGINT&lt;/code&gt; がPythonで処理されない場合（&lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt; &lt;code&gt;signal.SIG_DFL&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt; &lt;code&gt;signal.SIG_IGN&lt;/code&gt; &lt;/a&gt;に設定されている場合）、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="f66a0119d36ff434bd176a0f14f955171a2dbfee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;something()&lt;/code&gt; is cancelled by other means (i.e. from within itself) that would also cancel &lt;code&gt;shield()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;something()&lt;/code&gt; が他の方法で（つまり、それ自体から）キャンセルされた場合は、 &lt;code&gt;shield()&lt;/code&gt; もキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="8c1aae3855096a38e20d34c3153d0204c6e5add8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sys.stdin&lt;/code&gt; is used more than once, the second and further use will return no lines, except perhaps for interactive use, or if it has been explicitly reset (e.g. using &lt;code&gt;sys.stdin.seek(0)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sys.stdin&lt;/code&gt; が複数回使用された場合、おそらくインタラクティブな使用、または明示的にリセットされた場合（例： &lt;code&gt;sys.stdin.seek(0)&lt;/code&gt; を使用）を除いて、2回目以降の使用では行は返されません。</target>
        </trans-unit>
        <trans-unit id="a1540606a988a3eee5d0cd32d98e93f7bdb7662c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sys&lt;/code&gt; is reset by user code, such as with &lt;code&gt;importlib.reload(sys)&lt;/code&gt;, IDLE&amp;rsquo;s changes are lost and input from the keyboard and output to the screen will not work correctly.</source>
          <target state="translated">場合 &lt;code&gt;sys&lt;/code&gt; が、このような場合と同様に、ユーザーコードによってリセットされ &lt;code&gt;importlib.reload(sys)&lt;/code&gt; 、IDLEの変更が失われ、キーボードや出力から画面への入力は正常に動作しません。</target>
        </trans-unit>
        <trans-unit id="8ef4296b0d6745bb7998092ae95ff303a8c4712b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tempdir&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; (the default) at any call to any of the above functions except &lt;a href=&quot;#tempfile.gettempprefix&quot;&gt;&lt;code&gt;gettempprefix()&lt;/code&gt;&lt;/a&gt; it is initialized following the algorithm described in &lt;a href=&quot;#tempfile.gettempdir&quot;&gt;&lt;code&gt;gettempdir()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;tempdir&lt;/code&gt; ありません &lt;code&gt;None&lt;/code&gt; を除いて、上記の機能のいずれかへの呼び出しで（デフォルト）&lt;a href=&quot;#tempfile.gettempprefix&quot;&gt; &lt;code&gt;gettempprefix()&lt;/code&gt; &lt;/a&gt;それはで説明したアルゴリズムに従って初期化されます&lt;a href=&quot;#tempfile.gettempdir&quot;&gt; &lt;code&gt;gettempdir()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ce6afbd1542483776b1f19987aee4fdaea2af84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout &amp;gt; 0&lt;/code&gt;, this specifies the maximum wait time, in seconds. If &lt;code&gt;timeout &amp;lt;= 0&lt;/code&gt;, the call won&amp;rsquo;t block, and will report the currently ready file objects. If &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the call will block until a monitored file object becomes ready.</source>
          <target state="translated">&lt;code&gt;timeout &amp;gt; 0&lt;/code&gt; 場合、これは最大待機時間を秒単位で指定します。場合は &lt;code&gt;timeout &amp;lt;= 0&lt;/code&gt; 、呼び出しはブロックしませんし、現在準備ができてファイルオブジェクトを報告します。&lt;em&gt;timeout&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、監視されているファイルオブジェクトの準備ができるまで、呼び出しはブロックされます。</target>
        </trans-unit>
        <trans-unit id="b883d86f843b47e0cc5cb4e22ef7491a75061003" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type_comments=True&lt;/code&gt; is given, the parser is modified to check and return type comments as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. This is equivalent to adding &lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt; to the flags passed to &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;. This will report syntax errors for misplaced type comments. Without this flag, type comments will be ignored, and the &lt;code&gt;type_comment&lt;/code&gt; field on selected AST nodes will always be &lt;code&gt;None&lt;/code&gt;. In addition, the locations of &lt;code&gt;# type:
ignore&lt;/code&gt; comments will be returned as the &lt;code&gt;type_ignores&lt;/code&gt; attribute of &lt;code&gt;Module&lt;/code&gt; (otherwise it is always an empty list).</source>
          <target state="translated">場合 &lt;code&gt;type_comments=True&lt;/code&gt; 与えられ、パーサがで指定されたコメントを確認し、戻り値の型に変更され&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;及び&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;。これは&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; に&lt;/a&gt;渡されるフラグに &lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt; を追加することと同じです。これにより、型コメントの配置ミスの構文エラーが報告されます。このフラグがない場合、タイプコメントは無視され、選択したASTノードの &lt;code&gt;type_comment&lt;/code&gt; フィールドは常に &lt;code&gt;None&lt;/code&gt; になります。さらに、 &lt;code&gt;# type: ignore&lt;/code&gt; コメントの場所は、 &lt;code&gt;Module&lt;/code&gt; の &lt;code&gt;type_ignores&lt;/code&gt; 属性として返されます（それ以外の場合は常に空のリストです）。</target>
        </trans-unit>
        <trans-unit id="a0593491fc7f673a2fbc8bcde73d064bd5a237d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tzname()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;%Z&lt;/code&gt; is replaced by an empty string. Otherwise &lt;code&gt;%Z&lt;/code&gt; is replaced by the returned value, which must be a string.</source>
          <target state="translated">&lt;code&gt;tzname()&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; を返す場合、 &lt;code&gt;%Z&lt;/code&gt; は空の文字列に置き換えられます。それ以外の場合、 &lt;code&gt;%Z&lt;/code&gt; は戻り値に置き換えられます。戻り値は文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="2650dd8391d760c4b3dcdc53f8ee4bce8296ecf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a negative rational number define &lt;code&gt;hash(x)&lt;/code&gt; as &lt;code&gt;-hash(-x)&lt;/code&gt;. If the resulting hash is &lt;code&gt;-1&lt;/code&gt;, replace it with &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;x = m / n&lt;/code&gt; である負の有理数定義 &lt;code&gt;hash(x)&lt;/code&gt; として &lt;code&gt;-hash(-x)&lt;/code&gt; 。結果のハッシュが &lt;code&gt;-1&lt;/code&gt; の場合、それを &lt;code&gt;-2&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="93635faa94af4f4c677484e54d0cfef7e6922367" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a nonnegative rational number and &lt;code&gt;n&lt;/code&gt; is divisible by &lt;code&gt;P&lt;/code&gt; (but &lt;code&gt;m&lt;/code&gt; is not) then &lt;code&gt;n&lt;/code&gt; has no inverse modulo &lt;code&gt;P&lt;/code&gt; and the rule above doesn&amp;rsquo;t apply; in this case define &lt;code&gt;hash(x)&lt;/code&gt; to be the constant value &lt;code&gt;sys.hash_info.inf&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;x = m / n&lt;/code&gt; 非負の有理数であり、 &lt;code&gt;n&lt;/code&gt; で割り切れる &lt;code&gt;P&lt;/code&gt; （ただし、 &lt;code&gt;m&lt;/code&gt; はない）、次いで &lt;code&gt;n&lt;/code&gt; 全く逆モジュロ持たない &lt;code&gt;P&lt;/code&gt; と適用されない上記のルールを、この場合、 &lt;code&gt;hash(x)&lt;/code&gt; を定数値 &lt;code&gt;sys.hash_info.inf&lt;/code&gt; として定義します。</target>
        </trans-unit>
        <trans-unit id="575b723cab08b731a281088430618a5e6637507d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a nonnegative rational number and &lt;code&gt;n&lt;/code&gt; is not divisible by &lt;code&gt;P&lt;/code&gt;, define &lt;code&gt;hash(x)&lt;/code&gt; as &lt;code&gt;m * invmod(n, P) % P&lt;/code&gt;, where &lt;code&gt;invmod(n,
P)&lt;/code&gt; gives the inverse of &lt;code&gt;n&lt;/code&gt; modulo &lt;code&gt;P&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;x = m / n&lt;/code&gt; 非負の有理数であり、 &lt;code&gt;n&lt;/code&gt; で割り切れない &lt;code&gt;P&lt;/code&gt; 、定義 &lt;code&gt;hash(x)&lt;/code&gt; ように &lt;code&gt;m * invmod(n, P) % P&lt;/code&gt; 、 &lt;code&gt;invmod(n, P)&lt;/code&gt; の逆与える &lt;code&gt;n&lt;/code&gt; モジュロ &lt;code&gt;P&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="00f7d3383e6e96fe7eb1f9df5004df74f9efec98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;PIPE&lt;/em&gt; is passed to &lt;em&gt;stdin&lt;/em&gt; argument, the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt;&lt;code&gt;Process.stdin&lt;/code&gt;&lt;/a&gt; attribute will point to a &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;em&gt;PIPE&lt;/em&gt;が&lt;em&gt;stdin&lt;/em&gt;引数に渡される場合、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt; &lt;code&gt;Process.stdin&lt;/code&gt; &lt;/a&gt;属性は&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;インスタンスを指します。</target>
        </trans-unit>
        <trans-unit id="38a0b86cb262bdd72cf16c86faa970fbee2eca97" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;PIPE&lt;/em&gt; is passed to &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; arguments, the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt;&lt;code&gt;Process.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt;&lt;code&gt;Process.stderr&lt;/code&gt;&lt;/a&gt; attributes will point to &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;em&gt;PIPE&lt;/em&gt;が&lt;em&gt;stdout&lt;/em&gt;または&lt;em&gt;stderr&lt;/em&gt;引数に渡される場合、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt; &lt;code&gt;Process.stdout&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt; &lt;code&gt;Process.stderr&lt;/code&gt; &lt;/a&gt;属性は&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;インスタンスを指します。</target>
        </trans-unit>
        <trans-unit id="a3d56b8626e52a3b745f55fc2379e816f304457a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are of different lengths, or if an error occurs, a timing attack could theoretically reveal information about the types and lengths of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;&amp;mdash;but not their values.</source>
          <target state="translated">場合及び&lt;em&gt;Bは、&lt;/em&gt;異なる長さのものであるか、またはエラーが発生した場合、タイミング攻撃は理論的のタイプおよび長さに関する情報を明らかにする可能性があり、および&lt;em&gt;bは&lt;/em&gt;その値がないブタ。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc5c1185931e9b5fe08eb862e8faf706f6f24540" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; is an int, it is used directly.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;がintの場合は、直接使用されます。</target>
        </trans-unit>
        <trans-unit id="08098ecc02f15e5298805376eb97d21770273b65" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the current system time is used. If randomness sources are provided by the operating system, they are used instead of the system time (see the &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; function for details on availability).</source>
          <target state="translated">場合は省略していないか、され &lt;code&gt;None&lt;/code&gt; 、現在のシステム時刻が使用されています。ランダムソースがオペレーティングシステムによって提供されている場合、それらはシステム時刻の代わりに使用されます（可用性の詳細については、&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;関数を参照してください）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ddd2d43954115612f47582f7f40c2da1ce1c45e3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the node, &lt;em&gt;v2&lt;/em&gt; is the reference, and &lt;em&gt;v3&lt;/em&gt; should be set to 0.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt; 、次いで&lt;em&gt;V1は&lt;/em&gt;ノードであり、&lt;em&gt;V2は&lt;/em&gt;参考であり、&lt;em&gt;V3は&lt;/em&gt; 0に設定されるべきです。</target>
        </trans-unit>
        <trans-unit id="8daf1756c4685b74aa3a32fb2dad0e27162099fa" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the server type, &lt;em&gt;v2&lt;/em&gt; is the port identifier, and &lt;em&gt;v3&lt;/em&gt; should be 0.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt; 、その後、&lt;em&gt;v1は&lt;/em&gt;サーバタイプで、&lt;em&gt;v2は&lt;/em&gt;ポート識別子であり、&lt;em&gt;v3は&lt;/em&gt; 0でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5ee8f55dc5cb9c1fddf1d3f67dd30328327823b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the server type, &lt;em&gt;v2&lt;/em&gt; is the lower port number, and &lt;em&gt;v3&lt;/em&gt; is the upper port number.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt; 、次いで&lt;em&gt;V1は&lt;/em&gt;サーバ型であり、&lt;em&gt;V2は、&lt;/em&gt;下部ポート番号であり、&lt;em&gt;v3は&lt;/em&gt;、上側ポート番号です。</target>
        </trans-unit>
        <trans-unit id="e3c769a1fb511af595c339c328e4e17c4c3ff2b6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;aliased&lt;/em&gt; is true, the function will use aliases for various platforms that report system names which differ from their common names, for example SunOS will be reported as Solaris. The &lt;a href=&quot;#platform.system_alias&quot;&gt;&lt;code&gt;system_alias()&lt;/code&gt;&lt;/a&gt; function is used to implement this.</source>
          <target state="translated">場合は&lt;em&gt;エイリアスが&lt;/em&gt; trueの場合、この関数は、共通の名前と異なるレポートシステム名は、例えばSunOSのは、Solarisとして報告されることを様々なプラットフォーム用のエイリアスを使用します。&lt;a href=&quot;#platform.system_alias&quot;&gt; &lt;code&gt;system_alias()&lt;/code&gt; &lt;/a&gt;関数は、これを実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="35db95e9a28719ea3058976c910d71b26ef3098a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;all_frames&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, all frames of the traceback are checked. If &lt;em&gt;all_frames&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, only the most recent frame is checked.</source>
          <target state="translated">&lt;em&gt;all_frames&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、トレースバックのすべてのフレームがチェックされます。&lt;em&gt;all_frames&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、最新のフレームのみがチェックされます。</target>
        </trans-unit>
        <trans-unit id="3e12368612ae3dc2365f369a9caafd4788de7974" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allowZip64&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) zipfile will create ZIP files that use the ZIP64 extensions when the zipfile is larger than 4 GiB. If it is &lt;code&gt;false&lt;/code&gt;&lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; will raise an exception when the ZIP file would require ZIP64 extensions.</source>
          <target state="translated">場合&lt;em&gt;allowZip64が&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）ZIPファイルは、ZIPファイルが4ジブよりも大きい場合にZIP64拡張を使用ZIPファイルを作成します。 &lt;code&gt;false&lt;/code&gt; の場合、&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;は、ZIPファイルがZIP64拡張を必要とする場合に例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="eb1877b149e4a559e04aa18e7cbd9b76903ad1d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allow_nan&lt;/em&gt; is false (default: &lt;code&gt;True&lt;/code&gt;), then it will be a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to serialize out of range &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values (&lt;code&gt;nan&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;) in strict compliance of the JSON specification. If &lt;em&gt;allow_nan&lt;/em&gt; is true, their JavaScript equivalents (&lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;) will be used.</source>
          <target state="translated">場合&lt;em&gt;allow_nanが&lt;/em&gt; false（デフォルト：ある &lt;code&gt;True&lt;/code&gt; ）、次のようになります&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;範囲の外シリアライズする&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;値（ &lt;code&gt;nan&lt;/code&gt; 、 &lt;code&gt;inf&lt;/code&gt; 、 &lt;code&gt;-inf&lt;/code&gt; JSON仕様を厳密に遵守して）。場合&lt;em&gt;allow_nanが&lt;/em&gt;真である、彼らのJavaScriptの同等物（ &lt;code&gt;NaN&lt;/code&gt; で、 &lt;code&gt;Infinity&lt;/code&gt; 、 &lt;code&gt;-Infinity&lt;/code&gt; は）使用されます。</target>
        </trans-unit>
        <trans-unit id="365b8c9a025c7c15e2aa49096f5708db96335579" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allow_nan&lt;/em&gt; is true (the default), then &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, and &lt;code&gt;-Infinity&lt;/code&gt; will be encoded as such. This behavior is not JSON specification compliant, but is consistent with most JavaScript based encoders and decoders. Otherwise, it will be a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to encode such floats.</source>
          <target state="translated">場合&lt;em&gt;allow_nanが&lt;/em&gt; true（デフォルト）であり、その後 &lt;code&gt;NaN&lt;/code&gt; 、 &lt;code&gt;Infinity&lt;/code&gt; 、および &lt;code&gt;-Infinity&lt;/code&gt; は、このようなとしてエンコードされます。この動作はJSON仕様に準拠していませんが、ほとんどのJavaScriptベースのエンコーダーおよびデコーダーと一致しています。それ以外の場合、そのような浮動小数点をエンコードするのは&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="c5a8dca769532cade2fe55bfaac93ebef45b3887" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;altinstall&lt;/em&gt; is set, then &lt;code&gt;pipX&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be installed.</source>
          <target state="translated">場合&lt;em&gt;altinstallが&lt;/em&gt;設定され、その後、 &lt;code&gt;pipX&lt;/code&gt; はなり&lt;em&gt;ません&lt;/em&gt;インストールされています。</target>
        </trans-unit>
        <trans-unit id="50026840e798123dd4e7c9c3c6b090021e307025" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is false then the awaits must be sequential. There can be extra calls before or after the specified awaits.</source>
          <target state="translated">&lt;em&gt;any_order&lt;/em&gt;がfalseの場合、&lt;em&gt;待機&lt;/em&gt;は順次でなければなりません。指定された待機の前または後に追加の呼び出しがある場合があります。</target>
        </trans-unit>
        <trans-unit id="83074f9b97aea52bc40947133bf7966023c0dfb4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is false then the calls must be sequential. There can be extra calls before or after the specified calls.</source>
          <target state="translated">場合&lt;em&gt;any_orderが&lt;/em&gt; falseで、その後の呼び出しが連続している必要があります。指定された呼び出しの前または後に余分な呼び出しがある場合があります。</target>
        </trans-unit>
        <trans-unit id="00f36f468d7fc72d5086c39c28c3ab3335e0b213" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is true then the awaits can be in any order, but they must all appear in &lt;a href=&quot;#unittest.mock.AsyncMock.await_args_list&quot;&gt;&lt;code&gt;await_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;any_order&lt;/em&gt;がtrueの場合、&lt;em&gt;待機&lt;/em&gt;は任意の順序にすることができますが、それらはすべて&lt;a href=&quot;#unittest.mock.AsyncMock.await_args_list&quot;&gt; &lt;code&gt;await_args_list&lt;/code&gt; に含ま&lt;/a&gt;れている必要があります。</target>
        </trans-unit>
        <trans-unit id="77ac2e901cc5aeaa722f2e4e6b975f2f2972f688" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is true then the calls can be in any order, but they must all appear in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;any_orderが&lt;/em&gt;真である、その後の呼び出しは、任意の順序で指定できますが、それらはすべてに表示されなければなりません&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b896efed823ebecf1bef68285349fa5d05fe09f8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;arcname&lt;/em&gt; is specified, it is used as the name within the archive. If &lt;em&gt;arcname&lt;/em&gt; is not specified, the name will be the same as &lt;em&gt;filename&lt;/em&gt;, but with any drive letter and leading path separators removed.</source>
          <target state="translated">場合&lt;em&gt;arcnameが&lt;/em&gt;指定され、それがアーカイブ内の名前として使用されます。&lt;em&gt;arcname&lt;/em&gt;が指定されていない場合、名前は&lt;em&gt;filename&lt;/em&gt;と同じになり&lt;em&gt;ます&lt;/em&gt;が、ドライブ文字と先行パスの区切り文字は削除されます。</target>
        </trans-unit>
        <trans-unit id="bb3e312374b1b5d8dccea78b576f639dc980f7ee" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;atTime&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a &lt;code&gt;datetime.time&lt;/code&gt; instance which specifies the time of day when rollover occurs, for the cases where rollover is set to happen &amp;ldquo;at midnight&amp;rdquo; or &amp;ldquo;on a particular weekday&amp;rdquo;. Note that in these cases, the &lt;em&gt;atTime&lt;/em&gt; value is effectively used to compute the &lt;em&gt;initial&lt;/em&gt; rollover, and subsequent rollovers would be calculated via the normal interval calculation.</source>
          <target state="translated">場合&lt;em&gt;atTimeが&lt;/em&gt;ないではありません &lt;code&gt;None&lt;/code&gt; 、それがなければなりません &lt;code&gt;datetime.time&lt;/code&gt; ロールオーバーが「深夜」が起こるか「特定の平日」に設定されている場合のために、ロールオーバーが発生した時刻を指定するインスタンス。これらの場合、&lt;em&gt;atTime&lt;/em&gt;値は&lt;em&gt;初期&lt;/em&gt;ロールオーバーの計算に効果的に使用され、その後のロールオーバーは通常の間隔計算によって計算されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="64ed490d101bfcd7c524cd7f6470fd6dd92855bd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;authkey&lt;/em&gt; is given and not None, it should be a byte string and will be used as the secret key for an HMAC-based authentication challenge. No authentication is done if &lt;em&gt;authkey&lt;/em&gt; is None. &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised if authentication fails. See &lt;a href=&quot;#multiprocessing-auth-keys&quot;&gt;Authentication keys&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;てAuthKeyは&lt;/em&gt;どれも与えられないとされていない、それはバイト文字列であるべきで、HMACベースの認証チャレンジのための秘密鍵として使用されます。&lt;em&gt;authkey&lt;/em&gt;がNoneの場合、認証は行われません。&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;が失敗した場合、AuthenticationErrorが発生します。&lt;a href=&quot;#multiprocessing-auth-keys&quot;&gt;認証キーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="59231b8d6544c6fca57984e1be4fe078812fe3b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;aw&lt;/em&gt; is a coroutine it is automatically scheduled as a Task.</source>
          <target state="translated">場合&lt;em&gt;AWは&lt;/em&gt;コルーチンでは、自動的にタスクとして予定されています。</target>
        </trans-unit>
        <trans-unit id="846999a5b8612ebabe5165c0323a01a132f354c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;backupCount&lt;/em&gt; is nonzero, at most &lt;em&gt;backupCount&lt;/em&gt; files will be kept, and if more would be created when rollover occurs, the oldest one is deleted. The deletion logic uses the interval to determine which files to delete, so changing the interval may leave old files lying around.</source>
          <target state="translated">&lt;em&gt;backupCount&lt;/em&gt;がゼロ以外の場合、最大で&lt;em&gt;backupCount&lt;/em&gt;ファイルが保持され、ロールオーバーが発生したときにさらにファイルが作成される場合は、最も&lt;em&gt;古い&lt;/em&gt;ファイルが削除されます。削除ロジックは間隔を使用して削除するファイルを決定するため、間隔を変更すると古いファイルが残ったままになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="254adf80a9b6b968549efbd28f181bb6475f5a82" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;blocking&lt;/em&gt; is false executes the scheduled events due to expire soonest (if any) and then return the deadline of the next scheduled call in the scheduler (if any).</source>
          <target state="translated">&lt;em&gt;ブロッキング&lt;/em&gt;がfalseの場合、期限が最も近いためにスケジュールされたイベントを実行し（存在する場合）、次にスケジューラでスケジュールされている次の呼び出しの期限（存在する場合）を返します。</target>
        </trans-unit>
        <trans-unit id="a72b7baa5a4df5ed7a19b9faf38f50add7609350" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;body&lt;/em&gt; is specified, the specified data is sent after the headers are finished. It may be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, an open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or an iterable of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;body&lt;/em&gt; is a string, it is encoded as ISO-8859-1, the default for HTTP. If it is a bytes-like object, the bytes are sent as is. If it is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, the contents of the file is sent; this file object should support at least the &lt;code&gt;read()&lt;/code&gt; method. If the file object is an instance of &lt;a href=&quot;io#io.TextIOBase&quot;&gt;&lt;code&gt;io.TextIOBase&lt;/code&gt;&lt;/a&gt;, the data returned by the &lt;code&gt;read()&lt;/code&gt; method will be encoded as ISO-8859-1, otherwise the data returned by &lt;code&gt;read()&lt;/code&gt; is sent as is. If &lt;em&gt;body&lt;/em&gt; is an iterable, the elements of the iterable are sent as is until the iterable is exhausted.</source>
          <target state="translated">場合は&lt;em&gt;本体が&lt;/em&gt;指定されているヘッダが終了した後、指定されたデータが送信されます。それがあってもよい&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、オープン&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、または反復可能な&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。場合は&lt;em&gt;体が&lt;/em&gt;文字列である、それがISO-8859-1、HTTPのデフォルトとしてエンコードされます。バイトのようなオブジェクトの場合、バイトはそのまま送信されます。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;場合、ファイルの内容が送信されます。このファイルオブジェクトは、少なくとも &lt;code&gt;read()&lt;/code&gt; メソッドをサポートする必要があります。ファイルオブジェクトが&lt;a href=&quot;io#io.TextIOBase&quot;&gt; &lt;code&gt;io.TextIOBase&lt;/code&gt; の&lt;/a&gt;インスタンスである場合、 &lt;code&gt;read()&lt;/code&gt; メソッドによって返されるデータはISO-8859-1としてエンコードされます。それ以外の場合、 &lt;code&gt;read()&lt;/code&gt; によって返されるデータそのまま送信されます。&lt;em&gt;body&lt;/em&gt;が反復可能である場合、反復可能の要素は、反復可能がなくなるまでそのまま送信されます。</target>
        </trans-unit>
        <trans-unit id="a95a187d480705fc824e774d84d0311d36773db9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer_callback&lt;/em&gt; is None (the default), buffer views are serialized into &lt;em&gt;file&lt;/em&gt; as part of the pickle stream.</source>
          <target state="translated">場合&lt;em&gt;buffer_callbackは&lt;/em&gt;なし（デフォルト）ではありません、バッファビューはにシリアライズされ&lt;em&gt;たファイル&lt;/em&gt;ピクルスストリームの一部として。</target>
        </trans-unit>
        <trans-unit id="2802d994edfbf276788a825388162db7061822a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer_callback&lt;/em&gt; is not None, then it can be called any number of times with a buffer view. If the callback returns a false value (such as None), the given buffer is &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band&lt;/a&gt;; otherwise the buffer is serialized in-band, i.e. inside the pickle stream.</source>
          <target state="translated">&lt;em&gt;buffer_callback&lt;/em&gt;がNoneでない場合、バッファビューで何度でも呼び出すことができます。コールバックが偽の値（Noneなど）を返す場合、指定されたバッファーは&lt;a href=&quot;#pickle-oob&quot;&gt;帯域外&lt;/a&gt;です。それ以外の場合、バッファーは帯域内で、つまりピクルストリーム内でシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="65eadafe837a031d16efa4765ff11c2ea5982995" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffers&lt;/em&gt; is None (the default), then all data necessary for deserialization must be contained in the pickle stream. This means that the &lt;em&gt;buffer_callback&lt;/em&gt; argument was None when a &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; was instantiated (or when &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; was called).</source>
          <target state="translated">場合&lt;em&gt;、バッファは&lt;/em&gt;なし（デフォルト）ではありません、そして、直列化復元するために必要なすべてのデータは、漬物ストリームに含まれている必要があります。これは、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;がインスタンス化されたとき（または&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;が呼び出されたとき）の&lt;em&gt;buffer_callback&lt;/em&gt;引数がNoneだったことを意味します。</target>
        </trans-unit>
        <trans-unit id="3072f53b48e04deeb5f6a92a951e4b7b30fd9b43" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffers&lt;/em&gt; is not None, it should be an iterable of buffer-enabled objects that is consumed each time the pickle stream references an &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band&lt;/a&gt; buffer view. Such buffers have been given in order to the &lt;em&gt;buffer_callback&lt;/em&gt; of a Pickler object.</source>
          <target state="translated">&lt;em&gt;buffers&lt;/em&gt;がNoneでない場合、ピクルストリームが&lt;a href=&quot;#pickle-oob&quot;&gt;帯域外&lt;/a&gt;バッファビューを参照するたびに消費される、バッファ対応オブジェクトの反復可能オブジェクトである必要があります。このようなバッファは、Picklerオブジェクトの&lt;em&gt;buffer_callbackに割り当て&lt;/em&gt;られています。</target>
        </trans-unit>
        <trans-unit id="99e4b8756b05030f0547669e2cd91b89c6443032" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;c&lt;/em&gt; is an instance of &lt;em&gt;C&lt;/em&gt;, &lt;code&gt;c.x&lt;/code&gt; will invoke the getter, &lt;code&gt;c.x = value&lt;/code&gt; will invoke the setter and &lt;code&gt;del c.x&lt;/code&gt; the deleter.</source>
          <target state="translated">場合&lt;em&gt;cは&lt;/em&gt;のインスタンスである&lt;em&gt;C&lt;/em&gt;、 &lt;code&gt;c.x&lt;/code&gt; ゲッターを起動する、 &lt;code&gt;c.x = value&lt;/code&gt; 設定部を起動します &lt;code&gt;del c.x&lt;/code&gt; デリータ。</target>
        </trans-unit>
        <trans-unit id="c89346ab698759df4344532dd364a8daa21e4b53" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;callback&lt;/em&gt; is given and is not &lt;code&gt;None&lt;/code&gt;, it will be called after each trial with two arguments: &lt;code&gt;callback(number, time_taken)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;callback&lt;/em&gt;が指定されており、 &lt;code&gt;None&lt;/code&gt; でない場合は、各試行の後に &lt;code&gt;callback(number, time_taken)&lt;/code&gt; という2つの引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="209e198351f5a2406fae647dd06611db91524849" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;callback&lt;/em&gt; is specified then it should be a callable which accepts a single argument. When the result becomes ready &lt;em&gt;callback&lt;/em&gt; is applied to it, that is unless the call failed, in which case the &lt;em&gt;error_callback&lt;/em&gt; is applied instead.</source>
          <target state="translated">&lt;em&gt;コールバック&lt;/em&gt;が指定されている場合、単一の引数を受け入れる呼び出し可能オブジェクトである必要があります。結果が準備完了になると、&lt;em&gt;コールバック&lt;/em&gt;が適用されます。つまり、呼び出しが失敗した場合を&lt;em&gt;除き&lt;/em&gt;ます。その場合、代わりに&lt;em&gt;error_callback&lt;/em&gt;が適用されます。</target>
        </trans-unit>
        <trans-unit id="3329be05687a53fb5199343c2abf71b394411819" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the redirection of warnings to the logging system will stop, and warnings will be redirected to their original destinations (i.e. those in effect before &lt;code&gt;captureWarnings(True)&lt;/code&gt; was called).</source>
          <target state="translated">&lt;em&gt;capture&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、警告のロギングシステムへのリダイレクトは停止し、警告は元の宛先（つまり、 &lt;code&gt;captureWarnings(True)&lt;/code&gt; が呼び出される前に有効であった宛先）にリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="73194c77e6fb03e0903f0813816661b5e4e396b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, warnings issued by the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module will be redirected to the logging system. Specifically, a warning will be formatted using &lt;a href=&quot;warnings#warnings.formatwarning&quot;&gt;&lt;code&gt;warnings.formatwarning()&lt;/code&gt;&lt;/a&gt; and the resulting string logged to a logger named &lt;code&gt;'py.warnings'&lt;/code&gt; with a severity of &lt;code&gt;WARNING&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;capture&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュールによって発行された警告はロギングシステムにリダイレクトされます。具体的には、警告は&lt;a href=&quot;warnings#warnings.formatwarning&quot;&gt; &lt;code&gt;warnings.formatwarning()&lt;/code&gt; &lt;/a&gt;を使用してフォーマットされ、結果の文字列は重大度が &lt;code&gt;WARNING&lt;/code&gt; の &lt;code&gt;'py.warnings'&lt;/code&gt; という名前のロガーに記録されます。</target>
        </trans-unit>
        <trans-unit id="8f69f734be44d12f98816d1aeb3d6e28ef2ec1b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture_output&lt;/em&gt; is true, stdout and stderr will be captured. When used, the internal &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; object is automatically created with &lt;code&gt;stdout=PIPE&lt;/code&gt; and &lt;code&gt;stderr=PIPE&lt;/code&gt;. The &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; arguments may not be supplied at the same time as &lt;em&gt;capture_output&lt;/em&gt;. If you wish to capture and combine both streams into one, use &lt;code&gt;stdout=PIPE&lt;/code&gt; and &lt;code&gt;stderr=STDOUT&lt;/code&gt; instead of &lt;em&gt;capture_output&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;capture_outputが&lt;/em&gt; trueで、stdoutとstderrをキャプチャされます。使用すると、内部&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;オブジェクトは &lt;code&gt;stdout=PIPE&lt;/code&gt; および &lt;code&gt;stderr=PIPE&lt;/code&gt; で自動的に作成されます。&lt;em&gt;標準出力&lt;/em&gt;と&lt;em&gt;標準エラー出力&lt;/em&gt;引数はと同時に供給されない場合があり&lt;em&gt;capture_output&lt;/em&gt;。両方のストリームをキャプチャして1つに結合する &lt;code&gt;stderr=STDOUT&lt;/code&gt; は、&lt;em&gt;capture_outputの&lt;/em&gt;代わりに &lt;code&gt;stdout=PIPE&lt;/code&gt; およびstderr = STDOUTを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d8516461260217396c41f9b221cbdb1d7bcd25" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;chain&lt;/em&gt; is not &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;__cause__&lt;/code&gt; and &lt;code&gt;__context__&lt;/code&gt; will not be formatted.</source>
          <target state="translated">&lt;em&gt;chain&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; でない場合、 &lt;code&gt;__cause__&lt;/code&gt; および &lt;code&gt;__context__&lt;/code&gt; はフォーマットされません。</target>
        </trans-unit>
        <trans-unit id="ac90c4494a891aa8301770b24d249be59f8193e9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;charset&lt;/em&gt; is provided (which is valid only for &lt;code&gt;str&lt;/code&gt;), encode the string to bytes using the specified character set. The default is &lt;code&gt;utf-8&lt;/code&gt;. If the specified &lt;em&gt;charset&lt;/em&gt; is a known alias for a standard MIME charset name, use the standard charset instead.</source>
          <target state="translated">&lt;em&gt;charset&lt;/em&gt;が指定されている場合（ &lt;code&gt;str&lt;/code&gt; に対してのみ有効）、指定された文字セットを使用して文字列をバイトにエンコードします。デフォルトは &lt;code&gt;utf-8&lt;/code&gt; です。指定された&lt;em&gt;文字セット&lt;/em&gt;が標準MIME文字セット名の既知のエイリアスである場合は、代わりに標準文字セットを使用してください。</target>
        </trans-unit>
        <trans-unit id="76ebf40876e36c44c7a4a24267a19bbe7cda5256" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check&lt;/em&gt; is true, and the process exits with a non-zero exit code, a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; exception will be raised. Attributes of that exception hold the arguments, the exit code, and stdout and stderr if they were captured.</source>
          <target state="translated">場合は&lt;em&gt;チェックが&lt;/em&gt; trueで、ゼロ以外の終了コードでプロセスが終了、&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; の&lt;/a&gt;例外が発生します。その例外の属性は、引数、終了コード、およびキャプチャされた場合のstdoutとstderrを保持します。</target>
        </trans-unit>
        <trans-unit id="3067072fcca20de243ec4fbab69b95d01e9a85a1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check_circular&lt;/em&gt; is false (default: &lt;code&gt;True&lt;/code&gt;), then the circular reference check for container types will be skipped and a circular reference will result in an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; (or worse).</source>
          <target state="translated">場合&lt;em&gt;check_circularは&lt;/em&gt;（デフォルト：falseです &lt;code&gt;True&lt;/code&gt; ）、その後、コンテナ型の循環参照チェックはスキップされ、循環参照はになります&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; を&lt;/a&gt;（またはより悪いです）。</target>
        </trans-unit>
        <trans-unit id="506ca45692a2977cbc33f7b00103c60271d4b598" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check_circular&lt;/em&gt; is true (the default), then lists, dicts, and custom encoded objects will be checked for circular references during encoding to prevent an infinite recursion (which would cause an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;). Otherwise, no such check takes place.</source>
          <target state="translated">場合&lt;em&gt;check_circularが&lt;/em&gt; true（デフォルト）で、その後、リスト、dicts、およびカスタムエンコードされたオブジェクトは、（原因と思われる無限再帰を防ぐために、エンコード中に循環参照がチェックされます&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; をします&lt;/a&gt;）。それ以外の場合、そのようなチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="29652dd7c4e96908711afe7bf508091b6dae2068" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cid&lt;/em&gt; is specified, add a &lt;em&gt;Content-ID&lt;/em&gt; header with &lt;em&gt;cid&lt;/em&gt; as its value.</source>
          <target state="translated">&lt;em&gt;cid&lt;/em&gt;が指定されている場合は、&lt;em&gt;cid&lt;/em&gt;を値として持つ&lt;em&gt;Content-ID&lt;/em&gt;ヘッダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="575fcd59aad367b156b538716b2f3891b088a393" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;clear&lt;/em&gt; is true then the dictionary will be cleared before the new values are set.</source>
          <target state="translated">&lt;em&gt;clear&lt;/em&gt;がtrueの場合、新しい値が設定される前に辞書がクリアされます。</target>
        </trans-unit>
        <trans-unit id="c5d45120b80df607441d6ca3435c79fa5678f78f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;close_fds&lt;/em&gt; is true, all file descriptors except &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; will be closed before the child process is executed. Otherwise when &lt;em&gt;close_fds&lt;/em&gt; is false, file descriptors obey their inheritable flag as described in &lt;a href=&quot;os#fd-inheritance&quot;&gt;Inheritance of File Descriptors&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;close_fdsが&lt;/em&gt;真である、を除くすべてのファイルディスクリプタ &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;2&lt;/code&gt; は、子プロセスが実行される前に閉じられます。それ以外の場合、&lt;em&gt;close_fds&lt;/em&gt;がfalseの場合、ファイル記述子の&lt;a href=&quot;os#fd-inheritance&quot;&gt;継承で&lt;/a&gt;説明されているように、ファイル記述子は継承可能なフラグに従います。</target>
        </trans-unit>
        <trans-unit id="b29d4c51339df497f6673dde2e116862b6acefa2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;closefd&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a file descriptor rather than a filename was given, the underlying file descriptor will be kept open when the file is closed. If a filename is given &lt;em&gt;closefd&lt;/em&gt; must be &lt;code&gt;True&lt;/code&gt; (the default) otherwise an error will be raised.</source>
          <target state="translated">場合&lt;em&gt;closefdが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; とファイルディスクリプタではなく、ファイル名が与えられたファイルを閉じたときに、基礎となるファイルディスクリプタは開いたままになります。ファイル名を指定する場合、&lt;em&gt;closefd&lt;/em&gt;は &lt;code&gt;True&lt;/code&gt; （デフォルト）でなければなりません。そうでない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2066d93e3b1d41752de819f855fa84984bfaf655" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;column&lt;/em&gt; is specified, returns the bounding box of that cell. If the &lt;em&gt;item&lt;/em&gt; is not visible (i.e., if it is a descendant of a closed item or is scrolled offscreen), returns an empty string.</source>
          <target state="translated">&lt;em&gt;column&lt;/em&gt;が指定されている場合、そのセルの境界ボックスを返します。&lt;em&gt;アイテム&lt;/em&gt;が表示されていない場合（つまり、閉じたアイテムの子孫であるか、画面外にスクロールされている場合）、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="0213da647cc77316ae40d8c30349f6bd76c97885" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, it must be a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance describing the various SSL options. See &lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt;&lt;code&gt;HTTPSConnection&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;を指定する場合は、さまざまなSSLオプションを説明する&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;インスタンスである必要があります。詳細については、&lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt; &lt;code&gt;HTTPSConnection&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c7608590b57586e180487b61183db6caeedb6256" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), all character references (except the ones in &lt;code&gt;script&lt;/code&gt;/&lt;code&gt;style&lt;/code&gt; elements) are automatically converted to the corresponding Unicode characters.</source>
          <target state="translated">場合&lt;em&gt;convert_charrefsが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、（中のものを除くすべての文字参照 &lt;code&gt;script&lt;/code&gt; / &lt;code&gt;style&lt;/code&gt; 要素）に対応するUnicode文字に自動的に変換されます。</target>
        </trans-unit>
        <trans-unit id="6de5e65f0ef648a4c375cfaa4c0d9dd995bb3618" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that takes two arguments &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;, and will be used to copy &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; if &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt; cannot be used. If the source is a directory, &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; is called, passing it the &lt;code&gt;copy_function()&lt;/code&gt;. The default &lt;em&gt;copy_function&lt;/em&gt; is &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;. Using &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; as the &lt;em&gt;copy_function&lt;/em&gt; allows the move to succeed when it is not possible to also copy the metadata, at the expense of not copying any of the metadata.</source>
          <target state="translated">&lt;em&gt;copy_function&lt;/em&gt;を指定する場合は、2つの引数&lt;em&gt;src&lt;/em&gt;と&lt;em&gt;dst&lt;/em&gt;を取る呼び出し可能オブジェクトである必要があり、&lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; &lt;/a&gt;を使用できない場合に&lt;em&gt;src&lt;/em&gt;を&lt;em&gt;dest&lt;/em&gt;にコピーするために使用されます。ソースがディレクトリである場合は、&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;それを渡して、呼ばれている &lt;code&gt;copy_function()&lt;/code&gt; 。デフォルトの&lt;em&gt;copy_function&lt;/em&gt;は&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;です。&lt;em&gt;copy_ &lt;/em&gt;&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;を&lt;em&gt;copy_function&lt;/em&gt;として使用すると、メタデータもコピーできない場合に、メタデータをコピーしない&lt;em&gt;代わり&lt;/em&gt;に移動を成功させることができます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bf033ef6d8a1bf2457829466585d1c77570d91e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that will be used to copy each file. It will be called with the source path and the destination path as arguments. By default, &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; is used, but any function that supports the same signature (like &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt;) can be used.</source>
          <target state="translated">&lt;em&gt;copy_function&lt;/em&gt;を指定する場合は、各ファイルのコピーに使用される呼び出し可能である必要があります。ソースパスと宛先パスを引数として呼び出されます。デフォルトでは&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;が使用されますが、同じ署名をサポートする任意の関数（&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; など&lt;/a&gt;）を使用できます。</target>
        </trans-unit>
        <trans-unit id="a0549453cb5d46211e07003c2a7307ea21880714" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; and the &lt;em&gt;dirname&lt;/em&gt; path exists, it will be treated as an existing maildir without attempting to verify its directory layout.</source>
          <target state="translated">場合は&lt;em&gt;作成&lt;/em&gt;され &lt;code&gt;True&lt;/code&gt; と&lt;em&gt;DIRNAMEの&lt;/em&gt;パスが存在すると、そのディレクトリレイアウトを検証しようとすることなく、既存のmaildirとして扱われます。</target>
        </trans-unit>
        <trans-unit id="8898e2cfb55415011220e6c35dcb72cd30c93364" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cte&lt;/em&gt; is set, encode the payload using the specified content transfer encoding, and set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to that value. Possible values for &lt;em&gt;cte&lt;/em&gt; are &lt;code&gt;quoted-printable&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;7bit&lt;/code&gt;, &lt;code&gt;8bit&lt;/code&gt;, and &lt;code&gt;binary&lt;/code&gt;. If the input cannot be encoded in the specified encoding (for example, specifying a &lt;em&gt;cte&lt;/em&gt; of &lt;code&gt;7bit&lt;/code&gt; for an input that contains non-ASCII values), raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;cte&lt;/em&gt;が設定されている場合は、指定されたコンテンツ転送エンコードを使用してペイロードをエンコードし、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーをその値に設定します。以下のための可能な値&lt;em&gt;CTEが&lt;/em&gt;ある &lt;code&gt;quoted-printable&lt;/code&gt; の、 &lt;code&gt;base64&lt;/code&gt; で、 &lt;code&gt;7bit&lt;/code&gt; 、 &lt;code&gt;8bit&lt;/code&gt; 、および &lt;code&gt;binary&lt;/code&gt; 。入力が指定されたエンコーディング（例えば、特定で符号化することができない場合に&lt;em&gt;CTE&lt;/em&gt;の &lt;code&gt;7bit&lt;/code&gt; ASCII以外の値が含まれている入力用）を上げる&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ac96e90d352b33de98fd5ace363c0516fa39090" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cumulative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, cumulate size and count of memory blocks of all frames of the traceback of a trace, not only the most recent frame. The cumulative mode can only be used with &lt;em&gt;key_type&lt;/em&gt; equals to &lt;code&gt;'filename'&lt;/code&gt; and &lt;code&gt;'lineno'&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;の累積&lt;/em&gt;である &lt;code&gt;True&lt;/code&gt; 、CUMULATEサイズは、トレースのトレースバックだけでなく、最新のフレームのすべてのフレームのメモリ・ブロックのカウント。累積モードは、&lt;em&gt;key_type&lt;/em&gt;が &lt;code&gt;'filename'&lt;/code&gt; および &lt;code&gt;'lineno'&lt;/code&gt; と等しい場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="eacfbd2cb2014105749c4358d998bb8bd55cbab6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;current_offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it refers to an instruction offset in the disassembled code. Setting this means &lt;a href=&quot;#dis.Bytecode.dis&quot;&gt;&lt;code&gt;dis()&lt;/code&gt;&lt;/a&gt; will display a &amp;ldquo;current instruction&amp;rdquo; marker against the specified opcode.</source>
          <target state="translated">&lt;em&gt;current_offset&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、逆アセンブルされたコードの命令オフセットを参照します。これを設定すると、&lt;a href=&quot;#dis.Bytecode.dis&quot;&gt; &lt;code&gt;dis()&lt;/code&gt; &lt;/a&gt;は指定されたオペコードに対して「現在の命令」マーカーを表示します。</target>
        </trans-unit>
        <trans-unit id="b5d4c33f63f2f37671afb0edc3a13524b04cb537" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cwd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the function changes the working directory to &lt;em&gt;cwd&lt;/em&gt; before executing the child. &lt;em&gt;cwd&lt;/em&gt; can be a string, bytes or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object. In particular, the function looks for &lt;em&gt;executable&lt;/em&gt; (or for the first item in &lt;em&gt;args&lt;/em&gt;) relative to &lt;em&gt;cwd&lt;/em&gt; if the executable path is a relative path.</source>
          <target state="translated">&lt;em&gt;cwd&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、関数は子を実行する前に作業ディレクトリを&lt;em&gt;cwd&lt;/em&gt;に変更します。&lt;em&gt;cwd&lt;/em&gt;は、文字列、バイト、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのような&lt;/a&gt;オブジェクトです。特に、実行可能パスが相対パスの場合、&lt;em&gt;関数はcwd&lt;/em&gt;に対して相対的に&lt;em&gt;実行可能ファイル&lt;/em&gt;（または&lt;em&gt;args&lt;/em&gt;の最初の項目）を&lt;em&gt;探し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="abe309a388dca84dd7a05e235de450c0f31358b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;d&lt;/em&gt; is aware, &lt;em&gt;d&lt;/em&gt; is normalized to UTC time, by subtracting &lt;code&gt;d.utcoffset()&lt;/code&gt;, and a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; for the normalized time is returned. &lt;code&gt;tm_isdst&lt;/code&gt; is forced to 0. Note that an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; may be raised if &lt;em&gt;d&lt;/em&gt;.year was &lt;code&gt;MINYEAR&lt;/code&gt; or &lt;code&gt;MAXYEAR&lt;/code&gt; and UTC adjustment spills over a year boundary.</source>
          <target state="translated">場合&lt;em&gt;dは&lt;/em&gt;認識している、&lt;em&gt;Dは&lt;/em&gt;減算することによって、UTC時間に正規化され &lt;code&gt;d.utcoffset()&lt;/code&gt; 、及び&lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt;正規化された時間が返されます。 &lt;code&gt;tm_isdst&lt;/code&gt; がでていること0注意を余儀なくされて&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;場合に発生することができる&lt;em&gt;D&lt;/em&gt;だった.year &lt;code&gt;MINYEAR&lt;/code&gt; または &lt;code&gt;MAXYEAR&lt;/code&gt; とUTC調整が年の境界の上に流出します。</target>
        </trans-unit>
        <trans-unit id="412f0af923015004c94c91a0798c5634f520a8c3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が空の場合、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1bd76e6354043e84cab72b15b26a288207008710" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is the concatenation of multiple compressed streams, decompress all of the streams.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が複数の圧縮ストリームを連結したものである場合は、すべてのストリームを解凍します。</target>
        </trans-unit>
        <trans-unit id="9dbf42aa701352d3426aa0b9e6d8ce207f8e0f9c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is the concatenation of multiple distinct compressed streams, decompress all of these streams, and return the concatenation of the results.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が複数の異なる圧縮ストリームを連結したものである場合、これらのストリームをすべて解凍し、結果の連結を返します。</target>
        </trans-unit>
        <trans-unit id="3efb743eb6b84a13ce1c37d5a413fec15e776cc1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ddir&lt;/em&gt; is given, it is prepended to the path to each file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">場合&lt;em&gt;DDIRが&lt;/em&gt;与えられ、それは、コンパイル時間トレースバックでの使用のためにコンパイルされている各ファイルへのパスの前に付加され、また、それがソースの場合にトレースバックし、他のメッセージで使用されるバイトコードファイルにコンパイルされますバイトコードファイルの実行時にファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="0eb4f5a84f724ffad64d00f6c44b99d63a5274b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ddir&lt;/em&gt; is given, it is prepended to the path to the file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">場合&lt;em&gt;DDIRが&lt;/em&gt;与えられ、コンパイル時間トレースバックでの使用のためにコンパイルされているファイルへのパスの前に付加され、また、それは場合にトレースバックし、他のメッセージで使用されるバイトコードファイル、ソースにしてコンパイルされていますバイトコードファイルの実行時にファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="d4c4d1acb8ff67a497d8ef936eb0e07f0337e4c2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;debug&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the event loop will be run in debug mode.</source>
          <target state="translated">場合は&lt;em&gt;、デバッグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、イベントループは、デバッグモードで実行されます。</target>
        </trans-unit>
        <trans-unit id="475c14c8e2569012dc880a97fd4fa51777aa405a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;default_pip&lt;/em&gt; is set, then &lt;code&gt;pip&lt;/code&gt; will be installed in addition to the two regular scripts.</source>
          <target state="translated">&lt;em&gt;default_pip&lt;/em&gt;が設定されている場合、2つの通常のスクリプトに加えて &lt;code&gt;pip&lt;/code&gt; がインストールされます。</target>
        </trans-unit>
        <trans-unit id="1c8c126e6c7b0f2e8bd2913dccf7f6d01c5144a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;delay&lt;/em&gt; is true, then file opening is deferred until the first call to &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;遅延が&lt;/em&gt;真である場合、ファイルオープンのために最初の呼び出しまで延期される&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0056a36933eb229c50c4c08ad60c4c6100860930" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;delta&lt;/em&gt; is supplied instead of &lt;em&gt;places&lt;/em&gt; then the difference between &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; must be less or equal to (or greater than) &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;デルタが&lt;/em&gt;の代わりに供給される&lt;em&gt;場所&lt;/em&gt;次いで差&lt;em&gt;第一&lt;/em&gt;及び&lt;em&gt;第二は、&lt;/em&gt;より少ない又は等しい（又はより大きい）でなければならない&lt;em&gt;デルタ&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c3e614afb3a12f1f008bd5a8a6fdbe9c09e6230" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dereference&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, add symbolic and hard links to the archive. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, add the content of the target files to the archive. This has no effect on systems that do not support symbolic links.</source>
          <target state="translated">&lt;em&gt;逆参照&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、アーカイブにシンボリックリンクとハードリンクを追加します。&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、ターゲットファイルのコンテンツをアーカイブに追加します。これは、シンボリックリンクをサポートしないシステムには影響しません。</target>
        </trans-unit>
        <trans-unit id="89e297698f3919befb6ad412d44099f294057f3e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dir&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the file will be created in that directory; otherwise, a default directory is used. The default directory is chosen from a platform-dependent list, but the user of the application can control the directory location by setting the &lt;em&gt;TMPDIR&lt;/em&gt;, &lt;em&gt;TEMP&lt;/em&gt; or &lt;em&gt;TMP&lt;/em&gt; environment variables. There is thus no guarantee that the generated filename will have any nice properties, such as not requiring quoting when passed to external commands via &lt;code&gt;os.popen()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;dir&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、ファイルはそのディレクトリに作成されます。それ以外の場合は、デフォルトのディレクトリが使用されます。デフォルトのディレクトリはプラットフォーム依存のリストから選択されますが、アプリケーションのユーザーは、&lt;em&gt;TMPDIR&lt;/em&gt;、&lt;em&gt;TEMP、&lt;/em&gt;または&lt;em&gt;TMP&lt;/em&gt;環境変数を設定することにより、ディレクトリの場所を制御できます。したがって、生成されたファイル名が &lt;code&gt;os.popen()&lt;/code&gt; を介して外部コマンドに渡されたときに引用符を必要としないなど、優れたプロパティを持つことは保証されません。</target>
        </trans-unit>
        <trans-unit id="36e5a4ee826ffb2f15f36ae09720b225045e3a17" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dirname&lt;/em&gt; is a string, a &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; finder is created that searches that directory. If &lt;em&gt;dirname&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, a &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; finder is created that searches the current &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, plus any modules that are frozen or built-in.</source>
          <target state="translated">場合&lt;em&gt;DIRNAMEは&lt;/em&gt;文字列で、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;ファインダーは、その検索がそのディレクトリに作成されます。&lt;em&gt;dirname&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在の&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に加えて、フリーズまたは組み込みのモジュールを検索する&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;ファインダーが作成されます。</target>
        </trans-unit>
        <trans-unit id="551154ba8498eafba8ea7b74270354b26c0ca404" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;disposition&lt;/em&gt; is set, use it as the value of the &lt;em&gt;Content-Disposition&lt;/em&gt; header. If not specified, and &lt;em&gt;filename&lt;/em&gt; is specified, add the header with the value &lt;code&gt;attachment&lt;/code&gt;. If &lt;em&gt;disposition&lt;/em&gt; is not specified and &lt;em&gt;filename&lt;/em&gt; is also not specified, do not add the header. The only valid values for &lt;em&gt;disposition&lt;/em&gt; are &lt;code&gt;attachment&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;配置が&lt;/em&gt;設定されている、の値としてそれを使用する&lt;em&gt;コンテンツの廃棄の&lt;/em&gt;ヘッダー。指定されておらず、&lt;em&gt;ファイル名&lt;/em&gt;が指定されている場合は、値が &lt;code&gt;attachment&lt;/code&gt; のヘッダーを追加します。場合は&lt;em&gt;処分が&lt;/em&gt;指定されていない&lt;em&gt;ファイル名&lt;/em&gt;も指定されていない、ヘッダーを追加しないでください。&lt;em&gt;dispositionの&lt;/em&gt;有効な値は、 &lt;code&gt;attachment&lt;/code&gt; および &lt;code&gt;inline&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="2ec590024eac4ba112689a063f854bf9db2f78c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dry_run&lt;/em&gt; is true, no archive is created, but the operations that would be executed are logged to &lt;em&gt;logger&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;もしdry_runが&lt;/em&gt;真である、何のアーカイブが作成されませんが、実行されます操作はに記録され&lt;em&gt;たロガー&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94267f95134956d72ce6e87e0afa84eedaad7aa3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dualstack_ipv6&lt;/em&gt; is true and the platform supports it the socket will be able to accept both IPv4 and IPv6 connections, else it will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Most POSIX platforms and Windows are supposed to support this functionality. When this functionality is enabled the address returned by &lt;a href=&quot;#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.getpeername()&lt;/code&gt;&lt;/a&gt; when an IPv4 connection occurs will be an IPv6 address represented as an IPv4-mapped IPv6 address. If &lt;em&gt;dualstack_ipv6&lt;/em&gt; is false it will explicitly disable this functionality on platforms that enable it by default (e.g. Linux). This parameter can be used in conjunction with &lt;a href=&quot;#socket.has_dualstack_ipv6&quot;&gt;&lt;code&gt;has_dualstack_ipv6()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">場合&lt;em&gt;dualstack_ipv6が&lt;/em&gt;真であるとプラットフォームがサポートしているソケットは、IPv4とIPv6の両方の接続を受け入れることができるようになります、そうでなければ発生します&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。ほとんどのPOSIXプラットフォームとWindowsは、この機能をサポートすることになっています。この機能を有効にすると、IPv4接続が発生したときに&lt;a href=&quot;#socket.socket.getpeername&quot;&gt; &lt;code&gt;socket.getpeername()&lt;/code&gt; &lt;/a&gt;によって返されるアドレスは、IPv4にマップされたIPv6アドレスとして表されるIPv6アドレスになります。&lt;em&gt;dualstack_ipv6&lt;/em&gt;がfalseの場合、デフォルトで有効にするプラットフォーム（Linuxなど）でこの機能が明示的に無効になります。このパラメーターは、&lt;a href=&quot;#socket.has_dualstack_ipv6&quot;&gt; &lt;code&gt;has_dualstack_ipv6()&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​できます。</target>
        </trans-unit>
        <trans-unit id="a9581453393604a0750f4d82252f2e5cd9d18898" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;duplex&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then the pipe is bidirectional. If &lt;em&gt;duplex&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then the pipe is unidirectional: &lt;code&gt;conn1&lt;/code&gt; can only be used for receiving messages and &lt;code&gt;conn2&lt;/code&gt; can only be used for sending messages.</source>
          <target state="translated">場合は&lt;em&gt;二重で&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、パイプは双方向です。場合は&lt;em&gt;、両面が&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; その後、パイプは一方向である： &lt;code&gt;conn1&lt;/code&gt; メッセージのみを受信するために使用することができ、 &lt;code&gt;conn2&lt;/code&gt; はメッセージのみを送信するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="99baa917d4196e3d9a478f232fed0c3fe22f8f57" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;effective_ids&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; will perform its access checks using the effective uid/gid instead of the real uid/gid. &lt;em&gt;effective_ids&lt;/em&gt; may not be supported on your platform; you can check whether or not it is available using &lt;a href=&quot;#os.supports_effective_ids&quot;&gt;&lt;code&gt;os.supports_effective_ids&lt;/code&gt;&lt;/a&gt;. If it is unavailable, using it will raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;effective_ids&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;は実際のuid / gidではなく有効なuid / gidを使用してアクセスチェックを実行します。&lt;em&gt;Effective_ids&lt;/em&gt;はあなたのプラットフォームではサポートされていないかもしれません。&lt;a href=&quot;#os.supports_effective_ids&quot;&gt; &lt;code&gt;os.supports_effective_ids&lt;/code&gt; を&lt;/a&gt;使用して、それが使用可能かどうかを確認できます。使用できない場合、それを使用すると&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="607534724be78a927f3354c8bcd6f86f04925384" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the result of each iteration of &lt;em&gt;message_body&lt;/em&gt; will be chunk-encoded as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1. How the data is encoded is dependent on the type of &lt;em&gt;message_body&lt;/em&gt;. If &lt;em&gt;message_body&lt;/em&gt; implements the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt; the encoding will result in a single chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;collections.abc.Iterable&lt;/code&gt;&lt;/a&gt;, each iteration of &lt;em&gt;message_body&lt;/em&gt; will result in a chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, each call to &lt;code&gt;.read()&lt;/code&gt; will result in a chunk. The method automatically signals the end of the chunk-encoded data immediately after &lt;em&gt;message_body&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;encode_chunked&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;em&gt;message_body&lt;/em&gt;の各反復の結果は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230の&lt;/strong&gt;&lt;/a&gt;セクション3.3.1で指定されているようにチャンクエンコードされます。データのエンコード方法は、&lt;em&gt;message_body&lt;/em&gt;のタイプによって異なります。&lt;em&gt;message_body&lt;/em&gt;が&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファインターフェースを&lt;/a&gt;実装している場合、エンコーディングは単一のチャンクになります。場合&lt;em&gt;MESSAGE_BODYが&lt;/em&gt;ある&lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;collections.abc.Iterable&lt;/code&gt; &lt;/a&gt;、の各反復&lt;em&gt;MESSAGE_BODYは&lt;/em&gt;チャンクになります。場合&lt;em&gt;MESSAGE_BODYが&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、各呼び出しはする &lt;code&gt;.read()&lt;/code&gt; チャンクになります。このメソッドは、チャンクエンコードされたデータの終わりを&lt;em&gt;message_bodyの&lt;/em&gt;直後に自動的に通知します。</target>
        </trans-unit>
        <trans-unit id="7edf08fcadb288478ca315f1c2600e7b135a30a9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; (also known as &lt;em&gt;universal_newlines&lt;/em&gt;) is true, the file objects &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; will be opened in text mode using the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; specified in the call or the defaults for &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;エンコード&lt;/em&gt;または&lt;em&gt;エラーが&lt;/em&gt;指定されている、または&lt;em&gt;テキストは&lt;/em&gt;（としても知られている&lt;em&gt;universal_newlinesする&lt;/em&gt;）真である、ファイルはオブジェクト&lt;em&gt;標準入力&lt;/em&gt;、&lt;em&gt;標準出力を&lt;/em&gt;して&lt;em&gt;stderrは&lt;/em&gt;使用してテキストモードで開かれます&lt;em&gt;エンコーディング&lt;/em&gt;および&lt;em&gt;エラー&lt;/em&gt;の呼び出しで指定されたかのデフォルト&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="699e55008224a367497000a7c90840cae537dfba" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; is true, file objects for stdin, stdout and stderr are opened in text mode using the specified &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; or the &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; default. The &lt;em&gt;universal_newlines&lt;/em&gt; argument is equivalent to &lt;em&gt;text&lt;/em&gt; and is provided for backwards compatibility. By default, file objects are opened in binary mode.</source>
          <target state="translated">場合は&lt;em&gt;エンコード&lt;/em&gt;または&lt;em&gt;エラーが&lt;/em&gt;指定されている、または&lt;em&gt;テキストが&lt;/em&gt; trueの場合、ファイルは標準入力、標準出力のためのオブジェクトとstderrは、指定された使用してテキストモードで開かれている&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;または&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; の&lt;/a&gt;デフォルトを。&lt;em&gt;universal_newlinesの&lt;/em&gt;引数はに相当し&lt;em&gt;、テキスト&lt;/em&gt;と後方互換性のために提供されます。デフォルトでは、ファイルオブジェクトはバイナリモードで開かれます。</target>
        </trans-unit>
        <trans-unit id="52638c3e8d67fa2ec0fd557d0879c7a9e57eca8b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; is true, the file objects &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; are opened in text mode with the specified encoding and &lt;em&gt;errors&lt;/em&gt;, as described above in &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt;. The &lt;em&gt;universal_newlines&lt;/em&gt; argument is equivalent to &lt;em&gt;text&lt;/em&gt; and is provided for backwards compatibility. By default, file objects are opened in binary mode.</source>
          <target state="translated">場合は&lt;em&gt;エンコード&lt;/em&gt;または&lt;em&gt;エラーが&lt;/em&gt;指定されている、または&lt;em&gt;テキストが&lt;/em&gt; trueの場合、ファイルはオブジェクト&lt;em&gt;標準入力&lt;/em&gt;、&lt;em&gt;標準出力を&lt;/em&gt;して&lt;em&gt;stderrは&lt;/em&gt;指定されたエンコーディングとしてテキストモードで開かれている&lt;em&gt;エラー&lt;/em&gt;で上述したように、&lt;a href=&quot;#frequently-used-arguments&quot;&gt;頻繁に使用される引数&lt;/a&gt;。&lt;em&gt;universal_newlinesの&lt;/em&gt;引数はに相当し&lt;em&gt;、テキスト&lt;/em&gt;と後方互換性のために提供されます。デフォルトでは、ファイルオブジェクトはバイナリモードで開かれます。</target>
        </trans-unit>
        <trans-unit id="63d0f1a5631a1c9c1ee3f2e8299762fd8cd8e7d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ensure_ascii&lt;/em&gt; is true (the default), the output is guaranteed to have all incoming non-ASCII characters escaped. If &lt;em&gt;ensure_ascii&lt;/em&gt; is false, these characters will be output as-is.</source>
          <target state="translated">場合&lt;em&gt;ensure_asciiが&lt;/em&gt; true（デフォルト）で、出力はすべての着信非ASCII文字をエスケープ持つことが保証されています。&lt;em&gt;Ensure_ascii&lt;/em&gt;がfalseの場合、これらの文字はそのまま出力されます。</target>
        </trans-unit>
        <trans-unit id="f5c427089fb1de4505a7a9e6a8fc25b18c3e6e0c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;env&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process&amp;rsquo; environment.</source>
          <target state="translated">&lt;em&gt;env&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは新しいプロセスの環境変数を定義するマッピングでなければなりません。これらは、現在のプロセスの環境を継承するデフォルトの動作の代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="87535ea7e24348fb8f4d57c12202af9ca447538a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;env&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process&amp;rsquo; environment. It is passed directly to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;env&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは新しいプロセスの環境変数を定義するマッピングでなければなりません。これらは、現在のプロセスの環境を継承するデフォルトの動作の代わりに使用されます。&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; に&lt;/a&gt;直接渡されます。</target>
        </trans-unit>
        <trans-unit id="ff8cd5fc3865815194e6f233b530a23aa3eba258" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;error_callback&lt;/em&gt; is specified then it should be a callable which accepts a single argument. If the target function fails, then the &lt;em&gt;error_callback&lt;/em&gt; is called with the exception instance.</source>
          <target state="translated">&lt;em&gt;error_callback&lt;/em&gt;が指定されている場合は、単一の引数を受け入れる呼び出し可能オブジェクトである必要があります。ターゲット関数が失敗すると、例外インスタンスを使用して&lt;em&gt;error_callback&lt;/em&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a716812bb95f42a90866514c37dd0d4203eae841" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;errorlevel&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, all errors are ignored when using &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;TarFile.extract()&lt;/code&gt;&lt;/a&gt;. Nevertheless, they appear as error messages in the debug output, when debugging is enabled. If &lt;code&gt;1&lt;/code&gt;, all &lt;em&gt;fatal&lt;/em&gt; errors are raised as &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exceptions. If &lt;code&gt;2&lt;/code&gt;, all &lt;em&gt;non-fatal&lt;/em&gt; errors are raised as &lt;a href=&quot;#tarfile.TarError&quot;&gt;&lt;code&gt;TarError&lt;/code&gt;&lt;/a&gt; exceptions as well.</source>
          <target state="translated">場合は&lt;em&gt;ERRORLEVELが&lt;/em&gt;ある &lt;code&gt;0&lt;/code&gt; 使用した場合、すべてのエラーが無視され&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;TarFile.extract()&lt;/code&gt; &lt;/a&gt;。それにもかかわらず、デバッグが有効になっていると、デバッグ出力にエラーメッセージとして表示されます。 &lt;code&gt;1&lt;/code&gt; の場合、すべての&lt;em&gt;致命的な&lt;/em&gt;エラーは&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;例外として発生します。 &lt;code&gt;2&lt;/code&gt; の場合、すべて&lt;em&gt;の致命的で&lt;/em&gt;ないエラーも&lt;a href=&quot;#tarfile.TarError&quot;&gt; &lt;code&gt;TarError&lt;/code&gt; &lt;/a&gt;例外として発生します。</target>
        </trans-unit>
        <trans-unit id="4cdee59d973926ccbf68873b846e74e0fc64b06e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exc_info&lt;/em&gt; does not evaluate as false, it causes exception information to be added to the logging message. If an exception tuple (in the format returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;) or an exception instance is provided, it is used; otherwise, &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt; is called to get the exception information.</source>
          <target state="translated">&lt;em&gt;exc_info&lt;/em&gt;がfalseと評価されない場合、例外メッセージがログメッセージに追加されます。例外タプル（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される形式）または例外インスタンスが提供されている場合は、それが使用されます。それ以外の場合は、&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;が呼び出されて、例外情報を取得します。</target>
        </trans-unit>
        <trans-unit id="97d130dcbf3bae5b901a129e219774af57b99697" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exc_type&lt;/em&gt; is &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;, the exception is silently ignored. Otherwise, the exception is printed out on &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;exc_typeが&lt;/em&gt;ある&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; を&lt;/a&gt;、例外は黙って無視されます。それ以外の場合、例外は&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; に出力&lt;/a&gt;されます。</target>
        </trans-unit>
        <trans-unit id="d411ffd6142ab0891751015edec151dc77ef2c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default), an &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised if the target directory already exists.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （デフォルト）、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; は、&lt;/a&gt;ターゲットディレクトリがすでに存在する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="2db5d05fedef1a16fd234aa31609df5c35a8e34b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is false (the default), &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised if the target directory already exists.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt; false（デフォルト）で、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; は、&lt;/a&gt;ターゲットディレクトリがすでに存在する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="151c18046b0057879a6273bc9b7b8b67d5a66254" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is true, &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; exceptions will be ignored (same behavior as the POSIX &lt;code&gt;mkdir -p&lt;/code&gt; command), but only if the last path component is not an existing non-directory file.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt;真である、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; の&lt;/a&gt;例外は（POSIXと同じ動作無視されます &lt;code&gt;mkdir -p&lt;/code&gt; コマンド）が、最後のパスコンポーネントは、既存の非ディレクトリファイルでない場合のみ。</target>
        </trans-unit>
        <trans-unit id="3700ef2eaa5a7011d3f7e0d02c4ae3309bb21da3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;, the path will not be expanded using the variables.</source>
          <target state="translated">&lt;em&gt;expand&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; に設定されている場合、パスは変数を使用して展開されません。</target>
        </trans-unit>
        <trans-unit id="d3d0c579641706b0f541c875d40a987796ca4535" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand&lt;/em&gt; is set to false, the paths will not be expanded.</source>
          <target state="translated">場合は&lt;em&gt;拡大&lt;/em&gt; falseに設定され、パスが展開されません。</target>
        </trans-unit>
        <trans-unit id="950957f8e4ed1166943a35b1541f1f3253fb73bb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; the default task factory will be set. Otherwise, &lt;em&gt;factory&lt;/em&gt; must be a &lt;em&gt;callable&lt;/em&gt; with the signature matching &lt;code&gt;(loop, coro)&lt;/code&gt;, where &lt;em&gt;loop&lt;/em&gt; is a reference to the active event loop, and &lt;em&gt;coro&lt;/em&gt; is a coroutine object. The callable must return a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt;-compatible object.</source>
          <target state="translated">場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; デフォルトのタスクの工場が設定されます。それ以外の場合、&lt;em&gt;factory&lt;/em&gt;はシグネチャマッチング &lt;code&gt;(loop, coro)&lt;/code&gt; で&lt;em&gt;呼び出し可能&lt;/em&gt;でなければなりません。ここで、&lt;em&gt;loop&lt;/em&gt;はアクティブなイベントループへの参照であり、&lt;em&gt;coro&lt;/em&gt;はコルーチンオブジェクトです。呼び出し可能オブジェクトは、&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;互換オブジェクトを返す必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cde1a7a5d298627fbad97256eb936031b2f8b9e2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file&lt;/em&gt; is a string, open the file by that name, otherwise treat it as a file-like object. &lt;em&gt;mode&lt;/em&gt; can be:</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;が文字列の場合、その名前でファイルを開きます。それ以外の場合は、ファイルのようなオブジェクトとして扱います。&lt;em&gt;モード&lt;/em&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="67d175cb8486589a948e2cf74ce3849b7236be76" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file&lt;/em&gt; is not specified, read from &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="49c9ed3d94894a12395907e88bfe7b2901ae44f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_encoding&lt;/em&gt; is not given, it defaults to &lt;em&gt;data_encoding&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;file_encoding&lt;/em&gt;が指定されていない場合、デフォルトで&lt;em&gt;data_encodingになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="76758843e2e5c710ae0a6372d1081e6f9d9e89c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_or_dir&lt;/em&gt; is a directory and not a symbolic link, then recursively descend the directory tree named by &lt;em&gt;file_or_dir&lt;/em&gt;, checking all &lt;code&gt;.py&lt;/code&gt; files along the way. If &lt;em&gt;file_or_dir&lt;/em&gt; is an ordinary Python source file, it is checked for whitespace related problems. The diagnostic messages are written to standard output using the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">場合&lt;em&gt;file_or_dirが&lt;/em&gt;ディレクトリであってシンボリックリンクでない場合、再帰的で指定されたディレクトリツリー降り&lt;em&gt;file_or_dirを&lt;/em&gt;すべてチェックし、 &lt;code&gt;.py&lt;/code&gt; 道に沿ってファイルを。場合&lt;em&gt;file_or_dirは、&lt;/em&gt;通常のPythonのソースファイルで、それが空白関連する問題のためにチェックされています。診断メッセージは、&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数を使用して標準出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="8147d1cd319a466257a1243b03ade84b3c9e406b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filelike&lt;/em&gt; has a &lt;code&gt;close()&lt;/code&gt; method, the returned object will also have a &lt;code&gt;close()&lt;/code&gt; method, and it will invoke the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;close()&lt;/code&gt; method when called.</source>
          <target state="translated">場合&lt;em&gt;filelikeが&lt;/em&gt;持っている &lt;code&gt;close()&lt;/code&gt; メソッドを、返されたオブジェクトもあります &lt;code&gt;close()&lt;/code&gt; メソッドを、それが起動します&lt;em&gt;filelike&lt;/em&gt;オブジェクトの &lt;code&gt;close()&lt;/code&gt; というメソッドを。</target>
        </trans-unit>
        <trans-unit id="48cc1454e821d6920b8394ca56ab7ba76323cb6d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object, open the named file directly. Otherwise, &lt;em&gt;filename&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, which will be used to read or write the compressed data.</source>
          <target state="translated">場合は&lt;em&gt;、ファイル名が&lt;/em&gt;ある&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを、直接という名前のファイルを開きます。それ以外の場合、&lt;em&gt;filename&lt;/em&gt;は、圧縮データの読み取りまたは書き込みに使用される&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="b07d149a1e1e8508bf416df0ffabf52508cd4717" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a file object (rather than an actual file name), a mode of &lt;code&gt;&quot;w&quot;&lt;/code&gt; does not truncate the file, and is instead equivalent to &lt;code&gt;&quot;a&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;、ファイル名は&lt;/em&gt;ファイルオブジェクト（よりむしろ実際のファイル名）、のモードである &lt;code&gt;&quot;w&quot;&lt;/code&gt; ファイルを切り捨て、そして代わりに等価でありません &lt;code&gt;&quot;a&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c18ac97e77df1feec965478ce33eedf1e1130a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a file object (rather than an actual file name), a mode of &lt;code&gt;'w'&lt;/code&gt; does not truncate the file, and is instead equivalent to &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;が（実際のファイル名ではなく）ファイルオブジェクトの場合、モード &lt;code&gt;'w'&lt;/code&gt; はファイルを切り捨てず、代わりに &lt;code&gt;'a'&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4b4caaad3a0e78f58783527b4ec2b5bee1735031" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is specified, open the file in this &lt;a href=&quot;functions#filemodes&quot;&gt;mode&lt;/a&gt;. Defaults to &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル名&lt;/em&gt;を指定した場合は、この&lt;a href=&quot;functions#filemodes&quot;&gt;モードで&lt;/a&gt;ファイルを開きます。デフォルトは &lt;code&gt;'a'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6af85c4bc7806c30929d3ef968f1f66afef5d04c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is specified, use it as the value of the &lt;code&gt;filename&lt;/code&gt; parameter of the &lt;em&gt;Content-Disposition&lt;/em&gt; header.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;が指定されている場合は、それを&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーの &lt;code&gt;filename&lt;/code&gt; パラメーターの値として使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9df42f67fa743cce97d1afbbf64f8287dc75452d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filenames&lt;/em&gt; is a string, a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, it is treated as a single filename. If a file named in &lt;em&gt;filenames&lt;/em&gt; cannot be opened, that file will be ignored. This is designed so that you can specify an iterable of potential configuration file locations (for example, the current directory, the user&amp;rsquo;s home directory, and some system-wide directory), and all existing configuration files in the iterable will be read.</source>
          <target state="translated">場合&lt;em&gt;、ファイル名が&lt;/em&gt;文字列である&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトまたは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;は、単一のファイル名として扱われます。ファイル名で指定された&lt;em&gt;ファイル&lt;/em&gt;を開くことができない場合、そのファイルは無視されます。これは、潜在的な構成ファイルの場所（現在のディレクトリ、ユーザーのホームディレクトリ、システム全体のディレクトリなど）の反復可能オブジェクトを指定できるように設計されており、反復可能ファイル内の既存のすべての構成ファイルが読み取られます。</target>
        </trans-unit>
        <trans-unit id="cb50194f67b844fcbdfed4147a0e69c6aa03bd88" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileno&lt;/em&gt; is specified, the values for &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, and &lt;em&gt;proto&lt;/em&gt; are auto-detected from the specified file descriptor. Auto-detection can be overruled by calling the function with explicit &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, or &lt;em&gt;proto&lt;/em&gt; arguments. This only affects how Python represents e.g. the return value of &lt;a href=&quot;#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.getpeername()&lt;/code&gt;&lt;/a&gt; but not the actual OS resource. Unlike &lt;a href=&quot;#socket.fromfd&quot;&gt;&lt;code&gt;socket.fromfd()&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;fileno&lt;/em&gt; will return the same socket and not a duplicate. This may help close a detached socket using &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;socket.close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;FILENOが&lt;/em&gt;指定されている、の値&lt;em&gt;家族&lt;/em&gt;、&lt;em&gt;タイプ&lt;/em&gt;、および&lt;em&gt;プロトは、&lt;/em&gt;指定されたファイル記述子から自動検出しています。明示的な&lt;em&gt;family&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、または&lt;em&gt;proto&lt;/em&gt;引数を指定して関数を呼び出すことにより、自動検出を無効にすることができます。これは、たとえば、&lt;a href=&quot;#socket.socket.getpeername&quot;&gt; &lt;code&gt;socket.getpeername()&lt;/code&gt; の&lt;/a&gt;戻り値などのPythonの表現方法にのみ影響しますが、実際のOSリソースには影響しません。&lt;a href=&quot;#socket.fromfd&quot;&gt; &lt;code&gt;socket.fromfd()&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;em&gt;fileno&lt;/em&gt;は同じソケットを返し、重複はしません。これは、&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;socket.close()&lt;/code&gt; &lt;/a&gt;を使用して、切り離されたソケットを閉じるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="cad3934c4f6ad00649995ab7289422c5ddfc6d68" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileobj&lt;/em&gt; is given, it is used for reading or writing data. If it can be determined, &lt;em&gt;mode&lt;/em&gt; is overridden by &lt;em&gt;fileobj&lt;/em&gt;&amp;rsquo;s mode. &lt;em&gt;fileobj&lt;/em&gt; will be used from position 0.</source>
          <target state="translated">場合&lt;em&gt;もしfileobjが&lt;/em&gt;与えられ、それがデータを読み書きするために使用されています。判別できる場合、&lt;em&gt;モード&lt;/em&gt;は&lt;em&gt;fileobj&lt;/em&gt;のモードによってオーバーライドされます。&lt;em&gt;fileobj&lt;/em&gt;は位置0から使用されます。</target>
        </trans-unit>
        <trans-unit id="d760e902d1a9a9274ea97101800dd62b508b5620" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileobj&lt;/em&gt; is specified, it is used as an alternative to a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened in binary mode for &lt;em&gt;name&lt;/em&gt;. It is supposed to be at position 0.</source>
          <target state="translated">&lt;em&gt;fileobj&lt;/em&gt;が指定されている場合、それは&lt;em&gt;nameの&lt;/em&gt;バイナリモードで開かれた&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;代替として使用されます。位置0にあるはずです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dae7cbc850bce550396ab6a5e4f90017603d189c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;files&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; the internal data structure is completely rebuilt to its initial default value. This is a stable operation and will produce the same results when called multiple times.</source>
          <target state="translated">&lt;em&gt;files&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、内部データ構造は完全に初期デフォルト値に再構築されます。これは安定した動作であり、複数回呼び出されても同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="342f942c82ec8e80a515a3a240295a1556b0f119" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;first_line&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it indicates the line number that should be reported for the first source line in the disassembled code. Otherwise, the source line information (if any) is taken directly from the disassembled code object.</source>
          <target state="translated">&lt;em&gt;first_line&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、逆アセンブルされたコードの最初のソース行について報告される必要がある行番号を示します。それ以外の場合、ソース行情報（存在する場合）は、逆アセンブルされたコードオブジェクトから直接取得されます。</target>
        </trans-unit>
        <trans-unit id="6e5911d01f22e7a53df624823fe8cad9cc059dfb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fix_imports&lt;/em&gt; is true and &lt;em&gt;protocol&lt;/em&gt; is less than 3, pickle will try to map the new Python 3 names to the old module names used in Python 2, so that the pickle data stream is readable with Python 2.</source>
          <target state="translated">場合&lt;em&gt;fix_importsが&lt;/em&gt; trueで、&lt;em&gt;プロトコルが&lt;/em&gt; 3未満である、漬物は漬物のデータ・ストリームは、Python 2と読めるように、Pythonの2で使われていた古いモジュール名に新しいPythonの3名をマップしようとします。</target>
        </trans-unit>
        <trans-unit id="7c458fcb92551aa4179a0ee8c3ec9f897777d84c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; has another value, then the status of the newsgroup should be considered unknown.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;に別の値がある場合、ニュースグループのステータスは不明と見なされます。</target>
        </trans-unit>
        <trans-unit id="fd5ac0ee5de4a2ac67078bdcdfed8efdc0a7e6d9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, after a few milliseconds, an escape sequence will not be interpreted, and will be left in the input stream as is.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、数ミリ秒後、エスケープシーケンスは解釈されず、入力ストリームにそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="05e2c86e5fa6ae70395c93eb2082fe2efd1b66ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, curses no longer considers using the hardware insert/delete character feature of the terminal; if &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, use of character insertion and deletion is enabled. When curses is first initialized, use of character insert/delete is enabled by default.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、cursesは端末のハードウェア挿入/削除文字機能の使用を考慮しなくなります。場合&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、文字の挿入と削除の使用が有効になっています。cursesが最初に初期化されるとき、文字の挿入/削除の使用はデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="93111a903d42affcb1b92cdf76c31a4ded5864f7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, cursor will always be at &amp;ldquo;cursor position&amp;rdquo; after an update.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、更新後、カーソルは常に「カーソル位置」にあります。</target>
        </trans-unit>
        <trans-unit id="927b0ac6123fcfbd9d4b43d6b6a0df82d95c5b38" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the effect is the same as calling &lt;a href=&quot;#curses.noqiflush&quot;&gt;&lt;code&gt;noqiflush()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, or no argument is provided, the queues will be flushed when these control characters are read.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; 、効果が呼び出した場合と同じである&lt;a href=&quot;#curses.noqiflush&quot;&gt; &lt;code&gt;noqiflush()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、または引数が指定されていない場合、これらの制御文字が読み取られるときにキューがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="dc34adf1b0cd9cd2daf9fae31e473262b7ba2c27" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will be non-blocking.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;は非ブロッキングになります。</target>
        </trans-unit>
        <trans-unit id="7b4b0114fea39b01c456c42a03e99b9d6724d928" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; will try and use hardware line editing facilities. Otherwise, line insertion/deletion are disabled.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;はハードウェア行編集機能を使用しようとします。それ以外の場合、行の挿入/削除は無効になります。</target>
        </trans-unit>
        <trans-unit id="76906428c5886677b5bf5a701073b0866ac9c47c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, allow 8-bit characters to be input. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, allow only 7-bit chars.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、8ビット文字を入力することを可能にします。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、7ビット文字のみを許可します。</target>
        </trans-unit>
        <trans-unit id="06fc114a8ed7cdc8c7c9f51b3779e8ccf43597dc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, any change in the window image automatically causes the window to be refreshed; you no longer have to call &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; yourself. However, it may degrade performance considerably, due to repeated calls to wrefresh. This option is disabled by default.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、ウィンドウイメージの変更により、ウィンドウが自動的に更新されます。自分で&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;を呼び出す必要はありません。ただし、wrefreshを繰り返し呼び出すため、パフォーマンスが大幅に低下する可能性があります。このオプションはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="06be27fe5690b343d7c782f196aedecd59d5593b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, cursor is left where it is on update, instead of being at &amp;ldquo;cursor position.&amp;rdquo; This reduces cursor movement where possible. If possible the cursor will be made invisible.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、カーソルは「カーソル位置」ではなく、更新時のままになります。これにより、可能な場合はカーソルの移動が減少します。可能な場合、カーソルは非表示になります。</target>
        </trans-unit>
        <trans-unit id="e8f3b65bf56ecd36575c4c78068a2150d9cf1c52" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, escape sequences generated by some keys (keypad, function keys) will be interpreted by &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, escape sequences will be left as is in the input stream.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、一部のキー（キーパッド、ファンクションキー）によって生成されたエスケープシーケンスは&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;によって解釈されます。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、エスケープシーケンスは入力ストリームにそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="a2a9d18c81906fc88496c93e2ee95c2ec1e7a5f5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, escape sequences will not be timed out.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、エスケープシーケンスはタイムアウトしません。</target>
        </trans-unit>
        <trans-unit id="ffb0dbfa616feb4ae93cd41e04da978adc1b3014" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; will clear the window completely.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、次の呼び出し&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;はウィンドウを完全に消去します。</target>
        </trans-unit>
        <trans-unit id="a8c3c261a3289123c7ec484215dd4ac72bcaec28" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, then &lt;a href=&quot;#curses.window.syncup&quot;&gt;&lt;code&gt;syncup()&lt;/code&gt;&lt;/a&gt; is called automatically whenever there is a change in the window.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、そして&lt;a href=&quot;#curses.window.syncup&quot;&gt; &lt;code&gt;syncup()&lt;/code&gt; &lt;/a&gt;ウィンドウに変更があるたびに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="54238747de3a909db924c82086364dce0b3b6035" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is true, turn debugging on. Otherwise, turn debugging off. When debugging is on, commands to be executed are printed, and the shell is given &lt;code&gt;set -x&lt;/code&gt; command to be more verbose.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt; trueで、デバッグをオンにします。それ以外の場合は、デバッグをオフにします。デバッグがオンの場合、実行されるコマンドが出力され、シェルには &lt;code&gt;set -x&lt;/code&gt; コマンドが与えられ、より冗長になります。</target>
        </trans-unit>
        <trans-unit id="0a676f79bdec3d8d55c49f7b6418938f946ea982" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fmt&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, use the following default &lt;em&gt;fmt&lt;/em&gt;:</source>
          <target state="translated">場合&lt;em&gt;FMTは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、次のデフォルトの使用&lt;em&gt;FMTを&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3b5abf51d5e979202e366a84df39077b1602bd52" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, return &lt;code&gt;True&lt;/code&gt; only if this entry is a directory (without following symlinks); return &lt;code&gt;False&lt;/code&gt; if the entry is any other kind of file or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を返す &lt;code&gt;True&lt;/code&gt; このエントリがディレクトリで（次のシンボリックリンクなし）の場合のみ。エントリが他の種類のファイルであるか、存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b449d1a838bf30bc8e83f6404dc93c18180c4e9b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, return &lt;code&gt;True&lt;/code&gt; only if this entry is a file (without following symlinks); return &lt;code&gt;False&lt;/code&gt; if the entry is a directory or other non-file entry, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を返す &lt;code&gt;True&lt;/code&gt; このエントリは（シンボリックリンクを以下なし）のファイルである場合にのみ、エントリがディレクトリまたはその他のファイル以外のエントリである場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c810ead4934973b38f7ba460ecc6b76eb321e40" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false and &lt;em&gt;src&lt;/em&gt; is a symbolic link, a new symbolic link will be created instead of copying the file &lt;em&gt;src&lt;/em&gt; points to.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;srcが&lt;/em&gt;シンボリックリンクで、新しいシンボリックリンクは、ファイルのコピーの代わりに作成される&lt;em&gt;のsrc&lt;/em&gt;にポイントを。</target>
        </trans-unit>
        <trans-unit id="3791f9b1ad913c64dfe3c483d0e89806dc737039" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false, and &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; both refer to symbolic links, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; will operate on the symbolic links themselves rather than the files the symbolic links refer to&amp;mdash;reading the information from the &lt;em&gt;src&lt;/em&gt; symbolic link, and writing the information to the &lt;em&gt;dst&lt;/em&gt; symbolic link.</source>
          <target state="translated">もし&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;SRC&lt;/em&gt;と&lt;em&gt;DST&lt;/em&gt;シンボリックリンクを参照してください両方&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; は&lt;/a&gt;シンボリックリンクがへの読み取りからの情報を参照するファイルではなくシンボリックリンクそのものを操作します&lt;em&gt;SRC&lt;/em&gt;シンボリックリンク、とに情報を書き込みます&lt;em&gt;dst&lt;/em&gt;シンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="05aea198a5b1eab18e23d436268151142cdfb7c9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false, and &lt;em&gt;src&lt;/em&gt; is a symbolic link, &lt;em&gt;dst&lt;/em&gt; will be created as a symbolic link. If &lt;em&gt;follow_symlinks&lt;/em&gt; is true and &lt;em&gt;src&lt;/em&gt; is a symbolic link, &lt;em&gt;dst&lt;/em&gt; will be a copy of the file &lt;em&gt;src&lt;/em&gt; refers to.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;srcは&lt;/em&gt;シンボリックリンクで、&lt;em&gt;DSTは&lt;/em&gt;シンボリックリンクとして作成されます。場合&lt;em&gt;follow_symlinksが&lt;/em&gt; trueで、&lt;em&gt;srcが&lt;/em&gt;シンボリックリンクで、&lt;em&gt;DSTは、&lt;/em&gt;ファイルのコピーとなります&lt;em&gt;srcは&lt;/em&gt;を指します。</target>
        </trans-unit>
        <trans-unit id="ad63af89430c98aa694c40b5d47925c5c967f84b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;force&lt;/em&gt; is true, modules are re-compiled even if the timestamps are up to date.</source>
          <target state="translated">場合は&lt;em&gt;力が&lt;/em&gt; trueの場合、モジュールはタイムスタンプが最新である場合でも、再コンパイルされます。</target>
        </trans-unit>
        <trans-unit id="db56c32c75e8f39f5a049b963d87f7483bb3f491" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; is specified, use this style for the format string. One of &lt;code&gt;'%'&lt;/code&gt;, &lt;code&gt;'{'&lt;/code&gt; or &lt;code&gt;'$'&lt;/code&gt; for &lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;printf-style&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt; respectively. Defaults to &lt;code&gt;'%'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;が指定されている場合、フォーマット文字列にはこのスタイルを使用します。一つ &lt;code&gt;'%'&lt;/code&gt; 、 &lt;code&gt;'{'&lt;/code&gt; または &lt;code&gt;'$'&lt;/code&gt; のための&lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;printfスタイル&lt;/a&gt;、&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; &lt;/a&gt;それぞれ。デフォルトは &lt;code&gt;'%'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9c993dc4953aefb555e95150b85e635f8eb734c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; requires a single argument, &lt;em&gt;values&lt;/em&gt; may be a single non-tuple object. &lt;a href=&quot;#id16&quot; id=&quot;id10&quot;&gt;5&lt;/a&gt; Otherwise, &lt;em&gt;values&lt;/em&gt; must be a tuple with exactly the number of items specified by the format string, or a single mapping object (for example, a dictionary).</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;が単一の引数を必要とする場合、&lt;em&gt;値&lt;/em&gt;は単一の非タプルオブジェクトである可能性があります。&lt;a href=&quot;#id16&quot; id=&quot;id10&quot;&gt;5&lt;/a&gt;それ以外の場合、&lt;em&gt;値&lt;/em&gt;は、フォーマット文字列で指定されたアイテム数と同じタプル、または単一のマッピングオブジェクト（たとえば、ディクショナリ）である必要があります。</target>
        </trans-unit>
        <trans-unit id="7bc9128599baccee2d3226e85c7c2b9cc2cb9b2f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; requires a single argument, &lt;em&gt;values&lt;/em&gt; may be a single non-tuple object. &lt;a href=&quot;#id16&quot; id=&quot;id11&quot;&gt;5&lt;/a&gt; Otherwise, &lt;em&gt;values&lt;/em&gt; must be a tuple with exactly the number of items specified by the format bytes object, or a single mapping object (for example, a dictionary).</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;が単一の引数を必要とする場合、&lt;em&gt;値&lt;/em&gt;は単一の非タプルオブジェクトである可能性があります。&lt;a href=&quot;#id16&quot; id=&quot;id11&quot;&gt;5&lt;/a&gt;それ以外の場合、&lt;em&gt;値&lt;/em&gt;は、バイト形式オブジェクトで指定されたアイテム数と同じタプル、または単一のマッピングオブジェクト（ディクショナリなど）である必要があります。</target>
        </trans-unit>
        <trans-unit id="d48e3331edd32ebb17d2aa8d9c936c8508567fe2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;from_addr&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or &lt;em&gt;to_addrs&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;send_message&lt;/code&gt; fills those arguments with addresses extracted from the headers of &lt;em&gt;msg&lt;/em&gt; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;from_addr&lt;/em&gt; is set to the &lt;em&gt;Sender&lt;/em&gt; field if it is present, and otherwise to the &lt;em&gt;From&lt;/em&gt; field. &lt;em&gt;to_addrs&lt;/em&gt; combines the values (if any) of the &lt;em&gt;To&lt;/em&gt;, &lt;em&gt;Cc&lt;/em&gt;, and &lt;em&gt;Bcc&lt;/em&gt; fields from &lt;em&gt;msg&lt;/em&gt;. If exactly one set of &lt;em&gt;Resent-*&lt;/em&gt; headers appear in the message, the regular headers are ignored and the &lt;em&gt;Resent-*&lt;/em&gt; headers are used instead. If the message contains more than one set of &lt;em&gt;Resent-*&lt;/em&gt; headers, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised, since there is no way to unambiguously detect the most recent set of &lt;em&gt;Resent-&lt;/em&gt; headers.</source>
          <target state="translated">場合&lt;em&gt;from_addrは&lt;/em&gt;しない &lt;code&gt;None&lt;/code&gt; 又は&lt;em&gt;to_addrs&lt;/em&gt;しない &lt;code&gt;None&lt;/code&gt; 、 &lt;code&gt;send_message&lt;/code&gt; 塗りつぶしのヘッダから抽出されたアドレスを持つこれらの引数&lt;em&gt;MSG&lt;/em&gt;で指定されるように&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;：&lt;em&gt;from_addrが&lt;/em&gt;に設定されている&lt;em&gt;送信者&lt;/em&gt;が存在し、そうでないのであれば、フィールド&lt;em&gt;から&lt;/em&gt;フィールド。&lt;em&gt;to_addrs&lt;/em&gt;は、&lt;em&gt;msgの&lt;/em&gt;&lt;em&gt;To&lt;/em&gt;、&lt;em&gt;Cc&lt;/em&gt;、および&lt;em&gt;Bcc&lt;/em&gt;フィールドの値（存在する場合）を組み合わせます。&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーが1セットだけメッセージに表示される場合、通常のヘッダーは無視され、&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;代わりに&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーが使用されます。メッセージに複数の&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーのセットが含まれている場合、最新の&lt;em&gt;Resent-&lt;/em&gt;ヘッダーのセットを明確に検出する方法がないため、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feea519ba7ec87396ed4869230c2a276f4279c66" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;func&lt;/em&gt; is supplied, it should be a function of two arguments. Elements of the input &lt;em&gt;iterable&lt;/em&gt; may be any type that can be accepted as arguments to &lt;em&gt;func&lt;/em&gt;. (For example, with the default operation of addition, elements may be any addable type including &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt;を指定する場合は、2つの引数の関数でなければなりません。入力&lt;em&gt;イテラブルの&lt;/em&gt;要素は、&lt;em&gt;funcの&lt;/em&gt;引数として受け入れることができる任意の型にすることができます。（たとえば、デフォルトの加算演算では、要素は&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;を含む任意の追加可能なタイプになる可能性があります。）</target>
        </trans-unit>
        <trans-unit id="164544b1932b60456584e8f1c72c01d2623fcbf2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;gen_func&lt;/em&gt; is a generator function, it will be modified in-place.</source>
          <target state="translated">&lt;em&gt;gen_func&lt;/em&gt;がジェネレーター関数の場合は、インプレースで変更されます。</target>
        </trans-unit>
        <trans-unit id="ae0ede519983eaf3ab2b7313089869e4e7d5c637" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;gen_func&lt;/em&gt; is not a generator function, it will be wrapped. If it returns an instance of &lt;a href=&quot;collections.abc#collections.abc.Generator&quot;&gt;&lt;code&gt;collections.abc.Generator&lt;/code&gt;&lt;/a&gt;, the instance will be wrapped in an &lt;em&gt;awaitable&lt;/em&gt; proxy object. All other types of objects will be returned as is.</source>
          <target state="translated">&lt;em&gt;gen_func&lt;/em&gt;がジェネレーター関数でない場合は、ラップされます。&lt;a href=&quot;collections.abc#collections.abc.Generator&quot;&gt; &lt;code&gt;collections.abc.Generator&lt;/code&gt; の&lt;/a&gt;インスタンスを返す場合、そのインスタンスは&lt;em&gt;待機可能な&lt;/em&gt;プロキシオブジェクトにラップされます。他のすべてのタイプのオブジェクトはそのまま返されます。</target>
        </trans-unit>
        <trans-unit id="cf24817a5521bbff63768774eb4199f2d3c3e247" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;generator&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; with no currently associated frame, then an empty dictionary is returned. &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;generator&lt;/em&gt; is not a Python generator object.</source>
          <target state="translated">場合&lt;em&gt;ジェネレータが&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;ない現在関連付けられているフレームと、空の辞書が返されます。&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;ジェネレータ&lt;/em&gt;がPythonジェネレータオブジェクトでない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="46bc5fd0aa6bec8a23e0345b1203f16848d81f41" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;handler&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the default exception handler will be set. Otherwise, &lt;em&gt;handler&lt;/em&gt; must be a callable with the signature matching &lt;code&gt;(loop, context)&lt;/code&gt;, where &lt;code&gt;loop&lt;/code&gt; is a reference to the active event loop, and &lt;code&gt;context&lt;/code&gt; is a &lt;code&gt;dict&lt;/code&gt; object containing the details of the exception (see &lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt;&lt;code&gt;call_exception_handler()&lt;/code&gt;&lt;/a&gt; documentation for details about context).</source>
          <target state="translated">場合&lt;em&gt;ハンドラは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、デフォルトの例外ハンドラが設定されます。それ以外の場合、&lt;em&gt;ハンドラー&lt;/em&gt;はシグニチャーマッチング &lt;code&gt;(loop, context)&lt;/code&gt; で呼び出し可能でなければなりません。ここで、 &lt;code&gt;loop&lt;/code&gt; はアクティブなイベントループへの参照であり、 &lt;code&gt;context&lt;/code&gt; は例外の詳細を含む &lt;code&gt;dict&lt;/code&gt; オブジェクト&lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt; &lt;code&gt;call_exception_handler()&lt;/code&gt; &lt;/a&gt;コンテキストの詳細については、call_exception_handler（）のドキュメントを参照））。</target>
        </trans-unit>
        <trans-unit id="f0f448033d3ee18b041c00dcd5e55dde7d7efa40" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; contains neither Content-Length nor Transfer-Encoding, but there is a request body, one of those header fields will be added automatically. If &lt;em&gt;body&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the Content-Length header is set to &lt;code&gt;0&lt;/code&gt; for methods that expect a body (&lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, and &lt;code&gt;PATCH&lt;/code&gt;). If &lt;em&gt;body&lt;/em&gt; is a string or a bytes-like object that is not also a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file&lt;/a&gt;, the Content-Length header is set to its length. Any other type of &lt;em&gt;body&lt;/em&gt; (files and iterables in general) will be chunk-encoded, and the Transfer-Encoding header will automatically be set instead of Content-Length.</source>
          <target state="translated">場合は&lt;em&gt;、ヘッダーは&lt;/em&gt;どちらのContent-Lengthも転送エンコーディングが含まれていますが、リクエストボディがあり、それらのヘッダフィールドの一つが自動的に追加されます。&lt;em&gt;body&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、本文を期待するメソッド（ &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、および &lt;code&gt;PATCH&lt;/code&gt; ）のContent-Lengthヘッダーは &lt;code&gt;0&lt;/code&gt; に設定されます。場合&lt;em&gt;本体は&lt;/em&gt;文字列やバイトのようなオブジェクトにもないからである&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイル&lt;/a&gt;、Content-Lengthヘッダは、その長さに設定されています。その他のタイプの&lt;em&gt;ボディ&lt;/em&gt;（一般にファイルと反復可能ファイル）はチャンクエンコードされ、Content-Lengthの代わりにTransfer-Encodingヘッダーが自動的に設定されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5623776bc8cb206e64b194eac78038ac0ca5ac63" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; is specified and is a list of strings of the form &lt;code&gt;headername: headervalue&lt;/code&gt; or a list of &lt;code&gt;header&lt;/code&gt; objects (distinguished from strings by having a &lt;code&gt;name&lt;/code&gt; attribute), add the headers to &lt;em&gt;msg&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;ヘッダが&lt;/em&gt;指定されたフォームの文字列のリストである &lt;code&gt;headername: headervalue&lt;/code&gt; 又はリスト &lt;code&gt;header&lt;/code&gt; （持つことで文字列と区別オブジェクト &lt;code&gt;name&lt;/code&gt; 属性）が、にヘッダーを追加&lt;em&gt;MSG&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="67f11944e8694918226bb92f8c98cd866fee3ff0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;hkey&lt;/em&gt; is not closed using this method (or via &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;hkey.Close()&lt;/code&gt;&lt;/a&gt;), it is closed when the &lt;em&gt;hkey&lt;/em&gt; object is destroyed by Python.</source>
          <target state="translated">場合&lt;em&gt;HKEYは&lt;/em&gt;この方法を使用して閉じられていない（または経由&lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;hkey.Close()&lt;/code&gt; &lt;/a&gt;）において、それが閉じている&lt;em&gt;HKEYの&lt;/em&gt;オブジェクトはPythonによって破壊されます。</target>
        </trans-unit>
        <trans-unit id="0fe3a2ba8d8de975e9e62d14d77fcd64824c3a2c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is a sequence of strings, the TCP server is bound to all network interfaces specified by the sequence.</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt;が文字列のシーケンスである場合、TCPサーバーはシーケンスで指定されたすべてのネットワークインターフェイスにバインドされます。</target>
        </trans-unit>
        <trans-unit id="3f345f9c27305214c887b3eec3da087bc1be8192" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is a string, the TCP server is bound to a single network interface specified by &lt;em&gt;host&lt;/em&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、ホストが&lt;/em&gt;文字列で、TCPサーバーはで指定された単一のネットワークインタフェースにバインドされ&lt;em&gt;たホスト&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f9d505cd78099d9626b9c1d857032185127ef87" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is an empty string or &lt;code&gt;None&lt;/code&gt;, all interfaces are assumed and a list of multiple sockets will be returned (most likely one for IPv4 and another one for IPv6).</source>
          <target state="translated">場合&lt;em&gt;ホストは&lt;/em&gt;空の文字列またはある &lt;code&gt;None&lt;/code&gt; 、すべてのインターフェイスは、（ほとんどのIPv4用とIPv6の別のもの）と仮定され、複数のソケットのリストが返されます。</target>
        </trans-unit>
        <trans-unit id="7cc492cbe67d58bcc667802df9fc3fe37624b350" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;i&lt;/em&gt; or &lt;em&gt;j&lt;/em&gt; is negative, the index is relative to the end of sequence &lt;em&gt;s&lt;/em&gt;: &lt;code&gt;len(s) + i&lt;/code&gt; or &lt;code&gt;len(s) + j&lt;/code&gt; is substituted. But note that &lt;code&gt;-0&lt;/code&gt; is still &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;I&lt;/em&gt;または&lt;em&gt;jが&lt;/em&gt;負であり、インデックスは、シーケンスの終わりに相対的である&lt;em&gt;S&lt;/em&gt;： &lt;code&gt;len(s) + i&lt;/code&gt; または &lt;code&gt;len(s) + j&lt;/code&gt; 置換されています。ただし、 &lt;code&gt;-0&lt;/code&gt; はまだ &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="44afe41d193d3ce2b1d38185232d5624b2955990" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ignore&lt;/em&gt; is given, it must be a callable that will receive as its arguments the directory being visited by &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, and a list of its contents, as returned by &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;. Since &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; is called recursively, the &lt;em&gt;ignore&lt;/em&gt; callable will be called once for each directory that is copied. The callable must return a sequence of directory and file names relative to the current directory (i.e. a subset of the items in its second argument); these names will then be ignored in the copy process. &lt;a href=&quot;#shutil.ignore_patterns&quot;&gt;&lt;code&gt;ignore_patterns()&lt;/code&gt;&lt;/a&gt; can be used to create such a callable that ignores names based on glob-style patterns.</source>
          <target state="translated">場合は&lt;em&gt;無視&lt;/em&gt;与えられ、それがが訪問されているディレクトリの引数として受け取ります呼び出し可能でなければなりません&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;で返されると、その内容のリスト&lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt;。以来&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;、再帰的に呼び出され&lt;em&gt;、無視&lt;/em&gt;呼び出し可能がコピーされるディレクトリごとに一度呼び出されます。呼び出し可能オブジェクトは、現在のディレクトリ（つまり、2番目の引数の項目のサブセット）に関連する一連のディレクトリとファイル名を返す必要があります。これらの名前は、コピープロセスでは無視されます。&lt;a href=&quot;#shutil.ignore_patterns&quot;&gt; &lt;code&gt;ignore_patterns()&lt;/code&gt; &lt;/a&gt;を使用して、globスタイルのパターンに基づく名前を無視するような呼び出し可能オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="d785f3192b45198013e900cff1faf46eb9fbd317" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ignore_zeros&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, treat an empty block as the end of the archive. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, skip empty (and invalid) blocks and try to get as many members as possible. This is only useful for reading concatenated or damaged archives.</source>
          <target state="translated">&lt;em&gt;ignore_zeros&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、空のブロックをアーカイブの終わりとして扱います。&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、空の（および無効な）ブロックをスキップして、できるだけ多くのメンバーを取得しようとします。これは、連結または破損したアーカイブを読み取る場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="a4a7904c070e056ee4cfdf2fa61877eb76ea87e7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (exclude), ignore memory blocks allocated in a file with a name matching &lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt;&lt;code&gt;filename_pattern&lt;/code&gt;&lt;/a&gt; at line number &lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;包括的で&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （除外）、名前マッチングのファイルに割り当てられたメモリ・ブロックを無視&lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt; &lt;code&gt;filename_pattern&lt;/code&gt; &lt;/a&gt;行番号で&lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b63248eefccbe6a3d667aec993979939e6087d1e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (exclude), match memory blocks not allocated in the address space &lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; （除外）の場合、アドレススペース&lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;割り当てられていないメモリブロックに一致します。</target>
        </trans-unit>
        <trans-unit id="49de2929ffeb92d24b9cb57a7b7a1ea592c5170b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (include), match memory blocks allocated in the address space &lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （インクルード）の場合、アドレススペース&lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;割り当てられたメモリブロックを照合します。</target>
        </trans-unit>
        <trans-unit id="0dcfc5893b04256daaa03f0059c6ea1a4e39d096" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (include), only match memory blocks allocated in a file with a name matching &lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt;&lt;code&gt;filename_pattern&lt;/code&gt;&lt;/a&gt; at line number &lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （インクルード）の場合、ファイルに割り当てられたメモリブロックと、行番号&lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt; &lt;code&gt;filename_pattern&lt;/code&gt; &lt;/a&gt;に一致する名前のファイルにのみ一致します。</target>
        </trans-unit>
        <trans-unit id="58fc395684d347d785cfee92daad9292f6d2e8a8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;indent&lt;/em&gt; is a non-negative integer or string, then JSON array elements and object members will be pretty-printed with that indent level. An indent level of 0, negative, or &lt;code&gt;&quot;&quot;&lt;/code&gt; will only insert newlines. &lt;code&gt;None&lt;/code&gt; (the default) selects the most compact representation. Using a positive integer indent indents that many spaces per level. If &lt;em&gt;indent&lt;/em&gt; is a string (such as &lt;code&gt;&quot;\t&quot;&lt;/code&gt;), that string is used to indent each level.</source>
          <target state="translated">場合&lt;em&gt;インデントは、&lt;/em&gt;非負整数または文字列であり、その後、JSONの配列要素とオブジェクトメンバはそのインデントレベルでかなり-印刷されます。インデントレベルが0、負、または &lt;code&gt;&quot;&quot;&lt;/code&gt; の場合、改行のみが挿入されます。 &lt;code&gt;None&lt;/code&gt; （デフォルト）は、最もコンパクトな表現を選択します。正の整数のインデントを使用すると、レベルごとに多くのスペースがインデントされます。場合&lt;em&gt;インデントは、&lt;/em&gt;（例えば、文字列である &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ）、その文字列は、各レベルをインデントするために使用されます。</target>
        </trans-unit>
        <trans-unit id="685f4df3ebb7bcdd656a69b4b08c67818137a416" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;infile&lt;/em&gt; is not specified, read from &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;infile&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="af42a72d9390faa93a1048c54ee6e3245c21c2a3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;initializer&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; then each worker process will call &lt;code&gt;initializer(*initargs)&lt;/code&gt; when it starts.</source>
          <target state="translated">&lt;em&gt;初期化子&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、各ワーカープロセスは起動時に &lt;code&gt;initializer(*initargs)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fc855a607663f5eac05d5c21762309db29ce88bf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;input&lt;/em&gt; is given, it is passed to the &lt;a href=&quot;#http.cookies.BaseCookie.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">場合&lt;em&gt;入力が&lt;/em&gt;与えられ、それに渡される&lt;a href=&quot;#http.cookies.BaseCookie.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="2b8380ea7e230485aa00a5b7a9d5e448bafe1787" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isjunk&lt;/em&gt; was omitted or &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#difflib.SequenceMatcher.find_longest_match&quot;&gt;&lt;code&gt;find_longest_match()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;(i, j, k)&lt;/code&gt; such that &lt;code&gt;a[i:i+k]&lt;/code&gt; is equal to &lt;code&gt;b[j:j+k]&lt;/code&gt;, where &lt;code&gt;alo
&amp;lt;= i &amp;lt;= i+k &amp;lt;= ahi&lt;/code&gt; and &lt;code&gt;blo &amp;lt;= j &amp;lt;= j+k &amp;lt;= bhi&lt;/code&gt;. For all &lt;code&gt;(i', j',
k')&lt;/code&gt; meeting those conditions, the additional conditions &lt;code&gt;k &amp;gt;= k'&lt;/code&gt;, &lt;code&gt;i
&amp;lt;= i'&lt;/code&gt;, and if &lt;code&gt;i == i'&lt;/code&gt;, &lt;code&gt;j &amp;lt;= j'&lt;/code&gt; are also met. In other words, of all maximal matching blocks, return one that starts earliest in &lt;em&gt;a&lt;/em&gt;, and of all those maximal matching blocks that start earliest in &lt;em&gt;a&lt;/em&gt;, return the one that starts earliest in &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;isjunk&lt;/em&gt;が省略された場合、または &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#difflib.SequenceMatcher.find_longest_match&quot;&gt; &lt;code&gt;find_longest_match()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;a[i:i+k]&lt;/code&gt; が &lt;code&gt;b[j:j+k]&lt;/code&gt; と等しくなるように &lt;code&gt;(i, j, k)&lt;/code&gt; ）を返します。ここで &lt;code&gt;alo &amp;lt;= i &amp;lt;= i+k &amp;lt;= ahi&lt;/code&gt; and &lt;code&gt;blo &amp;lt;= j &amp;lt;= j+k &amp;lt;= bhi&lt;/code&gt; です。これらの条件を満たすすべての &lt;code&gt;(i', j', k')&lt;/code&gt; について、追加の条件 &lt;code&gt;k &amp;gt;= k'&lt;/code&gt; 、 &lt;code&gt;i &amp;lt;= i'&lt;/code&gt; 、および &lt;code&gt;i == i'&lt;/code&gt; 場合、 &lt;code&gt;j &amp;lt;= j'&lt;/code&gt; も満たされます。言い換えれば、すべての最大のマッチングブロックで最初に始まる復帰1の、そして最も早い開始すべてのそれらの最大のマッチングブロックの&lt;em&gt;Aを&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;、&lt;em&gt;bで&lt;/em&gt;最初に始まるものを返します。</target>
        </trans-unit>
        <trans-unit id="75fee0a269e631f121c00c49961541eaff1b3b2d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isjunk&lt;/em&gt; was provided, first the longest matching block is determined as above, but with the additional restriction that no junk element appears in the block. Then that block is extended as far as possible by matching (only) junk elements on both sides. So the resulting block never matches on junk except as identical junk happens to be adjacent to an interesting match.</source>
          <target state="translated">&lt;em&gt;isjunk&lt;/em&gt;が提供された場合、最初に上記のように最長一致ブロックが決定されますが、ブロックにジャンク要素が表示されないという追加の制限があります。次に、そのブロックは、両側のジャンク要素（のみ）を一致させることによって、可能な限り拡張されます。そのため、同じジャンクが興味深いマッチに隣接している場合を除いて、結果のブロックはジャンクにマッチしません。</target>
        </trans-unit>
        <trans-unit id="ab8363bacc86dbccdda686c60e9f57e64899a0a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is not specified, returns root children.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されていない場合、ルートの子を返します。</target>
        </trans-unit>
        <trans-unit id="640e4676019d2f35b4e680f21a70d725650c2978" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is specified, returns 1 or 0 depending on whether the specified &lt;em&gt;item&lt;/em&gt; has the given &lt;em&gt;tagname&lt;/em&gt;. Otherwise, returns a list of all items that have the specified tag.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されている場合、指定された&lt;em&gt;項目&lt;/em&gt;に指定された&lt;em&gt;tagname&lt;/em&gt;があるかどうかに応じて、1または0を返します。それ以外の場合は、指定されたタグを持つすべてのアイテムのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e440a41e05f93e2a1c6c6399b8430876ac4585da" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is specified, sets the focus item to &lt;em&gt;item&lt;/em&gt;. Otherwise, returns the current focus item, or &amp;lsquo;&amp;rsquo; if there is none.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されている場合、フォーカス項目を&lt;em&gt;itemに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。それ以外の場合は、現在のフォーカス項目を返すか、存在しない場合は ''を返します。</target>
        </trans-unit>
        <trans-unit id="4bf186b875e926737f447fba52ea416adfe07ffd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;k&lt;/em&gt; is not specified or is None, then &lt;em&gt;k&lt;/em&gt; defaults to &lt;em&gt;n&lt;/em&gt; and the function returns &lt;code&gt;n!&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;kが&lt;/em&gt;指定されるか、またはNoneですされていない場合、&lt;em&gt;k個&lt;/em&gt;にデフォルトを&lt;em&gt;n個&lt;/em&gt;と関数が戻る &lt;code&gt;n!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e0d95fc7b381f24c17900b74659214f4eeca1c2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;keepends&lt;/em&gt; is false line-endings will be stripped from the lines returned.</source>
          <target state="translated">&lt;em&gt;keepends&lt;/em&gt;がfalseの場合、返される行から&lt;em&gt;行末&lt;/em&gt;が削除されます。</target>
        </trans-unit>
        <trans-unit id="344b03a8bbb6978f881befbb3ab7e00dbc466836" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is a handle returned by &lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt;&lt;code&gt;ConnectRegistry()&lt;/code&gt;&lt;/a&gt;, then the path specified in &lt;em&gt;file_name&lt;/em&gt; is relative to the remote computer.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;が&lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt; &lt;code&gt;ConnectRegistry()&lt;/code&gt; &lt;/a&gt;によって返されたハンドルである場合、&lt;em&gt;file_name&lt;/em&gt;で指定されたパスはリモートコンピューターからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="ab3be292f079b8eebf6e1f757e8daea0ea1d6b83" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is in the dictionary, remove it and return its value, else return &lt;em&gt;default&lt;/em&gt;. If &lt;em&gt;default&lt;/em&gt; is not given and &lt;em&gt;key&lt;/em&gt; is not in the dictionary, a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;キー&lt;/em&gt;が辞書にある場合は、削除してその値を返し、そうでない&lt;em&gt;場合はdefaultを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。場合は&lt;em&gt;、デフォルトが&lt;/em&gt;与えられていないとされ&lt;em&gt;たキーが&lt;/em&gt;辞書にない、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="aa8380eba14f04ad4419f7fe956d6020b048af57" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is in the dictionary, return its value. If not, insert &lt;em&gt;key&lt;/em&gt; with a value of &lt;em&gt;default&lt;/em&gt; and return &lt;em&gt;default&lt;/em&gt;. &lt;em&gt;default&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、キーが&lt;/em&gt;辞書にある、その値を返します。そうでない場合は、&lt;em&gt;デフォルトの&lt;/em&gt;値で&lt;em&gt;キー&lt;/em&gt;を挿入し、&lt;em&gt;デフォルト&lt;/em&gt;を返し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;デフォルトの&lt;/em&gt;デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4d7a7b3cf6e17b5ad90262940a29bd912e9ee0f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is one of the predefined keys, &lt;em&gt;sub_key&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;. In that case, the handle returned is the same key handle passed in to the function.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;が事前定義されたキーの1つである場合、&lt;em&gt;sub_key&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; になることがあります。その場合、返されるハンドルは、関数に渡されるキーハンドルと同じです。</target>
        </trans-unit>
        <trans-unit id="35e9d157870368f01d939d30e1c0a35b6624a0fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; represents a key on a remote computer, the path described by &lt;em&gt;file_name&lt;/em&gt; is relative to the remote computer. The caller of this method must possess the &lt;code&gt;SeBackupPrivilege&lt;/code&gt; security privilege. Note that privileges are different than permissions &amp;ndash; see the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;Conflicts Between User Rights and Permissions documentation&lt;/a&gt; for more details.</source>
          <target state="translated">keyがリモートコンピューター上の&lt;em&gt;キーを&lt;/em&gt;表す場合、&lt;em&gt;file_name&lt;/em&gt;で記述されるパスはリモートコンピューターからの相対パスです。このメソッドの呼び出し元は、 &lt;code&gt;SeBackupPrivilege&lt;/code&gt; セキュリティ特権を所有している必要があります。権限は権限とは異なります。詳細については&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;、ユーザー権限と権限の競合に関するドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="48e0a5a607822047e064bb2a97449353075f69c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are provided, they are used to create an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;キーファイル&lt;/em&gt;と&lt;em&gt;certfileには&lt;/em&gt;提供され、彼らが作成するために使用されている&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e59ed370148bc2a0a46b54a3228d31bb0bd9d0f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the column option values. If &lt;em&gt;option&lt;/em&gt; is specified then the value for that &lt;em&gt;option&lt;/em&gt; is returned. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、列オプション値のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値&lt;em&gt;オプションが&lt;/em&gt;返されます。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="22c41db084d38f1f4e00c46ef68becd286a4c27a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the heading option values. If &lt;em&gt;option&lt;/em&gt; is specified then the value for that &lt;em&gt;option&lt;/em&gt; is returned. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、見出しオプション値のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値&lt;em&gt;オプションが&lt;/em&gt;返されます。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="4d77b28bc9353645c16eb77f2989195d66a0666b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the option settings for &lt;em&gt;tagname&lt;/em&gt;. If &lt;em&gt;option&lt;/em&gt; is specified, returns the value for that &lt;em&gt;option&lt;/em&gt; for the specified &lt;em&gt;tagname&lt;/em&gt;. Otherwise, sets the options to the corresponding values for the given &lt;em&gt;tagname&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、&lt;em&gt;tagnameの&lt;/em&gt;オプション設定のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値を返す&lt;em&gt;オプション&lt;/em&gt;指定のための&lt;em&gt;タグ名を&lt;/em&gt;。それ以外の場合は、オプションを指定された&lt;em&gt;tagnameの&lt;/em&gt;対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="23258f5a93a28264e5494954dc925f4fb9fe94ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dictionary of the tab option values. If &lt;em&gt;option&lt;/em&gt; is specified, returns the value of that &lt;em&gt;option&lt;/em&gt;. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、タブオプション値の辞書を返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、その値を返す&lt;em&gt;オプションを&lt;/em&gt;。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="5223d4b1bee76d3b490192f2e0c760f67a403d03" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;legacy&lt;/em&gt; is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python. The default is to write files to their &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; locations and names, which allows byte-code files from multiple versions of Python to coexist.</source>
          <target state="translated">場合&lt;em&gt;遺産が&lt;/em&gt;真である、バイトコードファイルはPythonの別のバージョンで作成されたバイトコードファイルを上書きする可能性がある、彼らの遺産の場所と名前に書き込まれます。デフォルトでは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147の&lt;/strong&gt;&lt;/a&gt;場所と名前にファイルを書き込みます。これにより、Pythonの複数のバージョンのバイトコードファイルを共存させることができます。</target>
        </trans-unit>
        <trans-unit id="edac46e04363a344725a2ab2e33375a697b6340a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;legacy&lt;/em&gt; is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python. The default is to write files to their &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; locations and names, which allows byte-code files from multiple versions of Python to coexist.</source>
          <target state="translated">場合&lt;em&gt;遺産が&lt;/em&gt;真である、バイトコードファイルはPythonの別のバージョンで作成されたバイトコードファイルを上書きする可能性がある、彼らの遺産の場所と名前に書き込まれます。デフォルトでは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3147の&lt;/strong&gt;&lt;/a&gt;場所と名前にファイルを書き込みます。これにより、Pythonの複数のバージョンのバイトコードファイルを共存させることができます。</target>
        </trans-unit>
        <trans-unit id="1f4f479018d14901ee93b65aaa185ab78cef0218" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is supplied, only this many frames are taken from &lt;em&gt;frame_gen&lt;/em&gt;. If &lt;em&gt;lookup_lines&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the returned &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects will not have read their lines in yet, making the cost of creating the &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; cheaper (which may be valuable if it may not actually get formatted). If &lt;em&gt;capture_locals&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; the local variables in each &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; are captured as object representations.</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt;が指定されている場合、この数のフレームのみが&lt;em&gt;frame_gen&lt;/em&gt;から&lt;em&gt;取得&lt;/em&gt;され&lt;em&gt;ます&lt;/em&gt;。場合&lt;em&gt;lookup_linesが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、返さ&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;オブジェクトは作成のコストなって、まだで自分のラインを読んだことがないであろう&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; を&lt;/a&gt;安く（それは実際にフォーマットされないことがあれば貴重であるかもしれません）。場合&lt;em&gt;capture_localsが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; それぞれのローカル変数&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; は、&lt;/a&gt;オブジェクト表現として取り込まれます。</target>
        </trans-unit>
        <trans-unit id="9ab87e10d3d835d14c47f616a3c51abbf809ee1f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_buffering&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;flush()&lt;/code&gt; is implied when a call to write contains a newline character or a carriage return.</source>
          <target state="translated">場合&lt;em&gt;line_bufferingが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;flush()&lt;/code&gt; 書き込みの呼び出しが改行文字やキャリッジリターンが含まれている場合に暗示されます。</target>
        </trans-unit>
        <trans-unit id="723be276409e68c389387a7fa507f58dd05a3b3c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_info&lt;/em&gt; is true, line number information will be included for all terminal tokens as a third element of the list representing the token. Note that the line number provided specifies the line on which the token &lt;em&gt;ends&lt;/em&gt;. This information is omitted if the flag is false or omitted.</source>
          <target state="translated">場合&lt;em&gt;line_infoが&lt;/em&gt;真である、行番号情報は、トークンを表すリストの3番目の要素として全ての端末のトークンのために含まれます。提供される行番号は、トークンが&lt;em&gt;終了&lt;/em&gt;する行を指定することに注意してください。フラグがfalseまたは省略されている場合、この情報は省略されます。</target>
        </trans-unit>
        <trans-unit id="a4aca6b106e2f5c8314da4294c104be01489c777" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_info&lt;/em&gt; is true, line number information will be included for all terminal tokens as a third element of the list representing the token. This information is omitted if the flag is false or omitted.</source>
          <target state="translated">場合&lt;em&gt;line_infoが&lt;/em&gt;真である、行番号情報は、トークンを表すリストの3番目の要素として全ての端末のトークンのために含まれます。フラグがfalseまたは省略されている場合、この情報は省略されます。</target>
        </trans-unit>
        <trans-unit id="33fc9ad31dc069d4994bc5cc54acaf1808e638de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;linesep&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, use it as the separator character between all the lines of the flattened message. If &lt;em&gt;linesep&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), use the value specified in the &lt;em&gt;policy&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;linesep&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それをフラット化されたメッセージのすべての行の間の区切り文字として使用します。場合&lt;em&gt;linesepは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; （デフォルト）に指定された値を使用&lt;em&gt;ポリシーを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1569426afcc62ae89d6a7fcd1beae10acbe198a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;locale&lt;/em&gt; is given and not &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; modifies the locale setting for the &lt;em&gt;category&lt;/em&gt;. The available categories are listed in the data description below. &lt;em&gt;locale&lt;/em&gt; may be a string, or an iterable of two strings (language code and encoding). If it&amp;rsquo;s an iterable, it&amp;rsquo;s converted to a locale name using the locale aliasing engine. An empty string specifies the user&amp;rsquo;s default settings. If the modification of the locale fails, the exception &lt;a href=&quot;#locale.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised. If successful, the new locale setting is returned.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; でなく&lt;em&gt;locale&lt;/em&gt;が指定されている場合、&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;カテゴリの&lt;/em&gt;ロケール設定を変更します。利用可能なカテゴリは、以下のデータの説明にリストされています。&lt;em&gt;ロケール&lt;/em&gt;は文字列、または2つの文字列（言語コードとエンコーディング）のイテラブルです。イテラブルの場合は、ロケールエイリアシングエンジンを使用してロケール名に変換されます。空の文字列は、ユーザーのデフォルト設定を指定します。ロケールの変更に失敗すると、例外&lt;a href=&quot;#locale.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;が発生します。成功すると、新しいロケール設定が返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="951c3928ce25063e5377b210aad3f1281db3bfa5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;locale&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the current setting for &lt;em&gt;category&lt;/em&gt; is returned.</source>
          <target state="translated">場合は&lt;em&gt;、ロケールが&lt;/em&gt;省略されているか、 &lt;code&gt;None&lt;/code&gt; 、現在の設定&lt;em&gt;カテゴリが&lt;/em&gt;返されません。</target>
        </trans-unit>
        <trans-unit id="9f4491f562e18db7a7f85c5110ce868482f309ac" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;localedir&lt;/em&gt; is not given, then the default system locale directory is used. &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; If &lt;em&gt;languages&lt;/em&gt; is not given, then the following environment variables are searched: &lt;code id=&quot;index-5&quot;&gt;LANGUAGE&lt;/code&gt;, &lt;code id=&quot;index-6&quot;&gt;LC_ALL&lt;/code&gt;, &lt;code id=&quot;index-7&quot;&gt;LC_MESSAGES&lt;/code&gt;, and &lt;code id=&quot;index-8&quot;&gt;LANG&lt;/code&gt;. The first one returning a non-empty value is used for the &lt;em&gt;languages&lt;/em&gt; variable. The environment variables should contain a colon separated list of languages, which will be split on the colon to produce the expected list of language code strings.</source>
          <target state="translated">&lt;em&gt;localedir&lt;/em&gt;が指定されていない場合は、デフォルトのシステムロケールディレクトリが使用されます。&lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2 &lt;/a&gt;&lt;em&gt;言語&lt;/em&gt;が指定されていない場合、次の環境変数が検索されます： &lt;code id=&quot;index-5&quot;&gt;LANGUAGE&lt;/code&gt; 、 &lt;code id=&quot;index-6&quot;&gt;LC_ALL&lt;/code&gt; 、 &lt;code id=&quot;index-7&quot;&gt;LC_MESSAGES&lt;/code&gt; 、および &lt;code id=&quot;index-8&quot;&gt;LANG&lt;/code&gt; 。空でない値を返す最初のものは、&lt;em&gt;言語&lt;/em&gt;変数に使用されます。環境変数には、コロンで区切られた言語のリストが含まれている必要があります。コロンで区切られて、言語コード文字列の予期されるリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="a0d295e26c689b54481242876c86a7d434af28e8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;localedir&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, then the current binding for &lt;em&gt;domain&lt;/em&gt; is returned. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;localedir&lt;/em&gt;が省略されるか &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;ドメイン&lt;/em&gt;の現在のバインディングが返されます。&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfea24b57f7d4e4b61af9826d1014c7238d0a2c5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then a new lock object is created to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object then that will be used to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then access to the returned object will not be automatically protected by a lock, so it will not necessarily be &amp;ldquo;process-safe&amp;rdquo;.</source>
          <target state="translated">場合は&lt;em&gt;ロックが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、新しいロックオブジェクトは値へのアクセスを同期するために作成されます。場合は&lt;em&gt;ロックが&lt;/em&gt;ある&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトは、その値へのアクセスを同期するために使用されます。&lt;em&gt;ロック&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、返されるオブジェクトへのアクセスはロックによって自動的に保護されないため、必ずしも「プロセスセーフ」ではありません。</target>
        </trans-unit>
        <trans-unit id="fb5a29a93024c0c287ced20dc12603ed825400c5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then a new recursive lock object is created to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object then that will be used to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then access to the returned object will not be automatically protected by a lock, so it will not necessarily be &amp;ldquo;process-safe&amp;rdquo;.</source>
          <target state="translated">場合は&lt;em&gt;ロックが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、新しい再帰的なロックオブジェクトは値へのアクセスを同期するために作成されます。場合は&lt;em&gt;ロックが&lt;/em&gt;ある&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトは、その値へのアクセスを同期するために使用されます。&lt;em&gt;ロック&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、返されるオブジェクトへのアクセスはロックによって自動的に保護されないため、必ずしも「プロセスセーフ」ではありません。</target>
        </trans-unit>
        <trans-unit id="2602fc87b0876ba602ab00278259ea7a79f410d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is specified then it should be a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object from &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;が指定されている場合は、&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="bab9a02062082eb583249e7a6e16be3658394be6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is supplied then it should be a proxy for a &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;が提供される場合、それは&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; &lt;/a&gt;オブジェクトのプロキシである必要があります。</target>
        </trans-unit>
        <trans-unit id="590cdff25c02f75a07edf4cd1b5590e71db1db65" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt;&lt;code&gt;get_running_loop()&lt;/code&gt;&lt;/a&gt; is used for getting current loop.</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在のループを取得するために&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt; &lt;code&gt;get_running_loop()&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="937d955e2d780cdb674a48ea2b8300a8b1629db0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt;&lt;code&gt;get_event_loop()&lt;/code&gt;&lt;/a&gt; function is used to get the current loop.</source>
          <target state="translated">場合は&lt;em&gt;ループが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt; &lt;code&gt;get_event_loop()&lt;/code&gt; &lt;/a&gt;関数は、現在のループを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c63129023a997a153b9588c1c5afcfaec61cc024" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt;&lt;code&gt;get_running_loop()&lt;/code&gt;&lt;/a&gt; is used to get the current loop.</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在のループを取得するために&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt; &lt;code&gt;get_running_loop()&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="34f3c105305570e37994220800780f4e1998f389" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;max_length&lt;/em&gt; is nonnegative, returns at most &lt;em&gt;max_length&lt;/em&gt; bytes of decompressed data. If this limit is reached and further output can be produced, the &lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;False&lt;/code&gt;. In this case, the next call to &lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; may provide &lt;em&gt;data&lt;/em&gt; as &lt;code&gt;b''&lt;/code&gt; to obtain more of the output.</source>
          <target state="translated">&lt;em&gt;max_length&lt;/em&gt;が負でない場合、解凍されたデータの最大&lt;em&gt;max_length&lt;/em&gt;バイトを返します。この制限に達し、さらに出力を生成できる場合、&lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;False&lt;/code&gt; に設定されます。この場合、次に&lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; を&lt;/a&gt;呼び出すと、より多くの出力を取得するために、&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;b''&lt;/code&gt; として提供されます。</target>
        </trans-unit>
        <trans-unit id="fe10ae05e553743d5c3d20d35ac3316877086f58" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;max_length&lt;/em&gt; is nonnegative, returns at most &lt;em&gt;max_length&lt;/em&gt; bytes of decompressed data. If this limit is reached and further output can be produced, the &lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;False&lt;/code&gt;. In this case, the next call to &lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; may provide &lt;em&gt;data&lt;/em&gt; as &lt;code&gt;b''&lt;/code&gt; to obtain more of the output.</source>
          <target state="translated">&lt;em&gt;max_length&lt;/em&gt;が負でない場合、解凍されたデータの最大&lt;em&gt;max_length&lt;/em&gt;バイトを返します。この制限に達し、さらに出力を生成できる場合、&lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;False&lt;/code&gt; に設定されます。この場合、次に&lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; を&lt;/a&gt;呼び出すと、より多くの出力を取得するために、&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;b''&lt;/code&gt; として提供されます。</target>
        </trans-unit>
        <trans-unit id="10be81d98bdd051152d5d0719d26439da8df03a1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxheaderlen&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, refold any header lines that are longer than &lt;em&gt;maxheaderlen&lt;/em&gt;, or if &lt;code&gt;0&lt;/code&gt;, do not rewrap any headers. If &lt;em&gt;manheaderlen&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), wrap headers and other message lines according to the &lt;em&gt;policy&lt;/em&gt; settings.</source>
          <target state="translated">&lt;em&gt;maxheaderlen&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合は、&lt;em&gt;maxheaderlen&lt;/em&gt;より長いヘッダー行を再折りたたみするか、 &lt;code&gt;0&lt;/code&gt; の場合、ヘッダーを再ラップしないでください。場合&lt;em&gt;manheaderlenは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; に応じて（デフォルト）、ラップヘッダーおよびその他のメッセージ行&lt;em&gt;ポリシー&lt;/em&gt;の設定。</target>
        </trans-unit>
        <trans-unit id="422ba7aa2a79e6f2f30ccbe4d45f0fb30ec13a07" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxlen&lt;/em&gt; is not specified or is &lt;code&gt;None&lt;/code&gt;, deques may grow to an arbitrary length. Otherwise, the deque is bounded to the specified maximum length. Once a bounded length deque is full, when new items are added, a corresponding number of items are discarded from the opposite end. Bounded length deques provide functionality similar to the &lt;code&gt;tail&lt;/code&gt; filter in Unix. They are also useful for tracking transactions and other pools of data where only the most recent activity is of interest.</source>
          <target state="translated">場合&lt;em&gt;のmaxlenが&lt;/em&gt;指定されたりしませんされていない &lt;code&gt;None&lt;/code&gt; 、dequeのは、任意の長さに成長することがあります。それ以外の場合、両端キューは指定された最大長に制限されます。有限長の両端キューがいっぱいになると、新しいアイテムが追加されると、対応する数のアイテムが反対側から破棄されます。バインドされた長さの両端キューは、Unixの &lt;code&gt;tail&lt;/code&gt; フィルターと同様の機能を提供します。また、最新のアクティビティのみが対象となるトランザクションやその他のデータプールを追跡する場合にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="2aec9f480deb51e518e61c9512cb8347bbb35566" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxlength&lt;/em&gt; is specified and the message is longer than &lt;em&gt;maxlength&lt;/em&gt; then &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised and the connection will no longer be readable.</source>
          <target state="translated">場合&lt;em&gt;MAXLENGTHが&lt;/em&gt;指定され、メッセージがより長いです&lt;em&gt;MAXLENGTH&lt;/em&gt;その後、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のが&lt;/a&gt;提起されていないとの接続はもはや読みやすいでしょう。</target>
        </trans-unit>
        <trans-unit id="fdda2ebb0037d0b6d351503e46dedbec8240b68d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxsize&lt;/em&gt; is less than or equal to zero, the queue size is infinite. If it is an integer greater than &lt;code&gt;0&lt;/code&gt;, then &lt;code&gt;await put()&lt;/code&gt; blocks when the queue reaches &lt;em&gt;maxsize&lt;/em&gt; until an item is removed by &lt;a href=&quot;#asyncio.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;maxsize&lt;/em&gt;がゼロ以下の場合、キューのサイズは無限です。それはより整数大きい場合 &lt;code&gt;0&lt;/code&gt; 、その後 &lt;code&gt;await put()&lt;/code&gt; キューが到達がときブロック&lt;em&gt;MAXSIZE&lt;/em&gt;アイテムがで削除されるまで&lt;a href=&quot;#asyncio.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="476559880ef6db18fddff1363483c9ce4ae594eb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxsize&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, the LRU feature is disabled and the cache can grow without bound. The LRU feature performs best when &lt;em&gt;maxsize&lt;/em&gt; is a power-of-two.</source>
          <target state="translated">&lt;em&gt;maxsize&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、LRU機能は無効になり、キャッシュは&lt;em&gt;無制限に拡張&lt;/em&gt;できます。LRU機能は、&lt;em&gt;maxsize&lt;/em&gt;が2の累乗であるときに最適に機能します。</target>
        </trans-unit>
        <trans-unit id="fdb0dec0e620351e0bbd4aec3590e50d3841d53d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is omitted, the new instance is created in a default, empty state. If &lt;em&gt;message&lt;/em&gt; is an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, its contents are copied; furthermore, any format-specific information is converted insofar as possible if &lt;em&gt;message&lt;/em&gt; is a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance. If &lt;em&gt;message&lt;/em&gt; is a string, a byte string, or a file, it should contain an &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant message, which is read and parsed. Files should be open in binary mode, but text mode files are accepted for backward compatibility.</source>
          <target state="translated">場合は&lt;em&gt;、メッセージが&lt;/em&gt;省略され、新しいインスタンスはデフォルトで、空の状態で作成されます。場合&lt;em&gt;、メッセージが&lt;/em&gt;ある&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; の&lt;/a&gt;インスタンス、その内容がコピーされます。さらに、&lt;em&gt;メッセージ&lt;/em&gt;が&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;インスタンスである場合、フォーマット固有の情報は可能な限り変換されます。場合は&lt;em&gt;、メッセージが&lt;/em&gt;文字列、バイト列、またはファイルであり、それが含まれている必要があります&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;読み込み、解析され準拠のメッセージを、。ファイルはバイナリモードで開く必要がありますが、テキストモードのファイルは下位互換性のために受け入れられます。</target>
        </trans-unit>
        <trans-unit id="4cdc2a6c5973e55d431189d76aeebd82bf0b0c31" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;method&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the default context is returned. Otherwise &lt;em&gt;method&lt;/em&gt; should be &lt;code&gt;'fork'&lt;/code&gt;, &lt;code&gt;'spawn'&lt;/code&gt;, &lt;code&gt;'forkserver'&lt;/code&gt;. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the specified start method is not available.</source>
          <target state="translated">場合&lt;em&gt;方法は&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、デフォルトのコンテキストが返されます。それ以外の場合、&lt;em&gt;メソッド&lt;/em&gt;は &lt;code&gt;'fork'&lt;/code&gt; 、 &lt;code&gt;'spawn'&lt;/code&gt; 、 &lt;code&gt;'forkserver'&lt;/code&gt; である必要があります。指定された開始メソッドが使用できない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ea5b1e7d5baff8f354aa38723d8e2f2c3c8b26f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;missing_ok&lt;/em&gt; is false (the default), &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is raised if the path does not exist.</source>
          <target state="translated">場合&lt;em&gt;missing_okが&lt;/em&gt; false（デフォルト）で、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; は&lt;/a&gt;パスが存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="99eaa9a1562cd18740313159312a1e81d02af31f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;missing_ok&lt;/em&gt; is true, &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; exceptions will be ignored (same behavior as the POSIX &lt;code&gt;rm -f&lt;/code&gt; command).</source>
          <target state="translated">場合&lt;em&gt;missing_okが&lt;/em&gt;真である、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; の&lt;/a&gt;例外は（POSIXと同じ動作無視される &lt;code&gt;rm -f&lt;/code&gt; コマンド）。</target>
        </trans-unit>
        <trans-unit id="ec95478d66e5bfa1b027996891cada38eb37683d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt;, this function returns the process id of the new process; if &lt;em&gt;mode&lt;/em&gt; is &lt;a href=&quot;#os.P_WAIT&quot;&gt;&lt;code&gt;P_WAIT&lt;/code&gt;&lt;/a&gt;, returns the process&amp;rsquo;s exit code if it exits normally, or &lt;code&gt;-signal&lt;/code&gt;, where &lt;em&gt;signal&lt;/em&gt; is the signal that killed the process. On Windows, the process id will actually be the process handle, so can be used with the &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;が&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; の&lt;/a&gt;場合、この関数は新しいプロセスのプロセスIDを返します。&lt;em&gt;モード&lt;/em&gt;が&lt;a href=&quot;#os.P_WAIT&quot;&gt; &lt;code&gt;P_WAIT&lt;/code&gt; の&lt;/a&gt;場合、プロセスが正常に終了した場合はプロセスの終了コードを返します。- &lt;em&gt;signal&lt;/em&gt;は、signalがプロセスを &lt;code&gt;-signal&lt;/code&gt; 終了したシグナルです。Windowsでは、プロセスIDは実際にはプロセスハンドルになるため、&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;関数で使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0375733b9f4f50742e4972b7f050e92927d8849" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt;, the input file may be the concatenation of multiple compressed streams.</source>
          <target state="translated">場合&lt;em&gt;モード&lt;/em&gt;で &lt;code&gt;'r'&lt;/code&gt; 、入力ファイルは、複数の圧縮ストリームの連結であってもよいです。</target>
        </trans-unit>
        <trans-unit id="814277edd95a4cd9bd45db5f9fa454a24e7e3f22" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, &lt;em&gt;compresslevel&lt;/em&gt; can be an integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; specifying the level of compression: &lt;code&gt;1&lt;/code&gt; produces the least compression, and &lt;code&gt;9&lt;/code&gt; (default) produces the most compression.</source>
          <target state="translated">場合&lt;em&gt;モード&lt;/em&gt;で &lt;code&gt;'w'&lt;/code&gt; または &lt;code&gt;'a'&lt;/code&gt; 、&lt;em&gt;COMPRESSLEVELの&lt;/em&gt;間の整数であることができる &lt;code&gt;1&lt;/code&gt; 及び &lt;code&gt;9&lt;/code&gt; ：圧縮のレベルを指定する &lt;code&gt;1&lt;/code&gt; 以上の圧縮を生成し、 &lt;code&gt;9&lt;/code&gt; （デフォルト）が最も圧縮を生成します。</target>
        </trans-unit>
        <trans-unit id="3992701b4ac0def94c8a1290fc024926c3c7f6d8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, no attempt to find the module will be made. This is obscure, of use mostly in testing doctest itself: if &lt;em&gt;module&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, or is &lt;code&gt;None&lt;/code&gt; but cannot be found automatically, then all objects are considered to belong to the (non-existent) module, so all contained objects will (recursively) be searched for doctests.</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、モジュールを見つける試みは行われません。これはあいまいで、主にdoctest自体のテストで使用されます。&lt;em&gt;モジュール&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; または &lt;code&gt;None&lt;/code&gt; であるが自動的に見つからない場合、すべてのオブジェクトは（存在しない）モジュールに属していると見なされるため、含まれているすべてのオブジェクトは（再帰的に） doctestを検索します。</target>
        </trans-unit>
        <trans-unit id="342c503a565a339b191d71f66fedb8027cd7cd94" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module&lt;/em&gt; is defined, the &lt;code&gt;__module__&lt;/code&gt; attribute of the named tuple is set to that value.</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;が定義されている場合、名前付きタプルの &lt;code&gt;__module__&lt;/code&gt; 属性はその値に設定されます。</target>
        </trans-unit>
        <trans-unit id="cf7e207e25f4af78f648134ee99a7b39d012d8fc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, then &lt;em&gt;filename&lt;/em&gt; specifies an OS-specific path. The path may be absolute or relative; relative paths are resolved with respect to the current working directory.</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;ファイル名は、&lt;/em&gt; OS固有のパスを指定します。パスは絶対パスでも相対パスでもかまいません。相対パスは、現在の作業ディレクトリを基準に解決されます。</target>
        </trans-unit>
        <trans-unit id="7f42640a3bf95f21f7a92a899894943811c847d3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, then each filename in &lt;em&gt;paths&lt;/em&gt; specifies an OS-specific path. The path may be absolute or relative; relative paths are resolved with respect to the current working directory.</source>
          <target state="translated">&lt;em&gt;module_relative&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;pathsの&lt;/em&gt;各ファイル名はOS固有のパスを指定します。パスは絶対パスでも相対パスでもかまいません。相対パスは、現在の作業ディレクトリを基準に解決されます。</target>
        </trans-unit>
        <trans-unit id="0697d5b67fdf347746c9d5703805474938f31243" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), then &lt;em&gt;filename&lt;/em&gt; specifies an OS-independent module-relative path. By default, this path is relative to the calling module&amp;rsquo;s directory; but if the &lt;em&gt;package&lt;/em&gt; argument is specified, then it is relative to that package. To ensure OS-independence, &lt;em&gt;filename&lt;/em&gt; should use &lt;code&gt;/&lt;/code&gt; characters to separate path segments, and may not be an absolute path (i.e., it may not begin with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）の場合、&lt;em&gt;ファイル名は&lt;/em&gt; OSに依存しないモジュールの相対パスを指定します。デフォルトでは、このパスは呼び出し側モジュールのディレクトリを基準にしています。しかし、&lt;em&gt;package&lt;/em&gt;引数が指定されている場合、それはそのパッケージに関連しています。 OSに依存しないようにするために、&lt;em&gt;ファイル名&lt;/em&gt;はパスセグメントを区切るために &lt;code&gt;/&lt;/code&gt; 文字を使用する必要があり、絶対パスではない場合があります（つまり、 &lt;code&gt;/&lt;/code&gt; で始まっていない場合があります）。</target>
        </trans-unit>
        <trans-unit id="8d02f9fb85e6627d59eb80ccf4ea6b3a9b4d8c95" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), then each filename in &lt;em&gt;paths&lt;/em&gt; specifies an OS-independent module-relative path. By default, this path is relative to the calling module&amp;rsquo;s directory; but if the &lt;em&gt;package&lt;/em&gt; argument is specified, then it is relative to that package. To ensure OS-independence, each filename should use &lt;code&gt;/&lt;/code&gt; characters to separate path segments, and may not be an absolute path (i.e., it may not begin with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）の場合、各ファイル名の&lt;em&gt;パスは&lt;/em&gt; OSに依存しないモジュールの相対パスを指定します。デフォルトでは、このパスは呼び出し側モジュールのディレクトリを基準にしています。しかし、&lt;em&gt;package&lt;/em&gt;引数が指定されている場合、それはそのパッケージに関連しています。OSに依存しないようにするために、各ファイル名はパスセグメントを区切るために &lt;code&gt;/&lt;/code&gt; 文字を使用する必要があり、絶対パスではない場合があります（つまり、 &lt;code&gt;/&lt;/code&gt; で始まっていない場合があります）。</target>
        </trans-unit>
        <trans-unit id="d91389354c01f8abc2286ef2886fcba27cafd30c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;monetary&lt;/em&gt; is true, the conversion uses monetary thousands separator and grouping strings.</source>
          <target state="translated">場合は&lt;em&gt;金銭が&lt;/em&gt; trueの場合、変換は金銭桁区切り記号やグループ化文字列を使用しています。</target>
        </trans-unit>
        <trans-unit id="b66af921caa012e5b11170246ad9eb33b73367d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mutate_flag&lt;/em&gt; is true (the default), then the buffer is (in effect) passed to the underlying &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; system call, the latter&amp;rsquo;s return code is passed back to the calling Python, and the buffer&amp;rsquo;s new contents reflect the action of the &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt;. This is a slight simplification, because if the supplied buffer is less than 1024 bytes long it is first copied into a static buffer 1024 bytes long which is then passed to &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; and copied back into the supplied buffer.</source>
          <target state="translated">場合&lt;em&gt;mutate_flagが&lt;/em&gt; true（デフォルト）で、バッファが（実質的に）根本的に渡され、&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;システムコール、の後者のリターンコードは、コールバックのPythonに渡され、バッファの新しい内容がの行動に反映される&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;。これは少し単純化されています。指定されたバッファーが1024バイト未満の長さの場合、最初に1024バイトの長さの静的バッファーにコピーされ、次に&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; に&lt;/a&gt;渡されて、指定されたバッファーにコピーされます。</target>
        </trans-unit>
        <trans-unit id="9345507ddde308e47622c6e2a66a95ae7670e925" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is a string and is not known, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If a specific value for &lt;em&gt;name&lt;/em&gt; is not supported by the host system, even if it is included in &lt;code&gt;confstr_names&lt;/code&gt;, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with &lt;a href=&quot;errno#errno.EINVAL&quot;&gt;&lt;code&gt;errno.EINVAL&lt;/code&gt;&lt;/a&gt; for the error number.</source>
          <target state="translated">場合は&lt;em&gt;名前が&lt;/em&gt;文字列であると知られていない、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。&lt;em&gt;nameの&lt;/em&gt;特定の値がホストシステムでサポートされていない場合、それが &lt;code&gt;confstr_names&lt;/code&gt; に含まれていても、エラー番号の&lt;a href=&quot;errno#errno.EINVAL&quot;&gt; &lt;code&gt;errno.EINVAL&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1a2e0516f0e84799e5f5202bef0b9a437f74ac1b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is a string and is not known, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If a specific value for &lt;em&gt;name&lt;/em&gt; is not supported by the host system, even if it is included in &lt;code&gt;pathconf_names&lt;/code&gt;, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with &lt;a href=&quot;errno#errno.EINVAL&quot;&gt;&lt;code&gt;errno.EINVAL&lt;/code&gt;&lt;/a&gt; for the error number.</source>
          <target state="translated">場合は&lt;em&gt;名前が&lt;/em&gt;文字列であると知られていない、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。&lt;em&gt;nameの&lt;/em&gt;特定の値がホストシステムでサポートされていない場合は、 &lt;code&gt;pathconf_names&lt;/code&gt; に含まれていても、エラー番号の&lt;a href=&quot;errno#errno.EINVAL&quot;&gt; &lt;code&gt;errno.EINVAL&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
