<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="a34eed16713b941a849879c228a4e75507e8cee6" translate="yes" xml:space="preserve">
          <source>This is the original source for the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package. The version of the package available from this site is suitable for use with Python 1.5.2, 2.1.x and 2.2.x, which do not include the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package in the standard library.</source>
          <target state="translated">これは、&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージの元のソースです。このサイトから入手できるパッケージのバージョンは、Python 1.5.2、2.1.x、および2.2.xでの使用に適しています。これらには、標準ライブラリに&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージが含まれていません。</target>
        </trans-unit>
        <trans-unit id="9c552faf3f40f576d4d85d3d7d48ed4c15002db5" translate="yes" xml:space="preserve">
          <source>This is the output of running the example above in verbose mode:</source>
          <target state="translated">これは、上記の例を冗長モードで実行したときの出力です。</target>
        </trans-unit>
        <trans-unit id="b14df329d9906c7fbcb90d2af4897d2c57320d08" translate="yes" xml:space="preserve">
          <source>This is the preferred way to create Futures in asyncio. This lets third-party event loops provide alternative implementations of the Future object (with better performance or instrumentation).</source>
          <target state="translated">これは、asyncio で Futures を作成する際に好ましい方法です。これにより、サードパーティのイベントループは、Future オブジェクトの代替的な実装を提供することができます (より良いパフォーマンスやインストルメンテーションを提供します)。</target>
        </trans-unit>
        <trans-unit id="69cfcab3a14463c73c17e763b38b52cd2336ac31" translate="yes" xml:space="preserve">
          <source>This is the same as the &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt;&lt;code&gt;DefaultHandler()&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t inhibit expansion of internal entities. The entity reference will not be passed to the default handler.</source>
          <target state="translated">これは&lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt; &lt;code&gt;DefaultHandler()&lt;/code&gt; &lt;/a&gt;と同じですが、内部エンティティの展開を妨げません。エンティティー参照はデフォルトのハンドラーに渡されません。</target>
        </trans-unit>
        <trans-unit id="389a68f916573ccba3b39324a1dc41b7986f9183" translate="yes" xml:space="preserve">
          <source>This is the same function as &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;. This entry point is maintained for backward compatibility.</source>
          <target state="translated">これは、&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;と同じ関数です。このエントリポイントは、下位互換性のために維持されています。</target>
        </trans-unit>
        <trans-unit id="25f22dab61a8af25218df92e4e7d0064cce134f2" translate="yes" xml:space="preserve">
          <source>This is the sample variance s&amp;sup2; with Bessel&amp;rsquo;s correction, also known as variance with N-1 degrees of freedom. Provided that the data points are representative (e.g. independent and identically distributed), the result should be an unbiased estimate of the true population variance.</source>
          <target state="translated">これは、ベッセルの補正を使用した標本分散s&amp;sup2;であり、N-1自由度の分散とも呼ばれます。データポイントが代表的なものである場合（例：独立しており、同一に分布している場合）、結果は真の母分散の不偏推定値になります。</target>
        </trans-unit>
        <trans-unit id="341ee391b304321c33512e1ca47d1b5d997e8b00" translate="yes" xml:space="preserve">
          <source>This is the server side:</source>
          <target state="translated">こちらはサーバー側です。</target>
        </trans-unit>
        <trans-unit id="616ff54fb339d5dc77cc6896ef1a784fa36685c0" translate="yes" xml:space="preserve">
          <source>This is the standard MSI schema for MSI 2.0, with the &lt;em&gt;tables&lt;/em&gt; variable providing a list of table definitions, and &lt;em&gt;_Validation_records&lt;/em&gt; providing the data for MSI validation.</source>
          <target state="translated">これはMSI 2.0の標準のMSIスキーマで、&lt;em&gt;tables&lt;/em&gt;変数はテーブル定義のリストを提供し、&lt;em&gt;_Validation_records&lt;/em&gt;はMSI検証用のデータを提供します。</target>
        </trans-unit>
        <trans-unit id="ccc570aa2319eff4f6519d490d8b14417d6139c0" translate="yes" xml:space="preserve">
          <source>This is the state management specification implemented by this module.</source>
          <target state="translated">これは、このモジュールで実装されている状態管理仕様です。</target>
        </trans-unit>
        <trans-unit id="4323953ab6362c591027031f3f3ca25f400868fa" translate="yes" xml:space="preserve">
          <source>This is the superclass of all Server objects in the module. It defines the interface, given below, but does not implement most of the methods, which is done in subclasses. The two parameters are stored in the respective &lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt;&lt;code&gt;server_address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">これは、モジュール内のすべてのサーバーオブジェクトのスーパークラスです。以下に示すインターフェースを定義しますが、サブクラスで実行されるほとんどのメソッドを実装していません。2つのパラメーターは、それぞれの&lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt; &lt;code&gt;server_address&lt;/code&gt; &lt;/a&gt;属性と&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;属性に格納されます。</target>
        </trans-unit>
        <trans-unit id="9237177cdeb23cc7d84e7c1ca93d900094955002" translate="yes" xml:space="preserve">
          <source>This is the superclass of all request handler objects. It defines the interface, given below. A concrete request handler subclass must define a new &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method, and can override any of the other methods. A new instance of the subclass is created for each request.</source>
          <target state="translated">これは、すべての要求ハンドラオブジェクトのスーパークラスです。これは、以下に示すインターフェースを定義します。具体的なリクエストハンドラサブクラスは、新しい&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを定義する必要があり、他のメソッドをオーバーライドできます。サブクラスの新しいインスタンスは、要求ごとに作成されます。</target>
        </trans-unit>
        <trans-unit id="fdc1ccdadc662cedd90516cae609f70b8ee431d2" translate="yes" xml:space="preserve">
          <source>This is the type of lock objects.</source>
          <target state="translated">ロックオブジェクトの種類です。</target>
        </trans-unit>
        <trans-unit id="933248421ba03ff327c1ad6cab4bf70f50be04b0" translate="yes" xml:space="preserve">
          <source>This is typically used to install the sequence tables.</source>
          <target state="translated">これは通常、シーケンステーブルをインストールするために使用されます。</target>
        </trans-unit>
        <trans-unit id="046ceaf4727b6ee744292cb707aecb0851c71b11" translate="yes" xml:space="preserve">
          <source>This is used mainly to distinguish platform-specific build directories and platform-specific built distributions. Typically includes the OS name and version and the architecture (as supplied by &amp;lsquo;os.uname()&amp;rsquo;), although the exact information included depends on the OS; e.g., on Linux, the kernel version isn&amp;rsquo;t particularly important.</source>
          <target state="translated">これは主に、プラットフォーム固有のビルドディレクトリとプラットフォーム固有のビルドされたディストリビューションを区別するために使用されます。通常、OSの名前とバージョン、およびアーキテクチャ（「os.uname（）」によって提供される）が含まれますが、含まれる正確な情報はOSによって異なります。たとえば、Linuxでは、カーネルのバージョンは特に重要ではありません。</target>
        </trans-unit>
        <trans-unit id="ec42fa287ba1b2be0931da3b49e8350f384882a4" translate="yes" xml:space="preserve">
          <source>This is useful because constants are often given to a greater precision than is needed by the application. Another benefit is that rounding immediately eliminates unintended effects from digits beyond the current precision. In the following example, using unrounded inputs means that adding zero to a sum can change the result:</source>
          <target state="translated">定数がアプリケーションで必要とされる精度よりも高い精度で与えられることが多いので、これは便利です。もう一つの利点は、丸めを行うことで、現在の精度を超えた桁数による意図しない影響を即座に排除できることです。次の例では、丸められていない入力を使用すると、合計にゼロを加えると結果が変わることを意味します。</target>
        </trans-unit>
        <trans-unit id="d66f84b77c15706a38e4c4ca53e6282aa811fcdf" translate="yes" xml:space="preserve">
          <source>This is usually a string explaining the reason for this error.</source>
          <target state="translated">これは通常、このエラーの理由を説明する文字列です。</target>
        </trans-unit>
        <trans-unit id="2fcdb8b1d9772564fbf99b8c55ef224ea5312002" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">これが&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt;関数をピクルすることができない理由です：すべての &lt;code&gt;lambda&lt;/code&gt; 関数は同じ名前を共有します： &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9229d39a2ae8521b2d3a535c1b9b07071a108294" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t without caveats and limitations however, which is why it is not the default behaviour. In order to know what attributes are available on the spec object, autospec has to introspect (access attributes) the spec. As you traverse attributes on the mock a corresponding traversal of the original object is happening under the hood. If any of your specced objects have properties or descriptors that can trigger code execution then you may not be able to use autospec. On the other hand it is much better to design your objects so that introspection is safe &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;.</source>
          <target state="translated">ただし、これには警告と制限がないわけではないため、デフォルトの動作ではありません。仕様オブジェクトで使用可能な属性を知るために、autospecは仕様をイントロスペクト（属性にアクセス）する必要があります。モックの属性をトラバースすると、元のオブジェクトの対応するトラバースが内部で行われます。指定されたオブジェクトのいずれかにコード実行をトリガーできるプロパティまたは記述子がある場合、autospecを使用できない場合があります。一方、イントロスペクションが安全になるようにオブジェクトを設計する方がはるかに優れています&lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d207f3e3c1fb67cb63728a3af6a4675ea6f3832d" translate="yes" xml:space="preserve">
          <source>This iterates over all the payloads in all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning the string payloads line-by-line. It skips over all the subpart headers, and it skips over any subpart with a payload that isn&amp;rsquo;t a Python string. This is somewhat equivalent to reading the flat text representation of the message from a file using &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, skipping over all the intervening headers.</source>
          <target state="translated">これは、&lt;em&gt;msgの&lt;/em&gt;すべてのサブパートのすべてのペイロードを反復処理し、文字列ペイロードを行ごとに返します。すべてのサブパートヘッダーをスキップし、Python文字列ではないペイロードを持つサブパートをスキップします。これは、間にあるすべてのヘッダーをスキップして、&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;を使用してファイルからメッセージのフラットテキスト表現を読み取るのと多少同じです。</target>
        </trans-unit>
        <trans-unit id="eb7822f26a5a0f18f548778163ce86fd0343f5b1" translate="yes" xml:space="preserve">
          <source>This iterates over all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning only those subparts that match the MIME type specified by &lt;em&gt;maintype&lt;/em&gt; and &lt;em&gt;subtype&lt;/em&gt;.</source>
          <target state="translated">これは、&lt;em&gt;msgの&lt;/em&gt;すべてのサブパートを反復処理し、&lt;em&gt;maintype&lt;/em&gt;および&lt;em&gt;subtypeで&lt;/em&gt;指定されたMIMEタイプに一致する&lt;em&gt;サブパート&lt;/em&gt;のみを返します。</target>
        </trans-unit>
        <trans-unit id="3317b48233efdbea05d2c0138533c7822a99222c" translate="yes" xml:space="preserve">
          <source>This iterates over the lines of all files listed in &lt;code&gt;sys.argv[1:]&lt;/code&gt;, defaulting to &lt;code&gt;sys.stdin&lt;/code&gt; if the list is empty. If a filename is &lt;code&gt;'-'&lt;/code&gt;, it is also replaced by &lt;code&gt;sys.stdin&lt;/code&gt; and the optional arguments &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are ignored. To specify an alternative list of filenames, pass it as the first argument to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;. A single file name is also allowed.</source>
          <target state="translated">これは、 &lt;code&gt;sys.argv[1:]&lt;/code&gt; にリストされているすべてのファイルの行を繰り返し、リストが空の場合はデフォルトで &lt;code&gt;sys.stdin&lt;/code&gt; になります。ファイル名が &lt;code&gt;'-'&lt;/code&gt; の場合、それも &lt;code&gt;sys.stdin&lt;/code&gt; に置き換えられ、オプションの引数&lt;em&gt;mode&lt;/em&gt;および&lt;em&gt;openhook&lt;/em&gt;は無視されます。ファイル名の代替リストを指定するには、それを&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; の&lt;/a&gt;最初の引数として渡します。単一のファイル名も使用できます。</target>
        </trans-unit>
        <trans-unit id="ac116f41d5b2fcd57891fc5192b5d3f2274dfd05" translate="yes" xml:space="preserve">
          <source>This itertool may require significant auxiliary storage (depending on how much temporary data needs to be stored). In general, if one iterator uses most or all of the data before another iterator starts, it is faster to use &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このitertoolは、かなりの補助ストレージを必要とする場合があります（保存する必要がある一時データの量によって異なります）。一般的に、あるイテレーターが別のイテレーターが開始する前にほとんどまたはすべてのデータを使用する場合、&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt;を使用する方が高速です。</target>
        </trans-unit>
        <trans-unit id="2b78784d3778cf51f3cc37d1ca2c57415ae43db7" translate="yes" xml:space="preserve">
          <source>This just loops through the handlers offering them the record to handle. The actual object passed to the handlers is that which is returned from &lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、ハンドラーをループして、処理するレコードを提供します。ハンドラーに渡される実際のオブジェクトは、&lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt;から返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b297287359a92496a9e641ecaa5a2f4a199adf20" translate="yes" xml:space="preserve">
          <source>This key is not used in versions of Windows after 98.</source>
          <target state="translated">このキーは98以降のバージョンのWindowsでは使用されません。</target>
        </trans-unit>
        <trans-unit id="096ddddbe0447c0568cc1cc76f41f824414c52a4" translate="yes" xml:space="preserve">
          <source>This last example demonstrates the final few formatting functions:</source>
          <target state="translated">この最後の例は、最後のいくつかの書式設定関数を示しています。</target>
        </trans-unit>
        <trans-unit id="a0de209ab52fa2c28eaba734255b35873e7ad687" translate="yes" xml:space="preserve">
          <source>This last example might require special privileges:</source>
          <target state="translated">この最後の例では、特別な権限が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="264097c0f8c82e537b9bf5cf995ed38e88f6ce1f" translate="yes" xml:space="preserve">
          <source>This library does &lt;em&gt;not&lt;/em&gt; interpret or write the value-type prefixes used in the Windows Registry extended version of INI syntax.</source>
          <target state="translated">このライブラリは、Windowsレジストリ拡張バージョンのINI構文で使用される値タイプのプレフィックスを解釈または書き込みませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ddecb5d41f26429b00b306addcfa72c1c21b1705" translate="yes" xml:space="preserve">
          <source>This limit is used to control the size of object types for which no specific formatting method is available on the &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; object. It is applied in a similar manner as &lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt;&lt;code&gt;maxstring&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">この制限は、&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt;オブジェクトで特定の書式設定メソッドを使用できないオブジェクトタイプのサイズを制御するために使用されます。&lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt; &lt;code&gt;maxstring&lt;/code&gt; &lt;/a&gt;と同様の方法で適用されます。デフォルトは &lt;code&gt;20&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6066e953f7076b88b95e2864a51729b2de6d74f8" translate="yes" xml:space="preserve">
          <source>This line sorts statistics with a primary key of time, and a secondary key of cumulative time, and then prints out some of the statistics. To be specific, the list is first culled down to 50% (re: &lt;code&gt;.5&lt;/code&gt;) of its original size, then only lines containing &lt;code&gt;init&lt;/code&gt; are maintained, and that sub-sub-list is printed.</source>
          <target state="translated">この行は、時間の主キーと累積時間の副キーで統計をソートし、一部の統計を出力します。具体的には、リストは最初に元のサイズの50％（re： &lt;code&gt;.5&lt;/code&gt; ）に間引かれ、次に &lt;code&gt;init&lt;/code&gt; を含む行のみが維持され、そのサブサブリストが出力されます。</target>
        </trans-unit>
        <trans-unit id="48b3c8021c68eee9cdfb9dba7da21091a3af1ca6" translate="yes" xml:space="preserve">
          <source>This loses information about &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies, and also about newer or non-standard cookie-attributes such as &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; Cookie に関する情報と、 &lt;code&gt;port&lt;/code&gt; などの新しいまたは非標準のCookie属性に関する情報が失われます。</target>
        </trans-unit>
        <trans-unit id="d0d6d6740f3cc6b70d34b0e15297fa6447937aa1" translate="yes" xml:space="preserve">
          <source>This makes a copy of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, appends any directories given as positional arguments, then reverts &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; to the copied settings when the context ends.</source>
          <target state="translated">これにより、&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; の&lt;/a&gt;コピーが作成され、位置引数として指定されたディレクトリが追加され、コンテキストが終了すると&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;がコピーされた設定に戻ります。</target>
        </trans-unit>
        <trans-unit id="2fec21315ec08b4fee9674feeb896233184a09bd" translate="yes" xml:space="preserve">
          <source>This makes it possible to distinguish between a properly-formed compressed stream, and an incomplete or truncated one.</source>
          <target state="translated">これにより、適切に形成された圧縮ストリームと、不完全なものや切り捨てられたものを区別することが可能になります。</target>
        </trans-unit>
        <trans-unit id="f54922022dd37999705ecf8e7311959f863f3c80" translate="yes" xml:space="preserve">
          <source>This makes the warning refer to &lt;code&gt;deprecation()&lt;/code&gt;&amp;rsquo;s caller, rather than to the source of &lt;code&gt;deprecation()&lt;/code&gt; itself (since the latter would defeat the purpose of the warning message).</source>
          <target state="translated">これにより、警告は &lt;code&gt;deprecation()&lt;/code&gt; 自体のソースではなく、 &lt;code&gt;deprecation()&lt;/code&gt; の呼び出し元を参照します（後者は警告メッセージの目的を無効にするため）。</target>
        </trans-unit>
        <trans-unit id="73d9e444a3a60233d585593bee38869776f0d900" translate="yes" xml:space="preserve">
          <source>This mapping is captured the first time the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module is imported, typically during Python startup as part of processing &lt;code&gt;site.py&lt;/code&gt;. Changes to the environment made after this time are not reflected in &lt;code&gt;os.environ&lt;/code&gt;, except for changes made by modifying &lt;code&gt;os.environ&lt;/code&gt; directly.</source>
          <target state="translated">このマッピングは、&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールが初めてインポートされるときに、通常はPythonの起動時に &lt;code&gt;site.py&lt;/code&gt; の処理の一部としてキャプチャされます。この時間以降に行われた環境への変更は、 &lt;code&gt;os.environ&lt;/code&gt; を直接変更して加えられた変更を除いて、 &lt;code&gt;os.environ&lt;/code&gt; には反映されません。</target>
        </trans-unit>
        <trans-unit id="2f9802628cadfd6a5dfb046256f12e0170526e3f" translate="yes" xml:space="preserve">
          <source>This matches the definition of the &amp;ldquo;proleptic Gregorian&amp;rdquo; calendar in Dershowitz and Reingold&amp;rsquo;s book &lt;em&gt;Calendrical Calculations&lt;/em&gt;, where it&amp;rsquo;s the base calendar for all computations. See the book for algorithms for converting between proleptic Gregorian ordinals and many other calendar systems.</source>
          <target state="translated">これは、DershowitzおよびReingoldの本である&lt;em&gt;Calendrical Calculations&lt;/em&gt;の「proleptic Gregorian」カレンダーの定義と一致しています。このカレンダーは、すべての計算の基本カレンダーです。発作的なグレゴリオ暦と他の多くのカレンダーシステムとの間の変換アルゴリズムについては、本を参照してください。</target>
        </trans-unit>
        <trans-unit id="973b8e85a014b10c75403c7a74282293136436c1" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;gmtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038.</source>
          <target state="translated">これにより、タイムスタンプがプラットフォームのC &lt;code&gt;gmtime()&lt;/code&gt; 関数でサポートされている値の範囲外である場合は&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; が&lt;/a&gt;&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;gmtime()&lt;/code&gt; が失敗するとOSErrorが発生する可能性があります。これは1970年から2038年までの年に制限されるのが一般的です。</target>
        </trans-unit>
        <trans-unit id="6b1f92125637bbc55cff09da5df4d2e2c83cd615" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years from 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、タイムスタンプがプラットフォームCの &lt;code&gt;localtime()&lt;/code&gt; 関数でサポートされている値の範囲外である場合は&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; が&lt;/a&gt;&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;localtime()&lt;/code&gt; が失敗するとOSErrorが発生する可能性があります。これは1970年から2038年の年に制限されるのが一般的です。タイムスタンプの概念にうるう秒が含まれる非POSIXシステムでは、うるう秒は&lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt;によって無視されます。</target>
        </trans-unit>
        <trans-unit id="4d37c0a7a6a3e6d70c0e783302ba789caf0c81d7" translate="yes" xml:space="preserve">
          <source>This means that if the remote listener starts up &lt;em&gt;after&lt;/em&gt; the handler has been used, you could lose messages (since the handler won&amp;rsquo;t even attempt a connection until the delay has elapsed, but just silently drop messages during the delay period).</source>
          <target state="translated">つまり、ハンドラーが使用された&lt;em&gt;後に&lt;/em&gt;リモートリスナーが起動すると&lt;em&gt;、&lt;/em&gt;メッセージが失われる可能性があります（ハンドラーは遅延が経過するまで接続を試みず、遅延期間中にメッセージを通知せずにドロップするだけなので）。</target>
        </trans-unit>
        <trans-unit id="293f66ad739726417a512fb32791664b3935c5f9" translate="yes" xml:space="preserve">
          <source>This means that if you try joining that process you may get a deadlock unless you are sure that all items which have been put on the queue have been consumed. Similarly, if the child process is non-daemonic then the parent process may hang on exit when it tries to join all its non-daemonic children.</source>
          <target state="translated">これは、キューに入れられたすべてのアイテムが消費されたことを確認しない限り、 そのプロセスに参加しようとするとデッドロックが発生する可能性があることを意味します。同様に、子プロセスが非デーモニックプロセスである場合、 親プロセスがその非デーモニックな子プロセスにすべて参加しようとしたときに、 親プロセスは終了時にハングしてしまうかもしれません。</target>
        </trans-unit>
        <trans-unit id="3c2691ce7a2bb0ef524d6ac5d3f6a53e206d2c2d" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type on &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">つまり、&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;の型の値に対して任意の操作またはメソッド呼び出しを実行し、それを任意の変数に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="d454e9a9384d822a339503b805687181665a1335" translate="yes" xml:space="preserve">
          <source>This means that the two following regular expression objects that match a decimal number are functionally equal:</source>
          <target state="translated">これは、10進数に一致する次の2つの正規表現オブジェクトが機能的に等しいことを意味します。</target>
        </trans-unit>
        <trans-unit id="187d0bf1d6306583a1ebdb755911d7f2106320ea" translate="yes" xml:space="preserve">
          <source>This means that whenever you use a queue you need to make sure that all items which have been put on the queue will eventually be removed before the process is joined. Otherwise you cannot be sure that processes which have put items on the queue will terminate. Remember also that non-daemonic processes will be joined automatically.</source>
          <target state="translated">これは、キューを使用するときはいつでも、キューに入れられたすべてのアイテムが、 プロセスが参加する前に最終的に取り除かれることを確実にする必要があることを意味します。そうでなければ、キューにアイテムを置いたプロセスが終了するかどうかを確実に確認することはできません。また、デーモニックでないプロセスは自動的に結合されることも覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="9817fb9c501a121ab442e1e4282e427fff6978b6" translate="yes" xml:space="preserve">
          <source>This member is either &lt;code&gt;None&lt;/code&gt; or a dictionary containing Python objects that need to be kept alive so that the memory block contents is kept valid. This object is only exposed for debugging; never modify the contents of this dictionary.</source>
          <target state="translated">このメンバーは、 &lt;code&gt;None&lt;/code&gt; か、メモリブロックの内容が有効に保たれるように維持する必要があるPythonオブジェクトを含むディクショナリです。このオブジェクトはデバッグ用にのみ公開されます。この辞書の内容を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="19498f3e018ff24394d0a46b95228fb1309cb56c" translate="yes" xml:space="preserve">
          <source>This method accepts a coroutine that can be used as a cleanup function.</source>
          <target state="translated">このメソッドは、クリーンアップ関数として使用できるコルーチンを受け取ります。</target>
        </trans-unit>
        <trans-unit id="92793d8fcf27264fb4882603d3336c40c35a73a1" translate="yes" xml:space="preserve">
          <source>This method acts like &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt;, but wakes up all waiting tasks.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; の&lt;/a&gt;ように動作しますが、待機中のすべてのタスクを起こします。</target>
        </trans-unit>
        <trans-unit id="83f0e2234ef971385137021b1ec6878c3710a2b1" translate="yes" xml:space="preserve">
          <source>This method adapts &lt;em&gt;obj&lt;/em&gt; to a ctypes type. It is called with the actual object used in a foreign function call when the type is present in the foreign function&amp;rsquo;s &lt;code&gt;argtypes&lt;/code&gt; tuple; it must return an object that can be used as a function call parameter.</source>
          <target state="translated">このメソッドは、&lt;em&gt;obj&lt;/em&gt;をctypes型に適合させます。型が外部関数の &lt;code&gt;argtypes&lt;/code&gt; タプルに存在する場合、外部関数呼び出しで使用される実際のオブジェクトを使用して呼び出されます。関数呼び出しパラメーターとして使用できるオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="de2226eb808a143726eafd45ebbb8317717428a5" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスが等しいかどうかを比較できます。</target>
        </trans-unit>
        <trans-unit id="0b6dcc44c46e0069eff06e296235ec7e5da5bc2d" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスを比較して不等かどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="3c994380cb521db6718872d973720d157f1919e6" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスが等しいかどうかを比較できます。</target>
        </trans-unit>
        <trans-unit id="1202fad2523717e5ef623e502b8584b2963f5fc1" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスを比較して不平等を確認できます。</target>
        </trans-unit>
        <trans-unit id="c8e548622fefef31da8300c3b5dbc9f09fa411e9" translate="yes" xml:space="preserve">
          <source>This method always quotes &lt;em&gt;fullurl&lt;/em&gt; using &lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは常に&lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;を使用して&lt;em&gt;fullurl&lt;/em&gt;を引用します。</target>
        </trans-unit>
        <trans-unit id="99aa254779e7ef574c52f729c661b871c547c933" translate="yes" xml:space="preserve">
          <source>This method always returns a list of values associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns an empty list if no such form field or value exists for &lt;em&gt;name&lt;/em&gt;. It returns a list consisting of one item if only one such value exists.</source>
          <target state="translated">このメソッドは常に、フォームフィールド&lt;em&gt;名に&lt;/em&gt;関連付けられた値のリストを返します。&lt;em&gt;nameに&lt;/em&gt;そのようなフォームフィールドまたは値が存在しない場合、メソッドは空のリストを返します。そのような値が1つしか存在しない場合は、1つのアイテムで構成されるリストを返します。</target>
        </trans-unit>
        <trans-unit id="5c5df80f39d51ba66e8859be874c5de7d1b311c2" translate="yes" xml:space="preserve">
          <source>This method always returns only one value associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns only the first value in case that more values were posted under such name. Please note that the order in which the values are received may vary from browser to browser and should not be counted on. &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; If no such form field or value exists then the method returns the value specified by the optional parameter &lt;em&gt;default&lt;/em&gt;. This parameter defaults to &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">このメソッドは常に、フォームフィールド&lt;em&gt;名に&lt;/em&gt;関連付けられた1つの値のみを返します。このような名前で追加の値が投稿された場​​合、メソッドは最初の値のみを返します。値が受信される順序はブラウザごとに異なる可能性があるため、期待してはいけないことに注意してください。&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;そのようなフォームフィールドまたは値が存在しない場合、メソッドはオプションのパラメーター&lt;em&gt;defaultで&lt;/em&gt;指定された値を返し&lt;em&gt;ます&lt;/em&gt;。指定しない場合、このパラメーターのデフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ab00db9f3f1ac5923263017d6c47d4a368ab0db0" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt;&lt;code&gt;helo()&lt;/code&gt;&lt;/a&gt; if there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session. It tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first.</source>
          <target state="translated">このセッションで以前に &lt;code&gt;EHLO&lt;/code&gt; または &lt;code&gt;HELO&lt;/code&gt; コマンドがなかった場合、このメソッドは&lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt; &lt;code&gt;helo()&lt;/code&gt; を&lt;/a&gt;呼び出します。最初にESMTP &lt;code&gt;EHLO&lt;/code&gt; を試行します。</target>
        </trans-unit>
        <trans-unit id="f3d3c489ac6f9b1031182090b6d35d21fd51ab55" translate="yes" xml:space="preserve">
          <source>This method can access the current error information using &lt;code&gt;sys.exc_info()&lt;/code&gt;, and should pass that information to &lt;em&gt;start_response&lt;/em&gt; when calling it (as described in the &amp;ldquo;Error Handling&amp;rdquo; section of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドは &lt;code&gt;sys.exc_info()&lt;/code&gt; を使用して現在のエラー情報にアクセスでき、&lt;em&gt;それ&lt;/em&gt;を呼び出すときにその情報を&lt;em&gt;start_response&lt;/em&gt;に渡す必要があります（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333の&lt;/strong&gt;&lt;/a&gt;「エラー処理」セクションで説明されています）。</target>
        </trans-unit>
        <trans-unit id="3fe72da74ea53d024f3c10009d6c535ecabca50f" translate="yes" xml:space="preserve">
          <source>This method can also be used as a decorator. When used as a decorator, &lt;em&gt;name&lt;/em&gt; can only be given as a keyword argument to register &lt;em&gt;function&lt;/em&gt; under &lt;em&gt;name&lt;/em&gt;. If no &lt;em&gt;name&lt;/em&gt; is given, &lt;code&gt;function.__name__&lt;/code&gt; will be used.</source>
          <target state="translated">このメソッドは、デコレータとしても使用できます。デコレータとして使用する場合、&lt;em&gt;名前は&lt;/em&gt;のみ登録するキーワード引数として指定することができます&lt;em&gt;機能を&lt;/em&gt;下の&lt;em&gt;名前&lt;/em&gt;。&lt;em&gt;名前&lt;/em&gt;を指定しない場合、 &lt;code&gt;function.__name__&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="05ba3520afb6b8d1c2cc9f5025b6e01795641a6b" translate="yes" xml:space="preserve">
          <source>This method can also load certification revocation lists (CRLs) in PEM or DER format. In order to make use of CRLs, &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; must be configured properly.</source>
          <target state="translated">このメソッドは、PEMまたはDER形式で証明書失効リスト（CRL）をロードすることもできます。CRLを使用するには、&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; を&lt;/a&gt;適切に構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2cbf4b4a0062a4ab6d1ec363b05db41b262c8d75" translate="yes" xml:space="preserve">
          <source>This method can also set additional value and type information for the specified key. The key identified by the key parameter must have been opened with &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">このメソッドは、指定されたキーに追加の値とタイプ情報を設定することもできます。keyパラメータで識別されるキーは、&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;アクセスで開かれている必要があります。</target>
        </trans-unit>
        <trans-unit id="73a7fb88081ff7799c7aff867ccc6018119a704f" translate="yes" xml:space="preserve">
          <source>This method can be called if the server is already accepting connections. Only one &lt;code&gt;serve_forever&lt;/code&gt; task can exist per one &lt;em&gt;Server&lt;/em&gt; object.</source>
          <target state="translated">このメソッドは、サーバーがすでに接続を受け入れている場合に呼び出すことができます。1つの&lt;em&gt;Server&lt;/em&gt;オブジェクトごとに存在できる &lt;code&gt;serve_forever&lt;/code&gt; タスクは1つだけです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="407438304b114d9ae1fc43a76729553a9b36a0e0" translate="yes" xml:space="preserve">
          <source>This method can be called to signal that the set of tests being run should be aborted by setting the &lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt;&lt;code&gt;shouldStop&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;True&lt;/code&gt;. &lt;code&gt;TestRunner&lt;/code&gt; objects should respect this flag and return without running any additional tests.</source>
          <target state="translated">このメソッドを呼び出して、&lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt; &lt;code&gt;shouldStop&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;True&lt;/code&gt; に設定することで、実行中の一連のテストを中止する必要があることを通知できます。 &lt;code&gt;TestRunner&lt;/code&gt; オブジェクトはこのフラグを尊重し、追加のテストを実行せずに戻る必要があります。</target>
        </trans-unit>
        <trans-unit id="10146130dff0e59381ebe13ea405d3f938543487" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a metaclass to customize the method resolution order for its instances. It is called at class instantiation, and its result is stored in &lt;a href=&quot;#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドをメタクラスでオーバーライドして、インスタンスのメソッド解決順序をカスタマイズできます。クラスのインスタンス化時に呼び出され、その結果は&lt;a href=&quot;#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; に&lt;/a&gt;格納されます。</target>
        </trans-unit>
        <trans-unit id="55106137d8d33136ba4a5c819c765b0982b2c16a" translate="yes" xml:space="preserve">
          <source>This method can be used by servers that accept connections outside of asyncio but that use asyncio to handle them.</source>
          <target state="translated">このメソッドは、asyncio の外で接続を受け付けるが、その処理には asyncio を使用するサーバで使用することができます。</target>
        </trans-unit>
        <trans-unit id="e0983394646b4255b9f804c3f4789957dcd10013" translate="yes" xml:space="preserve">
          <source>This method can be used to copy state between parsers.</source>
          <target state="translated">このメソッドは、パーサ間で状態をコピーするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6d5e0af7ffa6f4c1df88abb1f7b70552cbb5ba74" translate="yes" xml:space="preserve">
          <source>This method can deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates so much output that it blocks waiting for the OS pipe buffer to accept more data. Use the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; method when using pipes to avoid this condition.</source>
          <target state="translated">&lt;code&gt;stdout=PIPE&lt;/code&gt; または &lt;code&gt;stderr=PIPE&lt;/code&gt; を使用しているときにこのメソッドがデッドロックする可能性があり、子プロセスが大量の出力を生成するため、OSパイプバッファーがさらに多くのデータを受け入れるのをブロックします。パイプを使用する場合は、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、この状態を回避してください。</target>
        </trans-unit>
        <trans-unit id="0b6651beb5c50a02eebbeaabab1f23c94c2bc904" translate="yes" xml:space="preserve">
          <source>This method can only be called before the &lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt;&lt;code&gt;Parse()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt;&lt;code&gt;ParseFile()&lt;/code&gt;&lt;/a&gt; methods are called; calling it after either of those have been called causes &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; to be raised with the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt; &lt;code&gt;Parse()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt; &lt;code&gt;ParseFile()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出される前にのみ呼び出すことができます。これらのいずれかが呼び出された後に呼び出すと、&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; &lt;/a&gt;が発生し、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性が &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="2086b47fb4d10716127e87469a74bd3b1a4a8119" translate="yes" xml:space="preserve">
          <source>This method can only be called once and cannot be called after &lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt; have been called.</source>
          <target state="translated">このメソッドは一度だけ呼び出すことができ、&lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt; &lt;code&gt;Future.set_result()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt;が呼び出された後に呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="2cbd7d58d617b5e047b52fdaa579cb87df6296d7" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the transport (e.g. SSL) doesn&amp;rsquo;t support half-closed connections.</source>
          <target state="translated">トランスポート（SSLなど）がハーフクローズ接続をサポートしていない場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生さ&lt;/a&gt;せる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c195a6b614da560f82928764439dba94df4f8e23" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is caught and not raised.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生さ&lt;/a&gt;せる可能性がありますが、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;がキャッチされ、発生しません。</target>
        </trans-unit>
        <trans-unit id="50c32059ccb282fc0aeaf5852f83c3180c54f927" translate="yes" xml:space="preserve">
          <source>This method can return before any file object becomes ready or the timeout has elapsed if the current process receives a signal: in this case, an empty list will be returned.</source>
          <target state="translated">このメソッドは、現在のプロセスがシグナルを受信した場合、任意のファイルオブジェクトがレディになる前、またはタイムアウトが経過する前に返すことができます。</target>
        </trans-unit>
        <trans-unit id="552a056410da16d9e30d35242f865544f5b3c970" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;em&gt;frame&lt;/em&gt; is somewhere below &lt;code&gt;botframe&lt;/code&gt; in the call stack. &lt;code&gt;botframe&lt;/code&gt; is the frame in which debugging started.</source>
          <target state="translated">このメソッドは、&lt;em&gt;フレーム&lt;/em&gt;がコールスタックの &lt;code&gt;botframe&lt;/code&gt; の下にあるかどうかをチェックします。 &lt;code&gt;botframe&lt;/code&gt; は、デバッグを開始したフレームです。</target>
        </trans-unit>
        <trans-unit id="ec7dec729e2fd25621dc1130cbf525c748669b5c" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename and line belonging to &lt;em&gt;frame&lt;/em&gt; or, at least, in the current function. If the breakpoint is a temporary one, this method deletes it.</source>
          <target state="translated">このメソッドは、&lt;em&gt;フレームに&lt;/em&gt;属するファイル名と行、または少なくとも現在の関数にブレークポイントがあるかどうかをチェックします。ブレークポイントが一時的なものである場合、このメソッドはそれを削除します。</target>
        </trans-unit>
        <trans-unit id="4783154b5e95272a1ed6bc7a0f70e86690e5ac92" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename of the current frame.</source>
          <target state="translated">このメソッドは、現在のフレームのファイル名にブレークポイントがあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="1e7363c3caa003283906714b3fc1e39f30b891d3" translate="yes" xml:space="preserve">
          <source>This method chops the iterable into a number of chunks which it submits to the process pool as separate tasks. The (approximate) size of these chunks can be specified by setting &lt;em&gt;chunksize&lt;/em&gt; to a positive integer.</source>
          <target state="translated">このメソッドは、イテラブルをいくつかのチャンクに分割し、個別のタスクとしてプロセスプールに送信します。これらのチャンクの（おおよその）サイズは、&lt;em&gt;chunksize&lt;/em&gt;を正の整数に設定することで指定できます。</target>
        </trans-unit>
        <trans-unit id="bd737781891d8c8772e3aff8b3ba708b987d4de2" translate="yes" xml:space="preserve">
          <source>This method clears all queues and shuts down the executor, but does not wait for the executor to finish.</source>
          <target state="translated">このメソッドは、すべてのキューをクリアして実行者をシャットダウンしますが、実行者が終了するのを待つことはありません。</target>
        </trans-unit>
        <trans-unit id="c76f659ef31aff87035b3704b8e27300ed051239" translate="yes" xml:space="preserve">
          <source>This method closes the open mixer device file. Any further attempts to use the mixer after this file is closed will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、開いているミキサーデバイスファイルを閉じます。このファイルを閉じた後にミキサーを使用しようとすると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dea536dd7b820dc65ea547cc98bb34d86563082b" translate="yes" xml:space="preserve">
          <source>This method commits the current transaction. If you don&amp;rsquo;t call this method, anything you did since the last call to &lt;code&gt;commit()&lt;/code&gt; is not visible from other database connections. If you wonder why you don&amp;rsquo;t see the data you&amp;rsquo;ve written to the database, please check you didn&amp;rsquo;t forget to call this method.</source>
          <target state="translated">このメソッドは、現在のトランザクションをコミットします。このメソッドを呼び出さない場合、最後に &lt;code&gt;commit()&lt;/code&gt; を呼び出してから行った操作は、他のデータベース接続からは見えません。データベースに書き込んだデータが表示されない理由がわからない場合は、このメソッドを呼び出すのを忘れていないか確認してください。</target>
        </trans-unit>
        <trans-unit id="38bab54e5484d9d6191a130b9832361ee4787af1" translate="yes" xml:space="preserve">
          <source>This method continues to send to the socket until either all data in &lt;em&gt;data&lt;/em&gt; has been sent or an error occurs. &lt;code&gt;None&lt;/code&gt; is returned on success. On error, an exception is raised. Additionally, there is no way to determine how much data, if any, was successfully processed by the receiving end of the connection.</source>
          <target state="translated">この方法は、内のすべてのデータのいずれかまで、ソケットに送信し続け&lt;em&gt;、データが&lt;/em&gt;送られてきたか、エラーが発生しました。成功しても &lt;code&gt;None&lt;/code&gt; も返されません。エラーの場合、例外が発生します。さらに、接続の受信側で正常に処理されたデータがある場合、その量を判別する方法はありません。</target>
        </trans-unit>
        <trans-unit id="1fe15dbe299e6059c7cb4f652892203f2294ed3f" translate="yes" xml:space="preserve">
          <source>This method creates a ctypes instance, copying the buffer from the &lt;em&gt;source&lt;/em&gt; object buffer which must be readable. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドはctypesインスタンスを作成し、読み取り可能な&lt;em&gt;ソース&lt;/em&gt;オブジェクトバッファーからバッファーをコピーします。オプションの&lt;em&gt;オフセット&lt;/em&gt;パラメータは、ソースバッファへのオフセットをバイト単位で指定します。デフォルトはゼロです。ソースバッファーが十分に大きくない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="79e2c7a916c893d0cae05eee7a9e693d20944423" translate="yes" xml:space="preserve">
          <source>This method does an &lt;a href=&quot;#select.devpoll.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; followed by a &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is (a bit) more efficient that doing the same explicitly.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#select.devpoll.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; に&lt;/a&gt;続いて&lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; を実行し&lt;/a&gt;ます。同じことを明示的に行うよりも（少し）より効率的です。</target>
        </trans-unit>
        <trans-unit id="42dfa15b7a4aea5dabe3cc75fbe1eb5bf58cca52" translate="yes" xml:space="preserve">
          <source>This method does an implicit stream flush before setting the new parameters.</source>
          <target state="translated">このメソッドは、新しいパラメータを設定する前に暗黙のストリームフラッシュを行います。</target>
        </trans-unit>
        <trans-unit id="6309e3677b4c32db7759a47b019d92bd0f697365" translate="yes" xml:space="preserve">
          <source>This method does not block; it buffers the data and arranges for it to be sent out asynchronously.</source>
          <target state="translated">このメソッドはブロックせず、データをバッファリングして非同期に送信するように手配します。</target>
        </trans-unit>
        <trans-unit id="39a877e637d53097551d0de19b8adfb6f42d8211" translate="yes" xml:space="preserve">
          <source>This method does nothing.</source>
          <target state="translated">この方法では何もしません。</target>
        </trans-unit>
        <trans-unit id="13c34741b5804dbdc5a7f011bfea01867ca0bbd5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all function that were called by the indicated function. Aside from this reversal of direction of calls (re: called vs was called by), the arguments and ordering are identical to the &lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt;&lt;code&gt;print_callers()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、指定された関数によって呼び出されたすべての関数のリストを出力します。この呼び出し方向の逆転（re：呼び出されたvs呼び出された側）を除いて、引数と順序は&lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt; &lt;code&gt;print_callers()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="d1b2e760f26585a985b75f4056f33711aaf0b4c5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all functions that called each function in the profiled database. The ordering is identical to that provided by &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt;, and the definition of the restricting argument is also identical. Each caller is reported on its own line. The format differs slightly depending on the profiler that produced the stats:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、プロファイルされたデータベースの各関数を呼び出したすべての関数のリストを出力します。順序は、&lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt;によって提供される順序と同じであり、制限引数の定義も同じです。各発信者は、独自の行で報告されます。形式は、統計を生成したプロファイラーによって若干異なります。</target>
        </trans-unit>
        <trans-unit id="91f040b4faec2d515745438e522e71fd3894c37d" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints out a report as described in the &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;定義で説明されているようにレポートを出力します。</target>
        </trans-unit>
        <trans-unit id="46c2ee0829732fa2fde7eb2dae1e52cfee073229" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class removes all leading path information from file names. It is very useful in reducing the size of the printout to fit within (close to) 80 columns. This method modifies the object, and the stripped information is lost. After performing a strip operation, the object is considered to have its entries in a &amp;ldquo;random&amp;rdquo; order, as it was just after object initialization and loading. If &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; causes two function names to be indistinguishable (they are on the same line of the same filename, and have the same function name), then the statistics for these two entries are accumulated into a single entry.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、ファイル名からすべての先行パス情報を削除します。これは、80カラム以内（に近い）に収まるように印刷出力のサイズを縮小するのに非常に役立ちます。このメソッドはオブジェクトを変更し、除去された情報は失われます。オブジェクトの初期化とロードの直後だったため、ストリップ操作を実行した後、オブジェクトは「ランダムな」順序でエントリを持つと見なされます。場合&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt; 2人の関数名を区別できないことが原因と（彼らは同じファイル名の同じライン上にあり、同じ関数名を持っている）、これらの2つのエントリの統計情報を単一のエントリに蓄積されています。</target>
        </trans-unit>
        <trans-unit id="1409b161813035807a55bae77d9d7acbceace27b" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class reverses the ordering of the basic list within the object. Note that by default ascending vs descending order is properly selected based on the sort key of choice.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、オブジェクト内の基本リストの順序を逆にします。デフォルトでは、選択したソートキーに基づいて、昇順または降順が適切に選択されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="accee55957c312a1850cca5c1863fffc7c622366" translate="yes" xml:space="preserve">
          <source>This method generates an error message leader in the format of a Unix C compiler error label; the format is &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt;, where the &lt;code&gt;%s&lt;/code&gt; is replaced with the name of the current source file and the &lt;code&gt;%d&lt;/code&gt; with the current input line number (the optional arguments can be used to override these).</source>
          <target state="translated">このメソッドは、Unix Cコンパイラのエラーラベルの形式でエラーメッセージリーダーを生成します。形式は &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt; 。ここで、 &lt;code&gt;%s&lt;/code&gt; は現在のソースファイルの名前に置き換えられ、 &lt;code&gt;%d&lt;/code&gt; は現在の入力行番号に置き換えられます（オプションの引数を使用してこれらを上書きできます）。 。</target>
        </trans-unit>
        <trans-unit id="ab5e0cb7aa04565d02104cf51103e0e449b87a97" translate="yes" xml:space="preserve">
          <source>This method has to be called to ensure that underlying resources are cleaned-up.</source>
          <target state="translated">このメソッドは、基礎となるリソースがクリーンアップされていることを確認するために呼び出されなければなりません。</target>
        </trans-unit>
        <trans-unit id="331fcb4951405022dc8158f5e6b8f3643d5dcac8" translate="yes" xml:space="preserve">
          <source>This method implements the to-number operation of the IBM specification. If the argument is a string, no leading or trailing whitespace or underscores are permitted.</source>
          <target state="translated">このメソッドは、IBM 仕様の to-number 操作を実装します。引数が文字列の場合、先頭または末尾の空白やアンダースコアは許可されません。</target>
        </trans-unit>
        <trans-unit id="ea7bc1d92f04efbde59e80bcc1aa6987de53f1ed" translate="yes" xml:space="preserve">
          <source>This method installs &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; into the built-in namespace, binding it to &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、組み込みの名前空間に&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;をインストールし、それを &lt;code&gt;_&lt;/code&gt; にバインドします。</target>
        </trans-unit>
        <trans-unit id="b650bd083066fb7b32ea3a59211f198619f61efc" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs with no specific registered handler to open it.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定の登録済みハンドラーを持たないすべてのURLをキャッチして開く場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e0a5010ef1ad88b00b90339dfae674e6bb9136c" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、すべてのURLをキャッチしたい場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="774438cdf07e39e3e6c8d23d09c95f16acf3695e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to handle URLs with the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルでURLを処理したい場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="9a9cdb8234013d6e3c19e46c3246b2cc09d3442f" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to post-process responses of the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルの応答を後処理する場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c75df0a7bff13cd0e3f5e4caa6aded657e9562e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to pre-process requests of the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルのリクエストを前処理する場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="3c7ad9f09ceaada2d47a78bd99c6bbb39e61d57e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should override it if they intend to provide a catch-all for otherwise unhandled HTTP errors. It will be called automatically by the &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; getting the error, and should not normally be called in other circumstances.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;で定義されて&lt;em&gt;いません&lt;/em&gt;が、サブクラスは、処理されていないHTTPエラーのキャッチオールを提供するつもりであれば、オーバーライドする必要があります。エラーが発生した&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって自動的に呼び出されます。通常、他の状況では呼び出されません。</target>
        </trans-unit>
        <trans-unit id="dfa69d3953d3eb2beb1c0eca7aee210715c53a6e" translate="yes" xml:space="preserve">
          <source>This method is a WSGI application to generate an error page for the user. It is only invoked if an error occurs before headers are sent to the client.</source>
          <target state="translated">このメソッドは、ユーザのためにエラーページを生成するためのWSGIアプリケーションです。ヘッダがクライアントに送信される前にエラーが発生した場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6f12537a7fc1c2e7162c9359e9edb423ac1e11cb" translate="yes" xml:space="preserve">
          <source>This method is a convenient way of asserting that the last call has been made in a particular way:</source>
          <target state="translated">このメソッドは、最後の呼び出しが特定の方法で行われたことを保証する便利な方法です。</target>
        </trans-unit>
        <trans-unit id="db33534558dd6010fe1a2ce1248cebf9374038a7" translate="yes" xml:space="preserve">
          <source>This method is a shorthand for certain &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">このメソッドは、特定の&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;呼び出しの省略形です。</target>
        </trans-unit>
        <trans-unit id="4c26f67a97d1ef429fc2262c07876bc620c73fa6" translate="yes" xml:space="preserve">
          <source>This method is an optimization. It removes the need for checking every cookie with a particular domain (which might involve reading many files). Returning true from &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; leaves all the work to &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は最適化です。特定のドメイン（多くのファイルの読み取りを伴う可能性があります）ですべてのCookieをチェックする必要がなくなります。&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;からtrueを返すと、すべての作業が&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; に&lt;/a&gt;任されます。</target>
        </trans-unit>
        <trans-unit id="2f13e10218d52bc14c398580fbb5847c80ef680a" translate="yes" xml:space="preserve">
          <source>This method is called after close has been called to reset the parser so that it is ready to parse new documents. The results of calling parse or feed after close without calling reset are undefined.</source>
          <target state="translated">このメソッドは、close が呼び出された後に呼び出され、パーサをリセットして新しいドキュメントを解析できるようにします。close の後に reset を呼び出さずに parse または feed を呼び出した結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="8f681be9592e79695afc941d306faad07ca7074f" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、要求されたキーが見つからない場合に、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。それが返すか発生させるものは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;によって返されるか発生します。</target>
        </trans-unit>
        <trans-unit id="ca5cd597958a55feba59538cd823db6f1757425f" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt;&lt;code&gt;dispatch_call()&lt;/code&gt;&lt;/a&gt; when there is the possibility that a break might be necessary anywhere inside the called function.</source>
          <target state="translated">このメソッドは、呼び出された関数内のどこかでブレークが必要になる可能性がある場合に、&lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt; &lt;code&gt;dispatch_call()&lt;/code&gt; &lt;/a&gt;から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2a648f403a2f03bb18de23aaed8ae35a5ed0171d" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt;&lt;code&gt;dispatch_exception()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、から呼び出される&lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt; &lt;code&gt;dispatch_exception()&lt;/code&gt; &lt;/a&gt;とき&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; が&lt;/a&gt;得 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15dc6e44bad2f4483f0eb7df451d9c71e914b252" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt;&lt;code&gt;dispatch_line()&lt;/code&gt;&lt;/a&gt; when either &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt;&lt;code&gt;break_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt; &lt;code&gt;break_here()&lt;/code&gt; の&lt;/a&gt;いずれかが &lt;code&gt;True&lt;/code&gt; を生成したときに&lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt; &lt;code&gt;dispatch_line()&lt;/code&gt; &lt;/a&gt;から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="98e84fb726ba7d465a759a50ecf0dc2de47d13ff" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt;&lt;code&gt;dispatch_return()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、から呼び出される&lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt; &lt;code&gt;dispatch_return()&lt;/code&gt; &lt;/a&gt;とき&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; が&lt;/a&gt;得 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a02c40de1371e57d58beb2caa096cce464a3453" translate="yes" xml:space="preserve">
          <source>This method is called in rare conditions, when the transport (e.g. UDP) detects that a datagram could not be delivered to its recipient. In many conditions though, undeliverable datagrams will be silently dropped.</source>
          <target state="translated">このメソッドは、トランスポート(UDPなど)がデータグラムを受信者に送 信できなかったことを検出した場合に、まれに呼び出される。しかし、多くの状況では、配信不可能なデータグラムは黙ってドロップされる。</target>
        </trans-unit>
        <trans-unit id="021d411ee8557a5431f25adec004b2c8f9a32dd5" translate="yes" xml:space="preserve">
          <source>This method is called to handle an HTML doctype declaration (e.g. &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、HTML doctype宣言を処理するために呼び出されます（例： &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fd8d299a2cd0f21cfa448069764a167e9c313432" translate="yes" xml:space="preserve">
          <source>This method is called to handle the end tag of an element (e.g. &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、要素（例： &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ）の終了タグを処理するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="60f522853fb2ae7781965ad938ace085974516d9" translate="yes" xml:space="preserve">
          <source>This method is called to handle the start of a tag (e.g. &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、タグの開始を処理するために呼び出されます（例： &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="78e8fd9b96db05d7a2b36f348576340eb21ea97e" translate="yes" xml:space="preserve">
          <source>This method is called to process a named character reference of the form &lt;code&gt;&amp;amp;name;&lt;/code&gt; (e.g. &lt;code&gt;&amp;amp;gt;&lt;/code&gt;), where &lt;em&gt;name&lt;/em&gt; is a general entity reference (e.g. &lt;code&gt;'gt'&lt;/code&gt;). This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&amp;amp;name;&lt;/code&gt; 形式の名前付き文字参照を処理するために呼び出されます。（例： &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ）、ここで&lt;em&gt;name&lt;/em&gt;は一般的なエンティティ参照（例： &lt;code&gt;'gt'&lt;/code&gt; ）です。&lt;em&gt;convert_charrefs&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このメソッドは決して呼び出されません。</target>
        </trans-unit>
        <trans-unit id="fb85f0254c8bad935b85ebf8734852604581fb1b" translate="yes" xml:space="preserve">
          <source>This method is called to process arbitrary data (e.g. text nodes and the content of &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、任意のデータを処理するために呼び出されます（たとえば、テキストノードと &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; のコンテンツ）。</target>
        </trans-unit>
        <trans-unit id="6e9e01f728ac0f3b55f6b12a74a0191fb1f47305" translate="yes" xml:space="preserve">
          <source>This method is called to process decimal and hexadecimal numeric character references of the form &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; and &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt;. For example, the decimal equivalent for &lt;code&gt;&amp;amp;gt;&lt;/code&gt; is &lt;code&gt;&amp;amp;#62;&lt;/code&gt;, whereas the hexadecimal is &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt;; in this case the method will receive &lt;code&gt;'62'&lt;/code&gt; or &lt;code&gt;'x3E'&lt;/code&gt;. This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; 形式の10進数および16進数の数字参照を処理するために呼び出されます。および &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt; 。たとえば、 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; に相当する10進数。ある &lt;code&gt;&amp;amp;#62;&lt;/code&gt; 、16進数は &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt; ; この場合、メソッドは &lt;code&gt;'62'&lt;/code&gt; または &lt;code&gt;'x3E'&lt;/code&gt; を受け取ります。&lt;em&gt;convert_charrefs&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このメソッドは決して呼び出されません。</target>
        </trans-unit>
        <trans-unit id="780c3c6664f5680442ea9564301d3230a6f7d6e3" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">この方法は、無条件の後に呼び出される&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;、または後の&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;場合の&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6f7e5a7533d2f0589f3c906a5b3e37e2cdfcac0b" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">この方法は、後に無条件に呼び出され&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt;、または後&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;場合&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; は&lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6c401fde11b1d87c3294f0c6adb80e04c2f1324b" translate="yes" xml:space="preserve">
          <source>This method is called when a comment is encountered (e.g. &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、コメントが検出されたときに呼び出されます（例： &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="083f5bbf1b7fefcdcebe71d540d8eb6862687fcd" translate="yes" xml:space="preserve">
          <source>This method is called when an unrecognized declaration is read by the parser.</source>
          <target state="translated">このメソッドは、認識されていない宣言がパーサによって読み込まれたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="48ae32338e51d99f49068d32f552aa62126cb367" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt;&lt;code&gt;inspect.iscoroutine()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutines.</source>
          <target state="translated">このメソッドは、ジェネレーターベースのコルーチンに対して &lt;code&gt;True&lt;/code&gt; を返すため、&lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt; &lt;code&gt;inspect.iscoroutine()&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="bc40e25a45ba1a58708d3089e289be86a7db029b" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt;&lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutine functions decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@coroutine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は、異なる&lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt; &lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt;が返すため &lt;code&gt;True&lt;/code&gt; で装飾ジェネレータベースコルーチン関数の&lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@coroutine&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dddb9624f73389ca6bf646c24e53304c5b5057e6" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but without a &lt;code&gt;tz&lt;/code&gt; parameter.</source>
          <target state="translated">このメソッドは機能的に&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;と同等ですが、 &lt;code&gt;tz&lt;/code&gt; パラメータはありません。</target>
        </trans-unit>
        <trans-unit id="b97d3051bc701554dcad211b236f67ff88970be3" translate="yes" xml:space="preserve">
          <source>This method is idempotent and irreversible. No other methods should be called after the event loop is closed.</source>
          <target state="translated">このメソッドはアイドempotentであり、不可逆的です。イベントループが閉じられた後は、他のメソッドを呼び出してはいけません。</target>
        </trans-unit>
        <trans-unit id="7892f36db958bf60c1b533b160c0617375239772" translate="yes" xml:space="preserve">
          <source>This method is idempotent, so it can be called when the server is already being serving.</source>
          <target state="translated">このメソッドは、サーバがすでにサービスを提供しているときに呼び出すことができるようになっています。</target>
        </trans-unit>
        <trans-unit id="9ae00641b6d229770d0d819ba1e3ef91e3d7719d" translate="yes" xml:space="preserve">
          <source>This method is not available if &lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt;&lt;code&gt;HAS_ECDH&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt; &lt;code&gt;HAS_ECDH&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは使用できません。</target>
        </trans-unit>
        <trans-unit id="57ee157b53728379894b4f3c33a03f1d7afbf61f" translate="yes" xml:space="preserve">
          <source>This method is not called directly by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, but it&amp;rsquo;s used to implement &lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt;&lt;code&gt;assertListEqual()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt;&lt;code&gt;assertTupleEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;によって直接呼び出されるのではなく、&lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt; &lt;code&gt;assertListEqual()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt; &lt;code&gt;assertTupleEqual()&lt;/code&gt; &lt;/a&gt;を実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="96313c3d6a35f154b39764123b93a03916b5cfad" translate="yes" xml:space="preserve">
          <source>This method is not thread-safe.</source>
          <target state="translated">このメソッドはスレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="0b1b157e68e0328b341b72985baa5aa977263159" translate="yes" xml:space="preserve">
          <source>This method is provided as a hook to allow subclasses to modify the way objects are converted to strings. The default implementation uses the internals of the &lt;a href=&quot;#pprint.saferepr&quot;&gt;&lt;code&gt;saferepr()&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">このメソッドは、サブクラスがオブジェクトを文字列に変換する方法を変更できるようにするフックとして提供されます。デフォルトの実装では、&lt;a href=&quot;#pprint.saferepr&quot;&gt; &lt;code&gt;saferepr()&lt;/code&gt; &lt;/a&gt;実装の内部を使用します。</target>
        </trans-unit>
        <trans-unit id="e4bdac2933048c44528e57a8429191db425bd284" translate="yes" xml:space="preserve">
          <source>This method is the main public interface to the &lt;code&gt;TextTestRunner&lt;/code&gt;. This method takes a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instance. A &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; is created by calling &lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt;&lt;code&gt;_makeResult()&lt;/code&gt;&lt;/a&gt; and the test(s) are run and the results printed to stdout.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;TextTestRunner&lt;/code&gt; へのメインのパブリックインターフェイスです。このメソッドは、&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスを取ります。A &lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; を&lt;/a&gt;呼び出すことによって作成された&lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt; &lt;code&gt;_makeResult()&lt;/code&gt; &lt;/a&gt;とテスト（複数可）を実行し、結果を標準出力に出力されます。</target>
        </trans-unit>
        <trans-unit id="9bd2fdab8cd5bcb3e3fbca53f4ef470344341c92" translate="yes" xml:space="preserve">
          <source>This method lets users assign non-string values to keys internally. This behaviour is unsupported and will cause errors when attempting to write to a file or get it in non-raw mode. &lt;strong&gt;Use the mapping protocol API&lt;/strong&gt; which does not allow such assignments to take place.</source>
          <target state="translated">このメソッドにより、ユーザーは文字列以外の値をキーに内部的に割り当てることができます。この動作はサポートされておらず、ファイルへの書き込みや非ローモードでの取得を試みるとエラーが発生します。このような割り当てを許可しない&lt;strong&gt;マッピングプロトコルAPI&lt;/strong&gt;を&lt;strong&gt;使用してください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9e630d695c2a5ae538aa534d3f87ea68ff8127b6" translate="yes" xml:space="preserve">
          <source>This method makes a backup of a SQLite database even while it&amp;rsquo;s being accessed by other clients, or concurrently by the same connection. The copy will be written into the mandatory argument &lt;em&gt;target&lt;/em&gt;, that must be another &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">この方法は、他のクライアントから、または同じ接続によって同時にアクセスされている場合でも、SQLiteデータベースのバックアップを作成します。コピーは必須引数&lt;em&gt;targetに&lt;/em&gt;書き込まれます。これは別の&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;インスタンスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8a02a1158ac4fe9ca33054075ba7d7b80db9ab50" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt; exception if the barrier is broken or reset while a thread is waiting.</source>
          <target state="translated">このメソッドは、スレッドの待機中にバリアが&lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt;またはリセットされると、BrokenBarrierError例外を発生させる場合があります。</target>
        </trans-unit>
        <trans-unit id="c5c3086f7c1e4aa9151125cf96d263eefadc9725" translate="yes" xml:space="preserve">
          <source>This method may raise the following exceptions:</source>
          <target state="translated">このメソッドは以下の例外を発生させることがあります。</target>
        </trans-unit>
        <trans-unit id="8524f745e5bc38fb37ffab27510d6080ece56f38" translate="yes" xml:space="preserve">
          <source>This method may return a false value (including &lt;code&gt;None&lt;/code&gt;), in which case the transport will close itself. Conversely, if this method returns a true value, the protocol used determines whether to close the transport. Since the default implementation returns &lt;code&gt;None&lt;/code&gt;, it implicitly closes the connection.</source>
          <target state="translated">このメソッドはfalse値（ &lt;code&gt;None&lt;/code&gt; を含む）を返す場合があります。その場合、トランスポートは自身を閉じます。逆に、このメソッドがtrue値を返す場合、使用されるプロトコルがトランスポートを閉じるかどうかを決定します。デフォルトの実装は &lt;code&gt;None&lt;/code&gt; を返すため、暗黙的に接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="fea30f06bff8ed9f1510d9b11d7230de71e381c5" translate="yes" xml:space="preserve">
          <source>This method modifies the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object by sorting it according to the supplied criteria. The argument can be either a string or a SortKey enum identifying the basis of a sort (example: &lt;code&gt;'time'&lt;/code&gt;, &lt;code&gt;'name'&lt;/code&gt;, &lt;code&gt;SortKey.TIME&lt;/code&gt; or &lt;code&gt;SortKey.NAME&lt;/code&gt;). The SortKey enums argument have advantage over the string argument in that it is more robust and less error prone.</source>
          <target state="translated">このメソッドは、指定された基準に従ってソートすることにより、&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;オブジェクトを変更します。引数は、文字列または並べ替えの基礎を識別するSortKey列挙型（例： &lt;code&gt;'time'&lt;/code&gt; 、 &lt;code&gt;'name'&lt;/code&gt; 、 &lt;code&gt;SortKey.TIME&lt;/code&gt; または &lt;code&gt;SortKey.NAME&lt;/code&gt; ）のいずれかです。SortKey enums引数は、文字列引数よりも堅牢で、エラーが発生しにくいという利点があります。</target>
        </trans-unit>
        <trans-unit id="4b67339d7ffa22b6989fc78c8f895cf57a483d57" translate="yes" xml:space="preserve">
          <source>This method modifies the sequence in place for economy of space when sorting a large sequence. To remind users that it operates by side effect, it does not return the sorted sequence (use &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; to explicitly request a new sorted list instance).</source>
          <target state="translated">このメソッドは、大きなシーケンスをソートするときにスペースを節約するために、シーケンスを適切に変更します。副作用で動作することをユーザーに思い出させるために、それはソートされたシーケンスを返しません（&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;を使用して、新しいソートされたリストインスタンスを明示的に要求します）。</target>
        </trans-unit>
        <trans-unit id="3d73c5e146a430709549e8f05dfe23e4b86723e9" translate="yes" xml:space="preserve">
          <source>This method must be implemented by derived classes.</source>
          <target state="translated">このメソッドは派生クラスで実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ecb603ce556cad65f00fa7a55aabb53317aee850" translate="yes" xml:space="preserve">
          <source>This method of the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class accumulates additional profiling information into the current profiling object. Its arguments should refer to filenames created by the corresponding version of &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cProfile.run()&lt;/code&gt;. Statistics for identically named (re: file, line, name) functions are automatically accumulated into single function statistics.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、現在のプロファイリングオブジェクトに追加のプロファイリング情報を蓄積します。その引数は、対応するバージョンの&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;cProfile.run()&lt;/code&gt; によって作成されたファイル名を参照する必要があります。同じ名前の（re：ファイル、行、名前）関数の統計は、単一の関数統計に自動的に蓄積されます。</target>
        </trans-unit>
        <trans-unit id="d9898a7b816caca92a7ca2b0496401b9be9be437" translate="yes" xml:space="preserve">
          <source>This method prints a usage message including the &lt;em&gt;message&lt;/em&gt; to the standard error and terminates the program with a status code of 2.</source>
          <target state="translated">この方法は、以下を含む使用メッセージ印刷&lt;em&gt;メッセージを&lt;/em&gt;標準誤差および2のステータスコードでプログラムを終了します。</target>
        </trans-unit>
        <trans-unit id="5e6533f5a1c6b28e058a5b665ce396bbe1c50304" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call. Once awakened, the Condition re-acquires its lock and this method returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、基になるロックを解放し、&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;呼び出しによって起こされるまでブロックします。起動すると、Conditionはそのロックを再取得し、このメソッドは &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b82153b14d869f12ca5d555943198e9ddc07c795" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call for the same condition variable in another thread, or until the optional timeout occurs. Once awakened or timed out, it re-acquires the lock and returns.</source>
          <target state="translated">このメソッドは、基礎となるロックを解放し、別のスレッドの同じ条件変数の&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;呼び出しによって起こされるまで、またはオプションのタイムアウトが発生するまでブロックします。起動またはタイムアウトすると、ロックを再取得して戻ります。</target>
        </trans-unit>
        <trans-unit id="944988049561328736ecf5958b62fc42047b6f2b" translate="yes" xml:space="preserve">
          <source>This method replaces the &lt;em&gt;Content-Type&lt;/em&gt; header, keeping all the parameters in place. If &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, this leaves the existing header&amp;rsquo;s quoting as is, otherwise the parameters will be quoted (the default).</source>
          <target state="translated">このメソッドは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーを置き換え、すべてのパラメーターを適切な場所に保持します。&lt;em&gt;requote&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、これは既存のヘッダーの引用をそのまま残します。そうでない場合、パラメーターは引用されます（デフォルト）。</target>
        </trans-unit>
        <trans-unit id="fa06c018512ee37e541d1e43b0f387b23671b215" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;None&lt;/code&gt; for the lock, since there is no underlying I/O to which access needs to be serialized.</source>
          <target state="translated">アクセスをシリアル化する必要がある基本的なI / Oがないため、このメソッドはロックに対して &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0a8c42b63ebbe3579b9c96c4e3249c2dcec50aba" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; if and only if the internal flag has been set to true, either before the wait call or after the wait starts, so it will always return &lt;code&gt;True&lt;/code&gt; except if a timeout is given and the operation times out.</source>
          <target state="translated">このメソッドが返す &lt;code&gt;True&lt;/code&gt; 場合にのみ、それは常に戻りますので、内部フラグは、いずれかの待機コールの前または待機を開始した後、trueに設定されている場合 &lt;code&gt;True&lt;/code&gt; タイムアウトが与えられ、操作がタイムアウトした場合を除いて。</target>
        </trans-unit>
        <trans-unit id="4ff21d78bbca2c17f4b0d82e526fde8ca8233fe2" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; just before the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method starts until just after the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates. The module function &lt;a href=&quot;#threading.enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; returns a list of all alive threads.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが開始する直前から&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが終了する直前まで &lt;code&gt;True&lt;/code&gt; を返します。モジュール関数&lt;a href=&quot;#threading.enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt;は、すべての有効なスレッドのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9a190b6d357c92f8c7b4a848b7c388e4f2261012" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="22aa37bf3e1d9f077cbe89f01a870cfdf0411629" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="342409adab7e89643138c3e03259c386365fe00e" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask indicating which control(s) are currently being used as a recording source.</source>
          <target state="translated">このメソッドは、現在どのコントロールが録画ソースとして使用されているかを示すビットマスクを返します。</target>
        </trans-unit>
        <trans-unit id="aabfc7d3078e2a06d6d9b67f429a304a5721d434" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask specifying the available mixer controls (&amp;ldquo;Control&amp;rdquo; being a specific mixable &amp;ldquo;channel&amp;rdquo;, such as &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; or &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt;). This bitmask indicates a subset of all available mixer controls&amp;mdash;the &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; constants defined at module level. To determine if, for example, the current mixer object supports a PCM mixer, use the following Python code:</source>
          <target state="translated">このメソッドは、使用可能なミキサーコントロールを指定するビットマスクを返します（「コントロール」は、 &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; や &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt; などの特定の混合可能な「チャネル」です）。このビットマスクは、使用可能なすべてのミキサーコントロールのサブセット、 &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; モジュールレベルで定義されたSOUND_MIXER_ *定数を示します。たとえば、現在のミキサーオブジェクトがPCMミキサーをサポートしているかどうかを確認するには、次のPythonコードを使用します。</target>
        </trans-unit>
        <trans-unit id="df978a925585d3eadcceedc0ad64b9fab01f1e83" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes instance that shares the buffer of the &lt;em&gt;source&lt;/em&gt; object. The &lt;em&gt;source&lt;/em&gt; object must support the writeable buffer interface. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドは、&lt;em&gt;ソース&lt;/em&gt;オブジェクトのバッファを共有するctypesインスタンスを返します。&lt;em&gt;ソース&lt;/em&gt;オブジェクトは、書き込み可能なバッファインタフェースをサポートしなければなりません。オプションの&lt;em&gt;オフセット&lt;/em&gt;パラメータは、ソースバッファへのオフセットをバイト単位で指定します。デフォルトはゼロです。ソースバッファーが十分に大きくない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="ac71e792e2a9c33ac33b83b3b71a840f15b878ae" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance exported by a shared library. &lt;em&gt;name&lt;/em&gt; is the name of the symbol that exports the data, &lt;em&gt;library&lt;/em&gt; is the loaded shared library.</source>
          <target state="translated">このメソッドは、共有ライブラリによってエクスポートされたctypesタイプのインスタンスを返します。&lt;em&gt;name&lt;/em&gt;はデータをエクスポートするシンボルの名前、&lt;em&gt;library&lt;/em&gt;はロードされた共有ライブラリです。</target>
        </trans-unit>
        <trans-unit id="bb20e4aecb1fc974d47968af508b600ed3725864" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance using the memory specified by &lt;em&gt;address&lt;/em&gt; which must be an integer.</source>
          <target state="translated">このメソッドは、整数でなければならない&lt;em&gt;アドレス&lt;/em&gt;で指定されたメモリを使用してctypesタイプのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="ec26fdb2340b8677da60daf61e4675ffcd3eae50" translate="yes" xml:space="preserve">
          <source>This method returns a list of 2-tuples of the form returned by &lt;code&gt;parseaddr()&lt;/code&gt;. &lt;em&gt;fieldvalues&lt;/em&gt; is a sequence of header field values as might be returned by &lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt;&lt;code&gt;Message.get_all&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a simple example that gets all the recipients of a message:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;parseaddr()&lt;/code&gt; によって返される形式の2タプルのリストを返します。&lt;em&gt;fieldvalues&lt;/em&gt;は、&lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt; &lt;code&gt;Message.get_all&lt;/code&gt; &lt;/a&gt;によって返される可能性のある一連のヘッダーフィールド値です。メッセージのすべての受信者を取得する簡単な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="73e29a95cda80e7acb29a92567265c1de92af438" translate="yes" xml:space="preserve">
          <source>This method returns a list of column names. Immediately after a query, it is the first member of each tuple in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、列名のリストを返します。クエリの直後は、&lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; &lt;/a&gt;の各タプルの最初のメンバーです。</target>
        </trans-unit>
        <trans-unit id="55bc27e05f930af9d7a7a49446bfdd2fb906a983" translate="yes" xml:space="preserve">
          <source>This method returns a list of strings, one for each (non-system) method supported by the XML-RPC server.</source>
          <target state="translated">このメソッドは、XML-RPC サーバがサポートする (非システムの)メソッドごとに 1 つずつ、文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="8b8fb986af78dbe250cc8c1951c634409b1ff5a1" translate="yes" xml:space="preserve">
          <source>This method returns the instance of &lt;code&gt;TestResult&lt;/code&gt; used by &lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;. It is not intended to be called directly, but can be overridden in subclasses to provide a custom &lt;code&gt;TestResult&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;によって使用される &lt;code&gt;TestResult&lt;/code&gt; のインスタンスを返します。直接呼び出すことは意図されていませんが、サブクラスでオーバーライドして、カスタム &lt;code&gt;TestResult&lt;/code&gt; を提供できます。</target>
        </trans-unit>
        <trans-unit id="708531771914c1b22ac7adc98a0e783146aec79d" translate="yes" xml:space="preserve">
          <source>This method rolls back any changes to the database since the last call to &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、最後に&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; を&lt;/a&gt;呼び出してからのデータベースへの変更をすべてロールバックします。</target>
        </trans-unit>
        <trans-unit id="14b5b4167215d3c5124bc8670df033b6ee05ce7b" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;と同様の目的を果たしますが、位置引数のみをサポートします。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;時に__new __（）メソッドに渡される引数 &lt;code&gt;args&lt;/code&gt; のタプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="1ca39179fbf1b58e9b5132d398a4ae61933bd01d" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'HEAD'&lt;/code&gt; request type: it sends the headers it would send for the equivalent &lt;code&gt;GET&lt;/code&gt; request. See the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; method for a more complete explanation of the possible headers.</source>
          <target state="translated">このメソッドは &lt;code&gt;'HEAD'&lt;/code&gt; リクエストタイプを提供します。同等の &lt;code&gt;GET&lt;/code&gt; リクエストに対して送信するヘッダーを送信します。可能なヘッダーの詳細については、&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="f7dbd08df48e0a9432fc27f2d1dc359d154264c6" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'POST'&lt;/code&gt; request type, only allowed for CGI scripts. Error 501, &amp;ldquo;Can only POST to CGI scripts&amp;rdquo;, is output when trying to POST to a non-CGI url.</source>
          <target state="translated">このメソッドは &lt;code&gt;'POST'&lt;/code&gt; リクエストタイプを提供し、CGIスクリプトでのみ許可されます。CGI以外のURLにPOSTしようとすると、エラー501「CGIスクリプトにのみPOSTできる」が出力されます。</target>
        </trans-unit>
        <trans-unit id="d8c66f9b775088a9351abd971856f1005e64496a" translate="yes" xml:space="preserve">
          <source>This method sets &lt;em&gt;tb&lt;/em&gt; as the new traceback for the exception and returns the exception object. It is usually used in exception handling code like this:</source>
          <target state="translated">このメソッドは、&lt;em&gt;tb&lt;/em&gt;を例外の新しいトレースバックとして設定し、例外オブジェクトを返します。通常、次のような例外処理コードで使用されます。</target>
        </trans-unit>
        <trans-unit id="39b545ecb6df97965a21adfe6fe3076dc16d39bf" translate="yes" xml:space="preserve">
          <source>This method should be called from &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; by a formatter which wants to make use of a formatted time. This method can be overridden in formatters to provide for any specific requirement, but the basic behavior is as follows: if &lt;em&gt;datefmt&lt;/em&gt; (a string) is specified, it is used with &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to format the creation time of the record. Otherwise, the format &amp;lsquo;%Y-%m-%d %H:%M:%S,uuu&amp;rsquo; is used, where the uuu part is a millisecond value and the other letters are as per the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; documentation. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;. The resulting string is returned.</source>
          <target state="translated">このメソッドは、フォーマットされた時間を利用したいフォーマッターによって&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;から呼び出されます。このメソッドは、特定の要件を提供するためにフォーマッターでオーバーライドできますが、基本的な動作は次のとおりです&lt;em&gt;。datefmt&lt;/em&gt;（文字列）が指定されている場合は、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;と共に使用して、レコードの作成時刻をフォーマットします。それ以外の場合は、「％Y-％m-％d％H：％M：％S、uuu」という形式が使用されます。ここで、uuuの部分はミリ秒の値で、その他の文字は&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。この形式の時間の例は &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; です。結果の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="60a2e03ebc40f5256939419e575a070656ab940e" translate="yes" xml:space="preserve">
          <source>This method should be called from handlers when an exception is encountered during an &lt;a href=&quot;#logging.Handler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt; call. If the module-level attribute &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, exceptions get silently ignored. This is what is mostly wanted for a logging system - most users will not care about errors in the logging system, they are more interested in application errors. You could, however, replace this with a custom handler if you wish. The specified record is the one which was being processed when the exception occurred. (The default value of &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as that is more useful during development).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#logging.Handler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;呼び出し中に例外が発生したときにハンドラーから呼び出す必要があります。モジュールレベルの属性 &lt;code&gt;raiseExceptions&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、例外は通知なく無視されます。これは主にロギングシステムに必要なものです。ほとんどのユーザーはロギングシステムのエラーを気にせず、アプリケーションエラーに関心があります。ただし、必要に応じて、これをカスタムハンドラーに置き換えることができます。指定されたレコードは、例外が発生したときに処理されていたレコードです。（ &lt;code&gt;raiseExceptions&lt;/code&gt; のデフォルト値は &lt;code&gt;True&lt;/code&gt; です。これは、開発時に役立ちます）。</target>
        </trans-unit>
        <trans-unit id="a9d5481f5b1f23faa3969748474f218efddfdcb0" translate="yes" xml:space="preserve">
          <source>This method should never return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">このメソッドが &lt;code&gt;None&lt;/code&gt; を返すことはありません。</target>
        </trans-unit>
        <trans-unit id="51cd700cee747b5ceb2075f98fd1f7dedbab9ae0" translate="yes" xml:space="preserve">
          <source>This method should not be overloaded in subclassed event loops. For custom exception handling, use the &lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt;&lt;code&gt;set_exception_handler()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、サブクラス化されたイベントループでオーバーロードしないでください。カスタム例外処理の場合は、&lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt; &lt;code&gt;set_exception_handler()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a065c99a954c6fdd1c3f8befb55be10a4fe3a9e9" translate="yes" xml:space="preserve">
          <source>This method should only be called by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations before executing the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; and by unit tests.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; に&lt;/a&gt;関連する作業を実行する前の&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;実装とユニットテストによってのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="86c36ea786adb5a31a67ae740b8c3850457fbdb7" translate="yes" xml:space="preserve">
          <source>This method should only be used by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations and unit tests.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; の&lt;/a&gt;実装と単体テストでのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="99aa205c4cdbbfefed6ade284534cab4156444b9" translate="yes" xml:space="preserve">
          <source>This method should only be used in low-level callback-based code.</source>
          <target state="translated">このメソッドは、低レベルのコールバックベースのコードでのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c1813fe7424980ca70bdf5ec66a9e369a420208" translate="yes" xml:space="preserve">
          <source>This method should return &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;NotImplemented&lt;/code&gt;. If it returns &lt;code&gt;True&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. If it returns &lt;code&gt;False&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is not considered a subclass of this ABC, even if it would normally be one. If it returns &lt;code&gt;NotImplemented&lt;/code&gt;, the subclass check is continued with the usual mechanism.</source>
          <target state="translated">このメソッドは &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;False&lt;/code&gt; 、または &lt;code&gt;NotImplemented&lt;/code&gt; を返す必要があります。それが返された場合は &lt;code&gt;True&lt;/code&gt; 、&lt;em&gt;サブクラスは&lt;/em&gt;このABCのサブクラスと考えられています。 &lt;code&gt;False&lt;/code&gt; が返された場合、&lt;em&gt;サブクラス&lt;/em&gt;は、通常ABCであっても、このABC の&lt;em&gt;サブクラス&lt;/em&gt;とは見なされません。 &lt;code&gt;NotImplemented&lt;/code&gt; を返す場合、サブクラスチェックは通常のメカニズムで続行されます。</target>
        </trans-unit>
        <trans-unit id="599855f85a3a01b3230b2de2277a7a28ed0b8262" translate="yes" xml:space="preserve">
          <source>This method simplifies subclassing of &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; の&lt;/a&gt;サブクラス化を簡素化します。</target>
        </trans-unit>
        <trans-unit id="7e52a16096b5729df1d34566cf03f37c1f7b86c3" translate="yes" xml:space="preserve">
          <source>This method sorts the list in place, using only &lt;code&gt;&amp;lt;&lt;/code&gt; comparisons between items. Exceptions are not suppressed - if any comparison operations fail, the entire sort operation will fail (and the list will likely be left in a partially modified state).</source>
          <target state="translated">このメソッドは、アイテム間の &lt;code&gt;&amp;lt;&lt;/code&gt; 比較のみを使用して、リストを所定の場所に並べ替えます。例外は抑制されません-比較操作が失敗すると、並べ替え操作全体が失敗します（リストは部分的に変更された状態のままになる可能性があります）。</target>
        </trans-unit>
        <trans-unit id="74613f7f1f1bca337b67bbd492f7c5eb7f319eab" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、次の行境界で分割されます。特に、境界は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル改行の&lt;/a&gt;スーパーセットです。</target>
        </trans-unit>
        <trans-unit id="58a68da18b44c96bba6604dc7f18a0823ef4fdfd" translate="yes" xml:space="preserve">
          <source>This method supports hostname checking via &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt;および&lt;em&gt;サーバー名表示&lt;/em&gt;（&lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; を&lt;/a&gt;参照）によるホスト名チェックをサポートしてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cd8fdaf763e9fa8074cf2ca63bc90b4b3cda9085" translate="yes" xml:space="preserve">
          <source>This method takes a single argument &lt;em&gt;arg_line&lt;/em&gt; which is a string read from the argument file. It returns a list of arguments parsed from this string. The method is called once per line read from the argument file, in order.</source>
          <target state="translated">このメソッドは、引数ファイルから読み取られた文字列である単一の引数&lt;em&gt;arg_line&lt;/em&gt;を取ります。この文字列から解析された引数のリストを返します。このメソッドは、引数ファイルから順番に読み込まれる1行ごとに1回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5c760fe49109a77818baccf2f47804b109f3c544" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns a documentation string describing the use of that method. If no such string is available, an empty string is returned. The documentation string may contain HTML markup.</source>
          <target state="translated">このメソッドは、XML-RPC サーバーで実装されているメソッドの名前を 1 つのパラメータとして受け取ります。そのメソッドの使用法を説明するドキュメント文字列を返します。そのような文字列がない場合は、空の文字列が返されます。ドキュメント文字列には HTML マークアップを含めることができます。</target>
        </trans-unit>
        <trans-unit id="f5893c1e14198034d5092ae81f02a960d68bc8da" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns an array of possible signatures for this method. A signature is an array of types. The first of these types is the return type of the method, the rest are parameters.</source>
          <target state="translated">このメソッドは、XML-RPC サーバで実装されているメソッドの名前を 1 つのパラメータとして受け取ります。このメソッドのシグネチャの配列を返します。シグネチャは型の配列です。これらの型のうち最初の型はメソッドの戻り値の型で、残りの型はパラメータです。</target>
        </trans-unit>
        <trans-unit id="818723afff8c189eecbb4fe7facf10c8cc63fb17" translate="yes" xml:space="preserve">
          <source>This method terminates the program, exiting with the specified &lt;em&gt;status&lt;/em&gt; and, if given, it prints a &lt;em&gt;message&lt;/em&gt; before that. The user can override this method to handle these steps differently:</source>
          <target state="translated">このメソッドはプログラムを終了し、指定された&lt;em&gt;ステータス&lt;/em&gt;で終了します。指定されている場合は、その前に&lt;em&gt;メッセージを&lt;/em&gt;出力し&lt;em&gt;ます&lt;/em&gt;。ユーザーはこのメソッドをオーバーライドして、これらのステップを異なる方法で処理できます。</target>
        </trans-unit>
        <trans-unit id="de6c72c35c2834f0369b1a4c798dc2bca2a384c4" translate="yes" xml:space="preserve">
          <source>This method transforms option names on every read, get, or set operation. The default converts the name to lowercase. This also means that when a configuration file gets written, all keys will be lowercase. Override this method if that&amp;rsquo;s unsuitable. For example:</source>
          <target state="translated">このメソッドは、読み取り、取得、または設定操作ごとにオプション名を変換します。デフォルトでは、名前が小文字に変換されます。これは、構成ファイルが書き込まれるときに、すべてのキーが小文字になることも意味します。それが不適切な場合は、このメソッドをオーバーライドしてください。例えば：</target>
        </trans-unit>
        <trans-unit id="1974694405c4c9389267ffd50b26d56c3503926c" translate="yes" xml:space="preserve">
          <source>This method waits until the lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">ロックがされるまで、この方法待機&lt;em&gt;ロック解除&lt;/em&gt;、に設定する&lt;em&gt;ロック&lt;/em&gt;戻る &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65f3add9f9cd63e05cc5f580948a304e6648c4a7" translate="yes" xml:space="preserve">
          <source>This method waits until the underlying lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">下層のロックがされるまで、この方法待機&lt;em&gt;ロック解除&lt;/em&gt;、に設定する&lt;em&gt;ロック&lt;/em&gt;戻る &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="454a025121549fe2bea2c118dd6191bd13eb086c" translate="yes" xml:space="preserve">
          <source>This method wakes up at most &lt;em&gt;n&lt;/em&gt; of the threads waiting for the condition variable; it is a no-op if no threads are waiting.</source>
          <target state="translated">このメソッドは、条件変数を待機している最大&lt;em&gt;n個&lt;/em&gt;のスレッドを起動します。待機中のスレッドがない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="9c2a082dfc19e539c561f64a6a5f07e702f02adc" translate="yes" xml:space="preserve">
          <source>This method will be called before any protocol-specific open method.</source>
          <target state="translated">このメソッドは、プロトコル固有のオープンメソッドの前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6efbbee23467f399d8225dc8abd523590b461d19" translate="yes" xml:space="preserve">
          <source>This method will parse and dispatch the request to the appropriate &lt;code&gt;do_*()&lt;/code&gt; method. You should never need to override it.</source>
          <target state="translated">このメソッドは、リクエストを解析して適切な &lt;code&gt;do_*()&lt;/code&gt; メソッドにディスパッチします。オーバーライドする必要はありません。</target>
        </trans-unit>
        <trans-unit id="cce13a8e7f0704d679b6f2119c6dcb9637067db5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt;&lt;code&gt;HAS_ALPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt; &lt;code&gt;HAS_ALPN&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f46ac96b947124dc48db380e519a659d718834f5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_NPN&quot;&gt;&lt;code&gt;HAS_NPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_NPN&quot;&gt; &lt;code&gt;HAS_NPN&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2af3b76ebd9cb9d935d4351697b99510998fe707" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the OpenSSL library had OPENSSL_NO_TLSEXT defined when it was built.</source>
          <target state="translated">OpenSSLライブラリーの作成時にOPENSSL_NO_TLSEXTが定義されている場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="d4e07593c623f5c1c4618b8ae83e426642a79bb4" translate="yes" xml:space="preserve">
          <source>This method will raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if called more than once on the same thread object.</source>
          <target state="translated">このメソッドは、同じスレッドオブジェクトで複数回呼び出されると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="cae724061ea4a293baa1b5febb7652b6d04b5e39" translate="yes" xml:space="preserve">
          <source>This method will return normally if the mail is accepted for at least one recipient. Otherwise it will raise an exception. That is, if this method does not raise an exception, then someone should get your mail. If this method does not raise an exception, it returns a dictionary, with one entry for each recipient that was refused. Each entry contains a tuple of the SMTP error code and the accompanying error message sent by the server.</source>
          <target state="translated">このメソッドは、少なくとも一人の受信者に対してメールが受理された場合に正常に返されます。そうでない場合は例外が発生します。つまり、このメソッドが例外を発生させなければ、誰かがあなたのメールを受け取るべきです。このメソッドが例外を発生させない場合は、拒否された各受信者のために1つのエントリを持つ辞書を返します。各エントリには、SMTP エラー・コードと、サーバによって送信されたそれに付随するエラーメッセージのタプルが含まれます。</target>
        </trans-unit>
        <trans-unit id="74d1b69630acadad9b7316b4df18afcaf8f4226d" translate="yes" xml:space="preserve">
          <source>This method will return when the &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; method returns a true value. The &lt;em&gt;stop&lt;/em&gt; argument to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; is the return value from the command&amp;rsquo;s corresponding &lt;code&gt;do_*()&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;メソッドがtrue値を返すときに返されます。&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;停止&lt;/em&gt;引数は、コマンドの対応する &lt;code&gt;do_*()&lt;/code&gt; メソッドからの戻り値です。</target>
        </trans-unit>
        <trans-unit id="69b9279828888f5b4b6bbb18c43609074bb5f6ee" translate="yes" xml:space="preserve">
          <source>This method will try to establish the connection in the background. When successful, it returns a &lt;code&gt;(transport, protocol)&lt;/code&gt; pair.</source>
          <target state="translated">このメソッドは、バックグラウンドで接続を確立しようとします。成功すると、 &lt;code&gt;(transport, protocol)&lt;/code&gt; ペアが返されます。</target>
        </trans-unit>
        <trans-unit id="2662a58cbe744756d2713c9a530353fadec108dd" translate="yes" xml:space="preserve">
          <source>This method works regardless of the warning filters in place when it is called.</source>
          <target state="translated">このメソッドは、このメソッドが呼び出されたときに配置されている警告フィルタに関係なく動作します。</target>
        </trans-unit>
        <trans-unit id="7b56ad7816b033a457026b1ed0aa528822772c71" translate="yes" xml:space="preserve">
          <source>This method&amp;rsquo;s behavior is the same as &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;call_later()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの動作は&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;call_later()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="e306011db50281eb5bb9fe7c8f6f67913bf9062d" translate="yes" xml:space="preserve">
          <source>This method, and others that indirectly call this method, raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata&lt;/code&gt; with argument &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">このメソッド、およびこのメソッドを間接的に呼び出す他のメソッドは、引数 &lt;code&gt;address&lt;/code&gt; で&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;ctypes.cdata&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="11a5f76d1a1de12dfdacfbc20e9a68e9c9a3edcf" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;response&lt;/em&gt; will be an object implementing the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The return value should implement the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;em&gt;req&lt;/em&gt;は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトになります。&lt;em&gt;response&lt;/em&gt;は、&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; の&lt;/a&gt;戻り値と同じインターフェースを実装するオブジェクトになります。戻り値は&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; の&lt;/a&gt;戻り値と同じインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="c12714c6416b6db1ab32f9c47808d5ed1c2f903a" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. The return value should be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;em&gt;req&lt;/em&gt;は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトになります。戻り値は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="c4c637f6f9eb7d72ffa0912f73fd5eb7c803c82b" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;code&gt;default_open()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。戻り値は &lt;code&gt;default_open()&lt;/code&gt; の場合と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="91c65ff111e1b6434d9b1648e2e33858b7b6ac47" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the &lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt;&lt;code&gt;default_open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、実装されている場合、&lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。戻り値は&lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt; &lt;code&gt;default_open()&lt;/code&gt; の&lt;/a&gt;場合と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c5568e01d897e76cde8a8512a2cf117dff860535" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. It should return a file-like object as described in the return value of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. It should raise &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;, unless a truly exceptional thing happens (for example, &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; should not be mapped to &lt;code&gt;URLError&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、実装されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;の戻り値、または &lt;code&gt;None&lt;/code&gt; で説明されているように、ファイルのようなオブジェクトを返す必要があります。それは上げる必要がある&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; を&lt;/a&gt;真に例外的な事が起きない限り（例えば、&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; が&lt;/a&gt;にマップされてはならない &lt;code&gt;URLError&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1cadef953272decef8c8b33d266fff351c8a60bd" translate="yes" xml:space="preserve">
          <source>This mimics the &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; which is used when displaying exception frames.</source>
          <target state="translated">これは、 &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; 模倣しています。これは、例外フレームを表示するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="f27374d3cea4c4b16cf991cf67775d4e667a191c" translate="yes" xml:space="preserve">
          <source>This module &lt;em&gt;does not&lt;/em&gt; access the internet. All of the components needed to bootstrap &lt;code&gt;pip&lt;/code&gt; are included as internal parts of the package.</source>
          <target state="translated">このモジュール&lt;em&gt;は&lt;/em&gt;インターネットにアクセス&lt;em&gt;しません&lt;/em&gt;。 &lt;code&gt;pip&lt;/code&gt; のブートストラップに必要なすべてのコンポーネントは、パッケージの内部パーツとして含まれています。</target>
        </trans-unit>
        <trans-unit id="c0e744d6e6221a3e7f181931436252486b1aba6e" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">このモジュールは、ZIP形式のアーカイブからPythonモジュール（ &lt;code&gt;*.py&lt;/code&gt; 、 &lt;code&gt;*.pyc&lt;/code&gt; ）およびパッケージをインポートする機能を追加します。通常、&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;モジュールを明示的に使用する必要はありません。これは、ZIPアーカイブへのパスである&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;アイテムの組み込み&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;メカニズムによって自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="4b8b243423ae5bd9c91dd1e9a526289e44d74151" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a keyword.</source>
          <target state="translated">このモジュールは、Pythonプログラムが文字列がキーワードかどうかを判断することを可能にします。</target>
        </trans-unit>
        <trans-unit id="7a344df928c4cfb82fbfa17dc83438dd90f3e913" translate="yes" xml:space="preserve">
          <source>This module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use this module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;モジュールプリミティブに基づいて構築された、高レベルで効率的なI / O多重化を可能にします。使用するOSレベルのプリミティブを正確に制御する必要がない限り、代わりにこのモジュールを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2497fcaaad8ea0358d7a8a416fbf748a8e8d4ce1" translate="yes" xml:space="preserve">
          <source>This module allows you to access the OSS (Open Sound System) audio interface. OSS is available for a wide range of open-source and commercial Unices, and is the standard audio interface for Linux and recent versions of FreeBSD.</source>
          <target state="translated">このモジュールは、OSS (Open Sound System)オーディオインターフェイスにアクセスするためのものです。OSS はオープンソースや商用の Unices で幅広く利用でき、Linux や最近の FreeBSD の標準的なオーディオインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="3f201a3a0b0cb503f8a57a3dc19445c2c4016892" translate="yes" xml:space="preserve">
          <source>This module allows you to output calendars like the Unix &lt;strong&gt;cal&lt;/strong&gt; program, and provides additional useful functions related to the calendar. By default, these calendars have Monday as the first day of the week, and Sunday as the last (the European convention). Use &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; to set the first day of the week to Sunday (6) or to any other weekday. Parameters that specify dates are given as integers. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">このモジュールを使用すると、Unix &lt;strong&gt;cal&lt;/strong&gt;プログラムのようなカレンダーを出力でき、カレンダーに関連する追加の便利な機能を提供します。デフォルトでは、これらのカレンダーは月曜日を週の最初の日とし、日曜日を最後の日とします（ヨーロッパの規則）。&lt;a href=&quot;#calendar.setfirstweekday&quot;&gt; &lt;code&gt;setfirstweekday()&lt;/code&gt; &lt;/a&gt;を使用して、週の最初の日を日曜日（6）またはその他の平日に設定します。日付を指定するパラメーターは整数として指定されます。関連する機能については、&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="debb877f25fbd139c21cf06dbc17a54349a6899d" translate="yes" xml:space="preserve">
          <source>This module also defines all the constants needed to work with the functions provided here; these have the same name as their counterparts in C. Please refer to your system documentation for more information on using these terminal control interfaces.</source>
          <target state="translated">このモジュールはまた、ここで提供されている関数で動作するために必要なすべての定数を定義しています。</target>
        </trans-unit>
        <trans-unit id="5343f12ad5e1686e3ae53b2b2900840cf269d422" translate="yes" xml:space="preserve">
          <source>This module also defines the following constant:</source>
          <target state="translated">このモジュールでは、以下の定数も定義しています。</target>
        </trans-unit>
        <trans-unit id="b40ece587755cd89be338849c6922046774089a9" translate="yes" xml:space="preserve">
          <source>This module also provides one additional data object:</source>
          <target state="translated">このモジュールは、1つの追加データオブジェクトも提供します。</target>
        </trans-unit>
        <trans-unit id="23b455a7f66c43c727ec2c3899d0f41037a1b5dd" translate="yes" xml:space="preserve">
          <source>This module also provides the following helper function:</source>
          <target state="translated">このモジュールは、以下のヘルパー関数も提供しています。</target>
        </trans-unit>
        <trans-unit id="453b9e5ac31c8143201074542d26931d4cb7ac6a" translate="yes" xml:space="preserve">
          <source>This module also provides the following legacy functions from the 2.x &lt;code&gt;commands&lt;/code&gt; module. These operations implicitly invoke the system shell and none of the guarantees described above regarding security and exception handling consistency are valid for these functions.</source>
          <target state="translated">このモジュールは、2.x &lt;code&gt;commands&lt;/code&gt; モジュールの次のレガシー機能も提供します。これらの操作は暗黙的にシステムシェルを呼び出し、セキュリティと例外処理の一貫性に関して上記で説明した保証は、これらの関数に対して有効ではありません。</target>
        </trans-unit>
        <trans-unit id="67b52231769e79c56d292bad90dd4f9002d23b03" translate="yes" xml:space="preserve">
          <source>This module builds on the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; infrastructure, simplifying asynchronous clients and servers and making it easier to handle protocols whose elements are terminated by arbitrary strings, or are of variable length. &lt;a href=&quot;#module-asynchat&quot;&gt;&lt;code&gt;asynchat&lt;/code&gt;&lt;/a&gt; defines the abstract class &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; that you subclass, providing implementations of the &lt;code&gt;collect_incoming_data()&lt;/code&gt; and &lt;code&gt;found_terminator()&lt;/code&gt; methods. It uses the same asynchronous loop as &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt;, and the two types of channel, &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;, can freely be mixed in the channel map. Typically an &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; server channel generates new &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; channel objects as it receives incoming connection requests.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;インフラストラクチャに基づいて構築されており、非同期のクライアントとサーバーを簡略化し、要素が任意の文字列で終了するか、可変長であるプロトコルの処理を容易にします。&lt;a href=&quot;#module-asynchat&quot;&gt; &lt;code&gt;asynchat&lt;/code&gt; &lt;/a&gt;は、サブクラス化する抽象クラス&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;を定義し、 &lt;code&gt;collect_incoming_data()&lt;/code&gt; および &lt;code&gt;found_terminator()&lt;/code&gt; メソッドの実装を提供します。&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;と同じ非同期ループを使用し、2種類のチャネル&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; を&lt;/a&gt;チャネルマップで自由に混在させることができます。通常、&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;サーバーチャネルは新しい&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt;チャネルオブジェクトが着信接続要求を受信するとき。</target>
        </trans-unit>
        <trans-unit id="98f43e7da0a9f23b86507c38867da0294f836744" translate="yes" xml:space="preserve">
          <source>This module can be used with the &amp;ldquo;classic&amp;rdquo; ndbm interface or the GNU GDBM compatibility interface. On Unix, the &lt;strong&gt;configure&lt;/strong&gt; script will attempt to locate the appropriate header file to simplify building this module.</source>
          <target state="translated">このモジュールは、「クラシック」なndbmインターフェースまたはGNU GDBM互換インターフェースで使用できます。Unixでは、&lt;strong&gt;configure&lt;/strong&gt;スクリプトは適切なヘッダーファイルを見つけて、このモジュールの構築を簡略化します。</target>
        </trans-unit>
        <trans-unit id="d879b78f431d58b588b47163f45ee538b41d3e4e" translate="yes" xml:space="preserve">
          <source>This module can work as a script (using &lt;strong&gt;python -m compileall&lt;/strong&gt;) to compile Python sources.</source>
          <target state="translated">このモジュールは、Pythonソースをコンパイルするためのスクリプト（&lt;strong&gt;python -m compileall&lt;/strong&gt;を使用）として機能できます。</target>
        </trans-unit>
        <trans-unit id="f19e9fa6736be7e193744521cb04edacae210533" translate="yes" xml:space="preserve">
          <source>This module constructs higher-level threading interfaces on top of the lower level &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. See also the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、低レベルの&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールの上に高レベルのスレッドインターフェイスを構築します。&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="861c68e15668a5b39d713349ea83ffbbd4181c50" translate="yes" xml:space="preserve">
          <source>This module contains definitions for the UIText and ActionText tables, for the standard installer actions.</source>
          <target state="translated">このモジュールには、標準インストーラのアクションの UIText と ActionText テーブルの定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="3077916ec25e86b9e1f4841b136b1ecadd40c210" translate="yes" xml:space="preserve">
          <source>This module contains functions that can read and write Python values in a binary format. The format is specific to Python, but independent of machine architecture issues (e.g., you can write a Python value to a file on a PC, transport the file to a Sun, and read it back there). Details of the format are undocumented on purpose; it may change between Python versions (although it rarely does). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">このモジュールには、バイナリ形式でPython値を読み書きできる関数が含まれています。この形式はPythonに固有ですが、マシンアーキテクチャの問題とは無関係です（たとえば、PC上のファイルにPython値を書き込み、そのファイルをSunに転送して、そこで読み取ることができます）。フォーマットの詳細は意図的に文書化されていません。 Pythonのバージョン間で変更される可能性があります（めったに変更されません）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5039b7f4c8b295a097141026f69aa1f45aeae2f4" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">このモジュールには、Pythonトレースバックを明示的に、障害時、タイムアウト後、またはユーザー信号でダンプする関数が含まれています。&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt;を呼び出して、 &lt;code&gt;SIGSEGV&lt;/code&gt; 、 &lt;code&gt;SIGFPE&lt;/code&gt; 、 &lt;code&gt;SIGABRT&lt;/code&gt; 、 &lt;code&gt;SIGBUS&lt;/code&gt; 、および &lt;code&gt;SIGILL&lt;/code&gt; 信号の障害ハンドラーをインストールします。&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt;環境変数を設定するか、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; コマンドラインオプションを使用して、起動時にこれらを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="cc8882528ecb71642481be204e6186fd1051ed37" translate="yes" xml:space="preserve">
          <source>This module contains table contents for the standard sequence tables: &lt;em&gt;AdminExecuteSequence&lt;/em&gt;, &lt;em&gt;AdminUISequence&lt;/em&gt;, &lt;em&gt;AdvtExecuteSequence&lt;/em&gt;, &lt;em&gt;InstallExecuteSequence&lt;/em&gt;, and &lt;em&gt;InstallUISequence&lt;/em&gt;.</source>
          <target state="translated">このモジュールには、標準シーケンステーブルのテーブルコンテンツが含まれています：&lt;em&gt;AdminExecuteSequence&lt;/em&gt;、&lt;em&gt;AdminUISequence&lt;/em&gt;、&lt;em&gt;AdvtExecuteSequence&lt;/em&gt;、&lt;em&gt;InstallExecuteSequence&lt;/em&gt;、および&lt;em&gt;InstallUISequence&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9f903356d17a57da3cbd225b09902afef1cc9e4" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;検索およびロードモジュールに役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="42ecc856b406c93d72b3abcd42ac7453b164bdd7" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーターの&lt;/a&gt;構築に役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="04c30f14c660f82a69840aef1a06450c1039fd25" translate="yes" xml:space="preserve">
          <source>This module contains various constants relating to the intimate details of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, some lengthy comments about the implementation, and a few useful functions for analyzing pickled data. The contents of this module are useful for Python core developers who are working on the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;; ordinary users of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module probably won&amp;rsquo;t find the &lt;a href=&quot;#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; module relevant.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの詳細に関連するさまざまな定数、実装に関する長いコメント、およびpickle化されたデータを分析するためのいくつかの便利な関数が含まれています。このモジュールの内容は、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; に&lt;/a&gt;取り組んでいるPythonコア開発者に役立ちます。&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの普通のユーザーは、おそらく&lt;a href=&quot;#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt;モジュールが関連していることに気付かないでしょう。</target>
        </trans-unit>
        <trans-unit id="f4495708855b5105fbffdba645bc8b7765dc4e32" translate="yes" xml:space="preserve">
          <source>This module creates temporary files and directories. It works on all supported platforms. &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt;&lt;code&gt;NamedTemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt;&lt;code&gt;TemporaryDirectory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt;&lt;code&gt;SpooledTemporaryFile&lt;/code&gt;&lt;/a&gt; are high-level interfaces which provide automatic cleanup and can be used as context managers. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; are lower-level functions which require manual cleanup.</source>
          <target state="translated">このモジュールは一時ファイルとディレクトリを作成します。サポートされているすべてのプラットフォームで動作します。&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt; &lt;code&gt;NamedTemporaryFile&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt; &lt;code&gt;TemporaryDirectory&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt; &lt;code&gt;SpooledTemporaryFile&lt;/code&gt; &lt;/a&gt;は、自動クリーンアップを提供する高レベルのインターフェースであり、コンテキストマネージャとして使用できます。&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt;は、手動でクリーンアップする必要がある低レベルの関数です。</target>
        </trans-unit>
        <trans-unit id="1fb63ae15e15adc2fac701d486eb6ae65fd3a9db" translate="yes" xml:space="preserve">
          <source>This module defines a class &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; which serves as the basis for parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML.</source>
          <target state="translated">このモジュールは、HTML（HyperText Mark-up Language）およびXHTMLでフォーマットされたテキストファイルを解析するための基礎として機能するクラス&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="c5b51fe9b44470a4a81daa6484a674a50d74f512" translate="yes" xml:space="preserve">
          <source>This module defines a class, &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, which encapsulates a connection to a POP3 server and implements the protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class supports both the minimal and optional command sets from &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class also supports the &lt;code&gt;STLS&lt;/code&gt; command introduced in &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; to enable encrypted communication on an already established connection.</source>
          <target state="translated">このモジュールは、POP3サーバーへの接続をカプセル化し、&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるプロトコルを実装するクラス&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;を定義し&lt;strong&gt;ます&lt;/strong&gt;。&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;クラスは、最小限から、オプションのコマンドセットの両方をサポート&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;。&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;クラスもサポートしてい &lt;code&gt;STLS&lt;/code&gt; の中に導入されたコマンド&lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt;、既に確立された接続上の暗号化通信を可能にするために。</target>
        </trans-unit>
        <trans-unit id="1618ac7e65a20cb21e0876627584ef0952f4e004" translate="yes" xml:space="preserve">
          <source>This module defines a number of classes, which are detailed in the sections below.</source>
          <target state="translated">このモジュールはいくつかのクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="11a2a01ddba0f2fb875e220a02c816a36dd3839e" translate="yes" xml:space="preserve">
          <source>This module defines a number of utilities for use by CGI scripts written in Python.</source>
          <target state="translated">このモジュールは、Python で書かれた CGI スクリプトで使用するための多くのユーティリティを定義します。</target>
        </trans-unit>
        <trans-unit id="48800cb2b61c0cb68840665bc7065117a5b5c588" translate="yes" xml:space="preserve">
          <source>This module defines a standard interface to break Uniform Resource Locator (URL) strings up in components (addressing scheme, network location, path etc.), to combine the components back into a URL string, and to convert a &amp;ldquo;relative URL&amp;rdquo; to an absolute URL given a &amp;ldquo;base URL.&amp;rdquo;</source>
          <target state="translated">このモジュールは、コンポーネント（アドレス指定スキーム、ネットワークの場所、パスなど）でUniform Resource Locator（URL）文字列を分割し、コンポーネントをURL文字列に結合し、「相対URL」を「ベースURL」が指定された絶対URL</target>
        </trans-unit>
        <trans-unit id="cc5d1611a8f8acccc4d6cf1756c216896a066e42" translate="yes" xml:space="preserve">
          <source>This module defines an exception:</source>
          <target state="translated">このモジュールは例外を定義します。</target>
        </trans-unit>
        <trans-unit id="872203bde3e3135352e338fe96a0f66f7787e1a6" translate="yes" xml:space="preserve">
          <source>This module defines an object type which can compactly represent an array of basic values: characters, integers, floating point numbers. Arrays are sequence types and behave very much like lists, except that the type of objects stored in them is constrained. The type is specified at object creation time by using a &lt;em&gt;type code&lt;/em&gt;, which is a single character. The following type codes are defined:</source>
          <target state="translated">このモジュールは、基本的な値の配列（文字、整数、浮動小数点数）をコンパクトに表すことができるオブジェクトタイプを定義します。配列はシーケンス型であり、配列に格納されているオブジェクトのタイプが制限されていることを除いて、リストとほとんど同じように動作します。タイプは、オブジェクト作成時に&lt;em&gt;タイプコード&lt;/em&gt;を使用して指定されます。これは単一の文字です。次のタイプコードが定義されています。</target>
        </trans-unit>
        <trans-unit id="b6850df64d4f421a1439f98e4bd7078f7c6cd6c4" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、標準のPythonコーデック（エンコーダーとデコーダー）の基本クラスを定義し、コーデックとエラー処理ルックアッププロセスを管理する内部Pythonコーデックレジストリへのアクセスを提供します。ほとんどの標準コーデックは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディングで&lt;/a&gt;、テキストをバイトにエンコードしますが、テキストをテキストに、バイトをバイトにエンコードするコーデックも用意されています。カスタムコーデックは、任意のタイプ間でエンコードおよびデコードできますが、一部のモジュール機能は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディング&lt;/a&gt;、または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;エンコードするコーデックでの使用に限定されています。</target>
        </trans-unit>
        <trans-unit id="78eff0b82345640196ebee3d8065f4a5a2881ddd" translate="yes" xml:space="preserve">
          <source>This module defines classes for implementing HTTP servers (Web servers).</source>
          <target state="translated">HTTPサーバ(Webサーバ)を実装するためのクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="de3d04d963619a18276579b0870d1fcddb37dadd" translate="yes" xml:space="preserve">
          <source>This module defines classes which implement the client side of the HTTP and HTTPS protocols. It is normally not used directly &amp;mdash; the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; uses it to handle URLs that use HTTP and HTTPS.</source>
          <target state="translated">このモジュールは、HTTPおよびHTTPSプロトコルのクライアント側を実装するクラスを定義します。通常は直接使用されません&amp;mdash;モジュール&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;は、HTTPおよびHTTPSを使用するURLを処理するために使用します。</target>
        </trans-unit>
        <trans-unit id="e8cdc9da4c49a5a72d18f9f680dbe51d429c4110" translate="yes" xml:space="preserve">
          <source>This module defines four dictionaries, &lt;a href=&quot;#html.entities.html5&quot;&gt;&lt;code&gt;html5&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.name2codepoint&quot;&gt;&lt;code&gt;name2codepoint&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.codepoint2name&quot;&gt;&lt;code&gt;codepoint2name&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#html.entities.entitydefs&quot;&gt;&lt;code&gt;entitydefs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;#html.entities.html5&quot;&gt; &lt;code&gt;html5&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#html.entities.name2codepoint&quot;&gt; &lt;code&gt;name2codepoint&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#html.entities.codepoint2name&quot;&gt; &lt;code&gt;codepoint2name&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#html.entities.entitydefs&quot;&gt; &lt;code&gt;entitydefs&lt;/code&gt; の&lt;/a&gt; 4つの辞書を定義します。</target>
        </trans-unit>
        <trans-unit id="4b3c1b33a5dc7198cf9a5077bb81a5d371ff01f8" translate="yes" xml:space="preserve">
          <source>This module defines four enumeration classes that can be used to define unique sets of names and values: &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;. It also defines one decorator, &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt;, and one helper, &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、名前と値の一意のセットを定義するために使用できる4つの列挙型クラス、&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; を定義し&lt;/a&gt;ます。また、1つのデコレータ&lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt;と1つのヘルパー&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;も定義しています。</target>
        </trans-unit>
        <trans-unit id="a43956eb1cff944bb000135e22a68e274523884e" translate="yes" xml:space="preserve">
          <source>This module defines functions and classes which implement a flexible event logging system for applications and libraries.</source>
          <target state="translated">このモジュールは、アプリケーションやライブラリのための柔軟なイベントロギングシステムを実装する関数とクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="d12ae48143188d0297420fe3e3e8355fa72a4d12" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; and a few related items. The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class implements the client side of the FTP protocol. You can use this to write Python programs that perform a variety of automated FTP jobs, such as mirroring other FTP servers. It is also used by the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; to handle URLs that use FTP. For more information on FTP (File Transfer Protocol), see Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;クラスといくつかの関連アイテムを定義します。&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; の&lt;/a&gt;クラスが実装FTPプロトコルのクライアント側。これを使用して、他のFTPサーバーのミラーリングなど、さまざまな自動FTPジョブを実行するPythonプログラムを作成できます。また、モジュール&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;がFTPを使用するURLを処理するためにも使用されます。FTP（ファイル転送プロトコル）の詳細については、インターネット&lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2f424d44b755936adbe2988818177e31ae44d19" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; which implements the client side of the Network News Transfer Protocol. It can be used to implement a news reader or poster, or automated news processors. It is compatible with &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; as well as the older &lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、ネットワークニュース転送プロトコルのクライアント側を実装するクラス&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;を定義します。ニュースリーダーやポスター、自動化されたニュースプロセッサの実装に使用できます。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;および以前の&lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;と互換性があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6075209a511cab6004ad5174fb8118d5ccd054f2" translate="yes" xml:space="preserve">
          <source>This module defines the following constants and functions:</source>
          <target state="translated">このモジュールでは、以下の定数と関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="254e7f18807b69bc33340649efc7baade8104fad" translate="yes" xml:space="preserve">
          <source>This module defines the following exceptions:</source>
          <target state="translated">このモジュールは、以下の例外を定義します。</target>
        </trans-unit>
        <trans-unit id="d27a1500cefa039de958d9245d5b0b141f00314e" translate="yes" xml:space="preserve">
          <source>This module defines the following functions:</source>
          <target state="translated">このモジュールでは、以下の機能を定義しています。</target>
        </trans-unit>
        <trans-unit id="cbab75d4cc8fb1a71ebe6ad326eb328016713c4e" translate="yes" xml:space="preserve">
          <source>This module defines three classes, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt;&lt;code&gt;IMAP4_SSL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt;&lt;code&gt;IMAP4_stream&lt;/code&gt;&lt;/a&gt;, which encapsulate a connection to an IMAP4 server and implement a large subset of the IMAP4rev1 client protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt;. It is backward compatible with IMAP4 (&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;) servers, but note that the &lt;code&gt;STATUS&lt;/code&gt; command is not supported in IMAP4.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt; &lt;code&gt;IMAP4_SSL&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt; &lt;code&gt;IMAP4_stream&lt;/code&gt; の&lt;/a&gt; 3つのクラスを定義します。これらは、IMAP4サーバーへの接続をカプセル化し、&lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるIMAP4rev1クライアントプロトコルの大きなサブセットを実装し&lt;strong&gt;ます&lt;/strong&gt;。 IMAP4（&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;）サーバーとの下位互換性がありますが、 &lt;code&gt;STATUS&lt;/code&gt; コマンドはIMAP4ではサポートされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0f29ba324535ab62c8f58447db607b753c98bae5" translate="yes" xml:space="preserve">
          <source>This module defines two classes, &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;, for accessing and manipulating on-disk mailboxes and the messages they contain. &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; offers a dictionary-like mapping from keys to messages. &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; extends the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class with format-specific state and behavior. Supported mailbox formats are Maildir, mbox, MH, Babyl, and MMDF.</source>
          <target state="translated">このモジュールは、ディスク上のメールボックスとそこに含まれるメッセージにアクセスして操作するために、&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; の&lt;/a&gt; 2つのクラスを定義します。&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;は、キーからメッセージへの辞書のようなマッピングを提供します。&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラスを拡張し、フォーマット固有の状態と動作を追加します。サポートされるメールボックス形式は、Maildir、mbox、MH、Babyl、およびMMDFです。</target>
        </trans-unit>
        <trans-unit id="d8a489c3d0c7610957d387ee3a2556662944d293" translate="yes" xml:space="preserve">
          <source>This module defines utilities to manipulate HTML.</source>
          <target state="translated">このモジュールは、HTMLを操作するためのユーティリティを定義しています。</target>
        </trans-unit>
        <trans-unit id="dfe22c236ca9d8a5b76832ead4539edc455e0a34" translate="yes" xml:space="preserve">
          <source>This module defines utility functions to assist in dynamic creation of new types.</source>
          <target state="translated">このモジュールは、新しい型の動的な作成を支援するユーティリティ関数を定義します。</target>
        </trans-unit>
        <trans-unit id="e942318520019f6f5189c26f40c04ee87a02680c" translate="yes" xml:space="preserve">
          <source>This module does not comply with the RFC in a strict fashion, implementing some extensions that are valid JavaScript but not valid JSON. In particular:</source>
          <target state="translated">このモジュールは厳密にはRFCに準拠しておらず、有効なJavaScriptではあるが有効なJSONではないいくつかの拡張機能を実装しています。特に</target>
        </trans-unit>
        <trans-unit id="49e85895e7dc7efb294c76b52c1626af5e533a39" translate="yes" xml:space="preserve">
          <source>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types. It does &amp;ldquo;copy&amp;rdquo; functions and classes (shallow and deeply), by returning the original object unchanged; this is compatible with the way these are treated by the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、モジュール、メソッド、スタックトレース、スタックフレーム、ファイル、ソケット、ウィンドウ、配列、または同様のタイプなどのタイプをコピーしません。元のオブジェクトを変更せずに返すことで、関数とクラスを（浅く、深く）コピーします。これは、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールがこれらを処理する方法と互換性があります。</target>
        </trans-unit>
        <trans-unit id="17d030f61ef73253b8878c6ac00f0db6edfe90d3" translate="yes" xml:space="preserve">
          <source>This module does not currently handle multi-disk ZIP files. It can handle ZIP files that use the ZIP64 extensions (that is ZIP files that are more than 4 GiB in size). It supports decryption of encrypted files in ZIP archives, but it currently cannot create an encrypted file. Decryption is extremely slow as it is implemented in native Python rather than C.</source>
          <target state="translated">このモジュールは現在のところ、複数ディスクの ZIP ファイルを扱っていません。ZIP64 拡張子を使用する ZIP ファイル (つまり、サイズが 4 GiB 以上の ZIP ファイル)を扱うことができます。ZIP アーカイブ内の暗号化されたファイルの復号化をサポートしていますが、現在のところ暗号化されたファイルを作成することはできません。復号化は C ではなくネイティブの Python で実装されているため、非常に遅いです。</target>
        </trans-unit>
        <trans-unit id="519d1b02a39806bc189ae28fe467295ef2dfa0a9" translate="yes" xml:space="preserve">
          <source>This module does not impose any such limits beyond those of the relevant Python datatypes themselves or the Python interpreter itself.</source>
          <target state="translated">このモジュールは、関連する Python データ型自体や Python インタプリタ自体の制限を超えて、そのような制限を課すことはありません。</target>
        </trans-unit>
        <trans-unit id="4f7b84f93b9e849cdae302062aae810414c34807" translate="yes" xml:space="preserve">
          <source>This module does not support playing from a memory image asynchronously, so a combination of this flag and &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールはメモリイメージからの非同期再生をサポートしていないため、このフラグと&lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; を組み合わせる&lt;/a&gt;と&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9b343817bb9b838e5415a508a84ece8dffe81d92" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in binhex4 format, a format allowing representation of Macintosh files in ASCII. Only the data fork is handled.</source>
          <target state="translated">このモジュールは、MacintoshのファイルをASCIIで表現するためのフォーマットであるbinhex4形式のファイルをエンコードし、デコードします。データフォークのみが処理されます。</target>
        </trans-unit>
        <trans-unit id="dd03d811a7b08d214ea866929673d3a7471cc228" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in uuencode format, allowing arbitrary binary data to be transferred over ASCII-only connections. Wherever a file argument is expected, the methods accept a file-like object. For backwards compatibility, a string containing a pathname is also accepted, and the corresponding file will be opened for reading and writing; the pathname &lt;code&gt;'-'&lt;/code&gt; is understood to mean the standard input or output. However, this interface is deprecated; it&amp;rsquo;s better for the caller to open the file itself, and be sure that, when required, the mode is &lt;code&gt;'rb'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; on Windows.</source>
          <target state="translated">このモジュールは、ファイルをuuencode形式でエンコードおよびデコードし、任意のバイナリデータをASCIIのみの接続を介して転送できるようにします。ファイル引数が必要な場合は常に、メソッドはファイルのようなオブジェクトを受け入れます。下位互換性のために、パス名を含む文字列も受け入れられ、対応するファイルが読み取りおよび書き込み用に開かれます。パス名 &lt;code&gt;'-'&lt;/code&gt; は、標準入力または標準出力を意味すると理解されています。ただし、このインターフェースは非推奨です。呼び出し元がファイル自体を開くことをお &lt;code&gt;'wb'&lt;/code&gt; します。必要に応じて、Windowsではモードが &lt;code&gt;'rb'&lt;/code&gt; または「wb」であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7f81a6cf8af5f605b58b6ac46efd33c502d783a0" translate="yes" xml:space="preserve">
          <source>This module exists for backwards compatibility only. For new code we recommend using &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、下位互換性のためだけに存在しています。新しいコードについては、&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; の&lt;/a&gt;使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="0db06efc0dbc72f83920d799f65e3722ebe14985" translate="yes" xml:space="preserve">
          <source>This module helps scripts to parse the command line arguments in &lt;code&gt;sys.argv&lt;/code&gt;. It supports the same conventions as the Unix &lt;code&gt;getopt()&lt;/code&gt; function (including the special meanings of arguments of the form &amp;lsquo;&lt;code&gt;-&lt;/code&gt;&amp;lsquo; and &amp;lsquo;&lt;code&gt;--&lt;/code&gt;&amp;lsquo;). Long options similar to those supported by GNU software may be used as well via an optional third argument.</source>
          <target state="translated">このモジュールは、スクリプトが &lt;code&gt;sys.argv&lt;/code&gt; のコマンドライン引数を解析するのに役立ちます。これは、Unixの &lt;code&gt;getopt()&lt;/code&gt; 関数と同じ規則をサポートしています（ ' &lt;code&gt;-&lt;/code&gt; 'および ' &lt;code&gt;--&lt;/code&gt; ' 形式の引数の特別な意味を含みます）。GNUソフトウェアでサポートされているものと同様の長いオプションも、オプションの3番目の引数を介して使用できます。</target>
        </trans-unit>
        <trans-unit id="121aa50a9e3129147a9accceb01472d79e19ffe1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt; (Internationalized Domain Names in Applications) and &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt; (Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)). It builds upon the &lt;code&gt;punycode&lt;/code&gt; encoding and &lt;a href=&quot;stringprep#module-stringprep&quot;&gt;&lt;code&gt;stringprep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt;（アプリケーションの国際化ドメイン名）および&lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt;（Nameprep：国際化ドメイン名（IDN）のStringprepプロファイル）を実装し&lt;strong&gt;ます&lt;/strong&gt;。それは &lt;code&gt;punycode&lt;/code&gt; エンコーディングと&lt;a href=&quot;stringprep#module-stringprep&quot;&gt; &lt;code&gt;stringprep&lt;/code&gt; に基づいてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8b93c605058d9ac4610c0f66fcfaf0e7cc0668f2" translate="yes" xml:space="preserve">
          <source>This module implements a common interface to many different secure hash and message digest algorithms. Included are the FIPS secure hash algorithms SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as RSA&amp;rsquo;s MD5 algorithm (defined in Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321&lt;/strong&gt;&lt;/a&gt;). The terms &amp;ldquo;secure hash&amp;rdquo; and &amp;ldquo;message digest&amp;rdquo; are interchangeable. Older algorithms were called message digests. The modern term is secure hash.</source>
          <target state="translated">このモジュールは、多くの異なる安全なハッシュおよびメッセージダイジェストアルゴリズムへの共通インターフェースを実装します。FIPSセキュアハッシュアルゴリズムSHA1、SHA224、SHA256、SHA384、SHA512（FIPS 180-2で定義）、およびRSAのMD5アルゴリズム（インターネット&lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321で&lt;/strong&gt;&lt;/a&gt;定義）が含まれます。「セキュアハッシュ」と「メッセージダイジェスト」は同じ意味で使用されます。古いアルゴリズムはメッセージダイジェストと呼ばれていました。現代の用語は安全なハッシュです。</target>
        </trans-unit>
        <trans-unit id="9dc190db82f8040568b6d71e5d44f33a813a06d1" translate="yes" xml:space="preserve">
          <source>This module implements a helper class and functions to quickly write a loop over standard input or a list of files. If you just want to read or write one file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、ヘルパークラスと関数を実装して、標準入力またはファイルのリストに対するループをすばやく記述します。1つのファイルを読み書きするだけの場合は、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ddbb83da8fffc29ce3e4bfee653fa7dd031640c8" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">このモジュールは、APL、Haskell、およびSMLの構成要素から着想を得た多くの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレーター&lt;/a&gt;ビルディングブロックを実装しています。それぞれがPythonに適した形式にリキャストされています。</target>
        </trans-unit>
        <trans-unit id="3cfc63fd063d2db5a956c67a2c60b1984b185b20" translate="yes" xml:space="preserve">
          <source>This module implements a simple HTTP server (based on &lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt;) that serves WSGI applications. Each server instance serves a single WSGI application on a given host and port. If you want to serve multiple applications on a single host and port, you should create a WSGI application that parses &lt;code&gt;PATH_INFO&lt;/code&gt; to select which application to invoke for each request. (E.g., using the &lt;code&gt;shift_path_info()&lt;/code&gt; function from &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">このモジュールは、WSGIアプリケーションを提供する単純なHTTPサーバー（&lt;a href=&quot;http.server#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; に&lt;/a&gt;基づく）を実装します。各サーバーインスタンスは、特定のホストとポートで単一のWSGIアプリケーションを提供します。単一のホストとポートで複数のアプリケーションを提供する場合は、 &lt;code&gt;PATH_INFO&lt;/code&gt; を解析して各要求に対して呼び出すアプリケーションを選択するWSGIアプリケーションを作成する必要があります。 （例えば、&lt;a href=&quot;#module-wsgiref.util&quot;&gt; &lt;code&gt;wsgiref.util&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;shift_path_info()&lt;/code&gt; 関数を使用します。）</target>
        </trans-unit>
        <trans-unit id="5fd7dba47e22473c1f2a4635a0a3174c3d6c275b" translate="yes" xml:space="preserve">
          <source>This module implements a variant of the UTF-8 codec. On encoding, a UTF-8 encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful encoder this is only done once (on the first write to the byte stream). On decoding, an optional UTF-8 encoded BOM at the start of the data will be skipped.</source>
          <target state="translated">こ のモジ ュ ールは、 UTF-8 コーデ ッ ク のバ リ ア ン ト を実装 し てい ます。エンコード時には、UTF-8 エンコードされた BOM が UTF-8 エンコードされたバイトの前に付加されます。ステートフルエン コ ーダの場合、 こ れは 1 回のみ行われます (バ イ ト ス ト リ ームへの最初の書 き 込み時)。デ コ ーデ ィ ン グ時には、 デー タ の先頭のオプシ ョ ナルな UTF-8 エン コ ー ド BOM はスキップされます。</target>
        </trans-unit>
        <trans-unit id="1d4a5b8472e44e8855f5d68c663b14c77b8bcf34" translate="yes" xml:space="preserve">
          <source>This module implements an interface to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine, which is a one-way hash function based upon a modified DES algorithm; see the Unix man page for further details. Possible uses include storing hashed passwords so you can check passwords without storing the actual password, or attempting to crack Unix passwords with a dictionary.</source>
          <target state="translated">このモジュールは、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;ルーチンへのインターフェースを実装しています。これは、変更されたDESアルゴリズムに基づく一方向ハッシュ関数です。詳細については、Unixのマニュアルページを参照してください。可能な用途としては、ハッシュされたパスワードを保存して、実際のパスワードを保存せずにパスワードをチェックしたり、Unixパスワードを辞書で解読したりすることが挙げられます。</target>
        </trans-unit>
        <trans-unit id="3a2adf6a9a2bd23305d2c275bca19cae38c30374" translate="yes" xml:space="preserve">
          <source>This module implements pseudo-random number generators for various distributions.</source>
          <target state="translated">このモジュールは、様々な分布のための擬似乱数生成器を実装しています。</target>
        </trans-unit>
        <trans-unit id="b0183d20598d8183a93f9529b78d2aebdeda8d60" translate="yes" xml:space="preserve">
          <source>This module implements some useful functions on pathnames. To read or write files see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, and for accessing the filesystem see the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module. The path parameters can be passed as either strings, or bytes. Applications are encouraged to represent file names as (Unicode) character strings. Unfortunately, some file names may not be representable as strings on Unix, so applications that need to support arbitrary file names on Unix should use bytes objects to represent path names. Vice versa, using bytes objects cannot represent all file names on Windows (in the standard &lt;code&gt;mbcs&lt;/code&gt; encoding), hence Windows applications should use string objects to access all files.</source>
          <target state="translated">このモジュールは、パス名にいくつかの便利な関数を実装しています。ファイルの読み取りまたは書き込みについては&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;参照してください。ファイルシステムへのアクセスについては&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。パスパラメータは、文字列またはバイトとして渡すことができます。アプリケーションでは、ファイル名を（Unicode）文字列として表すことをお勧めします。残念ながら、一部のファイル名はUnixでは文字列として表現できない場合があるため、UNIXで任意のファイル名をサポートする必要があるアプリケーションは、バイトオブジェクトを使用してパス名を表す必要があります。逆に、バイトオブジェクトを使用すると、Windowsのすべてのファイル名を（標準の &lt;code&gt;mbcs&lt;/code&gt; エンコーディングで）表すことができないため、Windowsアプリケーションは文字列オブジェクトを使用してすべてのファイルにアクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="a2192c961f0f178501bb93fed052cb49b0b99007" translate="yes" xml:space="preserve">
          <source>This module implements specialized container datatypes providing alternatives to Python&amp;rsquo;s general purpose built-in containers, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、Pythonの汎用ビルトインコンテナー&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; の&lt;/a&gt;代替を提供する、特殊なコンテナーデータ型を実装します。</target>
        </trans-unit>
        <trans-unit id="4736824d97338b1fd5868abcd3d3b1ebff178aa8" translate="yes" xml:space="preserve">
          <source>This module implements the ANSI codepage (CP_ACP).</source>
          <target state="translated">このモジュールは、ANSI コードページ (CP_ACP)を実装しています。</target>
        </trans-unit>
        <trans-unit id="e68de6d1ff1f2163e087582161fc807dc52641fc" translate="yes" xml:space="preserve">
          <source>This module implements the HMAC algorithm as described by &lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104で&lt;/strong&gt;&lt;/a&gt;説明され&lt;strong&gt;て&lt;/strong&gt;いるHMACアルゴリズムを実装し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e2d84704e96b7291c63c1ac3efbb5f6664c424ce" translate="yes" xml:space="preserve">
          <source>This module is based on the &lt;code&gt;paste.lint&lt;/code&gt; module from Ian Bicking&amp;rsquo;s &amp;ldquo;Python Paste&amp;rdquo; library.</source>
          <target state="translated">このモジュールは、Ian Bickingの「Python Paste」ライブラリの &lt;code&gt;paste.lint&lt;/code&gt; モジュールに基づいています。</target>
        </trans-unit>
        <trans-unit id="f013858815011cf856f770000ca4c7df309a157c" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instaniation of that class.</source>
          <target state="translated">このモジュールはPython 3で非推奨になりました&lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;クラスは、そのクラスのインスタンス化中に渡された&lt;em&gt;_subtype&lt;/em&gt;値と&lt;em&gt;_charset&lt;/em&gt;値を使用してコンテンツタイプとCTEヘッダーを設定するため、ここで提供される関数は明示的に呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="0429cbe9aa597c0b69111a1d41b8921cc161a566" translate="yes" xml:space="preserve">
          <source>This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed. For example, in a module that wants to implement an &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function that wraps the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, this module can be used directly:</source>
          <target state="translated">このモジュールは通常、ほとんどのアプリケーションによって明示的にアクセスされませんが、組み込み値と同じ名前のオブジェクトを提供するモジュールで役立ちますが、その名前の組み込みも必要です。例えば、実装したいモジュールに&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;内蔵ラップ機能&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;、このモジュールを直接使用することができます。</target>
        </trans-unit>
        <trans-unit id="2e6ab9db141dd804d00e434d702dfeb4bcde0dd7" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the current API encoding and decoding of headers is handled transparently by the dictionary-like API of the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class. In addition to uses in legacy code, this module can be useful in applications that need to completely control the character sets used when encoding headers.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。現在のAPIでは、ヘッダーのエンコードとデコードは、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスの辞書のようなAPIによって透過的に処理されます。このモジュールは、レガシーコードでの使用に加えて、ヘッダーのエンコード時に使用される文字セットを完全に制御する必要があるアプリケーションで役立ちます。</target>
        </trans-unit>
        <trans-unit id="180f900cae8d922dd98bae601f15771a481ee0ce" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API only the aliases table is used.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、エイリアステーブルのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="7cd2965c82b9a739b8830b1bfba981387bb8eef9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API the functionality is provided by the &lt;em&gt;cte&lt;/em&gt; parameter of the &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、機能は&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;cte&lt;/em&gt;パラメーターによって提供されます。</target>
        </trans-unit>
        <trans-unit id="27d84dff011c3a4e546bb4a84107261b06d95ee9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. Its functionality is partially replaced by the &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt;&lt;code&gt;contentmanager&lt;/code&gt;&lt;/a&gt; in the new API, but in certain applications these classes may still be useful, even in non-legacy code.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、その機能の一部が&lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt; &lt;code&gt;contentmanager&lt;/code&gt; &lt;/a&gt;に置き換えられていますが、特定のアプリケーションでは、これらのクラスは、レガシー以外のコードでも引き続き役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="dfd1c33f39be668ad64a1446553d02f9a8cd6310" translate="yes" xml:space="preserve">
          <source>This module is quite similar to the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module, but uses the GNU library &lt;code&gt;gdbm&lt;/code&gt; instead to provide some additional functionality. Please note that the file formats created by &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; are incompatible.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;モジュールに非常に似ていますが、いくつかの追加機能を提供するために代わりにGNUライブラリ &lt;code&gt;gdbm&lt;/code&gt; を使用します。&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; で&lt;/a&gt;作成されたファイル形式には互換性がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7b216268bb69c1fdf01b3213c4d03d0dea781f3b" translate="yes" xml:space="preserve">
          <source>This module leverages Python&amp;rsquo;s import system to provide access to &lt;em&gt;resources&lt;/em&gt; within &lt;em&gt;packages&lt;/em&gt;. If you can import a package, you can access resources within that package. Resources can be opened or read, in either binary or text mode.</source>
          <target state="translated">このモジュールは、Pythonのインポートシステムを利用して、&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;へのアクセスを提供し&lt;em&gt;ます&lt;/em&gt;。パッケージをインポートできる場合は、そのパッケージ内のリソースにアクセスできます。リソースは、バイナリモードまたはテキストモードで開いたり読み取ったりできます。</target>
        </trans-unit>
        <trans-unit id="d567be3ffbb48af9ddd8e570ee9aca2bcd078e25" translate="yes" xml:space="preserve">
          <source>This module makes available standard &lt;code&gt;errno&lt;/code&gt; system symbols. The value of each symbol is the corresponding integer value. The names and descriptions are borrowed from &lt;code&gt;linux/include/errno.h&lt;/code&gt;, which should be pretty all-inclusive.</source>
          <target state="translated">このモジュールは、標準の &lt;code&gt;errno&lt;/code&gt; システムシンボルを使用可能にします。各シンボルの値は、対応する整数値です。名前と説明は &lt;code&gt;linux/include/errno.h&lt;/code&gt; から借用したもので、かなり包括的である必要があります。</target>
        </trans-unit>
        <trans-unit id="8177e37ca6fd47fc24221a5d337fc98fe8380b1b" translate="yes" xml:space="preserve">
          <source>This module offers classes representing filesystem paths with semantics appropriate for different operating systems. Path classes are divided between &lt;a href=&quot;#pure-paths&quot;&gt;pure paths&lt;/a&gt;, which provide purely computational operations without I/O, and &lt;a href=&quot;#concrete-paths&quot;&gt;concrete paths&lt;/a&gt;, which inherit from pure paths but also provide I/O operations.</source>
          <target state="translated">このモジュールは、さまざまなオペレーティングシステムに適したセマンティクスでファイルシステムパスを表すクラスを提供します。パスクラスは間で分割され&lt;a href=&quot;#pure-paths&quot;&gt;、純粋なパス&lt;/a&gt; I / Oせずに純粋に計算動作を提供し、および&lt;a href=&quot;#concrete-paths&quot;&gt;コンクリート経路&lt;/a&gt;、純粋な経路から継承するだけでなく、I / O動作を提供します。</target>
        </trans-unit>
        <trans-unit id="ed5c638dd819f880628830ab0ecc5d8641d533ba" translate="yes" xml:space="preserve">
          <source>This module offers several classes to implement SMTP (email) servers.</source>
          <target state="translated">このモジュールは、SMTP(電子メール)サーバーを実装するためのいくつかのクラスを提供します。</target>
        </trans-unit>
        <trans-unit id="5ce552dbf20b8c159b70061696daa935deadc19d" translate="yes" xml:space="preserve">
          <source>This module offers the following functions:</source>
          <target state="translated">このモジュールは以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="d8a6bfc993b9c245ec8eb2cc7787eb9de4ea8adc" translate="yes" xml:space="preserve">
          <source>This module performs conversions between Python values and C structs represented as Python &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. This can be used in handling binary data stored in files or from network connections, among other sources. It uses &lt;a href=&quot;#struct-format-strings&quot;&gt;Format Strings&lt;/a&gt; as compact descriptions of the layout of the C structs and the intended conversion to/from Python values.</source>
          <target state="translated">このモジュールは、Python値とPython &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとして表されるC構造体の間の変換を実行します。これは、他のソースの中でも、ファイルに保存されたバイナリデータやネットワーク接続からのバイナリデータの処理に使用できます。これは、C構造体のレイアウトのコンパクトな説明と、Python値との間の意図された変換として&lt;a href=&quot;#struct-format-strings&quot;&gt;フォーマット文字&lt;/a&gt;列を使用します。</target>
        </trans-unit>
        <trans-unit id="b6eea1445534f2c5a7d57930c9064fef45e4cd14" translate="yes" xml:space="preserve">
          <source>This module performs file control and I/O control on file descriptors. It is an interface to the &lt;code&gt;fcntl()&lt;/code&gt; and &lt;code&gt;ioctl()&lt;/code&gt; Unix routines. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl(2)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl(2)&lt;/a&gt;&lt;/em&gt; Unix manual pages.</source>
          <target state="translated">このモジュールは、ファイル記述子に対してファイル制御とI / O制御を実行します。これは、 &lt;code&gt;fcntl()&lt;/code&gt; および &lt;code&gt;ioctl()&lt;/code&gt; Unixルーチンへのインターフェースです。これらの呼び出しの詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl（2）&lt;/a&gt;&lt;/em&gt;および&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl（2）の&lt;/a&gt;&lt;/em&gt; Unixマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="887984972a32db5e99731e161e576fbca9e2f8cf" translate="yes" xml:space="preserve">
          <source>This module performs quoted-printable transport encoding and decoding, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;: &amp;ldquo;MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies&amp;rdquo;. The quoted-printable encoding is designed for data where there are relatively few nonprintable characters; the base64 encoding scheme available via the &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt; module is more compact if there are many such characters, as when sending a graphics file.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるquoted-printableトランスポートエンコーディングおよびデコーディングを実行し&lt;strong&gt;ます&lt;/strong&gt;。quoted-printableエンコーディングは、印刷できない文字が比較的少ないデータ用に設計されています。グラフィックファイルを送信するときのように、そのような文字が多い場合、&lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt;モジュールを介して使用できるbase64エンコードスキームはよりコンパクトになります。</target>
        </trans-unit>
        <trans-unit id="30c72eae525b4703153ea587e7608baa95a20091" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">このモジュールは、クラスが特定のインターフェースを提供するかどうかをテストするために使用できる&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;を提供します。たとえば、ハッシュ可能かどうか、マッピングかどうかなどです。</target>
        </trans-unit>
        <trans-unit id="13eafc2a82baf557013b08017f80bf530e415d08" translate="yes" xml:space="preserve">
          <source>This module provides APIs to manage, store, and access context-local state. The &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; class is used to declare and work with &lt;em&gt;Context Variables&lt;/em&gt;. The &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class should be used to manage the current context in asynchronous frameworks.</source>
          <target state="translated">このモジュールは、コンテキストローカル状態を管理、保存、およびアクセスするためのAPIを提供します。&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;クラスは、と宣言して作業するために使用される&lt;em&gt;コンテキスト変数&lt;/em&gt;。&lt;a href=&quot;#contextvars.copy_context&quot;&gt; &lt;code&gt;copy_context()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#contextvars.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;クラスは、非同期フレームワークにおける現在のコンテキストを管理するために使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="703dfbdde3fe51b975924d146f5d433ed1e5cf30" translate="yes" xml:space="preserve">
          <source>This module provides a &lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; class that can be used to determine the set of modules imported by a script. &lt;code&gt;modulefinder.py&lt;/code&gt; can also be run as a script, giving the filename of a Python script as its argument, after which a report of the imported modules will be printed.</source>
          <target state="translated">このモジュールは、スクリプトによってインポートされたモジュールのセットを判別するために使用できる&lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt;クラスを提供します。 &lt;code&gt;modulefinder.py&lt;/code&gt; は、Pythonスクリプトのファイル名を引数として指定してスクリプトとして実行することもできます。その後、インポートされたモジュールのレポートが出力されます。</target>
        </trans-unit>
        <trans-unit id="9fb1a53a880fe52c91fddba4f125f09d0a187d0c" translate="yes" xml:space="preserve">
          <source>This module provides a class &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; for representing character sets and character set conversions in email messages, as well as a character set registry and several convenience methods for manipulating this registry. Instances of &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; are used in several other modules within the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">このモジュールは、電子メールメッセージの文字セットと文字セット変換を表すクラス&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;を提供します。また、文字セットレジストリと、このレジストリを操作するためのいくつかの便利なメソッドを提供します。&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; の&lt;/a&gt;インスタンスは、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージ内の他のいくつかのモジュールで使用されます。</target>
        </trans-unit>
        <trans-unit id="213bc85d22b8633001facc52a601116b11e0ec9e" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;, for the allocation and management of shared memory to be accessed by one or more processes on a multicore or symmetric multiprocessor (SMP) machine. To assist with the life-cycle management of shared memory especially across distinct processes, a &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; subclass, &lt;code&gt;SharedMemoryManager&lt;/code&gt;, is also provided in the &lt;code&gt;multiprocessing.managers&lt;/code&gt; module.</source>
          <target state="translated">このモジュールは、マルチコアまたは対称型マルチプロセッサー（SMP）マシン上の1つ以上のプロセスによってアクセスされる共有メモリーの割り当てと管理のためのクラス&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; を&lt;/a&gt;提供します。特に異なるプロセス間で共有メモリのライフサイクル管理を支援するために、&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; の&lt;/a&gt;サブクラス、 &lt;code&gt;SharedMemoryManager&lt;/code&gt; は、またに設けられ &lt;code&gt;multiprocessing.managers&lt;/code&gt; のモジュール。</target>
        </trans-unit>
        <trans-unit id="90404141faf9f0c0e94247220f4a81789284c490" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;,which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">このモジュールは、クラスを提供&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;に由来し、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; の&lt;/a&gt;タイプ、およびソケットのようなラッパーもSSLでソケットを介して行くデータを暗号化し、復号化していることを提供します。それは、次のような追加のメソッドサポート &lt;code&gt;getpeercert()&lt;/code&gt; 接続の反対側の証明書を取得し、及び &lt;code&gt;cipher()&lt;/code&gt; セキュアな接続のために使用される暗号を取得し、。</target>
        </trans-unit>
        <trans-unit id="8f0ffcd572b3174eb3c8a270163a48792d8c1a64" translate="yes" xml:space="preserve">
          <source>This module provides a class, an instance, and a function:</source>
          <target state="translated">このモジュールは、クラス、インスタンス、関数を提供します。</target>
        </trans-unit>
        <trans-unit id="7420a8c5a8b68bbee2a0537324852b74b6e93ea0" translate="yes" xml:space="preserve">
          <source>This module provides a comprehensive interface for compressing and decompressing data using the bzip2 compression algorithm.</source>
          <target state="translated">このモジュールは、bzip2 圧縮アルゴリズムを用いたデータの圧縮と解凍のための包括的なインターフェイスを提供する。</target>
        </trans-unit>
        <trans-unit id="85cdc6759a6295c61c57d18349a77a0e70ad451c" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;や__repr __（）などの生成された&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;特別なメソッド&lt;/a&gt;をユーザー定義クラスに自動的に追加するためのデコレーターと関数を提供します。もともとは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557に&lt;/strong&gt;&lt;/a&gt;記述されていました。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cd4efd6ed76589f3eff9b3aada6dff77c95ad36" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールへの重複したインターフェースを提供します。&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールがプラットフォームで提供されていない場合にインポートすることを意図していた。</target>
        </trans-unit>
        <trans-unit id="3fef5cae12047ccc1374399baa4337c5fac7f2f3" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールへの重複したインターフェースを提供します。&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールがプラットフォームで提供されていない場合にインポートすることを意図していた。</target>
        </trans-unit>
        <trans-unit id="b8848396af147fc8383e103fb6d46929f1bef6b8" translate="yes" xml:space="preserve">
          <source>This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, if you want to manipulate paths, see the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module, and if you want to read all the lines in all the files on the command line see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module. For creating temporary files and directories see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module, and for high-level file and directory handling see the &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、オペレーティングシステムに依存する機能を使用するポータブルな方法を提供します。ファイルの読み取りまたは書き込みのみを行う場合は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;、パスを操作する場合は&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;モジュールを、コマンドラインのすべてのファイルのすべての行を読み取る場合は&lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。。一時ファイルとディレクトリの作成については、&lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。高レベルのファイルとディレクトリの処理については、&lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f8f0c0c78932b5e209afaba9f5dcfdab7f59d3bd" translate="yes" xml:space="preserve">
          <source>This module provides a simple interface to compress and decompress files just like the GNU programs &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; would.</source>
          <target state="translated">このモジュールは、GNUプログラムの&lt;strong&gt;gzip&lt;/strong&gt;および&lt;strong&gt;gunzip&lt;/strong&gt;と同様に、ファイルを圧縮および解凍するためのシンプルなインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="72a987a70c302afe568cb8de1bfe5273c35907f2" translate="yes" xml:space="preserve">
          <source>This module provides a simple way to time small bits of Python code. It has both a &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; as well as a &lt;a href=&quot;#python-interface&quot;&gt;callable&lt;/a&gt; one. It avoids a number of common traps for measuring execution times. See also Tim Peters&amp;rsquo; introduction to the &amp;ldquo;Algorithms&amp;rdquo; chapter in the &lt;em&gt;Python Cookbook&lt;/em&gt;, published by O&amp;rsquo;Reilly.</source>
          <target state="translated">このモジュールは、小さなPythonコードの時間を計測する簡単な方法を提供します。&lt;a href=&quot;#timeit-command-line-interface&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;と&lt;a href=&quot;#python-interface&quot;&gt;呼び出し可能な&lt;/a&gt;インターフェイスの両方を備えています。実行時間を測定するための多くの一般的なトラップを回避します。O'Reillyによって発行された&lt;em&gt;Python Cookbookの&lt;/em&gt;「アルゴリズム」の章に対するTim Petersの紹介も参照してください。</target>
        </trans-unit>
        <trans-unit id="ac5624f85e8b62430d234b85484c3d823bb52291" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt;, which answers questions about whether or not a particular user agent can fetch a URL on the Web site that published the &lt;code&gt;robots.txt&lt;/code&gt; file. For more details on the structure of &lt;code&gt;robots.txt&lt;/code&gt; files, see &lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、特定のユーザーエージェントが &lt;code&gt;robots.txt&lt;/code&gt; ファイルを公​​開したWebサイト上のURLをフェッチできるかどうかについての質問に答える&lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; &lt;/a&gt;という単一のクラスを提供します。 &lt;code&gt;robots.txt&lt;/code&gt; ファイルの構造の詳細については、&lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http: &lt;/a&gt;//www.robotstxt.org/orig.htmlを参照してください。</target>
        </trans-unit>
        <trans-unit id="62e4158ef196326ed71c06f9c8cc82d27d3fbbcf" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt;, for convenient manipulation of WSGI response headers using a mapping-like interface.</source>
          <target state="translated">このモジュールは、マッピングのようなインターフェースを使用してWSGI応答ヘッダーを簡単に操作できるように、単一のクラス&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; を&lt;/a&gt;提供します。</target>
        </trans-unit>
        <trans-unit id="6536d070903854775a48e95f262d42244862ad75" translate="yes" xml:space="preserve">
          <source>This module provides a standard interface to extract, format and print stack traces of Python programs. It exactly mimics the behavior of the Python interpreter when it prints a stack trace. This is useful when you want to print stack traces under program control, such as in a &amp;ldquo;wrapper&amp;rdquo; around the interpreter.</source>
          <target state="translated">このモジュールは、Pythonプログラムのスタックトレースを抽出、フォーマット、および印刷するための標準インターフェイスを提供します。スタックトレースを出力するときのPythonインタープリターの動作を正確に模倣します。これは、インタープリターの「ラッパー」など、プログラムの制御下でスタックトレースを印刷する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="16801fcd2f87bd96df53f183ca91321a894b0cee" translate="yes" xml:space="preserve">
          <source>This module provides a variety of utility functions for working with WSGI environments. A WSGI environment is a dictionary containing HTTP request variables as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. All of the functions taking an &lt;em&gt;environ&lt;/em&gt; parameter expect a WSGI-compliant dictionary to be supplied; please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; for a detailed specification.</source>
          <target state="translated">このモジュールは、WSGI環境を操作するためのさまざまなユーティリティ関数を提供します。WSGI環境は、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333で&lt;/strong&gt;&lt;/a&gt;説明されているHTTP要求変数を含む辞書です。&lt;em&gt;environ&lt;/em&gt;パラメータを取るすべての関数は、WSGI準拠の辞書が提供されることを期待しています。詳細な仕様については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f47d51ea5443642e0cebe608bdfb649e783a95da" translate="yes" xml:space="preserve">
          <source>This module provides access to Transport Layer Security (often known as &amp;ldquo;Secure Sockets Layer&amp;rdquo;) encryption and peer authentication facilities for network sockets, both client-side and server-side. This module uses the OpenSSL library. It is available on all modern Unix systems, Windows, Mac OS X, and probably additional platforms, as long as OpenSSL is installed on that platform.</source>
          <target state="translated">このモジュールは、クライアント側とサーバー側の両方のネットワークソケットに対して、トランスポート層セキュリティ（「Secure Sockets Layer」とも呼ばれる）暗号化およびピア認証機能へのアクセスを提供します。このモジュールはOpenSSLライブラリを使用します。OpenSSLがそのプラットフォームにインストールされている限り、すべての最新のUnixシステム、Windows、Mac OS X、およびおそらく追加のプラットフォームで使用できます。</target>
        </trans-unit>
        <trans-unit id="fb47dc23d4685117a20e275d440b82a71cb84040" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">このモジュールは、複素数の数学関数へのアクセスを提供します。このモジュールの関数は、整数、浮動小数点数、または複素数を引数として受け入れます。また、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;メソッドのいずれかを持つ任意のPythonオブジェクトも受け入れます。これらのメソッドは、オブジェクトをそれぞれ複素数または浮動小数点数に変換するために使用され、関数は次の結果に適用されます変換。</target>
        </trans-unit>
        <trans-unit id="96bd06b62c229263aee7d4b310478ba4038faf46" translate="yes" xml:space="preserve">
          <source>This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface).</source>
          <target state="translated">このモジュールは、C標準とPOSIX標準で標準化されているオペレーティングシステムの機能へのアクセスを提供します (薄く偽装されたUnixインターフェース)。</target>
        </trans-unit>
        <trans-unit id="fc2f9ad21523dcef5a819d87ef202bea6b841856" translate="yes" xml:space="preserve">
          <source>This module provides access to some variables used or maintained by the interpreter and to functions that interact strongly with the interpreter. It is always available.</source>
          <target state="translated">このモジュールは、インタープリタによって使用または維持されるいくつかの変数や、インタープリタと強く相互作用する関数へのアクセスを提供します。いつでも利用可能です。</target>
        </trans-unit>
        <trans-unit id="2bc2d795b2f5d56c42bc1fcccb682e4b1315d9ca" translate="yes" xml:space="preserve">
          <source>This module provides access to the &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; functions available in most operating systems, &lt;code&gt;devpoll()&lt;/code&gt; available on Solaris and derivatives, &lt;code&gt;epoll()&lt;/code&gt; available on Linux 2.5+ and &lt;code&gt;kqueue()&lt;/code&gt; available on most BSD. Note that on Windows, it only works for sockets; on other operating systems, it also works for other file types (in particular, on Unix, it works on pipes). It cannot be used on regular files to determine whether a file has grown since it was last read.</source>
          <target state="translated">このモジュールは、へのアクセスを提供します &lt;code&gt;select()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; ほとんどのオペレーティングシステムで利用可能な機能、 &lt;code&gt;devpoll()&lt;/code&gt; 可能なSolarisおよび誘導体を、 &lt;code&gt;epoll()&lt;/code&gt; のLinux 2.5+とで利用可能 &lt;code&gt;kqueue()&lt;/code&gt; ほとんどのBSDで利用可能。Windowsでは、ソケットに対してのみ機能することに注意してください。他のオペレーティングシステムでは、他のファイルタイプでも機能します（特に、Unixではパイプで機能します）。通常のファイルでは、最後に読み取られてからファイルが大きくなっているかどうかを判断するために使用することはできません。</target>
        </trans-unit>
        <trans-unit id="f5ea14577acc1b35986f36f159c2c78929863d41" translate="yes" xml:space="preserve">
          <source>This module provides access to the BSD &lt;em&gt;socket&lt;/em&gt; interface. It is available on all modern Unix systems, Windows, MacOS, and probably additional platforms.</source>
          <target state="translated">このモジュールは、BSD &lt;em&gt;ソケット&lt;/em&gt;インターフェースへのアクセスを提供します。最近のすべてのUnixシステム、Windows、MacOS、そしておそらく追加のプラットフォームで利用可能です。</target>
        </trans-unit>
        <trans-unit id="4edada6edb283e968b93e64d3bef29ca69397245" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD version 12.1.0&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、すべてのUnicode文字の文字プロパティを定義するUnicode Character Database（UCD）へのアクセスを提供します。このデータベースに含まれるデータは、&lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCDバージョン12.1.0&lt;/a&gt;からコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="30670ccef8e7fe81c71479df8b9249a53340baa3" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix group database. It is available on all Unix versions.</source>
          <target state="translated">このモジュールはUnixグループデータベースへのアクセスを提供します。これはすべての Unix バージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="55f03ba226e0b0cb51540161e0864d43da374302" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix shadow password database. It is available on various Unix versions.</source>
          <target state="translated">このモジュールは、Unix シャドウパスワードデータベースへのアクセスを提供します。これは様々な Unix のバージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="673e84aa5c6cb1086db76a154ca80c1cc47c2e40" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix user account and password database. It is available on all Unix versions.</source>
          <target state="translated">このモジュールは、Unix ユーザアカウントとパスワードデータベースへのアクセスを提供します。これはすべての Unix バージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="58e68fc7fd3b84061fa6b4f1dc9c8b600f222438" translate="yes" xml:space="preserve">
          <source>This module provides access to the mathematical functions defined by the C standard.</source>
          <target state="translated">このモジュールは、C標準で定義されている数学関数へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="469fcb73e532c33fb0f828785ab9c89776d66732" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of the heap queue algorithm, also known as the priority queue algorithm.</source>
          <target state="translated">このモジュールは、優先度キューアルゴリズムとしても知られるヒープキューアルゴリズムの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="52af56f54da90f517f414639fe74fe94fa8a209d" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used mainly by Mac OS X and supports both binary and XML plist files.</source>
          <target state="translated">このモジュールは、主にMac OS Xで使用される「プロパティリスト」ファイルを読み書きするためのインターフェースを提供し、バイナリファイルとXML plistファイルの両方をサポートします。</target>
        </trans-unit>
        <trans-unit id="f7985b4122bdce70b370c7fd3cec918904d41ad1" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading files that use EA IFF 85 chunks. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; This format is used in at least the Audio Interchange File Format (AIFF/AIFF-C) and the Real Media File Format (RMFF). The WAVE audio file format is closely related and can also be read using this module.</source>
          <target state="translated">このモジュールは、EA IFF 85チャンクを使用するファイルを読み取るためのインターフェースを提供します。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;このフォーマットは、少なくともオーディオインターチェンジファイルフォーマット（AIFF / AIFF-C）およびリアルメディアファイルフォーマット（RMFF）で使用されます。WAVEオーディオファイル形式は密接に関連しており、このモジュールを使用して読み取ることもできます。</target>
        </trans-unit>
        <trans-unit id="e5235c064e0fb34f3d9063e171a6e6c64d56db25" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the POSIX calls for tty I/O control. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios(3)&lt;/a&gt;&lt;/em&gt; Unix manual page. It is only available for those Unix versions that support POSIX &lt;em&gt;termios&lt;/em&gt; style tty I/O control configured during installation.</source>
          <target state="translated">このモジュールは、tty I / O制御のためのPOSIX呼び出しへのインターフェースを提供します。これらの呼び出しの詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios（3）の&lt;/a&gt;&lt;/em&gt; Unixマニュアルページを参照してください。これは、インストール中に構成されたPOSIX &lt;em&gt;termios&lt;/em&gt;スタイルのtty I / OコントロールをサポートするUnixバージョンでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="086f3cc3f100e25677403b5b1acdc335886e31be" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the Unix &lt;code&gt;syslog&lt;/code&gt; library routines. Refer to the Unix manual pages for a detailed description of the &lt;code&gt;syslog&lt;/code&gt; facility.</source>
          <target state="translated">このモジュールは、Unix &lt;code&gt;syslog&lt;/code&gt; ライブラリルーチンへのインターフェースを提供します。 &lt;code&gt;syslog&lt;/code&gt; 機能の詳細については、Unixのマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="5767581be7b98c856708e68e4887a01ee5ed3ca7" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the optional garbage collector. It provides the ability to disable the collector, tune the collection frequency, and set debugging options. It also provides access to unreachable objects that the collector found but cannot free. Since the collector supplements the reference counting already used in Python, you can disable the collector if you are sure your program does not create reference cycles. Automatic collection can be disabled by calling &lt;code&gt;gc.disable()&lt;/code&gt;. To debug a leaking program call &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt;. Notice that this includes &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt;, causing garbage-collected objects to be saved in gc.garbage for inspection.</source>
          <target state="translated">このモジュールは、オプションのガベージコレクターへのインターフェイスを提供します。コレクターを無効にし、収集頻度を調整し、デバッグオプションを設定する機能を提供します。また、コレクターが検出したが解放できない到達不能オブジェクトへのアクセスも提供します。コレクターは既にPythonで使用されている参照カウントを補足するため、プログラムが参照サイクルを作成しないことが確実な場合は、コレクターを無効にすることができます。自動収集は、 &lt;code&gt;gc.disable()&lt;/code&gt; を呼び出すことで無効にできます。リークするプログラムをデバッグするには、 &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt; を呼び出します。これには &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt; が含まれ、ガベージコレクションされたオブジェクトが検査のためにgc.garbageに保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="32207cdf053d4b53a02fec90b3f2fe847d2a3f32" translate="yes" xml:space="preserve">
          <source>This module provides base handler classes for implementing WSGI servers and gateways. These base classes handle most of the work of communicating with a WSGI application, as long as they are given a CGI-like environment, along with input, output, and error streams.</source>
          <target state="translated">このモジュールは、WSGIサーバとゲートウェイを実装するための基本ハンドラクラスを提供します。これらの基本クラスは、入力、出力、エラーストリームとともに、CGIライクな環境が与えられている限り、WSGIアプリケーションとの通信のほとんどの作業を処理します。</target>
        </trans-unit>
        <trans-unit id="3d2d65711f29707dcf3c68b47576e06b5bb25708" translate="yes" xml:space="preserve">
          <source>This module provides basic mechanisms for measuring and controlling system resources utilized by a program.</source>
          <target state="translated">本モジュールでは、プログラムが利用するシステム資源を計測・制御するための基本的な仕組みを提供します。</target>
        </trans-unit>
        <trans-unit id="2074e4ed5cae8e3c02c907a6fb87896ca374907a" translate="yes" xml:space="preserve">
          <source>This module provides classes and convenience functions for compressing and decompressing data using the LZMA compression algorithm. Also included is a file interface supporting the &lt;code&gt;.xz&lt;/code&gt; and legacy &lt;code&gt;.lzma&lt;/code&gt; file formats used by the &lt;strong&gt;xz&lt;/strong&gt; utility, as well as raw compressed streams.</source>
          <target state="translated">このモジュールは、LZMA圧縮アルゴリズムを使用してデータを圧縮および解凍するためのクラスと便利な関数を提供します。また、&lt;strong&gt;xz&lt;/strong&gt;ユーティリティで使用される &lt;code&gt;.xz&lt;/code&gt; およびレガシー &lt;code&gt;.lzma&lt;/code&gt; ファイル形式をサポートするファイルインターフェースと、生の圧縮ストリームも含まれます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b41ff6259a2809c3c85cfcb2d023518394f66db" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce difference information in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、シーケンスを比較するためのクラスと関数を提供します。たとえば、ファイルの比較に使用したり、HTMLやコンテキスト、統一された差分など、さまざまな形式で差分情報を生成したりできます。ディレクトリとファイルの比較については、&lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="4d3a75e4fdf67641ed01276bf79ceb985728ca3f" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of internal nodes of the parse tree. Unlike most Python constants, these use lower-case names. Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">このモジュールは、解析ツリーの内部ノードの数値を表す定数を提供します。ほとんどのPython定数とは異なり、これらは小文字の名前を使用します。言語文法の文脈における名前の定義については、Pythonディストリビューションの &lt;code&gt;Grammar/Grammar&lt;/code&gt; ファイルを参照してください。名前がマップする特定の数値は、Pythonのバージョン間で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="0db1c58e5713700f3d18b08e3440f3ac8160539e" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of leaf nodes of the parse tree (terminal tokens). Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">このモジュールは、解析ツリー（端末トークン）の葉ノードの数値を表す定数を提供します。言語文法の文脈における名前の定義については、Pythonディストリビューションの &lt;code&gt;Grammar/Grammar&lt;/code&gt; ファイルを参照してください。名前がマップする特定の数値は、Pythonのバージョン間で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="dc2f9c0b7237fe8976f75e5c839bcb70285d1a61" translate="yes" xml:space="preserve">
          <source>This module provides direct access to all &amp;lsquo;built-in&amp;rsquo; identifiers of Python; for example, &lt;code&gt;builtins.open&lt;/code&gt; is the full name for the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;functions#built-in-funcs&quot;&gt;Built-in Functions&lt;/a&gt; and &lt;a href=&quot;constants#built-in-consts&quot;&gt;Built-in Constants&lt;/a&gt; for documentation.</source>
          <target state="translated">このモジュールは、Pythonのすべての「組み込み」識別子への直接アクセスを提供します。たとえば、 &lt;code&gt;builtins.open&lt;/code&gt; は組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;の完全な名前です。ドキュメントについて&lt;a href=&quot;constants#built-in-consts&quot;&gt;は&lt;/a&gt;、組み込み&lt;a href=&quot;functions#built-in-funcs&quot;&gt;関数&lt;/a&gt;と組み込み定数を参照してください。</target>
        </trans-unit>
        <trans-unit id="0e1adbb5fba8bcb0dd3c5d2f87875121ca620833" translate="yes" xml:space="preserve">
          <source>This module provides functionality similar to &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt; without the performance overhead of that package. This makes reading resources included in packages easier, with more stable and consistent semantics.</source>
          <target state="translated">このモジュールは、そのパッケージのパフォーマンスオーバーヘッドなしで、&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources &lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt;と同様の機能を提供します。これにより、パッケージに含まれるリソースの読み取りが容易になり、セマンティクスがより安定して一貫します。</target>
        </trans-unit>
        <trans-unit id="4b5ca63a2aecc796e502235c6d48c1ae2106dc46" translate="yes" xml:space="preserve">
          <source>This module provides functions for calculating mathematical statistics of numeric (&lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;-valued) data.</source>
          <target state="translated">このモジュールは、数値（&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;数値）データの数学的統計を計算するための関数を提供します。</target>
        </trans-unit>
        <trans-unit id="75398ee52262755abb3726df7ae90cc9e462672d" translate="yes" xml:space="preserve">
          <source>This module provides functions for encoding binary data to printable ASCII characters and decoding such encodings back to binary data. It provides encoding and decoding functions for the encodings specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;, which defines the Base16, Base32, and Base64 algorithms, and for the de-facto standard Ascii85 and Base85 encodings.</source>
          <target state="translated">このモジュールは、バイナリデータを印刷可能なASCII文字にエンコードし、そのようなエンコードをデコードしてバイナリデータに戻す関数を提供します。これは、Base16、Base32、およびBase64アルゴリズムを定義する&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;で指定されたエンコーディングと、事実上の標準であるAscii85およびBase85エンコーディングのエンコーディングおよびデコーディング機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f9ee787249598374b8b03ab5d0feb31c2f56e5d8" translate="yes" xml:space="preserve">
          <source>This module provides immutable &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; objects (the &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; class) and the functions &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt; for generating version 1, 3, 4, and 5 UUIDs as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122で&lt;/strong&gt;&lt;/a&gt;指定され&lt;strong&gt;ている&lt;/strong&gt;バージョン&lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt;、および5のUUIDを生成するための不変の&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;オブジェクト（&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;クラス）および関数&lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; &lt;/a&gt;、uuid5（）を提供し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="06c6eafc483d258beab85551b483806ae97c5c22" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude directives&lt;/a&gt;, via the &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; helper module. This module can be used to insert subtrees and text strings into element trees, based on information in the tree.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; ヘルパーモジュールを介して、&lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XIncludeディレクティブの&lt;/a&gt;限定的なサポートを提供します。このモジュールは、ツリー内の情報に基づいて、サブツリーとテキスト文字列を要素ツリーに挿入するために使用できます。</target>
        </trans-unit>
        <trans-unit id="8e2b5842f0ed4029e7a99dedd0e7121a9e735bad" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath expressions&lt;/a&gt; for locating elements in a tree. The goal is to support a small subset of the abbreviated syntax; a full XPath engine is outside the scope of the module.</source>
          <target state="translated">このモジュールは、ツリー内の要素を見つけるための&lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath式の&lt;/a&gt;限定的なサポートを提供します。目標は、省略された構文の小さなサブセットをサポートすることです。完全なXPathエンジンはモジュールの範囲外です。</target>
        </trans-unit>
        <trans-unit id="0bf7ba3f5539cc8e4d1e744ec755fce3ecc09d6b" translate="yes" xml:space="preserve">
          <source>This module provides low-level primitives for working with multiple threads (also called &lt;em&gt;light-weight processes&lt;/em&gt; or &lt;em&gt;tasks&lt;/em&gt;) &amp;mdash; multiple threads of control sharing their global data space. For synchronization, simple locks (also called &lt;em&gt;mutexes&lt;/em&gt; or &lt;em&gt;binary semaphores&lt;/em&gt;) are provided. The &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module provides an easier to use and higher-level threading API built on top of this module.</source>
          <target state="translated">このモジュールは、複数のスレッド（&lt;em&gt;軽量プロセス&lt;/em&gt;または&lt;em&gt;タスク&lt;/em&gt;とも呼ばれます）を操作するための低レベルのプリミティブを提供します&amp;mdash;複数の制御スレッドがグローバルデータスペースを共有します。同期のために、単純なロック（&lt;em&gt;ミューテックス&lt;/em&gt;または&lt;em&gt;バイナリセマフォ&lt;/em&gt;とも呼ばれます）が提供されています。&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールは、このモジュールの上に構築された、使いやすく、より高いレベルのスレッドAPIを提供します。</target>
        </trans-unit>
        <trans-unit id="d00695c8d8aaeb3205a3ed627d8ec50cee6867c5" translate="yes" xml:space="preserve">
          <source>This module provides mechanisms to use signal handlers in Python.</source>
          <target state="translated">このモジュールは、Pythonでシグナルハンドラを使用するための仕組みを提供します。</target>
        </trans-unit>
        <trans-unit id="f569226472a737263efed126429393dd8a849aa0" translate="yes" xml:space="preserve">
          <source>This module provides names for many of the types that are required to implement a Python interpreter. It deliberately avoids including some of the types that arise only incidentally during processing such as the &lt;code&gt;listiterator&lt;/code&gt; type.</source>
          <target state="translated">このモジュールは、Pythonインタープリターの実装に必要な多くのタイプの名前を提供します。これは、 &lt;code&gt;listiterator&lt;/code&gt; タイプなど、処理中に偶発的にのみ発生するタイプのいくつかを意図的に含めることを避けます。</target>
        </trans-unit>
        <trans-unit id="dd6ac6c47b580fce484cd078e849be51aa1988ef" translate="yes" xml:space="preserve">
          <source>This module provides one exception and one type object:</source>
          <target state="translated">このモジュールは、1つの例外と1つの型オブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="9cf56c38d255b7eb6778dc5332911ee7531ebe53" translate="yes" xml:space="preserve">
          <source>This module provides regular expression matching operations similar to those found in Perl.</source>
          <target state="translated">このモジュールは、Perlで見られるような正規表現のマッチング操作を提供します。</target>
        </trans-unit>
        <trans-unit id="4b49c61f0886b25155c2b3daf9b55f7958df6ab6" translate="yes" xml:space="preserve">
          <source>This module provides runtime support for type hints as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;. The most fundamental support consists of the types &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt;. For full specification please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;. For a simplified introduction to type hints see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;、および&lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591で&lt;/strong&gt;&lt;/a&gt;指定されているタイプヒントのランタイムサポートを提供します。最も基本的なサポートは、種類で構成され&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;。完全な仕様については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;を参照してください。型ヒントの簡単な紹介については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="532cca5468b0ad145e3eab39e13ea225f5dbce6f" translate="yes" xml:space="preserve">
          <source>This module provides some utility functions to support installing Python libraries. These functions compile Python source files in a directory tree. This module can be used to create the cached byte-code files at library installation time, which makes them available for use even by users who don&amp;rsquo;t have write permission to the library directories.</source>
          <target state="translated">このモジュールは、Pythonライブラリのインストールをサポートするいくつかのユーティリティ関数を提供します。これらの関数は、Pythonソースファイルをディレクトリツリーにコンパイルします。このモジュールは、ライブラリのインストール時にキャッシュされたバイトコードファイルを作成するために使用できます。これにより、ライブラリディレクトリへの書き込み権限がないユーザーでも使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="81a0615691bbce1f954726677409cc9bb8dfb30a" translate="yes" xml:space="preserve">
          <source>This module provides support for Unix shell-style wildcards, which are &lt;em&gt;not&lt;/em&gt; the same as regular expressions (which are documented in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module). The special characters used in shell-style wildcards are:</source>
          <target state="translated">このモジュールは、正規表現（&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;モジュールに記載されている）とは&lt;em&gt;異なる&lt;/em&gt; Unixシェルスタイルのワイルドカードをサポートします。シェルスタイルのワイルドカードで使用される特殊文字は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5ea0af12bd69eb91fa994fc1c788ed7bbb0a0fa5" translate="yes" xml:space="preserve">
          <source>This module provides support for a-LAW, u-LAW and Intel/DVI ADPCM encodings.</source>
          <target state="translated">このモジュールは、a-LAW、u-LAW、および Intel/DVI ADPCM エンコーディングをサポートします。</target>
        </trans-unit>
        <trans-unit id="37579753c5f46d08ff6a65e6a62810dd661abff2" translate="yes" xml:space="preserve">
          <source>This module provides support for maintaining a list in sorted order without having to sort the list after each insertion. For long lists of items with expensive comparison operations, this can be an improvement over the more common approach. The module is called &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect&lt;/code&gt;&lt;/a&gt; because it uses a basic bisection algorithm to do its work. The source code may be most useful as a working example of the algorithm (the boundary conditions are already right!).</source>
          <target state="translated">このモジュールは、各挿入後にリストをソートする必要なしに、ソートされた順序でリストを維持するためのサポートを提供します。コストのかかる比較操作を伴うアイテムの長いリストの場合、これはより一般的なアプローチよりも改善される可能性があります。モジュールは、基本的な二分アルゴリズムを使用して作業を行うため、&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect&lt;/code&gt; &lt;/a&gt;と呼ばれます。ソースコードは、アルゴリズムの実際の例として最も役立つ場合があります（境界条件はすでに正しいです）。</target>
        </trans-unit>
        <trans-unit id="2ac8792580c07542d59388d307ee83f6895e01e4" translate="yes" xml:space="preserve">
          <source>This module provides support for reading and writing AIFF and AIFF-C files. AIFF is Audio Interchange File Format, a format for storing digital audio samples in a file. AIFF-C is a newer version of the format that includes the ability to compress the audio data.</source>
          <target state="translated">このモジュールは、AIFF および AIFF-C ファイルの読み書きをサポートします。AIFF は Audio Interchange File Format で、デジタルオーディオサンプルをファイルに保存するためのフォーマットです。AIFF-C は、オーディオデータを圧縮する機能を含むフォーマットの新しいバージョンです。</target>
        </trans-unit>
        <trans-unit id="f619454e0cd883753f5aa29d59051c7efdc95c1c" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; class which implements a basic configuration language which provides a structure similar to what&amp;rsquo;s found in Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily.</source>
          <target state="translated">このモジュールは、Microsoft Windows INIファイルにあるものと同様の構造を提供する基本構成言語を実装する&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;クラスを提供します。これを使用して、エンドユーザーが簡単にカスタマイズできるPythonプログラムを作成できます。</target>
        </trans-unit>
        <trans-unit id="2196f022a345bbb2d0d9ec4089afe9f49eb7ee67" translate="yes" xml:space="preserve">
          <source>This module provides the basic infrastructure for writing asynchronous socket service clients and servers.</source>
          <target state="translated">このモジュールは、非同期ソケットサービスのクライアントとサーバを記述するための基本的なインフラストラクチャを提供します。</target>
        </trans-unit>
        <trans-unit id="5de5cc5107720c846f4c171dd1d059a801f1f751" translate="yes" xml:space="preserve">
          <source>This module provides the following function:</source>
          <target state="translated">このモジュールは以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="0820fe444c091f886715862b85c51be5074c2d42" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119で&lt;/strong&gt;&lt;/a&gt;概説されているように、Pythonで&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;（ABC）を定義するためのインフラストラクチャを提供します。これがPythonに追加された理由については、PEPを参照してください。（ABCに基づく数値の型階層については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。）&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69215bf3ed347a2cba2f5ecd0a5495f835fbb5b" translate="yes" xml:space="preserve">
          <source>This module provides the metaclass &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; for defining ABCs and a helper class &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; to alternatively define ABCs through inheritance:</source>
          <target state="translated">このモジュールは、ABCを定義するためのメタクラス&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;と、継承によってABCを定義するためのヘルパークラス&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="78b52d81ca4d921802dd5d8de6b28e9b2b042b84" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、Pythonコードを含むzipファイルの作成を管理するツールを提供します。これは&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;、Pythonインタープリターによって直接実行&lt;/a&gt;できます。このモジュールは、&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;コマンドラインインターフェース&lt;/a&gt;と&lt;a href=&quot;#zipapp-python-api&quot;&gt;Python APIの&lt;/a&gt;両方を提供します。</target>
        </trans-unit>
        <trans-unit id="53a874565a2be8671d555dddd96ba1951dc626bc" translate="yes" xml:space="preserve">
          <source>This module provides two functions and an exception:</source>
          <target state="translated">このモジュールは、2 つの関数と例外を提供します。</target>
        </trans-unit>
        <trans-unit id="0c692d34344adf8940dacd20d0010b650d9e4c65" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを含む一般的なタスクのユーティリティを提供します。詳細については、「&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャーのタイプ」&lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;「ステートメントコンテキストマネージャー&lt;/a&gt;を使用」も参照してください。</target>
        </trans-unit>
        <trans-unit id="426dcc1cbaf25e58643c58a6a6297e1a618dac4e" translate="yes" xml:space="preserve">
          <source>This module provides utilities for the import system, in particular package support.</source>
          <target state="translated">このモジュールは、インポートシステム、特にパッケージサポートのためのユーティリティを提供します。</target>
        </trans-unit>
        <trans-unit id="240bcd19bf3933f07143845b5b85dc5d035b4c64" translate="yes" xml:space="preserve">
          <source>This module provides various time-related functions. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">このモジュールは、さまざまな時間関連機能を提供します。関連する機能については、&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="ac4e99ea575234e3006a32d19f75118193efada6" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;code&gt;pyexpat&lt;/code&gt; module to provide access to the Expat parser. Direct use of the &lt;code&gt;pyexpat&lt;/code&gt; module is deprecated.</source>
          <target state="translated">このモジュールは &lt;code&gt;pyexpat&lt;/code&gt; モジュールを使用してExpatパーサーへのアクセスを提供します。 &lt;code&gt;pyexpat&lt;/code&gt; モジュールの直接使用は非推奨です。</target>
        </trans-unit>
        <trans-unit id="31f73bbb9aa85c31966124e47f8da4d30bd39d6f" translate="yes" xml:space="preserve">
          <source>This module wraps the system &lt;code&gt;syslog&lt;/code&gt; family of routines. A pure Python library that can speak to a syslog server is available in the &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module as &lt;code&gt;SysLogHandler&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、ルーチンのシステム &lt;code&gt;syslog&lt;/code&gt; ファミリをラップします。syslogサーバーと &lt;code&gt;SysLogHandler&lt;/code&gt; できる純粋なPythonライブラリは、syslogHandlerとして&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;モジュールで使用できます。</target>
        </trans-unit>
        <trans-unit id="170f67191f0a6157cc696b7d62194d8e091d8fba" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s encoders and decoders preserve input and output order by default. Order is only lost if the underlying containers are unordered.</source>
          <target state="translated">このモジュールのエンコーダーとデコーダーは、デフォルトで入力と出力の順序を保持します。基になるコンテナーが順序付けされていない場合にのみ、順序が失われます。</target>
        </trans-unit>
        <trans-unit id="fe2fb497e72f94f41104bc9280245ecfb5cf62f7" translate="yes" xml:space="preserve">
          <source>This must be called at most once per process object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate process.</source>
          <target state="translated">これは、プロセスオブジェクトごとに最大で1回呼び出す必要があります。オブジェクトの&lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが別のプロセスで呼び出されるようにします。</target>
        </trans-unit>
        <trans-unit id="34820797f6502a43638f2f7818d676aebe5d8e98" translate="yes" xml:space="preserve">
          <source>This must be called to make sure that any underlying resource is freed. The selector shall not be used once it has been closed.</source>
          <target state="translated">これは、基礎となるリソースが解放されていることを確認するために呼ばれなければならない。セレクタが閉じられた後は、セレクタを使用してはならない。</target>
        </trans-unit>
        <trans-unit id="48f128b07ca17bd85e39bdec0199f67b2269762f" translate="yes" xml:space="preserve">
          <source>This mutates the function(s) in place.</source>
          <target state="translated">これは、その場にある関数を変異させます。</target>
        </trans-unit>
        <trans-unit id="e1dda5ba415b7dbd31f5962a5276f8c7e29e022d" translate="yes" xml:space="preserve">
          <source>This non-public class is the base class of all fundamental ctypes data types. It is mentioned here because it contains the common attributes of the fundamental ctypes data types. &lt;a href=&quot;#ctypes._SimpleCData&quot;&gt;&lt;code&gt;_SimpleCData&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ctypes._CData&quot;&gt;&lt;code&gt;_CData&lt;/code&gt;&lt;/a&gt;, so it inherits their methods and attributes. ctypes data types that are not and do not contain pointers can now be pickled.</source>
          <target state="translated">この非パブリッククラスは、すべての基本的なctypesデータ型の基本クラスです。基本的なctypesデータ型の共通属性が含まれているため、ここで説明します。&lt;a href=&quot;#ctypes._SimpleCData&quot;&gt; &lt;code&gt;_SimpleCData&lt;/code&gt; は&lt;/a&gt;のサブクラスである&lt;a href=&quot;#ctypes._CData&quot;&gt; &lt;code&gt;_CData&lt;/code&gt; &lt;/a&gt;ので、そのメソッドと属性を継承します。ポインターを含まない、または含まないctypesデータ型は、ピクルすることができます。</target>
        </trans-unit>
        <trans-unit id="c76670a6aef8581c98df691553b9d5b3bb79b20e" translate="yes" xml:space="preserve">
          <source>This non-public class is the common base class of all ctypes data types. Among other things, all ctypes type instances contain a memory block that hold C compatible data; the address of the memory block is returned by the &lt;a href=&quot;#ctypes.addressof&quot;&gt;&lt;code&gt;addressof()&lt;/code&gt;&lt;/a&gt; helper function. Another instance variable is exposed as &lt;a href=&quot;#ctypes._CData._objects&quot;&gt;&lt;code&gt;_objects&lt;/code&gt;&lt;/a&gt;; this contains other Python objects that need to be kept alive in case the memory block contains pointers.</source>
          <target state="translated">この非パブリッククラスは、すべてのctypesデータ型の共通の基本クラスです。特に、すべてのctypes型インスタンスには、C互換データを保持するメモリブロックが含まれています。メモリブロックのアドレスは、&lt;a href=&quot;#ctypes.addressof&quot;&gt; &lt;code&gt;addressof()&lt;/code&gt; &lt;/a&gt;ヘルパー関数によって返されます。別のインスタンス変数は&lt;a href=&quot;#ctypes._CData._objects&quot;&gt; &lt;code&gt;_objects&lt;/code&gt; &lt;/a&gt;として公開されています。これには、メモリブロックにポインタが含まれている場合に備えて、保持しておく必要がある他のPythonオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="740946fe8f7e39fc96693fd9ee1e22af0668e216" translate="yes" xml:space="preserve">
          <source>This number is not equivalent to the number of CPUs the current process can use. The number of usable CPUs can be obtained with &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt;</source>
          <target state="translated">この数は、現在のプロセスが使用できるCPUの数とは異なります。使用可能なCPUの数は &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt; で取得できます</target>
        </trans-unit>
        <trans-unit id="963cb426c9fe5ee3c933f73bb84480436af3d679" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">この目的は、一般的にスライシング（参照によって使用されている&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;スライス表記を&lt;/a&gt;）。特別な操作はサポートしていません。&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;（組み込み名）という名前の省略記号オブジェクトが1つだけあります。 &lt;code&gt;type(Ellipsis)()&lt;/code&gt; は、&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;シングルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="b844f2c0b6c0d04b3d9d3222fe2598ca13a1ddaf" translate="yes" xml:space="preserve">
          <source>This object is returned by functions that don&amp;rsquo;t explicitly return a value. It supports no special operations. There is exactly one null object, named &lt;code&gt;None&lt;/code&gt; (a built-in name). &lt;code&gt;type(None)()&lt;/code&gt; produces the same singleton.</source>
          <target state="translated">このオブジェクトは、明示的に値を返さない関数によって返されます。特別な操作はサポートしていません。 &lt;code&gt;None&lt;/code&gt; （組み込み名）という名前のnullオブジェクトは1つだけです。 &lt;code&gt;type(None)()&lt;/code&gt; は同じシングルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="373dd28a7f907a4136a7383316dd88a1c0e4e77a" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">このオブジェクトは、サポートされていない型を操作するように要求されたときに、比較およびバイナリ操作から返されます。詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;比較&lt;/a&gt;を参照してください。 &lt;code&gt;NotImplemented&lt;/code&gt; オブジェクトは1つだけです。 &lt;code&gt;type(NotImplemented)()&lt;/code&gt; は、シングルトンインスタンスを生成します。</target>
        </trans-unit>
        <trans-unit id="512161437251ac84d2bdd0e799c3a5434535b949" translate="yes" xml:space="preserve">
          <source>This object wraps a Windows HKEY object, automatically closing it when the object is destroyed. To guarantee cleanup, you can call either the &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;Close()&lt;/code&gt;&lt;/a&gt; method on the object, or the &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">このオブジェクトはWindows HKEYオブジェクトをラップし、オブジェクトが破棄されると自動的に閉じます。クリーンアップを保証するには、オブジェクトの&lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;Close()&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt;関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3f694a7e94fdd2625c9751da67b75e646e6e0eee" translate="yes" xml:space="preserve">
          <source>This one step operation is more efficient than a &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; and can be more appropriate when using a fixed-size heap. The pop/push combination always returns an element from the heap and replaces it with &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">この1ステップの操作は、&lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; の&lt;/a&gt;後に&lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt;を実行するよりも効率的であり、固定サイズのヒープを使用する場合により適しています。pop / pushの組み合わせは、常にヒープから要素を返し、それを&lt;em&gt;itemに&lt;/em&gt;置き換え&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a823fede68f63279bdb3b91e0ab2e8b71d8e4b25" translate="yes" xml:space="preserve">
          <source>This only applies to classes or already instantiated objects. Calling a mocked class to create a mock instance &lt;em&gt;does not&lt;/em&gt; create a real instance. It is only attribute lookups - along with calls to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; - that are done.</source>
          <target state="translated">これは、クラスまたはすでにインスタンス化されたオブジェクトにのみ適用されます。モックされたクラスを呼び出してモックインスタンスを作成&lt;em&gt;しても&lt;/em&gt;、実際のインスタンス&lt;em&gt;は&lt;/em&gt;作成され&lt;em&gt;ません&lt;/em&gt;。行われるのは、&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;への呼び出しとともに属性ルックアップのみです。</target>
        </trans-unit>
        <trans-unit id="7c1390712c98925d63c320a49629f3fecfdd36f9" translate="yes" xml:space="preserve">
          <source>This only works when native size and alignment are in effect; standard size and alignment does not enforce any alignment.</source>
          <target state="translated">これは、 ネイティブサイズと整列が有効な場合にのみ機能し、 標準サイズと整列は整列を強制しません。</target>
        </trans-unit>
        <trans-unit id="8491f7168c80d0674be016b49eaa3606a3426c2f" translate="yes" xml:space="preserve">
          <source>This only works with functions that can be called without arguments.</source>
          <target state="translated">これは、引数なしで呼び出すことができる関数でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="cac8febff77df306a94e5b6eb192f6b009ce3a64" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このオペコードは、withブロックが始まる前にいくつかの操作を実行します。まず、コンテキストマネージャーから&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;読み込み、後で&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; で&lt;/a&gt;使用できるようにスタックにプッシュします。次に、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;が呼び出され、&lt;em&gt;deltaを&lt;/em&gt;指すfinallyブロックがプッシュされます。最後に、 &lt;code&gt;__enter__()&lt;/code&gt; メソッドを呼び出した結果がスタックにプッシュされます。次のオペコードはそれを無視する（&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;）か、それを（a）変数に格納します（&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="313d9da8aace736fbdf7186c1695da7951657092" translate="yes" xml:space="preserve">
          <source>This operation is identical to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, except that all NaNs signal. That is, if neither operand is a signaling NaN then any quiet NaN operand is treated as though it were a signaling NaN.</source>
          <target state="translated">この操作は、すべてのNaNがシグナルを送ることを除いて、&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。つまり、どちらのオペランドもシグナルNaNでない場合、静止NaNオペランドはシグナルNaNであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="991deaeff8f34412ebcb4ce1e4126533013440db" translate="yes" xml:space="preserve">
          <source>This operation is not commutative; that is, the order in which the objects are added matters. To illustrate:</source>
          <target state="translated">この操作は可換的ではありません。つまり、オブジェクトが追加される順序が重要なのです。説明するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="aa630c07e9d7ab0e136db1e517de3ecc0ff9bd2c" translate="yes" xml:space="preserve">
          <source>This operation is unaffected by context and is quiet: no flags are changed and no rounding is performed. As an exception, the C version may raise InvalidOperation if the second operand cannot be converted exactly.</source>
          <target state="translated">この操作はコンテキストの影響を受けず、静かに行われます。例外として、Cバージョンでは、2番目のオペランドが正確に変換できない場合、InvalidOperationが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="176ced1eb3f5bf8845c639dbb51a09e9508afa25" translate="yes" xml:space="preserve">
          <source>This option accepts a dictionary of key-value pairs which will be initially put in the &lt;code&gt;DEFAULT&lt;/code&gt; section. This makes for an elegant way to support concise configuration files that don&amp;rsquo;t specify values which are the same as the documented default.</source>
          <target state="translated">このオプションは、最初に &lt;code&gt;DEFAULT&lt;/code&gt; セクションに配置されるキーと値のペアの辞書を受け入れます。これは、文書化されたデフォルトと同じ値を指定しない簡潔な構成ファイルをサポートするための洗練された方法になります。</target>
        </trans-unit>
        <trans-unit id="f43ed818af4a0dd2fed506e4816b93171f3fb141" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported.</source>
          <target state="translated">このオプションを使用すると、子プロセスのステータスが最後に報告されてからジョブ制御の停止から継続されている場合、子プロセスが報告されます。</target>
        </trans-unit>
        <trans-unit id="4c173be1061ff8f92789c6a05bd6547238cbee92" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped.</source>
          <target state="translated">このオプションを使用すると、子プロセスが停止しているが、停止してから現在の状態が報告されていない場合に、子プロセスが報告されます。</target>
        </trans-unit>
        <trans-unit id="bd25c253ae0fbe8dac6cdfa6da993ae2705ef862" translate="yes" xml:space="preserve">
          <source>This option has a major impact on how the mapping protocol will behave and how the written configuration files look. With the standard dictionary, every section is stored in the order they were added to the parser. Same goes for options within sections.</source>
          <target state="translated">このオプションは、マッピングプロトコルがどのように動作するか、そして書かれた設定ファイルがどのように見えるかに大きな影響を与えます。標準の辞書では、すべてのセクションはパーサに追加された順に格納されます。セクション内のオプションについても同様です。</target>
        </trans-unit>
        <trans-unit id="16c96f0e42e4f0bff3231f79690ddc19085854f5" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.0.0 and later.</source>
          <target state="translated">このオプションは OpenSSL 1.0.0 以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="72bc5dd56d04de1e5181cb11caa2002a31734fdb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.0h and later.</source>
          <target state="translated">このオプションはOpenSSL 1.1.1.0h以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="bebfe076248522a6111b1310b00379d95c7a89fb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.1 and later.</source>
          <target state="translated">このオプションはOpenSSL 1.1.1.1以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="6c8bc57c8b0475c7eb59cb85bd797fcf73565e85" translate="yes" xml:space="preserve">
          <source>This option is useful when the &lt;code&gt;.pycs&lt;/code&gt; are kept up to date by some system external to Python like a build system.</source>
          <target state="translated">このオプションは、ビルドシステムなど、Pythonの外部にあるシステムによって &lt;code&gt;.pycs&lt;/code&gt; が最新の状態に保たれている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4e1bd246b58f88c014640c5eb110fa16e17dbeb9" translate="yes" xml:space="preserve">
          <source>This package aims to provide complete access to all tables in an &lt;code&gt;.msi&lt;/code&gt; file, therefore, it is a fairly low-level API. Two primary applications of this package are the &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; command &lt;code&gt;bdist_msi&lt;/code&gt;, and the creation of Python installer package itself (although that currently uses a different version of &lt;code&gt;msilib&lt;/code&gt;).</source>
          <target state="translated">このパッケージは、 &lt;code&gt;.msi&lt;/code&gt; ファイル内のすべてのテーブルへの完全なアクセスを提供することを目的としているため、かなり低レベルのAPIです。このパッケージの2つの主要なアプリケーションは、&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;コマンド &lt;code&gt;bdist_msi&lt;/code&gt; と、Pythonインストーラーパッケージ自体の作成です（ただし、現在は異なるバージョンの &lt;code&gt;msilib&lt;/code&gt; を使用しています）。</target>
        </trans-unit>
        <trans-unit id="2f59df83b2650e44df89565daa6593f433915b0b" translate="yes" xml:space="preserve">
          <source>This package provides the following functionality via its public API.</source>
          <target state="translated">本パッケージは、その公開APIを介して以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="a4dcd679549a3569e0d901cdbbb0b336792e6f5b" translate="yes" xml:space="preserve">
          <source>This page contains only reference information. For tutorials, please see</source>
          <target state="translated">このページでは、参考情報のみを掲載しています。チュートリアルについては</target>
        </trans-unit>
        <trans-unit id="99d5b0c64faa9b400278e91ba69343a0b5046a2b" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">このページには、APIリファレンス情報が含まれています。Pythonコマンドライン解析のより穏やかな紹介については、&lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparseチュートリアルをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d57afe6c7c2f694060b1b6dc9dffd606c3e2bd5d" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For tutorial information and discussion of more advanced topics, see</source>
          <target state="translated">このページには、API リファレンス情報が含まれています。チュートリアルの情報やより高度なトピックについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="abd99e93d1788287c10945f7bf1a3b651f0e4bbc" translate="yes" xml:space="preserve">
          <source>This page lists all high-level async/await enabled asyncio APIs.</source>
          <target state="translated">このページでは、上位レベルの async/await が有効な asyncio API の一覧を表示しています。</target>
        </trans-unit>
        <trans-unit id="af36919b0eb5898742194c69e579c9121a244ce2" translate="yes" xml:space="preserve">
          <source>This page lists all low-level asyncio APIs.</source>
          <target state="translated">このページでは、すべての低レベル非同期APIの一覧を表示しています。</target>
        </trans-unit>
        <trans-unit id="c59bcfe5efc3f66dd12c6e8c605fc2ec05d0ca87" translate="yes" xml:space="preserve">
          <source>This page lists common mistakes and traps and explains how to avoid them.</source>
          <target state="translated">このページでは、よくある間違いやトラップを一覧にして、その回避方法を解説しています。</target>
        </trans-unit>
        <trans-unit id="6a649998fc13cbb981eec7f1d51e9b5c806a8076" translate="yes" xml:space="preserve">
          <source>This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element.</source>
          <target state="translated">このパーサは、終了タグが開始タグと一致するかどうかをチェックしたり、外部要素を閉じることで暗黙的に閉じられている要素の終了タグハンドラを呼び出したりしません。</target>
        </trans-unit>
        <trans-unit id="251eac7a50085ef7a42d5d72edffe30c06f0d3d5" translate="yes" xml:space="preserve">
          <source>This password manager extends &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; to support tracking URIs for which authentication credentials should always be sent.</source>
          <target state="translated">このパスワードマネージャは&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt;を拡張して、認証資格情報を常に送信する必要があるURIの追跡をサポートします。</target>
        </trans-unit>
        <trans-unit id="83824ec275a8bb0657762c62de305421c239b1c7" translate="yes" xml:space="preserve">
          <source>This pointer is initialized to point to an array of &lt;code&gt;struct _frozen&lt;/code&gt; records, terminated by one whose members are all &lt;code&gt;NULL&lt;/code&gt; or zero. When a frozen module is imported, it is searched in this table. Third-party code could play tricks with this to provide a dynamically created collection of frozen modules.</source>
          <target state="translated">このポインターは、 &lt;code&gt;struct _frozen&lt;/code&gt; レコードの配列を指すように初期化され、メンバーがすべて &lt;code&gt;NULL&lt;/code&gt; またはゼロのレコードで終了します。凍結されたモジュールがインポートされると、このテーブルで検索されます。サードパーティのコードはこれを使ってトリックを実行し、動的に作成された凍結モジュールのコレクションを提供できます。</target>
        </trans-unit>
        <trans-unit id="8a179a8b88966d1778c24d39e80f26cc93c31609" translate="yes" xml:space="preserve">
          <source>This policy adds new header parsing and folding algorithms. Instead of simple strings, headers are &lt;code&gt;str&lt;/code&gt; subclasses with attributes that depend on the type of the field. The parsing and folding algorithm fully implement &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このポリシーは、新しいヘッダー解析および折りたたみアルゴリズムを追加します。ヘッダーは単純な文字列ではなく、フィールドのタイプに依存する属性を持つ &lt;code&gt;str&lt;/code&gt; サブクラスです。解析および折りたたみアルゴリズムは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322を&lt;/strong&gt;&lt;/a&gt;完全に実装し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6e3ec424cca6a1dcde14079306440b52ccfa4d39" translate="yes" xml:space="preserve">
          <source>This produces output similar to that of the traceback module for the frames retrieved by &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt;によって取得されたフレームのトレースバックモジュールと同様の出力が生成されます。</target>
        </trans-unit>
        <trans-unit id="c993a95e1beba698427bfb2774b0a105ae89b003" translate="yes" xml:space="preserve">
          <source>This protocol is not available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSLが &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; フラグでコンパイルされている場合、このプロトコルは使用できません。</target>
        </trans-unit>
        <trans-unit id="616b13c085995e597cd4f60e683f235ef1464679" translate="yes" xml:space="preserve">
          <source>This protocol is not be available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSLが &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; フラグでコンパイルされている場合、このプロトコルは使用できません。</target>
        </trans-unit>
        <trans-unit id="d167c001e1794993e4c845fbc35891fc1ca3d578" translate="yes" xml:space="preserve">
          <source>This puts &lt;code&gt;_()&lt;/code&gt; only in the module&amp;rsquo;s global namespace and so only affects calls within this module.</source>
          <target state="translated">これは &lt;code&gt;_()&lt;/code&gt; をモジュールのグローバル名前空間にのみ置くため、このモジュール内の呼び出しにのみ影響します。</target>
        </trans-unit>
        <trans-unit id="cacca8764589cad4c523153eeccabc264b42124e" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the SQLite database &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object. A &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object created by calling &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;con.cursor()&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; attribute that refers to &lt;em&gt;con&lt;/em&gt;:</source>
          <target state="translated">この読み取り専用属性は、&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるSQLiteデータベース&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;提供します。&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;con.cursor()&lt;/code&gt; &lt;/a&gt;を呼び出して作成された&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトには、&lt;em&gt;con&lt;/em&gt;を参照する&lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt;属性があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="766c9f726ec4bbbc98ce6f105956610ea36d9b5f" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the column names of the last query. To remain compatible with the Python DB API, it returns a 7-tuple for each column where the last six items of each tuple are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この読み取り専用属性は、最後のクエリの列名を提供します。Python DB APIとの互換性を維持するために、各列の7タプルを返します。各タプルの最後の6項目は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="09fc30cd152b579e4003b8e0468f289306536886" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the rowid of the last modified row. It is only set if you issued an &lt;code&gt;INSERT&lt;/code&gt; or a &lt;code&gt;REPLACE&lt;/code&gt; statement using the &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. For operations other than &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;REPLACE&lt;/code&gt; or when &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; is called, &lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt;&lt;code&gt;lastrowid&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この読み取り専用属性は、最後に変更された行のROWIDを提供します。&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;メソッドを使用して &lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;REPLACE&lt;/code&gt; ステートメントを発行した場合にのみ設定されます。以外の操作のために &lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;REPLACE&lt;/code&gt; または場合&lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; が&lt;/a&gt;呼び出され、&lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt; &lt;code&gt;lastrowid&lt;/code&gt; &lt;/a&gt;に設定されている&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80fda9d9d63e8a7fa3866afb84364c7cd8db4b60" translate="yes" xml:space="preserve">
          <source>This read-only attribute returns the callback currently associated to the weakref. If there is no callback or if the referent of the weakref is no longer alive then this attribute will have value &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この読み取り専用属性は、現在weakrefに関連付けられているコールバックを返します。コールバックがない場合、またはweakrefのリファレントが有効でない場合、この属性の値は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="48d8bbbbed6be36e2bb950ba0b30ddd5b2449618" translate="yes" xml:space="preserve">
          <source>This read-only variable is true when the ctypes data instance has allocated the memory block itself, false otherwise.</source>
          <target state="translated">この読み取り専用変数は、ctypesデータインスタンスがメモリブロック自体を確保した場合に真、そうでない場合に偽となります。</target>
        </trans-unit>
        <trans-unit id="2d68cee5805da902a83d5bfa711dcff56eea7130" translate="yes" xml:space="preserve">
          <source>This relies on the Python interpreter to print the traceback. The content type of the output is set to plain text, which disables all HTML processing. If your script works, the raw HTML will be displayed by your client. If it raises an exception, most likely after the first two lines have been printed, a traceback will be displayed. Because no HTML interpretation is going on, the traceback will be readable.</source>
          <target state="translated">これはPythonインタプリタに依存してトレースバックを出力します。出力のコンテンツタイプはプレーンテキストに設定されており、これはすべてのHTML処理を無効にします。スクリプトが動作した場合、クライアントには生の HTML が表示されます。例外が発生した場合は、おそらく最初の 2 行が印刷された後にトレースバックが表示されます。HTML の解釈は行われないので、トレースバックは読めるようになります。</target>
        </trans-unit>
        <trans-unit id="c21c6510876040958744e60b431038eb6290b8f1" translate="yes" xml:space="preserve">
          <source>This represents the &lt;em&gt;total&lt;/em&gt; offset from UTC; for example, if a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; object represents both time zone and DST adjustments, &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; should return their sum. If the UTC offset isn&amp;rsquo;t known, return &lt;code&gt;None&lt;/code&gt;. Else the value returned must be a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt; (the magnitude of the offset must be less than one day). Most implementations of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">これはUTCからの&lt;em&gt;合計&lt;/em&gt;オフセットを表します。たとえば、&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;オブジェクトがタイムゾーンとDSTの両方の調整を表す場合、utcoffset &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;はそれらの合計を返す必要があります。 UTCオフセットがわからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。そうでない場合、返される値は、厳密に &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; と &lt;code&gt;timedelta(hours=24)&lt;/code&gt; の間の&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトでなければなりません（オフセットの大きさは1日未満でなければなりません）。&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; の&lt;/a&gt;ほとんどの実装は、おそらく次の2つのいずれかのようになります。</target>
        </trans-unit>
        <trans-unit id="ae2c026eab6c38212209d3da1f20eaeb88618525" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">この要件は、以前は&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;などの抽象基本クラスにも適用されていました。このアプローチの問題は、クラスを明示的にマークしてそれらをサポートする必要があることです。これは非Pythonicであり、通常の動的型付けPythonコードで行うこととは異なります。たとえば、これは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484に&lt;/strong&gt;&lt;/a&gt;準拠しています。</target>
        </trans-unit>
        <trans-unit id="60d45c7cbcfc14553d15cc0afc5a5f55832cec95" translate="yes" xml:space="preserve">
          <source>This returns a 2-tuple composed of a numeric response code and the actual response line (multiline responses are joined into one long line.)</source>
          <target state="translated">これは、数値応答コードと実際の応答行からなる2つのタプルを返します(複数行の応答は1つの長い行に結合されます)。</target>
        </trans-unit>
        <trans-unit id="ce494d42bf1945c6104888625a79831961bfb6b8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; instance mapping registered file objects to their associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">これにより、登録されたファイルオブジェクトを関連する&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスにマッピングする&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="0ae1bfe78d9078946a543d2e004e8f2f33fc9494" translate="yes" xml:space="preserve">
          <source>This returns a list of &lt;code&gt;(key, events)&lt;/code&gt; tuples, one for each ready file object.</source>
          <target state="translated">これは、 &lt;code&gt;(key, events)&lt;/code&gt; タプルのリストを、準備ができたファイルオブジェクトごとに1つ返します。</target>
        </trans-unit>
        <trans-unit id="a2461b890b46eff3e71a389342294683221b3c10" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is already registered.</source>
          <target state="translated">これは新しい&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、無効なイベントマスクまたはファイル記述子の場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を、ファイルオブジェクトがすでに登録されている場合は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="f0af5f9c7d1e79bede98658b4c1872446e368501" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">これは新しい&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、無効なイベントマスクまたはファイル記述子の場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を、ファイルオブジェクトが登録されていない場合は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="7ac3d8ec4193515be3bfc7e4584bb1a898663843" translate="yes" xml:space="preserve">
          <source>This returns the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance associated to this file object, or raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">これにより、このファイルオブジェクトに関連付けられた&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスが返されます。ファイルオブジェクトが登録されていない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9c8889dc6fd5ab529008f5a135efbc51515a1644" translate="yes" xml:space="preserve">
          <source>This returns the associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is not registered. It will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is invalid (e.g. it has no &lt;code&gt;fileno()&lt;/code&gt; method or its &lt;code&gt;fileno()&lt;/code&gt; method has an invalid return value).</source>
          <target state="translated">この戻り関連&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; の&lt;/a&gt;インスタンス、または上げる&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外を&lt;/a&gt;場合&lt;em&gt;もしfileobjが&lt;/em&gt;登録されていません。これは、発生します&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;場合&lt;em&gt;はfileobjが&lt;/em&gt;無効である（例えば、それは何もしてい &lt;code&gt;fileno()&lt;/code&gt; メソッドまたはその &lt;code&gt;fileno()&lt;/code&gt; メソッドは、無効な戻り値はありません）。</target>
        </trans-unit>
        <trans-unit id="890171d76d69be7da385c6150dad06c5b69eae30" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基になる&lt;a href=&quot;select#select.devpoll&quot;&gt; &lt;code&gt;select.devpoll()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="54137bf7adca252cdc57e4289272b49bb029a9a7" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基礎となる&lt;a href=&quot;select#select.epoll&quot;&gt; &lt;code&gt;select.epoll()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="51d90f09c2ffca4ed06478c9f1bdb12b3c85819c" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基礎となる&lt;a href=&quot;select#select.kqueue&quot;&gt; &lt;code&gt;select.kqueue()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="58106684b347e2251ea09e0272c882c066c7dccd" translate="yes" xml:space="preserve">
          <source>This returns the value unchanged. To the type checker this signals that the return value has the designated type, but at runtime we intentionally don&amp;rsquo;t check anything (we want this to be as fast as possible).</source>
          <target state="translated">これは値を変更せずに返します。型チェッカーに対して、これは戻り値が指定された型を持っていることを通知しますが、実行時には意図的に何もチェックしません（これを可能な限り高速にする必要があります）。</target>
        </trans-unit>
        <trans-unit id="dce193572792ff4f49cc2515deda79b3d1240361" translate="yes" xml:space="preserve">
          <source>This routine adds various parameters required for WSGI, including &lt;code&gt;HTTP_HOST&lt;/code&gt;, &lt;code&gt;SERVER_NAME&lt;/code&gt;, &lt;code&gt;SERVER_PORT&lt;/code&gt;, &lt;code&gt;REQUEST_METHOD&lt;/code&gt;, &lt;code&gt;SCRIPT_NAME&lt;/code&gt;, &lt;code&gt;PATH_INFO&lt;/code&gt;, and all of the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;-defined &lt;code&gt;wsgi.*&lt;/code&gt; variables. It only supplies default values, and does not replace any existing settings for these variables.</source>
          <target state="translated">このルーチンは、 &lt;code&gt;HTTP_HOST&lt;/code&gt; 、 &lt;code&gt;SERVER_NAME&lt;/code&gt; 、 &lt;code&gt;SERVER_PORT&lt;/code&gt; 、 &lt;code&gt;REQUEST_METHOD&lt;/code&gt; 、 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 、 &lt;code&gt;PATH_INFO&lt;/code&gt; 、およびすべての&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;定義の &lt;code&gt;wsgi.*&lt;/code&gt; 変数を含む、WSGIに必要なさまざまなパラメーターを追加します。デフォルト値のみを提供し、これらの変数の既存の設定を置き換えません。</target>
        </trans-unit>
        <trans-unit id="b8c17ece425d1c53c1e6d2e295e3ffa164046a05" translate="yes" xml:space="preserve">
          <source>This routine allows/disallows the SQLite engine to load SQLite extensions from shared libraries. SQLite extensions can define new functions, aggregates or whole new virtual table implementations. One well-known extension is the fulltext-search extension distributed with SQLite.</source>
          <target state="translated">このルーチンは、SQLite エンジンが共有ライブラリから SQLite 拡張機能をロードすることを許可/禁止します。SQLite 拡張機能は、新しい関数、集約、あるいは全く新しい仮想テーブルの実装を定義することができます。よく知られている拡張機能としては、SQLite で配布されている全文検索拡張があります。</target>
        </trans-unit>
        <trans-unit id="d1123f885c50d2316ac2017015f6afc8da26ba45" translate="yes" xml:space="preserve">
          <source>This routine is intended to make it easier for unit tests of WSGI servers and applications to set up dummy environments. It should NOT be used by actual WSGI servers or applications, since the data is fake!</source>
          <target state="translated">このルーチンは、WSGIサーバやアプリケーションのユニットテストでダミー環境を簡単に設定できるようにすることを目的としています。データは偽物なので、実際のWSGIサーバやアプリケーションでは使用しないでください。</target>
        </trans-unit>
        <trans-unit id="378be7eabaecd105cf27a5a5348d58ac5d4009b6" translate="yes" xml:space="preserve">
          <source>This routine loads a SQLite extension from a shared library. You have to enable extension loading with &lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt;&lt;code&gt;enable_load_extension()&lt;/code&gt;&lt;/a&gt; before you can use this routine.</source>
          <target state="translated">このルーチンは、共有ライブラリからSQLite拡張機能をロードします。このルーチンを使用する前に、&lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt; &lt;code&gt;enable_load_extension()&lt;/code&gt; &lt;/a&gt;を使用して拡張機能のロードを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="d788abec338f0943063ad095afb2980ab498b313" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for each attempt to access a column of a table in the database. The callback should return &lt;code&gt;SQLITE_OK&lt;/code&gt; if access is allowed, &lt;code&gt;SQLITE_DENY&lt;/code&gt; if the entire SQL statement should be aborted with an error and &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; if the column should be treated as a NULL value. These constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このルーチンはコールバックを登録します。コールバックは、データベース内のテーブルの列にアクセスしようとするたびに呼び出されます。コールバックは返す必要があり &lt;code&gt;SQLITE_OK&lt;/code&gt; をアクセスが許可されている場合、 &lt;code&gt;SQLITE_DENY&lt;/code&gt; を SQL文全体がエラーとで中止されるべきかどう &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; 列がNULL値として扱われるべき場合。これらの定数は&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールで利用できます。</target>
        </trans-unit>
        <trans-unit id="c9474baef0d262e49cda55fd848e1f843ac1d207" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for every &lt;em&gt;n&lt;/em&gt; instructions of the SQLite virtual machine. This is useful if you want to get called from SQLite during long-running operations, for example to update a GUI.</source>
          <target state="translated">このルーチンはコールバックを登録します。コールバックは、SQLite仮想マシンの&lt;em&gt;n個の&lt;/em&gt;命令ごとに呼び出されます。これは、GUIの更新など、長時間実行される操作中にSQLiteから呼び出される場合に便利です。</target>
        </trans-unit>
        <trans-unit id="215de7d536e14c0ec534e867eb0bed570485a76d" translate="yes" xml:space="preserve">
          <source>This runs faster than the &lt;a href=&quot;#statistics.mean&quot;&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt; function and it always returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable. If the input dataset is empty, raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#statistics.mean&quot;&gt; &lt;code&gt;mean()&lt;/code&gt; &lt;/a&gt;関数よりも高速に実行され、常に&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;データは、&lt;/em&gt;シーケンスまたは反復可能であってもよいです。入力データセットが空の場合、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="31740e1f356225e9527182782ab65f90aa3b3442" translate="yes" xml:space="preserve">
          <source>This script is also available for download &lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;online&lt;/a&gt;.</source>
          <target state="translated">このスクリプトは、&lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;オンライン&lt;/a&gt;でダウンロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="362b81a476a7e91e404db2c61e0da0c0266fd8f5" translate="yes" xml:space="preserve">
          <source>This search path is used when resolving dependencies for imported extension modules (the module itself is resolved through sys.path), and also by &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この検索パスは、インポートされた拡張モジュールの依存関係を解決するときに使用され（モジュール自体はsys.pathによって解決されます）、また&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;によっても使用されます。</target>
        </trans-unit>
        <trans-unit id="a1987d966d658e949051757623c7980ace367f55" translate="yes" xml:space="preserve">
          <source>This section contains examples of the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; syntax and comparison with the old &lt;code&gt;%&lt;/code&gt;-formatting.</source>
          <target state="translated">このセクションには、&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;構文の例と、古い &lt;code&gt;%&lt;/code&gt; フォーマットとの比較が含まれています。</target>
        </trans-unit>
        <trans-unit id="caa21db1421dcf117cd37e0c3689b0534dd1eafd" translate="yes" xml:space="preserve">
          <source>This section describes high-level async/await asyncio APIs to create and manage subprocesses.</source>
          <target state="translated">ここでは、サブプロセスを作成・管理するための高レベルのasync/await asyncio APIについて説明します。</target>
        </trans-unit>
        <trans-unit id="d7a523d820ebe70975810d89173fdd5eb434fe64" translate="yes" xml:space="preserve">
          <source>This section describes in depth the API of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;のAPIについて詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="558b5a3c6d2df134347c7df16cc29ff8ad425934" translate="yes" xml:space="preserve">
          <source>This section describes some examples and recipes for making effective use of the tools provided by &lt;a href=&quot;#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; が&lt;/a&gt;提供するツールを効果的に使用するためのいくつかの例とレシピについて説明します。</target>
        </trans-unit>
        <trans-unit id="be3c37b9d39743f5da99e8a42612440f3ba28e7b" translate="yes" xml:space="preserve">
          <source>This section describes the API for configuring the logging module.</source>
          <target state="translated">ここでは、ロギングモジュールを設定するためのAPIについて説明します。</target>
        </trans-unit>
        <trans-unit id="156a697bb0d3f10fd45e11f2465ce109feb52348" translate="yes" xml:space="preserve">
          <source>This section describes the conformance requirements and relationships between the Python DOM API, the W3C DOM recommendations, and the OMG IDL mapping for Python.</source>
          <target state="translated">このセクションでは、Python DOM API、W3C DOMの推奨事項、Python用のOMG IDLマッピングのコンフォーマンス要件と関係性について説明します。</target>
        </trans-unit>
        <trans-unit id="8eeef4df7928680ba8f67bceaa4a14542597b485" translate="yes" xml:space="preserve">
          <source>This section discusses the performance of the provided concrete I/O implementations.</source>
          <target state="translated">このセクションでは、提供される具体的なI/O実装の性能について説明します。</target>
        </trans-unit>
        <trans-unit id="607b3cfb7c46b7d396eba60d31432af9f7d8f677" translate="yes" xml:space="preserve">
          <source>This section documents the objects and functions in the &lt;code&gt;ssl&lt;/code&gt; module; for more general information about TLS, SSL, and certificates, the reader is referred to the documents in the &amp;ldquo;See Also&amp;rdquo; section at the bottom.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;ssl&lt;/code&gt; モジュールのオブジェクトと関数について説明します。TLS、SSL、および証明書に関するより一般的な情報については、下部にある「関連項目」セクションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1c30eb3669356c7ec4ccfc215134676b33af7b3b" translate="yes" xml:space="preserve">
          <source>This section examines in detail how doctest works: which docstrings it looks at, how it finds interactive examples, what execution context it uses, how it handles exceptions, and how option flags can be used to control its behavior. This is the information that you need to know to write doctest examples; for information about actually running doctest on these examples, see the following sections.</source>
          <target state="translated">このセクションでは、doctest がどのように動作するのか、どの docstring を参照するのか、どのようにして対話型の例を見つけるのか、どのような実行コンテキストを使用するのか、どのように例外を処理するのか、オプションフラグを使用してどのように動作を制御するのかなど、doctest がどのように動作するのかを詳しく調べます。これは、doctest の例を書くために必要な情報です。これらの例で実際に doctest を実行するための情報については、以下のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="70f26576b84f9e9c7ebedde34306a5ad087e6144" translate="yes" xml:space="preserve">
          <source>This section is designed in two parts: the first half (roughly) covers background material, while the second half can be taken to the keyboard as a handy reference.</source>
          <target state="translated">このセクションは2つのパートに分かれていて、前半は(大まかには)背景となる素材をカバーし、後半はキーボードに持っていくと便利な参考資料として活用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="1c854e243687db6fd2cf2c930ede6e8b64a9ed2f" translate="yes" xml:space="preserve">
          <source>This section is not designed to be an exhaustive tutorial on either Tk or Tkinter. Rather, it is intended as a stop gap, providing some introductory orientation on the system.</source>
          <target state="translated">このセクションは、Tk や Tkinter の完全なチュートリアルではありません。むしろ、システムについての入門的なオリエンテーションを提供するためのストップギャップとして意図されています。</target>
        </trans-unit>
        <trans-unit id="0fbf10a91d27928b5c7b954152fd9b94bd39c230" translate="yes" xml:space="preserve">
          <source>This section is provided for users that &amp;ldquo;don&amp;rsquo;t want to read the manual.&amp;rdquo; It provides a very brief overview, and allows a user to rapidly perform profiling on an existing application.</source>
          <target state="translated">このセクションは、「マニュアルを読みたくない」ユーザー向けに提供されています。これは非常に簡単な概要を提供し、ユーザーが既存のアプリケーションのプロファイリングを迅速に実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="6c5cd0414177de92e7fbb94b4034b625efcfd646" translate="yes" xml:space="preserve">
          <source>This section outlines high-level asyncio APIs to work with coroutines and Tasks.</source>
          <target state="translated">このセクションでは、コルーチンやタスクを操作するための高レベルのasyncio APIの概要を説明します。</target>
        </trans-unit>
        <trans-unit id="defa96b3e88910bfa50682641b6305dc34fca129" translate="yes" xml:space="preserve">
          <source>This section presents a simple example of how to build a shell around a few of the commands in the &lt;a href=&quot;turtle#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;turtle#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;モジュールのいくつかのコマンドの周りにシェルを構築する方法の簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="b0f81d28be12207c741e0c33582bce94a49c9adc" translate="yes" xml:space="preserve">
          <source>This section shows recipes and best practices for using &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; to manage a basic level of security.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;を使用して基本レベルのセキュリティを管理するためのレシピとベストプラクティスを示します。</target>
        </trans-unit>
        <trans-unit id="d526a5a648c94cb75fcf6517b2a94c66d6c77c00" translate="yes" xml:space="preserve">
          <source>This section shows recipes for creating an extended toolset using the existing itertools as building blocks.</source>
          <target state="translated">このセクションでは、既存の itertools をビルディングブロックとして使用して拡張ツールセットを作成するためのレシピを紹介します。</target>
        </trans-unit>
        <trans-unit id="1383ac76a2854ebc53757848481beccc1c9891e8" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with chained maps.</source>
          <target state="translated">このセクションでは、連鎖したマップを扱うためのさまざまなアプローチを示します。</target>
        </trans-unit>
        <trans-unit id="df040f46fd980279c14fec4cda4247fcf05f72ef" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with deques.</source>
          <target state="translated">ここでは、dequesを使って作業するための様々なアプローチを紹介します。</target>
        </trans-unit>
        <trans-unit id="4dd9bc73a0d82a9e97e43369211ae46a3180915d" translate="yes" xml:space="preserve">
          <source>This sets the locale for all categories to the user&amp;rsquo;s default setting (typically specified in the &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; environment variable). If the locale is not changed thereafter, using multithreading should not cause problems.</source>
          <target state="translated">これにより、すべてのカテゴリのロケールがユーザーのデフォルト設定に設定されます（通常、 &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; 環境変数で指定されます）。その後ロケールが変更されない場合、マルチスレッドを使用しても問題は発生しません。</target>
        </trans-unit>
        <trans-unit id="c45721624d3fcb370f2be8569bbab61c3319b06b" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">この設定は、クライアントソケットには適用されません。&lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt;オプションを使用して、セキュリティをさらに向上させることもできます。</target>
        </trans-unit>
        <trans-unit id="3ce459a925e80a56c1e647868604b4bf0d8366d6" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">この設定は、クライアントソケットには適用されません。&lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt;オプションを使用して、セキュリティをさらに向上させることもできます。</target>
        </trans-unit>
        <trans-unit id="e6fed8d315800e6b3b887f29c56368c13c909c37" translate="yes" xml:space="preserve">
          <source>This setting is thread-specific.</source>
          <target state="translated">この設定はスレッド固有のものです。</target>
        </trans-unit>
        <trans-unit id="de8230cad107c382f2cb44a434b139507f3975fb" translate="yes" xml:space="preserve">
          <source>This should be the first call after the connection to the server has been made. It sends a line to the server consisting of the &lt;em&gt;method&lt;/em&gt; string, the &lt;em&gt;url&lt;/em&gt; string, and the HTTP version (&lt;code&gt;HTTP/1.1&lt;/code&gt;). To disable automatic sending of &lt;code&gt;Host:&lt;/code&gt; or &lt;code&gt;Accept-Encoding:&lt;/code&gt; headers (for example to accept additional content encodings), specify &lt;em&gt;skip_host&lt;/em&gt; or &lt;em&gt;skip_accept_encoding&lt;/em&gt; with non-False values.</source>
          <target state="translated">これは、サーバーへの接続が行われた後の最初の呼び出しでなければなりません。&lt;em&gt;メソッド&lt;/em&gt;文字列、&lt;em&gt;URL&lt;/em&gt;文字列、HTTPバージョン（ &lt;code&gt;HTTP/1.1&lt;/code&gt; ）で構成される行をサーバーに送信します。 &lt;code&gt;Host:&lt;/code&gt; または &lt;code&gt;Accept-Encoding:&lt;/code&gt; ヘッダーの自動送信を無効にするには（たとえば、追加のコンテンツエンコーディングを受け入れるため）、False以外の値で&lt;em&gt;skip_host&lt;/em&gt;または&lt;em&gt;skip_accept_encoding&lt;/em&gt;を指定します。</target>
        </trans-unit>
        <trans-unit id="5f7c62680666d8d0354a70774b620f0cfc3a23c2" translate="yes" xml:space="preserve">
          <source>This should not be reported to Python applications.</source>
          <target state="translated">これはPythonアプリケーションに報告すべきではありません。</target>
        </trans-unit>
        <trans-unit id="bd3d85e3d37c9e73e52b13fff11ec91a95c5f8b7" translate="yes" xml:space="preserve">
          <source>This should produce the same results as those gotten from installing the &lt;code&gt;cgi.py&lt;/code&gt; file itself.</source>
          <target state="translated">これにより、 &lt;code&gt;cgi.py&lt;/code&gt; ファイル自体をインストールした場合と同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="a2f5181e6bc07cf2a06e008b2962ada26e303b7c" translate="yes" xml:space="preserve">
          <source>This should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; representing all the tests from the package. (&lt;code&gt;standard_tests&lt;/code&gt; will only contain tests collected from &lt;code&gt;__init__.py&lt;/code&gt;.)</source>
          <target state="translated">これにより、パッケージのすべてのテストを表す&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;が返されます。（ &lt;code&gt;standard_tests&lt;/code&gt; には、 &lt;code&gt;__init__.py&lt;/code&gt; から収集されたテストのみが含まれます。）</target>
        </trans-unit>
        <trans-unit id="b617419bf001641a41f3ee636896b8e09558569d" translate="yes" xml:space="preserve">
          <source>This simple example implements a basic read-eval-print loop, similar to (but less useful than) the standard Python interactive interpreter loop. For a more complete implementation of the interpreter loop, refer to the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この簡単な例は、標準のPythonインタラクティブインタープリターループに似ていますが（あまり有用ではありません）、基本的なread-eval-printループを実装しています。インタプリタループのより完全な実装については、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="1fad110fec75f0f6958a041c1017071a503dd913" translate="yes" xml:space="preserve">
          <source>This simple example shows how an application can use object IDs to retrieve objects that it has seen before. The IDs of the objects can then be used in other data structures without forcing the objects to remain alive, but the objects can still be retrieved by ID if they do.</source>
          <target state="translated">この単純な例は、アプリケーションがオブジェクトIDを使って、以前に見たことのあるオブジェクトを取得する方法を示しています。その後、オブジェクトのIDは、オブジェクトを強制的に生きたままにすることなく、他のデータ構造体で使用することができますが、もし生きたままにしても、オブジェクトはIDで検索することができます。</target>
        </trans-unit>
        <trans-unit id="98547658e0e1aab7962e8a30c8538b1ef6afdfc8" translate="yes" xml:space="preserve">
          <source>This site is the focal point for the definition of the SAX API. It provides a Java implementation and online documentation. Links to implementations and historical information are also available.</source>
          <target state="translated">このサイトは、SAX APIの定義の中心となるサイトです。Javaの実装とオンラインドキュメントを提供しています。実装や過去の情報へのリンクもあります。</target>
        </trans-unit>
        <trans-unit id="401b694add20f94820e8cb3c498a29fb6a883ca9" translate="yes" xml:space="preserve">
          <source>This situation is common for example when a form contains a group of multiple checkboxes with the same name:</source>
          <target state="translated">このような状況は、例えば、フォームに同じ名前の複数のチェックボックスのグループが含まれている場合によく見られます。</target>
        </trans-unit>
        <trans-unit id="79ca8c995a5a4457b8793fa31ef3820b296c6a65" translate="yes" xml:space="preserve">
          <source>This solution is as safe as &lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt;&lt;code&gt;MultiLoopChildWatcher&lt;/code&gt;&lt;/a&gt; and has the same &lt;em&gt;O(N)&lt;/em&gt; complexity but requires a running event loop in the main thread to work.</source>
          <target state="translated">このソリューションは&lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt; &lt;code&gt;MultiLoopChildWatcher&lt;/code&gt; &lt;/a&gt;と同じくらい安全で、&lt;em&gt;O（N）の&lt;/em&gt;複雑度は同じですが、機能するためにはメインスレッドで実行中のイベントループが必要です。</target>
        </trans-unit>
        <trans-unit id="d82fa37f6f5ce4f1b03930450505a16588bbb64a" translate="yes" xml:space="preserve">
          <source>This solution requires a running event loop in the main thread to work, as &lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt;&lt;code&gt;SafeChildWatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソリューションでは、&lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt; &lt;code&gt;SafeChildWatcher&lt;/code&gt; の&lt;/a&gt;ように機能するために、メインスレッドで実行中のイベントループが必要です。</target>
        </trans-unit>
        <trans-unit id="0b1dd4e320021de44deafa76cdbbf7a1d713f5e8" translate="yes" xml:space="preserve">
          <source>This sorts the profile by cumulative time in a function, and then only prints the ten most significant lines. If you want to understand what algorithms are taking time, the above line is what you would use.</source>
          <target state="translated">これは、関数内の累積時間でプロファイルをソートし、最も重要な10行だけを表示します。どのようなアルゴリズムで時間がかかっているかを理解したい場合は、上の行を使うことになります。</target>
        </trans-unit>
        <trans-unit id="87ad4d93ff10f22be77fdd674b33ad9054193f5c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されると抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="8129c233d78f17359a870def3539e6e911d0906c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されると抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="211e4437395fb7d3eacf45324b984e92d0566c05" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されたときに抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="279114bff60b44dfc0066ad46c397c25064a129c" translate="yes" xml:space="preserve">
          <source>This specification defines a Uniform Resource Name namespace for UUIDs, the internal format of UUIDs, and methods of generating UUIDs.</source>
          <target state="translated">本仕様では、UUIDのためのUniform Resource Name名前空間、UUIDの内部フォーマット、UUIDの生成方法を定義する。</target>
        </trans-unit>
        <trans-unit id="874696978cd5bbb1087717ab3332b7f732497e0c" translate="yes" xml:space="preserve">
          <source>This specifies the HTTP protocol version used in responses. If set to &lt;code&gt;'HTTP/1.1'&lt;/code&gt;, the server will permit HTTP persistent connections; however, your server &lt;em&gt;must&lt;/em&gt; then include an accurate &lt;code&gt;Content-Length&lt;/code&gt; header (using &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt;) in all of its responses to clients. For backwards compatibility, the setting defaults to &lt;code&gt;'HTTP/1.0'&lt;/code&gt;.</source>
          <target state="translated">これは、応答で使用されるHTTPプロトコルのバージョンを指定します。 &lt;code&gt;'HTTP/1.1'&lt;/code&gt; に設定すると、サーバーはHTTP永続接続を許可します。ただし、サーバー&lt;em&gt;は&lt;/em&gt;、クライアントへのすべての応答に正確な &lt;code&gt;Content-Length&lt;/code&gt; ヘッダー（&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;を使用）を含める&lt;em&gt;必要があり&lt;/em&gt;ます。下位互換性のために、設定はデフォルトで &lt;code&gt;'HTTP/1.0'&lt;/code&gt; になっています。</target>
        </trans-unit>
        <trans-unit id="4926906ff6c9d731dd2502d835a0c4a022613e00" translate="yes" xml:space="preserve">
          <source>This specifies the formal syntax and semantics of absolute URLs.</source>
          <target state="translated">これは、絶対 URL の形式的な構文とセマンティクスを指定します。</target>
        </trans-unit>
        <trans-unit id="b12ecdf4a18691d61f1d7860cd0959f3b286fd24" translate="yes" xml:space="preserve">
          <source>This specifies the mapping from OMG IDL to Python.</source>
          <target state="translated">OMG IDLからPythonへのマッピングを指定します。</target>
        </trans-unit>
        <trans-unit id="8da551d8221388503358b7d9ca2bc9f174bf5895" translate="yes" xml:space="preserve">
          <source>This specifies the parsing requirements of IPv6 URLs.</source>
          <target state="translated">これは、IPv6のURLのパース要件を指定します。</target>
        </trans-unit>
        <trans-unit id="93065c605eefe1a69ebb1b6bc29b80656e394208" translate="yes" xml:space="preserve">
          <source>This stack model is used so that context managers that acquire their resources in their &lt;code&gt;__init__&lt;/code&gt; method (such as file objects) can be handled correctly.</source>
          <target state="translated">このスタックモデルは、 &lt;code&gt;__init__&lt;/code&gt; メソッドでリソースを取得するコンテキストマネージャー（ファイルオブジェクトなど）を正しく処理できるようにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="657b165eabad3ef2110a1d6933accdc767db077c" translate="yes" xml:space="preserve">
          <source>This starts up a background thread to monitor the queue for LogRecords to process.</source>
          <target state="translated">これは、処理するLogRecordsのキューを監視するためのバックグラウンドスレッドを起動します。</target>
        </trans-unit>
        <trans-unit id="cfff9554c5adbc575949e5e35567b44b13814573" translate="yes" xml:space="preserve">
          <source>This statement assumes that you use the appropriate setting for &lt;code&gt;unixfrom&lt;/code&gt;, and that there are no &lt;code&gt;policy&lt;/code&gt; settings calling for automatic adjustments (for example, &lt;code&gt;refold_source&lt;/code&gt; must be &lt;code&gt;none&lt;/code&gt;, which is &lt;em&gt;not&lt;/em&gt; the default). It is also not 100% true, since if the message does not conform to the RFC standards occasionally information about the exact original text is lost during parsing error recovery. It is a goal to fix these latter edge cases when possible.</source>
          <target state="translated">このステートメントは、 &lt;code&gt;unixfrom&lt;/code&gt; に適切な設定を使用し、自動調整を要求する &lt;code&gt;policy&lt;/code&gt; 設定がないことを前提としています（たとえば、 &lt;code&gt;refold_source&lt;/code&gt; は &lt;code&gt;none&lt;/code&gt; でなければならず、これはデフォルトではあり&lt;em&gt;ません&lt;/em&gt;）。また、メッセージがRFC標準に準拠していない場合、正確な元のテキストに関する情報が解析エラーの回復中に失われることがあるので、これも100％正しいわけではありません。これらの後者のエッジケースを可能な限り修正することが目標です。</target>
        </trans-unit>
        <trans-unit id="5695000d7ff7e5630ab5bb3f278a09531558042e" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">この静的メソッドは、&lt;em&gt;from&lt;/em&gt;内の各文字を&lt;em&gt;to&lt;/em&gt;内の同じ位置にある文字にマッピングする&lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt;で使用可能な変換テーブルを返します。&lt;em&gt;from&lt;/em&gt;と&lt;em&gt;to&lt;/em&gt;は両方とも&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;で、同じ長さでなければなりません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fed93affb82c475aece27560d7f7449f85bbe008" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この静的メソッドは、&lt;a href=&quot;#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; で&lt;/a&gt;使用できる変換テーブルを返します。</target>
        </trans-unit>
        <trans-unit id="ee1038a57ec92220c32f002317d973e94a4e405f" translate="yes" xml:space="preserve">
          <source>This string contains a platform identifier that can be used to append platform-specific components to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, for instance.</source>
          <target state="translated">この文字列には、たとえばプラットフォーム固有のコンポーネントを&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に追加するために使用できるプラットフォーム識別子が含まれています。</target>
        </trans-unit>
        <trans-unit id="ee8ef044d471590e32de3b3a685514869bb11594" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt;&lt;code&gt;HTMLCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt; &lt;code&gt;HTMLCalendar&lt;/code&gt; の&lt;/a&gt;このサブクラスは、コンストラクターでロケール名を渡すことができ、指定されたロケールで月名と曜日名を返します。このロケールにエンコードが含まれている場合、月と曜日の名前を含むすべての文字列がUnicodeとして返されます。</target>
        </trans-unit>
        <trans-unit id="dbc4f4107eee8222a6f5a5aa58cd266674093796" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar&quot;&gt; &lt;code&gt;TextCalendar&lt;/code&gt; の&lt;/a&gt;このサブクラスは、コンストラクターでロケール名を渡すことができ、指定されたロケールで月名と曜日名を返します。このロケールにエンコードが含まれている場合、月と曜日の名前を含むすべての文字列がUnicodeとして返されます。</target>
        </trans-unit>
        <trans-unit id="d7ea75922f47bd0999a4871991963c1f8c3f0ce1" translate="yes" xml:space="preserve">
          <source>This support allows immutable sequences, such as &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; instances, to be used as &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; keys and stored in &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">この支持体のような、不変配列を可能にする&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;として使用する、インスタンス&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;キーとに格納されている&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="1e24218daa333721903c467af431435be2cb4830" translate="yes" xml:space="preserve">
          <source>This table contains all events raised by &lt;a href=&quot;sys#sys.audit&quot;&gt;&lt;code&gt;sys.audit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt;&lt;code&gt;PySys_Audit()&lt;/code&gt;&lt;/a&gt; calls throughout the CPython runtime and the standard library. These calls were added in 3.8.0 or later.</source>
          <target state="translated">このテーブルには、CPythonランタイムおよび標準ライブラリ全体で&lt;a href=&quot;sys#sys.audit&quot;&gt; &lt;code&gt;sys.audit()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_Audit&quot;&gt; &lt;code&gt;PySys_Audit()&lt;/code&gt; &lt;/a&gt;呼び出しによって発生したすべてのイベントが含まれています。これらの呼び出しは3.8.0以降で追加されました。</target>
        </trans-unit>
        <trans-unit id="8ff575b6bfca960b011d17b2cb16cbed1b2362fb" translate="yes" xml:space="preserve">
          <source>This table lists the bitwise operations sorted in ascending priority:</source>
          <target state="translated">この表は、優先度の高い順にソートされたビット演算の一覧です。</target>
        </trans-unit>
        <trans-unit id="ad37e36bc7aa1e48e2a868ce67d705d178a74a99" translate="yes" xml:space="preserve">
          <source>This table lists the sequence operations sorted in ascending priority. In the table, &lt;em&gt;s&lt;/em&gt; and &lt;em&gt;t&lt;/em&gt; are sequences of the same type, &lt;em&gt;n&lt;/em&gt;, &lt;em&gt;i&lt;/em&gt;, &lt;em&gt;j&lt;/em&gt; and &lt;em&gt;k&lt;/em&gt; are integers and &lt;em&gt;x&lt;/em&gt; is an arbitrary object that meets any type and value restrictions imposed by &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">この表は、昇順でソートされたシーケンス操作を示しています。この表では、&lt;em&gt;s&lt;/em&gt;と&lt;em&gt;t&lt;/em&gt;は同じタイプのシーケンスであり、&lt;em&gt;n&lt;/em&gt;、&lt;em&gt;i&lt;/em&gt;、&lt;em&gt;j&lt;/em&gt;、および&lt;em&gt;k&lt;/em&gt;は整数であり、&lt;em&gt;x&lt;/em&gt;は&lt;em&gt;s&lt;/em&gt;によって課されるすべてのタイプと値の制限を満たす任意のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a2aefacd102c9e6656a62a4fcbeeefcf37daf49c" translate="yes" xml:space="preserve">
          <source>This table shows how abstract operations correspond to operator symbols in the Python syntax and the functions in the &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この表は、抽象演算がPython構文の演算子記号と&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;モジュールの関数にどのように対応するかを示しています。</target>
        </trans-unit>
        <trans-unit id="b1dd58529875498466717de342c9a860fc1ad5df" translate="yes" xml:space="preserve">
          <source>This table summarizes the comparison operations:</source>
          <target state="translated">この表は、比較操作をまとめたものです。</target>
        </trans-unit>
        <trans-unit id="0b8f0910cff485b75d8a8a9bb0bef70a5b8fa95c" translate="yes" xml:space="preserve">
          <source>This takes a binary file for reading a pickle data stream.</source>
          <target state="translated">これは、ピクルスのデータストリームを読み込むためのバイナリファイルを取ります。</target>
        </trans-unit>
        <trans-unit id="900a01a65ca258d685a4183dcedf4ab95f1befd2" translate="yes" xml:space="preserve">
          <source>This takes a binary file for writing a pickle data stream.</source>
          <target state="translated">これは、ピクルスのデータストリームを書き込むためのバイナリファイルを取ります。</target>
        </trans-unit>
        <trans-unit id="86e66be62941acf0508da30f994af1c9b7a508e7" translate="yes" xml:space="preserve">
          <source>This tool adds flexibility to existing functions or classes whose output is hardwired to stdout.</source>
          <target state="translated">このツールは、出力が標準出力にハードワイヤードされている既存の関数やクラスに柔軟性を追加します。</target>
        </trans-unit>
        <trans-unit id="0a41260cd31015b90715324793e49b3b05f1940e" translate="yes" xml:space="preserve">
          <source>This type can be used as follows:</source>
          <target state="translated">このタイプは以下のように使用できます。</target>
        </trans-unit>
        <trans-unit id="4ee65f84be1d10480bc08fe90f21eed2ddbba4bd" translate="yes" xml:space="preserve">
          <source>This type describes the resource names passed into the various functions in this package. This is defined as &lt;code&gt;Union[str, os.PathLike]&lt;/code&gt;.</source>
          <target state="translated">このタイプは、このパッケージのさまざまな関数に渡されるリソース名を示します。これは &lt;code&gt;Union[str, os.PathLike]&lt;/code&gt; として定義されています。</target>
        </trans-unit>
        <trans-unit id="9a19b7eb98d6488f6aac8865d83dc8ae338e23ad" translate="yes" xml:space="preserve">
          <source>This type may be used as follows:</source>
          <target state="translated">このタイプは以下のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="cc3a76bb6dedb7cdbe1024f060da03de3f0dba7d" translate="yes" xml:space="preserve">
          <source>This type represents the types &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイプは、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;、バイト&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;ビューのタイプを表します。</target>
        </trans-unit>
        <trans-unit id="e4ac703cec9ee3e03481b97675e769369d5ba849" translate="yes" xml:space="preserve">
          <source>This uses datagrams, which are discrete packets of information that may arrive out of order or be lost while in transit. The parameters are the same as for &lt;a href=&quot;#socketserver.TCPServer&quot;&gt;&lt;code&gt;TCPServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、データグラムを使用します。データグラムは、順不同で到着したり、転送中に失われたりする可能性がある情報の個別のパケットです。パラメータは&lt;a href=&quot;#socketserver.TCPServer&quot;&gt; &lt;code&gt;TCPServer&lt;/code&gt; &lt;/a&gt;の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="56aa8f5d34f966fb99b842edc763ce5f7f477da2" translate="yes" xml:space="preserve">
          <source>This uses the Internet TCP protocol, which provides for continuous streams of data between the client and server. If &lt;em&gt;bind_and_activate&lt;/em&gt; is true, the constructor automatically attempts to invoke &lt;a href=&quot;#socketserver.BaseServer.server_bind&quot;&gt;&lt;code&gt;server_bind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.server_activate&quot;&gt;&lt;code&gt;server_activate()&lt;/code&gt;&lt;/a&gt;. The other parameters are passed to the &lt;a href=&quot;#socketserver.BaseServer&quot;&gt;&lt;code&gt;BaseServer&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">これは、クライアントとサーバー間のデータの連続的なストリームを提供するインターネットTCPプロトコルを使用します。場合&lt;em&gt;bind_and_activateが&lt;/em&gt;真である、コンストラクタは自動的に起動しようとする&lt;a href=&quot;#socketserver.BaseServer.server_bind&quot;&gt; &lt;code&gt;server_bind()&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#socketserver.BaseServer.server_activate&quot;&gt; &lt;code&gt;server_activate()&lt;/code&gt; &lt;/a&gt;。その他のパラメーターは、&lt;a href=&quot;#socketserver.BaseServer&quot;&gt; &lt;code&gt;BaseServer&lt;/code&gt; &lt;/a&gt;基本クラスに渡されます。</target>
        </trans-unit>
        <trans-unit id="28cf12232e0ad7f17ee9f0ae6d9c93eb3395bad0" translate="yes" xml:space="preserve">
          <source>This uses the entry&amp;rsquo;s name: directories should always end with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">これはエントリの名前を使用します。ディレクトリは常に &lt;code&gt;/&lt;/code&gt; で終わる必要があります。</target>
        </trans-unit>
        <trans-unit id="a1b2decf1b76038b0a4989697f74a8b441227dc0" translate="yes" xml:space="preserve">
          <source>This utility method may call &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; repeatedly until the predicate is satisfied, or until a timeout occurs. The return value is the last return value of the predicate and will evaluate to &lt;code&gt;False&lt;/code&gt; if the method timed out.</source>
          <target state="translated">このユーティリティメソッドは、述語が満たされるまで、またはタイムアウトが発生するまで、繰り返し&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;を呼び出すことができます。戻り値は述語の最後の戻り値であり、メソッドがタイムアウトした場合は &lt;code&gt;False&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="3dba7730209902073e9f1027bf8339c611419fa6" translate="yes" xml:space="preserve">
          <source>This value is guaranteed by POSIX to be at least 512.</source>
          <target state="translated">この値はPOSIXで512以上であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="461cfb21d5f19ff778807be8dac3274bf7b6a8f6" translate="yes" xml:space="preserve">
          <source>This value is initially set based on the value of the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;pycache_prefix=PATH&lt;/code&gt; command-line option or the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt;&lt;/a&gt; environment variable (command-line takes precedence). If neither are set, it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この値は、最初は&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;pycache_prefix=PATH&lt;/code&gt; コマンドラインオプションまたは&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;PYTHONPYCACHEPREFIX&lt;/code&gt; &lt;/a&gt;環境変数の値に基づいて設定されます（コマンドラインが優先されます）。どちらも設定されていない場合は、 &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c5cb6aae01c156404e71b59a7cc16a2897739ebe" translate="yes" xml:space="preserve">
          <source>This visitor calls &lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt;&lt;code&gt;visit()&lt;/code&gt;&lt;/a&gt; on all children of the node.</source>
          <target state="translated">このビジターは、ノードのすべての子で&lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt; &lt;code&gt;visit()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="48d16e3abf4349547e65c79bfe2cd30b3ecca80f" translate="yes" xml:space="preserve">
          <source>This watcher is used by default.</source>
          <target state="translated">このウォッチャーはデフォルトで使用されています。</target>
        </trans-unit>
        <trans-unit id="c18d35e8fcbe18d32af66e12f7c871cec83985e6" translate="yes" xml:space="preserve">
          <source>This way, you can let &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; do the job of calling the appropriate function after argument parsing is complete. Associating functions with actions like this is typically the easiest way to handle the different actions for each of your subparsers. However, if it is necessary to check the name of the subparser that was invoked, the &lt;code&gt;dest&lt;/code&gt; keyword argument to the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; call will work:</source>
          <target state="translated">このようにして、引数の解析が完了した後で、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;に適切な関数を呼び出させることができます。このようなアクションに関数を関連付けることは、通常、各サブパーサーのさまざまなアクションを処理する最も簡単な方法です。ただし、呼び出されたサブパーサーの名前を確認する必要がある場合は、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;呼び出しの &lt;code&gt;dest&lt;/code&gt; キーワード引数が機能します。</target>
        </trans-unit>
        <trans-unit id="e4e3194f441141c309638c96c8e53e0bd92fa3ad" translate="yes" xml:space="preserve">
          <source>This way, you can use date/timestamps from Python without any additional fiddling in most cases. The format of the adapters is also compatible with the experimental SQLite date/time functions.</source>
          <target state="translated">この方法では、ほとんどの場合、Pythonからの日付/時刻スタンプを追加でいじることなく使用することができます。アダプタのフォーマットは、実験的な SQLite の日付/時刻関数と互換性があります。</target>
        </trans-unit>
        <trans-unit id="5630aa81c7c661cc3164234f583e1b2ab4ae528a" translate="yes" xml:space="preserve">
          <source>This widget accepts the following specific option:</source>
          <target state="translated">このウィジェットは、以下の特定のオプションを受け付けます。</target>
        </trans-unit>
        <trans-unit id="b7516b8e7c43a47e302154f3f68de21c415616f8" translate="yes" xml:space="preserve">
          <source>This widget accepts the following specific options:</source>
          <target state="translated">このウィジェットは、以下の特定のオプションを受け付けます。</target>
        </trans-unit>
        <trans-unit id="52f8a705e29799639a562bd8ad8470b5b2529355" translate="yes" xml:space="preserve">
          <source>This widget generates a &lt;strong&gt;&amp;lt;&amp;lt;NotebookTabChanged&amp;gt;&amp;gt;&lt;/strong&gt; virtual event after a new tab is selected.</source>
          <target state="translated">このウィジェットは、新しいタブが選択された後に&lt;strong&gt;&amp;lt;&amp;lt; NotebookTabChanged &amp;gt;&amp;gt;&lt;/strong&gt;仮想イベントを生成します。</target>
        </trans-unit>
        <trans-unit id="583cc459c26656b6f5fa15adcf419a55eb1a8ea4" translate="yes" xml:space="preserve">
          <source>This widget has neither specific options nor specific methods, besides the ones inherited from &lt;code&gt;ttk.Widget&lt;/code&gt;.</source>
          <target state="translated">このウィジェットには、 &lt;code&gt;ttk.Widget&lt;/code&gt; から継承されたもの以外に、特定のオプションも特定のメソッドもありません。</target>
        </trans-unit>
        <trans-unit id="cc6727990ae2f38c8adc40d38ee32c2f9a8cccff" translate="yes" xml:space="preserve">
          <source>This widget supports only &amp;ldquo;southeast&amp;rdquo; resizing.</source>
          <target state="translated">このウィジェットは、「南東」のサイズ変更のみをサポートします。</target>
        </trans-unit>
        <trans-unit id="893091dadd2289a375b8c02352c7b0621886804a" translate="yes" xml:space="preserve">
          <source>This will add a header that looks like</source>
          <target state="translated">これにより、次のようなヘッダーが追加されます。</target>
        </trans-unit>
        <trans-unit id="f14e86fc21e10a9d916560d64ebdcc9da48c2735" translate="yes" xml:space="preserve">
          <source>This will add to the package&amp;rsquo;s &lt;code&gt;__path__&lt;/code&gt; all subdirectories of directories on &lt;code&gt;sys.path&lt;/code&gt; named after the package. This is useful if one wants to distribute different parts of a single logical package as multiple directories.</source>
          <target state="translated">これにより、パッケージの &lt;code&gt;__path__&lt;/code&gt; に、パッケージにちなんで名付けられた &lt;code&gt;sys.path&lt;/code&gt; 上のディレクトリのすべてのサブディレクトリが追加されます。これは、単一の論理パッケージのさまざまな部分を複数のディレクトリとして配布する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="fb6d4ec5dcc38b1ced4593b66a2139b238f95cf3" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;&quot;SimpleHTTP/&quot; + __version__&lt;/code&gt;, where &lt;code&gt;__version__&lt;/code&gt; is defined at the module level.</source>
          <target state="translated">これは &lt;code&gt;&quot;SimpleHTTP/&quot; + __version__&lt;/code&gt; 、ここで &lt;code&gt;__version__&lt;/code&gt; はモジュールレベルで定義されます。</target>
        </trans-unit>
        <trans-unit id="7a74e2ffba13721aff2e34d74a03a08eb350d82d" translate="yes" xml:space="preserve">
          <source>This will copy everything except &lt;code&gt;.pyc&lt;/code&gt; files and files or directories whose name starts with &lt;code&gt;tmp&lt;/code&gt;.</source>
          <target state="translated">これは、名前が &lt;code&gt;tmp&lt;/code&gt; で始まる &lt;code&gt;.pyc&lt;/code&gt; ファイルおよびファイルまたはディレクトリを除くすべてをコピーします。</target>
        </trans-unit>
        <trans-unit id="56e49294b1d7ce21a415dcf1693ab79057f7c8de" translate="yes" xml:space="preserve">
          <source>This will deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates enough output to a pipe such that it blocks waiting for the OS pipe buffer to accept more data. Use &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; when using pipes to avoid that.</source>
          <target state="translated">&lt;code&gt;stdout=PIPE&lt;/code&gt; または &lt;code&gt;stderr=PIPE&lt;/code&gt; を使用すると、これによりデッドロックが発生し、子プロセスが十分な出力をパイプに生成するため、OSパイプバッファーが追加のデータを受け入れるのをブロックします。使用&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;それを避けるためにパイプを使用。</target>
        </trans-unit>
        <trans-unit id="f66e79b5854a58b1ad3c1f14c288974b4d8104d8" translate="yes" xml:space="preserve">
          <source>This will extend the bindings for the toplevel window containing the notebook as follows:</source>
          <target state="translated">これにより、ノートブックを含むトップレベルウィンドウのバインディングが次のように拡張されます。</target>
        </trans-unit>
        <trans-unit id="5d9c8b968447210c764e73083a7543273f082164" translate="yes" xml:space="preserve">
          <source>This will import &lt;code&gt;example.py&lt;/code&gt; as a standalone module and run &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; on it. Note that this may not work correctly if the file is part of a package and imports other submodules from that package.</source>
          <target state="translated">これにより、 &lt;code&gt;example.py&lt;/code&gt; がスタンドアロンモジュールとしてインポートされ、&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; が&lt;/a&gt;実行されます。ファイルがパッケージの一部であり、そのパッケージから他のサブモジュールをインポートする場合、これは正しく機能しない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="39490d2477cc24388e4a798bb86272c054747d2f" translate="yes" xml:space="preserve">
          <source>This will produce a standalone executable, which can be run on any machine with the appropriate interpreter available. See &lt;a href=&quot;#zipapp-specifying-the-interpreter&quot;&gt;Specifying the Interpreter&lt;/a&gt; for details. It can be shipped to users as a single file.</source>
          <target state="translated">これにより、スタンドアロンの実行可能ファイルが生成され、適切なインタープリターが利用可能な任意のマシンで実行できます。詳細について&lt;a href=&quot;#zipapp-specifying-the-interpreter&quot;&gt;は、インタープリターの指定&lt;/a&gt;を参照してください。1つのファイルとしてユーザーに出荷できます。</target>
        </trans-unit>
        <trans-unit id="97484c013cbe0659d7256e11582bf0a3ad503821" translate="yes" xml:space="preserve">
          <source>This will run all tests defined in the named module.</source>
          <target state="translated">これは、指定されたモジュールで定義されたすべてのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="2094ced9ee584cde74f455b9491be9e83a991dc2" translate="yes" xml:space="preserve">
          <source>This will send a request to the server using the HTTP request method &lt;em&gt;method&lt;/em&gt; and the selector &lt;em&gt;url&lt;/em&gt;.</source>
          <target state="translated">これにより、HTTPリクエストメソッド&lt;em&gt;メソッド&lt;/em&gt;とセレクター&lt;em&gt;url&lt;/em&gt;を使用してリクエストがサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="23b91a0f0ff42f96fa95a59986f06ac3f48f2a85" translate="yes" xml:space="preserve">
          <source>This will set &lt;code&gt;obj.attr&lt;/code&gt; to 5 for the duration of the &lt;code&gt;with&lt;/code&gt; block, restoring the old value at the end of the block. If &lt;code&gt;attr&lt;/code&gt; doesn&amp;rsquo;t exist on &lt;code&gt;obj&lt;/code&gt;, it will be created and then deleted at the end of the block.</source>
          <target state="translated">これにより、 &lt;code&gt;with&lt;/code&gt; ブロックの期間中は &lt;code&gt;obj.attr&lt;/code&gt; が5に設定され、ブロックの最後の古い値が復元されます。場合 &lt;code&gt;attr&lt;/code&gt; が上に存在しない &lt;code&gt;obj&lt;/code&gt; 、それが作成され、ブロックの終了時に削除されます。</target>
        </trans-unit>
        <trans-unit id="de375732b809a212afe6d4f9378da4dcd4108925" translate="yes" xml:space="preserve">
          <source>This will set &lt;code&gt;obj[&quot;item&quot;]&lt;/code&gt; to 5 for the duration of the &lt;code&gt;with&lt;/code&gt; block, restoring the old value at the end of the block. If &lt;code&gt;item&lt;/code&gt; doesn&amp;rsquo;t exist on &lt;code&gt;obj&lt;/code&gt;, it will be created and then deleted at the end of the block.</source>
          <target state="translated">これにより、 &lt;code&gt;with&lt;/code&gt; ブロックの期間中、 &lt;code&gt;obj[&quot;item&quot;]&lt;/code&gt; が5に設定され、ブロックの最後の古い値が復元されます。場合は &lt;code&gt;item&lt;/code&gt; 上に存在しない &lt;code&gt;obj&lt;/code&gt; 、それが作成され、ブロックの終了時に削除されます。</target>
        </trans-unit>
        <trans-unit id="f075685c6e10f2c3bfffdc256e8855b5f859c7c1" translate="yes" xml:space="preserve">
          <source>This will sort all the statistics by file name, and then print out statistics for only the class init methods (since they are spelled with &lt;code&gt;__init__&lt;/code&gt; in them). As one final example, you could try:</source>
          <target state="translated">これにより、すべての統計情報がファイル名でソートされ、クラスのinitメソッドのみの統計情報が出力されます（それらには &lt;code&gt;__init__&lt;/code&gt; が含まれているため）。最後の例として、次のことを試すことができます。</target>
        </trans-unit>
        <trans-unit id="8ccb8cdb74cd1cd8b07da082d3d59c7892819a38" translate="yes" xml:space="preserve">
          <source>This won&amp;rsquo;t display anything unless an example fails, in which case the failing example(s) and the cause(s) of the failure(s) are printed to stdout, and the final line of output is &lt;code&gt;***Test Failed*** N failures.&lt;/code&gt;, where &lt;em&gt;N&lt;/em&gt; is the number of examples that failed.</source>
          <target state="translated">例が失敗しない限り、これは何も表示しません。その場合、失敗した例と失敗の原因はstdoutに出力され、出力の最終行は &lt;code&gt;***Test Failed*** N failures.&lt;/code&gt; ここで、&lt;em&gt;N&lt;/em&gt;は失敗した例の数です。</target>
        </trans-unit>
        <trans-unit id="45e4d25dd4f52913e8043d67497db894d9ad0b86" translate="yes" xml:space="preserve">
          <source>This works as class or function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;. With a class, it applies recursively to all methods defined in that class (but not to methods defined in its superclasses or subclasses).</source>
          <target state="translated">これは、クラスまたは関数の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;として機能します。クラスを使用すると、そのクラスで定義されているすべてのメソッドに再帰的に適用されます（スーパークラスまたはサブクラスで定義されているメソッドには適用されません）。</target>
        </trans-unit>
        <trans-unit id="22b71cd883b8cced346581da93f8ff4e43210206" translate="yes" xml:space="preserve">
          <source>This works because the dummy definition of &lt;code&gt;_()&lt;/code&gt; simply returns the string unchanged. And this dummy definition will temporarily override any definition of &lt;code&gt;_()&lt;/code&gt; in the built-in namespace (until the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; command). Take care, though if you have a previous definition of &lt;code&gt;_()&lt;/code&gt; in the local namespace.</source>
          <target state="translated">これは、 &lt;code&gt;_()&lt;/code&gt; のダミー定義が文字列を変更せずに返すだけなので機能します。そして、このダミーの定義は、組み込みの名前空間の &lt;code&gt;_()&lt;/code&gt; の定義を一時的に上書きします（&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt;コマンドまで）。ただし、ローカルネームスペースに &lt;code&gt;_()&lt;/code&gt; の以前の定義がある場合は注意してください。</target>
        </trans-unit>
        <trans-unit id="28e244347ead2b1ee157031a5e28d94349b74b67" translate="yes" xml:space="preserve">
          <source>This wrapper may also generate output using the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module to indicate behaviors that are questionable but which may not actually be prohibited by &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. Unless they are suppressed using Python command-line options or the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; API, any such warnings will be written to &lt;code&gt;sys.stderr&lt;/code&gt; (&lt;em&gt;not&lt;/em&gt;&lt;code&gt;wsgi.errors&lt;/code&gt;, unless they happen to be the same object).</source>
          <target state="translated">このラッパーは、&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュールを使用して出力を生成し、疑わしい動作を示しますが、実際には&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;で禁止されていない場合があります。Pythonコマンドラインオプションまたは&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt; API を使用して抑制されない限り、そのような警告は &lt;code&gt;sys.stderr&lt;/code&gt; に書き込まれます（同じオブジェクトでない場合は、 &lt;code&gt;wsgi.errors&lt;/code&gt; で&lt;em&gt;はありません&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="150bcb2beea81f0a936d8bb788c5d0ed814a30b2" translate="yes" xml:space="preserve">
          <source>This wraps the decorator with something that wraps the decorated function in &lt;a href=&quot;#typing.no_type_check&quot;&gt;&lt;code&gt;no_type_check()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは装飾された関数を&lt;a href=&quot;#typing.no_type_check&quot;&gt; &lt;code&gt;no_type_check()&lt;/code&gt; &lt;/a&gt;でラップするものでデコレータをラップします。</target>
        </trans-unit>
        <trans-unit id="1d67963b381a87c27dbbc7cb706dcb0aa012e09c" translate="yes" xml:space="preserve">
          <source>This, for example, is true of &lt;code&gt;int.__add__&lt;/code&gt;. An object passing this test has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; method but not a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; method, but beyond that the set of attributes varies. A &lt;a href=&quot;stdtypes#definition.__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt; attribute is usually sensible, and &lt;code&gt;__doc__&lt;/code&gt; often is.</source>
          <target state="translated">たとえば、これは &lt;code&gt;int.__add__&lt;/code&gt; ます。このテストに合格オブジェクトが持っている&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;メソッドではなく&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;メソッドを、しかし、一連の属性が変化することを超えました。&lt;a href=&quot;stdtypes#definition.__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt;属性は、通常は賢明である、と &lt;code&gt;__doc__&lt;/code&gt; がしばしばあります。</target>
        </trans-unit>
        <trans-unit id="778e46a17402881cd5c7f2ae7c1daa725c393ac4" translate="yes" xml:space="preserve">
          <source>Though &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; objects support similar operations, they are optimized for fast fixed-length operations and incur O(n) memory movement costs for &lt;code&gt;pop(0)&lt;/code&gt; and &lt;code&gt;insert(0, v)&lt;/code&gt; operations which change both the size and position of the underlying data representation.</source>
          <target state="translated">にもかかわらず&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;オブジェクトは同様の操作をサポートし、それらは高速固定長操作と被るO（n）のメモリ移動のコストのために最適化された &lt;code&gt;pop(0)&lt;/code&gt; と &lt;code&gt;insert(0, v)&lt;/code&gt; 、基礎となるデータ表現の動作変更サイズと位置の両方。</target>
        </trans-unit>
        <trans-unit id="faed24ed478ce5898f638da7d1d34a4be16100bc" translate="yes" xml:space="preserve">
          <source>Though being an exception (a subclass of &lt;a href=&quot;#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;), an &lt;a href=&quot;#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; can also function as a non-exceptional file-like return value (the same thing that &lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; returns). This is useful when handling exotic HTTP errors, such as requests for authentication.</source>
          <target state="translated">例外（のサブクラスであることけれども&lt;a href=&quot;#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;、）&lt;a href=&quot;#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;非例外ファイルのような戻り値（同じものとすることができ、関数&lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;を返します）。これは、認証要求などのエキゾチックなHTTPエラーを処理するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="37862647125cefc1069254a47f843e7cb021912f" translate="yes" xml:space="preserve">
          <source>Though less common than in the past, an antivirus or firewall program may stop the connection. If the program cannot be taught to allow the connection, then it must be turned off for IDLE to work. It is safe to allow this internal connection because no data is visible on external ports. A similar problem is a network mis-configuration that blocks connections.</source>
          <target state="translated">以前ほどではありませんが、アンチウイルスやファイアウォールプログラムが接続を停止することがあります。接続を許可するようにプログラムが教えられない場合は、IDLE を動作させるためにはプログラムをオフにしなければなりません。この内部接続を許可すると、外部ポートにはデータが見えないので安全です。同様の問題として、ネットワークの設定ミスで接続がブロックされることがあります。</target>
        </trans-unit>
        <trans-unit id="2289f1cd884268a19420d727637bb78981c8aef8" translate="yes" xml:space="preserve">
          <source>Though not often needed, this function can be useful when installing modules for shared use, especially if some of the users may not have permission to write the byte-code cache files in the directory containing the source code.</source>
          <target state="translated">頻繁に必要とされるわけではありませんが、共有利用のためにモジュールをインストールする場合、特にソースコードを含むディレクトリにバイトコードキャッシュファイルの書き込み権限を持っていないユーザがいる場合には、この関数は便利です。</target>
        </trans-unit>
        <trans-unit id="23b26ebf82d42c0319c71cda81eb0f398c8fe706" translate="yes" xml:space="preserve">
          <source>Though the cycle detector will catch these, destruction of the frames (and local variables) can be made deterministic by removing the cycle in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause. This is also important if the cycle detector was disabled when Python was compiled or using &lt;a href=&quot;gc#gc.disable&quot;&gt;&lt;code&gt;gc.disable()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">サイクル検出器はこれらをキャッチしますが、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;句でサイクルを削除することにより、フレーム（およびローカル変数）の破壊を確定的にすることができます。これは、Pythonのコンパイル時または&lt;a href=&quot;gc#gc.disable&quot;&gt; &lt;code&gt;gc.disable()&lt;/code&gt; の&lt;/a&gt;使用時にサイクル検出器が無効になっている場合にも重要です。例えば：</target>
        </trans-unit>
        <trans-unit id="cf42dd33cbcf5b9ff936c0cccb336c422f5ed971" translate="yes" xml:space="preserve">
          <source>Thread ID (if available).</source>
          <target state="translated">スレッドID(あれば)。</target>
        </trans-unit>
        <trans-unit id="938645778639684fb490a1e1f85f069cfc3de40c" translate="yes" xml:space="preserve">
          <source>Thread Objects</source>
          <target state="translated">スレッドオブジェクト</target>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="translated">スレッドの安全性</target>
        </trans-unit>
        <trans-unit id="2b65dfc26516296f295014a75cea6189d943e440" translate="yes" xml:space="preserve">
          <source>Thread has two arguments before the &lt;em&gt;search_criterion&lt;/em&gt; argument(s); a &lt;em&gt;threading_algorithm&lt;/em&gt;, and the searching &lt;em&gt;charset&lt;/em&gt;. Note that unlike &lt;code&gt;search&lt;/code&gt;, the searching &lt;em&gt;charset&lt;/em&gt; argument is mandatory. There is also a &lt;code&gt;uid thread&lt;/code&gt; command which corresponds to &lt;code&gt;thread&lt;/code&gt; the way that &lt;code&gt;uid
search&lt;/code&gt; corresponds to &lt;code&gt;search&lt;/code&gt;. The &lt;code&gt;thread&lt;/code&gt; command first searches the mailbox for messages that match the given searching criteria using the charset argument for the interpretation of strings in the searching criteria. It then returns the matching messages threaded according to the specified threading algorithm.</source>
          <target state="translated">スレッドには、&lt;em&gt;search_criterion&lt;/em&gt;引数の前に2つの引数があります。&lt;em&gt;threading_algorithm&lt;/em&gt;、および検索&lt;em&gt;文字セット&lt;/em&gt;。 &lt;code&gt;search&lt;/code&gt; とは異なり、searching &lt;em&gt;charset&lt;/em&gt;引数は必須です。 &lt;code&gt;uid search&lt;/code&gt; 対応する方法で &lt;code&gt;thread&lt;/code&gt; に対応する &lt;code&gt;uid thread&lt;/code&gt; コマンドもあり &lt;code&gt;search&lt;/code&gt; 。 &lt;code&gt;thread&lt;/code&gt; コマンドは、最初に検索し、検索条件の文字列の解釈のためのcharset引数を使用して、指定された検索条件に一致するメッセージのためのメールボックスを。次に、指定されたスレッド化アルゴリズムに従ってスレッド化された一致するメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="b0c8f67df305f12d7329c3e923eae3a187448dc1" translate="yes" xml:space="preserve">
          <source>Thread members consist of zero or more messages numbers, delimited by spaces, indicating successive parent and child.</source>
          <target state="translated">スレッドメンバーは、スペースで区切られた0個以上のメッセージ番号で構成され、連続した親子を示します。</target>
        </trans-unit>
        <trans-unit id="2b72f7882340b8b87302b6a71686a5d8011d1cb7" translate="yes" xml:space="preserve">
          <source>Thread name (if available).</source>
          <target state="translated">スレッド名(あれば)。</target>
        </trans-unit>
        <trans-unit id="bede3e862826945fddf6112e7c769b9a3aeb8189" translate="yes" xml:space="preserve">
          <source>Thread safety of proxies</source>
          <target state="translated">プロキシのスレッド安全性</target>
        </trans-unit>
        <trans-unit id="b335fb76cc5d7a0a38d14693a22dd2234bea40d3" translate="yes" xml:space="preserve">
          <source>Thread-Local Data</source>
          <target state="translated">スレッドローカルデータ</target>
        </trans-unit>
        <trans-unit id="179f9004b4c06ae6f5f6ff596023c3d673097c0e" translate="yes" xml:space="preserve">
          <source>Thread-local data is data whose values are thread specific. To manage thread-local data, just create an instance of &lt;a href=&quot;#threading.local&quot;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/a&gt; (or a subclass) and store attributes on it:</source>
          <target state="translated">スレッドローカルデータは、値がスレッド固有のデータです。スレッドローカルデータを管理するには、&lt;a href=&quot;#threading.local&quot;&gt; &lt;code&gt;local&lt;/code&gt; &lt;/a&gt;（またはサブクラス）のインスタンスを作成し、それに属性を格納します。</target>
        </trans-unit>
        <trans-unit id="8ff556a54faf6fae983bf1ab3aff7d6d5d26751b" translate="yes" xml:space="preserve">
          <source>Thread-specific CPU-time clock.</source>
          <target state="translated">スレッド固有のCPU時間クロック。</target>
        </trans-unit>
        <trans-unit id="08db9139992ea95ca14b3bce8c69ce7fca532f88" translate="yes" xml:space="preserve">
          <source>Thread/Process Pool</source>
          <target state="translated">スレッド/プロセスプール</target>
        </trans-unit>
        <trans-unit id="f4ccad88952fdcd6a1fc61663ba8a6b67b062047" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor</source>
          <target state="translated">ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="1fe04156ec5ffd3ad976e6549621d5b8412d5037" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor Example</source>
          <target state="translated">ThreadPoolExecutor の例</target>
        </trans-unit>
        <trans-unit id="e18220b1afceba219a85fd8b489ed2e3a72478ca" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor now reuses idle worker threads before starting &lt;em&gt;max_workers&lt;/em&gt; worker threads too.</source>
          <target state="translated">ThreadPoolExecutorは、&lt;em&gt;max_workers&lt;/em&gt;ワーカースレッドも開始する前に、アイドルワーカースレッドを再利用するようになりました。</target>
        </trans-unit>
        <trans-unit id="61d127f225cf326a27d514f202864103d01109cd" translate="yes" xml:space="preserve">
          <source>Threading-like synchronization primitives that can be used in Tasks.</source>
          <target state="translated">Tasks で使用できるスレッドライクな同期プリミティブ。</target>
        </trans-unit>
        <trans-unit id="da12000dd2decc4919042e0d96f21afbb897e6e5" translate="yes" xml:space="preserve">
          <source>Threads interact strangely with interrupts: the &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception will be received by an arbitrary thread. (When the &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module is available, interrupts always go to the main thread.)</source>
          <target state="translated">スレッドは割り込みと奇妙な相互作用をし：&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;例外は任意のスレッドによって受信されます。（&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;モジュールが利用可能な場合、割り込みは常にメインスレッドに送られます。）</target>
        </trans-unit>
        <trans-unit id="53c7f0ab74cff52794e9a24116f9afa5b47c92b2" translate="yes" xml:space="preserve">
          <source>Three classes are provided by the &lt;a href=&quot;#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt; module, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; is the base class:</source>
          <target state="translated">3つのクラスが&lt;a href=&quot;#module-imaplib&quot;&gt; &lt;code&gt;imaplib&lt;/code&gt; &lt;/a&gt;モジュールによって提供され、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;が基本クラスです。</target>
        </trans-unit>
        <trans-unit id="e709dbe2f34341a73307670a231b6cadb5fc57d7" translate="yes" xml:space="preserve">
          <source>Three conversion flags are currently supported: &lt;code&gt;'!s'&lt;/code&gt; which calls &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on the value, &lt;code&gt;'!r'&lt;/code&gt; which calls &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'!a'&lt;/code&gt; which calls &lt;a href=&quot;functions#ascii&quot;&gt;&lt;code&gt;ascii()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在サポートされている変換フラグは、値に対して&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;を呼び出す &lt;code&gt;'!s'&lt;/code&gt; 、&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;を呼び出す &lt;code&gt;'!r'&lt;/code&gt; 、および&lt;a href=&quot;functions#ascii&quot;&gt; &lt;code&gt;ascii()&lt;/code&gt; &lt;/a&gt;を呼び出す &lt;code&gt;'!a'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5d0ca76daa80652b92bb2e247e6f8c4265a8798c" translate="yes" xml:space="preserve">
          <source>Three exceptions are defined as attributes of the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">3つの例外が&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;クラスの属性として定義されています。</target>
        </trans-unit>
        <trans-unit id="2f64dfe21491c30d5d1a7eadfd5dd3fae4531abe" translate="yes" xml:space="preserve">
          <source>Three locking mechanisms are used&amp;mdash;dot locking and, if available, the &lt;code&gt;flock()&lt;/code&gt; and &lt;code&gt;lockf()&lt;/code&gt; system calls.</source>
          <target state="translated">3つのロックメカニズムが使用されます。ドットロックと、可能であれば &lt;code&gt;flock()&lt;/code&gt; および &lt;code&gt;lockf()&lt;/code&gt; システムコールです。</target>
        </trans-unit>
        <trans-unit id="e50506efbf25f33d49dafed0e71ca3b1a26feb7c" translate="yes" xml:space="preserve">
          <source>Three locking mechanisms are used&amp;mdash;dot locking and, if available, the &lt;code&gt;flock()&lt;/code&gt; and &lt;code&gt;lockf()&lt;/code&gt; system calls. For MH mailboxes, locking the mailbox means locking the &lt;code&gt;.mh_sequences&lt;/code&gt; file and, only for the duration of any operations that affect them, locking individual message files.</source>
          <target state="translated">3つのロックメカニズムが使用されます。ドットロックと、可能であれば &lt;code&gt;flock()&lt;/code&gt; および &lt;code&gt;lockf()&lt;/code&gt; システムコールです。MHメールボックスの場合、メールボックスをロックすることは、 &lt;code&gt;.mh_sequences&lt;/code&gt; ファイルをロックすることを意味し、それらに影響を与える操作の期間中のみ、個々のメッセージファイルをロックします。</target>
        </trans-unit>
        <trans-unit id="0e1bc8847535475eab42cce197ae5be27e727ae7" translate="yes" xml:space="preserve">
          <source>Three or more alphanumerics giving the timezone abbreviations. These will be propagated into time.tzname</source>
          <target state="translated">タイムゾーンの省略形を表す3つ以上の英数字。これらはtime.tznameに伝搬されます。</target>
        </trans-unit>
        <trans-unit id="9ef9926e86eae8834900c13e52e1577c082afc28" translate="yes" xml:space="preserve">
          <source>Thus, an alternative way to get the version number is through the &lt;code&gt;Distribution&lt;/code&gt; instance:</source>
          <target state="translated">したがって、バージョン番号を取得する別の方法は、 &lt;code&gt;Distribution&lt;/code&gt; インスタンスを使用することです。</target>
        </trans-unit>
        <trans-unit id="1a3ede7623f4e752d108f2c9edace3b95a9d7fcf" translate="yes" xml:space="preserve">
          <source>Thus, by default &lt;a href=&quot;#email.iterators.typed_subpart_iterator&quot;&gt;&lt;code&gt;typed_subpart_iterator()&lt;/code&gt;&lt;/a&gt; returns each subpart that has a MIME type of &lt;em&gt;text/*&lt;/em&gt;.</source>
          <target state="translated">したがって、デフォルトでは、&lt;a href=&quot;#email.iterators.typed_subpart_iterator&quot;&gt; &lt;code&gt;typed_subpart_iterator()&lt;/code&gt; &lt;/a&gt;はMIMEタイプが&lt;em&gt;text / *&lt;/em&gt;である各サブパートを返します。</target>
        </trans-unit>
        <trans-unit id="d36d700dcdbb23ba6f79231791253efb769470c2" translate="yes" xml:space="preserve">
          <source>Thus, the set of channel events is larger than the basic socket events. The full set of methods that can be overridden in your subclass follows:</source>
          <target state="translated">このように、チャンネルイベントのセットは基本的なソケットイベントよりも大きくなります。サブクラスでオーバーライドできるメソッドの完全なセットは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="439af098feeff071c8e795106894bf846b6f7af0" translate="yes" xml:space="preserve">
          <source>Thus, this is only useful to call Python C api functions directly.</source>
          <target state="translated">このように、Python C の api 関数を直接呼び出す場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="205b4cecce0161369a95283ab9503c6dc691808a" translate="yes" xml:space="preserve">
          <source>Thus, when the &lt;code&gt;incremental&lt;/code&gt; key of a configuration dict is present and is &lt;code&gt;True&lt;/code&gt;, the system will completely ignore any &lt;code&gt;formatters&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt; entries, and process only the &lt;code&gt;level&lt;/code&gt; settings in the &lt;code&gt;handlers&lt;/code&gt; entries, and the &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;propagate&lt;/code&gt; settings in the &lt;code&gt;loggers&lt;/code&gt; and &lt;code&gt;root&lt;/code&gt; entries.</source>
          <target state="translated">ときにこのように、 &lt;code&gt;incremental&lt;/code&gt; 構成辞書のキーが存在している &lt;code&gt;True&lt;/code&gt; 、システムは、完全に任意無視する &lt;code&gt;formatters&lt;/code&gt; と &lt;code&gt;filters&lt;/code&gt; エントリを、そしてプロセスは、 &lt;code&gt;level&lt;/code&gt; の設定 &lt;code&gt;handlers&lt;/code&gt; エントリ、および &lt;code&gt;level&lt;/code&gt; および &lt;code&gt;propagate&lt;/code&gt; の設定 &lt;code&gt;loggers&lt;/code&gt; と &lt;code&gt;root&lt;/code&gt; エントリ。</target>
        </trans-unit>
        <trans-unit id="e488ae72b0720c1cf599c3f8e575a2ab8f87d840" translate="yes" xml:space="preserve">
          <source>Tidy up any resources used by the handler. This version does no output but removes the handler from an internal list of handlers which is closed when &lt;a href=&quot;#logging.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; is called. Subclasses should ensure that this gets called from overridden &lt;a href=&quot;#logging.Handler.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">ハンドラーが使用するリソースを整理します。このバージョンは出力を行いませんが、&lt;a href=&quot;#logging.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに閉じられるハンドラーの内部リストからハンドラーを削除します。サブクラスは、これがオーバーライドされた&lt;a href=&quot;#logging.Handler.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドから呼び出されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="f88f6e9627dc95497340bc4623c37e38fe730a30" translate="yes" xml:space="preserve">
          <source>Time &lt;em&gt;number&lt;/em&gt; executions of the main statement. This executes the setup statement once, and then returns the time it takes to execute the main statement a number of times, measured in seconds as a float. The argument is the number of times through the loop, defaulting to one million. The main statement, the setup statement and the timer function to be used are passed to the constructor.</source>
          <target state="translated">時間&lt;em&gt;数の&lt;/em&gt;メイン文の実行。これは、セットアップステートメントを1回実行してから、メインステートメントを実行するのにかかる時間を秒単位で浮動小数点数として返します。引数はループの回数で、デフォルトは100万です。使用されるメインステートメント、セットアップステートメント、およびタイマー関数がコンストラクターに渡されます。</target>
        </trans-unit>
        <trans-unit id="c8b70bcd70c5d7f90b7b14b7ade5bf89ef3ddfba" translate="yes" xml:space="preserve">
          <source>Time access and conversions.</source>
          <target state="translated">タイムアクセスとコンバージョン。</target>
        </trans-unit>
        <trans-unit id="52eae1cacab4ca0975e99ce3b040b93af31bb3d3" translate="yes" xml:space="preserve">
          <source>Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded.</source>
          <target state="translated">LogRecord が作成された時間は、ロギングモジュールがロードされた時間を基準にミリ秒単位で表示されます。</target>
        </trans-unit>
        <trans-unit id="f1ad4dba9062b623c7954b6e7744f90380675e5e" translate="yes" xml:space="preserve">
          <source>Time of file creation.</source>
          <target state="translated">ファイルの作成時期。</target>
        </trans-unit>
        <trans-unit id="bf5b7ea4cfe40f929342452c57b6445e307ff98f" translate="yes" xml:space="preserve">
          <source>Time of last access.</source>
          <target state="translated">最後にアクセスした時間。</target>
        </trans-unit>
        <trans-unit id="d3ed1832d868c8126249a2fb407fc69507dfb189" translate="yes" xml:space="preserve">
          <source>Time of last modification.</source>
          <target state="translated">最終更新時刻。</target>
        </trans-unit>
        <trans-unit id="06be3d8bc306bea5d95f138ab46fafcf17e3ac5c" translate="yes" xml:space="preserve">
          <source>Time of most recent access expressed in nanoseconds as an integer.</source>
          <target state="translated">直近のアクセスの時刻をナノ秒単位で整数で表示します。</target>
        </trans-unit>
        <trans-unit id="a91619cf232ee7d5db5c8c4a6764e8af43c69992" translate="yes" xml:space="preserve">
          <source>Time of most recent access expressed in seconds.</source>
          <target state="translated">直近のアクセス時間を秒単位で表示しています。</target>
        </trans-unit>
        <trans-unit id="65e24f26ea5afb8877a5f8b52e25e32bd4b54487" translate="yes" xml:space="preserve">
          <source>Time of most recent content modification expressed in nanoseconds as an integer.</source>
          <target state="translated">ナノ秒単位で整数で表現した最新の内容変更の時間。</target>
        </trans-unit>
        <trans-unit id="1841767b9a4fbb8ae7c08bde8eb680a307282894" translate="yes" xml:space="preserve">
          <source>Time of most recent content modification expressed in seconds.</source>
          <target state="translated">最新のコンテンツが変更された時間を秒単位で表示しています。</target>
        </trans-unit>
        <trans-unit id="4c626f3136dcc7541eda5dfb73988281d101ad42" translate="yes" xml:space="preserve">
          <source>Time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created (as returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">時間&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;作成されました（で返される&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6debd785c2cf241c1ce1926887a0186d4daccd0e" translate="yes" xml:space="preserve">
          <source>Time whose absolute value is the time the system has been running and not suspended, providing accurate uptime measurement, both absolute and interval.</source>
          <target state="translated">絶対値がシステムが稼働していて中断していない時間である時間で、絶対値と間隔の両方で正確な稼働時間の測定を提供します。</target>
        </trans-unit>
        <trans-unit id="0374b215fe391453f39d42861a7e9596d4318c9a" translate="yes" xml:space="preserve">
          <source>Time zone name (empty string if the object is naive).</source>
          <target state="translated">タイムゾーン名(オブジェクトがナイーブな場合は空文字列)。</target>
        </trans-unit>
        <trans-unit id="ee8f614d144ab47b670e20f7522453fc38517d98" translate="yes" xml:space="preserve">
          <source>Time zone name (no characters if no time zone exists).</source>
          <target state="translated">タイムゾーン名(タイムゾーンが存在しない場合は文字なし)。</target>
        </trans-unit>
        <trans-unit id="c0a6ab1356e2277d077fbe00d29afd20e33697b8" translate="yes" xml:space="preserve">
          <source>Time zone offset indicating a positive or negative time difference from UTC/GMT of the form +HHMM or -HHMM, where H represents decimal hour digits and M represents decimal minute digits [-23:59, +23:59].</source>
          <target state="translated">UTC/GMTとの正または負の時差を示すタイムゾーンオフセットは、+HHHMMまたは-HHHMMの形式で、ここでHは10進数の時間桁を、Mは10進数の分桁[-23:59,+23:59]を表します。</target>
        </trans-unit>
        <trans-unit id="0f2b93745cd2c3c48a46f80e6d71e4bf3caf8d57" translate="yes" xml:space="preserve">
          <source>TimePeriod</source>
          <target state="translated">TimePeriod</target>
        </trans-unit>
        <trans-unit id="5c415f11b847d7f607026be69aa759761b622f69" translate="yes" xml:space="preserve">
          <source>TimedRotatingFileHandler</source>
          <target state="translated">TimedRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="ef4cedb55c675ccac18ae381902542c90951f8e7" translate="yes" xml:space="preserve">
          <source>Timeout duration, measured in seconds, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if no timeout is desired. If &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt;&lt;code&gt;handle_request()&lt;/code&gt;&lt;/a&gt; receives no incoming requests within the timeout period, the &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt;&lt;code&gt;handle_timeout()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">秒単位で測定されるタイムアウト期間、またはタイムアウトが必要ない場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。場合&lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt; &lt;code&gt;handle_request()&lt;/code&gt; &lt;/a&gt;タイムアウト期間内に着信要求を受信しない、&lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt; &lt;code&gt;handle_timeout()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="62b298628f356f1c619e3be00ab4ff94e5bcd4d8" translate="yes" xml:space="preserve">
          <source>Timeout in seconds.</source>
          <target state="translated">秒単位のタイムアウト。</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="0c4d8969a977fe6296c7be7be0d35706e4b5dae6" translate="yes" xml:space="preserve">
          <source>Timeouts and the &lt;code&gt;accept&lt;/code&gt; method</source>
          <target state="translated">タイムアウトと &lt;code&gt;accept&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="18be0279503ee7ac0781f0c9d62872c701d2ba10" translate="yes" xml:space="preserve">
          <source>Timeouts and the &lt;code&gt;connect&lt;/code&gt; method</source>
          <target state="translated">タイムアウトと &lt;code&gt;connect&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="10d608010dbfc49424751fd4de41b0163424a0ca" translate="yes" xml:space="preserve">
          <source>Timer Objects</source>
          <target state="translated">タイマーオブジェクト</target>
        </trans-unit>
        <trans-unit id="9cfb3d400f6dd144e8358401419c34c90ce26960" translate="yes" xml:space="preserve">
          <source>Timer expired</source>
          <target state="translated">タイマー切れ</target>
        </trans-unit>
        <trans-unit id="3207535b8ec3c551c140c60e1b7a5b653785fe05" translate="yes" xml:space="preserve">
          <source>Timers are started, as with threads, by calling their &lt;code&gt;start()&lt;/code&gt; method. The timer can be stopped (before its action has begun) by calling the &lt;a href=&quot;#threading.Timer.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; method. The interval the timer will wait before executing its action may not be exactly the same as the interval specified by the user.</source>
          <target state="translated">タイマーは、スレッドと同様に、 &lt;code&gt;start()&lt;/code&gt; メソッドを呼び出すことによって開始されます。タイマーは、&lt;a href=&quot;#threading.Timer.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより（アクションが開始する前に）停止できます。タイマーがアクションを実行する前に待機する間隔は、ユーザーが指定した間隔と正確に同じではない場合があります。</target>
        </trans-unit>
        <trans-unit id="29a8e31d470212c9df5fdd31f48fc0b710230ac9" translate="yes" xml:space="preserve">
          <source>Timestamps:</source>
          <target state="translated">Timestamps:</target>
        </trans-unit>
        <trans-unit id="0fd467e1a208fce272fd82f9bdf44518884e63c1" translate="yes" xml:space="preserve">
          <source>Timezone Constants</source>
          <target state="translated">タイムゾーン定数</target>
        </trans-unit>
        <trans-unit id="4a652adeb3e347a238e20df919ff0ab254549331" translate="yes" xml:space="preserve">
          <source>Tix Commands</source>
          <target state="translated">ティックスコマンド</target>
        </trans-unit>
        <trans-unit id="96b7c5068376e645877a22b7d58d1ed12ad0e604" translate="yes" xml:space="preserve">
          <source>Tix Development Applications</source>
          <target state="translated">ティックス開発アプリケーション</target>
        </trans-unit>
        <trans-unit id="faefa845bbb0a4cb46a5b93beb369c79040a72c9" translate="yes" xml:space="preserve">
          <source>Tix Homepage</source>
          <target state="translated">ティックスホームページ</target>
        </trans-unit>
        <trans-unit id="4d60340b76e67777555c745a3f74999b7294f26b" translate="yes" xml:space="preserve">
          <source>Tix Man Pages</source>
          <target state="translated">ティックスマンページ</target>
        </trans-unit>
        <trans-unit id="21b1387290c95ae82430ce78110fe98b586bc58e" translate="yes" xml:space="preserve">
          <source>Tix Programming Guide</source>
          <target state="translated">ティックスプログラミングガイド</target>
        </trans-unit>
        <trans-unit id="a19554031210fa636ae40e5156d263fd0b198f94" translate="yes" xml:space="preserve">
          <source>Tix Widgets</source>
          <target state="translated">ウィジェット</target>
        </trans-unit>
        <trans-unit id="acd857e62f1a6ec2d1a38841f59d2e3c13b47c92" translate="yes" xml:space="preserve">
          <source>Tix applications for development of Tix and Tkinter programs. Tide applications work under Tk or Tkinter, and include &lt;strong&gt;TixInspect&lt;/strong&gt;, an inspector to remotely modify and debug Tix/Tk/Tkinter applications.</source>
          <target state="translated">TixおよびTkinterプログラムの開発用のTixアプリケーション。TideアプリケーションはTkまたはTkinterで&lt;strong&gt;動作し&lt;/strong&gt;、Tix / Tk / Tkinterアプリケーションをリモートで変更およびデバッグするためのインスペクターである&lt;strong&gt;TixInspect&lt;/strong&gt;を含みます。</target>
        </trans-unit>
        <trans-unit id="82a910b990158307c49830b03ec2b10728632a22" translate="yes" xml:space="preserve">
          <source>Tix maintains a list of directories under which the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt; methods will search for image files. The standard bitmap directory is &lt;code&gt;$TIX_LIBRARY/bitmaps&lt;/code&gt;. The &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method adds &lt;em&gt;directory&lt;/em&gt; into this list. By using this method, the image files of an applications can also be located using the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tixは、&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;メソッドが画像ファイルを検索するディレクトリのリストを保持しています。標準のビットマップディレクトリは &lt;code&gt;$TIX_LIBRARY/bitmaps&lt;/code&gt; です。&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;メソッドが追加され&lt;em&gt;たディレクトリを&lt;/em&gt;、このリストの中に。このメソッドを使用すると、&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;メソッドを使用してアプリケーションの画像ファイルを見つけることもできます。</target>
        </trans-unit>
        <trans-unit id="eb5cc0f84fc345c602dd1accf23180e03ce108cd" translate="yes" xml:space="preserve">
          <source>Tk</source>
          <target state="translated">Tk</target>
        </trans-unit>
        <trans-unit id="c0bdbcbd85b143d1bbb028bb2fa4b753ca6134ed" translate="yes" xml:space="preserve">
          <source>Tk (C)</source>
          <target state="translated">Tk (C)</target>
        </trans-unit>
        <trans-unit id="f509dfaac06925adf03162aba9fd793afe243fc6" translate="yes" xml:space="preserve">
          <source>Tk Option Data Types</source>
          <target state="translated">Tk オプションデータ型</target>
        </trans-unit>
        <trans-unit id="c53a361a926e329bf6ffb89e220c7fec5f066070" translate="yes" xml:space="preserve">
          <source>Tk Widget Styling Support</source>
          <target state="translated">Tkウィジェットのスタイリングサポート</target>
        </trans-unit>
        <trans-unit id="af7fb30a52b23b5f1a4ce655dbbf5d8f1a0c77d6" translate="yes" xml:space="preserve">
          <source>Tk Widgets (C and Tcl)</source>
          <target state="translated">Tk ウィジェット (C と Tcl)</target>
        </trans-unit>
        <trans-unit id="72cfa7078e79e3f8fa74407e53e2484711fe9f52" translate="yes" xml:space="preserve">
          <source>Tk allows you to register and unregister a callback function which will be called from the Tk mainloop when I/O is possible on a file descriptor. Only one handler may be registered per file descriptor. Example code:</source>
          <target state="translated">Tkでは、ファイルディスクリプタ上でI/Oが可能な場合にTkのメインループから呼び出されるコールバック関数を登録したり、登録解除したりすることができます。登録できるハンドラはファイルディスクリプタごとに1つだけです。コード例</target>
        </trans-unit>
        <trans-unit id="f9c74172242e29fa205d5a14dd18143d03ec1b82" translate="yes" xml:space="preserve">
          <source>Tk code:</source>
          <target state="translated">Tkコード。</target>
        </trans-unit>
        <trans-unit id="db9c46d3406df20ff79ee0d05fc1e0523161511a" translate="yes" xml:space="preserve">
          <source>Tk commands</source>
          <target state="translated">Tkコマンド</target>
        </trans-unit>
        <trans-unit id="9ab67afb1158f1675f3559e0d1e76cc6b3ded22f" translate="yes" xml:space="preserve">
          <source>Tk scripts are Tcl programs. Like all Tcl programs, Tk scripts are just lists of tokens separated by spaces. A Tk widget is just its &lt;em&gt;class&lt;/em&gt;, the &lt;em&gt;options&lt;/em&gt; that help configure it, and the &lt;em&gt;actions&lt;/em&gt; that make it do useful things.</source>
          <target state="translated">TkスクリプトはTclプログラムです。すべてのTclプログラムと同様に、Tkスクリプトはスペースで区切られたトークンの単なるリストです。Tkウィジェットは、その&lt;em&gt;クラス&lt;/em&gt;、ウィジェットの構成に役立つ&lt;em&gt;オプション&lt;/em&gt;、およびウィジェットを有用なものにする&lt;em&gt;アクション&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="c3b5d25f755fd5c2e9a68aade852dda180798ca5" translate="yes" xml:space="preserve">
          <source>Tk uses a list font name format, such as &lt;code&gt;{courier 10 bold}&lt;/code&gt;. Font sizes with positive numbers are measured in points; sizes with negative numbers are measured in pixels.</source>
          <target state="translated">Tkは、 &lt;code&gt;{courier 10 bold}&lt;/code&gt; などのリストフォント名形式を使用します。正の数のフォントサイズはポイントで測定されます。負の数のサイズはピクセル単位で測定されます。</target>
        </trans-unit>
        <trans-unit id="cb67a9e7545ab841eae0703e7e11ff4949e8a6ee" translate="yes" xml:space="preserve">
          <source>Tk was written by John Ousterhout while at Berkeley.</source>
          <target state="translated">Tkはバークレー在学中にJohn Ousterhoutが書いたものです。</target>
        </trans-unit>
        <trans-unit id="06adfc0de33394d65018332de578e6cb394c00e1" translate="yes" xml:space="preserve">
          <source>Tkinter 8.5 reference: a GUI for Python</source>
          <target state="translated">Tkinter 8.5 リファレンス:Python の GUI</target>
        </trans-unit>
        <trans-unit id="6ec43006272d1fcfb847df256c67b8a2a6239c06" translate="yes" xml:space="preserve">
          <source>Tkinter Event Field</source>
          <target state="translated">Tkinterイベントフィールド</target>
        </trans-unit>
        <trans-unit id="0fbf57570a8e11effb5b92aa3ee08d4bf37542b4" translate="yes" xml:space="preserve">
          <source>Tkinter Life Preserver</source>
          <target state="translated">トキンターライフプリザーバー</target>
        </trans-unit>
        <trans-unit id="9fa021c29a03731a173c392e3231b31c2bd9095b" translate="yes" xml:space="preserve">
          <source>Tkinter Modules</source>
          <target state="translated">Tkinterモジュール</target>
        </trans-unit>
        <trans-unit id="b5e71015433233c51b605020e48525d57df3c1e7" translate="yes" xml:space="preserve">
          <source>Tkinter docs from effbot</source>
          <target state="translated">effbotからのTkinterドキュメント</target>
        </trans-unit>
        <trans-unit id="06a7380bcaaa1bbf89848533bffc7cff78689da8" translate="yes" xml:space="preserve">
          <source>Tkinter documentation:</source>
          <target state="translated">Tkinterのドキュメント。</target>
        </trans-unit>
        <trans-unit id="2fec54ef5f25c7f02d2146e6f287430766b4fc73" translate="yes" xml:space="preserve">
          <source>Tkinter was written by Steen Lumholt and Guido van Rossum.</source>
          <target state="translated">Tkinterはステーン・ルムホルツとグイド・ファン・ロッサムが書いた。</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="879c4af9add81e668a804e6ea9a1c5883dd416eb" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;#numbers.Complex&quot;&gt;&lt;code&gt;Complex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; adds the operations that work on real numbers.</source>
          <target state="translated">&lt;a href=&quot;#numbers.Complex&quot;&gt; &lt;code&gt;Complex&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;実数上での操作その仕事を追加します。</target>
        </trans-unit>
        <trans-unit id="3bd521cceedef31b3760ed9bdf91114918bc9e2e" translate="yes" xml:space="preserve">
          <source>To access all registered implementations, use the read-only &lt;code&gt;registry&lt;/code&gt; attribute:</source>
          <target state="translated">登録されているすべての実装にアクセスするには、読み取り専用の &lt;code&gt;registry&lt;/code&gt; 属性を使用します。</target>
        </trans-unit>
        <trans-unit id="971e053b3ed2cc0c24e71a6572574d038bc6457b" translate="yes" xml:space="preserve">
          <source>To access an XML-RPC server through a HTTP proxy, you need to define a custom transport. The following example shows how:</source>
          <target state="translated">HTTP プロキシを使用して XML-RPC サーバーにアクセスするには、カスタム トランスポートを定義する必要があります。次の例はその方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e8d808ebfcaa2c8f47d64d028fa1df61739005e6" translate="yes" xml:space="preserve">
          <source>To access the individual &amp;ldquo;parts&amp;rdquo; (components) of a path, use the following property:</source>
          <target state="translated">パスの個々の「パーツ」（コンポーネント）にアクセスするには、次のプロパティを使用します：</target>
        </trans-unit>
        <trans-unit id="8a1f25391bef338f3d0259b12755749577aa4d1e" translate="yes" xml:space="preserve">
          <source>To accommodate reproducible processing of SMIME-signed messages &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; disables header folding for message parts of type &lt;code&gt;multipart/signed&lt;/code&gt; and all subparts.</source>
          <target state="translated">SMIME署名付きメッセージの再現可能な処理に対応するために、&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;はタイプ &lt;code&gt;multipart/signed&lt;/code&gt; のメッセージパーツとすべてのサブパーツのヘッダーフォールディングを無効にします。</target>
        </trans-unit>
        <trans-unit id="a9a65729549bdc5d764fa4370cbc185392d0a035" translate="yes" xml:space="preserve">
          <source>To achieve this, &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; supports some important concepts in an object-oriented way:</source>
          <target state="translated">これを実現するために、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;はオブジェクト指向の方法でいくつかの重要な概念をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f7545737cb159edd448e66fa7291368d57e7a6c9" translate="yes" xml:space="preserve">
          <source>To actually run a coroutine, asyncio provides three main mechanisms:</source>
          <target state="translated">実際にコアーチンを実行するために、asyncioは3つの主要なメカニズムを提供しています。</target>
        </trans-unit>
        <trans-unit id="528b73f2343087db111a62659169143d06137936" translate="yes" xml:space="preserve">
          <source>To add cleanup code that must be run even in the case of an exception, use &lt;code&gt;addModuleCleanup&lt;/code&gt;:</source>
          <target state="translated">例外が発生した場合でも実行する必要があるクリーンアップコードを追加するには、 &lt;code&gt;addModuleCleanup&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c8af2ff6b8a2161b58de4c051f7dc4e1c09233ad" translate="yes" xml:space="preserve">
          <source>To add overloaded implementations to the function, use the &lt;code&gt;register()&lt;/code&gt; attribute of the generic function. It is a decorator. For functions annotated with types, the decorator will infer the type of the first argument automatically:</source>
          <target state="translated">オーバーロードされた実装を関数に追加するには、ジェネリック関数の &lt;code&gt;register()&lt;/code&gt; 属性を使用します。デコレータです。型で注釈が付けられた関数の場合、デコレータは最初の引数の型を自動的に推測します：</target>
        </trans-unit>
        <trans-unit id="2f52605c001c2892c529e8e6e5591f7c13dce1a1" translate="yes" xml:space="preserve">
          <source>To align the end of a structure to the alignment requirement of a particular type, end the format with the code for that type with a repeat count of zero. See &lt;a href=&quot;#struct-examples&quot;&gt;Examples&lt;/a&gt;.</source>
          <target state="translated">構造体の終わりを特定の型の整列要件に揃えるには、繰り返し型がゼロのその型のコードでフォーマットを終了します。&lt;a href=&quot;#struct-examples&quot;&gt;例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="50a21e33352bea2bc96629d7a87f8894180a870a" translate="yes" xml:space="preserve">
          <source>To allow access to the original function for introspection and other purposes (e.g. bypassing a caching decorator such as &lt;a href=&quot;#functools.lru_cache&quot;&gt;&lt;code&gt;lru_cache()&lt;/code&gt;&lt;/a&gt;), this function automatically adds a &lt;code&gt;__wrapped__&lt;/code&gt; attribute to the wrapper that refers to the function being wrapped.</source>
          <target state="translated">イントロスペクションやその他の目的（&lt;a href=&quot;#functools.lru_cache&quot;&gt; &lt;code&gt;lru_cache()&lt;/code&gt; &lt;/a&gt;などのキャッシュデコレータをバイパスするなど）で元の関数へのアクセスを許可するために、この関数は、 &lt;code&gt;__wrapped__&lt;/code&gt; される関数を参照するラッパーに__wrapped__属性を自動的に追加します。</target>
        </trans-unit>
        <trans-unit id="d7e3f6ae6bebf84a668a5d330c26e9a9f0e8c8ca" translate="yes" xml:space="preserve">
          <source>To also capture standard error in the result, use &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt;:</source>
          <target state="translated">結果の標準エラーもキャプチャするには、 &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b40c02aa20e39d67b9f645180128720b8df1859c" translate="yes" xml:space="preserve">
          <source>To avoid confusing existing tools that analyze import statements and expect to find the modules they&amp;rsquo;re importing.</source>
          <target state="translated">インポート文を分析し、それらがインポートしているモジュールを見つけることを期待する既存のツールの混乱を避けるため。</target>
        </trans-unit>
        <trans-unit id="6fcd2ea1ec6b9fcb7a6ad1afd985d7ecdf73f53a" translate="yes" xml:space="preserve">
          <source>To avoid the task &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancellation&lt;/code&gt;&lt;/a&gt;, wrap it in &lt;a href=&quot;#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タスクの&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancellation&lt;/code&gt; &lt;/a&gt;を回避するには、それを&lt;a href=&quot;#asyncio.shield&quot;&gt; &lt;code&gt;shield()&lt;/code&gt; &lt;/a&gt;でラップします。</target>
        </trans-unit>
        <trans-unit id="cb7ed6c5f7af9fa2f11429ad240931ae400cd1a3" translate="yes" xml:space="preserve">
          <source>To be called just before drawing a shape to be filled.</source>
          <target state="translated">塗りつぶす図形を描く直前に呼び出されること。</target>
        </trans-unit>
        <trans-unit id="64d8c5cc57d55c3231722a4a870d260dd19d6c3e" translate="yes" xml:space="preserve">
          <source>To be directly usable as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, &lt;code&gt;os.DirEntry&lt;/code&gt; implements the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;として直接使用できるように、 &lt;code&gt;os.DirEntry&lt;/code&gt; は&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを実装しています。</target>
        </trans-unit>
        <trans-unit id="2aca75b7a1203ce8695faba0b01214c1fb557382" translate="yes" xml:space="preserve">
          <source>To be on the safe side, if you must pass a string gotten from a form to a shell command, you should make sure the string contains only alphanumeric characters, dashes, underscores, and periods.</source>
          <target state="translated">安全のために、フォームから取得した文字列をシェルコマンドに渡さなければならない場合は、文字列に英数字、ダッシュ、アンダースコア、ピリオドのみが含まれていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="1c9976abfa62062ca46d0102679c057214fc0d8e" translate="yes" xml:space="preserve">
          <source>To be secure against &lt;a href=&quot;https://en.wikipedia.org/wiki/Brute-force_attack&quot;&gt;brute-force attacks&lt;/a&gt;, tokens need to have sufficient randomness. Unfortunately, what is considered sufficient will necessarily increase as computers get more powerful and able to make more guesses in a shorter period. As of 2015, it is believed that 32 bytes (256 bits) of randomness is sufficient for the typical use-case expected for the &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Brute-force_attack&quot;&gt;ブルートフォース攻撃&lt;/a&gt;から保護するには、トークンに十分なランダム性が必要です。残念ながら、コンピュータがより強力になり、より短い期間でより多くの推測を行うことができるようになると、十分と見なされるものが必然的に増加します。2015年の時点では、32バイト（256ビット）のランダム性で、&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;モジュールに期待される典型的なユースケースには十分であると考えられています。</target>
        </trans-unit>
        <trans-unit id="f7b8e37c3ead7bb7e82354e263d6bbb12e469ece" translate="yes" xml:space="preserve">
          <source>To build a functioning &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; subclass your input methods &lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt;&lt;code&gt;collect_incoming_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt;&lt;code&gt;found_terminator()&lt;/code&gt;&lt;/a&gt; must handle the data that the channel receives asynchronously. The methods are described below.</source>
          <target state="translated">機能する&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;サブクラスを構築するには、インプットメソッド&lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt; &lt;code&gt;collect_incoming_data()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt; &lt;code&gt;found_terminator()&lt;/code&gt; &lt;/a&gt;が、チャネルが非同期に受信するデータを処理する必要があります。以下にその方法を示します。</target>
        </trans-unit>
        <trans-unit id="45163f5e6e9d3d755a0aa4e4a2cad96a7b22f1a9" translate="yes" xml:space="preserve">
          <source>To build asynchronous handlers, use the &lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt;&lt;code&gt;ThreadingMixIn&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">非同期ハンドラーを構築するには、&lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt; &lt;code&gt;ThreadingMixIn&lt;/code&gt; &lt;/a&gt;クラスと&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="c0f3473b7a087f24c025a3a486b154bb9e21ac1a" translate="yes" xml:space="preserve">
          <source>To calculate hash of some data, you should first construct a hash object by calling the appropriate constructor function (&lt;a href=&quot;#hashlib.blake2b&quot;&gt;&lt;code&gt;blake2b()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#hashlib.blake2s&quot;&gt;&lt;code&gt;blake2s()&lt;/code&gt;&lt;/a&gt;), then update it with the data by calling &lt;code&gt;update()&lt;/code&gt; on the object, and, finally, get the digest out of the object by calling &lt;code&gt;digest()&lt;/code&gt; (or &lt;code&gt;hexdigest()&lt;/code&gt; for hex-encoded string).</source>
          <target state="translated">一部のデータのハッシュを計算するには、まず適切なコンストラクター関数（&lt;a href=&quot;#hashlib.blake2b&quot;&gt; &lt;code&gt;blake2b()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#hashlib.blake2s&quot;&gt; &lt;code&gt;blake2s()&lt;/code&gt; &lt;/a&gt;）を呼び出してハッシュオブジェクトを作成し、次にオブジェクトに対して &lt;code&gt;update()&lt;/code&gt; を呼び出してデータで更新し、最後に取得する必要があります。 &lt;code&gt;digest()&lt;/code&gt; （または16進エンコードされた文字列の場合は &lt;code&gt;hexdigest()&lt;/code&gt; )を呼び出して、オブジェクトからダイジェストを取り出します。</target>
        </trans-unit>
        <trans-unit id="8c8e11f7a995dea282995d88782e0aabb4b1ae1b" translate="yes" xml:space="preserve">
          <source>To cancel a running Task use the &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; method. Calling it will cause the Task to throw a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception into the wrapped coroutine. If a coroutine is awaiting on a Future object during cancellation, the Future object will be cancelled.</source>
          <target state="translated">実行中のタスクをキャンセルするには、&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。これを呼び出すと、タスクはラップされたコルーチンに&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;例外をスローします。キャンセル中にコルーチンがFutureオブジェクトで待機している場合、Futureオブジェクトはキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="8e63c10e490c41b2c85c5886452a96e3ecc37d68" translate="yes" xml:space="preserve">
          <source>To change this default behavior, another value can be supplied using the &lt;code&gt;prog=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このデフォルトの動作を変更するには、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;prog=&lt;/code&gt; 引数を使用して別の値を指定できます。</target>
        </trans-unit>
        <trans-unit id="b6e34501a464650fe6316c88682b19ff1b8ffe1a" translate="yes" xml:space="preserve">
          <source>To check that a module&amp;rsquo;s docstrings are up-to-date by verifying that all interactive examples still work as documented.</source>
          <target state="translated">モジュールのドキュメント文字列が最新であることを確認するには、すべてのインタラクティブな例がドキュメントどおりに機能することを確認します。</target>
        </trans-unit>
        <trans-unit id="203e5ed47bfbabd7adfd3c9726f43e77f390c583" translate="yes" xml:space="preserve">
          <source>To check what font a Button uses by default:</source>
          <target state="translated">ボタンがデフォルトで使用しているフォントを確認します。</target>
        </trans-unit>
        <trans-unit id="b839a91668c3944755e3b7d093c803d5bfd881aa" translate="yes" xml:space="preserve">
          <source>To check whether a particular function accepts &lt;code&gt;False&lt;/code&gt; for its &lt;em&gt;follow_symlinks&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_follow_symlinks&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if you may specify &lt;code&gt;follow_symlinks=False&lt;/code&gt; when calling &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; on the local platform:</source>
          <target state="translated">特定の関数が&lt;em&gt;follow_symlinks&lt;/em&gt;パラメーターに &lt;code&gt;False&lt;/code&gt; を受け入れるかどうかを確認するには、&lt;em&gt;supports_follow_symlinks &lt;/em&gt; &lt;code&gt;in&lt;/code&gt; 演算子を使用し &lt;code&gt;supports_follow_symlinks&lt;/code&gt; 。例として、ローカルプラットフォームで&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;を呼び出すときに &lt;code&gt;follow_symlinks=False&lt;/code&gt; を指定できる場合、この式は &lt;code&gt;True&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="6a19f8267a804bed2cc6e4cb5709e33adda2cd86" translate="yes" xml:space="preserve">
          <source>To check whether a particular function accepts an open file descriptor for its &lt;em&gt;dir_fd&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_dir_fd&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; accepts open file descriptors for &lt;em&gt;dir_fd&lt;/em&gt; on the local platform:</source>
          <target state="translated">特定の関数が&lt;em&gt;dir_fd&lt;/em&gt;パラメーターのオープンファイル記述子を受け入れるかどうかを確認するには、&lt;em&gt;supports_dir_fd &lt;/em&gt; &lt;code&gt;in&lt;/code&gt; 演算子を使用し &lt;code&gt;supports_dir_fd&lt;/code&gt; 。例として、&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;がローカルプラットフォーム上の&lt;em&gt;dir_fdの&lt;/em&gt;オープンファイル記述子を受け入れる場合、この式は &lt;code&gt;True&lt;/code&gt; と評価されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a5093ea51a15238b4b1605167c69ad6fd7b7468" translate="yes" xml:space="preserve">
          <source>To check which implementation will the generic function choose for a given type, use the &lt;code&gt;dispatch()&lt;/code&gt; attribute:</source>
          <target state="translated">特定の型に対してジェネリック関数がどの実装を選択するかを確認するには、 &lt;code&gt;dispatch()&lt;/code&gt; 属性を使用します。</target>
        </trans-unit>
        <trans-unit id="cffbae74923f0c8f4bcee465ec4c25d8823c6b00" translate="yes" xml:space="preserve">
          <source>To choose a sample from a range of integers, use a &lt;a href=&quot;stdtypes#range&quot;&gt;&lt;code&gt;range()&lt;/code&gt;&lt;/a&gt; object as an argument. This is especially fast and space efficient for sampling from a large population: &lt;code&gt;sample(range(10000000), k=60)&lt;/code&gt;.</source>
          <target state="translated">整数の範囲からサンプルを選択するには、引数として&lt;a href=&quot;stdtypes#range&quot;&gt; &lt;code&gt;range()&lt;/code&gt; &lt;/a&gt;オブジェクトを使用します。これは、大規模な母集団からのサンプリングに特に高速でスペース効率が良いです： &lt;code&gt;sample(range(10000000), k=60)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b7dd8c80cfe20bb2e14df7147ef117b8925618f" translate="yes" xml:space="preserve">
          <source>To choose between &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt;, consider whether one state change can be interesting for only one or several waiting threads. E.g. in a typical producer-consumer situation, adding one item to the buffer only needs to wake up one consumer thread.</source>
          <target state="translated">&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; の&lt;/a&gt;どちらかを選択するには、1つの状態変更が1つまたは複数の待機中のスレッドのみに関係するかどうかを検討してください。たとえば、一般的なプロデューサー/コンシューマーの状況では、1つのアイテムをバッファーに追加するときに必要なのは、1つのコンシューマースレッドを起動することだけです。</target>
        </trans-unit>
        <trans-unit id="41195aa7846cfb32030566deca5632cd7690db94" translate="yes" xml:space="preserve">
          <source>To clarify the above rules, here&amp;rsquo;s some example Python code, equivalent to the built-in hash, for computing the hash of a rational number, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">上記のルールを明確にするために、有理数、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;数、または&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;のハッシュを計算するための組み込みハッシュに相当するPythonコードの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="5b14bc137208bc1c60d307e4cf65b6dfa3f703a0" translate="yes" xml:space="preserve">
          <source>To collect the inner text of an element, see &lt;a href=&quot;#xml.etree.ElementTree.Element.itertext&quot;&gt;&lt;code&gt;itertext()&lt;/code&gt;&lt;/a&gt;, for example &lt;code&gt;&quot;&quot;.join(element.itertext())&lt;/code&gt;.</source>
          <target state="translated">要素の内部テキストを収集するには、 &lt;code&gt;&quot;&quot;.join(element.itertext())&lt;/code&gt; などの&lt;a href=&quot;#xml.etree.ElementTree.Element.itertext&quot;&gt; &lt;code&gt;itertext()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="90f8874e7ddc4712ffa50b77f81e993f131bedbd" translate="yes" xml:space="preserve">
          <source>To compile the executable, you can either just use the standard MSVC command line tools, or you can take advantage of the fact that distutils knows how to compile Python source:</source>
          <target state="translated">実行ファイルをコンパイルするには、標準の MSVC コマンドラインツールを使うか、distutils が Python ソースのコンパイル方法を知っているという事実を利用するかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="f05187baf6012be5553f969aef8548cf6b88338a" translate="yes" xml:space="preserve">
          <source>To compute the product of an iterable with itself, specify the number of repetitions with the optional &lt;em&gt;repeat&lt;/em&gt; keyword argument. For example, &lt;code&gt;product(A, repeat=4)&lt;/code&gt; means the same as &lt;code&gt;product(A, A, A, A)&lt;/code&gt;.</source>
          <target state="translated">反復可能オブジェクトとそれ自体の積を計算するには、オプションの&lt;em&gt;repeat&lt;/em&gt;キーワード引数を使用して反復回数を指定します。たとえば、 &lt;code&gt;product(A, repeat=4)&lt;/code&gt; は、 &lt;code&gt;product(A, A, A, A)&lt;/code&gt; と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="7e49a1c57330c177b754abd74b01b2d48765dccf" translate="yes" xml:space="preserve">
          <source>To configure return values on methods of &lt;em&gt;instances&lt;/em&gt; on the patched class you must do this on the &lt;code&gt;return_value&lt;/code&gt;. For example:</source>
          <target state="translated">パッチを適用したクラスの&lt;em&gt;インスタンスの&lt;/em&gt;メソッドで戻り値を構成するには、 &lt;code&gt;return_value&lt;/code&gt; でこれを行う必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="eaae56af4b61d6444086b8fd2c7dd4d70db5a251" translate="yes" xml:space="preserve">
          <source>To configure the tree column heading, call this with column = &amp;ldquo;#0&amp;rdquo;.</source>
          <target state="translated">ツリーの列見出しを構成するには、column =&amp;ldquo;＃0&amp;rdquo;でこれを呼び出します。</target>
        </trans-unit>
        <trans-unit id="40e519f199f0660c1da27aa291b04f750c9d1934" translate="yes" xml:space="preserve">
          <source>To configure the tree column, call this with column = &amp;ldquo;#0&amp;rdquo;</source>
          <target state="translated">ツリー列を構成するには、これをcolumn =&amp;ldquo;＃0&amp;rdquo;で呼び出します。</target>
        </trans-unit>
        <trans-unit id="22dec9507a65d01d963843a88d1fb9139886cc92" translate="yes" xml:space="preserve">
          <source>To convert a dictionary to a named tuple, use the double-star-operator (as described in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;Unpacking Argument Lists&lt;/a&gt;):</source>
          <target state="translated">辞書を名前付きタプルに変換するには、double-star-operatorを使用します（&lt;a href=&quot;https://docs.python.org/3.8/tutorial/controlflow.html#tut-unpacking-arguments&quot;&gt;引数リストの解凍で&lt;/a&gt;説明されています）。</target>
        </trans-unit>
        <trans-unit id="aca86a0be8c48cdfd48ca2728336953279aaed88" translate="yes" xml:space="preserve">
          <source>To copy all mail from a Babyl mailbox to an MH mailbox, converting all of the format-specific information that can be converted:</source>
          <target state="translated">バビルのメールボックスからMHのメールボックスに全てのメールをコピーするために、変換できるフォーマット固有の情報を全て変換します。</target>
        </trans-unit>
        <trans-unit id="a7a4d66aac534d7a89b1d842a9b4699051775cbd" translate="yes" xml:space="preserve">
          <source>To create a heap, use a list initialized to &lt;code&gt;[]&lt;/code&gt;, or you can transform a populated list into a heap via function &lt;a href=&quot;#heapq.heapify&quot;&gt;&lt;code&gt;heapify()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヒープを作成するには、 &lt;code&gt;[]&lt;/code&gt; に初期化されたリストを使用するか、関数&lt;a href=&quot;#heapq.heapify&quot;&gt; &lt;code&gt;heapify()&lt;/code&gt; &lt;/a&gt;を使用して、入力されたリストをヒープに変換できます。</target>
        </trans-unit>
        <trans-unit id="a67c0ed9117c7f46c3f4e7b0dc05a0ed833eaec5" translate="yes" xml:space="preserve">
          <source>To create one&amp;rsquo;s own manager, one creates a subclass of &lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; and uses the &lt;a href=&quot;#multiprocessing.managers.BaseManager.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; classmethod to register new types or callables with the manager class. For example:</source>
          <target state="translated">独自のマネージャーを作成するには、&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; の&lt;/a&gt;サブクラスを作成し、&lt;a href=&quot;#multiprocessing.managers.BaseManager.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;クラスメソッドを使用して、マネージャークラスに新しいタイプまたは呼び出し可能オブジェクトを登録します。例えば：</target>
        </trans-unit>
        <trans-unit id="def08ca7414daf6c9ffb9d1b7d48a4054a6f3646" translate="yes" xml:space="preserve">
          <source>To define a generic function, decorate it with the &lt;code&gt;@singledispatch&lt;/code&gt; decorator. Note that the dispatch happens on the type of the first argument, create your function accordingly:</source>
          <target state="translated">ジェネリック関数を定義するには、 &lt;code&gt;@singledispatch&lt;/code&gt; デコレーターで修飾します。ディスパッチは最初の引数のタイプで行われることに注意してください。それに応じて関数を作成します。</target>
        </trans-unit>
        <trans-unit id="ec0a2fc9637c4cdce9a5093c1c6fc720d969cd66" translate="yes" xml:space="preserve">
          <source>To define a generic method, decorate it with the &lt;code&gt;@singledispatchmethod&lt;/code&gt; decorator. Note that the dispatch happens on the type of the first non-self or non-cls argument, create your function accordingly:</source>
          <target state="translated">ジェネリックメソッドを定義するには、 &lt;code&gt;@singledispatchmethod&lt;/code&gt; デコレーターでデコレートします。ディスパッチは最初のnon-selfまたはnon-cls引数のタイプで発生することに注意してください。それに応じて関数を作成します。</target>
        </trans-unit>
        <trans-unit id="53e197460df6a7ae10480906b29b24cc193de048" translate="yes" xml:space="preserve">
          <source>To define a union, use e.g. &lt;code&gt;Union[int, str]&lt;/code&gt;. Details:</source>
          <target state="translated">共用体を定義するには、例えば &lt;code&gt;Union[int, str]&lt;/code&gt; 使用します。詳細：</target>
        </trans-unit>
        <trans-unit id="c3927e01fc5b5632db956bd430c64a9a003d5d89" translate="yes" xml:space="preserve">
          <source>To demonstrate several uses of the &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; function and its parameters, let&amp;rsquo;s fetch information about a project from &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; &lt;/a&gt;関数とそのパラメーターのいくつかの使用法を示すために、プロジェクトに関する情報を&lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt;からフェッチします。</target>
        </trans-unit>
        <trans-unit id="424ceed038a8907eb2e5c3e3261ed2cb0006ff29" translate="yes" xml:space="preserve">
          <source>To determine whether a particular function permits specifying an open file descriptor for its &lt;em&gt;path&lt;/em&gt; parameter, use the &lt;code&gt;in&lt;/code&gt; operator on &lt;code&gt;supports_fd&lt;/code&gt;. As an example, this expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.chdir&quot;&gt;&lt;code&gt;os.chdir()&lt;/code&gt;&lt;/a&gt; accepts open file descriptors for &lt;em&gt;path&lt;/em&gt; on your local platform:</source>
          <target state="translated">特定の関数がその&lt;em&gt;path&lt;/em&gt;パラメーターにオープンファイル記述子を指定できるかどうかを判断するには、 &lt;code&gt;supports_fd&lt;/code&gt; &lt;code&gt;in&lt;/code&gt; 演算子を使用します。例として、&lt;a href=&quot;#os.chdir&quot;&gt; &lt;code&gt;os.chdir()&lt;/code&gt; が&lt;/a&gt;ローカルプラットフォーム上の&lt;em&gt;パスの&lt;/em&gt;オープンファイル記述子を受け入れる場合、この式は &lt;code&gt;True&lt;/code&gt; と評価されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1054223eda970969071e95bb7d866ebfd8c752ad" translate="yes" xml:space="preserve">
          <source>To disable autodetected proxy pass an empty dictionary.</source>
          <target state="translated">自動検出プロキシを無効にするには、空の辞書を渡します。</target>
        </trans-unit>
        <trans-unit id="f9cab41974091422ee9f72c252520e5936e0afb6" translate="yes" xml:space="preserve">
          <source>To do just the former:</source>
          <target state="translated">前者だけをやること。</target>
        </trans-unit>
        <trans-unit id="c80beb2d9874cb37ef475b5e1a40bd3aa13b619d" translate="yes" xml:space="preserve">
          <source>To document when incompatible changes were introduced, and when they will be &amp;mdash; or were &amp;mdash; made mandatory. This is a form of executable documentation, and can be inspected programmatically via importing &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; and examining its contents.</source>
          <target state="translated">互換性のない変更がいつ導入されたか、およびそれらがいつ義務付けられるか、あるいは義務付けられたかを文書化する。これは実行可能なドキュメントの形式であり、&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;をインポートしてその内容を調べることにより、プログラムで検査できます。</target>
        </trans-unit>
        <trans-unit id="2bebf05987b55dff22afd0eef3267ff60584d0ea" translate="yes" xml:space="preserve">
          <source>To ease the use of various types of files, the argparse module provides the factory FileType which takes the &lt;code&gt;mode=&lt;/code&gt;, &lt;code&gt;bufsize=&lt;/code&gt;, &lt;code&gt;encoding=&lt;/code&gt; and &lt;code&gt;errors=&lt;/code&gt; arguments of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. For example, &lt;code&gt;FileType('w')&lt;/code&gt; can be used to create a writable file:</source>
          <target state="translated">さまざまなタイプのファイルの使用を容易にするために、argparseモジュールは、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数の &lt;code&gt;mode=&lt;/code&gt; 、 &lt;code&gt;bufsize=&lt;/code&gt; 、 &lt;code&gt;encoding=&lt;/code&gt; 、および &lt;code&gt;errors=&lt;/code&gt; 引数を取るファクトリーFileTypeを提供します。たとえば、 &lt;code&gt;FileType('w')&lt;/code&gt; を使用して、書き込み可能なファイルを作成できます。</target>
        </trans-unit>
        <trans-unit id="7c54845e78ca91a3d466e12c51c7e58cd7c952c9" translate="yes" xml:space="preserve">
          <source>To enable easier handling of syslog messages in the face of all these differing daemon behaviours, the appending of the NUL byte has been made configurable, through the use of a class-level attribute, &lt;code&gt;append_nul&lt;/code&gt;. This defaults to &lt;code&gt;True&lt;/code&gt; (preserving the existing behaviour) but can be set to &lt;code&gt;False&lt;/code&gt; on a &lt;code&gt;SysLogHandler&lt;/code&gt; instance in order for that instance to &lt;em&gt;not&lt;/em&gt; append the NUL terminator.</source>
          <target state="translated">これらの異なるデーモンの動作すべてに直面してsyslogメッセージをより簡単に処理できるようにするために、クラスレベルの属性 &lt;code&gt;append_nul&lt;/code&gt; を使用することにより、NULバイトの追加が構成可能になっています。これはデフォルトで &lt;code&gt;True&lt;/code&gt; （既存の動作を維持）ですが、 &lt;code&gt;SysLogHandler&lt;/code&gt; インスタンスでNULターミネーターを追加し&lt;em&gt;ない&lt;/em&gt;ように、 &lt;code&gt;False&lt;/code&gt; に設定できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc49076076cfe4da08bd1523950aa22f8527f645" translate="yes" xml:space="preserve">
          <source>To enable registering lambdas and pre-existing functions, the &lt;code&gt;register()&lt;/code&gt; attribute can be used in a functional form:</source>
          <target state="translated">ラムダと既存の関数の登録を有効にするには、 &lt;code&gt;register()&lt;/code&gt; 属性を関数形式で使用できます。</target>
        </trans-unit>
        <trans-unit id="e6d29707b8a46ad95075a2f46ea912153c6feb3e" translate="yes" xml:space="preserve">
          <source>To enable this feature, simply add this to the top of your CGI script:</source>
          <target state="translated">この機能を有効にするには、これを CGI スクリプトの先頭に追加します。</target>
        </trans-unit>
        <trans-unit id="83bc49702d610686bdeda107bfc7569cda15cc78" translate="yes" xml:space="preserve">
          <source>To enable, pass a &lt;em&gt;depth&lt;/em&gt; value greater than zero; this sets the number of frames whose information will be captured. To disable, pass set &lt;em&gt;depth&lt;/em&gt; to zero.</source>
          <target state="translated">有効にするには、ゼロより大きい&lt;em&gt;深度&lt;/em&gt;値を渡します。これは、情報がキャプチャされるフレームの数を設定します。無効にするには、&lt;em&gt;深度&lt;/em&gt;をゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="668347bab37e711c30026491f866da05c6606f00" translate="yes" xml:space="preserve">
          <source>To encode &lt;code&gt;str&lt;/code&gt; filenames to &lt;code&gt;bytes&lt;/code&gt;, use &lt;a href=&quot;#os.fsencode&quot;&gt;&lt;code&gt;fsencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; ファイル名を &lt;code&gt;bytes&lt;/code&gt; エンコードするには、&lt;a href=&quot;#os.fsencode&quot;&gt; &lt;code&gt;fsencode()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="9ce50989ce66ad69407e9680bd28212c88a6fa36" translate="yes" xml:space="preserve">
          <source>To ensure that &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;future statements&lt;/a&gt; run under releases prior to 2.1 at least yield runtime exceptions (the import of &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; will fail, because there was no module of that name prior to 2.1).</source>
          <target state="translated">2.1より前のリリースで&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#future&quot;&gt;将来のステートメントが&lt;/a&gt;実行されるようにするには、少なくともランタイム例外が発生します（2.1より前のその名前のモジュールがなかったため、&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;のインポートは失敗します）。</target>
        </trans-unit>
        <trans-unit id="ad4b05251097cbcad85d3ec00b6a8d792705b9f3" translate="yes" xml:space="preserve">
          <source>To ensure validity of the created memory mapping the file specified by the descriptor &lt;em&gt;fileno&lt;/em&gt; is internally automatically synchronized with physical backing store on Mac OS X and OpenVMS.</source>
          <target state="translated">作成されたメモリマッピングの有効性を保証するために、記述子&lt;em&gt;filenoで&lt;/em&gt;指定されたファイルは、Mac OS XおよびOpenVMS上の物理バッキングストアと内部で自動的に同期されます。</target>
        </trans-unit>
        <trans-unit id="ec99a7a8d8cca50de20982646e9d30ebc48118e8" translate="yes" xml:space="preserve">
          <source>To enumerate all distinct multisets of a given size over a given set of elements, see &lt;a href=&quot;itertools#itertools.combinations_with_replacement&quot;&gt;&lt;code&gt;itertools.combinations_with_replacement()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要素の特定のセットに対する特定のサイズのすべての異なるマルチセットを列挙するには、&lt;a href=&quot;itertools#itertools.combinations_with_replacement&quot;&gt; &lt;code&gt;itertools.combinations_with_replacement()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="898a56a1cfb92055d38cc5a56c7cdec6b0701f08" translate="yes" xml:space="preserve">
          <source>To estimate the distribution for a model than isn&amp;rsquo;t easy to solve analytically, &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; can generate input samples for a &lt;a href=&quot;https://en.wikipedia.org/wiki/Monte_Carlo_method&quot;&gt;Monte Carlo simulation&lt;/a&gt;:</source>
          <target state="translated">解析的に解決するのが&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt;モデルの分布を推定するために、NormalDistは&lt;a href=&quot;https://en.wikipedia.org/wiki/Monte_Carlo_method&quot;&gt;モンテカルロシミュレーションの&lt;/a&gt;入力サンプルを生成できます。</target>
        </trans-unit>
        <trans-unit id="2437b05ca67db6b8d2019788d70624cc8482ee86" translate="yes" xml:space="preserve">
          <source>To extend this to recognize other objects, subclass and implement a &lt;a href=&quot;#json.JSONEncoder.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt; method with another method that returns a serializable object for &lt;code&gt;o&lt;/code&gt; if possible, otherwise it should call the superclass implementation (to raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">これを拡張して他のオブジェクトを認識するには、可能な場合は &lt;code&gt;o&lt;/code&gt; の直列化可能オブジェクトを返す別のメソッドで&lt;a href=&quot;#json.JSONEncoder.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt;メソッドをサブクラス化して実装します。そうでない場合は、スーパークラス実装を呼び出します（&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生&lt;/a&gt;させるため）。</target>
        </trans-unit>
        <trans-unit id="0b9e1f981c214898a9d71b2ad2be102d9cb21352" translate="yes" xml:space="preserve">
          <source>To extract the filename and numbers from a string like</source>
          <target state="translated">のような文字列からファイル名と数字を抽出するには</target>
        </trans-unit>
        <trans-unit id="64c57258a9a2df67300aa5e1b50e7550f07b07d6" translate="yes" xml:space="preserve">
          <source>To fill in &lt;em&gt;fmt&lt;/em&gt;, execute &lt;code&gt;fmt % part_info&lt;/code&gt;, where &lt;code&gt;part_info&lt;/code&gt; is a dictionary composed of the following keys and values:</source>
          <target state="translated">埋めるために&lt;em&gt;、FMT&lt;/em&gt;、実行 &lt;code&gt;fmt % part_info&lt;/code&gt; 、ここ &lt;code&gt;part_info&lt;/code&gt; は以下のキーと値からなる辞書です。</target>
        </trans-unit>
        <trans-unit id="7958039c320a93b4dae438db3d31f1e69c695544" translate="yes" xml:space="preserve">
          <source>To find out the correct calling convention you have to look into the C header file or the documentation for the function you want to call.</source>
          <target state="translated">正しい呼び出し規則を知るためには、Cのヘッダファイルや呼び出したい関数のドキュメントを調べなければなりません。</target>
        </trans-unit>
        <trans-unit id="b76d7e840b24dc0f55fd8a37a5d7e8f61bf8991d" translate="yes" xml:space="preserve">
          <source>To find out what card the pair consists of, one could use the &lt;a href=&quot;#re.Match.group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; method of the match object in the following manner:</source>
          <target state="translated">ペアがどのカードで構成されているかを調べるには、次の方法で、一致オブジェクトの&lt;a href=&quot;#re.Match.group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="cba99c69fa84b2f2263e7863f73140aabcbd1b17" translate="yes" xml:space="preserve">
          <source>To find the handler, look for the following keys in the registry, stopping with the first one found:</source>
          <target state="translated">ハンドラを見つけるには、レジストリ内の以下のキーを探し、最初に見つかったキーで停止します。</target>
        </trans-unit>
        <trans-unit id="a06e17885d0bbc13034b00f92ad215110abd6ebf" translate="yes" xml:space="preserve">
          <source>To find the handler, obtain the type of &lt;em&gt;obj&lt;/em&gt; (&lt;code&gt;typ = type(obj)&lt;/code&gt;), and look for the following keys in the registry, stopping with the first one found:</source>
          <target state="translated">ハンドラを見つけるには、&lt;em&gt;obj&lt;/em&gt;のタイプ（ &lt;code&gt;typ = type(obj)&lt;/code&gt; ）を取得し、レジストリで次のキーを探します。最初に見つかったキーで停止します。</target>
        </trans-unit>
        <trans-unit id="fa5f6e01845faa817f7bbcccd8a26a392e5b5f5b" translate="yes" xml:space="preserve">
          <source>To find the name of the file containing the object.</source>
          <target state="translated">オブジェクトを含むファイルの名前を検索します。</target>
        </trans-unit>
        <trans-unit id="7ba93089e99aaca64717295e4916acb713510642" translate="yes" xml:space="preserve">
          <source>To force a recompile of all the &lt;code&gt;.py&lt;/code&gt; files in the &lt;code&gt;Lib/&lt;/code&gt; subdirectory and all its subdirectories:</source>
          <target state="translated">&lt;code&gt;Lib/&lt;/code&gt; サブディレクトリとそのすべてのサブディレクトリにあるすべての &lt;code&gt;.py&lt;/code&gt; ファイルを強制的に再コンパイルするには：</target>
        </trans-unit>
        <trans-unit id="35bebc28881a876ed876e6f04e3b4c2f536762a9" translate="yes" xml:space="preserve">
          <source>To format only a tuple you should therefore provide a singleton tuple whose only element is the tuple to be formatted.</source>
          <target state="translated">タプルのみをフォーマットするには、そのため、フォーマットされるタプルの要素のみを持つシングルトンタプルを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="332786b03f1a7ce007ac7b10bd4b080b17a03a5c" translate="yes" xml:space="preserve">
          <source>To generate a hash of a password using the strongest available method and check it against the original:</source>
          <target state="translated">利用可能な最も強力な方法を使用してパスワードのハッシュを生成し、それを元のものと照合する。</target>
        </trans-unit>
        <trans-unit id="06c31764bc0616e4052301f18b4bda631b48f9b9" translate="yes" xml:space="preserve">
          <source>To get an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object, call &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">認識される&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトを取得するには、&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="f6536929738b6302b242f75ab30f3360374015a5" translate="yes" xml:space="preserve">
          <source>To get at submitted form data, use the &lt;code&gt;FieldStorage&lt;/code&gt; class. If the form contains non-ASCII characters, use the &lt;em&gt;encoding&lt;/em&gt; keyword parameter set to the value of the encoding defined for the document. It is usually contained in the META tag in the HEAD section of the HTML document or by the &lt;em&gt;Content-Type&lt;/em&gt; header). This reads the form contents from the standard input or the environment (depending on the value of various environment variables set according to the CGI standard). Since it may consume standard input, it should be instantiated only once.</source>
          <target state="translated">送信されたフォームデータを取得するには、 &lt;code&gt;FieldStorage&lt;/code&gt; クラスを使用します。フォームに非ASCII文字が含まれている場合は、ドキュメントに定義されているエンコーディングの値に設定された&lt;em&gt;encoding&lt;/em&gt;キーワードパラメータを使用します。通常は、HTMLドキュメントのHEADセクションのMETAタグに含まれるか、&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに含まれます。これは、標準入力または環境からフォームの内容を読み取ります（CGI標準に従って設定されたさまざまな環境変数の値によって異なります）。標準入力を消費する可能性があるため、インスタンス化は1回だけにする必要があります。</target>
        </trans-unit>
        <trans-unit id="ab0473a669281e7d941bb9f45175bd85a5a4f97c" translate="yes" xml:space="preserve">
          <source>To get at the &amp;ldquo;64-bitness&amp;rdquo; of the current interpreter, it is more reliable to query the &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">現在のインタプリタの「64ビット」を取得するには、&lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;属性をクエリする方が信頼性が高くなります。</target>
        </trans-unit>
        <trans-unit id="cbc6bb2323f202cb1f1a72bf35bb7dcec42b3136" translate="yes" xml:space="preserve">
          <source>To get at the toplevel window that contains a given widget, you can often just refer to the widget&amp;rsquo;s master. Of course if the widget has been packed inside of a frame, the master won&amp;rsquo;t represent a toplevel window. To get at the toplevel window that contains an arbitrary widget, you can call the &lt;code&gt;_root()&lt;/code&gt; method. This method begins with an underscore to denote the fact that this function is part of the implementation, and not an interface to Tk functionality.</source>
          <target state="translated">特定のウィジェットを含むトップレベルウィンドウを表示するには、多くの場合、ウィジェットのマスターを参照するだけです。もちろん、ウィジェットがフレーム内にパックされている場合、マスターはトップレベルウィンドウを表しません。任意のウィジェットを含むトップレベルウィンドウにアクセスするには、 &lt;code&gt;_root()&lt;/code&gt; メソッドを呼び出します。このメソッドはアンダースコアで始まり、この関数は実装の一部であり、Tk機能へのインターフェースではないことを示しています。</target>
        </trans-unit>
        <trans-unit id="7cbd4a63827073f5739e1664d7bb9679b9a9e8fa" translate="yes" xml:space="preserve">
          <source>To get fine-grained control over the copied region, the second form of &lt;a href=&quot;#curses.window.overlay&quot;&gt;&lt;code&gt;overlay()&lt;/code&gt;&lt;/a&gt; can be used. &lt;em&gt;sminrow&lt;/em&gt; and &lt;em&gt;smincol&lt;/em&gt; are the upper-left coordinates of the source window, and the other variables mark a rectangle in the destination window.</source>
          <target state="translated">コピーされた領域をきめ細かく制御するには、&lt;a href=&quot;#curses.window.overlay&quot;&gt; &lt;code&gt;overlay()&lt;/code&gt; の&lt;/a&gt; 2番目の形式を使用できます。&lt;em&gt;sminrow&lt;/em&gt;と&lt;em&gt;smincol&lt;/em&gt;はソースウィンドウの左上座標であり、他の変数は宛先ウィンドウの長方形を示します。</target>
        </trans-unit>
        <trans-unit id="b1f50e6db25d673b2592cd594d33fefebf9e6b13" translate="yes" xml:space="preserve">
          <source>To get fine-grained control over the copied region, the second form of &lt;a href=&quot;#curses.window.overwrite&quot;&gt;&lt;code&gt;overwrite()&lt;/code&gt;&lt;/a&gt; can be used. &lt;em&gt;sminrow&lt;/em&gt; and &lt;em&gt;smincol&lt;/em&gt; are the upper-left coordinates of the source window, the other variables mark a rectangle in the destination window.</source>
          <target state="translated">コピーされた領域をきめ細かく制御するには、&lt;a href=&quot;#curses.window.overwrite&quot;&gt; &lt;code&gt;overwrite()&lt;/code&gt; の&lt;/a&gt; 2番目の形式を使用できます。&lt;em&gt;sminrow&lt;/em&gt;と&lt;em&gt;smincol&lt;/em&gt;はソースウィンドウの左上座標であり、他の変数は宛先ウィンドウの長方形を示します。</target>
        </trans-unit>
        <trans-unit id="28c7761539a23e6461abc6d90290b5c162e222dd" translate="yes" xml:space="preserve">
          <source>To get interpolation, use &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">補間を取得するには、&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="897f9f1483241234fc1680d5c01aaac400825b5f" translate="yes" xml:space="preserve">
          <source>To get started, here is a simple callback that shows the values it gets passed:</source>
          <target state="translated">まずは、渡される値を示すシンプルなコールバックを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="9a15fb1b51bc74d10a0368adfb2541b410554600" translate="yes" xml:space="preserve">
          <source>To get the full set of requirements for a distribution, use the &lt;code&gt;requires()&lt;/code&gt; function:</source>
          <target state="translated">ディストリビューションのすべての要件を取得するには、 &lt;code&gt;requires()&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="ac4c75c92e6f6f900761b506c028a1a4ab5d16ff" translate="yes" xml:space="preserve">
          <source>To give a field a default value, you can assign to it in the class body:</source>
          <target state="translated">フィールドにデフォルト値を与えるには、クラス本体でそれに代入することができます。</target>
        </trans-unit>
        <trans-unit id="ec8970880073f2a4193628e073a34bef2505adc6" translate="yes" xml:space="preserve">
          <source>To give a widget to the packer (geometry manager), you call pack with optional arguments. In Tkinter, the Pack class holds all this functionality, and the various forms of the pack command are implemented as methods. All widgets in &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; are subclassed from the Packer, and so inherit all the packing methods. See the &lt;a href=&quot;tkinter.tix#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module documentation for additional information on the Form geometry manager.</source>
          <target state="translated">ウィジェットをパッカー（ジオメトリマネージャー）に渡すには、オプションの引数を指定してpackを呼び出します。Tkinterでは、Packクラスがこのすべての機能を保持し、さまざまな形式のpackコマンドがメソッドとして実装されています。&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; の&lt;/a&gt;すべてのウィジェットはPackerからサブクラス化されているため、すべてのパッキングメソッドを継承します。フォームジオメトリマネージャの詳細については、&lt;a href=&quot;tkinter.tix#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="15b1f3430d82190dc49a1cc998bb829e9af91209" translate="yes" xml:space="preserve">
          <source>To give the &lt;a href=&quot;#module-timeit&quot;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; module access to functions you define, you can pass a &lt;em&gt;setup&lt;/em&gt; parameter which contains an import statement:</source>
          <target state="translated">定義した関数へのアクセスを&lt;a href=&quot;#module-timeit&quot;&gt; &lt;code&gt;timeit&lt;/code&gt; &lt;/a&gt;モジュールに与えるために、インポートステートメントを含む&lt;em&gt;セットアップ&lt;/em&gt;パラメーターを渡すことができ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="da2a8f38b351487cbd3ba16c13bda7764e126ce4" translate="yes" xml:space="preserve">
          <source>To handle signals and to execute subprocesses, the event loop must be run in the main thread.</source>
          <target state="translated">シグナルを処理し、サブプロセスを実行するためには、メインスレッドでイベントループを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="685b9a90ebbf94251071857ab67987648cbe32d1" translate="yes" xml:space="preserve">
          <source>To help find the line number of the object within its file.</source>
          <target state="translated">ファイル内のオブジェクトの行番号を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="1e7a15938006fe056a0713c11808a9df9019ee29" translate="yes" xml:space="preserve">
          <source>To help keep Python 2 / Python 3 code in sync an &lt;code&gt;_order_&lt;/code&gt; attribute can be provided. It will be checked against the actual order of the enumeration and raise an error if the two do not match:</source>
          <target state="translated">Python 2 / Python 3コードの同期を維持するために、 &lt;code&gt;_order_&lt;/code&gt; 属性を指定できます。列挙の実際の順序に対してチェックされ、2つが一致しない場合はエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="eec8921c87539961c80aa82a8464e7801a7c0417" translate="yes" xml:space="preserve">
          <source>To help measure the effectiveness of the cache and tune the &lt;em&gt;maxsize&lt;/em&gt; parameter, the wrapped function is instrumented with a &lt;code&gt;cache_info()&lt;/code&gt; function that returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; showing &lt;em&gt;hits&lt;/em&gt;, &lt;em&gt;misses&lt;/em&gt;, &lt;em&gt;maxsize&lt;/em&gt; and &lt;em&gt;currsize&lt;/em&gt;. In a multi-threaded environment, the hits and misses are approximate.</source>
          <target state="translated">キャッシュとチューニングの効果測定を助けるために&lt;em&gt;MAXSIZEの&lt;/em&gt;パラメータを、ラップ機能がで計測され &lt;code&gt;cache_info()&lt;/code&gt; 関数でそれを返す&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;という名前のタプル&lt;/a&gt;を示す&lt;em&gt;ヒット&lt;/em&gt;、&lt;em&gt;ミス&lt;/em&gt;、&lt;em&gt;MAXSIZE&lt;/em&gt;と&lt;em&gt;currsizeを&lt;/em&gt;。マルチスレッド環境では、ヒットとミスは概算です。</target>
        </trans-unit>
        <trans-unit id="3e3fadbfda6fb4b04ad37db994c48401a0680ed3" translate="yes" xml:space="preserve">
          <source>To ignore certain arguments you can pass in objects that compare equal to &lt;em&gt;everything&lt;/em&gt;. Calls to &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; will then succeed no matter what was passed in.</source>
          <target state="translated">特定の引数を無視するには、&lt;em&gt;すべてに&lt;/em&gt;等しいオブジェクトを渡すことができ&lt;em&gt;ます&lt;/em&gt;。その後、&lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; の&lt;/a&gt;呼び出しは、何が渡されても成功します。</target>
        </trans-unit>
        <trans-unit id="ed0a50ba92595cd542bd7bee7fb484c8f05170bb" translate="yes" xml:space="preserve">
          <source>To illustrate, the following examples all return a dictionary equal to &lt;code&gt;{&quot;one&quot;: 1, &quot;two&quot;: 2, &quot;three&quot;: 3}&lt;/code&gt;:</source>
          <target state="translated">説明のために、以下の例はすべて &lt;code&gt;{&quot;one&quot;: 1, &quot;two&quot;: 2, &quot;three&quot;: 3}&lt;/code&gt; 等しいディクショナリを返します。</target>
        </trans-unit>
        <trans-unit id="478307dcfca982cb8b33f10a2361f937679e0acd" translate="yes" xml:space="preserve">
          <source>To implement &lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; slicing, use a similar approach applying &lt;a href=&quot;#collections.deque.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; to bring a target element to the left side of the deque. Remove old entries with &lt;a href=&quot;#collections.deque.popleft&quot;&gt;&lt;code&gt;popleft()&lt;/code&gt;&lt;/a&gt;, add new entries with &lt;a href=&quot;#collections.deque.extend&quot;&gt;&lt;code&gt;extend()&lt;/code&gt;&lt;/a&gt;, and then reverse the rotation. With minor variations on that approach, it is easy to implement Forth style stack manipulations such as &lt;code&gt;dup&lt;/code&gt;, &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;swap&lt;/code&gt;, &lt;code&gt;over&lt;/code&gt;, &lt;code&gt;pick&lt;/code&gt;, &lt;code&gt;rot&lt;/code&gt;, and &lt;code&gt;roll&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;スライスを実装するには、同様のアプローチを使用して、&lt;a href=&quot;#collections.deque.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;を適用し、ターゲット要素を両端キューの左側に移動します。古いエントリを削除し&lt;a href=&quot;#collections.deque.popleft&quot;&gt; &lt;code&gt;popleft()&lt;/code&gt; &lt;/a&gt;、との新しいエントリを追加&lt;a href=&quot;#collections.deque.extend&quot;&gt; &lt;code&gt;extend()&lt;/code&gt; &lt;/a&gt;し、その後逆転。そのアプローチにわずかなバリエーションがあれば、 &lt;code&gt;dup&lt;/code&gt; 、 &lt;code&gt;drop&lt;/code&gt; 、 &lt;code&gt;swap&lt;/code&gt; 、 &lt;code&gt;over&lt;/code&gt; 、 &lt;code&gt;pick&lt;/code&gt; 、 &lt;code&gt;rot&lt;/code&gt; 、 &lt;code&gt;roll&lt;/code&gt; などのForthスタイルのスタック操作を簡単に実装できます。</target>
        </trans-unit>
        <trans-unit id="2168141fc28490c67d1b6910596eb2e7720cb5bd" translate="yes" xml:space="preserve">
          <source>To implement a new event loop policy, it is recommended to subclass &lt;a href=&quot;#asyncio.DefaultEventLoopPolicy&quot;&gt;&lt;code&gt;DefaultEventLoopPolicy&lt;/code&gt;&lt;/a&gt; and override the methods for which custom behavior is wanted, e.g.:</source>
          <target state="translated">新しいイベントループポリシーを実装するには、&lt;a href=&quot;#asyncio.DefaultEventLoopPolicy&quot;&gt; &lt;code&gt;DefaultEventLoopPolicy&lt;/code&gt; &lt;/a&gt;をサブクラス化し、カスタム動作が必要なメソッドをオーバーライドすることをお勧めします。例：</target>
        </trans-unit>
        <trans-unit id="cefc74e4478b86927f72685a3f4bbbb20664083e" translate="yes" xml:space="preserve">
          <source>To implement a service, you must derive a class from &lt;a href=&quot;#socketserver.BaseRequestHandler&quot;&gt;&lt;code&gt;BaseRequestHandler&lt;/code&gt;&lt;/a&gt; and redefine its &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method. You can then run various versions of the service by combining one of the server classes with your request handler class. The request handler class must be different for datagram or stream services. This can be hidden by using the handler subclasses &lt;a href=&quot;#socketserver.StreamRequestHandler&quot;&gt;&lt;code&gt;StreamRequestHandler&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socketserver.DatagramRequestHandler&quot;&gt;&lt;code&gt;DatagramRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サービスを実装するには、&lt;a href=&quot;#socketserver.BaseRequestHandler&quot;&gt; &lt;code&gt;BaseRequestHandler&lt;/code&gt; &lt;/a&gt;からクラスを派生させ、その&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを再定義する必要があります。その後、サーバークラスの1つと要求ハンドラクラスを組み合わせることで、さまざまなバージョンのサービスを実行できます。要求ハンドラクラスは、データグラムサービスまたはストリームサービスで異なる必要があります。これは、ハンドラサブクラス&lt;a href=&quot;#socketserver.StreamRequestHandler&quot;&gt; &lt;code&gt;StreamRequestHandler&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#socketserver.DatagramRequestHandler&quot;&gt; &lt;code&gt;DatagramRequestHandler&lt;/code&gt; &lt;/a&gt;を使用して非表示にできます。</target>
        </trans-unit>
        <trans-unit id="1785768c210239642eb9d634452c652d2df3cf43" translate="yes" xml:space="preserve">
          <source>To import a Python source file directly, use the following recipe (Python 3.5 and newer only):</source>
          <target state="translated">Pythonのソースファイルを直接インポートするには、以下のレシピを使用します(Python 3.5以降のみ)。</target>
        </trans-unit>
        <trans-unit id="0a158457267508cf938f916c4c196f27b6dc6670" translate="yes" xml:space="preserve">
          <source>To include a text document, use the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element, and set the &lt;strong&gt;parse&lt;/strong&gt; attribute to &amp;ldquo;text&amp;rdquo;:</source>
          <target state="translated">テキストドキュメントを含めるには、 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; include 要素を使用して、&lt;strong&gt;parse&lt;/strong&gt;属性を「text」に設定します。</target>
        </trans-unit>
        <trans-unit id="103c745176746075c187f9dacccc25564fca2bc7" translate="yes" xml:space="preserve">
          <source>To interoperate with networking interfaces such as the socket module, addresses must be converted to strings or integers. This is handled using the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; builtin functions:</source>
          <target state="translated">ソケットモジュールなどのネットワークインターフェイスと相互運用するには、アドレスを文字列または整数に変換する必要があります。これは、組み込み関数&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;を使用して処理されます。</target>
        </trans-unit>
        <trans-unit id="66bda8be924c407f66490a684c3b21482c6ac623" translate="yes" xml:space="preserve">
          <source>To lock the lock, a thread calls its &lt;a href=&quot;#threading.RLock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; method; this returns once the thread owns the lock. To unlock the lock, a thread calls its &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call pairs may be nested; only the final &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; (the &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; of the outermost pair) resets the lock to unlocked and allows another thread blocked in &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; to proceed.</source>
          <target state="translated">ロックをロックするために、スレッドは、&lt;a href=&quot;#threading.RLock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。これは、スレッドがロックを所有すると戻ります。ロックを解除するために、スレッドは&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; の&lt;/a&gt;呼び出しペアはネストできます。唯一の最終&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;最も外側のペアの）がアンロックにロックをリセットし、別のスレッドがでブロックでき&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;に進行します。</target>
        </trans-unit>
        <trans-unit id="b784db9baba0395d4c3539a334c8993acd6900c8" translate="yes" xml:space="preserve">
          <source>To loop over the standard input, or the list of files given on the command line, see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">標準入力またはコマンドラインで指定されたファイルのリストをループするには、&lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="98a046cb12aaa67ff00dce659507a1d1bdf50a19" translate="yes" xml:space="preserve">
          <source>To maintain compatibility with other platforms, not only the &lt;code id=&quot;index-3&quot;&gt;LANG&lt;/code&gt; variable is tested, but a list of variables given as envvars parameter. The first found to be defined will be used. &lt;em&gt;envvars&lt;/em&gt; defaults to the search path used in GNU gettext; it must always contain the variable name &lt;code&gt;'LANG'&lt;/code&gt;. The GNU gettext search path contains &lt;code&gt;'LC_ALL'&lt;/code&gt;, &lt;code&gt;'LC_CTYPE'&lt;/code&gt;, &lt;code&gt;'LANG'&lt;/code&gt; and &lt;code&gt;'LANGUAGE'&lt;/code&gt;, in that order.</source>
          <target state="translated">他のプラットフォームとの互換性を維持するために、 &lt;code id=&quot;index-3&quot;&gt;LANG&lt;/code&gt; 変数だけでなく、envvarsパラメーターとして指定された変数のリストもテストされます。定義されている最初に見つかったものが使用されます。&lt;em&gt;envvarsの&lt;/em&gt;デフォルトは、GNU gettextで使用される検索パスです。常に変数名 &lt;code&gt;'LANG'&lt;/code&gt; が含まれている必要があります。GNU gettext検索パスには、 &lt;code&gt;'LC_ALL'&lt;/code&gt; 、 &lt;code&gt;'LC_CTYPE'&lt;/code&gt; 、 &lt;code&gt;'LANG'&lt;/code&gt; 、および &lt;code&gt;'LANGUAGE'&lt;/code&gt; がこの順序で含まれています。</target>
        </trans-unit>
        <trans-unit id="1c14afdac812af227b88c86198941007cf0dd14f" translate="yes" xml:space="preserve">
          <source>To make a widget in Tk, the command is always of the form:</source>
          <target state="translated">Tkでウィジェットを作るには、コマンドは常にこの形式になります。</target>
        </trans-unit>
        <trans-unit id="417627c112a69f8b699c74dadfa73e7deb1493a2" translate="yes" xml:space="preserve">
          <source>To make it easier to specify the format of input and output records, specific formatting parameters are grouped together into dialects. A dialect is a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class having a set of specific methods and a single &lt;code&gt;validate()&lt;/code&gt; method. When creating &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects, the programmer can specify a string or a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class as the dialect parameter. In addition to, or instead of, the &lt;em&gt;dialect&lt;/em&gt; parameter, the programmer can also specify individual formatting parameters, which have the same names as the attributes defined below for the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">入力レコードと出力レコードのフォーマットを指定しやすくするために、特定のフォーマットパラメータが方言にグループ化されています。方言は、特定のメソッドのセットと単一の &lt;code&gt;validate()&lt;/code&gt; メソッドを持つ&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;クラスのサブクラスです。&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するとき、プログラマーは方言パラメーターとして&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;クラスの文字列またはサブクラスを指定できます。&lt;em&gt;方言&lt;/em&gt;パラメーターに加えて、またはその代わりに、プログラマーは、以下で&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;クラスに対して定義されている属性と同じ名前を持つ個々のフォーマットパラメーターを指定することもできます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb0b20d767110eb1725af8275114eae06d1e185d" translate="yes" xml:space="preserve">
          <source>To make the application directly executable on POSIX, specify an interpreter to use.</source>
          <target state="translated">POSIX上でアプリケーションを直接実行可能にするには、使用するインタプリタを指定します。</target>
        </trans-unit>
        <trans-unit id="3fca3ce87f48e2116a1eb0698d70c15c55057dc4" translate="yes" xml:space="preserve">
          <source>To make use of this reference material, there will be times when you will need to know how to read short passages of Tk and how to identify the various parts of a Tk command. (See section &lt;a href=&quot;#tkinter-basic-mapping&quot;&gt;Mapping Basic Tk into Tkinter&lt;/a&gt; for the &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; equivalents of what&amp;rsquo;s below.)</source>
          <target state="translated">この参照資料を利用するために、Tkの短い部分を読み取る方法とTkコマンドのさまざまな部分を識別する方法を知る必要がある場合があります。（以下の対応する&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;については、「&lt;a href=&quot;#tkinter-basic-mapping&quot;&gt;基本的なTkをTkinterにマッピングする&lt;/a&gt;」セクションを参照してください。）</target>
        </trans-unit>
        <trans-unit id="484e44f760bfbe435b83b25b84c0b182802fc132" translate="yes" xml:space="preserve">
          <source>To map anonymous memory, -1 should be passed as the fileno along with the length.</source>
          <target state="translated">匿名メモリをマッピングするには、長さと一緒に-1をfilenoとして渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="e2e1faf71792fd171bb7d18670aacf92d65ddab9" translate="yes" xml:space="preserve">
          <source>To match a literal &lt;code&gt;']'&lt;/code&gt; inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both &lt;code&gt;[()[\]{}]&lt;/code&gt; and &lt;code&gt;[]()[{}]&lt;/code&gt; will both match a parenthesis.</source>
          <target state="translated">セット内のリテラル &lt;code&gt;']'&lt;/code&gt; を一致させるには、その前にバックスラッシュを付けるか、セットの先頭に置きます。たとえば、 &lt;code&gt;[()[\]{}]&lt;/code&gt; と &lt;code&gt;[]()[{}]&lt;/code&gt; はどちらも括弧に一致します。</target>
        </trans-unit>
        <trans-unit id="618708a8fc1d746e948f62210d44b1f5af8f8644" translate="yes" xml:space="preserve">
          <source>To measure the execution time of the first statement, use the &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#timeit.Timer.repeat&quot;&gt;&lt;code&gt;repeat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#timeit.Timer.autorange&quot;&gt;&lt;code&gt;autorange()&lt;/code&gt;&lt;/a&gt; methods are convenience methods to call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; multiple times.</source>
          <target state="translated">最初のステートメントの実行時間を測定するには、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。&lt;a href=&quot;#timeit.Timer.repeat&quot;&gt; &lt;code&gt;repeat()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#timeit.Timer.autorange&quot;&gt; &lt;code&gt;autorange()&lt;/code&gt; &lt;/a&gt;メソッドがコールに便利なメソッドです&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;を複数回。</target>
        </trans-unit>
        <trans-unit id="1877606d3808c148650a0894f86dec786878b4b9" translate="yes" xml:space="preserve">
          <source>To obtain a hexadecimal string representation for a float, use the &lt;a href=&quot;stdtypes#float.hex&quot;&gt;&lt;code&gt;float.hex()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">floatの16進文字列表現を取得するには、&lt;a href=&quot;stdtypes#float.hex&quot;&gt; &lt;code&gt;float.hex()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="61455195f543a7d8dd71efcc31b21d9861f799c4" translate="yes" xml:space="preserve">
          <source>To open the key, use the &lt;a href=&quot;#winreg.CreateKey&quot;&gt;&lt;code&gt;CreateKey()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#winreg.OpenKey&quot;&gt;&lt;code&gt;OpenKey()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">キーを開くには、&lt;a href=&quot;#winreg.CreateKey&quot;&gt; &lt;code&gt;CreateKey()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#winreg.OpenKey&quot;&gt; &lt;code&gt;OpenKey()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="f456a6710b9e6585a204a095080c291aedbb463b" translate="yes" xml:space="preserve">
          <source>To override the basic Tk widgets, the import should follow the Tk import:</source>
          <target state="translated">基本的なTkウィジェットを上書きするには、Tkのインポートに従う必要があります。</target>
        </trans-unit>
        <trans-unit id="bf838250004c5e59d72bbbdebbb5c5977c45e02d" translate="yes" xml:space="preserve">
          <source>To override the comparisons (presumably for speed, as the semantics are fixed), redefine &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;, then the other operations will automatically follow suit.</source>
          <target state="translated">比較をオーバーライドするには（おそらくセマンティクスが固定されているため、速度を上げるため）、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;再定義すると、他の操作が自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="e1904b2c6725763e667f2f07e78ab2eded89803e" translate="yes" xml:space="preserve">
          <source>To perform regression testing by verifying that interactive examples from a test file or a test object work as expected.</source>
          <target state="translated">テストファイルやテストオブジェクトのインタラクティブな例が期待通りに動作するかどうかを検証することで、リグレッションテストを実行する。</target>
        </trans-unit>
        <trans-unit id="b46749e5ac61308154978bbff6f9776b88f8bb48" translate="yes" xml:space="preserve">
          <source>To pickle objects that have an external persistent ID, the pickler must have a custom &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; method that takes an object as an argument and returns either &lt;code&gt;None&lt;/code&gt; or the persistent ID for that object. When &lt;code&gt;None&lt;/code&gt; is returned, the pickler simply pickles the object as normal. When a persistent ID string is returned, the pickler will pickle that object, along with a marker so that the unpickler will recognize it as a persistent ID.</source>
          <target state="translated">外部永続IDを持つオブジェクトをピクルするには、ピッカーにオブジェクトを引数として受け取り、 &lt;code&gt;None&lt;/code&gt; またはそのオブジェクトの永続IDを返すカスタムの&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;メソッドが必要です。とき &lt;code&gt;None&lt;/code&gt; 返されていない、Picklerさんは、単にオブジェクトを通常のようにpickle化。永続的なID文字列が返されると、ピッカーはそのオブジェクトとマーカーをピクルして、アンピッカーが永続的なIDとして認識できるようにします。</target>
        </trans-unit>
        <trans-unit id="464cddfc71cabb999b36dc4463a388c3b896939d" translate="yes" xml:space="preserve">
          <source>To post an article from a binary file (this assumes that the article has valid headers, and that you have right to post on the particular newsgroup):</source>
          <target state="translated">バイナリファイルから記事を投稿するには (記事に有効なヘッダがあり、特定のニュースグループに投稿する権利があることを前提としています)。</target>
        </trans-unit>
        <trans-unit id="3ea7701325362cf111507ae07ad956de8d76b901" translate="yes" xml:space="preserve">
          <source>To prevent the DocTestFinder from extracting DocTests from objects that are imported from other modules. (Contained objects with modules other than &lt;em&gt;module&lt;/em&gt; are ignored.)</source>
          <target state="translated">DocTestFinderが他のモジュールからインポートされたオブジェクトからDocTestを抽出しないようにするため。（以外のモジュールと含まれるオブジェクト&lt;em&gt;モジュールが&lt;/em&gt;無視されます。）</target>
        </trans-unit>
        <trans-unit id="75ce79c23ae1627c624827192c59627f01d4d32c" translate="yes" xml:space="preserve">
          <source>To process this file, load it as usual, and pass the root element to the &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">このファイルを処理するには、通常どおりロードし、ルート要素を&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;モジュールに渡します。</target>
        </trans-unit>
        <trans-unit id="0378c517bb3f44a4de23c24714950e30345fceb7" translate="yes" xml:space="preserve">
          <source>To profile a function that takes a single argument, you can do:</source>
          <target state="translated">1つの引数を取る関数をプロファイルするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="5449841f06bad5a2670dfafc51300c84788e53c9" translate="yes" xml:space="preserve">
          <source>To programmatically import a module, use &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プログラムでモジュールをインポートするには、&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="235b35cc854fb6c40fcb5bc32127ed15360a7207" translate="yes" xml:space="preserve">
          <source>To reduce interpreter startup overhead, the Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; function is not resolved until this function is first called. If the function cannot be resolved, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">インタープリターの起動オーバーヘッドを減らすために、Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; 関数は、この関数が最初に呼び出されるまで解決されません。関数を解決できない場合、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="3f671170832a277ad19c6673cec3b9e9d7f73479" translate="yes" xml:space="preserve">
          <source>To remove a &lt;code&gt;side_effect&lt;/code&gt;, and return to the default behaviour, set the &lt;code&gt;side_effect&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;side_effect&lt;/code&gt; を削除してデフォルトの動作に戻すには、 &lt;code&gt;side_effect&lt;/code&gt; を &lt;code&gt;None&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="c0a6df24f5dba94f71f5eb8abe853277fe5f8b69" translate="yes" xml:space="preserve">
          <source>To remove a collation, call &lt;code&gt;create_collation&lt;/code&gt; with &lt;code&gt;None&lt;/code&gt; as callable:</source>
          <target state="translated">照合順序を削除するには、呼び出し可能として &lt;code&gt;None&lt;/code&gt; を &lt;code&gt;create_collation&lt;/code&gt; してcreate_collat​​ionを呼び出します。</target>
        </trans-unit>
        <trans-unit id="deb986b44a469cfc418c4db889efbebd3d498e8b" translate="yes" xml:space="preserve">
          <source>To remove all commands from a breakpoint, type &lt;code&gt;commands&lt;/code&gt; and follow it immediately with &lt;code&gt;end&lt;/code&gt;; that is, give no commands.</source>
          <target state="translated">ブレークポイントからすべてのコマンドを削除するには、コマンドを入力し、その直後に &lt;code&gt;end&lt;/code&gt; を続け &lt;code&gt;commands&lt;/code&gt; 。つまり、コマンドを与えません。</target>
        </trans-unit>
        <trans-unit id="d3e77a28a57d567fcb960445b706ccb578026b25" translate="yes" xml:space="preserve">
          <source>To replace the shebang line on an existing archive, create a modified archive using the &lt;a href=&quot;#zipapp.create_archive&quot;&gt;&lt;code&gt;create_archive()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">既存のアーカイブのシバン行を置き換えるには、&lt;a href=&quot;#zipapp.create_archive&quot;&gt; &lt;code&gt;create_archive()&lt;/code&gt; &lt;/a&gt;関数を使用して変更されたアーカイブを作成します。</target>
        </trans-unit>
        <trans-unit id="a0fb9eb465366c5feaf1e2c7608a6a11085a2ed6" translate="yes" xml:space="preserve">
          <source>To retrieve a field whose name is stored in a string, use the &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">名前が文字列に格納されているフィールドを取得するには、&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="0f5192f40799a0b5249f8f65a07b092775843f9c" translate="yes" xml:space="preserve">
          <source>To retrieve data after executing a SELECT statement, you can either treat the cursor as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;, call the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt;&lt;code&gt;fetchone()&lt;/code&gt;&lt;/a&gt; method to retrieve a single matching row, or call &lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt;&lt;code&gt;fetchall()&lt;/code&gt;&lt;/a&gt; to get a list of the matching rows.</source>
          <target state="translated">SELECTステートメントの実行後にデータを取得するには、カーソルを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;として扱うか、カーソルの&lt;a href=&quot;#sqlite3.Cursor.fetchone&quot;&gt; &lt;code&gt;fetchone()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して一致する単一の行を取得するか、&lt;a href=&quot;#sqlite3.Cursor.fetchall&quot;&gt; &lt;code&gt;fetchall()&lt;/code&gt; &lt;/a&gt;を呼び出して一致する行のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="fa0d39041d8f8095fbf0fa33c3d912798a2630dc" translate="yes" xml:space="preserve">
          <source>To reverse this encoding process, &lt;a href=&quot;#urllib.parse.parse_qs&quot;&gt;&lt;code&gt;parse_qs()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.parse.parse_qsl&quot;&gt;&lt;code&gt;parse_qsl()&lt;/code&gt;&lt;/a&gt; are provided in this module to parse query strings into Python data structures.</source>
          <target state="translated">このエンコードプロセスを逆にするために、このモジュールでは&lt;a href=&quot;#urllib.parse.parse_qs&quot;&gt; &lt;code&gt;parse_qs()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#urllib.parse.parse_qsl&quot;&gt; &lt;code&gt;parse_qsl()&lt;/code&gt; &lt;/a&gt;が提供され、クエリ文字列をPythonデータ構造に解析します。</target>
        </trans-unit>
        <trans-unit id="46f1ad4c5c8298c7c978bfa9952bc941076ec95b" translate="yes" xml:space="preserve">
          <source>To schedule a callback from a different OS thread, the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt; method should be used. Example:</source>
          <target state="translated">別のOSスレッドからのコールバックをスケジュールするには、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。例：</target>
        </trans-unit>
        <trans-unit id="8f0884ec1f5594a6a040aa5eeeff821ee386f563" translate="yes" xml:space="preserve">
          <source>To schedule a coroutine object from a different OS thread, the &lt;a href=&quot;asyncio-task#asyncio.run_coroutine_threadsafe&quot;&gt;&lt;code&gt;run_coroutine_threadsafe()&lt;/code&gt;&lt;/a&gt; function should be used. It returns a &lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt;&lt;code&gt;concurrent.futures.Future&lt;/code&gt;&lt;/a&gt; to access the result:</source>
          <target state="translated">別のOSスレッドからコルーチンオブジェクトをスケジュールするには、&lt;a href=&quot;asyncio-task#asyncio.run_coroutine_threadsafe&quot;&gt; &lt;code&gt;run_coroutine_threadsafe()&lt;/code&gt; &lt;/a&gt;関数を使用する必要があります。結果にアクセスするために&lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt; &lt;code&gt;concurrent.futures.Future&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="1f6627de8dbbc9c12a86f34fd1b5fe034f34a62d" translate="yes" xml:space="preserve">
          <source>To see if a given string is a valid hand, one could do the following:</source>
          <target state="translated">与えられた文字列が有効な手であるかどうかを確認するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="e0943fae7c35b5498e405be59003cb18933c3cc3" translate="yes" xml:space="preserve">
          <source>To select a start method you use the &lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt;&lt;code&gt;set_start_method()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; clause of the main module. For example:</source>
          <target state="translated">startメソッドを選択するには、使用&lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt; &lt;code&gt;set_start_method()&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; メインモジュールの句。例えば：</target>
        </trans-unit>
        <trans-unit id="7b599b4912ffb321a32eeeee3be0d641b6372a13" translate="yes" xml:space="preserve">
          <source>To send a configuration to the socket, read in the configuration file and send it to the socket as a sequence of bytes preceded by a four-byte length string packed in binary using &lt;code&gt;struct.pack('&amp;gt;L', n)&lt;/code&gt;.</source>
          <target state="translated">構成をソケットに送信するには、構成ファイルを読み取り、 &lt;code&gt;struct.pack('&amp;gt;L', n)&lt;/code&gt; を使用してバイナリでパックされた4バイト長の文字列が前に付いたバイトシーケンスとしてソケットに送信します。</target>
        </trans-unit>
        <trans-unit id="10c9c2df671deeca1fe90d00e167dfed20eaa838" translate="yes" xml:space="preserve">
          <source>To send the output of &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;sys.stderr&lt;/em&gt;:</source>
          <target state="translated">&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;出力&lt;/em&gt;を&lt;em&gt;sys.stderrに&lt;/em&gt;送信するには：</target>
        </trans-unit>
        <trans-unit id="368af95afe3dde84ad97245ab11827291359580c" translate="yes" xml:space="preserve">
          <source>To send the output of &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; to a file on disk, redirect the output to a regular file:</source>
          <target state="translated">&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;の出力をディスク上のファイルに送信するには、出力を通常のファイルにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="760c34de5354bcacaf1f6c0b875ba4fca40a85c7" translate="yes" xml:space="preserve">
          <source>To serialize an object hierarchy, you simply call the &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; function. Similarly, to de-serialize a data stream, you call the &lt;a href=&quot;#pickle.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt; function. However, if you want more control over serialization and de-serialization, you can create a &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; object, respectively.</source>
          <target state="translated">オブジェクト階層をシリアル化するには、単に&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;関数を呼び出します。同様に、データストリームを逆シリアル化するには、&lt;a href=&quot;#pickle.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;関数を呼び出します。ただし、シリアライゼーションとデシリアライゼーションをより詳細に制御したい場合は、それぞれ&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;オブジェクトまたは&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="a02536d7456d8606cd89506bca4a517540363eb4" translate="yes" xml:space="preserve">
          <source>To set a POINTER type field to &lt;code&gt;NULL&lt;/code&gt;, you can assign &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">POINTERタイプのフィールドを &lt;code&gt;NULL&lt;/code&gt; に設定するには、 &lt;code&gt;None&lt;/code&gt; を割り当てます。</target>
        </trans-unit>
        <trans-unit id="94089b856a9740ad3b8dc05c41cca98f65149300" translate="yes" xml:space="preserve">
          <source>To show the individual process IDs involved, here is an expanded example:</source>
          <target state="translated">関係する個々のプロセスIDを示すために、ここでは拡大した例を示します。</target>
        </trans-unit>
        <trans-unit id="0c86f19a38fdf4f3f2888e7254bd241904a08f10" translate="yes" xml:space="preserve">
          <source>To shuffle an immutable sequence and return a new shuffled list, use &lt;code&gt;sample(x, k=len(x))&lt;/code&gt; instead.</source>
          <target state="translated">不変シーケンスをシャッフルして新しいシャッフルリストを返すには、代わりに &lt;code&gt;sample(x, k=len(x))&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="ad3933308c92befa869f265838a9e8cdec721d4d" translate="yes" xml:space="preserve">
          <source>To simplify access to the various codec components, the module provides these additional functions which use &lt;a href=&quot;#codecs.lookup&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; for the codec lookup:</source>
          <target state="translated">さまざまなコーデックコンポーネントへのアクセスを簡略化するために、モジュールは、コーデックルックアップに&lt;a href=&quot;#codecs.lookup&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;を使用する次の追加関数を提供します。</target>
        </trans-unit>
        <trans-unit id="7aabdf8b0670313243d3ad3253be2cbd8d7f5c13" translate="yes" xml:space="preserve">
          <source>To simplify and standardize error handling, codecs may implement different error handling schemes by accepting the &lt;em&gt;errors&lt;/em&gt; string argument. The following string values are defined and implemented by all standard Python codecs:</source>
          <target state="translated">エラー処理を簡素化および標準化するために、コーデックは、&lt;em&gt;エラー&lt;/em&gt;文字列引数を受け入れることにより、さまざまなエラー処理スキームを実装&lt;em&gt;でき&lt;/em&gt;ます。次の文字列値は、すべての標準Pythonコーデックによって定義および実装されています。</target>
        </trans-unit>
        <trans-unit id="0a8769fc8be4940cb808b1153502d24a60ed8f26" translate="yes" xml:space="preserve">
          <source>To simplify token stream handling, all &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#operators&quot;&gt;operator&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#delimiters&quot;&gt;delimiter&lt;/a&gt; tokens and &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; are returned using the generic &lt;a href=&quot;token#token.OP&quot;&gt;&lt;code&gt;OP&lt;/code&gt;&lt;/a&gt; token type. The exact type can be determined by checking the &lt;code&gt;exact_type&lt;/code&gt; property on the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; returned from &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize.tokenize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">トークンストリームの処理を簡素化するために、すべての&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#operators&quot;&gt;オペレータ&lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#delimiters&quot;&gt;区切り&lt;/a&gt;トークンと&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;、一般的な使用して返された&lt;a href=&quot;token#token.OP&quot;&gt; &lt;code&gt;OP&lt;/code&gt; &lt;/a&gt;トークンタイプを。正確なタイプは、&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize.tokenize()&lt;/code&gt; &lt;/a&gt;から返された&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプルの&lt;/a&gt; &lt;code&gt;exact_type&lt;/code&gt; プロパティをチェックすることで決定できます。</target>
        </trans-unit>
        <trans-unit id="c99360216ba373c1bc65a90076c1777659e276a7" translate="yes" xml:space="preserve">
          <source>To specify a variable-length tuple of homogeneous type, use literal ellipsis, e.g. &lt;code&gt;Tuple[int, ...]&lt;/code&gt;. A plain &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;code&gt;Tuple[Any, ...]&lt;/code&gt;, and in turn to &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同種型の可変長タプルを指定するには、リテラル省略記号を使用します（例： &lt;code&gt;Tuple[int, ...]&lt;/code&gt; 。平野&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;同等です &lt;code&gt;Tuple[Any, ...]&lt;/code&gt; 、ひいてはへの&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b814a7a26e755324d50e482a1e951755b0c61cc2" translate="yes" xml:space="preserve">
          <source>To specify the use of a secure protocol (TLS), pass in a tuple to the &lt;em&gt;secure&lt;/em&gt; argument. This will only be used when authentication credentials are supplied. The tuple should be either an empty tuple, or a single-value tuple with the name of a keyfile, or a 2-value tuple with the names of the keyfile and certificate file. (This tuple is passed to the &lt;a href=&quot;smtplib#smtplib.SMTP.starttls&quot;&gt;&lt;code&gt;smtplib.SMTP.starttls()&lt;/code&gt;&lt;/a&gt; method.)</source>
          <target state="translated">セキュアプロトコル（TLS）の使用を指定するには、タプルを&lt;em&gt;セキュア&lt;/em&gt;引数に渡します。これは、認証資格情報が提供されている場合にのみ使用されます。タプルは、空のタプルか、キーファイルの名前を持つ単一値のタプルか、キーファイルと証明書ファイルの名前を持つ2値のタプルのいずれかである必要があります。（このタプルは&lt;a href=&quot;smtplib#smtplib.SMTP.starttls&quot;&gt; &lt;code&gt;smtplib.SMTP.starttls()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。）</target>
        </trans-unit>
        <trans-unit id="d5b3104139b01eeac04cf9e042a54bbc4242a857" translate="yes" xml:space="preserve">
          <source>To start using Ttk, import its module:</source>
          <target state="translated">Ttk の使用を開始するには、そのモジュールをインポートします。</target>
        </trans-unit>
        <trans-unit id="51c216987f5aa2dbd2061c95ac950a3b4802975d" translate="yes" xml:space="preserve">
          <source>To summarize the interface (&lt;code&gt;key&lt;/code&gt; is a string, &lt;code&gt;data&lt;/code&gt; is an arbitrary object):</source>
          <target state="translated">インターフェースを要約すると（ &lt;code&gt;key&lt;/code&gt; は文字列、 &lt;code&gt;data&lt;/code&gt; は任意のオブジェクトです）：</target>
        </trans-unit>
        <trans-unit id="00362506e0ca02815d8f1fdbc1235c68ab4941ab" translate="yes" xml:space="preserve">
          <source>To support SMTP (&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;), &lt;code&gt;Address&lt;/code&gt; handles one special case: if &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; are both the empty string (or &lt;code&gt;None&lt;/code&gt;), then the string value of the &lt;code&gt;Address&lt;/code&gt; is &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">SMTP（&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;）をサポートするために、 &lt;code&gt;Address&lt;/code&gt; は1つの特殊なケースを処理し &lt;code&gt;username&lt;/code&gt; と &lt;code&gt;domain&lt;/code&gt; が両方とも空の文字列（または &lt;code&gt;None&lt;/code&gt; ）の場合、 &lt;code&gt;Address&lt;/code&gt; 文字列値は &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c4d801175c02a7134e5a67b972b015f82efd457d" translate="yes" xml:space="preserve">
          <source>To support a wide variety of use cases, the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor (and the convenience functions) accept a large number of optional arguments. For most typical use cases, many of these arguments can be safely left at their default values. The arguments that are most commonly needed are:</source>
          <target state="translated">さまざまなユースケースをサポートするために、&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;コンストラクター（および便利な関数）は、多数のオプションの引数を受け入れます。ほとんどの一般的な使用例では、これらの引数の多くはデフォルト値のままで問題ありません。最も一般的に必要な引数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7b9ef99554dda06486dfe4f9aad3a9b5884ad664" translate="yes" xml:space="preserve">
          <source>To support easier conversion of result objects between &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, all return values from URL parsing functions provide either an &lt;code&gt;encode()&lt;/code&gt; method (when the result contains &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data) or a &lt;code&gt;decode()&lt;/code&gt; method (when the result contains &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data). The signatures of these methods match those of the corresponding &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; methods (except that the default encoding is &lt;code&gt;'ascii'&lt;/code&gt; rather than &lt;code&gt;'utf-8'&lt;/code&gt;). Each produces a value of a corresponding type that contains either &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data (for &lt;code&gt;encode()&lt;/code&gt; methods) or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data (for &lt;code&gt;decode()&lt;/code&gt; methods).</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; の&lt;/a&gt;間の結果オブジェクトの変換を容易にするために、URL解析関数からのすべての戻り値は、 &lt;code&gt;encode()&lt;/code&gt; メソッド（結果に&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;データが含まれる場合）または &lt;code&gt;decode()&lt;/code&gt; メソッド（結果に&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;データが含まれる場合）のいずれかを提供します。これらのメソッドのシグネチャは、対応する&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;メソッドのシグネチャと一致します（デフォルトのエンコーディングが &lt;code&gt;'utf-8'&lt;/code&gt; ではなく &lt;code&gt;'ascii'&lt;/code&gt; である場合を除きます）。それぞれが、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;データ（ &lt;code&gt;encode()&lt;/code&gt; メソッド用）または&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;いずれかを含む対応する型の値を生成します。データ（ &lt;code&gt;decode()&lt;/code&gt; メソッド用）。</target>
        </trans-unit>
        <trans-unit id="8faa414aa237c45d91492c0790eb5c1446c7200f" translate="yes" xml:space="preserve">
          <source>To support more specific error reporting from class constructors, the module defines the following exceptions:</source>
          <target state="translated">クラスのコンストラクタからのより具体的なエラー報告をサポートするために、モジュールは以下の例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="c16d8b4d0edbd20bc5f883f1830e6a64819d7f59" translate="yes" xml:space="preserve">
          <source>To suppress stdout or stderr, supply a value of &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">stdoutまたはstderrを抑制するには、値&lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; を指定し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="93fe155fd74b1d1e9076d9feef1c801042fda3b0" translate="yes" xml:space="preserve">
          <source>To test for the presence of SSL support in a Python installation, user code should use the following idiom:</source>
          <target state="translated">PythonのインストールでSSLがサポートされているかどうかをテストするには、ユーザーコードは以下のイディオムを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad05b0e475f3d0aee3f7e6301c1f32c33536da4a" translate="yes" xml:space="preserve">
          <source>To test warnings raised by code, use the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager. With it you can temporarily mutate the warnings filter to facilitate your testing. For instance, do the following to capture all raised warnings to check:</source>
          <target state="translated">コードによって生成された警告をテストするには、&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;コンテキストマネージャを使用します。これを使用すると、警告フィルターを一時的に変更して、テストを容易にすることができます。たとえば、次のようにして、発生したすべての警告をキャプチャして確認します。</target>
        </trans-unit>
        <trans-unit id="10561bf3f9f3d0097e11aeeaa24a8823dff2df5a" translate="yes" xml:space="preserve">
          <source>To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.</source>
          <target state="translated">本ソフトウェアの著作権および関連する隣接する権利は、法律の下で可能な範囲内で、作成者が全世界のパブリックドメインに捧げています。本ソフトウェアは、いかなる保証もなく配布されます。</target>
        </trans-unit>
        <trans-unit id="b957c8b22524d7f45637f1438f30d19ffc30d3b7" translate="yes" xml:space="preserve">
          <source>To trace most memory blocks allocated by Python, the module should be started as early as possible by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;, or by using &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc&lt;/code&gt; command line option. The &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;tracemalloc.start()&lt;/code&gt;&lt;/a&gt; function can be called at runtime to start tracing Python memory allocations.</source>
          <target state="translated">Pythonによって割り当てられたほとんどのメモリブロックをトレースするには、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt; &lt;/a&gt;環境変数を &lt;code&gt;1&lt;/code&gt; に設定するか、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tracemalloc&lt;/code&gt; コマンドラインオプションを使用して、モジュールをできるだけ早く開始する必要があります。&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;tracemalloc.start()&lt;/code&gt; &lt;/a&gt;関数は、Pythonのメモリ割り当てのトレースを開始するために、実行時に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ff0166cdb02b5e12ebef3a005fdba865bacd0e2c" translate="yes" xml:space="preserve">
          <source>To translate a numeric error code to an error message, use &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">数値エラーコードをエラーメッセージに変換するには、&lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="edd9ff074077e2c43f498ff1fbd6b93370923415" translate="yes" xml:space="preserve">
          <source>To understand the format, see the following example (it is not intended to do anything useful):</source>
          <target state="translated">フォーマットを理解するには、以下の例を参照してください(何か役に立つことを目的としたものではありません)。</target>
        </trans-unit>
        <trans-unit id="2ee0a4c14f5a2b2eff92e0263151ad18d468b505" translate="yes" xml:space="preserve">
          <source>To unpickle external objects, the unpickler must have a custom &lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt;&lt;code&gt;persistent_load()&lt;/code&gt;&lt;/a&gt; method that takes a persistent ID object and returns the referenced object.</source>
          <target state="translated">外部オブジェクトをアンピックルするには、unpicklerに、永続IDオブジェクトを取得して参照オブジェクトを返すカスタムの&lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt; &lt;code&gt;persistent_load()&lt;/code&gt; &lt;/a&gt;メソッドが必要です。</target>
        </trans-unit>
        <trans-unit id="a889b3e0dad6034036148442c4d89cb44da6c12c" translate="yes" xml:space="preserve">
          <source>To update the file in place, do the replacement in memory using a &lt;code&gt;BytesIO&lt;/code&gt; object, and then overwrite the source afterwards. Note that there is a risk when overwriting a file in place that an error will result in the loss of the original file. This code does not protect against such errors, but production code should do so. Also, this method will only work if the archive fits in memory:</source>
          <target state="translated">ファイルを &lt;code&gt;BytesIO&lt;/code&gt; 更新するには、BytesIOオブジェクトを使用してメモリ内で置換を行い、その後ソースを上書きします。ファイルを上書きすると、エラーが発生して元のファイルが失われるおそれがあることに注意してください。このコードはそのようなエラーから保護しませんが、製品コードは保護する必要があります。また、この方法は、アーカイブがメモリに収まる場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="20049dbc724846c3441fcf908b5e5814f37f9291" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt;, you must have the Tix widgets installed, usually alongside your installation of the Tk widgets. To test your installation, try the following:</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;を使用するには、通常Tkウィジェットのインストールと並んで、Tixウィジェットがインストールされている必要があります。インストールをテストするには、次のことを試してください。</target>
        </trans-unit>
        <trans-unit id="c80b24bc87319ccdb03a02574403ef35e2701467" translate="yes" xml:space="preserve">
          <source>To use a custom &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; subclass, specify it with the &lt;code&gt;cls&lt;/code&gt; kwarg; otherwise &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; is used. Additional keyword arguments will be passed to the constructor of the class.</source>
          <target state="translated">カスタム&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;サブクラスを使用するには、 &lt;code&gt;cls&lt;/code&gt; kwarg で指定します。それ以外の場合は、&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;が使用されます。追加のキーワード引数がクラスのコンストラクターに渡されます。</target>
        </trans-unit>
        <trans-unit id="a97a53a9d579579b044ea3cdec56452a32f4bec6" translate="yes" xml:space="preserve">
          <source>To use a custom &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; subclass (e.g. one that overrides the &lt;code&gt;default()&lt;/code&gt; method to serialize additional types), specify it with the &lt;em&gt;cls&lt;/em&gt; kwarg; otherwise &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">カスタム&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;サブクラス（たとえば、 &lt;code&gt;default()&lt;/code&gt; メソッドをオーバーライドして追加の型をシリアル化するサブクラス）を使用するには、&lt;em&gt;cls&lt;/em&gt; kwargでそれを指定します。それ以外の場合は、&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="38ce15cd49858ae2aef9bf6dd093452e9c81953e" translate="yes" xml:space="preserve">
          <source>To use a custom SMTPChannel implementation you need to override the &lt;a href=&quot;#smtpd.SMTPServer.channel_class&quot;&gt;&lt;code&gt;SMTPServer.channel_class&lt;/code&gt;&lt;/a&gt; of your &lt;a href=&quot;#smtpd.SMTPServer&quot;&gt;&lt;code&gt;SMTPServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カスタムSMTPChannel実装を使用するには、オーバーライドする必要があり&lt;a href=&quot;#smtpd.SMTPServer.channel_class&quot;&gt; &lt;code&gt;SMTPServer.channel_class&lt;/code&gt; &lt;/a&gt;あなたの&lt;a href=&quot;#smtpd.SMTPServer&quot;&gt; &lt;code&gt;SMTPServer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d50f707cfc603f844f47e754486a7e1138485664" translate="yes" xml:space="preserve">
          <source>To use compound turtle shapes, which consist of several polygons of different color, you must use the helper class &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; explicitly as described below:</source>
          <target state="translated">異なる色の複数のポリゴンで構成される複合タートルシェイプを使用するには、以下で説明するように、ヘルパークラス&lt;a href=&quot;#turtle.Shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; を&lt;/a&gt;明示的に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c1ba519887a8ab65c40b47b31ca3ead5d8a9aff8" translate="yes" xml:space="preserve">
          <source>To use multiple turtles on a screen one has to use the object-oriented interface.</source>
          <target state="translated">画面上で複数のカメを使用するには、オブジェクト指向のインターフェースを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b992ab6d688ed006c9a1f3c48e6d6442838b0dd7" translate="yes" xml:space="preserve">
          <source>To use the module, you must first create a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object that represents the database. Here the data will be stored in the &lt;code&gt;example.db&lt;/code&gt; file:</source>
          <target state="translated">モジュールを使用するには、最初にデータベースを表す&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを作成する必要があります。ここで、データは &lt;code&gt;example.db&lt;/code&gt; ファイルに保存されます。</target>
        </trans-unit>
        <trans-unit id="135aae4c52ce4b15c7c009fef1b0ca569c8aa602" translate="yes" xml:space="preserve">
          <source>To use them call &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; as normal and keep a reference to the returned &lt;code&gt;patcher&lt;/code&gt; object. You can then call &lt;code&gt;start()&lt;/code&gt; to put the patch in place and &lt;code&gt;stop()&lt;/code&gt; to undo it.</source>
          <target state="translated">それらを使用するには、&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt; &lt;code&gt;patch.object()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;、patch.object（）または&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;を呼び出し、返さ &lt;code&gt;patcher&lt;/code&gt; オブジェクトへの参照を保持します。次に、 &lt;code&gt;start()&lt;/code&gt; を呼び出してパッチを配置し、 &lt;code&gt;stop()&lt;/code&gt; を呼び出して元に戻します。</target>
        </trans-unit>
        <trans-unit id="a04d85e7d8581cce27cdcbf35c1285f6123cef95" translate="yes" xml:space="preserve">
          <source>To validate a certificate for a particular service, you can use the &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">特定のサービスの証明書を検証するには、&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt;関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="6d5b36de85176d50bc616ddcb26662c16f18cfb1" translate="yes" xml:space="preserve">
          <source>To view the current settings, the common usage is:</source>
          <target state="translated">現在の設定を表示するには、一般的な使い方です。</target>
        </trans-unit>
        <trans-unit id="25c39d00c5f33d8ae92f80d44fd42daec3d39b6c" translate="yes" xml:space="preserve">
          <source>To work with plist data in bytes objects, use &lt;a href=&quot;#plistlib.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#plistlib.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイトオブジェクトのplistデータを操作するには、&lt;a href=&quot;#plistlib.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#plistlib.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="297905026d890e2e8243355af0ec2cc27371102f" translate="yes" xml:space="preserve">
          <source>To write or read binary data from/to the standard streams, use the underlying binary &lt;a href=&quot;io#io.TextIOBase.buffer&quot;&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/a&gt; object. For example, to write bytes to &lt;a href=&quot;#sys.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;sys.stdout.buffer.write(b'abc')&lt;/code&gt;.</source>
          <target state="translated">標準ストリームとの間でバイナリデータを読み書きするには、基になるバイナリ&lt;a href=&quot;io#io.TextIOBase.buffer&quot;&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;/a&gt;オブジェクトを使用します。たとえば、バイトを&lt;a href=&quot;#sys.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt;に書き込むには、 &lt;code&gt;sys.stdout.buffer.write(b'abc')&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="bb59b39ce1834db13694efdf0cd6ff6ff02425e2" translate="yes" xml:space="preserve">
          <source>To write out and to parse a plist file, use the &lt;a href=&quot;#plistlib.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">plistファイルを書き出して解析するには、&lt;a href=&quot;#plistlib.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;関数とload（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="1745bc6607fc215c3c7c61823c82138e48f4028e" translate="yes" xml:space="preserve">
          <source>To write tutorial documentation for a package, liberally illustrated with input-output examples. Depending on whether the examples or the expository text are emphasized, this has the flavor of &amp;ldquo;literate testing&amp;rdquo; or &amp;ldquo;executable documentation&amp;rdquo;.</source>
          <target state="translated">パッケージのチュートリアルドキュメントを作成するには、入出力の例を自由に示します。例と説明文のどちらが強調されているかに応じて、これは「読み書きのテスト」または「実行可能なドキュメント」のフレーバーを持っています。</target>
        </trans-unit>
        <trans-unit id="d25dd12b45e6a81f010b0a56a4dc0f0982041292" translate="yes" xml:space="preserve">
          <source>Toggle Tabs</source>
          <target state="translated">トグルタブ</target>
        </trans-unit>
        <trans-unit id="49eebd44a0b7cae07bba108684454fac421ae217" translate="yes" xml:space="preserve">
          <source>Toggle automatically opening the stack viewer on an unhandled exception.</source>
          <target state="translated">ハンドリングされていない例外でスタックビューアを自動的に開くかどうかをトグルします。</target>
        </trans-unit>
        <trans-unit id="709be1c4e06ce937ce109134ee51b54aed0e03b8" translate="yes" xml:space="preserve">
          <source>Toggle the selection state of each item in &lt;em&gt;items&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;items&lt;/em&gt;内の各アイテムの選択状態を切り替え&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="caebd5b8cbddc4475c405e61e04e4190e27500f7" translate="yes" xml:space="preserve">
          <source>Toggles the window between normal size and maximum height. The initial size defaults to 40 lines by 80 chars unless changed on the General tab of the Configure IDLE dialog. The maximum height for a screen is determined by momentarily maximizing a window the first time one is zoomed on the screen. Changing screen settings may invalidate the saved height. This toggle has no effect when a window is maximized.</source>
          <target state="translated">ウィンドウを通常のサイズと最大の高さの間で切り替えます。初期サイズのデフォルトは 40 行×80 文字です。画面の最大高さは、画面を最初にズームしたときにウィンドウを瞬間的に最大化することで決定される。画面設定を変更すると、保存された高さが無効になることがあります。このトグルはウィンドウが最大化されているときには何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="9646975b29962e37360aeb91034e6c068784a045" translate="yes" xml:space="preserve">
          <source>Token used to determine end of file. This will be set to the empty string (&lt;code&gt;''&lt;/code&gt;), in non-POSIX mode, and to &lt;code&gt;None&lt;/code&gt; in POSIX mode.</source>
          <target state="translated">ファイルの終わりを決定するために使用されるトークン。これは、非POSIXモードでは空の文字列（ &lt;code&gt;''&lt;/code&gt; ）に設定され、POSIXモードでは &lt;code&gt;None&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="16cae5602b3caafdaf94aff5138d6f4e7306ce60" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;!=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;!=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="b86dac8050e2e0fe59bbfbb856d1dab55acb93ce" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;%&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;%&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="cbfdb248d8cd19bbbcc877609c920721d1ea70a1" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;%=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;%=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="5fad4c655b643193212ddd54e05c2200a0585d87" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="09ea8c1d8139ee92700420a6e9d9a1fe6f2d7a7d" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;amp;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;amp;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="7577e9265009c87a3fbed49dfd6cc843a2b2cbf6" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="6a1c7e1c71d9be05a6b8a4e4b94f866389399156" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="51c75daa104193ecf006b0fcd0aadf86d0bb470d" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;&amp;gt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;&amp;gt;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="975cfb9e99e1b1719af82b61c50c79dbf15855c2" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="e3b1a1065dcde8b9a95d5840358ce973e13029e6" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="27117e7427212a73cef9306bfd8d32904b077760" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="37f9fe9280b0caf0120b0d333b0582b40ed8e8d7" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;&amp;lt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;&amp;lt;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="096dbca2d8035996074e27220e8dbd83ef780dba" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="d5c708b45d8f39bd617325c25f4812de96617673" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;(&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;(&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="18327d5eff01310d0a4402b710af59731824b495" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;)&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;)&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="9c76b270805b1a4fa9b7663756b8fc11eb6237ae" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;*&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="be3fb52143c54c07d78aef84da8b6ce63c06b07c" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;**&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;**&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="8ea8a289233c29e8390a3cba1410ef72f6df77a7" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;**=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;**=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="f7bb9643b98a9563af63301ae2f5eb1e0c81c1e3" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;*=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="85b32e10c19b5c0b632e41089d8b9ef29c3c0408" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;+&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;+&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="461a49ce243ba233541ce7431045e91176eb3c59" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;+=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;+=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="888610ba8dd07985852c6773f5fdd60c98169a40" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;,&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="d65b027b57b9b44eb9e73b20963ab437d175e245" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="48d463c1e62f59c507e1b5f21ca75187a7778fe0" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="aba8dee4771b2b55437288b8c0addbf948bf04ef" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;-=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;-=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="1e4dade593aea62b538b7b875cba862f012392de" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;.&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;.&quot;&lt;/code&gt; トークン値 。</target>
        </trans-unit>
        <trans-unit id="d422d21de323ce3dd3f982de5e81088eac87e43e" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;...&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="87e36640edaae52f4602e5ec159d6a25665979d3" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="66a85deaaa8f44db29f357d74508240dac8dc497" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;//&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;//&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="6ba39f80bb6b9c1266313b252b2ede42343eef14" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;//=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;//=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="f91c0679dbf2b6feb2d90e59560fb27b78fb5cb0" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;/=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="27fb4ca487ea2d2acd87d0144dc37e9417b0e6b5" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;:&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;:&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="e9b88acce02e2c44cfc438ec17a090e8b03f750b" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;:=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;:=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="176ba72e65d2cc2ac3a0ef119f5ee7765b2a7859" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;;&quot;&lt;/code&gt; トークン値 。</target>
        </trans-unit>
        <trans-unit id="0e2e7402f6cb7fba9d35c8cf4b7b59a836554560" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;=&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="83b85c1df0e5fa0d285d34b19a3f75ae2d068e4b" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;==&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;==&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="21ebe9b60a4cd36259d42529870d893bf45d707f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;@&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="562d37d12791923832dab094f3c882df283ae94f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;@=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;@=&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="04694683cab263b7e5328a88ef1cdfb9a7206b7e" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;[&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;[&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="171228101c615a61a16687264fc8b959bfa3898f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;]&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;]&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="b96129d765f2fc721f957ea503b8f940483e945a" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;^&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="98dd6ae68dc4fc9f5ac457b18e21de6926cb5f6f" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;^=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;^=&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="a719a03c56326a85b3001ccfd9ce0f5734172538" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;{&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;{&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="9a5f9e1fed1309f30c9042e1ad1355103d6fa147" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;|&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;|&quot;&lt;/code&gt; トークン値 。</target>
        </trans-unit>
        <trans-unit id="342f63c931b36b96537e06cc7417b755a05e7fd5" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;|=&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;|=&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="f773a07b06f7fd17273f93d0ffb58f47f64e4626" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;}&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;}&quot;&lt;/code&gt; のトークン値。</target>
        </trans-unit>
        <trans-unit id="f8f4c1b4ddcdb8a2fd9b6e54c8fec3a038ecb05a" translate="yes" xml:space="preserve">
          <source>Token value for &lt;code&gt;&quot;~&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;~&quot;&lt;/code&gt; トークン値。</target>
        </trans-unit>
        <trans-unit id="6c65b7769f5f6a2e3a25c7cb7dd686f45caf915a" translate="yes" xml:space="preserve">
          <source>Token value indicating that a type comment was recognized. Such tokens are only produced when &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt; is invoked with &lt;code&gt;type_comments=True&lt;/code&gt;.</source>
          <target state="translated">タイプコメントが認識されたことを示すトークン値。このようなトークンは、&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;type_comments=True&lt;/code&gt; で呼び出された場合にのみ生成されます。</target>
        </trans-unit>
        <trans-unit id="ccbde560ca6e91456cf2373616b13efcf7e6c048" translate="yes" xml:space="preserve">
          <source>Token value that indicates the encoding used to decode the source bytes into text. The first token returned by &lt;a href=&quot;tokenize#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize.tokenize()&lt;/code&gt;&lt;/a&gt; will always be an &lt;code&gt;ENCODING&lt;/code&gt; token.</source>
          <target state="translated">ソースバイトをテキストにデコードするために使用されるエンコーディングを示すトークン値。&lt;a href=&quot;tokenize#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize.tokenize()&lt;/code&gt; &lt;/a&gt;によって返される最初のトークンは、常に &lt;code&gt;ENCODING&lt;/code&gt; トークンになります。</target>
        </trans-unit>
        <trans-unit id="4f82464b470b42b75fa84935a9a5e610016164d1" translate="yes" xml:space="preserve">
          <source>Token value used to indicate a comment.</source>
          <target state="translated">コメントを示すために使用されるトークンの値。</target>
        </trans-unit>
        <trans-unit id="78d296a14bd59029382660ecee684a6365dfd786" translate="yes" xml:space="preserve">
          <source>Token value used to indicate a non-terminating newline. The &lt;a href=&quot;#token.NEWLINE&quot;&gt;&lt;code&gt;NEWLINE&lt;/code&gt;&lt;/a&gt; token indicates the end of a logical line of Python code; &lt;code&gt;NL&lt;/code&gt; tokens are generated when a logical line of code is continued over multiple physical lines.</source>
          <target state="translated">終了しない改行を示すために使用されるトークン値。&lt;a href=&quot;#token.NEWLINE&quot;&gt; &lt;code&gt;NEWLINE&lt;/code&gt; &lt;/a&gt; Pythonコードの論理行の終わりを示すトークン。 &lt;code&gt;NL&lt;/code&gt; トークンは、コードの論理行が複数の物理行に続く場合に生成されます。</target>
        </trans-unit>
        <trans-unit id="abd739ad8bf24203062992f9c33379060ce2b2cd" translate="yes" xml:space="preserve">
          <source>Tokenize a source reading unicode strings instead of bytes.</source>
          <target state="translated">バイトではなくユニコード文字列を読むソースをトークン化します。</target>
        </trans-unit>
        <trans-unit id="ba1bab500a51a619a214fb93843a992431974a3a" translate="yes" xml:space="preserve">
          <source>Tokenizing Input</source>
          <target state="translated">入力のトークン化</target>
        </trans-unit>
        <trans-unit id="4113b4c9ebd053469430304ab17dc16ea1d01df9" translate="yes" xml:space="preserve">
          <source>Too many links</source>
          <target state="translated">リンクが多すぎる</target>
        </trans-unit>
        <trans-unit id="c8452b0c049e050b8a8d8e298315154b410bb14f" translate="yes" xml:space="preserve">
          <source>Too many open files</source>
          <target state="translated">開いているファイルが多すぎる</target>
        </trans-unit>
        <trans-unit id="81e6c84235179bef6a424ade0379cdb4a2f8f2b6" translate="yes" xml:space="preserve">
          <source>Too many references: cannot splice</source>
          <target state="translated">参照先が多すぎる:スプライスできない</target>
        </trans-unit>
        <trans-unit id="9370b2a9a4016e2eac0b29188fd6198e7257fcbe" translate="yes" xml:space="preserve">
          <source>Too many symbolic links encountered</source>
          <target state="translated">シンボリックリンクが多すぎる</target>
        </trans-unit>
        <trans-unit id="21b53b1f02559d44a4e57d2971766159ebf6282f" translate="yes" xml:space="preserve">
          <source>Too many users</source>
          <target state="translated">ユーザーが多すぎる</target>
        </trans-unit>
        <trans-unit id="f26fcae8618d0de222fcbf33470328838b85c473" translate="yes" xml:space="preserve">
          <source>Tools for creating, reading, and managing collections of messages on disk using a variety standard formats.</source>
          <target state="translated">さまざまな標準フォーマットを使用して、ディスク上のメッセージのコレクションを作成、読み取り、管理するためのツール。</target>
        </trans-unit>
        <trans-unit id="e69f8935b44be8243365f3e9e267b01513883107" translate="yes" xml:space="preserve">
          <source>Tools for working with and analyzing pickled data.</source>
          <target state="translated">漬け物データの作業や分析を行うためのツールです。</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="30836d81384a3e0017ea997c2799917650592d98" translate="yes" xml:space="preserve">
          <source>Top highlight</source>
          <target state="translated">トップハイライト</target>
        </trans-unit>
        <trans-unit id="64deb39c4d87a95e799339a7c956a3d522c74200" translate="yes" xml:space="preserve">
          <source>Top level directory of project (defaults to start directory)</source>
          <target state="translated">プロジェクトのトップレベルのディレクトリ (デフォルトはスタートディレクトリ)</target>
        </trans-unit>
        <trans-unit id="42508320b4ccd94890ce331a9785cdd5bc246821" translate="yes" xml:space="preserve">
          <source>Top-level Non-Object, Non-Array Values</source>
          <target state="translated">トップレベルの非オブジェクト、非配列値</target>
        </trans-unit>
        <trans-unit id="1dfe8eaa64f9cad312ff5671ef0af2ab7a99ff2a" translate="yes" xml:space="preserve">
          <source>Toplevel widget of Tix which represents mostly the main window of an application. It has an associated Tcl interpreter.</source>
          <target state="translated">主にアプリケーションのメインウィンドウを表す Tix の Toplevel ウィジェット。これには、関連する Tcl インタプリタがあります。</target>
        </trans-unit>
        <trans-unit id="bec97d5be9912db81f4f9ca403f9d466e4c61a3d" translate="yes" xml:space="preserve">
          <source>Total size of memory blocks in bytes (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">バイト単位のメモリブロックの合計サイズ（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="75a7a310270ee5111fd87b87c27f5254e87ed4ed" translate="yes" xml:space="preserve">
          <source>Total size of memory blocks in bytes in the new snapshot (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been released in the new snapshot.</source>
          <target state="translated">新しいスナップショットのメモリブロックの合計サイズ（バイト）（ &lt;code&gt;int&lt;/code&gt; ）：新しいスナップショットでメモリブロックが解放されている場合は &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59b7ba7c881f0eee6a7d633e606139640e9a2656" translate="yes" xml:space="preserve">
          <source>Touch all locations in ancestors of the window that have been changed in the window.</source>
          <target state="translated">ウィンドウ内で変更されたウィンドウの祖先にあるすべての場所をタッチします。</target>
        </trans-unit>
        <trans-unit id="fc109642a782197e3f6c4d5776543cdb3ce34fc1" translate="yes" xml:space="preserve">
          <source>Touch each location in the window that has been touched in any of its ancestor windows. This routine is called by &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;, so it should almost never be necessary to call it manually.</source>
          <target state="translated">先祖ウィンドウのいずれかでタッチされたウィンドウ内の各場所をタッチします。このルーチンは&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;によって呼び出されるため、手動で呼び出す必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="dc2fd1e096e6ef9ba0534d8c7883f9f02b4d25c0" translate="yes" xml:space="preserve">
          <source>Touch the entire window, causing it to be completely redrawn on the next &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">ウィンドウ全体をタッチすると、次の&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;呼び出しでウィンドウが完全に再描画されます。</target>
        </trans-unit>
        <trans-unit id="86581fcb8efd9c5b78a214474ef387ed93f67805" translate="yes" xml:space="preserve">
          <source>Towers of Hanoi</source>
          <target state="translated">ハノイの塔</target>
        </trans-unit>
        <trans-unit id="2f38169a712e499b917900e244feafc980a814f4" translate="yes" xml:space="preserve">
          <source>Trace</source>
          <target state="translated">Trace</target>
        </trans-unit>
        <trans-unit id="729d0a3affdedff054a2ee5841a6ac39141fe3f0" translate="yes" xml:space="preserve">
          <source>Trace functions should have three arguments: &lt;em&gt;frame&lt;/em&gt;, &lt;em&gt;event&lt;/em&gt;, and &lt;em&gt;arg&lt;/em&gt;. &lt;em&gt;frame&lt;/em&gt; is the current stack frame. &lt;em&gt;event&lt;/em&gt; is a string: &lt;code&gt;'call'&lt;/code&gt;, &lt;code&gt;'line'&lt;/code&gt;, &lt;code&gt;'return'&lt;/code&gt;, &lt;code&gt;'exception'&lt;/code&gt; or &lt;code&gt;'opcode'&lt;/code&gt;. &lt;em&gt;arg&lt;/em&gt; depends on the event type.</source>
          <target state="translated">トレース関数には、&lt;em&gt;frame&lt;/em&gt;、&lt;em&gt;event&lt;/em&gt;、および&lt;em&gt;argの&lt;/em&gt; 3つの引数が必要です。&lt;em&gt;frame&lt;/em&gt;は現在のスタックフレームです。&lt;em&gt;event&lt;/em&gt;は文字列です： &lt;code&gt;'call'&lt;/code&gt; 、 &lt;code&gt;'line'&lt;/code&gt; 、 &lt;code&gt;'return'&lt;/code&gt; 、 &lt;code&gt;'exception'&lt;/code&gt; または &lt;code&gt;'opcode'&lt;/code&gt; 。&lt;em&gt;arg&lt;/em&gt;はイベントタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="cca95e549ae0599cf6045d07c596c4b7642f3723" translate="yes" xml:space="preserve">
          <source>Trace of a memory block.</source>
          <target state="translated">メモリブロックのトレース。</target>
        </trans-unit>
        <trans-unit id="73df02b52d2db987ebcc21c2fe2978cd599e8c7e" translate="yes" xml:space="preserve">
          <source>Traceback</source>
          <target state="translated">Traceback</target>
        </trans-unit>
        <trans-unit id="1a915c9c47f65dc32b432643b8b0acf75347e53a" translate="yes" xml:space="preserve">
          <source>Traceback Examples</source>
          <target state="translated">トレースバックの例</target>
        </trans-unit>
        <trans-unit id="ce11c2ebf77907c8459174d3b9b1486ef8e6b046" translate="yes" xml:space="preserve">
          <source>Traceback where an object was allocated</source>
          <target state="translated">オブジェクトが割り当てられた場所をトレースバック</target>
        </trans-unit>
        <trans-unit id="f97c295c1a3039941729feab98e098409fe68202" translate="yes" xml:space="preserve">
          <source>Traceback where the memory block was allocated, &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">メモリブロックが割り当てられた&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;、トレースバックインスタンス。</target>
        </trans-unit>
        <trans-unit id="215f86e5666b2b6438b7dcad21a57321b228f03b" translate="yes" xml:space="preserve">
          <source>Traceback where the memory blocks were allocated, &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">メモリブロックが割り当てられた&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;、トレースバックインスタンス。</target>
        </trans-unit>
        <trans-unit id="ddf046523d04587bec23897cf0fd9f9c5d47f3d5" translate="yes" xml:space="preserve">
          <source>TracebackException Objects</source>
          <target state="translated">TracebackException オブジェクト</target>
        </trans-unit>
        <trans-unit id="a74a9e1b5688ce3aa1134bcee9d6faead806e5df" translate="yes" xml:space="preserve">
          <source>Tracebacks of traces are limited to &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; frames. Use the &lt;em&gt;nframe&lt;/em&gt; parameter of the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; function to store more frames.</source>
          <target state="translated">トレースのトレースバックは&lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt;フレームに制限されています。&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;関数の&lt;em&gt;nframe&lt;/em&gt;パラメータを使用して、より多くのフレームを保存します。</target>
        </trans-unit>
        <trans-unit id="20d9eefaebb02bf1f35e2c2af8f942a78a015d4e" translate="yes" xml:space="preserve">
          <source>Traces of all memory blocks allocated by Python: sequence of &lt;a href=&quot;#tracemalloc.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">Pythonによって割り当てられたすべてのメモリブロックの&lt;a href=&quot;#tracemalloc.Trace&quot;&gt; &lt;code&gt;Trace&lt;/code&gt; &lt;/a&gt;：Traceインスタンスのシーケンス。</target>
        </trans-unit>
        <trans-unit id="7bf75e7c8b0f02ab018d760d1e9e5211c51a7a30" translate="yes" xml:space="preserve">
          <source>Tracking all Calls</source>
          <target state="translated">すべての通話を追跡する</target>
        </trans-unit>
        <trans-unit id="e1e96da1294b28f1d2a1b0c918ca3c4901dc294f" translate="yes" xml:space="preserve">
          <source>Tracking order of calls and less verbose call assertions</source>
          <target state="translated">呼の順序を追跡し、より冗長な呼のアサーションを減らす</target>
        </trans-unit>
        <trans-unit id="3b612e72ed8b42ec172f3e6dbff27929a0f89575" translate="yes" xml:space="preserve">
          <source>Traditional Chinese</source>
          <target state="translated">伝統的な中国語</target>
        </trans-unit>
        <trans-unit id="3a41258116450da3b7bae163878df53968a02aa3" translate="yes" xml:space="preserve">
          <source>Transcode CGI variables from &lt;code&gt;os.environ&lt;/code&gt; to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;bytes in unicode&amp;rdquo; strings, returning a new dictionary. This function is used by &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wsgiref.handlers.IISCGIHandler&quot;&gt;&lt;code&gt;IISCGIHandler&lt;/code&gt;&lt;/a&gt; in place of directly using &lt;code&gt;os.environ&lt;/code&gt;, which is not necessarily WSGI-compliant on all platforms and web servers using Python 3 &amp;ndash; specifically, ones where the OS&amp;rsquo;s actual environment is Unicode (i.e. Windows), or ones where the environment is bytes, but the system encoding used by Python to decode it is anything other than ISO-8859-1 (e.g. Unix systems using UTF-8).</source>
          <target state="translated">CGI変数を &lt;code&gt;os.environ&lt;/code&gt; から&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 3333の&lt;/strong&gt;&lt;/a&gt;「Unicodeのバイト」文字列にトランスコードし、新しい辞書を返します。この関数は、 &lt;code&gt;os.environ&lt;/code&gt; を直接使用する代わりに&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#wsgiref.handlers.IISCGIHandler&quot;&gt; &lt;code&gt;IISCGIHandler&lt;/code&gt; &lt;/a&gt;によって使用されます。これは、Python 3を使用するすべてのプラットフォームおよびWebサーバー、特にOSの実際の環境がUnicode（つまりWindows）である場合、必ずしもWSGIに準拠しているとは限りません。環境がバイトであるが、Pythonがそれをデコードするために使用するシステムエンコーディングがISO-8859-1以外のもの（たとえば、UTF-8を使用するUnixシステム）。</target>
        </trans-unit>
        <trans-unit id="3494f1691e673629d7c793b2bb30afd3bb7d7eac" translate="yes" xml:space="preserve">
          <source>Transferring files</source>
          <target state="translated">ファイルの転送</target>
        </trans-unit>
        <trans-unit id="2cff264a027be4797d3845ae78c3ed06983f0e0b" translate="yes" xml:space="preserve">
          <source>Transfers the callback stack to a fresh &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; instance and returns it. No callbacks are invoked by this operation - instead, they will now be invoked when the new stack is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement).</source>
          <target state="translated">コールバックスタックを新しい&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;インスタンスに転送して返します。この操作ではコールバックは呼び出されません。代わりに、新しいスタックが閉じられたときに（&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントの最後で明示的または暗黙的に）コールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f6cc813676e43d2fcd0dd59a95a03fc47ef50a4a" translate="yes" xml:space="preserve">
          <source>Transform a function into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">関数を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;単一ディスパッチの&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;汎用関数に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="29e2be1612d0aa8942c71595cd96e42d73362205" translate="yes" xml:space="preserve">
          <source>Transform a method into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;single-dispatch&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;generic function&lt;/a&gt;.</source>
          <target state="translated">メソッドを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-single-dispatch&quot;&gt;単一ディスパッチの&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generic-function&quot;&gt;汎用関数に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="77d6e14d23f99b7595d3a17519773f7c518841e6" translate="yes" xml:space="preserve">
          <source>Transform a method into a class method.</source>
          <target state="translated">メソッドをクラスメソッドに変換します。</target>
        </trans-unit>
        <trans-unit id="bd552dd114347d110fdd0f27b833906c1a1deaeb" translate="yes" xml:space="preserve">
          <source>Transform a method into a static method.</source>
          <target state="translated">メソッドを静的メソッドに変換します。</target>
        </trans-unit>
        <trans-unit id="57af29cae6b948bcecd8e9b79ac28cd65f1862f9" translate="yes" xml:space="preserve">
          <source>Transform a method of a class into a property whose value is computed once and then cached as a normal attribute for the life of the instance. Similar to &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;, with the addition of caching. Useful for expensive computed properties of instances that are otherwise effectively immutable.</source>
          <target state="translated">クラスのメソッドをプロパティに変換します。その値は1回計算され、インスタンスの有効期間中は通常の属性としてキャッシュされます。&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; に&lt;/a&gt;似ていますが、キャッシングが追加されています。他の方法では効果的に不変である、インスタンスの高価な計算プロパティに役立ちます。</target>
        </trans-unit>
        <trans-unit id="f2245bfdf04797ba4ad3df2d8c1aa548c557eab0" translate="yes" xml:space="preserve">
          <source>Transform an old-style comparison function to a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt;. Used with tools that accept key functions (such as &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nlargest&quot;&gt;&lt;code&gt;heapq.nlargest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt;&lt;code&gt;heapq.nsmallest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;itertools#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;). This function is primarily used as a transition tool for programs being converted from Python 2 which supported the use of comparison functions.</source>
          <target state="translated">古いスタイルの比較関数を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;キー関数に変換します&lt;/a&gt;。キー関数を受け入れるツール（&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;heapq#heapq.nlargest&quot;&gt; &lt;code&gt;heapq.nlargest()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;heapq#heapq.nsmallest&quot;&gt; &lt;code&gt;heapq.nsmallest()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;itertools#itertools.groupby&quot;&gt; &lt;code&gt;itertools.groupby()&lt;/code&gt; など&lt;/a&gt;）で使用されます。この関数は、比較関数の使用をサポートするPython 2から変換されるプログラムの移行ツールとして主に使用されます。</target>
        </trans-unit>
        <trans-unit id="0d475eafab57f0600a394b645fd9f36b3327943b" translate="yes" xml:space="preserve">
          <source>Transform list &lt;em&gt;x&lt;/em&gt; into a heap, in-place, in linear time.</source>
          <target state="translated">リスト&lt;em&gt;x&lt;/em&gt;を、線形時間でインプレースのヒープに変換します。</target>
        </trans-unit>
        <trans-unit id="6fe84a1868be82491d31f1d9d8079682b81776df" translate="yes" xml:space="preserve">
          <source>Transforms a string to one that can be used in locale-aware comparisons. For example, &lt;code&gt;strxfrm(s1) &amp;lt; strxfrm(s2)&lt;/code&gt; is equivalent to &lt;code&gt;strcoll(s1, s2) &amp;lt; 0&lt;/code&gt;. This function can be used when the same string is compared repeatedly, e.g. when collating a sequence of strings.</source>
          <target state="translated">文字列を、ロケール対応の比較で使用できるものに変換します。たとえば、 &lt;code&gt;strxfrm(s1) &amp;lt; strxfrm(s2)&lt;/code&gt; は &lt;code&gt;strcoll(s1, s2) &amp;lt; 0&lt;/code&gt; と同等です。この関数は、文字列のシーケンスを照合する場合など、同じ文字列が繰り返し比較される場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="59eb997dbc4748a8f708bc6652221a97c4a5cc52" translate="yes" xml:space="preserve">
          <source>Transforms the option name &lt;em&gt;option&lt;/em&gt; as found in an input file or as passed in by client code to the form that should be used in the internal structures. The default implementation returns a lower-case version of &lt;em&gt;option&lt;/em&gt;; subclasses may override this or client code can set an attribute of this name on instances to affect this behavior.</source>
          <target state="translated">入力ファイルにあるか、クライアントコードによって内部構造で使用されるフォームに渡されるように、オプション名&lt;em&gt;オプション&lt;/em&gt;を変換します。デフォルトの実装は、小文字のバージョンの&lt;em&gt;オプションを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。サブクラスでこれをオーバーライドするか、クライアントコードでインスタンスにこの名前の属性を設定して、この動作に影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="7a83d63b28fa4225a56bc0566e8e33c1cf91e595" translate="yes" xml:space="preserve">
          <source>Translate a host name to IPv4 address format, extended interface. Return a triple &lt;code&gt;(hostname, aliaslist, ipaddrlist)&lt;/code&gt; where &lt;em&gt;hostname&lt;/em&gt; is the primary host name responding to the given &lt;em&gt;ip_address&lt;/em&gt;, &lt;em&gt;aliaslist&lt;/em&gt; is a (possibly empty) list of alternative host names for the same address, and &lt;em&gt;ipaddrlist&lt;/em&gt; is a list of IPv4 addresses for the same interface on the same host (often but not always a single address). &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; does not support IPv6 name resolution, and &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">ホスト名をIPv4アドレス形式、拡張インターフェースに変換します。トリプル &lt;code&gt;(hostname, aliaslist, ipaddrlist)&lt;/code&gt; 返します。ここで、&lt;em&gt;hostname&lt;/em&gt;は&lt;em&gt;指定さ&lt;/em&gt;れた&lt;em&gt;ip_addressに&lt;/em&gt;応答するプライマリホスト名、&lt;em&gt;aliaslist&lt;/em&gt;は同じアドレスの代替ホスト名のリスト（空の場合もある）、&lt;em&gt;ipaddrlist&lt;/em&gt;はIPv4アドレスのリストです同じホスト上の同じインターフェース（多くの場合、必ずしも単一のアドレスではありません）。&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;はIPv6の名前解決をサポートしていません&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; / v6デュアルスタックをサポートするには、代わりにgetaddrinfo（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="70d07b15ee9a4f6a42ff4435887b259bd202d514" translate="yes" xml:space="preserve">
          <source>Translate a host name to IPv4 address format. The IPv4 address is returned as a string, such as &lt;code&gt;'100.50.200.5'&lt;/code&gt;. If the host name is an IPv4 address itself it is returned unchanged. See &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; for a more complete interface. &lt;a href=&quot;#socket.gethostbyname&quot;&gt;&lt;code&gt;gethostbyname()&lt;/code&gt;&lt;/a&gt; does not support IPv6 name resolution, and &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">ホスト名をIPv4アドレス形式に変換します。IPv4アドレスは、 &lt;code&gt;'100.50.200.5'&lt;/code&gt; などの文字列として返されます。ホスト名がIPv4アドレス自体の場合は、変更されずに返されます。より完全なインターフェースについては&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;a href=&quot;#socket.gethostbyname&quot;&gt; &lt;code&gt;gethostbyname()&lt;/code&gt; &lt;/a&gt;はIPv6の名前解決をサポートしていません&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; / v6デュアルスタックをサポートするには、代わりにgetaddrinfo（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e008d42be736fc0c81a4d9b6b6bedd2f1699d3e4" translate="yes" xml:space="preserve">
          <source>Translate a socket address &lt;em&gt;sockaddr&lt;/em&gt; into a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt;. Depending on the settings of &lt;em&gt;flags&lt;/em&gt;, the result can contain a fully-qualified domain name or numeric address representation in &lt;em&gt;host&lt;/em&gt;. Similarly, &lt;em&gt;port&lt;/em&gt; can contain a string port name or a numeric port number.</source>
          <target state="translated">ソケットアドレス&lt;em&gt;sockaddr&lt;/em&gt;を2タプル &lt;code&gt;(host, port)&lt;/code&gt; 変換します。&lt;em&gt;フラグ&lt;/em&gt;の設定に応じて、結果には&lt;em&gt;hostの&lt;/em&gt;完全修飾ドメイン名または数値アドレス表現が含まれる可能性があり&lt;em&gt;ます&lt;/em&gt;。同様に、&lt;em&gt;portに&lt;/em&gt;は文字列のポート名または数値のポート番号を含めることができます。</target>
        </trans-unit>
        <trans-unit id="043a7fd2528ceea779160e39be4de88da98043fe" translate="yes" xml:space="preserve">
          <source>Translate an Internet port number and protocol name to a service name for that service. The optional protocol name, if given, should be &lt;code&gt;'tcp'&lt;/code&gt; or &lt;code&gt;'udp'&lt;/code&gt;, otherwise any protocol will match.</source>
          <target state="translated">インターネットポート番号とプロトコル名をそのサービスのサービス名に変換します。オプションのプロトコル名を指定する場合は、 &lt;code&gt;'tcp'&lt;/code&gt; または &lt;code&gt;'udp'&lt;/code&gt; にする必要があります。そうでない場合は、すべてのプロトコルが一致します。</target>
        </trans-unit>
        <trans-unit id="9c6347fecd97c9239fbe8e190539881f5b00aaad" translate="yes" xml:space="preserve">
          <source>Translate an Internet protocol name (for example, &lt;code&gt;'icmp'&lt;/code&gt;) to a constant suitable for passing as the (optional) third argument to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function. This is usually only needed for sockets opened in &amp;ldquo;raw&amp;rdquo; mode (&lt;a href=&quot;#socket.SOCK_RAW&quot;&gt;&lt;code&gt;SOCK_RAW&lt;/code&gt;&lt;/a&gt;); for the normal socket modes, the correct protocol is chosen automatically if the protocol is omitted or zero.</source>
          <target state="translated">インターネットプロトコル名（たとえば、 &lt;code&gt;'icmp'&lt;/code&gt; ）を（オプションの）3番目の引数として&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;関数に渡すのに適した定数に変換します。これは通常、「raw」モード（&lt;a href=&quot;#socket.SOCK_RAW&quot;&gt; &lt;code&gt;SOCK_RAW&lt;/code&gt; &lt;/a&gt;）で開かれたソケットにのみ必要です。通常のソケットモードでは、プロトコルが省略されているかゼロの場合、正しいプロトコルが自動的に選択されます。</target>
        </trans-unit>
        <trans-unit id="2c2ac3cca9292668377fba4ee4623c03c2cd3d27" translate="yes" xml:space="preserve">
          <source>Translate an Internet service name and protocol name to a port number for that service. The optional protocol name, if given, should be &lt;code&gt;'tcp'&lt;/code&gt; or &lt;code&gt;'udp'&lt;/code&gt;, otherwise any protocol will match.</source>
          <target state="translated">インターネットサービス名とプロトコル名をそのサービスのポート番号に変換します。オプションのプロトコル名を指定する場合は、 &lt;code&gt;'tcp'&lt;/code&gt; または &lt;code&gt;'udp'&lt;/code&gt; にする必要があります。そうでない場合、すべてのプロトコルが一致します。</target>
        </trans-unit>
        <trans-unit id="c6167576bbe6424a770750fda6b310cd33b5754d" translate="yes" xml:space="preserve">
          <source>Translate the &lt;em&gt;host&lt;/em&gt;/&lt;em&gt;port&lt;/em&gt; argument into a sequence of 5-tuples that contain all the necessary arguments for creating a socket connected to that service. &lt;em&gt;host&lt;/em&gt; is a domain name, a string representation of an IPv4/v6 address or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;port&lt;/em&gt; is a string service name such as &lt;code&gt;'http'&lt;/code&gt;, a numeric port number or &lt;code&gt;None&lt;/code&gt;. By passing &lt;code&gt;None&lt;/code&gt; as the value of &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;, you can pass &lt;code&gt;NULL&lt;/code&gt; to the underlying C API.</source>
          <target state="translated">翻訳&lt;em&gt;ホスト&lt;/em&gt; / &lt;em&gt;ポート&lt;/em&gt;引数はそのサービスに接続されたソケットを作成するために必要なすべての引数を含む5タプルのシーケンスに。&lt;em&gt;host&lt;/em&gt;はドメイン名、IPv4 / v6アドレスの文字列表現、または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;port&lt;/em&gt;は、 &lt;code&gt;'http'&lt;/code&gt; 、数値のポート番号、または &lt;code&gt;None&lt;/code&gt; などの文字列サービス名です。&lt;em&gt;host&lt;/em&gt;と&lt;em&gt;portの&lt;/em&gt;値として &lt;code&gt;None&lt;/code&gt; を渡すことにより、基礎となるC APIに &lt;code&gt;NULL&lt;/code&gt; を渡すことができます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57cc23b1ca1f4bdb359fda45a6c0cfa2bf20d929" translate="yes" xml:space="preserve">
          <source>Translation classes are what actually implement the translation of original source file message strings to translated message strings. The base class used by all translation classes is &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt;; this provides the basic interface you can use to write your own specialized translation classes. Here are the methods of &lt;code&gt;NullTranslations&lt;/code&gt;:</source>
          <target state="translated">翻訳クラスは、元のソースファイルメッセージ文字列から翻訳されたメッセージ文字列への翻訳を実際に実装するクラスです。すべての変換クラスで使用される基本クラスは&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;です。これは、独自の特殊な翻訳クラスを作成するために使用できる基本的なインターフェースを提供します。 &lt;code&gt;NullTranslations&lt;/code&gt; のメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a38cacbb1ca124ad8f23834d55a6a98f51f54e09" translate="yes" xml:space="preserve">
          <source>Translation of docstrings into different languages</source>
          <target state="translated">ドクストリングの異なる言語への翻訳</target>
        </trans-unit>
        <trans-unit id="5819361fc7a2ef298014871c32b98dcda96e637b" translate="yes" xml:space="preserve">
          <source>Transparent Content Negotiation in HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 2295&lt;/strong&gt;&lt;/a&gt;, Section 8.1 (Experimental)</source>
          <target state="translated">HTTP &lt;a href=&quot;https://tools.ietf.org/html/rfc2295.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 2295の&lt;/strong&gt;&lt;/a&gt;透過的なコンテンツネゴシエーション、セクション8.1（試験的）</target>
        </trans-unit>
        <trans-unit id="013dfe5673d630bea0c413d2532e94026706f073" translate="yes" xml:space="preserve">
          <source>Transparently opens files compressed with gzip and bzip2 (recognized by the extensions &lt;code&gt;'.gz'&lt;/code&gt; and &lt;code&gt;'.bz2'&lt;/code&gt;) using the &lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; modules. If the filename extension is not &lt;code&gt;'.gz'&lt;/code&gt; or &lt;code&gt;'.bz2'&lt;/code&gt;, the file is opened normally (ie, using &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; without any decompression).</source>
          <target state="translated">&lt;a href=&quot;gzip#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;モジュールを使用して、gzipおよびbzip2（拡張子 &lt;code&gt;'.gz'&lt;/code&gt; および &lt;code&gt;'.bz2'&lt;/code&gt; で認識）で圧縮されたファイルを透過的に開きます。ファイル名の拡張子が &lt;code&gt;'.gz'&lt;/code&gt; または &lt;code&gt;'.bz2'&lt;/code&gt; でない場合、ファイルは通常どおりに開かれます（つまり、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を使用して解凍せずに）。</target>
        </trans-unit>
        <trans-unit id="8ba05920f9cac3c752bf58531bc3aff23fb4f8d5" translate="yes" xml:space="preserve">
          <source>Transport endpoint is already connected</source>
          <target state="translated">トランスポートエンドポイントが既に接続されている</target>
        </trans-unit>
        <trans-unit id="42b6cb1e2709a84c628f001deda5c6f4c66e6e2f" translate="yes" xml:space="preserve">
          <source>Transport endpoint is not connected</source>
          <target state="translated">トランスポートエンドポイントが接続されていない</target>
        </trans-unit>
        <trans-unit id="fe569542c10e401dbb4be544f1e89297055140e3" translate="yes" xml:space="preserve">
          <source>Transport objects are always instantiated by an &lt;a href=&quot;asyncio-eventloop#asyncio-event-loop&quot;&gt;asyncio event loop&lt;/a&gt;.</source>
          <target state="translated">トランスポートオブジェクトは、常に&lt;a href=&quot;asyncio-eventloop#asyncio-event-loop&quot;&gt;asyncioイベントループ&lt;/a&gt;によってインスタンス化されます。</target>
        </trans-unit>
        <trans-unit id="fbd2edc0da02a266d5cdec2e57c47c688da6fda8" translate="yes" xml:space="preserve">
          <source>Transports</source>
          <target state="translated">Transports</target>
        </trans-unit>
        <trans-unit id="4761cb167f0448d6e20290552ca05bb90b3bb24d" translate="yes" xml:space="preserve">
          <source>Transports Hierarchy</source>
          <target state="translated">交通機関の階層</target>
        </trans-unit>
        <trans-unit id="c1d7e246eaa462ae433bf46e7c1126b7c1acd3ea" translate="yes" xml:space="preserve">
          <source>Transports and Protocols</source>
          <target state="translated">トランスポートとプロトコル</target>
        </trans-unit>
        <trans-unit id="264cb105f9be5010db06f954d5f74816deacc8c2" translate="yes" xml:space="preserve">
          <source>Transports and Protocols are used by the &lt;strong&gt;low-level&lt;/strong&gt; event loop APIs such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;. They use callback-based programming style and enable high-performance implementations of network or IPC protocols (e.g. HTTP).</source>
          <target state="translated">トランスポートとプロトコルは、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;などの&lt;strong&gt;低レベルの&lt;/strong&gt;イベントループAPI によって使用されます。コールバックベースのプログラミングスタイルを使用し、ネットワークまたはIPCプロトコル（HTTPなど）の高性能な実装を可能にします。</target>
        </trans-unit>
        <trans-unit id="a77987d2d7a6956f8a337ae29fb7fb8773743f16" translate="yes" xml:space="preserve">
          <source>Transports are classes provided by &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; in order to abstract various kinds of communication channels.</source>
          <target state="translated">トランスポートは、さまざまな種類の通信チャネルを抽象化するために&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;によって提供されるクラスです。</target>
        </trans-unit>
        <trans-unit id="303f4351f2c69150d0eddec52cfeb625b2371c1e" translate="yes" xml:space="preserve">
          <source>Transports returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;によって返されるトランスポート：</target>
        </trans-unit>
        <trans-unit id="d9873fba572493e3eaa82cea5f269402afce8d20" translate="yes" xml:space="preserve">
          <source>Transports that can Send data (TCP and Unix connections, pipes, etc). Returned from methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;, etc:</source>
          <target state="translated">データを送信できるトランスポート（TCPおよびUnix接続、パイプなど）。&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;などのメソッドから返されます。</target>
        </trans-unit>
        <trans-unit id="a051bdcbc525919b993b381956fc20546b16e4a1" translate="yes" xml:space="preserve">
          <source>Transports that can receive data (TCP and Unix connections, pipes, etc). Returned from methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;, etc:</source>
          <target state="translated">データを受信できるトランスポート（TCPおよびUnix接続、パイプなど）。&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;などのメソッドから返されます。</target>
        </trans-unit>
        <trans-unit id="509f851ebb0250fc3a0869d4049ba708e0505ba6" translate="yes" xml:space="preserve">
          <source>Trashed</source>
          <target state="translated">Trashed</target>
        </trans-unit>
        <trans-unit id="e28f72c47fa3b5ed393703d102760467590a1188" translate="yes" xml:space="preserve">
          <source>Tree heading area.</source>
          <target state="translated">ツリーヘディングエリア。</target>
        </trans-unit>
        <trans-unit id="6881932baff27b84638af452003fe7547ebad2f3" translate="yes" xml:space="preserve">
          <source>Tree mode</source>
          <target state="translated">ツリーモード</target>
        </trans-unit>
        <trans-unit id="baf786d49c14bdaf0256d96340c5f4e28abb53d2" translate="yes" xml:space="preserve">
          <source>TreeBuilder Objects</source>
          <target state="translated">TreeBuilder オブジェクト</target>
        </trans-unit>
        <trans-unit id="d78dca84fb22f51e97d39c20a021d39026e0b47d" translate="yes" xml:space="preserve">
          <source>Treeview</source>
          <target state="translated">Treeview</target>
        </trans-unit>
        <trans-unit id="cd6a940383f49ad00c6557c201e300253f2a02b1" translate="yes" xml:space="preserve">
          <source>Tries to compile &lt;em&gt;source&lt;/em&gt;, which should be a string of Python code and return a code object if &lt;em&gt;source&lt;/em&gt; is valid Python code. In that case, the filename attribute of the code object will be &lt;em&gt;filename&lt;/em&gt;, which defaults to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;. Returns &lt;code&gt;None&lt;/code&gt; if &lt;em&gt;source&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; valid Python code, but is a prefix of valid Python code.</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt;をコンパイルしようとします。これはPythonコードの文字列である必要があり、&lt;em&gt;source&lt;/em&gt;が有効なPythonコードの場合はコードオブジェクトを返します。その場合、コードオブジェクトのfilename属性は&lt;em&gt;filenameで&lt;/em&gt;、デフォルトは &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; です。戻り値 &lt;code&gt;None&lt;/code&gt; もし&lt;em&gt;ソースが&lt;/em&gt;ある&lt;em&gt;ではない&lt;/em&gt;有効なPythonのコードが、有効なPythonコードの接頭辞です。</target>
        </trans-unit>
        <trans-unit id="54f73f8dd5429f4a01f4af96bdf0dbb59c9d9b9f" translate="yes" xml:space="preserve">
          <source>Tries to create a socket; on failure, uses an exponential back-off algorithm. On initial failure, the handler will drop the message it was trying to send. When subsequent messages are handled by the same instance, it will not try connecting until some time has passed. The default parameters are such that the initial delay is one second, and if after that delay the connection still can&amp;rsquo;t be made, the handler will double the delay each time up to a maximum of 30 seconds.</source>
          <target state="translated">ソケットを作成しようとします。失敗時には、指数バックオフアルゴリズムを使用します。最初の失敗時に、ハンドラーは送信しようとしたメッセージをドロップします。後続のメッセージが同じインスタンスによって処理される場合、しばらく時間が経過するまで接続は試行されません。デフォルトのパラメーターは、初期遅延が1秒であり、その後も接続を確立できない場合、ハンドラーは毎回最大30秒まで遅延を2倍にします。</target>
        </trans-unit>
        <trans-unit id="723b7551d8d8f217ec734b051a205c9a9d64447b" translate="yes" xml:space="preserve">
          <source>Tries to determine the default locale settings and returns them as a tuple of the form &lt;code&gt;(language code, encoding)&lt;/code&gt;.</source>
          <target state="translated">デフォルトのロケール設定の決定を試み、それらを &lt;code&gt;(language code, encoding)&lt;/code&gt; という形式のタプルとして返します。</target>
        </trans-unit>
        <trans-unit id="f6e122f407603681d635913886b1cca45552154d" translate="yes" xml:space="preserve">
          <source>Tries to determine the libc version against which the file executable (defaults to the Python interpreter) is linked. Returns a tuple of strings &lt;code&gt;(lib,
version)&lt;/code&gt; which default to the given parameters in case the lookup fails.</source>
          <target state="translated">実行可能ファイル（デフォルトではPythonインタープリター）がリンクされているlibcバージョンを判別しようとします。文字列 &lt;code&gt;(lib, version)&lt;/code&gt; タプルを返します。これは、検索が失敗した場合にデフォルトで指定されたパラメーターになります。</target>
        </trans-unit>
        <trans-unit id="b9e4c026492c440bf32166e0789393487d03b254" translate="yes" xml:space="preserve">
          <source>Trigonometric functions</source>
          <target state="translated">三角関数</target>
        </trans-unit>
        <trans-unit id="94503f7ff8b00ca0e33985b5db4eb1f04f5842aa" translate="yes" xml:space="preserve">
          <source>Triple quoted strings may span multiple lines - all associated whitespace will be included in the string literal.</source>
          <target state="translated">トリプルクォートされた文字列は複数行に渡ることがあります-関連する空白はすべて文字列リテラルに含まれます。</target>
        </trans-unit>
        <trans-unit id="ce93d3947ad07eda86b0f4a04d88b4fde0c3e713" translate="yes" xml:space="preserve">
          <source>Triple quoted: &lt;code&gt;'''Three single quotes'''&lt;/code&gt;, &lt;code&gt;&quot;&quot;&quot;Three double quotes&quot;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">三重引用符： &lt;code&gt;'''Three single quotes'''&lt;/code&gt; 、 &lt;code&gt;&quot;&quot;&quot;Three double quotes&quot;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e3160154fa07738c0749f5a1674876dac0991b9" translate="yes" xml:space="preserve">
          <source>Triple quoted: &lt;code&gt;b'''3 single quotes'''&lt;/code&gt;, &lt;code&gt;b&quot;&quot;&quot;3 double quotes&quot;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">三重引用符： &lt;code&gt;b'''3 single quotes'''&lt;/code&gt; 、 &lt;code&gt;b&quot;&quot;&quot;3 double quotes&quot;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="9799c2f01a14841243adfd69d6831aa48fd1922c" translate="yes" xml:space="preserve">
          <source>Truncate the file corresponding to &lt;em&gt;path&lt;/em&gt;, so that it is at most &lt;em&gt;length&lt;/em&gt; bytes in size.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt;に対応するファイルを切り捨て、サイズが最大で&lt;em&gt;length&lt;/em&gt;バイトになるようにします。</target>
        </trans-unit>
        <trans-unit id="af680e38ac0cf3f9223497dde47b36e539f5b3b2" translate="yes" xml:space="preserve">
          <source>Truncate the file corresponding to file descriptor &lt;em&gt;fd&lt;/em&gt;, so that it is at most &lt;em&gt;length&lt;/em&gt; bytes in size. As of Python 3.3, this is equivalent to &lt;code&gt;os.truncate(fd, length)&lt;/code&gt;.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdに&lt;/em&gt;対応するファイルを切り捨てて、サイズが最大で&lt;em&gt;length&lt;/em&gt;バイトになるようにします。Python 3.3以降、これは &lt;code&gt;os.truncate(fd, length)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="bf21e5053e591409eb8326bfa9935e23594fdb97" translate="yes" xml:space="preserve">
          <source>Truth Test</source>
          <target state="translated">真実のテスト</target>
        </trans-unit>
        <trans-unit id="f768c2b1817c6d2e7da4fa131e14ada17a4413ca" translate="yes" xml:space="preserve">
          <source>Truth Value Testing</source>
          <target state="translated">真理値テスト</target>
        </trans-unit>
        <trans-unit id="042c862e4467d7d057cced262e6869dd75c22b7d" translate="yes" xml:space="preserve">
          <source>Try again</source>
          <target state="translated">もう一度試してみてください。</target>
        </trans-unit>
        <trans-unit id="65e343170835a746169f1c7b9ad30abe19ddd1b7" translate="yes" xml:space="preserve">
          <source>Try to find a library and return a pathname. &lt;em&gt;name&lt;/em&gt; is the library name without any prefix like &lt;code&gt;lib&lt;/code&gt;, suffix like &lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt; or version number (this is the form used for the posix linker option &lt;code&gt;-l&lt;/code&gt;). If no library can be found, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ライブラリを見つけてパス名を返すようにしてください。&lt;em&gt;name&lt;/em&gt;は、 &lt;code&gt;lib&lt;/code&gt; のような接頭辞、 &lt;code&gt;.so&lt;/code&gt; 、 &lt;code&gt;.dylib&lt;/code&gt; のような接尾辞、またはバージョン番号のないライブラリー&lt;em&gt;名&lt;/em&gt;です（これは、posixリンカーオプション &lt;code&gt;-l&lt;/code&gt; で使用される形式です）。ライブラリが見つからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a562fe84656e778191318907a6802010662517ce" translate="yes" xml:space="preserve">
          <source>Try to find a library and return a pathname. &lt;em&gt;name&lt;/em&gt; is the library name without any prefix like &lt;em&gt;lib&lt;/em&gt;, suffix like &lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt; or version number (this is the form used for the posix linker option &lt;code&gt;-l&lt;/code&gt;). If no library can be found, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ライブラリを見つけてパス名を返すようにしてください。&lt;em&gt;name&lt;/em&gt;は、&lt;em&gt;libの&lt;/em&gt;ような接頭辞、 &lt;code&gt;.so&lt;/code&gt; 、 &lt;code&gt;.dylib&lt;/code&gt; のような接尾辞、またはバージョン番号のないライブラリー&lt;em&gt;名&lt;/em&gt;です（これは、posixリンカーオプション &lt;code&gt;-l&lt;/code&gt; で使用される形式です）。ライブラリが見つからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ed2c04bc7d24d737144826a2ba71c94163776043" translate="yes" xml:space="preserve">
          <source>Try to get source code for the given object and display it.</source>
          <target state="translated">与えられたオブジェクトのソースコードを取得して表示してみます。</target>
        </trans-unit>
        <trans-unit id="2516887d302ab812a8c194feed3c558ddefb62c8" translate="yes" xml:space="preserve">
          <source>Try to guess which module an object was defined in.</source>
          <target state="translated">オブジェクトがどのモジュールで定義されているかを推測してみてください。</target>
        </trans-unit>
        <trans-unit id="ebd1d1f612e596ce7c3de763a40fa459d5004d6e" translate="yes" xml:space="preserve">
          <source>Try to match &lt;em&gt;reference&lt;/em&gt; as well as possible to a portion of &lt;em&gt;fragment&lt;/em&gt; (which should be the longer fragment). This is (conceptually) done by taking slices out of &lt;em&gt;fragment&lt;/em&gt;, using &lt;a href=&quot;#audioop.findfactor&quot;&gt;&lt;code&gt;findfactor()&lt;/code&gt;&lt;/a&gt; to compute the best match, and minimizing the result. The fragments should both contain 2-byte samples. Return a tuple &lt;code&gt;(offset, factor)&lt;/code&gt; where &lt;em&gt;offset&lt;/em&gt; is the (integer) offset into &lt;em&gt;fragment&lt;/em&gt; where the optimal match started and &lt;em&gt;factor&lt;/em&gt; is the (floating-point) factor as per &lt;a href=&quot;#audioop.findfactor&quot;&gt;&lt;code&gt;findfactor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;参照&lt;/em&gt;をできるだけ&lt;em&gt;フラグメントの一部&lt;/em&gt;（より長いフラグメントである必要があります）に一致させるようにしてください。これは（概念的に）&lt;em&gt;fragment&lt;/em&gt;からスライスを取り出し、&lt;a href=&quot;#audioop.findfactor&quot;&gt; &lt;code&gt;findfactor()&lt;/code&gt; &lt;/a&gt;を使用して最適な一致を計算し、結果を最小化することによって行われます。フラグメントには両方とも2バイトのサンプルが含まれている必要があります。タプル &lt;code&gt;(offset, factor)&lt;/code&gt; 返します。&lt;em&gt;オフセット&lt;/em&gt;は、&lt;em&gt;フラグメント&lt;/em&gt;への（整数）オフセットで、最適なマッチングが開始され、&lt;em&gt;ファクター&lt;/em&gt;は&lt;a href=&quot;#audioop.findfactor&quot;&gt; &lt;code&gt;findfactor()&lt;/code&gt; の&lt;/a&gt;ように（浮動小数点）ファクターです。</target>
        </trans-unit>
        <trans-unit id="9ac78d12a16aa80098bb54153e110d21246ae88e" translate="yes" xml:space="preserve">
          <source>Try to match a single dict with the supplied arguments.</source>
          <target state="translated">与えられた引数に単一のディクトをマッチさせようとします。</target>
        </trans-unit>
        <trans-unit id="b42726f25482d59cf0996a89fcd7e965117f2de5" translate="yes" xml:space="preserve">
          <source>Try to match a single stored value (&lt;em&gt;dv&lt;/em&gt;) with a supplied value (&lt;em&gt;v&lt;/em&gt;).</source>
          <target state="translated">単一の格納された値（&lt;em&gt;dv&lt;/em&gt;）を提供された値（&lt;em&gt;v&lt;/em&gt;）と一致させます。</target>
        </trans-unit>
        <trans-unit id="d185a34ec17e724666e5fcb4d5595d842b8d7712" translate="yes" xml:space="preserve">
          <source>Try to maximize code reuse. On occasion, tests will vary by something as small as what type of input is used. Minimize code duplication by subclassing a basic test class with a class that specifies the input:</source>
          <target state="translated">コードの再利用を最大化するようにしてください。時には、どのような入力タイプが使用されるかというような小さなことでテストが変わることもあります。基本的なテストクラスを入力を指定するクラスでサブクラス化することで、コードの重複を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="24c4d4b0384c5e8113577a77c50cd02909ab1752" translate="yes" xml:space="preserve">
          <source>Try to set the audio sampling rate to &lt;em&gt;samplerate&lt;/em&gt; samples per second. Returns the rate actually set. Most sound devices don&amp;rsquo;t support arbitrary sampling rates. Common rates are:</source>
          <target state="translated">オーディオサンプリングレートを設定するようにしてください&lt;em&gt;サンプルレート&lt;/em&gt;秒あたりのサンプル。実際に設定されたレートを返します。ほとんどのサウンドデバイスは、任意のサンプリングレートをサポートしていません。一般的な料金は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="dfd9bba471282a5364090df5e871704f1989384f" translate="yes" xml:space="preserve">
          <source>Try to set the current audio format to &lt;em&gt;format&lt;/em&gt;&amp;mdash;see &lt;a href=&quot;#ossaudiodev.oss_audio_device.getfmts&quot;&gt;&lt;code&gt;getfmts()&lt;/code&gt;&lt;/a&gt; for a list. Returns the audio format that the device was set to, which may not be the requested format. May also be used to return the current audio format&amp;mdash;do this by passing an &amp;ldquo;audio format&amp;rdquo; of &lt;code&gt;AFMT_QUERY&lt;/code&gt;.</source>
          <target state="translated">するために、現在のオーディオ形式を設定してみ&lt;em&gt;フォーマット&lt;/em&gt; -see &lt;a href=&quot;#ossaudiodev.oss_audio_device.getfmts&quot;&gt; &lt;code&gt;getfmts()&lt;/code&gt; &lt;/a&gt;リストするために。デバイスが設定されたオーディオ形式を返します。要求された形式ではない可能性があります。現在のオーディオ形式を返すために使用することもできます。これを行うには、 &lt;code&gt;AFMT_QUERY&lt;/code&gt; の「オーディオ形式」を渡します。</target>
        </trans-unit>
        <trans-unit id="01dc1292ce86f3caf0848ae2f322f3751399a279" translate="yes" xml:space="preserve">
          <source>Try to switch to UTF-8 mode. Returns the server response if successful, raises &lt;a href=&quot;#poplib.error_proto&quot;&gt;&lt;code&gt;error_proto&lt;/code&gt;&lt;/a&gt; if not. Specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc6856.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6856&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">UTF-8モードに切り替えてみてください。成功した場合はサーバーの応答を返し、&lt;a href=&quot;#poplib.error_proto&quot;&gt; &lt;code&gt;error_proto&lt;/code&gt; &lt;/a&gt;場合はerror_protoを発生させます。&lt;a href=&quot;https://tools.ietf.org/html/rfc6856.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6856で&lt;/strong&gt;&lt;/a&gt;指定されてい&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5f09fbf303e9d03d520306ba22518da9d405b4d0" translate="yes" xml:space="preserve">
          <source>Ttk Notebook widget manages a collection of windows and displays a single one at a time. Each child window is associated with a tab, which the user may select to change the currently-displayed window.</source>
          <target state="translated">Ttk Notebook ウィジェットはウィンドウのコレクションを管理し、一度に一つのウィンドウを表示します。各子ウィンドウはタブに関連付けられており、ユーザは現在表示されているウィンドウを変更するために選択することができます。</target>
        </trans-unit>
        <trans-unit id="0c1d99a87ace6521e39f8ca7d4263b05f86c18f3" translate="yes" xml:space="preserve">
          <source>Ttk Styling</source>
          <target state="translated">Ttk スタイリング</target>
        </trans-unit>
        <trans-unit id="a8b856639e268ec85b1013167342e759670b03a1" translate="yes" xml:space="preserve">
          <source>Ttk Widgets</source>
          <target state="translated">Ttk ウィジェット</target>
        </trans-unit>
        <trans-unit id="f3f01ae23b415dd491c9f60cdd3716bbb3432178" translate="yes" xml:space="preserve">
          <source>Ttk code:</source>
          <target state="translated">Ttkコードです。</target>
        </trans-unit>
        <trans-unit id="3b50c205ffc8d2593d73a3ea0a223ad651b40604" translate="yes" xml:space="preserve">
          <source>Ttk comes with 18 widgets, twelve of which already existed in tkinter: &lt;code&gt;Button&lt;/code&gt;, &lt;code&gt;Checkbutton&lt;/code&gt;, &lt;code&gt;Entry&lt;/code&gt;, &lt;code&gt;Frame&lt;/code&gt;, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;LabelFrame&lt;/code&gt;, &lt;code&gt;Menubutton&lt;/code&gt;, &lt;code&gt;PanedWindow&lt;/code&gt;, &lt;code&gt;Radiobutton&lt;/code&gt;, &lt;code&gt;Scale&lt;/code&gt;, &lt;code&gt;Scrollbar&lt;/code&gt;, and &lt;a href=&quot;#tkinter.ttk.Spinbox&quot;&gt;&lt;code&gt;Spinbox&lt;/code&gt;&lt;/a&gt;. The other six are new: &lt;a href=&quot;#tkinter.ttk.Combobox&quot;&gt;&lt;code&gt;Combobox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Notebook&quot;&gt;&lt;code&gt;Notebook&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Progressbar&quot;&gt;&lt;code&gt;Progressbar&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Separator&lt;/code&gt;, &lt;code&gt;Sizegrip&lt;/code&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview&quot;&gt;&lt;code&gt;Treeview&lt;/code&gt;&lt;/a&gt;. And all them are subclasses of &lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ttkには18個のウィジェットがあり、そのうち12個はすでに &lt;code&gt;Checkbutton&lt;/code&gt; に存在しています： &lt;code&gt;Button&lt;/code&gt; 、Checkbutton、 &lt;code&gt;Entry&lt;/code&gt; 、 &lt;code&gt;Frame&lt;/code&gt; 、 &lt;code&gt;Label&lt;/code&gt; 、 &lt;code&gt;LabelFrame&lt;/code&gt; 、 &lt;code&gt;Menubutton&lt;/code&gt; 、 &lt;code&gt;PanedWindow&lt;/code&gt; 、 &lt;code&gt;Radiobutton&lt;/code&gt; 、 &lt;code&gt;Scale&lt;/code&gt; 、 &lt;code&gt;Scrollbar&lt;/code&gt; 、および&lt;a href=&quot;#tkinter.ttk.Spinbox&quot;&gt; &lt;code&gt;Spinbox&lt;/code&gt; &lt;/a&gt;。他の6つは新しいもの：&lt;a href=&quot;#tkinter.ttk.Combobox&quot;&gt; &lt;code&gt;Combobox&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.ttk.Notebook&quot;&gt; &lt;code&gt;Notebook&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.ttk.Progressbar&quot;&gt; &lt;code&gt;Progressbar&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;Separator&lt;/code&gt; 、 &lt;code&gt;Sizegrip&lt;/code&gt; と&lt;a href=&quot;#tkinter.ttk.Treeview&quot;&gt; &lt;code&gt;Treeview&lt;/code&gt; &lt;/a&gt;。そしてそれらはすべて&lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt; &lt;code&gt;Widget&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="62d5887076eeffca16e822f085d3a6fac34dfe1c" translate="yes" xml:space="preserve">
          <source>Tuple comparison breaks for (priority, task) pairs if the priorities are equal and the tasks do not have a default comparison order.</source>
          <target state="translated">優先度が等しく、タスクがデフォルトの比較順序を持っていない場合、(優先度、タスク)ペアのタプル比較は中断されます。</target>
        </trans-unit>
        <trans-unit id="576f22e6784b810efe039380014c1113e2fb6f11" translate="yes" xml:space="preserve">
          <source>Tuple containing two dictionaries, mapping MIME types to a list of filename extensions: the first dictionary is for the non-standards types and the second one is for the standard types. They are initialized by &lt;a href=&quot;#mimetypes.common_types&quot;&gt;&lt;code&gt;common_types&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mimetypes.types_map&quot;&gt;&lt;code&gt;types_map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのディクショナリを含むタプル。MIMEタイプをファイル名拡張子のリストにマッピングします。最初のディクショナリは非標準タイプ用で、2番目のディクショナリは標準タイプ用です。それらは&lt;a href=&quot;#mimetypes.common_types&quot;&gt; &lt;code&gt;common_types&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#mimetypes.types_map&quot;&gt; &lt;code&gt;types_map&lt;/code&gt; &lt;/a&gt;によって初期化されます。</target>
        </trans-unit>
        <trans-unit id="35d389092135e415451df1c6a4fe91d613237182" translate="yes" xml:space="preserve">
          <source>Tuple containing two dictionaries, mapping filename extensions to MIME types: the first dictionary is for the non-standards types and the second one is for the standard types. They are initialized by &lt;a href=&quot;#mimetypes.common_types&quot;&gt;&lt;code&gt;common_types&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mimetypes.types_map&quot;&gt;&lt;code&gt;types_map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのディクショナリを含むタプル。ファイル名拡張子をMIMEタイプにマッピングします。最初のディクショナリは非標準タイプ用で、2番目のディクショナリは標準タイプ用です。それらは&lt;a href=&quot;#mimetypes.common_types&quot;&gt; &lt;code&gt;common_types&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#mimetypes.types_map&quot;&gt; &lt;code&gt;types_map&lt;/code&gt; &lt;/a&gt;によって初期化されます。</target>
        </trans-unit>
        <trans-unit id="d3c38138d37b7093520517627a140d12972e280c" translate="yes" xml:space="preserve">
          <source>Tuple of strings listing the field names. Useful for introspection and for creating new named tuple types from existing named tuples.</source>
          <target state="translated">フィールド名をリストアップした文字列のタプル。イントロスペクションや、既存の名前付きタプルから新しい名前付きタプル型を作成するのに便利です。</target>
        </trans-unit>
        <trans-unit id="f79c109bcba03e38eac40e1e4bcb6c02a02072c0" translate="yes" xml:space="preserve">
          <source>Tuple type; &lt;code&gt;Tuple[X, Y]&lt;/code&gt; is the type of a tuple of two items with the first item of type X and the second of type Y. The type of the empty tuple can be written as &lt;code&gt;Tuple[()]&lt;/code&gt;.</source>
          <target state="translated">タプルタイプ。 &lt;code&gt;Tuple[X, Y]&lt;/code&gt; は、最初の項目がタイプXで、​​2番目の項目がタイプYの2つの項目のタプルのタイプです。空のタプルのタイプは、 &lt;code&gt;Tuple[()]&lt;/code&gt; と書くことができます。</target>
        </trans-unit>
        <trans-unit id="538a8ce3fbdcaee00a14353bd57bcf3600c6e0d0" translate="yes" xml:space="preserve">
          <source>Tuples</source>
          <target state="translated">Tuples</target>
        </trans-unit>
        <trans-unit id="48434af86ae5af781700a355a8ecb54f31e4d982" translate="yes" xml:space="preserve">
          <source>Tuples are immutable sequences, typically used to store collections of heterogeneous data (such as the 2-tuples produced by the &lt;a href=&quot;functions#enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; built-in). Tuples are also used for cases where an immutable sequence of homogeneous data is needed (such as allowing storage in a &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instance).</source>
          <target state="translated">タプルは不変のシーケンスであり、通常は異種データのコレクション（&lt;a href=&quot;functions#enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt;組み込みによって生成される2タプルなど）を格納するために使用されます。タプルは、同種のデータの不変のシーケンスが必要な場合にも使用されます（&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;インスタンスに格納できるようにするなど）。</target>
        </trans-unit>
        <trans-unit id="0b386e8529fb736e9c4bd36aeb1f72fafbe39613" translate="yes" xml:space="preserve">
          <source>Tuples implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; sequence operations.</source>
          <target state="translated">タプルは、すべての&lt;a href=&quot;#typesseq-common&quot;&gt;一般的な&lt;/a&gt;シーケンス操作を実装します。</target>
        </trans-unit>
        <trans-unit id="820108fe4042aed941be834adbd58d5bd8b622c9" translate="yes" xml:space="preserve">
          <source>Tuples may be constructed in a number of ways:</source>
          <target state="translated">タプルはいくつかの方法で構築することができます。</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="bfddc6585154e8980d7d9f2464ddd6bcffde4f0c" translate="yes" xml:space="preserve">
          <source>Turn &lt;em&gt;all&lt;/em&gt; tabs into the correct number of spaces.</source>
          <target state="translated">ターン&lt;em&gt;すべて&lt;/em&gt;のスペースの正確な数にタブを。</target>
        </trans-unit>
        <trans-unit id="d432c331d5bf77692c8000616daf70b03f0e4997" translate="yes" xml:space="preserve">
          <source>Turn &lt;em&gt;leading&lt;/em&gt; stretches of spaces into tabs. (Note: We recommend using 4 space blocks to indent Python code.)</source>
          <target state="translated">ターン&lt;em&gt;有数&lt;/em&gt;のタブに空白のストレッチを。（注：4つのスペースブロックを使用してPythonコードをインデントすることをお勧めします。）</target>
        </trans-unit>
        <trans-unit id="81f0849860783f08e07acdaa613f08c3820b9ee6" translate="yes" xml:space="preserve">
          <source>Turn a 10-tuple as returned by &lt;a href=&quot;#email.utils.parsedate_tz&quot;&gt;&lt;code&gt;parsedate_tz()&lt;/code&gt;&lt;/a&gt; into a UTC timestamp (seconds since the Epoch). If the timezone item in the tuple is &lt;code&gt;None&lt;/code&gt;, assume local time.</source>
          <target state="translated">&lt;a href=&quot;#email.utils.parsedate_tz&quot;&gt; &lt;code&gt;parsedate_tz()&lt;/code&gt; &lt;/a&gt;によって返される10タプルをUTCタイムスタンプ（エポックからの秒数）に変換します。タプルのタイムゾーン項目が &lt;code&gt;None&lt;/code&gt; の場合は、現地時間と見なされます。</target>
        </trans-unit>
        <trans-unit id="cb07ad334e657f4211d17464bcc2a73ca9e67cdd" translate="yes" xml:space="preserve">
          <source>Turn off the standout attribute. On some terminals this has the side effect of turning off all attributes.</source>
          <target state="translated">目立つ属性をオフにします。いくつかのターミナルでは、これはすべての属性をオフにするという副作用があります。</target>
        </trans-unit>
        <trans-unit id="e0db49dc317a6c62e6f369a19109f78316e0ad8d" translate="yes" xml:space="preserve">
          <source>Turn on attribute &lt;em&gt;A_STANDOUT&lt;/em&gt;.</source>
          <target state="translated">属性&lt;em&gt;A_STANDOUTを&lt;/em&gt;オンにします。</target>
        </trans-unit>
        <trans-unit id="4d2f56812568c7f5b2fa977fd2479da08dd9b77d" translate="yes" xml:space="preserve">
          <source>Turn turtle animation on/off and set delay for update drawings. If &lt;em&gt;n&lt;/em&gt; is given, only each n-th regular screen update is really performed. (Can be used to accelerate the drawing of complex graphics.) When called without arguments, returns the currently stored value of n. Second argument sets delay value (see &lt;a href=&quot;#turtle.delay&quot;&gt;&lt;code&gt;delay()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">カメのアニメーションをオン/オフにし、図面の更新の遅延を設定します。&lt;em&gt;n&lt;/em&gt;が指定されている場合、実際に実行されるのは、n番目の定期的な画面更新のみです。（複雑なグラフィックスの描画を高速化するために使用できます。）引数なしで呼び出されると、現在格納されているnの値を返します。2番目の引数は遅延値を設定します（&lt;a href=&quot;#turtle.delay&quot;&gt; &lt;code&gt;delay()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f3940b4ff2adb1c60ab4ae7e097adb391cb0745c" translate="yes" xml:space="preserve">
          <source>Turn turtle left by &lt;em&gt;angle&lt;/em&gt; units. (Units are by default degrees, but can be set via the &lt;a href=&quot;#turtle.degrees&quot;&gt;&lt;code&gt;degrees()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#turtle.radians&quot;&gt;&lt;code&gt;radians()&lt;/code&gt;&lt;/a&gt; functions.) Angle orientation depends on the turtle mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;角度&lt;/em&gt;単位でカメを左に向けます。（単位はデフォルト度であるが、を介して設定することができる&lt;a href=&quot;#turtle.degrees&quot;&gt; &lt;code&gt;degrees()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#turtle.radians&quot;&gt; &lt;code&gt;radians()&lt;/code&gt; &lt;/a&gt;関数）角度配向は、参照、カメモードに依存する&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="292661246e0c70041c546baddc46aed04e518e00" translate="yes" xml:space="preserve">
          <source>Turn turtle right by &lt;em&gt;angle&lt;/em&gt; units. (Units are by default degrees, but can be set via the &lt;a href=&quot;#turtle.degrees&quot;&gt;&lt;code&gt;degrees()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#turtle.radians&quot;&gt;&lt;code&gt;radians()&lt;/code&gt;&lt;/a&gt; functions.) Angle orientation depends on the turtle mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">亀を&lt;em&gt;角度&lt;/em&gt;単位で右に向けます。（単位はデフォルト度であるが、を介して設定することができる&lt;a href=&quot;#turtle.degrees&quot;&gt; &lt;code&gt;degrees()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#turtle.radians&quot;&gt; &lt;code&gt;radians()&lt;/code&gt; &lt;/a&gt;関数）角度配向は、参照、カメモードに依存する&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9d856f25af2d9e07b1ef5aad4d012d7376ee596" translate="yes" xml:space="preserve">
          <source>Turtle Demo</source>
          <target state="translated">タートルデモ</target>
        </trans-unit>
        <trans-unit id="a0f41b1533a18c5574ab4500b21ca24174591f8f" translate="yes" xml:space="preserve">
          <source>Turtle can draw intricate shapes using programs that repeat simple moves.</source>
          <target state="translated">タートルは、単純な動きを繰り返すプログラムを使って複雑な形を描くことができます。</target>
        </trans-unit>
        <trans-unit id="2a24632f3c5d3eafd2990df1fdd275b46a5d8158" translate="yes" xml:space="preserve">
          <source>Turtle graphics in a Tk window.</source>
          <target state="translated">Tkウィンドウでの亀のグラフィック。</target>
        </trans-unit>
        <trans-unit id="9a1e38be75dff4a2c0ae0ad9aea10e788d28916e" translate="yes" xml:space="preserve">
          <source>Turtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967.</source>
          <target state="translated">タートルグラフィックスは、子供たちにプログラミングを紹介するための人気のある方法です。それは1967年にウォーリーFeurzeig、シーモアPapertとシンシアソロモンによって開発されたオリジナルのロゴプログラミング言語の一部でした。</target>
        </trans-unit>
        <trans-unit id="1ff814f0448dd7def11d04fd02e9cec44e3bbdd3" translate="yes" xml:space="preserve">
          <source>Turtle methods</source>
          <target state="translated">タートルメソッド</target>
        </trans-unit>
        <trans-unit id="96e24697788c1f2b6cc2700df67b60ac33f0a382" translate="yes" xml:space="preserve">
          <source>Turtle motion</source>
          <target state="translated">タートルモーション</target>
        </trans-unit>
        <trans-unit id="8796c60dd399ec39ec33b95027adedef2da97f8e" translate="yes" xml:space="preserve">
          <source>Turtle star</source>
          <target state="translated">亀の星</target>
        </trans-unit>
        <trans-unit id="9c0710f6fc26113ca313f375ee77130470a4e349" translate="yes" xml:space="preserve">
          <source>Turtle state</source>
          <target state="translated">タートルステート</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="3a397d7ece111012b516d309689206d97d75d9f3" translate="yes" xml:space="preserve">
          <source>Tutorial material on using curses with Python, by Andrew Kuchling and Eric Raymond.</source>
          <target state="translated">Andrew KuchlingとEric RaymondによるPythonでの呪いの使い方のチュートリアル資料です。</target>
        </trans-unit>
        <trans-unit id="4e8be26c995d9e54216ed6645e9836123debd695" translate="yes" xml:space="preserve">
          <source>Tutorial, reference and examples for learning SQL syntax.</source>
          <target state="translated">SQL構文を学習するためのチュートリアル、リファレンス、例題。</target>
        </trans-unit>
        <trans-unit id="d05acac61e27dac1572bffb3b8de9b3cf7fd0e3b" translate="yes" xml:space="preserve">
          <source>Two additional functions are defined for more general manipulation of the file&amp;rsquo;s mode:</source>
          <target state="translated">ファイルのモードのより一般的な操作のために、2つの追加の関数が定義されています。</target>
        </trans-unit>
        <trans-unit id="f5778fbfb9d58d541f9dff34e99f07ac44ecd72a" translate="yes" xml:space="preserve">
          <source>Two additional methods are supported:</source>
          <target state="translated">追加で2つの方法に対応しています。</target>
        </trans-unit>
        <trans-unit id="74fbbe6b7f586a0aa1c11ad358017225d3404209" translate="yes" xml:space="preserve">
          <source>Two auditing events are raised because the underlying API consists of two calls, each of which must raise its own event.</source>
          <target state="translated">基礎となるAPIは2つの呼び出しで構成されているため、2つの監査イベントが発生し、それぞれが独自のイベントを発生させなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e33dd2ef0fd579bfd7e4e16fef3331e9ee5d62c" translate="yes" xml:space="preserve">
          <source>Two class attributes can be modified, to improve performance, or possibly even to conserve memory.</source>
          <target state="translated">2つのクラス属性を変更することで、パフォーマンスを向上させたり、メモリを節約したりすることができます。</target>
        </trans-unit>
        <trans-unit id="aca3088aa647ffc33767d19b51e8acc79673c470" translate="yes" xml:space="preserve">
          <source>Two example scripts &lt;code&gt;tdemo_nim.py&lt;/code&gt; and &lt;code&gt;tdemo_round_dance.py&lt;/code&gt; have been added to the &lt;code&gt;Lib/turtledemo&lt;/code&gt; directory.</source>
          <target state="translated">2つのサンプルスクリプト &lt;code&gt;tdemo_nim.py&lt;/code&gt; および &lt;code&gt;tdemo_round_dance.py&lt;/code&gt; が &lt;code&gt;Lib/turtledemo&lt;/code&gt; ディレクトリに追加されました。</target>
        </trans-unit>
        <trans-unit id="3215c5c671bb59cb7f259dffd760947f8afd0e5e" translate="yes" xml:space="preserve">
          <source>Two functions are provided which allow an application to determine if an ST was created as an expression or a suite. Neither of these functions can be used to determine if an ST was created from source code via &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; or from a parse tree via &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">STが式またはスイートとして作成されたかどうかをアプリケーションが判断できるようにする2つの関数が提供されます。これらの関数はどちらも、STが&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;を介してソースコードから作成されたか、または&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; を&lt;/a&gt;介して解析ツリーから作成されたかを判断するために使用できません。</target>
        </trans-unit>
        <trans-unit id="63ba6e77a40ef9371295e90d99cc0d1db0adadfd" translate="yes" xml:space="preserve">
          <source>Two input methods has been added &lt;code&gt;Screen.textinput()&lt;/code&gt; and &lt;code&gt;Screen.numinput()&lt;/code&gt;. These popup input dialogs and return strings and numbers respectively.</source>
          <target state="translated">&lt;code&gt;Screen.textinput()&lt;/code&gt; と &lt;code&gt;Screen.numinput()&lt;/code&gt; の 2つの入力メソッドが追加されました。これらのポップアップ入力ダイアログは、それぞれ文字列と数値を返します。</target>
        </trans-unit>
        <trans-unit id="8a4d24f36d4d5b93fc0a050914dae06ceeb82597" translate="yes" xml:space="preserve">
          <source>Two methods are offered to support tracking whether enqueued tasks have been fully processed by daemon consumer threads.</source>
          <target state="translated">エンキューされたタスクがデーモンのコンシューマ・スレッドによって完全に処理されたかどうかを追跡するために、2つの方法が提供されています。</target>
        </trans-unit>
        <trans-unit id="bd3d5af48f3448d7859d083f308cded341e694d8" translate="yes" xml:space="preserve">
          <source>Two methods support conversion to and from hexadecimal strings. Since Python&amp;rsquo;s floats are stored internally as binary numbers, converting a float to or from a &lt;em&gt;decimal&lt;/em&gt; string usually involves a small rounding error. In contrast, hexadecimal strings allow exact representation and specification of floating-point numbers. This can be useful when debugging, and in numerical work.</source>
          <target state="translated">2つのメソッドは、16進文字列との間の変換をサポートしています。Pythonの浮動小数点数は内部的に2進数として格納されるため、浮動&lt;em&gt;小数点数を10進数&lt;/em&gt;文字列に変換したり、&lt;em&gt;10進数&lt;/em&gt;文字列から変換したりすると、通常、小さな丸め誤差が発生します。対照的に、16進数の文字列では、浮動小数点数を正確に表現および指定できます。これはデバッグ時や数値計算で役立ちます。</target>
        </trans-unit>
        <trans-unit id="872eb4299a16afe1171ea96869c4a6a12570000d" translate="yes" xml:space="preserve">
          <source>Two module-level constants are defined for the &lt;code&gt;f_flag&lt;/code&gt; attribute&amp;rsquo;s bit-flags: if &lt;code&gt;ST_RDONLY&lt;/code&gt; is set, the filesystem is mounted read-only, and if &lt;code&gt;ST_NOSUID&lt;/code&gt; is set, the semantics of setuid/setgid bits are disabled or not supported.</source>
          <target state="translated">&lt;code&gt;f_flag&lt;/code&gt; 属性のビットフラグには、2つのモジュールレベルの定数が定義されています &lt;code&gt;ST_RDONLY&lt;/code&gt; が設定されている場合、ファイルシステムは読み取り専用でマウントされ、 &lt;code&gt;ST_NOSUID&lt;/code&gt; が設定されている場合、setuid / setgidビットのセマンティクスは無効またはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="be1b45cb0ecebb3689d6d197233fac8a8c5b7cdb" translate="yes" xml:space="preserve">
          <source>Two more operations with the same syntactic priority, &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#not-in&quot;&gt;&lt;code&gt;not in&lt;/code&gt;&lt;/a&gt;, are supported by types that are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; or implement the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">同じ構文の優先順位を持つ2つの以上の操作は、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#not-in&quot;&gt; &lt;code&gt;not in&lt;/code&gt; &lt;/a&gt;、あるタイプでサポートされている&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能なの&lt;/a&gt;か、実装&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="fdf7de28689c34cb727db34c6fd3d72b113d5340" translate="yes" xml:space="preserve">
          <source>Two problems often exist with deep copy operations that don&amp;rsquo;t exist with shallow copy operations:</source>
          <target state="translated">深いコピー操作には、浅いコピー操作にはない2つの問題がよくあります。</target>
        </trans-unit>
        <trans-unit id="b2b86a9fb4ed899789b8e540b927de2494814ac0" translate="yes" xml:space="preserve">
          <source>Two, the components to implement &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; are exposed in this package, making it easier for users to create their own custom objects (known generically as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;) to participate in the import process.</source>
          <target state="translated">2つ目は、&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;を実装するコンポーネントがこのパッケージで公開されているため、ユーザーが独自のカスタムオブジェクト（一般に&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーターと&lt;/a&gt;呼ばれる）を作成してインポートプロセスに参加するのが簡単になります。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="fb42e6da9092ad24cf8712d8f033b482720c8ba7" translate="yes" xml:space="preserve">
          <source>Type Mapping</source>
          <target state="translated">タイプマッピング</target>
        </trans-unit>
        <trans-unit id="f14b280e5383b1f17a84d6b572438fadbd026be6" translate="yes" xml:space="preserve">
          <source>Type Name</source>
          <target state="translated">タイプ名</target>
        </trans-unit>
        <trans-unit id="d2f9a9762f1f9c0b60540d7712d38a39e49c34fd" translate="yes" xml:space="preserve">
          <source>Type Objects</source>
          <target state="translated">タイプオブジェクト</target>
        </trans-unit>
        <trans-unit id="58cf557846d7f65d34e8a92739eef2665164fad4" translate="yes" xml:space="preserve">
          <source>Type aliases</source>
          <target state="translated">タイプエイリアス</target>
        </trans-unit>
        <trans-unit id="3904b98c101001c9fda3dac293772c6839673461" translate="yes" xml:space="preserve">
          <source>Type aliases are useful for simplifying complex type signatures. For example:</source>
          <target state="translated">型エイリアスは複雑な型のシグネチャを単純化するのに便利です。例えば</target>
        </trans-unit>
        <trans-unit id="fe2526f8a28470f60a37f388a8f0ef0c6f6542f1" translate="yes" xml:space="preserve">
          <source>Type code</source>
          <target state="translated">タイプコード</target>
        </trans-unit>
        <trans-unit id="08d7f20ec3a1f2c32685f21a24578ef7bfd33afb" translate="yes" xml:space="preserve">
          <source>Type conversions</source>
          <target state="translated">型変換</target>
        </trans-unit>
        <trans-unit id="adcfc2aff0b9f03c65af390bc572e32e3fde7685" translate="yes" xml:space="preserve">
          <source>Type objects represent the various object types. An object&amp;rsquo;s type is accessed by the built-in function &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt;. There are no special operations on types. The standard module &lt;a href=&quot;types#module-types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; defines names for all standard built-in types.</source>
          <target state="translated">タイプオブジェクトは、さまざまなオブジェクトタイプを表します。オブジェクトのタイプは、組み込み関数&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;によってアクセスされます。タイプには特別な操作はありません。標準モジュール&lt;a href=&quot;types#module-types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt;は、すべての標準組み込みタイプの名前を定義します。</target>
        </trans-unit>
        <trans-unit id="aa32bfc1d6a5fce412d12cc5f6131574b940d465" translate="yes" xml:space="preserve">
          <source>Type of &lt;em&gt;section&lt;/em&gt; is not checked which lets users create non-string named sections. This behaviour is unsupported and may cause internal errors.</source>
          <target state="translated">&lt;em&gt;セクションの&lt;/em&gt;タイプはチェックされないため、ユーザーは文字列以外の名前付きセクションを作成できます。この動作はサポートされておらず、内部エラーを引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="8f8b3b37475e6f3fa8cee7c6299d976516072c02" translate="yes" xml:space="preserve">
          <source>Type of compression for the archive member.</source>
          <target state="translated">アーカイブメンバーの圧縮の種類。</target>
        </trans-unit>
        <trans-unit id="b02de00fc7c13da0d493703834670f2d1b7600d4" translate="yes" xml:space="preserve">
          <source>Type of device if an inode device.</source>
          <target state="translated">inodeデバイスの場合はデバイスの種類。</target>
        </trans-unit>
        <trans-unit id="11d984e097d6ee06063e87e1e2de5c09652bbf3c" translate="yes" xml:space="preserve">
          <source>Type of interval</source>
          <target state="translated">インターバルの種類</target>
        </trans-unit>
        <trans-unit id="294a0ffbd46fd4e89c9826ea69865fc9375f0653" translate="yes" xml:space="preserve">
          <source>Type of method</source>
          <target state="translated">メソッドの種類</target>
        </trans-unit>
        <trans-unit id="6ddf33ad1a33d0bab4a03b93d6faf8800f5bf097" translate="yes" xml:space="preserve">
          <source>Type variable.</source>
          <target state="translated">タイプ変数。</target>
        </trans-unit>
        <trans-unit id="baf680aae15157638dae127ad7434adccbdefecc" translate="yes" xml:space="preserve">
          <source>Type variables exist primarily for the benefit of static type checkers. They serve as the parameters for generic types as well as for generic function definitions. See class Generic for more information on generic types. Generic functions work as follows:</source>
          <target state="translated">型変数は、主に静的型チェッカーのために存在します。これらの変数は、汎用型や汎用関数定義のパラメータとして機能します。ジェネリック型の詳細については、クラス Generic を参照してください。ジェネリック関数は以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="abd88df25ccb148cda7f9f5350705633e0c6805c" translate="yes" xml:space="preserve">
          <source>Type variables may be marked covariant or contravariant by passing &lt;code&gt;covariant=True&lt;/code&gt; or &lt;code&gt;contravariant=True&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; for more details. By default type variables are invariant. Alternatively, a type variable may specify an upper bound using &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt;. This means that an actual type substituted (explicitly or implicitly) for the type variable must be a subclass of the boundary type, see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">型変数は、 &lt;code&gt;covariant=True&lt;/code&gt; または &lt;code&gt;contravariant=True&lt;/code&gt; を渡すことにより、共変または反変とマークできます。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;を参照してください。デフォルトでは、タイプ変数は不変です。代わりに、型変数は &lt;code&gt;bound=&amp;lt;type&amp;gt;&lt;/code&gt; を使用して上限を指定できます。つまり、型変数の代わりに（明示的または暗黙的に）置換される実際の型は、境界型のサブクラスでなければなりません&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;。PEP484を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="a6be1034d703cbdf5582dfd0bbf7526f130e553d" translate="yes" xml:space="preserve">
          <source>Typed version of &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;collections.namedtuple()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">型指定された&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;collections.namedtuple()&lt;/code&gt; の&lt;/a&gt;バージョン。</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="e2e596d43ca753aabf829e5d2f7b47881bc072ed" translate="yes" xml:space="preserve">
          <source>Types and members</source>
          <target state="translated">種類とメンバー</target>
        </trans-unit>
        <trans-unit id="df88a44cd87ff57172e226ab3e76d8e0cb3d63d4" translate="yes" xml:space="preserve">
          <source>Types are written like this: &lt;code&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">型は次のように記述されます： &lt;code&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d5e7cdf61e73f46e18d9cee2a01332da9df6522" translate="yes" xml:space="preserve">
          <source>Types that are conformable (e.g. that can be marshalled through XML), include the following (and except where noted, they are unmarshalled as the same Python type):</source>
          <target state="translated">準拠可能な型(例えばXMLでマーシャリングできる型)には、以下のようなものがあります(注意されている場合を除いて、同じPython型としてマーシャリングされていません)。</target>
        </trans-unit>
        <trans-unit id="ffa096628994d74c4f106032627242fbdd4a6146" translate="yes" xml:space="preserve">
          <source>Typical use of these names is for &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt; checks.</source>
          <target state="translated">これらの名前の一般的な用途は、&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; の&lt;/a&gt;チェックです。</target>
        </trans-unit>
        <trans-unit id="a453b951365e1cf38b6e3dbd7827785d21193262" translate="yes" xml:space="preserve">
          <source>Typical use:</source>
          <target state="translated">典型的な使い方。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
