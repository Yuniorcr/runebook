<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="9d6f7b60f53b56af7a399af55e0827b6d4cfd445" translate="yes" xml:space="preserve">
          <source>On Windows, the directories &lt;code&gt;C:\TEMP&lt;/code&gt;, &lt;code&gt;C:\TMP&lt;/code&gt;, &lt;code&gt;\TEMP&lt;/code&gt;, and &lt;code&gt;\TMP&lt;/code&gt;, in that order.</source>
          <target state="translated">Windowsでは、ディレクトリ &lt;code&gt;C:\TEMP&lt;/code&gt; 、 &lt;code&gt;C:\TMP&lt;/code&gt; 、 &lt;code&gt;\TEMP&lt;/code&gt; 、および &lt;code&gt;\TMP&lt;/code&gt; がこの順序で。</target>
        </trans-unit>
        <trans-unit id="54e0eb52cbdbb1158e147637462f36af394569b1" translate="yes" xml:space="preserve">
          <source>On Windows, the drive letter is not reset when an absolute path component (e.g., &lt;code&gt;r'\foo'&lt;/code&gt;) is encountered. If a component contains a drive letter, all previous components are thrown away and the drive letter is reset. Note that since there is a current directory for each drive, &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; represents a path relative to the current directory on drive &lt;code&gt;C:&lt;/code&gt; (&lt;code&gt;c:foo&lt;/code&gt;), not &lt;code&gt;c:\foo&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、絶対パスコンポーネント（ &lt;code&gt;r'\foo'&lt;/code&gt; ）が検出されても、ドライブ文字はリセットされません。コンポーネントにドライブ文字が含まれている場合、以前のすべてのコンポーネントは破棄され、ドライブ文字がリセットされます。各ドライブには現在のディレクトリがあるため、 &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; は、ドライブ &lt;code&gt;C:&lt;/code&gt; （ &lt;code&gt;c:foo&lt;/code&gt; ）ではなく、 &lt;code&gt;c:\foo&lt;/code&gt; の現在のディレクトリからの相対パスを表します。。</target>
        </trans-unit>
        <trans-unit id="c3df504605e52e9837e62d0e690a03b408496ac1" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding may be &lt;code&gt;'utf-8'&lt;/code&gt; or &lt;code&gt;'mbcs'&lt;/code&gt;, depending on user configuration.</source>
          <target state="translated">Windowsでは、ユーザーの構成に応じて、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; または &lt;code&gt;'mbcs'&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="77f58003eb530e09c101d14120e7527b154308b9" translate="yes" xml:space="preserve">
          <source>On Windows, the file-like object created by &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; cannot be used where a file object with a file descriptor is expected, such as the stream arguments of &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;によって作成されたファイルのようなオブジェクトは、&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen()&lt;/code&gt; の&lt;/a&gt;ストリーム引数など、ファイル記述子を持つファイルオブジェクトが期待される場所では使用できません。</target>
        </trans-unit>
        <trans-unit id="0d2f852baab8a06d37a6a99be399f20b228e0595" translate="yes" xml:space="preserve">
          <source>On Windows, the following constants are available for comparing against the &lt;code&gt;st_reparse_tag&lt;/code&gt; member returned by &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;. These are well-known constants, but are not an exhaustive list.</source>
          <target state="translated">Windowsでは、次の定数は、と比較するために用意されてい &lt;code&gt;st_reparse_tag&lt;/code&gt; ので返されるメンバー&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;。これらはよく知られた定数ですが、完全なリストではありません。</target>
        </trans-unit>
        <trans-unit id="548033f4f74edd90159967683a7e43861d78a74e" translate="yes" xml:space="preserve">
          <source>On Windows, the following file attribute constants are available for use when testing bits in the &lt;code&gt;st_file_attributes&lt;/code&gt; member returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows API documentation&lt;/a&gt; for more detail on the meaning of these constants.</source>
          <target state="translated">ビットをテストするときにWindowsでは、次のファイル属性定数は使用できます &lt;code&gt;st_file_attributes&lt;/code&gt; ので返されるメンバー&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;。これらの定数の意味の詳細については、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows APIのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c96823b6f593e3c93fa502eb83c4b5bb1b5a0af" translate="yes" xml:space="preserve">
          <source>On Windows, the return value is that returned by the system shell after running &lt;em&gt;command&lt;/em&gt;. The shell is given by the Windows environment variable &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt;: it is usually &lt;strong&gt;cmd.exe&lt;/strong&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</source>
          <target state="translated">Windowsでは、戻り値は&lt;em&gt;command&lt;/em&gt;を実行した後にシステムシェルによって返された値です。シェルは、Windows環境変数 &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt; によって指定されます。通常、シェルは&lt;strong&gt;cmd.exe&lt;/strong&gt;であり、コマンド実行の終了ステータスを返します。非ネイティブシェルを使用しているシステムでは、シェルのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8c1b0007f46b6c5205cec2ccc2367335b248f69b" translate="yes" xml:space="preserve">
          <source>On Windows, therefore, it is often preferable to create an executable from the zipapp. This is relatively easy, although it does require a C compiler. The basic approach relies on the fact that zipfiles can have arbitrary data prepended, and Windows exe files can have arbitrary data appended. So by creating a suitable launcher and tacking the &lt;code&gt;.pyz&lt;/code&gt; file onto the end of it, you end up with a single-file executable that runs your application.</source>
          <target state="translated">したがって、Windowsでは、zipappから実行可能ファイルを作成することをお勧めします。これは比較的簡単ですが、Cコンパイラが必要です。基本的なアプローチは、zipfileには任意のデータを付加でき、Windows exeファイルには任意のデータを付加できるという事実に依存しています。したがって、適切なランチャーを作成し、その &lt;code&gt;.pyz&lt;/code&gt; ファイルを追加すると、アプリケーションを実行する単一ファイルの実行可能ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="37dc40ac402c8823d0b71dfd8517ae8bdca2012b" translate="yes" xml:space="preserve">
          <source>On Windows, this is an OS handle usable with the &lt;code&gt;WaitForSingleObject&lt;/code&gt; and &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; family of API calls. On Unix, this is a file descriptor usable with primitives from the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Windowsでは、これはAPI呼び出しの &lt;code&gt;WaitForSingleObject&lt;/code&gt; および &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; ファミリーで使用可能なOSハンドルです。Unixでは、これは&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;モジュールのプリミティブで使用できるファイル記述子です。</target>
        </trans-unit>
        <trans-unit id="97e0c647fa3b8fd69df5ae6d02b841041c7dc102" translate="yes" xml:space="preserve">
          <source>On Windows, when a foreign function call raises a system exception (for example, due to an access violation), it will be captured and replaced with a suitable Python exception. Further, an auditing event &lt;code&gt;ctypes.seh_exception&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt; will be raised, allowing an audit hook to replace the exception with its own.</source>
          <target state="translated">Windowsでは、外部関数呼び出しでシステム例外が発生すると（たとえば、アクセス違反が原因で）、それがキャプチャされ、適切なPython例外に置き換えられます。さらに、引数 &lt;code&gt;code&lt;/code&gt; 付きの監査イベント &lt;code&gt;ctypes.seh_exception&lt;/code&gt; が発生し、監査フックで例外を独自のものに置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="10b5f3f739606c767f0a53174c343344eb123b63" translate="yes" xml:space="preserve">
          <source>On Windows, when duplicating a standard stream (0: stdin, 1: stdout, 2: stderr), the new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;inheritable&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、標準ストリーム（0：stdin、1：stdout、2：stderr）を複製する場合、新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承可能&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="fb6115c799330ee3de4f9e4a92324f487e44ec5f" translate="yes" xml:space="preserve">
          <source>On Windows: Wait for completion of a process given by process handle &lt;em&gt;pid&lt;/em&gt;, and return a tuple containing &lt;em&gt;pid&lt;/em&gt;, and its exit status shifted left by 8 bits (shifting makes cross-platform use of the function easier). A &lt;em&gt;pid&lt;/em&gt; less than or equal to &lt;code&gt;0&lt;/code&gt; has no special meaning on Windows, and raises an exception. The value of integer &lt;em&gt;options&lt;/em&gt; has no effect. &lt;em&gt;pid&lt;/em&gt; can refer to any process whose id is known, not necessarily a child process. The &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions called with &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt; return suitable process handles.</source>
          <target state="translated">Windowsの場合：プロセスハンドルによって所与のプロセスの完了を待つ&lt;em&gt;PID&lt;/em&gt;、およびタプルを含む戻り&lt;em&gt;PIDを&lt;/em&gt;、その終了ステータス8ビット（シフトが容易関数のクロス・プラットフォームを利用する）だけ左シフトされます。 &lt;code&gt;0&lt;/code&gt; 以下の&lt;em&gt;pid&lt;/em&gt;は、Windowsでは特別な意味を持たず、例外が発生します。整数&lt;em&gt;オプション&lt;/em&gt;の値は影響しません。&lt;em&gt;pid&lt;/em&gt;は、&lt;em&gt;必ずしも子&lt;/em&gt;プロセスである必要はなく、IDが既知の任意のプロセスを参照できます。&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;と呼ばれる機能&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; は、&lt;/a&gt;適切なプロセスのハンドルを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f12c3a4544b46b4dcf9f6fec778669f13f9f9d3" translate="yes" xml:space="preserve">
          <source>On a Unix-like system, random bytes are read from the &lt;code&gt;/dev/urandom&lt;/code&gt; device. If the &lt;code&gt;/dev/urandom&lt;/code&gt; device is not available or not readable, the &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">Unixライクなシステムでは、ランダムなバイトが &lt;code&gt;/dev/urandom&lt;/code&gt; デバイスから読み取られます。場合 &lt;code&gt;/dev/urandom&lt;/code&gt; デバイスが読める利用できるかどうかではない、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; の&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2601d2cefa3f396475ef76603408eb2f24b04bbb" translate="yes" xml:space="preserve">
          <source>On all other platforms, the directories &lt;code&gt;/tmp&lt;/code&gt;, &lt;code&gt;/var/tmp&lt;/code&gt;, and &lt;code&gt;/usr/tmp&lt;/code&gt;, in that order.</source>
          <target state="translated">他のすべてのプラットフォームでは、ディレクトリ &lt;code&gt;/tmp&lt;/code&gt; 、 &lt;code&gt;/var/tmp&lt;/code&gt; 、および &lt;code&gt;/usr/tmp&lt;/code&gt; がこの順序で。</target>
        </trans-unit>
        <trans-unit id="46dbf9b949c04044ffab0fab48aba4115d7ca33a" translate="yes" xml:space="preserve">
          <source>On both platforms, the old value is restored by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どちらのプラットフォームでも、古い値は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;によって復元されます。</target>
        </trans-unit>
        <trans-unit id="8e7006d98db74f1849b0b0e7ef365ada8d73e13e" translate="yes" xml:space="preserve">
          <source>On client connections, the optional parameter &lt;em&gt;server_hostname&lt;/em&gt; specifies the hostname of the service which we are connecting to. This allows a single server to host multiple SSL-based services with distinct certificates, quite similarly to HTTP virtual hosts. Specifying &lt;em&gt;server_hostname&lt;/em&gt; will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;server_side&lt;/em&gt; is true.</source>
          <target state="translated">クライアント接続では、オプションのパラメーター&lt;em&gt;server_hostname&lt;/em&gt;は、接続先のサービスのホスト名を指定します。これにより、単一のサーバーが、HTTP仮想ホストと非常によく似た、別個の証明書を使用して複数のSSLベースのサービスをホストできるようになります。&lt;em&gt;server_side&lt;/em&gt;がtrueの場合、&lt;em&gt;server_hostname&lt;/em&gt;を指定すると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67540c72da6a0c69935598617862e3eb3b0268da" translate="yes" xml:space="preserve">
          <source>On decoding, replace byte with individual surrogate code ranging from &lt;code&gt;U+DC80&lt;/code&gt; to &lt;code&gt;U+DCFF&lt;/code&gt;. This code will then be turned back into the same byte when the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler is used when encoding the data. (See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt; for more.)</source>
          <target state="translated">デコードに、より範囲の個々の代理コードでバイトを交換 &lt;code&gt;U+DC80&lt;/code&gt; に &lt;code&gt;U+DCFF&lt;/code&gt; 。データのエンコード時に &lt;code&gt;'surrogateescape'&lt;/code&gt; エラーハンドラーが使用されると、このコードは同じバイトに戻ります。（詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="40a675dc2422036bd8b6d3953dd22e9373dc65f0" translate="yes" xml:space="preserve">
          <source>On encountering an invalid cookie, &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; is raised, so if your cookie data comes from a browser you should always prepare for invalid data and catch &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; on parsing.</source>
          <target state="translated">無効なCookieが&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;とCookieErrorが発生するため、Cookieデータがブラウザからのものである場合は、常に無効なデータを準備し、解析時に&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;をキャッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="34f29889fea4fa5095b6af09d7ca99a6568ae898" translate="yes" xml:space="preserve">
          <source>On entry to the context manager, a &lt;code&gt;WarningRecorder&lt;/code&gt; instance is returned. The underlying warnings list from &lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings()&lt;/code&gt;&lt;/a&gt; is available via the recorder object&amp;rsquo;s &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; attribute. As a convenience, the attributes of the object representing the most recent warning can also be accessed directly through the recorder object (see example below). If no warning has been raised, then any of the attributes that would otherwise be expected on an object representing a warning will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">コンテキストマネージャに入ると、 &lt;code&gt;WarningRecorder&lt;/code&gt; インスタンスが返されます。&lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings()&lt;/code&gt; &lt;/a&gt;の基になる警告リストは、レコーダーオブジェクトの&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;属性を介して利用できます。便宜上、最新の警告を表すオブジェクトの属性には、レコーダーオブジェクトを介して直接アクセスすることもできます（以下の例を参照）。警告が発生していない場合は、警告を表すオブジェクトで予期される属性は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="689aca40c906c0122884f520ca113dd2d097568c" translate="yes" xml:space="preserve">
          <source>On large-file-capable Linux systems, this might work:</source>
          <target state="translated">大容量のファイルを扱える Linux システムでは、これが動作するかもしれません。</target>
        </trans-unit>
        <trans-unit id="6b7b3c25b067b29ff568eb64dceface5effcedb6" translate="yes" xml:space="preserve">
          <source>On macOS 10.6, 10.7 and 10.8, the default event loop uses &lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt;&lt;code&gt;selectors.KqueueSelector&lt;/code&gt;&lt;/a&gt;, which does not support character devices on these versions. The &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; can be manually configured to use &lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt;&lt;code&gt;PollSelector&lt;/code&gt;&lt;/a&gt; to support character devices on these older versions of macOS. Example:</source>
          <target state="translated">macOS 10.6、10.7、および10.8では、デフォルトのイベントループは&lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt; &lt;code&gt;selectors.KqueueSelector&lt;/code&gt; を&lt;/a&gt;使用します。これらは、これらのバージョンのキャラクターデバイスをサポートしていません。&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; は、&lt;/a&gt;手動で使用するように設定することができます&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt; &lt;code&gt;SelectSelector&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt; &lt;code&gt;PollSelector&lt;/code&gt; を&lt;/a&gt; MacOSのこれらの古いバージョンでサポートキャラクタデバイスへ。例：</target>
        </trans-unit>
        <trans-unit id="59711c87f37f48c6b5ca1ccbf181736677303198" translate="yes" xml:space="preserve">
          <source>On macOS &lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt; is used to copy the file content (not metadata).</source>
          <target state="translated">macOSでは、&lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt;を使用して（メタデータではなく）ファイルの内容をコピーします。</target>
        </trans-unit>
        <trans-unit id="e0095f6ed60d065349c04b6eefb4d5ebe1925719" translate="yes" xml:space="preserve">
          <source>On macOS, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">macOSでは、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce1208192f171228b4901a07d6b02cdddfc85990" translate="yes" xml:space="preserve">
          <source>On macOS, there is one application menu. It dynamically changes according to the window currently selected. It has an IDLE menu, and some entries described below are moved around to conform to Apple guidelines.</source>
          <target state="translated">macOSでは、アプリケーションメニューは1つです。これは現在選択されているウィンドウに応じて動的に変化します。IDLE メニューがあり、以下に説明するいくつかの項目は Apple のガイドラインに合わせて移動されています。</target>
        </trans-unit>
        <trans-unit id="d215bf1c5b7b0def948c235e18bfe40621e88451" translate="yes" xml:space="preserve">
          <source>On many Unix systems (including *BSD, Linux, Solaris, and Darwin), it is more convenient to use the system&amp;rsquo;s zoneinfo (&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile(5)&lt;/a&gt;&lt;/em&gt;) database to specify the timezone rules. To do this, set the &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; environment variable to the path of the required timezone datafile, relative to the root of the systems &amp;lsquo;zoneinfo&amp;rsquo; timezone database, usually located at &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt;. For example, &lt;code&gt;'US/Eastern'&lt;/code&gt;, &lt;code&gt;'Australia/Melbourne'&lt;/code&gt;, &lt;code&gt;'Egypt'&lt;/code&gt; or &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt;.</source>
          <target state="translated">多くのUnixシステム（* BSD、Linux、Solaris、Darwinを含む）では、システムのzoneinfo（&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile（5）&lt;/a&gt;&lt;/em&gt;）データベースを使用してタイムゾーンルールを指定する方が便利です。これを行うには、 &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; 環境変数を、通常は &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt; にあるシステム「zoneinfo」タイムゾーンデータベースのルートからの相対パスで、必要なタイムゾーンデータファイルのパスに設定します。たとえば、 &lt;code&gt;'US/Eastern'&lt;/code&gt; 、 &lt;code&gt;'Australia/Melbourne'&lt;/code&gt; 、 &lt;code&gt;'Egypt'&lt;/code&gt; 、 &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04ba6be7d13c87b73b6437d8a6f57d4cef94efc0" translate="yes" xml:space="preserve">
          <source>On newer versions of Windows 10, unprivileged accounts can create symlinks if Developer Mode is enabled. When Developer Mode is not available/enabled, the &lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt; privilege is required, or the process must be run as an administrator.</source>
          <target state="translated">Windows 10の新しいバージョンでは、開発者モードが有効になっている場合、権限のないアカウントでシンボリックリンクを作成できます。開発者モードが利用できない/有効になっていない場合、&lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt;権限が必要です。または、プロセスを管理者として実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7bf663d20ba88f3d3779656c2de6b087faad7b7" translate="yes" xml:space="preserve">
          <source>On other Unix systems (such as FreeBSD), the following attributes may be available (but may be only filled out if root tries to use them):</source>
          <target state="translated">他の Unix システム (FreeBSD など)では、以下の属性が利用できるかもしれません (ただし、root が使用しようとした場合にのみ記入されます)。</target>
        </trans-unit>
        <trans-unit id="06c0e7561753d8281468dc3f168c40f9e9b2351d" translate="yes" xml:space="preserve">
          <source>On other platforms, the generic &lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl.fcntl()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt;&lt;code&gt;fcntl.ioctl()&lt;/code&gt;&lt;/a&gt; functions may be used; they accept a socket object as their first argument.</source>
          <target state="translated">他のプラットフォームでは、汎用の&lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl.fcntl()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt; &lt;code&gt;fcntl.ioctl()&lt;/code&gt; &lt;/a&gt;関数を使用できます。最初の引数としてソケットオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="30fe0b6f68fa261e54a2b916d494101fac571654" translate="yes" xml:space="preserve">
          <source>On output, if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and no &lt;em&gt;escapechar&lt;/em&gt; is set, &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised if a &lt;em&gt;quotechar&lt;/em&gt; is found in a field.</source>
          <target state="translated">場合、出力には、&lt;em&gt;ダブルクォートが&lt;/em&gt;ある&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;と全く&lt;em&gt;EscapeCharには&lt;/em&gt;設定されていない、&lt;a href=&quot;#csv.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;あれば発生し&lt;em&gt;quotecharが&lt;/em&gt;フィールドに含まれています。</target>
        </trans-unit>
        <trans-unit id="c0af5b92888c4dc7ffac3572dfa0d442dabf0ede" translate="yes" xml:space="preserve">
          <source>On platforms that do not support symbolic links, this is an alias for &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シンボリックリンクをサポートしないプラットフォームでは、これは&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="835888031d7cef42de83709eee1579e07f8ea020" translate="yes" xml:space="preserve">
          <source>On platforms that support the necessary fd-based functions a symlink attack resistant version of &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; is used by default. On other platforms, the &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; implementation is susceptible to a symlink attack: given proper timing and circumstances, attackers can manipulate symlinks on the filesystem to delete files they wouldn&amp;rsquo;t be able to access otherwise. Applications can use the &lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt;&lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt;&lt;/a&gt; function attribute to determine which case applies.</source>
          <target state="translated">必要なfdベースの機能をサポートするプラットフォームでは、デフォルトで&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; の&lt;/a&gt;シンボリックリンク耐性バージョンが使用されます。他のプラットフォームでは、&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; &lt;/a&gt;実装はシンボリックリンク攻撃の影響を受けます。適切なタイミングと状況が与えられた場合、攻撃者はファイルシステムのシンボリックリンクを操作して、他の方法ではアクセスできないファイルを削除できます。アプリケーションは、&lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt; &lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt; &lt;/a&gt;関数属性を使用して、どちらのケースが該当するかを判別できます。</target>
        </trans-unit>
        <trans-unit id="a2539c27ac2c42d14e6d76946d07ef981a8cc60c" translate="yes" xml:space="preserve">
          <source>On platforms using IEEE 754 binary floating-point, the result of this operation is always exactly representable: no rounding error is introduced.</source>
          <target state="translated">IEEE 754 バイナリ浮動小数点を使用するプラットフォームでは、この演算の結果は常に正確に表現されます。</target>
        </trans-unit>
        <trans-unit id="d0f67e7089bb8910b4e4fda4cf6b72e3df1c3c94" translate="yes" xml:space="preserve">
          <source>On platforms where some or all of this functionality is unavailable, when asked to modify a symbolic link, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; will copy everything it can. &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; never returns failure.</source>
          <target state="translated">この機能の一部またはすべてが使用できないプラットフォームでは、シンボリックリンクを変更するように求められると、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;は可能な限りすべてをコピーします。&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;は失敗を返しません。</target>
        </trans-unit>
        <trans-unit id="3c6b1f69887e623bddc661e6cae08b9b00d43caf" translate="yes" xml:space="preserve">
          <source>On platforms with hardware and system-level support for signed zeros, functions involving branch cuts are continuous on &lt;em&gt;both&lt;/em&gt; sides of the branch cut: the sign of the zero distinguishes one side of the branch cut from the other. On platforms that do not support signed zeros the continuity is as specified below.</source>
          <target state="translated">署名されたゼロのためのハードウェアおよびシステムレベルのサポートを有するプラットフォーム上で、ブランチカットを伴う機能がオンに連続している&lt;em&gt;両方の&lt;/em&gt;他の分枝切断のゼロ区別片側の兆候：分枝切断の両側。符号付きゼロをサポートしていないプラットフォームでは、連続性は次のようになります。</target>
        </trans-unit>
        <trans-unit id="cea002554b75820329fc15191d1a6a71d5584562" translate="yes" xml:space="preserve">
          <source>On platforms without &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Completer&lt;/code&gt; class defined by this module can still be used for custom purposes.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; の&lt;/a&gt;ないプラットフォームでは、このモジュールで定義された &lt;code&gt;Completer&lt;/code&gt; クラスをカスタム目的で使用できます。</target>
        </trans-unit>
        <trans-unit id="4c6a777251164aea8999f437ba7c8d0b926184ae" translate="yes" xml:space="preserve">
          <source>On some Unix platforms, many of these functions support one or more of these features:</source>
          <target state="translated">いくつかのUnixプラットフォームでは、これらの関数の多くは、これらの機能の1つ以上をサポートしています。</target>
        </trans-unit>
        <trans-unit id="eaba699b79f7765281c28b47b3e0ec7e21c3ec5c" translate="yes" xml:space="preserve">
          <source>On some Unix systems (such as Linux), the following attributes may also be available:</source>
          <target state="translated">一部のUnixシステム(Linuxなど)では、以下の属性も利用可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="f0ae39c0ac3f68172a6d225258c4c362c47d6748" translate="yes" xml:space="preserve">
          <source>On some platforms, an optional field width and precision specification can immediately follow the initial &lt;code&gt;'%'&lt;/code&gt; of a directive in the following order; this is also not portable. The field width is normally 2 except for &lt;code&gt;%j&lt;/code&gt; where it is 3.</source>
          <target state="translated">一部のプラットフォームでは、オプションのフィールド幅と精度の指定は、ディレクティブの最初の &lt;code&gt;'%'&lt;/code&gt; の直後に次の順序で続きます。これもポータブルではありません。フィールド幅は、3である &lt;code&gt;%j&lt;/code&gt; を除いて、通常2 です。</target>
        </trans-unit>
        <trans-unit id="49846f91b44b9eabca7917db8a10258a1a0b35cf" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for &lt;code&gt;putenv()&lt;/code&gt;.</source>
          <target state="translated">FreeBSDやMac OS Xなどの一部のプラットフォームでは、 &lt;code&gt;environ&lt;/code&gt; 設定するとメモリリークが発生する可能性があります。 &lt;code&gt;putenv()&lt;/code&gt; については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="58e337bb68a53e0e0fdf875e3f9a3ba499302b95" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for putenv.</source>
          <target state="translated">FreeBSDやMac OS Xなどの一部のプラットフォームでは、 &lt;code&gt;environ&lt;/code&gt; 設定するとメモリリークが発生する可能性があります。putenvについては、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ce939615baf6b4e6e43bf427856a8f1921f68d68" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; can be used to pass file descriptors between processes over an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket. When this facility is used (it is often restricted to &lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; sockets), &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; will return, in its ancillary data, items of the form &lt;code&gt;(socket.SOL_SOCKET,
socket.SCM_RIGHTS, fds)&lt;/code&gt;, where &lt;em&gt;fds&lt;/em&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object representing the new file descriptors as a binary array of the native C &lt;code&gt;int&lt;/code&gt; type. If &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; raises an exception after the system call returns, it will first attempt to close any file descriptors received via this mechanism.</source>
          <target state="translated">一部のシステムでは、&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;ソケットを介してプロセス間でファイル記述子を渡すことができます。この機能は、（それは多くの場合に制限されて使用される場合&lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; の&lt;/a&gt;ソケット）&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;その補助データ、フォームの項目に、返され &lt;code&gt;(socket.SOL_SOCKET, socket.SCM_RIGHTS, fds)&lt;/code&gt; 、&lt;em&gt;FDSは、&lt;/em&gt;ある&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;表すオブジェクトネイティブC &lt;code&gt;int&lt;/code&gt; 型のバイナリ配列としての新しいファイル記述子。場合&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;システムコールが戻った後、例外を発生させ、それが最初にこのメカニズムを介して受信された任意のファイルディスクリプタをクローズしようとします。</target>
        </trans-unit>
        <trans-unit id="0854fe514f9f478ef9200189533ba9f76d283b6e" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;em&gt;mode&lt;/em&gt; is ignored. Where it is used, the current umask value is first masked out. If bits other than the last 9 (i.e. the last 3 digits of the octal representation of the &lt;em&gt;mode&lt;/em&gt;) are set, their meaning is platform-dependent. On some platforms, they are ignored and you should call &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt; explicitly to set them.</source>
          <target state="translated">一部のシステムでは、&lt;em&gt;モード&lt;/em&gt;は無視されます。使用される場合、現在のumask値が最初にマスクされます。最後の9以外のビット（つまり、&lt;em&gt;モードの&lt;/em&gt; 8進数表現の最後の3桁）が設定されている場合、それらの意味はプラットフォームに依存します。一部のプラットフォームでは無視され、&lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; を&lt;/a&gt;明示的に呼び出して設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="91c09add15e3897cc71e4285cad983d35ae19c62" translate="yes" xml:space="preserve">
          <source>On some systems, it is necessary to invoke &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; to obtain the user preferences, so this function is not thread-safe. If invoking setlocale is not necessary or desired, &lt;em&gt;do_setlocale&lt;/em&gt; should be set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">一部のシステムでは、ユーザー設定を取得するために&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;を呼び出す必要があるため、この関数はスレッドセーフではありません。setlocaleの呼び出しが不要または必要ない場合は、&lt;em&gt;do_setlocale&lt;/em&gt;を &lt;code&gt;False&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6110a82223307cc8967bdb9b6a267ed5e823067" translate="yes" xml:space="preserve">
          <source>On success, the data and separator will be removed from the internal buffer (consumed). Returned data will include the separator at the end.</source>
          <target state="translated">成功すると、データとセパレータが内部バッファから削除されます(消費されます)。返されたデータには、最後にセパレータが含まれます。</target>
        </trans-unit>
        <trans-unit id="81d3e77503079dc680941880acaf81e6572cb402" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, this module will also import and configure the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, if Python is started in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; and without the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option. The default behavior is enable tab-completion and to use &lt;code&gt;~/.python_history&lt;/code&gt; as the history save file. To disable it, delete (or override) the &lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt;&lt;code&gt;sys.__interactivehook__&lt;/code&gt;&lt;/a&gt; attribute in your &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; module or your &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;をサポートするシステムでは、Pythonが&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;対話モードで&lt;/a&gt;起動され、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;オプションが指定されていない場合、このモジュールは&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;モジュールもインポートおよび構成します。デフォルトの動作では、タブ補完を有効にし、履歴保存ファイルとして &lt;code&gt;~/.python_history&lt;/code&gt; を使用します。これを無効にするには、 &lt;code&gt;sitecustomize&lt;/code&gt; または &lt;code&gt;usercustomize&lt;/code&gt; モジュールまたは&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;ファイルの&lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt; &lt;code&gt;sys.__interactivehook__&lt;/code&gt; &lt;/a&gt;属性を削除（またはオーバーライド）します。</target>
        </trans-unit>
        <trans-unit id="4ce3a4c7161faf6a2733a2da667b68f080fb9ebe" translate="yes" xml:space="preserve">
          <source>On systems which support the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism, the following function will receive up to &lt;em&gt;maxfds&lt;/em&gt; file descriptors, returning the message data and a list containing the descriptors (while ignoring unexpected conditions such as unrelated control messages being received). See also &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SCM_RIGHTS&lt;/code&gt; メカニズムをサポートするシステムでは、次の関数は最大&lt;em&gt;maxfds&lt;/em&gt;ファイル記述子を受信し、メッセージデータと記述子を含むリストを返します（受信される無関係な制御メッセージなどの予期しない条件は無視します）。&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="170fe28c30f87352badfea6a1b0adfa7979f0455" translate="yes" xml:space="preserve">
          <source>On the Font tab, see the text sample for the effect of font face and size on multiple characters in multiple languages. Edit the sample to add other characters of personal interest. Use the sample to select monospaced fonts. If particular characters have problems in Shell or an editor, add them to the top of the sample and try changing first size and then font.</source>
          <target state="translated">フォント]タブで、複数の言語の複数の文字にフォントの面とサイズの効果を与えるためのテキストサンプルを参照してください。サンプルを編集して、個人的に興味のある他の文字を追加します。サンプルを使用して、等幅フォントを選択します。特定の文字がシェルやエディタで問題がある場合は、サンプルの先頭に追加して、最初にサイズを変更してからフォントを変更してみてください。</target>
        </trans-unit>
        <trans-unit id="0b329dc6e9c4b674641af665ee59096dbcd8c046" translate="yes" xml:space="preserve">
          <source>On the Highlights and Keys tab, select a built-in or custom color theme and key set. To use a newer built-in color theme or key set with older IDLEs, save it as a new custom theme or key set and it well be accessible to older IDLEs.</source>
          <target state="translated">ハイライトとキー]タブで、組み込みまたはカスタム カラー テーマとキー セットを選択します。新しいビルトイン カラー テーマまたはキー セットを古い IDLE で使用するには、新しいカスタム テーマまたはキー セットとして保存すると、古い IDLE からもアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="bb9fb9ccc44f0f6638fed1a987aa33ae9f6959c6" translate="yes" xml:space="preserve">
          <source>On the POSIX compliant platforms, it is equivalent to the following expression:</source>
          <target state="translated">POSIX準拠のプラットフォームでは、以下の式と同等です。</target>
        </trans-unit>
        <trans-unit id="8718a6ecfb2948f94e8214f2c029ea186b4fea26" translate="yes" xml:space="preserve">
          <source>On the consumer side, we can pickle those objects the usual way, which when unserialized will give us a copy of the original object:</source>
          <target state="translated">コンシューマ側では、通常の方法でオブジェクトをピックルすることができます。</target>
        </trans-unit>
        <trans-unit id="491abdd927ace9b614d81c92dc19845f26b3d2e7" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, a system call is required on Windows but not on Unix.</source>
          <target state="translated">最初の、キャッシュされていないコールでは、Windowsではシステムコールが必要ですが、Unixでは必要ありません。</target>
        </trans-unit>
        <trans-unit id="5cd90c0c17f384bfaab3cff8f5c166412c102c98" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, for non-symlinks, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;. If the entry is a symlink, a system call will be required to follow the symlink unless &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">最初のキャッシュされていない呼び出しでは、ほとんどの場合、システム呼び出しは必要ありません。具体的には、非シンボリックリンクの場合、 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; を返すネットワークファイルシステムなどの特定のUnixファイルシステムを除き、WindowsもUnixもシステムコールを必要としません。エントリがシンボリックリンクの場合、&lt;em&gt;follow_symlinks&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; でない限り、シンボリックリンクをたどるシステムコールが必要になります。</target>
        </trans-unit>
        <trans-unit id="f9dac8ead05b600f65bb3a1c6b260cbf7bc2b51d" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;.</source>
          <target state="translated">最初のキャッシュされていない呼び出しでは、ほとんどの場合、システム呼び出しは必要ありません。具体的には、 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; を返すネットワークファイルシステムなどの特定のUnixファイルシステムを除き、WindowsもUnixもシステムコールを必要としません。</target>
        </trans-unit>
        <trans-unit id="3e84ca525861c9e265cab3b438b32f029594120f" translate="yes" xml:space="preserve">
          <source>On the other hand, if an explicit value of &lt;code&gt;None&lt;/code&gt; is allowed, the use of &lt;code&gt;Optional&lt;/code&gt; is appropriate, whether the argument is optional or not. For example:</source>
          <target state="translated">一方、 &lt;code&gt;None&lt;/code&gt; の明示的な値が許可されている場合、引数がオプションかどうかにかかわらず、 &lt;code&gt;Optional&lt;/code&gt; の使用が適切です。例えば：</target>
        </trans-unit>
        <trans-unit id="bf9973b9d57271129427560d24c59bd726fbd904" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are building an HTTP server where all data is stored externally (for instance, in the file system), a synchronous class will essentially render the service &amp;ldquo;deaf&amp;rdquo; while one request is being handled &amp;ndash; which may be for a very long time if a client is slow to receive all the data it has requested. Here a threading or forking server is appropriate.</source>
          <target state="translated">一方、すべてのデータが外部に（たとえば、ファイルシステムに）保存されるHTTPサーバーを構築している場合、同期クラスは、1つの要求が処理されている間、本質的にサービスを「無効」にします。クライアントが要求したすべてのデータの受信が遅い場合、非常に長い時間。ここでは、スレッドサーバーまたはフォークサーバーが適切です。</target>
        </trans-unit>
        <trans-unit id="9d9537632dbfd5ce7c3381fb8473c75296dfa687" translate="yes" xml:space="preserve">
          <source>On the other hand, the precision of &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; is better than their Unix equivalents: times are expressed as floating point numbers, &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; returns the most accurate time available (using Unix &lt;code&gt;gettimeofday()&lt;/code&gt; where available), and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; will accept a time with a nonzero fraction (Unix &lt;code&gt;select()&lt;/code&gt; is used to implement this, where available).</source>
          <target state="translated">一方、&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;の精度は、同等のUnix の精度より優れています。時刻は浮動小数点数として表され、&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;は利用可能な最も正確な時刻を返します（可能な場合はUnix &lt;code&gt;gettimeofday()&lt;/code&gt; を使用）。&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;は、0以外の小数の時間を受け入れ &lt;code&gt;select()&lt;/code&gt; 可能な場合は、Unix select（）を使用してこれを実装します）。</target>
        </trans-unit>
        <trans-unit id="2b4270c26ef431be82a119288026b915740bbad6" translate="yes" xml:space="preserve">
          <source>On the other hand, the statement &lt;code&gt;from spam.ham import eggs, sausage as
saus&lt;/code&gt; results in</source>
          <target state="translated">一方、声明 &lt;code&gt;from spam.ham import eggs, sausage as saus&lt;/code&gt; で結果</target>
        </trans-unit>
        <trans-unit id="302064ecd83cf854ce5daa489ae06236b2f77d49" translate="yes" xml:space="preserve">
          <source>On the real line, there are functions to compute uniform, normal (Gaussian), lognormal, negative exponential, gamma, and beta distributions. For generating distributions of angles, the von Mises distribution is available.</source>
          <target state="translated">実線上には、一様分布、正規分布(ガウス分布)、対数正規分布、負の指数分布、ガンマ分布、ベータ分布を計算する関数があります。角度の分布を生成するためには、von Mises分布が利用できます。</target>
        </trans-unit>
        <trans-unit id="021f9c86cdcc2f4cf15e28ff86eb4c57b0b3ffd0" translate="yes" xml:space="preserve">
          <source>On the receiving side, it needs to pass a &lt;em&gt;buffers&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt; function), which is an iterable of the buffers which were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. That iterable should produce buffers in the same order as they were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. Those buffers will provide the data expected by the reconstructors of the objects whose pickling produced the original &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">受信側では、それが通過する必要が&lt;em&gt;バッファ&lt;/em&gt;に引数を&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; クラス&lt;/a&gt;（またはそれに&lt;a href=&quot;#pickle.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;に渡されたバッファの反復可能である機能）、&lt;em&gt;buffer_callback&lt;/em&gt;。その&lt;em&gt;イテラブル&lt;/em&gt;は、&lt;em&gt;buffer_callback&lt;/em&gt;に渡されたのと同じ順序でバッファーを生成する必要があります。これらのバッファは、ピクルス処理によって元の&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトを生成したオブジェクトの再構築によって期待されるデータを提供します。</target>
        </trans-unit>
        <trans-unit id="66db2c4de162079fa6ad1e56a412af6e40b12ff3" translate="yes" xml:space="preserve">
          <source>On the sending side, it needs to pass a &lt;em&gt;buffer_callback&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; function), which will be called with each &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; generated while pickling the object graph. Buffers accumulated by the &lt;em&gt;buffer_callback&lt;/em&gt; will not see their data copied into the pickle stream, only a cheap marker will be inserted.</source>
          <target state="translated">送信側では、それが通過する必要が&lt;em&gt;buffer_callbackの&lt;/em&gt;に引数を&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; さん&lt;/a&gt;（またはそれに&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;それぞれに呼び出される関数）、&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトグラフを酸洗いしながら発生します。&lt;em&gt;buffer_callback&lt;/em&gt;によって蓄積された&lt;em&gt;バッファー&lt;/em&gt;は、ピクルストリームにコピーされたデータを&lt;em&gt;認識&lt;/em&gt;せず、安価なマーカーのみが挿入されます。</target>
        </trans-unit>
        <trans-unit id="dfc3524ee9c52842ac68b4cbfd63f42ac55c13bf" translate="yes" xml:space="preserve">
          <source>On top of the core functionality, &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; supports interpolation. This means values can be preprocessed before returning them from &lt;code&gt;get()&lt;/code&gt; calls.</source>
          <target state="translated">コア機能に加えて、&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;は補間をサポートします。これは、 &lt;code&gt;get()&lt;/code&gt; コールから値を返す前に値を前処理できることを意味します。</target>
        </trans-unit>
        <trans-unit id="6e0a89fb92ab1b6c953761430059ee14bf39ac4f" translate="yes" xml:space="preserve">
          <source>On unsupported Windows versions, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">サポートされていないWindowsバージョンでは、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a7af216ac764a8e05fdb02285dd1f73ff0b4bf41" translate="yes" xml:space="preserve">
          <source>On-line reference material.</source>
          <target state="translated">オンライン参考資料。</target>
        </trans-unit>
        <trans-unit id="7ee9b6bbcd3fc003f8c514b8359b3b3d847b5991" translate="yes" xml:space="preserve">
          <source>On-line version of the man pages and reference material.</source>
          <target state="translated">マンページや参考資料のオンライン版。</target>
        </trans-unit>
        <trans-unit id="6aeb9a0eecc81b131da11166dd168337677c0196" translate="yes" xml:space="preserve">
          <source>On-line version of the programmer&amp;rsquo;s reference material.</source>
          <target state="translated">プログラマーの参考資料のオンライン版。</target>
        </trans-unit>
        <trans-unit id="d68ef1995b7e1837b6328a4152bbf582900b7c03" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt; has made a split, the original &lt;em&gt;iterable&lt;/em&gt; should not be used anywhere else; otherwise, the &lt;em&gt;iterable&lt;/em&gt; could get advanced without the tee objects being informed.</source>
          <target state="translated">&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt;が分割したら、元の&lt;em&gt;イテラブル&lt;/em&gt;を他の場所で使用しないでください。そうしないと、T型オブジェクトに通知されずに、&lt;em&gt;イテラブル&lt;/em&gt;が進んでしまう&lt;em&gt;可能&lt;/em&gt;性があります。</target>
        </trans-unit>
        <trans-unit id="13355ef156e37b7df46841221634670e6bd21bf1" translate="yes" xml:space="preserve">
          <source>Once a thread object is created, its activity must be started by calling the thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. This invokes the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method in a separate thread of control.</source>
          <target state="translated">スレッドオブジェクトが作成されたら、そのアクティビティは、スレッドの&lt;a href=&quot;#threading.Thread.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して開始する必要があります。これにより、別個の制御スレッドで&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="207c91dde7ce754af70d86e35ca18a8bfb78b4b4" translate="yes" xml:space="preserve">
          <source>Once a virtual environment has been created, it can be &amp;ldquo;activated&amp;rdquo; using a script in the virtual environment&amp;rsquo;s binary directory. The invocation of the script is platform-specific (&lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; must be replaced by the path of the directory containing the virtual environment):</source>
          <target state="translated">仮想環境が作成されると、仮想環境のバイナリディレクトリにあるスクリプトを使用して「アクティブ化」できます。スクリプトの呼び出しはプラットフォーム固有です（ &lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; は仮想環境を含むディレクトリのパスで置き換える必要があります）：</target>
        </trans-unit>
        <trans-unit id="889abf09b206885a298b4b0048c82881bd8294ef" translate="yes" xml:space="preserve">
          <source>Once an iterator&amp;rsquo;s &lt;a href=&quot;#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method raises &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt;, it must continue to do so on subsequent calls. Implementations that do not obey this property are deemed broken.</source>
          <target state="translated">イテレータの&lt;a href=&quot;#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;を発生させると、後続の呼び出しでそれを継続する必要があります。このプロパティに従わない実装は壊れていると見なされます。</target>
        </trans-unit>
        <trans-unit id="c8954a531e8e55ebee2fcb88a5f5f25aa89c78a2" translate="yes" xml:space="preserve">
          <source>Once constructed, &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; objects are immutable.</source>
          <target state="translated">作成された&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;オブジェクトは不変です。</target>
        </trans-unit>
        <trans-unit id="16be74f5902bbdc230632d054aabd873de1dda59" translate="yes" xml:space="preserve">
          <source>Once created one should call &lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;get_server().serve_forever()&lt;/code&gt; to ensure that the manager object refers to a started manager process.</source>
          <target state="translated">作成されたら、&lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;get_server().serve_forever()&lt;/code&gt; を呼び出して、マネージャーオブジェクトが開始されたマネージャープロセスを参照していることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="ccc2cd016213a015dfbf70d995a4eef4403a9624" translate="yes" xml:space="preserve">
          <source>Once created, an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object may be manipulated by directly changing its fields (such as &lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt;&lt;code&gt;Element.text&lt;/code&gt;&lt;/a&gt;), adding and modifying attributes (&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt;&lt;code&gt;Element.set()&lt;/code&gt;&lt;/a&gt; method), as well as adding new children (for example with &lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt;&lt;code&gt;Element.append()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">作成された&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;オブジェクトは、そのフィールド（&lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt; &lt;code&gt;Element.text&lt;/code&gt; &lt;/a&gt;など）を直接変更し、属性（&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt; &lt;code&gt;Element.set()&lt;/code&gt; &lt;/a&gt;メソッド）を追加および変更し、新しい子を追加する（たとえば、&lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt; &lt;code&gt;Element.append()&lt;/code&gt; を使用して)操作できます。&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d98f7cd89572d4bbe43871efa04dc25f912f9367" translate="yes" xml:space="preserve">
          <source>Once created, the pathname to the widget becomes a new command. This new &lt;em&gt;widget command&lt;/em&gt; is the programmer&amp;rsquo;s handle for getting the new widget to perform some &lt;em&gt;action&lt;/em&gt;. In C, you&amp;rsquo;d express this as someAction(fred, someOptions), in C++, you would express this as fred.someAction(someOptions), and in Tk, you say:</source>
          <target state="translated">作成されると、ウィジェットへのパス名が新しいコマンドになります。この新しい&lt;em&gt;ウィジェットコマンド&lt;/em&gt;は、新しいウィジェットに何らかの&lt;em&gt;アクション&lt;/em&gt;を実行させるためのプログラマのハンドルです。Cでは、これをsomeAction（fred、someOptions）として表現し、C ++では、fred.someAction（someOptions）として表現し、Tkでは次のように記述します。</target>
        </trans-unit>
        <trans-unit id="b88e8436dc34ad8ecac85ed9098e7930bd406ff6" translate="yes" xml:space="preserve">
          <source>Once executed the &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module keeps the input file(s).</source>
          <target state="translated">&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;モジュールが実行されると、入力ファイルが保持されます。</target>
        </trans-unit>
        <trans-unit id="59bd0557426d252898ba83d74b3d08da5feeacce" translate="yes" xml:space="preserve">
          <source>Once spawned, worker threads call the semaphore&amp;rsquo;s acquire and release methods when they need to connect to the server:</source>
          <target state="translated">生成されたワーカースレッドは、サーバーに接続する必要があるときにセマフォの取得および解放メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9dc52253ba5d16f68a3458bf5594be6616430d42" translate="yes" xml:space="preserve">
          <source>Once the context manager exits, the warnings filter is restored to its state when the context was entered. This prevents tests from changing the warnings filter in unexpected ways between tests and leading to indeterminate test results. The &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function in the module is also restored to its original value. Note: this can only be guaranteed in a single-threaded application. If two or more threads use the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager at the same time, the behavior is undefined.</source>
          <target state="translated">コンテキストマネージャが終了すると、警告フィルタはコンテキストが入力されたときの状態に復元されます。これにより、テストがテスト間で予期しない方法で警告フィルターを変更し、テスト結果が不確定になるのを防ぎます。モジュールの&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;関数も元の値に復元されます。注：これはシングルスレッドアプリケーションでのみ保証できます。2つ以上のスレッドが同時に&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;コンテキストマネージャを使用する場合、動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="4d5043f40e3990a632ef7cf48ff135c75a7ff554" translate="yes" xml:space="preserve">
          <source>Once the headers have been read, if the request is of type POST (indicating that further data are present in the input stream) then the &lt;code&gt;Content-Length:&lt;/code&gt; header is used to set a numeric terminator to read the right amount of data from the channel.</source>
          <target state="translated">ヘッダーが読み取られた後、要求のタイプがPOST（入力ストリームにさらにデータが存在することを示す）の場合、 &lt;code&gt;Content-Length:&lt;/code&gt; ヘッダーを使用して、数値ターミネーターを設定し、チャネルから適切な量のデータを読み取ります。 。</target>
        </trans-unit>
        <trans-unit id="3625bd42b562728df6287438cfb43f246eb75f17" translate="yes" xml:space="preserve">
          <source>Once the initial channel(s) is(are) created, calling the &lt;a href=&quot;#asyncore.loop&quot;&gt;&lt;code&gt;loop()&lt;/code&gt;&lt;/a&gt; function activates channel service, which continues until the last channel (including any that have been added to the map during asynchronous service) is closed.</source>
          <target state="translated">最初のチャネルが作成されたら、&lt;a href=&quot;#asyncore.loop&quot;&gt; &lt;code&gt;loop()&lt;/code&gt; &lt;/a&gt;関数を呼び出すとチャネルサービスがアクティブになり、最後のチャネル（非同期サービス中にマップに追加されたものを含む）が閉じるまで続行されます。</target>
        </trans-unit>
        <trans-unit id="4a2546b8a5097fd780cdeb2adc6d3eb6f8ec8d23" translate="yes" xml:space="preserve">
          <source>Once the thread&amp;rsquo;s activity is started, the thread is considered &amp;lsquo;alive&amp;rsquo;. It stops being alive when its &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates &amp;ndash; either normally, or by raising an unhandled exception. The &lt;a href=&quot;#threading.Thread.is_alive&quot;&gt;&lt;code&gt;is_alive()&lt;/code&gt;&lt;/a&gt; method tests whether the thread is alive.</source>
          <target state="translated">スレッドのアクティビティが開始されると、スレッドは「生きている」と見なされます。&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが正常に終了するか、未処理の例外を発生させることにより、実行が停止します。&lt;a href=&quot;#threading.Thread.is_alive&quot;&gt; &lt;code&gt;is_alive()&lt;/code&gt; &lt;/a&gt;メソッドをテストスレッドが生きているかどうか。</target>
        </trans-unit>
        <trans-unit id="a235b9ded0ea3a43927ac13de68434d28c8fa6ae" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, you can create a &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object and call its &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method to perform SQL commands:</source>
          <target state="translated">あなたが持ってたら&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;、あなたが作成できる&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトを、その呼び出し&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt; SQLコマンドを実行する方法を：</target>
        </trans-unit>
        <trans-unit id="81002ef1c052dbc9b87479ed00026cc46e6b7f55" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification. The main property of the document object is the &lt;code&gt;documentElement&lt;/code&gt; property. It gives you the main element in the XML document: the one that holds all others. Here is an example program:</source>
          <target state="translated">DOMドキュメントオブジェクトを取得したら、そのプロパティとメソッドを介してXMLドキュメントの部分にアクセスできます。これらのプロパティはDOM仕様で定義されています。ドキュメントオブジェクトのメインプロパティは &lt;code&gt;documentElement&lt;/code&gt; プロパティです。それはあなたにXML文書の主要な要素を与えます：他のすべてを保持するものです。以下はプログラム例です。</target>
        </trans-unit>
        <trans-unit id="570eb1dd3b2dc9c9893e632a6855fcb1892d470f" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification; this portion of the reference manual describes the interpretation of the specification in Python.</source>
          <target state="translated">一度 DOM ドキュメントオブジェクトを持っていると、そのプロパティやメソッドを使って XML ドキュメントの各部分にアクセスすることができます。これらのプロパティは DOM の仕様で定義されています。このリファレンスマニュアルのこの部分では、Python での仕様の解釈について説明しています。</target>
        </trans-unit>
        <trans-unit id="50a39d682c8b293bc2c1a0cd3988cb1316472ae2" translate="yes" xml:space="preserve">
          <source>Once you have the file, you can also read its contents:</source>
          <target state="translated">ファイルを手に入れたら、その内容を読むこともできます。</target>
        </trans-unit>
        <trans-unit id="c1f7ff6936f08d9dafa27c2a7c0ea9ece2945b6a" translate="yes" xml:space="preserve">
          <source>One can also cause all warnings to be exceptions by using &lt;code&gt;error&lt;/code&gt; instead of &lt;code&gt;always&lt;/code&gt;. One thing to be aware of is that if a warning has already been raised because of a &lt;code&gt;once&lt;/code&gt;/&lt;code&gt;default&lt;/code&gt; rule, then no matter what filters are set the warning will not be seen again unless the warnings registry related to the warning has been cleared.</source>
          <target state="translated">また、 &lt;code&gt;always&lt;/code&gt; なく &lt;code&gt;error&lt;/code&gt; を使用して、すべての警告を例外にすることもできます。注意すべきことの1つは、 &lt;code&gt;once&lt;/code&gt; / &lt;code&gt;default&lt;/code&gt; ルールのために警告がすでに発生している場合、どのフィルターが設定されていても、警告に関連する警告レジストリがクリアされない限り、警告は再び表示されないということです。</target>
        </trans-unit>
        <trans-unit id="412f97dfac468fe3c85abdccb1436f3c6754c211" translate="yes" xml:space="preserve">
          <source>One can create a pool of processes which will carry out tasks submitted to it with the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">1つは、&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;クラスを使用してそれに送信されたタスクを実行するプロセスのプールを作成できます。</target>
        </trans-unit>
        <trans-unit id="3ad735603768448e20a288aa471831e1d3bf88e6" translate="yes" xml:space="preserve">
          <source>One class, &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt;, is a &lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; subclass. It creates and listens at the HTTP socket, dispatching the requests to a handler. Code to create and run the server looks like this:</source>
          <target state="translated">1つのクラス&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt;サブクラスです。HTTPソケットを作成してリッスンし、リクエストをハンドラーにディスパッチします。サーバーを作成して実行するコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7087184633e7181831a047d644ec560eea655368" translate="yes" xml:space="preserve">
          <source>One client can access the server as follows:</source>
          <target state="translated">1つのクライアントは、以下のようにサーバにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4d4ef3d17dad8ff1ba572aeda5566878ba2d3416" translate="yes" xml:space="preserve">
          <source>One difference between this module and Henstridge&amp;rsquo;s: his catalog objects supported access through a mapping API, but this appears to be unused and so is not currently supported.</source>
          <target state="translated">このモジュールとヘンストリッジの1つの違い：彼のカタログオブジェクトはマッピングAPIを介したアクセスをサポートしていましたが、これは使用されていないようで、現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="5763c2d1a6c833df6c8067ce7085ffa547578913" translate="yes" xml:space="preserve">
          <source>One downside of these convenience functions is that the need to handle both IPv4 and IPv6 formats means that error messages provide minimal information on the precise error, as the functions don&amp;rsquo;t know whether the IPv4 or IPv6 format was intended. More detailed error reporting can be obtained by calling the appropriate version specific class constructors directly.</source>
          <target state="translated">これらの便利な関数の欠点の1つは、IPv4とIPv6の両方の形式を処理する必要があるということは、関数がIPv4とIPv6のどちらの形式が意図されているのかわからないため、エラーメッセージが正確なエラーに関する最小限の情報を提供することです。より詳細なエラーレポートは、適切なバージョン固有のクラスコンストラクターを直接呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="2d3b96d4bd51e1e6c79ce329a792e822561bb377" translate="yes" xml:space="preserve">
          <source>One exception is defined as an attribute of the &lt;a href=&quot;#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">1つの例外が&lt;a href=&quot;#module-poplib&quot;&gt; &lt;code&gt;poplib&lt;/code&gt; &lt;/a&gt;モジュールの属性として定義されています。</target>
        </trans-unit>
        <trans-unit id="a72557fcbc3e55ff795f503fb908c1ad3cb3e7c3" translate="yes" xml:space="preserve">
          <source>One limitation has to do with accuracy of timing information. There is a fundamental problem with deterministic profilers involving accuracy. The most obvious restriction is that the underlying &amp;ldquo;clock&amp;rdquo; is only ticking at a rate (typically) of about .001 seconds. Hence no measurements will be more accurate than the underlying clock. If enough measurements are taken, then the &amp;ldquo;error&amp;rdquo; will tend to average out. Unfortunately, removing this first error induces a second source of error.</source>
          <target state="translated">1つの制限は、タイミング情報の精度に関係しています。精度を含む確定的プロファイラーには、根本的な問題があります。最も明白な制限は、基になる「クロック」が（通常）約.001秒の速度でのみ刻時していることです。したがって、基礎となるクロックよりも正確な測定はありません。十分な測定が行われた場合、「エラー」は平均化される傾向があります。残念ながら、この最初のエラーを削除すると、2番目のエラーの原因になります。</target>
        </trans-unit>
        <trans-unit id="5d30662d8771fa11b0017b4d40f87263cc12f04c" translate="yes" xml:space="preserve">
          <source>One method needs to be defined for container objects to provide iteration support:</source>
          <target state="translated">イテレーションのサポートを提供するために、コンテナオブジェクト用に1つのメソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="c275e97c9c5002e886d7fe72ea350785b0233d2a" translate="yes" xml:space="preserve">
          <source>One more support function is also defined:</source>
          <target state="translated">また、もう一つのサポート機能も定義されています。</target>
        </trans-unit>
        <trans-unit id="33c0248d0f5b644a8ee6869c9c83e50620e88604" translate="yes" xml:space="preserve">
          <source>One more than the number of the highest signal number.</source>
          <target state="translated">最高信号数の数字より1つ多い。</target>
        </trans-unit>
        <trans-unit id="b14b841456d54340be37e877cf490ede6a8dc178" translate="yes" xml:space="preserve">
          <source>One more thing to be aware of is that the parser-level &lt;code&gt;get()&lt;/code&gt; method provides a custom, more complex interface, maintained for backwards compatibility. When using this method, a fallback value can be provided via the &lt;code&gt;fallback&lt;/code&gt; keyword-only argument:</source>
          <target state="translated">もう1つ注意すべき点は、パーサーレベルの &lt;code&gt;get()&lt;/code&gt; メソッドが、下位互換性のために維持されているカスタムのより複雑なインターフェースを提供することです。このメソッドを使用する場合、 &lt;code&gt;fallback&lt;/code&gt; キーワードのみの引数を介してフォールバック値を提供できます。</target>
        </trans-unit>
        <trans-unit id="4dad841e0c8793fb2acecc194fc87215ceb56552" translate="yes" xml:space="preserve">
          <source>One needs to call this function straight after the &lt;code&gt;if __name__ ==
'__main__'&lt;/code&gt; line of the main module. For example:</source>
          <target state="translated">メインモジュール &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 行の直後にこの関数を呼び出す必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="c23c4fd93b19eb8a93ad4ea94f5022d7dccf40a4" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;determinate&amp;rdquo; or &amp;ldquo;indeterminate&amp;rdquo;.</source>
          <target state="translated">「確定」または「確定」のいずれか。</target>
        </trans-unit>
        <trans-unit id="792368d2ec0cc35704b6cdade00d87e0b1b51091" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the progress bar.</source>
          <target state="translated">「水平」または「垂直」のいずれか。プログレスバーの向きを指定します。</target>
        </trans-unit>
        <trans-unit id="413c6ea48d40de27918453c5164fccb674e90d4c" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the separator.</source>
          <target state="translated">「水平」または「垂直」のいずれか。セパレーターの方向を指定します。</target>
        </trans-unit>
        <trans-unit id="76cba3ca26e12a80e4964b3cd3c4c38e4f3792c1" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;normal&amp;rdquo;, &amp;ldquo;readonly&amp;rdquo;, or &amp;ldquo;disabled&amp;rdquo;. In the &amp;ldquo;readonly&amp;rdquo; state, the value may not be edited directly, and the user can only selection of the values from the dropdown list. In the &amp;ldquo;normal&amp;rdquo; state, the text field is directly editable. In the &amp;ldquo;disabled&amp;rdquo; state, no interaction is possible.</source>
          <target state="translated">「通常」、「読み取り専用」、または「無効」のいずれか。「読み取り専用」状態では、値を直接編集することはできず、ユーザーはドロップダウンリストから値を選択することしかできません。「通常」の状態では、テキストフィールドを直接編集できます。「無効」状態では、対話はできません。</target>
        </trans-unit>
        <trans-unit id="b71680b34169ae274a157ce0f891fed86a995ab7" translate="yes" xml:space="preserve">
          <source>One of the more common uses of &lt;code&gt;nargs='?'&lt;/code&gt; is to allow optional input and output files:</source>
          <target state="translated">&lt;code&gt;nargs='?'&lt;/code&gt; のより一般的な使用法の1つ オプションの入出力ファイルを許可することです：</target>
        </trans-unit>
        <trans-unit id="5b55b53653ecf6bdee05bb4d9db6dde58eb35a46" translate="yes" xml:space="preserve">
          <source>One of the most common tasks is to generate the flat (serialized) version of the email message represented by a message object structure. You will need to do this if you want to send your message via &lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt; module, or print the message on the console. Taking a message object structure and producing a serialized representation is the job of the generator classes.</source>
          <target state="translated">最も一般的なタスクの1つは、メッセージオブジェクト構造で表される電子メールメッセージのフラット（シリアル化）バージョンを生成することです。&lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;nntplib#module-nntplib&quot;&gt; &lt;code&gt;nntplib&lt;/code&gt; &lt;/a&gt;モジュールを介してメッセージを送信する場合、またはコンソールにメッセージを印刷する場合は、これを行う必要があります。メッセージオブジェクト構造を取得し、シリアル化された表現を生成することは、ジェネレータクラスの仕事です。</target>
        </trans-unit>
        <trans-unit id="93c09cddaf4af85bdb82c014ec742b6b5d02f54f" translate="yes" xml:space="preserve">
          <source>One of two places where &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; actually inspects the type of a field is to determine if a field is a class variable as defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. It does this by checking if the type of the field is &lt;code&gt;typing.ClassVar&lt;/code&gt;. If a field is a &lt;code&gt;ClassVar&lt;/code&gt;, it is excluded from consideration as a field and is ignored by the dataclass mechanisms. Such &lt;code&gt;ClassVar&lt;/code&gt; pseudo-fields are not returned by the module-level &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;がフィールドのタイプを実際に検査する2つの場所の1つは、フィールドが&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526で&lt;/strong&gt;&lt;/a&gt;定義されているクラス変数であるかどうかを判別することです。これは、フィールドのタイプが &lt;code&gt;typing.ClassVar&lt;/code&gt; であるかどうかを確認することで行われます。フィールドが &lt;code&gt;ClassVar&lt;/code&gt; の場合、フィールドとしての考慮から除外され、データクラスメカニズムによって無視されます。このような &lt;code&gt;ClassVar&lt;/code&gt; 疑似フィールドは、モジュールレベルの&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt;関数では返されません。</target>
        </trans-unit>
        <trans-unit id="b4fa5b092d960caa5c98eb1763a721595959c032" translate="yes" xml:space="preserve">
          <source>One particularly effective way of handling sub-commands is to combine the use of the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method with calls to &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; so that each subparser knows which Python function it should execute. For example:</source>
          <target state="translated">サブコマンドを処理する1つの特に効果的な方法は、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドの使用とset_defaults（）の呼び出しを&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;て、各サブパーサーが実行するPython関数を認識できるようにすることです。例えば：</target>
        </trans-unit>
        <trans-unit id="6265c9633edbf23fb81d92e275200b17517c24ee" translate="yes" xml:space="preserve">
          <source>One possible reason to set &lt;code&gt;hash=False&lt;/code&gt; but &lt;code&gt;compare=True&lt;/code&gt; would be if a field is expensive to compute a hash value for, that field is needed for equality testing, and there are other fields that contribute to the type&amp;rsquo;s hash value. Even if a field is excluded from the hash, it will still be used for comparisons.</source>
          <target state="translated">&lt;code&gt;hash=False&lt;/code&gt; で &lt;code&gt;compare=True&lt;/code&gt; を設定する1つの考えられる理由は、フィールドがハッシュ値を計算するのにコストがかかり、そのフィールドが等価性テストに必要であり、タイプのハッシュ値に寄与する他のフィールドがある場合です。フィールドがハッシュから除外されている場合でも、比較に使用されます。</target>
        </trans-unit>
        <trans-unit id="a226b0eaad4988e53ed4f880b8d7a128f07557e7" translate="yes" xml:space="preserve">
          <source>One should just use a copy of the referent instead when making comparisons.</source>
          <target state="translated">比較をするときには、参照元のコピーを使うべきです。</target>
        </trans-unit>
        <trans-unit id="c62e6f913693a5417011764c6f11e9c5f58e5593" translate="yes" xml:space="preserve">
          <source>One use case for this is for mocking objects used as context managers in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">これの使用例の1つは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントでコンテキストマネージャとして使用されるオブジェクトをモックする場合です。</target>
        </trans-unit>
        <trans-unit id="2db721d062a28eead2d894ec1cc32437698273d5" translate="yes" xml:space="preserve">
          <source>One useful application of the second form of &lt;a href=&quot;#iter&quot;&gt;&lt;code&gt;iter()&lt;/code&gt;&lt;/a&gt; is to build a block-reader. For example, reading fixed-width blocks from a binary database file until the end of file is reached:</source>
          <target state="translated">&lt;a href=&quot;#iter&quot;&gt; &lt;code&gt;iter()&lt;/code&gt; の&lt;/a&gt; 2番目の形式の便利なアプリケーションの1つは、ブロックリーダーを構築することです。たとえば、ファイルの終わりに達するまで、バイナリデータベースファイルから固定幅ブロックを読み取ります。</target>
        </trans-unit>
        <trans-unit id="941e0e22f8b46e0572e23109cb229b556c8c68de" translate="yes" xml:space="preserve">
          <source>One useful feature of the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module is the built-in &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;sqlite3.Row&lt;/code&gt;&lt;/a&gt; class designed to be used as a row factory.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールの便利な機能の1つは、行ファクトリとして使用するように設計された&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;sqlite3.Row&lt;/code&gt; &lt;/a&gt;クラスです。</target>
        </trans-unit>
        <trans-unit id="aaef7b6555dea31b8a999a49a168f126d8d8fdaf" translate="yes" xml:space="preserve">
          <source>One way to search and explore this XML example is to manually add the URI to every tag or attribute in the xpath of a &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このXMLの例を検索して探索する1つの方法は、&lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt;のxpath内のすべてのタグまたは属性に手動でURIを追加することです。</target>
        </trans-unit>
        <trans-unit id="685a8c4199bf6d2bcd91aafdcf97ef52c57e0bf8" translate="yes" xml:space="preserve">
          <source>One-dimensional memoryviews of hashable (read-only) types with formats &amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo; are also hashable. The hash is defined as &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt;:</source>
          <target state="translated">フォーマットが「B」、「b」、または「c」のハッシュ可能（読み取り専用）型の1次元メモリビューもハッシュ可能です。ハッシュは、 &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt; として定義されます。</target>
        </trans-unit>
        <trans-unit id="4e2cd4c7e6f9d4fd20fd3009b486f148f36ad549" translate="yes" xml:space="preserve">
          <source>One-shot (de)compression</source>
          <target state="translated">ワンショット圧縮</target>
        </trans-unit>
        <trans-unit id="e92a8f9a44d55a6fa57ab9d7f17030266d725e27" translate="yes" xml:space="preserve">
          <source>Online reference for tkinter supported by effbot.org.</source>
          <target state="translated">effbot.orgがサポートするtkinterのオンラインリファレンス。</target>
        </trans-unit>
        <trans-unit id="9dbb8fb37052c67451fd1294542a0777a48cd714" translate="yes" xml:space="preserve">
          <source>Only &lt;em&gt;days&lt;/em&gt;, &lt;em&gt;seconds&lt;/em&gt; and &lt;em&gt;microseconds&lt;/em&gt; are stored internally. Arguments are converted to those units:</source>
          <target state="translated">&lt;em&gt;日&lt;/em&gt;、&lt;em&gt;秒&lt;/em&gt;、&lt;em&gt;マイクロ&lt;/em&gt;&lt;em&gt;秒&lt;/em&gt;のみが内部に保存されます。引数はそれらの単位に変換されます：</target>
        </trans-unit>
        <trans-unit id="e496096627294b6371ddb1a7da261de2d33baeed" translate="yes" xml:space="preserve">
          <source>Only ASCII characters are permitted in bytes literals (regardless of the declared source code encoding). Any binary values over 127 must be entered into bytes literals using the appropriate escape sequence.</source>
          <target state="translated">バイトリテラルではASCII文字のみが許可されます(宣言されたソースコードのエンコーディングに関わらず)。127を超えるバイナリ値は、適切なエスケープシーケンスを使用してバイトリテラルに入力しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9bcb0283c49f6302675a6e970eee6fdb45189e87" translate="yes" xml:space="preserve">
          <source>Only ASCII is supported. The &lt;code&gt;backslashreplace&lt;/code&gt; error handler is used on encoding.</source>
          <target state="translated">ASCIIのみがサポートされています。 &lt;code&gt;backslashreplace&lt;/code&gt; のエラーハンドラは、符号化に使用されています。</target>
        </trans-unit>
        <trans-unit id="c6113a93896d56d6fd83ee494a739a1940a20027" translate="yes" xml:space="preserve">
          <source>Only authors of web servers and programming frameworks need to know every detail and corner case of the WSGI design. You don&amp;rsquo;t need to understand every detail of WSGI just to install a WSGI application or to write a web application using an existing framework.</source>
          <target state="translated">Webサーバーとプログラミングフレームワークの作成者だけが、WSGI設計のあらゆる詳細と隅角を知る必要があります。WSGIアプリケーションをインストールしたり、既存のフレームワークを使用してWebアプリケーションを作成したりするためだけに、WSGIの詳細をすべて理解する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5472056d6db2aa4b4e5fca6b6d943ffdc4c17bf0" translate="yes" xml:space="preserve">
          <source>Only available on Windows.</source>
          <target state="translated">Windowsでのみご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="9cff90a9caa5fca4e097eda23e08985099f6cbd6" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the method raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 1.1.1およびTLS 1.3が有効な場合にのみ使用できます。TLS 1.3サポートがない場合、メソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="62a51d86e2878cfb5387b455ada7f61c5dffd8a7" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the property value is None and can&amp;rsquo;t be modified</source>
          <target state="translated">OpenSSL 1.1.1およびTLS 1.3が有効な場合にのみ使用できます。TLS 1.3のサポートがない場合、プロパティ値はNoneであり、変更できません</target>
        </trans-unit>
        <trans-unit id="95c159d38cefff4dfee104a391e7876c9172be62" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling process or thread owns the lock. An &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is raised if this method is called by a process or thread other than the owner or if the lock is in an unlocked (unowned) state. Note that the type of exception raised in this situation differs from the implemented behavior in &lt;a href=&quot;threading#threading.RLock.release&quot;&gt;&lt;code&gt;threading.RLock.release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しプロセスまたはスレッドがロックを所有している場合にのみ、このメソッドを呼び出します。AN &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;この方法は、プロセスまたは所有者以外、またはロックがロック解除（非所有）状態にある場合、他のスレッドによって呼び出された場合に上昇します。この状況で発生する例外のタイプは、&lt;a href=&quot;threading#threading.RLock.release&quot;&gt; &lt;code&gt;threading.RLock.release()&lt;/code&gt; &lt;/a&gt;で実装されている動作とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a1b68642ddd76fe9bd27aab5c4134b933957a9b2" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling thread owns the lock. A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if this method is called when the lock is unlocked.</source>
          <target state="translated">呼び出しスレッドがロックを所有している場合にのみ、このメソッドを呼び出します。A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;ロックがアンロックされたときにこのメソッドが呼び出された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="eb1874f752845c50ae749ab0610da40d6a9ed03f" translate="yes" xml:space="preserve">
          <source>Only class methods are defined by this class to alleviate the need for instantiation.</source>
          <target state="translated">インスタンス化の必要性を軽減するために、このクラスではクラスメソッドのみが定義されています。</target>
        </trans-unit>
        <trans-unit id="c3bad470e2ecc603718c76f4c9074b5de3a88646" translate="yes" xml:space="preserve">
          <source>Only docstrings attached to objects belonging to module &lt;em&gt;m&lt;/em&gt; are searched.</source>
          <target state="translated">モジュール&lt;em&gt;mに&lt;/em&gt;属するオブジェクトに添付されたドキュメント文字列のみが検索されます。</target>
        </trans-unit>
        <trans-unit id="51af0077ba3cd9ef0693961e00abb68011fe16f6" translate="yes" xml:space="preserve">
          <source>Only on Mac OS X platform.</source>
          <target state="translated">Mac OS Xプラットフォームのみ。</target>
        </trans-unit>
        <trans-unit id="4052b81eb936f003d4ae4d67da6755035d5b6d2c" translate="yes" xml:space="preserve">
          <source>Only on Windows platforms.</source>
          <target state="translated">Windowsプラットフォームのみ。</target>
        </trans-unit>
        <trans-unit id="c739e35e3345aa2c864403c706892dacb2999ed6" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;get_wch()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;get_wch()&lt;/code&gt; が呼び出される前に1つの&lt;em&gt;ch&lt;/em&gt;のみをプッシュできます。</target>
        </trans-unit>
        <trans-unit id="0a0fe79f0e31124b5d7fe36b8522ebf56951357a" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;getch()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;getch()&lt;/code&gt; が呼び出される前に1つの&lt;em&gt;ch&lt;/em&gt;のみをプッシュできます。</target>
        </trans-unit>
        <trans-unit id="3bb6c14b3d23d2945eacea1ff6486fbffeceb261" translate="yes" xml:space="preserve">
          <source>Only one callback can be set per &lt;code&gt;SSLContext&lt;/code&gt;. If &lt;em&gt;sni_callback&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt; then the callback is disabled. Calling this function a subsequent time will disable the previously registered callback.</source>
          <target state="translated">&lt;code&gt;SSLContext&lt;/code&gt; ごとに設定できるコールバックは1つだけです。&lt;em&gt;sni_callback&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、コールバックは無効になります。以降この関数を呼び出すと、以前に登録されたコールバックが無効になります。</target>
        </trans-unit>
        <trans-unit id="921877f46f6c2f6c956d4c2b43d413ed0f256f18" translate="yes" xml:space="preserve">
          <source>Only one concrete &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; class, the &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class, is supplied by the &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class can represent simple timezones with fixed offsets from UTC, such as UTC itself or North American EST and EDT timezones. Supporting timezones at deeper levels of detail is up to the application. The rules for time adjustment across the world are more political than rational, change frequently, and there is no standard suitable for every application aside from UTC.</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;モジュールが提供するのは、1つの具体的な&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;クラスである&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;クラスだけです。&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;クラスは、UTC自体や北米ESTとEDTタイムゾーンとしてUTCからの固定オフセット、との簡単なタイムゾーンを表すことができます。より深い詳細レベルでタイムゾーンをサポートするかどうかは、アプリケーション次第です。世界中の時間調整のルールは、合理的で頻繁に変更されるよりも政治的であり、UTC以外のすべてのアプリケーションに適した標準はありません。</target>
        </trans-unit>
        <trans-unit id="b2694ff82c068ccb7ad25e6614404effc6e0e6dd" translate="yes" xml:space="preserve">
          <source>Only one stack frame is returned for a suspended coroutine.</source>
          <target state="translated">サスペンドされたコルーチンに対しては、1つのスタックフレームのみが返されます。</target>
        </trans-unit>
        <trans-unit id="45899a65083753942e402707d87a02ef650b8c6b" translate="yes" xml:space="preserve">
          <source>Only run test methods and classes that match the pattern or substring. This option may be used multiple times, in which case all test cases that match of the given patterns are included.</source>
          <target state="translated">パターンまたは部分文字列にマッチするテストメソッドとクラスのみを実行します。このオプションは複数回使用することができ、その場合は与えられたパターンにマッチするすべてのテストケースが含まれます。</target>
        </trans-unit>
        <trans-unit id="b86acce0e0c3ada12f44f0e9d2c197184c46af52" translate="yes" xml:space="preserve">
          <source>Only the directives specified in the documentation are supported. Because &lt;code&gt;strftime()&lt;/code&gt; is implemented per platform it can sometimes offer more directives than those listed. But &lt;code&gt;strptime()&lt;/code&gt; is independent of any platform and thus does not necessarily support all directives available that are not documented as supported.</source>
          <target state="translated">ドキュメントで指定されているディレクティブのみがサポートされています。 &lt;code&gt;strftime()&lt;/code&gt; はプラットフォームごとに実装されているため、リストされているディレクティブよりも多くのディレクティブを提供できる場合があります。ただし、 &lt;code&gt;strptime()&lt;/code&gt; はプラットフォームに依存しないため、サポート対象として記載されていない、利用可能なすべてのディレクティブをサポートしているとは限りません。</target>
        </trans-unit>
        <trans-unit id="16dec77f10fe170dae724bd68005e7aa2cc49646" translate="yes" xml:space="preserve">
          <source>Only the filename, the function name and the line number are displayed. (no source code)</source>
          <target state="translated">ファイル名、関数名、行番号のみ表示されます。(ソースコードなし)</target>
        </trans-unit>
        <trans-unit id="60d352aab6fcb944b7fc146c1abce5b6e9d139b1" translate="yes" xml:space="preserve">
          <source>Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.</source>
          <target state="translated">オブジェクトに直接帰属するメモリ消費のみが計上され、それが参照するオブジェクトのメモリ消費は計上されません。</target>
        </trans-unit>
        <trans-unit id="d182c5edf8d6af50c78e1101233e80d072394832" translate="yes" xml:space="preserve">
          <source>Only works for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; which defines an &lt;code&gt;iter_modules()&lt;/code&gt; method. This interface is non-standard, so the module also provides implementations for &lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimport.zipimporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iter_modules()&lt;/code&gt; メソッドを定義する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;でのみ機能します。このインターフェースは非標準であるため、モジュールは&lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt; &lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimport.zipimporter&lt;/code&gt; の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="cce35e3b95640fdd8783117c0d6b1bb2575dc0c6" translate="yes" xml:space="preserve">
          <source>Only writeable with OpenSSL 1.1.0 or higher.</source>
          <target state="translated">OpenSSL 1.1.0以上でのみ書き込み可能。</target>
        </trans-unit>
        <trans-unit id="94c549906c5562588206324bfc20c815277d21a5" translate="yes" xml:space="preserve">
          <source>Opcode collections</source>
          <target state="translated">オペコードコレクション</target>
        </trans-unit>
        <trans-unit id="cf9b77061f7b3126b49d50a6fa68f7ca8c26b7a3" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">Open</target>
        </trans-unit>
        <trans-unit id="3fc17c6daa0379542d7b9c9064a83dc69e75bffb" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;file&lt;/em&gt; and return a corresponding &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. If the file cannot be opened, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;を開き、対応する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;を返します。ファイルを開くことができない場合は、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="0969da77d3b4939c7e92316eec745323136d4364" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;fullurl&lt;/em&gt; using the appropriate protocol. This method sets up cache and proxy information, then calls the appropriate open method with its input arguments. If the scheme is not recognized, &lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt;&lt;code&gt;open_unknown()&lt;/code&gt;&lt;/a&gt; is called. The &lt;em&gt;data&lt;/em&gt; argument has the same meaning as the &lt;em&gt;data&lt;/em&gt; argument of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">適切なプロトコルを使用して&lt;em&gt;fullurl&lt;/em&gt;を開きます。このメソッドは、キャッシュとプロキシ情報を設定し、入力引数を使用して適切なopenメソッドを呼び出します。スキームが認識されない場合、&lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt; &lt;code&gt;open_unknown()&lt;/code&gt; &lt;/a&gt;が呼び出されます。&lt;em&gt;データ&lt;/em&gt;引数は同じ意味を持っている&lt;em&gt;データ&lt;/em&gt;の引数&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ea233b21029cc672f31fe9b3997814419601cd0" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the browser handled by this controller, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコントローラーが処理するブラウザーの新しいページ（「タブ」）で&lt;em&gt;URL&lt;/em&gt;を開きます（可能な場合&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。それ以外の場合はopen_new（）と同等です。</target>
        </trans-unit>
        <trans-unit id="b6693c0a4bbf0ab0047e8b16619f81dc52e9dab4" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the default browser, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可能であれば、デフォルトのブラウザの新しいページ（「タブ」）で&lt;em&gt;URL&lt;/em&gt;を開きます。それ以外の場合は、&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="b8866b21bed2f90c7e0d0db5d81720b7915e2396" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the browser handled by this controller, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window. Alias &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オープン&lt;em&gt;URL&lt;/em&gt;可能であればブラウザの新しいウィンドウでは、そうでない場合は、このコントローラがオープン扱わ&lt;em&gt;URLを&lt;/em&gt;唯一のブラウザウィンドウで。エイリアス&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80be1f0f5216d3c4d0013d4e332bf117ad7d0caf" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the default browser, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window.</source>
          <target state="translated">オープン&lt;em&gt;URLを&lt;/em&gt;デフォルトブラウザの新しいウィンドウで、可能ならば、そうでない場合は、開いている&lt;em&gt;URL&lt;/em&gt;のみのブラウザウィンドウに表示されます。</target>
        </trans-unit>
        <trans-unit id="c004943ea8325dbad5b0898f3d806b2cc79ada2b" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt;. If open fails, raises &lt;a href=&quot;#test.support.TestFailed&quot;&gt;&lt;code&gt;TestFailed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;URLを&lt;/em&gt;開きます。オープンが失敗した場合、&lt;a href=&quot;#test.support.TestFailed&quot;&gt; &lt;code&gt;TestFailed&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="167f647cfa354d55132f5f4c726947ab44e252e5" translate="yes" xml:space="preserve">
          <source>Open FTP URLs, keeping a cache of open FTP connections to minimize delays.</source>
          <target state="translated">FTPのURLを開き、開いているFTP接続のキャッシュを保持して遅延を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="8d287b03a85c8b0ae6a80daba6bfee69f5e82fba" translate="yes" xml:space="preserve">
          <source>Open FTP URLs.</source>
          <target state="translated">FTPのURLを開きます。</target>
        </trans-unit>
        <trans-unit id="83a9f9ab392f027e4bb05e016c0ac5b186fb79a0" translate="yes" xml:space="preserve">
          <source>Open Module&amp;hellip;</source>
          <target state="translated">モジュールを開く&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0a169583e6466c4bfd610a1b2484012408457535" translate="yes" xml:space="preserve">
          <source>Open Sound System Programmer&amp;rsquo;s Guide</source>
          <target state="translated">サウンドシステムプログラマガイドを開く</target>
        </trans-unit>
        <trans-unit id="d650c621aed21d23bbb1a249e9d1ffa127b4a119" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;dumbdbm&lt;/code&gt; database and return a dumbdbm object. The &lt;em&gt;filename&lt;/em&gt; argument is the basename of the database file (without any specific extensions). When a dumbdbm database is created, files with &lt;code&gt;.dat&lt;/code&gt; and &lt;code&gt;.dir&lt;/code&gt; extensions are created.</source>
          <target state="translated">&lt;code&gt;dumbdbm&lt;/code&gt; データベースを開き、dumbdbmオブジェクトを返します。&lt;em&gt;ファイル名の&lt;/em&gt;引数は、（特定の拡張子なし）、データベースファイルのベース名です。dumbdbmデータベースが作成されると、 &lt;code&gt;.dat&lt;/code&gt; および &lt;code&gt;.dir&lt;/code&gt; 拡張子を持つファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="e632fe179883b3d0338581a425671fd5094822ca" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;gdbm&lt;/code&gt; database and return a &lt;code&gt;gdbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file.</source>
          <target state="translated">開き &lt;code&gt;gdbm&lt;/code&gt; データベースを返すと &lt;code&gt;gdbm&lt;/code&gt; オブジェクトを。&lt;em&gt;ファイル名の&lt;/em&gt;引数には、データベースファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="4322583748a9c6421dfb4c09fcaf033d44e4d9da" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of tar blocks for reading with transparent compression.</source>
          <target state="translated">透過的な圧縮で読み取るためにtarブロックの&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="729abd50a19a9f17e3e7c4f19594ca97385dcc56" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of uncompressed tar blocks for reading.</source>
          <target state="translated">読み取り用に非圧縮tarブロックの&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="0a595c5666012f5a73201a7ad3255c23528028d9" translate="yes" xml:space="preserve">
          <source>Open a TCP connection.</source>
          <target state="translated">TCP接続を開きます。</target>
        </trans-unit>
        <trans-unit id="dedbe01a1c7e4b40aa832642beeaa62e8071b7b2" translate="yes" xml:space="preserve">
          <source>Open a Unix socket connection.</source>
          <target state="translated">Unix ソケット接続を開きます。</target>
        </trans-unit>
        <trans-unit id="c30333aca1528eaa7dec5dcc0b551102c76fb3bc" translate="yes" xml:space="preserve">
          <source>Open a ZIP file, where &lt;em&gt;file&lt;/em&gt; can be a path to a file (a string), a file-like object or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">ZIPファイルを開きます。fileは、&lt;em&gt;ファイル&lt;/em&gt;へのパス（文字列）、ファイルのようなオブジェクト、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="769e263af17bbeb1d57314125f9ccfea5fdf9008" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">読み取り用にbzip2圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="d71b74051ccf64b5252b5579fb9f29f5d65d41ae" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込み用にbzip2圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="6c202a8f725c3966ee9eb45191a4f1f648fe6ef6" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary mode.</source>
          <target state="translated">bzip2で圧縮したファイルをバイナリモードで開く。</target>
        </trans-unit>
        <trans-unit id="61e2bcd0c719fe1eff240cd130593bcf98e87f8b" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">bzip2で圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="efeeb124691327df2e796c4e2f61fca215aaaf35" translate="yes" xml:space="preserve">
          <source>Open a column to the left of the edit window which shows the number of each line of text. The default is off, which may be changed in the preferences (see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt;).</source>
          <target state="translated">テキストの各行の番号を示す編集ウィンドウの左側の列を開きます。デフォルトはオフで、設定で変更できます（&lt;a href=&quot;#preferences&quot;&gt;設定の設定を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="5138f8e4961bfac889560919d28c3273c8242a35" translate="yes" xml:space="preserve">
          <source>Open a configuration dialog and change preferences for the following: fonts, indentation, keybindings, text color themes, startup windows and size, additional help sources, and extensions. On macOS, open the configuration dialog by selecting Preferences in the application menu. For more details, see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt; under Help and preferences.</source>
          <target state="translated">設定ダイアログを開いて、フォント、インデント、キーバインド、テキストの色のテーマ、起動ウィンドウとサイズ、追加のヘルプソース、拡張機能の設定を変更します。macOSでは、アプリケーションメニューの[設定]を選択して構成ダイアログを開きます。詳細については、ヘルプと環境&lt;a href=&quot;#preferences&quot;&gt;設定の環境設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb78ee95466565bc19aba0319a23cbc54a1f5a4d" translate="yes" xml:space="preserve">
          <source>Open a context menu by right-clicking in a window (Control-click on macOS). Context menus have the standard clipboard functions also on the Edit menu.</source>
          <target state="translated">ウィンドウ内で右クリック(macOSの場合はControl-click)でコンテキストメニューを開きます。コンテキストメニューには、編集メニューにも標準のクリップボード機能があります。</target>
        </trans-unit>
        <trans-unit id="1364f2f6816d76d9a15863cac1e9715a393be440" translate="yes" xml:space="preserve">
          <source>Open a datagram (UDP) connection.</source>
          <target state="translated">データグラム(UDP)接続を開きます。</target>
        </trans-unit>
        <trans-unit id="dab27c8f9d447246bffdf89284e45b057ad9df09" translate="yes" xml:space="preserve">
          <source>Open a dbm database and return a &lt;code&gt;ndbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file (without the &lt;code&gt;.dir&lt;/code&gt; or &lt;code&gt;.pag&lt;/code&gt; extensions).</source>
          <target state="translated">dbmデータベースを開き、 &lt;code&gt;ndbm&lt;/code&gt; オブジェクトを返します。&lt;em&gt;ファイル名の&lt;/em&gt;引数は、（なしのデータベースファイルの名前である &lt;code&gt;.dir&lt;/code&gt; か &lt;code&gt;.pag&lt;/code&gt; 拡張子）。</target>
        </trans-unit>
        <trans-unit id="da0ecd35b7e06e2e10631de386f9db741d263580" translate="yes" xml:space="preserve">
          <source>Open a dialog to change indent width. The accepted default by the Python community is 4 spaces.</source>
          <target state="translated">インデント幅を変更するためのダイアログを開きます。Python コミュニティで受け入れられているデフォルトは 4 スペースです。</target>
        </trans-unit>
        <trans-unit id="ab3cd1f4cf6f887a03a632cf57e13ad36b7a697f" translate="yes" xml:space="preserve">
          <source>Open a dialog to switch between indenting with spaces and tabs.</source>
          <target state="translated">インデントをスペースとタブで切り替えるダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="a25e5b56a56e73584a7689c789c2a64cbda285d4" translate="yes" xml:space="preserve">
          <source>Open a file in read only mode using the encoding detected by &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;によって検出されたエンコーディングを使用して、ファイルを読み取り専用モードで開きます。</target>
        </trans-unit>
        <trans-unit id="37ab3730c8e04788612d761f24c638eb97873272" translate="yes" xml:space="preserve">
          <source>Open a file search dialog. Put results in a new output window.</source>
          <target state="translated">ファイル検索ダイアログを開きます。結果を新しい出力ウィンドウに出力します。</target>
        </trans-unit>
        <trans-unit id="2eb14a6fd323b13d0beb8b8c63d260dee2458311" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">読み取り用にgzip圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="58de51c83b15bd0a90eb56d615d749c080c0428e" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込み用にgzip圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="5f9ebb796e4ce59f8458da340d1d52a456be5ef3" translate="yes" xml:space="preserve">
          <source>Open a gzip-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">gzip圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="30c017ce0258307bd561cc1c740687ba59474f0b" translate="yes" xml:space="preserve">
          <source>Open a list of recent files. Click one to open it.</source>
          <target state="translated">最近のファイルのリストを開きます。1つをクリックして開きます。</target>
        </trans-unit>
        <trans-unit id="ca394801875e76928a12c9b6e408f346c581adf2" translate="yes" xml:space="preserve">
          <source>Open a mixer device and return an OSS mixer device object. &lt;em&gt;device&lt;/em&gt; is the mixer device filename to use. If it is not specified, this module first looks in the environment variable &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; for a device to use. If not found, it falls back to &lt;code&gt;/dev/mixer&lt;/code&gt;.</source>
          <target state="translated">ミキサーデバイスを開き、OSSミキサーデバイスオブジェクトを返します。&lt;em&gt;device&lt;/em&gt;は、使用するミキサーデバイスのファイル名です。指定されていない場合、このモジュールは最初に、使用するデバイスの環境変数 &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; を調べます。見つからない場合は、 &lt;code&gt;/dev/mixer&lt;/code&gt; にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="124de94624e9d6235daba0288398e8d0eda77911" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair, using &lt;a href=&quot;os#os.openpty&quot;&gt;&lt;code&gt;os.openpty()&lt;/code&gt;&lt;/a&gt; if possible, or emulation code for generic Unix systems. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt;, for the master and the slave end, respectively.</source>
          <target state="translated">可能な場合は&lt;a href=&quot;os#os.openpty&quot;&gt; &lt;code&gt;os.openpty()&lt;/code&gt; &lt;/a&gt;を使用して新しい疑似端末ペアを開くか、一般的なUnixシステムのエミュレーションコードを開きます。マスター側とスレーブ側のそれぞれについて、ファイル記述子のペア &lt;code&gt;(master, slave)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f0f92982986d32cddede6d079b18b515667e6c40" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt; for the pty and the tty, respectively. The new file descriptors are &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;. For a (slightly) more portable approach, use the &lt;a href=&quot;pty#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">新しい疑似端末ペアを開きます。それぞれptyとtty のファイル記述子のペア &lt;code&gt;(master, slave)&lt;/code&gt; を返します。新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承できません&lt;/a&gt;。（やや）移植性の高いアプローチでは、&lt;a href=&quot;pty#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;モジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="310ce69a8bca050de2aaf114ea01dff137cc8b62" translate="yes" xml:space="preserve">
          <source>Open a pane at the top of the edit window which shows the block context of the code which has scrolled above the top of the window. See &lt;a href=&quot;#code-context&quot;&gt;Code Context&lt;/a&gt; in the Editing and Navigation section below.</source>
          <target state="translated">編集ウィンドウの上部にあるペインを開きます。ウィンドウの上部にスクロールしたコードのブロックコンテキストが表示されます。以下の「編集とナビゲーション」セクションの&lt;a href=&quot;#code-context&quot;&gt;コードコンテキスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="961144629087d810690a8c197d9838fead119d99" translate="yes" xml:space="preserve">
          <source>Open a persistent dictionary. The filename specified is the base filename for the underlying database. As a side-effect, an extension may be added to the filename and more than one file may be created. By default, the underlying database file is opened for reading and writing. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as the &lt;em&gt;flag&lt;/em&gt; parameter of &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">永続的な辞書を開きます。指定されたファイル名は、基になるデータベースのベースファイル名です。副作用として、ファイル名に拡張子が追加され、複数のファイルが作成される場合があります。デフォルトでは、基礎となるデータベースファイルは読み取りと書き込みのために開かれます。オプションの&lt;em&gt;フラグ&lt;/em&gt;パラメータの解釈は、&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;フラグ&lt;/em&gt;パラメータと同じです。</target>
        </trans-unit>
        <trans-unit id="e30bcb19f1f39f996dce7f6ad300b894ce70b960" translate="yes" xml:space="preserve">
          <source>Open a pipe to or from command &lt;em&gt;cmd&lt;/em&gt;. The return value is an open file object connected to the pipe, which can be read or written depending on whether &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt; (default) or &lt;code&gt;'w'&lt;/code&gt;. The &lt;em&gt;buffering&lt;/em&gt; argument has the same meaning as the corresponding argument to the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The returned file object reads or writes text strings rather than bytes.</source>
          <target state="translated">コマンド&lt;em&gt;cmdとの間の&lt;/em&gt;パイプを開きます。戻り値は、パイプに接続された開いているファイルオブジェクトであり、&lt;em&gt;モード&lt;/em&gt;が &lt;code&gt;'r'&lt;/code&gt; （デフォルト）または &lt;code&gt;'w'&lt;/code&gt; のどちらであるかによって読み取りまたは書き込みが可能です。&lt;em&gt;バッファリングの&lt;/em&gt;引数は、内蔵に対応する引数と同じ意味を持っている&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数。返されたファイルオブジェクトは、バイトではなくテキスト文字列を読み書きします。</target>
        </trans-unit>
        <trans-unit id="e4303f9f37906dec81588a51089c928e75e68e4f" translate="yes" xml:space="preserve">
          <source>Open a scrollable list allowing selection of keywords and attributes. See &lt;a href=&quot;#completions&quot;&gt;Completions&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">キーワードと属性を選択できるスクロール可能なリストを開きます。下記の編集とナビゲーションのセクションの&lt;a href=&quot;#completions&quot;&gt;補完&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4217d0cef98e970f4e763e2abdcb21e0e9dba748" translate="yes" xml:space="preserve">
          <source>Open a search dialog with many options</source>
          <target state="translated">多くのオプションで検索ダイアログを開く</target>
        </trans-unit>
        <trans-unit id="7d488b8ee4c8ad111ad3e0840a8cf0d33d625078" translate="yes" xml:space="preserve">
          <source>Open a search-and-replace dialog.</source>
          <target state="translated">検索と置換ダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="ff5f177e11975357dd6078d245cc9e65ff7d469c" translate="yes" xml:space="preserve">
          <source>Open a streaming transport connection to a given address specified by &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt;および&lt;em&gt;portで&lt;/em&gt;指定された特定のアドレスへのストリーミングトランスポート接続を開き&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1744e1544566dcdbef4e0123916bae4c8ecaef7a" translate="yes" xml:space="preserve">
          <source>Open an AIFF or AIFF-C file and return an object instance with methods that are described below. The argument &lt;em&gt;file&lt;/em&gt; is either a string naming a file or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;mode&lt;/em&gt; must be &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'rb'&lt;/code&gt; when the file must be opened for reading, or &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; when the file must be opened for writing. If omitted, &lt;code&gt;file.mode&lt;/code&gt; is used if it exists, otherwise &lt;code&gt;'rb'&lt;/code&gt; is used. When used for writing, the file object should be seekable, unless you know ahead of time how many samples you are going to write in total and use &lt;code&gt;writeframesraw()&lt;/code&gt; and &lt;code&gt;setnframes()&lt;/code&gt;. The &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">AIFFまたはAIFF-Cファイルを開き、以下で説明するメソッドを使用してオブジェクトインスタンスを返します。引数&lt;em&gt;file&lt;/em&gt;は、ファイルまたは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;指定する文字列です。&lt;em&gt;モード&lt;/em&gt;は、ファイルを読み取り用に開く必要がある場合は &lt;code&gt;'r'&lt;/code&gt; または &lt;code&gt;'rb'&lt;/code&gt; 、ファイルを書き込み用に開く必要がある場合は &lt;code&gt;'w'&lt;/code&gt; または &lt;code&gt;'wb'&lt;/code&gt; にする必要があります。省略した場合、 &lt;code&gt;file.mode&lt;/code&gt; が存在する場合はそれが使用され、存在しない場合は &lt;code&gt;'rb'&lt;/code&gt; が使用されます。書き込みに使用する場合、合計でいくつのサンプルを書き込むかを事前に知り、 &lt;code&gt;writeframesraw()&lt;/code&gt; および &lt;code&gt;setnframes()&lt;/code&gt; を使用しない限り、ファイルオブジェクトはシーク可能でなければなりません。の&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数は&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用できます。場合 &lt;code&gt;with&lt;/code&gt; 、ブロックが完了すると、&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c826d14c450bf65432c928fcd0ab030434d46051" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary mode.</source>
          <target state="translated">LZMAで圧縮されたファイルをバイナリモードで開きます。</target>
        </trans-unit>
        <trans-unit id="e1faabe747c63d77a2b349aef83e34f029746298" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">LZMA圧縮ファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="63c9941ee4cb89d2d889eb4b86133c79f4dbfe23" translate="yes" xml:space="preserve">
          <source>Open an audio device and return an OSS audio device object. This object supports many file-like methods, such as &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, and &lt;code&gt;fileno()&lt;/code&gt; (although there are subtle differences between conventional Unix read/write semantics and those of OSS audio devices). It also supports a number of audio-specific methods; see below for the complete list of methods.</source>
          <target state="translated">オーディオデバイスを開き、OSSオーディオデバイスオブジェクトを返します。このオブジェクトは、 &lt;code&gt;read()&lt;/code&gt; 、 &lt;code&gt;write()&lt;/code&gt; 、 &lt;code&gt;fileno()&lt;/code&gt; などの多くのファイルのようなメソッドをサポートします（ただし、従来のUnixの読み取り/書き込みのセマンティクスとOSSオーディオデバイスのセマンティクスには微妙な違いがあります）。また、多くのオーディオ固有のメソッドもサポートしています。メソッドの完全なリストについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="603bc2bb14d64c97ed149bdeb1f454a0cdee6bdf" translate="yes" xml:space="preserve">
          <source>Open an encoded file using the given &lt;em&gt;mode&lt;/em&gt; and return an instance of &lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt;, providing transparent encoding/decoding. The default file mode is &lt;code&gt;'r'&lt;/code&gt;, meaning to open the file in read mode.</source>
          <target state="translated">指定された&lt;em&gt;モード&lt;/em&gt;を使用してエンコードされたファイルを開き、透過的なエンコード/デコードを提供する&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。デフォルトのファイルモードは &lt;code&gt;'r'&lt;/code&gt; で、ファイルを読み取りモードで開くことを意味します。</target>
        </trans-unit>
        <trans-unit id="70e42698ff3f06e64e68df6dd8b37bb0b559281d" translate="yes" xml:space="preserve">
          <source>Open an existing file with an Open dialog.</source>
          <target state="translated">開くダイアログで既存のファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="d98d15f410a1d6752590d2b11440fb75fb110d32" translate="yes" xml:space="preserve">
          <source>Open an existing module (searches sys.path).</source>
          <target state="translated">既存のモジュールを開く(sys.pathを検索)。</target>
        </trans-unit>
        <trans-unit id="0ee43539d00f6f0549ec54060b1769296318ac88" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">lzma圧縮&lt;em&gt;ストリーム&lt;/em&gt;を読み取り用に開きます。</target>
        </trans-unit>
        <trans-unit id="31602b490a7a64e6c2db5f868743fe69a5882ae0" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込みのためにlzma圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="079b069912678bc0e9edc918427fbb1c6c90a22d" translate="yes" xml:space="preserve">
          <source>Open an uncompressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込みのために非圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="98a6f72f0f8ba4690a7074b4a4a5e9ed2745f83c" translate="yes" xml:space="preserve">
          <source>Open data URLs.</source>
          <target state="translated">オープンデータのURLです。</target>
        </trans-unit>
        <trans-unit id="16d266be663a4baf112aaf41a72a96cf96f3a372" translate="yes" xml:space="preserve">
          <source>Open database for reading and writing, creating it if it doesn&amp;rsquo;t exist</source>
          <target state="translated">読み取りと書き込みのためにデータベースを開き、存在しない場合は作成します</target>
        </trans-unit>
        <trans-unit id="781766b35fa1fffb57637176b0ab6b1592f6edda" translate="yes" xml:space="preserve">
          <source>Open existing database for reading and writing</source>
          <target state="translated">読み書き用の既存のデータベースを開く</target>
        </trans-unit>
        <trans-unit id="410e2a4489d3a436b0413ceb110aca00b9d836e3" translate="yes" xml:space="preserve">
          <source>Open existing database for reading only (default)</source>
          <target state="translated">既存のデータベースを読み込み専用に開く(デフォルト)</target>
        </trans-unit>
        <trans-unit id="da8803e86851bcbc32ed1a652aec62b5acaa7e27" translate="yes" xml:space="preserve">
          <source>Open for appending with no compression. The file is created if it does not exist.</source>
          <target state="translated">圧縮せずに追記するためにオープンします。ファイルが存在しない場合に作成されます。</target>
        </trans-unit>
        <trans-unit id="a92945eaf20e290447e2fee4702651291e88a7a8" translate="yes" xml:space="preserve">
          <source>Open for binary reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;をバイナリで読み取るために開き&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3d7a0fda614e078919dfeee281a77c3029b4cd8d" translate="yes" xml:space="preserve">
          <source>Open for bzip2 compressed writing.</source>
          <target state="translated">bzip2圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="3be0b1cac4b854897b77bfa1ac3644fca43d5aa8" translate="yes" xml:space="preserve">
          <source>Open for gzip compressed writing.</source>
          <target state="translated">gzip圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="e4536676ca1a607495256d83de74122a14e9f319" translate="yes" xml:space="preserve">
          <source>Open for lzma compressed writing.</source>
          <target state="translated">lzma圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="e39a5b6a548b20c25318d8a7703ff10916012921" translate="yes" xml:space="preserve">
          <source>Open for reading exclusively without compression.</source>
          <target state="translated">圧縮せずに読み放題で公開</target>
        </trans-unit>
        <trans-unit id="5d2a4b3378fdbc3be17d246022eb416831821745" translate="yes" xml:space="preserve">
          <source>Open for reading with bzip2 compression.</source>
          <target state="translated">bzip2圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="e27915e983e4971e83b72733d9272da24ed3062a" translate="yes" xml:space="preserve">
          <source>Open for reading with gzip compression.</source>
          <target state="translated">gzip圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="2da82d3e5ef9f2ef062573cb554660a3c136498f" translate="yes" xml:space="preserve">
          <source>Open for reading with lzma compression.</source>
          <target state="translated">lzma圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="e3a348820cc41064f1578562b070372b25c805da" translate="yes" xml:space="preserve">
          <source>Open for reading with transparent compression (recommended).</source>
          <target state="translated">透過圧縮(推奨)で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="72bd4d78cdd6d40e6b66c653af1f6efc9092b2a0" translate="yes" xml:space="preserve">
          <source>Open for text reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;. By default, the resource is opened for reading as UTF-8.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソースを&lt;/em&gt;読み取るテキスト用に開き&lt;em&gt;ます&lt;/em&gt;。デフォルトでは、リソースはUTF-8として読み取るために開かれます。</target>
        </trans-unit>
        <trans-unit id="5fbd33d2eb6cd4b2ececd950d2a289a68364e3b2" translate="yes" xml:space="preserve">
          <source>Open for uncompressed writing.</source>
          <target state="translated">圧縮されていない書き込みのためにオープン。</target>
        </trans-unit>
        <trans-unit id="2d5629e9c9ad86de82f582a75bd5aac184a32a98" translate="yes" xml:space="preserve">
          <source>Open local files.</source>
          <target state="translated">ローカルファイルを開く。</target>
        </trans-unit>
        <trans-unit id="c31d0d8dc1af57114456f8a6995200302c826647" translate="yes" xml:space="preserve">
          <source>Open or wake up the Python Shell window.</source>
          <target state="translated">Pythonシェルのウィンドウを開くか、ウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="64e54bad7370d9dd3ea7ce90f39c116822954b3f" translate="yes" xml:space="preserve">
          <source>Open the FTP file indicated by &lt;em&gt;req&lt;/em&gt;. The login is always done with empty username and password.</source>
          <target state="translated">&lt;em&gt;reqで&lt;/em&gt;示されたFTPファイルを開きます。ログインは常に空のユーザー名とパスワードで行われます。</target>
        </trans-unit>
        <trans-unit id="6bf0ac9893ebd85b77099d4a402423ddf3e569c0" translate="yes" xml:space="preserve">
          <source>Open the URL &lt;em&gt;url&lt;/em&gt;, which can be either a string or a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">文字列または&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトのいずれかであるURL &lt;em&gt;urlを&lt;/em&gt;開きます。</target>
        </trans-unit>
        <trans-unit id="a2f57839feb75512fa819cec149b3ca923d075ec" translate="yes" xml:space="preserve">
          <source>Open the database file &lt;em&gt;file&lt;/em&gt; and return a corresponding object.</source>
          <target state="translated">データベースファイル&lt;em&gt;file&lt;/em&gt;を開き、対応するオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="9778684242145c7e5980545da5305f1a835b31fd" translate="yes" xml:space="preserve">
          <source>Open the database in fast mode. Writes to the database will not be synchronized.</source>
          <target state="translated">高速モードでデータベースを開きます。データベースへの書き込みは同期されません。</target>
        </trans-unit>
        <trans-unit id="0dc0480d0f4224d0fb02e5967e073c791476447a" translate="yes" xml:space="preserve">
          <source>Open the file &lt;em&gt;path&lt;/em&gt; and set various flags according to &lt;em&gt;flags&lt;/em&gt; and possibly its mode according to &lt;em&gt;mode&lt;/em&gt;. When computing &lt;em&gt;mode&lt;/em&gt;, the current umask value is first masked out. Return the file descriptor for the newly opened file. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">ファイルを開く&lt;em&gt;パス&lt;/em&gt;に応じて設定される各種フラグ&lt;em&gt;のフラグ&lt;/em&gt;およびおそらくそのモードに応じて&lt;em&gt;モード&lt;/em&gt;。&lt;em&gt;モードを&lt;/em&gt;計算するとき、現在のumask値は最初にマスクされます。新しく開いたファイルのファイル記述子を返します。新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承不可&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="caa52afce9506061d0fa4472348c0e95be91ed41" translate="yes" xml:space="preserve">
          <source>Open the file locally, if there is no host name, or the host name is &lt;code&gt;'localhost'&lt;/code&gt;.</source>
          <target state="translated">ホスト名がない場合、またはホスト名が &lt;code&gt;'localhost'&lt;/code&gt; の場合は、ファイルをローカルで開きます。</target>
        </trans-unit>
        <trans-unit id="cfc513f94813f282c3c61b3a5c7b58c27fabbaa9" translate="yes" xml:space="preserve">
          <source>Open the file pointed to by the path, like the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function does:</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数と同じように、パスが指すファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="5eba403538351b5c16610a19c57e8a8df88568dc" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in bytes mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">バイトモードでポイントされているファイルを開き、&lt;em&gt;データ&lt;/em&gt;を書き込み、ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="e701b16e8d36cd75f1fa0285568b0411ec651724" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in text mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">テキストモードで指定されたファイルを開き、&lt;em&gt;データ&lt;/em&gt;を書き込み、ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="89b97b71d7fce960991c7dd1c07e2cdaec524088" translate="yes" xml:space="preserve">
          <source>Open the given &lt;em&gt;url&lt;/em&gt; (which can be a request object or a string), optionally passing the given &lt;em&gt;data&lt;/em&gt;. Arguments, return values and exceptions raised are the same as those of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; (which simply calls the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method on the currently installed global &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). The timeout feature actually works only for HTTP, HTTPS and FTP connections).</source>
          <target state="translated">指定された&lt;em&gt;URL&lt;/em&gt;（リクエストオブジェクトまたは文字列）を開き、オプションで指定された&lt;em&gt;data&lt;/em&gt;を渡し&lt;em&gt;ます&lt;/em&gt;。発生する引数、戻り値、例外は&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;と同じです（現在インストールされているグローバル&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すだけです）。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータでは、接続試行などの操作をブロックするためのタイムアウトを秒単位で指定します（指定しない場合、グローバルなデフォルトのタイムアウト設定が使用されます）。タイムアウト機能は、実際にはHTTP、HTTPS、およびFTP接続でのみ機能します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1480c8605ef5bc7bd341fc4f6753a37e43a4d4" translate="yes" xml:space="preserve">
          <source>Open&amp;hellip;</source>
          <target state="translated">Open&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="01d60b1917be3088476a0cd4e28b367766a98677" translate="yes" xml:space="preserve">
          <source>OpenEXR Files</source>
          <target state="translated">OpenEXR ファイル</target>
        </trans-unit>
        <trans-unit id="73728b14af6a4a2f3551f7cdac9f5c4d6228013b" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.0 to 1.1.0e will abort the handshake and raise &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; when both sides support ALPN but cannot agree on a protocol. 1.1.0f+ behaves like 1.0.2, &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; returns None.</source>
          <target state="translated">1.1.0eへのOpenSSL 1.1.0は握手や昇給中止します&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; を&lt;/a&gt;両側がALPNをサポートしますが、プロトコルに同意できないとき。1.1.0f +は1.0.2と同様に動作し、&lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt;はNoneを返します。</target>
        </trans-unit>
        <trans-unit id="608031ed74d99bf56acad6cfae3a559becd3fe58" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.1 has TLS 1.3 cipher suites enabled by default. The suites cannot be disabled with &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 1.1.1では、TLS 1.3暗号スイートがデフォルトで有効になっています。スイートを&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;set_ciphers()&lt;/code&gt; で&lt;/a&gt;無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="87910396f08c825fecd3572b61ad32564c05b34d" translate="yes" xml:space="preserve">
          <source>OpenerDirector Objects</source>
          <target state="translated">OpenerDirector オブジェクト</target>
        </trans-unit>
        <trans-unit id="4fa7faa0fef5cd2e070617de5da06be08f27d93b" translate="yes" xml:space="preserve">
          <source>OpenerDirector objects open URLs in three stages:</source>
          <target state="translated">OpenerDirector オブジェクトは、3 段階で URL を開きます。</target>
        </trans-unit>
        <trans-unit id="16d066a3fc9b4ed5f9b17e3224ef371f27c42ab1" translate="yes" xml:space="preserve">
          <source>Opening a file:</source>
          <target state="translated">ファイルを開くこと。</target>
        </trans-unit>
        <trans-unit id="3b13dba20249cec4bebcc1e50c72c68162719b5f" translate="yes" xml:space="preserve">
          <source>Opening network connections</source>
          <target state="translated">ネットワーク接続を開く</target>
        </trans-unit>
        <trans-unit id="2e4955dc64b4b6a99ad04615254b1e5dbed12175" translate="yes" xml:space="preserve">
          <source>Opens a connection to the SQLite database file &lt;em&gt;database&lt;/em&gt;. By default returns a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object, unless a custom &lt;em&gt;factory&lt;/em&gt; is given.</source>
          <target state="translated">SQLiteデータベースファイル&lt;em&gt;database&lt;/em&gt;への接続を開き&lt;em&gt;ます&lt;/em&gt;。カスタム&lt;em&gt;ファクトリ&lt;/em&gt;が指定されていない限り、デフォルトでは&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85224a398354ea36e289250e0f429ab80eb410a3" translate="yes" xml:space="preserve">
          <source>Opens a new element. &lt;em&gt;tag&lt;/em&gt; is the element name. &lt;em&gt;attrs&lt;/em&gt; is a dictionary containing element attributes. Returns the opened element.</source>
          <target state="translated">新しい要素を開きます。&lt;em&gt;tag&lt;/em&gt;は要素名です。&lt;em&gt;attrs&lt;/em&gt;は、要素の属性を含む辞書です。開いている要素を返します。</target>
        </trans-unit>
        <trans-unit id="aabf2727e8cb0ec31b954ad851960d268b7966e2" translate="yes" xml:space="preserve">
          <source>Opens socket to &lt;em&gt;port&lt;/em&gt; at &lt;em&gt;host&lt;/em&gt;. This method is implicitly called by the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; constructor. The connection objects established by this method will be used in the &lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt;&lt;code&gt;IMAP4.read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt;&lt;code&gt;IMAP4.readline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt;&lt;code&gt;IMAP4.send()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt;&lt;code&gt;IMAP4.shutdown()&lt;/code&gt;&lt;/a&gt; methods. You may override this method.</source>
          <target state="translated">開くには、ソケット&lt;em&gt;のポート&lt;/em&gt;で&lt;em&gt;ホスト&lt;/em&gt;。このメソッドは、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;コンストラクターによって暗黙的に呼び出されます。このメソッドによって確立された接続オブジェクトは、&lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt; &lt;code&gt;IMAP4.read()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt; &lt;code&gt;IMAP4.readline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt; &lt;code&gt;IMAP4.send()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt; &lt;code&gt;IMAP4.shutdown()&lt;/code&gt; &lt;/a&gt;メソッドで使用されます。このメソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="525d07220d0ff4234fa0ad51dedfb34d53d57012" translate="yes" xml:space="preserve">
          <source>Opens the provided file with mode &lt;code&gt;'rb'&lt;/code&gt;. This function should be used when the intent is to treat the contents as executable code.</source>
          <target state="translated">提供されたファイルをモード &lt;code&gt;'rb'&lt;/code&gt; で開きます。この関数は、コンテンツを実行可能コードとして扱うことが目的の場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="413464a07680bc80891d442ceee2443c353ed2dd" translate="yes" xml:space="preserve">
          <source>Opens the specified key, returning a &lt;a href=&quot;#handle-object&quot;&gt;handle object&lt;/a&gt;.</source>
          <target state="translated">指定されたキーを開き、&lt;a href=&quot;#handle-object&quot;&gt;ハンドルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="8c04dd154019c144217096dfd3976827b05133f0" translate="yes" xml:space="preserve">
          <source>Operating system interfaces, including functions to work with files at a lower level than Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;.</source>
          <target state="translated">オペレーティングシステムのインターフェース。Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;よりも低いレベルでファイルを操作する関数を含みます。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="translated">作業はすでに進行中</target>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="translated">操作不可</target>
        </trans-unit>
        <trans-unit id="43a0d8034edc13c8132ddaa1b799ae87a6565b50" translate="yes" xml:space="preserve">
          <source>Operation not supported on transport endpoint</source>
          <target state="translated">トランスポートエンドポイントでサポートされていない操作</target>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="translated">運用中</target>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="translated">操作はブロックされます</target>
        </trans-unit>
        <trans-unit id="3f36c3736abf81762323dd82f7d22a61738746fb" translate="yes" xml:space="preserve">
          <source>Operations and built-in functions that have a Boolean result always return &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; for false and &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;True&lt;/code&gt; for true, unless otherwise stated. (Important exception: the Boolean operations &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; always return one of their operands.)</source>
          <target state="translated">ブール値を持つ演算と組み込み関数は、特に明記されていない限り、常にfalseの場合は &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; 、trueの場合は &lt;code&gt;1&lt;/code&gt; または &lt;code&gt;True&lt;/code&gt; を返します。（重要な例外：ブール演算 &lt;code&gt;or&lt;/code&gt; および &lt;code&gt;and&lt;/code&gt; および常に常にいずれかのオペランドを返します。）</target>
        </trans-unit>
        <trans-unit id="b0a2a652140b72b9707efca49f6096fb106713ee" translate="yes" xml:space="preserve">
          <source>Operations are used as methods. Since the DOM uses only &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; parameters, the arguments are passed in normal order (from left to right). There are no optional arguments. &lt;code&gt;void&lt;/code&gt; operations return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">操作はメソッドとして使用されます。DOMのみを使用していますので、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;のパラメータ（左から右へ）、引数は通常の順序で渡されます。オプションの引数はありません。 &lt;code&gt;void&lt;/code&gt; 操作は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5842137c602e8b1e20079af1475196379c2bc7a2" translate="yes" xml:space="preserve">
          <source>Operations like &lt;code&gt;+=&lt;/code&gt; which involve a read and write are not atomic. So if, for instance, you want to atomically increment a shared value it is insufficient to just do</source>
          <target state="translated">読み取りと書き込みを伴う &lt;code&gt;+=&lt;/code&gt; のような操作はアトミックではありません。したがって、たとえば、共有値をアトミックにインクリメントする場合は、単に行うだけでは不十分です。</target>
        </trans-unit>
        <trans-unit id="f419c43f2273d35c973397ffc8873fd0cff6d1f6" translate="yes" xml:space="preserve">
          <source>Operations which work with sequences (some of them with mappings too) include:</source>
          <target state="translated">シーケンス(一部はマッピングも含む)を扱う操作には次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="c431496d10314a298eb196699644e449631b5f2f" translate="yes" xml:space="preserve">
          <source>Option Flags</source>
          <target state="translated">オプションフラグ</target>
        </trans-unit>
        <trans-unit id="e495fe30fe845f1d5517bc35c9d0601fa416e0f7" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web clients (therefore, it will be used to create server-side sockets).</source>
          <target state="translated">&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; の&lt;/a&gt;オプション。この値は、コンテキストがWebクライアントの認証に使用される可能性があることを示します（したがって、サーバー側ソケットの作成に使用されます）。</target>
        </trans-unit>
        <trans-unit id="0ed5f390cd43fec0c1a9f5e969163e9713365adc" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web servers (therefore, it will be used to create client-side sockets).</source>
          <target state="translated">&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; の&lt;/a&gt;オプション。この値は、コンテキストがWebサーバーの認証に使用される可能性があることを示します（したがって、クライアント側ソケットの作成に使用されます）。</target>
        </trans-unit>
        <trans-unit id="1dc214003b5cc3f6b308d940b627561092a1f7c2" translate="yes" xml:space="preserve">
          <source>Option value syntax</source>
          <target state="translated">オプション値の構文</target>
        </trans-unit>
        <trans-unit id="0877ad74bf360dfde627563dd4aa4b01f6ce3129" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the audio data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は、トランスポート用のオーディオデータの実際のエンコーディングを実行する呼び出し可能な（つまり関数）です。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="ea5df2800bbbbd80f815acd541243fa31a50750a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は、&lt;em&gt;転送&lt;/em&gt;可能なデータの実際のエンコードを実行する呼び出し可能な（つまり、関数）です。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f423d4e8b5e1e91960dd208dab5452be79d71fb8" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the image data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は呼び出し可能な（つまり関数）で、転送用に画像データの実際のエンコードを実行します。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="d1640c671992d66aa1ab94530cbf0176f120aa8b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_mangle_from_&lt;/em&gt; and &lt;em&gt;maxheaderlen&lt;/em&gt; are as with the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">オプションの&lt;em&gt;_mangle_from_&lt;/em&gt;および&lt;em&gt;maxheaderlen&lt;/em&gt;は、&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;基本クラスと&lt;em&gt;同じ&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="c135f5214b837e44f2f6460a17880339144023cb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_subtype&lt;/em&gt; sets the subtype of the message; it defaults to &lt;em&gt;rfc822&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;_subtype&lt;/em&gt;は、メッセージのサブタイプを設定します。デフォルトは&lt;em&gt;rfc822&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="923ac92596f5e0b048764c0544725cb7d8315bfb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of at least length 2 (additional characters are ignored) which specifies an alternative alphabet for the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is &lt;code&gt;None&lt;/code&gt;, for which the standard Base64 alphabet is used.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代替アルファベットを指定する、少なくとも長さ2（追加の文字は無視されます）の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;でなければなりません。これにより、アプリケーションは、たとえばURLまたはファイルシステムに安全なBase64文字列を生成できます。デフォルトは &lt;code&gt;None&lt;/code&gt; で、標準のBase64アルファベットが使用されます。</target>
        </trans-unit>
        <trans-unit id="76bee86fbcac7650eb452298a6aece94136101d1" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string of at least length 2 (additional characters are ignored) which specifies the alternative alphabet used instead of the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;または少なくとも長さ2（追加の文字は無視されます）のASCII文字列である必要があり、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代わりに使用される代替アルファベットを指定します。</target>
        </trans-unit>
        <trans-unit id="cb4b9921d192cd1a45a6adc8e11889092e96883c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;boundary&lt;/em&gt; is the multipart boundary string. When &lt;code&gt;None&lt;/code&gt; (the default), the boundary is calculated when needed (for example, when the message is serialized).</source>
          <target state="translated">オプションの&lt;em&gt;境界&lt;/em&gt;は、マルチパート境界ストリングです。場合は &lt;code&gt;None&lt;/code&gt; 必要なとき（デフォルト）、境界が計算されていない（例えば、メッセージが連載されている場合）。</target>
        </trans-unit>
        <trans-unit id="83df4bdb171cf95d87daaeffb55e269018e15e7e" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;casefold&lt;/em&gt; is a flag specifying whether a lowercase alphabet is acceptable as input. For security purposes, the default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;casefold&lt;/em&gt;は、小文字のアルファベットを入力として受け入れるかどうかを指定するフラグです。セキュリティ上の理由から、デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b3b940d26a790e7ff0f6bc05a182d4d5e74c6dad" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; is the character set that will be used in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoding of the &lt;code&gt;realname&lt;/code&gt; if the &lt;code&gt;realname&lt;/code&gt; contains non-ASCII characters. Can be an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;utf-8&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;charsetが&lt;/em&gt;で使用される文字セットである&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;のエンコーディング &lt;code&gt;realname&lt;/code&gt; 場合 &lt;code&gt;realname&lt;/code&gt; 非ASCII文字が含まれています。&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; の&lt;/a&gt;インスタンスにすることができます。デフォルトは &lt;code&gt;utf-8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="63ec82a1964cf6c1f24661387a4dc0633c206b42" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; serves two purposes: it has the same meaning as the &lt;em&gt;charset&lt;/em&gt; argument to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method. It also sets the default character set for all subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls that omit the &lt;em&gt;charset&lt;/em&gt; argument. If &lt;em&gt;charset&lt;/em&gt; is not provided in the constructor (the default), the &lt;code&gt;us-ascii&lt;/code&gt; character set is used both as &lt;em&gt;s&lt;/em&gt;&amp;rsquo;s initial charset and as the default for subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">オプションの&lt;em&gt;文字セットに&lt;/em&gt;は2つの目的があります。それは、&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;charset&lt;/em&gt;引数と同じ意味です。また、&lt;em&gt;charset&lt;/em&gt;引数を省略した後続のすべての&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;呼び出しにデフォルトの文字セットを設定します。場合は&lt;em&gt;文字セットが&lt;/em&gt;コンストラクタ（デフォルト）で提供されていない、 &lt;code&gt;us-ascii&lt;/code&gt; 文字セットは両方として使用されている&lt;em&gt;S&lt;/em&gt;さん、最初の文字セットとその後のデフォルトとして&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;の呼び出しを。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="642b9453af4c0269ab0ad7d0d8bcb29305105881" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt;, if given, should be a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt;) or the name of a character set, which will be converted to a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance. A value of &lt;code&gt;None&lt;/code&gt; (the default) means that the &lt;em&gt;charset&lt;/em&gt; given in the constructor is used.</source>
          <target state="translated">オプションの&lt;em&gt;charset&lt;/em&gt;を指定する場合は、&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンス（&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; を&lt;/a&gt;参照）または&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスに変換される文字セットの名前にする必要があります。値 &lt;code&gt;None&lt;/code&gt; （デフォルト）は、コンストラクターで指定された&lt;em&gt;文字セット&lt;/em&gt;が使用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="3105978bd6f7423833b30c5cebf668aba1d75338" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;context&lt;/em&gt; parameter is an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object; This is an alternative to using a keyfile and a certfile and if specified both &lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;コンテキスト&lt;/em&gt;パラメータは&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトです。これはキーファイルとcertfileにを使用する代わりに、両方の指定された場合は&lt;em&gt;キーファイルを&lt;/em&gt;と&lt;em&gt;certfileには&lt;/em&gt;ないはずです &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d99f38424b2c5ff22681c0c95a235051c8f5f6c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;continuation_ws&lt;/em&gt; must be &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant folding whitespace, and is usually either a space or a hard tab character. This character will be prepended to continuation lines. &lt;em&gt;continuation_ws&lt;/em&gt; defaults to a single space character.</source>
          <target state="translated">オプションの&lt;em&gt;continuation_ws&lt;/em&gt;は&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;準拠の折りたたみ空白でなければならず、通常はスペースまたはハードタブ文字です。この文字は継続行の前に付加されます。&lt;em&gt;continuation_wsの&lt;/em&gt;デフォルトは単一の空白文字です。</target>
        </trans-unit>
        <trans-unit id="c67c2285f2ee3c267919b8e982d48c9f0e3fac16" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is a flag indicating whether the payload should be decoded or not, according to the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. When &lt;code&gt;True&lt;/code&gt; and the message is not a multipart, the payload will be decoded if this header&amp;rsquo;s value is &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt;. If some other encoding is used, or &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header is missing, the payload is returned as-is (undecoded). In all cases the returned value is binary data. If the message is a multipart and the &lt;em&gt;decode&lt;/em&gt; flag is &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;None&lt;/code&gt; is returned. If the payload is base64 and it was not perfectly formed (missing padding, characters outside the base64 alphabet), then an appropriate defect will be added to the message&amp;rsquo;s defect property (&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; or &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt;, respectively).</source>
          <target state="translated">オプションの&lt;em&gt;デコード&lt;/em&gt;は、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーに従って、ペイロードを&lt;em&gt;デコードする&lt;/em&gt;必要があるかどうかを示すフラグです。ときに &lt;code&gt;True&lt;/code&gt; とメッセージがマルチパートではない、このヘッダーの値がされている場合、ペイロードは、復号化されます &lt;code&gt;quoted-printable&lt;/code&gt; 形式または &lt;code&gt;base64&lt;/code&gt; 。他のエンコーディングが使用されている場合、または&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーがない場合、ペイロードはそのまま返されます（デコードされません）。すべての場合において、戻り値はバイナリデータです。メッセージがマルチパートで、&lt;em&gt;デコード&lt;/em&gt;フラグが &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;None&lt;/code&gt; 返されます。ペイロードがbase64であり、完全に形成されていない場合（パディングがない、base64アルファベット以外の文字）、適切な欠陥がメッセージの欠陥プロパティに追加されます（それぞれ &lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; または &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="369dd5ecc7951cf49ed4b1356b49e703da098189" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is passed through to &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;Message.get_payload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;デコード&lt;/em&gt;は&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;Message.get_payload&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="84972e509ca18de70cc29ad7afa6e0258541f329" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed as the errors argument to the decode call if &lt;em&gt;s&lt;/em&gt; is a byte string.</source>
          <target state="translated">オプションの&lt;em&gt;エラー&lt;/em&gt;は、&lt;em&gt;s&lt;/em&gt;がバイト文字列の場合、decodes呼び出しのエラー引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="cdfa3072d99360bc8281b6670d7022d51cad8c05" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed straight through to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;エラー&lt;/em&gt;は、&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="af5602daa1b8d69afae9c649f6b6721510f50598" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;failobj&lt;/em&gt; is the object to return if there is no &lt;em&gt;Content-Type&lt;/em&gt; header. Optional &lt;em&gt;header&lt;/em&gt; is the header to search instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;failobj&lt;/em&gt;は、&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーがない場合に返すオブジェクトです。オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は、&lt;em&gt;Content-Typeの&lt;/em&gt;代わりに検索するヘッダーです。</target>
        </trans-unit>
        <trans-unit id="1c9958c82059fc6801aef502b2e8413f811d61fd" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;fp&lt;/em&gt; is a file-like object to print the output to. It must be suitable for Python&amp;rsquo;s &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;level&lt;/em&gt; is used internally. &lt;em&gt;include_default&lt;/em&gt;, if true, prints the default type as well.</source>
          <target state="translated">オプションの&lt;em&gt;fp&lt;/em&gt;は、出力を出力するファイルのようなオブジェクトです。Pythonの&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数に適している必要があります。&lt;em&gt;level&lt;/em&gt;は内部で使用されます。&lt;em&gt;include_default&lt;/em&gt;は、trueの場合、デフォルトのタイプも出力します。</target>
        </trans-unit>
        <trans-unit id="a8edc8339641cac835a5f65084c400648dd7bc38" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; if given, specifies the message header to use instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;ヘッダーが&lt;/em&gt;指定されている場合、&lt;em&gt;Content-Typeの&lt;/em&gt;代わりに使用するメッセージヘッダーを指定します。</target>
        </trans-unit>
        <trans-unit id="56ec783d1d1ef92af29b2b3bf0edfc7eeea59252" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative header to &lt;em&gt;Content-Type&lt;/em&gt;, and all parameters will be quoted as necessary unless optional &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は&lt;em&gt;Content-Typeの&lt;/em&gt;代替ヘッダーを指定し、オプションの&lt;em&gt;再&lt;/em&gt;引用が &lt;code&gt;False&lt;/code&gt; （デフォルトは &lt;code&gt;True&lt;/code&gt; ）でない限り、すべてのパラメーターは必要に応じて引用されます。</target>
        </trans-unit>
        <trans-unit id="d5523c1c7da4baa3419962027d50d39d8397401a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header_enc&lt;/em&gt; and &lt;em&gt;body_enc&lt;/em&gt; is either &lt;code&gt;Charset.QP&lt;/code&gt; for quoted-printable, &lt;code&gt;Charset.BASE64&lt;/code&gt; for base64 encoding, &lt;code&gt;Charset.SHORTEST&lt;/code&gt; for the shortest of quoted-printable or base64 encoding, or &lt;code&gt;None&lt;/code&gt; for no encoding. &lt;code&gt;SHORTEST&lt;/code&gt; is only valid for &lt;em&gt;header_enc&lt;/em&gt;. The default is &lt;code&gt;None&lt;/code&gt; for no encoding.</source>
          <target state="translated">オプション&lt;em&gt;header_enc&lt;/em&gt;と&lt;em&gt;body_encは&lt;/em&gt;どちらかである &lt;code&gt;Charset.QP&lt;/code&gt; quoted-printableのため、 &lt;code&gt;Charset.BASE64&lt;/code&gt; base64でエンコード、ため &lt;code&gt;Charset.SHORTEST&lt;/code&gt; quoted-printable形式またはbase64エンコード、または最短のために &lt;code&gt;None&lt;/code&gt; なしエンコーディングについて。 &lt;code&gt;SHORTEST&lt;/code&gt; のためにのみ有効です&lt;em&gt;header_enc&lt;/em&gt;。デフォルトは、エンコード &lt;code&gt;None&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="348f37b616413a59290dc4137576e659b6b66805" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is a flag specifying whether to stop parsing after reading the headers or not. The default is &lt;code&gt;False&lt;/code&gt;, meaning it parses the entire contents of the file.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、ヘッダーの読み取り後に解析を停止するかどうかを指定するフラグです。デフォルトは &lt;code&gt;False&lt;/code&gt; で、ファイルの内容全体を解析します。</target>
        </trans-unit>
        <trans-unit id="70ab572101a30eef47fe16af46c39372bde2e339" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="b729b7533028c3755db136b3ae706911b578a369" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.Parser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、&lt;a href=&quot;#email.parser.Parser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="1300eb907c8a0950cd615120af8b9e9015e21490" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;input_charset&lt;/em&gt; is as described below; it is always coerced to lower case. After being alias normalized it is also used as a lookup into the registry of character sets to find out the header encoding, body encoding, and output conversion codec to be used for the character set. For example, if &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;iso-8859-1&lt;/code&gt;, then headers and bodies will be encoded using quoted-printable and no output conversion codec is necessary. If &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;euc-jp&lt;/code&gt;, then headers will be encoded with base64, bodies will not be encoded, but output text will be converted from the &lt;code&gt;euc-jp&lt;/code&gt; character set to the &lt;code&gt;iso-2022-jp&lt;/code&gt; character set.</source>
          <target state="translated">オプションの&lt;em&gt;input_charset&lt;/em&gt;は次のとおりです。常に小文字に変換されます。エイリアスで正規化された後、文字セットのレジストリへのルックアップとしても使用され、文字セットに使用されるヘッダーエンコーディング、ボディエンコーディング、および出力変換コーデックが検出されます。たとえば、&lt;em&gt;input_charset&lt;/em&gt;が &lt;code&gt;iso-8859-1&lt;/code&gt; の場合、ヘッダーと本文はquoted-printableを使用してエンコードされ、出力変換コーデックは不要です。場合&lt;em&gt;input_charsetが&lt;/em&gt;ある &lt;code&gt;euc-jp&lt;/code&gt; 、その後、ヘッダはBASE64でエンコードされ、遺体はエンコードされませんが、出力テキストから変換されます &lt;code&gt;euc-jp&lt;/code&gt; への文字セット &lt;code&gt;iso-2022-jp&lt;/code&gt; 文字セット。</target>
        </trans-unit>
        <trans-unit id="7f0ac5d6eacc6d8910fdc79f834598dba5f7ecc0" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;localtime&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, interprets &lt;em&gt;timeval&lt;/em&gt;, and returns a date relative to the local timezone instead of UTC, properly taking daylight savings time into account. The default is &lt;code&gt;False&lt;/code&gt; meaning UTC is used.</source>
          <target state="translated">オプションの&lt;em&gt;localtime&lt;/em&gt;は、 &lt;code&gt;True&lt;/code&gt; の場合、&lt;em&gt;timevalを&lt;/em&gt;解釈し、UTCではなくローカルタイムゾーンに関連する日付を返し、夏時間を適切に考慮したフラグです。デフォルトは &lt;code&gt;False&lt;/code&gt; で、UTCが使用されます。</target>
        </trans-unit>
        <trans-unit id="081534f96775eff49e5f20cd9241c5dc8464300b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;output_charset&lt;/em&gt; is the character set that the output should be in. Conversions will proceed from input charset, to Unicode, to the output charset when the method &lt;code&gt;Charset.convert()&lt;/code&gt; is called. The default is to output in the same character set as the input.</source>
          <target state="translated">オプションの&lt;em&gt;output_charset&lt;/em&gt;は、出力先の文字セットです。メソッド &lt;code&gt;Charset.convert()&lt;/code&gt; が呼び出されると、変換は入力文字セットからUnicode、出力文字セットへと進みます。デフォルトでは、入力と同じ文字セットで出力します。</target>
        </trans-unit>
        <trans-unit id="27a289728023caa13d781ff4f3845ee08d743ebe" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;policy&lt;/em&gt; argument defaults to &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;ポリシー&lt;/em&gt;引数のデフォルトは&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e9de5adc35af35a2d0dbdc98b0b7dccae205e947" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;s&lt;/em&gt; is the initial header value. If &lt;code&gt;None&lt;/code&gt; (the default), the initial header value is not set. You can later append to the header with &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method calls. &lt;em&gt;s&lt;/em&gt; may be an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, but see the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; documentation for semantics.</source>
          <target state="translated">オプション&lt;em&gt;のs&lt;/em&gt;は初期ヘッダー値です。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、初期ヘッダの値が設定されていません。後でappend &lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してヘッダーに追加できます。&lt;em&gt;s&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;インスタンスですが、セマンティクスについては&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a06aa49f277b03a309f72dd81f7730544395c46" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;splitchars&lt;/em&gt; is a string containing characters which should be given extra weight by the splitting algorithm during normal header wrapping. This is in very rough support of &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;lsquo;higher level syntactic breaks&amp;rsquo;: split points preceded by a splitchar are preferred during line splitting, with the characters preferred in the order in which they appear in the string. Space and tab may be included in the string to indicate whether preference should be given to one over the other as a split point when other split chars do not appear in the line being split. Splitchars does not affect &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded lines.</source>
          <target state="translated">オプションの&lt;em&gt;splitchars&lt;/em&gt;は文字を含む文字列で、通常のヘッダーの折り返し中に分割アルゴリズムによって追加の重みを与える必要があります。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;の「上位レベルの構文ブレーク」の大まかなサポートにあり&lt;strong&gt;ます&lt;/strong&gt;。splitcharが前にあるスプリットポイントは、行分割中に優先され、文字は、文字列に出現する順序で優先されます。文字列にスペースとタブを含めると、分割される行に他の分割文字が表示されない場合に、分割ポイントとして優先するかどうかを指定できます。 Splitcharsは&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047で&lt;/strong&gt;&lt;/a&gt;エンコードされた行には影響しません。</target>
        </trans-unit>
        <trans-unit id="a3f21b8e8630f6eb8e4be7786fc506fc0f12e579" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;timeval&lt;/em&gt; if given is a floating point time value as accepted by &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt;, otherwise the current time is used.</source>
          <target state="translated">&lt;em&gt;指定された&lt;/em&gt;場合のオプションの&lt;em&gt;timeval&lt;/em&gt;は、&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;で受け入れられる浮動小数点時間値です。それ以外の場合は、現在の時刻が使用されます。</target>
        </trans-unit>
        <trans-unit id="d94e2bee88984200593b6f6da3352d09ebd1bdf9" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;usegmt&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, outputs a date string with the timezone as an ascii string &lt;code&gt;GMT&lt;/code&gt;, rather than a numeric &lt;code&gt;-0000&lt;/code&gt;. This is needed for some protocols (such as HTTP). This only applies when &lt;em&gt;localtime&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;. The default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;usegmt&lt;/em&gt;は、 &lt;code&gt;True&lt;/code&gt; の場合、タイムゾーンを含む日付文字列を、数値 &lt;code&gt;-0000&lt;/code&gt; ではなくASCII文字列 &lt;code&gt;GMT&lt;/code&gt; として出力するフラグです。これは、一部のプロトコル（HTTPなど）に必要です。これは、&lt;em&gt;localtime&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合にのみ適用されます。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3f1580e50d2eddf54a3ae07be51a03a3b611fbc6" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; containing metadata about the specified path. Supported dictionary keys are:</source>
          <target state="translated">指定されたパスに関するメタデータを含む&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;を返すオプションの抽象メソッド。サポートされている辞書キーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="95081d9d4e8221143e59084ea58753f21593f36b" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns the modification time for the specified path.</source>
          <target state="translated">指定したパスの変更時間を返すオプションの抽象メソッドです。</target>
        </trans-unit>
        <trans-unit id="89231b5583c81ea0c69000746832d731cd8bae53" translate="yes" xml:space="preserve">
          <source>Optional abstract method which writes the specified bytes to a file path. Any intermediate directories which do not exist are to be created automatically.</source>
          <target state="translated">指定したバイト数をファイルパスに書き込むオプションの抽象メソッド。存在しない中間ディレクトリは自動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="44f898292a2dcbd773017d0c19c497a57f45394d" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;compileflags&lt;/em&gt; gives the set of flags that should be used by the Python compiler when running the examples. By default, or if &lt;code&gt;None&lt;/code&gt;, flags are deduced corresponding to the set of future features found in &lt;em&gt;globs&lt;/em&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;compileflags&lt;/em&gt;は、例を実行するときにPythonコンパイラーが使用する必要があるフラグのセットを提供します。デフォルトで、または &lt;code&gt;None&lt;/code&gt; の場合、フラグは&lt;em&gt;globsで&lt;/em&gt;見つかった将来の機能のセットに対応して推定され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a1d7c5227339a3dd1d8d5e5070885d664aae3a21" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;cutoff&lt;/em&gt; (default &lt;code&gt;0.6&lt;/code&gt;) is a float in the range [0, 1]. Possibilities that don&amp;rsquo;t score at least that similar to &lt;em&gt;word&lt;/em&gt; are ignored.</source>
          <target state="translated">オプションの引数&lt;em&gt;cutoff&lt;/em&gt;（デフォルト &lt;code&gt;0.6&lt;/code&gt; ）は、[0、1]の範囲の浮動小数点数です。少なくとも&lt;em&gt;単語&lt;/em&gt;と同様のスコアを獲得できない可能性は無視されます。</target>
        </trans-unit>
        <trans-unit id="a241b6f1ed98aec382909620ac3173fbadb0aac1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;encoding&lt;/em&gt; specifies an encoding that should be used to convert the file to unicode.</source>
          <target state="translated">オプションの引数&lt;em&gt;encoding&lt;/em&gt;は、ファイルをUnicodeに変換するために使用するエンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="32822bcfb01fea87cd439dcc50837e241cd10492" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;exclude_empty&lt;/em&gt; defaults to false. If true, objects for which no doctests are found are excluded from consideration. The default is a backward compatibility hack, so that code still using &lt;code&gt;doctest.master.summarize()&lt;/code&gt; in conjunction with &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; continues to get output for objects with no tests. The &lt;em&gt;exclude_empty&lt;/em&gt; argument to the newer &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; constructor defaults to true.</source>
          <target state="translated">オプションの引数&lt;em&gt;exclude_emptyの&lt;/em&gt;デフォルトはfalseです。 trueの場合、doctestが見つからないオブジェクトは考慮から除外されます。デフォルトは後方互換性のハックであるため、 &lt;code&gt;doctest.master.summarize()&lt;/code&gt; とともに&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;引き続き使用するコードは、テストのないオブジェクトの出力を引き続き取得します。新しい&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt;コンストラクタの&lt;em&gt;exclude_empty&lt;/em&gt;引数は、デフォルトでtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="c56059e44a1695148c4922ca4f4a049c77eff06a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; gives a dict merged into the globals used to execute examples. This works like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;: if &lt;em&gt;globs&lt;/em&gt; and &lt;em&gt;extraglobs&lt;/em&gt; have a common key, the associated value in &lt;em&gt;extraglobs&lt;/em&gt; appears in the combined dict. By default, or if &lt;code&gt;None&lt;/code&gt;, no extra globals are used. This is an advanced feature that allows parameterization of doctests. For example, a doctest can be written for a base class, using a generic name for the class, then reused to test any number of subclasses by passing an &lt;em&gt;extraglobs&lt;/em&gt; dict mapping the generic name to the subclass to be tested.</source>
          <target state="translated">オプションの引数&lt;em&gt;extraglobs&lt;/em&gt;は、例の実行に使用されるグローバルにマージされたdictを提供します。以下のようなこの作品&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; は&lt;/a&gt;次の場合&lt;em&gt;グロブ&lt;/em&gt;と&lt;em&gt;extraglobsには、&lt;/em&gt;共通鍵を持って、内に関連付けられた値&lt;em&gt;extraglobsには、&lt;/em&gt;組み合わせのdictに表示されます。デフォルト、または &lt;code&gt;None&lt;/code&gt; の場合、追加のグローバルは使用されません。これは、doctestのパラメーター化を可能にする高度な機能です。たとえば、クラスの総称名を使用して基本クラス用のdoctestを作成し、再利用して、テストするサブクラスに総称名をマッピングする&lt;em&gt;extraglobs&lt;/em&gt; dict を渡すことにより、任意の数のサブクラスをテストできます。</target>
        </trans-unit>
        <trans-unit id="7fba34650a7fe8672d07c230f7d0e87f1c888f71" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; specifies an extra set of global variables, which is merged into &lt;em&gt;globs&lt;/em&gt;. By default, no extra globals are used.</source>
          <target state="translated">オプション引数&lt;em&gt;extraglobsに&lt;/em&gt;にマージされたグローバル変数の余分なセットを指定&lt;em&gt;グロブを&lt;/em&gt;。デフォルトでは、追加のグローバルは使用されません。</target>
        </trans-unit>
        <trans-unit id="47e27778c61b07e6d1aab3d14114ebc81c4fa2f2" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dict to be used as the globals when executing examples. A new shallow copy of this dict is created for the doctest, so its examples start with a clean slate. By default, or if &lt;code&gt;None&lt;/code&gt;, a new empty dict is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、例を実行するときにグローバルとして使用される&lt;em&gt;辞書&lt;/em&gt;を与えます。このdictの新しい浅いコピーがdoctest用に作成されるため、その例は白紙の状態から始まります。デフォルトで、または &lt;code&gt;None&lt;/code&gt; の場合、新しい空の辞書が使用されます。</target>
        </trans-unit>
        <trans-unit id="e45842c5895e5ae4432fbb87c16f7cb0eeaec604" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dictionary to use as both local and global execution context. If not specified, or &lt;code&gt;None&lt;/code&gt;, an empty dictionary is used. If specified, a shallow copy of the dictionary is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、ローカル実行コンテキストとグローバル実行コンテキストの両方として使用する辞書を提供します。指定しない場合、または &lt;code&gt;None&lt;/code&gt; の場合、空の辞書が使用されます。指定した場合、辞書の浅いコピーが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac2368691c9de6fd84091afdc4f7a61c1910faf1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; is a dictionary containing the initial global variables for the tests. A new copy of this dictionary is created for each test. By default, &lt;em&gt;globs&lt;/em&gt; is a new empty dictionary.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、テストの初期グローバル変数を含む辞書です。このディクショナリの新しいコピーがテストごとに作成されます。デフォルトでは、&lt;em&gt;globs&lt;/em&gt;は新しい空の辞書です。</target>
        </trans-unit>
        <trans-unit id="fb750e9897e2507830eb1c28fae23ef3fcb29129" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;interval&lt;/em&gt; represents the class interval, and defaults to 1. Changing the class interval naturally will change the interpolation:</source>
          <target state="translated">オプションの引数&lt;em&gt;interval&lt;/em&gt;はクラス&lt;em&gt;間隔を&lt;/em&gt;表し、デフォルトは1です。クラス間隔を変更すると、当然補間が変更されます。</target>
        </trans-unit>
        <trans-unit id="3aac0b0b4936e97b6b254322e753031731854457" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;isjunk&lt;/em&gt; must be &lt;code&gt;None&lt;/code&gt; (the default) or a one-argument function that takes a sequence element and returns true if and only if the element is &amp;ldquo;junk&amp;rdquo; and should be ignored. Passing &lt;code&gt;None&lt;/code&gt; for &lt;em&gt;isjunk&lt;/em&gt; is equivalent to passing &lt;code&gt;lambda x: False&lt;/code&gt;; in other words, no elements are ignored. For example, pass:</source>
          <target state="translated">オプションの引数&lt;em&gt;isjunk&lt;/em&gt;は、 &lt;code&gt;None&lt;/code&gt; （デフォルト）またはシーケンス要素を取り、要素が「ジャンク」であり、無視する必要がある場合にのみtrueを返す1つの引数の関数でなければなりません。渡すん &lt;code&gt;None&lt;/code&gt; のため&lt;em&gt;isjunkは&lt;/em&gt;渡すことと同じである &lt;code&gt;lambda x: False&lt;/code&gt; ; つまり、無視される要素はありません。たとえば、次のように渡します。</target>
        </trans-unit>
        <trans-unit id="74aea2ea98253e841261cf8043788a6866f1d3cf" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module&lt;/em&gt; provides the module to be tested. It can be a module object or a (possibly dotted) module name. If not specified, the module calling this function is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;module&lt;/em&gt;は、テストされる&lt;em&gt;モジュールを&lt;/em&gt;提供します。これは、モジュールオブジェクトまたは（ドットで区切られた）モジュール名にすることができます。指定しない場合、この関数を呼び出すモジュールが使用されます。</target>
        </trans-unit>
        <trans-unit id="88fe4782e94348e9fdc401064c2ad56c8058b300" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filename should be interpreted:</source>
          <target state="translated">オプションの引数&lt;em&gt;module_relative&lt;/em&gt;は、ファイル名の解釈方法を指定します。</target>
        </trans-unit>
        <trans-unit id="22ad18924a8191c36d6c5c768f2a1805167cb09a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filenames in &lt;em&gt;paths&lt;/em&gt; should be interpreted:</source>
          <target state="translated">オプションの引数&lt;em&gt;module_relative&lt;/em&gt;は、&lt;em&gt;パス&lt;/em&gt;内のファイル名をどのように解釈するかを指定します。</target>
        </trans-unit>
        <trans-unit id="c683e99d27fef7549d8e40a7457b3d344329fce8" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;n&lt;/em&gt; (default &lt;code&gt;3&lt;/code&gt;) is the maximum number of close matches to return; &lt;em&gt;n&lt;/em&gt; must be greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;n&lt;/em&gt;（デフォルトは &lt;code&gt;3&lt;/code&gt; ）は、返される近似一致の最大数です。&lt;em&gt;n&lt;/em&gt;は &lt;code&gt;0&lt;/code&gt; より大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="74f74bc8bf80163ce9a08ec26c023a78cc6f1351" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the module; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;m.__name__&lt;/code&gt; is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;name&lt;/em&gt;はモジュールの&lt;em&gt;名前&lt;/em&gt;を与えます。デフォルトでは、または &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;m.__name__&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="3d52bd25fbf060bdc8c3b9ca435cbc9618a61325" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the test; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;os.path.basename(filename)&lt;/code&gt; is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;name&lt;/em&gt;はテストの&lt;em&gt;名前&lt;/em&gt;を与えます。デフォルト、または &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;os.path.basename(filename)&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="f6b2562f8953f1131c472b47d4b54220bb6ba548" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; is used in failure messages, and defaults to &lt;code&gt;&quot;NoName&quot;&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;名&lt;/em&gt;は失敗メッセージで使用され、デフォルトは &lt;code&gt;&quot;NoName&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1699bfdd7fd20973701d3162c62bfa1f9508f5f4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; (default value 0) takes the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise OR&lt;/a&gt; of option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;optionflags&lt;/em&gt;（デフォルト値0）は、オプションフラグの&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;ビット単位のOR&lt;/a&gt;を取ります。&lt;a href=&quot;#doctest-options&quot;&gt;オプションフラグを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="759e88a19de4d4b0746cebf786891ae177aeb07c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; specifies the default doctest options for the tests, created by or-ing together individual option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;. See function &lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt;&lt;code&gt;set_unittest_reportflags()&lt;/code&gt;&lt;/a&gt; below for a better way to set reporting options.</source>
          <target state="translated">オプションの引数&lt;em&gt;optionflags&lt;/em&gt;は、テストのデフォルトのdoctestオプションを指定します。これは、個々のオプションフラグを組み合わせて作成されます。&lt;a href=&quot;#doctest-options&quot;&gt;オプションフラグを&lt;/a&gt;参照してください。レポートオプションを設定するより良い方法については、以下の関数&lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt; &lt;code&gt;set_unittest_reportflags()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="37e0a655889a74d4486c037cebbed7ffef38cab5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; works as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">オプションの引数&lt;em&gt;optionflags&lt;/em&gt;は、上記の関数&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; と&lt;/a&gt;同様に機能します。</target>
        </trans-unit>
        <trans-unit id="3866fc6b90b4f4133905c3c5543b075f06526447" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for a module-relative filename. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;パッケージ&lt;/em&gt;は、Pythonパッケージ、またはモジュール相対ファイル名のベースディレクトリとして使用する必要があるディレクトリのPythonパッケージの名前です。パッケージが指定されていない場合、呼び出し側モジュールのディレクトリがモジュール相対ファイル名のベースディレクトリとして使用されます。&lt;em&gt;module_relative&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;パッケージ&lt;/em&gt;を指定するとエラーになります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ef5b2b55ab00bb34cd92f7efcd9f129e923c313" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for module-relative filenames in &lt;em&gt;paths&lt;/em&gt;. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;パッケージ&lt;/em&gt;は、Pythonパッケージ、または&lt;em&gt;パス&lt;/em&gt;内のモジュール相対ファイル名のベースディレクトリとして使用する必要があるPythonパッケージの名前です。パッケージが指定されていない場合、呼び出し側モジュールのディレクトリがモジュール相対ファイル名のベースディレクトリとして使用されます。&lt;em&gt;module_relative&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;パッケージ&lt;/em&gt;を指定するとエラーになります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94d377498ca11c8e7b908eef8487574468dd8dc7" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;parser&lt;/em&gt; specifies a &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; (or subclass) that should be used to extract tests from the files. It defaults to a normal parser (i.e., &lt;code&gt;DocTestParser()&lt;/code&gt;).</source>
          <target state="translated">オプションの引数&lt;em&gt;パーサー&lt;/em&gt;は、ファイルからテストを抽出するために使用される&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt;（またはサブクラス）を指定します。デフォルトは通常のパーサー（つまり、 &lt;code&gt;DocTestParser()&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="9519b496e1e3f651153ff9769f800e30f69b98e4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; controls whether post-mortem debugging is used. If &lt;em&gt;pm&lt;/em&gt; has a true value, the script file is run directly, and the debugger gets involved only if the script terminates via raising an unhandled exception. If it does, then post-mortem debugging is invoked, via &lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt;&lt;code&gt;pdb.post_mortem()&lt;/code&gt;&lt;/a&gt;, passing the traceback object from the unhandled exception. If &lt;em&gt;pm&lt;/em&gt; is not specified, or is false, the script is run under the debugger from the start, via passing an appropriate &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; call to &lt;a href=&quot;pdb#pdb.run&quot;&gt;&lt;code&gt;pdb.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;pm&lt;/em&gt;は、事後分析デバッグを使用するかどうかを制御します。場合は&lt;em&gt;午後には&lt;/em&gt;真の価値を持って、スクリプトファイルを直接実行され、デバッガは、スクリプトが未処理の例外を上げ経由して終了した場合にのみ関与されます。存在する場合は、&lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt; &lt;code&gt;pdb.post_mortem()&lt;/code&gt; &lt;/a&gt;を介して事後デバッグが呼び出され、未処理の例外からトレースバックオブジェクトが渡されます。&lt;em&gt;pm&lt;/em&gt;が指定されていない場合、またはfalseの場合、スクリプトは、適切な&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;呼び出しを&lt;a href=&quot;pdb#pdb.run&quot;&gt; &lt;code&gt;pdb.run()&lt;/code&gt; に&lt;/a&gt;渡すことにより、デバッガーの下で最初から実行されます。</target>
        </trans-unit>
        <trans-unit id="8a8d4fb8b6c83dfaa1d99881e69a72ea7d791e79" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; has the same meaning as in function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">オプションの引数&lt;em&gt;pm&lt;/em&gt;は、上記の関数&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="9dae0c1a5b97e77866ab6881abe2e777305b2301" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;raise_on_error&lt;/em&gt; defaults to false. If true, an exception is raised upon the first failure or unexpected exception in an example. This allows failures to be post-mortem debugged. Default behavior is to continue running examples.</source>
          <target state="translated">オプションの引数&lt;em&gt;raise_on_errorの&lt;/em&gt;デフォルトはfalseです。trueの場合、最初の失敗または例の予期しない例外で例外が発生します。これにより、失敗を事後的にデバッグできます。デフォルトの動作では、例の実行を継続します。</target>
        </trans-unit>
        <trans-unit id="56349a38f6363fc65d65da6f8b6443516a01e339" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;report&lt;/em&gt; prints a summary at the end when true, else prints nothing at the end. In verbose mode, the summary is detailed, else the summary is very brief (in fact, empty if all tests passed).</source>
          <target state="translated">オプションの引数&lt;em&gt;レポート&lt;/em&gt;は、trueの場合、最後に要約を出力し、それ以外の場合、最後に何も出力しません。詳細モードでは、要約は詳細です。それ以外の場合、要約は非常に簡潔です（実際、すべてのテストに合格した場合は空になります）。</target>
        </trans-unit>
        <trans-unit id="031d2124c82b980138e2af2ad0b509f59edc68b5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;setUp&lt;/em&gt; specifies a set-up function for the test suite. This is called before running the tests in each file. The &lt;em&gt;setUp&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">オプションの引数&lt;em&gt;setUp&lt;/em&gt;は、テストスイートのセットアップ関数を指定します。これは、各ファイルでテストを実行する前に呼び出されます。&lt;em&gt;セットアップ&lt;/em&gt;機能が渡される&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;オブジェクトを。setUp関数は、合格したテストの&lt;em&gt;globs&lt;/em&gt;属性としてテストグローバルにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f72389898b352b75c4f85463a108793b516a19f5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the dictionary passed. If not given, &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;source&lt;/em&gt;は、渡された辞書のコンテキスト固有の名前を指定します。指定しない場合、 &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="40ff180f69c6939133c7c6bbd110c796c6aedf22" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the string passed. If not given, &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; is used. This should commonly be a filesystem path or a URL.</source>
          <target state="translated">オプションの引数&lt;em&gt;source&lt;/em&gt;は、渡される文字列のコンテキスト固有の名前を指定します。指定しない場合、 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; が使用されます。通常、これはファイルシステムのパスまたはURLです。</target>
        </trans-unit>
        <trans-unit id="c3502c84642c2ef73c0ea7d6513bc9ce05709a14" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies the name of the file being read. If not given and &lt;em&gt;f&lt;/em&gt; has a &lt;code&gt;name&lt;/code&gt; attribute, that is used for &lt;em&gt;source&lt;/em&gt;; the default is &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;source&lt;/em&gt;は、読み取られるファイルの名前を指定します。指定されておらず、&lt;em&gt;f&lt;/em&gt;に &lt;code&gt;name&lt;/code&gt; 属性がある場合、それは&lt;em&gt;sourceに&lt;/em&gt;使用され&lt;em&gt;ます&lt;/em&gt;。デフォルトは &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e3ffb9e4c0b3d8066cd77a81026675c48155def9" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;tearDown&lt;/em&gt; specifies a tear-down function for the test suite. This is called after running the tests in each file. The &lt;em&gt;tearDown&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">オプションの引数&lt;em&gt;tearDown&lt;/em&gt;は、テストスイートのティアダウン関数を指定します。これは、各ファイルでテストを実行した後に呼び出されます。&lt;em&gt;ティアダウン&lt;/em&gt;機能が渡される&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;オブジェクトを。setUp関数は、合格したテストの&lt;em&gt;globs&lt;/em&gt;属性としてテストグローバルにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b7c5453a8a662ff48ce6b05bb63a862556df9025" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;test_finder&lt;/em&gt; is the &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; object (or a drop-in replacement) that is used to extract doctests from the module.</source>
          <target state="translated">オプションの引数&lt;em&gt;test_finder&lt;/em&gt;は、モジュールからdoctestを抽出するために使用される&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt;オブジェクト（またはドロップイン置換）です。</target>
        </trans-unit>
        <trans-unit id="db4c1cc5f02a40eafb0ed3a5823be338fcf19c2f" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;verbose&lt;/em&gt; prints lots of stuff if true, and prints only failures if false; by default, or if &lt;code&gt;None&lt;/code&gt;, it&amp;rsquo;s true if and only if &lt;code&gt;'-v'&lt;/code&gt; is in &lt;code&gt;sys.argv&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;verbose&lt;/em&gt;は、trueの場合は多くのものを出力し、falseの場合は失敗のみを出力します。デフォルトでは、または &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;'-v'&lt;/code&gt; が &lt;code&gt;sys.argv&lt;/code&gt; にある場合にのみtrue になります。</target>
        </trans-unit>
        <trans-unit id="b8153f139b45d286bc6ada5dd1d390a6a4123c3f" translate="yes" xml:space="preserve">
          <source>Optional argument:</source>
          <target state="translated">オプションの引数。</target>
        </trans-unit>
        <trans-unit id="dc3411c4765a5302ac4a0657ce51631f57505a0c" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;extraglobs&lt;/em&gt;, &lt;em&gt;verbose&lt;/em&gt;, &lt;em&gt;report&lt;/em&gt;, &lt;em&gt;optionflags&lt;/em&gt;, &lt;em&gt;raise_on_error&lt;/em&gt;, and &lt;em&gt;globs&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above, except that &lt;em&gt;globs&lt;/em&gt; defaults to &lt;code&gt;m.__dict__&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;extraglobsには&lt;/em&gt;、&lt;em&gt;冗長&lt;/em&gt;、&lt;em&gt;レポート&lt;/em&gt;、&lt;em&gt;optionflagsは&lt;/em&gt;、&lt;em&gt;raise_on_error&lt;/em&gt;、及び&lt;em&gt;塊は&lt;/em&gt;、関数と同じである&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;こと以外は、上記&lt;em&gt;塊の&lt;/em&gt;デフォルト &lt;code&gt;m.__dict__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66014d9b1f3041cfd84a26a994534d9a74b11dd8" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;setUp&lt;/em&gt;, &lt;em&gt;tearDown&lt;/em&gt;, and &lt;em&gt;optionflags&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt;&lt;code&gt;DocFileSuite()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">オプションの引数&lt;em&gt;setUp&lt;/em&gt;、&lt;em&gt;tearDown&lt;/em&gt;、および&lt;em&gt;optionflags&lt;/em&gt;は、上記の&lt;a href=&quot;#doctest.DocFileSuite&quot;&gt; &lt;code&gt;DocFileSuite()&lt;/code&gt; &lt;/a&gt;関数の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="9e6ad614ba64534bb9b35c5be45e412b81787e19" translate="yes" xml:space="preserve">
          <source>Optional encrypted password</source>
          <target state="translated">オプションの暗号化されたパスワード</target>
        </trans-unit>
        <trans-unit id="800aa892de20413e219a54b37b3156efd477e617" translate="yes" xml:space="preserve">
          <source>Optional keyword argument &lt;em&gt;initial_response_ok&lt;/em&gt; specifies whether, for authentication methods that support it, an &amp;ldquo;initial response&amp;rdquo; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954&lt;/strong&gt;&lt;/a&gt; can be sent along with the &lt;code&gt;AUTH&lt;/code&gt; command, rather than requiring a challenge/response.</source>
          <target state="translated">オプションのキーワード引数&lt;em&gt;initial_response_ok&lt;/em&gt;は、それをサポートする認証方法の場合、チャレンジ/レスポンスを要求せずに、 &lt;code&gt;AUTH&lt;/code&gt; コマンドとともに&lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954で&lt;/strong&gt;&lt;/a&gt;指定され&lt;strong&gt;て&lt;/strong&gt;いる「初期応答」を送信できるかどうかを指定し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="39ded4fc07cc53be3f3b4d11b5ad6e335cab1088" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. &lt;em&gt;width&lt;/em&gt; defaults to &lt;code&gt;70&lt;/code&gt;.</source>
          <target state="translated">オプションのキーワード引数は、以下で説明する&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;のインスタンス属性に対応しています。&lt;em&gt;widthの&lt;/em&gt;デフォルトは &lt;code&gt;70&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3b9eb4e0be951f4005e2e9357a99b2eb0d75d912" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. Note that the whitespace is collapsed before the text is passed to the &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; function, so changing the value of &lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt;&lt;code&gt;tabsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt;&lt;code&gt;drop_whitespace&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; will have no effect.</source>
          <target state="translated">オプションのキーワード引数は、以下で説明する&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;のインスタンス属性に対応しています。テキストが&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;関数に渡される前に空白が折りたたまれているため、&lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt; &lt;code&gt;tabsize&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt; &lt;code&gt;drop_whitespace&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; &lt;/a&gt;の値を変更しても効果がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="24ca019c9c45a21a1ae8afa31bdc446f05002f0e" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are filtering functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">オプションのキーワードパラメータ&lt;em&gt;linejunk&lt;/em&gt;と&lt;em&gt;charjunk&lt;/em&gt;はフィルタリング関数です（または &lt;code&gt;None&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="0a70313273eae3e208c193164419f6a9bd989124" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are for filter functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">オプションのキーワードパラメーター&lt;em&gt;linejunk&lt;/em&gt;と&lt;em&gt;charjunk&lt;/em&gt;はフィルター関数用（または &lt;code&gt;None&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="73738e459fc48b15d4c9caa2fae00dc51ed6861e" translate="yes" xml:space="preserve">
          <source>Optional opaque data associated to this file object: for example, this could be used to store a per-client session ID.</source>
          <target state="translated">このファイルオブジェクトに関連付けられたオプションの不透明データ:例えば、これはクライアントごとのセッションIDを格納するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="33c45096fc76de56eedec7a2b606f898390e6242" translate="yes" xml:space="preserve">
          <source>Optional type.</source>
          <target state="translated">オプションタイプ。</target>
        </trans-unit>
        <trans-unit id="7378235c39ea460a01142b753df9f73551ec2ce1" translate="yes" xml:space="preserve">
          <source>Optionally, a callable with a &lt;code&gt;(obj, state)&lt;/code&gt; signature. This callable allows the user to programmatically control the state-updating behavior of a specific object, instead of using &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s static &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method. If not &lt;code&gt;None&lt;/code&gt;, this callable will have priority over &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;(obj, state)&lt;/code&gt; シグネチャを持つ呼び出し可能オブジェクト。この呼び出し可能オブジェクトを使用すると、 &lt;code&gt;obj&lt;/code&gt; の静的&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;メソッドを使用する代わりに、プログラムで特定のオブジェクトの状態更新動作を制御できます。 &lt;code&gt;None&lt;/code&gt; でない場合、この呼び出し可能オブジェクトは &lt;code&gt;obj&lt;/code&gt; の&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="248e8ab0a4779d85c841d158ffbba3ab30529149" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (and not a sequence) yielding successive items. These items will be appended to the object either using &lt;code&gt;obj.append(item)&lt;/code&gt; or, in batch, using &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt;. This is primarily used for list subclasses, but may be used by other classes as long as they have &lt;code&gt;append()&lt;/code&gt; and &lt;code&gt;extend()&lt;/code&gt; methods with the appropriate signature. (Whether &lt;code&gt;append()&lt;/code&gt; or &lt;code&gt;extend()&lt;/code&gt; is used depends on which pickle protocol version is used as well as the number of items to append, so both must be supported.)</source>
          <target state="translated">オプションで、連続する項目を生成するイテレーター（シーケンスではない）。これらのアイテムは、 &lt;code&gt;obj.append(item)&lt;/code&gt; を使用するか、バッチで &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt; ）を使用してオブジェクトに追加されます。これは主にリストサブクラスに使用されますが、適切なシグネチャを持つ &lt;code&gt;append()&lt;/code&gt; &lt;code&gt;extend()&lt;/code&gt; メソッドとextend（）メソッドを持っている限り、他のクラスでも使用できます。 （ &lt;code&gt;append()&lt;/code&gt; と &lt;code&gt;extend()&lt;/code&gt; のどちらを使用するかは、使用するpickleプロトコルのバージョンと追加するアイテムの数によって異なるため、両方をサポートする必要があります。）</target>
        </trans-unit>
        <trans-unit id="4d9b55e743d6156b61e3533878c6208bad417979" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (not a sequence) yielding successive key-value pairs. These items will be stored to the object using &lt;code&gt;obj[key] =
value&lt;/code&gt;. This is primarily used for dictionary subclasses, but may be used by other classes as long as they implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションで、連続するキーと値のペアを生成するイテレータ（シーケンスではない）。これらのアイテムは、 &lt;code&gt;obj[key] = value&lt;/code&gt; を使用してオブジェクトに保存されます。これは主に辞書のサブクラスに使用されますが、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;を実装している限り、他のクラスでも使用できます。</target>
        </trans-unit>
        <trans-unit id="f9542e7876fb05dd3c13e6d5bd0e264709c2e4f0" translate="yes" xml:space="preserve">
          <source>Optionally, delete the &lt;code&gt;.dist-info&lt;/code&gt; directories created by pip in the &lt;code&gt;myapp&lt;/code&gt; directory. These hold metadata for pip to manage the packages, and as you won&amp;rsquo;t be making any further use of pip they aren&amp;rsquo;t required - although it won&amp;rsquo;t do any harm if you leave them.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;myapp&lt;/code&gt; ディレクトリのpipによって作成された &lt;code&gt;.dist-info&lt;/code&gt; ディレクトリを削除します。これらは、パッケージを管理するためのpipのメタデータを保持します。pipをこれ以上使用しないので、それらは不要です。ただし、パッケージを残しても害はありません。</target>
        </trans-unit>
        <trans-unit id="a52acaea3b3a3449dba5140bba2c078c062d5d24" translate="yes" xml:space="preserve">
          <source>Optionally, the object&amp;rsquo;s state, which will be passed to the object&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method as previously described. If the object has no such method then, the value must be a dictionary and it will be added to the object&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">オプションで、前述のようにオブジェクトの&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;メソッドに渡されるオブジェクトの状態。オブジェクトにそのようなメソッドがない場合、値はディクショナリである必要があり、オブジェクトの&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性に追加されます。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="4db22efa7fc9873f3af05807c67613b164308c33" translate="yes" xml:space="preserve">
          <source>Options control things like the color and border width of a widget. Options can be set in three ways:</source>
          <target state="translated">オプションはウィジェットの色やボーダーの幅などをコントロールします。オプションは3つの方法で設定できます。</target>
        </trans-unit>
        <trans-unit id="de536fda840f7da591573c96c013aeef7cd818d1" translate="yes" xml:space="preserve">
          <source>Options may be provided as keyword arguments:</source>
          <target state="translated">オプションはキーワード引数として提供されることがあります。</target>
        </trans-unit>
        <trans-unit id="8335036bab3bafd620537f0b69b86754c080951f" translate="yes" xml:space="preserve">
          <source>Options menu (Shell and Editor)</source>
          <target state="translated">オプションメニュー(シェルとエディタ</target>
        </trans-unit>
        <trans-unit id="92ce2ae7dc9f79aa3ed9c94ea1705d8d6e562c73" translate="yes" xml:space="preserve">
          <source>Or directly from a string:</source>
          <target state="translated">または文字列から直接。</target>
        </trans-unit>
        <trans-unit id="29bb859d05bc7a567ae7f7cc079e9b6720bf0d15" translate="yes" xml:space="preserve">
          <source>Or if a pending task needs to be deleted, how do you find it and remove it from the queue?</source>
          <target state="translated">あるいは、保留中のタスクを削除する必要がある場合、それを見つけてキューから削除するにはどうすればよいでしょうか?</target>
        </trans-unit>
        <trans-unit id="4b22593950042710b50dc4a4f90e32e24951a382" translate="yes" xml:space="preserve">
          <source>Or, more often:</source>
          <target state="translated">というか、もっと頻繁に。</target>
        </trans-unit>
        <trans-unit id="1d1f8ef58bd7839e3af26e1c41a86b651180494a" translate="yes" xml:space="preserve">
          <source>Ordered and equality comparisons are supported between ST objects. Pickling of ST objects (using the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module) is also supported.</source>
          <target state="translated">STオブジェクト間の順序付き比較と等価比較がサポートされています。（&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールを使用した）STオブジェクトの酸洗いもサポートされています。</target>
        </trans-unit>
        <trans-unit id="ec2fcd9ffa26d70803882357a146da9dcfdec817" translate="yes" xml:space="preserve">
          <source>Ordered comparisons between enumeration values are &lt;em&gt;not&lt;/em&gt; supported. Enum members are not integers (but see &lt;a href=&quot;#intenum&quot;&gt;IntEnum&lt;/a&gt; below):</source>
          <target state="translated">列挙値間の順序付き比較&lt;em&gt;は&lt;/em&gt;サポートされて&lt;em&gt;いません&lt;/em&gt;。Enumメンバーは整数ではありません（ただし、以下の&lt;a href=&quot;#intenum&quot;&gt;IntEnumを&lt;/a&gt;参照）：</target>
        </trans-unit>
        <trans-unit id="eb500fa39e2390f334d105e01309ce69a01fcb03" translate="yes" xml:space="preserve">
          <source>Ordered dictionaries are just like regular dictionaries but have some extra capabilities relating to ordering operations. They have become less important now that the built-in &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class gained the ability to remember insertion order (this new behavior became guaranteed in Python 3.7).</source>
          <target state="translated">順序付き辞書は通常の辞書と同じですが、順序付け操作に関連するいくつかの追加機能があります。組み込みの&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラスが挿入順序を記憶できるようになったため、これらは重要性が低くなりました（この新しい動作はPython 3.7で保証されました）。</target>
        </trans-unit>
        <trans-unit id="26bb7103f52c11aaccca56efca197b3b55b4bca3" translate="yes" xml:space="preserve">
          <source>OrderedDict objects</source>
          <target state="translated">OrderedDict オブジェクト</target>
        </trans-unit>
        <trans-unit id="67243e03b42bd26dc3e495a6d0366676bb3fea02" translate="yes" xml:space="preserve">
          <source>OrderedEnum</source>
          <target state="translated">OrderedEnum</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="e5dd46594071b12b0a7a38e3a2f8a892e95aa71b" translate="yes" xml:space="preserve">
          <source>Ordinarily, you get a message object structure by passing a file or some text to a parser, which parses the text and returns the root message object. However you can also build a complete message structure from scratch, or even individual &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects by hand. In fact, you can also take an existing structure and add new &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, move them around, etc. This makes a very convenient interface for slicing-and-dicing MIME messages.</source>
          <target state="translated">通常、メッセージオブジェクト構造を取得するには、ファイルまたはテキストをパーサーに渡します。パーサーはテキストを解析し、ルートメッセージオブジェクトを返します。ただし、完全なメッセージ構造を最初から作成することも、手動で個々の&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトを作成することもできます。実際、既存の構造を取り、新しい&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトを追加したり、移動したりすることもできます。これにより、MIMEメッセージをスライスしてダイシングするための非常に便利なインターフェースが作成されます。</target>
        </trans-unit>
        <trans-unit id="7a430640bbf526678a8da4fb85c2d06d96431f50" translate="yes" xml:space="preserve">
          <source>Organizing test code</source>
          <target state="translated">テストコードの整理</target>
        </trans-unit>
        <trans-unit id="1cedde9b69ce01ae9f01a497a5daf62fb6786f91" translate="yes" xml:space="preserve">
          <source>Original Python logging package</source>
          <target state="translated">オリジナルのPythonロギングパッケージ</target>
        </trans-unit>
        <trans-unit id="0bf18896b8755bd61d4e426a9647970dd9cbbd69" translate="yes" xml:space="preserve">
          <source>Original specification of packages. Some semantics have changed since the writing of this document (e.g. redirecting based on &lt;code&gt;None&lt;/code&gt; in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">パッケージのオリジナル仕様。このドキュメントの作成以降、一部のセマンティクスが変更されました（たとえば、&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;None&lt;/code&gt; に基づいてリダイレクトする）。</target>
        </trans-unit>
        <trans-unit id="d8f4478364a57d8876305d6f8a4f1737017ec09e" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional feature&lt;/a&gt;.</source>
          <target state="translated">当初3.3で&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;暫定的な機能&lt;/a&gt;として追加されました。</target>
        </trans-unit>
        <trans-unit id="044d5151be7c1b4dd05b8491c7d04527149f63bb" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">当初3.3で&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;暫定モジュール&lt;/a&gt;として追加されました</target>
        </trans-unit>
        <trans-unit id="3760d15c033b2bd980e7e3d2725429e9f2f28376" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">当初3.4で&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;暫定モジュール&lt;/a&gt;として追加されました</target>
        </trans-unit>
        <trans-unit id="b2fbc34ec2e89a23970dd81d7e81d17186c5721a" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;. Docs for legacy message class moved to &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message: Representing an email message using the compat32 API&lt;/a&gt;.</source>
          <target state="translated">当初3.4で&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;暫定モジュール&lt;/a&gt;として追加されました。従来のメッセージクラスのドキュメントを&lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Messageに&lt;/a&gt;移動：compat32 APIを使用してメールメッセージを表す。</target>
        </trans-unit>
        <trans-unit id="c26e6600df66b0af63b8bf38fb88a3db87e5308a" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302で&lt;/strong&gt;&lt;/a&gt;最初に指定されました。</target>
        </trans-unit>
        <trans-unit id="3f514af7ee84123103b91a2dc752d472d7d48914" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302で&lt;/strong&gt;&lt;/a&gt;最初に指定されました。</target>
        </trans-unit>
        <trans-unit id="8d378e398249f21f59f2d17eaa22696c733bca01" translate="yes" xml:space="preserve">
          <source>Originally, the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module had attempted to maintain compatibility with &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt;. However, &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; was difficult to extend transparently, particularly with the changes required to support the new &lt;code&gt;nargs=&lt;/code&gt; specifiers and better usage messages. When most everything in &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; had either been copy-pasted over or monkey-patched, it no longer seemed practical to try to maintain the backwards compatibility.</source>
          <target state="translated">当初、&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールは&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; との&lt;/a&gt;互換性を維持しようとしました。ただし、特に新しい &lt;code&gt;nargs=&lt;/code&gt; 指定子とより優れた使用法メッセージをサポートするために必要な変更により、&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;を透過的に拡張することは困難でした。&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; の&lt;/a&gt;ほとんどすべてがコピー貼り付けまたはモンキーパッチされていた場合、下位互換性を維持しようとすることはもはや現実的ではないと思われました。</target>
        </trans-unit>
        <trans-unit id="fed34ee486c7f5d06dbc7cfc681f00ddfcaf011b" translate="yes" xml:space="preserve">
          <source>Other Built-in Types</source>
          <target state="translated">その他のビルトインタイプ</target>
        </trans-unit>
        <trans-unit id="0ba799c410addb3c357f8f4ace9cc3fe6bde69ff" translate="yes" xml:space="preserve">
          <source>Other Examples</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="551852c7028ddd04d28686d5a46f202fe2ad7cb7" translate="yes" xml:space="preserve">
          <source>Other Functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="217af07f6b149416704b03c95cdb3752965dd4b3" translate="yes" xml:space="preserve">
          <source>Other Graphical User Interface Packages</source>
          <target state="translated">その他のグラフィカルユーザインタフェースパッケージ</target>
        </trans-unit>
        <trans-unit id="b8882f948dba0fc11ba9a6b54e264027bb74d52f" translate="yes" xml:space="preserve">
          <source>Other Module Level Functions</source>
          <target state="translated">その他のモジュールレベルの機能</target>
        </trans-unit>
        <trans-unit id="88f1a5da8a5bf979a3ede7f700833eb578841312" translate="yes" xml:space="preserve">
          <source>Other Unicode decimal digits are also permitted where &lt;code&gt;digit&lt;/code&gt; appears above. These include decimal digits from various other alphabets (for example, Arabic-Indic and Devanāgarī digits) along with the fullwidth digits &lt;code&gt;'\uff10'&lt;/code&gt; through &lt;code&gt;'\uff19'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;digit&lt;/code&gt; が上に表示されている場合、他のUnicode 10進数字も使用できます。これらには、他のさまざまなアルファベットの10進数字（アラビア語、インド語、デヴァナガル数字など）と、全角数字 &lt;code&gt;'\uff10'&lt;/code&gt; から &lt;code&gt;'\uff19'&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ff9d748c4bd543f9761aa15fcf1968d71aec0ec7" translate="yes" xml:space="preserve">
          <source>Other arguments:</source>
          <target state="translated">他の引数。</target>
        </trans-unit>
        <trans-unit id="a90e10ae9215677f534e2d324d08bda0a668ca69" translate="yes" xml:space="preserve">
          <source>Other attributes may exist, but they are private and must not be inspected or relied on.</source>
          <target state="translated">他の属性が存在する場合もありますが、それらはプライベートなものであり、検査したり依存したりしてはいけません。</target>
        </trans-unit>
        <trans-unit id="aedb03b71d3d53b256c55d31e3a1023846152365" translate="yes" xml:space="preserve">
          <source>Other constructor:</source>
          <target state="translated">その他のコンストラクタです。</target>
        </trans-unit>
        <trans-unit id="de575b19ab55681e0fd9c92fcea7275245bb42c9" translate="yes" xml:space="preserve">
          <source>Other constructors, all class methods:</source>
          <target state="translated">その他のコンストラクタ、すべてのクラスメソッド</target>
        </trans-unit>
        <trans-unit id="e12e322f5b694198963cd183428de579cc666876" translate="yes" xml:space="preserve">
          <source>Other functions</source>
          <target state="translated">その他の機能</target>
        </trans-unit>
        <trans-unit id="bfdf1a80a42b89f60d8528660ffb1316928b3b7c" translate="yes" xml:space="preserve">
          <source>Other library modules may provide additional ways to create text or binary streams. See &lt;a href=&quot;socket#socket.socket.makefile&quot;&gt;&lt;code&gt;socket.socket.makefile()&lt;/code&gt;&lt;/a&gt; for example.</source>
          <target state="translated">他のライブラリモジュールは、テキストまたはバイナリストリームを作成する追加の方法を提供する場合があります。たとえば、&lt;a href=&quot;socket#socket.socket.makefile&quot;&gt; &lt;code&gt;socket.socket.makefile()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="461f70e81617707a4ef7e08e0bf02afe3f4f0770" translate="yes" xml:space="preserve">
          <source>Other methods must be called with the associated lock held. The &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method releases the lock, and then blocks until another thread awakens it by calling &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt;. Once awakened, &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; re-acquires the lock and returns. It is also possible to specify a timeout.</source>
          <target state="translated">他のメソッドは、関連するロックを保持したまま呼び出す必要があります。&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;メソッドのロックを解除した後、ブロック別のスレッドが呼び出すことによって、それを目覚めさせるまで&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;。起動すると、&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;はロックを再取得して戻ります。タイムアウトを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="8806cd1edbc02b7ee32a1acfc728cd7ae05ec92a" translate="yes" xml:space="preserve">
          <source>Other modules that provide Tk support include:</source>
          <target state="translated">Tkのサポートを提供する他のモジュールには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="c094da946507173bdbcbc9838b22e11fb790816a" translate="yes" xml:space="preserve">
          <source>Other parameters:</source>
          <target state="translated">その他のパラメータ。</target>
        </trans-unit>
        <trans-unit id="61bf50f22a61fb1a7d3d05d04ae2081ef3a300b7" translate="yes" xml:space="preserve">
          <source>Other references to the old objects (such as names external to the module) are not rebound to refer to the new objects and must be updated in each namespace where they occur if that is desired.</source>
          <target state="translated">古いオブジェクトへの他の参照 (モジュールの外部の名前など)は、新しいオブジェクトを参照するためにリバウンドされず、それが必要な場合は、それらが発生する各名前空間で更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="ba9b5975c5a17860bfd12921bda717270fc0fabd" translate="yes" xml:space="preserve">
          <source>Other than the &lt;em&gt;ensure_ascii&lt;/em&gt; parameter, this module is defined strictly in terms of conversion between Python objects and &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;Unicode strings&lt;/code&gt;&lt;/a&gt;, and thus does not otherwise directly address the issue of character encodings.</source>
          <target state="translated">&lt;em&gt;Ensure_ascii&lt;/em&gt;パラメータ以外のこのモジュールは、Pythonオブジェクトと&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;Unicode strings&lt;/code&gt; &lt;/a&gt;間の変換に関して厳密に定義されているため、文字エンコーディングの問題に直接対処していません。</target>
        </trans-unit>
        <trans-unit id="334ae5c0280a33be6e1a7440bb997991c7be3c2d" translate="yes" xml:space="preserve">
          <source>Other than the text mode requirement, this method operates like &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;BytesParser.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テキストモードの要件以外は、このメソッドは&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;BytesParser.parse()&lt;/code&gt; の&lt;/a&gt;ように動作します。</target>
        </trans-unit>
        <trans-unit id="82d46ce3715467bc2baf73f7bf0f1e61e7104b2a" translate="yes" xml:space="preserve">
          <source>Other threads can call a thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method. This blocks the calling thread until the thread whose &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method is called is terminated.</source>
          <target state="translated">他のスレッドは、スレッドの&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。これにより、&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたスレッドが終了するまで、呼び出しスレッドがブロックされます。</target>
        </trans-unit>
        <trans-unit id="80ebcb8c2214303bc68c1b27cf91f38d351836db" translate="yes" xml:space="preserve">
          <source>Other typical Boolean pairs include &lt;code&gt;accept&lt;/code&gt;/&lt;code&gt;reject&lt;/code&gt; or &lt;code&gt;enabled&lt;/code&gt;/&lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">その他の一般的なブールペアには、 &lt;code&gt;accept&lt;/code&gt; / &lt;code&gt;reject&lt;/code&gt; または &lt;code&gt;enabled&lt;/code&gt; / &lt;code&gt;disabled&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b2b2f9de07b290a776ba27da53dfcb6de8c87b" translate="yes" xml:space="preserve">
          <source>Other utilities</source>
          <target state="translated">その他のユーティリティ</target>
        </trans-unit>
        <trans-unit id="8d7bf5bf136e81f9388c1f4eca050d6d94e965d7" translate="yes" xml:space="preserve">
          <source>Others</source>
          <target state="translated">Others</target>
        </trans-unit>
        <trans-unit id="a8f27da35e68a9f7a5a97f1703ac92769848a8d4" translate="yes" xml:space="preserve">
          <source>Others have execute permission.</source>
          <target state="translated">他の人は実行許可を得ている。</target>
        </trans-unit>
        <trans-unit id="a4b5a656b29825a9211b83ccae7336ee695ce161" translate="yes" xml:space="preserve">
          <source>Others have read permission.</source>
          <target state="translated">他の人は許可を読んでいます。</target>
        </trans-unit>
        <trans-unit id="fc0d4f6a481380e178acd3897e6a60f3ade59b6a" translate="yes" xml:space="preserve">
          <source>Others have write permission.</source>
          <target state="translated">他の方は書き込み許可を得ています。</target>
        </trans-unit>
        <trans-unit id="e4222ac892c71e5c85c46120851fe4701ec7917d" translate="yes" xml:space="preserve">
          <source>Otherwise (the signal is trapped), only equality comparisons and explicit conversions are silent. All other mixed operations raise &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それ以外の場合（信号がトラップされる）、等値比較と明示的な変換のみがサイレントになります。他のすべての混合操作は&lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="be46edea33f2697996c7c3567d1d9c18f067cdc7" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;d&lt;/em&gt; is naive.</source>
          <target state="translated">それ以外の場合、&lt;em&gt;d&lt;/em&gt;はナイーブです。</target>
        </trans-unit>
        <trans-unit id="dfc31f535285ad24b8fa6617987e28a96cbb3d87" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;t&lt;/em&gt; is naive.</source>
          <target state="translated">それ以外の場合、&lt;em&gt;t&lt;/em&gt;はナイーブです。</target>
        </trans-unit>
        <trans-unit id="954ba79aef749f40f5d5ce28f2bceb67836f96e6" translate="yes" xml:space="preserve">
          <source>Otherwise, arguments are files opened for editing and &lt;code&gt;sys.argv&lt;/code&gt; reflects the arguments passed to IDLE itself.</source>
          <target state="translated">それ以外の場合、引数は編集用に開かれたファイルであり、 &lt;code&gt;sys.argv&lt;/code&gt; はIDLE自体に渡された引数を反映します。</target>
        </trans-unit>
        <trans-unit id="14b72810afd38383fb343bc867db69c78f448477" translate="yes" xml:space="preserve">
          <source>Otherwise, if no argument is provided, or if the argument is &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;token_*&lt;/code&gt; functions will use a reasonable default instead.</source>
          <target state="translated">それ以外の場合、引数を指定しないか、引数が &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;token_*&lt;/code&gt; 関数は適切なデフォルトを代わりに使用します。</target>
        </trans-unit>
        <trans-unit id="54d61e7a8adc1736b3a4f7ffa32c6559beb44abf" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument is an integer or a floating point number, a floating point number with the same value (within Python&amp;rsquo;s floating point precision) is returned. If the argument is outside the range of a Python float, an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">それ以外の場合、引数が整数または浮動小数点数の場合、同じ値（Pythonの浮動小数点精度内）の浮動小数点数が返されます。引数がPython floatの範囲外の場合、&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6ecea0cd28243a5441c028877a147bc1209dbb6d" translate="yes" xml:space="preserve">
          <source>Otherwise, return a list of &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; pairs for the options in the given &lt;em&gt;section&lt;/em&gt;. Optional arguments have the same meaning as for the &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">それ以外の場合は、指定された&lt;em&gt;セクションの&lt;/em&gt;オプションの&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値の&lt;/em&gt;ペアのリストを返します。オプションの引数は、&lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;メソッドと同じ意味です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b46eb0d416a3552e2d7853ed1ba1f77360411e1" translate="yes" xml:space="preserve">
          <source>Otherwise, the backslash will be interpreted as part of the string. For example, the &lt;code&gt;\n&lt;/code&gt; above would be interpreted as a newline character. Alternatively, you can double each backslash in the doctest version (and not use a raw string):</source>
          <target state="translated">それ以外の場合、バックスラッシュは文字列の一部として解釈されます。たとえば、上記の &lt;code&gt;\n&lt;/code&gt; は改行文字として解釈されます。または、doctestバージョンの各バックスラッシュを2倍にすることもできます（生の文字列を使用しないでください）。</target>
        </trans-unit>
        <trans-unit id="70814fdd5d3f962107665d79424d211168c0dc43" translate="yes" xml:space="preserve">
          <source>Otherwise, the list contains the object&amp;rsquo;s attributes&amp;rsquo; names, the names of its class&amp;rsquo;s attributes, and recursively of the attributes of its class&amp;rsquo;s base classes.</source>
          <target state="translated">それ以外の場合、リストにはオブジェクトの属性の名前、そのクラスの属性の名前、およびそのクラスの基本クラスの属性が再帰的に含まれます。</target>
        </trans-unit>
        <trans-unit id="f7030a7d49fcfe877e91d4527075807bf0b11fd0" translate="yes" xml:space="preserve">
          <source>Our XML now looks like this:</source>
          <target state="translated">これでXMLは次のようになりました。</target>
        </trans-unit>
        <trans-unit id="0be297b561141a6a2d82a7108dddc36e1cc22dba" translate="yes" xml:space="preserve">
          <source>Out of memory</source>
          <target state="translated">記憶の外</target>
        </trans-unit>
        <trans-unit id="af8eb7df148c890efac2f2ede67c967bf68723f5" translate="yes" xml:space="preserve">
          <source>Out of streams resources</source>
          <target state="translated">アウトオブストリームリソース</target>
        </trans-unit>
        <trans-unit id="63664fd5af35bc0c3fdff750f9b0e30b4646a15c" translate="yes" xml:space="preserve">
          <source>Out-of-band Buffers</source>
          <target state="translated">帯域外バッファ</target>
        </trans-unit>
        <trans-unit id="3fac09e90cfccb47e52c968f4fb653462a3d8c88" translate="yes" xml:space="preserve">
          <source>Output in debug mode:</source>
          <target state="translated">デバッグモードで出力します。</target>
        </trans-unit>
        <trans-unit id="fe984ffd01f834b22054ca88048eb74573f00d01" translate="yes" xml:space="preserve">
          <source>Output of the child process if it was captured by &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">子プロセスが&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt;によってキャプチャされた場合の出力。それ以外の場合は、 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc05deb2ab45aebe353e699363a7fbb6c0b73af3" translate="yes" xml:space="preserve">
          <source>Output parameter. The foreign function fills in a value.</source>
          <target state="translated">出力パラメータ。外部関数が値を入力します。</target>
        </trans-unit>
        <trans-unit id="66226a3b482e757cb52b81b1728ded2d649bd5c1" translate="yes" xml:space="preserve">
          <source>Output parameters can be combined with the &lt;code&gt;errcheck&lt;/code&gt; protocol to do further output processing and error checking. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; api function returns a &lt;code&gt;BOOL&lt;/code&gt; to signal success or failure, so this function could do the error checking, and raises an exception when the api call failed:</source>
          <target state="translated">出力パラメーターを &lt;code&gt;errcheck&lt;/code&gt; プロトコルと組み合わせて、さらに出力処理とエラーチェックを行うことができます。win32 &lt;code&gt;GetWindowRect&lt;/code&gt; API関数は、成功または失敗を通知する &lt;code&gt;BOOL&lt;/code&gt; を返すため、この関数はエラーチェックを実行でき、API呼び出しが失敗すると例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6c41c030d36ce42b9a8cad80e0baa996c85ae9c1" translate="yes" xml:space="preserve">
          <source>Output to stdout is captured, but not output to stderr (exception tracebacks are captured via a different means).</source>
          <target state="translated">stdoutへの出力はキャプチャされますが、stderrへの出力はキャプチャされません(例外のトレースバックは別の手段でキャプチャされます)。</target>
        </trans-unit>
        <trans-unit id="052c8a28d79036323fd83c172b2396b59d5c7af9" translate="yes" xml:space="preserve">
          <source>Output windows, such as used for Edit =&amp;gt; Find in Files, are a subtype of editor window. They currently have the same top menu but a different default title and context menu.</source>
          <target state="translated">Edit =&amp;gt; Find in Filesに使用されるような出力ウィンドウは、エディターウィンドウのサブタイプです。現在、トップメニューは同じですが、デフォルトのタイトルとコンテキストメニューが異なります。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="0d058e922b3d393665a54054e5a68be683df369b" translate="yes" xml:space="preserve">
          <source>OutputChecker objects</source>
          <target state="translated">出力チェッカーオブジェクト</target>
        </trans-unit>
        <trans-unit id="00b098b7354feb36c1140185524d89b0a668ca13" translate="yes" xml:space="preserve">
          <source>Outputs a symbolic disassembly of the pickle to the file-like object &lt;em&gt;out&lt;/em&gt;, defaulting to &lt;code&gt;sys.stdout&lt;/code&gt;. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object. &lt;em&gt;memo&lt;/em&gt; can be a Python dictionary that will be used as the pickle&amp;rsquo;s memo; it can be used to perform disassemblies across multiple pickles created by the same pickler. Successive levels, indicated by &lt;code&gt;MARK&lt;/code&gt; opcodes in the stream, are indented by &lt;em&gt;indentlevel&lt;/em&gt; spaces. If a nonzero value is given to &lt;em&gt;annotate&lt;/em&gt;, each opcode in the output is annotated with a short description. The value of &lt;em&gt;annotate&lt;/em&gt; is used as a hint for the column where annotation should start.</source>
          <target state="translated">ピクルのシンボリック逆アセンブリをファイルのようなオブジェクト&lt;em&gt;out&lt;/em&gt;に出力します。デフォルトは &lt;code&gt;sys.stdout&lt;/code&gt; です。&lt;em&gt;pickle&lt;/em&gt;は文字列またはファイルのようなオブジェクトです。&lt;em&gt;memo&lt;/em&gt;は、ピクルスのメモとして使用されるPython辞書にすることができます。同じピッカーによって作成された複数のピクルにわたって分解を実行するために使用できます。ストリームの &lt;code&gt;MARK&lt;/code&gt; オペコードで示される連続するレベルは、インデント&lt;em&gt;レベルの&lt;/em&gt;スペースでインデントされます。&lt;em&gt;annotateに&lt;/em&gt;ゼロ以外の値が指定されている場合、出力の各オペコードには短い説明が付けられます。&lt;em&gt;annotate&lt;/em&gt;の値は、注釈を開始する列のヒントとして使用されます。</target>
        </trans-unit>
        <trans-unit id="8dc5698f0af86404dfd9c47dbd73c97838c9a5ae" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, but first calls &lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt;&lt;code&gt;reopenIfNeeded()&lt;/code&gt;&lt;/a&gt; to reopen the file if it has changed.</source>
          <target state="translated">レコードをファイルに出力しますが、ファイルが変更されている場合は、最初に&lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt; &lt;code&gt;reopenIfNeeded()&lt;/code&gt; &lt;/a&gt;を呼び出してファイルを再度開きます。</target>
        </trans-unit>
        <trans-unit id="13942066feebbb621d64a590a698fabefbf9f608" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described above.</source>
          <target state="translated">上記のようにロールオーバーに対応したレコードをファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="3ca087e0da0b536b5faf375d0b4bf87097dd1943" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described previously.</source>
          <target state="translated">前述のようにロールオーバーを考慮して、レコードをファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="c717361b7f3869812b4f8d911cb96fca253dd170" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file.</source>
          <target state="translated">レコードをファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="translated">OverflowError</target>
        </trans-unit>
        <trans-unit id="77d28c858b730f53a08a8fef86fd0e4ba755ebd6" translate="yes" xml:space="preserve">
          <source>Overlay the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, only the overlapping region is copied. This copy is non-destructive, which means that the current background character does not overwrite the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">ウィンドウを&lt;em&gt;destwinの&lt;/em&gt;上に&lt;em&gt;重ね&lt;/em&gt;ます。ウィンドウは同じサイズである必要はなく、重なり合う領域のみがコピーされます。このコピーは非破壊的です。つまり、現在の背景文字は&lt;em&gt;destwinの&lt;/em&gt;古い内容を上書きしません。</target>
        </trans-unit>
        <trans-unit id="f325fd31da05c2d6bb7739feb9013527ae1ea6f4" translate="yes" xml:space="preserve">
          <source>Overridable interface to open unknown URL types.</source>
          <target state="translated">未知の URL タイプを開くためのオーバーライド可能なインターフェイス。</target>
        </trans-unit>
        <trans-unit id="1845ac518f926046d52dd78544dc528bccec6b7b" translate="yes" xml:space="preserve">
          <source>Override &lt;em&gt;object_to_patch.attr_name&lt;/em&gt; with &lt;em&gt;new_value&lt;/em&gt;. Also add cleanup procedure to &lt;em&gt;test_instance&lt;/em&gt; to restore &lt;em&gt;object_to_patch&lt;/em&gt; for &lt;em&gt;attr_name&lt;/em&gt;. The &lt;em&gt;attr_name&lt;/em&gt; should be a valid attribute for &lt;em&gt;object_to_patch&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;object_to_patch.attr_name&lt;/em&gt;を&lt;em&gt;new_valueで&lt;/em&gt;オーバーライドし&lt;em&gt;ます&lt;/em&gt;。また、にクリーンアップ手順を追加&lt;em&gt;test_instance&lt;/em&gt;復元する&lt;em&gt;object_to_patch&lt;/em&gt;ため&lt;em&gt;ATTR_NAME&lt;/em&gt;。&lt;em&gt;ATTR_NAMEは&lt;/em&gt;のための有効な属性でなければなりません&lt;em&gt;object_to_patch&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7395c655119b2b51ec4e5687f37180aa645f658b" translate="yes" xml:space="preserve">
          <source>Override this in subclasses to use a custom &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; for managing SMTP clients.</source>
          <target state="translated">SMTPクライアントを管理するためにカスタム&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;を使用するには、これをサブクラスでオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="2909e0ed5928a1fd1982ea6f59b67ccfb9f556df" translate="yes" xml:space="preserve">
          <source>Override to implement platform-specific file transmission. This method is called only if the application&amp;rsquo;s return value is an instance of the class specified by the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt;&lt;code&gt;wsgi_file_wrapper&lt;/code&gt;&lt;/a&gt; attribute. It should return a true value if it was able to successfully transmit the file, so that the default transmission code will not be executed. The default implementation of this method just returns a false value.</source>
          <target state="translated">オーバーライドして、プラットフォーム固有のファイル転送を実装します。このメソッドは、アプリケーションの戻り値が&lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt; &lt;code&gt;wsgi_file_wrapper&lt;/code&gt; &lt;/a&gt;属性で指定されたクラスのインスタンスである場合にのみ呼び出されます。デフォルトの送信コードが実行されないように、ファイルを正常に送信できた場合は、trueを返す必要があります。このメソッドのデフォルト実装は、単にfalse値を返します。</target>
        </trans-unit>
        <trans-unit id="841b35088f13fc1f7d90f1447cd5a3232873d19b" translate="yes" xml:space="preserve">
          <source>Overriding the default filter</source>
          <target state="translated">デフォルトのフィルタを上書きする</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="97e3f82b324e49d5bf704d2fcfc3c81fc3bd1c4d" translate="yes" xml:space="preserve">
          <source>Overview of available Turtle and Screen methods</source>
          <target state="translated">利用可能なタートルとスクリーンの方法の概要</target>
        </trans-unit>
        <trans-unit id="f63c582120e82f9b40889b2e8060bdd0b30b68ad" translate="yes" xml:space="preserve">
          <source>Overwrite the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, in which case only the overlapping region is copied. This copy is destructive, which means that the current background character overwrites the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;destwinの&lt;/em&gt;上にあるウィンドウを上書きします。ウィンドウは同じサイズである必要はありません。その場合、重複する領域のみがコピーされます。このコピーは破壊的です。つまり、現在の背景文字が&lt;em&gt;destwinの&lt;/em&gt;古い内容を上書きします。</target>
        </trans-unit>
        <trans-unit id="32e42d7cf1d8ef849a65b5a64f751115cac94630" translate="yes" xml:space="preserve">
          <source>Owner has execute permission.</source>
          <target state="translated">オーナーは実行権限を持っています。</target>
        </trans-unit>
        <trans-unit id="3602226bffa2bf2cc1004ff7d38eed8270dc876b" translate="yes" xml:space="preserve">
          <source>Owner has read permission.</source>
          <target state="translated">オーナーは許可を読み取っています。</target>
        </trans-unit>
        <trans-unit id="7347b7f7b6214962e6cdded97a0459692c3eb4cb" translate="yes" xml:space="preserve">
          <source>Owner has write permission.</source>
          <target state="translated">オーナーは書き込み許可を得ています。</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="8188efe6d6c2ca935ce480ac15e4f19beaaefd9e" translate="yes" xml:space="preserve">
          <source>P flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cff3742b4c4e6723d380bd45c0c6a517354983" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Eric Snow</source>
          <target state="translated">PEPはエリック・スノーによって書かれ、実装されています。</target>
        </trans-unit>
        <trans-unit id="96cc3126da39918697345cd1940161ffe9937238" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Nick Coghlan.</source>
          <target state="translated">PEPはニック・コグランによって書かれ、実装されています。</target>
        </trans-unit>
        <trans-unit id="72f66703e54a4ec78b0213c1ad44bcc728157812" translate="yes" xml:space="preserve">
          <source>PEP written by Marc-Andr&amp;eacute; Lemburg.</source>
          <target state="translated">Marc-Andr&amp;eacute;Lemburgによって書かれたPEP。</target>
        </trans-unit>
        <trans-unit id="02c1c27f30006cf59ab74f7a98ff1faa4de16fbf" translate="yes" xml:space="preserve">
          <source>PI element factory. This factory function creates a special element that will be serialized as an XML processing instruction. &lt;em&gt;target&lt;/em&gt; is a string containing the PI target. &lt;em&gt;text&lt;/em&gt; is a string containing the PI contents, if given. Returns an element instance, representing a processing instruction.</source>
          <target state="translated">PI要素ファクトリ。このファクトリ関数は、XML処理命令としてシリアル化される特別な要素を作成します。&lt;em&gt;target&lt;/em&gt;は、PIターゲットを含む文字列です。&lt;em&gt;text&lt;/em&gt;は、指定されている場合、PIコンテンツを含む文字列です。処理命令を表す要素インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="645fd7e9caac181870f9d1dede2beb5dfad6f364" translate="yes" xml:space="preserve">
          <source>PKCS #5: Password-Based Cryptography Specification Version 2.0</source>
          <target state="translated">PKCS #5:パスワードベース暗号仕様書バージョン2.0</target>
        </trans-unit>
        <trans-unit id="6a6c80bd7a477c267f845a1634bbf726b750cfed" translate="yes" xml:space="preserve">
          <source>PKZIP Application Note</source>
          <target state="translated">PKZIPアプリケーションノート</target>
        </trans-unit>
        <trans-unit id="7ed081aaacf45dc799e1d758e08c1fee43fa6b4d" translate="yes" xml:space="preserve">
          <source>PKZIP version needed to extract archive.</source>
          <target state="translated">アーカイブを展開するために必要なPKZIPのバージョン。</target>
        </trans-unit>
        <trans-unit id="9781d1150340a69a33be8618584c8cba317bce94" translate="yes" xml:space="preserve">
          <source>PKZIP version which created ZIP archive.</source>
          <target state="translated">ZIPアーカイブを作成したPKZIP版</target>
        </trans-unit>
        <trans-unit id="a686245107e7535edbc3e18f215337676e95a611" translate="yes" xml:space="preserve">
          <source>PList manual page</source>
          <target state="translated">PList マニュアルページ</target>
        </trans-unit>
        <trans-unit id="cc56431d28166c67feef84f6c92e21eabfa5d1ca" translate="yes" xml:space="preserve">
          <source>POP (Post Office Protocol) client</source>
          <target state="translated">POP(郵便局プロトコル)クライアント</target>
        </trans-unit>
        <trans-unit id="6529429ecfa1cc0534c3143968006f04304bba59" translate="yes" xml:space="preserve">
          <source>POP3 Example</source>
          <target state="translated">POP3の例</target>
        </trans-unit>
        <trans-unit id="ccd83f40f38d28ca57da516a478df1ed22acb88c" translate="yes" xml:space="preserve">
          <source>POP3 Objects</source>
          <target state="translated">POP3 オブジェクト</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="d1e7dc927b5056ab603c7e76822c32304531f8c5" translate="yes" xml:space="preserve">
          <source>POSIX.1-1988 (ustar) format.</source>
          <target state="translated">POSIX.1-1988 (ustar)フォーマット。</target>
        </trans-unit>
        <trans-unit id="91bc95b98cf54c5ceaa0e0d916776762d8ddd754" translate="yes" xml:space="preserve">
          <source>POSIX.1-2001 (pax) format.</source>
          <target state="translated">POSIX.1-2001 (pax)フォーマット。</target>
        </trans-unit>
        <trans-unit id="5673e51c6ba031bafbab056cb4b8681674c77b64" translate="yes" xml:space="preserve">
          <source>PS C:\&amp;gt; &amp;lt;venv&amp;gt;\Scripts\Activate.ps1</source>
          <target state="translated">PS C：\&amp;gt; &amp;lt;venv&amp;gt; \ Scripts \ Activate.ps1</target>
        </trans-unit>
        <trans-unit id="edb353c498914363a5fa96fe5426703486d738f0" translate="yes" xml:space="preserve">
          <source>PYC Repository Directories</source>
          <target state="translated">PYCリポジトリディレクトリ</target>
        </trans-unit>
        <trans-unit id="5fa81009e6c318f633d81b3520255a8c252b4939" translate="yes" xml:space="preserve">
          <source>P_NOWAIT example:</source>
          <target state="translated">P_NOWAITの例。</target>
        </trans-unit>
        <trans-unit id="c71b9bdfc8cd53509b44f69906b2d09fc5c0a78b" translate="yes" xml:space="preserve">
          <source>P_WAIT example:</source>
          <target state="translated">P_WAITの例です。</target>
        </trans-unit>
        <trans-unit id="1ca4f74cd6ff2ed6c937c0943f68809fb32bebd2" translate="yes" xml:space="preserve">
          <source>Pack the values &lt;em&gt;v1&lt;/em&gt;, &lt;em&gt;v2&lt;/em&gt;, &amp;hellip; according to the format string &lt;em&gt;format&lt;/em&gt; and write the packed bytes into the writable buffer &lt;em&gt;buffer&lt;/em&gt; starting at position &lt;em&gt;offset&lt;/em&gt;. Note that &lt;em&gt;offset&lt;/em&gt; is a required argument.</source>
          <target state="translated">フォーマット文字列&lt;em&gt;format&lt;/em&gt;に従って値&lt;em&gt;v1&lt;/em&gt;、&lt;em&gt;v2&lt;/em&gt;、&amp;hellip;をパックし、パックされたバイトを、位置&lt;em&gt;offset&lt;/em&gt;から始まる書き込み可能なバッファー&lt;em&gt;バッファーに&lt;/em&gt;書き込みます。注&lt;em&gt;オフセットは&lt;/em&gt;必須の引数です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e600670fc903f64302f254dffcdf0dd2910c01d" translate="yes" xml:space="preserve">
          <source>Pack up a directory into an archive, and run it.</source>
          <target state="translated">ディレクトリをアーカイブにパックアップして実行します。</target>
        </trans-unit>
        <trans-unit id="cf25aa751e3519d8d8bc5c6250a1c8496de96180" translate="yes" xml:space="preserve">
          <source>Package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;dateutil&lt;/a&gt;</source>
          <target state="translated">パッケージ&lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;dateutil&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cad03b3193d6e7cd78f44b1238ea56433fd311d" translate="yes" xml:space="preserve">
          <source>Package not installed</source>
          <target state="translated">パッケージがインストールされていない</target>
        </trans-unit>
        <trans-unit id="3880af2ba3f21c17c8cf074ba063ffeb33288fb9" translate="yes" xml:space="preserve">
          <source>Package the application using:</source>
          <target state="translated">を使用してアプリケーションをパッケージ化します。</target>
        </trans-unit>
        <trans-unit id="6b5cd295b63824cbc62d1acfcbff85265b721c98" translate="yes" xml:space="preserve">
          <source>Packages specification</source>
          <target state="translated">パッケージ仕様</target>
        </trans-unit>
        <trans-unit id="0122990cae2223f01ba8fc059a08202e3a680d47" translate="yes" xml:space="preserve">
          <source>Packed binary storage of homogeneous data.</source>
          <target state="translated">均質なデータのパックされたバイナリストレージ。</target>
        </trans-unit>
        <trans-unit id="a1eee81646800c1c1945b0200d9c5a077bcb9fa3" translate="yes" xml:space="preserve">
          <source>Packer Objects</source>
          <target state="translated">パッカーオブジェクト</target>
        </trans-unit>
        <trans-unit id="09ab562ad00b6e394a3efca9cba8a8ba6444e5b3" translate="yes" xml:space="preserve">
          <source>Packer Options</source>
          <target state="translated">パッカーオプション</target>
        </trans-unit>
        <trans-unit id="e9c9758effdf5587f78f4781fe65b4bc712558b7" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of External Data Representation (XDR) data as used in some remote procedure call systems.</source>
          <target state="translated">いくつかのリモートプロシージャコールシステムで使用される外部データ表現(XDR)データのパッキングとアンパッキング。</target>
        </trans-unit>
        <trans-unit id="ba61d74eba3e7429d5d2efb23fea14de5a4a2686" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of XDR data.</source>
          <target state="translated">XDRデータのパッキングとアンパッキング。</target>
        </trans-unit>
        <trans-unit id="ff9ec2ff343ac87044954920f5478e697bc42222" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of heterogeneous binary data.</source>
          <target state="translated">異種バイナリデータのパッキングとアンパッキング。</target>
        </trans-unit>
        <trans-unit id="2fc884e6acb1b6b441cecf6cac548bb46376e49d" translate="yes" xml:space="preserve">
          <source>Packs a &lt;em&gt;list&lt;/em&gt; of homogeneous items. This method is useful for lists with an indeterminate size; i.e. the size is not available until the entire list has been walked. For each item in the list, an unsigned integer &lt;code&gt;1&lt;/code&gt; is packed first, followed by the data value from the list. &lt;em&gt;pack_item&lt;/em&gt; is the function that is called to pack the individual item. At the end of the list, an unsigned integer &lt;code&gt;0&lt;/code&gt; is packed.</source>
          <target state="translated">同種のアイテムの&lt;em&gt;リスト&lt;/em&gt;をパックします。このメソッドは、サイズが不確定のリストに役立ちます。つまり、リスト全体をウォークするまでサイズは利用できません。リスト内の各項目について、最初に符号なし整数 &lt;code&gt;1&lt;/code&gt; がパックされ、その後にリストからのデータ値がパックされます。&lt;em&gt;pack_item&lt;/em&gt;は、個々のアイテムをパックするために呼び出される関数です。リストの最後には、符号なし整数 &lt;code&gt;0&lt;/code&gt; がパックされています。</target>
        </trans-unit>
        <trans-unit id="b540c95e1283f4fae5fed2992b4cde688a1f8bd0" translate="yes" xml:space="preserve">
          <source>Packs a fixed length list (&lt;em&gt;array&lt;/em&gt;) of homogeneous items. &lt;em&gt;n&lt;/em&gt; is the length of the list; it is &lt;em&gt;not&lt;/em&gt; packed into the buffer, but a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception is raised if &lt;code&gt;len(array)&lt;/code&gt; is not equal to &lt;em&gt;n&lt;/em&gt;. As above, &lt;em&gt;pack_item&lt;/em&gt; is the function used to pack each element.</source>
          <target state="translated">同種アイテムの固定長リスト（&lt;em&gt;配列&lt;/em&gt;）をパックします。&lt;em&gt;n&lt;/em&gt;はリストの長さです。それがされ&lt;em&gt;ていない&lt;/em&gt;バッファにパック、しかし&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;場合に例外が発生し &lt;code&gt;len(array)&lt;/code&gt; に等しくない&lt;em&gt;N&lt;/em&gt;。上記のように、&lt;em&gt;pack_item&lt;/em&gt;は各要素をパックするために使用される関数です。</target>
        </trans-unit>
        <trans-unit id="993b3f1f48130f3d5499e4bb61480af1f43780a6" translate="yes" xml:space="preserve">
          <source>Packs a fixed length opaque data stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; &lt;/a&gt;と同様に、固定長の不透明なデータストリームをパックします。</target>
        </trans-unit>
        <trans-unit id="85b656f18a0f07689f2f15d99d57287804c9ec23" translate="yes" xml:space="preserve">
          <source>Packs a fixed length string, &lt;em&gt;s&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; is the length of the string but it is &lt;em&gt;not&lt;/em&gt; packed into the data buffer. The string is padded with null bytes if necessary to guaranteed 4 byte alignment.</source>
          <target state="translated">固定長文字列&lt;em&gt;sを&lt;/em&gt;パックします。&lt;em&gt;n&lt;/em&gt;は文字列の長さですが、データバッファーにパックされ&lt;em&gt;ません&lt;/em&gt;。4バイトの整列を保証する必要がある場合は、文字列にnullバイトが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="d35f3e8d894947627ebea046d9379e59367e078c" translate="yes" xml:space="preserve">
          <source>Packs a variable length &lt;em&gt;list&lt;/em&gt; of homogeneous items. First, the length of the list is packed as an unsigned integer, then each element is packed as in &lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt;&lt;code&gt;pack_farray()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">同種アイテムの可変長&lt;em&gt;リスト&lt;/em&gt;をパックします。まず、リストの長さが符号なし整数としてパックされ、次に各要素が上記の&lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt; &lt;code&gt;pack_farray()&lt;/code&gt; の&lt;/a&gt;ようにパックされます。</target>
        </trans-unit>
        <trans-unit id="30061d9c00e384a6f4b04e1bdfb6f26cbfd0caf4" translate="yes" xml:space="preserve">
          <source>Packs a variable length byte stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt;と同様に、可変長バイトストリームをパックします。</target>
        </trans-unit>
        <trans-unit id="1f5fb0dbfad21f7013015f277c5718bd76afec8f" translate="yes" xml:space="preserve">
          <source>Packs a variable length opaque data string, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt;と同様に、可変長の不透明なデータ文字列をパックします。</target>
        </trans-unit>
        <trans-unit id="f73c74419bc7c46b6f154ecf0c655bc164189afb" translate="yes" xml:space="preserve">
          <source>Packs a variable length string, &lt;em&gt;s&lt;/em&gt;. The length of the string is first packed as an unsigned integer, then the string data is packed with &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可変長文字列&lt;em&gt;sを&lt;/em&gt;パックします。文字列の長さは最初に符号なし整数としてパックされ、次に文字列データが&lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; で&lt;/a&gt;パックされます。</target>
        </trans-unit>
        <trans-unit id="298af3b97feaea337e720a2944c01237f7d660aa" translate="yes" xml:space="preserve">
          <source>Packs the double-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">倍精度浮動小数点数の&lt;em&gt;値を&lt;/em&gt;パックし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9506e9ead7ad8bf096843e59e92af3f3db699fd" translate="yes" xml:space="preserve">
          <source>Packs the single-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">単精度浮動小数点数の&lt;em&gt;値を&lt;/em&gt;パックし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a9c02b60fbcf23b1dbfa68021d80be67258ce8" translate="yes" xml:space="preserve">
          <source>Pad byte needed if &lt;em&gt;n&lt;/em&gt; is odd and chunk alignment is used</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;が奇数でチャンクアライメントが使用されている場合に必要な埋め込みバイト</target>
        </trans-unit>
        <trans-unit id="be6aec49e5262973160789fd096af12232d8eda6" translate="yes" xml:space="preserve">
          <source>Padding is only automatically added between successive structure members. No padding is added at the beginning or the end of the encoded struct.</source>
          <target state="translated">パディングは、連続する構造体のメンバ間でのみ自動的に追加されます。エンコードされた構造体の先頭や末尾にはパディングは追加されません。</target>
        </trans-unit>
        <trans-unit id="eebe8b4d277848e1ec370986e82d2178731c6293" translate="yes" xml:space="preserve">
          <source>Page Down</source>
          <target state="translated">ページダウン</target>
        </trans-unit>
        <trans-unit id="5c77b5722c41b6f199f92efb5977aba4430b61c9" translate="yes" xml:space="preserve">
          <source>Page Up</source>
          <target state="translated">ページアップ</target>
        </trans-unit>
        <trans-unit id="e7d3c63de7852b4a6801684fea08c43e4215eede" translate="yes" xml:space="preserve">
          <source>Paint at most &lt;em&gt;n&lt;/em&gt; characters of the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">最大でペイント&lt;em&gt;のn&lt;/em&gt;文字列の文字&lt;em&gt;列str&lt;/em&gt;で &lt;code&gt;(y, x)&lt;/code&gt; の属性では、&lt;em&gt;attrの&lt;/em&gt;ディスプレイ上で以前に何かを上書きし、。</target>
        </trans-unit>
        <trans-unit id="d99809c709d2c937bd8fcaf22711d9e1f53af193" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, moving the line from position &lt;em&gt;x&lt;/em&gt; right by one character.</source>
          <target state="translated">文字ペイント&lt;em&gt;CHの&lt;/em&gt;時 &lt;code&gt;(y, x)&lt;/code&gt; 属性で&lt;em&gt;ATTR&lt;/em&gt;位置からラインを移動、&lt;em&gt;xは&lt;/em&gt; 1つの文字だけ右。</target>
        </trans-unit>
        <trans-unit id="24af2750a2e63948648310692a6b52c55421e98d" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting any character previously painter at that location. By default, the character position and attributes are the current settings for the window object.</source>
          <target state="translated">&lt;code&gt;(y, x)&lt;/code&gt; 文字&lt;em&gt;ch&lt;/em&gt;を属性&lt;em&gt;attr&lt;/em&gt;でペイントし、以前その場所でペイントしていた文字を上書きします。デフォルトでは、文字の位置と属性はウィンドウオブジェクトの現在の設定です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d619bb80867eab45009bfb84b6b417b3ca8fc2c3" translate="yes" xml:space="preserve">
          <source>Paint the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">文字列&lt;em&gt;str&lt;/em&gt;を &lt;code&gt;(y, x)&lt;/code&gt; に属性&lt;em&gt;attr&lt;/em&gt;でペイントし、以前にディスプレイに表示されていたものをすべて上書きします。</target>
        </trans-unit>
        <trans-unit id="e844933b4932ee3937ee43d5f9fbf5690450c6f9" translate="yes" xml:space="preserve">
          <source>Panel Objects</source>
          <target state="translated">パネルオブジェクト</target>
        </trans-unit>
        <trans-unit id="fa3f038d65d1a64b9f30b8194e1110843ad0ed17" translate="yes" xml:space="preserve">
          <source>Panel objects have the following methods:</source>
          <target state="translated">パネルオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="48250a21bb2f011a6dfba4c5d7e1a9a1c9fdc072" translate="yes" xml:space="preserve">
          <source>Panel objects, as returned by &lt;a href=&quot;#curses.panel.new_panel&quot;&gt;&lt;code&gt;new_panel()&lt;/code&gt;&lt;/a&gt; above, are windows with a stacking order. There&amp;rsquo;s always a window associated with a panel which determines the content, while the panel methods are responsible for the window&amp;rsquo;s depth in the panel stack.</source>
          <target state="translated">上記の&lt;a href=&quot;#curses.panel.new_panel&quot;&gt; &lt;code&gt;new_panel()&lt;/code&gt; &lt;/a&gt;によって返されるPanelオブジェクトは、スタック順のウィンドウです。コンテンツを決定するパネルに関連付けられたウィンドウは常に存在しますが、パネルメソッドは、パネルスタック内のウィンドウの奥行きを担当します。</target>
        </trans-unit>
        <trans-unit id="fc975aa48f15e94a28935c5e885e735c1b69bb7b" translate="yes" xml:space="preserve">
          <source>Panels are windows with the added feature of depth, so they can be stacked on top of each other, and only the visible portions of each window will be displayed. Panels can be added, moved up or down in the stack, and removed.</source>
          <target state="translated">パネルとは、奥行きのあるウィンドウのことで、ウィンドウを重ねて表示することができます。パネルは、追加したり、スタック内で上下に移動したり、削除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="312270aaaff20da30c74f328ff0f10c9927c4efe" translate="yes" xml:space="preserve">
          <source>Paragraph Separator</source>
          <target state="translated">パラグラフセパレータ</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="41656f6d37dec30feb05e7aa728844b98293f13f" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;arg&lt;/em&gt; should be a &lt;em&gt;key&lt;/em&gt;-to-&lt;em&gt;message&lt;/em&gt; mapping or an iterable of (&lt;em&gt;key&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;) pairs. Updates the mailbox so that, for each given &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt;, the message corresponding to &lt;em&gt;key&lt;/em&gt; is set to &lt;em&gt;message&lt;/em&gt; as if by using &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;. As with &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, each &lt;em&gt;key&lt;/em&gt; must already correspond to a message in the mailbox or else a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception will be raised, so in general it is incorrect for &lt;em&gt;arg&lt;/em&gt; to be a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">パラメータ&lt;em&gt;arg&lt;/em&gt;は、&lt;em&gt;キー&lt;/em&gt;から&lt;em&gt;メッセージ&lt;/em&gt;へのマッピング、または（&lt;em&gt;key&lt;/em&gt;、&lt;em&gt;message&lt;/em&gt;）ペアの反復可能である必要があり&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;キー&lt;/em&gt;と&lt;em&gt;メッセージ&lt;/em&gt;ごとに、&lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;を使用する場合と同様に、&lt;em&gt;キーに&lt;/em&gt;対応する&lt;em&gt;メッセージがメッセージに&lt;/em&gt;設定されるようにメールボックスを更新します。同じように&lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;、各&lt;em&gt;キーは&lt;/em&gt;、すでに他のメールボックスまたは内のメッセージに対応している必要があり&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外の&lt;/a&gt;ためにそれほど一般的で、それは間違っている、例外が発生します&lt;em&gt;argが&lt;/em&gt;あることを&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;インスタンス。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59c4a01bc4aac90732e66b0bec359511c54291d4" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance, an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, a string, a byte string, or a file-like object (which should be open in binary mode). If &lt;em&gt;message&lt;/em&gt; is an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass (e.g., if it&amp;rsquo;s an &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; instance and this is an &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; instance), its format-specific information is used. Otherwise, reasonable defaults for format-specific information are used.</source>
          <target state="translated">パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;インスタンス、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;インスタンス、文字列、バイト文字列、またはファイルのようなオブジェクト（バイナリモードで開く必要があります）です。場合&lt;em&gt;、メッセージが&lt;/em&gt;適切なフォーマット固有のインスタンスである&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;サブクラス（例えば、それがだ場合、&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; インスタンスの&lt;/a&gt;インスタンスとこれは&lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt;インスタンス）、そのフォーマット固有の情報が使用されます。それ以外の場合は、フォーマット固有の情報に適切なデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="881bf20a17cb18ef7df20e69e4894f8e515d8f08" translate="yes" xml:space="preserve">
          <source>Parameter keys are always compared case insensitively. The return value can either be a string, or a 3-tuple if the parameter was &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; encoded. When it&amp;rsquo;s a 3-tuple, the elements of the value are of the form &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt;. Note that both &lt;code&gt;CHARSET&lt;/code&gt; and &lt;code&gt;LANGUAGE&lt;/code&gt; can be &lt;code&gt;None&lt;/code&gt;, in which case you should consider &lt;code&gt;VALUE&lt;/code&gt; to be encoded in the &lt;code&gt;us-ascii&lt;/code&gt; charset. You can usually ignore &lt;code&gt;LANGUAGE&lt;/code&gt;.</source>
          <target state="translated">パラメータキーは常に大文字と小文字を区別せずに比較されます。戻り値は文字列、またはパラメータが&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231で&lt;/strong&gt;&lt;/a&gt;エンコードされている場合は3タプルのいずれかになります。3タプルの場合、値の要素の形式は &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt; です。 &lt;code&gt;CHARSET&lt;/code&gt; と &lt;code&gt;LANGUAGE&lt;/code&gt; はどちらも &lt;code&gt;None&lt;/code&gt; にできることに注意してください。その場合、 &lt;code&gt;VALUE&lt;/code&gt; は &lt;code&gt;us-ascii&lt;/code&gt; 文字セットでエンコードされると考える必要があります。通常は &lt;code&gt;LANGUAGE&lt;/code&gt; を無視できます。</target>
        </trans-unit>
        <trans-unit id="33739f0fe85843a995275178b4ae7686f3467b90" translate="yes" xml:space="preserve">
          <source>Parameter objects are &lt;em&gt;immutable&lt;/em&gt;. Instead of modifying a Parameter object, you can use &lt;a href=&quot;#inspect.Parameter.replace&quot;&gt;&lt;code&gt;Parameter.replace()&lt;/code&gt;&lt;/a&gt; to create a modified copy.</source>
          <target state="translated">パラメータオブジェクトは&lt;em&gt;不変&lt;/em&gt;です。Parameterオブジェクトを変更する代わりに、&lt;a href=&quot;#inspect.Parameter.replace&quot;&gt; &lt;code&gt;Parameter.replace()&lt;/code&gt; &lt;/a&gt;を使用して変更されたコピーを作成できます。</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="a92b79dc56bbd97fdb6a07c22c916ccfa7aee2d6" translate="yes" xml:space="preserve">
          <source>Parameters for last path element</source>
          <target state="translated">最後のパス要素のパラメータ</target>
        </trans-unit>
        <trans-unit id="759e2eb2d1daa387faedef08a108f8727c12a8ef" translate="yes" xml:space="preserve">
          <source>Parameters for the &lt;a href=&quot;#os.getpriority&quot;&gt;&lt;code&gt;getpriority()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.setpriority&quot;&gt;&lt;code&gt;setpriority()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">&lt;a href=&quot;#os.getpriority&quot;&gt; &lt;code&gt;getpriority()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.setpriority&quot;&gt; &lt;code&gt;setpriority()&lt;/code&gt; &lt;/a&gt;関数のパラメーター。</target>
        </trans-unit>
        <trans-unit id="838e55f08d1ff41fab5268cb5f1dd771e877ca64" translate="yes" xml:space="preserve">
          <source>Parameters not specified keep current settings, except &lt;code&gt;errors='strict'&lt;/code&gt; is used when &lt;em&gt;encoding&lt;/em&gt; is specified but &lt;em&gt;errors&lt;/em&gt; is not specified.</source>
          <target state="translated">指定されていないパラメーターは、&lt;em&gt;エンコーディング&lt;/em&gt;が指定されているが&lt;em&gt;エラー&lt;/em&gt;が指定されていない場合に &lt;code&gt;errors='strict'&lt;/code&gt; が使用されることを除いて、現在の設定を保持します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64930b4862237d51573ab5db32a04df08eaab71b" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.lseek&quot;&gt;&lt;code&gt;lseek()&lt;/code&gt;&lt;/a&gt; function. Their values are 0, 1, and 2, respectively.</source>
          <target state="translated">&lt;a href=&quot;#os.lseek&quot;&gt; &lt;code&gt;lseek()&lt;/code&gt; &lt;/a&gt;関数のパラメーター。それらの値はそれぞれ0、1、2です。</target>
        </trans-unit>
        <trans-unit id="574eadd03549c46ff070bfc9b5c4604fe3ba3d9e" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt; function, if the implementation supports them.</source>
          <target state="translated">&lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; &lt;/a&gt;関数のパラメーター（実装でサポートされている場合）。</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="bb65093f645552f1d147225f5339fb4c0d809a51" translate="yes" xml:space="preserve">
          <source>Pareto distribution. &lt;em&gt;alpha&lt;/em&gt; is the shape parameter.</source>
          <target state="translated">パレート分布。&lt;em&gt;alpha&lt;/em&gt;は形状パラメーターです。</target>
        </trans-unit>
        <trans-unit id="a86e41d6f2a5d68c53f3894fcb12cd2f2075fd69" translate="yes" xml:space="preserve">
          <source>Parse XML data reading from the object &lt;em&gt;file&lt;/em&gt;. &lt;em&gt;file&lt;/em&gt; only needs to provide the &lt;code&gt;read(nbytes)&lt;/code&gt; method, returning the empty string when there&amp;rsquo;s no more data.</source>
          <target state="translated">オブジェクト&lt;em&gt;ファイル&lt;/em&gt;から読み取ったXMLデータを解析し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;file&lt;/em&gt;は &lt;code&gt;read(nbytes)&lt;/code&gt; メソッドを提供するだけでよく、データがなくなると空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="cd6d8291ae51a08ad977274c0372200b08672145" translate="yes" xml:space="preserve">
          <source>Parse a &lt;code&gt;config.h&lt;/code&gt;-style file.</source>
          <target state="translated">&lt;code&gt;config.h&lt;/code&gt; スタイルのファイルを解析します。</target>
        </trans-unit>
        <trans-unit id="63c3905d8ecd87702e0ce0c0330bac77c66e32c8" translate="yes" xml:space="preserve">
          <source>Parse a MIME header (such as &lt;em&gt;Content-Type&lt;/em&gt;) into a main value and a dictionary of parameters.</source>
          <target state="translated">MIMEヘッダー（&lt;em&gt;Content-Typeなど&lt;/em&gt;）をメイン値とパラメーターの辞書に解析します。</target>
        </trans-unit>
        <trans-unit id="ff6e1df4dd4d3597f09c70a2e424eab21b6eff12" translate="yes" xml:space="preserve">
          <source>Parse a URL into six components, returning a 6-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;. This corresponds to the general structure of a URL: &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt;. Each tuple item is a string, possibly empty. The components are not broken up in smaller parts (for example, the network location is a single string), and % escapes are not expanded. The delimiters as shown above are not part of the result, except for a leading slash in the &lt;em&gt;path&lt;/em&gt; component, which is retained if present. For example:</source>
          <target state="translated">URLを6つのコンポーネントに解析し、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;tupleという名前の&lt;/a&gt; 6アイテムを返します。これは、URLの一般的な構造に対応しています： &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt; 。各タプルアイテムは文字列で、空の場合もあります。コンポーネントは小さな部分に分割されておらず（たとえば、ネットワークの場所は単一の文字列です）、％エスケープは展開されません。上記の区切り文字は、&lt;em&gt;パス&lt;/em&gt;コンポーネントの先頭のスラッシュを除いて、結果の一部ではありませんが、存在する場合は保持されます。例えば：</target>
        </trans-unit>
        <trans-unit id="9f65d7a6a5967be810a7b45cc7fc1983d29ae04a" translate="yes" xml:space="preserve">
          <source>Parse a query in the environment or from a file (the file defaults to &lt;code&gt;sys.stdin&lt;/code&gt;). The &lt;em&gt;keep_blank_values&lt;/em&gt; and &lt;em&gt;strict_parsing&lt;/em&gt; parameters are passed to &lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt;&lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">環境内またはファイルからクエリを解析します（ファイルのデフォルトは &lt;code&gt;sys.stdin&lt;/code&gt; です）。&lt;em&gt;keep_blank_values&lt;/em&gt;と&lt;em&gt;strict_parsing&lt;/em&gt;パラメータが渡され&lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt; &lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt; &lt;/a&gt;変わりません。</target>
        </trans-unit>
        <trans-unit id="83ffcfafda3d2a633dbce55a15d332a9d456e01a" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a dictionary. The dictionary keys are the unique query variable names and the values are lists of values for each name.</source>
          <target state="translated">文字列引数（&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;型のデータ）として指定されたクエリ文字列を解析します。データは辞書として返されます。辞書キーは一意のクエリ変数名であり、値は各名前の値のリストです。</target>
        </trans-unit>
        <trans-unit id="3f02af97808b4370f19a36ce2159e13d76d32265" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a list of name, value pairs.</source>
          <target state="translated">文字列引数（&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;型のデータ）として指定されたクエリ文字列を解析します。データは、名前と値のペアのリストとして返されます。</target>
        </trans-unit>
        <trans-unit id="7f5435496a6de34302e5162e2765e6d03eb242ff" translate="yes" xml:space="preserve">
          <source>Parse a string into a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object given a corresponding format</source>
          <target state="translated">対応する形式を指定して、文字列を解析して&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトにします</target>
        </trans-unit>
        <trans-unit id="ddb7f7e51791d0d0bb53020b57f543d16b666e17" translate="yes" xml:space="preserve">
          <source>Parse a string representing a time according to a format. The return value is a &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; as returned by &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">形式に従って時間を表す文字列を解析します。戻り値は、&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;によって返される&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5e9b3948a49b13fe039282714fef7eb741666870" translate="yes" xml:space="preserve">
          <source>Parse address &amp;ndash; which should be the value of some address-containing field such as &lt;em&gt;To&lt;/em&gt; or &lt;em&gt;Cc&lt;/em&gt; &amp;ndash; into its constituent &lt;em&gt;realname&lt;/em&gt; and &lt;em&gt;email address&lt;/em&gt; parts. Returns a tuple of that information, unless the parse fails, in which case a 2-tuple of &lt;code&gt;('', '')&lt;/code&gt; is returned.</source>
          <target state="translated">パースアドレス（&lt;em&gt;To&lt;/em&gt;や&lt;em&gt;Cc&lt;/em&gt;などのアドレスを含むフィールドの値である必要があります）を構成する&lt;em&gt;実名&lt;/em&gt;と&lt;em&gt;電子メールアドレスの&lt;/em&gt;部分に。解析が失敗しない限り、その情報のタプルを返します。その場合、 &lt;code&gt;('', '')&lt;/code&gt; 2タプルが返されます。</target>
        </trans-unit>
        <trans-unit id="7bfb97eef332ed35c993d49a75d83bad160155a8" translate="yes" xml:space="preserve">
          <source>Parse an IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; string and return corresponding local time. The return value is a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; tuple or &lt;code&gt;None&lt;/code&gt; if the string has wrong format.</source>
          <target state="translated">IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; 文字列を解析し、対応する現地時間を返します。戻り値は&lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt;タプル、または文字列の形式が正しく &lt;code&gt;None&lt;/code&gt; 場合はNoneです。</target>
        </trans-unit>
        <trans-unit id="77b4c57e66b64e4534f7423e678b54e99d6e7ad3" translate="yes" xml:space="preserve">
          <source>Parse configuration data from a string.</source>
          <target state="translated">文字列から設定データを解析します。</target>
        </trans-unit>
        <trans-unit id="34ec846a5cc0bb5312516a5590e119f9b3d82572" translate="yes" xml:space="preserve">
          <source>Parse every input line as separate JSON object.</source>
          <target state="translated">各入力行を別のJSONオブジェクトとしてパースします。</target>
        </trans-unit>
        <trans-unit id="92f18fdd6a043541a20dbdffd6b3b6b5c6b25947" translate="yes" xml:space="preserve">
          <source>Parse input of type &lt;em&gt;multipart/form-data&lt;/em&gt; (for file uploads). Arguments are &lt;em&gt;fp&lt;/em&gt; for the input file, &lt;em&gt;pdict&lt;/em&gt; for a dictionary containing other parameters in the &lt;em&gt;Content-Type&lt;/em&gt; header, and &lt;em&gt;encoding&lt;/em&gt;, the request encoding.</source>
          <target state="translated">タイプ&lt;em&gt;multipart / form-dataの&lt;/em&gt;入力を解析します（ファイルのアップロード用）。引数は&lt;em&gt;、FP&lt;/em&gt;入力ファイルのため、&lt;em&gt;pdict&lt;/em&gt;に他のパラメータを含む辞書のため&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダ、及び&lt;em&gt;エンコーディング&lt;/em&gt;、要求エンコード。</target>
        </trans-unit>
        <trans-unit id="b48fc13fc5d8b028c399137b19563a9d740767c5" translate="yes" xml:space="preserve">
          <source>Parse the headers from a file pointer &lt;em&gt;fp&lt;/em&gt; representing a HTTP request/response. The file has to be a &lt;code&gt;BufferedIOBase&lt;/code&gt; reader (i.e. not text) and must provide a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; style header.</source>
          <target state="translated">HTTP要求/応答を表すファイルポインター&lt;em&gt;fp&lt;/em&gt;からヘッダーを解析します。ファイルは &lt;code&gt;BufferedIOBase&lt;/code&gt; リーダー（テキストではない）である必要があり、有効な&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;スタイルのヘッダーを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="6322b351357533e4088cb2f327b3892c078e67a0" translate="yes" xml:space="preserve">
          <source>Parse the source into an AST node. Equivalent to &lt;code&gt;compile(source,
filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt;.</source>
          <target state="translated">ソースをASTノードに解析します。相当 &lt;code&gt;compile(source, filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac1f2c832714de7833881fe2be021bca052cf91d" translate="yes" xml:space="preserve">
          <source>Parser API</source>
          <target state="translated">パーサ API</target>
        </trans-unit>
        <trans-unit id="004fa2d97b3f68b254662790038060204e61b5c4" translate="yes" xml:space="preserve">
          <source>Parser defaults</source>
          <target state="translated">パーサのデフォルト</target>
        </trans-unit>
        <trans-unit id="8ae5e9df787606f6a18b61bb53d88c9edc2ac786" translate="yes" xml:space="preserve">
          <source>Parser for configuration files similar to the Windows &lt;code&gt;.ini&lt;/code&gt; files.</source>
          <target state="translated">Windowsの &lt;code&gt;.ini&lt;/code&gt; ファイルに類似した構成ファイルのパーサー。</target>
        </trans-unit>
        <trans-unit id="d8dc10de6adfe8e18f4e99f44dfc697378f4b6ab" translate="yes" xml:space="preserve">
          <source>Parser for the &lt;code&gt;.netrc&lt;/code&gt; file format. The file &lt;code&gt;.netrc&lt;/code&gt; is typically used by FTP clients to load user authentication information before prompting the user.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; ファイル形式のパーサー。ファイル &lt;code&gt;.netrc&lt;/code&gt; は通常、ユーザーにプロンプ​​トを出す前にユーザー認証情報をロードするためにFTPクライアントによって使用されます。</target>
        </trans-unit>
        <trans-unit id="6729f41bc7511e1386806d0ce0191be70095ac9b" translate="yes" xml:space="preserve">
          <source>Parser-level defaults can be particularly useful when working with multiple parsers. See the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method for an example of this type.</source>
          <target state="translated">パーサーレベルのデフォルトは、複数のパーサーを使用する場合に特に役立ちます。このタイプの例については、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="edcb4a36322d5054120f5cf55bd4daebc8e8fd44" translate="yes" xml:space="preserve">
          <source>Parsers may set the &lt;em&gt;qname&lt;/em&gt; parameter to &lt;code&gt;None&lt;/code&gt;, unless the &lt;code&gt;feature_namespace_prefixes&lt;/code&gt; feature is activated.</source>
          <target state="translated">&lt;code&gt;feature_namespace_prefixes&lt;/code&gt; 機能がアクティブになっていない限り、パーサーは&lt;em&gt;qname&lt;/em&gt;パラメーターを &lt;code&gt;None&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="ee2780af704008ebc69c8aa8369ff3c29a512d2d" translate="yes" xml:space="preserve">
          <source>Parses an XML document from a sequence of string fragments. &lt;em&gt;sequence&lt;/em&gt; is a list or other sequence containing XML data fragments. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">文字列フラグメントのシーケンスからXMLドキュメントを解析します。&lt;em&gt;sequence&lt;/em&gt;は、XMLデータフラグメントを含むリストまたはその他のシーケンスです。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="fbbb018cccf811e0d533b9e865ec5ffa820c0b5e" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant, and also returns a dictionary which maps from element id:s to elements. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns a tuple containing an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance and a dictionary.</source>
          <target state="translated">文字列定数からXMLセクションを解析し、要素id：sから要素にマップする辞書も返します。&lt;em&gt;text&lt;/em&gt;はXMLデータを含む文字列です。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスと辞書を含むタプルを返します。</target>
        </trans-unit>
        <trans-unit id="72927f75fe80a6b69eb37dde451d1d4fc5f35092" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. Same as &lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt;&lt;code&gt;XML()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">文字列定数からXMLセクションを解析します。&lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt; &lt;code&gt;XML()&lt;/code&gt; と&lt;/a&gt;同じです。&lt;em&gt;text&lt;/em&gt;はXMLデータを含む文字列です。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="7af853719821e9fd72d58e55be379388db261dbd" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. This function can be used to embed &amp;ldquo;XML literals&amp;rdquo; in Python code. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">文字列定数からXMLセクションを解析します。この関数を使用して、「XMLリテラル」をPythonコードに埋め込むことができます。&lt;em&gt;text&lt;/em&gt;はXMLデータを含む文字列です。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="dae47704d2ee507567c8bffbe47a3689bb12542a" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree incrementally, and reports what&amp;rsquo;s going on to the user. &lt;em&gt;source&lt;/em&gt; is a filename or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; containing XML data. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. &lt;em&gt;parser&lt;/em&gt; must be a subclass of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and can only use the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; as a target. Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; providing &lt;code&gt;(event, elem)&lt;/code&gt; pairs.</source>
          <target state="translated">XMLセクションを要素ツリーに段階的に解析し、進行状況をユーザーに報告します。&lt;em&gt;source&lt;/em&gt;は、XMLデータを含む&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイル&lt;/a&gt;名またはファイルオブジェクトです。&lt;em&gt;events&lt;/em&gt;は、報告する一連のイベントです。サポートされるイベントは、ストリング &lt;code&gt;&quot;start&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;comment&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;pi&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; （「ns」イベントは、詳細な名前空間情報を取得するために使用されます）。場合は&lt;em&gt;、イベントが&lt;/em&gt;省略されている、唯一の &lt;code&gt;&quot;end&quot;&lt;/code&gt; のイベントが報告されています。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定されていない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;em&gt;パーサー&lt;/em&gt;は&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; の&lt;/a&gt;サブクラスである必要があり、デフォルトの&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;をターゲットとしてのみ使用できます。 &lt;code&gt;(event, elem)&lt;/code&gt; ペアを提供する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ee0df73ef04440db4a8154c7c363a73ee5b68bdc" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree. &lt;em&gt;source&lt;/em&gt; is a filename or file object containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">XMLセクションを要素ツリーに解析します。&lt;em&gt;source&lt;/em&gt;は、XMLデータを含むファイル名またはファイルオブジェクトです。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="151f487cf2996ed020c6158161493638425f24db" translate="yes" xml:space="preserve">
          <source>Parses command line options and parameter list. &lt;em&gt;args&lt;/em&gt; is the argument list to be parsed, without the leading reference to the running program. Typically, this means &lt;code&gt;sys.argv[1:]&lt;/code&gt;. &lt;em&gt;shortopts&lt;/em&gt; is the string of option letters that the script wants to recognize, with options that require an argument followed by a colon (&lt;code&gt;':'&lt;/code&gt;; i.e., the same format that Unix &lt;code&gt;getopt()&lt;/code&gt; uses).</source>
          <target state="translated">コマンドラインオプションとパラメーターリストを解析します。&lt;em&gt;args&lt;/em&gt;は、実行中のプログラムへの先行参照なしで、解析される引数リストです。通常、これは &lt;code&gt;sys.argv[1:]&lt;/code&gt; 意味します。&lt;em&gt;shortopts&lt;/em&gt;は、スクリプトが認識したいオプション文字の文字列で、引数の後にコロンが続くオプション（ &lt;code&gt;':'&lt;/code&gt; 、つまり、Unix &lt;code&gt;getopt()&lt;/code&gt; が使用するのと同じ形式）です。</target>
        </trans-unit>
        <trans-unit id="df868cb1150d0cfbe21af7ee4cdd7fd10637e164" translate="yes" xml:space="preserve">
          <source>Parses the contents of the string &lt;em&gt;data&lt;/em&gt;, calling the appropriate handler functions to process the parsed data. &lt;em&gt;isfinal&lt;/em&gt; must be true on the final call to this method; it allows the parsing of a single file in fragments, not the submission of multiple files. &lt;em&gt;data&lt;/em&gt; can be the empty string at any time.</source>
          <target state="translated">文字列&lt;em&gt;dataの&lt;/em&gt;内容を解析し、適切なハンドラー関数を呼び出して、解析されたデータを処理します。このメソッドの最後の呼び出しでは、&lt;em&gt;isfinal&lt;/em&gt;がtrueでなければなりません。複数のファイルを送信するのではなく、フラグメント内の単一のファイルを解析できます。&lt;em&gt;データ&lt;/em&gt;はいつでも空の文字列に&lt;em&gt;する&lt;/em&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="3c9fa62bd1c27ae8dae11e96078b9e813bde82ff" translate="yes" xml:space="preserve">
          <source>Parses the lines argument.</source>
          <target state="translated">行の引数をパースします。</target>
        </trans-unit>
        <trans-unit id="69eb6c34919fe2acf467b9421ca3164345b86455" translate="yes" xml:space="preserve">
          <source>Parsing &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers can easily be done by the using the classes from the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;ヘッダーの解析は、&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュールのクラスを使用することで簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="7a72125d574bfaaf5cb1957bf8fd6d75f4bed06e" translate="yes" xml:space="preserve">
          <source>Parsing ASCII Encoded Bytes</source>
          <target state="translated">ASCII エンコードされたバイトの解析</target>
        </trans-unit>
        <trans-unit id="1a2190aff5319c85cf7321ca648eedb2f503316f" translate="yes" xml:space="preserve">
          <source>Parsing Rules</source>
          <target state="translated">解析ルール</target>
        </trans-unit>
        <trans-unit id="4574c08a7f81add4e596be6e15b9c64ff9371087" translate="yes" xml:space="preserve">
          <source>Parsing XML</source>
          <target state="translated">XML の解析</target>
        </trans-unit>
        <trans-unit id="6893fb3b02102f738b0b2dc3c3ca295c4ed12239" translate="yes" xml:space="preserve">
          <source>Parsing XML with Namespaces</source>
          <target state="translated">名前空間を使用した XML のパース</target>
        </trans-unit>
        <trans-unit id="bfa0baebba6e77b74cf2de3bc383caea1641985b" translate="yes" xml:space="preserve">
          <source>Parsing a doctype:</source>
          <target state="translated">doctypeをパースします。</target>
        </trans-unit>
        <trans-unit id="0a576c94c20901b183af1b9a14ad8b63c3b0db12" translate="yes" xml:space="preserve">
          <source>Parsing a plist:</source>
          <target state="translated">plist をパースします。</target>
        </trans-unit>
        <trans-unit id="4ed97da7a55821def4af9e81923e5326722f8668" translate="yes" xml:space="preserve">
          <source>Parsing an element with a few attributes and a title:</source>
          <target state="translated">いくつかの属性とタイトルを持つ要素を解析します。</target>
        </trans-unit>
        <trans-unit id="17b7786ea139dbd78158c2c45139b4c833a9c6d6" translate="yes" xml:space="preserve">
          <source>Parsing arguments</source>
          <target state="translated">引数のパース</target>
        </trans-unit>
        <trans-unit id="a47b1c882acdc40fdce7e0fb4d77502237f146c7" translate="yes" xml:space="preserve">
          <source>Parsing comments:</source>
          <target state="translated">コメントを解析します。</target>
        </trans-unit>
        <trans-unit id="e31699a29c24a3b26bf46b6d3bdc4ef92cc3a31e" translate="yes" xml:space="preserve">
          <source>Parsing invalid HTML (e.g. unquoted attributes) also works:</source>
          <target state="translated">無効な HTML のパース (引用符で囲まれていない属性など)も動作します。</target>
        </trans-unit>
        <trans-unit id="9d4775ea5c5af964bed4d175c5add3a853ae58b6" translate="yes" xml:space="preserve">
          <source>Parsing is performed by the &lt;code&gt;DictConfigurator&lt;/code&gt; class, whose constructor is passed the dictionary used for configuration, and has a &lt;code&gt;configure()&lt;/code&gt; method. The &lt;a href=&quot;#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt; module has a callable attribute &lt;code&gt;dictConfigClass&lt;/code&gt; which is initially set to &lt;code&gt;DictConfigurator&lt;/code&gt;. You can replace the value of &lt;code&gt;dictConfigClass&lt;/code&gt; with a suitable implementation of your own.</source>
          <target state="translated">構文解析は &lt;code&gt;DictConfigurator&lt;/code&gt; クラスによって実行されます。このクラスのコンストラクタには、構成に使用されるディクショナリが渡され、 &lt;code&gt;configure()&lt;/code&gt; メソッドがあります。&lt;a href=&quot;#module-logging.config&quot;&gt; &lt;code&gt;logging.config&lt;/code&gt; の&lt;/a&gt;モジュールは呼び出し可能な属性がある &lt;code&gt;dictConfigClass&lt;/code&gt; 初めに設定されている &lt;code&gt;DictConfigurator&lt;/code&gt; を。 &lt;code&gt;dictConfigClass&lt;/code&gt; の値を独自の適切な実装に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="e482f0fc24f824a62c06ebb7859dfede7d0aa064" translate="yes" xml:space="preserve">
          <source>Parsing named and numeric character references and converting them to the correct char (note: these 3 references are all equivalent to &lt;code&gt;'&amp;gt;'&lt;/code&gt;):</source>
          <target state="translated">名前付きおよび数値の文字参照を解析し、正しい文字に変換します（注：これらの3つの参照はすべて &lt;code&gt;'&amp;gt;'&lt;/code&gt; と同等です）：</target>
        </trans-unit>
        <trans-unit id="a44bc4f5945b088db01b0d914b0d941b07799822" translate="yes" xml:space="preserve">
          <source>Parsing requirements for mailto URL schemes.</source>
          <target state="translated">mailto URLスキームのパース要件。</target>
        </trans-unit>
        <trans-unit id="bf3d21c265eb4a00a78d8f62a6d665405bb16b18" translate="yes" xml:space="preserve">
          <source>Partial mocking</source>
          <target state="translated">部分的なモッキング</target>
        </trans-unit>
        <trans-unit id="8898adadc5b7993600711b7f5c715af91efba444" translate="yes" xml:space="preserve">
          <source>Partial parsing</source>
          <target state="translated">部分的な解析</target>
        </trans-unit>
        <trans-unit id="8a924cc1e2ca080e3d2d9070952b331ebd977a94" translate="yes" xml:space="preserve">
          <source>Partial support of the Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt; structure is used for &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; creation. The following attributes can be set by passing them as keyword-only arguments.</source>
          <target state="translated">Windowsの&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt;構造の部分的なサポートは、&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; の&lt;/a&gt;作成に使用されます。次の属性は、キーワードのみの引数として渡すことで設定できます。</target>
        </trans-unit>
        <trans-unit id="9cefe65497d71ce480712ec369093347b9edf071" translate="yes" xml:space="preserve">
          <source>Pass one or more paths (as strings) to text files to be examined.</source>
          <target state="translated">検査対象のテキストファイルへのパス(文字列)を1つ以上渡します。</target>
        </trans-unit>
        <trans-unit id="5f7450f952fba25aff224ced294b6f998b462e06" translate="yes" xml:space="preserve">
          <source>Pass the barrier. When all the threads party to the barrier have called this function, they are all released simultaneously. If a &lt;em&gt;timeout&lt;/em&gt; is provided, it is used in preference to any that was supplied to the class constructor.</source>
          <target state="translated">バリアを通過します。バリアのすべてのスレッドパーティがこの関数を呼び出すと、それらはすべて同時に解放されます。&lt;em&gt;タイムアウト&lt;/em&gt;が指定されている場合は、クラスコンストラクターに提供された&lt;em&gt;タイムアウト&lt;/em&gt;よりも優先的に使用されます。</target>
        </trans-unit>
        <trans-unit id="990deeb80d6138076466ced9282b16e7f18f84fb" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by both the current process and child processes. May not be available on all systems.</source>
          <target state="translated">&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;に渡して、現在のプロセスと子プロセスの両方が消費するリソースを要求します。すべてのシステムで利用できるとは限りません。</target>
        </trans-unit>
        <trans-unit id="6c0db84a8ee7e54a3fa9e2983efa2cdd04a121a8" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by child processes of the calling process which have been terminated and waited for.</source>
          <target state="translated">&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;に渡して、終了して待機していた、呼び出しプロセスの子プロセスによって消費されたリソースを要求します。</target>
        </trans-unit>
        <trans-unit id="65a4c34a2a87e93e40e98a2b333bc373444fe153" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the calling process, which is the sum of resources used by all threads in the process.</source>
          <target state="translated">&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;に渡して、呼び出しプロセスが消費したリソースを要求します。これは、プロセス内のすべてのスレッドが使用したリソースの合計です。</target>
        </trans-unit>
        <trans-unit id="6d9dbad6ac28906fedfb066087f4e23428020121" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the current thread. May not be available on all systems.</source>
          <target state="translated">&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;に渡して、現在のスレッドによって消費されているリソースを要求します。すべてのシステムで利用できるとは限りません。</target>
        </trans-unit>
        <trans-unit id="271d60f487b5b3f1af07cb53c6718722743b3a26" translate="yes" xml:space="preserve">
          <source>Passed</source>
          <target state="translated">Passed</target>
        </trans-unit>
        <trans-unit id="c1a8ee630c475631807e09dc9f6d88c91b3db2ff" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt;&lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;formatter_class=&lt;/code&gt; indicates that &lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; and &lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; are already correctly formatted and should not be line-wrapped:</source>
          <target state="translated">&lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt; &lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;formatter_class=&lt;/code&gt; として渡すと、&lt;a href=&quot;#description&quot;&gt;説明&lt;/a&gt;と&lt;a href=&quot;#epilog&quot;&gt;エピローグ&lt;/a&gt;は既に正しくフォーマットされており、折り返してはなりません。</target>
        </trans-unit>
        <trans-unit id="3cc7098ba0d08be5b9eeb5f8d505a19e1aa66759" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as &lt;em&gt;trace_callback&lt;/em&gt; will disable the trace callback.</source>
          <target state="translated">渡すん&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;として&lt;em&gt;trace_callbackは&lt;/em&gt;トレースコールバックを無効にします。</target>
        </trans-unit>
        <trans-unit id="d024dbf4319068e7f12b8e77a46bc274a6f14064" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; will fail since &lt;code&gt;1900&lt;/code&gt; is not a leap year.</source>
          <target state="translated">&lt;code&gt;1900&lt;/code&gt; はうるう年ではないため、 &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; を渡すと失敗します。</target>
        </trans-unit>
        <trans-unit id="02f10d83abb588c6900248de658aa7a62805f3aa" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;debug=True&lt;/code&gt; to &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;debug=True&lt;/code&gt; を&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; に&lt;/a&gt;渡します。</target>
        </trans-unit>
        <trans-unit id="d3551e0fe86a1365158e456ce9f8d713fe328a1b" translate="yes" xml:space="preserve">
          <source>Passing a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; without the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments falls under the first case of returning the informal string representation (see also the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; command-line option to Python). For example:</source>
          <target state="translated">&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを&lt;em&gt;エンコーディング&lt;/em&gt;または&lt;em&gt;エラー&lt;/em&gt;引数なしで&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; に&lt;/a&gt;渡すと、非公式の文字列表現を返す最初のケースに分類されます（Pythonの&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt;コマンドラインオプションも参照）。例えば：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9cdbfdcb197d91dd62f0f8abd3627fccc6f87c2d" translate="yes" xml:space="preserve">
          <source>Passing a directory is also acceptable:</source>
          <target state="translated">ディレクトリを渡すことも可能です。</target>
        </trans-unit>
        <trans-unit id="23ea26b7b9b743e6b69e8adca10474d32ff7f4c4" translate="yes" xml:space="preserve">
          <source>Passing a false value for &lt;em&gt;flag&lt;/em&gt; will cancel a previous call that passed a true value, but otherwise has no effect.</source>
          <target state="translated">&lt;em&gt;flagに&lt;/em&gt; false値を渡すと、true値を渡した前の呼び出しがキャンセルされますが、それ以外の場合は効果がありません。</target>
        </trans-unit>
        <trans-unit id="d96b6cf88dd53f9df9983de6c2674fdbef0f57cf" translate="yes" xml:space="preserve">
          <source>Passing an invalid or expired &lt;em&gt;thread_id&lt;/em&gt; may result in undefined behavior, such as segmentation fault.</source>
          <target state="translated">無効または期限切れの&lt;em&gt;thread_idを&lt;/em&gt;渡すと、セグメンテーション違反などの未定義の動作が&lt;em&gt;発生&lt;/em&gt;する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d4373763b08bb2aaf6a891ea712bad980acdaeae" translate="yes" xml:space="preserve">
          <source>Passing arguments of the wrong type (e.g. passing a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; when an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; is expected) should result in a &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, but passing arguments with the wrong value (e.g. a number outside expected boundaries) should result in a &lt;a href=&quot;#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">間違った型の引数を渡すと（たとえば、&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;が期待されるときに&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;を渡すと）、&lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生しますが、間違った値（たとえば、予期される境界外の数）で引数を渡すと、&lt;a href=&quot;#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ce254e377d02b1546a547ed5a4b85276ee5363e9" translate="yes" xml:space="preserve">
          <source>Passing pointers (or: passing parameters by reference)</source>
          <target state="translated">ポインタの受け渡し (または:参照によるパラメータの受け渡し)</target>
        </trans-unit>
        <trans-unit id="f3fa6806e05d0efc4240e4ddbbec8d0f63598164" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;-v&lt;/code&gt; option to your test script will instruct &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; to enable a higher level of verbosity, and produce the following output:</source>
          <target state="translated">テストスクリプトに &lt;code&gt;-v&lt;/code&gt; オプションを渡すと、&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;がより高いレベルの冗長性を有効にし、次の出力が生成されます。</target>
        </trans-unit>
        <trans-unit id="bd57565121ff601125e660a69c2626eb5a561528" translate="yes" xml:space="preserve">
          <source>Passing the &lt;em&gt;encoding&lt;/em&gt; argument to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; allows decoding any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; directly, without needing to make a temporary bytes or bytearray object.</source>
          <target state="translated">&lt;em&gt;encoding&lt;/em&gt;引数を&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; に&lt;/a&gt;渡すと、一時的なバイトやバイト配列オブジェクトを作成する必要なく、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトを&lt;/a&gt;直接デコードできます。</target>
        </trans-unit>
        <trans-unit id="9c8e2c14f5bd9b6c379aece2cadfc65b3d7043c9" translate="yes" xml:space="preserve">
          <source>Passing the optional &lt;em&gt;timeout&lt;/em&gt; parameter will set the timeout on the socket instance before attempting to connect. If no &lt;em&gt;timeout&lt;/em&gt; is supplied, the global default timeout setting returned by &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;getdefaulttimeout()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータを渡すと、接続を試みる前にソケットインスタンスにタイムアウトが設定されます。&lt;em&gt;タイムアウト&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;によって返されるグローバルなデフォルトのタイムアウト設定が使用されます。</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="8b7a491eeb7b640b68f36bf4268b49be1a79e14c" translate="yes" xml:space="preserve">
          <source>Password database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;passwd&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">パスワードデータベースエントリはタプルのようなオブジェクトとして報告され、その属性は &lt;code&gt;passwd&lt;/code&gt; 構造のメンバーに対応します（以下の属性フィールド、 &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt; を参照）：</target>
        </trans-unit>
        <trans-unit id="124df59fda65fb78cd1ae393c55a5a743faabbc8" translate="yes" xml:space="preserve">
          <source>Passwords are limited to a subset of the ASCII character set. All ASCII punctuation is allowed in passwords, however, note that whitespace and non-printable characters are not allowed in passwords. This is a limitation of the way the .netrc file is parsed and may be removed in the future.</source>
          <target state="translated">パスワードは、ASCII 文字セットのサブセットに制限されています。すべてのASCII句読点はパスワードで使用できますが、空白文字や印刷不可能な文字はパスワードでは使用できません。これは .netrc ファイルの解析方法の制限であり、将来的には削除されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="db2483000d154ca9fd74d41fc4e063a4b28faa87" translate="yes" xml:space="preserve">
          <source>Paste</source>
          <target state="translated">Paste</target>
        </trans-unit>
        <trans-unit id="83031d4915377d907a024876b60112ce6b924d4d" translate="yes" xml:space="preserve">
          <source>Patch Decorators</source>
          <target state="translated">パッチデコレーター</target>
        </trans-unit>
        <trans-unit id="09e818ea13f3990a9818a47cc9bb0ee42b62ff97" translate="yes" xml:space="preserve">
          <source>Patch a dictionary, or dictionary like object, and restore the dictionary to its original state after the test.</source>
          <target state="translated">辞書や辞書ライクなオブジェクトにパッチを当てて、テスト後に元の状態に戻します。</target>
        </trans-unit>
        <trans-unit id="263242e9d8ee6d3a8c9d445eaa84200b976eae2d" translate="yes" xml:space="preserve">
          <source>Patch can be used as a &lt;code&gt;TestCase&lt;/code&gt; class decorator. It works by decorating each test method in the class. This reduces the boilerplate code when your test methods share a common patchings set. &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; finds tests by looking for method names that start with &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;. By default this is &lt;code&gt;'test'&lt;/code&gt;, which matches the way &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; finds tests. You can specify an alternative prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;.</source>
          <target state="translated">パッチは &lt;code&gt;TestCase&lt;/code&gt; クラスデコレータとして使用できます。クラス内の各テストメソッドを装飾することで機能します。これにより、テストメソッドが共通のパッチセットを共有する場合のボイラープレートコードが削減されます。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; で始まるメソッド名を探すことによってテストを見つけます。デフォルトでは、これは &lt;code&gt;'test'&lt;/code&gt; であり、これは&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;がテストを見つける方法と一致します。 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; を設定することにより、代替プレフィックスを指定できます。</target>
        </trans-unit>
        <trans-unit id="8ea198b4f1da676b4f4ee1391b5cd9f398dde45f" translate="yes" xml:space="preserve">
          <source>Patch can be used as a context manager, with the with statement. Here the patching applies to the indented block after the with statement. If you use &amp;ldquo;as&amp;rdquo; then the patched object will be bound to the name after the &amp;ldquo;as&amp;rdquo;; very useful if &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is creating a mock object for you.</source>
          <target state="translated">パッチは、withステートメントを使用して、コンテキストマネージャとして使用できます。ここで、パッチはwithステートメントの後のインデントされたブロックに適用されます。「as」を使用する場合、パッチを適用したオブジェクトは「as」の後の名前にバインドされます。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;がモックオブジェクトを作成している場合に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e8cdaeb7364059eaef7f04272544a953feb7db50" translate="yes" xml:space="preserve">
          <source>Patching Descriptors and Proxy Objects</source>
          <target state="translated">ディスクリプタとプロキシオブジェクトのパッチ適用</target>
        </trans-unit>
        <trans-unit id="88e8009ab58a0045c0df41b27cf1d23b8f9e089e" translate="yes" xml:space="preserve">
          <source>Patching a class replaces the class with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;&lt;em&gt;instance&lt;/em&gt;. If the class is instantiated in the code under test then it will be the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; of the mock that will be used.</source>
          <target state="translated">クラスにパッチを適用すると、クラスが&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;&lt;em&gt;インスタンスに&lt;/em&gt;置き換えられ&lt;em&gt;ます&lt;/em&gt;。テスト中のコードでクラスがインスタンス化される場合、使用されるのはモックの&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="b4f699dcf689fd2e162beca6b9bc0b1522d6aec3" translate="yes" xml:space="preserve">
          <source>Path Browser</source>
          <target state="translated">パスブラウザ</target>
        </trans-unit>
        <trans-unit id="02e6896120f3e34789cebea70374b537c5ff361e" translate="yes" xml:space="preserve">
          <source>Path Objects</source>
          <target state="translated">パスオブジェクト</target>
        </trans-unit>
        <trans-unit id="075cd299fd28fb73d267fb35307dd296768150cc" translate="yes" xml:space="preserve">
          <source>Path for shell if not on Windows; otherwise &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Windowsにない場合のシェルのパス。それ以外の場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3261580ab23ac434d20083846bb4cb68cc50af6" translate="yes" xml:space="preserve">
          <source>Path objects are traversable using the &lt;code&gt;/&lt;/code&gt; operator.</source>
          <target state="translated">パスオブジェクトは、 &lt;code&gt;/&lt;/code&gt; 演算子を使用して移動できます。</target>
        </trans-unit>
        <trans-unit id="3a047b8534e4641b171f8a06143fb41928c581a6" translate="yes" xml:space="preserve">
          <source>Path objects expose the following features of &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">Pathオブジェクトは、&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;オブジェクトの次の機能を公開します。</target>
        </trans-unit>
        <trans-unit id="90d064bd19c4c3b16b5c26cced735433742488ee" translate="yes" xml:space="preserve">
          <source>Path to the base directory for the user site-packages. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getuserbase&quot;&gt;&lt;code&gt;getuserbase()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local&lt;/code&gt; for UNIX and Mac OS X non-framework builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; for Windows. This value is used by Distutils to compute the installation directories for scripts, data files, Python modules, etc. for the &lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;user installation scheme&lt;/a&gt;. See also &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザーサイトパッケージのベースディレクトリへのパス。&lt;a href=&quot;#site.getuserbase&quot;&gt; &lt;code&gt;getuserbase()&lt;/code&gt; &lt;/a&gt;がまだ呼び出されていない場合は、 &lt;code&gt;None&lt;/code&gt; になります。デフォルト値は &lt;code&gt;~/.local&lt;/code&gt; UNIXおよびMac OS X非フレームワークのビルドのために、 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt;のMacフレームワークのビルドのために、と &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; \ Pythonの Windows用。 Distutilsは、この値を使用して、&lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;ユーザーインストールスキームの&lt;/a&gt;スクリプト、データファイル、Pythonモジュールなどのインストールディレクトリを計算します。&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;PYTHONUSERBASE&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf71823696007bb6f84923873842b648e97c250a" translate="yes" xml:space="preserve">
          <source>Path to the extension module.</source>
          <target state="translated">拡張モジュールへのパス。</target>
        </trans-unit>
        <trans-unit id="d24fcb72bd38ac60753fa7a12e92464c2f4e5e6d" translate="yes" xml:space="preserve">
          <source>Path to the file of the module.</source>
          <target state="translated">モジュールのファイルへのパス。</target>
        </trans-unit>
        <trans-unit id="082345dbe035cd147fedde8ccbd5cf46cf3be213" translate="yes" xml:space="preserve">
          <source>Path to the user site-packages for the running Python. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getusersitepackages&quot;&gt;&lt;code&gt;getusersitepackages()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; for UNIX and non-framework Mac OS X builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; on Windows. This directory is a site directory, which means that &lt;code&gt;.pth&lt;/code&gt; files in it will be processed.</source>
          <target state="translated">実行中のPythonのユーザーサイトパッケージへのパス。&lt;a href=&quot;#site.getusersitepackages&quot;&gt; &lt;code&gt;getusersitepackages()&lt;/code&gt; &lt;/a&gt;がまだ呼び出されていない場合は、 &lt;code&gt;None&lt;/code&gt; にすることができます。デフォルト値は &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; &lt;em&gt;X.Y&lt;/em&gt; / site-packages for UNIX and non-framework Mac OS X builds、 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt; / lib / python / site-packages for Mac framework builds、and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; \ Python \ Python &lt;em&gt;XY&lt;/em&gt; \ site-packages on Windows。このディレクトリはサイトディレクトリです。つまり、その中の &lt;code&gt;.pth&lt;/code&gt; ファイルが処理されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7f2f6a9b74e163afaf5e72c91f4670c3537cace" translate="yes" xml:space="preserve">
          <source>Paths are immutable and hashable. Paths of a same flavour are comparable and orderable. These properties respect the flavour&amp;rsquo;s case-folding semantics:</source>
          <target state="translated">パスは不変でハッシュ可能です。同じフレーバーのパスは比較可能であり、順序付け可能です。これらのプロパティは、フレーバーのケースフォールディングセマンティクスを尊重します。</target>
        </trans-unit>
        <trans-unit id="03da30c8c0f70e648054fb4f58fddd43a85d5727" translate="yes" xml:space="preserve">
          <source>Paths of a different flavour compare unequal and cannot be ordered:</source>
          <target state="translated">異なる味のパスは不平等な比較をして、注文することができません。</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="e25673f3169af15d776c516ae19aa4030127504a" translate="yes" xml:space="preserve">
          <source>Pattern Matching: The Gestalt Approach</source>
          <target state="translated">パターンマッチング:ゲシュタルト・アプローチ</target>
        </trans-unit>
        <trans-unit id="9c9057f9e71b9a8f041ec30f3fc4350458b54b40" translate="yes" xml:space="preserve">
          <source>Pattern to match test files (&lt;code&gt;test*.py&lt;/code&gt; default)</source>
          <target state="translated">テストファイルと一致するパターン（デフォルトは &lt;code&gt;test*.py&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d5b7a4e35290d6ec7c8f9bf1b9c4ba3420b3d7a4" translate="yes" xml:space="preserve">
          <source>Patterns are matched against the fully qualified test method name as imported by the test loader.</source>
          <target state="translated">パターンは、テストローダによってインポートされた完全修飾されたテストメソッド名と照合されます。</target>
        </trans-unit>
        <trans-unit id="6d0a9052da3aad8ee1a8be3a656e5124e56d40bc" translate="yes" xml:space="preserve">
          <source>Patterns that contain a wildcard character (&lt;code&gt;*&lt;/code&gt;) are matched against the test name using &lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt;&lt;/a&gt;; otherwise simple case-sensitive substring matching is used.</source>
          <target state="translated">ワイルドカード文字（ &lt;code&gt;*&lt;/code&gt; ）を含むパターンは、&lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt; &lt;/a&gt;を使用してテスト名と照合されます。それ以外の場合は、大文字と小文字を区別する単純な部分文字列マッチングが使用されます。</target>
        </trans-unit>
        <trans-unit id="8d24192acf2841a4026f40125b004cd345b161f3" translate="yes" xml:space="preserve">
          <source>Pause receiving.</source>
          <target state="translated">受信を一時停止します。</target>
        </trans-unit>
        <trans-unit id="88bbbed3b2561167e07ac594ad41aef9e33b6843" translate="yes" xml:space="preserve">
          <source>Pause the receiving end of the transport. No data will be passed to the protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;protocol.data_received()&lt;/code&gt;&lt;/a&gt; method until &lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt;&lt;code&gt;resume_reading()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">トランスポートの受信側を一時停止します。&lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt; &lt;code&gt;resume_reading()&lt;/code&gt; &lt;/a&gt;が呼び出されるまで、データはプロトコルの&lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt; &lt;code&gt;protocol.data_received()&lt;/code&gt; &lt;/a&gt;メソッドに渡されません。</target>
        </trans-unit>
        <trans-unit id="e99a78e932fa2ab9679cec16918f17a775c3a277" translate="yes" xml:space="preserve">
          <source>Pen control</source>
          <target state="translated">ペンコントロール</target>
        </trans-unit>
        <trans-unit id="e12a091922aa0b42fc8a921c944e57c5b09dfc58" translate="yes" xml:space="preserve">
          <source>PendingDeprecationWarning</source>
          <target state="translated">PendingDeprecationWarning</target>
        </trans-unit>
        <trans-unit id="1c591f7d8be7ebb8d527e8d468608e3bbf82ef75" translate="yes" xml:space="preserve">
          <source>Percentage. Multiplies the number by 100 and displays in fixed (&lt;code&gt;'f'&lt;/code&gt;) format, followed by a percent sign.</source>
          <target state="translated">パーセンテージ。数値に100を掛けて、固定（ &lt;code&gt;'f'&lt;/code&gt; ）形式で表示し、その後にパーセント記号を付けます。</target>
        </trans-unit>
        <trans-unit id="0af99ae4d5cee179954d90004dcf8ada413c9870" translate="yes" xml:space="preserve">
          <source>Perform &amp;ldquo;rich comparisons&amp;rdquo; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Specifically, &lt;code&gt;lt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;le(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;eq(a,
b)&lt;/code&gt; is equivalent to &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;ne(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a != b&lt;/code&gt;, &lt;code&gt;gt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt; b&lt;/code&gt; and &lt;code&gt;ge(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a
&amp;gt;= b&lt;/code&gt;. Note that these functions can return any value, which may or may not be interpretable as a Boolean value. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information about rich comparisons.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間で「豊富な比較」を実行します。具体的には、 &lt;code&gt;lt(a, b)&lt;/code&gt; は &lt;code&gt;a &amp;lt; b&lt;/code&gt; と同等、 &lt;code&gt;le(a, b)&lt;/code&gt; は &lt;code&gt;a &amp;lt;= b&lt;/code&gt; と同等、 &lt;code&gt;eq(a, b)&lt;/code&gt; は &lt;code&gt;a == b&lt;/code&gt; と同等、 &lt;code&gt;ne(a, b)&lt;/code&gt; は &lt;code&gt;a != b&lt;/code&gt; と同等、 &lt;code&gt;gt(a, b)&lt;/code&gt; は &lt;code&gt;a &amp;gt; b&lt;/code&gt; と同等であり、 &lt;code&gt;ge(a, b)&lt;/code&gt; は &lt;code&gt;a &amp;gt;= b&lt;/code&gt; と同等です。これらの関数は任意の値を返す可能性があることに注意してください。ブール値として解釈される場合と解釈されない場合があります。豊富な比較の詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;比較&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c68ed757eddddca4140ad328e3ef6838439a850" translate="yes" xml:space="preserve">
          <source>Perform RLE-decompression on the data, as per the binhex4 standard. The algorithm uses &lt;code&gt;0x90&lt;/code&gt; after a byte as a repeat indicator, followed by a count. A count of &lt;code&gt;0&lt;/code&gt; specifies a byte value of &lt;code&gt;0x90&lt;/code&gt;. The routine returns the decompressed data, unless data input data ends in an orphaned repeat indicator, in which case the &lt;a href=&quot;#binascii.Incomplete&quot;&gt;&lt;code&gt;Incomplete&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">binhex4標準に従って、データに対してRLE解凍を実行します。アルゴリズムは、バイトの後の &lt;code&gt;0x90&lt;/code&gt; を繰り返しインジケータとして使用し、その後にカウントを続けます。カウント &lt;code&gt;0&lt;/code&gt; は、バイト値 &lt;code&gt;0x90&lt;/code&gt; を指定します。ルーチンは、データ入力データが孤立した繰り返しインジケータで終了しない限り、解凍されたデータを返します。この場合、&lt;a href=&quot;#binascii.Incomplete&quot;&gt; &lt;code&gt;Incomplete&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="90a0de185e04f628d3f3df798475782c0edfc543" translate="yes" xml:space="preserve">
          <source>Perform a &lt;code&gt;statvfs()&lt;/code&gt; system call on the given path. The return value is an object whose attributes describe the filesystem on the given path, and correspond to the members of the &lt;code&gt;statvfs&lt;/code&gt; structure, namely: &lt;code&gt;f_bsize&lt;/code&gt;, &lt;code&gt;f_frsize&lt;/code&gt;, &lt;code&gt;f_blocks&lt;/code&gt;, &lt;code&gt;f_bfree&lt;/code&gt;, &lt;code&gt;f_bavail&lt;/code&gt;, &lt;code&gt;f_files&lt;/code&gt;, &lt;code&gt;f_ffree&lt;/code&gt;, &lt;code&gt;f_favail&lt;/code&gt;, &lt;code&gt;f_flag&lt;/code&gt;, &lt;code&gt;f_namemax&lt;/code&gt;, &lt;code&gt;f_fsid&lt;/code&gt;.</source>
          <target state="translated">指定されたパスで &lt;code&gt;statvfs()&lt;/code&gt; システムコールを実行します。戻り値は、その属性が指定されたパス上のファイルシステムを記述し、そして対応のメンバーすることを目的とする &lt;code&gt;statvfs&lt;/code&gt; ：構造、すなわち &lt;code&gt;f_bsize&lt;/code&gt; 、 &lt;code&gt;f_frsize&lt;/code&gt; 、 &lt;code&gt;f_blocks&lt;/code&gt; 、 &lt;code&gt;f_bfree&lt;/code&gt; 、 &lt;code&gt;f_bavail&lt;/code&gt; 、 &lt;code&gt;f_files&lt;/code&gt; 、 &lt;code&gt;f_ffree&lt;/code&gt; 、 &lt;code&gt;f_favail&lt;/code&gt; 、 &lt;code&gt;f_flag&lt;/code&gt; 、 &lt;code&gt;f_namemax&lt;/code&gt; 、 &lt;code&gt;f_fsid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97dfa565438c05e03e5adaed406695350ebb06ae" translate="yes" xml:space="preserve">
          <source>Perform a TurtleScreen update. To be used when tracer is turned off.</source>
          <target state="translated">TurtleScreen の更新を実行します。トレーサーがオフの時に使用します。</target>
        </trans-unit>
        <trans-unit id="24fd06359ec8ff4397b0b107098fc691c9b96e96" translate="yes" xml:space="preserve">
          <source>Perform a string formatting operation. The string on which this method is called can contain literal text or replacement fields delimited by braces &lt;code&gt;{}&lt;/code&gt;. Each replacement field contains either the numeric index of a positional argument, or the name of a keyword argument. Returns a copy of the string where each replacement field is replaced with the string value of the corresponding argument.</source>
          <target state="translated">文字列フォーマット操作を実行します。このメソッドが呼び出される文字列には、中括弧 &lt;code&gt;{}&lt;/code&gt; で区切られたリテラルテキストまたは置換フィールドを含めることができます。各置換フィールドには、位置引数の数値インデックスまたはキーワード引数の名前が含まれます。各置換フィールドが対応する引数の文字列値で置き換えられた文字列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="4a98062a7ec8da49e613524456695bb57c3b3e79" translate="yes" xml:space="preserve">
          <source>Perform binhex4 style RLE-compression on &lt;em&gt;data&lt;/em&gt; and return the result.</source>
          <target state="translated">&lt;em&gt;データに対して&lt;/em&gt; binhex4スタイルのRLE圧縮を実行し、結果を返します。</target>
        </trans-unit>
        <trans-unit id="41580f5611bc59f8749d680e8e8ac34cb9061d02" translate="yes" xml:space="preserve">
          <source>Perform case-insensitive matching; expressions like &lt;code&gt;[A-Z]&lt;/code&gt; will also match lowercase letters. Full Unicode matching (such as &lt;code&gt;&amp;Uuml;&lt;/code&gt; matching &lt;code&gt;&amp;uuml;&lt;/code&gt;) also works unless the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;re.ASCII&lt;/code&gt;&lt;/a&gt; flag is used to disable non-ASCII matches. The current locale does not change the effect of this flag unless the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; flag is also used. Corresponds to the inline flag &lt;code&gt;(?i)&lt;/code&gt;.</source>
          <target state="translated">大文字と小文字を区別しないマッチングを実行します。 &lt;code&gt;[A-Z]&lt;/code&gt; ような表現も小文字に一致します。（例えば、完全なUnicodeマッチング &lt;code&gt;&amp;Uuml;&lt;/code&gt; マッチング &lt;code&gt;&amp;uuml;&lt;/code&gt; ない場合）にも動作&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;re.ASCII&lt;/code&gt; &lt;/a&gt;フラグが無効非ASCIIマッチするために使用されます。現在のロケールは、&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt;フラグも使用されない限り、このフラグの効果を変更しません。インラインフラグ &lt;code&gt;(?i)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="7141f68329ade808b5b6fd81e8da76f298f39c47" translate="yes" xml:space="preserve">
          <source>Perform hexbin4 binary-to-ASCII translation and return the resulting string. The argument should already be RLE-coded, and have a length divisible by 3 (except possibly the last fragment).</source>
          <target state="translated">hexbin4 binary-to-ASCII変換を行い、結果の文字列を返します。引数は既にRLEコード化されていて、3で割り切れる長さでなければなりません(最後のフラグメントを除く)。</target>
        </trans-unit>
        <trans-unit id="3f0f2162e62c2dca45b2095b72d3889ce4cdfc84" translate="yes" xml:space="preserve">
          <source>Perform multiple patches in a single call. It takes the object to be patched (either as an object or a string to fetch the object by importing) and keyword arguments for the patches:</source>
          <target state="translated">1回の呼び出しで複数のパッチを実行します。パッチを適用するオブジェクト (インポートしてオブジェクトを取得するためのオブジェクトまたは文字列のいずれか)と、パッチのためのキーワード引数を取ります。</target>
        </trans-unit>
        <trans-unit id="c9a6c66a017976ffd70385b244358e43640500c2" translate="yes" xml:space="preserve">
          <source>Perform the SSL setup handshake.</source>
          <target state="translated">SSL セットアップのハンドシェイクを実行します。</target>
        </trans-unit>
        <trans-unit id="b80254279aa6118dbc6274921622d6049737abc7" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of an &lt;code&gt;lstat()&lt;/code&gt; system call on the given path. Similar to &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, but does not follow symbolic links. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定されたパスで &lt;code&gt;lstat()&lt;/code&gt; システムコールに相当するものを実行します。&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; に&lt;/a&gt;似ていますが、シンボリックリンクをたどりません。&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="c4e238899a46acc05e2b8ba043d7a9eaa794d1ac" translate="yes" xml:space="preserve">
          <source>Perform the lock operation &lt;em&gt;operation&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). See the Unix manual &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;flock(2)&lt;/a&gt;&lt;/em&gt; for details. (On some systems, this function is emulated using &lt;code&gt;fcntl()&lt;/code&gt;.)</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdで&lt;/em&gt;ロック操作&lt;em&gt;操作&lt;/em&gt;を実行し&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッドを提供するファイルオブジェクトも受け入れられます）。詳細については、Unixマニュアルの&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;flock（2）&lt;/a&gt;&lt;/em&gt;を参照してください。 （一部のシステムでは、この関数は &lt;code&gt;fcntl()&lt;/code&gt; を使用してエミュレートされます。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfcdf8211b54c6585eddff98af9183765d8e2f90" translate="yes" xml:space="preserve">
          <source>Perform the operation &lt;em&gt;cmd&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). The values used for &lt;em&gt;cmd&lt;/em&gt; are operating system dependent, and are available as constants in the &lt;a href=&quot;#module-fcntl&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; module, using the same names as used in the relevant C header files. The argument &lt;em&gt;arg&lt;/em&gt; can either be an integer value, or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. With an integer value, the return value of this function is the integer return value of the C &lt;code&gt;fcntl()&lt;/code&gt; call. When the argument is bytes it represents a binary structure, e.g. created by &lt;a href=&quot;struct#struct.pack&quot;&gt;&lt;code&gt;struct.pack()&lt;/code&gt;&lt;/a&gt;. The binary data is copied to a buffer whose address is passed to the C &lt;code&gt;fcntl()&lt;/code&gt; call. The return value after a successful call is the contents of the buffer, converted to a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. The length of the returned object will be the same as the length of the &lt;em&gt;arg&lt;/em&gt; argument. This is limited to 1024 bytes. If the information returned in the buffer by the operating system is larger than 1024 bytes, this is most likely to result in a segmentation violation or a more subtle data corruption.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdで&lt;/em&gt;操作&lt;em&gt;cmd&lt;/em&gt;を実行し&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッドを提供するファイルオブジェクトも受け入れられます）。&lt;em&gt;cmdに&lt;/em&gt;使用される値はオペレーティングシステムに依存し、関連するCヘッダーファイルで使用されているのと同じ名前を使用して、&lt;a href=&quot;#module-fcntl&quot;&gt; &lt;code&gt;fcntl&lt;/code&gt; &lt;/a&gt;モジュールで定数として使用できます。引数&lt;em&gt;arg&lt;/em&gt;は、整数値または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトのいずれかです。整数値の場合、この関数の戻り値はCの &lt;code&gt;fcntl()&lt;/code&gt; 呼び出しの整数の戻り値です。引数がバイトの場合、それは、たとえば&lt;a href=&quot;struct#struct.pack&quot;&gt; &lt;code&gt;struct.pack()&lt;/code&gt; &lt;/a&gt;によって作成されたバイナリ構造を表します&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;。バイナリー・データは、アドレスがC &lt;code&gt;fcntl()&lt;/code&gt; 呼び出しに渡されるバッファーにコピーされます。呼び出しが成功した後の戻り値は、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトに変換されたバッファの内容です。返されるオブジェクトの長さは、&lt;em&gt;arg&lt;/em&gt;引数の長さと同じになります。これは1024バイトに制限されています。オペレーティングシステムによってバッファに返される情報が1024バイトより大きい場合、セグメンテーション違反またはより微妙なデータ破損が発生する可能性が最も高くなります。</target>
        </trans-unit>
        <trans-unit id="4283e2dce7960c4de4bf96707e7142a28f6a01fc" translate="yes" xml:space="preserve">
          <source>Perform the same operation as &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt;, but return a tuple &lt;code&gt;(new_string,
number_of_subs_made)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;と同じ操作を実行しますが、タプル &lt;code&gt;(new_string, number_of_subs_made)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="2446d19393c74ec728f3a7d446f5c53c7a11237e" translate="yes" xml:space="preserve">
          <source>Performing these calculations with at least one extra sign extension bit in a finite two&amp;rsquo;s complement representation (a working bit-width of &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; or more) is sufficient to get the same result as if there were an infinite number of sign bits.</source>
          <target state="translated">同じ結果を得るには、有限の2の補数表現で少なくとも1つの追加の符号拡張ビット（ &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; 以上の作業ビット幅）でこれらの計算を実行するだけで十分です。無限の数の符号ビットがあるかのように。</target>
        </trans-unit>
        <trans-unit id="640ef075e3b653fe4832abcbc49e2b91ac8bdeae" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.close(fd)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;os.close(fd)&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="752e3fe0e837a39bb8a813d706f8b3821bc1a177" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="7fb5c5f5cf17f84ca944b4fa1f5dd157aa23e9c8" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="6ebc44eecc02e0e3eabcbf63d742a9d04931ce6c" translate="yes" xml:space="preserve">
          <source>Performs a Boolean operation. The operation name can be found in &lt;code&gt;cmp_op[opname]&lt;/code&gt;.</source>
          <target state="translated">ブール演算を実行します。操作名は &lt;code&gt;cmp_op[opname]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="89f680388cf82b0508f15de49df30d63281b29a9" translate="yes" xml:space="preserve">
          <source>Performs the SSL shutdown handshake, which removes the TLS layer from the underlying socket, and returns the underlying socket object. This can be used to go from encrypted operation over a connection to unencrypted. The returned socket should always be used for further communication with the other side of the connection, rather than the original socket.</source>
          <target state="translated">SSL シャットダウンハンドシェイクを実行して、基盤となるソケットから TLS レイヤーを削除し、基盤となるソケットオブジェクトを返します。これは、暗号化された接続上での操作を暗号化されていない接続に移行するために使用することができます。返されたソケットは、元のソケットではなく、接続の反対側との通信に使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="d60454ef21734ebe87a8161d440e5d61b544e188" translate="yes" xml:space="preserve">
          <source>Performs the following translations in decoding by default:</source>
          <target state="translated">デフォルトでは、以下の翻訳をデコードで実行します。</target>
        </trans-unit>
        <trans-unit id="aabfe29ace57f01ba61c63da5353a7eae4366011" translate="yes" xml:space="preserve">
          <source>Performs the same function as &lt;a href=&quot;#email.utils.parsedate&quot;&gt;&lt;code&gt;parsedate()&lt;/code&gt;&lt;/a&gt;, but returns either &lt;code&gt;None&lt;/code&gt; or a 10-tuple; the first 9 elements make up a tuple that can be passed directly to &lt;a href=&quot;time#time.mktime&quot;&gt;&lt;code&gt;time.mktime()&lt;/code&gt;&lt;/a&gt;, and the tenth is the offset of the date&amp;rsquo;s timezone from UTC (which is the official term for Greenwich Mean Time) &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. If the input string has no timezone, the last element of the tuple returned is &lt;code&gt;0&lt;/code&gt;, which represents UTC. Note that indexes 6, 7, and 8 of the result tuple are not usable.</source>
          <target state="translated">&lt;a href=&quot;#email.utils.parsedate&quot;&gt; &lt;code&gt;parsedate()&lt;/code&gt; &lt;/a&gt;と同じ機能を実行しますが、 &lt;code&gt;None&lt;/code&gt; または10タプルを返します。最初の9つの要素は、&lt;a href=&quot;time#time.mktime&quot;&gt; &lt;code&gt;time.mktime()&lt;/code&gt; に&lt;/a&gt;直接渡すことができるタプルを構成し、10番目は、UTC（グリニッジ標準時の公式用語）からの日付のタイムゾーンのオフセットです&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。入力文字列にタイムゾーンがない場合、返されるタプルの最後の要素は &lt;code&gt;0&lt;/code&gt; で、これはUTCを表します。結果タプルのインデックス6、7、および8は使用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="89ddfd2579b261a0b50909628ce2423da1fab7c8" translate="yes" xml:space="preserve">
          <source>Performs the template substitution, returning a new string. &lt;em&gt;mapping&lt;/em&gt; is any dictionary-like object with keys that match the placeholders in the template. Alternatively, you can provide keyword arguments, where the keywords are the placeholders. When both &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt; are given and there are duplicates, the placeholders from &lt;em&gt;kwds&lt;/em&gt; take precedence.</source>
          <target state="translated">テンプレートの置換を実行し、新しい文字列を返します。&lt;em&gt;マッピング&lt;/em&gt;は、テンプレート内のプレースホルダーと一致するキーを持つ、辞書に似たオブジェクトです。または、キーワードがプレースホルダーであるキーワード引数を指定することもできます。&lt;em&gt;マッピング&lt;/em&gt;と&lt;em&gt;kwdsの&lt;/em&gt;両方が指定されており、重複がある場合、&lt;em&gt;kwds&lt;/em&gt;のプレースホルダーが優先されます。</target>
        </trans-unit>
        <trans-unit id="bd9e556fabad08ed102376a515af641b54a566ff" translate="yes" xml:space="preserve">
          <source>Permanent Redirect &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;, Section 3 (Experimental)</source>
          <target state="translated">永久リダイレクト&lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;、セクション3（試験的）</target>
        </trans-unit>
        <trans-unit id="57b018dc8100faa36ae221817b9a0becde766f73" translate="yes" xml:space="preserve">
          <source>Permanently remove deleted items from selected mailbox. Generates an &lt;code&gt;EXPUNGE&lt;/code&gt; response for each deleted message. Returned data contains a list of &lt;code&gt;EXPUNGE&lt;/code&gt; message numbers in order received.</source>
          <target state="translated">選択したメールボックスから削除済みアイテムを完全に削除します。削除されたメッセージごとに &lt;code&gt;EXPUNGE&lt;/code&gt; 応答を生成します。返されるデータには、受信した順に &lt;code&gt;EXPUNGE&lt;/code&gt; メッセージ番号のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="922a2aae018739de2e7f95b2906f6a7bda5805d9" translate="yes" xml:space="preserve">
          <source>Permission bits.</source>
          <target state="translated">パーミッションビット。</target>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="translated">許可拒否</target>
        </trans-unit>
        <trans-unit id="9240c3d4a70b95b9e2dc2b61c69fc6e9243c67cc" translate="yes" xml:space="preserve">
          <source>PermissionError</source>
          <target state="translated">PermissionError</target>
        </trans-unit>
        <trans-unit id="0bf008ca5d81230e81034b7868f292b6c45a642d" translate="yes" xml:space="preserve">
          <source>Permissions and times of directories are copied with &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt;, individual files are copied using &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ディレクトリの権限と時間は&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;でコピーされ、個々のファイルは&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;を使用してコピーされます。</target>
        </trans-unit>
        <trans-unit id="e504e73bf0a3461a62cbd35fe470dfc8bf2c5dcf" translate="yes" xml:space="preserve">
          <source>Permitscontrol() to returns the event</source>
          <target state="translated">イベントを返すためにPermitscontrol()を使用します。</target>
        </trans-unit>
        <trans-unit id="c5b5b88cbddaa8e1656fda5a833d01be846fc40f" translate="yes" xml:space="preserve">
          <source>Permutations are emitted in lexicographic sort order. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the permutation tuples will be produced in sorted order.</source>
          <target state="translated">順列は辞書式ソート順で出力されます。したがって、入力&lt;em&gt;イテラブル&lt;/em&gt;がソートされている場合、順列タプルはソートされた順序で生成されます。</target>
        </trans-unit>
        <trans-unit id="0117d320fce0d888119832805e38e4a506f88c57" translate="yes" xml:space="preserve">
          <source>Persistence module which stores non-string data.</source>
          <target state="translated">文字列以外のデータを保存する永続化モジュール。</target>
        </trans-unit>
        <trans-unit id="d71bbb391ec68a612e1e020d3a59cdde37f5adcf" translate="yes" xml:space="preserve">
          <source>Persistence of External Objects</source>
          <target state="translated">外部オブジェクトの永続性</target>
        </trans-unit>
        <trans-unit id="f203458ed70f830ecf62ab5ec4fd43db183fc0d2" translate="yes" xml:space="preserve">
          <source>Personalization</source>
          <target state="translated">Personalization</target>
        </trans-unit>
        <trans-unit id="98fd5b480af814b89b456d84e3868a121619c9aa" translate="yes" xml:space="preserve">
          <source>Personalization string length (maximum length accepted by constructors).</source>
          <target state="translated">パーソナライゼーション文字列の長さ(コンストラクタで受け入れられる最大の長さ)。</target>
        </trans-unit>
        <trans-unit id="bb60655fa1c14e25e42619b562af366048efc9d5" translate="yes" xml:space="preserve">
          <source>Personalization together with the keyed mode can also be used to derive different keys from a single one.</source>
          <target state="translated">キー付きモードと合わせてパーソナライズすることで、1つのキーから異なるキーを派生させることも可能です。</target>
        </trans-unit>
        <trans-unit id="56b2fd265bce2ea4249697652f9737fe616a79da" translate="yes" xml:space="preserve">
          <source>Peter Funk</source>
          <target state="translated">ピーター・ファンク</target>
        </trans-unit>
        <trans-unit id="503cfd892a68c3d0070d442675777ad188230916" translate="yes" xml:space="preserve">
          <source>Picklability</source>
          <target state="translated">Picklability</target>
        </trans-unit>
        <trans-unit id="b9ac15b70935eb9e679e679f6c189fa09ae67d5d" translate="yes" xml:space="preserve">
          <source>Pickle interface constructor registration for extension types.</source>
          <target state="translated">Pickleインターフェイスのコンストラクタに拡張子タイプを登録します。</target>
        </trans-unit>
        <trans-unit id="da804ce72ffb2456e57ba07cb24c19e51d793b78" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. If the connection was previously lost, re-establishes the connection. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">レコードの属性ディクショナリをピクルし、バイナリ形式でソケットに書き込みます。ソケットにエラーがある場合は、パケットを通知なしで破棄します。接続が以前に失われた場合は、接続を再確立します。受信側のレコードを&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;に&lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt;するには、makeLogRecord（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="1c56053b7d0e78c6fbae95ab53af9ceef0a3c06a" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">レコードの属性ディクショナリをピクルし、バイナリ形式でソケットに書き込みます。ソケットにエラーがある場合は、パケットを通知なしで破棄します。受信側のレコードを&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;に&lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt;するには、makeLogRecord（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="c94932969478efe7a329a1a295b5659be6c229f7" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary in binary format with a length prefix, and returns it ready for transmission across the socket. The details of this operation are equivalent to:</source>
          <target state="translated">レコードの属性ディクショナリを長さプレフィックス付きのバイナリ形式でピクルし、ソケットを介して送信できるように返します。この操作の詳細は以下と同等です。</target>
        </trans-unit>
        <trans-unit id="1e451c6df0e9534b87f8f317ad70746e8d408ad1" translate="yes" xml:space="preserve">
          <source>Pickling</source>
          <target state="translated">Pickling</target>
        </trans-unit>
        <trans-unit id="479f26b691b28108bc27a86443e601e66de60606" translate="yes" xml:space="preserve">
          <source>Pickling Class Instances</source>
          <target state="translated">クラスインスタンスのピックリング</target>
        </trans-unit>
        <trans-unit id="77e2601ad4aef60f1ee4bac62cdc2791e4c29d92" translate="yes" xml:space="preserve">
          <source>Pickling enums created with the functional API can be tricky as frame stack implementation details are used to try and figure out which module the enumeration is being created in (e.g. it will fail if you use a utility function in separate module, and also may not work on IronPython or Jython). The solution is to specify the module name explicitly as follows:</source>
          <target state="translated">関数APIで作成された列挙型をピックリングするのは、フレームスタックの実装の詳細を使用して、列挙型がどのモジュールで作成されているかを把握しようとするため、厄介な場合があります(例えば、ユーティリティ関数を別のモジュールで使用すると失敗しますし、IronPythonやJythonでは動作しない可能性があります)。解決策としては、以下のようにモジュール名を明示的に指定することです。</target>
        </trans-unit>
        <trans-unit id="102aedc4c02618208304c84353a4e744e7173c74" translate="yes" xml:space="preserve">
          <source>Pickling: &lt;code&gt;__reduce__&lt;/code&gt;, &lt;code&gt;__reduce_ex__&lt;/code&gt;, &lt;code&gt;__getinitargs__&lt;/code&gt;, &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__getstate__&lt;/code&gt; and &lt;code&gt;__setstate__&lt;/code&gt;</source>
          <target state="translated">酸洗： &lt;code&gt;__reduce__&lt;/code&gt; 、 &lt;code&gt;__reduce_ex__&lt;/code&gt; 、 &lt;code&gt;__getinitargs__&lt;/code&gt; 、 &lt;code&gt;__getnewargs__&lt;/code&gt; 、 &lt;code&gt;__getstate__&lt;/code&gt; と &lt;code&gt;__setstate__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ca931fcc670468a1619dccb933e3c60b540bff" translate="yes" xml:space="preserve">
          <source>Pipes and Queues</source>
          <target state="translated">パイプとキュー</target>
        </trans-unit>
        <trans-unit id="e64d6f8a78d48c8a48daa8e413ed0a9ee19f4ecd" translate="yes" xml:space="preserve">
          <source>Pipes are not supported, so the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; methods are not implemented.</source>
          <target state="translated">パイプはサポートされていないため、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;メソッドは実装されていません。</target>
        </trans-unit>
        <trans-unit id="e56e96590262671b12c88a46c7794d2d395c71cd" translate="yes" xml:space="preserve">
          <source>Piping output of your program to tools like &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head(1)&lt;/a&gt;&lt;/em&gt; will cause a &lt;code&gt;SIGPIPE&lt;/code&gt; signal to be sent to your process when the receiver of its standard output closes early. This results in an exception like &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt;. To handle this case, wrap your entry point to catch this exception as follows:</source>
          <target state="translated">プログラムの出力を&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head（1）&lt;/a&gt;&lt;/em&gt;などのツールにパイピングすると、標準出力のレシーバーが早く閉じたときに &lt;code&gt;SIGPIPE&lt;/code&gt; シグナルがプロセスに送信されます。これにより、 &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt; ような例外が発生します。このケースを処理するには、次のようにエントリポイントをラップして、この例外をキャッチします。</target>
        </trans-unit>
        <trans-unit id="e7abd9437945479aed23328dd738203dfb013266" translate="yes" xml:space="preserve">
          <source>Planet</source>
          <target state="translated">Planet</target>
        </trans-unit>
        <trans-unit id="123a7f2fcc9ae7cbbbd7c7627a483853a9708dab" translate="yes" xml:space="preserve">
          <source>Platform</source>
          <target state="translated">Platform</target>
        </trans-unit>
        <trans-unit id="38b10a3fef9531f82571079e6c0973fde8c3c114" translate="yes" xml:space="preserve">
          <source>Platform Support</source>
          <target state="translated">プラットフォームサポート</target>
        </trans-unit>
        <trans-unit id="ff905013a44bbeb970c42652913293a3fa1300b9" translate="yes" xml:space="preserve">
          <source>Platform dependent, but if non-zero, uniquely identifies the file for a given value of &lt;code&gt;st_dev&lt;/code&gt;. Typically:</source>
          <target state="translated">プラットフォームに依存しますが、ゼロ以外の場合は、 &lt;code&gt;st_dev&lt;/code&gt; の特定の値のファイルを一意に識別します。通常：</target>
        </trans-unit>
        <trans-unit id="7084e0741690a908772be6f36f009af9b7c5145c" translate="yes" xml:space="preserve">
          <source>Platform dependent:</source>
          <target state="translated">プラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="8ca44e603d25c586c9bf6c4ad1e35d8888ae2165" translate="yes" xml:space="preserve">
          <source>Platform specific modules</source>
          <target state="translated">プラットフォーム固有のモジュール</target>
        </trans-unit>
        <trans-unit id="0558191147d4364c96f342a5f33275e60632ba76" translate="yes" xml:space="preserve">
          <source>Platform-dependent efficient copy operations</source>
          <target state="translated">プラットフォームに依存した効率的なコピー操作</target>
        </trans-unit>
        <trans-unit id="89f3176950b094ee092b083d87a3ea394294bab2" translate="yes" xml:space="preserve">
          <source>Platform-specific notes</source>
          <target state="translated">プラットフォーム固有の注意事項</target>
        </trans-unit>
        <trans-unit id="9fe47e8a69eece1d617e5e0b2949d5eb25ff3b3a" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemDefault&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemDefault&lt;/code&gt; サウンドを再生します。</target>
        </trans-unit>
        <trans-unit id="566e59746b2e159c689466c2026b06a04a488084" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemExclamation&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemExclamation&lt;/code&gt; サウンドを再生します。</target>
        </trans-unit>
        <trans-unit id="1367087c57e69f911b20e62488a2818796ce3f56" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemHand&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemHand&lt;/code&gt; サウンドを再生します。</target>
        </trans-unit>
        <trans-unit id="286413e479c251f2c8b7505d0c7e872201bd0efe" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemQuestion&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemQuestion&lt;/code&gt; サウンドを再生します。</target>
        </trans-unit>
        <trans-unit id="e5a38385bd1801f94f6afcc5224a41a5634b9ea5" translate="yes" xml:space="preserve">
          <source>Play the sound repeatedly. The &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; flag must also be used to avoid blocking. Cannot be used with &lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt;&lt;code&gt;SND_MEMORY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">音を繰り返し再生します。ブロックを回避するには、&lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; &lt;/a&gt;フラグも使用する必要があります。&lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt; &lt;code&gt;SND_MEMORY&lt;/code&gt; &lt;/a&gt;と一緒に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="e5c41e818401745189aa92dc2b5b8f589f4936d2" translate="yes" xml:space="preserve">
          <source>Please consult the SQLite documentation about the possible values for the first argument and the meaning of the second and third argument depending on the first one. All necessary constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">最初の引数の可能な値と、最初の引数に応じた2番目と3番目の引数の意味については、SQLiteのドキュメントを参照してください。必要な定数はすべて&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールで利用できます。</target>
        </trans-unit>
        <trans-unit id="965d48bb52ce2d9d91cc30b01489f2b19edc118e" translate="yes" xml:space="preserve">
          <source>Please note that a much more powerful error checking mechanism is available through the &lt;code&gt;errcheck&lt;/code&gt; attribute; see the reference manual for details.</source>
          <target state="translated">&lt;code&gt;errcheck&lt;/code&gt; 属性を使用すると、はるかに強力なエラーチェックメカニズムを利用できることに注意してください。詳細はリファレンスマニュアルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c8fc0f93e5dd7c64f8d2e2fe1baaf4f1c7641a90" translate="yes" xml:space="preserve">
          <source>Please note that config parsers don&amp;rsquo;t support escaping of comment prefixes so using &lt;em&gt;inline_comment_prefixes&lt;/em&gt; may prevent users from specifying option values with characters used as comment prefixes. When in doubt, avoid setting &lt;em&gt;inline_comment_prefixes&lt;/em&gt;. In any circumstances, the only way of storing comment prefix characters at the beginning of a line in multiline values is to interpolate the prefix, for example:</source>
          <target state="translated">構成パーサーはコメント接頭辞のエスケープをサポートしていないため、&lt;em&gt;inline_comment_prefixes&lt;/em&gt;を使用すると、ユーザーがコメント接頭辞として使用される文字を含むオプション値を指定できない場合があることに注意してください。疑問がある場合は、&lt;em&gt;inline_comment_prefixesの&lt;/em&gt;設定を避けて&lt;em&gt;ください&lt;/em&gt;。どのような場合でも、複数行の値の行の先頭にコメントプレフィックス文字を格納する唯一の方法は、プレフィックスを補間することです。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="310bbccd36313c76e203cfc5b0ebdd8ca95d2449" translate="yes" xml:space="preserve">
          <source>Please note that default values have precedence over fallback values. For instance, in our example the &lt;code&gt;'CompressionLevel'&lt;/code&gt; key was specified only in the &lt;code&gt;'DEFAULT'&lt;/code&gt; section. If we try to get it from the section &lt;code&gt;'topsecret.server.com'&lt;/code&gt;, we will always get the default, even if we specify a fallback:</source>
          <target state="translated">デフォルト値はフォールバック値よりも優先されることに注意してください。たとえば、この例では、 &lt;code&gt;'CompressionLevel'&lt;/code&gt; キーは &lt;code&gt;'DEFAULT'&lt;/code&gt; セクションでのみ指定されています。セクション &lt;code&gt;'topsecret.server.com'&lt;/code&gt; から取得しようとすると、フォールバックを指定した場合でも、常にデフォルトが取得されます。</target>
        </trans-unit>
        <trans-unit id="86e0817628ee18c1a8ed5a0fc40828bffeaed3c5" translate="yes" xml:space="preserve">
          <source>Please note that direct use of bytecode files (and thus not source code files) inhibits your modules from being usable by all Python implementations or new versions of Python which change the bytecode format.</source>
          <target state="translated">バイトコードファイル(ソースコードファイルではない)を直接使用すると、すべてのPython実装やバイトコード形式を変更した新しいバージョンのPythonでモジュールが使用できなくなることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dfa6d4d5a47f1ee1b1fd351d19df2d53810a47a9" translate="yes" xml:space="preserve">
          <source>Please note that this function works like &lt;a href=&quot;#locale.format_string&quot;&gt;&lt;code&gt;format_string()&lt;/code&gt;&lt;/a&gt; but will only work for exactly one &lt;code&gt;%char&lt;/code&gt; specifier. For example, &lt;code&gt;'%f'&lt;/code&gt; and &lt;code&gt;'%.0f'&lt;/code&gt; are both valid specifiers, but &lt;code&gt;'%f KiB'&lt;/code&gt; is not.</source>
          <target state="translated">この関数は&lt;a href=&quot;#locale.format_string&quot;&gt; &lt;code&gt;format_string()&lt;/code&gt; と&lt;/a&gt;同様に機能しますが、1つの &lt;code&gt;%char&lt;/code&gt; 指定子に対してのみ機能することに注意してください。たとえば、 &lt;code&gt;'%f'&lt;/code&gt; と &lt;code&gt;'%.0f'&lt;/code&gt; はどちらも有効な指定子ですが、 &lt;code&gt;'%f KiB'&lt;/code&gt; はそうではありません。</target>
        </trans-unit>
        <trans-unit id="373685c0595172990b3ace0f5f8fe1c0ca75870e" translate="yes" xml:space="preserve">
          <source>Please note: there are ways to add a set of key-value pairs in a single operation. When you use a regular dictionary in those operations, the order of the keys will be ordered. For example:</source>
          <target state="translated">注意:1回の操作でキーと値のペアのセットを追加する方法があります。これらの操作で通常の辞書を使用する場合、キーの順序は順序付けられます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2ea35b5666ef240cb6a4493c17fe5ba6382d03f6" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for more information on best practices.</source>
          <target state="translated">ベストプラクティスの詳細については、&lt;a href=&quot;ssl#ssl-security&quot;&gt;セキュリティ&lt;/a&gt;に関する考慮事項をお読みください。</target>
        </trans-unit>
        <trans-unit id="47bc58981366eed814a57a39e644b2e08a3b6870" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt;&lt;code&gt;os.supports_follow_symlinks&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt; &lt;code&gt;os.supports_follow_symlinks&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0ae02dfe03795c3955ac3c8f1cf68ffc72a268cb" translate="yes" xml:space="preserve">
          <source>Plus corresponds to the unary prefix plus operator in Python. This operation applies the context precision and rounding, so it is &lt;em&gt;not&lt;/em&gt; an identity operation.</source>
          <target state="translated">Plusは、Pythonの単項接頭辞plus演算子に対応します。この操作はコンテキストの精度と丸めを適用するため、恒等操作ではあり&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0330491d58c610056c9cfabfdbebacfad2431d29" translate="yes" xml:space="preserve">
          <source>Pointer instances are created by calling the &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; function on a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type:</source>
          <target state="translated">ポインタインスタンスは、&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;タイプで&lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt;関数を呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="f705c08361997cb6f7df09dbc0c27afef4b025f1" translate="yes" xml:space="preserve">
          <source>Pointer instances can also be indexed with integers:</source>
          <target state="translated">ポインタインスタンスは整数でインデックス化することもできます。</target>
        </trans-unit>
        <trans-unit id="482aa3fcf0e95b3b47d95bdfe561af13938b8ff1" translate="yes" xml:space="preserve">
          <source>Pointer instances have a &lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt;&lt;code&gt;contents&lt;/code&gt;&lt;/a&gt; attribute which returns the object to which the pointer points, the &lt;code&gt;i&lt;/code&gt; object above:</source>
          <target state="translated">ポインタインスタンスには、ポインタが指すオブジェクト、上の &lt;code&gt;i&lt;/code&gt; オブジェクトを返す&lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt; &lt;code&gt;contents&lt;/code&gt; &lt;/a&gt;属性があります。</target>
        </trans-unit>
        <trans-unit id="c5b722fc5ad9faac57dfe90f51b7e6e51ad5a968" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="translated">Pointers</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="f13ca4e051430c60cd600a3b936cd44760445204" translate="yes" xml:space="preserve">
          <source>Policies is a low-level mechanism to alter the behavior of functions like &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt;&lt;code&gt;asyncio.get_event_loop()&lt;/code&gt;&lt;/a&gt;. See also the main &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;policies section&lt;/a&gt; for more details.</source>
          <target state="translated">ポリシーは、&lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt; &lt;code&gt;asyncio.get_event_loop()&lt;/code&gt; &lt;/a&gt;などの関数の動作を変更するための低レベルのメカニズムです。詳細については、メインの&lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;ポリシーセクション&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="f6e19b461365ea4d2f9baa4f1541cdbc31638a3c" translate="yes" xml:space="preserve">
          <source>Policy Objects</source>
          <target state="translated">ポリシーオブジェクト</target>
        </trans-unit>
        <trans-unit id="b9d50f1346b401ffaac22261d9a0445a59b9c3ef" translate="yes" xml:space="preserve">
          <source>Policy objects can also be combined using the addition operator, producing a policy object whose settings are a combination of the non-default values of the summed objects:</source>
          <target state="translated">ポリシーオブジェクトは、加算演算子を使用して結合することもでき、合計されたオブジェクトのデフォルト以外の値を組み合わせた設定を持つポリシーオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="10db6aaa1dae6d5ca93baae8300239ae0d491fd7" translate="yes" xml:space="preserve">
          <source>Policy objects give the email package the flexibility to handle all these disparate use cases.</source>
          <target state="translated">ポリシーオブジェクトは、メールパッケージに柔軟性を与え、これらの異なるユースケースをすべて処理することができます。</target>
        </trans-unit>
        <trans-unit id="cc59ba147a78b1cba0063b32337a5117142efb00" translate="yes" xml:space="preserve">
          <source>Policy objects should implement the APIs defined in the &lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt;&lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt;&lt;/a&gt; abstract base class.</source>
          <target state="translated">ポリシーオブジェクトは、&lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt; &lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt; &lt;/a&gt;抽象基本クラスで定義されたAPIを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="1809b1c47a1a0f8ffda4a1194b61478553d974fe" translate="yes" xml:space="preserve">
          <source>Polling Objects</source>
          <target state="translated">ポーリングオブジェクト</target>
        </trans-unit>
        <trans-unit id="5d4332b021cb2ecbffef0b518c251198f0483519" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, -1, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">登録されたファイル記述子のセットをポーリングし、レポートするイベントまたはエラーがある記述子の &lt;code&gt;(fd, event)&lt;/code&gt; 2タプルを含む空の可能性があるリストを返します。&lt;em&gt;fd&lt;/em&gt;はファイル記述子であり、&lt;em&gt;event&lt;/em&gt;はその記述子について報告されたイベントに設定されたビットを持つビットマスクです。入力を待機するための &lt;code&gt;POLLIN&lt;/code&gt; 、記述子が書き込み可能であることを示す &lt;code&gt;POLLOUT&lt;/code&gt; などです。空のリストは、呼び出しがタイムアウトし、ファイル記述子にレポートするイベントがなかったことを示します。&lt;em&gt;タイムアウト&lt;/em&gt;が指定されている場合、システムがイベントを待機してから戻るまでの時間をミリ秒単位で指定します。&lt;em&gt;タイムアウト&lt;/em&gt;が省略された場合、-1、また&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、このポーリングオブジェクトのイベントが発生するまで、呼び出しはブロックされます。</target>
        </trans-unit>
        <trans-unit id="8235db5fc164907dd37c9f8fe6afa7077606c5a7" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, negative, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">登録されたファイル記述子のセットをポーリングし、レポートするイベントまたはエラーがある記述子の &lt;code&gt;(fd, event)&lt;/code&gt; 2タプルを含む空の可能性があるリストを返します。&lt;em&gt;fd&lt;/em&gt;はファイル記述子であり、&lt;em&gt;event&lt;/em&gt;はその記述子について報告されたイベントに設定されたビットを持つビットマスクです。入力を待機するための &lt;code&gt;POLLIN&lt;/code&gt; 、記述子が書き込み可能であることを示す &lt;code&gt;POLLOUT&lt;/code&gt; などです。空のリストは、呼び出しがタイムアウトし、ファイル記述子にレポートするイベントがなかったことを示します。&lt;em&gt;タイムアウト&lt;/em&gt;が指定されている場合、システムがイベントを待機してから戻るまでの時間をミリ秒単位で指定します。&lt;em&gt;タイムアウト&lt;/em&gt;が省略された場合、負の場合、また&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、このポーリングオブジェクトのイベントが発生するまで、呼び出しはブロックされます。</target>
        </trans-unit>
        <trans-unit id="c27a9bb77fd2f98033253218b572e79bc22251dc" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, and also push the new &lt;em&gt;item&lt;/em&gt;. The heap size doesn&amp;rsquo;t change. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;ヒープ&lt;/em&gt;から最小のアイテムをポップして返し、新しい&lt;em&gt;アイテムを&lt;/em&gt;プッシュし&lt;em&gt;ます&lt;/em&gt;。ヒープサイズは変更されません。ヒープが空の場合、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="f9a06f0699ad3349431c67e1a47549dabc15760e" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised. To access the smallest item without popping it, use &lt;code&gt;heap[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ヒープ&lt;/em&gt;から最小の項目をポップして返し、ヒープの不変を維持します。ヒープが空の場合、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;が発生します。ポップせずに最小のアイテムにアクセスするには、 &lt;code&gt;heap[0]&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="ee245e4e5d6d950b1854efc1afc869a99c34f7b0" translate="yes" xml:space="preserve">
          <source>Pop the last-pushed input source from the input stack. This is the same method used internally when the lexer reaches EOF on a stacked input stream.</source>
          <target state="translated">最後に押し出された入力ソースを入力スタックからポップします。これは、スタック化された入力ストリームでレキサーがEOFに到達したときに内部的に使用される方法と同じです。</target>
        </trans-unit>
        <trans-unit id="055df3f558473d7ece8b7d50e1df0ab063d8b702" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a number. title is the title of the dialog window, prompt is a text mostly describing what numerical information to input. default: default value, minval: minimum value for input, maxval: maximum value for input The number input must be in the range minval .. maxval if these are given. If not, a hint is issued and the dialog remains open for correction. Return the number input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">数値を入力するためのダイアログウィンドウをポップアップします。titleはダイアログウィンドウのタイトル、promptは入力する数値情報を主に説明するテキストです。default：デフォルト値、minval：入力の最小値、maxval：入力の最大値これらの値を指定する場合、入力値はminval .. maxvalの範囲でなければなりません。そうでない場合、ヒントが発行され、ダイアログは修正のために開いたままになります。入力した数値を返します。ダイアログがキャンセルされた場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5a30e7e9c16d1d2289a14843ccfa17e59bc5f258" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a string. Parameter title is the title of the dialog window, prompt is a text mostly describing what information to input. Return the string input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">文字列を入力するためのダイアログウィンドウをポップアップします。パラメータタイトルはダイアログウィンドウのタイトル、プロンプトは入力する情報を主に説明するテキストです。文字列入力を返します。ダイアログがキャンセルされた場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="aceabe368eed8bf1ef8907fda06132011ac87f29" translate="yes" xml:space="preserve">
          <source>Popen Constructor</source>
          <target state="translated">ポペンコンストラクタ</target>
        </trans-unit>
        <trans-unit id="c58508b5bfbc193df948f2c96619660505caf807" translate="yes" xml:space="preserve">
          <source>Popen Objects</source>
          <target state="translated">ポープンオブジェクト</target>
        </trans-unit>
        <trans-unit id="a46cb4ea3a3611a4d180ffb9a39ca4d82b2ad2d0" translate="yes" xml:space="preserve">
          <source>Popen and the other functions in this module that use it raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt; with arguments &lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;cwd&lt;/code&gt;, and &lt;code&gt;env&lt;/code&gt;. The value for &lt;code&gt;args&lt;/code&gt; may be a single string or a list of strings, depending on platform.</source>
          <target state="translated">Popenおよびそれを使用するこのモジュールの他の関数は、 &lt;code&gt;executable&lt;/code&gt; 引数、 &lt;code&gt;args&lt;/code&gt; 、 &lt;code&gt;cwd&lt;/code&gt; 、および &lt;code&gt;env&lt;/code&gt; 引数を持つ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; を発生させます。 &lt;code&gt;args&lt;/code&gt; の値は、プラットフォームに応じて、単一の文字列または文字列のリストになります。</target>
        </trans-unit>
        <trans-unit id="3b17551906939bf00cd6210cfc6e1b7c22e1ad7f" translate="yes" xml:space="preserve">
          <source>Popen objects are supported as context managers via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</source>
          <target state="translated">Popenオブジェクトは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを介してコンテキストマネージャーとしてサポートされています。終了時に、標準のファイル記述子が閉じられ、プロセスが待機します。</target>
        </trans-unit>
        <trans-unit id="2dd4b5da656a3d45200c0848ee3cb43ac97a6338" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; iterables from the stack, joins them in a single tuple, and pushes the result. Implements iterable unpacking in tuple displays &lt;code&gt;(*x, *y, *z)&lt;/code&gt;.</source>
          <target state="translated">ポップはスタックからイテラブルを&lt;em&gt;数え&lt;/em&gt;、それらを単一のタプルに結合し、結果をプッシュします。タプル表示 &lt;code&gt;(*x, *y, *z)&lt;/code&gt; 反復可能なアンパックを実装します。</target>
        </trans-unit>
        <trans-unit id="5814db5efa9b8e3b6caaad0167cd52a48d05cad9" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; mappings from the stack, merges them into a single dictionary, and pushes the result. Implements dictionary unpacking in dictionary displays &lt;code&gt;{**x, **y, **z}&lt;/code&gt;.</source>
          <target state="translated">ポップはスタックからマッピングを&lt;em&gt;カウント&lt;/em&gt;し、それらを単一の辞書にマージして、結果をプッシュします。辞書の表示 &lt;code&gt;{**x, **y, **z}&lt;/code&gt; 辞書のアンパックを実装します。</target>
        </trans-unit>
        <trans-unit id="f955b29f96865f975ad2cc90b3761ccd0a745b04" translate="yes" xml:space="preserve">
          <source>Pops TOS and delegates to it as a subiterator from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOSをポップし、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;からサブイテレータとしてそれに委任します。</target>
        </trans-unit>
        <trans-unit id="e75775f93f745fd74be7c11015a4c8773b0fb9e4" translate="yes" xml:space="preserve">
          <source>Pops TOS and yields it from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOSをポップし、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;から生成します。</target>
        </trans-unit>
        <trans-unit id="6868d2193ffcb37b3d1f2442c16bbba7237b9adc" translate="yes" xml:space="preserve">
          <source>Pops two values from the stack. If SECOND is not None and TOS is true unwinds the EXCEPT_HANDLER block which was created when the exception was caught and pushes &lt;code&gt;NULL&lt;/code&gt; to the stack.</source>
          <target state="translated">スタックから2つの値をポップします。SECONDがNoneでなく、TOSがtrueの場合、例外がキャッチされたときに作成されたEXCEPT_HANDLERブロックを巻き戻し、 &lt;code&gt;NULL&lt;/code&gt; をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="e6936131642fa3e4ba0d0f2eb70bda60239e2636" translate="yes" xml:space="preserve">
          <source>Population standard deviation of data.</source>
          <target state="translated">データの人口標準偏差。</target>
        </trans-unit>
        <trans-unit id="18813ec1cc24c6306c29b1b2d825acb9bd81a19c" translate="yes" xml:space="preserve">
          <source>Population variance of data.</source>
          <target state="translated">データの母集団分散。</target>
        </trans-unit>
        <trans-unit id="5a089a07054447bb48b9434607e3b38a83e6a79f" translate="yes" xml:space="preserve">
          <source>Port number as integer, if present</source>
          <target state="translated">ポート番号を整数で指定します。</target>
        </trans-unit>
        <trans-unit id="b9f18b923e08eb677137525e942c79d70f214b5f" translate="yes" xml:space="preserve">
          <source>Portable Bitmap Files</source>
          <target state="translated">ポータブルビットマップファイル</target>
        </trans-unit>
        <trans-unit id="abcb4ef75def5eeb0dfd26e2d30fca465df66512" translate="yes" xml:space="preserve">
          <source>Portable Graymap Files</source>
          <target state="translated">ポータブルグレイマップファイル</target>
        </trans-unit>
        <trans-unit id="0655d96b4660aed951fededfbd01c7c59119ecd3" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics</source>
          <target state="translated">ポータブルネットワークグラフィックス</target>
        </trans-unit>
        <trans-unit id="ee01b2134ec356d26acdc9982e7f3833060105a8" translate="yes" xml:space="preserve">
          <source>Portable Pixmap Files</source>
          <target state="translated">ポータブル ピクマップファイル</target>
        </trans-unit>
        <trans-unit id="23882c575954a0789bf02aba9e6dd01f539bc738" translate="yes" xml:space="preserve">
          <source>Portuguese</source>
          <target state="translated">Portuguese</target>
        </trans-unit>
        <trans-unit id="59b624bfe60ebbef01b74f793b39f506221b6c00" translate="yes" xml:space="preserve">
          <source>Positional and keyword arguments may also be passed to &lt;a href=&quot;#atexit.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; to be passed along to the registered function when it is called:</source>
          <target state="translated">位置引数とキーワード引数を&lt;a href=&quot;#atexit.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;に渡して、呼び出されたときに登録済み関数に渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="f8b8ca1d6ad9d89dd32a11078244dcd70423b419" translate="yes" xml:space="preserve">
          <source>Positional arguments are files to compile or directories that contain source files, traversed recursively. If no argument is given, behave as if the command line was &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">定位置引数は、コンパイルするファイル、またはソースファイルを含むディレクトリで、再帰的に走査されます。引数を指定しない場合、コマンドラインが &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt; かのように動作します。</target>
        </trans-unit>
        <trans-unit id="06fe9ace9667aa168708159444d8188edd059f54" translate="yes" xml:space="preserve">
          <source>Positive</source>
          <target state="translated">Positive</target>
        </trans-unit>
        <trans-unit id="81a9a0719b90c9b53d8f587213315a80505f6dff" translate="yes" xml:space="preserve">
          <source>Positive and negative infinity, positive and negative zero, and nans, are formatted as &lt;code&gt;inf&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;nan&lt;/code&gt; respectively, regardless of the precision.</source>
          <target state="translated">正と負の無限大、正と負のゼロ、nans は、精度に関係なく、それぞれ &lt;code&gt;inf&lt;/code&gt; 、 &lt;code&gt;-inf&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;-0&lt;/code&gt; 、 &lt;code&gt;nan&lt;/code&gt; としてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="fbadb91c0f2d470c8467dae6bb12a446a01cc7db" translate="yes" xml:space="preserve">
          <source>Possible states are:</source>
          <target state="translated">可能性のある状態は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="63f69fd6d6f413090e0f4f3fa400b942a162733e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; to disable workarounds for broken X.509 certificates.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; に指定&lt;/a&gt;できる値は、壊れたX.509証明書の回避策を無効にします。</target>
        </trans-unit>
        <trans-unit id="4ba63e08aceb3c446a295cf92ec1b942aa49b732" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, CRLs of all certificates in the peer cert chain are checked.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; の&lt;/a&gt;可能な値。このモードでは、ピア証明書チェーン内のすべての証明書のCRLがチェックされます。</target>
        </trans-unit>
        <trans-unit id="681006f1919e6854682d4ccba2e10d6f1ec838d7" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, certificate revocation lists (CRLs) are not checked. By default OpenSSL does neither require nor verify CRLs.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; の&lt;/a&gt;可能な値。このモードでは、証明書失効リスト（CRL）はチェックされません。デフォルトでは、OpenSSLはCRLを必要とせず、検証もしません。</target>
        </trans-unit>
        <trans-unit id="834cb8dd69db769ec9e67cc37db58e1dcab7a3c4" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, only the peer cert is checked but none of the intermediate CA certificates. The mode requires a valid CRL that is signed by the peer cert&amp;rsquo;s issuer (its direct ancestor CA). If no proper CRL has has been loaded with &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt;&lt;/a&gt;, validation will fail.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; の&lt;/a&gt;可能な値。このモードでは、ピア証明書のみがチェックされ、中間CA証明書はチェックされません。このモードでは、ピア証明書の発行者（直接の祖先CA）によって署名された有効なCRLが必要です。&lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt; &lt;/a&gt;で適切なCRLがロードされていない場合、検証は失敗します。</target>
        </trans-unit>
        <trans-unit id="81033163c8cc54904575c439b4a3466834d6c011" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. It instructs OpenSSL to prefer trusted certificates when building the trust chain to validate a certificate. This flag is enabled by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; の&lt;/a&gt;可能な値。証明書を検証するための信頼チェーンを構築するときに信頼できる証明書を優先するようにOpenSSLに指示します。このフラグはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="4d3909c91e1e0e21475e53c7bf078037dcbcbfb5" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. Except for &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt;, it is the default mode. With client-side sockets, just about any cert is accepted. Validation errors, such as untrusted or expired cert, are ignored and do not abort the TLS/SSL handshake.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; の&lt;/a&gt;可能な値、または&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;cert_reqs&lt;/code&gt; パラメータ。&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; を&lt;/a&gt;除き、これがデフォルトのモードです。クライアント側のソケットでは、ほぼすべての証明書が受け入れられます。信頼できない証明書や期限切れの証明書などの検証エラーは無視され、TLS / SSLハンドシェイクは中止されません。</target>
        </trans-unit>
        <trans-unit id="d8c9444f11c8fa0cbf7a1cf96c440bde31779c0e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In client mode, &lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt;&lt;code&gt;CERT_OPTIONAL&lt;/code&gt;&lt;/a&gt; has the same meaning as &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt;. It is recommended to use &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; for client-side sockets instead.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; の&lt;/a&gt;可能な値、または&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;cert_reqs&lt;/code&gt; パラメータ。クライアントモードでは、&lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt; &lt;code&gt;CERT_OPTIONAL&lt;/code&gt; &lt;/a&gt;はCERT_REQUIREDと同じ意味&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;。代わりに、クライアント側のソケットには&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5069135a65407b38a1f42b151ee1613e108b36f0" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In this mode, certificates are required from the other side of the socket connection; an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; will be raised if no certificate is provided, or if its validation fails. This mode is &lt;strong&gt;not&lt;/strong&gt; sufficient to verify a certificate in client mode as it does not match hostnames. &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; must be enabled as well to verify the authenticity of a cert. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and enables &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; の&lt;/a&gt;可能な値、または&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;cert_reqs&lt;/code&gt; パラメータ。このモードでは、ソケット接続の反対側からの証明書が必要です。証明書が提供されない場合、またはその検証が失敗した場合は、&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;が発生します。このモードはホスト名と一致しないため、クライアントモードで証明書を検証するに&lt;strong&gt;は&lt;/strong&gt;不十分です。証明書の信頼性を確認するには、&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt;も有効にする必要があります。&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; は&lt;/a&gt;使用しています&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; を&lt;/a&gt;し、可能&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; を&lt;/a&gt;デフォルトで。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2907ec0c1e89d9ea47e904c9015b71f6024c1e0" translate="yes" xml:space="preserve">
          <source>Possible value for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If this is given as &lt;em&gt;mode&lt;/em&gt;, the &lt;code&gt;spawn*()&lt;/code&gt; functions will not return until the new process has run to completion and will return the exit code of the process the run is successful, or &lt;code&gt;-signal&lt;/code&gt; if a signal kills the process.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;ファミリーの関数に対する&lt;em&gt;モード&lt;/em&gt;パラメーターの可能な値。これが&lt;em&gt;mode&lt;/em&gt;として指定されている場合、 &lt;code&gt;spawn*()&lt;/code&gt; 関数は、新しいプロセスが完了するまで実行されず、実行が成功したプロセスの終了コードを返します。または、シグナルがプロセスを強制 &lt;code&gt;-signal&lt;/code&gt; 場合は-signalを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="595379185db1d5c8fb2fa29686c56e99c74f8a16" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If either of these values is given, the &lt;code&gt;spawn*()&lt;/code&gt; functions will return as soon as the new process has been created, with the process id as the return value.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;ファミリーの関数に対する&lt;em&gt;モード・&lt;/em&gt;パラメーターの可能な値。これらの値のいずれかが指定されている場合、 &lt;code&gt;spawn*()&lt;/code&gt; 関数は、新しいプロセスが作成されるとすぐに戻り、プロセスIDを戻り値として返します。</target>
        </trans-unit>
        <trans-unit id="98444d7e6ce2c20d6c8fa33edbb3a360778be71c" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. These are less portable than those listed above. &lt;a href=&quot;#os.P_DETACH&quot;&gt;&lt;code&gt;P_DETACH&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt;, but the new process is detached from the console of the calling process. If &lt;a href=&quot;#os.P_OVERLAY&quot;&gt;&lt;code&gt;P_OVERLAY&lt;/code&gt;&lt;/a&gt; is used, the current process will be replaced; the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; function will not return.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;ファミリーの関数に対する&lt;em&gt;モード・&lt;/em&gt;パラメーターの可能な値。これらは、上記のリストよりも移植性が低くなります。&lt;a href=&quot;#os.P_DETACH&quot;&gt; &lt;code&gt;P_DETACH&lt;/code&gt; &lt;/a&gt;はP_NOWAITに似てい&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; &lt;/a&gt;が、新しいプロセスは呼び出しプロセスのコンソールから切り離されます。場合&lt;a href=&quot;#os.P_OVERLAY&quot;&gt; &lt;code&gt;P_OVERLAY&lt;/code&gt; が&lt;/a&gt;使用され、現在のプロセスが置き換えられます。&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;機能は戻りません。</target>
        </trans-unit>
        <trans-unit id="ad471bf2d14a9f069fad782304e156715b0c3a8d" translate="yes" xml:space="preserve">
          <source>Post an article using the &lt;code&gt;POST&lt;/code&gt; command. The &lt;em&gt;data&lt;/em&gt; argument is either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary reading, or any iterable of bytes objects (representing raw lines of the article to be posted). It should represent a well-formed news article, including the required headers. The &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt; method automatically escapes lines beginning with &lt;code&gt;.&lt;/code&gt; and appends the termination line.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; コマンドを使用して記事を投稿します。&lt;em&gt;データ&lt;/em&gt;引数のいずれかである&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;バイナリ読み出しのために開かれた、またはバイト・オブジェクトの任意の反復可能（掲示される物品の生ラインを表します）。必要なヘッダーを含め、整形式のニュース記事を表す必要があります。&lt;a href=&quot;#nntplib.NNTP.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt;メソッドが自動的に始まる行をエスケープ &lt;code&gt;.&lt;/code&gt; 終了行を追加します。</target>
        </trans-unit>
        <trans-unit id="b63bfd48fc2a1b5e7e89f48afbac27f355349bc7" translate="yes" xml:space="preserve">
          <source>Post-init processing</source>
          <target state="translated">インプット後の処理</target>
        </trans-unit>
        <trans-unit id="be382487def51aeab399ad276c635ee4d94d07d1" translate="yes" xml:space="preserve">
          <source>Power and logarithmic functions</source>
          <target state="translated">力関数と対数関数</target>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="178cd9d66a4b1bce25cb5e2cea3f2128b6ffceb3" translate="yes" xml:space="preserve">
          <source>PowerShell Core</source>
          <target state="translated">パワーシェルコア</target>
        </trans-unit>
        <trans-unit id="db3d345a9a0fd91ab9f33caeeec48958f5ce609f" translate="yes" xml:space="preserve">
          <source>Practical Programming in Tcl and Tk</source>
          <target state="translated">TclとTkで実践的なプログラミング</target>
        </trans-unit>
        <trans-unit id="490f67184b68428ab7db592bcebf51431ff864dc" translate="yes" xml:space="preserve">
          <source>Precision (optional), given as a &lt;code&gt;'.'&lt;/code&gt; (dot) followed by the precision. If specified as &lt;code&gt;'*'&lt;/code&gt; (an asterisk), the actual precision is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the value to convert comes after the precision.</source>
          <target state="translated">精度（オプション）、 &lt;code&gt;'.'&lt;/code&gt; として指定 （ドット）の後に精度が続きます。 &lt;code&gt;'*'&lt;/code&gt; （アスタリスク）として指定した場合、実際の精度は&lt;em&gt;値&lt;/em&gt;のタプルの次の要素から読み取られ、変換する値は精度の後に来ます。</target>
        </trans-unit>
        <trans-unit id="449d850ff0a5b8d2b97bfb75bf9d9fdcf80b0bd6" translate="yes" xml:space="preserve">
          <source>Precomputed tables</source>
          <target state="translated">事前に計算されたテーブル</target>
        </trans-unit>
        <trans-unit id="71527b4452262b2288bec21620f4277e5383be6c" translate="yes" xml:space="preserve">
          <source>Predicates (expressions within square brackets) must be preceded by a tag name, an asterisk, or another predicate. &lt;code&gt;position&lt;/code&gt; predicates must be preceded by a tag name.</source>
          <target state="translated">述語（角括弧内の式）の前には、タグ名、アスタリスク、または別の述語を付ける必要があります。 &lt;code&gt;position&lt;/code&gt; 述語の前にはタグ名を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="707ddefda8b9d501a1d63dad3fcb74d0cb28b51a" translate="yes" xml:space="preserve">
          <source>Preface</source>
          <target state="translated">Preface</target>
        </trans-unit>
        <trans-unit id="bde7dd0530c513b11cc390474cc050f812b6f3db" translate="yes" xml:space="preserve">
          <source>Prefix each line with the time since the program started. Only used while tracing.</source>
          <target state="translated">各行にプログラムが開始されてからの時間を接頭辞として指定します。トレース中にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="515863d159aa2e0dd47fb1d5d6139a71281b0192" translate="yes" xml:space="preserve">
          <source>Prefix, net mask and host mask</source>
          <target state="translated">プレフィックス、ネットマスク、ホストマスク</target>
        </trans-unit>
        <trans-unit id="93c620f6932937b6bc7d5291dc67d610857f5774" translate="yes" xml:space="preserve">
          <source>Prefixes any opcode which has an argument too big to fit into the default one byte. &lt;em&gt;ext&lt;/em&gt; holds an additional byte which act as higher bits in the argument. For each opcode, at most three prefixal &lt;code&gt;EXTENDED_ARG&lt;/code&gt; are allowed, forming an argument from two-byte to four-byte.</source>
          <target state="translated">引数が大きすぎてデフォルトの1バイトに収まらないオペコードをプレフィックスします。&lt;em&gt;ext&lt;/em&gt;は、引数の上位ビットとして機能する追加のバイトを保持します。各オペコードに対して、最大3つのプレフィックス &lt;code&gt;EXTENDED_ARG&lt;/code&gt; が許可され、2バイトから4バイトの引数を形成します。</target>
        </trans-unit>
        <trans-unit id="aeab98f5a34301d71af8d216207f9b70ea4d1b4f" translate="yes" xml:space="preserve">
          <source>Prepare a record for handling.</source>
          <target state="translated">取り扱うための記録を用意する。</target>
        </trans-unit>
        <trans-unit id="eaabdea71a53a1d312c68621c7a08cafc4337348" translate="yes" xml:space="preserve">
          <source>Prepare for object destruction. &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; provides a default implementation of this method that calls the instance&amp;rsquo;s &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オブジェクト破棄の準備をします。&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;は、インスタンスの&lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すこのメソッドのデフォルト実装を提供します。</target>
        </trans-unit>
        <trans-unit id="48869057a3eaf9b7bda4696b2a82f8cd32542baa" translate="yes" xml:space="preserve">
          <source>Prepare the request by connecting to a proxy server. The &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;type&lt;/em&gt; will replace those of the instance, and the instance&amp;rsquo;s selector will be the original URL given in the constructor.</source>
          <target state="translated">プロキシサーバーに接続してリクエストを準備します。&lt;em&gt;ホスト&lt;/em&gt;と&lt;em&gt;タイプは&lt;/em&gt;、インスタンスのものに置き換えられますし、インスタンスのセレクタはコンストラクタで与えられたオリジナルのURLになります。</target>
        </trans-unit>
        <trans-unit id="2acd0ee4e2fd08e925fed1556f93a353652b578a" translate="yes" xml:space="preserve">
          <source>Prepares a record for queuing. The object returned by this method is enqueued.</source>
          <target state="translated">キューイングのためのレコードを準備します。このメソッドで返されたオブジェクトは、キューに入れられます。</target>
        </trans-unit>
        <trans-unit id="57c6749aaa2e639ce29f4d77ddbc7ec04736e80b" translate="yes" xml:space="preserve">
          <source>Pretend &lt;em&gt;count&lt;/em&gt; lines have been changed, starting with line &lt;em&gt;start&lt;/em&gt;. If &lt;em&gt;changed&lt;/em&gt; is supplied, it specifies whether the affected lines are marked as having been changed (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=True&lt;/code&gt;) or unchanged (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=False&lt;/code&gt;).</source>
          <target state="translated">ふりをする&lt;em&gt;count&lt;/em&gt;行が変更され、行&lt;em&gt;startから始まり&lt;/em&gt;ます。&lt;em&gt;changed&lt;/em&gt;が指定さ&lt;em&gt;れて&lt;/em&gt;いる場合、影響を受ける行が変更されている（&lt;em&gt;changed &lt;/em&gt; &lt;code&gt;=True&lt;/code&gt; ）か、変更&lt;em&gt;されてい&lt;/em&gt;ない（&lt;em&gt;changed &lt;/em&gt; &lt;code&gt;=False&lt;/code&gt; ）かを指定します。</target>
        </trans-unit>
        <trans-unit id="2f8b9077326620d7215f339382fae5f8dbf5068b" translate="yes" xml:space="preserve">
          <source>Pretend the whole window has been changed, for purposes of drawing optimizations.</source>
          <target state="translated">最適化の描画のために、ウィンドウ全体が変更されたふりをします。</target>
        </trans-unit>
        <trans-unit id="d69b44b9452e785bcf38a58c11f7522588dd0a12" translate="yes" xml:space="preserve">
          <source>Pretty printing:</source>
          <target state="translated">綺麗な印刷です。</target>
        </trans-unit>
        <trans-unit id="cc5593cc97eb10b44d34d3ef59a99ba2b518cf84" translate="yes" xml:space="preserve">
          <source>Pretty top</source>
          <target state="translated">プリティトップ</target>
        </trans-unit>
        <trans-unit id="736722dd09c56467e68847a72672d85b5b4e5d72" translate="yes" xml:space="preserve">
          <source>PrettyPrinter Objects</source>
          <target state="translated">PrettyPrinter オブジェクト</target>
        </trans-unit>
        <trans-unit id="3d63214479b7b9df436250cf443d77f3a6172b43" translate="yes" xml:space="preserve">
          <source>Prev (previous)</source>
          <target state="translated">前(前)</target>
        </trans-unit>
        <trans-unit id="1706782b9fb86817417f6ce4b4b586638f5f4fe5" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt; from blocking. In particular, this prevents the background thread from being joined automatically when the process exits &amp;ndash; see &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">防止は、&lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt;ブロックから。特に、これにより、プロセスの終了時にバックグラウンドスレッドが自動的に結合されなくなります&lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="107e68d762b79bad537ef9fb207d4e1d39e52d58" translate="yes" xml:space="preserve">
          <source>Prevent client side from requesting a session ticket.</source>
          <target state="translated">クライアント側がセッションチケットを要求しないようにします。</target>
        </trans-unit>
        <trans-unit id="c30a1250034cd8e55c1c2149d1282952906d4b8e" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1 as the protocol version.</source>
          <target state="translated">TLSv1接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。これにより、ピアがプロトコルバージョンとしてTLSv1を選択できなくなります。</target>
        </trans-unit>
        <trans-unit id="8afbd15b84e40a48b2da893725e169841a8cfb02" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.1 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">TLSv1.1接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。これにより、ピアがプロトコルバージョンとしてTLSv1.1を選択できなくなります。opensslバージョン1.0.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="e1aad586005b65865ebf605785c29cd1a005d4e0" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.2 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">TLSv1.2接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。これにより、ピアがプロトコルバージョンとしてTLSv1.2を選択できなくなります。opensslバージョン1.0.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="09c8e59b75ea4fcfcf9e178d3d0fa59ba0f19d05" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.3 as the protocol version. TLS 1.3 is available with OpenSSL 1.1.1 or later. When Python has been compiled against an older version of OpenSSL, the flag defaults to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">TLSv1.3接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。これにより、ピアがプロトコルバージョンとしてTLSv1.3を選択できなくなります。TLS 1.3は、OpenSSL 1.1.1以降で使用できます。古いバージョンのOpenSSLに対してPythonがコンパイルされている場合、フラグのデフォルトは&lt;em&gt;0&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="cbb04da33d788199d87cc8cadc4dadbebdb32b14" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv2 as the protocol version.</source>
          <target state="translated">SSLv2接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。ピアがプロトコルバージョンとしてSSLv2を選択するのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="e9b46f8715c307e61781566f286e18f0ca110744" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv3 as the protocol version.</source>
          <target state="translated">SSLv3接続を禁止します。このオプションは、&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;と組み合わせた場合にのみ適用できます。これにより、ピアがプロトコルバージョンとしてSSLv3を選択できなくなります。</target>
        </trans-unit>
        <trans-unit id="9dfcb0887264caddd8e829fb5d7f710039337de4" translate="yes" xml:space="preserve">
          <source>Prevents any more tasks from being submitted to the pool. Once all the tasks have been completed the worker processes will exit.</source>
          <target state="translated">これ以上のタスクがプールに投入されるのを防ぎます。すべてのタスクが完了すると、ワーカープロセスは終了します。</target>
        </trans-unit>
        <trans-unit id="dc320ab03d06fd63221446db92226635a2e40b3c" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same DH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">別々のSSLセッションでの同じDHキーの再利用を防ぎます。これは前方秘匿性を向上させますが、より多くの計算リソースを必要とします。このオプションはサーバソケットにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="a7ea65f7cda64106b6057a83880d70342ae857bc" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same ECDH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">別々のSSLセッションで同じECDHキーの再利用を防ぎます。これは前方秘匿性を向上させますが、より多くの計算リソースを必要とします。このオプションはサーバソケットにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="f2319e1b3ce31d6273e32117a3b51c171cce33b2" translate="yes" xml:space="preserve">
          <source>Previous History</source>
          <target state="translated">過去の歴史</target>
        </trans-unit>
        <trans-unit id="1cf61f9b704231b7d9da66ca29b0efd733397410" translate="yes" xml:space="preserve">
          <source>Previous calls to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; determine exactly what objects are created and how they are assigned. See the documentation for &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">以前の&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; の&lt;/a&gt;呼び出しは、作成されるオブジェクトとそれらの割り当て方法を正確に決定します。詳細は、&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="81f547195bef12a0bb74f5af751fe50e78a0c2f3" translate="yes" xml:space="preserve">
          <source>Previous page</source>
          <target state="translated">前のページ</target>
        </trans-unit>
        <trans-unit id="7b2c11a3c946fcc3cf0f0e62f1d9a7753a415146" translate="yes" xml:space="preserve">
          <source>Previously detected by MUA</source>
          <target state="translated">前回までのMUAでの検出</target>
        </trans-unit>
        <trans-unit id="e4da2d9864c0122b5dbabd8caa7e6fe3ce162517" translate="yes" xml:space="preserve">
          <source>Previously registered error handlers (including the standard error handlers) can be looked up by name:</source>
          <target state="translated">以前に登録されたエラーハンドラ(標準エラーハンドラを含む)は、名前で調べることができます。</target>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="translated">Print</target>
        </trans-unit>
        <trans-unit id="92c131e7cbd0707515ecfaf6e40abffb9a8099ab" translate="yes" xml:space="preserve">
          <source>Print (to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;) a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;比較を（&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; に&lt;/a&gt;）出力します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24d7c51d91db7ea29be8c3d303dbaf662d021276" translate="yes" xml:space="preserve">
          <source>Print &lt;em&gt;objects&lt;/em&gt; to the text stream &lt;em&gt;file&lt;/em&gt;, separated by &lt;em&gt;sep&lt;/em&gt; and followed by &lt;em&gt;end&lt;/em&gt;. &lt;em&gt;sep&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;, &lt;em&gt;file&lt;/em&gt; and &lt;em&gt;flush&lt;/em&gt;, if present, must be given as keyword arguments.</source>
          <target state="translated">印刷&lt;em&gt;オブジェクトを&lt;/em&gt;テキストストリームに&lt;em&gt;ファイル&lt;/em&gt;によって分離、&lt;em&gt;9月&lt;/em&gt;と続い&lt;em&gt;終了&lt;/em&gt;。&lt;em&gt;sep&lt;/em&gt;、&lt;em&gt;end&lt;/em&gt;、&lt;em&gt;file&lt;/em&gt;、および&lt;em&gt;flush&lt;/em&gt;は、存在する場合、キーワード引数として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="75ea07e0a17305b6a0d75015e0d39ee48139eff9" translate="yes" xml:space="preserve">
          <source>Print Window</source>
          <target state="translated">プリントウィンドウ</target>
        </trans-unit>
        <trans-unit id="092b80785f55799fe50486ddf8f296c06ea3eb11" translate="yes" xml:space="preserve">
          <source>Print a brief description of how the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; should be invoked on the command line. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">コマンドラインで&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;を呼び出す方法の簡単な説明を出力します。&lt;em&gt;file&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;が想定されます。</target>
        </trans-unit>
        <trans-unit id="7a9eb22264c3b5dec2931b1f324be362e8a3caa9" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common immediate subdirectories.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;および&lt;em&gt;b&lt;/em&gt;と一般的な直接サブディレクトリの比較を出力&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9737c0d0218890590b21fe3f519df6b481314ddd" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common subdirectories (recursively).</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;と共通のサブディレクトリの比較を（再帰的に）出力します。</target>
        </trans-unit>
        <trans-unit id="42a7ec328f156fde422cd7dc61bb23c09f74e406" translate="yes" xml:space="preserve">
          <source>Print a debug message when the debug level is &lt;code&gt;&amp;gt;&lt;/code&gt; 0. If extra arguments are present, they are substituted in the message using the standard string formatting operator.</source>
          <target state="translated">デバッグレベルのときにデバッグメッセージを出力します &lt;code&gt;&amp;gt;&lt;/code&gt; 0追加の引数が存在する場合、それらはオペレータのフォーマットの標準的な文字列を使用して、メッセージに置換されています。</target>
        </trans-unit>
        <trans-unit id="3d5dcdf55a88c009944f0a40c26245225b570e85" translate="yes" xml:space="preserve">
          <source>Print a help message, including the program usage and information about the arguments registered with the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">プログラムの使用法と&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; に&lt;/a&gt;登録された引数に関する情報を含むヘルプメッセージを出力します。&lt;em&gt;file&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;が想定されます。</target>
        </trans-unit>
        <trans-unit id="87a8729cb0a90de0e71cb0527bb7846eb00c7fa6" translate="yes" xml:space="preserve">
          <source>Print a list of useful (used by CGI) environment variables in HTML.</source>
          <target state="translated">便利な(CGIで使用される)環境変数の一覧をHTMLに表示します。</target>
        </trans-unit>
        <trans-unit id="b7d04d6b0c20b3d6e0ad773b82dd44d393b9fe4c" translate="yes" xml:space="preserve">
          <source>Print a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt;&lt;code&gt;formatmonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt; &lt;code&gt;formatmonth()&lt;/code&gt; が&lt;/a&gt;返す月のカレンダーを出力します。</target>
        </trans-unit>
        <trans-unit id="8819c1eace7f2970056904e5d1b4f13a04ad201a" translate="yes" xml:space="preserve">
          <source>Print a report to standard output that lists the modules imported by the script and their paths, as well as modules that are missing or seem to be missing.</source>
          <target state="translated">スクリプトによってインポートされたモジュールとそのパス、および不足している、または不足していると思われるモジュールを一覧にしたレポートを標準出力に印刷します。</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">短い使用方法のメッセージを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="46d75d2a40c595663c260f13796637d15127363a" translate="yes" xml:space="preserve">
          <source>Print a stack trace, with the most recent frame at the bottom. An arrow indicates the current frame, which determines the context of most commands.</source>
          <target state="translated">スタックトレースを表示します。矢印は現在のフレームを示し、ほとんどのコマンドのコンテキストを決定します。</target>
        </trans-unit>
        <trans-unit id="226e396c7c77d5972c0c2c1364f81ae49c3ca29d" translate="yes" xml:space="preserve">
          <source>Print a summary of all the test cases that have been run by this DocTestRunner, and return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;TestResults(failed, attempted)&lt;/code&gt;.</source>
          <target state="translated">このDocTestRunnerによって実行されたすべてのテストケースの概要を出力し、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt; &lt;code&gt;TestResults(failed, attempted)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d50abcb71a77d1ef48177e1bdc2bc346a39afa2a" translate="yes" xml:space="preserve">
          <source>Print a table of contents for the archive to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">アーカイブの目次を &lt;code&gt;sys.stdout&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="2bc98eb6896e2c06d7f1828dfb2545f703e3d1a9" translate="yes" xml:space="preserve">
          <source>Print a table of contents to &lt;code&gt;sys.stdout&lt;/code&gt;. If &lt;em&gt;verbose&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, only the names of the members are printed. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, output similar to that of &lt;strong&gt;ls -l&lt;/strong&gt; is produced. If optional &lt;em&gt;members&lt;/em&gt; is given, it must be a subset of the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">目次を &lt;code&gt;sys.stdout&lt;/code&gt; に出力します。&lt;em&gt;verbose&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、メンバーの名前のみが出力されます。&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、&lt;strong&gt;ls -l&lt;/strong&gt;と同様の出力が生成されます。オプションの&lt;em&gt;メンバー&lt;/em&gt;を指定する場合、それは&lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;によって返されるリストのサブセットでなければなりません。</target>
        </trans-unit>
        <trans-unit id="bc5c5b21b998c663e90c709b002328a575120497" translate="yes" xml:space="preserve">
          <source>Print detailed code object information for the supplied function, method, source code string or code object to &lt;em&gt;file&lt;/em&gt; (or &lt;code&gt;sys.stdout&lt;/code&gt; if &lt;em&gt;file&lt;/em&gt; is not specified).</source>
          <target state="translated">提供された関数、メソッド、ソースコード文字列、またはコードオブジェクトの詳細なコードオブジェクト情報を&lt;em&gt;ファイル&lt;/em&gt;（または、&lt;em&gt;ファイル&lt;/em&gt;が指定されていない場合は &lt;code&gt;sys.stdout&lt;/code&gt; ）に出力します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37d12069e6f16af033ab45913e5be7746c5e26cb" translate="yes" xml:space="preserve">
          <source>Print exception information and stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; to &lt;em&gt;file&lt;/em&gt;. This differs from &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt; in the following ways:</source>
          <target state="translated">例外情報とスタックトレースエントリをトレースバックオブジェクト&lt;em&gt;tb&lt;/em&gt;から&lt;em&gt;ファイルに出力&lt;/em&gt;し&lt;em&gt;ます&lt;/em&gt;。これは、以下の点で&lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt;と異なります。</target>
        </trans-unit>
        <trans-unit id="df0179c0889e679cc1234c128af6d1759f84855f" translate="yes" xml:space="preserve">
          <source>Print information about the specified object rather than the source code</source>
          <target state="translated">ソースコードではなく、指定したオブジェクトに関する情報を表示します。</target>
        </trans-unit>
        <trans-unit id="9d7895802cb9df9889bd75e637eaa3eae04b274e" translate="yes" xml:space="preserve">
          <source>Print information of uncollectable objects found (objects which are not reachable but cannot be freed by the collector). These objects will be added to the &lt;code&gt;garbage&lt;/code&gt; list.</source>
          <target state="translated">見つかった収集不可能なオブジェクトの情報を出力します（到達できないが、コレクターによって解放できないオブジェクト）。これらのオブジェクトは &lt;code&gt;garbage&lt;/code&gt; リストに追加されます。</target>
        </trans-unit>
        <trans-unit id="c75eed0af00a793cf5ded9d6e4b5cc55d5c12d11" translate="yes" xml:space="preserve">
          <source>Print information on collectable objects found.</source>
          <target state="translated">発見された収集可能なオブジェクトの情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="fd547948a708e1b1b0f64df6d997902a7615f488" translate="yes" xml:space="preserve">
          <source>Print low-level information to stderr about the state of CPython&amp;rsquo;s memory allocator.</source>
          <target state="translated">CPythonのメモリアロケータの状態に関する低レベルの情報をstderrに出力します。</target>
        </trans-unit>
        <trans-unit id="1e713e958b47d68260886430651371a5089e51b6" translate="yes" xml:space="preserve">
          <source>Print statistics during collection. This information can be useful when tuning the collection frequency.</source>
          <target state="translated">収集中の統計情報を印刷します。この情報は、収集周波数をチューニングする際に役立ちます。</target>
        </trans-unit>
        <trans-unit id="a2ebafe93be796a06067ee45e369ac2e44de72e5" translate="yes" xml:space="preserve">
          <source>Print the argument list of the current function.</source>
          <target state="translated">現在の関数の引数リストを表示します。</target>
        </trans-unit>
        <trans-unit id="0f9b05a178e0881d089969f09ca376db8448581e" translate="yes" xml:space="preserve">
          <source>Print the byte string &lt;em&gt;char&lt;/em&gt; to the console without buffering.</source>
          <target state="translated">バッファリングせずにバイト文字列&lt;em&gt;char&lt;/em&gt;をコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="caef0f05a449fbd2f0d330f2b834bbe64628bd70" translate="yes" xml:space="preserve">
          <source>Print the calendar for an entire year as returned by &lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; から&lt;/a&gt;返された、1年分のカレンダーを出力します。</target>
        </trans-unit>
        <trans-unit id="1fa21f2ae8d79fedb943ef8eab2b17d9abd3b148" translate="yes" xml:space="preserve">
          <source>Print the current window to the default printer.</source>
          <target state="translated">現在のウィンドウをデフォルトのプリンタに印刷します。</target>
        </trans-unit>
        <trans-unit id="7797e8c591f71dfae6cf64f791e63ba50f0fffba" translate="yes" xml:space="preserve">
          <source>Print the formatted representation of &lt;em&gt;object&lt;/em&gt; on the configured stream, followed by a newline.</source>
          <target state="translated">構成されたストリームに&lt;em&gt;オブジェクト&lt;/em&gt;のフォーマットされた表現を印刷し、その後に改行を続けます。</target>
        </trans-unit>
        <trans-unit id="4fc7c1a8b497470b56c309b8fd8305feb81fc79d" translate="yes" xml:space="preserve">
          <source>Print the output of &lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt;&lt;code&gt;bpformat()&lt;/code&gt;&lt;/a&gt; to the file &lt;em&gt;out&lt;/em&gt;, or if it is &lt;code&gt;None&lt;/code&gt;, to standard output.</source>
          <target state="translated">&lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt; &lt;code&gt;bpformat()&lt;/code&gt; の&lt;/a&gt;出力をファイル&lt;em&gt;out&lt;/em&gt;に出力します。出力が &lt;code&gt;None&lt;/code&gt; の場合は、標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="ce8b91aac985dd890d44d4a961ceca91f374cf43" translate="yes" xml:space="preserve">
          <source>Print the path to the user base directory.</source>
          <target state="translated">ユーザーベースディレクトリへのパスを表示します。</target>
        </trans-unit>
        <trans-unit id="9ea1420c3238a622dfc8af9460e9a233cd909099" translate="yes" xml:space="preserve">
          <source>Print the path to the user site-packages directory.</source>
          <target state="translated">ユーザーサイトパッケージのディレクトリへのパスを表示します。</target>
        </trans-unit>
        <trans-unit id="d2745eb0a20cb6c1e0fa2f98f22d8ac073bd292f" translate="yes" xml:space="preserve">
          <source>Print the stack or traceback for this Task.</source>
          <target state="translated">このタスクのスタックまたはトレースバックを表示します。</target>
        </trans-unit>
        <trans-unit id="cf40f8cbbb412ec036d201714e2e87709f667e28" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt;をルートとするメッセージオブジェクト構造のテキスト表現を、&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;インスタンスの作成時に指定された出力ファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="3736fd4a21976406b9fb9b5b2ec947f398687a95" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt;をルートとするメッセージオブジェクト構造のテキスト表現を、&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;インスタンスの作成時に指定された出力ファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="85716c4627d1c2ba667f0b4530240073c1a8a27b" translate="yes" xml:space="preserve">
          <source>Print the type of the &lt;em&gt;expression&lt;/em&gt;.</source>
          <target state="translated">式のタイプを出力し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="de66d67e0cdcd967953b2d26ab67aebb1e502f14" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries (starting from the invocation point) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. The optional &lt;em&gt;f&lt;/em&gt; argument can be used to specify an alternate stack frame to start. The optional &lt;em&gt;file&lt;/em&gt; argument has the same meaning as for &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt;が正の場合、スタックのトレースエントリを（呼び出しポイントから開始して）&lt;em&gt;制限&lt;/em&gt;まで印刷します。それ以外の場合は、最後の &lt;code&gt;abs(limit)&lt;/code&gt; エントリを出力します。場合は&lt;em&gt;制限を&lt;/em&gt;省略していないか、され &lt;code&gt;None&lt;/code&gt; 、すべてのエントリが印刷されます。オプションの&lt;em&gt;f&lt;/em&gt;引数を使用して、開始する代替スタックフレームを指定できます。オプションの&lt;em&gt;file&lt;/em&gt;引数は、&lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt;と同じ意味です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4430879a1bd415073f613bc0ba2cdf30ae54b218" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; (starting from the caller&amp;rsquo;s frame) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. If &lt;em&gt;file&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the output goes to &lt;code&gt;sys.stderr&lt;/code&gt;; otherwise it should be an open file or file-like object to receive the output.</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt;が正の場合、トレースバックオブジェクト&lt;em&gt;tb&lt;/em&gt;（呼び出し元のフレームから開始）からスタックトレースエントリを&lt;em&gt;制限&lt;/em&gt;まで印刷します。それ以外の場合は、最後の &lt;code&gt;abs(limit)&lt;/code&gt; エントリを出力します。場合は&lt;em&gt;制限を&lt;/em&gt;省略していないか、され &lt;code&gt;None&lt;/code&gt; 、すべてのエントリが印刷されます。場合は&lt;em&gt;、ファイルが&lt;/em&gt;省略されたりされ &lt;code&gt;None&lt;/code&gt; 、出力は行かない &lt;code&gt;sys.stderr&lt;/code&gt; を持ち、それ以外の場合は、出力を受け取るために開いているファイルまたはファイルのようなオブジェクトである必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43ee838f35cd5fefb189059307707fc5452dc591" translate="yes" xml:space="preserve">
          <source>Printing help</source>
          <target state="translated">印刷ヘルプ</target>
        </trans-unit>
        <trans-unit id="5e3476705dcdaad7c106c25f982e98a8e8918d78" translate="yes" xml:space="preserve">
          <source>Prints a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.month&quot;&gt;&lt;code&gt;month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.month&quot;&gt; &lt;code&gt;month()&lt;/code&gt; から&lt;/a&gt;返された月のカレンダーを出力します。</target>
        </trans-unit>
        <trans-unit id="178563981d3b66cd8dadea93b3cf517398992cf3" translate="yes" xml:space="preserve">
          <source>Prints an indented representation of the content types of the message object structure. For example:</source>
          <target state="translated">メッセージオブジェクト構造のコンテンツタイプのインデント表現を出力します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="90acbbd1c119c04a3ab88d76c20f94aae3ad2b33" translate="yes" xml:space="preserve">
          <source>Prints the calendar for an entire year as returned by &lt;a href=&quot;#module-calendar&quot;&gt;&lt;code&gt;calendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-calendar&quot;&gt; &lt;code&gt;calendar()&lt;/code&gt; から&lt;/a&gt;返された、1年のカレンダーを出力します。</target>
        </trans-unit>
        <trans-unit id="765da75ac67c7e69b1b79350da8a59b182712bf6" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; followed by a newline. If &lt;em&gt;sort_dicts&lt;/em&gt; is false (the default), dictionaries will be displayed with their keys in insertion order, otherwise the dict keys will be sorted. &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; will be passed to &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; as formatting parameters.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;のフォーマットされた表現とそれに続く改行を出力します。場合&lt;em&gt;sort_dictsが&lt;/em&gt; false（デフォルト）で、辞書には、それ以外のdictのキーはソートされ、挿入順にそのキーで表示されます。&lt;em&gt;args&lt;/em&gt;と&lt;em&gt;kwargs&lt;/em&gt;は、フォーマットパラメータとして&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="9a659c78c60d319d6e45a2e439dc3a225dde2ce3" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; on &lt;em&gt;stream&lt;/em&gt;, followed by a newline. If &lt;em&gt;stream&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;sys.stdout&lt;/code&gt; is used. This may be used in the interactive interpreter instead of the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function for inspecting values (you can even reassign &lt;code&gt;print = pprint.pprint&lt;/code&gt; for use within a scope). &lt;em&gt;indent&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;depth&lt;/em&gt;, &lt;em&gt;compact&lt;/em&gt; and &lt;em&gt;sort_dicts&lt;/em&gt; will be passed to the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; constructor as formatting parameters.</source>
          <target state="translated">印刷物のフォーマット表現&lt;em&gt;オブジェクト&lt;/em&gt;に&lt;em&gt;ストリーム&lt;/em&gt;改行が続きます。&lt;em&gt;stream&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;sys.stdout&lt;/code&gt; が使用されます。これは、値を検査するために、&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数の代わりにインタラクティブインタープリタで使用できます（スコープ内で使用するために、 &lt;code&gt;print = pprint.pprint&lt;/code&gt; を再割り当てすることもできます）。&lt;em&gt;インデント&lt;/em&gt;、&lt;em&gt;幅&lt;/em&gt;、&lt;em&gt;深さ&lt;/em&gt;、&lt;em&gt;コンパクト&lt;/em&gt;及び&lt;em&gt;sort_dictsは&lt;/em&gt;に渡される&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;パラメータをフォーマットとしてコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="4e2c04dcd549cd717d09f1ffd8b8c5756396cea0" translate="yes" xml:space="preserve">
          <source>Prior to 3.0 on POSIX systems, and for all versions on Windows, if &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, this operation goes into an uninterruptible wait on an underlying lock. This means that no exceptions can occur, and in particular a SIGINT will not trigger a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">POSIXシステムの3.0より前、およびWindowsのすべてのバージョンで、&lt;em&gt;block&lt;/em&gt;がtrueで、&lt;em&gt;timeout&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、この操作は基礎となるロックで無停電待ちになります。つまり、例外は発生せず、特にSIGINTは&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; を&lt;/a&gt;トリガーしません。</target>
        </trans-unit>
        <trans-unit id="28bcc1b532447f6c38e344dc91337fbe1e3f57fc" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.5, these three functions comprised the high level API to subprocess. You can now use &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; in many cases, but lots of existing code calls these functions.</source>
          <target state="translated">Python 3.5より前のバージョンでは、これらの3つの関数はサブプロセス用の高レベルAPIで構成されていました。多くの場合&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;を使用できるようになりましたが、既存のコードの多くはこれらの関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ee485a13f3c61d963098075b257dfa068de81844" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.7, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; was not guaranteed to be ordered, so inputs and outputs were typically scrambled unless &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; was specifically requested. Starting with Python 3.7, the regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; became order preserving, so it is no longer necessary to specify &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; for JSON generation and parsing.</source>
          <target state="translated">Python 3.7より前の&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;は、dictの順序が保証されていなかったため、&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt;が特別に要求されない限り、入力と出力は通常スクランブルされていました。Python 3.7以降、通常の&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;は順序を保持するようになったため、JSONの生成と解析に&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt;を指定する必要がなくなりました。</target>
        </trans-unit>
        <trans-unit id="ce7b4f6920821f37a53df961801a5e76cb98bc7b" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.8, the serialisation order of the XML attributes of elements was artificially made predictable by sorting the attributes by their name. Based on the now guaranteed ordering of dicts, this arbitrary reordering was removed in Python 3.8 to preserve the order in which attributes were originally parsed or created by user code.</source>
          <target state="translated">Python 3.8以前では、要素のXML属性のシリアライズ順序は、属性を名前でソートすることで人為的に予測可能になっていました。現在保証されているディクトの順序に基づいて、この任意の順序付けはPython 3.8では削除され、属性が元々ユーザーコードによって解析されたり作成されたりした順序を保持します。</target>
        </trans-unit>
        <trans-unit id="d1fe312f536bf4e754308dab9f406009132a4bfe" translate="yes" xml:space="preserve">
          <source>Priority Queue</source>
          <target state="translated">優先キュー</target>
        </trans-unit>
        <trans-unit id="340b6eb8ddb73074dc88d13b36b6daa62750be5f" translate="yes" xml:space="preserve">
          <source>Priority Queue Implementation Notes</source>
          <target state="translated">優先キューの実装に関する注意事項</target>
        </trans-unit>
        <trans-unit id="379a4e214d829e53c41f4b3c44bc18e9da1723bc" translate="yes" xml:space="preserve">
          <source>Priority data band can be read.</source>
          <target state="translated">優先データバンドの読み込みが可能です。</target>
        </trans-unit>
        <trans-unit id="14288e0ca4847b33646fff4072490e000fefb7c7" translate="yes" xml:space="preserve">
          <source>Priority data may be written.</source>
          <target state="translated">優先順位のデータが書き込まれることがあります。</target>
        </trans-unit>
        <trans-unit id="ef7053edee96c0d878acb0f63f6bb849325088c6" translate="yes" xml:space="preserve">
          <source>Priority levels (high to low):</source>
          <target state="translated">優先度(高~低)。</target>
        </trans-unit>
        <trans-unit id="42112cc384558a53635559f800e7234355ea8345" translate="yes" xml:space="preserve">
          <source>Private, abstract base class for pointers.</source>
          <target state="translated">ポインターのためのプライベートで抽象的な基底クラス。</target>
        </trans-unit>
        <trans-unit id="fe0ab232aea403475c4f5484cfb3291f7dcd50a9" translate="yes" xml:space="preserve">
          <source>Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</source>
          <target state="translated">おそらく問題を解決する最良の方法は、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;初期化されたインスタンスメンバーのデフォルト値としてクラス属性を追加することです。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;でデフォルト属性のみを設定している場合は、クラス属性（もちろんインスタンス間で共有）を介して提供する方が高速です。例えば</target>
        </trans-unit>
        <trans-unit id="82a3f6d4a767ee85079d7f46fcb38e6d4bd370e6" translate="yes" xml:space="preserve">
          <source>Process HTTP error responses.</source>
          <target state="translated">HTTPエラー応答を処理します。</target>
        </trans-unit>
        <trans-unit id="e8e0ada6a5ef6d292d2c93e408caca1ecb42b186" translate="yes" xml:space="preserve">
          <source>Process HTTPS error responses.</source>
          <target state="translated">HTTPS のエラー応答を処理する。</target>
        </trans-unit>
        <trans-unit id="66b1085d2893b19ca61ed0f1a8614ff7c20c8fa9" translate="yes" xml:space="preserve">
          <source>Process ID (if available).</source>
          <target state="translated">プロセスID(あれば)。</target>
        </trans-unit>
        <trans-unit id="1f5a86d996fe41cd28ad8ea8df3b57c8d1e99153" translate="yes" xml:space="preserve">
          <source>Process Management</source>
          <target state="translated">プロセス管理</target>
        </trans-unit>
        <trans-unit id="01df6eb3a4c83ebf34a899c278995155dd9de5c0" translate="yes" xml:space="preserve">
          <source>Process Parameters</source>
          <target state="translated">プロセスパラメータ</target>
        </trans-unit>
        <trans-unit id="f72f6213bcbf7742acdadc7f46dc0bee1131e9f2" translate="yes" xml:space="preserve">
          <source>Process Pools</source>
          <target state="translated">プロセスプール</target>
        </trans-unit>
        <trans-unit id="9b86d892e46fbebbb16792b6ab58f8396eb7c342" translate="yes" xml:space="preserve">
          <source>Process Watchers</source>
          <target state="translated">プロセスウォッチャー</target>
        </trans-unit>
        <trans-unit id="b32cff3bc6a5689bdcb0bac71d092e2dc71583f8" translate="yes" xml:space="preserve">
          <source>Process a chunk of &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;データの&lt;/em&gt;チャンクを&lt;em&gt;処理します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="947bfb22e72ecdaf6739dda63b55ef088ecd95cc" translate="yes" xml:space="preserve">
          <source>Process a single command keystroke. Here are the supported special keystrokes:</source>
          <target state="translated">単一のコマンドキーストロークを処理します。サポートされている特殊なキーストロークは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f96a65904dd29e5de1a41c2873eb6109ff1be6f8" translate="yes" xml:space="preserve">
          <source>Process a single request. This function calls the following methods in order: &lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt;&lt;code&gt;get_request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt;&lt;code&gt;verify_request()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt;&lt;code&gt;process_request()&lt;/code&gt;&lt;/a&gt;. If the user-provided &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of the handler class raises an exception, the server&amp;rsquo;s &lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt;&lt;code&gt;handle_error()&lt;/code&gt;&lt;/a&gt; method will be called. If no request is received within &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; seconds, &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt;&lt;code&gt;handle_timeout()&lt;/code&gt;&lt;/a&gt; will be called and &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt;&lt;code&gt;handle_request()&lt;/code&gt;&lt;/a&gt; will return.</source>
          <target state="translated">単一のリクエストを処理します。この関数は、次のメソッドを順番に呼び出します：&lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt; &lt;code&gt;get_request()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt; &lt;code&gt;verify_request()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt; &lt;code&gt;process_request()&lt;/code&gt; &lt;/a&gt;。ハンドラークラスのユーザー提供の&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドが例外を発生させると、サーバーの&lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt; &lt;code&gt;handle_error()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。何の要求が内に受信されない場合は&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;秒、&lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt; &lt;code&gt;handle_timeout()&lt;/code&gt; &lt;/a&gt;と呼ばれます&lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt; &lt;code&gt;handle_request()&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="b1c507d17a8072014891e2d12127e007cafa17a7" translate="yes" xml:space="preserve">
          <source>Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</source>
          <target state="translated">入力ソースを処理し、SAXイベントを生成します。&lt;em&gt;ソース&lt;/em&gt;、 -オブジェクトは、システム識別子（典型的には、ファイル名またはURLの入力ソースを特定する文字列）であることができる&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パス状&lt;/a&gt;物体、あるいは&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;オブジェクト。&lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;戻り、入力が完全に処理され、パーサー・オブジェクトは破棄またはリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="2b311ad25d1db62875cc54150c554d28f143828c" translate="yes" xml:space="preserve">
          <source>Process and return data already in the queues (lazy).</source>
          <target state="translated">すでにキューに入っているデータを処理して返す(遅延)。</target>
        </trans-unit>
        <trans-unit id="b3599943b558766e7f19245507d6887c0663d872" translate="yes" xml:space="preserve">
          <source>Process identification number (PID).</source>
          <target state="translated">プロセス識別番号(PID)。</target>
        </trans-unit>
        <trans-unit id="297f39b6d2abdfdb1292f997173731b0fddec52a" translate="yes" xml:space="preserve">
          <source>Process name (if available).</source>
          <target state="translated">プロセス名(あれば)。</target>
        </trans-unit>
        <trans-unit id="4f0cc309bda79cb8d9bbf8927c6dcb4228a77c6c" translate="yes" xml:space="preserve">
          <source>Process objects represent activity that is run in a separate process. The &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; class has equivalents of all the methods of &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロセスオブジェクトは、別のプロセスで実行されるアクティビティを表します。&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;クラスは、すべてのメソッドの当有する&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2952edfd580aa8a664a3ded614d8f10340a237d" translate="yes" xml:space="preserve">
          <source>Process the HTTP request. The default implementation creates a handler instance using a &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt;&lt;code&gt;wsgiref.handlers&lt;/code&gt;&lt;/a&gt; class to implement the actual WSGI application interface.</source>
          <target state="translated">HTTPリクエストを処理します。デフォルトの実装では、&lt;a href=&quot;#module-wsgiref.handlers&quot;&gt; &lt;code&gt;wsgiref.handlers&lt;/code&gt; &lt;/a&gt;クラスを使用してハンドラーインスタンスを作成し、実際のWSGIアプリケーションインターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="b9f4c1da0a6f95349d5b7cab6bfc3e5d901e4edc" translate="yes" xml:space="preserve">
          <source>ProcessLookupError</source>
          <target state="translated">ProcessLookupError</target>
        </trans-unit>
        <trans-unit id="d4da8a798d14724a0caf5b1f84fe71ed27bd4ff8" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor</source>
          <target state="translated">ProcessPoolExecutor</target>
        </trans-unit>
        <trans-unit id="e1cea46436f44b1ca5b79450691e62e489cd9c5c" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor Example</source>
          <target state="translated">ProcessPoolExecutor の例</target>
        </trans-unit>
        <trans-unit id="94bb652c9572461a974b5f2114bbee99c0f0b7ed" translate="yes" xml:space="preserve">
          <source>Processes formatting specifiers as in &lt;code&gt;format % val&lt;/code&gt;, but takes the current locale settings into account.</source>
          <target state="translated">&lt;code&gt;format % val&lt;/code&gt; ようにフォーマット指定子を処理しますが、現在のロケール設定を考慮に入れます。</target>
        </trans-unit>
        <trans-unit id="21f10da205ad95c538599dfb2cba2ce2d07eb428" translate="yes" xml:space="preserve">
          <source>Processing instruction representation.</source>
          <target state="translated">命令表現を処理する。</target>
        </trans-unit>
        <trans-unit id="89856bf9806f209990cb1b3750df87125c96da8a" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction Objects</source>
          <target state="translated">処理命令オブジェクト</target>
        </trans-unit>
        <trans-unit id="84a5556631d8395e80b4ddd01a2e3c3735e1fc89" translate="yes" xml:space="preserve">
          <source>Produce a directory listing as returned by the &lt;code&gt;LIST&lt;/code&gt; command, printing it to standard output. The optional &lt;em&gt;argument&lt;/em&gt; is a directory to list (default is the current server directory). Multiple arguments can be used to pass non-standard options to the &lt;code&gt;LIST&lt;/code&gt; command. If the last argument is a function, it is used as a &lt;em&gt;callback&lt;/em&gt; function as for &lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt;&lt;code&gt;retrlines()&lt;/code&gt;&lt;/a&gt;; the default prints to &lt;code&gt;sys.stdout&lt;/code&gt;. This method returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LIST&lt;/code&gt; コマンドによって返されるディレクトリリストを作成し、標準出力に出力します。オプションの&lt;em&gt;引数&lt;/em&gt;は、リストするディレクトリです（デフォルトは現在のサーバーディレクトリです）。複数の引数を使用して、非標準オプションを &lt;code&gt;LIST&lt;/code&gt; コマンドに渡すことができます。最後の引数が関数の場合、それは&lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt; &lt;code&gt;retrlines()&lt;/code&gt; と&lt;/a&gt;同様に&lt;em&gt;コールバック&lt;/em&gt;関数として使用され&lt;em&gt;ます&lt;/em&gt;。デフォルトでは &lt;code&gt;sys.stdout&lt;/code&gt; に出力されます。このメソッドは &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ee2e28d2f8fb31da49f40174236d2b632dbd76de" translate="yes" xml:space="preserve">
          <source>Produce a set of annotated listing files upon program completion that shows how many times each statement was executed. See also &lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt;&lt;code&gt;--coverdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt;&lt;code&gt;--no-report&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">プログラムの完了時に、各ステートメントが実行された回数を示す注釈付きリストファイルのセットを生成します。参照してください&lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt; &lt;code&gt;--coverdir&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt; &lt;code&gt;--no-report&lt;/code&gt; &lt;/a&gt;以下。</target>
        </trans-unit>
        <trans-unit id="61b62b4918483f7d1f903deb8e344d1eb90bc205" translate="yes" xml:space="preserve">
          <source>Produce an annotated list from an earlier program run that used the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; option. This does not execute any code.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt;オプションを使用した以前のプログラム実行から注釈付きリストを生成します。これはコードを実行しません。</target>
        </trans-unit>
        <trans-unit id="b6206021551dc337089d35c15bdfd762b397d0ed" translate="yes" xml:space="preserve">
          <source>Producing more informative usage messages.</source>
          <target state="translated">より有益な使用法のメッセージを生成します。</target>
        </trans-unit>
        <trans-unit id="b1a89bbc60ade6c8211d72a39eee477320394916" translate="yes" xml:space="preserve">
          <source>Profile &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</source>
          <target state="translated">プロファイル &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab5817ee3a38bdd3960784eebb66b96fdd8be97" translate="yes" xml:space="preserve">
          <source>Profile functions should have three arguments: &lt;em&gt;frame&lt;/em&gt;, &lt;em&gt;event&lt;/em&gt;, and &lt;em&gt;arg&lt;/em&gt;. &lt;em&gt;frame&lt;/em&gt; is the current stack frame. &lt;em&gt;event&lt;/em&gt; is a string: &lt;code&gt;'call'&lt;/code&gt;, &lt;code&gt;'return'&lt;/code&gt;, &lt;code&gt;'c_call'&lt;/code&gt;, &lt;code&gt;'c_return'&lt;/code&gt;, or &lt;code&gt;'c_exception'&lt;/code&gt;. &lt;em&gt;arg&lt;/em&gt; depends on the event type.</source>
          <target state="translated">プロファイル関数には、&lt;em&gt;frame&lt;/em&gt;、&lt;em&gt;event&lt;/em&gt;、および&lt;em&gt;argの&lt;/em&gt; 3つの引数が必要です。&lt;em&gt;frame&lt;/em&gt;は現在のスタックフレームです。&lt;em&gt;event&lt;/em&gt;は文字列です： &lt;code&gt;'call'&lt;/code&gt; 、 &lt;code&gt;'return'&lt;/code&gt; 、 &lt;code&gt;'c_call'&lt;/code&gt; 、 &lt;code&gt;'c_return'&lt;/code&gt; 、または &lt;code&gt;'c_exception'&lt;/code&gt; 。&lt;em&gt;arg&lt;/em&gt;はイベントタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="76b85f64e42b75db85f6100c7446f9839a6a7ea4" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; with the specified global and local environment.</source>
          <target state="translated">指定されたグローバル環境とローカル環境で&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;を介してcmdをプロファイリングします。</target>
        </trans-unit>
        <trans-unit id="36dda3343a7263d4db5c33b4996d45f6d08108ef" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;を介してcmdをプロファイリングします。</target>
        </trans-unit>
        <trans-unit id="95bd58802dc1b81dce30791a9d8256f51f58596b" translate="yes" xml:space="preserve">
          <source>Program Frameworks</source>
          <target state="translated">プログラムフレームワーク</target>
        </trans-unit>
        <trans-unit id="29732f847c3e72f38557e028f82b286984b79cf6" translate="yes" xml:space="preserve">
          <source>Programmatic Interface</source>
          <target state="translated">プログラムインターフェース</target>
        </trans-unit>
        <trans-unit id="0cc5a8683e649a82320f81d8b98ad22b1224bb2a" translate="yes" xml:space="preserve">
          <source>Programmatic access to enumeration members and their attributes</source>
          <target state="translated">列挙メンバとその属性へのプログラムによるアクセス</target>
        </trans-unit>
        <trans-unit id="43946ee36367ff5b56dd7206534999a5f9bb2e0c" translate="yes" xml:space="preserve">
          <source>Programmatic importing of modules should use &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; instead of this function.</source>
          <target state="translated">プログラムによるモジュールのインポートでは、この関数の代わりに&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="582a71e5cde8061e90cf7cb11216069f82272cfa" translate="yes" xml:space="preserve">
          <source>Programming Python</source>
          <target state="translated">プログラミングPython</target>
        </trans-unit>
        <trans-unit id="cbb1703ad983064d7b0e59271c23ac61fd18453b" translate="yes" xml:space="preserve">
          <source>Programming guidelines</source>
          <target state="translated">プログラミングガイドライン</target>
        </trans-unit>
        <trans-unit id="7da030583783017b4f69be08fb0b0b0892cc669d" translate="yes" xml:space="preserve">
          <source>Progressbar</source>
          <target state="translated">Progressbar</target>
        </trans-unit>
        <trans-unit id="3277e9d5cb2ea7675324d81b2435cfeab83add48" translate="yes" xml:space="preserve">
          <source>Prompt server for an update. Returned data is &lt;code&gt;None&lt;/code&gt; if no new messages, else value of &lt;code&gt;RECENT&lt;/code&gt; response.</source>
          <target state="translated">サーバーに更新を要求します。新しいメッセージが &lt;code&gt;None&lt;/code&gt; 場合、返されるデータはNoneです。それ以外の場合、 &lt;code&gt;RECENT&lt;/code&gt; 応答の値です。</target>
        </trans-unit>
        <trans-unit id="36ea9c97c82e09c4c66355ad465d29262386380c" translate="yes" xml:space="preserve">
          <source>Prompt the user for a password without echoing. The user is prompted using the string &lt;em&gt;prompt&lt;/em&gt;, which defaults to &lt;code&gt;'Password: '&lt;/code&gt;. On Unix, the prompt is written to the file-like object &lt;em&gt;stream&lt;/em&gt; using the replace error handler if needed. &lt;em&gt;stream&lt;/em&gt; defaults to the controlling terminal (&lt;code&gt;/dev/tty&lt;/code&gt;) or if that is unavailable to &lt;code&gt;sys.stderr&lt;/code&gt; (this argument is ignored on Windows).</source>
          <target state="translated">エコーしないでユーザーにパスワードを要求します。ユーザーは文字列&lt;em&gt;prompt&lt;/em&gt;を使用して&lt;em&gt;プロンプト&lt;/em&gt;が表示され&lt;em&gt;ます&lt;/em&gt;。デフォルトは &lt;code&gt;'Password: '&lt;/code&gt; です。Unixでは、プロンプトは、必要に応じて置換エラーハンドラーを使用してファイルのようなオブジェクト&lt;em&gt;ストリームに&lt;/em&gt;書き込まれます。&lt;em&gt;streamは、&lt;/em&gt;デフォルトで制御端末（ &lt;code&gt;/dev/tty&lt;/code&gt; ）を使用するか、 &lt;code&gt;sys.stderr&lt;/code&gt; で使用できない場合（この引数はWindowsでは無視されます）。</target>
        </trans-unit>
        <trans-unit id="588169426c8d1fa7e44bc9a3ff15982cdbfaaa90" translate="yes" xml:space="preserve">
          <source>Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt;.</source>
          <target state="translated">現在のインスタンスの最初のマップを除くすべてのマップを含む新しい&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt;を返すプロパティ。これは、検索で最初のマップをスキップするのに役立ちます。使用例は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;ネスト&lt;/a&gt;されたスコープで使用される&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;/a&gt;キーワードの使用例と似ています。使用例は、組み込みの&lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;関数の使用例にも対応しています。 &lt;code&gt;d.parents&lt;/code&gt; への参照は、ChainMap &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="77a1661ff20d05707d028062bc86d9655da030da" translate="yes" xml:space="preserve">
          <source>Property which is true if the finalizer is alive, false otherwise.</source>
          <target state="translated">このプロパティは、ファイナライザが生きている場合は真、そうでない場合は偽となります。</target>
        </trans-unit>
        <trans-unit id="b71393da154d6654d013fdbe1762a139d1f0c832" translate="yes" xml:space="preserve">
          <source>Protect an &lt;a href=&quot;#asyncio-awaitables&quot;&gt;awaitable object&lt;/a&gt; from being &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancelled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio-awaitables&quot;&gt;待機可能なオブジェクト&lt;/a&gt;が&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancelled&lt;/code&gt; &lt;/a&gt;ないように保護します。</target>
        </trans-unit>
        <trans-unit id="8770cb52bfc12f5c8b944d6be182d7850b41eb42" translate="yes" xml:space="preserve">
          <source>Protected mode</source>
          <target state="translated">保護モード</target>
        </trans-unit>
        <trans-unit id="02ca74fb7fe36d1ec1ff43755c49fa63ad40ee48" translate="yes" xml:space="preserve">
          <source>Protocol classes can be generic, for example:</source>
          <target state="translated">プロトコルクラスは、例えば、汎用的なものにすることができます。</target>
        </trans-unit>
        <trans-unit id="bc9e334f823b2be75b5b8c5ea9906ea9c0b08817" translate="yes" xml:space="preserve">
          <source>Protocol classes can implement the following &lt;strong&gt;callback methods&lt;/strong&gt;:</source>
          <target state="translated">プロトコルクラスは、次の&lt;strong&gt;コールバックメソッドを&lt;/strong&gt;実装でき&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ad5889cf55d9c9ddf964af330c62999831d5864d" translate="yes" xml:space="preserve">
          <source>Protocol definition for SMTP. This document covers the model, operating procedure, and protocol details for SMTP.</source>
          <target state="translated">SMTP のプロトコル定義。このドキュメントでは、SMTPのモデル、操作手順、プロトコルの詳細について説明します。</target>
        </trans-unit>
        <trans-unit id="0eefce21e56451e311edc639e53ac4594f96d85d" translate="yes" xml:space="preserve">
          <source>Protocol driver not attached</source>
          <target state="translated">プロトコルドライバが添付されていない</target>
        </trans-unit>
        <trans-unit id="a31583107f763ed101ab870682277a15652cc1cb" translate="yes" xml:space="preserve">
          <source>Protocol error</source>
          <target state="translated">エラープロトコル</target>
        </trans-unit>
        <trans-unit id="677789471bfc26b9baa2dcb7bdc1e90f13c9beac" translate="yes" xml:space="preserve">
          <source>Protocol family not supported</source>
          <target state="translated">サポートされていないプロトコルファミリ</target>
        </trans-unit>
        <trans-unit id="59bb2975367cf35f9a618efe163f6de98389a1c2" translate="yes" xml:space="preserve">
          <source>Protocol not available</source>
          <target state="translated">プロトコルが利用できない</target>
        </trans-unit>
        <trans-unit id="05ba63ff22fffa946a6c1e3e8b9d184a5a911e55" translate="yes" xml:space="preserve">
          <source>Protocol not supported</source>
          <target state="translated">サポートされていないプロトコル</target>
        </trans-unit>
        <trans-unit id="66c27fe46bd114d55a64e98115a7040327f4a014" translate="yes" xml:space="preserve">
          <source>Protocol version 0 is the original &amp;ldquo;human-readable&amp;rdquo; protocol and is backwards compatible with earlier versions of Python.</source>
          <target state="translated">プロトコルバージョン0は元の「人間が読める」プロトコルであり、以前のバージョンのPythonとの下位互換性があります。</target>
        </trans-unit>
        <trans-unit id="9f1b19752041a2f953f426891837b895ba0ec61a" translate="yes" xml:space="preserve">
          <source>Protocol version 1 is an old binary format which is also compatible with earlier versions of Python.</source>
          <target state="translated">プロトコルバージョン1は古いバイナリ形式で、以前のバージョンのPythonとも互換性があります。</target>
        </trans-unit>
        <trans-unit id="b0b436e92f55285dbba9fe3ed7783a21924f5fb8" translate="yes" xml:space="preserve">
          <source>Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</source>
          <target state="translated">プロトコルバージョン2はPython 2.3で導入されました。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;新しいスタイルのクラス&lt;/a&gt; esをより効率的にピクルス化します。プロトコル2による改善については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0d89cbdf33a6f12fe68fa41e5d62e69604f5f111" translate="yes" xml:space="preserve">
          <source>Protocol version 3 was added in Python 3.0. It has explicit support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects and cannot be unpickled by Python 2.x. This was the default protocol in Python 3.0&amp;ndash;3.7.</source>
          <target state="translated">プロトコルバージョン3はPython 3.0で追加されました。&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを明示的にサポートしており、Python 2.xでunpickleすることはできません。これはPython 3.0&amp;ndash;3.7のデフォルトプロトコルでした。</target>
        </trans-unit>
        <trans-unit id="167932e2e331e862375a10551050e9f26a28976e" translate="yes" xml:space="preserve">
          <source>Protocol version 4 was added in Python 3.4. It adds support for very large objects, pickling more kinds of objects, and some data format optimizations. It is the default protocol starting with Python 3.8. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 4.</source>
          <target state="translated">プロトコルバージョン4はPython 3.4で追加されました。非常に大きなオブジェクトのサポート、より多くの種類のオブジェクトのピクル化、および一部のデータ形式の最適化が追加されます。これは、Python 3.8以降のデフォルトのプロトコルです。プロトコル4による改善については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="caac2daa3b9e8785152f90bfa59fc39dc69b7cb8" translate="yes" xml:space="preserve">
          <source>Protocol version 5 was added in Python 3.8. It adds support for out-of-band data and speedup for in-band data. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 5.</source>
          <target state="translated">プロトコルバージョン5はPython 3.8で追加されました。帯域外データのサポートと帯域内データの高速化を追加します。プロトコル5による改善については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1202f606b2e32bbc3d0fddceda6783cc8a6fb033" translate="yes" xml:space="preserve">
          <source>Protocol versions</source>
          <target state="translated">プロトコルのバージョン</target>
        </trans-unit>
        <trans-unit id="3ff5f085a157b60cb28dba0860f39cd3e12b11e1" translate="yes" xml:space="preserve">
          <source>Protocol wrong type for socket</source>
          <target state="translated">ソケットのプロトコルのタイプが間違っている</target>
        </trans-unit>
        <trans-unit id="dd901073191ed23827708d5ff40ed845574f0ca7" translate="yes" xml:space="preserve">
          <source>ProtocolError Objects</source>
          <target state="translated">ProtocolError オブジェクト</target>
        </trans-unit>
        <trans-unit id="2a6e3082f7bd2a56b001fbb1624e361e5599002d" translate="yes" xml:space="preserve">
          <source>Protocols</source>
          <target state="translated">Protocols</target>
        </trans-unit>
        <trans-unit id="6c9370254ccd0ba3c533df6eb04115252a887895" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_DSYNC&quot;&gt;&lt;code&gt;O_DSYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">&lt;a href=&quot;#os.O_DSYNC&quot;&gt; &lt;code&gt;O_DSYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; フラグと同等の書き込みごとの提供。このフラグの効果は、システムコールによって書き込まれたデータ範囲にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="f731e3836b43c76e6eb956ae15aaec713f209063" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_SYNC&quot;&gt;&lt;code&gt;O_SYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">&lt;a href=&quot;#os.O_SYNC&quot;&gt; &lt;code&gt;O_SYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; フラグと同等の書き込みごとの提供。このフラグの効果は、システムコールによって書き込まれたデータ範囲にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="dee6bd9f4cdf3cd7282713ec5dcb4df91afa967f" translate="yes" xml:space="preserve">
          <source>Provide basic introspection for generic types and special typing forms.</source>
          <target state="translated">汎用型や特殊なタイピングフォームのための基本的なイントロスペクションを提供する。</target>
        </trans-unit>
        <trans-unit id="25d9907a6882636abf50f5974e10c9b5af617618" translate="yes" xml:space="preserve">
          <source>Provide data to the compressor object. Returns a chunk of compressed data if possible, or an empty byte string otherwise.</source>
          <target state="translated">コンプレッサオブジェクトにデータを提供します。可能であれば圧縮データのチャンクを、そうでなければ空のバイト文字列を返します。</target>
        </trans-unit>
        <trans-unit id="370dad65015117426ba525e495fbbfdd82d208f2" translate="yes" xml:space="preserve">
          <source>Provider API</source>
          <target state="translated">プロバイダAPI</target>
        </trans-unit>
        <trans-unit id="778e9e5642a2d090654969214e90a85ebd83e83d" translate="yes" xml:space="preserve">
          <source>Provides (for &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; vectors, &lt;em&gt;k&lt;/em&gt; number):</source>
          <target state="translated">以下を提供します（&lt;em&gt;a&lt;/em&gt;、&lt;em&gt;b&lt;/em&gt;ベクトル、&lt;em&gt;k&lt;/em&gt;番号）：</target>
        </trans-unit>
        <trans-unit id="1956b5072d57097ccefc1302702b4e99efeb926e" translate="yes" xml:space="preserve">
          <source>Provides a dictionary, based on &lt;code&gt;record&lt;/code&gt;, which is to be URL-encoded and sent to the web server. The default implementation just returns &lt;code&gt;record.__dict__&lt;/code&gt;. This method can be overridden if e.g. only a subset of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; is to be sent to the web server, or if more specific customization of what&amp;rsquo;s sent to the server is required.</source>
          <target state="translated">URLエンコードされてWebサーバーに送信される、 &lt;code&gt;record&lt;/code&gt; に基づく辞書を提供します。デフォルトの実装は単に &lt;code&gt;record.__dict__&lt;/code&gt; 返します。このメソッドは、たとえば&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;サブセットのみがWebサーバーに送信される場合、またはサーバーに送信される内容のより具体的なカスタマイズが必要な場合にオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="c072b53c7e573480587a748eb43bae4c740a2472" translate="yes" xml:space="preserve">
          <source>Provides a mutable list-like object where all values stored within are stored in a shared memory block. This constrains storable values to only the &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt; (less than 10M bytes each), &lt;code&gt;bytes&lt;/code&gt; (less than 10M bytes each), and &lt;code&gt;None&lt;/code&gt; built-in data types. It also notably differs from the built-in &lt;code&gt;list&lt;/code&gt; type in that these lists can not change their overall length (i.e. no append, insert, etc.) and do not support the dynamic creation of new &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; instances via slicing.</source>
          <target state="translated">内部に格納されているすべての値が共有メモリブロックに格納されている、変更可能なリストのようなオブジェクトを提供します。これにより、格納可能な値は、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;bool&lt;/code&gt; 、 &lt;code&gt;str&lt;/code&gt; （それぞれ10Mバイト未満）、 &lt;code&gt;bytes&lt;/code&gt; （それぞれ10Mバイト未満）、および &lt;code&gt;None&lt;/code&gt; 組み込みデータ型のみに制限されます。また、これらのリストは全体の長さ（つまり、追加、挿入など）を変更できず、スライスによる新しい&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;インスタンスの動的作成をサポートしないという点で、組み込み &lt;code&gt;list&lt;/code&gt; タイプとは特に異なります。</target>
        </trans-unit>
        <trans-unit id="08a1afa7742389a1900345e97b7ed61c3d3364c2" translate="yes" xml:space="preserve">
          <source>Provides an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</source>
          <target state="translated">ピクル内のすべての &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;反復子&lt;/a&gt;を提供し、（opcode、arg、pos）トリプルのシーケンスを返します。&lt;em&gt;opcode&lt;/em&gt;は &lt;code&gt;OpcodeInfo&lt;/code&gt; クラスのインスタンスです。&lt;em&gt;arg&lt;/em&gt;は、opcodeの引数の、Pythonオブジェクトとしてのデコードされた値です。&lt;em&gt;pos&lt;/em&gt;は、このオペコードが配置されている位置です。&lt;em&gt;pickle&lt;/em&gt;は文字列またはファイルのようなオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="6da5bc34e31a7e203e61c3d0dc371e4d52c7b8b4" translate="yes" xml:space="preserve">
          <source>Provides an overriding level &lt;em&gt;level&lt;/em&gt; for all loggers which takes precedence over the logger&amp;rsquo;s own level. When the need arises to temporarily throttle logging output down across the whole application, this function can be useful. Its effect is to disable all logging calls of severity &lt;em&gt;level&lt;/em&gt; and below, so that if you call it with a value of INFO, then all INFO and DEBUG events would be discarded, whereas those of severity WARNING and above would be processed according to the logger&amp;rsquo;s effective level. If &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; is called, it effectively removes this overriding level, so that logging output again depends on the effective levels of individual loggers.</source>
          <target state="translated">すべてのロガーに、ロガー自体のレベルよりも優先されるオーバーライドレベル&lt;em&gt;レベル&lt;/em&gt;を提供します。アプリケーション全体でロギング出力を一時的に抑制する必要が生じた場合、この機能は役立ちます。その効果は、重大度&lt;em&gt;レベル&lt;/em&gt;以下のすべてのロギング呼び出しを無効にすることです。そのため、INFOの値で呼び出した場合、すべてのINFOイベントとDEBUGイベントは破棄されますが、重大度WARNING以上のイベントはロガーのイベントに従って処理されます。有効レベル。もし &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; というログ出力が再び個々のロガーの有効なレベルに依存してと呼ばれ、それが効果的に、このオーバーライドレベルを削除します。</target>
        </trans-unit>
        <trans-unit id="4199b1324e6bc5b4d37525ed1a37df751d8d1273" translate="yes" xml:space="preserve">
          <source>Provides screen oriented methods like &lt;code&gt;setbg()&lt;/code&gt; etc. that are described above.</source>
          <target state="translated">上記の &lt;code&gt;setbg()&lt;/code&gt; などの画面指向のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="3bcce81b2bfb8b4c888c6e8ed2e2a5f477886f7d" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; causes no attribute to be added if the command-line argument was not present:</source>
          <target state="translated">提供する &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; コマンドライン引数が存在しない場合は何の属性が追加されないことが発生します</target>
        </trans-unit>
        <trans-unit id="a736f976e35e63e7d42af793c52253fd6b6d0d72" translate="yes" xml:space="preserve">
          <source>Providing a much simpler interface for custom &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">カスタムの &lt;code&gt;type&lt;/code&gt; と &lt;code&gt;action&lt;/code&gt; ためのはるかにシンプルなインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="63e7afc9f05c9ff9c919f47c668df6b888d2dc7f" translate="yes" xml:space="preserve">
          <source>Providing both of the script selection options will trigger an exception.</source>
          <target state="translated">スクリプト選択オプションの両方を指定すると、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="d47999c4330b5fcd4daac54f907a640b4b134c74" translate="yes" xml:space="preserve">
          <source>Providing keyword arguments as in the first example only works for keys that are valid Python identifiers. Otherwise, any valid keys can be used.</source>
          <target state="translated">最初の例のようにキーワード引数を与えることは、有効な Python の識別子であるキーに対してのみ機能します。それ以外の場合は、すべての有効なキーを使用することができます。</target>
        </trans-unit>
        <trans-unit id="25510081ac86d2210221f153b51cdc9df9ae4304" translate="yes" xml:space="preserve">
          <source>Proxy Objects</source>
          <target state="translated">プロキシオブジェクト</target>
        </trans-unit>
        <trans-unit id="2d5c573197196120569f02776eccc66f21f53599" translate="yes" xml:space="preserve">
          <source>Proxy objects are instances of subclasses of &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt;&lt;code&gt;BaseProxy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロキシオブジェクトは、&lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt; &lt;code&gt;BaseProxy&lt;/code&gt; &lt;/a&gt;のサブクラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="c75a7087ecf855f67fcb81ebf6a5e6082a750517" translate="yes" xml:space="preserve">
          <source>ProxyBasicAuthHandler Objects</source>
          <target state="translated">ProxyBasicAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="9a3c956a4a7ba8ac42fa61ab44f51e4675dacefb" translate="yes" xml:space="preserve">
          <source>ProxyDigestAuthHandler Objects</source>
          <target state="translated">ProxyDigestAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="56ba0f30de43dff01434861636d0129dc0849fff" translate="yes" xml:space="preserve">
          <source>ProxyHandler Objects</source>
          <target state="translated">ProxyHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="4aeca1dd4670f2e0941bbdb681eaf9b9e7516518" translate="yes" xml:space="preserve">
          <source>Pseudo-code:</source>
          <target state="translated">Pseudo-code:</target>
        </trans-unit>
        <trans-unit id="c0fa5326d4b67d5bcfd41e0e59ce698212f3e714" translate="yes" xml:space="preserve">
          <source>Public classes</source>
          <target state="translated">パブリッククラス</target>
        </trans-unit>
        <trans-unit id="ab5297b4267339fff5c9910aec762c3934118955" translate="yes" xml:space="preserve">
          <source>Public functions</source>
          <target state="translated">公共機能</target>
        </trans-unit>
        <trans-unit id="f7563f6262a1a1f5617d82e0f1e3e2dee8d1e4c6" translate="yes" xml:space="preserve">
          <source>Pull API for non-blocking parsing</source>
          <target state="translated">ノンブロッキング解析のためのプル API</target>
        </trans-unit>
        <trans-unit id="c10612aa80041fdd7d816e69a190284aeec952e2" translate="yes" xml:space="preserve">
          <source>Pull the pen down &amp;ndash; drawing when moving.</source>
          <target state="translated">ペンを下に引きます&amp;ndash;移動するときに描画します。</target>
        </trans-unit>
        <trans-unit id="7487a2e53df9e03ad9e8b9f59ae0d9088b93bad6" translate="yes" xml:space="preserve">
          <source>Pull the pen up &amp;ndash; no drawing when moving.</source>
          <target state="translated">ペンを引き上げます&amp;ndash;移動時に描画しません。</target>
        </trans-unit>
        <trans-unit id="b6aada712c839fa727d6824da8ff431315046580" translate="yes" xml:space="preserve">
          <source>Pure path objects implement the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface, allowing them to be used anywhere the interface is accepted.</source>
          <target state="translated">純粋なパスオブジェクトは&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを実装しており、インターフェースが受け入れられる場所ならどこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="62df8698802935952f3191995f045390c63e6835" translate="yes" xml:space="preserve">
          <source>Pure path objects provide path-handling operations which don&amp;rsquo;t actually access a filesystem. There are three ways to access these classes, which we also call &lt;em&gt;flavours&lt;/em&gt;:</source>
          <target state="translated">純粋なパスオブジェクトは、実際にはファイルシステムにアクセスしないパス処理操作を提供します。これらのクラスにアクセスするには3つの方法があり、&lt;em&gt;フレーバー&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="86c00397451c193a0cb88542e126e0a1e73aafdb" translate="yes" xml:space="preserve">
          <source>Pure paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6b0a14eac80901b75a9e016b6ad99c88fe43b0" translate="yes" xml:space="preserve">
          <source>Pure paths are useful in some special cases; for example:</source>
          <target state="translated">ピュアパスは、いくつかの特殊なケースで有用です。</target>
        </trans-unit>
        <trans-unit id="a95973d5a8727818a646cdeaf2207e97f5c432af" translate="yes" xml:space="preserve">
          <source>Pure paths provide the following methods and properties:</source>
          <target state="translated">ピュアパスは、以下のメソッドとプロパティを提供します。</target>
        </trans-unit>
        <trans-unit id="66b0802b57fa5d6f4443fda5ba7dcc1d15cb11ba" translate="yes" xml:space="preserve">
          <source>PureProxy Objects</source>
          <target state="translated">PureProxy オブジェクト</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="d2076bd43bbde39434180af8fb6f4c6d0957b8c3" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.get_wch&quot;&gt;&lt;code&gt;get_wch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">次の&lt;a href=&quot;#curses.window.get_wch&quot;&gt; &lt;code&gt;get_wch()&lt;/code&gt; &lt;/a&gt;がそれを返すように&lt;em&gt;chを&lt;/em&gt;プッシュします。</target>
        </trans-unit>
        <trans-unit id="cc55018208e43f65febacf54f81f7d45197acf2c" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">&lt;em&gt;chを&lt;/em&gt;プッシュして、次の&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;がそれを返すようにします。</target>
        </trans-unit>
        <trans-unit id="46b37576d9141e6a9f06389f49d50517fb63900b" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;item&lt;/em&gt; on the heap, then pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;. The combined action runs more efficiently than &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; followed by a separate call to &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヒープ上で&lt;em&gt;アイテム&lt;/em&gt;をプッシュし、ポップして&lt;em&gt;ヒープ&lt;/em&gt;から最小のアイテムを返し&lt;em&gt;ます&lt;/em&gt;。組み合わせたアクションは、&lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; に&lt;/a&gt;続いて&lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; &lt;/a&gt;を個別に呼び出すよりも効率的に実行されます。</target>
        </trans-unit>
        <trans-unit id="deeb8489db73ca68d5d5e5c0e00a56bb921df592" translate="yes" xml:space="preserve">
          <source>Push a &lt;code&gt;KEY_MOUSE&lt;/code&gt; event onto the input queue, associating the given state data with it.</source>
          <target state="translated">&lt;code&gt;KEY_MOUSE&lt;/code&gt; イベントを入力キューにプッシュし、指定された状態データをそれに関連付けます。</target>
        </trans-unit>
        <trans-unit id="bdc5f19341ef454044ce777ed9a985c1ee736ce7" translate="yes" xml:space="preserve">
          <source>Push a line of source text to the interpreter. The line should not have a trailing newline; it may have internal newlines. The line is appended to a buffer and the interpreter&amp;rsquo;s &lt;code&gt;runsource()&lt;/code&gt; method is called with the concatenated contents of the buffer as source. If this indicates that the command was executed or invalid, the buffer is reset; otherwise, the command is incomplete, and the buffer is left as it was after the line was appended. The return value is &lt;code&gt;True&lt;/code&gt; if more input is required, &lt;code&gt;False&lt;/code&gt; if the line was dealt with in some way (this is the same as &lt;code&gt;runsource()&lt;/code&gt;).</source>
          <target state="translated">ソーステキストの行をインタープリターにプッシュします。行の末尾に改行があってはなりません。内部に改行がある場合があります。行がバッファーに追加され、インタープリターの &lt;code&gt;runsource()&lt;/code&gt; メソッドが、バッファーの連結されたコンテンツをソースとして呼び出されます。これがコマンドが実行されたか無効であることを示している場合、バッファはリセットされます。そうしないと、コマンドは不完全になり、バッファーは行が追加された後の状態のままになります。戻り値は、さらに入力が必要な場合は &lt;code&gt;True&lt;/code&gt; 、何らかの方法で行が処理された場合は &lt;code&gt;False&lt;/code&gt; です（これは &lt;code&gt;runsource()&lt;/code&gt; と同じです）。</target>
        </trans-unit>
        <trans-unit id="1ff551f79566ed40a79345d1a8d8c3a5bf217bd8" translate="yes" xml:space="preserve">
          <source>Push an input source stream onto the input stack. If the filename argument is specified it will later be available for use in error messages. This is the same method used internally by the &lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt;&lt;code&gt;sourcehook()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">入力ソースストリームを入力スタックにプッシュします。filename引数が指定されている場合、後でエラーメッセージで使用できます。これは、&lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt; &lt;code&gt;sourcehook()&lt;/code&gt; &lt;/a&gt;メソッドによって内部的に使用されるメソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="db6c3afd930aeb68d89014ee5433350a0a681bc6" translate="yes" xml:space="preserve">
          <source>Push panel to the top of the stack.</source>
          <target state="translated">パネルをスタックの一番上に押してください。</target>
        </trans-unit>
        <trans-unit id="285e296d900920005aeb30736d8c5b8dbc446057" translate="yes" xml:space="preserve">
          <source>Push the argument onto the token stack.</source>
          <target state="translated">引数をトークンスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="e33f8f562ff442430fbdaadf2f184466a7cf2d74" translate="yes" xml:space="preserve">
          <source>Push the panel to the bottom of the stack.</source>
          <target state="translated">パネルをスタックの一番下まで押し込みます。</target>
        </trans-unit>
        <trans-unit id="1a260125546e3d60f42e10e3381f7f1f4e4702de" translate="yes" xml:space="preserve">
          <source>Push the value &lt;em&gt;item&lt;/em&gt; onto the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant.</source>
          <target state="translated">値の&lt;em&gt;項目&lt;/em&gt;を&lt;em&gt;ヒープ&lt;/em&gt;にプッシュし、ヒープの不変を維持します。</target>
        </trans-unit>
        <trans-unit id="e87381f973c93a45ec66467fdd6d2f61819e610f" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;NULL&lt;/code&gt; onto the stack for using it in &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt;&lt;code&gt;POP_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt;&lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt;&lt;/a&gt;. Starts the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">プッシュ &lt;code&gt;NULL&lt;/code&gt; でそれを使用するためのスタックに&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt; &lt;code&gt;POP_FINALLY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt; &lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ブロックを開始します。</target>
        </trans-unit>
        <trans-unit id="6d0445bcde7e6ba3eb17ac8b16105316c176699b" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;builtins.__build_class__()&lt;/code&gt; onto the stack. It is later called by &lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt;&lt;code&gt;CALL_FUNCTION&lt;/code&gt;&lt;/a&gt; to construct a class.</source>
          <target state="translated">プッシュ &lt;code&gt;builtins.__build_class__()&lt;/code&gt; スタックに。後でクラスを作成するために&lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt; &lt;code&gt;CALL_FUNCTION&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="49a0ce60315742720d6e790708903a5cbdd38a13" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;co_consts[consti]&lt;/code&gt; onto the stack.</source>
          <target state="translated">プッシュの &lt;code&gt;co_consts[consti]&lt;/code&gt; スタックに。</target>
        </trans-unit>
        <trans-unit id="8c5c906f16d7213e3fe5cb70f6c4ba0d38aaf04f" translate="yes" xml:space="preserve">
          <source>Pushes a &lt;code&gt;None&lt;/code&gt; on to the producer queue. When this producer is popped off the queue it causes the channel to be closed.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; をプロデューサーキューにプッシュします。このプロデューサーがキューからポップされると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="914c8745b5a1bdf4649b1e5f23b242a942f8605d" translate="yes" xml:space="preserve">
          <source>Pushes a new dictionary object onto the stack. Pops &lt;code&gt;2 * count&lt;/code&gt; items so that the dictionary holds &lt;em&gt;count&lt;/em&gt; entries: &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt;.</source>
          <target state="translated">新しい辞書オブジェクトをスタックにプッシュします。ディクショナリが&lt;em&gt;count&lt;/em&gt;エントリを保持するように &lt;code&gt;2 * count&lt;/code&gt; 個のアイテムをポップします： &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08052794fb7c2dbab8e430d2dd07bf32e9f75c31" translate="yes" xml:space="preserve">
          <source>Pushes a new function object on the stack. From bottom to top, the consumed stack must consist of values if the argument carries a specified flag value</source>
          <target state="translated">新しい関数オブジェクトをスタックにプッシュします。下から上に向かって、引数が指定されたフラグ値を持っている場合、消費されるスタックは値で構成されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="68ab25e4336f083f291523bf1fae81222344fd0f" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. The name of the variable is &lt;code&gt;co_cellvars[i]&lt;/code&gt; if &lt;em&gt;i&lt;/em&gt; is less than the length of &lt;em&gt;co_cellvars&lt;/em&gt;. Otherwise it is &lt;code&gt;co_freevars[i -
len(co_cellvars)]&lt;/code&gt;.</source>
          <target state="translated">セルのスロット&lt;em&gt;i&lt;/em&gt;に含まれるセルへの参照をプッシュし、変数ストレージを解放します。&lt;em&gt;i&lt;/em&gt;が&lt;em&gt;co_cellvars&lt;/em&gt;の長さより小さい場合、変数の名前は &lt;code&gt;co_cellvars[i]&lt;/code&gt; です。それ以外の場合は &lt;code&gt;co_freevars[i - len(co_cellvars)]&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dfe3cb391a82a542609fdfa5be8b3aa0ca06b25" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the local &lt;code&gt;co_varnames[var_num]&lt;/code&gt; onto the stack.</source>
          <target state="translated">ローカル &lt;code&gt;co_varnames[var_num]&lt;/code&gt; への参照をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="21b2febb965d2f948ea4cf0206cc623631a6cdd3" translate="yes" xml:space="preserve">
          <source>Pushes a slice object on the stack. &lt;em&gt;argc&lt;/em&gt; must be 2 or 3. If it is 2, &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; is pushed; if it is 3, &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; is pushed. See the &lt;a href=&quot;functions#slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; built-in function for more information.</source>
          <target state="translated">スライスオブジェクトをスタックにプッシュします。&lt;em&gt;argc&lt;/em&gt;は2または3でなければなりません。2の場合、 &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; がプッシュされます。3の場合、 &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; がプッシュされます。詳しくは、&lt;a href=&quot;functions#slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;組み込み関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d73d5ba6395f82b6350b0d8b60bb72d4aec78ca" translate="yes" xml:space="preserve">
          <source>Pushes a try block from a try-finally or try-except clause onto the block stack. &lt;em&gt;delta&lt;/em&gt; points to the finally block or the first except block.</source>
          <target state="translated">tryブロックをtry-finallyまたはtry-except句からブロックスタックにプッシュします。&lt;em&gt;delta&lt;/em&gt;は、finallyブロックまたは最初のexceptブロックを指します。</target>
        </trans-unit>
        <trans-unit id="20231af18a4c3e5c00a678485187da72502959f9" translate="yes" xml:space="preserve">
          <source>Pushes data on to the channel&amp;rsquo;s queue to ensure its transmission. This is all you need to do to have the channel write the data out to the network, although it is possible to use your own producers in more complex schemes to implement encryption and chunking, for example.</source>
          <target state="translated">チャネルのキューにデータをプッシュして、その送信を確実にします。たとえば、暗号化とチャンキングを実装するために、より複雑なスキームで独自のプロデューサーを使用することは可能ですが、チャネルがネットワークにデータを書き出すためにこれが必要なすべてです。</target>
        </trans-unit>
        <trans-unit id="0c46ce674d43f69f80e61570dc3c7d94f5756df0" translate="yes" xml:space="preserve">
          <source>Pushes the address of the next instruction onto the stack and increments bytecode counter by &lt;em&gt;delta&lt;/em&gt;. Used for calling the finally block as a &amp;ldquo;subroutine&amp;rdquo;.</source>
          <target state="translated">次の命令のアドレスをスタックにプッシュし、バイトコードカウンターを&lt;em&gt;deltaだけ&lt;/em&gt;インクリメントします。finallyブロックを「サブルーチン」として呼び出すために使用されます。</target>
        </trans-unit>
        <trans-unit id="d579563bfb99148066bcc319f8230278195bae33" translate="yes" xml:space="preserve">
          <source>Pushes the value associated with &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; に関連付けられた値をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="83775fb1f938d53ebaafa17df99df1094d912529" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue.</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;をキューに入れます。</target>
        </trans-unit>
        <trans-unit id="58b24c1f540864fcca7249c13913776d87e3018e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. If optional args &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is false), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;をキューに入れます。オプションのargs &lt;em&gt;ブロック&lt;/em&gt;がtrueで&lt;em&gt;タイムアウト&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、空きスロットが利用可能になるまで必要に応じてブロックします。&lt;em&gt;timeout&lt;/em&gt;が正の数の場合、最大で&lt;em&gt;timeout&lt;/em&gt;秒ブロックされ、その時間内に使用可能な空きスロットがない場合は&lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合（&lt;em&gt;block&lt;/em&gt;がfalse）、空きスロットがすぐに利用できる場合はアイテムをキューに入れ、そうでない場合は&lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt;例外を発生させます（その場合、&lt;em&gt;タイムアウト&lt;/em&gt;は無視されます）。</target>
        </trans-unit>
        <trans-unit id="8934b5345ae85e054929da0954168f7106a4dc3e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. The method never blocks and always succeeds (except for potential low-level errors such as failure to allocate memory). The optional args &lt;em&gt;block&lt;/em&gt; and &lt;em&gt;timeout&lt;/em&gt; are ignored and only provided for compatibility with &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;Queue.put()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;をキューに入れます。メソッドは決してブロックせず、常に成功します（メモリの割り当ての失敗などの潜在的な低レベルのエラーを除く）。オプションのargs &lt;em&gt;ブロック&lt;/em&gt;と&lt;em&gt;タイムアウト&lt;/em&gt;は無視され、&lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;Queue.put()&lt;/code&gt; &lt;/a&gt;との互換性のためにのみ提供されます。</target>
        </trans-unit>
        <trans-unit id="fb7807661d9be22693cbaed0a5656176c454fe3d" translate="yes" xml:space="preserve">
          <source>Put an item into the queue without blocking.</source>
          <target state="translated">アイテムをブロックせずにキューに入れる。</target>
        </trans-unit>
        <trans-unit id="8218d84bd6234ff18e8621ebfadb8c4e7388dc86" translate="yes" xml:space="preserve">
          <source>Put an item into the queue. If the queue is full, wait until a free slot is available before adding the item.</source>
          <target state="translated">アイテムをキューに入れます。キューが満杯の場合は、空きスロットが空くまで待ってからアイテムを追加してください。</target>
        </trans-unit>
        <trans-unit id="f9cae25a978f59af9278740f11652ef7349f16a2" translate="yes" xml:space="preserve">
          <source>Put obj into the queue. If the optional argument &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">objをキューに入れます。オプションの引数&lt;em&gt;block&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （デフォルト）で、&lt;em&gt;タイムアウト&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、空きスロットが利用可能になるまで必要に応じてブロックします。&lt;em&gt;timeout&lt;/em&gt;が正の数の場合、最大で&lt;em&gt;timeout&lt;/em&gt;秒ブロックし、その時間内に空きスロットがなかった場合は&lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt;例外を発生させます。それ以外の場合（&lt;em&gt;block&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; ）、空きスロットがすぐに利用できる場合はアイテムをキューに入れ、そうでない場合は&lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt;例外を発生させます（この場合、&lt;em&gt;タイムアウト&lt;/em&gt;は無視されます）。</target>
        </trans-unit>
        <trans-unit id="e30ebfbecb90eab274dc7f46a9658e29a415f031" translate="yes" xml:space="preserve">
          <source>Put the SMTP connection in TLS (Transport Layer Security) mode. All SMTP commands that follow will be encrypted. You should then call &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; again.</source>
          <target state="translated">SMTP接続をTLS（トランスポート層セキュリティ）モードにします。以降のすべてのSMTPコマンドは暗号化されます。次に、&lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; を&lt;/a&gt;再度呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2ad11b0512fca8842d107a0a94c7fecd10f4d659" translate="yes" xml:space="preserve">
          <source>Put the barrier into a broken state. This causes any active or future calls to &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; to fail with the &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt;. Use this for example if one of the threads needs to abort, to avoid deadlocking the application.</source>
          <target state="translated">バリアを壊れた状態にします。これにより、&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;へのアクティブな呼び出しまたは将来の呼び出しが&lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; で&lt;/a&gt;失敗します。これは、アプリケーションのデッドロックを回避するために、スレッドの1つを中止する必要がある場合などに使用します。</target>
        </trans-unit>
        <trans-unit id="9ad93fb8bceb03469b0b240c1d94e65e4ddf2c18" translate="yes" xml:space="preserve">
          <source>Put the device into non-blocking mode. Once in non-blocking mode, there is no way to return it to blocking mode.</source>
          <target state="translated">デバイスをノンブロッキングモードにします。ノンブロッキングモードにすると、ブロッキングモードに戻すことはできません。</target>
        </trans-unit>
        <trans-unit id="1091cfdefe23623ba530a4b8db12fc943326a5c3" translate="yes" xml:space="preserve">
          <source>Put the socket object into closed state without actually closing the underlying file descriptor. The file descriptor is returned, and can be reused for other purposes.</source>
          <target state="translated">ソケットオブジェクトを、実際にはファイルディスクリプタを閉じずに閉じた状態にする。ファイルディスクリプタが返され、他の目的で再利用することができます。</target>
        </trans-unit>
        <trans-unit id="f9d46fd9600b7e447b3fa4d11f9c74fc286b7f64" translate="yes" xml:space="preserve">
          <source>PyGObject</source>
          <target state="translated">PyGObject</target>
        </trans-unit>
        <trans-unit id="4d31c346c14baa247ff0c97428735b59c889439f" translate="yes" xml:space="preserve">
          <source>PyGObject provides introspection bindings for C libraries using &lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject&lt;/a&gt;. One of these libraries is the &lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK+ 3&lt;/a&gt; widget set. GTK+ comes with many more widgets than Tkinter provides. An online &lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK+ 3 Tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGObjectは、&lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject&lt;/a&gt;を使用してCライブラリのイントロスペクションバインディングを提供します。これらのライブラリの1つは&lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK + 3&lt;/a&gt;ウィジェットセットです。GTK +には、Tkinterが提供するよりも多くのウィジェットが付属しています。オンラインの&lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK + 3チュートリアル&lt;/a&gt;が利用可能です。</target>
        </trans-unit>
        <trans-unit id="42911d3d75f013cbeb6206491fb434ba0ff3febc" translate="yes" xml:space="preserve">
          <source>PyGTK</source>
          <target state="translated">PyGTK</target>
        </trans-unit>
        <trans-unit id="b94652fa2011827f7f94decf66c9ec4272404a0c" translate="yes" xml:space="preserve">
          <source>PyGTK provides bindings for an older version of the library, GTK+ 2. It provides an object oriented interface that is slightly higher level than the C one. There are also bindings to &lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME&lt;/a&gt;. An online &lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGTKは、ライブラリの古いバージョンであるGTK + 2のバインディングを提供します。これは、Cのものよりわずかに高いレベルのオブジェクト指向インターフェースを提供します。&lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME&lt;/a&gt;へのバインディングもあります。オンライン&lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;チュートリアル&lt;/a&gt;が利用可能です。</target>
        </trans-unit>
        <trans-unit id="d64c8cbe603dd88121eb44e96c989e19fb82e43a" translate="yes" xml:space="preserve">
          <source>PyGTK, PyQt, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</source>
          <target state="translated">PyGTK、PyQt、およびwxPythonはすべて、Tkinterよりもモダンなルックアンドフィールと多くのウィジェットを備えています。さらに、Pythonには他にも多くのGUIツールキットがあり、クロスプラットフォームでもプラットフォーム固有でもあります。より完全なリスト、およびさまざまなGUIツールキットが比較されているドキュメントへのリンクについては、Python Wiki の&lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUIプログラミング&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="591695c92a51e0a4994db8d71fa3299632cd41a3" translate="yes" xml:space="preserve">
          <source>PyQt</source>
          <target state="translated">PyQt</target>
        </trans-unit>
        <trans-unit id="9ae98c491854c976c1556187b6e1b97776f7d16f" translate="yes" xml:space="preserve">
          <source>PyQt is a &lt;strong&gt;sip&lt;/strong&gt;-wrapped binding to the Qt toolkit. Qt is an extensive C++ GUI application development framework that is available for Unix, Windows and Mac OS X. &lt;strong&gt;sip&lt;/strong&gt; is a tool for generating bindings for C++ libraries as Python classes, and is specifically designed for Python.</source>
          <target state="translated">PyQtは、Qtツールキットへの&lt;strong&gt;sipで&lt;/strong&gt;ラップされたバインディングです。Qtは、Unix、Windows、およびMac OS Xで使用できる広範なC ++ GUIアプリケーション開発フレームワークです&lt;strong&gt;。sip&lt;/strong&gt;は、PythonクラスとしてC ++ライブラリのバインディングを生成するためのツールで、Python用に特別に設計されています。</target>
        </trans-unit>
        <trans-unit id="619105fc659c95fc540d2c1e747b3b2993ea7fd1" translate="yes" xml:space="preserve">
          <source>PySide</source>
          <target state="translated">PySide</target>
        </trans-unit>
        <trans-unit id="c06a107c4ddf3a14e7737b994f893c16e1981005" translate="yes" xml:space="preserve">
          <source>PySide is a newer binding to the Qt toolkit, provided by Nokia. Compared to PyQt, its licensing scheme is friendlier to non-open source applications.</source>
          <target state="translated">PySide は、Nokia が提供する Qt ツールキットの新しいバインディングです。PyQt と比較して、そのライセンススキームはオープンソースではないアプリケーションに優しいものです。</target>
        </trans-unit>
        <trans-unit id="8cc5e9ed71ff538ccf01ed1a98424a08329a58d3" translate="yes" xml:space="preserve">
          <source>PyZipFile Objects</source>
          <target state="translated">PyZipFile オブジェクト</target>
        </trans-unit>
        <trans-unit id="0abcfa3470fb7187c7fa3a03e26b907cf9a49745" translate="yes" xml:space="preserve">
          <source>Py_UNICODE</source>
          <target state="translated">Py_UNICODE</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="6b8f61655c7227cb356bd2f7409e5033dbd21174" translate="yes" xml:space="preserve">
          <source>Python 3.3 adds several new functions in &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; that can be used to make precise measurements of process or wall-clock time. For example, see &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Pythonの3.3にいくつかの新しい機能を追加し&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;プロセスまたは壁時計時間の正確な測定を行うために使用することができます。たとえば、&lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">パイソンエーピーアイ</target>
        </trans-unit>
        <trans-unit id="3ee394b6d17ed1fc6cf7615a47330585fc9b0a01" translate="yes" xml:space="preserve">
          <source>Python Bytecode Instructions</source>
          <target state="translated">Pythonバイトコード命令</target>
        </trans-unit>
        <trans-unit id="3cb0f443a4045dcf52595aa8531b43c5c2fa7460" translate="yes" xml:space="preserve">
          <source>Python Docs</source>
          <target state="translated">Pythonドキュメント</target>
        </trans-unit>
        <trans-unit id="0355f05a806d1783a9cc7d8c5ea6ee60f3d6f24f" translate="yes" xml:space="preserve">
          <source>Python Interface</source>
          <target state="translated">パイソンインタフェース</target>
        </trans-unit>
        <trans-unit id="1f009e17d19f9da1b9faa9295f208962e3e63806" translate="yes" xml:space="preserve">
          <source>Python Language Mapping Specification</source>
          <target state="translated">Python言語マッピング仕様書</target>
        </trans-unit>
        <trans-unit id="0c6b8fde978bf14a2cd633dafb4a0b230f557746" translate="yes" xml:space="preserve">
          <source>Python Language Services</source>
          <target state="translated">パイソン言語サービス</target>
        </trans-unit>
        <trans-unit id="092211b0a454b4bd3d5953ff3df7fd3f99cf63ea" translate="yes" xml:space="preserve">
          <source>Python Packaging User Guide: Creating and using virtual environments</source>
          <target state="translated">Python パッケージングユーザーガイド。仮想環境の作成と使用</target>
        </trans-unit>
        <trans-unit id="7a623bcfe092da5ad8c875bc8b6a2c58c3966c7b" translate="yes" xml:space="preserve">
          <source>Python Runtime Services</source>
          <target state="translated">Python ランタイムサービス</target>
        </trans-unit>
        <trans-unit id="5e8caadc585bc176b908975c7b0f5adfd3ca07e5" translate="yes" xml:space="preserve">
          <source>Python Shell</source>
          <target state="translated">パイソンシェル</target>
        </trans-unit>
        <trans-unit id="37023209cd8d17b87ec33c9fedfa931e2dc4f32b" translate="yes" xml:space="preserve">
          <source>Python Shell window</source>
          <target state="translated">Python シェルウィンドウ</target>
        </trans-unit>
        <trans-unit id="b7d42ac213c92acc79852232679f79b31ea56451" translate="yes" xml:space="preserve">
          <source>Python Specific Encodings</source>
          <target state="translated">Python 特有のエンコーディング</target>
        </trans-unit>
        <trans-unit id="99225c5a1bfdba35aa585e3e9d0046d88e7f76de" translate="yes" xml:space="preserve">
          <source>Python Tkinter Resources</source>
          <target state="translated">Python Tkinter リソース</target>
        </trans-unit>
        <trans-unit id="c4b41fa096c8ca8de1aca03645726f801a284621" translate="yes" xml:space="preserve">
          <source>Python Type</source>
          <target state="translated">パイソン型</target>
        </trans-unit>
        <trans-unit id="8df32fb907357083986db821e14e12d057113627" translate="yes" xml:space="preserve">
          <source>Python and Tkinter Programming</source>
          <target state="translated">PythonとTkinterプログラミング</target>
        </trans-unit>
        <trans-unit id="aafe008164775ee95643f93c690b0bf91843c0fc" translate="yes" xml:space="preserve">
          <source>Python applications should normally find no need to invoke these functions, and should use &lt;a href=&quot;gettext#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; instead. A known exception to this rule are applications that link with additional C libraries which internally invoke &lt;code&gt;gettext()&lt;/code&gt; or &lt;code&gt;dcgettext()&lt;/code&gt;. For these applications, it may be necessary to bind the text domain, so that the libraries can properly locate their message catalogs.</source>
          <target state="translated">Pythonアプリケーションは通常、これらの関数を呼び出す必要はなく、代わりに&lt;a href=&quot;gettext#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;を使用する必要があります。このルールの既知の例外は、内部で &lt;code&gt;gettext()&lt;/code&gt; または &lt;code&gt;dcgettext()&lt;/code&gt; を呼び出す追加のCライブラリとリンクするアプリケーションです。これらのアプリケーションでは、ライブラリがメッセージカタログを適切に配置できるように、テキストドメインをバインドする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="7ba27acbccfe931c72cdbb3e8631db3a08ab43de" translate="yes" xml:space="preserve">
          <source>Python callable. Will be called with no arguments whenever either of the increment or decrement buttons are pressed.</source>
          <target state="translated">Pythonで呼び出し可能です。インクリメントボタンまたはデクリメントボタンのいずれかが押されるたびに、引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7c63cfd12aa8ac5be1bf526866c306771615c5c9" translate="yes" xml:space="preserve">
          <source>Python code objects have a &lt;code&gt;co_flags&lt;/code&gt; attribute, which is a bitmap of the following flags:</source>
          <target state="translated">Pythonコードオブジェクトには、以下のフラグのビットマップである &lt;code&gt;co_flags&lt;/code&gt; 属性があります。</target>
        </trans-unit>
        <trans-unit id="55264df222d98db1d1d4885beaee43c36a00af15" translate="yes" xml:space="preserve">
          <source>Python comes with a number of codecs built-in, either implemented as C functions or with dictionaries as mapping tables. The following table lists the codecs by name, together with a few common aliases, and the languages for which the encoding is likely used. Neither the list of aliases nor the list of languages is meant to be exhaustive. Notice that spelling alternatives that only differ in case or use a hyphen instead of an underscore are also valid aliases; therefore, e.g. &lt;code&gt;'utf-8'&lt;/code&gt; is a valid alias for the &lt;code&gt;'utf_8'&lt;/code&gt; codec.</source>
          <target state="translated">Pythonには、C関数として実装されているか、マッピングテーブルとして辞書が組み込まれている多数のコーデックが組み込まれています。次の表は、いくつかの一般的なエイリアスと一緒に名前でコーデックをリストし、エンコーディングが使用される可能性が高い言語を示しています。エイリアスのリストも言語のリストも、すべてを網羅しているわけではありません。大文字小文字のみが異なるか、アンダースコアの代わりにハイフンを使用する代替スペルも有効なエイリアスです。したがって、たとえば &lt;code&gt;'utf-8'&lt;/code&gt; は &lt;code&gt;'utf_8'&lt;/code&gt; コーデックの有効なエイリアスです。</target>
        </trans-unit>
        <trans-unit id="6638c7fb834b1386886a4ceb27ea78e43c6f048a" translate="yes" xml:space="preserve">
          <source>Python coroutines are &lt;em&gt;awaitables&lt;/em&gt; and therefore can be awaited from other coroutines:</source>
          <target state="translated">Pythonコルーチンは&lt;em&gt;待機&lt;/em&gt;可能であるため、他のコルーチンから&lt;em&gt;待機&lt;/em&gt;できます。</target>
        </trans-unit>
        <trans-unit id="7d88fc13b34091cdf70c9cff13c4b1284d594820" translate="yes" xml:space="preserve">
          <source>Python currently supports seven schemes:</source>
          <target state="translated">Pythonは現在7つのスキームをサポートしています。</target>
        </trans-unit>
        <trans-unit id="eaf945f94327f2c0ce5f5922c999addd589c7d83" translate="yes" xml:space="preserve">
          <source>Python defines &lt;code&gt;pow(0, 0)&lt;/code&gt; and &lt;code&gt;0 ** 0&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, as is common for programming languages.</source>
          <target state="translated">Pythonでは、 &lt;code&gt;pow(0, 0)&lt;/code&gt; と &lt;code&gt;0 ** 0&lt;/code&gt; を &lt;code&gt;1&lt;/code&gt; と定義しています。これは、プログラミング言語で一般的です。</target>
        </trans-unit>
        <trans-unit id="6b384100739e74cedd9aa09dc50763c7744aa517" translate="yes" xml:space="preserve">
          <source>Python defines several context managers to support easy thread synchronisation, prompt closure of files or other objects, and simpler manipulation of the active decimal arithmetic context. The specific types are not treated specially beyond their implementation of the context management protocol. See the &lt;a href=&quot;contextlib#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt; module for some examples.</source>
          <target state="translated">Pythonは、簡単なスレッド同期、ファイルやその他のオブジェクトの迅速なクローズ、およびアクティブな10進算術コンテキストのより簡単な操作をサポートするために、いくつかのコンテキストマネージャーを定義しています。特定のタイプは、コンテキスト管理プロトコルの実装を超えて特別に処理されません。いくつかの例については、&lt;a href=&quot;contextlib#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="137da51dc044f7d1989ccf40d2cf2bb7660c7a2f" translate="yes" xml:space="preserve">
          <source>Python defines several iterator objects to support iteration over general and specific sequence types, dictionaries, and other more specialized forms. The specific types are not important beyond their implementation of the iterator protocol.</source>
          <target state="translated">Python は、一般的なシーケンス型や特定のシーケンス型、辞書、その他のより専門的な形式に対する反復処理をサポートするために、いくつかのイテレータオブジェクトを定義しています。特定の型はイテレータプロトコルの実装を超えて重要ではありません。</target>
        </trans-unit>
        <trans-unit id="9b17cefa47591600687b4080407aa059ba0bde83" translate="yes" xml:space="preserve">
          <source>Python does not currently have an equivalent to &lt;code&gt;scanf()&lt;/code&gt;. Regular expressions are generally more powerful, though also more verbose, than &lt;code&gt;scanf()&lt;/code&gt; format strings. The table below offers some more-or-less equivalent mappings between &lt;code&gt;scanf()&lt;/code&gt; format tokens and regular expressions.</source>
          <target state="translated">現在、Pythonには &lt;code&gt;scanf()&lt;/code&gt; に相当するものはありません。正規表現は一般に、 &lt;code&gt;scanf()&lt;/code&gt; 形式の文字列よりも強力ですが、より冗長です。以下の表は、 &lt;code&gt;scanf()&lt;/code&gt; 形式のトークンと正規表現の間の多少の同等のマッピングを示しています。</target>
        </trans-unit>
        <trans-unit id="3865683b646bac2aedc53f477cbeee82b1f7c068" translate="yes" xml:space="preserve">
          <source>Python doesn&amp;rsquo;t depend on the underlying operating system&amp;rsquo;s notion of text files; all the processing is done by Python itself, and is therefore platform-independent.</source>
          <target state="translated">Pythonは、基礎となるオペレーティングシステムのテキストファイルの概念に依存しません。すべての処理はPython自体によって行われるため、プラットフォームに依存しません。</target>
        </trans-unit>
        <trans-unit id="8638513dc3901fe6eaa10ec89548c63a1ae8d88b" translate="yes" xml:space="preserve">
          <source>Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. Comparisons between numbers of mixed type use the same rule. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; The constructors &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt; can be used to produce numbers of a specific type.</source>
          <target state="translated">Pythonは混合演算を完全にサポートしています。2項算術演算子に異なる数値タイプのオペランドがある場合、「狭い」タイプのオペランドは他のオペランドに拡大され、整数は浮動小数点よりも狭く、複素数よりも狭くなります。混合タイプの数の比較は同じルールを使用します。&lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;コンストラクタ&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt;を使用して、特定の型の数値を生成できます。</target>
        </trans-unit>
        <trans-unit id="8dd854c517849a451ddd0370a06d5d10daf25373" translate="yes" xml:space="preserve">
          <source>Python has a more primitive serialization module called &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;, but in general &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; should always be the preferred way to serialize Python objects. &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; exists primarily to support Python&amp;rsquo;s &lt;code&gt;.pyc&lt;/code&gt; files.</source>
          <target state="translated">Pythonには&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;と呼ばれるよりプリミティブなシリアライゼーションモジュールがありますが、一般的に&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;は常にPythonオブジェクトをシリアライズするための好ましい方法です。&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;は、主にPythonの &lt;code&gt;.pyc&lt;/code&gt; ファイルをサポートするために存在します。</target>
        </trans-unit>
        <trans-unit id="125ddd4ef4447aca73bf2a25322e98803fa07676" translate="yes" xml:space="preserve">
          <source>Python has been able to execute zip files which contain a &lt;code&gt;__main__.py&lt;/code&gt; file since version 2.6. In order to be executed by Python, an application archive simply has to be a standard zip file containing a &lt;code&gt;__main__.py&lt;/code&gt; file which will be run as the entry point for the application. As usual for any Python script, the parent of the script (in this case the zip file) will be placed on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; and thus further modules can be imported from the zip file.</source>
          <target state="translated">Pythonは、バージョン2.6以降、 &lt;code&gt;__main__.py&lt;/code&gt; ファイルを含むzipファイルを実行できます。Pythonで実行するには、アプリケーションアーカイブは、アプリケーションのエントリポイントとして実行される &lt;code&gt;__main__.py&lt;/code&gt; ファイルを含む標準のzipファイルでなければなりません。通常のPythonスクリプトと同様に、スクリプトの親（この場合はzipファイル）は&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に配置されるため、zipファイルからさらにモジュールをインポートできます。</target>
        </trans-unit>
        <trans-unit id="8662158d794f9720576b3782157e79d1cffd1410" translate="yes" xml:space="preserve">
          <source>Python has provisional and experimental support for TLS 1.3 with OpenSSL 1.1.1. The new protocol behaves slightly differently than previous version of TLS/SSL. Some new TLS 1.3 features are not yet available.</source>
          <target state="translated">Python は OpenSSL 1.1.1.1 で TLS 1.3 を暫定的かつ実験的にサポートしています。新しいプロトコルは、以前のバージョンの TLS/SSL とは若干異なる挙動をします。いくつかの新しい TLS 1.3 の機能はまだ利用できません。</target>
        </trans-unit>
        <trans-unit id="b3eae67939d577e355bd547630d90de6f5735051" translate="yes" xml:space="preserve">
          <source>Python installation issues occasionally stop IDLE: multiple versions can clash, or a single installation might need admin access. If one undo the clash, or cannot or does not want to run as admin, it might be easiest to completely remove Python and start over.</source>
          <target state="translated">Python のインストールの問題は時々 IDLE が停止することがあります:複数のバージョンが衝突したり、単一のインストールでは管理者アクセスが必要になることがあります。衝突を元に戻したり、管理者として実行できなかったり、実行したくなかったりする場合は、Pythonを完全に削除して最初からやり直すのが一番簡単かもしれません。</target>
        </trans-unit>
        <trans-unit id="e2b2848aeccd01905aee189ff04a70f830b0c331" translate="yes" xml:space="preserve">
          <source>Python is started in isolated mode (command line option &lt;code&gt;-I&lt;/code&gt;), except if the &lt;code&gt;__isolated&lt;/code&gt; keyword is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__isolated&lt;/code&gt; キーワードが &lt;code&gt;False&lt;/code&gt; に設定されている場合を除き、Pythonは分離モード（コマンドラインオプション &lt;code&gt;-I&lt;/code&gt; ）で起動されます。</target>
        </trans-unit>
        <trans-unit id="038067e0594bc4123eff8d27bc300eff7f181804" translate="yes" xml:space="preserve">
          <source>Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</source>
          <target state="translated">Pythonモジュールのコードが再コンパイルされ、モジュールレベルのコードが再実行されて、最初にモジュールをロードした&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を再利用することにより、モジュールのディクショナリ内の名前にバインドされるオブジェクトの新しいセットを定義します。拡張モジュールの &lt;code&gt;init&lt;/code&gt; 関数は、2回目は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="2ea68622690cfcc29885ac7d1676e3539567a58b" translate="yes" xml:space="preserve">
          <source>Python offers two different primitive operations based on regular expressions: &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;re.match()&lt;/code&gt;&lt;/a&gt; checks for a match only at the beginning of the string, while &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt; checks for a match anywhere in the string (this is what Perl does by default).</source>
          <target state="translated">Pythonの正規表現に基づい申し出、2つの異なるプリミティブな操作を：&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;re.match()&lt;/code&gt; &lt;/a&gt;のみ、文字列の先頭に一致するかどうかを確認し、しばらく&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;文字列にマッチどこかをチェックし（これはPerlがデフォルトで何をするかです）。</target>
        </trans-unit>
        <trans-unit id="dc58dabbdc5bf17a7dfddcd9a8c1a72ef3764bbf" translate="yes" xml:space="preserve">
          <source>Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt;&lt;code&gt;PyErr_WarnEx()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</source>
          <target state="translated">Pythonプログラマは、このモジュールで定義されている&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt;関数を呼び出すことによって警告を発行します。 （Cプログラマーは&lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt; &lt;code&gt;PyErr_WarnEx()&lt;/code&gt; を&lt;/a&gt;使用します。詳細については、&lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;例外処理&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="e37dc2c721fd1ebbf3abee81977fa9b416561970" translate="yes" xml:space="preserve">
          <source>Python searches a standard list of directories to find one which the calling user can create files in. The list is:</source>
          <target state="translated">Pythonは標準的なディレクトリのリストを検索して、呼び出したユーザがファイルを作成できるディレクトリを見つけます。リストは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7c6d42373ec2780784c0876435cfe9919395c210" translate="yes" xml:space="preserve">
          <source>Python shell window (interactive interpreter) with colorizing of code input, output, and error messages</source>
          <target state="translated">コードの入力、出力、エラーメッセージを色分けした Python シェルウィンドウ (対話型インタプリタ)</target>
        </trans-unit>
        <trans-unit id="2df8d28b8372bf27065261b4a06d22c97b3c0df5" translate="yes" xml:space="preserve">
          <source>Python signal handlers are always executed in the main Python thread, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Pythonシグナルハンドラは、シグナルが別のスレッドで受信された場合でも、常にメインのPythonスレッドで実行されます。つまり、シグナルをスレッド間通信の手段として使用することはできません。代わりに、&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールの同期プリミティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="805515798ecd3a95f5151c4222be6d7e0eb0a1ce" translate="yes" xml:space="preserve">
          <source>Python stores default member variable values in class attributes. Consider this example, not using dataclasses:</source>
          <target state="translated">Pythonはデフォルトのメンバ変数の値をクラス属性に格納します。dataclassesを使わずに、この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="e57d4905f981518de8f41bf06f243fe9666343f0" translate="yes" xml:space="preserve">
          <source>Python supports a concept of iteration over containers. This is implemented using two distinct methods; these are used to allow user-defined classes to support iteration. Sequences, described below in more detail, always support the iteration methods.</source>
          <target state="translated">Python はコンテナに対する反復処理の概念をサポートしています。これは2つの異なるメソッドを使って実装されており、ユーザー定義クラスが反復処理をサポートするために使用されます。以下で詳しく説明するシーケンスは常にイテレーションメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e0a75faf88bfb70662f9456d02405996512aa26f" translate="yes" xml:space="preserve">
          <source>Python supports this conversion in several ways: the &lt;code&gt;idna&lt;/code&gt; codec performs conversion between Unicode and ACE, separating an input string into labels based on the separator characters defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;section 3.1 of RFC 3490&lt;/strong&gt;&lt;/a&gt; and converting each label to ACE as required, and conversely separating an input byte string into labels based on the &lt;code&gt;.&lt;/code&gt; separator and converting any ACE labels found into unicode. Furthermore, the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module transparently converts Unicode host names to ACE, so that applications need not be concerned about converting host names themselves when they pass them to the socket module. On top of that, modules that have host names as function parameters, such as &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ftplib#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt;, accept Unicode host names (&lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; then also transparently sends an IDNA hostname in the &lt;em&gt;Host&lt;/em&gt; field if it sends that field at all).</source>
          <target state="translated">Pythonはいくつかの方法でこの変換をサポートしています &lt;code&gt;idna&lt;/code&gt; コーデックはUnicodeとACEの間の変換を実行し&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;、RFC 3490のセクション3.1で&lt;/strong&gt;&lt;/a&gt;定義された区切り文字に基づいて入力文字列をラベルに分離し、必要に応じて各ラベルをACEに変換し、逆に入力を分離しますに基づくラベルへのバイト文字列 &lt;code&gt;.&lt;/code&gt; セパレーターおよび見つかったACEラベルをUnicodeに変換します。さらに、&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;モジュールはUnicodeホスト名をACEに透過的に変換するため、アプリケーションがホスト名をソケットモジュールに渡すときに、ホスト名自体を変換することをアプリケーションで考慮する必要はありません。以下のような関数のパラメータとしてホスト名を持っていることの上に、モジュール、&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;ftplib#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; の&lt;/a&gt;、Unicodeホスト名を受け入れます（&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;が&lt;em&gt;ホスト&lt;/em&gt;フィールドにIDNAホスト名を送信する場合は、そのフィールドも透過的に送信します）。</target>
        </trans-unit>
        <trans-unit id="121a3c63ec9b91ea07418db0e66efcf64062bcca" translate="yes" xml:space="preserve">
          <source>Python type</source>
          <target state="translated">パイソン型</target>
        </trans-unit>
        <trans-unit id="9ccd99214ece3191a794e3112fc45207a3eb50bd" translate="yes" xml:space="preserve">
          <source>Python uses an installation scheme that differs depending on the platform and on the installation options. These schemes are stored in &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; under unique identifiers based on the value returned by &lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Pythonは、プラットフォームとインストールオプションによって異なるインストールスキームを使用します。これらのスキームは、&lt;a href=&quot;os#os.name&quot;&gt; &lt;code&gt;os.name&lt;/code&gt; &lt;/a&gt;によって返された値に基づく一意の識別子の下で&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; に&lt;/a&gt;保存されます。</target>
        </trans-unit>
        <trans-unit id="5252a40c4f65097cb15222a351f8348f0bc26406" translate="yes" xml:space="preserve">
          <source>Python uses files to contain certificates. They should be formatted as &amp;ldquo;PEM&amp;rdquo; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422&lt;/strong&gt;&lt;/a&gt;), which is a base-64 encoded form wrapped with a header line and a footer line:</source>
          <target state="translated">Pythonはファイルを使用して証明書を格納します。それらは「PEM」（&lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422を&lt;/strong&gt;&lt;/a&gt;参照）としてフォーマットする必要があります。これは、ヘッダー行とフッター行でラップされたbase-64エンコード形式です。</target>
        </trans-unit>
        <trans-unit id="9f8bdbb93a76ab2d3cdffb25ae64e2c3b88bee50" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;と&lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt;デコレーターは、これらのプロトコルを実装する便利な方法を提供します。ジェネレータ機能が飾られている場合&lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; の&lt;/a&gt;デコレータ、それが必要な実装コンテキストマネージャ返され&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドではなく、非装飾生成機能によって生成イテレータ。</target>
        </trans-unit>
        <trans-unit id="677bd4593d4e82724111b6c2b600512ad45bb115" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;は、反復子プロトコルを実装する便利な方法を提供します。コンテナーオブジェクトの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;メソッドがジェネレーターとして実装されている場合は、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;および__next __（）メソッドを提供するイテレーターオブジェクト（技術的にはジェネレーターオブジェクト）が自動的に返されます。ジェネレーターの詳細について&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;は、yield式のドキュメントを参照してください&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
