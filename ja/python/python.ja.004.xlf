<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="030d3dd3f830cd67ca2c2c0b38d927e445841b05" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; for &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt;&lt;/a&gt; to set the &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; attribute on the returned module. If the attribute is already set the decorator does nothing. It is assumed that the first positional argument to the wrapped method (i.e. &lt;code&gt;self&lt;/code&gt;) is what &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; should be set to.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;のための&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt; &lt;/a&gt;を設定する&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;返さモジュールの属性を。属性がすでに設定されている場合、デコレータは何もしません。ラップされたメソッドへの最初の位置引数（つまり &lt;code&gt;self&lt;/code&gt; ）は&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;に設定する必要があると想定されています。</target>
        </trans-unit>
        <trans-unit id="679283def7ae4aed1acbc37e75d2e8fea0f80a8c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; for &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt;&lt;/a&gt; to set the &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; attribute on the returned module. If &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; is set and has a value other than &lt;code&gt;None&lt;/code&gt; it will not be changed.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;のための&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt; &lt;/a&gt;を設定する&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;返さモジュールの属性を。場合&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;セットと以外の値があるさ &lt;code&gt;None&lt;/code&gt; 、それは変更されません。</target>
        </trans-unit>
        <trans-unit id="c5b0cb19f2d7391278636eb13a8c3b6db568212e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;Finder&lt;/a&gt; for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; and package &lt;code&gt;__path__&lt;/code&gt; attributes. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; ABC.</source>
          <target state="translated">A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;のため&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;とパッケージ &lt;code&gt;__path__&lt;/code&gt; の属性。このクラスは、&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt; ABCを実装します。</target>
        </trans-unit>
        <trans-unit id="427bc2ba93ddd332b8d43aada8ea49c654f73854" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mapping&lt;/a&gt; object maps &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; values to arbitrary objects. Mappings are mutable objects. There is currently only one standard mapping type, the &lt;em&gt;dictionary&lt;/em&gt;. (For other containers see the built-in &lt;a href=&quot;#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; classes, and the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;マッピング・&lt;/a&gt;オブジェクトは、マップ&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;任意のオブジェクトに値を。マッピングは変更可能なオブジェクトです。唯一の標準マッピングタイプは、現在あり&lt;em&gt;辞書が&lt;/em&gt;。（他のコンテナーについては、組み込みの&lt;a href=&quot;#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。）</target>
        </trans-unit>
        <trans-unit id="de8f49639e6219fd36f201dba350623881f7adb8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mapping&lt;/a&gt; object representing the string environment. For example, &lt;code&gt;environ['HOME']&lt;/code&gt; is the pathname of your home directory (on some platforms), and is equivalent to &lt;code&gt;getenv(&quot;HOME&quot;)&lt;/code&gt; in C.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;マッピング&lt;/a&gt;文字列の環境を表すオブジェクト。たとえば、 &lt;code&gt;environ['HOME']&lt;/code&gt; は、ホームディレクトリ（一部のプラットフォーム）のパス名で、Cの &lt;code&gt;getenv(&quot;HOME&quot;)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2eff271bc21e649ce10969a06da33b151c7343f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; giving parameters of the numeric hash implementation. For more details about hashing of numeric types, see &lt;a href=&quot;stdtypes#numeric-hash&quot;&gt;Hashing of numeric types&lt;/a&gt;.</source>
          <target state="translated">数値ハッシュ実装のパラメーターを指定する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;。数値型のハッシュの詳細については、参照&lt;a href=&quot;stdtypes#numeric-hash&quot;&gt;数値型のハッシュ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebf3119e6e61b15d22b495ffd61ac693d55975cd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; holding information about the float type. It contains low level information about the precision and internal representation. The values correspond to the various floating-point constants defined in the standard header file &lt;code&gt;float.h&lt;/code&gt; for the &amp;lsquo;C&amp;rsquo; programming language; see section 5.2.4.2.2 of the 1999 ISO/IEC C standard &lt;a href=&quot;#c99&quot; id=&quot;id1&quot;&gt;[C99]&lt;/a&gt;, &amp;lsquo;Characteristics of floating types&amp;rsquo;, for details.</source>
          <target state="translated">float型に関する情報を保持する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;。精度と内部表現に関する低レベルの情報が含まれています。これらの値は、「C」プログラミング言語の標準ヘッダーファイル &lt;code&gt;float.h&lt;/code&gt; で定義されているさまざまな浮動小数点定数に対応しています。詳細については、1999 ISO / IEC C規格のセクション5.2.4.2.2 &lt;a href=&quot;#c99&quot; id=&quot;id1&quot;&gt;[C99]の&lt;/a&gt;「浮動型の特性」を参照してください。</target>
        </trans-unit>
        <trans-unit id="0ed4ed104fa8bfdf09911ff71c98cf1b6b3d3c12" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; holding information about the thread implementation.</source>
          <target state="translated">スレッドの実装に関する情報を保持する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea26cb164d0df858c41541c07e6c09f6611f22f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; that holds information about Python&amp;rsquo;s internal representation of integers. The attributes are read only.</source>
          <target state="translated">Pythonの整数の内部表現に関する情報を保持する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;。属性は読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="e5b795850cd7c7d2da6c9d2e4494d9697f725628" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; decorator specifically for enumerations. It searches an enumeration&amp;rsquo;s &lt;code&gt;__members__&lt;/code&gt; gathering any aliases it finds; if any are found &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised with the details:</source>
          <target state="translated">列挙型専用の&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;デコレータ。列挙型の &lt;code&gt;__members__&lt;/code&gt; を検索して、見つかったエイリアスを収集します。いずれかが見つかった&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が詳細とともに発生します。</target>
        </trans-unit>
        <trans-unit id="a58ac8fd05fa27350deb2a4e680a3f1efa192ac0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Heapsort&quot;&gt;heapsort&lt;/a&gt; can be implemented by pushing all values onto a heap and then popping off the smallest values one at a time:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Heapsort&quot;&gt;ヒープソートは、&lt;/a&gt;ヒープ上のすべての値をプッシュし、次に一度に最小値のいずれかをオフにポップすることによって実現することができます。</target>
        </trans-unit>
        <trans-unit id="28d905ffd8ce82632522dfbae4451c5f350e4452" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;tokenizer or scanner&lt;/a&gt; analyzes a string to categorize groups of characters. This is a useful first step in writing a compiler or interpreter.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;トークナイザまたはスキャナは、&lt;/a&gt;文字の分類グループへの文字列を分析します。これは、コンパイラーまたはインタープリターを作成する際に役立つ最初のステップです。</target>
        </trans-unit>
        <trans-unit id="8e08f633b78cd6ea037a0ae5da4b8f7b1971f5c7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Priority_queue&quot;&gt;priority queue&lt;/a&gt; is common use for a heap, and it presents several implementation challenges:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Priority_queue&quot;&gt;プライオリティキューは&lt;/a&gt;、ヒープのための一般的な使用であり、それにはいくつかの実装上の課題を提示します。</target>
        </trans-unit>
        <trans-unit id="c8d946a39d6fc254a89c3ce55a7f06a8eac29989" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Round-robin_scheduling&quot;&gt;round-robin scheduler&lt;/a&gt; can be implemented with input iterators stored in a &lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt;. Values are yielded from the active iterator in position zero. If that iterator is exhausted, it can be removed with &lt;a href=&quot;#collections.deque.popleft&quot;&gt;&lt;code&gt;popleft()&lt;/code&gt;&lt;/a&gt;; otherwise, it can be cycled back to the end with the &lt;a href=&quot;#collections.deque.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Round-robin_scheduling&quot;&gt;ラウンドロビンスケジューラは、&lt;/a&gt;に格納されている入力イテレータで実現することができる&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;。値は、位置ゼロのアクティブなイテレーターから生成されます。イテレータが使い果たされた場合は、&lt;a href=&quot;#collections.deque.popleft&quot;&gt; &lt;code&gt;popleft()&lt;/code&gt; で&lt;/a&gt;削除できます。それ以外の場合は、&lt;a href=&quot;#collections.deque.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;メソッドを使用して最後まで循環させることができます。</target>
        </trans-unit>
        <trans-unit id="db221963cb56c023676764d4f666b4358d6541f4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://www.w3.org/TR/xml-c14n2/&quot;&gt;C14N 2.0&lt;/a&gt; writer. Arguments are the same as for the &lt;a href=&quot;#xml.etree.ElementTree.canonicalize&quot;&gt;&lt;code&gt;canonicalize()&lt;/code&gt;&lt;/a&gt; function. This class does not build a tree but translates the callback events directly into a serialised form using the &lt;em&gt;write&lt;/em&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xml-c14n2/&quot;&gt;C14N 2.0&lt;/a&gt;ライター。引数は&lt;a href=&quot;#xml.etree.ElementTree.canonicalize&quot;&gt; &lt;code&gt;canonicalize()&lt;/code&gt; &lt;/a&gt;関数と同じです。このクラスはツリーを構築しませんが、&lt;em&gt;write&lt;/em&gt;関数を使用してコールバックイベントを直接シリアル化された形式に変換します。</target>
        </trans-unit>
        <trans-unit id="2121432c34073fe362e5ac909f6786fcfde968ad" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; object indicating whether &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt; permits specifying &lt;code&gt;True&lt;/code&gt; for its &lt;em&gt;effective_ids&lt;/em&gt; parameter on the local platform. (Specifying &lt;code&gt;False&lt;/code&gt; for &lt;em&gt;effective_ids&lt;/em&gt; is always supported on all platforms.) If the local platform supports it, the collection will contain &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt;; otherwise it will be empty.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;かどうかを示すオブジェクト&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; が&lt;/a&gt;指定可能にする &lt;code&gt;True&lt;/code&gt; のため&lt;em&gt;effective_idsの&lt;/em&gt;ローカルプラットフォーム上のパラメーター。 （&lt;em&gt;effective_idsに&lt;/em&gt; &lt;code&gt;False&lt;/code&gt; を指定する&lt;em&gt;こと&lt;/em&gt;は、すべてのプラットフォームで常にサポートされます。）ローカルプラットフォームでサポートされている場合、コレクションには&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt;が含まれます。それ以外の場合は空になります。</target>
        </trans-unit>
        <trans-unit id="d296fa8d46e25f6c8e763ad8ec28ba51aa5c8792" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; object indicating which functions in the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module accept &lt;code&gt;False&lt;/code&gt; for their &lt;em&gt;follow_symlinks&lt;/em&gt; parameter on the local platform. Different platforms provide different features, and the underlying functionality Python uses to implement &lt;em&gt;follow_symlinks&lt;/em&gt; is not available on all platforms Python supports. For consistency&amp;rsquo;s sake, functions that may support &lt;em&gt;follow_symlinks&lt;/em&gt; always allow specifying the parameter, but will throw an exception if the functionality is used when it&amp;rsquo;s not locally available. (Specifying &lt;code&gt;True&lt;/code&gt; for &lt;em&gt;follow_symlinks&lt;/em&gt; is always supported on all platforms.)</source>
          <target state="translated">&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;内のどの機能を示すオブジェクト&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;受け入れるモジュール &lt;code&gt;False&lt;/code&gt; そのため&lt;em&gt;follow_symlinksの&lt;/em&gt;ローカルプラットフォーム上のパラメーター。異なるプラットフォームは異なる機能を提供し、Pythonが&lt;em&gt;follow_symlinks&lt;/em&gt;を実装するために使用する基本機能は、Pythonがサポートするすべてのプラットフォームで使用できる&lt;em&gt;わけで&lt;/em&gt;はありません。一貫性を&lt;em&gt;保つ&lt;/em&gt;ために、&lt;em&gt;follow_symlinks&lt;/em&gt;をサポートする可能性のある関数は、常にパラメーターの指定を許可しますが、ローカルで使用できないときに機能を使用すると、例外がスローされます。 （&lt;em&gt;follow_symlinksに&lt;/em&gt; &lt;code&gt;True&lt;/code&gt; を指定する&lt;em&gt;こと&lt;/em&gt;は、すべてのプラットフォームで常にサポートされています。）</target>
        </trans-unit>
        <trans-unit id="023b4175e054835ac2cb6f2b2d45a293c86f09d1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; object indicating which functions in the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module accept an open file descriptor for their &lt;em&gt;dir_fd&lt;/em&gt; parameter. Different platforms provide different features, and the underlying functionality Python uses to implement the &lt;em&gt;dir_fd&lt;/em&gt; parameter is not available on all platforms Python supports. For consistency&amp;rsquo;s sake, functions that may support &lt;em&gt;dir_fd&lt;/em&gt; always allow specifying the parameter, but will throw an exception if the functionality is used when it&amp;rsquo;s not locally available. (Specifying &lt;code&gt;None&lt;/code&gt; for &lt;em&gt;dir_fd&lt;/em&gt; is always supported on all platforms.)</source>
          <target state="translated">&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;内のどの機能を示すオブジェクト&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;それらのためのオープン・ファイル・ディスクリプタ受け入れるモジュール&lt;em&gt;dir_fd&lt;/em&gt;パラメータ。異なるプラットフォームは異なる機能を提供し、Pythonが&lt;em&gt;dir_fd&lt;/em&gt;パラメーターを実装するために使用する基本機能は、Pythonがサポートするすべてのプラットフォームで使用できるわけではありません。一貫性を&lt;em&gt;保つ&lt;/em&gt;ために、&lt;em&gt;dir_fd&lt;/em&gt;をサポートする可能性のある関数は常にパラメーターの指定を許可しますが、ローカルで使用できないときに機能を使用すると例外がスローされます。 （&lt;em&gt;dir_fdに&lt;/em&gt; &lt;code&gt;None&lt;/code&gt; を指定すると、すべてのプラットフォームで常にサポートされます。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="804595104307fdc5d8940ab830b2766a6d093e25" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; object indicating which functions in the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module permit specifying their &lt;em&gt;path&lt;/em&gt; parameter as an open file descriptor on the local platform. Different platforms provide different features, and the underlying functionality Python uses to accept open file descriptors as &lt;em&gt;path&lt;/em&gt; arguments is not available on all platforms Python supports.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;内のどの機能を示すオブジェクト&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;その特定モジュール許可&lt;em&gt;パス&lt;/em&gt;ローカルプラットフォーム上のオープンファイル記述子としてパラメータ。異なるプラットフォームは異なる機能を提供し、Pythonがサポートするすべてのプラットフォームで&lt;em&gt;パス&lt;/em&gt;引数を使用できるわけではないため、Pythonがオープンファイル記述子を受け入れるために使用する基本機能。</target>
        </trans-unit>
        <trans-unit id="2b1ee0af0fdc876c5f3f13aba4bee45331acbe7d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object represents a (local) time of day, independent of any particular day, and subject to adjustment via a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトは、その日の（ローカルな）時刻を表す任意の特定の日の独立、および介して調整の対象&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のの&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ca28cd3bff1da16ab1fd51716b76379442343c20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;'Content-type:'&lt;/code&gt; header with the guessed content type is output, followed by a &lt;code&gt;'Content-Length:'&lt;/code&gt; header with the file&amp;rsquo;s size and a &lt;code&gt;'Last-Modified:'&lt;/code&gt; header with the file&amp;rsquo;s modification time.</source>
          <target state="translated">推測されたコンテンツタイプを含む &lt;code&gt;'Content-type:'&lt;/code&gt; ヘッダーが出力され、その後にファイルのサイズを含む &lt;code&gt;'Last-Modified:'&lt;/code&gt; &lt;code&gt;'Content-Length:'&lt;/code&gt; ヘッダーとファイルの変更時刻を含む「Last-Modified：」ヘッダーが続きます。</target>
        </trans-unit>
        <trans-unit id="31540334354a941812e0352bf7b1433eec883c50" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(transport, protocol)&lt;/code&gt; tuple is returned on success.</source>
          <target state="translated">&lt;code&gt;(transport, protocol)&lt;/code&gt; タプルは、成功に返されます。</target>
        </trans-unit>
        <trans-unit id="4c2f4d1310d7c54cccc2413356a25bc7b8ca96e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;0&lt;/code&gt; value for any parameter will cause the default character to be used for that parameter. Keyword parameters can &lt;em&gt;not&lt;/em&gt; be used. The defaults are listed in this table:</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 任意のパラメータの値は、そのパラメータに使用されるデフォルトの文字が発生します。キーワードパラメータは使用でき&lt;em&gt;ませ&lt;/em&gt;ん。次の表にデフォルトを示します。</target>
        </trans-unit>
        <trans-unit id="58667a14bb3463a776a3afd9b664a6f3d62c90f2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Document&lt;/code&gt; represents an entire XML document, including its constituent elements, attributes, processing instructions, comments etc. Remember that it inherits properties from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;Document&lt;/code&gt; 、それからプロパティを継承することを覚えてその構成要素を含む、属性、命令を処理する、コメントなど、XML文書全体を表す &lt;code&gt;Node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="191192193378c3a933447602c7df35eab6e6dc41" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; of attribute objects. Only elements have actual values for this; others provide &lt;code&gt;None&lt;/code&gt; for this attribute. This is a read-only attribute.</source>
          <target state="translated">&lt;code&gt;NamedNodeMap&lt;/code&gt; 属性オブジェクトの。要素のみがこのための実際の値を持っています。他のユーザーは、この属性に &lt;code&gt;None&lt;/code&gt; を提供します。これは読み取り専用属性です。</target>
        </trans-unit>
        <trans-unit id="c1bb362b02ead4365300aa358220289ed3835091" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NodeList&lt;/code&gt; represents a sequence of nodes. These objects are used in two ways in the DOM Core recommendation: an &lt;code&gt;Element&lt;/code&gt; object provides one as its list of child nodes, and the &lt;code&gt;getElementsByTagName()&lt;/code&gt; and &lt;code&gt;getElementsByTagNameNS()&lt;/code&gt; methods of &lt;code&gt;Node&lt;/code&gt; return objects with this interface to represent query results.</source>
          <target state="translated">A &lt;code&gt;NodeList&lt;/code&gt; ノードの配列を表します。これらのオブジェクトは、DOMコア勧告に2つの方法で使用される &lt;code&gt;Element&lt;/code&gt; オブジェクトは、子ノードのリストのようなものを提供し、 &lt;code&gt;getElementsByTagName()&lt;/code&gt; および &lt;code&gt;getElementsByTagNameNS()&lt;/code&gt; のメソッド &lt;code&gt;Node&lt;/code&gt; クエリ結果を表すためにこのインタフェースを持つリターンオブジェクト。</target>
        </trans-unit>
        <trans-unit id="81bec92bd52cca8e7bb90b5937efb22b9fe197de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;None&lt;/code&gt; value indicates that the process has not terminated yet.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 値は、プロセスがまだ終了していないことを示しています。</target>
        </trans-unit>
        <trans-unit id="025828451f164160d16e9754fcf7aa3efab514f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TarInfo&lt;/code&gt; object has the following public data attributes:</source>
          <target state="translated">&lt;code&gt;TarInfo&lt;/code&gt; オブジェクトには、次のパブリックデータの属性があります。</target>
        </trans-unit>
        <trans-unit id="bffeeecef39f99592ebf468dc69e8517a9b50068" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;call&lt;/code&gt; object is either a tuple of (positional args, keyword args) or (name, positional args, keyword args) depending on how it was constructed. When you construct them yourself this isn&amp;rsquo;t particularly interesting, but the &lt;code&gt;call&lt;/code&gt; objects that are in the &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;Mock.call_args_list&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;Mock.mock_calls&lt;/code&gt;&lt;/a&gt; attributes can be introspected to get at the individual arguments they contain.</source>
          <target state="translated">&lt;code&gt;call&lt;/code&gt; オブジェクトは、それが構築された方法に応じて（位置引数、キーワード引数）または（名前、位置引数、キーワード引数）のタプルのいずれかです。それらを自分で構築する場合、これは特に興味深いことではありませんが、&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;Mock.call_args_list&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;Mock.mock_calls&lt;/code&gt; &lt;/a&gt;属性にある &lt;code&gt;call&lt;/code&gt; オブジェクトをイントロスペクトして、それらに含まれる個々の引数を取得できます。</target>
        </trans-unit>
        <trans-unit id="a4380bb078fc4338009962d3e05400120310d6ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;cte_type&lt;/code&gt; value of &lt;code&gt;8bit&lt;/code&gt; only works with &lt;code&gt;BytesGenerator&lt;/code&gt;, not &lt;code&gt;Generator&lt;/code&gt;, because strings cannot contain binary data. If a &lt;code&gt;Generator&lt;/code&gt; is operating under a policy that specifies &lt;code&gt;cte_type=8bit&lt;/code&gt;, it will act as if &lt;code&gt;cte_type&lt;/code&gt; is &lt;code&gt;7bit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cte_type&lt;/code&gt; の値 &lt;code&gt;8bit&lt;/code&gt; がのみで動作します &lt;code&gt;BytesGenerator&lt;/code&gt; 、ない &lt;code&gt;Generator&lt;/code&gt; 文字列はバイナリデータを含めることはできませんので、。場合 &lt;code&gt;Generator&lt;/code&gt; 指定されているポリシーの下で動作している &lt;code&gt;cte_type=8bit&lt;/code&gt; かのように、それは動作します &lt;code&gt;cte_type&lt;/code&gt; がある &lt;code&gt;7bit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2279721be5c337aadd6f0ec1b7d9fad329fa0d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; instance containing the response headers. &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; is a subclass of &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http.client.HTTPMessage&lt;/code&gt; の応答ヘッダを含むインスタンス。 &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; は&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="c84d7658f9bae4036b4d77590667182232ea739e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;level&lt;/code&gt; which is not a string or which is a string not corresponding to an actual logging level.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; 文字列でない場合、または実際のログレベルに対応しない文字列です。</target>
        </trans-unit>
        <trans-unit id="9fc05ba900f7054ee14ec26e8e54c2f73ece35c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;propagate&lt;/code&gt; value which is not a boolean.</source>
          <target state="translated">&lt;code&gt;propagate&lt;/code&gt; ブール値ではありません。</target>
        </trans-unit>
        <trans-unit id="23c84d0d7a0e9b0c71e27e81939b9915d64b936f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;turtle.cfg&lt;/code&gt; file which serves as an example of how to write and use such files.</source>
          <target state="translated">このようなファイルの作成方法と使用方法の例として役立つ &lt;code&gt;turtle.cfg&lt;/code&gt; ファイル。</target>
        </trans-unit>
        <trans-unit id="5f74269ec0066d556bc1807528e6049b7fecbae9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;wsgi.file_wrapper&lt;/code&gt; factory, or &lt;code&gt;None&lt;/code&gt;. The default value of this attribute is the &lt;a href=&quot;#wsgiref.util.FileWrapper&quot;&gt;&lt;code&gt;wsgiref.util.FileWrapper&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;wsgi.file_wrapper&lt;/code&gt; の工場、または &lt;code&gt;None&lt;/code&gt; 。この属性のデフォルト値は&lt;a href=&quot;#wsgiref.util.FileWrapper&quot;&gt; &lt;code&gt;wsgiref.util.FileWrapper&lt;/code&gt; &lt;/a&gt;クラスです。</target>
        </trans-unit>
        <trans-unit id="89ff431fca3ee8e82875c250b16cef7d30eeaed2" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;clamp&lt;/em&gt; value of &lt;code&gt;1&lt;/code&gt; allows compatibility with the fixed-width decimal interchange formats specified in IEEE 754.</source>
          <target state="translated">&lt;em&gt;クランプ&lt;/em&gt;の値 &lt;code&gt;1&lt;/code&gt; は、 IEEE 754で指定された固定幅の小数交換フォーマットとの互換性を可能にします。</target>
        </trans-unit>
        <trans-unit id="cad2b698fbfd96becdcb8bacd30ca6d30ba8ab74" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;cte&lt;/em&gt; of &lt;code&gt;binary&lt;/code&gt; does not actually work correctly yet. The &lt;code&gt;EmailMessage&lt;/code&gt; object as modified by &lt;code&gt;set_content&lt;/code&gt; is correct, but &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; does not serialize it correctly.</source>
          <target state="translated">&lt;code&gt;binary&lt;/code&gt; の&lt;em&gt;cte&lt;/em&gt;は、実際にはまだ正しく機能していません。 &lt;code&gt;EmailMessage&lt;/code&gt; ののによって修正されたオブジェクト &lt;code&gt;set_content&lt;/code&gt; は正しいのですが、&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;正しくそれをシリアル化しません。</target>
        </trans-unit>
        <trans-unit id="2d42121605f31de62f88694b8ccbb702f25b7551" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;deep copy&lt;/em&gt; constructs a new compound object and then, recursively, inserts &lt;em&gt;copies&lt;/em&gt; into it of the objects found in the original.</source>
          <target state="translated">&lt;em&gt;ディープコピーは、&lt;/em&gt;新しい複合オブジェクトを作成し、その後、再帰的に、挿入の&lt;em&gt;コピー&lt;/em&gt;オブジェクトのそれには、元に見つけました。</target>
        </trans-unit>
        <trans-unit id="e9173f0624be6d8ff204cb707c02262b82da5703" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;format_spec&lt;/em&gt; field can also include nested replacement fields within it. These nested replacement fields may contain a field name, conversion flag and format specification, but deeper nesting is not allowed. The replacement fields within the format_spec are substituted before the &lt;em&gt;format_spec&lt;/em&gt; string is interpreted. This allows the formatting of a value to be dynamically specified.</source>
          <target state="translated">&lt;em&gt;format_spec&lt;/em&gt;フィールドもその内のネストされた交換用のフィールドを含めることができます。これらのネストされた置換フィールドには、フィールド名、変換フラグ、およびフォーマット指定が含まれている可能性がありますが、より深いネストは許可されていません。format_spec内の置換フィールドは、&lt;em&gt;format_spec&lt;/em&gt;文字列が解釈される前に置き換えられます。これにより、値のフォーマットを動的に指定できます。</target>
        </trans-unit>
        <trans-unit id="a7cd44a00b1d336d6557c06a7c8c9ae343be7332" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;mode&lt;/em&gt; of &lt;code&gt;'rb'&lt;/code&gt; returns a &lt;code&gt;Wave_read&lt;/code&gt; object, while a &lt;em&gt;mode&lt;/em&gt; of &lt;code&gt;'wb'&lt;/code&gt; returns a &lt;code&gt;Wave_write&lt;/code&gt; object. If &lt;em&gt;mode&lt;/em&gt; is omitted and a file-like object is passed as &lt;em&gt;file&lt;/em&gt;, &lt;code&gt;file.mode&lt;/code&gt; is used as the default value for &lt;em&gt;mode&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;の &lt;code&gt;'rb'&lt;/code&gt; 返し &lt;code&gt;Wave_read&lt;/code&gt; のながら、オブジェクトの&lt;em&gt;モード&lt;/em&gt;の &lt;code&gt;'wb'&lt;/code&gt; 返し &lt;code&gt;Wave_write&lt;/code&gt; オブジェクト。場合は&lt;em&gt;モードが&lt;/em&gt;省略され、ファイルのようなオブジェクトとして渡され&lt;em&gt;たファイル&lt;/em&gt;、 &lt;code&gt;file.mode&lt;/code&gt; は、デフォルト値として使用されている&lt;em&gt;モード&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5f2a4af7a6f3377ad5f77eb33f84174f5e93bdc1" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;set&lt;/em&gt; object is an unordered collection of distinct &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; objects. Common uses include membership testing, removing duplicates from a sequence, and computing mathematical operations such as intersection, union, difference, and symmetric difference. (For other containers see the built-in &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; classes, and the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.)</source>
          <target state="translated">&lt;em&gt;設定された&lt;/em&gt;オブジェクトは、別個の非順序集合である&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;オブジェクト。一般的な用途には、メンバーシップテスト、シーケンスからの重複の削除、交差、和集合、差、対称差などの数学演算の計算が含まれます。 （他のコンテナーについては、組み込みの&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。）</target>
        </trans-unit>
        <trans-unit id="23ba4c8d552ab299c23a8c2a6314f12e89c8b662" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;shallow copy&lt;/em&gt; constructs a new compound object and then (to the extent possible) inserts &lt;em&gt;references&lt;/em&gt; into it to the objects found in the original.</source>
          <target state="translated">&lt;em&gt;浅いコピーは、&lt;/em&gt;（可能な限り）を挿入する新しい複合オブジェクトを作成し、&lt;em&gt;参照を&lt;/em&gt;元に検出されたオブジェクトにその中に。</target>
        </trans-unit>
        <trans-unit id="6705eb6764cd1b2440282df31a21681b1dd9b4b6" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;side_effect&lt;/em&gt; can be cleared by setting it to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;side_effectは、&lt;/em&gt;それを設定することでクリアすることができます &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bf62ba97605bc1bdf123e976a15e47da64fa9ee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;test case&lt;/em&gt; is the individual unit of testing. It checks for a specific response to a particular set of inputs. &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; provides a base class, &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;, which may be used to create new test cases.</source>
          <target state="translated">&lt;em&gt;テストケースは、&lt;/em&gt;テストの個々の単位です。特定の入力セットに対する特定の応答をチェックします。&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;は、新しいテストケースを作成するために使用できる基本クラス&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; を&lt;/a&gt;提供します。</target>
        </trans-unit>
        <trans-unit id="7987da208ef75be7910375a80fac6b3f5aa930de" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;test fixture&lt;/em&gt; represents the preparation needed to perform one or more tests, and any associated cleanup actions. This may involve, for example, creating temporary or proxy databases, directories, or starting a server process.</source>
          <target state="translated">&lt;em&gt;テストフィクスチャは、&lt;/em&gt; 1つ以上のテストを実行するために必要な準備、および関連するクリーンアップ・アクションを表します。これには、たとえば、一時データベースまたはプロキシデータベース、ディレクトリの作成、またはサーバープロセスの開始が含まれます。</target>
        </trans-unit>
        <trans-unit id="b81f6f00ec981356455ec31397ca647835ae08dd" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;test runner&lt;/em&gt; is a component which orchestrates the execution of tests and provides the outcome to the user. The runner may use a graphical interface, a textual interface, or return a special value to indicate the results of executing the tests.</source>
          <target state="translated">&lt;em&gt;テストランナーは、&lt;/em&gt;テストの実行を調整し、ユーザに結果を提供するコンポーネントです。ランナーは、グラフィカルインターフェイスまたはテキストインターフェイスを使用するか、テストの実行結果を示す特別な値を返すことができます。</target>
        </trans-unit>
        <trans-unit id="8fa78832347a28545f963bb4b4be6819b83c168e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;test suite&lt;/em&gt; is a collection of test cases, test suites, or both. It is used to aggregate tests that should be executed together.</source>
          <target state="translated">&lt;em&gt;テストスイートは、&lt;/em&gt;テストケース、テストスイート、またはその両方のコレクションです。一緒に実行する必要があるテストを集約するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c4745d8d1031aab5086ad1f155997b2c564c9c68" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;naive&lt;/strong&gt; object does not contain enough information to unambiguously locate itself relative to other date/time objects. Whether a naive object represents Coordinated Universal Time (UTC), local time, or time in some other timezone is purely up to the program, just like it is up to the program whether a particular number represents metres, miles, or mass. Naive objects are easy to understand and to work with, at the cost of ignoring some aspects of reality.</source>
          <target state="translated">&lt;strong&gt;素朴な&lt;/strong&gt;オブジェクトが明確に他の日付/時刻オブジェクトに対する自身の位置を特定するのに十分な情報が含まれていません。ナイーブオブジェクトが協定世界時（UTC）、現地時間、または他のタイムゾーンの時間を表すかどうかは、特定の数値がメートル、マイル、または質量を表すかどうかがプログラム次第であるのと同じように、プログラム次第です。素朴なオブジェクトは、現実のいくつかの側面を無視することを犠牲にして、理解しやすく、扱いやすいものです。</target>
        </trans-unit>
        <trans-unit id="2cab2af1689a7cdb8742ee3c5de99bd86b1fb271" translate="yes" xml:space="preserve">
          <source>A C function has raised an exception. &lt;em&gt;arg&lt;/em&gt; is the C function object.</source>
          <target state="translated">AC関数が例外を発生させました。&lt;em&gt;arg&lt;/em&gt;はC関数オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="4a1a895a82ea92e5048926d87e7de39e3d13d2da" translate="yes" xml:space="preserve">
          <source>A C function has returned. &lt;em&gt;arg&lt;/em&gt; is the C function object.</source>
          <target state="translated">AC関数が戻りました。&lt;em&gt;arg&lt;/em&gt;はC関数オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="d283c2a9eb3dd89cbc9b79aff0c56a00e79769ba" translate="yes" xml:space="preserve">
          <source>A C function is about to be called. This may be an extension function or a built-in. &lt;em&gt;arg&lt;/em&gt; is the C function object.</source>
          <target state="translated">AC関数が呼び出されようとしています。これは、拡張機能または組み込みの可能性があります。&lt;em&gt;arg&lt;/em&gt;はC関数オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="831970299ec2af95777fce740b5f597ee5a3c42c" translate="yes" xml:space="preserve">
          <source>A CDATA marked section was not closed.</source>
          <target state="translated">CDATAのマークがついた部分は閉じられていませんでした。</target>
        </trans-unit>
        <trans-unit id="8085d5429472bd893832c6bc1da965c7ee96eff2" translate="yes" xml:space="preserve">
          <source>A CGI script is invoked by an HTTP server, usually to process user input submitted through an HTML &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ISINDEX&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">CGIスクリプトはHTTPサーバーによって呼び出され、通常、HTMLの &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;ISINDEX&amp;gt;&lt;/code&gt; 要素を通じて送信されたユーザー入力を処理します。</target>
        </trans-unit>
        <trans-unit id="11c8679e0a3c8f200f7222cdee7738b6e0977289" translate="yes" xml:space="preserve">
          <source>A Condition object. Not thread-safe.</source>
          <target state="translated">条件オブジェクト。スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="7f93aaf6dad2a2dfa6340e34dbe613f7371408d5" translate="yes" xml:space="preserve">
          <source>A FIFO queue.</source>
          <target state="translated">FIFOテールです。</target>
        </trans-unit>
        <trans-unit id="51a7e77f3fb23f5678644ab65a63ea7407b39452" translate="yes" xml:space="preserve">
          <source>A First In First Out scheduling policy.</source>
          <target state="translated">先入れ先出しのスケジューリングポリシー。</target>
        </trans-unit>
        <trans-unit id="ecefd3c229ef54dde8824b2d16f8bb60aadf474d" translate="yes" xml:space="preserve">
          <source>A Formatter can be initialized with a format string which makes use of knowledge of the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; attributes - such as the default value mentioned above making use of the fact that the user&amp;rsquo;s message and arguments are pre-formatted into a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;em&gt;message&lt;/em&gt; attribute. This format string contains standard Python %-style mapping keys. See section &lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;printf-style String Formatting&lt;/a&gt; for more information on string formatting.</source>
          <target state="translated">Formatterは、&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;属性の知識を利用するフォーマット文字列で初期化できます。たとえば、上記のデフォルト値は、ユーザーのメッセージと引数が&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;メッセージ&lt;/em&gt;属性にあらかじめフォーマットされているという事実を利用しています。このフォーマット文字列には、標準のPython％スタイルのマッピングキーが含まれています。&lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;文字列フォーマットの&lt;/a&gt;詳細については、「printfスタイルの文字列フォーマット」を参照してください。</target>
        </trans-unit>
        <trans-unit id="38427dd9c5b26ea48ebad70cabedbbc38dba64ff" translate="yes" xml:space="preserve">
          <source>A Fraction instance can be constructed from a pair of integers, from another rational number, or from a string.</source>
          <target state="translated">フラクションのインスタンスは、整数のペア、別の有理数、または文字列から構築することができます。</target>
        </trans-unit>
        <trans-unit id="6bfc37c3ad7351df12d3d075d95651b965af2648" translate="yes" xml:space="preserve">
          <source>A Future is &lt;em&gt;done&lt;/em&gt; if it was &lt;em&gt;cancelled&lt;/em&gt; or if it has a result or an exception set with &lt;a href=&quot;#asyncio.Future.set_result&quot;&gt;&lt;code&gt;set_result()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Future.set_exception&quot;&gt;&lt;code&gt;set_exception()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">Future が&lt;em&gt;キャンセルさ&lt;/em&gt;&lt;em&gt;れた&lt;/em&gt;場合、または&lt;a href=&quot;#asyncio.Future.set_result&quot;&gt; &lt;code&gt;set_result()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#asyncio.Future.set_exception&quot;&gt; &lt;code&gt;set_exception()&lt;/code&gt; &lt;/a&gt;呼び出しで結果または例外が設定さ&lt;em&gt;れた&lt;/em&gt;場合、Futureが&lt;em&gt;実行&lt;/em&gt;さ&lt;em&gt;れ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d1361a1831d199390fcc3330455dddb5b00baac3" translate="yes" xml:space="preserve">
          <source>A Future represents an eventual result of an asynchronous operation. Not thread-safe.</source>
          <target state="translated">Futureは、非同期操作の最終的な結果を表します。スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="040b3a056dec6652afaa49c2fbd5306b83bbc50a" translate="yes" xml:space="preserve">
          <source>A GPL-licensed book on &lt;strong&gt;mh&lt;/strong&gt; and &lt;strong&gt;nmh&lt;/strong&gt;, with some information on the mailbox format.</source>
          <target state="translated">&lt;strong&gt;mh&lt;/strong&gt;と&lt;strong&gt;nmh&lt;/strong&gt;に関するGPLライセンスの本で、メールボックスのフォーマットに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="95360961342fd25347d3f30a020e312f4841d83b" translate="yes" xml:space="preserve">
          <source>A LIFO queue.</source>
          <target state="translated">LIFOのしっぽ。</target>
        </trans-unit>
        <trans-unit id="abdd983eb98a0db6f5917b97f3e7224ce5af9e1d" translate="yes" xml:space="preserve">
          <source>A Modular Crypt Format method with 16 character salt and 86 character hash based on the SHA-512 hash function. This is the strongest method.</source>
          <target state="translated">SHA-512のハッシュ関数をベースに16文字のソルトと86文字のハッシュを持つモジュラークリプトフォーマット方式。最強の方式です。</target>
        </trans-unit>
        <trans-unit id="7bab3fe38d2412e632925d1b6ea1d46c293f9d04" translate="yes" xml:space="preserve">
          <source>A ModuleSpec Type for the Import System</source>
          <target state="translated">インポートシステムのModuleSpecタイプ</target>
        </trans-unit>
        <trans-unit id="2ed5ba08360d17037b1386131e5802b54b52e04c" translate="yes" xml:space="preserve">
          <source>A Python application makes a &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">Pythonアプリケーションが&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;呼び出しを行います。</target>
        </trans-unit>
        <trans-unit id="e84346233bf0e445231dc1966f7cdfd8bd18e675" translate="yes" xml:space="preserve">
          <source>A Python complex number &lt;code&gt;z&lt;/code&gt; is stored internally using &lt;em&gt;rectangular&lt;/em&gt; or &lt;em&gt;Cartesian&lt;/em&gt; coordinates. It is completely determined by its &lt;em&gt;real part&lt;/em&gt;&lt;code&gt;z.real&lt;/code&gt; and its &lt;em&gt;imaginary part&lt;/em&gt;&lt;code&gt;z.imag&lt;/code&gt;. In other words:</source>
          <target state="translated">Pythonの複素数 &lt;code&gt;z&lt;/code&gt; 用いて内部的に格納される&lt;em&gt;矩形&lt;/em&gt;又は&lt;em&gt;デカルト&lt;/em&gt;座標。&lt;em&gt;実数部&lt;/em&gt; &lt;code&gt;z.real&lt;/code&gt; と&lt;em&gt;虚数部&lt;/em&gt; &lt;code&gt;z.imag&lt;/code&gt; によって完全に決定されます。言い換えると：</target>
        </trans-unit>
        <trans-unit id="a392364ce98abecae551e0667c1854f09a205992" translate="yes" xml:space="preserve">
          <source>A Python distribution contains a &lt;code&gt;Makefile&lt;/code&gt; and a &lt;code&gt;pyconfig.h&lt;/code&gt; header file that are necessary to build both the Python binary itself and third-party C extensions compiled using &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Pythonディストリビューションには、Pythonバイナリ自体と&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;を使用してコンパイルされたサードパーティのC拡張の両方をビルドするために必要な &lt;code&gt;Makefile&lt;/code&gt; と &lt;code&gt;pyconfig.h&lt;/code&gt; ヘッダーファイルが含まれています。</target>
        </trans-unit>
        <trans-unit id="1f37c62145df666609e2e3d1e900da09e466c449" translate="yes" xml:space="preserve">
          <source>A Python signal handler does not get executed inside the low-level (C) signal handler. Instead, the low-level signal handler sets a flag which tells the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-virtual-machine&quot;&gt;virtual machine&lt;/a&gt; to execute the corresponding Python signal handler at a later point(for example at the next &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;bytecode&lt;/a&gt; instruction). This has consequences:</source>
          <target state="translated">Pythonシグナルハンドラーは、低レベル（C）シグナルハンドラー内では実行されません。代わりに、低レベルのシグナルハンドラーは、対応するPythonシグナルハンドラーを後で実行するように&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-virtual-machine&quot;&gt;仮想マシン&lt;/a&gt;に指示するフラグを設定します（たとえば、次の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;バイトコード&lt;/a&gt;命令で）。これには結果があります：</target>
        </trans-unit>
        <trans-unit id="288bc4bc5d2c7f142d7ecd425afbdd9da11413c7" translate="yes" xml:space="preserve">
          <source>A SAX parser should never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX パーサは、このメソッドを使用して XML 宣言(XML 1.0、セクション 2.8)やテキスト宣言(XML 1.0、セクション 4.3.1)を報告してはいけません。</target>
        </trans-unit>
        <trans-unit id="25d8d7b20e65417ff0b553a06e15be6450d9de74" translate="yes" xml:space="preserve">
          <source>A SQLite database connection has the following attributes and methods:</source>
          <target state="translated">SQLite データベース接続には、以下の属性とメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="b2994f00f93c1d4c8983dd05d5c31a5ae387325f" translate="yes" xml:space="preserve">
          <source>A Semaphore object. Not thread-safe.</source>
          <target state="translated">セマフォオブジェクト。スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="d67080bdaf1bf41f1782cfc5d644def2fffd8843" translate="yes" xml:space="preserve">
          <source>A Signature object represents the call signature of a function and its return annotation. For each parameter accepted by the function it stores a &lt;a href=&quot;#inspect.Parameter&quot;&gt;&lt;code&gt;Parameter&lt;/code&gt;&lt;/a&gt; object in its &lt;a href=&quot;#inspect.Signature.parameters&quot;&gt;&lt;code&gt;parameters&lt;/code&gt;&lt;/a&gt; collection.</source>
          <target state="translated">Signatureオブジェクトは、関数の呼び出し署名とその戻りアノテーションを表します。関数が受け入れる各パラメーターについて、その&lt;a href=&quot;#inspect.Signature.parameters&quot;&gt; &lt;code&gt;parameters&lt;/code&gt; &lt;/a&gt;コレクションに&lt;a href=&quot;#inspect.Parameter&quot;&gt; &lt;code&gt;Parameter&lt;/code&gt; &lt;/a&gt;オブジェクトを格納します。</target>
        </trans-unit>
        <trans-unit id="126b07184c65110008f14628685300e25636a315" translate="yes" xml:space="preserve">
          <source>A Simple Hello World Program</source>
          <target state="translated">シンプルなハローワールドプログラム</target>
        </trans-unit>
        <trans-unit id="570550a891d4d9d6c4e5da25d488d79956523e3b" translate="yes" xml:space="preserve">
          <source>A TCP echo client using the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method, sends data, and waits until the connection is closed:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;メソッドを使用するTCPエコークライアントは、データを送信し、接続が閉じるまで待機します。</target>
        </trans-unit>
        <trans-unit id="93c993e5c1e97a748bb20aa6e5450b273e1f6c4e" translate="yes" xml:space="preserve">
          <source>A TLS/SSL wrapper for socket objects.</source>
          <target state="translated">ソケットオブジェクト用の TLS/SSL ラッパー。</target>
        </trans-unit>
        <trans-unit id="bb43bac510d9bc85d7092886e93fe996756316ee" translate="yes" xml:space="preserve">
          <source>A Task is &lt;em&gt;done&lt;/em&gt; when the wrapped coroutine either returned a value, raised an exception, or the Task was cancelled.</source>
          <target state="translated">Aタスクがされて&lt;em&gt;行わ&lt;/em&gt;包まコルーチンは、どちらかの値を返したときに、例外を発生し、またはタスクがキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="9c31829f5b1619a48c3c0054fc6183366c7c0d6c" translate="yes" xml:space="preserve">
          <source>A Tk Image, displayed to the left of the label.</source>
          <target state="translated">ラベルの左に表示されるTk画像。</target>
        </trans-unit>
        <trans-unit id="8b13f85c8ebd6901b3e4b9b15582178baeb14652" translate="yes" xml:space="preserve">
          <source>A Tk Text widget, and hence IDLE&amp;rsquo;s Shell, displays characters (codepoints) in the BMP (Basic Multilingual Plane) subset of Unicode. Which characters are displayed with a proper glyph and which with a replacement box depends on the operating system and installed fonts. Tab characters cause the following text to begin after the next tab stop. (They occur every 8 &amp;lsquo;characters&amp;rsquo;). Newline characters cause following text to appear on a new line. Other control characters are ignored or displayed as a space, box, or something else, depending on the operating system and font. (Moving the text cursor through such output with arrow keys may exhibit some surprising spacing behavior.)</source>
          <target state="translated">Tk Textウィジェット、つまりIDLEのシェルは、UnicodeのBMP（Basic Multilingual Plane）サブセットに文字（コードポイント）を表示します。どの文字が適切なグリフで表示され、どの文字が置換ボックスで表示されるかは、オペレーティングシステムとインストールされているフォントによって異なります。タブ文字は、次のタブストップの後に続くテキストを開始させます。（8文字ごとに発生します）。改行文字により、次のテキストが新しい行に表示されます。オペレーティングシステムとフォントに応じて、他の制御文字は無視されるか、スペース、ボックス、またはその他の何かとして表示されます。（矢印キーでそのような出力を介してテキストカーソルを移動すると、驚くべき間隔の動作が見られる場合があります。）</target>
        </trans-unit>
        <trans-unit id="87b4bb4f5a67c86a628d46639035e593c9657ec0" translate="yes" xml:space="preserve">
          <source>A UDP echo client, using the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt; method, sends data and closes the transport when it receives the answer:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;メソッドを使用するUDPエコークライアントは、応答を受信するとデータを送信し、トランスポートを閉じます。</target>
        </trans-unit>
        <trans-unit id="dd4b77dc3b2830dca0499ebd78f2da62e306c7ea" translate="yes" xml:space="preserve">
          <source>A UDP echo server, using the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt; method, sends back received data:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;メソッドを使用するUDPエコーサーバーは、受信したデータを送り返します。</target>
        </trans-unit>
        <trans-unit id="99bc408d0bd32468a095e7f0c5c5111775f10619" translate="yes" xml:space="preserve">
          <source>A Unicode symbolic link.</source>
          <target state="translated">Unicode シンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="6f14e9e8e94727091c2b8e962ad86e195bb4dee0" translate="yes" xml:space="preserve">
          <source>A Wikipedia article describing the Multichannel Memorandum Distribution Facility.</source>
          <target state="translated">マルチチャンネル備忘録配布施設」を解説したウィキペディアの記事。</target>
        </trans-unit>
        <trans-unit id="725c0ccc217e4e4676f6da81be395917abeba3ec" translate="yes" xml:space="preserve">
          <source>A backreference to a named group; it matches whatever text was matched by the earlier group named &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">名前付きグループへの後方参照。これは、&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;以前のグループで一致したテキストに一致します。</target>
        </trans-unit>
        <trans-unit id="b1c4277cff36ce18818a6f8438c63ec0dbcaf743" translate="yes" xml:space="preserve">
          <source>A barrier object: a clone of &lt;a href=&quot;threading#threading.Barrier&quot;&gt;&lt;code&gt;threading.Barrier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バリアオブジェクト：&lt;a href=&quot;threading#threading.Barrier&quot;&gt; &lt;code&gt;threading.Barrier&lt;/code&gt; の&lt;/a&gt;クローン。</target>
        </trans-unit>
        <trans-unit id="7b073b3db1f03f94707623cd962e2e0840eb4bc0" translate="yes" xml:space="preserve">
          <source>A base class for connection-related issues.</source>
          <target state="translated">接続関連の問題を扱う基底クラスです。</target>
        </trans-unit>
        <trans-unit id="152742e7902056579ab38fb8c6ddfd9f303e6449" translate="yes" xml:space="preserve">
          <source>A base class for implementing streaming protocols with manual control of the receive buffer.</source>
          <target state="translated">受信バッファを手動で制御するストリーミングプロトコルを実装するための基底クラスです。</target>
        </trans-unit>
        <trans-unit id="4a1a3396b8f7c24f6161bd6eb81292b87ba1bc58" translate="yes" xml:space="preserve">
          <source>A base class that enables a context manager to also be used as a decorator.</source>
          <target state="translated">コンテキストマネージャをデコレータとしても使用できるようにする基底クラス。</target>
        </trans-unit>
        <trans-unit id="ecfe177994a5d3a20e0c5a378f8351fac8fde37a" translate="yes" xml:space="preserve">
          <source>A base transport for read-only connections.</source>
          <target state="translated">読み取り専用接続用のベーストランスポート。</target>
        </trans-unit>
        <trans-unit id="4edff28f189d39b67166437daa554302bf286d6a" translate="yes" xml:space="preserve">
          <source>A base transport for write-only connections.</source>
          <target state="translated">書き込みのみの接続のためのベーストランスポート。</target>
        </trans-unit>
        <trans-unit id="8ae5cca44c87474ee58ed90ae89e0df09f65eeb8" translate="yes" xml:space="preserve">
          <source>A basic boilerplate is often used:</source>
          <target state="translated">基本的なボイラープレートがよく使われています。</target>
        </trans-unit>
        <trans-unit id="f2aab7b45b0bc742f6c5d83337caefb3a8462404" translate="yes" xml:space="preserve">
          <source>A basic example of packing/unpacking three integers:</source>
          <target state="translated">3つの整数のパッキング/アンパッキングの基本的な例。</target>
        </trans-unit>
        <trans-unit id="0e147699a76307dc6cd31c1ef55403396fa28044" translate="yes" xml:space="preserve">
          <source>A basic test runner implementation that outputs results to a stream. If &lt;em&gt;stream&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the default, &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; is used as the output stream. This class has a few configurable parameters, but is essentially very simple. Graphical applications which run test suites should provide alternate implementations. Such implementations should accept &lt;code&gt;**kwargs&lt;/code&gt; as the interface to construct runners changes when features are added to unittest.</source>
          <target state="translated">結果をストリームに出力する基本的なテストランナーの実装。場合は&lt;em&gt;、ストリームが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、デフォルト、&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; を持ちは、&lt;/a&gt;出力ストリームとして使用されています。このクラスには構成可能なパラメーターがいくつかありますが、基本的には非常に単純です。テストスイートを実行するグ​​ラフィカルアプリケーションは、代替実装を提供する必要があります。そのような実装は、 &lt;code&gt;**kwargs&lt;/code&gt; に機能が追加されたときにランナー変更を構築するためのインターフェースとして** kwargsを受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="a3ef6f28cd1b83376dcec6394f1f4001f83eab54" translate="yes" xml:space="preserve">
          <source>A behavioral change was requested after parsing started that can only be changed before parsing has started. This is (currently) only raised by &lt;code&gt;UseForeignDTD()&lt;/code&gt;.</source>
          <target state="translated">解析の開始後に要求された動作の変更は、解析の開始前にのみ変更できます。これは（現在） &lt;code&gt;UseForeignDTD()&lt;/code&gt; によってのみ発生します。</target>
        </trans-unit>
        <trans-unit id="4203125568c6702931a1f933ec209cba99439e3f" translate="yes" xml:space="preserve">
          <source>A better name for this method might be &lt;code&gt;allow_exit_without_flush()&lt;/code&gt;. It is likely to cause enqueued data to lost, and you almost certainly will not need to use it. It is really only there if you need the current process to exit immediately without waiting to flush enqueued data to the underlying pipe, and you don&amp;rsquo;t care about lost data.</source>
          <target state="translated">このメソッドのより適切な名前は、 &lt;code&gt;allow_exit_without_flush()&lt;/code&gt; です。エンキューされたデータが失われる可能性が高く、ほとんどの場合それを使用する必要はありません。エンキューされたデータを基礎となるパイプにフラッシュするのを待たずに現在のプロセスをすぐに終了する必要があり、失われたデータを気にしない場合にのみ存在します。</target>
        </trans-unit>
        <trans-unit id="1fc039f80ec4c960e4210f6bd85ef21947618d0c" translate="yes" xml:space="preserve">
          <source>A better way to search the namespaced XML example is to create a dictionary with your own prefixes and use those in the search functions:</source>
          <target state="translated">名前空間XMLの例を検索するより良い方法は、独自の接頭辞を持つ辞書を作成し、検索機能でそれらを使用することです。</target>
        </trans-unit>
        <trans-unit id="e6b1472ba10c2b7eb598c81e20f16e1c6e0a642c" translate="yes" xml:space="preserve">
          <source>A bit field that determines whether certain &lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt;&lt;code&gt;STARTUPINFO&lt;/code&gt;&lt;/a&gt; attributes are used when the process creates a window.</source>
          <target state="translated">プロセスがウィンドウを作成するときに特定の&lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt; &lt;code&gt;STARTUPINFO&lt;/code&gt; &lt;/a&gt;属性を使用するかどうかを決定するビットフィールド。</target>
        </trans-unit>
        <trans-unit id="eb0c7af6cffacb3fbc6bae1f94865c63bacaee54" translate="yes" xml:space="preserve">
          <source>A bitmask or&amp;rsquo;ing together all the comparison flags above.</source>
          <target state="translated">上記のすべての比較フラグをまとめたビットマスク。</target>
        </trans-unit>
        <trans-unit id="fbe1e81cbefdc30fafafa2629ceb92b9e7882e03" translate="yes" xml:space="preserve">
          <source>A bitmask or&amp;rsquo;ing together all the reporting flags above.</source>
          <target state="translated">上記のすべての報告フラグをまとめたビットマスク。</target>
        </trans-unit>
        <trans-unit id="8f93362c578ee612da0f64d997b88abdccf9b40c" translate="yes" xml:space="preserve">
          <source>A book by Kent Beck on writing tests before code.</source>
          <target state="translated">ケント・ベックがコードの前にテストを書くことについて書いた本。</target>
        </trans-unit>
        <trans-unit id="afba09a4316187d10f89f68c33c28afd35e4dded" translate="yes" xml:space="preserve">
          <source>A bool indicating whether the memory is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt;.</source>
          <target state="translated">メモリが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;連続して&lt;/a&gt;いるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="fe439c5996ebae39b95d6a40cb35432d7028f523" translate="yes" xml:space="preserve">
          <source>A bool indicating whether the memory is C-&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt;.</source>
          <target state="translated">メモリがC &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;隣接である&lt;/a&gt;かどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="56e9304bed4238987edbfb154204fb94f448cdd0" translate="yes" xml:space="preserve">
          <source>A bool indicating whether the memory is Fortran &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt;.</source>
          <target state="translated">メモリがFortranに&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;隣接して&lt;/a&gt;いるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="7a7c6adb32842f57953ce10daa7d6b9955999213" translate="yes" xml:space="preserve">
          <source>A bool indicating whether the memory is read only.</source>
          <target state="translated">メモリが読み取り専用であるかどうかを示すbool。</target>
        </trans-unit>
        <trans-unit id="a39296fd90d859e126e3f3f5d2deb66ba3912ae3" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the end of the compressed data stream has been reached.</source>
          <target state="translated">圧縮データストリームの終了に達したかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="3aa97dde0298b51a27d2cb92dc4d92350cb3e70b" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the memory BIO is current at the end-of-file position.</source>
          <target state="translated">メモリBIOがファイル終了位置で現在のものであるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="6574be0c3348548127f1845eca0472dc6acef3f5" translate="yes" xml:space="preserve">
          <source>A boolean representing whether or not the mock object has been called:</source>
          <target state="translated">モックオブジェクトが呼び出されたかどうかを表すブール値。</target>
        </trans-unit>
        <trans-unit id="fddba590c6e54d1cd9a8c4ce9c943906a7594ff0" translate="yes" xml:space="preserve">
          <source>A boolean that is &lt;code&gt;True&lt;/code&gt; if the barrier is in the broken state.</source>
          <target state="translated">バリアが壊れた状態の場合に &lt;code&gt;True&lt;/code&gt; となるブール値。</target>
        </trans-unit>
        <trans-unit id="53645037acfc0e23e11be29636744d1c604685a2" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether this thread is a daemon thread (True) or not (False). This must be set before &lt;a href=&quot;#threading.Thread.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called, otherwise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. Its initial value is inherited from the creating thread; the main thread is not a daemon thread and therefore all threads created in the main thread default to &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; = &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">このスレッドがデーモンスレッドか（True）、そうでないか（False）を示すブール値。これは、&lt;a href=&quot;#threading.Thread.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;が呼び出される前に設定する必要があります。そうしないと、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。その初期値は作成スレッドから継承されます。メインスレッドはデーモンスレッドではないため、メインスレッドで作成されたすべてのスレッドはデフォルトで&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt; = &lt;code&gt;False&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1cb41df0cd33286043e95f70ad6eee42f01afb9d" translate="yes" xml:space="preserve">
          <source>A boolean which is &lt;code&gt;True&lt;/code&gt; for server-side sockets and &lt;code&gt;False&lt;/code&gt; for client-side sockets.</source>
          <target state="translated">サーバー側ソケットの場合は &lt;code&gt;True&lt;/code&gt; 、クライアント側ソケットの場合は &lt;code&gt;False&lt;/code&gt; のブール値。</target>
        </trans-unit>
        <trans-unit id="1722c58af83f32844e74b4e4bf535cfdee7d04d1" translate="yes" xml:space="preserve">
          <source>A bounded semaphore object. Not thread-safe.</source>
          <target state="translated">束縛されたセマフォオブジェクト。スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="f86c6a74fb3eaeb3c8993c5bd4bbe925dac22c48" translate="yes" xml:space="preserve">
          <source>A bounded semaphore object: a close analog of &lt;a href=&quot;threading#threading.BoundedSemaphore&quot;&gt;&lt;code&gt;threading.BoundedSemaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">境界付きセマフォオブジェクト：&lt;a href=&quot;threading#threading.BoundedSemaphore&quot;&gt; &lt;code&gt;threading.BoundedSemaphore&lt;/code&gt; の&lt;/a&gt;類似物。</target>
        </trans-unit>
        <trans-unit id="ee07b1c269877b2d6f7ef4fdf91c2719bf9813de" translate="yes" xml:space="preserve">
          <source>A bounded semaphore.</source>
          <target state="translated">束縛されたセマフォ。</target>
        </trans-unit>
        <trans-unit id="f69ef46097c91080e0dc9edcf971ed9ca243ba99" translate="yes" xml:space="preserve">
          <source>A brief explanation of the format of regular expressions follows. For further information and a gentler presentation, consult the &lt;a href=&quot;https://docs.python.org/3.8/howto/regex.html#regex-howto&quot;&gt;Regular Expression HOWTO&lt;/a&gt;.</source>
          <target state="translated">正規表現の形式について簡単に説明します。詳細と穏やかなプレゼンテーションについては、&lt;a href=&quot;https://docs.python.org/3.8/howto/regex.html#regex-howto&quot;&gt;Regular Expression HOWTOを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee7b9f627bbc46a4bac6e8559dd5e96ec3e26d60" translate="yes" xml:space="preserve">
          <source>A buffer providing higher-level access to a readable, sequential &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; object. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;. When reading data from this object, a larger amount of data may be requested from the underlying raw stream, and kept in an internal buffer. The buffered data can then be returned directly on subsequent reads.</source>
          <target state="translated">読み取り可能な連続した&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;オブジェクトへの高レベルのアクセスを提供するバッファ。&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; を&lt;/a&gt;継承しています。このオブジェクトからデータを読み取るとき、基礎となるrawストリームから大量のデータが要求され、内部バッファーに保持される場合があります。バッファリングされたデータは、その後の読み取りで直接返すことができます。</target>
        </trans-unit>
        <trans-unit id="90048dc57970499cba381a531cec547e8fdf0b02" translate="yes" xml:space="preserve">
          <source>A buffer providing higher-level access to a writeable, sequential &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; object. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;. When writing to this object, data is normally placed into an internal buffer. The buffer will be written out to the underlying &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; object under various conditions, including:</source>
          <target state="translated">書き込み可能なシーケンシャル&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;オブジェクトへの高レベルのアクセスを提供するバッファ。&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; を&lt;/a&gt;継承しています。このオブジェクトに書き込むとき、データは通常内部バッファに配置されます。バッファーは、次のようなさまざまな条件下で、基になる&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;オブジェクトに書き出されます。</target>
        </trans-unit>
        <trans-unit id="9021ba145eac7e03dcbf0ef2818f828c134cf25b" translate="yes" xml:space="preserve">
          <source>A buffered I/O object combining two unidirectional &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; objects &amp;ndash; one readable, the other writeable &amp;ndash; into a single bidirectional endpoint. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの単方向&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;オブジェクト（1つは読み取り可能、もう1つは書き込み可能）を単一の双方向エンドポイントに組み合わせたバッファーI / Oオブジェクト。&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; を&lt;/a&gt;継承しています。</target>
        </trans-unit>
        <trans-unit id="bd4deb2e9c08f60d534dad4342f42314601ffcb0" translate="yes" xml:space="preserve">
          <source>A buffered interface to random access streams. It inherits &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ランダムアクセスストリームへのバッファー付きインターフェイス。&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="da2173a26617d8220b64d13760dae799852f6aa6" translate="yes" xml:space="preserve">
          <source>A buffered text stream over a &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; binary stream. It inherits &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;バイナリストリーム上のバッファテキストストリーム。&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="5d0fea81562f39175ccbe62f9556c2d27532da99" translate="yes" xml:space="preserve">
          <source>A bug in Linux kernel versions less than 2.6.39 caused the flags argument to be ignored on some filesystems.</source>
          <target state="translated">Linux カーネルのバージョンが 2.6.39 未満の場合、一部のファイルシステムで flags 引数が無視されるというバグがありました。</target>
        </trans-unit>
        <trans-unit id="96591d6bf3644b42d33a40be8eac1409668430f1" translate="yes" xml:space="preserve">
          <source>A bytes object representing the current version of the module. Also available as &lt;code&gt;__version__&lt;/code&gt;.</source>
          <target state="translated">モジュールの現在のバージョンを表すbytesオブジェクト。 &lt;code&gt;__version__&lt;/code&gt; としても利用できます。</target>
        </trans-unit>
        <trans-unit id="cbbf59e79e0b13528ee82e0f58776afedfebfbf8" translate="yes" xml:space="preserve">
          <source>A bytes object that contains any data that was not consumed by the last &lt;a href=&quot;#zlib.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; call because it exceeded the limit for the uncompressed data buffer. This data has not yet been seen by the zlib machinery, so you must feed it (possibly with further data concatenated to it) back to a subsequent &lt;a href=&quot;#zlib.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method call in order to get correct output.</source>
          <target state="translated">非圧縮データバッファーの制限を超えたために、最後の&lt;a href=&quot;#zlib.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;呼び出しで消費されなかったデータを含むbytesオブジェクト。このデータはzlib機構ではまだ確認されていないため、正しい出力を取得するには、データを（おそらく、さらにデータを連結して）後続の&lt;a href=&quot;#zlib.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;メソッド呼び出しにフィードバックする必要があります。</target>
        </trans-unit>
        <trans-unit id="8ab394e9d681e96f0dab993b9bff2883191a3efd" translate="yes" xml:space="preserve">
          <source>A bytes object which contains any bytes past the end of the compressed data. That is, this remains &lt;code&gt;b&quot;&quot;&lt;/code&gt; until the last byte that contains compression data is available. If the whole bytestring turned out to contain compressed data, this is &lt;code&gt;b&quot;&quot;&lt;/code&gt;, an empty bytes object.</source>
          <target state="translated">圧縮データの終わりを過ぎたバイトを含むbytesオブジェクト。つまり、圧縮データを含む最後のバイトが使用可能になるまで、これは &lt;code&gt;b&quot;&quot;&lt;/code&gt; ままです。バイト文字列全体が圧縮データを含むことが判明した場合、これは &lt;code&gt;b&quot;&quot;&lt;/code&gt; 、つまり空のバイトオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b19f8fa81998b73a7a82eaa8e2d06428af54ae67" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;#winreg.LoadKey&quot;&gt;&lt;code&gt;LoadKey()&lt;/code&gt;&lt;/a&gt; fails if the calling process does not have the &lt;code&gt;SE_RESTORE_PRIVILEGE&lt;/code&gt; privilege. Note that privileges are different from permissions &amp;ndash; see the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724889%28v=VS.85%29.aspx&quot;&gt;RegLoadKey documentation&lt;/a&gt; for more details.</source>
          <target state="translated">呼び出し&lt;a href=&quot;#winreg.LoadKey&quot;&gt; &lt;code&gt;LoadKey()&lt;/code&gt; &lt;/a&gt;呼び出し元プロセスが持っていない場合は失敗し &lt;code&gt;SE_RESTORE_PRIVILEGE&lt;/code&gt; の権限を。特権は許可とは異なります。詳細については、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724889%28v=VS.85%29.aspx&quot;&gt;RegLoadKeyのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="72f2e4ebf541156ce4ab17cefde38ca7144ccd53" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager&quot;&gt;&lt;code&gt;SharedMemoryManager&lt;/code&gt;&lt;/a&gt; instance causes a new process to be started. This new process&amp;rsquo;s sole purpose is to manage the life cycle of all shared memory blocks created through it. To trigger the release of all shared memory blocks managed by that process, call &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; on the instance. This triggers a &lt;code&gt;SharedMemory.unlink()&lt;/code&gt; call on all of the &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; objects managed by that process and then stops the process itself. By creating &lt;code&gt;SharedMemory&lt;/code&gt; instances through a &lt;code&gt;SharedMemoryManager&lt;/code&gt;, we avoid the need to manually track and trigger the freeing of shared memory resources.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager&quot;&gt; &lt;code&gt;SharedMemoryManager&lt;/code&gt; &lt;/a&gt;インスタンスで&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;を呼び出すと、新しいプロセスが開始されます。この新しいプロセスの唯一の目的は、それによって作成されたすべての共有メモリブロックのライフサイクルを管理することです。そのプロセスによって管理されているすべての共有メモリブロックの解放をトリガーするには、インスタンスで&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt;を呼び出します。これにより、そのプロセスによって管理されているすべての&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;オブジェクトで &lt;code&gt;SharedMemory.unlink()&lt;/code&gt; 呼び出しがトリガーされ、プロセス自体が停止します。作成することにより、 &lt;code&gt;SharedMemory&lt;/code&gt; 経由インスタンスを &lt;code&gt;SharedMemoryManager&lt;/code&gt; 、我々は手動で追跡し、共有メモリリソースの解放をトリガーする必要性を避けます。</target>
        </trans-unit>
        <trans-unit id="bb74d9c51de47fc797c22ea2d8b96b127f368c3d" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; is translated into an exception so that clean-up handlers (&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clauses of &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements) can be executed, and so that a debugger can execute a script without running the risk of losing control. The &lt;a href=&quot;os#os._exit&quot;&gt;&lt;code&gt;os._exit()&lt;/code&gt;&lt;/a&gt; function can be used if it is absolutely positively necessary to exit immediately (for example, in the child process after a call to &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;os.fork()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; の&lt;/a&gt;呼び出しは例外に変換されるため、クリーンアップハンドラー（&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;ステートメントの&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;句）を実行でき、デバッガーは制御を失うリスクを冒すことなくスクリプトを実行できます。&lt;a href=&quot;os#os._exit&quot;&gt; &lt;code&gt;os._exit()&lt;/code&gt; &lt;/a&gt;が直ちに終了する絶対正に必要がある場合、関数を使用することができる（の呼び出しの後、例えば、子プロセスで&lt;a href=&quot;os#os.fork&quot;&gt; &lt;code&gt;os.fork()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0d4368c9a747e2ce20367983918f9c4924de0578" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;format(value, format_spec)&lt;/code&gt; is translated to &lt;code&gt;type(value).__format__(value, format_spec)&lt;/code&gt; which bypasses the instance dictionary when searching for the value&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; method. A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised if the method search reaches &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;format_spec&lt;/em&gt; is non-empty, or if either the &lt;em&gt;format_spec&lt;/em&gt; or the return value are not strings.</source>
          <target state="translated">&lt;code&gt;format(value, format_spec)&lt;/code&gt; の呼び出しは &lt;code&gt;type(value).__format__(value, format_spec)&lt;/code&gt; に&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;れ、値の__format __（）メソッドを検索するときにインスタンスディクショナリをバイパスします。&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外の&lt;/a&gt;メソッド検索が到達した場合に例外が発生し&lt;a href=&quot;#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;して&lt;em&gt;format_specが&lt;/em&gt;非空であるか、あるいはいずれかあれば&lt;em&gt;format_spec&lt;/em&gt;や戻り値は文字列ではありません。</target>
        </trans-unit>
        <trans-unit id="6fbe3f9c3cd92e9b7b29820abcbe5c80a73346b6" translate="yes" xml:space="preserve">
          <source>A callable can also be passed from the &lt;a href=&quot;#python-interface&quot;&gt;Python Interface&lt;/a&gt;:</source>
          <target state="translated">呼び出し可能オブジェクトは、&lt;a href=&quot;#python-interface&quot;&gt;Pythonインターフェース&lt;/a&gt;からも渡すことができます。</target>
        </trans-unit>
        <trans-unit id="0c836d8499296ac832517eb3f7b6388854a65d48" translate="yes" xml:space="preserve">
          <source>A callable mock which was created with a &lt;em&gt;spec&lt;/em&gt; (or a &lt;em&gt;spec_set&lt;/em&gt;) will introspect the specification object&amp;rsquo;s signature when matching calls to the mock. Therefore, it can match the actual call&amp;rsquo;s arguments regardless of whether they were passed positionally or by name:</source>
          <target state="translated">&lt;em&gt;spec&lt;/em&gt;（または&lt;em&gt;spec_set&lt;/em&gt;）で作成された呼び出し可能なモックは、モックへの呼び出しを照合するときに、仕様オブジェクトのシグネチャをイントロ&lt;em&gt;スペクトし&lt;/em&gt;ます。したがって、位置または名前のどちらで渡されたかに関係なく、実際の呼び出しの引数と一致できます。</target>
        </trans-unit>
        <trans-unit id="02f610db1d7c03eeb50afcd4a0aefe9ccd5581cb" translate="yes" xml:space="preserve">
          <source>A callable object or function. Calls to the &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; object will be forwarded to &lt;a href=&quot;#functools.partial.func&quot;&gt;&lt;code&gt;func&lt;/code&gt;&lt;/a&gt; with new arguments and keywords.</source>
          <target state="translated">呼び出し可能なオブジェクトまたは関数。&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt;オブジェクトへの呼び出しは、新しい引数とキーワードで&lt;a href=&quot;#functools.partial.func&quot;&gt; &lt;code&gt;func&lt;/code&gt; &lt;/a&gt;に転送されます。</target>
        </trans-unit>
        <trans-unit id="ee23b241db7ed2691b8249801becc4f94d854945" translate="yes" xml:space="preserve">
          <source>A callable object that will be called to create the initial version of the object.</source>
          <target state="translated">オブジェクトの初期バージョンを作成するために呼び出される呼び出し可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="28aa047765c0ea86b560ba1055880aa85e19f05a" translate="yes" xml:space="preserve">
          <source>A callable that takes two arguments, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is a header field name and &lt;code&gt;value&lt;/code&gt; is an unfolded header field value, and returns a string subclass that represents that header. A default &lt;code&gt;header_factory&lt;/code&gt; (see &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt;) is provided that supports custom parsing for the various address and date &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; header field types, and the major MIME header field stypes. Support for additional custom parsing will be added in the future.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; の 2つの引数を取るcallable 。ここで、 &lt;code&gt;name&lt;/code&gt; はヘッダーフィールド名、 &lt;code&gt;value&lt;/code&gt; は展開されたヘッダーフィールド値であり、そのヘッダーを表す文字列サブクラスを返します。さまざまなアドレスと日付の&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;ヘッダーフィールドタイプ、および主要なMIMEヘッダーフィールドタイプのカスタム解析をサポートするデフォルトの &lt;code&gt;header_factory&lt;/code&gt; （&lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; を&lt;/a&gt;参照）が提供されています。追加のカスタム解析のサポートは将来追加される予定です。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61097be7c9d08daf0ef25fa36a3b29ed3459518c" translate="yes" xml:space="preserve">
          <source>A callback to be invoked when the heading label is pressed.</source>
          <target state="translated">見出しラベルが押されたときに呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="0656ff9f4ab0165cf919898b12403cb104ada0cf" translate="yes" xml:space="preserve">
          <source>A callback wrapper object returned by &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;loop.call_later()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.loop.call_at&quot;&gt;&lt;code&gt;loop.call_at()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;loop.call_later()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#asyncio.loop.call_at&quot;&gt; &lt;code&gt;loop.call_at()&lt;/code&gt; &lt;/a&gt;によって返されるコールバックラッパーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e03987779bae51ba939d9a2ad850e43ac334140c" translate="yes" xml:space="preserve">
          <source>A callback wrapper object returned by &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;によって返されるコールバックラッパーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="484ef698c89bc633fd4fd2840a56fa6969793206" translate="yes" xml:space="preserve">
          <source>A calltip consists of the function signature and the first line of the docstring. For builtins without an accessible signature, the calltip consists of all lines up the fifth line or the first blank line. These details may change.</source>
          <target state="translated">calltipは関数のシグネチャとdocstringの1行目から構成されます。アクセス可能なシグネチャを持たないビルドインの場合、コールチップは5行目までの全行か最初の空白行で構成されます。これらの詳細は変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="dbd9827d9f98d5d1909f54c38822af91f3bd3a14" translate="yes" xml:space="preserve">
          <source>A calltip is shown when one types</source>
          <target state="translated">を入力するとコールチップが表示されます。</target>
        </trans-unit>
        <trans-unit id="58c8b8ddd0a62d50c6aed1a5214d125e36a0b5b3" translate="yes" xml:space="preserve">
          <source>A catch-all class to handle unknown URLs.</source>
          <target state="translated">不明な URL を扱うためのキャッチオールクラスです。</target>
        </trans-unit>
        <trans-unit id="4e6d03371053fca30d0ee3d4a0ce864dcaaddaea" translate="yes" xml:space="preserve">
          <source>A certificate contains information about two principals. It contains the name of a &lt;em&gt;subject&lt;/em&gt;, and the subject&amp;rsquo;s public key. It also contains a statement by a second principal, the &lt;em&gt;issuer&lt;/em&gt;, that the subject is who they claim to be, and that this is indeed the subject&amp;rsquo;s public key. The issuer&amp;rsquo;s statement is signed with the issuer&amp;rsquo;s private key, which only the issuer knows. However, anyone can verify the issuer&amp;rsquo;s statement by finding the issuer&amp;rsquo;s public key, decrypting the statement with it, and comparing it to the other information in the certificate. The certificate also contains information about the time period over which it is valid. This is expressed as two fields, called &amp;ldquo;notBefore&amp;rdquo; and &amp;ldquo;notAfter&amp;rdquo;.</source>
          <target state="translated">証明書には、2つのプリンシパルに関する情報が含まれています。&lt;em&gt;サブジェクト&lt;/em&gt;の名前とサブジェクトの公開鍵が含まれています。また、サブジェクトは&lt;em&gt;発行者&lt;/em&gt;であるという2番目のプリンシパルによる声明も含まれています。発行者の声明は、発行者のみが知っている発行者の秘密鍵で署名されています。ただし、だれでも発行者の公開鍵を見つけ、それを使ってステートメントを復号化し、証明書内の他の情報と比較することで、発行者のステートメントを検証できます。証明書には、有効期間に関する情報も含まれています。これは、「notBefore」と「notAfter」という2つのフィールドとして表されます。</target>
        </trans-unit>
        <trans-unit id="3b7f255db6a500908622ec3c373472aa278db009" translate="yes" xml:space="preserve">
          <source>A character is &lt;em&gt;whitespace&lt;/em&gt; if in the Unicode character database (see &lt;a href=&quot;unicodedata#module-unicodedata&quot;&gt;&lt;code&gt;unicodedata&lt;/code&gt;&lt;/a&gt;), either its general category is &lt;code&gt;Zs&lt;/code&gt; (&amp;ldquo;Separator, space&amp;rdquo;), or its bidirectional class is one of &lt;code&gt;WS&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">Unicode文字データベース（&lt;a href=&quot;unicodedata#module-unicodedata&quot;&gt; &lt;code&gt;unicodedata&lt;/code&gt; を&lt;/a&gt;参照）の場合、その一般カテゴリが &lt;code&gt;Zs&lt;/code&gt; （「セパレーター、スペース」）であるか、その双方向クラスが &lt;code&gt;WS&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、または &lt;code&gt;S&lt;/code&gt; のいずれかである場合、文字は&lt;em&gt;空白&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="dd776f3330298dd86743009f6ee9a0ace6adbd5e" translate="yes" xml:space="preserve">
          <source>A character reference referred to a character which is illegal in XML (for example, character &lt;code&gt;0&lt;/code&gt;, or &amp;lsquo;&lt;code&gt;&amp;amp;#0;&lt;/code&gt;&amp;rsquo;).</source>
          <target state="translated">文字参照がXMLで無効な文字を参照しました（たとえば、文字 &lt;code&gt;0&lt;/code&gt; または ' &lt;code&gt;&amp;amp;#0;&lt;/code&gt; '）。</target>
        </trans-unit>
        <trans-unit id="d588360af03968669a832f0188938df037c26c3f" translate="yes" xml:space="preserve">
          <source>A chunk has the following structure:</source>
          <target state="translated">チャンクは次のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="d4abdc3e78c591917d5b79d4103b9bdf46233622" translate="yes" xml:space="preserve">
          <source>A class for generating random numbers using the highest-quality sources provided by the operating system. See &lt;a href=&quot;random#random.SystemRandom&quot;&gt;&lt;code&gt;random.SystemRandom&lt;/code&gt;&lt;/a&gt; for additional details.</source>
          <target state="translated">オペレーティングシステムによって提供される最高品質のソースを使用して乱数を生成するためのクラス。詳細については、&lt;a href=&quot;random#random.SystemRandom&quot;&gt; &lt;code&gt;random.SystemRandom&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="11bcce92e9fb2261bf052785005fd4bdce84e2aa" translate="yes" xml:space="preserve">
          <source>A class method called after tests in an individual class have run. &lt;code&gt;tearDownClass&lt;/code&gt; is called with the class as the only argument and must be decorated as a &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">個々のクラスのテストが実行された後に呼び出されるクラスメソッド。 &lt;code&gt;tearDownClass&lt;/code&gt; は、クラスを唯一の引数として呼び出され、&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;として装飾する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b83eb7b6b2e594ea11c6520a6e6c3131e335871" translate="yes" xml:space="preserve">
          <source>A class method called before tests in an individual class are run. &lt;code&gt;setUpClass&lt;/code&gt; is called with the class as the only argument and must be decorated as a &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">個々のクラスのテストが実行される前に呼び出されるクラスメソッド。 &lt;code&gt;setUpClass&lt;/code&gt; は、クラスを唯一の引数として呼び出され、&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;として装飾する必要があります。</target>
        </trans-unit>
        <trans-unit id="1ffdd8e430b1c14ab9c1370e6096817c45aab931" translate="yes" xml:space="preserve">
          <source>A class method can be called either on the class (such as &lt;code&gt;C.f()&lt;/code&gt;) or on an instance (such as &lt;code&gt;C().f()&lt;/code&gt;). The instance is ignored except for its class. If a class method is called for a derived class, the derived class object is passed as the implied first argument.</source>
          <target state="translated">クラスメソッドは、クラス（ &lt;code&gt;C.f()&lt;/code&gt; ）またはインスタンス（ &lt;code&gt;C().f()&lt;/code&gt; など）で呼び出すことができます。クラス以外のインスタンスは無視されます。派生クラスに対してクラスメソッドが呼び出された場合、派生クラスオブジェクトは暗黙の最初の引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="7bcf63323ea71d67fbe14ff17405e56e9914d012" translate="yes" xml:space="preserve">
          <source>A class method receives the class as implicit first argument, just like an instance method receives the instance. To declare a class method, use this idiom:</source>
          <target state="translated">クラスメソッドは、インスタンスメソッドがインスタンスを受け取るように、クラスを暗黙の第一引数として受け取ります。クラスメソッドを宣言するには、この慣用句を使います。</target>
        </trans-unit>
        <trans-unit id="18763382a0ab32148e756592803e941afaba9cc8" translate="yes" xml:space="preserve">
          <source>A class method which returns a closure for use on &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt;. An instance of &lt;a href=&quot;#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;FileFinder&lt;/code&gt;&lt;/a&gt; is returned by the closure using the path argument given to the closure directly and &lt;em&gt;loader_details&lt;/em&gt; indirectly.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; &lt;/a&gt;で使用するクロージャを返すクラスメソッド。&lt;a href=&quot;#importlib.machinery.FileFinder&quot;&gt; &lt;code&gt;FileFinder&lt;/code&gt; &lt;/a&gt;のインスタンスは、クロージャーに直接渡されたパス引数と、間接的に&lt;em&gt;loader_details&lt;/em&gt;を使用してクロージャーによって返されます。</target>
        </trans-unit>
        <trans-unit id="39bb7f8757522814a242d21bd4b368bba40fd738" translate="yes" xml:space="preserve">
          <source>A class that implements the &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; abstract base class as a fixed offset from the UTC.</source>
          <target state="translated">UTCからの固定オフセットとして&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;抽象基本クラスを実装するクラス。</target>
        </trans-unit>
        <trans-unit id="1e44da5a989a13f9eebb2dc1057a68fbf4ef57ad" translate="yes" xml:space="preserve">
          <source>A class that represents thread-local data.</source>
          <target state="translated">スレッドローカルデータを表すクラス。</target>
        </trans-unit>
        <trans-unit id="0b7ff46d3756aed7ffa72308db8e43b7eb15cc04" translate="yes" xml:space="preserve">
          <source>A class to handle HTTP Cookies.</source>
          <target state="translated">HTTP Cookieを扱うクラスです。</target>
        </trans-unit>
        <trans-unit id="6da93c1d257e1b3a50fb429b7be899229dc808b5" translate="yes" xml:space="preserve">
          <source>A class to handle opening of HTTP URLs.</source>
          <target state="translated">HTTP URLのオープンを扱うクラスです。</target>
        </trans-unit>
        <trans-unit id="148acc4531d35afedc02fc55e28233e68d093330" translate="yes" xml:space="preserve">
          <source>A class to handle opening of HTTPS URLs. &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;check_hostname&lt;/em&gt; have the same meaning as in &lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt;&lt;code&gt;http.client.HTTPSConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTTPS URLのオープンを処理するクラス。&lt;em&gt;context&lt;/em&gt;および&lt;em&gt;check_hostname&lt;/em&gt;は、&lt;em&gt;http.client.HTTPSConnection&lt;/em&gt;と同じ意味&lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt; &lt;code&gt;http.client.HTTPSConnection&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fba03e4a4dbc53fadac63937af8ad9eb35b5582" translate="yes" xml:space="preserve">
          <source>A class to handle redirections.</source>
          <target state="translated">リダイレクトを扱うクラス。</target>
        </trans-unit>
        <trans-unit id="b285a5573a5a2f3b19d7f2a551be74aa1d59c021" translate="yes" xml:space="preserve">
          <source>A class used for internal typing representation of string forward references. For example, &lt;code&gt;List[&quot;SomeClass&quot;]&lt;/code&gt; is implicitly transformed into &lt;code&gt;List[ForwardRef(&quot;SomeClass&quot;)]&lt;/code&gt;. This class should not be instantiated by a user, but may be used by introspection tools.</source>
          <target state="translated">文字列の前方参照の内部型表現に使用されるクラス。たとえば、 &lt;code&gt;List[&quot;SomeClass&quot;]&lt;/code&gt; は暗黙的に &lt;code&gt;List[ForwardRef(&quot;SomeClass&quot;)]&lt;/code&gt; 変換されます。このクラスはユーザーがインスタンス化するべきではありませんが、イントロスペクションツールで使用できます。</target>
        </trans-unit>
        <trans-unit id="0b62d821dc0ef3090b052466fe6c3965aa3eafb2" translate="yes" xml:space="preserve">
          <source>A class used to check the whether the actual output from a doctest example matches the expected output. &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; defines two methods: &lt;a href=&quot;#doctest.OutputChecker.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt;, which compares a given pair of outputs, and returns &lt;code&gt;True&lt;/code&gt; if they match; and &lt;a href=&quot;#doctest.OutputChecker.output_difference&quot;&gt;&lt;code&gt;output_difference()&lt;/code&gt;&lt;/a&gt;, which returns a string describing the differences between two outputs.</source>
          <target state="translated">doctestの例からの実際の出力が予期される出力と一致するかどうかを確認するために使用されるクラス。&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt;は2つのメソッドを定義します&lt;a href=&quot;#doctest.OutputChecker.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt;は、指定された出力のペアを比較し、一致する場合は &lt;code&gt;True&lt;/code&gt; を返します。および&lt;a href=&quot;#doctest.OutputChecker.output_difference&quot;&gt; &lt;code&gt;output_difference()&lt;/code&gt; は&lt;/a&gt;、2つの出力の違いを説明する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="363e6d1523f972fcb60ed3d3d2a478e6dbe37421" translate="yes" xml:space="preserve">
          <source>A class which defines a default handler for HTTP error responses; all responses are turned into &lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="translated">HTTPエラー応答のデフォルトハンドラーを定義するクラス。すべての応答は&lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;例外に変換されます。</target>
        </trans-unit>
        <trans-unit id="6ae4e708a9519ee8462f6c5c3437d5994c523c95" translate="yes" xml:space="preserve">
          <source>A class which postpones the execution of the loader of a module until the module has an attribute accessed.</source>
          <target state="translated">モジュールが属性にアクセスするまでモジュールのローダの実行を延期するクラス。</target>
        </trans-unit>
        <trans-unit id="61ee8d089101acf2a45080cbd7d22583c0463966" translate="yes" xml:space="preserve">
          <source>A classmethod which can be used for registering a type or callable with the manager class.</source>
          <target state="translated">マネージャクラスに型や呼び出し可能なものを登録する際に使用するクラスメソッド。</target>
        </trans-unit>
        <trans-unit id="d6a8d10e21268d8d5cce85aa0a5d1e2f54043e3f" translate="yes" xml:space="preserve">
          <source>A clone of &lt;a href=&quot;threading#threading.Event&quot;&gt;&lt;code&gt;threading.Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;threading#threading.Event&quot;&gt; &lt;code&gt;threading.Event&lt;/code&gt; &lt;/a&gt;のクローン。</target>
        </trans-unit>
        <trans-unit id="f81d47b6b6a5e4b2984da92a0c592feb319c2273" translate="yes" xml:space="preserve">
          <source>A code object can be executed or evaluated by passing it (instead of a source string) to the &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; built-in functions.</source>
          <target state="translated">コードオブジェクトは、（ソース文字列の代わりに）&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;組み込み関数に渡すことにより、実行または評価できます。</target>
        </trans-unit>
        <trans-unit id="fc25774a9aa16a123f002ee462ade2e7fdaafb46" translate="yes" xml:space="preserve">
          <source>A collection of doctest examples that should be run in a single namespace. The constructor arguments are used to initialize the attributes of the same names.</source>
          <target state="translated">単一の名前空間で実行されるべきdoctestの例のコレクション。コンストラクタの引数は、同じ名前の属性を初期化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="70b3cbd6f16f30af27c308546ffc15b92094596a" translate="yes" xml:space="preserve">
          <source>A combination of &lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt;&lt;code&gt;map_async()&lt;/code&gt;&lt;/a&gt; that iterates over &lt;em&gt;iterable&lt;/em&gt; of iterables and calls &lt;em&gt;func&lt;/em&gt; with the iterables unpacked. Returns a result object.</source>
          <target state="translated">&lt;em&gt;反復可能な反復可能&lt;/em&gt;&lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt; &lt;code&gt;map_async()&lt;/code&gt; &lt;/a&gt;を反復処理し、アンパックされた反復可能オブジェクトで&lt;em&gt; func&lt;/em&gt;を呼び出す&lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt;とmap_async（）の組み合わせ。結果オブジェクトを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38c92c3a0acf0f5fef3e164ec8a486845caf0c3b" translate="yes" xml:space="preserve">
          <source>A combination of a date and a time. Attributes: &lt;a href=&quot;#datetime.datetime.year&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.month&quot;&gt;&lt;code&gt;month&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.day&quot;&gt;&lt;code&gt;day&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日付と時刻の組み合わせ。属性：&lt;a href=&quot;#datetime.datetime.year&quot;&gt; &lt;code&gt;year&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.month&quot;&gt; &lt;code&gt;month&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.day&quot;&gt; &lt;code&gt;day&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.minute&quot;&gt; &lt;code&gt;minute&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.second&quot;&gt; &lt;code&gt;second&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88f8a5ed71e20bf98933ac839aba7f4bbf24f658" translate="yes" xml:space="preserve">
          <source>A command-line interface to difflib</source>
          <target state="translated">difflib のコマンドラインインターフェース</target>
        </trans-unit>
        <trans-unit id="89cb355b56ba7003fb8e28840acd888674a95ef1" translate="yes" xml:space="preserve">
          <source>A command-line program that loads a set of tests from &lt;em&gt;module&lt;/em&gt; and runs them; this is primarily for making test modules conveniently executable. The simplest use for this function is to include the following line at the end of a test script:</source>
          <target state="translated">&lt;em&gt;モジュール&lt;/em&gt;から一連のテストをロードして実行するコマンドラインプログラム。これは主にテストモジュールを便利に実行できるようにするためのものです。この関数の最も簡単な使用法は、テストスクリプトの最後に次の行を含めることです。</target>
        </trans-unit>
        <trans-unit id="560022e1285f25c16ea405bf4dbf15d38cdb01d7" translate="yes" xml:space="preserve">
          <source>A comment; the contents of the parentheses are simply ignored.</source>
          <target state="translated">括弧の内容は単純に無視されます。</target>
        </trans-unit>
        <trans-unit id="e16fa1184b48aab85143e01610a20564a372f5f4" translate="yes" xml:space="preserve">
          <source>A common cause of failure is a user-written file with the same name as a standard library module, such as &lt;em&gt;random.py&lt;/em&gt; and &lt;em&gt;tkinter.py&lt;/em&gt;. When such a file is located in the same directory as a file that is about to be run, IDLE cannot import the stdlib file. The current fix is to rename the user file.</source>
          <target state="translated">失敗の一般的な原因は、&lt;em&gt;random.py&lt;/em&gt;や&lt;em&gt;tkinter.py&lt;/em&gt;など、標準ライブラリモジュールと同じ名前のユーザー作成ファイルです。このようなファイルが、実行しようとしているファイルと同じディレクトリにある場合、IDLEはstdlibファイルをインポートできません。現在の修正は、ユーザーファイルの名前を変更することです。</target>
        </trans-unit>
        <trans-unit id="46e7a69711a1d1d80b903d19e8018c97587861f7" translate="yes" xml:space="preserve">
          <source>A common use for &lt;em&gt;repeat&lt;/em&gt; is to supply a stream of constant values to &lt;em&gt;map&lt;/em&gt; or &lt;em&gt;zip&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;repeat&lt;/em&gt;の一般的な使用法は、&lt;em&gt;map&lt;/em&gt;または&lt;em&gt;zip&lt;/em&gt;する定数値のストリームを提供することです。</target>
        </trans-unit>
        <trans-unit id="ce04c5247af3751aeee9ab54ca653e082f793e27" translate="yes" xml:space="preserve">
          <source>A communications system can enable custom handling of the &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects generated when serializing an object graph.</source>
          <target state="translated">通信システムは、オブジェクトグラフのシリアル化時に生成される&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトのカスタム処理を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="0d1535d2f06227a24366333ed74bc14f1aa66d50" translate="yes" xml:space="preserve">
          <source>A comparison function is any callable that accept two arguments, compares them, and returns a negative number for less-than, zero for equality, or a positive number for greater-than. A key function is a callable that accepts one argument and returns another value to be used as the sort key.</source>
          <target state="translated">比較関数は、2つの引数を受け取り、それらを比較し、以下の場合は負の数、等しければ0、それ以上の場合は正の数を返すコールアブルです。キー関数は、1つの引数を受け取り、別の値を返してソートキーとして使用するコールアブルです。</target>
        </trans-unit>
        <trans-unit id="3155a131c694f003190497dc8961942260dd8b8e" translate="yes" xml:space="preserve">
          <source>A compiled regular expression used to parse section headers. The default matches &lt;code&gt;[section]&lt;/code&gt; to the name &lt;code&gt;&quot;section&quot;&lt;/code&gt;. Whitespace is considered part of the section name, thus &lt;code&gt;[&amp;nbsp; larch&amp;nbsp; ]&lt;/code&gt; will be read as a section of name &lt;code&gt;&quot;&amp;nbsp; larch&amp;nbsp; &quot;&lt;/code&gt;. Override this attribute if that&amp;rsquo;s unsuitable. For example:</source>
          <target state="translated">セクションヘッダーの解析に使用されるコンパイルされた正規表現。デフォルトは &lt;code&gt;[section]&lt;/code&gt; を &lt;code&gt;&quot;section&quot;&lt;/code&gt; という名前に一致させます。空白はセクション名の一部と見なされるため、 &lt;code&gt;[&amp;nbsp; larch&amp;nbsp; ]&lt;/code&gt; は名前 &lt;code&gt;&quot;&amp;nbsp; larch&amp;nbsp; &quot;&lt;/code&gt; セクションとして読み取られます。これが適切でない場合は、この属性をオーバーライドしてください。例えば：</target>
        </trans-unit>
        <trans-unit id="aaf74e2c5af1c9d08007153b1a76923ff13192e7" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt;&lt;code&gt;importlib.abc.ExecutionLoader&lt;/code&gt;&lt;/a&gt; for extension modules.</source>
          <target state="translated">拡張モジュール用の&lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt; &lt;code&gt;importlib.abc.ExecutionLoader&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="4569ca6be2f025705111fa62420e5455d1fe21ec" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#importlib.abc.FileLoader&quot;&gt;&lt;code&gt;importlib.abc.FileLoader&lt;/code&gt;&lt;/a&gt; which can import bytecode files (i.e. no source code files exist).</source>
          <target state="translated">バイトコードファイルをインポートできる&lt;a href=&quot;#importlib.abc.FileLoader&quot;&gt; &lt;code&gt;importlib.abc.FileLoader&lt;/code&gt; &lt;/a&gt;の具体的な実装（つまり、ソースコードファイルが存在しない）。</target>
        </trans-unit>
        <trans-unit id="3aa0f0450c9e03b532cb5ea35cdff92781c44452" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#importlib.abc.Finder.find_module&quot;&gt;&lt;code&gt;Finder.find_module()&lt;/code&gt;&lt;/a&gt; which is equivalent to &lt;code&gt;self.find_loader(fullname)[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Finder.find_module&quot;&gt; &lt;code&gt;Finder.find_module()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;self.find_loader(fullname)[0]&lt;/code&gt; と同等のFinder.find_module（）の具象実装。</target>
        </trans-unit>
        <trans-unit id="568bec22c9a2b1a417c175689cb640aace312e92" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#importlib.abc.PathEntryFinder&quot;&gt;&lt;code&gt;importlib.abc.PathEntryFinder&lt;/code&gt;&lt;/a&gt; which caches results from the file system.</source>
          <target state="translated">ファイルシステムからの結果をキャッシュする&lt;a href=&quot;#importlib.abc.PathEntryFinder&quot;&gt; &lt;code&gt;importlib.abc.PathEntryFinder&lt;/code&gt; の&lt;/a&gt;具体的な実装。</target>
        </trans-unit>
        <trans-unit id="ca3e6f5a5d8428e8e340001aaf74fa9daa0038eb" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt;&lt;/a&gt; by subclassing &lt;a href=&quot;#importlib.abc.FileLoader&quot;&gt;&lt;code&gt;importlib.abc.FileLoader&lt;/code&gt;&lt;/a&gt; and providing some concrete implementations of other methods.</source>
          <target state="translated">具体的な実装&lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt; &lt;/a&gt;サブクラスによって&lt;a href=&quot;#importlib.abc.FileLoader&quot;&gt; &lt;code&gt;importlib.abc.FileLoader&lt;/code&gt; の&lt;/a&gt;及び他の方法のいくつかの具体的な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="7b965921676927630e88a3e96782ce60dd6d21f7" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;#unittest.TextTestRunner&quot;&gt;&lt;code&gt;TextTestRunner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具体的な実装&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; は&lt;/a&gt;で使用さ&lt;a href=&quot;#unittest.TextTestRunner&quot;&gt; &lt;code&gt;TextTestRunner&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6236902f7619708b27a67e61555623a29c5f89e6" translate="yes" xml:space="preserve">
          <source>A concrete subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; may need to implement the following methods. Exactly which methods are needed depends on the uses made of aware &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects. If in doubt, simply implement all of them.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; の&lt;/a&gt;具象サブクラスは、以下のメソッドを実装する必要がある場合があります。正確にどのメソッドが必要かは、対応する&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトの用途によって異なります。疑わしい場合は、それらすべてを実装してください。</target>
        </trans-unit>
        <trans-unit id="40eec7db4a38286ee25e51d60a34b27c24289512" translate="yes" xml:space="preserve">
          <source>A condition object.</source>
          <target state="translated">条件オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ecc2282276be65951c4c761fa838ae7dc028049d" translate="yes" xml:space="preserve">
          <source>A condition variable is always associated with some kind of lock; this can be passed in or one will be created by default. Passing one in is useful when several condition variables must share the same lock. The lock is part of the condition object: you don&amp;rsquo;t have to track it separately.</source>
          <target state="translated">条件変数は常にある種のロックに関連付けられています。これを渡すか、デフォルトで作成されます。1つを渡すことは、複数の条件変数が同じロックを共有する必要がある場合に役立ちます。ロックは条件オブジェクトの一部です。個別に追跡する必要はありません。</target>
        </trans-unit>
        <trans-unit id="57cc978343548d0d3b0768b62efca86aa4b303b9" translate="yes" xml:space="preserve">
          <source>A condition variable obeys the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;: using the &lt;code&gt;with&lt;/code&gt; statement acquires the associated lock for the duration of the enclosed block. The &lt;a href=&quot;#threading.Condition.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Condition.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; methods also call the corresponding methods of the associated lock.</source>
          <target state="translated">条件変数は、&lt;a href=&quot;#with-locks&quot;&gt;コンテキスト管理プロトコルに&lt;/a&gt;従います。with ステートメントを使用する &lt;code&gt;with&lt;/code&gt; 、囲まれたブロックの期間中、関連するロックが取得されます。&lt;a href=&quot;#threading.Condition.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#threading.Condition.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドは、関連するロックの対応するメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="e15faaa077b8fd2872eda7584847488141a9e52f" translate="yes" xml:space="preserve">
          <source>A condition variable: an alias for &lt;a href=&quot;threading#threading.Condition&quot;&gt;&lt;code&gt;threading.Condition&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">条件変数：&lt;a href=&quot;threading#threading.Condition&quot;&gt; &lt;code&gt;threading.Condition&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="82eae87a6f02887aa0093dc7805e7cea395ec418" translate="yes" xml:space="preserve">
          <source>A configuration file consists of sections, each led by a &lt;code&gt;[section]&lt;/code&gt; header, followed by key/value entries separated by a specific string (&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; by default &lt;a href=&quot;#id14&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;). By default, section names are case sensitive but keys are not &lt;a href=&quot;#id14&quot; id=&quot;id6&quot;&gt;1&lt;/a&gt;. Leading and trailing whitespace is removed from keys and values. Values can be omitted, in which case the key/value delimiter may also be left out. Values can also span multiple lines, as long as they are indented deeper than the first line of the value. Depending on the parser&amp;rsquo;s mode, blank lines may be treated as parts of multiline values or ignored.</source>
          <target state="translated">構成ファイルはセクションで構成され、各セクションは &lt;code&gt;[section]&lt;/code&gt; ヘッダーで始まり、その後に特定の文字列（ &lt;code&gt;=&lt;/code&gt; または &lt;code&gt;:&lt;/code&gt; デフォルトでは&lt;a href=&quot;#id14&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;）で区切られたキー/値エントリが続きます。デフォルトでは、セクション名は大文字と小文字が区別されますが、キーは&lt;a href=&quot;#id14&quot; id=&quot;id6&quot;&gt;1で&lt;/a&gt;はありません。先頭と末尾の空白はキーと値から削除されます。値は省略できます。その場合、キー/値の区切り文字も省略できます。値は、値の最初の行よりもインデントされている限り、複数行にまたがることができます。パーサーのモードによっては、空白行が複数行の値の一部として扱われるか、無視される場合があります。</target>
        </trans-unit>
        <trans-unit id="871fdeb12dc0dbe8b4573c65a675e086a653a09d" translate="yes" xml:space="preserve">
          <source>A connection or socket object is ready when there is data available to be read from it, or the other end has been closed.</source>
          <target state="translated">接続またはソケットオブジェクトは、そこから読み込めるデータがあるか、もう一方の端が閉じられているときに準備ができています。</target>
        </trans-unit>
        <trans-unit id="5438c44e0f4787fcfa1323c7e9a26f0b1d667f03" translate="yes" xml:space="preserve">
          <source>A constant that is likely larger than the underlying OS pipe buffer size, to make writes blocking.</source>
          <target state="translated">書き込みをブロッキングするために、基本となる OS のパイプバッファサイズよりも大きくなる可能性が高い定数。</target>
        </trans-unit>
        <trans-unit id="3bc44a49f9d19a39e1430fa0a5a90105a002c0d8" translate="yes" xml:space="preserve">
          <source>A constant that is likely larger than the underlying OS socket buffer size, to make writes blocking.</source>
          <target state="translated">書き込みがブロックされるようにするために、基本的にはOSのソケットバッファサイズよりも大きい可能性が高い定数。</target>
        </trans-unit>
        <trans-unit id="c9b7a76c92040d29dbbf7a9b9de895ada8ac61d6" translate="yes" xml:space="preserve">
          <source>A container for coverage results, created by &lt;a href=&quot;#trace.Trace.results&quot;&gt;&lt;code&gt;Trace.results()&lt;/code&gt;&lt;/a&gt;. Should not be created directly by the user.</source>
          <target state="translated">&lt;a href=&quot;#trace.Trace.results&quot;&gt; &lt;code&gt;Trace.results()&lt;/code&gt; &lt;/a&gt;によって作成されたカバレッジ結果のコンテナー。ユーザーが直接作成しないでください。</target>
        </trans-unit>
        <trans-unit id="eee02bb06e8dceb3a19f3d016b4310fda865ceff" translate="yes" xml:space="preserve">
          <source>A context manager that copies and, upon exit, restores the warnings filter and the &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function. If the &lt;em&gt;record&lt;/em&gt; argument is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (the default) the context manager returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; on entry. If &lt;em&gt;record&lt;/em&gt; is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, a list is returned that is progressively populated with objects as seen by a custom &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function (which also suppresses output to &lt;code&gt;sys.stdout&lt;/code&gt;). Each object in the list has attributes with the same names as the arguments to &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">警告フィルターと&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;関数をコピーし、終了時に復元するコンテキストマネージャー。場合は&lt;em&gt;、レコード&lt;/em&gt;引数がある&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;コンテキストマネージャを返します（デフォルト）&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;のエントリで。&lt;em&gt;record&lt;/em&gt;が&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、カスタムの&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;関数（これも &lt;code&gt;sys.stdout&lt;/code&gt; への出力を抑制します）によって見られるように、オブジェクトが徐々に入力されたリストが返されます。リストの各オブジェクトには、&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; の&lt;/a&gt;引数と同じ名前の属性があります。</target>
        </trans-unit>
        <trans-unit id="706ee6197c9c64618c0df0d1bcbc4a21708db88e" translate="yes" xml:space="preserve">
          <source>A context manager that creates a temporary directory at &lt;em&gt;path&lt;/em&gt; and yields the directory.</source>
          <target state="translated">&lt;em&gt;パスに&lt;/em&gt;一時ディレクトリを作成し、ディレクトリを生成するコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="59b92ced9d66258ab471847f72fb0b457edfaa46" translate="yes" xml:space="preserve">
          <source>A context manager that disables the garbage collector upon entry and reenables it upon exit.</source>
          <target state="translated">入力時にガベージコレクタを無効にし、終了時に再有効にするコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="3f3c24322f9c045dc99905a708e8e10f1184211c" translate="yes" xml:space="preserve">
          <source>A context manager that is designed to make it easy to programmatically combine other context managers and cleanup functions, especially those that are optional or otherwise driven by input data.</source>
          <target state="translated">他のコンテキストマネージャやクリーンアップ関数、特に入力データによって駆動される任意の関数やその他の関数をプログラム的に簡単に組み合わせることができるように設計されたコンテキストマネージャです。</target>
        </trans-unit>
        <trans-unit id="ee8b199cf1d14ef3cc9872c7ad02211783adcc1f" translate="yes" xml:space="preserve">
          <source>A context manager that raises &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; when various issues with the internet connection manifest themselves as exceptions.</source>
          <target state="translated">インターネット接続に関するさまざまな問題が例外として現れたときに&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;を発生させるコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="21d94bddf4b8f03f9090a684532aa983ea20f168" translate="yes" xml:space="preserve">
          <source>A context manager that replaces &lt;code&gt;sys.stderr&lt;/code&gt; with &lt;code&gt;sys.__stderr__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sys.stderr&lt;/code&gt; を &lt;code&gt;sys.__stderr__&lt;/code&gt; 置き換えるコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="b9fbc447ed15763087c6c91fc95aab8b4e0b12e4" translate="yes" xml:space="preserve">
          <source>A context manager that temporarily changes the current working directory to &lt;em&gt;path&lt;/em&gt; and yields the directory.</source>
          <target state="translated">現在の作業ディレクトリを一時的に&lt;em&gt;パスに&lt;/em&gt;変更し、ディレクトリを生成するコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="060898e8c7c1a63f225c2f7e866314699f3cb05b" translate="yes" xml:space="preserve">
          <source>A context manager that temporarily creates a new directory and changes the current working directory (CWD).</source>
          <target state="translated">一時的に新しいディレクトリを作成し、現在の作業ディレクトリ(CWD)を変更するコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="3bc18ccce352146f0d584eea87da31c8248ebf84" translate="yes" xml:space="preserve">
          <source>A context manager that temporarily sets the process umask.</source>
          <target state="translated">プロセスのumaskを一時的に設定するコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="6cbf1a98390207a7d68c1646bc6fa3f42600094a" translate="yes" xml:space="preserve">
          <source>A context manager to force import to return a new module reference. This is useful for testing module-level behaviors, such as the emission of a DeprecationWarning on import. Example usage:</source>
          <target state="translated">インポート時に新しいモジュール参照を返すように強制的にインポートするためのコンテキストマネージャです。これは、インポート時に DeprecationWarning が発生するなど、モジュールレベルの動作をテストするのに便利です。使用例。</target>
        </trans-unit>
        <trans-unit id="71d6ed5931d3a534a1c1442079a1ac65755e2e4b" translate="yes" xml:space="preserve">
          <source>A context manager to temporarily add directories to sys.path.</source>
          <target state="translated">sys.pathに一時的にディレクトリを追加するコンテキストマネージャです。</target>
        </trans-unit>
        <trans-unit id="f1c4a7cd3227487dc6c2480706dfd50db146b768" translate="yes" xml:space="preserve">
          <source>A context manager to test that at least one message is logged on the &lt;em&gt;logger&lt;/em&gt; or one of its children, with at least the given &lt;em&gt;level&lt;/em&gt;.</source>
          <target state="translated">少なくとも指定された&lt;em&gt;レベル&lt;/em&gt;で、少なくとも1つのメッセージが&lt;em&gt;ロガー&lt;/em&gt;またはその子の1つに記録されていることをテストするコンテキストマネージャ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3679e91290e699a98d96b720554b75419ba3b7dc" translate="yes" xml:space="preserve">
          <source>A context manager used to try to prevent crash dialog popups on tests that are expected to crash a subprocess.</source>
          <target state="translated">サブプロセスをクラッシュさせることが予想されるテストのクラッシュダイアログのポップアップを防ぐために使用されるコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="575661c4fdd5cd456508dd1a93a1e0ccd0074016" translate="yes" xml:space="preserve">
          <source>A context managers that temporarily replaces the named stream with &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;io.StringIO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">名前付きストリームを&lt;a href=&quot;io#io.StringIO&quot;&gt; &lt;code&gt;io.StringIO&lt;/code&gt; &lt;/a&gt;オブジェクトで一時的に置き換えるコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="bab219c80f51f777c518737c898f0534ba7688bc" translate="yes" xml:space="preserve">
          <source>A convenience function helps create &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; objects for common purposes.</source>
          <target state="translated">便利な関数は、一般的な目的で&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="50bf3cd8f9c2b0359df6428eafd5f72a4fb8779f" translate="yes" xml:space="preserve">
          <source>A convenience method which coerces the &lt;em&gt;option&lt;/em&gt; in the specified &lt;em&gt;section&lt;/em&gt; to a Boolean value. Note that the accepted values for the option are &lt;code&gt;'1'&lt;/code&gt;, &lt;code&gt;'yes'&lt;/code&gt;, &lt;code&gt;'true'&lt;/code&gt;, and &lt;code&gt;'on'&lt;/code&gt;, which cause this method to return &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;'0'&lt;/code&gt;, &lt;code&gt;'no'&lt;/code&gt;, &lt;code&gt;'false'&lt;/code&gt;, and &lt;code&gt;'off'&lt;/code&gt;, which cause it to return &lt;code&gt;False&lt;/code&gt;. These string values are checked in a case-insensitive manner. Any other value will cause it to raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for explanation of &lt;em&gt;raw&lt;/em&gt;, &lt;em&gt;vars&lt;/em&gt; and &lt;em&gt;fallback&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;セクションの&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;をブール値に強制する便利なメソッド。オプションとして受け入れられる値は &lt;code&gt;'1'&lt;/code&gt; 、 &lt;code&gt;'yes'&lt;/code&gt; 、 &lt;code&gt;'true'&lt;/code&gt; 、および &lt;code&gt;'on'&lt;/code&gt; であることに注意してください。これにより、このメソッドは &lt;code&gt;True&lt;/code&gt; を返し、 &lt;code&gt;'0'&lt;/code&gt; 、 &lt;code&gt;'no'&lt;/code&gt; 、 &lt;code&gt;'false'&lt;/code&gt; 、および &lt;code&gt;'off'&lt;/code&gt; 'を返します。'、これは &lt;code&gt;False&lt;/code&gt; を返します。これらの文字列値は、大文字と小文字を区別しない方法でチェックされます。その他の値を指定すると、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;rawの&lt;/em&gt;説明については、&lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;vars&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;と&lt;em&gt;フォールバック&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c620e4031eba313a5ddcd23549a5845330a88e1" translate="yes" xml:space="preserve">
          <source>A convenience method which coerces the &lt;em&gt;option&lt;/em&gt; in the specified &lt;em&gt;section&lt;/em&gt; to a floating point number. See &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for explanation of &lt;em&gt;raw&lt;/em&gt;, &lt;em&gt;vars&lt;/em&gt; and &lt;em&gt;fallback&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;セクションの&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;を浮動小数点数に強制する便利なメソッド。&lt;em&gt;raw&lt;/em&gt;、&lt;em&gt;vars&lt;/em&gt;、および&lt;em&gt;fallbackの&lt;/em&gt;説明については、&lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46569e6155eade5c8a65a6b623e336f8e37ad118" translate="yes" xml:space="preserve">
          <source>A convenience method which coerces the &lt;em&gt;option&lt;/em&gt; in the specified &lt;em&gt;section&lt;/em&gt; to an integer. See &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for explanation of &lt;em&gt;raw&lt;/em&gt;, &lt;em&gt;vars&lt;/em&gt; and &lt;em&gt;fallback&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;セクションの&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;を整数に強制する便利なメソッド。&lt;em&gt;raw&lt;/em&gt;、&lt;em&gt;vars&lt;/em&gt;、および&lt;em&gt;fallbackの&lt;/em&gt;説明については、&lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c0976e45d59091b92dfa950ef3bfd89d5b2c8cf" translate="yes" xml:space="preserve">
          <source>A convenience wrapper for &lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt;&lt;code&gt;warnings.catch_warnings()&lt;/code&gt;&lt;/a&gt; that makes it easier to test that a warning was correctly raised. It is approximately equivalent to calling &lt;code&gt;warnings.catch_warnings(record=True)&lt;/code&gt; with &lt;a href=&quot;warnings#warnings.simplefilter&quot;&gt;&lt;code&gt;warnings.simplefilter()&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;always&lt;/code&gt; and with the option to automatically validate the results that are recorded.</source>
          <target state="translated">警告が正しく発生したことをテストしやすくする、&lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt; &lt;code&gt;warnings.catch_warnings()&lt;/code&gt; の&lt;/a&gt;便利なラッパー。これは、&lt;a href=&quot;warnings#warnings.simplefilter&quot;&gt; &lt;code&gt;warnings.simplefilter()&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;always&lt;/code&gt; に設定し、記録された結果を自動的に検証するオプションを指定して、 &lt;code&gt;warnings.catch_warnings(record=True)&lt;/code&gt; を呼び出すのとほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="732c29898b3a6b4aac6bcfa62011196665e4ef3c" translate="yes" xml:space="preserve">
          <source>A conversion specifier contains two or more characters and has the following components, which must occur in this order:</source>
          <target state="translated">変換指定子は,2つ以上の文字を含み,この順序で出現しなければならない次の構成要素を持つ。</target>
        </trans-unit>
        <trans-unit id="e8206108ee0954c4f94798531879cab08129fa3a" translate="yes" xml:space="preserve">
          <source>A counter tool is provided to support convenient and rapid tallies. For example:</source>
          <target state="translated">便利で迅速なタリーをサポートするカウンターツールが用意されています。例えば</target>
        </trans-unit>
        <trans-unit id="f80cfc7f2c11bb5b5dc9d44e8e43c05dbe556ea5" translate="yes" xml:space="preserve">
          <source>A custom &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; subclass which simulates a weak reference to a bound method (i.e., a method defined on a class and looked up on an instance). Since a bound method is ephemeral, a standard weak reference cannot keep hold of it. &lt;a href=&quot;#weakref.WeakMethod&quot;&gt;&lt;code&gt;WeakMethod&lt;/code&gt;&lt;/a&gt; has special code to recreate the bound method until either the object or the original function dies:</source>
          <target state="translated">バインドされたメソッド（つまり、クラスで定義され、インスタンスで参照されるメソッド）への弱い参照をシミュレートするカスタム&lt;a href=&quot;#weakref.ref&quot;&gt; &lt;code&gt;ref&lt;/code&gt; &lt;/a&gt;サブクラス。バインドされたメソッドは一時的なものであるため、標準の弱参照では保持できません。&lt;a href=&quot;#weakref.WeakMethod&quot;&gt; &lt;code&gt;WeakMethod&lt;/code&gt; に&lt;/a&gt;は、オブジェクトまたは元の関数が終了するまで、バインドされたメソッドを再作成するための特別なコードがあります。</target>
        </trans-unit>
        <trans-unit id="eb0d08c9de9ef0b2da7d7698dd6de491ebaeda06" translate="yes" xml:space="preserve">
          <source>A custom opener can be used by passing a callable as &lt;em&gt;opener&lt;/em&gt;. The underlying file descriptor for the file object is then obtained by calling &lt;em&gt;opener&lt;/em&gt; with (&lt;em&gt;file&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;). &lt;em&gt;opener&lt;/em&gt; must return an open file descriptor (passing &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open&lt;/code&gt;&lt;/a&gt; as &lt;em&gt;opener&lt;/em&gt; results in functionality similar to passing &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">callableを&lt;em&gt;opener&lt;/em&gt;として渡すことにより、カスタムオープナーを使用できます。次に、（&lt;em&gt;file&lt;/em&gt;、&lt;em&gt;flags&lt;/em&gt;）を指定して&lt;em&gt;opener&lt;/em&gt;を呼び出すことにより、ファイルオブジェクトの基礎となるファイル記述子が取得され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;opener&lt;/em&gt;は開いているファイル記述子を返す必要があります（&lt;em&gt;opener&lt;/em&gt;を渡すと &lt;code&gt;None&lt;/code&gt; を渡すのと同じような機能が得られるため、&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open&lt;/code&gt; &lt;/a&gt;を渡します）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6e082d64319f68cc7d8033bb2649c32f58811de" translate="yes" xml:space="preserve">
          <source>A custom opener can be used by passing a callable as &lt;em&gt;opener&lt;/em&gt;. The underlying file descriptor for the file object is then obtained by calling &lt;em&gt;opener&lt;/em&gt; with (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;). &lt;em&gt;opener&lt;/em&gt; must return an open file descriptor (passing &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open&lt;/code&gt;&lt;/a&gt; as &lt;em&gt;opener&lt;/em&gt; results in functionality similar to passing &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">callableを&lt;em&gt;opener&lt;/em&gt;として渡すことにより、カスタムオープナーを使用できます。次に、（&lt;em&gt;name&lt;/em&gt;、&lt;em&gt;flags&lt;/em&gt;）を指定して&lt;em&gt;opener&lt;/em&gt;を呼び出すことにより、ファイルオブジェクトの基になるファイル記述子が取得されます。&lt;em&gt;opener&lt;/em&gt;は開いているファイル記述子を返す必要があります（&lt;em&gt;opener&lt;/em&gt;を渡すと &lt;code&gt;None&lt;/code&gt; を渡すのと同じような機能が得られるため、&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open&lt;/code&gt; &lt;/a&gt;を渡します）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb561f51be3b2766a162f5a8897253f11c36f720" translate="yes" xml:space="preserve">
          <source>A custom timer can be supplied for measuring how long code takes to run via the &lt;em&gt;timer&lt;/em&gt; argument. This must be a function that returns a single number representing the current time. If the number is an integer, the &lt;em&gt;timeunit&lt;/em&gt; specifies a multiplier that specifies the duration of each unit of time. For example, if the timer returns times measured in thousands of seconds, the time unit would be &lt;code&gt;.001&lt;/code&gt;.</source>
          <target state="translated">カスタムタイマーを指定して、&lt;em&gt;timer&lt;/em&gt;引数を介してコードの実行にかかる時間を測定できます。これは、現在の時刻を表す単一の数値を返す関数でなければなりません。数値が整数の場合、&lt;em&gt;timeunit&lt;/em&gt;は各時間単位の期間を指定する乗数を指定します。たとえば、タイマーが数千秒で測定された時間を返す場合、時間単位は &lt;code&gt;.001&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d66bbf4757a0cb07147452d459e79e0afb78fd12" translate="yes" xml:space="preserve">
          <source>A data cell.</source>
          <target state="translated">データセルです。</target>
        </trans-unit>
        <trans-unit id="cd8759b9bb51d937a7cc26236471074e3e3b9282" translate="yes" xml:space="preserve">
          <source>A data column number is an index into an item&amp;rsquo;s option values list; a display column number is the column number in the tree where the values are displayed. Tree labels are displayed in column #0. If option displaycolumns is not set, then data column n is displayed in column #n+1. Again, &lt;strong&gt;column #0 always refers to the tree column&lt;/strong&gt;.</source>
          <target state="translated">データ列番号は、アイテムのオプション値リストへのインデックスです。表示列番号は、値が表示されるツリーの列番号です。ツリーのラベルは列＃0に表示されます。オプションdisplaycolumnsが設定されていない場合、データ列nは列＃n + 1に表示されます。繰り返しになり&lt;strong&gt;ますが&lt;/strong&gt;、&lt;strong&gt;列＃0は常にツリー列を指します&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="444cc08ab08cdef7788a8d12ee0a4d270d19a1f8" translate="yes" xml:space="preserve">
          <source>A debugging hook. If &lt;a href=&quot;#http.client.HTTPResponse.debuglevel&quot;&gt;&lt;code&gt;debuglevel&lt;/code&gt;&lt;/a&gt; is greater than zero, messages will be printed to stdout as the response is read and parsed.</source>
          <target state="translated">デバッグフック。&lt;a href=&quot;#http.client.HTTPResponse.debuglevel&quot;&gt; &lt;code&gt;debuglevel&lt;/code&gt; &lt;/a&gt;がゼロより大きい場合、応答が読み取られて解析されるときにメッセージがstdoutに出力されます。</target>
        </trans-unit>
        <trans-unit id="aefbb8dff1a1e0eb26a3220be62830f489c3bfbb" translate="yes" xml:space="preserve">
          <source>A decimal number is immutable. It has a sign, coefficient digits, and an exponent. To preserve significance, the coefficient digits do not truncate trailing zeros. Decimals also include special values such as &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;. The standard also differentiates &lt;code&gt;-0&lt;/code&gt; from &lt;code&gt;+0&lt;/code&gt;.</source>
          <target state="translated">10進数は不変です。符号、係数桁、および指数があります。有意性を維持するために、係数の桁は後続ゼロを切り捨てません。10進数には、 &lt;code&gt;Infinity&lt;/code&gt; 、 &lt;code&gt;-Infinity&lt;/code&gt; 、 &lt;code&gt;NaN&lt;/code&gt; などの特別な値も含まれます。この規格では、 &lt;code&gt;-0&lt;/code&gt; と &lt;code&gt;+0&lt;/code&gt; も区別されています。</target>
        </trans-unit>
        <trans-unit id="2bcd27c3900b68f5bec58d9d52114890907406f4" translate="yes" xml:space="preserve">
          <source>A decorator for running a function in a different locale, correctly resetting it after it has finished. &lt;em&gt;catstr&lt;/em&gt; is the locale category as a string (for example &lt;code&gt;&quot;LC_ALL&quot;&lt;/code&gt;). The &lt;em&gt;locales&lt;/em&gt; passed will be tried sequentially, and the first valid locale will be used.</source>
          <target state="translated">関数を別のロケールで実行し、終了後に正しくリセットするためのデコレーター。&lt;em&gt;catstr&lt;/em&gt;は、文字列としてのロケールカテゴリです（たとえば、 &lt;code&gt;&quot;LC_ALL&quot;&lt;/code&gt; ）。&lt;em&gt;ロケール&lt;/em&gt;通過を順次試行され、最初の有効なロケールが使用されます。</target>
        </trans-unit>
        <trans-unit id="b707a4e84566bd7c956aadf86f613eb98b1c0d6f" translate="yes" xml:space="preserve">
          <source>A decorator for running a function in a specific timezone, correctly resetting it after it has finished.</source>
          <target state="translated">特定のタイムゾーンで関数を実行し、終了後に正しくリセットするためのデコレータ。</target>
        </trans-unit>
        <trans-unit id="c323dda6041cc3db932ce646602f3dc6a90918d5" translate="yes" xml:space="preserve">
          <source>A decorator for running tests that require a functional bind() for Unix sockets.</source>
          <target state="translated">Unix ソケット用の関数 bind()を必要とするテストを実行するためのデコレータ。</target>
        </trans-unit>
        <trans-unit id="0bd4980401370e5adee06b57dbfc08baba653d5f" translate="yes" xml:space="preserve">
          <source>A decorator for running tests that require support for symbolic links.</source>
          <target state="translated">シンボリックリンクのサポートを必要とするテストを実行するためのデコレータ。</target>
        </trans-unit>
        <trans-unit id="0c9e182ea2a3a48779ad43b62c2ee80936fb7cb5" translate="yes" xml:space="preserve">
          <source>A decorator for running tests that require support for xattr.</source>
          <target state="translated">xattr のサポートを必要とするテストを実行するためのデコレータ。</target>
        </trans-unit>
        <trans-unit id="82547554e6c309e7d40831a358c6337be3ea96ae" translate="yes" xml:space="preserve">
          <source>A decorator indicating abstract methods.</source>
          <target state="translated">抽象的なメソッドを示すデコレータ。</target>
        </trans-unit>
        <trans-unit id="7a661f587cbc2d8b5888074d9087c65a878da643" translate="yes" xml:space="preserve">
          <source>A decorator to conditionally mark tests with &lt;a href=&quot;unittest#unittest.expectedFailure&quot;&gt;&lt;code&gt;unittest.expectedFailure()&lt;/code&gt;&lt;/a&gt;. Any use of this decorator should have an associated comment identifying the relevant tracker issue.</source>
          <target state="translated">&lt;a href=&quot;unittest#unittest.expectedFailure&quot;&gt; &lt;code&gt;unittest.expectedFailure()&lt;/code&gt; &lt;/a&gt;で条件付きでテストをマークするデコレーター。このデコレータを使用する場合は、関連するトラッカーの問題を識別するコメントが関連付けられている必要があります。</target>
        </trans-unit>
        <trans-unit id="5d7f1abec2d5b769d5fc4bde6444b29db608bd7e" translate="yes" xml:space="preserve">
          <source>A decorator to indicate to type checkers that the decorated method cannot be overridden, and the decorated class cannot be subclassed. For example:</source>
          <target state="translated">デコレータは、デコレーションされたメソッドをオーバーライドできず、デコレーションされたクラスをサブクラス化できないことを型チェッカーに示すためのものです。例えば</target>
        </trans-unit>
        <trans-unit id="80fe7b087cf49770a478f73a72f06c5b584c4d9e" translate="yes" xml:space="preserve">
          <source>A demo viewer &lt;code&gt;__main__.py&lt;/code&gt; which can be used to view the sourcecode of the scripts and run them at the same time.</source>
          <target state="translated">スクリプトのソースコードを表示して同時に実行するために使用できるデモビューア &lt;code&gt;__main__.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df841999bec95b014847ee9c0c647e42d867b860" translate="yes" xml:space="preserve">
          <source>A deprecated alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;非推奨のエイリアス。</target>
        </trans-unit>
        <trans-unit id="e99f0d2c979a84313da2aa9ab321367aad982d6b" translate="yes" xml:space="preserve">
          <source>A device-driver resource list.</source>
          <target state="translated">デバイスドライバのリソースリスト。</target>
        </trans-unit>
        <trans-unit id="e91089968ceefd06d063e1ad563bcc44ddc16e1d" translate="yes" xml:space="preserve">
          <source>A dict containing the headers of the HTTP/HTTPS request that triggered the error.</source>
          <target state="translated">エラーの原因となった HTTP/HTTPS リクエストのヘッダを含む dict。</target>
        </trans-unit>
        <trans-unit id="e5956b2b45fc0b19e8fcbb7393821af1da02cf20" translate="yes" xml:space="preserve">
          <source>A dict of keyword arguments that aren&amp;rsquo;t bound to any other parameter. This corresponds to a &lt;code&gt;**kwargs&lt;/code&gt; parameter in a Python function definition.</source>
          <target state="translated">他のパラメーターにバインドされていないキーワード引数の辞書。これは、Python関数定義の &lt;code&gt;**kwargs&lt;/code&gt; パラメータに対応します。</target>
        </trans-unit>
        <trans-unit id="2494bb3e543f006b366c02e728c270830ed58c8f" translate="yes" xml:space="preserve">
          <source>A dict of keyword arguments values. Dynamically computed from the &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">キーワード引数値の辞書。&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;属性から動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="48d2343b825566f215e07cb70698f5d140e04fce" translate="yes" xml:space="preserve">
          <source>A dictionary acting as a cache for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; objects. The keys are paths that have been passed to &lt;a href=&quot;#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; and the values are the finders that are found. If a path is a valid file system path but no finder is found on &lt;a href=&quot;#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;None&lt;/code&gt; is stored.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;オブジェクトのキャッシュとして機能するディクショナリ。キーは&lt;a href=&quot;#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; に&lt;/a&gt;渡されたパスで、値は見つかったファインダーです。パスが有効なファイルシステムパスであるが、&lt;a href=&quot;#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; で&lt;/a&gt;ファインダーが見つからない場合、 &lt;code&gt;None&lt;/code&gt; が格納されます。</target>
        </trans-unit>
        <trans-unit id="0960f62a1822d1a7d5f34ec801669c97bdc82dab" translate="yes" xml:space="preserve">
          <source>A dictionary can be specified in &lt;em&gt;map&lt;/em&gt; to avoid using a global socket map.</source>
          <target state="translated">&lt;em&gt;マップで&lt;/em&gt;ディクショナリを指定して、グローバルソケットマップの使用を回避できます。</target>
        </trans-unit>
        <trans-unit id="e86148b8d17c2e016e597f0fb417b2220a3e63bd" translate="yes" xml:space="preserve">
          <source>A dictionary containing key-value pairs of an associated pax extended header.</source>
          <target state="translated">関連する pax 拡張ヘッダの key-value ペアを含む辞書。</target>
        </trans-unit>
        <trans-unit id="e1ae99d4e73486e287cd20b6ff51587b3594db5f" translate="yes" xml:space="preserve">
          <source>A dictionary containing key-value pairs of pax global headers.</source>
          <target state="translated">pax グローバルヘッダのキーと値のペアを含む辞書。</target>
        </trans-unit>
        <trans-unit id="6a923afa009caa46baf534fcaddca4ad0c0915fa" translate="yes" xml:space="preserve">
          <source>A dictionary containing name/value pairs is returned. If an optional dictionary is passed in as the second argument, it is used instead of a new dictionary, and updated with the values read in the file.</source>
          <target state="translated">名前と値のペアを含む辞書が返されます。第2引数にオプションの辞書が渡された場合、新しい辞書の代わりに使用され、ファイルで読み込んだ値で更新されます。</target>
        </trans-unit>
        <trans-unit id="845c09af92fe0b9eef20b52c657c1fde4088c1b7" translate="yes" xml:space="preserve">
          <source>A dictionary containing the element&amp;rsquo;s attributes. Note that while the &lt;em&gt;attrib&lt;/em&gt; value is always a real mutable Python dictionary, an ElementTree implementation may choose to use another internal representation, and create the dictionary only if someone asks for it. To take advantage of such implementations, use the dictionary methods below whenever possible.</source>
          <target state="translated">要素の属性を含む辞書。&lt;em&gt;attrib&lt;/em&gt;値は常に実際の変更可能なPython辞書ですが、ElementTree実装は別の内部表現を使用することを選択し、誰かが要求した場合にのみ辞書を作成することに注意してください。このような実装を利用するには、可能な限り以下の辞書メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="26a2a2fcebd6d7852414355e560ba31e564f377a" translate="yes" xml:space="preserve">
          <source>A dictionary mapping XHTML 1.0 entity definitions to their replacement text in ISO Latin-1.</source>
          <target state="translated">XHTML 1.0の実体定義をISO Latin-1の置換テキストにマッピングした辞書。</target>
        </trans-unit>
        <trans-unit id="499b746112dda4970adeba59467e485853d8716e" translate="yes" xml:space="preserve">
          <source>A dictionary mapping any symbolic group names defined by &lt;code&gt;(?P&amp;lt;id&amp;gt;)&lt;/code&gt; to group numbers. The dictionary is empty if no symbolic groups were used in the pattern.</source>
          <target state="translated">&lt;code&gt;(?P&amp;lt;id&amp;gt;)&lt;/code&gt; 定義されたシンボリックグループ名をグループ番号にマッピングする辞書。パターンでシンボリックグループが使用されていない場合、辞書は空です。</target>
        </trans-unit>
        <trans-unit id="989628bbf7867029b2c9a44d8bb0c2a7eea260bf" translate="yes" xml:space="preserve">
          <source>A dictionary mapping from option flags to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, which is used to override default options for this example. Any option flags not contained in this dictionary are left at their default value (as specified by the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;optionflags&lt;/code&gt;). By default, no options are set.</source>
          <target state="translated">オプションフラグから &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; への辞書マッピング。これは、この例のデフォルトオプションをオーバーライドするために使用されます。（で指定され、この辞書に含まれていない任意のオプション・フラグはデフォルト値のままにされて&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;optionflags&lt;/code&gt; は）。デフォルトでは、オプションは設定されていません。</target>
        </trans-unit>
        <trans-unit id="a8599c6d48168462a19137d13e5caafa2ee32cce" translate="yes" xml:space="preserve">
          <source>A dictionary mapping method names to line numbers. This can be derived from the newer children dictionary, but remains for back-compatibility.</source>
          <target state="translated">メソッド名を行番号にマッピングする辞書。これは新しい子辞書から派生することができますが、後方互換性のために残っています。</target>
        </trans-unit>
        <trans-unit id="aad07f9cf6b16903ed4d3ba4c60768ae962e4940" translate="yes" xml:space="preserve">
          <source>A dictionary mapping module names to modules. See &lt;a href=&quot;#modulefinder-example&quot;&gt;Example usage of ModuleFinder&lt;/a&gt;.</source>
          <target state="translated">モジュール名をモジュールにマッピングする辞書。&lt;a href=&quot;#modulefinder-example&quot;&gt;ModuleFinderの使用例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5640235652cc93b99d8e29371d1e28a057b45604" translate="yes" xml:space="preserve">
          <source>A dictionary mapping names in &lt;a href=&quot;#filecmp.dircmp.common_dirs&quot;&gt;&lt;code&gt;common_dirs&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">中辞書マッピング名&lt;a href=&quot;#filecmp.dircmp.common_dirs&quot;&gt; &lt;code&gt;common_dirs&lt;/code&gt; &lt;/a&gt;へ&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5f6c2710963526d32662fbdb9adc53e04310b3ae" translate="yes" xml:space="preserve">
          <source>A dictionary mapping names to descriptors for nested functions and classes.</source>
          <target state="translated">ネストされた関数やクラスのディスクリプタに名前をマッピングする辞書です。</target>
        </trans-unit>
        <trans-unit id="87ed93b11e93f03c0d4e9faaa59914fc61b786e5" translate="yes" xml:space="preserve">
          <source>A dictionary mapping numeric error codes to their string descriptions.</source>
          <target state="translated">数値エラーコードとその文字列の説明をマッピングした辞書。</target>
        </trans-unit>
        <trans-unit id="a73e48f331d93589dc56c9c85b3062c59b804a93" translate="yes" xml:space="preserve">
          <source>A dictionary mapping parameter names to parameter values.</source>
          <target state="translated">パラメータ名とパラメータ値を対応付けた辞書。</target>
        </trans-unit>
        <trans-unit id="047b3b5bfed8e46607e69880c7b641f082d6d31c" translate="yes" xml:space="preserve">
          <source>A dictionary mapping string descriptions to their error codes.</source>
          <target state="translated">文字列の説明とそのエラーコードを対応付けた辞書。</target>
        </trans-unit>
        <trans-unit id="274074edb26be6b143b6833fc8c73f8a0c76d585" translate="yes" xml:space="preserve">
          <source>A dictionary mapping suffixes into MIME types. The default is signified by an empty string, and is considered to be &lt;code&gt;application/octet-stream&lt;/code&gt;. The mapping is used case-insensitively, and so should contain only lower-cased keys.</source>
          <target state="translated">サフィックスをMIMEタイプにマッピングする辞書。デフォルトは空の文字列で示され、 &lt;code&gt;application/octet-stream&lt;/code&gt; と見なされます。マッピングは大文字と小文字を区別せずに使用されるため、小文字のキーのみを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="c8d4e0808872a9107be285f3499dbab375cc705e" translate="yes" xml:space="preserve">
          <source>A dictionary of additional attributes for process creation as given in &lt;code&gt;STARTUPINFOEX&lt;/code&gt;, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms686880(v=vs.85).aspx&quot;&gt;UpdateProcThreadAttribute&lt;/a&gt;.</source>
          <target state="translated">与えられるプロセスの作成のための追加属性の辞書 &lt;code&gt;STARTUPINFOEX&lt;/code&gt; は、参照&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms686880(v=vs.85).aspx&quot;&gt;UpdateProcThreadAttributeを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8d1ea9bd99570cb1bc75029b5548ce6ef05a214" translate="yes" xml:space="preserve">
          <source>A dictionary of the various implementation-specific flags passed through the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt; command-line option. Option names are either mapped to their values, if given explicitly, or to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt;コマンドラインオプションを介して渡されるさまざまな実装固有のフラグのディクショナリ。オプション名は、明示的に指定されている場合は値にマップされるか、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; に&lt;/a&gt;マップされます。例：</target>
        </trans-unit>
        <trans-unit id="883b2f1e3063d1913a3806bc804e19b1916a2135" translate="yes" xml:space="preserve">
          <source>A dictionary or other mapping object used to store an object&amp;rsquo;s (writable) attributes.</source>
          <target state="translated">オブジェクトの（書き込み可能な）属性を格納するために使用される辞書またはその他のマッピングオブジェクト。</target>
        </trans-unit>
        <trans-unit id="92dd3d901ae1d208b192c4499f7914dd90754950" translate="yes" xml:space="preserve">
          <source>A dictionary representing the string environment at the time the interpreter was started. Keys and values are bytes on Unix and str on Windows. For example, &lt;code&gt;environ[b'HOME']&lt;/code&gt; (&lt;code&gt;environ['HOME']&lt;/code&gt; on Windows) is the pathname of your home directory, equivalent to &lt;code&gt;getenv(&quot;HOME&quot;)&lt;/code&gt; in C.</source>
          <target state="translated">インタープリターが開始されたときのストリング環境を表すディクショナリー。キーと値は、Unixではバイト、Windowsではstrです。たとえば、 &lt;code&gt;environ[b'HOME']&lt;/code&gt; （Windowsでは &lt;code&gt;environ['HOME']&lt;/code&gt; ）はホームディレクトリのパス名で、Cの &lt;code&gt;getenv(&quot;HOME&quot;)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="42b814bd9092d6a03d5a7cf5726f52c2b9dfd906" translate="yes" xml:space="preserve">
          <source>A dictionary that maps HTML entity names to the Unicode code points.</source>
          <target state="translated">HTMLエンティティ名をUnicodeコードポイントにマッピングする辞書。</target>
        </trans-unit>
        <trans-unit id="5057740ffd31b071a2fc069b125363d05bc05e59" translate="yes" xml:space="preserve">
          <source>A dictionary that maps HTML5 named character references &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; to the equivalent Unicode character(s), e.g. &lt;code&gt;html5['gt;'] == '&amp;gt;'&lt;/code&gt;. Note that the trailing semicolon is included in the name (e.g. &lt;code&gt;'gt;'&lt;/code&gt;), however some of the names are accepted by the standard even without the semicolon: in this case the name is present with and without the &lt;code&gt;';'&lt;/code&gt;. See also &lt;a href=&quot;html#html.unescape&quot;&gt;&lt;code&gt;html.unescape()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTML5の名前付き文字参照&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;を同等のUnicode文字にマップする辞書 &lt;code&gt;html5['gt;'] == '&amp;gt;'&lt;/code&gt; 例：html5 ['gt;'] == '&amp;gt;'。末尾のセミコロンは名前に含まれていることに注意してください（例： &lt;code&gt;'gt;'&lt;/code&gt; ）。ただし、セミコロンがなくても一部の名前は標準で受け入れられます。この場合、名前には &lt;code&gt;';'&lt;/code&gt; があってもなくても存在します。。&lt;a href=&quot;html#html.unescape&quot;&gt; &lt;code&gt;html.unescape()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="cc63f594687b07b71b43cf0201598bf639872967" translate="yes" xml:space="preserve">
          <source>A dictionary that maps Unicode code points to HTML entity names.</source>
          <target state="translated">Unicode コードポイントを HTML エンティティ名にマップする辞書。</target>
        </trans-unit>
        <trans-unit id="1bca1569e420f718ad21b0afdf8f2d3884982e29" translate="yes" xml:space="preserve">
          <source>A dictionary&amp;rsquo;s keys are &lt;em&gt;almost&lt;/em&gt; arbitrary values. Values that are not &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, that is, values containing lists, dictionaries or other mutable types (that are compared by value rather than by object identity) may not be used as keys. Numeric types used for keys obey the normal rules for numeric comparison: if two numbers compare equal (such as &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;) then they can be used interchangeably to index the same dictionary entry. (Note however, that since computers store floating-point numbers as approximations it is usually unwise to use them as dictionary keys.)</source>
          <target state="translated">辞書のキーは&lt;em&gt;ほとんど&lt;/em&gt;任意の値です。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;ではない値、つまり、リスト、ディクショナリ、またはその他の可変タイプ（オブジェクトIDではなく値で比較される）を含む値は、キーとして使用できません。キーに使用される数値型は、数値比較の通常の規則に従います。2つの数値が等しい場合（ &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; など）、同じ辞書エントリにインデックスを付けるために交換可能に使用できます。 （ただし、コンピューターは浮動小数点数を近似値として保存するため、通常、それらを辞書のキーとして使用することは賢明ではありません。）</target>
        </trans-unit>
        <trans-unit id="3314d689485f351732df38776d2aebcf87fb46fb" translate="yes" xml:space="preserve">
          <source>A different way of saying the same thing: a transport is an abstraction for a socket (or similar I/O endpoint) while a protocol is an abstraction for an application, from the transport&amp;rsquo;s point of view.</source>
          <target state="translated">同じことの別の言い方：トランスポートはソケット（または同様のI / Oエンドポイント）の抽象であり、プロトコルはトランスポートの観点からのアプリケーションの抽象です。</target>
        </trans-unit>
        <trans-unit id="6c267cca1b3e31131516a16ebfa25a9deaa1abe7" translate="yes" xml:space="preserve">
          <source>A distance - designating external padding on each side of the slave widget.</source>
          <target state="translated">距離-スレーブウィジェットの各側の外部パディングを指定します。</target>
        </trans-unit>
        <trans-unit id="331f0ddd905886a5438b59a0428dd70eb900bca9" translate="yes" xml:space="preserve">
          <source>A distance - designating internal padding on each side of the slave widget.</source>
          <target state="translated">距離-スレーブウィジェットの各側の内部パディングを指定します。</target>
        </trans-unit>
        <trans-unit id="97f7d90222a7680561f6049d8c60abf0b8fcc3f2" translate="yes" xml:space="preserve">
          <source>A document introducing theming support for Tk</source>
          <target state="translated">Tk のテーマサポートを紹介するドキュメント</target>
        </trans-unit>
        <trans-unit id="e6b5957b4dc099222079375767a0c31a2d463464" translate="yes" xml:space="preserve">
          <source>A domain blacklist and whitelist is provided (both off by default). Only domains not in the blacklist and present in the whitelist (if the whitelist is active) participate in cookie setting and returning. Use the &lt;em&gt;blocked_domains&lt;/em&gt; constructor argument, and &lt;code&gt;blocked_domains()&lt;/code&gt; and &lt;code&gt;set_blocked_domains()&lt;/code&gt; methods (and the corresponding argument and methods for &lt;em&gt;allowed_domains&lt;/em&gt;). If you set a whitelist, you can turn it off again by setting it to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ドメインのブラックリストとホワイトリストが提供されます（デフォルトでは両方ともオフ）。ブラックリストになく、ホワイトリスト（ホワイトリストがアクティブな場合）にあるドメインのみが、Cookieの設定と復帰に参加します。使用&lt;em&gt;blocked_domainsの&lt;/em&gt;コンストラクタ引数、および &lt;code&gt;blocked_domains()&lt;/code&gt; と &lt;code&gt;set_blocked_domains()&lt;/code&gt; メソッド（および対応する引数とする方法&lt;em&gt;allowed_domains&lt;/em&gt;）。ホワイトリストを設定した場合は、それを[ &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;設定することで、再びオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="b5bc64c496a25ca8afc6dca280f8eaaae6905810" translate="yes" xml:space="preserve">
          <source>A dotted name does not have its parents implicitly imported as that requires loading them and that may not be desired. To properly import a submodule you will need to import all parent packages of the submodule and use the correct argument to &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">ドットで区切られた名前は、その親を暗黙的にインポートしていません。これは、それらをロードする必要があり、望ましくない場合があるためです。サブモジュールを適切にインポートするには、サブモジュールのすべての親パッケージをインポートし、&lt;em&gt;pathに&lt;/em&gt;正しい引数を使用する必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2afdc09c8f0ff21a01a23955a159f93d9c60c85b" translate="yes" xml:space="preserve">
          <source>A double quotation mark preceded by a backslash is interpreted as a literal double quotation mark.</source>
          <target state="translated">ダブルクォーテーションマークの前にバックスラッシュを付けると、文字通りのダブルクォーテーションマークと解釈されます。</target>
        </trans-unit>
        <trans-unit id="ee015be85914a408bdb55953bf6e28397b075e85" translate="yes" xml:space="preserve">
          <source>A duration expressing the difference between two &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances to microsecond resolution.</source>
          <target state="translated">2つの&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス間の差をマイクロ秒の精度で表す期間。</target>
        </trans-unit>
        <trans-unit id="208bb487af72b18ad80d08c0869eec8bca1c4258" translate="yes" xml:space="preserve">
          <source>A enumeration of possible methods the interpreter can use to determine whether a bytecode file is up to date with a source file. The &lt;code&gt;.pyc&lt;/code&gt; file indicates the desired invalidation mode in its header. See &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#pyc-invalidation&quot;&gt;Cached bytecode invalidation&lt;/a&gt; for more information on how Python invalidates &lt;code&gt;.pyc&lt;/code&gt; files at runtime.</source>
          <target state="translated">バイトコードファイルがソースファイルで最新であるかどうかを判断するためにインタープリターが使用できる可能なメソッドの列挙。 &lt;code&gt;.pyc&lt;/code&gt; ファイルファイルは、ヘッダ内の所望の無効化モードを示します。Pythonが実行時に &lt;code&gt;.pyc&lt;/code&gt; ファイルを無効にする方法の詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#pyc-invalidation&quot;&gt;キャッシュされたバイトコードの無効化&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="e7ef5b9974cabd13d79c09216a0f3880b08e031b" translate="yes" xml:space="preserve">
          <source>A factory function for constructing a new empty message object. Used by the parser when building messages. Defaults to &lt;code&gt;None&lt;/code&gt;, in which case &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">新しい空のメッセージオブジェクトを作成するためのファクトリ関数。メッセージの作成時にパーサーによって使用されます。デフォルトは &lt;code&gt;None&lt;/code&gt; で、この場合&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="3c27ac85df3721a6a3d298390112658f41247faf" translate="yes" xml:space="preserve">
          <source>A factory function for creating a &lt;code&gt;ModuleSpec&lt;/code&gt; instance based on a loader. The parameters have the same meaning as they do for ModuleSpec. The function uses available &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; APIs, such as &lt;code&gt;InspectLoader.is_package()&lt;/code&gt;, to fill in any missing information on the spec.</source>
          <target state="translated">ローダーに基づいて &lt;code&gt;ModuleSpec&lt;/code&gt; インスタンスを作成するためのファクトリ関数。パラメータの意味は、ModuleSpecの場合と同じです。この関数は、 &lt;code&gt;InspectLoader.is_package()&lt;/code&gt; などの利用可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt; APIを使用して、仕様に不足している情報を入力します。</target>
        </trans-unit>
        <trans-unit id="a3e4022f60d82855c0e5621f25632e70e0708b42" translate="yes" xml:space="preserve">
          <source>A factory function for creating a &lt;code&gt;ModuleSpec&lt;/code&gt; instance based on the path to a file. Missing information will be filled in on the spec by making use of loader APIs and by the implication that the module will be file-based.</source>
          <target state="translated">ファイルへのパスに基づいて &lt;code&gt;ModuleSpec&lt;/code&gt; インスタンスを作成するためのファクトリ関数。不足している情報は、ローダーAPIを使用することにより、およびモジュールがファイルベースであるという意味で、仕様に記入されます。</target>
        </trans-unit>
        <trans-unit id="9783b6137a22427335ec59af0771c206742b7076" translate="yes" xml:space="preserve">
          <source>A fast implementation of &lt;em&gt;pbkdf2_hmac&lt;/em&gt; is available with OpenSSL. The Python implementation uses an inline version of &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt;. It is about three times slower and doesn&amp;rsquo;t release the GIL.</source>
          <target state="translated">OpenSSL では、&lt;em&gt;pbkdf2_hmacの&lt;/em&gt;高速実装を利用できます。Pythonの実装では、インラインバージョンの&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; を使用し&lt;/a&gt;ます。約3倍遅く、GILはリリースされません。</target>
        </trans-unit>
        <trans-unit id="58b14c844d80e0f7856b4dbfd7a4356cd2e63336" translate="yes" xml:space="preserve">
          <source>A few of the more complicated operations only take 16-bit samples, otherwise the sample size (in bytes) is always a parameter of the operation.</source>
          <target state="translated">より複雑な操作の中には、16 ビットのサンプルのみを取るものもありますが、そうでなければサンプルサイズ(バイト数)は常に操作のパラメータとなります。</target>
        </trans-unit>
        <trans-unit id="ce07e0e5589b8294ee5bcfc056f4446993e9cbe0" translate="yes" xml:space="preserve">
          <source>A file change can happen because of usage of programs such as &lt;em&gt;newsyslog&lt;/em&gt; and &lt;em&gt;logrotate&lt;/em&gt; which perform log file rotation. This handler, intended for use under Unix/Linux, watches the file to see if it has changed since the last emit. (A file is deemed to have changed if its device or inode have changed.) If the file has changed, the old file stream is closed, and the file opened to get a new stream.</source>
          <target state="translated">ファイルの変更は、ログファイルのローテーションを実行する&lt;em&gt;newsyslog&lt;/em&gt;や&lt;em&gt;logrotate&lt;/em&gt;などのプログラムの使用が原因で発生する可能性があり&lt;em&gt;ます&lt;/em&gt;。このハンドラーは、Unix / Linuxでの使用を目的としており、ファイルを監視して、前回の発行以降に変更されたかどうかを確認します。（デバイスまたはiノードが変更された場合、ファイルは変更されたと見なされます。）ファイルが変更された場合、古いファイルストリームが閉じられ、ファイルが開かれて新しいストリームが取得されます。</target>
        </trans-unit>
        <trans-unit id="ac60b6371aceeb4ac406c618133f788677880366" translate="yes" xml:space="preserve">
          <source>A file descriptor has an &amp;ldquo;inheritable&amp;rdquo; flag which indicates if the file descriptor can be inherited by child processes. Since Python 3.4, file descriptors created by Python are non-inheritable by default.</source>
          <target state="translated">ファイル記述子には、ファイル記述子を子プロセスが継承できるかどうかを示す「継承可能」フラグがあります。Python 3.4以降、Pythonで作成されたファイル記述子はデフォルトでは継承できません。</target>
        </trans-unit>
        <trans-unit id="87422d14dbf2f8122313024a2de4e298f6277dbd" translate="yes" xml:space="preserve">
          <source>A file object open for reading in bytes mode. The content of the file should be an application archive, and the file object is assumed to be positioned at the start of the archive.</source>
          <target state="translated">バイトモードで読み込み用にオープンされたファイルオブジェクト。ファイルの内容はアプリケーションアーカイブである必要があり、ファイルオブジェクトはアーカイブの先頭に配置されることを前提としています。</target>
        </trans-unit>
        <trans-unit id="73b679e8e268900461a4953c05105e6d04ebfb28" translate="yes" xml:space="preserve">
          <source>A file_dispatcher takes a file descriptor or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; along with an optional map argument and wraps it for use with the &lt;code&gt;poll()&lt;/code&gt; or &lt;code&gt;loop()&lt;/code&gt; functions. If provided a file object or anything with a &lt;code&gt;fileno()&lt;/code&gt; method, that method will be called and passed to the &lt;a href=&quot;#asyncore.file_wrapper&quot;&gt;&lt;code&gt;file_wrapper&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">file_dispatcherは、オプションのマップ引数とともにファイル記述子または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;受け取り、 &lt;code&gt;poll()&lt;/code&gt; または &lt;code&gt;loop()&lt;/code&gt; 関数で使用するためにラップします。ファイルオブジェクトまたは &lt;code&gt;fileno()&lt;/code&gt; メソッドで何かが提供されている場合、そのメソッドが呼び出され、&lt;a href=&quot;#asyncore.file_wrapper&quot;&gt; &lt;code&gt;file_wrapper&lt;/code&gt; &lt;/a&gt;コンストラクターに渡されます。</target>
        </trans-unit>
        <trans-unit id="f31ce896efd5e24f1a4f3d935b7f6591c845897a" translate="yes" xml:space="preserve">
          <source>A file_wrapper takes an integer file descriptor and calls &lt;a href=&quot;os#os.dup&quot;&gt;&lt;code&gt;os.dup()&lt;/code&gt;&lt;/a&gt; to duplicate the handle so that the original handle may be closed independently of the file_wrapper. This class implements sufficient methods to emulate a socket for use by the &lt;a href=&quot;#asyncore.file_dispatcher&quot;&gt;&lt;code&gt;file_dispatcher&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">file_wrapperは整数のファイル記述子を受け取り、&lt;a href=&quot;os#os.dup&quot;&gt; &lt;code&gt;os.dup()&lt;/code&gt; &lt;/a&gt;を呼び出してハンドルを複製します。これにより、file_wrapperとは無関係に元のハンドルを閉じることができます。このクラスは、&lt;a href=&quot;#asyncore.file_dispatcher&quot;&gt; &lt;code&gt;file_dispatcher&lt;/code&gt; &lt;/a&gt;クラスが使用するソケットをエミュレートするのに十分なメソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="185d574dcb2420e93052478d0415e9aa0fbd3687" translate="yes" xml:space="preserve">
          <source>A filter chain can consist of up to 4 filters, and cannot be empty. The last filter in the chain must be a compression filter, and any other filters must be delta or BCJ filters.</source>
          <target state="translated">1 つのフィルターチェーンは最大 4 つのフィルターで構成することができ、空にすることはできません。チェーンの最後のフィルターは圧縮フィルターでなければならず、その他のフィルターはデルタかBCJフィルターでなければなりません。</target>
        </trans-unit>
        <trans-unit id="dd7b63ca1193f5d21b3a8c8c5e7295ef36643ba2" translate="yes" xml:space="preserve">
          <source>A filter chain specifier is a sequence of dictionaries, where each dictionary contains the ID and options for a single filter. Each dictionary must contain the key &lt;code&gt;&quot;id&quot;&lt;/code&gt;, and may contain additional keys to specify filter-dependent options. Valid filter IDs are as follows:</source>
          <target state="translated">フィルターチェーン指定子は一連のディクショナリであり、各ディクショナリには単一のフィルターのIDとオプションが含まれています。各ディクショナリにはキー &lt;code&gt;&quot;id&quot;&lt;/code&gt; が含まれている必要があり、フィルターに依存するオプションを指定するための追加のキーが含まれる場合があります。有効なフィルターIDは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a714c39d8def530679d274649d600f3fb469d8ff" translate="yes" xml:space="preserve">
          <source>A finalizer is considered &lt;em&gt;alive&lt;/em&gt; until it is called (either explicitly or at garbage collection), and after that it is &lt;em&gt;dead&lt;/em&gt;. Calling a live finalizer returns the result of evaluating &lt;code&gt;func(*arg, **kwargs)&lt;/code&gt;, whereas calling a dead finalizer returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイナライザは、それが呼び出されるまで（明示的にまたはガベージコレクション時に）&lt;em&gt;生きている&lt;/em&gt;と見なされ、その後は&lt;em&gt;デッド&lt;/em&gt;です。ライブファイナライザを呼び出すと、 &lt;code&gt;func(*arg, **kwargs)&lt;/code&gt; を評価した結果が返されますが、デッドファイナライザを呼び出すと&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="b21c974a224f024257e9dff22d6c873811ec48c6" translate="yes" xml:space="preserve">
          <source>A finalizer will never invoke its callback during the later part of the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt; when module globals are liable to have been replaced by &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールグローバルが&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; に&lt;/a&gt;置き換えられた可能性がある場合、ファイナライザは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;インタプリタのシャットダウンの&lt;/a&gt;後半にコールバックを呼び出すことはありません。</target>
        </trans-unit>
        <trans-unit id="ef110c8e4bc2cc963b6f1c9cbb4d012997f4feff" translate="yes" xml:space="preserve">
          <source>A first in, first out (FIFO) queue.</source>
          <target state="translated">FIFO (first in,first out)キュー。</target>
        </trans-unit>
        <trans-unit id="fb7a4ce9a57762684729c48f99268cca271e14f6" translate="yes" xml:space="preserve">
          <source>A fix here would be to swap the last two lines (or simply remove the &lt;code&gt;p.join()&lt;/code&gt; line).</source>
          <target state="translated">ここでの修正は、最後の2行を入れ替えることです（または単に &lt;code&gt;p.join()&lt;/code&gt; 行を削除します）。</target>
        </trans-unit>
        <trans-unit id="d62394a9d5bb2e45ce5132c777971742e1a8e390" translate="yes" xml:space="preserve">
          <source>A flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8933e3491b90a96e5d640cf7bf02a33e05ae3af" translate="yes" xml:space="preserve">
          <source>A flag, defaulting to true. If true, &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; to display a prompt and read the next command; if false, &lt;code&gt;sys.stdout.write()&lt;/code&gt; and &lt;code&gt;sys.stdin.readline()&lt;/code&gt; are used. (This means that by importing &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, on systems that support it, the interpreter will automatically support &lt;strong&gt;Emacs&lt;/strong&gt;-like line editing and command-history keystrokes.)</source>
          <target state="translated">フラグ。デフォルトはtrueです。trueの場合、&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;を使用してプロンプトを表示し、次のコマンドを読み取ります。falseの場合、 &lt;code&gt;sys.stdout.write()&lt;/code&gt; および &lt;code&gt;sys.stdin.readline()&lt;/code&gt; が使用されます。（これは、&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;をインポートすることにより、それをサポートするシステムで、インタープリターが&lt;strong&gt;Emacsの&lt;/strong&gt;ような行編集とコマンド履歴のキーストロークを自動的にサポートすることを意味します。）</target>
        </trans-unit>
        <trans-unit id="e124b629651d02f1b7db7141b8912ce7a9d80075" translate="yes" xml:space="preserve">
          <source>A floating-point &amp;ldquo;not a number&amp;rdquo; (NaN) value. Equivalent to &lt;code&gt;float('nan')&lt;/code&gt;.</source>
          <target state="translated">浮動小数点「非数」（NaN）値。 &lt;code&gt;float('nan')&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2b24b891261aa0f26483098fda56c230f8e264a8" translate="yes" xml:space="preserve">
          <source>A floating-point &amp;ldquo;not a number&amp;rdquo; (NaN) value. Equivalent to the output of &lt;code&gt;float('nan')&lt;/code&gt;.</source>
          <target state="translated">浮動小数点「非数」（NaN）値。 &lt;code&gt;float('nan')&lt;/code&gt; の出力と同等です。</target>
        </trans-unit>
        <trans-unit id="216320427562ba4167e8f12710f9a45a82866cfe" translate="yes" xml:space="preserve">
          <source>A floating-point positive infinity. (For negative infinity, use &lt;code&gt;-math.inf&lt;/code&gt;.) Equivalent to the output of &lt;code&gt;float('inf')&lt;/code&gt;.</source>
          <target state="translated">浮動小数点の正の無限大。（負の無限大の場合は、 &lt;code&gt;-math.inf&lt;/code&gt; を使用します。） &lt;code&gt;float('inf')&lt;/code&gt; の出力と同等です。</target>
        </trans-unit>
        <trans-unit id="9c8abca923718fe448596a44d16c57a97e88995f" translate="yes" xml:space="preserve">
          <source>A form submitted via POST that also has a query string will contain both &lt;code&gt;FieldStorage&lt;/code&gt; and &lt;code&gt;MiniFieldStorage&lt;/code&gt; items.</source>
          <target state="translated">POSTを介して送信され、クエリ文字列も含まれる &lt;code&gt;FieldStorage&lt;/code&gt; 、 &lt;code&gt;MiniFieldStorage&lt;/code&gt; アイテムとMiniFieldStorageアイテムの両方が含まれます。</target>
        </trans-unit>
        <trans-unit id="3220346ecc81d8b43e2ddadbc158ab2cd2dace7f" translate="yes" xml:space="preserve">
          <source>A format character may be preceded by an integral repeat count. For example, the format string &lt;code&gt;'4h'&lt;/code&gt; means exactly the same as &lt;code&gt;'hhhh'&lt;/code&gt;.</source>
          <target state="translated">書式文字の前には、整数の繰り返し数を付けることができます。たとえば、フォーマット文字列 &lt;code&gt;'4h'&lt;/code&gt; は、 &lt;code&gt;'hhhh'&lt;/code&gt; とまったく同じ意味です。</target>
        </trans-unit>
        <trans-unit id="6a6167b7cc9379b59c7d4ae641670895f0f661c4" translate="yes" xml:space="preserve">
          <source>A function (or other code block) is about to return. The local trace function is called; &lt;em&gt;arg&lt;/em&gt; is the value that will be returned, or &lt;code&gt;None&lt;/code&gt; if the event is caused by an exception being raised. The trace function&amp;rsquo;s return value is ignored.</source>
          <target state="translated">関数（または他のコードブロック）が戻ります。ローカルトレース関数が呼び出されます。&lt;em&gt;arg&lt;/em&gt;は返される値です。例外が発生したことによってイベントが発生した場合は &lt;code&gt;None&lt;/code&gt; になります。トレース関数の戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="0cbc3f16cdd3c2a730e67313eaa7af63bb934882" translate="yes" xml:space="preserve">
          <source>A function (or other code block) is about to return. The profile function is called; &lt;em&gt;arg&lt;/em&gt; is the value that will be returned, or &lt;code&gt;None&lt;/code&gt; if the event is caused by an exception being raised.</source>
          <target state="translated">関数（または他のコードブロック）が戻ります。プロファイル関数が呼び出されます。&lt;em&gt;arg&lt;/em&gt;は返される値です。例外が発生したことによってイベントが発生した場合は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="115f17e5a72552e167e62ab590d3ff7ee34eb1bc" translate="yes" xml:space="preserve">
          <source>A function is called (or some other code block entered). The global trace function is called; &lt;em&gt;arg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;; the return value specifies the local trace function.</source>
          <target state="translated">関数が呼び出された（または他のコードブロックが入力された）。グローバルトレース関数が呼び出されます。&lt;em&gt;arg&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; です。戻り値はローカルトレース関数を指定します。</target>
        </trans-unit>
        <trans-unit id="6285ed4d503ee4387c07dcb622242037eab68155" translate="yes" xml:space="preserve">
          <source>A function is called (or some other code block entered). The profile function is called; &lt;em&gt;arg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">関数が呼び出された（または他のコードブロックが入力された）。プロファイル関数が呼び出されます。&lt;em&gt;arg&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2304e8fd534b14032c8894ea871bd6d99533429c" translate="yes" xml:space="preserve">
          <source>A general convention is that an empty format string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) produces the same result as if you had called &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on the value. A non-empty format string typically modifies the result.</source>
          <target state="translated">一般的な規則では、空のフォーマット文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）は、値に対して&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;を呼び出した場合と同じ結果を生成します。空でないフォーマット文字列は通常、結果を変更します。</target>
        </trans-unit>
        <trans-unit id="e3db31187eb8d3fa3f1e1065f3d4c4e6119291bf" translate="yes" xml:space="preserve">
          <source>A generator can be annotated by the generic type &lt;code&gt;Generator[YieldType, SendType, ReturnType]&lt;/code&gt;. For example:</source>
          <target state="translated">ジェネレーターには、ジェネリック型 &lt;code&gt;Generator[YieldType, SendType, ReturnType]&lt;/code&gt; で注釈を付けることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="e83ef0002e032f202b31359e4b9775650fb18487" translate="yes" xml:space="preserve">
          <source>A generic class that represents the system&amp;rsquo;s path flavour (instantiating it creates either a &lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt;&lt;code&gt;PurePosixPath&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt;&lt;code&gt;PureWindowsPath&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">システムのパスの風味を表しジェネリッククラスは、（それがいずれかの作成インスタンス化&lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt; &lt;code&gt;PurePosixPath&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt; &lt;code&gt;PureWindowsPath&lt;/code&gt; を&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="dceddb9eda7649f322bc64ce0c8a64c8a5c5c8da" translate="yes" xml:space="preserve">
          <source>A generic type can have any number of type variables, and type variables may be constrained:</source>
          <target state="translated">一般的な型はいくつでも型変数を持つことができ、型変数は制約を受けることがあります。</target>
        </trans-unit>
        <trans-unit id="0ebc1a1ddbafee28208698288d34b3354b4b3dab" translate="yes" xml:space="preserve">
          <source>A generic type is typically declared by inheriting from an instantiation of this class with one or more type variables. For example, a generic mapping type might be defined as:</source>
          <target state="translated">一般的な型は、通常、このクラスのインスタンスを継承して、1つ以上の型変数で宣言されます。例えば、一般的なマッピング型は次のように定義されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c7ad0ed8de4ba6022e2f21372fc470066501156f" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections#collections.ChainMap&quot;&gt;&lt;code&gt;collections.ChainMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.ChainMap&quot;&gt; &lt;code&gt;collections.ChainMap&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="e2c56b65a83b26f844f77d31920445b01ed2ce9a" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections#collections.Counter&quot;&gt;&lt;code&gt;collections.Counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.Counter&quot;&gt; &lt;code&gt;collections.Counter&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="47bfdd6e180eb6ef8c9f0f4ce2867a61d2547885" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="587e7c3bda216e96d27ffd87a8c30bee0fe6bd0c" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections#collections.defaultdict&quot;&gt;&lt;code&gt;collections.defaultdict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.defaultdict&quot;&gt; &lt;code&gt;collections.defaultdict&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="52f9a7828abe5b813ea56c3d2a42173d97ad8055" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections#collections.deque&quot;&gt;&lt;code&gt;collections.deque&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.deque&quot;&gt; &lt;code&gt;collections.deque&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="65a238453b25078032c0382d27ffc2340b0c8e1c" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.AsyncIterable&quot;&gt;&lt;code&gt;collections.abc.AsyncIterable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.AsyncIterable&quot;&gt; &lt;code&gt;collections.abc.AsyncIterable&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="cc0b18258e157e2b549299a208631fa36674d5db" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.AsyncIterator&quot;&gt;&lt;code&gt;collections.abc.AsyncIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.AsyncIterator&quot;&gt; &lt;code&gt;collections.abc.AsyncIterator&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="7cf4459819d1a553a0f4b901b1b80e776c17e637" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Awaitable&quot;&gt;&lt;code&gt;collections.abc.Awaitable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Awaitable&quot;&gt; &lt;code&gt;collections.abc.Awaitable&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="49aebe83ded1dbef890340f380da1fee28689c09" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.ByteString&quot;&gt;&lt;code&gt;collections.abc.ByteString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.ByteString&quot;&gt; &lt;code&gt;collections.abc.ByteString&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="5d65f01cac115995ba2ca3d48d65b87c51f092f7" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Collection&quot;&gt;&lt;code&gt;collections.abc.Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Collection&quot;&gt; &lt;code&gt;collections.abc.Collection&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン</target>
        </trans-unit>
        <trans-unit id="3e18628ab4fb6a85ee476b11de00359743a335cb" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Container&quot;&gt;&lt;code&gt;collections.abc.Container&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Container&quot;&gt; &lt;code&gt;collections.abc.Container&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="c1eb29ae54257341ca3758a811adfd072fbd300c" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Coroutine&quot;&gt;&lt;code&gt;collections.abc.Coroutine&lt;/code&gt;&lt;/a&gt;. The variance and order of type variables correspond to those of &lt;a href=&quot;#typing.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, for example:</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Coroutine&quot;&gt; &lt;code&gt;collections.abc.Coroutine&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。タイプ変数の分散と順序は、&lt;a href=&quot;#typing.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;の分散と順序に対応しています。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="0332ca5af22086e282a9bed87b032784771048f9" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.ItemsView&quot;&gt;&lt;code&gt;collections.abc.ItemsView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.ItemsView&quot;&gt; &lt;code&gt;collections.abc.ItemsView&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="cf6469f393ccc1b23d8b0b3c11e9ff7192077723" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;collections.abc.Iterable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;collections.abc.Iterable&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="deb9e138361bc7577f3ffb3841c816bc33f33ddd" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Iterator&quot;&gt;&lt;code&gt;collections.abc.Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Iterator&quot;&gt; &lt;code&gt;collections.abc.Iterator&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="a5f5a6630703be4bd1536d1663c8815b30cdfa15" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.KeysView&quot;&gt;&lt;code&gt;collections.abc.KeysView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.KeysView&quot;&gt; &lt;code&gt;collections.abc.KeysView&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="75f6ff5a08644d05f28c51c2724892e92b03228b" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;collections.abc.Mapping&lt;/code&gt;&lt;/a&gt;. This type can be used as follows:</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;collections.abc.Mapping&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。このタイプは次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="772406cb4ec6fd6cb7c542e941cef51573d6249b" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.MappingView&quot;&gt;&lt;code&gt;collections.abc.MappingView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.MappingView&quot;&gt; &lt;code&gt;collections.abc.MappingView&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="99bdb718a216af6ee8c0f3e73c34ccac7ff4cdc9" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;collections.abc.MutableMapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;collections.abc.MutableMapping&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="03c42066ffd762f08bc890b6eeb37e2fcf6d0a05" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt;&lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt; &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="10cea0cf558fecfb05100bdb9168aeafb5c1342d" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.MutableSet&quot;&gt;&lt;code&gt;collections.abc.MutableSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.MutableSet&quot;&gt; &lt;code&gt;collections.abc.MutableSet&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="a73a89c81f7946ac10a82001b52bfd34ef03cef8" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Reversible&quot;&gt;&lt;code&gt;collections.abc.Reversible&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Reversible&quot;&gt; &lt;code&gt;collections.abc.Reversible&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="77a5c5c960e9f5d17f2982c4f60c66c970223a0d" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="d56b1ed3c4ad2e3407de56f469351aa66f361ab8" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt;&lt;code&gt;collections.abc.Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt; &lt;code&gt;collections.abc.Set&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="a72d40d848ae738880726f9933cd7b13554d95dc" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;collections.abc#collections.abc.ValuesView&quot;&gt;&lt;code&gt;collections.abc.ValuesView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collections.abc#collections.abc.ValuesView&quot;&gt; &lt;code&gt;collections.abc.ValuesView&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="14555f146f36134ba1a5836d6969121ad7690ba8" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;contextlib#contextlib.AbstractAsyncContextManager&quot;&gt;&lt;code&gt;contextlib.AbstractAsyncContextManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;contextlib#contextlib.AbstractAsyncContextManager&quot;&gt; &lt;code&gt;contextlib.AbstractAsyncContextManager&lt;/code&gt; の&lt;/a&gt;汎用バージョン。</target>
        </trans-unit>
        <trans-unit id="42739152779ab2e3c8a034dc8f56a5682aef3e36" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;contextlib#contextlib.AbstractContextManager&quot;&gt;&lt;code&gt;contextlib.AbstractContextManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;contextlib#contextlib.AbstractContextManager&quot;&gt; &lt;code&gt;contextlib.AbstractContextManager&lt;/code&gt; の&lt;/a&gt;ジェネリックバージョン。</target>
        </trans-unit>
        <trans-unit id="b221ff46127eb7f91dc8e3b7958666b48915a5c7" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. Useful for annotating return types. To annotate arguments it is preferred to use an abstract collection type such as &lt;a href=&quot;#typing.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; の&lt;/a&gt;汎用バージョン。戻り型に注釈を付けるのに役立ちます。引数に注釈を付けるには、&lt;a href=&quot;#typing.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;などの抽象コレクション型を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dc2a3bbd1b5fb3f02e21894cdb207772b4a3ab30" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;stdtypes#frozenset&quot;&gt;&lt;code&gt;builtins.frozenset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#frozenset&quot;&gt; &lt;code&gt;builtins.frozenset&lt;/code&gt; の&lt;/a&gt;汎用バージョン。</target>
        </trans-unit>
        <trans-unit id="07bf0ab84eae039925294faa65d84a7fcadc0bf8" translate="yes" xml:space="preserve">
          <source>A generic version of &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;builtins.set&lt;/code&gt;&lt;/a&gt;. Useful for annotating return types. To annotate arguments it is preferred to use an abstract collection type such as &lt;a href=&quot;#typing.AbstractSet&quot;&gt;&lt;code&gt;AbstractSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;builtins.set&lt;/code&gt; の&lt;/a&gt;汎用バージョン。戻り型に注釈を付けるのに役立ちます。引数に注釈を付けるには、&lt;a href=&quot;#typing.AbstractSet&quot;&gt; &lt;code&gt;AbstractSet&lt;/code&gt; &lt;/a&gt;などの抽象コレクション型を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f3c5692d355f25644a4123f6d06a971ccc248420" translate="yes" xml:space="preserve">
          <source>A good description of XML-RPC operation and client software in several languages. Contains pretty much everything an XML-RPC client developer needs to know.</source>
          <target state="translated">XML-RPC の操作とクライアントソフトウェアについて、いくつかの言語で説明されています。XML-RPC クライアントの開発者が知っておくべきことをすべて含んでいます。</target>
        </trans-unit>
        <trans-unit id="d8803ea4dbd2fa0b37769b46cce884608006d83e" translate="yes" xml:space="preserve">
          <source>A good example of a low-level function that returns a Future object is &lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Futureオブジェクトを返す低レベル関数の良い例は&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;loop.run_in_executor()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5e9645956a7effdfc2bf1b4ddd01830f9f4ba654" translate="yes" xml:space="preserve">
          <source>A handler for a particular signal, once set, remains installed until it is explicitly reset (Python emulates the BSD style interface regardless of the underlying implementation), with the exception of the handler for &lt;code&gt;SIGCHLD&lt;/code&gt;, which follows the underlying implementation.</source>
          <target state="translated">特定のシグナルのハンドラーは、一度設定されると、明示的にリセットされるまでインストールされたままです（Pythonは、基礎となる実装に関係なく、BSDスタイルのインターフェースをエミュレートします）。ただし、基礎となる実装に続く &lt;code&gt;SIGCHLD&lt;/code&gt; のハンドラーは例外です。</target>
        </trans-unit>
        <trans-unit id="a94bd048002bbeed28b57cf0368d15b7b44c3ba9" translate="yes" xml:space="preserve">
          <source>A hardware resource list.</source>
          <target state="translated">ハードウェアリソースのリスト。</target>
        </trans-unit>
        <trans-unit id="5f1b5900bc7a16c90ad157447bc487fe8a37067c" translate="yes" xml:space="preserve">
          <source>A hardware setting.</source>
          <target state="translated">ハードウェアの設定です。</target>
        </trans-unit>
        <trans-unit id="bdf4991f4c32ad8ca9cddfb28f99f90eb29e81a4" translate="yes" xml:space="preserve">
          <source>A hash object has the following attributes:</source>
          <target state="translated">ハッシュオブジェクトは以下の属性を持っています。</target>
        </trans-unit>
        <trans-unit id="eeb6293c835a56824c773a51714709ac24829898" translate="yes" xml:space="preserve">
          <source>A hash object has the following methods:</source>
          <target state="translated">ハッシュオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="5afecb698330bdbfd8fc0e6154858348cc639018" translate="yes" xml:space="preserve">
          <source>A helper class that has &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; as its metaclass. With this class, an abstract base class can be created by simply deriving from &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; avoiding sometimes confusing metaclass usage, for example:</source>
          <target state="translated">&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;をメタクラスとして持つヘルパークラス。このクラスを使用すると、&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;から単純に派生することで抽象基本クラスを作成でき、メタクラスの使用を混乱させることを回避できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="463dabbba61416236d8113793092e9d8c33a9110" translate="yes" xml:space="preserve">
          <source>A helper codec that decodes newlines for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode. It inherits &lt;a href=&quot;codecs#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;codecs.IncrementalDecoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル改行&lt;/a&gt;モードの改行をデコードするヘルパーコーデック。&lt;a href=&quot;codecs#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;codecs.IncrementalDecoder&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="2b703fa94b538bdbbf4154cb740750c21719f9bf" translate="yes" xml:space="preserve">
          <source>A helper function to create a mock to replace the use of &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. It works for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; called directly or used as a context manager.</source>
          <target state="translated">&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; の&lt;/a&gt;使用を置き換えるモックを作成するヘルパー関数。直接呼び出された、またはコンテキストマネージャとして使用された&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;に対して機能します。</target>
        </trans-unit>
        <trans-unit id="733ba7699058c9e017e1465d27f5c24aca4ccad8" translate="yes" xml:space="preserve">
          <source>A helper function to indicate a distinct types to a typechecker, see &lt;a href=&quot;#distinct&quot;&gt;NewType&lt;/a&gt;. At runtime it returns a function that returns its argument. Usage:</source>
          <target state="translated">ヘルパー関数は、型チェッカーへの特殊タイプを示すために、参照の&lt;a href=&quot;#distinct&quot;&gt;ニュータイプを&lt;/a&gt;。実行時に、引数を返す関数を返します。使用法：</target>
        </trans-unit>
        <trans-unit id="ecb3d19611d4d1dfb52b9d7f1682bab863ee2d73" translate="yes" xml:space="preserve">
          <source>A hexadecimal string takes the form:</source>
          <target state="translated">16進数の文字列は、この形式をとります。</target>
        </trans-unit>
        <trans-unit id="86e5bf9b303b8188f50eb7c43cefc44851afbc09" translate="yes" xml:space="preserve">
          <source>A historical way to create temporary files was to first generate a file name with the &lt;a href=&quot;#tempfile.mktemp&quot;&gt;&lt;code&gt;mktemp()&lt;/code&gt;&lt;/a&gt; function and then create a file using this name. Unfortunately this is not secure, because a different process may create a file with this name in the time between the call to &lt;a href=&quot;#tempfile.mktemp&quot;&gt;&lt;code&gt;mktemp()&lt;/code&gt;&lt;/a&gt; and the subsequent attempt to create the file by the first process. The solution is to combine the two steps and create the file immediately. This approach is used by &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; and the other functions described above.</source>
          <target state="translated">一時ファイルを作成する歴史的な方法は、最初に&lt;a href=&quot;#tempfile.mktemp&quot;&gt; &lt;code&gt;mktemp()&lt;/code&gt; &lt;/a&gt;関数でファイル名を生成し、次にこの名前を使用してファイルを作成することでした。残念ながら、これは安全ではありません&lt;a href=&quot;#tempfile.mktemp&quot;&gt; &lt;code&gt;mktemp()&lt;/code&gt; &lt;/a&gt;を呼び出してから、最初のプロセスがファイルを作成しようとするまでの間に、別のプロセスがこの名前のファイルを作成する可能性があるためです。解決策は、2つのステップを組み合わせて、すぐにファイルを作成することです。このアプローチは、&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;および上記の他の関数で使用されます。</target>
        </trans-unit>
        <trans-unit id="16e7d5febf77b88f0d0a5cdae94545a73ea2ccc6" translate="yes" xml:space="preserve">
          <source>A history of mbox variations.</source>
          <target state="translated">mboxのバリエーションの歴史。</target>
        </trans-unit>
        <trans-unit id="8433fd9edfb4389a74c808c070e9aeac474c140d" translate="yes" xml:space="preserve">
          <source>A human readable string of the verification error.</source>
          <target state="translated">検証エラーの人間が読める文字列。</target>
        </trans-unit>
        <trans-unit id="c43fbf0af78f9c19035c118025bbbe4d57e56933" translate="yes" xml:space="preserve">
          <source>A layout can be just &lt;code&gt;None&lt;/code&gt;, if it takes no options, or a dict of options specifying how to arrange the element. The layout mechanism uses a simplified version of the pack geometry manager: given an initial cavity, each element is allocated a parcel. Valid options/values are:</source>
          <target state="translated">オプションを取らない場合は、レイアウトを &lt;code&gt;None&lt;/code&gt; にするか、要素の配置方法を指定するオプションのディクショナリにすることができます。レイアウトメカニズムは、簡略化されたバージョンのパックジオメトリマネージャーを使用します。初期キャビティが指定されると、各要素に区画が割り当てられます。有効なオプション/値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="12b833b9b4978119e05b5cf164da2098e7885f80" translate="yes" xml:space="preserve">
          <source>A lazier version of &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; の&lt;/a&gt;レイジーバージョン。</target>
        </trans-unit>
        <trans-unit id="6ab05795aeefec86a70f344660069c82deac3931" translate="yes" xml:space="preserve">
          <source>A left shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to multiplication by &lt;code&gt;pow(2, n)&lt;/code&gt; without overflow check.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;ビットの左シフトは &lt;code&gt;pow(2, n)&lt;/code&gt; オーバーフローチェックなしのpow（2、n）による乗算と同等です。</target>
        </trans-unit>
        <trans-unit id="4f4d19912dd5ccc928dd9a24bc90dfd50e5e752e" translate="yes" xml:space="preserve">
          <source>A legacy method for finding a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the specified module. If this is a top-level import, &lt;em&gt;path&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt;. Otherwise, this is a search for a subpackage or module and &lt;em&gt;path&lt;/em&gt; will be the value of &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; from the parent package. If a loader cannot be found, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">指定されたモジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を見つけるためのレガシーメソッド。これがトップレベルのインポートである場合、&lt;em&gt;パス&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; になります。それ以外の場合、これはサブパッケージまたはモジュールの検索であり、&lt;em&gt;パス&lt;/em&gt;は親パッケージの&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;の値になります。ローダーが見つからない場合は、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="55fc4280db77147c277311972da07d2afd9e4a43" translate="yes" xml:space="preserve">
          <source>A legacy method for finding a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the specified module. Returns a 2-tuple of &lt;code&gt;(loader, portion)&lt;/code&gt; where &lt;code&gt;portion&lt;/code&gt; is a sequence of file system locations contributing to part of a namespace package. The loader may be &lt;code&gt;None&lt;/code&gt; while specifying &lt;code&gt;portion&lt;/code&gt; to signify the contribution of the file system locations to a namespace package. An empty list can be used for &lt;code&gt;portion&lt;/code&gt; to signify the loader is not part of a namespace package. If &lt;code&gt;loader&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;portion&lt;/code&gt; is the empty list then no loader or location for a namespace package were found (i.e. failure to find anything for the module).</source>
          <target state="translated">指定されたモジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を見つけるためのレガシーメソッド。 &lt;code&gt;(loader, portion)&lt;/code&gt; 2タプルを返します。 &lt;code&gt;portion&lt;/code&gt; は、ネームスペースパッケージの一部を構成するファイルシステムの場所のシーケンスです。ローダーは、名前空間パッケージへのファイルシステムの場所の貢献を示す &lt;code&gt;portion&lt;/code&gt; を指定するときに &lt;code&gt;None&lt;/code&gt; になることがあります。空のリストを &lt;code&gt;portion&lt;/code&gt; に使用して、ローダーが名前空間パッケージの一部ではないことを示すことができます。場合 &lt;code&gt;loader&lt;/code&gt; ある &lt;code&gt;None&lt;/code&gt; と &lt;code&gt;portion&lt;/code&gt; 空のリストその後、名前空間のパッケージには、ローダや場所が見つかりませんでした（モジュールのための何かを見つけるために、すなわち失敗）ではありません。</target>
        </trans-unit>
        <trans-unit id="993a9b82c27627112fa9a5c922f2f188bcc4b7ea" translate="yes" xml:space="preserve">
          <source>A legacy method for loading a module. If the module cannot be loaded, &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; is raised, otherwise the loaded module is returned.</source>
          <target state="translated">モジュールをロードするための従来の方法。モジュールをロードできない場合は&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;が発生し、そうでない場合はロードされたモジュールが返されます。</target>
        </trans-unit>
        <trans-unit id="a79098410a2be141fe0763318b810c29244a09db" translate="yes" xml:space="preserve">
          <source>A legacy method which when implemented calculates and returns the given module&amp;rsquo;s repr, as a string. The module type&amp;rsquo;s default repr() will use the result of this method as appropriate.</source>
          <target state="translated">実装時に、指定されたモジュールのreprを計算して文字列として返すレガシーメソッド。モジュールタイプのデフォルトのrepr（）は、このメソッドの結果を適切に使用します。</target>
        </trans-unit>
        <trans-unit id="5a5e1376e0b9579ce1375eeb580277e3b5593cc7" translate="yes" xml:space="preserve">
          <source>A legacy wrapper around &lt;a href=&quot;#importlib.machinery.PathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.machinery.PathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; の&lt;/a&gt;レガシーラッパー。</target>
        </trans-unit>
        <trans-unit id="aaa3668d4f210a788555e895c2083eddfb8e22a7" translate="yes" xml:space="preserve">
          <source>A length modifier (&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, or &lt;code&gt;L&lt;/code&gt;) may be present, but is ignored as it is not necessary for Python &amp;ndash; so e.g. &lt;code&gt;%ld&lt;/code&gt; is identical to &lt;code&gt;%d&lt;/code&gt;.</source>
          <target state="translated">長さ修飾子（ &lt;code&gt;h&lt;/code&gt; 、 &lt;code&gt;l&lt;/code&gt; 、または &lt;code&gt;L&lt;/code&gt; ）が存在してもかまいませんが、Pythonでは必要ないため無視されます。たとえば、 &lt;code&gt;%ld&lt;/code&gt; は &lt;code&gt;%d&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="3c0f6cd40b47625322cde184411be67667052c3d" translate="yes" xml:space="preserve">
          <source>A library which wants to use a particular start method should probably use &lt;a href=&quot;#multiprocessing.get_context&quot;&gt;&lt;code&gt;get_context()&lt;/code&gt;&lt;/a&gt; to avoid interfering with the choice of the library user.</source>
          <target state="translated">特定の開始メソッドを使用したいライブラリは、おそらく&lt;a href=&quot;#multiprocessing.get_context&quot;&gt; &lt;code&gt;get_context()&lt;/code&gt; &lt;/a&gt;を使用して、ライブラリユーザーの選択を妨げないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="efb417143c13f05452f5727e0101bb69cbfd5ddb" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding formatted tracebacks. Each tuple represents a test where a failure was explicitly signalled using the &lt;code&gt;TestCase.assert*()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、フォーマットされたトレースバックを保持する文字列を含むリスト。各タプルは、 &lt;code&gt;TestCase.assert*()&lt;/code&gt; メソッドを使用して失敗が明示的に通知されたテストを表します。</target>
        </trans-unit>
        <trans-unit id="adaa283737fdd7c753685698772c68def271a8d7" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding formatted tracebacks. Each tuple represents a test which raised an unexpected exception.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、フォーマットされたトレースバックを保持する文字列を含むリスト。各タプルは、予期しない例外を発生させたテストを表しています。</target>
        </trans-unit>
        <trans-unit id="92ce4122d833f9368b375ed599693656c33c96d1" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding formatted tracebacks. Each tuple represents an expected failure of the test case.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、フォーマットされたトレースバックを保持する文字列を含むリスト。各タプルは、テストケースの予想される失敗を表します。</target>
        </trans-unit>
        <trans-unit id="adfc2fa69598f416edc0906695c6be2768745dd0" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding the reason for skipping the test.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、テストをスキップした理由を保持する文字列を含むリスト。</target>
        </trans-unit>
        <trans-unit id="188f395714c720911bcc2d078055feb553b62673" translate="yes" xml:space="preserve">
          <source>A list containing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances that were marked as expected failures, but succeeded.</source>
          <target state="translated">予想される失敗としてマークされたが成功した&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスを含むリスト。</target>
        </trans-unit>
        <trans-unit id="c0894abf939ae74d3fdc742c584302b8dc3eaffa" translate="yes" xml:space="preserve">
          <source>A list containing zero or more of the following values, specifying which elements of the tree to display.</source>
          <target state="translated">以下の値を0個以上含むリストで、ツリーのどの要素を表示するかを指定します。</target>
        </trans-unit>
        <trans-unit id="94f3ab44b984a41d4a3ccc3bca5a60821aa9485b" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; objects encoding the individual interactive Python examples that should be run by this test.</source>
          <target state="translated">このテストで実行する必要がある個々のインタラクティブなPythonサンプルをエンコードする&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="0d08717c624c36bc99bc8e887e88fc336daf55a9" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects in any combination may be used to set the value of an address header. &lt;code&gt;Group&lt;/code&gt; objects whose &lt;code&gt;display_name&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; will be interpreted as single addresses, which allows an address list to be copied with groups intact by using the list obtained from the &lt;code&gt;groups&lt;/code&gt; attribute of the source header.</source>
          <target state="translated">任意の組み合わせの&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;オブジェクトのリストを使用して、アドレスヘッダーの値を設定できます。 &lt;code&gt;display_name&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; である &lt;code&gt;Group&lt;/code&gt; オブジェクトは単一のアドレスとして解釈されます。これにより、ソースヘッダーの &lt;code&gt;groups&lt;/code&gt; 属性から取得したリストを使用して、アドレスリストをグループとともにそのままコピーできます。</target>
        </trans-unit>
        <trans-unit id="ada6c9c5f870014a4ae30f28b8753d03af7735b7" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; objects that have their &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; methods called to see if one of the objects can find the module to be imported. The &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method is called with at least the absolute name of the module being imported. If the module to be imported is contained in a package, then the parent package&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute is passed in as a second argument. The method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;module spec&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; if the module cannot be found.</source>
          <target state="translated">オブジェクトの1つがインポートするモジュールを見つけることができるかどうかを確認するために呼び出される&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドを持つ&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダー&lt;/a&gt;オブジェクトのリスト。&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドは、モジュールの少なくとも絶対名がインポートされると呼び出されます。インポートするモジュールがパッケージに含まれている場合、親パッケージの&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性が2番目の引数として渡されます。この方法は、返し&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;モジュール仕様&lt;/a&gt;、又は &lt;code&gt;None&lt;/code&gt; モジュールが見つからない場合。</target>
        </trans-unit>
        <trans-unit id="31344a02e0993784eb4314acf41022e52a1a17f1" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;logging.LogRecord&lt;/code&gt;&lt;/a&gt; objects of the matching log messages.</source>
          <target state="translated">一致するログメッセージの&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;logging.LogRecord&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="dd17bfbaf0a82494b417e354a5e60123f1b11077" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects with the formatted output of matching messages.</source>
          <target state="translated">一致するメッセージのフォーマットされた出力を含む&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="f382ed1cd68dc0c07b20c325e25f04c393461059" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Class&lt;/code&gt; objects which describe the immediate base classes of the class being described. Classes which are named as superclasses but which are not discoverable by &lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt;&lt;code&gt;readmodule_ex()&lt;/code&gt;&lt;/a&gt; are listed as a string with the class name instead of as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="translated">記述されているクラスの直接の基本クラスを記述する &lt;code&gt;Class&lt;/code&gt; オブジェクトのリスト。スーパークラスとして名前が付けられているが、&lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt; &lt;code&gt;readmodule_ex()&lt;/code&gt; で&lt;/a&gt;検出できないクラスは、 &lt;code&gt;Class&lt;/code&gt; オブジェクトではなく、クラス名の文字列としてリストされます。</target>
        </trans-unit>
        <trans-unit id="47e533d8c9734517f922eaa86b233a289db98c40" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for each weekday. The default class list is:</source>
          <target state="translated">各平日に使用されるCSSクラスのリストです。デフォルトのクラスリストは</target>
        </trans-unit>
        <trans-unit id="f1a68bfed08eae06f51e410f31837e77785239f9" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for weekday names in the header row. The default is the same as &lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt;&lt;code&gt;cssclasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヘッダー行の曜日名に使用されるCSSクラスのリスト。デフォルトは&lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt; &lt;code&gt;cssclasses&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="87a9c1cff0e92a561ec91ae2846827451ae8540a" translate="yes" xml:space="preserve">
          <source>A list of available password hashing algorithms, as &lt;code&gt;crypt.METHOD_*&lt;/code&gt; objects. This list is sorted from strongest to weakest.</source>
          <target state="translated">&lt;code&gt;crypt.METHOD_*&lt;/code&gt; オブジェクトとして使用可能なパスワードハッシュアルゴリズムのリスト。このリストは、強いものから弱いものへとソートされています。</target>
        </trans-unit>
        <trans-unit id="d4f1daea5804e5e781af546c944a5553086ec691" translate="yes" xml:space="preserve">
          <source>A list of callables that take a path argument to try to create a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the path. If a finder can be created, it is to be returned by the callable, else raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パス引数を取り、パスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;を作成しようとする呼び出し可能オブジェクトのリスト。ファインダーを作成できる場合は、呼び出し可能オブジェクトによって返されます。それ以外の場合は、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9aa433c04e75fc5d0459fb3bb364f4a060cf42ad" translate="yes" xml:space="preserve">
          <source>A list of callbacks that will be invoked by the garbage collector before and after collection. The callbacks will be called with two arguments, &lt;em&gt;phase&lt;/em&gt; and &lt;em&gt;info&lt;/em&gt;.</source>
          <target state="translated">コレクションの前後にガベージコレクターによって呼び出されるコールバックのリスト。コールバックは、2つの引数&lt;em&gt;phase&lt;/em&gt;および&lt;em&gt;info&lt;/em&gt;で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f2afc2ea3d64112d083cf30feb15db3adce93b83" translate="yes" xml:space="preserve">
          <source>A list of column identifiers (either symbolic or integer indices) specifying which data columns are displayed and the order in which they appear, or the string &amp;ldquo;#all&amp;rdquo;.</source>
          <target state="translated">表示されるデータ列とそれらが表示される順序を指定する列識別子（シンボリックまたは整数インデックス）のリスト、または文字列&amp;ldquo; #all&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7eff5051ae865a63b9215b5c89488de87ae79f0b" translate="yes" xml:space="preserve">
          <source>A list of column identifiers, specifying the number of columns and their names.</source>
          <target state="translated">カラムの数と名前を指定したカラム識別子のリスト。</target>
        </trans-unit>
        <trans-unit id="d767335b2be7662adb8adfd8712db1b5ba4f4fbe" translate="yes" xml:space="preserve">
          <source>A list of functions performing the individual tests. Each function takes two arguments: the byte-stream and an open file-like object. When &lt;a href=&quot;#imghdr.what&quot;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt; is called with a byte-stream, the file-like object will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">個々のテストを実行する関数のリスト。各関数は、バイトストリームと開いているファイルのようなオブジェクトの2つの引数を取ります。ときに&lt;a href=&quot;#imghdr.what&quot;&gt; &lt;code&gt;what()&lt;/code&gt; &lt;/a&gt;バイトストリームと呼ばれ、ファイルのようなオブジェクトはなくなります &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90bcc915bd04cdb632928857939a6c56be976e99" translate="yes" xml:space="preserve">
          <source>A list of nodes contained within this node. This is a read-only attribute.</source>
          <target state="translated">このノード内に含まれるノードのリスト。これは読み取り専用の属性です。</target>
        </trans-unit>
        <trans-unit id="3950e8dfdad0ea53153e00b8e9e9d18c3a29eec5" translate="yes" xml:space="preserve">
          <source>A list of objects which the collector found to be unreachable but could not be freed (uncollectable objects). Starting with Python 3.4, this list should be empty most of the time, except when using instances of C extension types with a non-&lt;code&gt;NULL&lt;/code&gt;&lt;code&gt;tp_del&lt;/code&gt; slot.</source>
          <target state="translated">コレクターが到達不能であるが解放できなかったオブジェクト（収集不能オブジェクト）のリスト。Python 3.4以降、このリストは、 &lt;code&gt;NULL&lt;/code&gt; 以外の &lt;code&gt;tp_del&lt;/code&gt; スロットでC拡張タイプのインスタンスを使用する場合を除いて、ほとんどの場合空である必要があります。</target>
        </trans-unit>
        <trans-unit id="3bc6fc267d7341a3dcca08f8f142ac83a4167a96" translate="yes" xml:space="preserve">
          <source>A list of prefixes for site-packages directories.</source>
          <target state="translated">サイトパッケージディレクトリの接頭辞のリスト。</target>
        </trans-unit>
        <trans-unit id="8edcb62be232dfd25220d722b6ae22369868ca48" translate="yes" xml:space="preserve">
          <source>A list of queued input lines. The cmdqueue list is checked in &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; when new input is needed; if it is nonempty, its elements will be processed in order, as if entered at the prompt.</source>
          <target state="translated">キューに入れられた入力行のリスト。新しい入力が必要な場合、&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;でcmdqueueリストがチェックされます。空でない場合は、プロンプトで入力した場合と同様に、その要素が順番に処理されます。</target>
        </trans-unit>
        <trans-unit id="fb8177ae3293211d97584d172648ced9f6fff7c8" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for non-optimized bytecode modules.</source>
          <target state="translated">最適化されていないバイトコードモジュールのファイルサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="3901675df8d6b190ed77ea1e703d8525bebca340" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for optimized bytecode modules.</source>
          <target state="translated">最適化されたバイトコードモジュールのファイルサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="a653aca2c57d0c3018c089c4391cde970a1bbfd7" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for bytecode modules (including the leading dot).</source>
          <target state="translated">バイトコードモジュールで認識されるファイルのサフィックスを表す文字列のリスト (先頭のドットを含む)。</target>
        </trans-unit>
        <trans-unit id="e918f4be66d93295cae4c211f62265b0072c2822" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for extension modules.</source>
          <target state="translated">拡張モジュールで認識されるファイルのサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="165229fe605da7021efe8ebd3919626a177ba5a3" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for source modules.</source>
          <target state="translated">ソースモジュールの認識されたファイルのサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="2cf2baab931f8fd28ffb46163df67eb66c87370c" translate="yes" xml:space="preserve">
          <source>A list of strings specifying the search path within a package. This attribute is not set on modules.</source>
          <target state="translated">パッケージ内の検索パスを指定する文字列のリスト。この属性はモジュールには設定されません。</target>
        </trans-unit>
        <trans-unit id="36c4a5205fd3c16296e139d621087e8e76a326e3" translate="yes" xml:space="preserve">
          <source>A list of strings that specifies the search path for modules. Initialized from the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;, plus an installation-dependent default.</source>
          <target state="translated">モジュールの検索パスを指定する文字列のリスト。環境変数&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;と、インストールに依存するデフォルトから初期化されます。</target>
        </trans-unit>
        <trans-unit id="e38561310e8e0218b9a575b157f0c75333b56def" translate="yes" xml:space="preserve">
          <source>A list of tags associated with this item.</source>
          <target state="translated">このアイテムに関連するタグのリスト。</target>
        </trans-unit>
        <trans-unit id="a379ac6f7bfa199dd4ac1bbe2caea169d4e2a31f" translate="yes" xml:space="preserve">
          <source>A list of the non-fatal errors encountered while loading tests. Not reset by the loader at any point. Fatal errors are signalled by the relevant a method raising an exception to the caller. Non-fatal errors are also indicated by a synthetic test that will raise the original error when run.</source>
          <target state="translated">テストの読み込み中に発生した致命的でないエラーのリスト。どの時点でもローダによってリセットされません。致命的なエラーは、関連するメソッドが呼び出し元に例外を発生させることで通知されます。致命的でないエラーは、実行時に元のエラーを発生させる合成テストによっても示されます。</target>
        </trans-unit>
        <trans-unit id="2b1ad6875b827765bc4d0e85d4c9d9f95c0e168f" translate="yes" xml:space="preserve">
          <source>A list of the path&amp;rsquo;s file extensions:</source>
          <target state="translated">パスのファイル拡張子のリスト：</target>
        </trans-unit>
        <trans-unit id="35d28cdab6aac704918e38261cdf6a53a6fb7875" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;'%'&lt;/code&gt; character.</source>
          <target state="translated">リテラル &lt;code&gt;'%'&lt;/code&gt; 文字。</target>
        </trans-unit>
        <trans-unit id="f45f3263fd1db9d34d0d8644f2dd892d64f4f4b5" translate="yes" xml:space="preserve">
          <source>A long-running calculation implemented purely in C (such as regular expression matching on a large body of text) may run uninterrupted for an arbitrary amount of time, regardless of any signals received. The Python signal handlers will be called when the calculation finishes.</source>
          <target state="translated">純粋にC言語で実装された長時間の計算(大きなテキストの正規表現マッチングなど)は、受信したシグナルに関係なく、任意の時間だけ途切れることなく実行されるかもしれません。Python のシグナルハンドラは計算が終了すると呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cde11ed69a30e89ec49d6911501d20641f2ba597" translate="yes" xml:space="preserve">
          <source>A lot of the work, such as parsing the request, is done by the base class &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt;&lt;code&gt;do_HEAD()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">リクエストの解析などの多くの作業は、基本クラス&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;によって行われます。このクラスは、&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt; &lt;code&gt;do_HEAD()&lt;/code&gt; &lt;/a&gt;関数を実装します。</target>
        </trans-unit>
        <trans-unit id="d1ae909d89ab42bf44a513d624eb1ef523783bbe" translate="yes" xml:space="preserve">
          <source>A mailbox, which may be inspected and modified.</source>
          <target state="translated">検査や改造が可能な郵便受け。</target>
        </trans-unit>
        <trans-unit id="f690a6cfc5ed4849083abceaf9fb872dd479f2d4" translate="yes" xml:space="preserve">
          <source>A manager object returned by &lt;code&gt;Manager()&lt;/code&gt; controls a server process which holds Python objects and allows other processes to manipulate them using proxies.</source>
          <target state="translated">&lt;code&gt;Manager()&lt;/code&gt; によって返されるマネージャーオブジェクトは、Pythonオブジェクトを保持するサーバープロセスを制御し、他のプロセスがプロキシを使用してそれらを操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="5acd53cfe7556a265e24f00273578e1e62cced28" translate="yes" xml:space="preserve">
          <source>A manager returned by &lt;code&gt;Manager()&lt;/code&gt; will support types &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt;&lt;code&gt;BoundedSemaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Value&quot;&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="translated">返されたマネージャー &lt;code&gt;Manager()&lt;/code&gt; のタイプをサポートする&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt; &lt;code&gt;BoundedSemaphore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Value&quot;&gt; &lt;code&gt;Value&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#multiprocessing.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。例えば、</target>
        </trans-unit>
        <trans-unit id="2360f8e6d7dd3571578211ddf621c1aaf733a19d" translate="yes" xml:space="preserve">
          <source>A mapping of &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVars&lt;/code&gt;&lt;/a&gt; to their values.</source>
          <target state="translated">&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVars&lt;/code&gt; &lt;/a&gt;とその値のマッピング。</target>
        </trans-unit>
        <trans-unit id="b196921d2c5d1abc5a5afde9b13792567f7149de" translate="yes" xml:space="preserve">
          <source>A marker object used by &lt;code&gt;Token.old_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token.old_value&lt;/code&gt; で使用されるマーカーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="691da017d29e7d257f6643136c76ae9eab8b4630" translate="yes" xml:space="preserve">
          <source>A memory buffer that can be used to pass data between Python and an SSL protocol instance.</source>
          <target state="translated">PythonとSSLプロトコルインスタンスの間でデータを渡すためのメモリバッファ。</target>
        </trans-unit>
        <trans-unit id="dcfbafa8ff3d1ab45e2f76a7aee96de1f4885c99" translate="yes" xml:space="preserve">
          <source>A memory-mapped file is created by the &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; constructor, which is different on Unix and on Windows. In either case you must provide a file descriptor for a file opened for update. If you wish to map an existing Python file object, use its &lt;code&gt;fileno()&lt;/code&gt; method to obtain the correct value for the &lt;em&gt;fileno&lt;/em&gt; parameter. Otherwise, you can open the file using the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function, which returns a file descriptor directly (the file still needs to be closed when done).</source>
          <target state="translated">メモリマップファイルは&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt;コンストラクターによって作成されますが、UnixとWindowsでは異なります。どちらの場合も、更新のために開かれたファイルのファイル記述子を提供する必要があります。既存のPythonファイルオブジェクトをマップする場合は、その &lt;code&gt;fileno()&lt;/code&gt; メソッドを使用して、&lt;em&gt;fileno&lt;/em&gt;パラメータの正しい値を取得します。それ以外の場合は、&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;関数を使用してファイルを開くことができます。この関数は、ファイル記述子を直接返します（実行時にファイルを閉じる必要があります）。</target>
        </trans-unit>
        <trans-unit id="4e07ad766453ae1f5c12fbab0efd96fbce9a5d6b" translate="yes" xml:space="preserve">
          <source>A memoryview and a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; exporter are equal if their shapes are equivalent and if all corresponding values are equal when the operands&amp;rsquo; respective format codes are interpreted using &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">メモリビューと&lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt;エクスポーターは、それらの形状が等しい場合、およびオペランドのそれぞれのフォーマットコードが&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;構文を使用して解釈される場合、対応するすべての値が等しい場合に等しくなります。</target>
        </trans-unit>
        <trans-unit id="0505188cd402129bb7a1ceab0c1f8c415c35ac5c" translate="yes" xml:space="preserve">
          <source>A memoryview of contents of the shared memory block.</source>
          <target state="translated">共有メモリブロックの内容のメモリビュー。</target>
        </trans-unit>
        <trans-unit id="bbf17a083c2ede8f6b0db7056b90b9f1617ddecf" translate="yes" xml:space="preserve">
          <source>A message is typically moved from &lt;code&gt;new&lt;/code&gt; to &lt;code&gt;cur&lt;/code&gt; after its mailbox has been accessed, whether or not the message is has been read. A message &lt;code&gt;msg&lt;/code&gt; has been read if &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">通常、メッセージは、メールボックスがアクセスされた後、メッセージが読み取られたかどうかに関係なく、 &lt;code&gt;new&lt;/code&gt; から &lt;code&gt;cur&lt;/code&gt; に移動されます。 &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、メッセージ &lt;code&gt;msg&lt;/code&gt; が読み取られました。</target>
        </trans-unit>
        <trans-unit id="452a8fedc6a4cfd70d2adcb1b29d976bbeb804dc" translate="yes" xml:space="preserve">
          <source>A message with Babyl-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Babyl固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="ac149633a67c1c349439779dfb1ef3d4e3b0e937" translate="yes" xml:space="preserve">
          <source>A message with MH-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">MH固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="cef7580ce921c85b7e519a48bc0f3cd23bf7607c" translate="yes" xml:space="preserve">
          <source>A message with MMDF-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">MMDF固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="81468ce3b45d6d7e99a68708e9ac13d9a23d3a83" translate="yes" xml:space="preserve">
          <source>A message with Maildir-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Maildir固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="ca526acd0b34062c5d1268d50cde292996ba3b25" translate="yes" xml:space="preserve">
          <source>A message with mbox-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">mbox固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="7f0e485226b36c41138ec6944e1b8e8901ec04f2" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;Turtle.filling()&lt;/code&gt; has been added. It returns a boolean value: &lt;code&gt;True&lt;/code&gt; if a filling process is under way, &lt;code&gt;False&lt;/code&gt; otherwise. This behaviour corresponds to a &lt;code&gt;fill()&lt;/code&gt; call without arguments in Python 2.6.</source>
          <target state="translated">メソッド &lt;code&gt;Turtle.filling()&lt;/code&gt; が追加されました。ブール値を返します：充填プロセスが進行中の場合は &lt;code&gt;True&lt;/code&gt; 、そうでない場合は &lt;code&gt;False&lt;/code&gt; 。この動作は、Python 2.6の引数なしの &lt;code&gt;fill()&lt;/code&gt; 呼び出しに対応しています。</target>
        </trans-unit>
        <trans-unit id="e81f8acd06e4d19e21298af0b2eca19918eec6c0" translate="yes" xml:space="preserve">
          <source>A method that returns the module object to use when importing a module. This method may return &lt;code&gt;None&lt;/code&gt;, indicating that default module creation semantics should take place.</source>
          <target state="translated">モジュールのインポート時に使用するモジュールオブジェクトを返すメソッド。このメソッドは &lt;code&gt;None&lt;/code&gt; を返し、デフォルトのモジュール作成セマンティクスが実行されることを示します。</target>
        </trans-unit>
        <trans-unit id="d11fab06ce0f5cc44bfa0f8d64053434db561c11" translate="yes" xml:space="preserve">
          <source>A millisecond is converted to 1000 microseconds.</source>
          <target state="translated">ミリ秒を1000マイクロ秒に換算しています。</target>
        </trans-unit>
        <trans-unit id="14694e387827ee5dbdefea0d931e26463c3f8af5" translate="yes" xml:space="preserve">
          <source>A minute is converted to 60 seconds.</source>
          <target state="translated">1分を60秒に換算しています。</target>
        </trans-unit>
        <trans-unit id="88a95c4ff9a21fc5643c68a07d0fcb56208d9afc" translate="yes" xml:space="preserve">
          <source>A mock intended to be used as a property, or other descriptor, on a class. &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; methods so you can specify a return value when it is fetched.</source>
          <target state="translated">クラスのプロパティまたはその他の記述子として使用するためのモック。&lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するため、フェッチ時に戻り値を指定できます。</target>
        </trans-unit>
        <trans-unit id="197f9ad683c388bd841158b51e7273e923b68225" translate="yes" xml:space="preserve">
          <source>A moderately complicated example:</source>
          <target state="translated">適度に複雑な例。</target>
        </trans-unit>
        <trans-unit id="5fbdaa31ef1d3360856b509831015ce58c497ad4" translate="yes" xml:space="preserve">
          <source>A module can discover whether or not it is running in the main scope by checking its own &lt;code&gt;__name__&lt;/code&gt;, which allows a common idiom for conditionally executing code in a module when it is run as a script or with &lt;code&gt;python
-m&lt;/code&gt; but not when it is imported:</source>
          <target state="translated">モジュールは、独自の &lt;code&gt;__name__&lt;/code&gt; をチェックすることにより、メインスコープで実行されているかどうかを検出できます。これにより、モジュールがスクリプトとして、または &lt;code&gt;python -m&lt;/code&gt; 実行されたときに、条件付きでコードを実行するための一般的なイディオムが許可されますが、インポートされたときはできません。 ：</target>
        </trans-unit>
        <trans-unit id="9444c1785a75547c005580f49d28d47a17706636" translate="yes" xml:space="preserve">
          <source>A module to generate message authentication codes using hashes.</source>
          <target state="translated">ハッシュを用いてメッセージ認証コードを生成するモジュール。</target>
        </trans-unit>
        <trans-unit id="25b564dedd229417c2f008befd0d706d5d1c3d1c" translate="yes" xml:space="preserve">
          <source>A monograph (using Tcl terminology) about differences typically encountered when moving applications to use the new widgets.</source>
          <target state="translated">新しいウィジェットを使用するためにアプリケーションを移動する際に一般的に遭遇する違いについてのモノグラフ(Tcl用語を使用しています)。</target>
        </trans-unit>
        <trans-unit id="2cb0b17b5fe49d923ef10619bd2d761e2dba052d" translate="yes" xml:space="preserve">
          <source>A more convenient approach is to use the methods &lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt;&lt;code&gt;getfirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt;&lt;code&gt;getlist()&lt;/code&gt;&lt;/a&gt; provided by this higher level interface.</source>
          <target state="translated">より便利な方法は、この高レベルのインターフェースによって提供される&lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt; &lt;code&gt;getfirst()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt; &lt;code&gt;getlist()&lt;/code&gt; &lt;/a&gt;メソッドを使用することです。</target>
        </trans-unit>
        <trans-unit id="f606715ea58bd20affcb325cea977c8dc34c9e61" translate="yes" xml:space="preserve">
          <source>A more powerful form of &lt;em&gt;spec&lt;/em&gt; is &lt;em&gt;autospec&lt;/em&gt;. If you set &lt;code&gt;autospec=True&lt;/code&gt; then the mock will be created with a spec from the object being replaced. All attributes of the mock will also have the spec of the corresponding attribute of the object being replaced. Methods and functions being mocked will have their arguments checked and will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are called with the wrong signature. For mocks replacing a class, their return value (the &amp;lsquo;instance&amp;rsquo;) will have the same spec as the class. See the &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccing&lt;/a&gt;.</source>
          <target state="translated">より強力な&lt;em&gt;仕様の&lt;/em&gt;形式は&lt;em&gt;autospec&lt;/em&gt;です。 &lt;code&gt;autospec=True&lt;/code&gt; を設定すると、置き換えられるオブジェクトのスペックを使用してモックが作成されます。モックのすべての属性には、置き換えられるオブジェクトの対応する属性の仕様も含まれます。モックされているメソッドと関数は引数がチェックされ、間違った署名で呼び出された場合は&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生し&lt;/a&gt;ます。クラスを置き換えるモックの場合、それらの戻り値（「インスタンス」）はクラスと同じ仕様になります。&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5111e118ade6d2bc5c8e1c77f9aa6dc8faa44c02" translate="yes" xml:space="preserve">
          <source>A more realistic example would look like this:</source>
          <target state="translated">もっと現実的な例を挙げるとこんな感じになります。</target>
        </trans-unit>
        <trans-unit id="9a66936ddd1b236a8e403c390cda131ea3105877" translate="yes" xml:space="preserve">
          <source>A more robust alternative can be to define a finalizer which only references the specific functions and objects that it needs, rather than having access to the full state of the object:</source>
          <target state="translated">より堅牢な代替案として、オブジェクトの完全な状態にアクセスするのではなく、必要な特定の関数やオブジェクトのみを参照するファイナライザを定義することができます。</target>
        </trans-unit>
        <trans-unit id="dc61502b727e90ac4866b9d814e9fc1fc0b5f529" translate="yes" xml:space="preserve">
          <source>A more serious problem is that it is common for instance attributes to be created in the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method and not to exist on the class at all. &lt;em&gt;autospec&lt;/em&gt; can&amp;rsquo;t know about any dynamically created attributes and restricts the api to visible attributes.</source>
          <target state="translated">より深刻な問題は、インスタンス属性が&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドで作成され、クラスにまったく存在しないことが一般的であることです。&lt;em&gt;autospec&lt;/em&gt;は動的に作成された属性を&lt;em&gt;認識&lt;/em&gt;できず、APIを表示可能な属性に制限します。</target>
        </trans-unit>
        <trans-unit id="14c30e10b4c45f4fdcf93fef2be90b15a755a678" translate="yes" xml:space="preserve">
          <source>A multi-line statement may be given by specifying each line as a separate statement argument; indented lines are possible by enclosing an argument in quotes and using leading spaces. Multiple &lt;a href=&quot;#cmdoption-timeit-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; options are treated similarly.</source>
          <target state="translated">複数行のステートメントは、各行を個別のステートメント引数として指定することで指定できます。字下げされた行は、引数を引用符で囲み、先行スペースを使用することで可能です。複数の&lt;a href=&quot;#cmdoption-timeit-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;オプションは同様に扱われます。</target>
        </trans-unit>
        <trans-unit id="71e6abbde7b8d36913a73085a08d7bdc4de74dfb" translate="yes" xml:space="preserve">
          <source>A mutex lock.</source>
          <target state="translated">ミューテックスロックです。</target>
        </trans-unit>
        <trans-unit id="078db6dab94291f0a68718c0a445aadb8d88ed56" translate="yes" xml:space="preserve">
          <source>A name which is linked to the option value. If specified, the value of the progress bar is automatically set to the value of this name whenever the latter is modified.</source>
          <target state="translated">オプション値に連動する名前。指定した場合、プログレスバーの値が変更されるたびに、この名前の値が自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="55c48426bea22866b8115740a6c2a7c42075e62c" translate="yes" xml:space="preserve">
          <source>A named tuple containing the three components of the ncurses library version: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, and &lt;em&gt;patch&lt;/em&gt;. All values are integers. The components can also be accessed by name, so &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; is equivalent to &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; and so on.</source>
          <target state="translated">ncursesライブラリバージョンの3つのコンポーネント（&lt;em&gt;メジャー&lt;/em&gt;、&lt;em&gt;マイナー&lt;/em&gt;、&lt;em&gt;パッチ）&lt;/em&gt;を含む名前付きタプル。すべての値は整数です。コンポーネントには名前でアクセスすることもできるため、 &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; は &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; などと同等です。</target>
        </trans-unit>
        <trans-unit id="bc4f58d7428fdbe37d30d028fe13d12d2180f7d6" translate="yes" xml:space="preserve">
          <source>A namedtuple that holds a brief summary of a module&amp;rsquo;s info.</source>
          <target state="translated">モジュールの情報の簡単な要約を保持する名前付きタプル。</target>
        </trans-unit>
        <trans-unit id="72158d4426db39e0e4d103c3538715b0ee176f1c" translate="yes" xml:space="preserve">
          <source>A namespace for a function or method. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関数またはメソッドの名前空間。このクラスは&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="0311cf0abe88a0934a46b90b52373f3304204a2b" translate="yes" xml:space="preserve">
          <source>A namespace object has no public methods, but does have writable attributes. Its representation shows the values of its attributes.</source>
          <target state="translated">名前空間オブジェクトにはパブリック・メソッドはありませんが、書き込み可能な属性があります。その表現は、その属性の値を示します。</target>
        </trans-unit>
        <trans-unit id="edbf524e185c69846a3a4abd549e56f7ebc4b0c0" translate="yes" xml:space="preserve">
          <source>A namespace of a class. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クラスの名前空間。このクラスは&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="b2a64660a5b30d67efe5fed367964bb0e3c6f537" translate="yes" xml:space="preserve">
          <source>A namespace table for a block. The constructor is not public.</source>
          <target state="translated">ブロックの名前空間テーブル。コンストラクタはパブリックではありません。</target>
        </trans-unit>
        <trans-unit id="fa2eecff8d86240af243f0bd4af31ae2aa5fea1b" translate="yes" xml:space="preserve">
          <source>A negative value &lt;code&gt;-N&lt;/code&gt; indicates that the child was terminated by signal &lt;code&gt;N&lt;/code&gt; (POSIX only).</source>
          <target state="translated">負の値 &lt;code&gt;-N&lt;/code&gt; は、子がシグナル &lt;code&gt;N&lt;/code&gt; によって終了されたことを示します（POSIXのみ）。</target>
        </trans-unit>
        <trans-unit id="85390c873308f954877a6b491b2ffd8bd25849d2" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class must have one base Enum class, up to one concrete data type, and as many &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;-based mixin classes as needed. The order of these base classes is:</source>
          <target state="translated">新しい&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;クラスには、1つの基本Enumクラス、最大1つの具象データ型、および必要な数の&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;ベースのミックスインクラスが必要です。これらの基本クラスの順序は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cc186fde8acf9a6ebb42e1a3ac6b6d13c0924a62" translate="yes" xml:space="preserve">
          <source>A new array whose items are restricted by &lt;em&gt;typecode&lt;/em&gt;, and initialized from the optional &lt;em&gt;initializer&lt;/em&gt; value, which must be a list, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or iterable over elements of the appropriate type.</source>
          <target state="translated">項目が&lt;em&gt;typecode&lt;/em&gt;によって制限され、オプションの&lt;em&gt;初期化子&lt;/em&gt;値から初期化される新しい配列。これは、リスト、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、または適切な型の要素に対して反復可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f81c36f53fb29db71f41ab907332355f7d182eda" translate="yes" xml:space="preserve">
          <source>A nice feature of this sort is that you can efficiently insert new items while the sort is going on, provided that the inserted items are not &amp;ldquo;better&amp;rdquo; than the last 0&amp;rsquo;th element you extracted. This is especially useful in simulation contexts, where the tree holds all incoming events, and the &amp;ldquo;win&amp;rdquo; condition means the smallest scheduled time. When an event schedules other events for execution, they are scheduled into the future, so they can easily go into the heap. So, a heap is a good structure for implementing schedulers (this is what I used for my MIDI sequencer :-).</source>
          <target state="translated">このソートの優れた機能は、挿入されたアイテムが最後に抽出した0番目の要素よりも「良い」ものでなければ、ソートの進行中に新しいアイテムを効率的に挿入できることです。これは、ツリーがすべての着信イベントを保持するシミュレーションコンテキストで特に役立ちます。「win」条件は、最小のスケジュールされた時間を意味します。イベントが他のイベントの実行をスケジュールする場合、それらは将来にスケジュールされるため、簡単にヒープに入ることができます。したがって、ヒープはスケジューラを実装するのに適した構造です（これが私のMIDIシーケンサーに使用したものです:-)。</target>
        </trans-unit>
        <trans-unit id="9e3b6ed28c8d38433a40b858b74030f4808ae596" translate="yes" xml:space="preserve">
          <source>A nice selection of exceptions is defined as well:</source>
          <target state="translated">素敵な例外の選択も定義されています。</target>
        </trans-unit>
        <trans-unit id="7908e5fb359ed5ac5ef0d2533eb509744f0641d3" translate="yes" xml:space="preserve">
          <source>A node visitor base class that walks the abstract syntax tree and calls a visitor function for every node found. This function may return a value which is forwarded by the &lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt;&lt;code&gt;visit()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">抽象構文ツリーをたどり、見つかったすべてのノードのビジター関数を呼び出すノードビジター基本クラス。この関数は、&lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt; &lt;code&gt;visit()&lt;/code&gt; &lt;/a&gt;メソッドによって転送される値を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="bcff5c6e5fa686fae2d5599c1b2e80eb183fd626" translate="yes" xml:space="preserve">
          <source>A non-ASCII character encodable by &lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;os#os.fsencode&quot;&gt; &lt;code&gt;os.fsencode()&lt;/code&gt; でエンコード可能&lt;/a&gt;な非ASCII文字。</target>
        </trans-unit>
        <trans-unit id="9428ac03bb4a2f6c9cf42be05b489381aaa0a0a3" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; の&lt;/a&gt;呼び出し不可バージョン。</target>
        </trans-unit>
        <trans-unit id="896479390810c1db85db783aa18d9d0a12993c66" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. The constructor parameters have the same meaning of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;em&gt;return_value&lt;/em&gt; and &lt;em&gt;side_effect&lt;/em&gt; which have no meaning on a non-callable mock.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; の&lt;/a&gt;呼び出し不可能なバージョン。コンストラクターパラメーターは&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;と同じ意味ですが、呼び出し不可能なモックでは意味を持たない&lt;em&gt;return_value&lt;/em&gt;と&lt;em&gt;side_effect&lt;/em&gt;を除きます。</target>
        </trans-unit>
        <trans-unit id="10ff4f7d10e3a93a3d1a37ab022e45964047c42b" translate="yes" xml:space="preserve">
          <source>A non-capturing version of regular parentheses. Matches whatever regular expression is inside the parentheses, but the substring matched by the group &lt;em&gt;cannot&lt;/em&gt; be retrieved after performing a match or referenced later in the pattern.</source>
          <target state="translated">通常の括弧の非キャプチャバージョン。括弧内の正規表現に一致しますが、グループに一致した部分文字列は、一致の実行後に取得したり、パターンで後で参照したり&lt;em&gt;できません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b6fab50bbf4b5f5cc024237fe4be2e580f495061" translate="yes" xml:space="preserve">
          <source>A non-existent handler id found during an incremental call.</source>
          <target state="translated">インクリメンタル呼び出し中に見つかった存在しないハンドラ ID。</target>
        </trans-unit>
        <trans-unit id="ff564abff91c1ddf39b73322568dc07eb6cdddc5" translate="yes" xml:space="preserve">
          <source>A non-recursive lock object: a close analog of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt;. Once a process or thread has acquired a lock, subsequent attempts to acquire it from any process or thread will block until it is released; any process or thread may release it. The concepts and behaviors of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; as it applies to threads are replicated here in &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;multiprocessing.Lock&lt;/code&gt;&lt;/a&gt; as it applies to either processes or threads, except as noted.</source>
          <target state="translated">非再帰的ロックオブジェクト：&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; の&lt;/a&gt;類似物。プロセスまたはスレッドがロックを取得すると、その後プロセスまたはスレッドからロックを取得しようとしても、解放されるまでブロックされます。任意のプロセスまたはスレッドがそれを解放する可能性があります。&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;に適用されるthreading.Lockの概念と動作は、ここで注記されている場合を除き、プロセスまたはスレッドに適用される&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;multiprocessing.Lock&lt;/code&gt; に&lt;/a&gt;複製されます。</target>
        </trans-unit>
        <trans-unit id="10b063540ea72d17ad3a65c6b8fa5e5506f3d45b" translate="yes" xml:space="preserve">
          <source>A normal build &amp;amp; test does not run into this situation but it can happen when trying to run the standard library test suite from an interpreter that doesn&amp;rsquo;t have an obvious home with Python&amp;rsquo;s current home finding logic.</source>
          <target state="translated">通常のビルドとテストではこの状況は発生しませんが、Pythonの現在のホーム検索ロジックを備えた明確なホームを持たないインタープリターから標準ライブラリテストスイートを実行しようとすると、この状況が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f21e999a31cb519fda4759011f3f8f4601461947" translate="yes" xml:space="preserve">
          <source>A note about &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;: this exception may occur elsewhere in this code, and may not always be caught. The caller should be prepared to deal with it.</source>
          <target state="translated">&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;に関する注意：この例外はこのコードの他の場所で発生する可能性があり、常にキャッチされるとは限りません。呼び出し側はそれに対処する準備をする必要があります。</target>
        </trans-unit>
        <trans-unit id="6118da4bdf7846158dea6e9addeee205b10e624b" translate="yes" xml:space="preserve">
          <source>A note on branch cuts: They are curves along which the given function fails to be continuous. They are a necessary feature of many complex functions. It is assumed that if you need to compute with complex functions, you will understand about branch cuts. Consult almost any (not too elementary) book on complex variables for enlightenment. For information of the proper choice of branch cuts for numerical purposes, a good reference should be the following:</source>
          <target state="translated">分岐カットについての注意点 これは、与えられた関数が連続しない曲線である。これは多くの複素関数の必要な機能です.複素関数を使って計算する必要がある場合は,枝切りについて理解していることが前提です.啓発のために,複素変数に関する(あまり初歩的ではない)ほとんどの本を参照してください.数値計算のための適切な枝切りの選択については,以下のようなものが参考になります.</target>
        </trans-unit>
        <trans-unit id="8ee90f29803eb8229a07515ffa9d573714dc7839" translate="yes" xml:space="preserve">
          <source>A null-terminated string.</source>
          <target state="translated">ヌル文字で終端する文字列。</target>
        </trans-unit>
        <trans-unit id="c13366fad5520b371df7f0cb744d4b882a5ce6dd" translate="yes" xml:space="preserve">
          <source>A number of Unix commands allow the user to intermix optional arguments with positional arguments. The &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt;&lt;code&gt;parse_known_intermixed_args()&lt;/code&gt;&lt;/a&gt; methods support this parsing style.</source>
          <target state="translated">多くのUnixコマンドにより、ユーザーはオプションの引数と位置引数を混在させることができます。&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt; &lt;code&gt;parse_known_intermixed_args()&lt;/code&gt; &lt;/a&gt;メソッドは、この解析スタイルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5905a2ee45fdf4d45451104b77e07c4287f696a0" translate="yes" xml:space="preserve">
          <source>A number of alterations are also made to the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; module. Firstly, &lt;code&gt;sys.path&lt;/code&gt; may be altered as described above. &lt;code&gt;sys.argv[0]&lt;/code&gt; is updated with the value of &lt;code&gt;file_path&lt;/code&gt; and &lt;code&gt;sys.modules[__name__]&lt;/code&gt; is updated with a temporary module object for the module being executed. All modifications to items in &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; are reverted before the function returns.</source>
          <target state="translated">&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;モジュールにも多くの変更が加えられています。まず、上記のように &lt;code&gt;sys.path&lt;/code&gt; を変更します。 &lt;code&gt;sys.argv[0]&lt;/code&gt; の値で更新され &lt;code&gt;file_path&lt;/code&gt; および &lt;code&gt;sys.modules[__name__]&lt;/code&gt; 実行中のモジュールのための一時的なモジュールオブジェクトで更新されます。&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; の&lt;/a&gt;項目に対するすべての変更は、関数が戻る前に戻されます。</target>
        </trans-unit>
        <trans-unit id="7aaac470309a93d5303ae1989bb54d18464aaff9" translate="yes" xml:space="preserve">
          <source>A number of browser types are predefined. This table gives the type names that may be passed to the &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function and the corresponding instantiations for the controller classes, all defined in this module.</source>
          <target state="translated">いくつかのブラウザタイプが事前定義されています。この表は、すべてこのモジュールで定義されている、&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;関数に渡される可能性のあるタイプ名と、コントローラークラスの対応するインスタンス化を示しています。</target>
        </trans-unit>
        <trans-unit id="5b9b4dafe3106a819531ac204c06e56766477b2e" translate="yes" xml:space="preserve">
          <source>A number of option flags control various aspects of doctest&amp;rsquo;s behavior. Symbolic names for the flags are supplied as module constants, which can be &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; together and passed to various functions. The names can also be used in &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt;, and may be passed to the doctest command line interface via the &lt;code&gt;-o&lt;/code&gt; option.</source>
          <target state="translated">いくつかのオプションフラグは、doctestの動作のさまざまな側面を制御します。フラグの記号名は、モジュール定数として提供されます。これは、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;ビット単位でORを取り&lt;/a&gt;、さまざまな関数に渡すことができます。これらの名前は&lt;a href=&quot;#doctest-directives&quot;&gt;doctestディレクティブ&lt;/a&gt;でも使用でき、 &lt;code&gt;-o&lt;/code&gt; オプションを介してdoctestコマンドラインインターフェースに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="24786294a108030a38cc3d65cb7244c171d67285" translate="yes" xml:space="preserve">
          <source>A number of predefined codecs are specific to Python, so their codec names have no meaning outside Python. These are listed in the tables below based on the expected input and output types (note that while text encodings are the most common use case for codecs, the underlying codec infrastructure supports arbitrary data transforms rather than just text encodings). For asymmetric codecs, the stated meaning describes the encoding direction.</source>
          <target state="translated">多くの定義済みコーデックは Python に特有のものなので、Python の外ではそのコーデック名は意味を持ちません。これらは期待される入力と出力のタイプに基づいて以下の表にリストアップされています(テキストエンコーディングがコーデックの最も一般的な使用例である一方で、基礎となるコーデックのインフラストラクチャはテキストエンコーディングだけでなく任意のデータ変換をサポートしていることに注意してください)。非対称コーデックの場合、記載されている意味はエンコーディングの方向を説明しています。</target>
        </trans-unit>
        <trans-unit id="4227ce7e78debdba89f4c96569097661301c7c9c" translate="yes" xml:space="preserve">
          <source>A number of widgets require &amp;ldquo;index&amp;rdquo; parameters to be passed. These are used to point at a specific place in a Text widget, or to particular characters in an Entry widget, or to particular menu items in a Menu widget.</source>
          <target state="translated">多くのウィジェットでは、「インデックス」パラメーターを渡す必要があります。これらは、テキストウィジェットの特定の場所、エントリウィジェットの特定の文字、またはメニューウィジェットの特定のメニュー項目を指すために使用されます。</target>
        </trans-unit>
        <trans-unit id="87a43f9cfd3da2836cdeb874afef3c2da7ba877a" translate="yes" xml:space="preserve">
          <source>A number specifying the maximum value. Defaults to 100.</source>
          <target state="translated">最大値を指定する数値。デフォルトは100です。</target>
        </trans-unit>
        <trans-unit id="f0a2832b6c8a08921422a5d8a1515c121adf4755" translate="yes" xml:space="preserve">
          <source>A numeric error code from the C variable &lt;code&gt;errno&lt;/code&gt;.</source>
          <target state="translated">C変数 &lt;code&gt;errno&lt;/code&gt; からの数値エラーコード。</target>
        </trans-unit>
        <trans-unit id="c7e153424dba9fbc1ebba1d78eaffba93da702aa" translate="yes" xml:space="preserve">
          <source>A numeric error code from the expat parser. See the documentation of &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for the list of error codes and their meanings.</source>
          <target state="translated">expatパーサーからの数値エラーコード。エラーコードとその意味のリストについては、&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="033121bc98a1cde9c09ce5624067c2522fbe46ec" translate="yes" xml:space="preserve">
          <source>A numeric error number that denotes the verification error.</source>
          <target state="translated">検証エラーを示す数値エラー番号。</target>
        </trans-unit>
        <trans-unit id="3f40732fa35edcaee5dbbdaa3d3dc1424861ae23" translate="yes" xml:space="preserve">
          <source>A numeric handle of a system object which will become &amp;ldquo;ready&amp;rdquo; when the process ends.</source>
          <target state="translated">プロセスの終了時に「準備完了」になるシステムオブジェクトの数値ハンドル。</target>
        </trans-unit>
        <trans-unit id="6cca780fc4b38afc038d9433881555b00e41699a" translate="yes" xml:space="preserve">
          <source>A one-character string used by the writer to escape the &lt;em&gt;delimiter&lt;/em&gt; if &lt;em&gt;quoting&lt;/em&gt; is set to &lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt;&lt;code&gt;QUOTE_NONE&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;quotechar&lt;/em&gt; if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. On reading, the &lt;em&gt;escapechar&lt;/em&gt; removes any special meaning from the following character. It defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, which disables escaping.</source>
          <target state="translated">&lt;em&gt;引用&lt;/em&gt;が&lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt; &lt;code&gt;QUOTE_NONE&lt;/code&gt; に&lt;/a&gt;設定さ&lt;em&gt;れている&lt;/em&gt;場合に&lt;em&gt;区切り文字&lt;/em&gt;をエスケープするためにライターが使用する1文字の文字列。&lt;em&gt;二重引用符&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合は&lt;em&gt;quotechar&lt;/em&gt;。読み取り時に、&lt;em&gt;escapechar&lt;/em&gt;は次の文字から特別な意味を削除します。デフォルトは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; で&lt;/a&gt;、エスケープを無効にします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fda1d9903017ca3b081766b53e4516e92f15d4c0" translate="yes" xml:space="preserve">
          <source>A one-character string used to quote fields containing special characters, such as the &lt;em&gt;delimiter&lt;/em&gt; or &lt;em&gt;quotechar&lt;/em&gt;, or which contain new-line characters. It defaults to &lt;code&gt;'&quot;'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;区切り文字&lt;/em&gt;や&lt;em&gt;quotechar&lt;/em&gt;などの特殊文字を含むフィールド、または&lt;em&gt;改行&lt;/em&gt;&lt;em&gt;文字&lt;/em&gt;を含むフィールドを引用するために使用される1文字の文字列。デフォルトは &lt;code&gt;'&quot;'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0cddc04fba1abe2f49cf33fa79783bec8ce15114" translate="yes" xml:space="preserve">
          <source>A one-character string used to separate fields. It defaults to &lt;code&gt;','&lt;/code&gt;.</source>
          <target state="translated">フィールドを区切るために使用される1文字の文字列。デフォルトは &lt;code&gt;','&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="266b9992fac1657d44a6361498f20ec9bfba29ef" translate="yes" xml:space="preserve">
          <source>A pad is like a window, except that it is not restricted by the screen size, and is not necessarily associated with a particular part of the screen. Pads can be used when a large window is needed, and only a part of the window will be on the screen at one time. Automatic refreshes of pads (such as from scrolling or echoing of input) do not occur. The &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#curses.window.noutrefresh&quot;&gt;&lt;code&gt;noutrefresh()&lt;/code&gt;&lt;/a&gt; methods of a pad require 6 arguments to specify the part of the pad to be displayed and the location on the screen to be used for the display. The arguments are &lt;em&gt;pminrow&lt;/em&gt;, &lt;em&gt;pmincol&lt;/em&gt;, &lt;em&gt;sminrow&lt;/em&gt;, &lt;em&gt;smincol&lt;/em&gt;, &lt;em&gt;smaxrow&lt;/em&gt;, &lt;em&gt;smaxcol&lt;/em&gt;; the &lt;em&gt;p&lt;/em&gt; arguments refer to the upper left corner of the pad region to be displayed and the &lt;em&gt;s&lt;/em&gt; arguments define a clipping box on the screen within which the pad region is to be displayed.</source>
          <target state="translated">パッドはウィンドウのようなものですが、画面サイズによる制限はなく、必ずしも画面の特定の部分に関連付けられているわけではありません。大きなウィンドウが必要なときにパッドを使用すると、ウィンドウの一部だけが一度に画面に表示されます。パッドの自動更新（スクロールや入力のエコーなど）は行われません。&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#curses.window.noutrefresh&quot;&gt; &lt;code&gt;noutrefresh()&lt;/code&gt; &lt;/a&gt;パッドの方法が表示されると、画面上の位置を表示するために使用されるパッドの一部を指定する6つの引数を必要とします。引数は&lt;em&gt;pminrow&lt;/em&gt;、&lt;em&gt;pmincol&lt;/em&gt;、&lt;em&gt;sminrow&lt;/em&gt;、&lt;em&gt;smincol&lt;/em&gt;、&lt;em&gt;smaxrow&lt;/em&gt;、&lt;em&gt;smaxcol&lt;/em&gt;です。&lt;em&gt;P&lt;/em&gt;引数は、表示されるパッド領域の左上隅を参照し、&lt;em&gt;s&lt;/em&gt;引数は、パッド領域が表示される画面上のクリッピングボックスを定義します。</target>
        </trans-unit>
        <trans-unit id="543bffc96e07b14eab3de589caf9259026e4de84" translate="yes" xml:space="preserve">
          <source>A pair &lt;code&gt;(host, port)&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;host&lt;/em&gt; is a string representing either a hostname in Internet domain notation like &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; or an IPv4 address like &lt;code&gt;'100.50.200.5'&lt;/code&gt;, and &lt;em&gt;port&lt;/em&gt; is an integer.</source>
          <target state="translated">ペア &lt;code&gt;(host, port)&lt;/code&gt; のために使用される&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; の&lt;/a&gt;アドレスファミリー、&lt;em&gt;ホストは&lt;/em&gt;いずれかのようなインターネットドメイン表記のホスト名を表す文字列である &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; 等のIPv4アドレス &lt;code&gt;'100.50.200.5'&lt;/code&gt; 、及び&lt;em&gt;ポートが&lt;/em&gt;あります整数。</target>
        </trans-unit>
        <trans-unit id="b93cb8865023f461acb5361c56e206ee1aa8182d" translate="yes" xml:space="preserve">
          <source>A panel stack extension that adds depth to curses windows.</source>
          <target state="translated">カーズウィンドウに奥行きを持たせるパネルスタックエクステンション。</target>
        </trans-unit>
        <trans-unit id="a6b4cf6c75b1cf3706374d6b2abafb188224b9a0" translate="yes" xml:space="preserve">
          <source>A parallel equivalent of the &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; built-in function (it supports only one &lt;em&gt;iterable&lt;/em&gt; argument though, for multiple iterables see &lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt;). It blocks until the result is ready.</source>
          <target state="translated">&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;組み込み関数の同等の機能（ただし、1つの&lt;em&gt;反復可能&lt;/em&gt;引数のみをサポートします。複数の反復可能物については&lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; を&lt;/a&gt;参照してください）。結果が準備できるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="16446c390decbe7bb0f68daafac03e66ce6aec69" translate="yes" xml:space="preserve">
          <source>A parameter entity contained incomplete markup.</source>
          <target state="translated">パラメータ・エンティティに不完全なマークアップが含まれていました。</target>
        </trans-unit>
        <trans-unit id="012f66b7ba5f9e640c26d03e6437c3bca0c7df81" translate="yes" xml:space="preserve">
          <source>A parameter entity reference was found where it was not allowed.</source>
          <target state="translated">許可されていないパラメータ・エンティティ参照が見つかりました。</target>
        </trans-unit>
        <trans-unit id="b364142017bfe2db3bd80211e6956af681664535" translate="yes" xml:space="preserve">
          <source>A partial upgrade path from &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;への部分的なアップグレードパス：</target>
        </trans-unit>
        <trans-unit id="a6a0f809c40e7d0aca5f738a82cada5c7e327d01" translate="yes" xml:space="preserve">
          <source>A path configuration file is a file whose name has the form &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; and exists in one of the four directories mentioned above; its contents are additional items (one per line) to be added to &lt;code&gt;sys.path&lt;/code&gt;. Non-existing items are never added to &lt;code&gt;sys.path&lt;/code&gt;, and no check is made that the item refers to a directory rather than a file. No item is added to &lt;code&gt;sys.path&lt;/code&gt; more than once. Blank lines and lines beginning with &lt;code&gt;#&lt;/code&gt; are skipped. Lines starting with &lt;code&gt;import&lt;/code&gt; (followed by space or tab) are executed.</source>
          <target state="translated">パス設定ファイルは、 &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; という形式で、上記の4つのディレクトリのいずれかに存在するファイルです。その内容は &lt;code&gt;sys.path&lt;/code&gt; に追加される追加項目（1行に1つ）です。存在しないアイテムが &lt;code&gt;sys.path&lt;/code&gt; に追加されることはなく、アイテムがファイルではなくディレクトリを参照していることの確認は行われません。 &lt;code&gt;sys.path&lt;/code&gt; に2回以上追加される項目はありません。空白行と &lt;code&gt;#&lt;/code&gt; で始まる行はスキップされます。 &lt;code&gt;import&lt;/code&gt; で始まる行（スペースまたはタブが続く）が実行されます。</target>
        </trans-unit>
        <trans-unit id="646d815aeadeea6fe20ca3faf0ccabbfeea34957" translate="yes" xml:space="preserve">
          <source>A path object can be used anywhere an object implementing &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; is accepted:</source>
          <target state="translated">パスオブジェクトは、&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; を&lt;/a&gt;実装するオブジェクトが受け入れられる任意の場所で使用できます。</target>
        </trans-unit>
        <trans-unit id="bebeb34650a612eae1dd1d635441f9d161b217ad" translate="yes" xml:space="preserve">
          <source>A pathlib-compatible wrapper for zip files. See section &lt;a href=&quot;#path-objects&quot;&gt;Path Objects&lt;/a&gt; for details.</source>
          <target state="translated">zipファイル用のpathlib互換ラッパー。詳細については、「&lt;a href=&quot;#path-objects&quot;&gt;パスオブジェクト」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="073be021799e1edeed8fbb982dc1e8d136890310" translate="yes" xml:space="preserve">
          <source>A pattern you will sometimes see is a &lt;code&gt;try-finally&lt;/code&gt; statement with a flag variable to indicate whether or not the body of the &lt;code&gt;finally&lt;/code&gt; clause should be executed. In its simplest form (that can&amp;rsquo;t already be handled just by using an &lt;code&gt;except&lt;/code&gt; clause instead), it looks something like this:</source>
          <target state="translated">ときどき見られるパターンは、 &lt;code&gt;finally&lt;/code&gt; 句の本体を実行するかどうかを示すフラグ変数を含む &lt;code&gt;try-finally&lt;/code&gt; ステートメントです。最も単純な形式（ &lt;code&gt;except&lt;/code&gt; 句を使用するだけではまだ処理できません）では、次のようになります。</target>
        </trans-unit>
        <trans-unit id="7abf054a6573c0336e61de800d0dfa5875e96568" translate="yes" xml:space="preserve">
          <source>A pickler object&amp;rsquo;s dispatch table is a registry of &lt;em&gt;reduction functions&lt;/em&gt; of the kind which can be declared using &lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt;&lt;code&gt;copyreg.pickle()&lt;/code&gt;&lt;/a&gt;. It is a mapping whose keys are classes and whose values are reduction functions. A reduction function takes a single argument of the associated class and should conform to the same interface as a &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ピッカーオブジェクトのディスパッチテーブルは、&lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt; &lt;code&gt;copyreg.pickle()&lt;/code&gt; &lt;/a&gt;を使用して宣言できる種類の&lt;em&gt;削減関数&lt;/em&gt;のレジストリです。これは、キーがクラスで値がリダクション関数であるマッピングです。リダクション関数は、関連するクラスの単一の引数を取り、&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;メソッドと同じインターフェイスに準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="2815f7a27d1d799bb9c5ed4bd1e2e6224159599f" translate="yes" xml:space="preserve">
          <source>A placeholder method which can be overridden in third party implementations to pre-install packages in the virtual environment or perform other post-creation steps.</source>
          <target state="translated">サードパーティの実装でオーバーライドできるプレースホルダメソッドで、仮想環境にパッケージをプリインストールしたり、その他の作成後のステップを実行します。</target>
        </trans-unit>
        <trans-unit id="5289f5cb8c6eafde6088a2523d6546e8be5b9ea2" translate="yes" xml:space="preserve">
          <source>A platform-specific location:</source>
          <target state="translated">プラットフォーム固有の場所。</target>
        </trans-unit>
        <trans-unit id="a6eb65fd95cbaf5e43af30050ff3ec24853c59dd" translate="yes" xml:space="preserve">
          <source>A policy defines the notion of &lt;em&gt;context&lt;/em&gt; and manages a separate event loop per context. The default policy defines &lt;em&gt;context&lt;/em&gt; to be the current thread.</source>
          <target state="translated">ポリシーは、&lt;em&gt;コンテキスト&lt;/em&gt;の概念を定義し、&lt;em&gt;コンテキスト&lt;/em&gt;ごとに個別のイベントループを管理します。デフォルトのポリシーは、&lt;em&gt;コンテキスト&lt;/em&gt;を現在のスレッドとして定義し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="10bef264cff4ed7470ae443a79b09fa9417838b9" translate="yes" xml:space="preserve">
          <source>A popular third-party coverage tool that provides HTML output along with advanced features such as branch coverage.</source>
          <target state="translated">ブランチカバレッジなどの高度な機能とともにHTML出力を提供する人気のサードパーティ製カバレッジツールです。</target>
        </trans-unit>
        <trans-unit id="7e69db56a6ea626272adf3d2ff2e59ea23a94fcf" translate="yes" xml:space="preserve">
          <source>A positional specification of the form &amp;ldquo;@x,y&amp;rdquo;, which identifies the tab</source>
          <target state="translated">タブを識別する「@ x、y」形式の位置指定</target>
        </trans-unit>
        <trans-unit id="3ba4a2770676c7fc7f7f67798128c512a5d2028e" translate="yes" xml:space="preserve">
          <source>A positive integer specifying the number of elements in the array. Out-of-range subscripts result in an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;. Will be returned by &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列の要素数を指定する正の整数。範囲外の添え字は&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; になり&lt;/a&gt;ます。&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;によって返されます。</target>
        </trans-unit>
        <trans-unit id="9a673e2f0ba94a4e244ad4f4f6bcfef7838e6dad" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be blocked.</source>
          <target state="translated">シグナルがブロックされることを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="fcbbcb4889df6bf478da8060159cb1a9ffdb3edf" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be unblocked.</source>
          <target state="translated">シグナルのブロックを解除することを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="64d6e35e5d0720d89927277af6c6b6e10bc1da90" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that the signal mask is to be replaced.</source>
          <target state="translated">シグナルマスクが置き換えられることを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="c03ca79ea849bb2dbbb49f14c9096b4b556833c8" translate="yes" xml:space="preserve">
          <source>A possibly empty tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects representing the addresses in the group.</source>
          <target state="translated">空の可能性がある、グループ内のアドレスを表す&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。</target>
        </trans-unit>
        <trans-unit id="49afe2d7b9d6c7021dbba12a05abef138ec01de4" translate="yes" xml:space="preserve">
          <source>A precision of &lt;code&gt;0&lt;/code&gt; is treated as equivalent to a precision of &lt;code&gt;1&lt;/code&gt;. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">精度 &lt;code&gt;0&lt;/code&gt; は、精度 &lt;code&gt;1&lt;/code&gt; と同等として扱われます。デフォルトの精度は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7089cc2a31010eba0be5e32ed206b479b78c2baa" translate="yes" xml:space="preserve">
          <source>A primary use for weak references is to implement caches or mappings holding large objects, where it&amp;rsquo;s desired that a large object not be kept alive solely because it appears in a cache or mapping.</source>
          <target state="translated">弱参照の主な用途は、ラージオブジェクトを保持するキャッシュまたはマッピングを実装することです。この場合、ラージオブジェクトは、キャッシュまたはマッピングに表示されるだけで存続しないことが望まれます。</target>
        </trans-unit>
        <trans-unit id="c915b53e717effb68aabdc2a0d6fddd050b0db1e" translate="yes" xml:space="preserve">
          <source>A primitive lock is a synchronization primitive that is not owned by a particular thread when locked. In Python, it is currently the lowest level synchronization primitive available, implemented directly by the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; extension module.</source>
          <target state="translated">プリミティブロックは、ロックされたときに特定のスレッドが所有していない同期プリミティブです。Pythonでは、これは現在利用可能な最低レベルの同期プリミティブであり、&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;拡張モジュールによって直接実装されます。</target>
        </trans-unit>
        <trans-unit id="37ea4049756ea91b41ad9cbfd066ac008ad7e41e" translate="yes" xml:space="preserve">
          <source>A primitive lock is in one of two states, &amp;ldquo;locked&amp;rdquo; or &amp;ldquo;unlocked&amp;rdquo;. It is created in the unlocked state. It has two basic methods, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;. When the state is unlocked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; changes the state to locked and returns immediately. When the state is locked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks until a call to &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; in another thread changes it to unlocked, then the &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call resets it to locked and returns. The &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method should only be called in the locked state; it changes the state to unlocked and returns immediately. If an attempt is made to release an unlocked lock, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">プリミティブロックは、「ロック」または「ロック解除」の2つの状態のいずれかになります。ロック解除状態で作成されます。 2つの基本的なメソッド、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; があり&lt;/a&gt;ます。状態がロック解除されると、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;は状態をロックに変更し、すぐに戻ります。状態は、ロックされたときに&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;への呼び出しまで、ブロックを&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;別のスレッドでアンロックし、それを変更する&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;コールリセットロック戻ることに。&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドは、ロック状態で呼び出されるべきです。状態をロック解除に変更し、すぐに戻ります。ロックされていないロックを解放しようとすると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6c136c8e031ae9acaeea33df5e509e457c232647" translate="yes" xml:space="preserve">
          <source>A priority queue.</source>
          <target state="translated">優先度の高いキュー。</target>
        </trans-unit>
        <trans-unit id="d99ce12ee7a4b4b5d74728cfea88be8c23f2abb7" translate="yes" xml:space="preserve">
          <source>A process can be joined many times.</source>
          <target state="translated">1つのプロセスは何度も参加することができます。</target>
        </trans-unit>
        <trans-unit id="661a72c6ee03e63c1e4e4cdd37d63e45d6262bf9" translate="yes" xml:space="preserve">
          <source>A process cannot join itself because this would cause a deadlock. It is an error to attempt to join a process before it has been started.</source>
          <target state="translated">デッドロックの原因となるため、プロセスは自分自身を参加させることができません。プロセスが開始される前にプロセスに参加しようとするとエラーになります。</target>
        </trans-unit>
        <trans-unit id="03133f212edb656afb4b280596f603276f8582aa" translate="yes" xml:space="preserve">
          <source>A process pool object which controls a pool of worker processes to which jobs can be submitted. It supports asynchronous results with timeouts and callbacks and has a parallel map implementation.</source>
          <target state="translated">ジョブを投入できるワーカープロセスのプールを制御するプロセスプールオブジェクトです。タイムアウトとコールバックによる非同期の結果をサポートし、並列マップの実装を持っています。</target>
        </trans-unit>
        <trans-unit id="a354478a00e3e8c761db9395099aec6dd004f1f8" translate="yes" xml:space="preserve">
          <source>A process watcher allows customization of how an event loop monitors child processes on Unix. Specifically, the event loop needs to know when a child process has exited.</source>
          <target state="translated">プロセスウォッチャーは、Unix上でイベントループが子プロセスを監視する方法をカスタマイズすることができます。具体的には、イベントループは子プロセスがいつ終了したかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="072a4a313bcf1885879618cd5ab6ea7dafe24775" translate="yes" xml:space="preserve">
          <source>A processing class used to execute and verify the interactive examples in a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; で&lt;/a&gt;インタラクティブな例を実行および検証するために使用される処理クラス。</target>
        </trans-unit>
        <trans-unit id="bfc64c4355d0772046330f8b8767e859d4f36926" translate="yes" xml:space="preserve">
          <source>A processing class used to extract interactive examples from a string, and use them to create a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">文字列からインタラクティブな例を抽出し、それらを使用して&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するために使用される処理クラス。</target>
        </trans-unit>
        <trans-unit id="36e7f819143265a9e0661ba6d7d1edca3d75ef96" translate="yes" xml:space="preserve">
          <source>A processing class used to extract the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s that are relevant to a given object, from its docstring and the docstrings of its contained objects. &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s can be extracted from modules, classes, functions, methods, staticmethods, classmethods, and properties.</source>
          <target state="translated">特定のオブジェクトに関連する&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;を、そのdocstringおよび含まれているオブジェクトのdocstring から抽出するために使用される処理クラス。&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; は&lt;/a&gt;、モジュール、クラス、関数、メソッド、静的メソッド、クラスメソッド、およびプロパティから抽出できます。</target>
        </trans-unit>
        <trans-unit id="ffe740a1a61f3a17e716a81beaa39ca1258df2e5" translate="yes" xml:space="preserve">
          <source>A program is free to modify this list for its own purposes. Only strings and bytes should be added to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;; all other data types are ignored during import.</source>
          <target state="translated">プログラムは、独自の目的でこのリストを自由に変更できます。文字列とバイトのみを&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に追加する必要があります。インポート中、他のすべてのデータ型は無視されます。</target>
        </trans-unit>
        <trans-unit id="2a058d334f0b92eff050d11d91c8df8e25c24a51" translate="yes" xml:space="preserve">
          <source>A property object has &lt;code&gt;getter&lt;/code&gt;, &lt;code&gt;setter&lt;/code&gt;, and &lt;code&gt;deleter&lt;/code&gt; methods usable as decorators that create a copy of the property with the corresponding accessor function set to the decorated function. This is best explained with an example:</source>
          <target state="translated">プロパティオブジェクトには、対応するアクセサ関数が修飾された関数に設定されたプロパティのコピーを作成するデコレータとして使用可能な &lt;code&gt;getter&lt;/code&gt; 、 &lt;code&gt;setter&lt;/code&gt; 、および &lt;code&gt;deleter&lt;/code&gt; メソッドがあります。これは例で最もよく説明されます：</target>
        </trans-unit>
        <trans-unit id="b39b3fcc4cee390c973950a8ea0939199743bb3a" translate="yes" xml:space="preserve">
          <source>A proxy is an object which &lt;em&gt;refers&lt;/em&gt; to a shared object which lives (presumably) in a different process. The shared object is said to be the &lt;em&gt;referent&lt;/em&gt; of the proxy. Multiple proxy objects may have the same referent.</source>
          <target state="translated">プロキシは、（おそらく）別のプロセスに存在する共有オブジェクトを&lt;em&gt;参照&lt;/em&gt;するオブジェクトです。共有オブジェクトはプロキシの&lt;em&gt;リファレント&lt;/em&gt;であると言われています。複数のプロキシオブジェクトが同じ指示対象を持つ場合があります。</target>
        </trans-unit>
        <trans-unit id="127418956b7538abf35e0c7d0c8df18e9a2e2b17" translate="yes" xml:space="preserve">
          <source>A proxy object has methods which invoke corresponding methods of its referent (although not every method of the referent will necessarily be available through the proxy). In this way, a proxy can be used just like its referent can:</source>
          <target state="translated">プロキシオブジェクトは参照元の対応するメソッドを呼び出すメソッドを持ちます(参照元のすべてのメソッドが必ずしもプロキシを通して利用できるわけではありませんが)。このようにして、プロキシは参照元と同じように使うことができます。</target>
        </trans-unit>
        <trans-unit id="f53fd45b896dddb81ccaed23c2ae3025e8e5f24b" translate="yes" xml:space="preserve">
          <source>A proxy object uses a weakref callback so that when it gets garbage collected it deregisters itself from the manager which owns its referent.</source>
          <target state="translated">プロキシオブジェクトはweakrefコールバックを使用して、ガベージコレクションを取得したときに、その参照元を所有しているマネージャから自分自身の登録を解除するようにしています。</target>
        </trans-unit>
        <trans-unit id="db78a45bdc25adb61e99da3fbc39a41ebe2a9000" translate="yes" xml:space="preserve">
          <source>A pull parser suitable for non-blocking applications. Its input-side API is similar to that of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt;, but instead of pushing calls to a callback target, &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt; collects an internal list of parsing events and lets the user read from it. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported.</source>
          <target state="translated">非ブロッキングアプリケーションに適したプルパーサー。その入力側APIは&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; の&lt;/a&gt; APIに似ていますが、コールバックターゲットへの呼び出しをプッシュする代わりに、&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt;は解析イベントの内部リストを収集し、ユーザーがそこから読み取れるようにします。&lt;em&gt;events&lt;/em&gt;は、報告する一連のイベントです。サポートされるイベントは、文字列 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;comment&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;pi&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; です（ &quot;ns&quot;イベントは、詳細な名前空間情報を取得するために使用されます）。場合は&lt;em&gt;、イベントが&lt;/em&gt;省略されている、唯一の &lt;code&gt;&quot;end&quot;&lt;/code&gt; のイベントが報告されています。</target>
        </trans-unit>
        <trans-unit id="611cc1f288e4ebe8654c5f40abd6830e50fb2b24" translate="yes" xml:space="preserve">
          <source>A quadratic blowup attack is similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;Billion Laughs&lt;/a&gt; attack; it abuses entity expansion, too. Instead of nested entities it repeats one large entity with a couple of thousand chars over and over again. The attack isn&amp;rsquo;t as efficient as the exponential case but it avoids triggering parser countermeasures that forbid deeply-nested entities.</source>
          <target state="translated">二次爆発攻撃は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;10億笑い&lt;/a&gt;攻撃に似ています。エンティティの拡張も悪用します。ネストされたエンティティの代わりに、数千文字で1つの大きなエンティティを繰り返します。攻撃は指数関数的な場合ほど効率的ではありませんが、深くネストされたエンティティを禁止するパーサー対策のトリガーを回避します。</target>
        </trans-unit>
        <trans-unit id="32f0bfa3ad661bbe821e304d53e7d39d2b8c3756" translate="yes" xml:space="preserve">
          <source>A queue class for use in a multi-processing (rather than multi-threading) context.</source>
          <target state="translated">(マルチスレッドではなく)マルチプロセッシングのコンテキストで使用するためのキュークラス。</target>
        </trans-unit>
        <trans-unit id="970016f4dd8d7293c8fe545175b34b595aee70a8" translate="yes" xml:space="preserve">
          <source>A range object will be empty if &lt;code&gt;r[0]&lt;/code&gt; does not meet the value constraint. Ranges do support negative indices, but these are interpreted as indexing from the end of the sequence determined by the positive indices.</source>
          <target state="translated">&lt;code&gt;r[0]&lt;/code&gt; が値の制約を満たさない場合、範囲オブジェクトは空になります。範囲は負のインデックスをサポートしますが、これらは正のインデックスによって決定されるシーケンスの最後からのインデックスとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="99d64c49ac868aa39e74a9a92db9ff55124daac2" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the parser.</source>
          <target state="translated">パーサーが使用している方言の読み取り専用の記述です。</target>
        </trans-unit>
        <trans-unit id="d8db58a3fbd04f626dd60cc420a69d5fe182f4a1" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the writer.</source>
          <target state="translated">書き手が使用している方言の読み専用の説明。</target>
        </trans-unit>
        <trans-unit id="103619d1b69776cbb2bb552ae0ace0f33ade73d9" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;arithmetic mean&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;算術平均&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="7e5c5cd30d274a11e5c8a7f205262bcf52ba50dd" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;median&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;中央値&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="2b3f43c3138ebdc3b49d4edbc9a8dfae7d36df14" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;mode&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;モード&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="45686b5a6c585606daea0b77d4b804d2c566d994" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;standard deviation&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;標準偏差&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="99445b8caebd2b8efc9bf242bcd10bf1c3ccd24e" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;variance&lt;/a&gt; of a normal distribution. Equal to the square of the standard deviation.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;分散&lt;/a&gt;の読み取り専用プロパティ。標準偏差の2乗に等しい。</target>
        </trans-unit>
        <trans-unit id="2a89570fc444460338403a29b3a5af43fe4247a1" translate="yes" xml:space="preserve">
          <source>A read-only property. Characters that will be considered punctuation. Runs of punctuation characters will be returned as a single token. However, note that no semantic validity checking will be performed: for example, &amp;lsquo;&amp;gt;&amp;gt;&amp;gt;&amp;rsquo; could be returned as a token, even though it may not be recognised as such by shells.</source>
          <target state="translated">読み取り専用プロパティ。句読点と見なされる文字。一連の句読文字は単一のトークンとして返されます。ただし、意味的な妥当性検査は実行されないことに注意してください。たとえば、「&amp;gt;&amp;gt;&amp;gt;」は、シェルによって認識されない場合でも、トークンとして返される可能性があります。</target>
        </trans-unit>
        <trans-unit id="f1526d13194dc44fe8b71f410d5e02f5618756d2" translate="yes" xml:space="preserve">
          <source>A read-only property. Points to the &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; object that created the token.</source>
          <target state="translated">読み取り専用プロパティ。トークンを作成した&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;オブジェクトを指します。</target>
        </trans-unit>
        <trans-unit id="35f7fe0b2b9bb75459b88195c234d27b4c7c54e7" translate="yes" xml:space="preserve">
          <source>A read-only property. Set to the value the variable had before the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; method call that created the token. It points to &lt;code&gt;Token.MISSING&lt;/code&gt; is the variable was not set before the call.</source>
          <target state="translated">読み取り専用プロパティ。トークンを作成した&lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt;メソッド呼び出しの前に変数が持っていた値に設定します。 &lt;code&gt;Token.MISSING&lt;/code&gt; がポイントされていますが、この変数は呼び出し前に設定されていませんでした。</target>
        </trans-unit>
        <trans-unit id="57409d01d7bc70f967ed6e92fede60d985f7ba23" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;クラスの内容を格納するために使用される実際の&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="fabb25bea7f4a3fcb6ef6ab14b41eddaa407f0e5" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;クラスの内容を格納するために使用される実際の&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a5ea9d2da1b66afbb924a3e5bdffb22ed45ea981" translate="yes" xml:space="preserve">
          <source>A real dictionary used to store the contents of the &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;クラスのコンテンツを格納するために使用される実際の辞書。</target>
        </trans-unit>
        <trans-unit id="2e81b2ea1c04e7477a837ea4fa77a2d26559ba3e" translate="yes" xml:space="preserve">
          <source>A recursive lock object: a close analog of &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt;. A recursive lock must be released by the process or thread that acquired it. Once a process or thread has acquired a recursive lock, the same process or thread may acquire it again without blocking; that process or thread must release it once for each time it has been acquired.</source>
          <target state="translated">再帰的なロックオブジェクト：&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; の&lt;/a&gt;類似物。再帰的ロックは、それを取得したプロセスまたはスレッドによって解放する必要があります。プロセスまたはスレッドが再帰的ロックを取得すると、同じプロセスまたはスレッドがブロックせずに再度ロックを取得できます。そのプロセスまたはスレッドは、取得されるたびに1回解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="bdd9f600aa39bd4ce3cfa80aec45f37f958ff199" translate="yes" xml:space="preserve">
          <source>A reduced-scope variant of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; representing an SSL protocol instance that does not contain any network IO methods. This class is typically used by framework authors that want to implement asynchronous IO for SSL through memory buffers.</source>
          <target state="translated">ネットワークIOメソッドを含まないSSLプロトコルインスタンスを表す&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; の&lt;/a&gt;スコープを縮小したバリアント。このクラスは通常、メモリバッファーを介してSSLの非同期IOを実装するフレームワークの作成者によって使用されます。</target>
        </trans-unit>
        <trans-unit id="1806f846154693b11451c88326be8f7c897dca73" translate="yes" xml:space="preserve">
          <source>A reentrant lock is a synchronization primitive that may be acquired multiple times by the same thread. Internally, it uses the concepts of &amp;ldquo;owning thread&amp;rdquo; and &amp;ldquo;recursion level&amp;rdquo; in addition to the locked/unlocked state used by primitive locks. In the locked state, some thread owns the lock; in the unlocked state, no thread owns it.</source>
          <target state="translated">再入可能ロックは、同じスレッドによって複数回取得される可能性がある同期プリミティブです。内部的には、プリミティブロックで使用されるロック/ロック解除状態に加えて、「所有スレッド」と「再帰レベル」の概念を使用します。ロック状態では、一部のスレッドがロックを所有しています。ロック解除状態では、スレッドを所有していません。</target>
        </trans-unit>
        <trans-unit id="cfaf2d84cef67a7e1c4ea1d2ed5a19290e06d05c" translate="yes" xml:space="preserve">
          <source>A reference to the parent &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">親の&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt;オブジェクトへの参照。</target>
        </trans-unit>
        <trans-unit id="fe68fe38d813942406023b96ef7655bd795ff7aa" translate="yes" xml:space="preserve">
          <source>A reference was made to an entity which was not defined.</source>
          <target state="translated">定義されていないエンティティへの参照が行われた。</target>
        </trans-unit>
        <trans-unit id="fc2814565b811bb72e387b5ad4e116a75b0028af" translate="yes" xml:space="preserve">
          <source>A regular expression (or RE) specifies a set of strings that matches it; the functions in this module let you check if a particular string matches a given regular expression (or if a given regular expression matches a particular string, which comes down to the same thing).</source>
          <target state="translated">このモジュールの関数は、特定の文字列が与えられた正規表現にマッチするかどうかをチェックします (あるいは、与えられた正規表現が特定の文字列にマッチするかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="278310ab0a87e2bebde6fb9b2d28696ab3d401e5" translate="yes" xml:space="preserve">
          <source>A relative path is interpreted relative to the current working directory.</source>
          <target state="translated">相対パスは、現在の作業ディレクトリからの相対パスとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="b69de6e0660f02bec80283fa3ef7149a693896df" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytearray object into its hexadecimal representation.</source>
          <target state="translated">バイト配列オブジェクトを16進数表現に変換するための逆変換関数が存在します。</target>
        </trans-unit>
        <trans-unit id="564befe131589980eaa0dc9e9dfcfae349e6d8e8" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytes object into its hexadecimal representation.</source>
          <target state="translated">バイトオブジェクトを16進数表現に変換する逆変換関数が存在します。</target>
        </trans-unit>
        <trans-unit id="87cbf6cd57661ce2eb0fe90dd90a5bacee5cf075" translate="yes" xml:space="preserve">
          <source>A right shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to division by &lt;code&gt;pow(2, n)&lt;/code&gt; without overflow check.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;ビットの右シフトは &lt;code&gt;pow(2, n)&lt;/code&gt; オーバーフローチェックなしのpow（2、n）による除算と同等です。</target>
        </trans-unit>
        <trans-unit id="184432cc5a56df44e1427ded0fcaad5c40e378c4" translate="yes" xml:space="preserve">
          <source>A round-robin scheduling policy.</source>
          <target state="translated">ラウンドロビンスケジューリングポリシー。</target>
        </trans-unit>
        <trans-unit id="2d2450e8ef446241d8a186b37b3d407b5c59148e" translate="yes" xml:space="preserve">
          <source>A sample usage might be something like this:</source>
          <target state="translated">使い方の例としては、こんな感じでしょうか。</target>
        </trans-unit>
        <trans-unit id="98edfa1526c0efe9099cce99ddcb7c504d9a1e51" translate="yes" xml:space="preserve">
          <source>A sample usage of our unpickler working has intended:</source>
          <target state="translated">私たちのアンピッカーの作業の使用例が意図されています。</target>
        </trans-unit>
        <trans-unit id="5fa5c854cf986de080adeddab9912ec17b8b1df0" translate="yes" xml:space="preserve">
          <source>A script (possibly registered with Misc.register) that is called immediately before displaying the values. It may specify which values to display.</source>
          <target state="translated">値を表示する直前に呼び出されるスクリプト(Misc.registerで登録されている可能性があります)。表示する値を指定することができます。</target>
        </trans-unit>
        <trans-unit id="23735aa84db218755b79767643c54ff40f2fab47" translate="yes" xml:space="preserve">
          <source>A second example demonstrates output parameters. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; function retrieves the dimensions of a specified window by copying them into &lt;code&gt;RECT&lt;/code&gt; structure that the caller has to supply. Here is the C declaration:</source>
          <target state="translated">2番目の例は、出力パラメーターを示しています。win32 &lt;code&gt;GetWindowRect&lt;/code&gt; 関数は、指定されたウィンドウの寸法を、呼び出し側が提供する必要のある &lt;code&gt;RECT&lt;/code&gt; 構造にコピーすることによって取得します。次にC宣言を示します。</target>
        </trans-unit>
        <trans-unit id="6bf3d7d9e60a594dca393cfc1e57ed7a4eb755f0" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some task calls &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォは、&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;呼び出しごとにデクリメントされ、&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;呼び出しごとにインクリメントされる内部カウンタを管理します。カウンターがゼロ未満になることはありません。とき&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;それはいくつかのタスクが呼び出すまで待機し、ブロック、それがゼロであることを発見&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f001dac28861f9744b78693c52be06f375a70a3" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some other thread calls &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォは、&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;呼び出しごとにデクリメントされ、&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;呼び出しごとにインクリメントされる内部カウンタを管理します。カウンターがゼロ未満になることはありません。とき&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;それはいくつかの他のスレッドが呼び出すまで待機し、ブロック、それがゼロであることを発見&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a76aefa9f5a9e518125b5efe69166c037ad6a6" translate="yes" xml:space="preserve">
          <source>A semaphore object: a close analog of &lt;a href=&quot;threading#threading.Semaphore&quot;&gt;&lt;code&gt;threading.Semaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォオブジェクト：&lt;a href=&quot;threading#threading.Semaphore&quot;&gt; &lt;code&gt;threading.Semaphore&lt;/code&gt; の&lt;/a&gt;類似物。</target>
        </trans-unit>
        <trans-unit id="c7848790bb96dd3a52d4bf86a18d50bb671f3c12" translate="yes" xml:space="preserve">
          <source>A semaphore.</source>
          <target state="translated">セマフォです。</target>
        </trans-unit>
        <trans-unit id="8542eec62199963efac79ef1b519957da0db1407" translate="yes" xml:space="preserve">
          <source>A sequence defining the structure fields. The items must be 2-tuples or 3-tuples. The first item is the name of the field, the second item specifies the type of the field; it can be any ctypes data type.</source>
          <target state="translated">構造体フィールドを定義するシーケンス。項目は2タプルまたは3タプルでなければなりません。最初の項目はフィールドの名前で、2番目の項目はフィールドの型を指定します。</target>
        </trans-unit>
        <trans-unit id="48ad0a2928de82fd8b299ed332a4541e9779e82e" translate="yes" xml:space="preserve">
          <source>A sequence of null-terminated strings, terminated by two null characters. (Python handles this termination automatically.)</source>
          <target state="translated">2つのヌル文字で終端するヌル文字列のシーケンス。(Pythonはこの終端を自動的に処理します)。</target>
        </trans-unit>
        <trans-unit id="49eae2b8156400102d2de31f44c9b7f044b0004f" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms guaranteed to be supported by this module on all platforms. Note that &amp;lsquo;md5&amp;rsquo; is in this list despite some upstream vendors offering an odd &amp;ldquo;FIPS compliant&amp;rdquo; Python build that excludes it.</source>
          <target state="translated">すべてのプラットフォームでこのモジュールによってサポートされることが保証されているハッシュアルゴリズムの名前を含むセット。一部の上流ベンダーがそれを除外する奇妙な「FIPS準拠」のPythonビルドを提供しているにもかかわらず、「md5」はこのリストにあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="12fadb35d13d46359eedacd2835823952e5162ba" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms that are available in the running Python interpreter. These names will be recognized when passed to &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt;&lt;code&gt;algorithms_guaranteed&lt;/code&gt;&lt;/a&gt; will always be a subset. The same algorithm may appear multiple times in this set under different names (thanks to OpenSSL).</source>
          <target state="translated">実行中のPythonインタープリターで使用可能なハッシュアルゴリズムの名前を含むセット。これらの名前は、&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;に渡されたときに認識されます。&lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt; &lt;code&gt;algorithms_guaranteed&lt;/code&gt; &lt;/a&gt;は常にサブセットです。このセットでは、同じアルゴリズムが異なる名前で複数回現れることがあります（OpenSSLのおかげです）。</target>
        </trans-unit>
        <trans-unit id="59cc295113b43a2aa6bdc4227e00a42f34fd2718" translate="yes" xml:space="preserve">
          <source>A shallow copy of &lt;code&gt;module.__dict__&lt;/code&gt; is used for both local and global execution context.</source>
          <target state="translated">&lt;code&gt;module.__dict__&lt;/code&gt; 浅いコピーは、ローカル実行コンテキストとグローバル実行コンテキストの両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="d26717767841ef0e78b29d3c4d6169bcb2a7db93" translate="yes" xml:space="preserve">
          <source>A shallow copy of dictionary argument &lt;em&gt;globs&lt;/em&gt; is used for the execution context.</source>
          <target state="translated">辞書引数&lt;em&gt;globsの&lt;/em&gt;浅いコピーが実行コンテキストに使用されます。</target>
        </trans-unit>
        <trans-unit id="1169260b61888746c3a079157d99e6f61c0c10b7" translate="yes" xml:space="preserve">
          <source>A shared object gets deleted from the manager process when there are no longer any proxies referring to it.</source>
          <target state="translated">共有オブジェクトは、それを参照するプロキシがなくなると、マネージャプロセスから削除されます。</target>
        </trans-unit>
        <trans-unit id="3ee5e7664c7b19d5dea256033c9a42275e7d768f" translate="yes" xml:space="preserve">
          <source>A short usage example:</source>
          <target state="translated">短い使用例です。</target>
        </trans-unit>
        <trans-unit id="d350f8e46b513eb933a766fc06d8f7bc1e7855cb" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt; の省略形。</target>
        </trans-unit>
        <trans-unit id="0a749b795f06550600447a0169cf24c779d0f176" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt; の省略形。</target>
        </trans-unit>
        <trans-unit id="d680c12f8a4e98b73840c4eb1f954e21eb884b1b" translate="yes" xml:space="preserve">
          <source>A sign character (&lt;code&gt;'+'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;) will precede the conversion (overrides a &amp;ldquo;space&amp;rdquo; flag).</source>
          <target state="translated">符号文字（ &lt;code&gt;'+'&lt;/code&gt; または &lt;code&gt;'-'&lt;/code&gt; ）は変換の前に置かれます（「スペース」フラグを上書きします）。</target>
        </trans-unit>
        <trans-unit id="8295b8b179c3eb769ae5ced64ca9d3357e8a07b4" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;example&lt;/a&gt; using transports, protocols, and the &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">トランスポート、プロトコル、および&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;メソッドを使用した同様の&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9816a27a3071e14aa4cc7b0d979658eab901c688" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;current date&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">コルーチンと&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;関数で作成された同様の&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;現在の日付の&lt;/a&gt;例。</target>
        </trans-unit>
        <trans-unit id="c0aa2b4df7991a37bad1b0944c5afe055528abc3" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello World&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">コルーチンと&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;関数で作成された同様の&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello Worldの&lt;/a&gt;例。</target>
        </trans-unit>
        <trans-unit id="cbb8400354d2ab8f01a6d370ad999d970aea658b" translate="yes" xml:space="preserve">
          <source>A simple &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; subclass that provides attribute access to its namespace, as well as a meaningful repr.</source>
          <target state="translated">名前空間への属性アクセスと、意味のあるreprを提供する単純な&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;サブクラス。</target>
        </trans-unit>
        <trans-unit id="6608731fe87a5bbfa371c043387adc8877916f98" translate="yes" xml:space="preserve">
          <source>A simple example demonstrating the use of the programmatic interface:</source>
          <target state="translated">プログラム・インターフェイスの使用を示す簡単な例です。</target>
        </trans-unit>
        <trans-unit id="c1b20a4571d8f5fc4dbbbd293f8b4bcd6a17862f" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use (a constant-time comparison operation is needed to limit exposure to timing attacks. &lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt;&lt;code&gt;hmac.compare_digest()&lt;/code&gt;&lt;/a&gt; is suitable for this purpose):</source>
          <target state="translated">典型的な使用法を説明する簡単な例（タイミング攻撃への露出を制限するために一定時間の比較操作が必要です&lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt; &lt;code&gt;hmac.compare_digest()&lt;/code&gt; &lt;/a&gt;はこの目的に適しています）：</target>
        </trans-unit>
        <trans-unit id="39492fd3c64429290422fb9d8bf5eb46c13341d4" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use:</source>
          <target state="translated">典型的な使用例を示す簡単な例です。</target>
        </trans-unit>
        <trans-unit id="44e93bd7bca8db2e51ed966e536f70c2a01db2b6" translate="yes" xml:space="preserve">
          <source>A simple example of printing the subjects of all messages in a mailbox that seem interesting:</source>
          <target state="translated">メールボックス内の全てのメッセージの件名を、面白そうなものを印刷した簡単な例です。</target>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">簡単な例です。</target>
        </trans-unit>
        <trans-unit id="ae7798a28395a6340e3133d1e7c1839067f6a8e8" translate="yes" xml:space="preserve">
          <source>A simple set of examples:</source>
          <target state="translated">シンプルな例題集です。</target>
        </trans-unit>
        <trans-unit id="400bff2d1d48555e7a88b7ac26ee66c3fbf404f6" translate="yes" xml:space="preserve">
          <source>A simple typed namespace. At runtime it is equivalent to a plain &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単純な型付き名前空間。実行時は、単純な&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="1778756c346af273a27beed59f001b8aaa66eb9b" translate="yes" xml:space="preserve">
          <source>A simpler option is to simply set the &amp;ldquo;name&amp;rdquo; attribute after mock creation:</source>
          <target state="translated">より簡単なオプションは、モックの作成後に単に「name」属性を設定することです。</target>
        </trans-unit>
        <trans-unit id="6fa256381f5f3fdc1e9ddf323c393ca970d51e94" translate="yes" xml:space="preserve">
          <source>A single exception is defined:</source>
          <target state="translated">1つの例外が定義されています。</target>
        </trans-unit>
        <trans-unit id="77aa5f41dd9106f7bd2c4d2b21ec060c0df7ee38" translate="yes" xml:space="preserve">
          <source>A single interactive example, consisting of a Python statement and its expected output. The constructor arguments are used to initialize the attributes of the same names.</source>
          <target state="translated">Python 文とその期待される出力からなる単一の対話的な例です。コンストラクタの引数は、同名の属性を初期化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1678b7653c8ad5878c0957e08c63d64d24b7a2d9" translate="yes" xml:space="preserve">
          <source>A slash(/) in the signature of a function denotes that the parameters prior to it are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">関数のシグニチャーのスラッシュ（/）は、その前のパラメーターが位置のみであることを示します。詳細については&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;、位置のみのパラメータに関するFAQエントリを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c3d52d28caf1f8e3ebc74d7080a5dd1a88e9282" translate="yes" xml:space="preserve">
          <source>A slightly more advanced use of the reader &amp;mdash; catching and reporting errors:</source>
          <target state="translated">リーダーのもう少し高度な使用法&amp;mdash;エラーのキャッチとレポート：</target>
        </trans-unit>
        <trans-unit id="898ebff01eaf3b8759adc9d7329175bc0b8511cb" translate="yes" xml:space="preserve">
          <source>A small number of constants live in the built-in namespace. They are:</source>
          <target state="translated">少数の定数が組み込みの名前空間に存在します。それらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2f57e31984cb6932a8e39a8ebeab0588c1bb3009" translate="yes" xml:space="preserve">
          <source>A socket object can be in one of three modes: blocking, non-blocking, or timeout. Sockets are by default always created in blocking mode, but this can be changed by calling &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットオブジェクトは、ブロッキング、非ブロッキング、またはタイムアウトの3つのモードのいずれかになります。ソケットはデフォルトでは常にブロッキングモードで作成されますが、これは&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; を&lt;/a&gt;呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="e405eec72bfbf93e7d5d778bf66ae75f5d35cc43" translate="yes" xml:space="preserve">
          <source>A solitary difference from its close analog exists: its &lt;code&gt;acquire&lt;/code&gt; method&amp;rsquo;s first argument is named &lt;em&gt;block&lt;/em&gt;, as is consistent with &lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt;&lt;code&gt;Lock.acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt; &lt;code&gt;Lock.acquire()&lt;/code&gt; &lt;/a&gt;と一貫性がある &lt;code&gt;acquire&lt;/code&gt; 、類似したものとの唯一の違いが存在します。acquireメソッドの最初の引数は&lt;em&gt;block&lt;/em&gt;という名前です。</target>
        </trans-unit>
        <trans-unit id="cf3e702a5afe2e89ff3f3db0ef3665216cfbc631" translate="yes" xml:space="preserve">
          <source>A solution to the first two challenges is to store entries as 3-element list including the priority, an entry count, and the task. The entry count serves as a tie-breaker so that two tasks with the same priority are returned in the order they were added. And since no two entry counts are the same, the tuple comparison will never attempt to directly compare two tasks.</source>
          <target state="translated">最初の2つの課題に対する解決策は、エントリを優先度、エントリ数、タスクを含む3つの要素のリストとして保存することです。エントリカウントは、同じ優先度を持つ2つのタスクが追加された順に返されるように、タイブレークの役割を果たします。また、2つのエントリカウントは同じではないので、タプル比較は2つのタスクを直接比較しようとはしません。</target>
        </trans-unit>
        <trans-unit id="096bd808e501639e423de5a2cbb278cf68ed16b4" translate="yes" xml:space="preserve">
          <source>A special attribute of every module is &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt;. This is the dictionary containing the module&amp;rsquo;s symbol table. Modifying this dictionary will actually change the module&amp;rsquo;s symbol table, but direct assignment to the &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute is not possible (you can write &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt;, which defines &lt;code&gt;m.a&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, but you can&amp;rsquo;t write &lt;code&gt;m.__dict__ = {}&lt;/code&gt;). Modifying &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; directly is not recommended.</source>
          <target state="translated">すべてのモジュールの特別な属性は&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;です。これは、モジュールのシンボルテーブルを含む辞書です。このディクショナリを変更すると、モジュールのシンボルテーブルが実際に変更されますが、 &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt; &lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性に直接割り当てることはできません（m .__ dict __ ['a'] = 1と書くことができます。これは、 &lt;code&gt;m.a&lt;/code&gt; を &lt;code&gt;1&lt;/code&gt; と定義しますが、 &lt;code&gt;m.__dict__ = {}&lt;/code&gt; 書くことはできません。.__ dict__ = {}）。&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; を&lt;/a&gt;直接変更することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="350860d7d2f026325c9ed753e8012e0f492b3cef" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of a return annotation.</source>
          <target state="translated">戻り値アノテーションの不在を指定するための特別なクラスレベル・マーカー。</target>
        </trans-unit>
        <trans-unit id="ce834d784be00653df494feb83b9f6a0fe0232f1" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of default values and annotations.</source>
          <target state="translated">デフォルト値やアノテーションを持たないことを指定するための特別なクラスレベルのマーカー。</target>
        </trans-unit>
        <trans-unit id="637523941475f7686ab8baf723f111f45b51298d" translate="yes" xml:space="preserve">
          <source>A special constant that is assumed to be &lt;code&gt;True&lt;/code&gt; by 3rd party static type checkers. It is &lt;code&gt;False&lt;/code&gt; at runtime. Usage:</source>
          <target state="translated">サードパーティの静的型チェッカーによって &lt;code&gt;True&lt;/code&gt; であると想定される特別な定数。実行時には &lt;code&gt;False&lt;/code&gt; です。使用法：</target>
        </trans-unit>
        <trans-unit id="3279a81827c8b621d38f653bc2a69edd2e98eeb9" translate="yes" xml:space="preserve">
          <source>A special kind of type is &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;. A static type checker will treat every type as being compatible with &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; as being compatible with every type.</source>
          <target state="translated">特別な種類のタイプは&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;です。静的型チェッカーは、と互換性のあるものとして、すべてのタイプを扱う&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;すべてのタイプと互換性があるとして。</target>
        </trans-unit>
        <trans-unit id="dca41668950435a9f7e18c16a1bd901f35d7d3f9" translate="yes" xml:space="preserve">
          <source>A special typing construct to indicate to type checkers that a name cannot be re-assigned or overridden in a subclass. For example:</source>
          <target state="translated">サブクラスで名前を再割り当てしたりオーバーライドしたりすることができないことを型チェッカーに示すための特別な型付け構造体。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c9c5c2d3363e18dd4be009fb8cdb1d42561049b3" translate="yes" xml:space="preserve">
          <source>A special-interest-group for discussion of testing, and testing tools, in Python.</source>
          <target state="translated">Pythonでのテストやテストツールについて議論するための特別な会です。</target>
        </trans-unit>
        <trans-unit id="ad1a92f0cb821225e4017a94010fdf1040669506" translate="yes" xml:space="preserve">
          <source>A specialized alternative to &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt;, for use when deploying on Microsoft&amp;rsquo;s IIS web server, without having set the config allowPathInfo option (IIS&amp;gt;=7) or metabase allowPathInfoForScriptMappings (IIS&amp;lt;7).</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; &lt;/a&gt;の特殊な代替手段で、MicrosoftのIIS Webサーバーにデプロイするときに使用します。configallowPathInfoオプション（IIS&amp;gt; = 7）またはメタベースallowPathInfoForScriptMappings（IIS &amp;lt;7）を設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c4118a2f3f478f32d9f31601e7190c8ce65ab75b" translate="yes" xml:space="preserve">
          <source>A specification for a module&amp;rsquo;s import-system-related state. This is typically exposed as the module&amp;rsquo;s &lt;code&gt;__spec__&lt;/code&gt; attribute. In the descriptions below, the names in parentheses give the corresponding attribute available directly on the module object. E.g. &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt;. Note however that while the &lt;em&gt;values&lt;/em&gt; are usually equivalent, they can differ since there is no synchronization between the two objects. Thus it is possible to update the module&amp;rsquo;s &lt;code&gt;__path__&lt;/code&gt; at runtime, and this will not be automatically reflected in &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt;.</source>
          <target state="translated">モジュールのインポートシステム関連の状態の仕様。これは通常、モジュールの &lt;code&gt;__spec__&lt;/code&gt; 属性として公開されます。以下の説明では、括弧内の名前は、モジュールオブジェクトで直接利用できる対応する属性を示しています。例： &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt; 。ただし、&lt;em&gt;値&lt;/em&gt;は通常同等&lt;em&gt;です&lt;/em&gt;が、2つのオブジェクト間に同期がないため、&lt;em&gt;値&lt;/em&gt;が異なる&lt;em&gt;場合&lt;/em&gt;があることに注意してください。したがって、実行時にモジュールの &lt;code&gt;__path__&lt;/code&gt; を更新することが可能であり、これは &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; 自動的に反映されません。</target>
        </trans-unit>
        <trans-unit id="68f5cd32463c3d785efa4f8d8fce98c066a6f661" translate="yes" xml:space="preserve">
          <source>A specification of MMDF format from the documentation of tin, a newsreader.</source>
          <target state="translated">ニュースリーダーのすずのドキュメントからMMDF形式の仕様。</target>
        </trans-unit>
        <trans-unit id="3babd4b55bc7cb772fec830be58f3b1bf01d70a8" translate="yes" xml:space="preserve">
          <source>A specification of the Babyl format.</source>
          <target state="translated">バビル形式の仕様。</target>
        </trans-unit>
        <trans-unit id="880abe5218724ebf38706b93b963643ddd6c46d2" translate="yes" xml:space="preserve">
          <source>A specification of the format and its variations.</source>
          <target state="translated">フォーマットの仕様とそのバリエーション。</target>
        </trans-unit>
        <trans-unit id="8e598ccfa02f6f982d35271d6d8413a2dcd8d0e9" translate="yes" xml:space="preserve">
          <source>A stack traceback such as is provided by &lt;a href=&quot;traceback#traceback.print_stack&quot;&gt;&lt;code&gt;traceback.print_stack()&lt;/code&gt;&lt;/a&gt;, showing the call hierarchy.</source>
          <target state="translated">&lt;a href=&quot;traceback#traceback.print_stack&quot;&gt; &lt;code&gt;traceback.print_stack()&lt;/code&gt; &lt;/a&gt;によって提供されるようなスタックトレースバックは、呼び出し階層を示します。</target>
        </trans-unit>
        <trans-unit id="920378f02b4726cf356a62a8babd3e02c63917c6" translate="yes" xml:space="preserve">
          <source>A state specification is a sequence of state names, optionally prefixed with an exclamation point indicating that the bit is off.</source>
          <target state="translated">ステート指定とは、ビットがオフであることを示す感嘆符をオプションでプレフィックスした一連のステート名のことです。</target>
        </trans-unit>
        <trans-unit id="6ef4ebab996d1f45a1c0cae57a6fb9b310520e99" translate="yes" xml:space="preserve">
          <source>A static method can be called either on the class (such as &lt;code&gt;C.f()&lt;/code&gt;) or on an instance (such as &lt;code&gt;C().f()&lt;/code&gt;).</source>
          <target state="translated">静的メソッドは、クラス（ &lt;code&gt;C.f()&lt;/code&gt; ）またはインスタンス（ &lt;code&gt;C().f()&lt;/code&gt; など）で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="174b86cd307a93d7ede9985e59dfb55608a534c0" translate="yes" xml:space="preserve">
          <source>A static method does not receive an implicit first argument. To declare a static method, use this idiom:</source>
          <target state="translated">静的メソッドは暗黙の第一引数を受け取りません。静的メソッドを宣言するには、このイディオムを使用します。</target>
        </trans-unit>
        <trans-unit id="858fb724027cfca291b2dfaa1173abe4a25c8c00" translate="yes" xml:space="preserve">
          <source>A static method which returns a callable that creates a lazy loader. This is meant to be used in situations where the loader is passed by class instead of by instance.</source>
          <target state="translated">遅延ローダを作成する callable を返す静的メソッドです。これは、ローダがインスタンスではなくクラスで渡される場合に使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="6598324a6503c84ca67a35b1e37f66321d0cc98b" translate="yes" xml:space="preserve">
          <source>A stream implementation using an in-memory bytes buffer. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;. The buffer is discarded when the &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">インメモリバイトバッファーを使用したスト​​リーム実装。&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; を&lt;/a&gt;継承しています。&lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、バッファは破棄されます。</target>
        </trans-unit>
        <trans-unit id="76435fdba1ae6e1ec5de2745cd624d720dc07d8c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional mask, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the mask can be either a single number, which means it&amp;rsquo;s a &lt;em&gt;prefix&lt;/em&gt;, or a string representation of an IPv4 address. If it&amp;rsquo;s the latter, the mask is interpreted as a &lt;em&gt;net mask&lt;/em&gt; if it starts with a non-zero field, or as a &lt;em&gt;host mask&lt;/em&gt; if it starts with a zero field, with the single exception of an all-zero mask which is treated as a &lt;em&gt;net mask&lt;/em&gt;. If no mask is provided, it&amp;rsquo;s considered to be &lt;code&gt;/32&lt;/code&gt;.</source>
          <target state="translated">スラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で区切られたIPアドレスとオプションのマスクで構成される文字列。 IPアドレスはネットワークアドレスであり、マスクは単一の数値（つまり、&lt;em&gt;プレフィックス&lt;/em&gt;であることを意味し&lt;em&gt;ます&lt;/em&gt;）またはIPv4アドレスの文字列表現のいずれかです。後者の場合、マスクは、ゼロ以外のフィールドで始まる場合は&lt;em&gt;ネットマスク&lt;/em&gt;として解釈され、ゼロフィールドで始まる場合は&lt;em&gt;ホストマスク&lt;/em&gt;として解釈されます。&lt;em&gt;ネットマスク&lt;/em&gt;。マスクが指定されていない場合、 &lt;code&gt;/32&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="78c0c3e7a735e19323cbd003b6b63d79aa63ae1c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional prefix length, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the prefix length must be a single number, the &lt;em&gt;prefix&lt;/em&gt;. If no prefix length is provided, it&amp;rsquo;s considered to be &lt;code&gt;/128&lt;/code&gt;.</source>
          <target state="translated">スラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で区切られた、IPアドレスとオプションのプレフィックス長で構成される文字列。IPアドレスはネットワークアドレスであり、プレフィックスの長さは単一の数字である&lt;em&gt;プレフィックスで&lt;/em&gt;なければなりません。プレフィックス長が指定されていない場合、 &lt;code&gt;/128&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="237deb5e98fd45357a17f1768376efe3e60e90b8" translate="yes" xml:space="preserve">
          <source>A string consisting of eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons. This describes an &lt;em&gt;exploded&lt;/em&gt; (longhand) notation. The string can also be &lt;em&gt;compressed&lt;/em&gt; (shorthand notation) by various means. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt; for details. For example, &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; can be compressed to &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt;.</source>
          <target state="translated">4つの16進数の8つのグループで構成される文字列。各グループは16ビットを表します。グループはコロンで区切られます。これは、説明し&lt;em&gt;た分解&lt;/em&gt;（手書き）表記。文字列は、さまざまな方法で&lt;em&gt;圧縮&lt;/em&gt;（短縮表記）することもできます。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt;を参照してください。たとえば、 &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; は &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt; 圧縮できます。</target>
        </trans-unit>
        <trans-unit id="aef6d4595a0913292c36ecd58b3a3568198db4c5" translate="yes" xml:space="preserve">
          <source>A string containing a diagnostic message associated with the fault.</source>
          <target state="translated">フォルトに関連する診断メッセージを含む文字列。</target>
        </trans-unit>
        <trans-unit id="81b39e8a05161f630901941638fda04c2b6f39c1" translate="yes" xml:space="preserve">
          <source>A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab.</source>
          <target state="translated">空白とみなされるすべての ASCII 文字を含む文字列。これには space,tab,linefeed,return,formfeed,vertical tab という文字が含まれます。</target>
        </trans-unit>
        <trans-unit id="02bf24f6c9f2fbd3f9a2ca3b6ce7459c45d991f7" translate="yes" xml:space="preserve">
          <source>A string containing the copyright pertaining to the Python interpreter.</source>
          <target state="translated">Pythonインタプリタに関連する著作権を含む文字列。</target>
        </trans-unit>
        <trans-unit id="602f371cbcfdb3cf6cfc5a0f24dd9a3734e536d7" translate="yes" xml:space="preserve">
          <source>A string containing the example&amp;rsquo;s source code. This source code consists of a single Python statement, and always ends with a newline; the constructor adds a newline when necessary.</source>
          <target state="translated">例のソースコードを含む文字列。このソースコードは単一のPythonステートメントで構成され、常に改行で終了します。コンストラクタは必要に応じて改行を追加します。</target>
        </trans-unit>
        <trans-unit id="e1f80f8d0c2fd10cd8656f15485d121546bf45d4" translate="yes" xml:space="preserve">
          <source>A string containing the format (in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module style) for each element in the view. A memoryview can be created from exporters with arbitrary format strings, but some methods (e.g. &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist()&lt;/code&gt;&lt;/a&gt;) are restricted to native single element formats.</source>
          <target state="translated">ビューの各要素の形式（&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールスタイル）を含む文字列。メモリビューは、任意のフォーマット文字列を使用してエクスポーターから作成できますが、一部のメソッド（例：&lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist()&lt;/code&gt; &lt;/a&gt;）は、ネイティブの単一要素フォーマットに制限されています。</target>
        </trans-unit>
        <trans-unit id="5497a158149dccf8e4b9ad551b13d3d9fcf2ffc0" translate="yes" xml:space="preserve">
          <source>A string containing the version number of the Python interpreter plus additional information on the build number and compiler used. This string is displayed when the interactive interpreter is started. Do not extract version information out of it, rather, use &lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;version_info&lt;/code&gt;&lt;/a&gt; and the functions provided by the &lt;a href=&quot;platform#module-platform&quot;&gt;&lt;code&gt;platform&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Pythonインタープリターのバージョン番号と、ビルド番号および使用されるコンパイラーに関する追加情報を含む文字列。この文字列は、対話型インタープリターが開始されたときに表示されます。それからバージョン情報を抽出しません、むしろ、使用&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;version_info&lt;/code&gt; &lt;/a&gt;とによって提供される機能&lt;a href=&quot;platform#module-platform&quot;&gt; &lt;code&gt;platform&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="87de8fd8a95197f57121e5b7786f6335363597fb" translate="yes" xml:space="preserve">
          <source>A string describing the software name and version of the NNTP server, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if not advertised by the server.</source>
          <target state="translated">NNTPサーバーのソフトウェア名とバージョンを説明する文字列、またはサーバーから通知されない場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edbd00479009ac29a277bcdb7f7f622f3cf29480" translate="yes" xml:space="preserve">
          <source>A string describing the specific codec error.</source>
          <target state="translated">特定のコーデックエラーを記述する文字列。</target>
        </trans-unit>
        <trans-unit id="5c10f3d5bb16c2fb415030d97d9657d81442e989" translate="yes" xml:space="preserve">
          <source>A string for the fully-qualified name of the module.</source>
          <target state="translated">モジュールの完全修飾名を表す文字列。</target>
        </trans-unit>
        <trans-unit id="bd20de9160337cf7d4615529ad2c990a8d28695a" translate="yes" xml:space="preserve">
          <source>A string giving the absolute path of the executable binary for the Python interpreter, on systems where this makes sense. If Python is unable to retrieve the real path to its executable, &lt;a href=&quot;#sys.executable&quot;&gt;&lt;code&gt;sys.executable&lt;/code&gt;&lt;/a&gt; will be an empty string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">これが理にかなっているシステムでは、Pythonインタープリターの実行可能バイナリの絶対パスを指定する文字列。Pythonが実行可能ファイルへの実際のパスを取得できない場合、&lt;a href=&quot;#sys.executable&quot;&gt; &lt;code&gt;sys.executable&lt;/code&gt; &lt;/a&gt;は空の文字列または &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="82a5b3b17625dc398e0887b40698af61a1e88431" translate="yes" xml:space="preserve">
          <source>A string giving the complete internal subset from the document. This does not include the brackets which enclose the subset. If the document has no internal subset, this should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ドキュメントからの完全な内部サブセットを与える文字列。これには、サブセットを囲むブラケットは含まれません。ドキュメントに内部サブセットがない場合、これは &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="82c2539aafdf888e5c8ef7fece2e98e2d2f074a7" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform independent Python files are installed; by default, this is the string &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. The main collection of Python library modules is installed in the directory &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; while the platform independent header files (all except &lt;code&gt;pyconfig.h&lt;/code&gt;) are stored in &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">プラットフォームに依存しないPythonファイルがインストールされているサイト固有のディレクトリプレフィックスを示す文字列。デフォルトでは、これは文字列 &lt;code&gt;'/usr/local'&lt;/code&gt; です。これは、ビルド時に&lt;strong&gt;configure&lt;/strong&gt;スクリプトの &lt;code&gt;--prefix&lt;/code&gt; 引数で&lt;strong&gt;設定でき&lt;/strong&gt;ます。 Pythonライブラリモジュールのメインコレクションは、ディレクトリ &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; インストールされますが、プラットフォームに依存しないヘッダーファイル（ &lt;code&gt;pyconfig.h&lt;/code&gt; を除くすべて）は、 &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; に保存され&lt;em&gt;ます&lt;/em&gt;。ここで、&lt;em&gt;XY&lt;/em&gt;はPythonのバージョン番号です。たとえば &lt;code&gt;3.2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dbea00c5fe6b20a57a6af3a243d22cb8c28d88f0" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform-dependent Python files are installed; by default, this is also &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--exec-prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. Specifically, all configuration files (e.g. the &lt;code&gt;pyconfig.h&lt;/code&gt; header file) are installed in the directory &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt;, and shared library modules are installed in &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">プラットフォーム依存のPythonファイルがインストールされているサイト固有のディレクトリプレフィックスを示す文字列。デフォルトでは、これも &lt;code&gt;'/usr/local'&lt;/code&gt; です。これは、ビルド時に&lt;strong&gt;configure&lt;/strong&gt;スクリプトの &lt;code&gt;--exec-prefix&lt;/code&gt; 引数で&lt;strong&gt;設定でき&lt;/strong&gt;ます。具体的には、すべての構成ファイル（たとえば &lt;code&gt;pyconfig.h&lt;/code&gt; ヘッダーファイル）が &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt; ディレクトリにインストールされ、共有ライブラリモジュールが &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt; にインストールされます。ここで、&lt;em&gt;XY&lt;/em&gt;はPythonのバージョン番号（例： &lt;code&gt;3.2&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="5c8652dd6a5ac42f8da95a3a336a8e2fe1700b98" translate="yes" xml:space="preserve">
          <source>A string identifying what kind of data this element represents (the element type, in other words).</source>
          <target state="translated">この要素がどのようなデータを表すかを識別する文字列(言い換えれば要素の種類)。</target>
        </trans-unit>
        <trans-unit id="e099a6c12e8ac23155a4c961ffd7c4719169caa2" translate="yes" xml:space="preserve">
          <source>A string in decimal-dot notation, consisting of four decimal integers in the inclusive range 0&amp;ndash;255, separated by dots (e.g. &lt;code&gt;192.168.0.1&lt;/code&gt;). Each integer represents an octet (byte) in the address. Leading zeroes are tolerated only for values less than 8 (as there is no ambiguity between the decimal and octal interpretations of such strings).</source>
          <target state="translated">ドットで区切られた0〜255の範囲の4つの10進整数で構成される10進ドット表記の文字列（例： &lt;code&gt;192.168.0.1&lt;/code&gt; ）。各整数は、アドレスのオクテット（バイト）を表します。先頭のゼロは、8未満の値に対してのみ許容されます（そのような文字列の10進数と8進数の解釈のあいまいさはないため）。</target>
        </trans-unit>
        <trans-unit id="98d779e7a9a7548a374142ec0fd14b12dcce04f0" translate="yes" xml:space="preserve">
          <source>A string indicating how the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function behaves for floats. If the string has value &lt;code&gt;'short'&lt;/code&gt; then for a finite float &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;repr(x)&lt;/code&gt; aims to produce a short string with the property that &lt;code&gt;float(repr(x)) == x&lt;/code&gt;. This is the usual behaviour in Python 3.1 and later. Otherwise, &lt;code&gt;float_repr_style&lt;/code&gt; has value &lt;code&gt;'legacy'&lt;/code&gt; and &lt;code&gt;repr(x)&lt;/code&gt; behaves in the same way as it did in versions of Python prior to 3.1.</source>
          <target state="translated">floatに対する&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;関数の動作を示す文字列。文字列の値が &lt;code&gt;'short'&lt;/code&gt; の場合、有限の浮動小数点 &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;repr(x)&lt;/code&gt; は、 &lt;code&gt;float(repr(x)) == x&lt;/code&gt; のプロパティを持つ短い文字列を生成しようとします。これはPython 3.1以降の通常の動作です。それ以外の場合、 &lt;code&gt;float_repr_style&lt;/code&gt; の値は &lt;code&gt;'legacy'&lt;/code&gt; あり、 &lt;code&gt;repr(x)&lt;/code&gt; は、3.1より前のバージョンのPythonと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2f9a9d4483639b8e4c8302ccccdaba76f46139ac" translate="yes" xml:space="preserve">
          <source>A string indicating the fault type.</source>
          <target state="translated">フォルトタイプを示す文字列。</target>
        </trans-unit>
        <trans-unit id="c2c502f394d7092bcce74de311739e93f611cf7a" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the OpenSSL submodule in which the error occurred, such as &lt;code&gt;SSL&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt; or &lt;code&gt;X509&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">&lt;code&gt;SSL&lt;/code&gt; 、 &lt;code&gt;PEM&lt;/code&gt; 、 &lt;code&gt;X509&lt;/code&gt; など、エラーが発生したOpenSSLサブモジュールを指定する文字列ニーモニック。可能な値の範囲は、OpenSSLのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="430973647ef865594ce46611eb822fdc420d4549" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the reason this error occurred, for example &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">このエラーが発生した理由を示す文字列ニーモニック（ &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt; など)。可能な値の範囲は、OpenSSLのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="ead8e2705a51951c91f9ddcda6d821dc670588f9" translate="yes" xml:space="preserve">
          <source>A string name identifying the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;. Typically, this is the name of the object or file that the test was extracted from.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; を&lt;/a&gt;識別する文字列名。通常、これはテストが抽出されたオブジェクトまたはファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="daef7957ccd37511d60fee6ca46be1ff15a1529c" translate="yes" xml:space="preserve">
          <source>A string of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; read before the end of stream was reached.</source>
          <target state="translated">ストリームの終わりに達する前に読み取られた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;の文字列。</target>
        </trans-unit>
        <trans-unit id="2d32a9df8f0c11fad8fb171523d540f600ab323b" translate="yes" xml:space="preserve">
          <source>A string of the form #n, where n is an integer, specifying the nth display column.</source>
          <target state="translated">nは整数で、n番目の表示列を指定します。</target>
        </trans-unit>
        <trans-unit id="0c4df2b65593c46afd8e675b2cb2d3a19b9a1855" translate="yes" xml:space="preserve">
          <source>A string or a tuple &lt;code&gt;(id, unit)&lt;/code&gt; is used for the &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; protocol of the &lt;code&gt;PF_SYSTEM&lt;/code&gt; family. The string is the name of a kernel control using a dynamically-assigned ID. The tuple can be used if ID and unit number of the kernel control are known or if a registered ID is used.</source>
          <target state="translated">文字列またはタプル &lt;code&gt;(id, unit)&lt;/code&gt; は、 &lt;code&gt;PF_SYSTEM&lt;/code&gt; ファミリの &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; プロトコルに使用されます。文字列は、動的に割り当てられたIDを使用するカーネルコントロールの名前です。タプルは、カーネルコントロールのIDとユニット番号がわかっている場合、または登録済みのIDが使用されている場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="a84ecaf3012782764f7426a5eec841f9b5ad7aba" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the mask in prefix notation.</source>
          <target state="translated">プレフィックス表記でマスクを持つインターフェイスを文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="72998dbff76ca26cb4e1a93d0ac16de996142954" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a host mask.</source>
          <target state="translated">ネットワークとのインターフェースをホストマスクとして文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="7371903e755bf49dda7112025b476547bae7d6ac" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a net mask.</source>
          <target state="translated">ネットワークとのインターフェースをネットマスクとして文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="bf9731d346ddf0d65f9d0c39679778dee1e3fa12" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in host mask notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはホストマスク表記を使用します。</target>
        </trans-unit>
        <trans-unit id="7568a7359cb2750b66d47402cfff82e081404d9b" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in net mask notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはネットマスク記法で表現されます。</target>
        </trans-unit>
        <trans-unit id="316bb3be50867216649ff211d2dca7247c501409" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in prefix notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはプレフィックス表記で表されます。</target>
        </trans-unit>
        <trans-unit id="32e0575ba9f4056eab3aabb998ae5ff3a9f3c8fd" translate="yes" xml:space="preserve">
          <source>A string representing the (local or global) root, if any:</source>
          <target state="translated">(ローカルまたはグローバルの)ルートを表す文字列。</target>
        </trans-unit>
        <trans-unit id="2ed4f64a64d2fb6fad9a60578469fcecde96fc85" translate="yes" xml:space="preserve">
          <source>A string representing the drive letter or name, if any:</source>
          <target state="translated">ドライブの文字または名前を表す文字列(存在する場合)。</target>
        </trans-unit>
        <trans-unit id="06f0d5eec8d1f9fce8676408e0ba9c4fd328f28f" translate="yes" xml:space="preserve">
          <source>A string representing the final path component, excluding the drive and root, if any:</source>
          <target state="translated">最終的なパスコンポーネントを表す文字列で、ドライブとルートがある場合はそれを除外します。</target>
        </trans-unit>
        <trans-unit id="7d594412e6bf530edd194eaef7b660e57dfa27f5" translate="yes" xml:space="preserve">
          <source>A string surrounded by double quotation marks is interpreted as a single argument, regardless of white space contained within. A quoted string can be embedded in an argument.</source>
          <target state="translated">二重引用符で囲まれた文字列は、その中に含まれる空白に関係なく、一つの引数として解釈されます。引用符で囲まれた文字列は、引数に埋め込むことができます。</target>
        </trans-unit>
        <trans-unit id="2066dc66a7df97de21bbc1e433f38dd5b78b7fbb" translate="yes" xml:space="preserve">
          <source>A string that identifies the value name</source>
          <target state="translated">値の名前を識別する文字列</target>
        </trans-unit>
        <trans-unit id="39ff402a5674ecd7c70c6cd0871acdfc556d3c03" translate="yes" xml:space="preserve">
          <source>A string to issue as an intro or banner. May be overridden by giving the &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; method an argument.</source>
          <target state="translated">イントロまたはバナーとして発行する文字列。&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;メソッドに引数を与えることでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="44fcf35da621f4ef926db56e062b11dbffd03933" translate="yes" xml:space="preserve">
          <source>A string used for identification purposes only. It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.</source>
          <target state="translated">識別の目的でのみ使用される文字列。意味を持ちません。複数のスレッドに同じ名前を付けることができます。最初の名前はコンストラクタで設定します。</target>
        </trans-unit>
        <trans-unit id="85f33d1a5e2aa41160314a36dac932215ed021c5" translate="yes" xml:space="preserve">
          <source>A string with all available type codes.</source>
          <target state="translated">利用可能なすべてのタイプコードを含む文字列。</target>
        </trans-unit>
        <trans-unit id="26443c5e3539322fe9c2273c8a56fe833ba27cec" translate="yes" xml:space="preserve">
          <source>A string, a tuple of strings, or &lt;code&gt;None&lt;/code&gt;, indicating the newlines translated so far. Depending on the implementation and the initial constructor flags, this may not be available.</source>
          <target state="translated">これまでに翻訳された改行を示す文字列、文字列のタプル、または &lt;code&gt;None&lt;/code&gt; 。実装と初期コンストラクタフラグによっては、これが使用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="640b082b179874e919a8b0a281dc24c559b3db92" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is aborted by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続試行がピアによって中止されたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNABORTED&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="73ab5331b6ae01254fe730d043adfa27dda78b4e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is refused by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続の試行がピアによって拒否されたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNREFUSED&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="6d2239001f6127e695694a9bd00552f746a9eda6" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection is reset by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続がピアによってリセットされたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNRESET&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="9a2e5d9d43ce04ad29c4fb17b5325b927b2b9208" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when trying to write on a pipe while the other end has been closed, or trying to write on a socket which has been shutdown for writing. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt; and &lt;code&gt;ESHUTDOWN&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。もう一方の端が閉じている間にパイプに書き込もうとしたとき、または書き込みのためにシャットダウンされたソケットに書き込もうとしたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EPIPE&lt;/code&gt; および &lt;code&gt;ESHUTDOWN&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="53f3c34abc78d78f328fd281b87705eb6751b9a7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; which is raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; when a module could not be located. It is also raised when &lt;code&gt;None&lt;/code&gt; is found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールが見つからなかったときに&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;によって発生する&lt;a href=&quot;#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;None&lt;/code&gt; が見つかったときにも発生します。</target>
        </trans-unit>
        <trans-unit id="222e66c57cf05e2439f0427e11ca5b7487c3506e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; that raises an exception as soon as a failure is encountered. If an unexpected exception occurs, an &lt;a href=&quot;#doctest.UnexpectedException&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the original exception. If the output doesn&amp;rsquo;t match, then a &lt;a href=&quot;#doctest.DocTestFailure&quot;&gt;&lt;code&gt;DocTestFailure&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the actual output.</source>
          <target state="translated">障害が発生するとすぐに例外を発生させる&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;のサブクラス。予期しない例外が発生すると、テスト、例、および元の例外を含む&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt; &lt;code&gt;UnexpectedException&lt;/code&gt; &lt;/a&gt;例外が発生します。出力が一致しない場合、&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt; &lt;code&gt;DocTestFailure&lt;/code&gt; &lt;/a&gt;例外が発生し、テスト、例、および実際の出力が含まれます。</target>
        </trans-unit>
        <trans-unit id="561f15934e1163b4237e193715adac94cb87c0b1" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt;&lt;code&gt;AddressHeader&lt;/code&gt;&lt;/a&gt; that adds one additional attribute:</source>
          <target state="translated">1つの追加属性を追加する&lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt; &lt;code&gt;AddressHeader&lt;/code&gt; &lt;/a&gt;のサブクラス：</target>
        </trans-unit>
        <trans-unit id="7f781581e0829cb990d0f16eb16dbe041508d842" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are &lt;em&gt;multipart&lt;/em&gt;. Optional &lt;em&gt;_subtype&lt;/em&gt; defaults to &lt;em&gt;mixed&lt;/em&gt;, but can be used to specify the subtype of the message. A &lt;em&gt;Content-Type&lt;/em&gt; header of &lt;em&gt;multipart/_subtype&lt;/em&gt; will be added to the message object. A &lt;em&gt;MIME-Version&lt;/em&gt; header will also be added.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;のサブクラス。これは、&lt;em&gt;マルチパートの&lt;/em&gt; MIMEメッセージの中間基本クラスです。オプションの&lt;em&gt;_subtypeの&lt;/em&gt;デフォルトは&lt;em&gt;mixed&lt;/em&gt;ですが、メッセージのサブタイプを指定するために使用できます。&lt;em&gt;Content-Type&lt;/em&gt;ヘッダ&lt;em&gt;マルチパート/ _subtypeは&lt;/em&gt;メッセージ・オブジェクトに追加されます。&lt;em&gt;MIMEバージョンの&lt;/em&gt;ヘッダも追加されます。</target>
        </trans-unit>
        <trans-unit id="ee4824f272606ae6cc4c809fb2df5c25368575e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are not &lt;em&gt;multipart&lt;/em&gt;. The primary purpose of this class is to prevent the use of the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; method, which only makes sense for &lt;em&gt;multipart&lt;/em&gt; messages. If &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; is called, a &lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt;&lt;code&gt;MultipartConversionError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;のサブクラス。これは、&lt;em&gt;マルチパート&lt;/em&gt;ではないMIMEメッセージの中間基本クラスです。このクラスの主な目的は、&lt;em&gt;マルチパート&lt;/em&gt;メッセージに対してのみ意味のある&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;メソッドの使用を防ぐことです。場合は&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;と呼ばれ、&lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt; &lt;code&gt;MultipartConversionError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7a8f392a3412438a51c8f0c737eaf469cd9a645" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; class is used to represent MIME message objects of major type &lt;em&gt;application&lt;/em&gt;. &lt;em&gt;_data&lt;/em&gt; is a string containing the raw byte data. Optional &lt;em&gt;_subtype&lt;/em&gt; specifies the MIME subtype and defaults to &lt;em&gt;octet-stream&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプ&lt;em&gt;アプリケーションの&lt;/em&gt; MIMEメッセージオブジェクトを表すために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_data&lt;/em&gt;は、未加工のバイトデータを含む文字列です。オプションの&lt;em&gt;_subtype&lt;/em&gt;はMIMEサブタイプを指定し、デフォルトで&lt;em&gt;octet-streamになります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8853b524d3a42ef795bb232d70818c082d728737" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;audio&lt;/em&gt;. &lt;em&gt;_audiodata&lt;/em&gt; is a string containing the raw audio data. If this data can be decoded by the standard Python module &lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt;&lt;code&gt;sndhdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the audio subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプが&lt;em&gt;audioの&lt;/em&gt; MIMEメッセージオブジェクトを作成するために使用されます。&lt;em&gt;_audiodata&lt;/em&gt;は、生のオーディオデータを含む文字列です。このデータを標準のPythonモジュール&lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt; &lt;code&gt;sndhdr&lt;/code&gt; &lt;/a&gt;でデコードできる場合、サブタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに自動的に含まれます。それ以外の場合は、&lt;em&gt;_subtype&lt;/em&gt;引数を使用してオーディオサブタイプを明示的に指定できます。マイナータイプを推測できず、&lt;em&gt;_subtype&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a76383a2a93d9794da9b01ccefe023baee5d2eb5" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;image&lt;/em&gt;. &lt;em&gt;_imagedata&lt;/em&gt; is a string containing the raw image data. If this data can be decoded by the standard Python module &lt;a href=&quot;imghdr#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the image subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプが&lt;em&gt;imageの&lt;/em&gt; MIMEメッセージオブジェクトを作成するために使用されます。&lt;em&gt;_imagedata&lt;/em&gt;は、生の画像データを含む文字列です。このデータを標準のPythonモジュール&lt;a href=&quot;imghdr#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;でデコードできる場合、サブタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに自動的に含まれます。それ以外の場合は、&lt;em&gt;_subtype&lt;/em&gt;引数を使用して画像のサブタイプを明示的に指定できます。マイナータイプを推測できず、&lt;em&gt;_subtype&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a9234b5d253e940123aa4c9a0f87439815009184" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt;&lt;code&gt;MIMEMessage&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of main type &lt;em&gt;message&lt;/em&gt;. &lt;em&gt;_msg&lt;/em&gt; is used as the payload, and must be an instance of class &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; (or a subclass thereof), otherwise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt; &lt;code&gt;MIMEMessage&lt;/code&gt; &lt;/a&gt;クラスは、メインタイプが&lt;em&gt;メッセージの&lt;/em&gt; MIMEオブジェクトを作成するために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_msg&lt;/em&gt;はペイロードとして使用され、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラス（またはそのサブクラス）のインスタンスでなければなりません。そうでない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="3161c9179debd4f7d6df131db3c1815ed54800e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of major type &lt;em&gt;text&lt;/em&gt;. &lt;em&gt;_text&lt;/em&gt; is the string for the payload. &lt;em&gt;_subtype&lt;/em&gt; is the minor type and defaults to &lt;em&gt;plain&lt;/em&gt;. &lt;em&gt;_charset&lt;/em&gt; is the character set of the text and is passed as an argument to the &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt; constructor; it defaults to &lt;code&gt;us-ascii&lt;/code&gt; if the string contains only &lt;code&gt;ascii&lt;/code&gt; code points, and &lt;code&gt;utf-8&lt;/code&gt; otherwise. The &lt;em&gt;_charset&lt;/em&gt; parameter accepts either a string or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプが&lt;em&gt;textの&lt;/em&gt; MIMEオブジェクトを作成するために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_text&lt;/em&gt;は、ペイロードの文字列です。&lt;em&gt;_subtype&lt;/em&gt;はマイナータイプで、デフォルトは&lt;em&gt;plain&lt;/em&gt;です。&lt;em&gt;_charset&lt;/em&gt;はテキストの文字セットで、引数として&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;コンストラクターに渡されます。文字列に &lt;code&gt;ascii&lt;/code&gt; コードポイントのみが含まれている場合はデフォルトで &lt;code&gt;us-ascii&lt;/code&gt; になり、それ以外の場合は &lt;code&gt;utf-8&lt;/code&gt; になります。&lt;em&gt;_charsetの&lt;/em&gt;パラメータ文字列またはいずれか受け入れる&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスを。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43b95a03a2324568afb62decc2f58316824119be" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; that uses SSL for communication with secure servers. Default port is &lt;code&gt;443&lt;/code&gt;. If &lt;em&gt;context&lt;/em&gt; is specified, it must be a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance describing the various SSL options.</source>
          <target state="translated">セキュアサーバーとの通信にSSLを使用する&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt;のサブクラス。デフォルトのポートは &lt;code&gt;443&lt;/code&gt; です。&lt;em&gt;コンテキスト&lt;/em&gt;を指定する場合は、さまざまなSSLオプションを説明する&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;インスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="7bf644cd1aad145a3aa43ee0250025e9df724f72" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;, raised if a port is given and is either non-numeric or empty.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。ポートが指定され、数値でないか空の場合に発生します。</target>
        </trans-unit>
        <trans-unit id="0aab6c24af3dcd985f80023bae2e93b04faff96c" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="aa5fefe570554e4bd2277e00d553af0f206f08c0" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if a server responds with a HTTP status code that we don&amp;rsquo;t understand.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。サーバーが、理解できないHTTPステータスコードで応答した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="666637de6b4e0b5e5cc67cbbb892eef7e1644dad" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if an excessively long line is received in the HTTP protocol from the server.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。サーバーからHTTPプロトコルで過度に長い行を受信した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f44a0b9f57e50137cb8e15ddcd43d03893edce26" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt;&lt;code&gt;ImproperConnectionState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt; &lt;code&gt;ImproperConnectionState&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="29db90dbf583d1a27b500d573a47d6c5b0ee449d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Babyl format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Babyl形式のメール&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;用のMailboxのサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。&lt;em&gt;factory&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt; &lt;code&gt;BabylMessage&lt;/code&gt; &lt;/a&gt;がデフォルトのメッセージ表現として使用されます。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="5af2e2732c7181fc36ed83d98f0af92e460cbe98" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MH format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MH形式のメール&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;用のMailboxのサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.MHMessage&quot;&gt; &lt;code&gt;MHMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="0fd3ef2fae5b24d18c1176dd0499befaf845516b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MMDF format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MMDF形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="92230b6718b8395f043cbdcaeb410fb38bf56f9f" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Maildir format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Maildir形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt; &lt;code&gt;MaildirMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="b1e96b979a7ade703d26a2f68e58f4220e80f537" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in mbox format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">mbox形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。&lt;em&gt;factory&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt;がデフォルトのメッセージ表現として使用されます。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="e91afc87f4c90d053ee511b94bc062b870505830" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the synchronization of processes. Objects of this type are returned by &lt;code&gt;multiprocessing.Manager()&lt;/code&gt;.</source>
          <target state="translated">プロセスの同期に使用できる&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;のサブクラス。このタイプのオブジェクトは &lt;code&gt;multiprocessing.Manager()&lt;/code&gt; によって返されます。</target>
        </trans-unit>
        <trans-unit id="0baa77c5c3f931861b3c6e87c3ba1ac461b5a0fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt;&lt;code&gt;PurePosixPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt; &lt;code&gt;PurePosixPath&lt;/code&gt; の&lt;/a&gt;サブクラスであるこのクラスは、Windows以外の具体的なファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="bbae0175d81f10a8b69cdca941e43651b40075fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt;&lt;code&gt;PureWindowsPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt; &lt;code&gt;PureWindowsPath&lt;/code&gt; の&lt;/a&gt;サブクラスであるこのクラスは、具体的なWindowsファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="787d261e83a0bc5621effc394a2c8c29f282bc76" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this class represents concrete paths of the system&amp;rsquo;s path flavour (instantiating it creates either a &lt;a href=&quot;#pathlib.PosixPath&quot;&gt;&lt;code&gt;PosixPath&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#pathlib.WindowsPath&quot;&gt;&lt;code&gt;WindowsPath&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのクラスは、システムのパスフレーバーの具体的なパスを表します（インスタンス化すると、&lt;a href=&quot;#pathlib.PosixPath&quot;&gt; &lt;code&gt;PosixPath&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pathlib.WindowsPath&quot;&gt; &lt;code&gt;WindowsPath&lt;/code&gt; &lt;/a&gt;が作成されます）。</target>
        </trans-unit>
        <trans-unit id="8ddea0c5102be5b806c8ed7af1f7b85163c67c30" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのパスフレーバーは、Windowsファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="9b2ac853b70b451f55dd69ebee77fa87ae957266" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのパスフレーバーは、Windows以外のファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="da15c413fbd27cd71985084c119de705e2d3928d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which accepts a &lt;em&gt;filename&lt;/em&gt; instead of a dict-like object. The underlying file will be opened using &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;. By default, the file will be created and opened for both read and write. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as for the &lt;a href=&quot;#shelve.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The optional &lt;em&gt;protocol&lt;/em&gt; and &lt;em&gt;writeback&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">dictのようなオブジェクトの代わりに&lt;em&gt;ファイル名&lt;/em&gt;を受け入れる&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;のサブクラス。基礎となるファイルは、&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; &lt;/a&gt;を使用して開かれます。デフォルトでは、ファイルは作成され、読み取りと書き込みの両方で開かれます。オプションの&lt;em&gt;フラグ&lt;/em&gt;パラメータの解釈は、&lt;a href=&quot;#shelve.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数の場合と同じです。オプションの&lt;em&gt;プロトコル&lt;/em&gt;と&lt;em&gt;書き戻し&lt;/em&gt;パラメーターの解釈は、&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;クラスと同じです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0aeb538670652c08b0771e1a034d7b75ae61240" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which exposes &lt;code&gt;first()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;previous()&lt;/code&gt;, &lt;code&gt;last()&lt;/code&gt; and &lt;code&gt;set_location()&lt;/code&gt; which are available in the third-party &lt;code&gt;bsddb&lt;/code&gt; module from &lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt; but not in other database modules. The &lt;em&gt;dict&lt;/em&gt; object passed to the constructor must support those methods. This is generally accomplished by calling one of &lt;code&gt;bsddb.hashopen()&lt;/code&gt;, &lt;code&gt;bsddb.btopen()&lt;/code&gt; or &lt;code&gt;bsddb.rnopen()&lt;/code&gt;. The optional &lt;em&gt;protocol&lt;/em&gt;, &lt;em&gt;writeback&lt;/em&gt;, and &lt;em&gt;keyencoding&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt;からサードパーティの &lt;code&gt;bsddb&lt;/code&gt; モジュールで利用可能ですが、他のデータベースモジュールでは利用できない &lt;code&gt;first()&lt;/code&gt; 、 &lt;code&gt;next()&lt;/code&gt; 、 &lt;code&gt;previous()&lt;/code&gt; 、 &lt;code&gt;last()&lt;/code&gt; 、および &lt;code&gt;set_location()&lt;/code&gt; を公​​開する&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;em&gt;辞書の&lt;/em&gt;コンストラクタに渡されたオブジェクトは、それらのメソッドをサポートしている必要があります。これは通常、 &lt;code&gt;bsddb.hashopen()&lt;/code&gt; 、 &lt;code&gt;bsddb.btopen()&lt;/code&gt; 、または &lt;code&gt;bsddb.rnopen()&lt;/code&gt; のいずれかを呼び出すことによって行われます。オプションの&lt;em&gt;protocol&lt;/em&gt;、&lt;em&gt;writeback&lt;/em&gt;、および&lt;em&gt;keyencoding&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;パラメータの解釈は、&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;クラスと同じです。</target>
        </trans-unit>
        <trans-unit id="b5a6a5a8e4ac7a866442add5f93595a47b720d39" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be received on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">データの読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングSSLソケット&lt;/a&gt;によって発生した&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラスですが、要求が満たされる前に、基礎となるTCPトランスポートでより多くのデータを受信する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7a0502de90f1d3ad7d32c2d3885ee66ffde0a82" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be sent on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">データの読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングSSLソケット&lt;/a&gt;によって発生した&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラスですが、要求が満たされる前に、基礎となるTCPトランスポートでさらにデータを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="deb9b7c208558761cda50ba30ba55c811e5e68df" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when a system error was encountered while trying to fulfill an operation on a SSL socket. Unfortunately, there is no easy way to inspect the original errno number.</source>
          <target state="translated">SSLソケットで操作を実行しようとしたときにシステムエラーが発生したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。残念ながら、元のerrno番号を検査する簡単な方法はありません。</target>
        </trans-unit>
        <trans-unit id="cdaf83ff67869c648bea2aee22f2a5a8799d1318" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when certificate validation has failed.</source>
          <target state="translated">証明書の検証が失敗したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="6d26e7b54f4342d502899a32b1ea75ad227410a2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when the SSL connection has been terminated abruptly. Generally, you shouldn&amp;rsquo;t try to reuse the underlying transport when this error is encountered.</source>
          <target state="translated">SSL接続が突然終了したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。通常、このエラーが発生した場合は、基になるトランスポートを再利用しないでください。</target>
        </trans-unit>
        <trans-unit id="cca4beee81e582bd9b978d6e698d6235139ca79b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when trying to read or write and the SSL connection has been closed cleanly. Note that this doesn&amp;rsquo;t mean that the underlying transport (read TCP) has been closed.</source>
          <target state="translated">読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラスが発生し、SSL接続が完全に閉じられました。これは、基盤となるトランスポート（TCPの読み取り）が閉じていることを意味するものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4aa94e1172b28188f84a19de0a4d78757ffac0c8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;collections.abc.MutableMapping&lt;/code&gt;&lt;/a&gt; which stores pickled values in the &lt;em&gt;dict&lt;/em&gt; object.</source>
          <target state="translated">&lt;em&gt;dict&lt;/em&gt;オブジェクトに&lt;em&gt;ピクルさ&lt;/em&gt;れた値を格納する&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;collections.abc.MutableMapping&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c2ed8fc70c7865de761f0bbee19c244ff6cb7f7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; that defines a set of HTTP status codes, reason phrases and long descriptions written in English.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;のサブクラスで、英語で記述された一連のHTTPステータスコード、理由句、詳細説明を定義します。</target>
        </trans-unit>
        <trans-unit id="13c7263f4c0b3d090a1a151575ff100ac91b1329" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt;&lt;code&gt;ConnectionResetError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.client.BadStatusLine&quot;&gt;&lt;code&gt;BadStatusLine&lt;/code&gt;&lt;/a&gt;. Raised by &lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt;&lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt;&lt;/a&gt; when the attempt to read the response results in no data read from the connection, indicating that the remote end has closed the connection.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt; &lt;code&gt;ConnectionResetError&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.client.BadStatusLine&quot;&gt; &lt;code&gt;BadStatusLine&lt;/code&gt; の&lt;/a&gt;サブクラス。応答を読み取ろうとした結果、接続からデータが読み取られなかった場合に&lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt; &lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt; &lt;/a&gt;によって発生し、リモートエンドが接続を閉じたことを示します。</target>
        </trans-unit>
        <trans-unit id="ce340e4f4e3ab133da20d657ffb3540199636ab2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="edea97afc9f60e0d9cc4a419734e1ca06a2daac2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors by &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(error, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;error&lt;/em&gt;, as returned by the &lt;code&gt;gai_strerror()&lt;/code&gt; C function. The numeric &lt;em&gt;error&lt;/em&gt; value will match one of the &lt;code&gt;EAI_*&lt;/code&gt; constants defined in this module.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;のサブクラス。この例外は、アドレス関連のエラーに対して&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; &lt;/a&gt;によって発生します。付随する値は、ライブラリ呼び出しによって返されるエラーを表すペア &lt;code&gt;(error, string)&lt;/code&gt; です。&lt;em&gt;string&lt;/em&gt;は、 &lt;code&gt;gai_strerror()&lt;/code&gt; C関数によって返される&lt;em&gt;エラー&lt;/em&gt;の説明を表します。数値&lt;em&gt;エラー&lt;/em&gt;値は、このモジュールで定義されている &lt;code&gt;EAI_*&lt;/code&gt; 定数の1つと一致します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="460111a7ddfae31cdbd537e0ced5a7ef202f5c3b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors, i.e. for functions that use &lt;em&gt;h_errno&lt;/em&gt; in the POSIX C API, including &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.gethostbyaddr&quot;&gt;&lt;code&gt;gethostbyaddr()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(h_errno, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;h_errno&lt;/em&gt; is a numeric value, while &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;h_errno&lt;/em&gt;, as returned by the &lt;code&gt;hstrerror()&lt;/code&gt; C function.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは&lt;/a&gt;、この例外が機能するために、すなわち、アドレス関連のエラーを上昇させ、その使用&lt;em&gt;はh_errno&lt;/em&gt;含むPOSIX C APIで、&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#socket.gethostbyaddr&quot;&gt; &lt;code&gt;gethostbyaddr()&lt;/code&gt; &lt;/a&gt;。付随する値は、ライブラリ呼び出しによって返されたエラーを表すペア &lt;code&gt;(h_errno, string)&lt;/code&gt; です。&lt;em&gt;h_errnoは&lt;/em&gt;ながら、数値である&lt;em&gt;文字列は&lt;/em&gt;の説明を表し&lt;em&gt;はh_errno&lt;/em&gt;によって返される、 &lt;code&gt;hstrerror()&lt;/code&gt; C関数。</target>
        </trans-unit>
        <trans-unit id="16ac8179359652826137cc9c838ce6bab8ea4d95" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised when a timeout occurs on a socket which has had timeouts enabled via a prior call to &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; (or implicitly through &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;). The accompanying value is a string whose value is currently always &amp;ldquo;timed out&amp;rdquo;.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは、&lt;/a&gt;タイムアウトがタイムアウトが前の呼び出しによって有効になってきたソケット上で発生した場合に、この例外が発生し&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;（または暗黙的に通じ&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; &lt;/a&gt;）。付随する値は、現在常に「タイムアウト」している文字列です。</target>
        </trans-unit>
        <trans-unit id="f96ed9be119db1899cc5804240cbdf4a813fc7bf" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb5ef21196f6e1a2c30359a542bb0586ed94ec11" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the management of shared memory blocks across processes.</source>
          <target state="translated">プロセス全体の共有メモリブロックの管理に使用できる&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="c0a3fd34e2e67d00717d8e3c38e690bba5eea283" translate="yes" xml:space="preserve">
          <source>A subclass of the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Subclasses of &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;mailbox.Message&lt;/code&gt;&lt;/a&gt; add mailbox-format-specific state and behavior.</source>
          <target state="translated">&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; の&lt;/a&gt;サブクラス。&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;mailbox.Message&lt;/code&gt; の&lt;/a&gt;サブクラスは、メールボックス形式固有の状態と動作を追加します。</target>
        </trans-unit>
        <trans-unit id="0cc4659320a48a69121a5fa046a90e0829d536e4" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract classmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;のサブクラスであり、抽象classmethodを示します。それ以外は、&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="dd7d67ccc4aa0cf39a782287b771bae713632ff3" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;, indicating an abstract property.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;のサブクラス。抽象プロパティを示します。</target>
        </trans-unit>
        <trans-unit id="8a21eea0a51db85132800cd0d541c1dd336c3b80" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract staticmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抽象staticmethodを示す、組み込み&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;のサブクラス。それ以外は、&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="d14fd32086bd068d574c0f68fc7877ff0baa0946" translate="yes" xml:space="preserve">
          <source>A subclass of tuple, holding &lt;code&gt;(columns, lines)&lt;/code&gt; of the terminal window size.</source>
          <target state="translated">端末ウィンドウサイズの &lt;code&gt;(columns, lines)&lt;/code&gt; を保持するタプルのサブクラス。</target>
        </trans-unit>
        <trans-unit id="40c70036708915cb7b3b17bae711c17136488656" translate="yes" xml:space="preserve">
          <source>A suitable launcher can be as simple as the following:</source>
          <target state="translated">適切なランチャーは、以下のような簡単なものがあります。</target>
        </trans-unit>
        <trans-unit id="901d66f5c7da60879c19407e1a1bc52a3389e89b" translate="yes" xml:space="preserve">
          <source>A symbolic name from the list of columns option.</source>
          <target state="translated">列のリストオプションからのシンボリック名。</target>
        </trans-unit>
        <trans-unit id="0aafdc4544b71b33d0122eb7e7355cb89beef590" translate="yes" xml:space="preserve">
          <source>A synchronized wrapper will have two methods in addition to those of the object it wraps: &lt;code&gt;get_obj()&lt;/code&gt; returns the wrapped object and &lt;code&gt;get_lock()&lt;/code&gt; returns the lock object used for synchronization.</source>
          <target state="translated">同期されたラッパーには、ラップするオブジェクトのメソッドに加えて、2つのメソッドがあります &lt;code&gt;get_obj()&lt;/code&gt; はラップされたオブジェクトを返し、 &lt;code&gt;get_lock()&lt;/code&gt; は同期に使用されるロックオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="82cc7a6bf5190503a986720cfd373d63486c2b10" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, maintained for backwards compatibility.</source>
          <target state="translated">&lt;a href=&quot;#wave.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; の&lt;/a&gt;同義語。下位互換性のために維持されています。</target>
        </trans-unit>
        <trans-unit id="02478b669d3bd5d812ec4b032b7561d572de56eb" translate="yes" xml:space="preserve">
          <source>A test case can contain any number of subtest declarations, and they can be arbitrarily nested.</source>
          <target state="translated">テストケースには、任意の数のサブテスト宣言を含めることができ、それらは任意の入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="f92c13e79833a8c6766ec8c4d07e210948282e0b" translate="yes" xml:space="preserve">
          <source>A test case instance is created for each method named by &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt;. By default these are the method names beginning with &lt;code&gt;test&lt;/code&gt;. If &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt; returns no methods, but the &lt;code&gt;runTest()&lt;/code&gt; method is implemented, a single test case is created for that method instead.</source>
          <target state="translated">テストケースインスタンスは、&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; で&lt;/a&gt;指定されたメソッドごとに作成されます。デフォルトでは、これらは &lt;code&gt;test&lt;/code&gt; で始まるメソッド名です。場合&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; が&lt;/a&gt;ない方法を返さないが、 &lt;code&gt;runTest()&lt;/code&gt; メソッドが実装され、単一のテストケースではなく、その方法のために作成されます。</target>
        </trans-unit>
        <trans-unit id="d317a4bfcfe51b412aa9411ee48602a7d363041a" translate="yes" xml:space="preserve">
          <source>A testcase is created by subclassing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. The three individual tests are defined with methods whose names start with the letters &lt;code&gt;test&lt;/code&gt;. This naming convention informs the test runner about which methods represent tests.</source>
          <target state="translated">テストケースは、&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;をサブクラス化することによって作成されます。3つの個別のテストは、名前が &lt;code&gt;test&lt;/code&gt; で始まるメソッドで定義されます。この命名規則は、テストを表すメソッドについてテストランナーに通知します。</target>
        </trans-unit>
        <trans-unit id="8d3b705f209b67c83fbd25ef3e195fdfb5b667ff" translate="yes" xml:space="preserve">
          <source>A thread can be &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;ed many times.</source>
          <target state="translated">スレッドは何度も&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; する&lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="d19f0702d7d43132fd514f9840815fdd1c4aabff" translate="yes" xml:space="preserve">
          <source>A thread can be flagged as a &amp;ldquo;daemon thread&amp;rdquo;. The significance of this flag is that the entire Python program exits when only daemon threads are left. The initial value is inherited from the creating thread. The flag can be set through the &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; property or the &lt;em&gt;daemon&lt;/em&gt; constructor argument.</source>
          <target state="translated">スレッドには、「デーモンスレッド」としてフラグを設定できます。このフラグの重要な点は、デーモンスレッドだけが残されると、Pythonプログラム全体が終了することです。初期値は作成スレッドから継承されます。フラグは、&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;プロパティまたは&lt;em&gt;デーモン&lt;/em&gt;コンストラクター引数を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="25906c1adefe9dc6f1af3c23b40a096b717f95c3" translate="yes" xml:space="preserve">
          <source>A thread has a name. The name can be passed to the constructor, and read or changed through the &lt;a href=&quot;#threading.Thread.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">スレッドには名前があります。名前をコンストラクターに渡し、&lt;a href=&quot;#threading.Thread.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性を介して読み取りまたは変更できます。</target>
        </trans-unit>
        <trans-unit id="59162599aeff6bb14e020356fd4da69fe0944c86" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;call_soon()&lt;/code&gt;&lt;/a&gt;. Must be used to schedule callbacks &lt;em&gt;from another thread&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;call_soon()&lt;/code&gt; の&lt;/a&gt;スレッドセーフなバリアント。&lt;em&gt;別のスレッドからの&lt;/em&gt;コールバックをスケジュールするために使用する必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0a0f8b6355c0ad572860ca714f63148feabbb464" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; の&lt;/a&gt;スレッドセーフなバリアント。</target>
        </trans-unit>
        <trans-unit id="34a103e628ad77f1efb119c2d023c898bf9e7287" translate="yes" xml:space="preserve">
          <source>A timeout can be specified for communication with the SMTP server using the &lt;em&gt;timeout&lt;/em&gt; argument.</source>
          <target state="translated">&lt;em&gt;timeout&lt;/em&gt;引数を使用して、SMTPサーバーとの通信にタイムアウトを指定できます。</target>
        </trans-unit>
        <trans-unit id="f1fce953788cab29b4471f03f788eeca368e6c43" translate="yes" xml:space="preserve">
          <source>A traceback contains at least &lt;code&gt;1&lt;/code&gt; frame. If the &lt;code&gt;tracemalloc&lt;/code&gt; module failed to get a frame, the filename &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; at line number &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">トレースバックには少なくとも &lt;code&gt;1&lt;/code&gt; つのフレームが含まれます。 &lt;code&gt;tracemalloc&lt;/code&gt; モジュールがフレームの取得に失敗した場合、行番号 &lt;code&gt;0&lt;/code&gt; のファイル名 &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="bc2646e6288204043218b877ba68e1e8e8475d31" translate="yes" xml:space="preserve">
          <source>A trailing newline is stripped from the output. The exit code for the command can be interpreted as the return code of subprocess. Example:</source>
          <target state="translated">出力から末尾の改行が取り除かれます。コマンドの終了コードは、サブプロセスの戻りコードとして解釈することができます。例</target>
        </trans-unit>
        <trans-unit id="c3c80f1590f49a12cd65c7f83bc6002d79bb9851" translate="yes" xml:space="preserve">
          <source>A transport for datagram (UDP) connections.</source>
          <target state="translated">データグラム(UDP)接続用のトランスポート。</target>
        </trans-unit>
        <trans-unit id="0d926f53bff6bd280c6eee22bfcab053408f0198" translate="yes" xml:space="preserve">
          <source>A tuple &lt;code&gt;(interface, )&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_CAN&quot;&gt;&lt;code&gt;AF_CAN&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;interface&lt;/em&gt; is a string representing a network interface name like &lt;code&gt;'can0'&lt;/code&gt;. The network interface name &lt;code&gt;''&lt;/code&gt; can be used to receive packets from all network interfaces of this family.</source>
          <target state="translated">タプル &lt;code&gt;(interface, )&lt;/code&gt; は&lt;a href=&quot;#socket.AF_CAN&quot;&gt; &lt;code&gt;AF_CAN&lt;/code&gt; &lt;/a&gt;アドレスファミリに使用されます。ここで、&lt;em&gt;interface&lt;/em&gt;は &lt;code&gt;'can0'&lt;/code&gt; のようなネットワークインターフェイス名を表す文字列です。ネットワークインターフェイス名 &lt;code&gt;''&lt;/code&gt; を使用して、このファミリのすべてのネットワークインターフェイスからパケットを受信できます。</target>
        </trans-unit>
        <trans-unit id="5988ddff5a11a83cbde32c03ed0f71ddbc332862" translate="yes" xml:space="preserve">
          <source>A tuple containing information about the unexpected exception, as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される、予期しない例外に関する情報を含むタプル。</target>
        </trans-unit>
        <trans-unit id="b602eebfd1018b4f9a83a4accab01ad6f39d7ed0" translate="yes" xml:space="preserve">
          <source>A tuple containing the exceptions that can be raised by each of the supported modules, with a unique exception also named &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; as the first item &amp;mdash; the latter is used when &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">サポートされている各モジュールで発生する可能性のある例外を含むタプル。最初の項目として&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;とも呼ばれる一意の例外があり、後者は&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;が発生したときに使用されます。</target>
        </trans-unit>
        <trans-unit id="611ad0213bdcbdea64e69b9c88ff862172a42e89" translate="yes" xml:space="preserve">
          <source>A tuple containing the five components of the version number: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, &lt;em&gt;micro&lt;/em&gt;, &lt;em&gt;releaselevel&lt;/em&gt;, and &lt;em&gt;serial&lt;/em&gt;. All values except &lt;em&gt;releaselevel&lt;/em&gt; are integers; the release level is &lt;code&gt;'alpha'&lt;/code&gt;, &lt;code&gt;'beta'&lt;/code&gt;, &lt;code&gt;'candidate'&lt;/code&gt;, or &lt;code&gt;'final'&lt;/code&gt;. The &lt;code&gt;version_info&lt;/code&gt; value corresponding to the Python version 2.0 is &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt;. The components can also be accessed by name, so &lt;code&gt;sys.version_info[0]&lt;/code&gt; is equivalent to &lt;code&gt;sys.version_info.major&lt;/code&gt; and so on.</source>
          <target state="translated">バージョン番号の5つのコンポーネントを含むタプル：&lt;em&gt;major&lt;/em&gt;、&lt;em&gt;minor&lt;/em&gt;、&lt;em&gt;micro&lt;/em&gt;、&lt;em&gt;releaselevel&lt;/em&gt;、および&lt;em&gt;serial&lt;/em&gt;。&lt;em&gt;releaselevel&lt;/em&gt;を除くすべての値は整数です。リリースレベルは &lt;code&gt;'alpha'&lt;/code&gt; 、 &lt;code&gt;'beta'&lt;/code&gt; 、 &lt;code&gt;'candidate'&lt;/code&gt; または &lt;code&gt;'final'&lt;/code&gt; です。 &lt;code&gt;version_info&lt;/code&gt; Pythonバージョン2.0に対応した値である &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt; 。コンポーネントには名前でアクセスすることもできるため、 &lt;code&gt;sys.version_info[0]&lt;/code&gt; は &lt;code&gt;sys.version_info.major&lt;/code&gt; などと同等です。</target>
        </trans-unit>
        <trans-unit id="284eb8c9c8f7dcb877a69beef6d52a20881200c4" translate="yes" xml:space="preserve">
          <source>A tuple giving access to the path&amp;rsquo;s various components:</source>
          <target state="translated">パスのさまざまなコンポーネントへのアクセスを提供するタプル：</target>
        </trans-unit>
        <trans-unit id="9d0fd49c7efc6a159b31facd122d6218b19f8941" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects encoding all of the individual addresses from the header value. If the header value contains any groups, the individual addresses from the group are included in the list at the point where the group occurs in the value (that is, the list of addresses is &amp;ldquo;flattened&amp;rdquo; into a one dimensional list).</source>
          <target state="translated">ヘッダー値からの個々のアドレスすべてをエンコードする&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。ヘッダー値にグループが含まれている場合、グループの個々のアドレスは、グループが値に出現する位置でリストに含まれます（つまり、アドレスのリストは1次元のリストに「フラット化」されます）。</target>
        </trans-unit>
        <trans-unit id="9de5ed9ccb63c492c379c7b0498153b757927080" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects encoding the addresses and groups found in the header value. Addresses that are not part of a group are represented in this list as single-address &lt;code&gt;Groups&lt;/code&gt; whose &lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt;&lt;code&gt;display_name&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ヘッダー値にあるアドレスとグループをエンコードする&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。グループの一部ではないアドレスは、&lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt; &lt;code&gt;display_name&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; の単一アドレス &lt;code&gt;Groups&lt;/code&gt; としてこのリストに表示されます。</target>
        </trans-unit>
        <trans-unit id="a0a272709593e4d4502563708916d90098e672e4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt; is returned on success.</source>
          <target state="translated">成功すると &lt;code&gt;(transport, protocol)&lt;/code&gt; タプルが返されます。</target>
        </trans-unit>
        <trans-unit id="f2a76b51f711aaca7e10b1eba70b8efe797baf47" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;HeaderDefect&lt;/code&gt; instances reporting any RFC compliance problems found during parsing. The email package tries to be complete about detecting compliance issues. See the &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module for a discussion of the types of defects that may be reported.</source>
          <target state="translated">解析中に検出されたRFC準拠の問題を報告する &lt;code&gt;HeaderDefect&lt;/code&gt; インスタンスのタプル。電子メールパッケージは、コンプライアンスの問題の検出について完全であることを試みます。報告される可能性のある欠陥の種類については、&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f5bfec0411b160b69074925d29affee86ab7b1b4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;column&lt;/em&gt; numbers, specifying where the error occurred.</source>
          <target state="translated">エラーが発生した場所を指定する、&lt;em&gt;行&lt;/em&gt;番号、&lt;em&gt;列&lt;/em&gt;番号のタプル。</target>
        </trans-unit>
        <trans-unit id="ac45160c628e9f17de9bd53926058b4dfa965527" translate="yes" xml:space="preserve">
          <source>A tuple of arguments for the callable object. An empty tuple must be given if the callable does not accept any argument.</source>
          <target state="translated">呼び出し可能なオブジェクトの引数のタプル。呼び出し可能オブジェクトが引数を受け付けない場合は、空のタプルを与えなければなりません。</target>
        </trans-unit>
        <trans-unit id="5cd0c1bc3b7430c4dc325b20146a15127227c071" translate="yes" xml:space="preserve">
          <source>A tuple of five integers representing version information about the OpenSSL library:</source>
          <target state="translated">OpenSSL ライブラリのバージョン情報を表す 5 つの整数のタプル。</target>
        </trans-unit>
        <trans-unit id="5235a223fb55cc8323b6b967311c62c5e4afc221" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the shape of the memory as an N-dimensional array.</source>
          <target state="translated">&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;の長さの整数のタプルで、メモリの形状をN次元配列として提供します。</target>
        </trans-unit>
        <trans-unit id="f5e4a5c5c0f872da9ef405f61b1402fa7e827fcc" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the size in bytes to access each element for each dimension of the array.</source>
          <target state="translated">配列の各次元の各要素にアクセスするためのサイズをバイト単位で与える&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;の長さの整数のタプル。</target>
        </trans-unit>
        <trans-unit id="bbbbae5b5f1f31e838ab89e5ab798870e6998659" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments that aren&amp;rsquo;t bound to any other parameter. This corresponds to a &lt;code&gt;*args&lt;/code&gt; parameter in a Python function definition.</source>
          <target state="translated">他のパラメーターにバインドされていない位置引数のタプル。これは、Python関数定義の &lt;code&gt;*args&lt;/code&gt; パラメータに対応します。</target>
        </trans-unit>
        <trans-unit id="e767d2abb81b29680f05c61c2dc0881ec7e2895d" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments values. Dynamically computed from the &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">位置引数値のタプル。&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;属性から動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="2bddcba1f84eefe95b64f3637762f321fa506285" translate="yes" xml:space="preserve">
          <source>A tuple of strings giving the names of all modules that are compiled into this Python interpreter. (This information is not available in any other way &amp;mdash; &lt;code&gt;modules.keys()&lt;/code&gt; only lists the imported modules.)</source>
          <target state="translated">このPythonインタープリターにコンパイルされるすべてのモジュールの名前を示す文字列のタプル。（この情報は他の方法では利用できません &lt;code&gt;modules.keys()&lt;/code&gt; はインポートされたモジュールのみをリストします。）</target>
        </trans-unit>
        <trans-unit id="9dc0c4f970d8a2e2a6e7e05921a6b50db400ca2a" translate="yes" xml:space="preserve">
          <source>A tuple of the six integer fields of the UUID, which are also available as six individual attributes and two derived attributes:</source>
          <target state="translated">UUIDの6つの整数フィールドのタプルで、6つの個別属性と2つの派生属性としても利用できます。</target>
        </trans-unit>
        <trans-unit id="7d7281d5a4d1699e2ef4b4d043daa76d806c7e3b" translate="yes" xml:space="preserve">
          <source>A tuple of two strings: the first is the name of the local non-DST timezone, the second is the name of the local DST timezone. If no DST timezone is defined, the second string should not be used. See note below.</source>
          <target state="translated">2つの文字列のタプル:1つ目はローカルの非DSTタイムゾーンの名前、2つ目はローカルのDSTタイムゾーンの名前です。DSTタイムゾーンが定義されていない場合、2番目の文字列は使用してはいけません。以下の注釈を参照してください。</target>
        </trans-unit>
        <trans-unit id="5785afa7d9d72a80a132775f931cd3296a1c396a" translate="yes" xml:space="preserve">
          <source>A two-dimensional vector class, used as a helper class for implementing turtle graphics. May be useful for turtle graphics programs too. Derived from tuple, so a vector is a tuple!</source>
          <target state="translated">タートルグラフィックスを実装するためのヘルパークラスとして使われる二次元ベクトルクラスです。タートルグラフィックスのプログラムにも使えるかもしれません。タプルから派生したクラスです。</target>
        </trans-unit>
        <trans-unit id="5c09a3ba1317d479a9a224b9ce88a6cea59653d7" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 128-bits integer, a 16-bytes packed integer, or an existing IPv6Address object; and the netmask is an integer representing the prefix length.</source>
          <target state="translated">アドレス記述とネットマスクの2つのタプルで、アドレス記述は文字列、128ビット整数、16バイトパック整数、または既存のIPv6Addressオブジェクトのいずれかであり、ネットマスクはプレフィックスの長さを表す整数です。</target>
        </trans-unit>
        <trans-unit id="8a17dcdfe6ec4d61527a00e964fb8c81625f4064" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 32-bits integer, a 4-bytes packed integer, or an existing IPv4Address object; and the netmask is either an integer representing the prefix length (e.g. &lt;code&gt;24&lt;/code&gt;) or a string representing the prefix mask (e.g. &lt;code&gt;255.255.255.0&lt;/code&gt;).</source>
          <target state="translated">アドレスの説明とネットマスクの2タプル。アドレスの説明は、文字列、32ビット整数、4バイトのパック整数、または既存のIPv4Addressオブジェクトのいずれかです。ネットマスクは、プレフィックスの長さを表す整数（ &lt;code&gt;24&lt;/code&gt; など）またはプレフィックスマスクを表す文字列（ &lt;code&gt;255.255.255.0&lt;/code&gt; など）です。</target>
        </trans-unit>
        <trans-unit id="a97458b6662cbcaa16e108bc6f87a69c86c44cfc" translate="yes" xml:space="preserve">
          <source>A type alias is defined by assigning the type to the alias. In this example, &lt;code&gt;Vector&lt;/code&gt; and &lt;code&gt;List[float]&lt;/code&gt; will be treated as interchangeable synonyms:</source>
          <target state="translated">タイプエイリアスは、エイリアスにタイプを割り当てることによって定義されます。この例では、 &lt;code&gt;Vector&lt;/code&gt; と &lt;code&gt;List[float]&lt;/code&gt; は互換性のある同義語として扱われます。</target>
        </trans-unit>
        <trans-unit id="0bdcf50c828c6a26d172ef24bc0143735e308ea7" translate="yes" xml:space="preserve">
          <source>A type that can be used to indicate to type checkers that the corresponding variable or function parameter has a value equivalent to the provided literal (or one of several literals). For example:</source>
          <target state="translated">対応する変数や関数のパラメータが、指定されたリテラル(または複数のリテラルのうちの1つ)と同等の値を持つことを型チェッカーに示すために使用できる型です。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="edd3251f3e927f6b3ff1cbaf77caeabe432e7f67" translate="yes" xml:space="preserve">
          <source>A type that can register with &lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt;&lt;code&gt;SyncManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt; &lt;code&gt;SyncManager&lt;/code&gt; に&lt;/a&gt;登録できるタイプ。</target>
        </trans-unit>
        <trans-unit id="bf15fb052a2b8e6d3e5be62280869b7c778c81b0" translate="yes" xml:space="preserve">
          <source>A typical &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; implementation should not inherit from a &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; implementation, but wrap one, like &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; do.</source>
          <target state="translated">典型的な&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;実装は、&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;実装から継承するべきではありませんが、&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; の&lt;/a&gt;ように、ラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="532a00782ce16211f46324cb7c43cd600e874a6c" translate="yes" xml:space="preserve">
          <source>A typical &lt;code&gt;load_tests&lt;/code&gt; function that loads tests from a specific set of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; classes may look like:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;クラスの特定のセットからテストをロードする一般的な &lt;code&gt;load_tests&lt;/code&gt; 関数は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="7b822b1ced78fa4973f2903bb2ec7ed0bbbbe9df" translate="yes" xml:space="preserve">
          <source>A typical SAX application uses three kinds of objects: readers, handlers and input sources. &amp;ldquo;Reader&amp;rdquo; in this context is another term for parser, i.e. some piece of code that reads the bytes or characters from the input source, and produces a sequence of events. The events then get distributed to the handler objects, i.e. the reader invokes a method on the handler. A SAX application must therefore obtain a reader object, create or open the input sources, create the handlers, and connect these objects all together. As the final step of preparation, the reader is called to parse the input. During parsing, methods on the handler objects are called based on structural and syntactic events from the input data.</source>
          <target state="translated">典型的なSAXアプリケーションは、リーダー、ハンドラー、入力ソースの3種類のオブジェクトを使用します。この文脈での「リーダー」は、パーサーの別の用語です。つまり、入力ソースからバイトまたは文字を読み取り、一連のイベントを生成するコードの一部です。その後、イベントはハンドラーオブジェクトに配信されます。つまり、リーダーはハンドラーのメソッドを呼び出します。したがって、SAXアプリケーションは、リーダーオブジェクトを取得し、入力ソースを作成またはオープンし、ハンドラーを作成し、これらのオブジェクトをすべて一緒に接続する必要があります。準備の最終ステップとして、入力を解析するためにリーダーが呼び出されます。解析中、ハンドラーオブジェクトのメソッドは、入力データからの構造イベントおよび構文イベントに基づいて呼び出されます。</target>
        </trans-unit>
        <trans-unit id="92606cc38bee78998a30f8fec0ac721b4cacce47" translate="yes" xml:space="preserve">
          <source>A typical use case for this might be for doing multiple patches in the &lt;code&gt;setUp&lt;/code&gt; method of a &lt;code&gt;TestCase&lt;/code&gt;:</source>
          <target state="translated">これの典型的な使用例は、 &lt;code&gt;TestCase&lt;/code&gt; の &lt;code&gt;setUp&lt;/code&gt; メソッドで複数のパッチを実行する場合です。</target>
        </trans-unit>
        <trans-unit id="6f19d09a38de2ff39abf9054c1f371922c582e38" translate="yes" xml:space="preserve">
          <source>A typical use is to define a managed attribute &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">一般的な用途は、管理対象属性 &lt;code&gt;x&lt;/code&gt; を定義することです。</target>
        </trans-unit>
        <trans-unit id="0eac63d33888e56a0007381fdc8a8b73f97c1749" translate="yes" xml:space="preserve">
          <source>A typical use of this callback is to change the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;SSLSocket.context&lt;/code&gt;&lt;/a&gt; attribute to a new object of type &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; representing a certificate chain that matches the server name.</source>
          <target state="translated">このコールバックの一般的な用途は、&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;SSLSocket.context&lt;/code&gt; &lt;/a&gt;属性を、サーバー名と一致する証明書チェーンを表す&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;タイプの新しいオブジェクトに変更することです。</target>
        </trans-unit>
        <trans-unit id="18a7ab23c7bbb7dc839f46117e4329ce2492a932" translate="yes" xml:space="preserve">
          <source>A usage example of this class follows. The server code:</source>
          <target state="translated">このクラスの使用例を以下に示します。サーバーのコードです。</target>
        </trans-unit>
        <trans-unit id="978118fdeef62f1257794c4627909d23958610ab" translate="yes" xml:space="preserve">
          <source>A useful override of this method is one that treats each space-separated word as an argument. The following example demonstrates how to do this:</source>
          <target state="translated">このメソッドの便利なオーバーライドは、スペースで区切られた各単語を引数として扱うものです。次の例は、その方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a250b0892fe84e8c6f1a49863c77330a90929957" translate="yes" xml:space="preserve">
          <source>A user updateable list of mappings. The list is ordered from first-searched to last-searched. It is the only stored state and can be modified to change which mappings are searched. The list should always contain at least one mapping.</source>
          <target state="translated">ユーザーが更新可能なマッピングのリスト。リストは、最初に検索されたものから最後に検索されたものまで順番に並べられます。これは唯一の保存された状態であり、どのマッピングを検索するかを変更することができます。リストには常に少なくとも1つのマッピングが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="079507d4f083bf2720ed48fc1b442c97ecadd6bb" translate="yes" xml:space="preserve">
          <source>A user-defined class can be defined as a generic class.</source>
          <target state="translated">ユーザー定義のクラスは、汎用クラスとして定義することができます。</target>
        </trans-unit>
        <trans-unit id="9537693522141cf602fdb88a5176b79c0e82b59d" translate="yes" xml:space="preserve">
          <source>A user-defined generic class can have ABCs as base classes without a metaclass conflict. Generic metaclasses are not supported. The outcome of parameterizing generics is cached, and most types in the typing module are hashable and comparable for equality.</source>
          <target state="translated">ユーザー定義のジェネリック・クラスは、メタクラスの競合なしにABCを基底クラスとして持つことができます。ジェネリック・メタクラスはサポートされていません。ジェネリックをパラメータ化した結果はキャッシュされ、型付けモジュールのほとんどの型はハッシュ化可能であり、等質性のために比較可能です。</target>
        </trans-unit>
        <trans-unit id="5c8693ddfe1cf07a3436ca33c0b98dabc46adab4" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, which can be used to open using a different protocol, or handle errors.</source>
          <target state="translated">別のプロトコルを使用して開く、またはエラーを処理するために使用できる有効な&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e61df85107f5cbf74dcf91d72f046c1f7d59444" translate="yes" xml:space="preserve">
          <source>A variable annotated with &lt;code&gt;C&lt;/code&gt; may accept a value of type &lt;code&gt;C&lt;/code&gt;. In contrast, a variable annotated with &lt;code&gt;Type[C]&lt;/code&gt; may accept values that are classes themselves &amp;ndash; specifically, it will accept the &lt;em&gt;class object&lt;/em&gt; of &lt;code&gt;C&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; で注釈された変数は、タイプ &lt;code&gt;C&lt;/code&gt; の値を受け入れることができます。対照的に、 &lt;code&gt;Type[C]&lt;/code&gt; 注釈が付けられた変数は、それ自体がクラスである値を受け入れる可能性があります。具体的には、 &lt;code&gt;C&lt;/code&gt; の&lt;em&gt;クラスオブジェクト&lt;/em&gt;を受け入れ&lt;em&gt;ます&lt;/em&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="ef488919d9e824be6b60939c2cb342b1b1bab344" translate="yes" xml:space="preserve">
          <source>A variant is &lt;code&gt;sNaN&lt;/code&gt; which signals rather than remaining quiet after every operation. This is a useful return value when an invalid result needs to interrupt a calculation for special handling.</source>
          <target state="translated">バリアントは &lt;code&gt;sNaN&lt;/code&gt; で、すべての操作の後に静かなままではなく、シグナルを出します。これは、無効な結果が特別な処理のために計算を中断する必要がある場合に役立つ戻り値です。</target>
        </trans-unit>
        <trans-unit id="90c08b03c549ad6d2f3a31dc3b83d49432395d7c" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; that retrieves most recently added entries first (last in, first out).</source>
          <target state="translated">最近追加されたエントリを最初に取得する（&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;のバリアント。</target>
        </trans-unit>
        <trans-unit id="e73ad0a5c4f069d5381e1de59b2ea0c613b95b43" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;; retrieves entries in priority order (lowest first).</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;のバリアント。エントリを優先順位の高い順に取得します（低いものが最初）。</target>
        </trans-unit>
        <trans-unit id="39c5b43da7f038797d8ae64f42361f19c58135f2" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; that also has a database of &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; mappings. Can be used by a BasicAuth handler to determine when to send authentication credentials immediately instead of waiting for a &lt;code&gt;401&lt;/code&gt; response first.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt;の一種で、uri- &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; マッピングのデータベースもあります。BasicAuthハンドラーを使用して、最初に &lt;code&gt;401&lt;/code&gt; 応答を待つのではなく、認証資格情報をすぐに送信するタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="e7b048ff81890f86ab4d3705faacaefc982ccda5" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">結果オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="bfc44ba28d32f1aedff0a9745ce2cb349b025acf" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">結果オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="2e16236b15bf3dc82e98e92014c56a2bea2b94a3" translate="yes" xml:space="preserve">
          <source>A virtual environment is a Python environment such that the Python interpreter, libraries and scripts installed into it are isolated from those installed in other virtual environments, and (by default) any libraries installed in a &amp;ldquo;system&amp;rdquo; Python, i.e., one which is installed as part of your operating system.</source>
          <target state="translated">仮想環境とは、Pythonインタープリター、ライブラリ、およびそれにインストールされているスクリプトが他の仮想環境にインストールされているものから分離されたPython環境であり、（デフォルトで）「システム」Pythonにインストールされているライブラリ、つまりインストールされているものオペレーティングシステムの一部として。</target>
        </trans-unit>
        <trans-unit id="33cf41a39f10a2b0987e5f534da602847cb9e481" translate="yes" xml:space="preserve">
          <source>A virtual environment is a directory tree which contains Python executable files and other files which indicate that it is a virtual environment.</source>
          <target state="translated">仮想環境とは、仮想環境であることを示すPythonの実行ファイルなどが格納されたディレクトリツリーのことです。</target>
        </trans-unit>
        <trans-unit id="e2a7438f4c3c42513c1a86d3d14ab1eb8aa7576d" translate="yes" xml:space="preserve">
          <source>A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;garbage collection&lt;/a&gt; is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.</source>
          <target state="translated">オブジェクトへの弱い参照は、オブジェクトを存続させるのに十分ではありません。リファレントへの残りの参照が弱い参照である場合、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;ガベージコレクション&lt;/a&gt;はリファレントを破棄し、別の何かのためにメモリを再利用できます。ただし、オブジェクトが実際に破棄されるまで、弱い参照は強い参照がなくてもオブジェクトを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="f8cad28c9b720b7c8133daa3b6046ba8d41c572b" translate="yes" xml:space="preserve">
          <source>A week is converted to 7 days.</source>
          <target state="translated">1週間を7日に換算しています。</target>
        </trans-unit>
        <trans-unit id="e69e9595b25e9ef4c20aac1a77adfeabde1ae197" translate="yes" xml:space="preserve">
          <source>A widget-specific alternate display format</source>
          <target state="translated">ウィジェット固有の代替表示形式</target>
        </trans-unit>
        <trans-unit id="796565c37efcd7614c73b2d3bcd4ea9ec6196099" translate="yes" xml:space="preserve">
          <source>A workaround for apostrophes can be constructed using regular expressions:</source>
          <target state="translated">アポストロフィの回避策は、正規表現を使用して構築することができます。</target>
        </trans-unit>
        <trans-unit id="9aeb4a6a321904ee133be9093857c2603134a0b7" translate="yes" xml:space="preserve">
          <source>A working example follows. The server code:</source>
          <target state="translated">動作例を以下に示します。サーバーコードです。</target>
        </trans-unit>
        <trans-unit id="91c283731a52bc6a2b34753424f3b1349418c679" translate="yes" xml:space="preserve">
          <source>A wrapper for a bound socket or Windows named pipe which is &amp;lsquo;listening&amp;rsquo; for connections.</source>
          <target state="translated">接続を「リッスン」しているバインドされたソケットまたはWindows名前付きパイプのラッパー。</target>
        </trans-unit>
        <trans-unit id="25a0091075ac6adf4f212e341e5703255d4a54d9" translate="yes" xml:space="preserve">
          <source>A wrapper for a buffer representing picklable data. &lt;em&gt;buffer&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer-providing&lt;/a&gt; object, such as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or a N-dimensional array.</source>
          <target state="translated">pickle化可能なデータを表すバッファーのラッパー。&lt;em&gt;buffer&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;やN次元配列などの、&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファーを提供する&lt;/a&gt;オブジェクトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="9488d9c942617cebacbdd48557b94f0de1129a0f" translate="yes" xml:space="preserve">
          <source>A wrapper to convert a file-like object to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. The resulting objects support both &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; iteration styles, for compatibility with Python 2.1 and Jython. As the object is iterated over, the optional &lt;em&gt;blksize&lt;/em&gt; parameter will be repeatedly passed to the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;read()&lt;/code&gt; method to obtain bytestrings to yield. When &lt;code&gt;read()&lt;/code&gt; returns an empty bytestring, iteration is ended and is not resumable.</source>
          <target state="translated">ファイルのようなオブジェクトを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;に変換するラッパー。結果のオブジェクトは、Python 2.1およびJythonとの互換性のために、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;と__iter __（）の両方の反復スタイルをサポートします。オブジェクトが反復されると、オプションの&lt;em&gt;blksize&lt;/em&gt;パラメータが&lt;em&gt;ファイルのような&lt;/em&gt;オブジェクトの &lt;code&gt;read()&lt;/code&gt; メソッドに繰り返し渡され、&lt;em&gt;バイトストリング&lt;/em&gt;を取得して生成されます。場合は &lt;code&gt;read()&lt;/code&gt; 、空のバイト文字列を返し、反復は終了し、再開可能ではありません。</target>
        </trans-unit>
        <trans-unit id="029b94f840e06cd4458edf1aa492eee5fecb47bf" translate="yes" xml:space="preserve">
          <source>A writable boolean property which by default is true. When the program exits, it calls all remaining live finalizers for which &lt;a href=&quot;#weakref.finalize.atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; is true. They are called in reverse order of creation.</source>
          <target state="translated">デフォルトでtrueである書き込み可能なブールプロパティ。プログラムが終了すると、&lt;a href=&quot;#weakref.finalize.atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;がtrue である残りのライブファイナライザがすべて呼び出されます。それらは作成の逆の順序で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2e7f120e10b020add396221d836c3d123ec25267" translate="yes" xml:space="preserve">
          <source>A zero-filled bytes object of a specified length: &lt;code&gt;bytes(10)&lt;/code&gt;</source>
          <target state="translated">指定された長さのゼロで埋められたbytesオブジェクト： &lt;code&gt;bytes(10)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5152d4d7dfe1ed03b72824b6d1326436b07eef4b" translate="yes" xml:space="preserve">
          <source>A zombie pythonw.exe process could be a problem. On Windows, use Task Manager to detect and stop one. Sometimes a restart initiated by a program crash or Keyboard Interrupt (control-C) may fail to connect. Dismissing the error box or Restart Shell on the Shell menu may fix a temporary problem.</source>
          <target state="translated">ゾンビ pythonw.exe プロセス は問題の可能性があります。Windowsの場合、タスクマネージャーで検出して停止させてください。プログラムのクラッシュやキーボード割り込み(control-C)による再起動で接続に失敗することがあります。エラーボックスを解除するか、シェルメニューのシェルを再起動すると一時的な問題が解決することがあります。</target>
        </trans-unit>
        <trans-unit id="d8945e83b68439f8e7c89d260624db63d24d011a" translate="yes" xml:space="preserve">
          <source>A. For some values, exponential notation is the only way to express the number of significant places in the coefficient. For example, expressing &lt;code&gt;5.0E+3&lt;/code&gt; as &lt;code&gt;5000&lt;/code&gt; keeps the value constant but cannot show the original&amp;rsquo;s two-place significance.</source>
          <target state="translated">A.一部の値では、指数表記法が係数の有意な桁数を表す唯一の方法です。たとえば、 &lt;code&gt;5.0E+3&lt;/code&gt; を &lt;code&gt;5000&lt;/code&gt; として表現すると、値は一定に保たれますが、元の2桁の有意性を示すことはできません。</target>
        </trans-unit>
        <trans-unit id="ddaf579b2dbf039da48669abd7ff5db5fd2565d9" translate="yes" xml:space="preserve">
          <source>A. Some operations like addition, subtraction, and multiplication by an integer will automatically preserve fixed point. Others operations, like division and non-integer multiplication, will change the number of decimal places and need to be followed-up with a &lt;code&gt;quantize()&lt;/code&gt; step:</source>
          <target state="translated">A.加算、減算、整数による乗算などの一部の演算では、固定小数点が自動的に保持されます。除算や整数以外の乗算などの他の演算では、小数点以下の桁数が変わるため、 &lt;code&gt;quantize()&lt;/code&gt; ステップで追跡する必要があります。</target>
        </trans-unit>
        <trans-unit id="8eb1c7daa519c3eacdadf4bc8b5d52726fa2117e" translate="yes" xml:space="preserve">
          <source>A. Some users abbreviate the constructor to just a single letter:</source>
          <target state="translated">A.コンストラクタを一文字だけに省略するユーザーもいます。</target>
        </trans-unit>
        <trans-unit id="51c77a17d9176008920830e8406c57f17d212b75" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;normalize()&lt;/code&gt; method maps all equivalent values to a single representative:</source>
          <target state="translated">A. &lt;code&gt;normalize()&lt;/code&gt; メソッドは、すべての同等の値を単一の代表にマッピングします。</target>
        </trans-unit>
        <trans-unit id="3c6805dd4d82a6ff60cc2229cc3596fd23058790" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;quantize()&lt;/code&gt; method rounds to a fixed number of decimal places. If the &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; trap is set, it is also useful for validation:</source>
          <target state="translated">A. &lt;code&gt;quantize()&lt;/code&gt; 小数点の固定数の方法ラウンド。場合は&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;トラップが設定されている、それはまた、検証のために有用です：</target>
        </trans-unit>
        <trans-unit id="944d77a62db51f3b27bea12de17663f17275ef1c" translate="yes" xml:space="preserve">
          <source>A. The decimal module makes it easy to test results. A best practice is to re-run calculations using greater precision and with various rounding modes. Widely differing results indicate insufficient precision, rounding mode issues, ill-conditioned inputs, or a numerically unstable algorithm.</source>
          <target state="translated">A.小数点モジュールを使用すると、結果のテストが容易になります。ベストプラクティスは、より高い精度とさまざまな丸めモードを使用して計算を再実行することです。結果が大きく異なる場合は、精度不足、丸め込みモードの問題、入力の条件が悪い、または数値的に不安定なアルゴリズムを示しています。</target>
        </trans-unit>
        <trans-unit id="6af8f2411bcef764bf4bed9c2423c5567318a5b2" translate="yes" xml:space="preserve">
          <source>A. Yes, any binary floating point number can be exactly expressed as a Decimal though an exact conversion may take more precision than intuition would suggest:</source>
          <target state="translated">A.はい、どんな二進数の浮動小数点数でも、正確に十進数として表現することができますが、正確な変換には直感が示唆する以上の精度が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d7b3b49e07b2ffed558d950fbc8d141a043755f6" translate="yes" xml:space="preserve">
          <source>A. Yes. In the CPython and PyPy3 implementations, the C/CFFI versions of the decimal module integrate the high speed &lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt; library for arbitrary precision correctly-rounded decimal floating point arithmetic. &lt;code&gt;libmpdec&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba multiplication&lt;/a&gt; for medium-sized numbers and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt; for very large numbers. However, to realize this performance gain, the context needs to be set for unrounded calculations.</source>
          <target state="translated">A.はい。CPythonおよびPyPy3の実装では、decimalモジュールのC / CFFIバージョンは、任意の精度で正確に丸められた10進浮動小数点演算用の高速&lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt;ライブラリを統合します。 &lt;code&gt;libmpdec&lt;/code&gt; は、中規模の数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba乗算&lt;/a&gt;を使用し、非常に大きな数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt;を使用します。ただし、このパフォーマンスの向上を実現するには、丸められていない計算に対してコンテキストを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a3cc723c0fbf6fce1cd335b2e051e9aa0f006ab" translate="yes" xml:space="preserve">
          <source>A. Yes. The principle is that all values are considered to be exact and so is the arithmetic on those values. Only the results are rounded. The advantage for inputs is that &amp;ldquo;what you type is what you get&amp;rdquo;. A disadvantage is that the results can look odd if you forget that the inputs haven&amp;rsquo;t been rounded:</source>
          <target state="translated">A.はい。原則は、すべての値が正確であると見なされ、それらの値の算術も正確であると見なされることです。結果のみが丸められます。入力の利点は、「入力した内容が取得したものになる」ことです。欠点は、入力が丸められていないことを忘れた場合、結果が奇妙に見える可能性があることです。</target>
        </trans-unit>
        <trans-unit id="3c01bdbb26f358bab27f267924aa2c9a03fcfdb8" translate="yes" xml:space="preserve">
          <source>ABC</source>
          <target state="translated">ABC</target>
        </trans-unit>
        <trans-unit id="7f5ec78b298239f25d4eedf9f08390184fa9f0f0" translate="yes" xml:space="preserve">
          <source>ABC for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; objects, which can be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expressions. Custom implementations must provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以下のためのABC &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;で使用できるオブジェクト、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表現。カスタム実装は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f010c60296129173d3201147bb2f74ffe0bbf019" translate="yes" xml:space="preserve">
          <source>ABC for asynchronous generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492で&lt;/strong&gt;&lt;/a&gt;定義されたプロトコルを実装する非同期ジェネレータークラスのABC 。</target>
        </trans-unit>
        <trans-unit id="7822765e6f046b2e22b3015dc9f40823cfde84ac" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; および &lt;code&gt;__anext__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;非同期反復子&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="07eb81a44ab9b106c2098b95becee86a38c0e4e3" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; method. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;asynchronous iterable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;非同期反復可能オブジェクト&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="f855e4e193f74dc187adea3f35b5e517486377bf" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="e07ce05477de3c6001717f47345abad6405a3e68" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="477a0ec0ae4686b4b7160cec57ecef7a897b1f69" translate="yes" xml:space="preserve">
          <source>ABC for coroutine compatible classes. These implement the following methods, defined in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;Coroutine Objects&lt;/a&gt;: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. Custom implementations must also implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt;. All &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; instances are also instances of &lt;a href=&quot;#collections.abc.Awaitable&quot;&gt;&lt;code&gt;Awaitable&lt;/code&gt;&lt;/a&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;.</source>
          <target state="translated">コルーチン互換クラスのABC。これらは、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;コルーチンオブジェクト&lt;/a&gt;で定義されている次のメソッドを実装します：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。カスタム実装は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;も実装する必要があります。すべての&lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;#collections.abc.Awaitable&quot;&gt; &lt;code&gt;Awaitable&lt;/code&gt; の&lt;/a&gt;インスタンスでもあります。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="46d28e2c22a4dbfdd76d81e2be95f80272298b4f" translate="yes" xml:space="preserve">
          <source>ABC for generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt; that extends iterators with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドでイテレーターを拡張する、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt;で定義されたプロトコルを実装するジェネレータークラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="0548b242874beb012653f72ceb70cf25e8733795" translate="yes" xml:space="preserve">
          <source>ABC for iterable classes that also provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;メソッドも提供する反復可能なクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="d92ee93cd33bf6ba5fa8a1c70c98d3856ade0f4c" translate="yes" xml:space="preserve">
          <source>ABC for sized iterable container classes.</source>
          <target state="translated">サイズの異なるイテレート可能なコンテナクラスのためのABC。</target>
        </trans-unit>
        <trans-unit id="59647d4cbeaabde8a1d037a9dea14e674c553715" translate="yes" xml:space="preserve">
          <source>ABC hierarchy:</source>
          <target state="translated">ABC階層。</target>
        </trans-unit>
        <trans-unit id="0b0fbb7c06ed511ccb4423144202c87f813003e4" translate="yes" xml:space="preserve">
          <source>ABCs for classes that provide respectively the methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="015be73827a640fdee0b89bf55fb5aff421c1ec3" translate="yes" xml:space="preserve">
          <source>ABCs for mapping, items, keys, and values &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">マッピング、アイテム、キー、値&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;ビューの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="55b7fe6f021ed9e9a7ce994b1445cda74cddbc7c" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mappings&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および変更可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;マッピングの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="d86e2109768137f54448089b433922ec0e56d34d" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequences&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および変更可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;シーケンスの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="ace54a5c1800f9a8fbcc59c5817199681df7db33" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable sets.</source>
          <target state="translated">読み取り専用セットと変異可能セットのABC。</target>
        </trans-unit>
        <trans-unit id="f86d7a17edb02a17fa7d6037082a11974589497c" translate="yes" xml:space="preserve">
          <source>ACS code</source>
          <target state="translated">ACSコード</target>
        </trans-unit>
        <trans-unit id="f6ae31d47584845d5b7ec1a3525c346c981b4210" translate="yes" xml:space="preserve">
          <source>AIO requests</source>
          <target state="translated">AIOリクエスト</target>
        </trans-unit>
        <trans-unit id="7cd735bc88414abeac25ef102606e6871aeba944" translate="yes" xml:space="preserve">
          <source>AIX</source>
          <target state="translated">AIX</target>
        </trans-unit>
        <trans-unit id="113a97cdab92673636cc95858168822f55ed3094" translate="yes" xml:space="preserve">
          <source>ANY</source>
          <target state="translated">ANY</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="fb44be4c1480d2e393e6140650808a3252950e7e" translate="yes" xml:space="preserve">
          <source>API reference for the logging module.</source>
          <target state="translated">ロギングモジュールのAPIリファレンス。</target>
        </trans-unit>
        <trans-unit id="85772cf0096853ab75ec0710b340b4302c6a59bb" translate="yes" xml:space="preserve">
          <source>Abort a file transfer that is in progress. Using this does not always work, but it&amp;rsquo;s worth a try.</source>
          <target state="translated">進行中のファイル転送を中止します。これを使用しても常に動作するとは限りませんが、試してみる価値はあります。</target>
        </trans-unit>
        <trans-unit id="9a43092c673da6a4e7137e842ae9542e006479e1" translate="yes" xml:space="preserve">
          <source>About IDLE</source>
          <target state="translated">IDLEについて</target>
        </trans-unit>
        <trans-unit id="d61ab640c5b98ffb68974b7f64188b17f4dd2a53" translate="yes" xml:space="preserve">
          <source>Abstract Grammar</source>
          <target state="translated">抽象的な文法</target>
        </trans-unit>
        <trans-unit id="5fde6504e20ecd1360ad9d942cd74ad60b2cc703" translate="yes" xml:space="preserve">
          <source>Abstract Methods</source>
          <target state="translated">摘要方法</target>
        </trans-unit>
        <trans-unit id="d663d5ecddcb7099c665bc6e641fc7287c322569" translate="yes" xml:space="preserve">
          <source>Abstract a key/value pair, which has some &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">いくつかの&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性を持つキーと値のペアを抽象化します。</target>
        </trans-unit>
        <trans-unit id="344cb8aff69839e7bd97d5cbe55e40950f78e6c2" translate="yes" xml:space="preserve">
          <source>Abstract base class for arrays.</source>
          <target state="translated">配列の抽象基底クラス.</target>
        </trans-unit>
        <trans-unit id="5159868f3346bfddd687c4b1c79e385a0b2b7314" translate="yes" xml:space="preserve">
          <source>Abstract base class for asyncio-compliant event loops.</source>
          <target state="translated">asyncioに準拠したイベントループのための抽象基底クラスです。</target>
        </trans-unit>
        <trans-unit id="5a00e7a32834730b14935377913a4e39792f78b5" translate="yes" xml:space="preserve">
          <source>Abstract base class for generic types.</source>
          <target state="translated">汎用型の抽象基底クラスです。</target>
        </trans-unit>
        <trans-unit id="e90db39e674e4bc026807fcbf53f0a2f6df04011" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;big endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;ビッグエンディアン&lt;/em&gt;バイトオーダーの構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="161636484cb5323de19447914374caeff71931d4" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;little endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;リトルエンディアンの&lt;/em&gt;バイト順の構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="d09915045304ac9b228bab360849a5f73ad7dc24" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;native&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;ネイティブ&lt;/em&gt;バイトオーダーの構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="989b4ac287af7bb629b745acd2c03089764dad2b" translate="yes" xml:space="preserve">
          <source>Abstract base class for unions in native byte order.</source>
          <target state="translated">ネイティブバイト順のユニオンのための抽象基底クラス.</target>
        </trans-unit>
        <trans-unit id="be904874648301c38c0cbd1e8e8ee45fc9ff355f" translate="yes" xml:space="preserve">
          <source>Abstract.</source>
          <target state="translated">Abstract.</target>
        </trans-unit>
        <trans-unit id="033f637625396067d78ede4d817a5e47570aed40" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the imaginary component of this number.</source>
          <target state="translated">抽象的な この数の虚数成分を取得します。</target>
        </trans-unit>
        <trans-unit id="5dd4baa9cd2aedc339bb34801c67b8f428d8a227" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the real component of this number.</source>
          <target state="translated">抽象的な この数値の実数成分を取得します。</target>
        </trans-unit>
        <trans-unit id="7d8657883dbffc0354e7c89d9f5906b7e3171e7a" translate="yes" xml:space="preserve">
          <source>Abstract. Returns the complex conjugate. For example, &lt;code&gt;(1+3j).conjugate()
== (1-3j)&lt;/code&gt;.</source>
          <target state="translated">概要。複素共役を返します。たとえば、 &lt;code&gt;(1+3j).conjugate() == (1-3j)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="918a7e7e3abfc661fbce7b36f45ad4a008b3e4b6" translate="yes" xml:space="preserve">
          <source>AbstractBasicAuthHandler Objects</source>
          <target state="translated">AbstractBasicAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="35aeb77a12aeb24dd8853c33d313b402491b42a1" translate="yes" xml:space="preserve">
          <source>AbstractDigestAuthHandler Objects</source>
          <target state="translated">AbstractDigestAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="2d65bd49a1365a4f2d71a81612906c6eff60f7c3" translate="yes" xml:space="preserve">
          <source>Accept a &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; connection.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;接続を受け入れます。</target>
        </trans-unit>
        <trans-unit id="3ca28d3cc8b69490da642723870f35d0d39797e0" translate="yes" xml:space="preserve">
          <source>Accept a base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object and decode it as the instance&amp;rsquo;s new data.</source>
          <target state="translated">base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れ、インスタンスの新しいデータとしてデコードします。</target>
        </trans-unit>
        <trans-unit id="248136c7d4ed41a70a6986aad65af2eb7f26a157" translate="yes" xml:space="preserve">
          <source>Accept a connection on the bound socket or named pipe of the listener object and return a &lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object. If authentication is attempted and fails, then &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">リスナーオブジェクトのバインドされたソケットまたは名前付きパイプで接続を受け入れ、&lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。認証が試行されて失敗した場合、&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="68567e805163dadbfc1e5c5431016e1e5ff22046" translate="yes" xml:space="preserve">
          <source>Accept a connection. Modeled after the blocking &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">接続を受け入れます。ブロッキング&lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept()&lt;/code&gt; &lt;/a&gt;メソッドをモデルにしています。</target>
        </trans-unit>
        <trans-unit id="5e6d96453b4cda0f31d633767d452eb27962620b" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value can be either &lt;code&gt;None&lt;/code&gt; or a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection. When &lt;code&gt;None&lt;/code&gt; is returned it means the connection didn&amp;rsquo;t take place, in which case the server should just ignore this event and keep listening for further incoming connections.</source>
          <target state="translated">接続を受け入れます。ソケットはアドレスにバインドされ、接続を待機する必要があります。戻り値は、 &lt;code&gt;None&lt;/code&gt; またはペア &lt;code&gt;(conn, address)&lt;/code&gt; いずれかです。ここで、&lt;em&gt;conn&lt;/em&gt;は接続でデータを送受信するために使用できる&lt;em&gt;新しい&lt;/em&gt;ソケットオブジェクトで、&lt;em&gt;address&lt;/em&gt;は接続の反対側のソケットにバインドされたアドレスです。とき &lt;code&gt;None&lt;/code&gt; 返されなかったことは、接続がサーバがちょうどこのイベントを無視し、さらに受信接続を待機しておく必要があり、その場合には、場所を取らなかったことを意味します。</target>
        </trans-unit>
        <trans-unit id="bf1a228c35d50b158ea9e874327d777a40642808" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value is a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection.</source>
          <target state="translated">接続を受け入れます。ソケットはアドレスにバインドされ、接続を待機する必要があります。戻り値はペア &lt;code&gt;(conn, address)&lt;/code&gt; ここで、&lt;em&gt;conn&lt;/em&gt;は接続でデータを送受信するために使用できる&lt;em&gt;新しい&lt;/em&gt;ソケットオブジェクトで、&lt;em&gt;address&lt;/em&gt;は接続の反対側のソケットにバインドされたアドレスです。</target>
        </trans-unit>
        <trans-unit id="becea170712dd2efec29eca7cb2dd1f65a0fa7cd" translate="yes" xml:space="preserve">
          <source>Accept a string as the instance&amp;rsquo;s new time value.</source>
          <target state="translated">文字列をインスタンスの新しい時間値として受け入れます。</target>
        </trans-unit>
        <trans-unit id="05ba9cfd374cda2ea3202cabf287a75ce2cae7c9" translate="yes" xml:space="preserve">
          <source>Accepts a wide range of Python callables, from plain functions and classes to &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">プレーンな関数やクラスから&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;オブジェクトまで、幅広いPython呼び出し可能オブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="cefd8c72a8263fd2b76f3d365284a05d42f5bcfa" translate="yes" xml:space="preserve">
          <source>Accepts an arbitrary callback function and arguments and adds it to the callback stack.</source>
          <target state="translated">任意のコールバック関数と引数を受け取り、コールバックスタックに追加します。</target>
        </trans-unit>
        <trans-unit id="a5c4b76bbe3ef1a943cc50e4d249422d0b1aab87" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;MAIL FROM:&amp;rdquo; syntax and stores the supplied address as &lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt;&lt;code&gt;mailfrom&lt;/code&gt;&lt;/a&gt;. In extended command mode, accepts the &lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE attribute and responds appropriately based on the value of &lt;em&gt;data_size_limit&lt;/em&gt;.</source>
          <target state="translated">「MAIL FROM：」構文を受け入れ、指定されたアドレスを&lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt; &lt;code&gt;mailfrom&lt;/code&gt; &lt;/a&gt;として保存します。拡張コマンドモードでは、&lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE属性を受け入れ、&lt;em&gt;data_size_limit&lt;/em&gt;の値に基づいて適切に応答します。</target>
        </trans-unit>
        <trans-unit id="ca73702311936fa8995eea8177ce31af536ccb02" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;RCPT TO:&amp;rdquo; syntax and stores the supplied addresses in the &lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt;&lt;code&gt;rcpttos&lt;/code&gt;&lt;/a&gt; list.</source>
          <target state="translated">「RCPT TO：」構文を受け入れ、指定されたアドレスを&lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt; &lt;code&gt;rcpttos&lt;/code&gt; &lt;/a&gt;リストに格納します。</target>
        </trans-unit>
        <trans-unit id="6fdda2dde2b8c2c191d15b7f3125ea94a39916cf" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to base command mode.</source>
          <target state="translated">クライアントからの挨拶を受け入れ、それを&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; に&lt;/a&gt;格納します。サーバーを基本コマンドモードに設定します。</target>
        </trans-unit>
        <trans-unit id="c0b35569f1e8ae304d581f5e8821f7f16840b7d0" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to extended command mode.</source>
          <target state="translated">クライアントからの挨拶を受け入れ、それを&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; に&lt;/a&gt;格納します。サーバーを拡張コマンドモードに設定します。</target>
        </trans-unit>
        <trans-unit id="8966aa55dca18b010cac9082dfd52437b31bf67c" translate="yes" xml:space="preserve">
          <source>Accepts two optional keyword arguments which are callables that accept an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; as an argument. The &lt;em&gt;firstiter&lt;/em&gt; callable will be called when an asynchronous generator is iterated for the first time. The &lt;em&gt;finalizer&lt;/em&gt; will be called when an asynchronous generator is about to be garbage collected.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;非同期ジェネレータイテレータ&lt;/a&gt;を引数として受け入れる呼び出し可能な2つのオプションのキーワード引数を受け入れます。&lt;em&gt;firstiterの&lt;/em&gt;非同期発電機が最初に反復されたときに呼び出し可能に呼び出されます。&lt;em&gt;ファイナライザは&lt;/em&gt;、非同期発電機がごみを収集することとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e05b284dc7ffc87c49e09a289e14dcbf79cfef75" translate="yes" xml:space="preserve">
          <source>Access Rights</source>
          <target state="translated">アクセス権</target>
        </trans-unit>
        <trans-unit id="731aec2d2a9b1fac8c050c5f45f4db5cae619c59" translate="yes" xml:space="preserve">
          <source>Access a member of the archive as a binary file-like object. &lt;em&gt;name&lt;/em&gt; can be either the name of a file within the archive or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. The &lt;em&gt;mode&lt;/em&gt; parameter, if included, must be &lt;code&gt;'r'&lt;/code&gt; (the default) or &lt;code&gt;'w'&lt;/code&gt;. &lt;em&gt;pwd&lt;/em&gt; is the password used to decrypt encrypted ZIP files.</source>
          <target state="translated">バイナリファイルのようなオブジェクトとしてアーカイブのメンバーにアクセスします。&lt;em&gt;name&lt;/em&gt;は、アーカイブ内のファイルの名前または&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;オブジェクトのいずれかです。&lt;em&gt;モード&lt;/em&gt;パラメータが含まれている場合、でなければならない &lt;code&gt;'r'&lt;/code&gt; （デフォルト）または &lt;code&gt;'w'&lt;/code&gt; 。&lt;em&gt;pwd&lt;/em&gt;は、暗号化されたZIPファイルを復号化するために使用されるパスワードです。</target>
        </trans-unit>
        <trans-unit id="d198a0ec3c83b4614eaff43518cfa5395bac5e85" translate="yes" xml:space="preserve">
          <source>Access local Python documentation, if installed, or start a web browser and open docs.python.org showing the latest Python documentation.</source>
          <target state="translated">インストールされている場合はローカルのPythonドキュメントにアクセスするか、Webブラウザを起動して最新のPythonドキュメントを表示するdocs.python.orgを開きます。</target>
        </trans-unit>
        <trans-unit id="7c0061ddf6eb005af80c77ef4895dee301897968" translate="yes" xml:space="preserve">
          <source>Access optional transport information; see &lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt;&lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">オプションの輸送情報にアクセスします。詳細については、&lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt; &lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d1bb3577165fc1967c20f6f0b33bb6defaf538a" translate="yes" xml:space="preserve">
          <source>Access to external objects</source>
          <target state="translated">外部オブジェクトへのアクセス</target>
        </trans-unit>
        <trans-unit id="7317b09c89f800370b38efea04c5464e8c108a83" translate="yes" xml:space="preserve">
          <source>Access to internal objects</source>
          <target state="translated">内部オブジェクトへのアクセス</target>
        </trans-unit>
        <trans-unit id="d4dc38860a079acbf5040cd2135bd4d353e54f20" translate="yes" xml:space="preserve">
          <source>Access to message catalogs</source>
          <target state="translated">メッセージカタログへのアクセス</target>
        </trans-unit>
        <trans-unit id="0b1a55fa626d7cf9e11c68cb8e95989f234a6996" translate="yes" xml:space="preserve">
          <source>Access to standard Tk dialog boxes.</source>
          <target state="translated">標準のTkダイアログボックスにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9e838cb51991a7a2ef425afc34411b6a4cf0eae9" translate="yes" xml:space="preserve">
          <source>Accessing Policies</source>
          <target state="translated">ポリシーへのアクセス</target>
        </trans-unit>
        <trans-unit id="260c8c30ecab2bf1e4877cdc49b57bce6210e08e" translate="yes" xml:space="preserve">
          <source>Accessing a corrupted shared library</source>
          <target state="translated">破損した共有ライブラリへのアクセス</target>
        </trans-unit>
        <trans-unit id="71af361ba292908615dcf5c8ccee9e932f4b7e7c" translate="yes" xml:space="preserve">
          <source>Accessing a function on a loaded library raises an auditing event &lt;code&gt;ctypes.dlsym&lt;/code&gt; with arguments &lt;code&gt;library&lt;/code&gt; (the library object) and &lt;code&gt;name&lt;/code&gt; (the symbol&amp;rsquo;s name as a string or integer).</source>
          <target state="translated">ロードされたライブラリの関数にアクセスすると、引数 &lt;code&gt;library&lt;/code&gt; （ライブラリオブジェクト）と &lt;code&gt;name&lt;/code&gt; （文字列または整数としてのシンボルの名前）を含む監査イベント &lt;code&gt;ctypes.dlsym&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="c107c49a03817af8952bc8c0d4b6dc68bc4b981a" translate="yes" xml:space="preserve">
          <source>Accessing arguments by name:</source>
          <target state="translated">名前で引数にアクセスします。</target>
        </trans-unit>
        <trans-unit id="39422cfc3ffb30101755ff1504a2df9d616edb97" translate="yes" xml:space="preserve">
          <source>Accessing arguments by position:</source>
          <target state="translated">ポジション別に引数にアクセスします。</target>
        </trans-unit>
        <trans-unit id="c4c9579bed0a7c63cc4d3b8d869c7d36d72fd3ac" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; attributes:</source>
          <target state="translated">引数の属性へのアクセス：</target>
        </trans-unit>
        <trans-unit id="41bb86cb017873fc6e571fbe9e03f681538517ea" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; items:</source>
          <target state="translated">引数のアイテムへのアクセス：</target>
        </trans-unit>
        <trans-unit id="9f0cf49831f659798a76611095b43215b4381b8b" translate="yes" xml:space="preserve">
          <source>Accessing columns by name instead of by index</source>
          <target state="translated">インデックスではなく名前でカラムにアクセスする</target>
        </trans-unit>
        <trans-unit id="eecb5e7f1b2d16b54279aa55ca5db3732ef01003" translate="yes" xml:space="preserve">
          <source>Accessing functions from loaded dlls</source>
          <target state="translated">ロードされたDLLからの関数へのアクセス</target>
        </trans-unit>
        <trans-unit id="8af8bbaf1dc41a5f30738fb7558c136542598c8b" translate="yes" xml:space="preserve">
          <source>Accessing individual parts</source>
          <target state="translated">個々のパーツへのアクセス</target>
        </trans-unit>
        <trans-unit id="87c5f0dfffab33c1f436f570abacf72146401b9c" translate="yes" xml:space="preserve">
          <source>Accessing the standard C library through &lt;code&gt;cdll.msvcrt&lt;/code&gt; will use an outdated version of the library that may be incompatible with the one being used by Python. Where possible, use native Python functionality, or else import and use the &lt;code&gt;msvcrt&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;cdll.msvcrt&lt;/code&gt; を介して標準Cライブラリにアクセスすると、Pythonで使用されているものと互換性がない可能性がある古いバージョンのライブラリが使用されます。可能であれば、ネイティブのPython機能を使用するか、 &lt;code&gt;msvcrt&lt;/code&gt; モジュールをインポートして使用します。</target>
        </trans-unit>
        <trans-unit id="82e4d72e3858dc40ef697c71e9c99dd6d1762691" translate="yes" xml:space="preserve">
          <source>Accessing values exported from dlls</source>
          <target state="translated">dllからエクスポートされた値へのアクセス</target>
        </trans-unit>
        <trans-unit id="48469f0816b7d8b7b69f202f36d7c603ac67c4b9" translate="yes" xml:space="preserve">
          <source>Accessor Methods</source>
          <target state="translated">アクセッサーの方法</target>
        </trans-unit>
        <trans-unit id="44e86821ee29ea1890c19e6deb0a802a148a4975" translate="yes" xml:space="preserve">
          <source>According to POSIX, a program which has not called &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; runs using the portable &lt;code&gt;'C'&lt;/code&gt; locale. Calling &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; lets it use the default locale as defined by the &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; variable. Since we do not want to interfere with the current locale setting we thus emulate the behavior in the way described above.</source>
          <target state="translated">POSIXによれば、 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; を呼び出していないプログラムは、移植可能な &lt;code&gt;'C'&lt;/code&gt; ロケールを使用して実行されます。 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 呼び出すと、 &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; 変数で定義されているデフォルトのロケールを使用できます。現在のロケール設定に干渉したくないので、上記の方法で動作をエミュレートします。</target>
        </trans-unit>
        <trans-unit id="714a2a15ee3782a1162d672762e78d0a38134e5b" translate="yes" xml:space="preserve">
          <source>According to the letter of &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;, 301 and 302 responses to POST requests must not be automatically redirected without confirmation by the user. In reality, browsers do allow automatic redirection of these responses, changing the POST to a GET, and &lt;a href=&quot;urllib#module-urllib&quot;&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/a&gt; reproduces this behaviour.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;の書簡によれば、POST要求に対する301および302応答は、ユーザーの確認なしに自動的にリダイレクトされてはなりません。実際には、ブラウザーはこれらの応答の自動リダイレクトを許可し、POSTをGETに変更します&lt;a href=&quot;urllib#module-urllib&quot;&gt; &lt;code&gt;urllib&lt;/code&gt; &lt;/a&gt;はこの動作を再現します。</target>
        </trans-unit>
        <trans-unit id="ad55855dcbc1c5b89cea1605223f9aada3fabb2b" translate="yes" xml:space="preserve">
          <source>Accordingly, constructor arguments are interpreted as for &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">したがって、コンストラクタの引数は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray()&lt;/code&gt; の&lt;/a&gt;場合と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="082af44e6d89682179d27fdfd34277a7e0c2c9af" translate="yes" xml:space="preserve">
          <source>Acknowledgement</source>
          <target state="translated">Acknowledgement</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="81d5a6accac3654cbf66608938b8c9013df0a3bc" translate="yes" xml:space="preserve">
          <source>Acquire a lock, blocking or non-blocking.</source>
          <target state="translated">ロック、ブロッキング、ノンブロッキングのいずれかを取得します。</target>
        </trans-unit>
        <trans-unit id="e60a27e953c80127dc19a93298d1b0c5a8852bd6" translate="yes" xml:space="preserve">
          <source>Acquire a semaphore.</source>
          <target state="translated">セマフォを取得する。</target>
        </trans-unit>
        <trans-unit id="d6a249c8c3f9d0be2a91d76168ee36b7ef8d69d0" translate="yes" xml:space="preserve">
          <source>Acquire an exclusive advisory lock on the mailbox so that other processes know not to modify it. An &lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt;&lt;code&gt;ExternalClashError&lt;/code&gt;&lt;/a&gt; is raised if the lock is not available. The particular locking mechanisms used depend upon the mailbox format. You should &lt;em&gt;always&lt;/em&gt; lock the mailbox before making any modifications to its contents.</source>
          <target state="translated">メールボックスの排他的アドバイザリロックを取得して、他のプロセスが変更しないようにします。アン&lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt; &lt;code&gt;ExternalClashError&lt;/code&gt; は&lt;/a&gt;ロックが利用できない場合に発生します。使用される特定のロックメカニズムは、メールボックスの形式によって異なります。メールボックスの内容を変更する前に、&lt;em&gt;必ず&lt;/em&gt;メールボックスをロックする必要&lt;em&gt;があり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7c4dfd85bf2c256ca750cb8f4e1e2fba7ac6580e" translate="yes" xml:space="preserve">
          <source>Acquire the lock.</source>
          <target state="translated">ロックを取得します。</target>
        </trans-unit>
        <trans-unit id="461410d014d419ab175b1ebecd08ac6c77a09658" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock.</source>
          <target state="translated">基礎となるロックを取得します。</target>
        </trans-unit>
        <trans-unit id="dafb6140598e25081787ea267e056be855b6622a" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock. This method calls the corresponding method on the underlying lock; the return value is whatever that method returns.</source>
          <target state="translated">基礎となるロックを取得します。このメソッドは、基礎となるロック上の対応するメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="30560da991fdd301ae97abf02a27135578dee389" translate="yes" xml:space="preserve">
          <source>Acquires the thread lock created with &lt;a href=&quot;#logging.Handler.createLock&quot;&gt;&lt;code&gt;createLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.Handler.createLock&quot;&gt; &lt;code&gt;createLock()&lt;/code&gt; で&lt;/a&gt;作成されたスレッドロックを取得します。</target>
        </trans-unit>
        <trans-unit id="9292d87e220d1c1446b9354a9141178078ba0d7e" translate="yes" xml:space="preserve">
          <source>Acquiring a lock is &lt;em&gt;fair&lt;/em&gt;: the coroutine that proceeds will be the first coroutine that started waiting on the lock.</source>
          <target state="translated">ロックの取得は&lt;em&gt;公平&lt;/em&gt;です。続行するコルーチンは、ロックの待機を開始した最初のコルーチンになります。</target>
        </trans-unit>
        <trans-unit id="084ab4fd9c6c6c0f36d4f70f9d53acd358725da3" translate="yes" xml:space="preserve">
          <source>Act like &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, except that for any subpart of the message passed to &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;Generator.flatten()&lt;/code&gt;&lt;/a&gt;, if the subpart is of main type &lt;em&gt;text&lt;/em&gt;, print the decoded payload of the subpart, and if the main type is not &lt;em&gt;text&lt;/em&gt;, instead of printing it fill in the string &lt;em&gt;fmt&lt;/em&gt; using information from the part and print the resulting filled-in string.</source>
          <target state="translated">以下のような行為&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;、メッセージの任意のサブパートのために渡されることを除いて&lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;Generator.flatten()&lt;/code&gt; &lt;/a&gt;サブパート主型である場合、&lt;em&gt;テキスト&lt;/em&gt;、サブパートのデコードされたペイロードを印刷し、主型がない場合&lt;em&gt;、テキスト&lt;/em&gt;の代わりにそれを印刷します、パーツからの情報を使用して文字列&lt;em&gt;fmt&lt;/em&gt;を入力し、結果の文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="9ace32a6134122ed597eae8340ee6101df735b51" translate="yes" xml:space="preserve">
          <source>Action classes</source>
          <target state="translated">アクションクラス</target>
        </trans-unit>
        <trans-unit id="77717846e87426ca8b4508db5527a0d857cc7d2e" translate="yes" xml:space="preserve">
          <source>Action classes implement the Action API, a callable which returns a callable which processes arguments from the command-line. Any object which follows this API may be passed as the &lt;code&gt;action&lt;/code&gt; parameter to &lt;code&gt;add_argument()&lt;/code&gt;.</source>
          <target state="translated">アクションクラスは、コマンドラインから引数を処理する呼び出し可能オブジェクトを返す呼び出し可能オブジェクトであるアクションAPIを実装します。このAPIに続くすべてのオブジェクトは、 &lt;code&gt;action&lt;/code&gt; パラメータとして &lt;code&gt;add_argument()&lt;/code&gt; に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9513bff63fa8a804ba98e02cb9596699d8340afc" translate="yes" xml:space="preserve">
          <source>Action instances should be callable, so subclasses must override the &lt;code&gt;__call__&lt;/code&gt; method, which should accept four parameters:</source>
          <target state="translated">アクションインスタンスは呼び出し可能である必要があるため、サブクラスは &lt;code&gt;__call__&lt;/code&gt; メソッドをオーバーライドする必要があり、これは4つのパラメーターを受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="278d19782a6ed5702bc055475169e14e49eb9e12" translate="yes" xml:space="preserve">
          <source>Action objects are used by an ArgumentParser to represent the information needed to parse a single argument from one or more strings from the command line. The Action class must accept the two positional arguments plus any keyword arguments passed to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; except for the &lt;code&gt;action&lt;/code&gt; itself.</source>
          <target state="translated">ArgumentParserはアクションオブジェクトを使用して、コマンドラインからの1つ以上の文字列から単一の引数を解析するために必要な情報を表します。Actionクラスは、2つの位置引数と、 &lt;code&gt;action&lt;/code&gt; 自体を除いて&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; に&lt;/a&gt;渡されたキーワード引数を受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="91165131a7ce5acb4d4c719b4a605bf1d3ffc98c" translate="yes" xml:space="preserve">
          <source>Action taken</source>
          <target state="translated">取られた措置</target>
        </trans-unit>
        <trans-unit id="e6380d337be56a56fb3795f7ef7ee4cb17f21bca" translate="yes" xml:space="preserve">
          <source>ActiveState Tcl Home Page</source>
          <target state="translated">ActiveState Tcl ホームページ</target>
        </trans-unit>
        <trans-unit id="38727212af340538ef4171b11f8f296a8643ef4c" translate="yes" xml:space="preserve">
          <source>Actually needing to do this is likely to indicate that the underlying API should be providing a direct resource management interface for use with &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statements, but not all APIs are well designed in that regard. When a context manager is the only resource management API provided, then &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; can make it easier to handle various situations that can&amp;rsquo;t be handled directly in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">これを実際に行う必要があるのは、基になるAPIが、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ステートメントで使用する直接リソース管理インターフェースを提供する必要があることを示している可能性がありますが、その点に関してすべてのAPIが適切に設計されているわけではありません。提供されている唯一のリソース管理APIがコンテキストマネージャーである場合、&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; を&lt;/a&gt;使用すると、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントでは直接処理できないさまざまな状況を簡単に処理できます。</target>
        </trans-unit>
        <trans-unit id="3bcbe0ccc46b10727260a3caa552d07256bb7ae9" translate="yes" xml:space="preserve">
          <source>Actually processes the request by instantiating &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; and calling its &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">実際に&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;をインスタンス化し、その&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、リクエストを処理します。</target>
        </trans-unit>
        <trans-unit id="afe8d459e873bfae322eb1ff9286a5013dcb630e" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;fallback&lt;/em&gt; as the fallback object for the current translation object. A translation object should consult the fallback if it cannot provide a translation for a given message.</source>
          <target state="translated">現在の翻訳オブジェクトのフォールバックオブジェクトとして&lt;em&gt;フォールバック&lt;/em&gt;を追加します。特定のメッセージの翻訳を提供できない場合、翻訳オブジェクトはフォールバックを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="af8c722ee4c8561359335870777e3e5bf87069a7" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;increment&lt;/em&gt; to the process&amp;rsquo;s &amp;ldquo;niceness&amp;rdquo;. Return the new niceness.</source>
          <target state="translated">プロセスの「素晴らしさ」に&lt;em&gt;増分&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。新しい良さを返します。</target>
        </trans-unit>
        <trans-unit id="aa7983e1a637a4577bc6fffefae3ed5cea5dab92" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;items&lt;/em&gt; to the selection.</source>
          <target state="translated">選択に&lt;em&gt;アイテム&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="30c0a49b754a66b21573177a7299d76b8a5c131c" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;label&lt;/em&gt; to the list of labels on the message.</source>
          <target state="translated">追加&lt;em&gt;ラベルを&lt;/em&gt;メッセージにラベルのリストに。</target>
        </trans-unit>
        <trans-unit id="24db3772802faeab198405cd43d9db88ced07a1d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;message&lt;/em&gt; to the mailbox and return the key that has been assigned to it.</source>
          <target state="translated">メールボックスに&lt;em&gt;メッセージ&lt;/em&gt;を追加し、それに割り当てられているキーを返します。</target>
        </trans-unit>
        <trans-unit id="5479b5f1d60a39cb75d31bd42ec9f9c48e1b4a8b" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;prefix&lt;/em&gt; to the beginning of selected lines in &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;テキスト&lt;/em&gt;内の選択した行の先頭に&lt;em&gt;接頭辞&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f44aea08a2fc88ec1e9f6c30ad49d2629a71e470" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;sequence&lt;/em&gt; to the list of sequences that include this message.</source>
          <target state="translated">追加&lt;em&gt;シーケンスを&lt;/em&gt;このメッセージを含むシーケンスのリストに。</target>
        </trans-unit>
        <trans-unit id="33a10ccdd8fd003a788443c4b85ed7eb60938600" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the left side of the deque.</source>
          <target state="translated">両端キューの左側に&lt;em&gt;x&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="3c25d5c0076f9d7d52148b8e3bb5f41c9a4a2f9d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the right side of the deque.</source>
          <target state="translated">両端キューの右側に&lt;em&gt;x&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="24e6030669a49381174c0b5a66ddd6ac0dadd387" translate="yes" xml:space="preserve">
          <source>Add a (possibly multi-valued) header, with optional MIME parameters specified via keyword arguments.</source>
          <target state="translated">(複数の値を持つ可能性がある)ヘッダーを追加し、オプションの MIME パラメータをキーワード引数で指定します。</target>
        </trans-unit>
        <trans-unit id="6ad671132a650abe04ac0277b23f2bd3dcbd37dd" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; to the suite.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;をスイートに追加します。</target>
        </trans-unit>
        <trans-unit id="cb9e0dfa54f74decdc101fb5b211589918af267c" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;#!&lt;/code&gt; line to the archive specifying &lt;em&gt;interpreter&lt;/em&gt; as the command to run. Also, on POSIX, make the archive executable. The default is to write no &lt;code&gt;#!&lt;/code&gt; line, and not make the file executable.</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; 追加！実行するコマンドとして&lt;em&gt;インタープリター&lt;/em&gt;を指定するアーカイブへの行。また、POSIXでは、アーカイブを実行可能にします。デフォルトでは、 &lt;code&gt;#!&lt;/code&gt; は書き込まれません。行で、ファイルを実行可能にしません。</target>
        </trans-unit>
        <trans-unit id="11966b392bbd5d32167852567e5699616e11388f" translate="yes" xml:space="preserve">
          <source>Add a &lt;em&gt;Content-Type&lt;/em&gt; header with a &lt;code&gt;maintype/subtype&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;maintype/subtype&lt;/code&gt; 値を含む&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーを追加します。</target>
        </trans-unit>
        <trans-unit id="84ac69830ac328f5af24cd917082c8ab71ae0bdd" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">Futureが&lt;em&gt;完了した&lt;/em&gt;ときに実行されるコールバックを追加します。</target>
        </trans-unit>
        <trans-unit id="21ad57f0c79a1dece0ae4e997db0ef88ee98f10c" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Task is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">タスクが&lt;em&gt;完了した&lt;/em&gt;ときに実行されるコールバックを追加します。</target>
        </trans-unit>
        <trans-unit id="e692059a99db6212feae89c0b74f4f86c48a8179" translate="yes" xml:space="preserve">
          <source>Add a character set alias. &lt;em&gt;alias&lt;/em&gt; is the alias name, e.g. &lt;code&gt;latin-1&lt;/code&gt;. &lt;em&gt;canonical&lt;/em&gt; is the character set&amp;rsquo;s canonical name, e.g. &lt;code&gt;iso-8859-1&lt;/code&gt;.</source>
          <target state="translated">文字セットのエイリアスを追加します。&lt;em&gt;alias&lt;/em&gt;はエイリアス名です（例： &lt;code&gt;latin-1&lt;/code&gt; )。&lt;em&gt;canonical&lt;/em&gt;は、文字セットの正規名です（例： &lt;code&gt;iso-8859-1&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="11e078738b2dfdecaf78a03a7ad2e1f50dd6454f" translate="yes" xml:space="preserve">
          <source>Add a codec that map characters in the given character set to and from Unicode.</source>
          <target state="translated">与えられた文字セット内の文字をUnicodeとの間でマップするコーデックを追加します。</target>
        </trans-unit>
        <trans-unit id="6864afe1da0b0e5f3b0be081911c070361ce7f9d" translate="yes" xml:space="preserve">
          <source>Add a director as parent.</source>
          <target state="translated">親として監督を追加します。</target>
        </trans-unit>
        <trans-unit id="f4f4ec5cb3f34d7548e8ce61a5b61b98f0a79146" translate="yes" xml:space="preserve">
          <source>Add a directory to sys.path and process its &lt;code&gt;.pth&lt;/code&gt; files. Typically used in &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; (see above).</source>
          <target state="translated">sys.pathにディレクトリを追加し、その &lt;code&gt;.pth&lt;/code&gt; ファイルを処理します。典型的に使用 &lt;code&gt;sitecustomize&lt;/code&gt; 又は &lt;code&gt;usercustomize&lt;/code&gt; （上記参照）。</target>
        </trans-unit>
        <trans-unit id="b7e0cf044bf83f105b1c2df55e4a2994ff91feee" translate="yes" xml:space="preserve">
          <source>Add a file to the current component of the directory, starting a new one if there is no current component. By default, the file name in the source and the file table will be identical. If the &lt;em&gt;src&lt;/em&gt; file is specified, it is interpreted relative to the current directory. Optionally, a &lt;em&gt;version&lt;/em&gt; and a &lt;em&gt;language&lt;/em&gt; can be specified for the entry in the File table.</source>
          <target state="translated">ディレクトリの現在のコンポーネントにファイルを追加し、現在のコンポーネントがない場合は新しいファイルを開始します。デフォルトでは、ソース内のファイル名とファイルテーブルは同じになります。&lt;em&gt;src&lt;/em&gt;ファイルが指定されている場合、現在のディレクトリを基準に解釈されます。オプションで、&lt;em&gt;バージョン&lt;/em&gt;と&lt;em&gt;言語&lt;/em&gt;をファイルテーブルのエントリに指定できます。</target>
        </trans-unit>
        <trans-unit id="e1b148a57e911bae17afc91f03e7661232e219c7" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; の&lt;/a&gt;後に呼び出される関数を追加して、テスト中に使用されたリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="78ce526e4b4169e82bfb42d8527ed56483cd78b4" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; の&lt;/a&gt;後に呼び出される関数を追加して、テストクラス中に使用されるリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="5b62e8d801245195a11f24b7a0d01ffecdbafd41" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;code&gt;tearDownModule()&lt;/code&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;code&gt;tearDownModule()&lt;/code&gt; の後に呼び出される関数を追加して、テストクラス中に使用されるリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="9beb6337ad420738cf187ef7704f4b9c84fc673f" translate="yes" xml:space="preserve">
          <source>Add a handler for a &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;ハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="d38459dabab55a25da4ed78ba4eb990299fd36c8" translate="yes" xml:space="preserve">
          <source>Add a header that will not be added to a redirected request.</source>
          <target state="translated">リダイレクトされたリクエストに追加されないヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="f2603d5ae35616f68557abf0dc068f3846cc8c46" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing fields.</source>
          <target state="translated">メッセージにフィールド名&lt;em&gt;name&lt;/em&gt;と値&lt;em&gt;val&lt;/em&gt;を含むヘッダーを追加します。このフィールドは、メッセージの既存のフィールドの末尾に追加されます。</target>
        </trans-unit>
        <trans-unit id="8a8b78b89a289dd8343df6ddfaae9ce828ff046b" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing headers.</source>
          <target state="translated">メッセージにフィールド名&lt;em&gt;name&lt;/em&gt;と値&lt;em&gt;val&lt;/em&gt;を含むヘッダーを追加します。このフィールドは、メッセージの既存のヘッダーの最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="399487ac348d2614389b7168ca41dd04673b039c" translate="yes" xml:space="preserve">
          <source>Add a list of files to the current component as specified in the glob pattern. Individual files can be excluded in the &lt;em&gt;exclude&lt;/em&gt; list.</source>
          <target state="translated">ファイルのリストを、globパターンで指定されている現在のコンポーネントに追加します。個々のファイルは&lt;em&gt;除外&lt;/em&gt;リストで除外できます。</target>
        </trans-unit>
        <trans-unit id="a132f64a1d2da65d23dfabb4ad146d6d74425848" translate="yes" xml:space="preserve">
          <source>Add a mapping from the MIME type &lt;em&gt;type&lt;/em&gt; to the extension &lt;em&gt;ext&lt;/em&gt;. When the extension is already known, the new type will replace the old one. When the type is already known the extension will be added to the list of known extensions.</source>
          <target state="translated">MIMEタイプ&lt;em&gt;type&lt;/em&gt;から拡張子&lt;em&gt;ext&lt;/em&gt;へのマッピングを追加します。拡張子が既知の場合、新しいタイプが古いタイプを置き換えます。タイプが既知の場合、拡張子は既知の拡張子のリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="7632c76ae9b370fe2c8ab64acfc2c8365dcbe310" translate="yes" xml:space="preserve">
          <source>Add a mark with the given id (larger than 0), and the given name at the given position. This method can be called at any time before &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたID（0より大きい）と指定された位置に指定された名前のマークを追加します。このメソッドは、&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; の&lt;/a&gt;前であればいつでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c5dbd50d1faa7567cdc7358bac4bacf2a33aa997" translate="yes" xml:space="preserve">
          <source>Add a new action at the beginning. See &lt;a href=&quot;#pipes.Template.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; for explanations of the arguments.</source>
          <target state="translated">最初に新しいアクションを追加します。引数の説明については、&lt;a href=&quot;#pipes.Template.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="043d2a3cceb4af1dd193034c1f7337a877747c87" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;name&lt;/code&gt; attribute matches. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">要素に新しい属性ノードを追加し、 &lt;code&gt;name&lt;/code&gt; 属性が一致する場合は、必要に応じて既存の属性を置き換えます。置き換えが発生すると、古い属性ノードが返されます。場合&lt;em&gt;newAttrが&lt;/em&gt;すでに使用されている、&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="83d2435f056be8af45e7ae386b8b99adbd638555" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;namespaceURI&lt;/code&gt; and &lt;code&gt;localName&lt;/code&gt; attributes match. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">要素に新しい属性ノードを追加し、 &lt;code&gt;namespaceURI&lt;/code&gt; 属性と &lt;code&gt;localName&lt;/code&gt; 属性が一致する場合は、必要に応じて既存の属性を置き換えます。置き換えが発生すると、古い属性ノードが返されます。場合&lt;em&gt;newAttrが&lt;/em&gt;すでに使用されている、&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="5f1ba12e042226aebc04d021425dcda3c82b9d6d" translate="yes" xml:space="preserve">
          <source>Add a new child node to this node at the end of the list of children, returning &lt;em&gt;newChild&lt;/em&gt;. If the node was already in the tree, it is removed first.</source>
          <target state="translated">子のリストの最後にあるこのノードに新しい子ノードを追加し、&lt;em&gt;newChildを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。ノードがすでにツリーにある場合は、最初に削除されます。</target>
        </trans-unit>
        <trans-unit id="956452c465afe1d5906a42ce4cf84991525c7da4" translate="yes" xml:space="preserve">
          <source>Add a new record to the &lt;code&gt;Feature&lt;/code&gt; table, using the values &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;parent.id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;desc&lt;/em&gt;, &lt;em&gt;display&lt;/em&gt;, &lt;em&gt;level&lt;/em&gt;, &lt;em&gt;directory&lt;/em&gt;, and &lt;em&gt;attributes&lt;/em&gt;. The resulting feature object can be passed to the &lt;code&gt;start_component()&lt;/code&gt; method of &lt;a href=&quot;#msilib.Directory&quot;&gt;&lt;code&gt;Directory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;id&lt;/em&gt;、&lt;em&gt;parent.id&lt;/em&gt;、&lt;em&gt;title&lt;/em&gt;、&lt;em&gt;desc&lt;/em&gt;、&lt;em&gt;display&lt;/em&gt;、&lt;em&gt;level&lt;/em&gt;、&lt;em&gt;directory&lt;/em&gt;、および&lt;em&gt;attributes&lt;/em&gt;の値を使用して、 &lt;code&gt;Feature&lt;/code&gt; テーブルに新しいレコードを追加し&lt;em&gt;ます&lt;/em&gt;。得られた機能オブジェクトはに渡すことができる &lt;code&gt;start_component()&lt;/code&gt; のメソッド&lt;a href=&quot;#msilib.Directory&quot;&gt; &lt;code&gt;Directory&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edf4e5ba20ecf9c15997bd4578bcf0e6d730a52b" translate="yes" xml:space="preserve">
          <source>Add a path to the DLL search path.</source>
          <target state="translated">DLLの検索パスを追加します。</target>
        </trans-unit>
        <trans-unit id="803042366eb338df43adb37b2c3158da3cb637b5" translate="yes" xml:space="preserve">
          <source>Add a radio button named &lt;em&gt;name&lt;/em&gt; to the group, at the coordinates &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, and with the label &lt;em&gt;text&lt;/em&gt;. If &lt;em&gt;value&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, it defaults to &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;ラジオボタンをグループの座標&lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;width&lt;/em&gt;、&lt;em&gt;height&lt;/em&gt;に、ラベル&lt;em&gt;textを&lt;/em&gt;付けて追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;値&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、デフォルトで&lt;em&gt;nameになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c244c1c66537416292b44411850e0f1a066b6064" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">sectionという名前の&lt;em&gt;セクション&lt;/em&gt;をインスタンスに追加します。指定された名前のセクションがすでに存在する場合、&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;が発生します。場合は&lt;em&gt;デフォルトのセクション&lt;/em&gt;名が渡された、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="18563df0f6461bd157eae779d180068be1023816" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The name of the section must be a string; if not, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">sectionという名前の&lt;em&gt;セクション&lt;/em&gt;をインスタンスに追加します。指定された名前のセクションがすでに存在する場合、&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;が発生します。場合は&lt;em&gt;デフォルトのセクション&lt;/em&gt;名が渡された、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。セクションの名前は文字列でなければなりません。そうでない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ec2b76ff3671d42ae4e68ce30a3d7a4f0d38926e" translate="yes" xml:space="preserve">
          <source>Add a spec to a mock. &lt;em&gt;spec&lt;/em&gt; can either be an object or a list of strings. Only attributes on the &lt;em&gt;spec&lt;/em&gt; can be fetched as attributes from the mock.</source>
          <target state="translated">仕様をモックに追加します。&lt;em&gt;spec&lt;/em&gt;は、オブジェクトまたは文字列のリストのいずれかです。&lt;em&gt;仕様の&lt;/em&gt;属性のみをモックから属性としてフェッチできます。</target>
        </trans-unit>
        <trans-unit id="f67e36b3f39cd8d22597658d1382717ef4e6e7a2" translate="yes" xml:space="preserve">
          <source>Add a turtle shape to TurtleScreen&amp;rsquo;s shapelist. Only thusly registered shapes can be used by issuing the command &lt;code&gt;shape(shapename)&lt;/code&gt;.</source>
          <target state="translated">TurtleScreenの形状リストに亀の形状を追加します。このように登録された形状のみ、コマンド &lt;code&gt;shape(shapename)&lt;/code&gt; を発行して使用できます。</target>
        </trans-unit>
        <trans-unit id="3a9170cfd78aba11ef6be48039048ae498ec91fe" translate="yes" xml:space="preserve">
          <source>Add all &lt;em&gt;records&lt;/em&gt; to the table named &lt;em&gt;table&lt;/em&gt; in &lt;em&gt;database&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;データベースの&lt;/em&gt; tableという名前の&lt;em&gt;テーブル&lt;/em&gt;にすべての&lt;em&gt;レコード&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecbebdd271fd104189ee86c2c855300b2e2554a0" translate="yes" xml:space="preserve">
          <source>Add all table content from &lt;em&gt;module&lt;/em&gt; to &lt;em&gt;database&lt;/em&gt;. &lt;em&gt;module&lt;/em&gt; must contain an attribute &lt;em&gt;tables&lt;/em&gt; listing all tables for which content should be added, and one attribute per table that has the actual content.</source>
          <target state="translated">&lt;em&gt;モジュールの&lt;/em&gt;すべてのテーブルコンテンツを&lt;em&gt;データベースに&lt;/em&gt;追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;モジュールに&lt;/em&gt;は、コンテンツを追加するすべてのテーブルをリストする属性&lt;em&gt;テーブル&lt;/em&gt;と、実際のコンテンツを含むテーブルごとに1つの属性が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="372176a3e2381d173f49ac01e30bb3b9770b39f4" translate="yes" xml:space="preserve">
          <source>Add all the tests from an iterable of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instances to this test suite.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;インスタンスのイテラブルからすべてのテストをこのテストスイートに追加します。</target>
        </trans-unit>
        <trans-unit id="b492c2a99126b9234ddf251a1a59fe971fb37f2d" translate="yes" xml:space="preserve">
          <source>Add an entry to the Component table, and make this component the current component for this directory. If no component name is given, the directory name is used. If no &lt;em&gt;feature&lt;/em&gt; is given, the current feature is used. If no &lt;em&gt;flags&lt;/em&gt; are given, the directory&amp;rsquo;s default flags are used. If no &lt;em&gt;keyfile&lt;/em&gt; is given, the KeyPath is left null in the Component table.</source>
          <target state="translated">エントリをコンポーネントテーブルに追加し、このコンポーネントをこのディレクトリの現在のコンポーネントにします。コンポーネント名を指定しない場合、ディレクトリ名が使用されます。&lt;em&gt;機能&lt;/em&gt;が指定されていない場合は、現在の機能が使用されます。&lt;em&gt;フラグ&lt;/em&gt;が指定されていない場合、ディレクトリのデフォルトのフラグが使用されます。&lt;em&gt;キーファイル&lt;/em&gt;が指定されていない場合、KeyPathはComponentテーブルでnullのままになります。</target>
        </trans-unit>
        <trans-unit id="a8e4ba9db45e2b8738b50e71a58cacd0bcd42541" translate="yes" xml:space="preserve">
          <source>Add an explicit test for any bugs discovered for the tested code. This will make sure that the error does not crop up again if the code is changed in the future.</source>
          <target state="translated">テストされたコードで発見されたバグに対する明示的なテストを追加します。これにより、将来コードが変更されてもエラーが再発しないようにします。</target>
        </trans-unit>
        <trans-unit id="9b04913d79f7cfbfe6863c93041cd08396c02274" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Bitmap&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Bitmap&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="f04e5aee74da749672ecd3c375440bfd289ebf25" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;CheckBox&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;CheckBox&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="1ea55273868e472ba5cd1fdff1290be6e3270470" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Line&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="32eb8ef0229fb6b8591a91aa431c3b6229972d3d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;PushButton&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;PushButton&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="d7f8c90252afef47d34178872d2340f46e7b6d4d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;RadioButtonGroup&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;RadioButtonGroup&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="fa6a94fb866d23f14896c6e66cc37b189a24a3c4" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Text&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="13e9733ac929160d5ff41a7a4ad44c3cefe7d8b3" translate="yes" xml:space="preserve">
          <source>Add another header to the request. Headers are currently ignored by all handlers except HTTP handlers, where they are added to the list of headers sent to the server. Note that there cannot be more than one header with the same name, and later calls will overwrite previous calls in case the &lt;em&gt;key&lt;/em&gt; collides. Currently, this is no loss of HTTP functionality, since all headers which have meaning when used more than once have a (header-specific) way of gaining the same functionality using only one header.</source>
          <target state="translated">リクエストに別のヘッダーを追加します。ヘッダーは現在、サーバーに送信されるヘッダーのリストに追加されるHTTPハンドラーを除くすべてのハンドラーによって無視されます。同じ名前のヘッダーが複数存在することはできません。&lt;em&gt;キー&lt;/em&gt;が衝突した場合に備えて、後の呼び出しで前の呼び出しが上書きされます。現在、これはHTTP機能の損失ではありません。複数回使用したときに意味を持つすべてのヘッダーには、1つのヘッダーのみを使用して同じ機能を取得する（ヘッダー固有の）方法があるためです。</target>
        </trans-unit>
        <trans-unit id="29a0d6ad071e1ad1763bdd7c92a4be720791a0dc" translate="yes" xml:space="preserve">
          <source>Add as many components to this object as desired, using the &lt;code&gt;addcomponent()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;addcomponent()&lt;/code&gt; メソッドを使用して、このオブジェクトに必要なだけコンポーネントを追加します。</target>
        </trans-unit>
        <trans-unit id="12c1a2c19bbd4d6f91aa72baacc717bacee4a8c0" translate="yes" xml:space="preserve">
          <source>Add attribute &lt;em&gt;attr&lt;/em&gt; from the &amp;ldquo;background&amp;rdquo; set applied to all writes to the current window.</source>
          <target state="translated">現在のウィンドウへのすべての書き込みに適用される「バックグラウンド」セットから属性&lt;em&gt;attr&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="998b3790c02bae2255f37d067df86dafa27f4dbb" translate="yes" xml:space="preserve">
          <source>Add character &lt;em&gt;ch&lt;/em&gt; with attribute &lt;em&gt;attr&lt;/em&gt;, and immediately call &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; on the window.</source>
          <target state="translated">属性&lt;em&gt;attr&lt;/em&gt;で文字&lt;em&gt;ch&lt;/em&gt;を追加し、ウィンドウで即時に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;を呼び出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79b5c2ddead03fd3fd58c82009a9c6954a412b24" translate="yes" xml:space="preserve">
          <source>Add character properties to the global registry.</source>
          <target state="translated">グローバルレジストリに文字プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="df120b4456df84f654f676f6eaeadfd2e64a3bb2" translate="yes" xml:space="preserve">
          <source>Add correct &lt;em&gt;Cookie&lt;/em&gt; header to &lt;em&gt;request&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;リクエスト&lt;/em&gt;に正しい&lt;em&gt;Cookie&lt;/em&gt;ヘッダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574ee98f08df0ee8c3a2828a4f73b12f29637bb1" translate="yes" xml:space="preserve">
          <source>Add element &lt;em&gt;elem&lt;/em&gt; to the set.</source>
          <target state="translated">要素&lt;em&gt;elem&lt;/em&gt;をセットに追加します。</target>
        </trans-unit>
        <trans-unit id="7e352b09639827f1e7d4681172bc702d69e5025a" translate="yes" xml:space="preserve">
          <source>Add headers and payload to &lt;em&gt;msg&lt;/em&gt;:</source>
          <target state="translated">ヘッダーとペイロードを&lt;em&gt;msgに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="0af4c5b16248d5b4cd5df95eeac8d02e624fbba5" translate="yes" xml:space="preserve">
          <source>Add support for when a program which uses &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; has been frozen to produce a Windows executable. (Has been tested with &lt;strong&gt;py2exe&lt;/strong&gt;, &lt;strong&gt;PyInstaller&lt;/strong&gt; and &lt;strong&gt;cx_Freeze&lt;/strong&gt;.)</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;を使用するプログラムがWindows実行可能ファイルを生成するために凍結された場合のサポートを追加します。（&lt;strong&gt;py2exe&lt;/strong&gt;、&lt;strong&gt;PyInstaller&lt;/strong&gt;、&lt;strong&gt;cx_Freezeで&lt;/strong&gt;テストされています。）</target>
        </trans-unit>
        <trans-unit id="3ffc4ee278ee53e1d735791b4acf7a7f15d9b077" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarinfo&lt;/em&gt; to the archive. If &lt;em&gt;fileobj&lt;/em&gt; is given, it should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;, and &lt;code&gt;tarinfo.size&lt;/code&gt; bytes are read from it and added to the archive. You can create &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects directly, or by using &lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt;&lt;code&gt;gettarinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;tarinfo&lt;/em&gt;をアーカイブに追加します。&lt;em&gt;fileobj&lt;/em&gt;が指定されている場合、それは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;である必要があり、 &lt;code&gt;tarinfo.size&lt;/code&gt; バイトがそこから読み取られてアーカイブに追加されます。&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトは直接作成することも、&lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt; &lt;code&gt;gettarinfo()&lt;/code&gt; &lt;/a&gt;を使用して作成することもできます。</target>
        </trans-unit>
        <trans-unit id="fdfaeb4db76038933f7f7f07bb6e34cf522668b0" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;name&lt;/em&gt; to the archive. &lt;em&gt;name&lt;/em&gt; may be any type of file (directory, fifo, symbolic link, etc.). If given, &lt;em&gt;arcname&lt;/em&gt; specifies an alternative name for the file in the archive. Directories are added recursively by default. This can be avoided by setting &lt;em&gt;recursive&lt;/em&gt; to &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. Recursion adds entries in sorted order. If &lt;em&gt;filter&lt;/em&gt; is given, it should be a function that takes a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object argument and returns the changed &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If it instead returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object will be excluded from the archive. See &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt; for an example.</source>
          <target state="translated">ファイル&lt;em&gt;名&lt;/em&gt;をアーカイブに追加します。&lt;em&gt;name&lt;/em&gt;は任意のタイプのファイル（ディレクトリ、fifo、シンボリックリンクなど）にすることができます。指定された場合、&lt;em&gt;arcname&lt;/em&gt;はアーカイブ内のファイルの代替名を指定します。デフォルトでは、ディレクトリは再帰的に追加されます。これは、&lt;em&gt;再帰&lt;/em&gt;を&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; に&lt;/a&gt;設定することで回避できます。再帰は、エントリをソート順に追加します。&lt;em&gt;filter&lt;/em&gt;を指定する場合、それは&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトの引数を取り、変更された&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを返す関数である必要があります。代わりに&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返す場合、&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトはアーカイブから除外されます。&lt;a href=&quot;#tar-examples&quot;&gt;例&lt;/a&gt;については、例を参照してください。</target>
        </trans-unit>
        <trans-unit id="d29a955c2b80ea1b99365c302eb9e52329eccf96" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;path&lt;/em&gt; into the &lt;code&gt;_Stream&lt;/code&gt; table of &lt;em&gt;database&lt;/em&gt;, with the stream name &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">ファイル&lt;em&gt;パス&lt;/em&gt;を&lt;em&gt;データベース&lt;/em&gt;の &lt;code&gt;_Stream&lt;/code&gt; テーブルに、ストリーム名&lt;em&gt;nameで&lt;/em&gt;追加します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84b4718bc09ff9c6bdaed6b0ebcaf35dcdb8fe6f" translate="yes" xml:space="preserve">
          <source>Add the file with the pathname &lt;em&gt;full&lt;/em&gt; to the CAB file, under the name &lt;em&gt;logical&lt;/em&gt;. If there is already a file named &lt;em&gt;logical&lt;/em&gt;, a new file name is created.</source>
          <target state="translated">パス名が&lt;em&gt;fullの&lt;/em&gt;ファイルを&lt;em&gt;logical&lt;/em&gt;という名前でCABファイルに追加します。&lt;em&gt;logical&lt;/em&gt;という名前のファイルが既に存在する場合は、新しいファイル名が作成されます。</target>
        </trans-unit>
        <trans-unit id="fd308f86fbcd8cd8291b8e54f5281bd95fc24e2e" translate="yes" xml:space="preserve">
          <source>Add the given &lt;em&gt;payload&lt;/em&gt; to the current payload, which must be &lt;code&gt;None&lt;/code&gt; or a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects before the call. After the call, the payload will always be a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. If you want to set the payload to a scalar object (e.g. a string), use &lt;a href=&quot;#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">指定された&lt;em&gt;ペイロード&lt;/em&gt;を現在のペイロードに追加します。これは、呼び出し前に &lt;code&gt;None&lt;/code&gt; または&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのリストである必要があります。呼び出しの後、ペイロードは常に&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのリストになります。ペイロードをスカラーオブジェクト（文字列など）に設定する場合は、代わりに&lt;a href=&quot;#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="f7d0ce06c6bbfae7f3d2b3526eb4216ad14cdf22" translate="yes" xml:space="preserve">
          <source>Added callables are called in the order that they were added and are always called in a thread belonging to the process that added them. If the callable raises an &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; subclass, it will be logged and ignored. If the callable raises a &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; subclass, the behavior is undefined.</source>
          <target state="translated">追加された呼び出し可能オブジェクトは、追加された順に呼び出され、常にそれらを追加したプロセスに属するスレッドで呼び出されます。呼び出し可能オブジェクトが&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;サブクラスを発生させる場合、それはログに記録され、無視されます。呼び出し可能オブジェクトが&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;サブクラスを発生させる場合、動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="1b85233cd9ebffe50d11b2cf0805696ea0ceed2c" translate="yes" xml:space="preserve">
          <source>Added the &lt;em&gt;initializer&lt;/em&gt; and &lt;em&gt;initargs&lt;/em&gt; arguments.</source>
          <target state="translated">&lt;em&gt;初期化子&lt;/em&gt;と&lt;em&gt;initargs&lt;/em&gt;引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="8827f17fde890fe438a85bcb36162a90217916ab" translate="yes" xml:space="preserve">
          <source>Adding HTTP headers:</source>
          <target state="translated">HTTPヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="32794b36e540f138de7310a0852226f80b61a093" translate="yes" xml:space="preserve">
          <source>Adding More Numeric ABCs</source>
          <target state="translated">数値ABCの追加</target>
        </trans-unit>
        <trans-unit id="b8e5ab085a6e2321c969eab106d044654f14d5d5" translate="yes" xml:space="preserve">
          <source>Adding arguments</source>
          <target state="translated">引数の追加</target>
        </trans-unit>
        <trans-unit id="366c31b6684891779f28e34e482fc51e6affae83" translate="yes" xml:space="preserve">
          <source>Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk for the novice. The book is not exhaustive, and for many details it defers to the man pages.</source>
          <target state="translated">Addison-WesleyはJohn Ousterhout著のTcl and the Tk Toolkit (ISBN 0-201-63337-X)という本を出版していますが、これは初心者向けのTclとTkの良い入門書です。この本は網羅的ではなく、多くの詳細については man ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="e1c5ea673fbb82149c08ab498bee248bfd9199d0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="427bece2ad850698371dca05dc622c9d29b6935f" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b16d8a6bb760515890fca9c712c787901b31c7ff" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c946af7090c97564c6f84564e39269075d4932e0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;, Section 6</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;、セクション6</target>
        </trans-unit>
        <trans-unit id="1c7cfd465bd6c5072f84f9bd1a70679a32bc06b5" translate="yes" xml:space="preserve">
          <source>Additional Methods on Float</source>
          <target state="translated">フロートの追加方法</target>
        </trans-unit>
        <trans-unit id="1a6fbb3a3106faa08803de5aa3ee5fac8e2f5fb2" translate="yes" xml:space="preserve">
          <source>Additional Methods on Integer Types</source>
          <target state="translated">整数型に関する追加メソッド</target>
        </trans-unit>
        <trans-unit id="e07bcbcb394ff663d4ff9ec28b7d29949f0638bb" translate="yes" xml:space="preserve">
          <source>Additional Utility Classes and Functions</source>
          <target state="translated">追加のユーティリティクラスと関数</target>
        </trans-unit>
        <trans-unit id="90441a19c39c85468a4336d332b3c4a497d72486" translate="yes" xml:space="preserve">
          <source>Additional directives may be supported on certain platforms, but only the ones listed here have a meaning standardized by ANSI C. To see the full set of format codes supported on your platform, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime(3)&lt;/a&gt;&lt;/em&gt; documentation.</source>
          <target state="translated">追加のディレクティブは特定のプラットフォームでサポートされる場合がありますが、ここにリストされているディレクティブのみがANSI Cによって標準化された意味を持っています。プラットフォームでサポートされるフォーマットコードの完全なセットを確認するには、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime（3）の&lt;/a&gt;&lt;/em&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9be4003cba4f5f477bbf08bed081c603cb4dc1f2" translate="yes" xml:space="preserve">
          <source>Additional help sources may be added here with the Configure IDLE dialog under the General tab. See the &lt;a href=&quot;#help-sources&quot;&gt;Help sources&lt;/a&gt; subsection below for more on Help menu choices.</source>
          <target state="translated">その他のヘルプソースは、[全般]タブの[IDLEの構成]ダイアログで追加できます。ヘルプメニューの選択の詳細については、以下の&lt;a href=&quot;#help-sources&quot;&gt;ヘルプソースの&lt;/a&gt;サブセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="0fbd97506d8de6a58a401e21f5cd9867835e4f81" translate="yes" xml:space="preserve">
          <source>Additional information on these special methods may be found in the Python Reference Manual (&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;Basic customization&lt;/a&gt;).</source>
          <target state="translated">これらの特別なメソッドに関する追加情報は、Pythonリファレンスマニュアル（&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;基本的なカスタマイズ&lt;/a&gt;）にあります。</target>
        </trans-unit>
        <trans-unit id="7edb640f6649a2cf3bbe1d95569b1e866f202e00" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments.</source>
          <target state="translated">追加のキーワード引数。</target>
        </trans-unit>
        <trans-unit id="5650f46efd09c607a30ce9bd7e2e4e612b751be7" translate="yes" xml:space="preserve">
          <source>Additional keyword parameters, collected in &lt;em&gt;x509&lt;/em&gt;, may be used for authentication of the client when using the &lt;code&gt;https:&lt;/code&gt; scheme. The keywords &lt;em&gt;key_file&lt;/em&gt; and &lt;em&gt;cert_file&lt;/em&gt; are supported to provide an SSL key and certificate; both are needed to support client authentication.</source>
          <target state="translated">&lt;em&gt;x509&lt;/em&gt;で収集された追加のキーワードパラメータは、 &lt;code&gt;https:&lt;/code&gt; スキームを使用するときにクライアントの認証に使用できます。キーワード&lt;em&gt;key_file&lt;/em&gt;および&lt;em&gt;cert_file&lt;/em&gt;は、SSL鍵および証明書を提供するためにサポートされています。クライアント認証をサポートするには、両方が必要です。</target>
        </trans-unit>
        <trans-unit id="f126cf978efce5dfbbf7be549572a4fad90828fc" translate="yes" xml:space="preserve">
          <source>Additional module-level constants are defined for GNU/glibc based systems. These are &lt;code&gt;ST_NODEV&lt;/code&gt; (disallow access to device special files), &lt;code&gt;ST_NOEXEC&lt;/code&gt; (disallow program execution), &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; (writes are synced at once), &lt;code&gt;ST_MANDLOCK&lt;/code&gt; (allow mandatory locks on an FS), &lt;code&gt;ST_WRITE&lt;/code&gt; (write on file/directory/symlink), &lt;code&gt;ST_APPEND&lt;/code&gt; (append-only file), &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; (immutable file), &lt;code&gt;ST_NOATIME&lt;/code&gt; (do not update access times), &lt;code&gt;ST_NODIRATIME&lt;/code&gt; (do not update directory access times), &lt;code&gt;ST_RELATIME&lt;/code&gt; (update atime relative to mtime/ctime).</source>
          <target state="translated">追加のモジュールレベルの定数は、GNU / glibcベースのシステム用に定義されています。これらは、 &lt;code&gt;ST_NODEV&lt;/code&gt; （デバイス特殊ファイルへのアクセスを許可しない）、 &lt;code&gt;ST_NOEXEC&lt;/code&gt; （プログラム実行を許可しない）、 &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; （書き込みは一度に同期される）、 &lt;code&gt;ST_MANDLOCK&lt;/code&gt; （FSでの必須ロックを許可する）、 &lt;code&gt;ST_WRITE&lt;/code&gt; （ファイル/ディレクトリ/シンボリックリンクへの書き込み）、 &lt;code&gt;ST_APPEND&lt;/code&gt; です。（追加専用ファイル）、 &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; （不変ファイル）、 &lt;code&gt;ST_NOATIME&lt;/code&gt; （アクセス時間を更新しない）、 &lt;code&gt;ST_NODIRATIME&lt;/code&gt; （ディレクトリアクセス時間を更新しない）、 &lt;code&gt;ST_RELATIME&lt;/code&gt; （mtime / ctimeに相対的な時間を更新する）。</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">追加の注意事項</target>
        </trans-unit>
        <trans-unit id="755989eb26f111816b61fc7ebbbfb5473df1c15d" translate="yes" xml:space="preserve">
          <source>Additional parameters for the &lt;em&gt;Content-Type&lt;/em&gt; header are taken from the keyword arguments, or passed into the &lt;em&gt;_params&lt;/em&gt; argument, which is a keyword dictionary.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーの追加パラメーターは、キーワード引数から取得されるか、キーワード辞書である&lt;em&gt;_params&lt;/em&gt;引数に渡されます。</target>
        </trans-unit>
        <trans-unit id="7629707b992046f9cae97d693ca20d38c9007ee1" translate="yes" xml:space="preserve">
          <source>Additional processing classes are defined to find, parse, and run, and check doctest examples:</source>
          <target state="translated">追加の処理クラスは、doctestの例を検索、解析、実行、チェックするために定義されています。</target>
        </trans-unit>
        <trans-unit id="a15fa56393dfeea6e8ddbb0e0c2a6f3cc24b93de" translate="yes" xml:space="preserve">
          <source>Additional resources</source>
          <target state="translated">その他のリソース</target>
        </trans-unit>
        <trans-unit id="8776ffc7a25a62ae3b9b890b596779f5ea569144" translate="yes" xml:space="preserve">
          <source>Additionally the SMTPChannel may be extended to implement very specific interaction behaviour with SMTP clients.</source>
          <target state="translated">さらに、SMTPChannelは、SMTPクライアントとの非常に特殊な相互作用動作を実装するために拡張される可能性があります。</target>
        </trans-unit>
        <trans-unit id="599097e6f6575c6278515050930a9aa12db60e09" translate="yes" xml:space="preserve">
          <source>Additionally, if the &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; socket option is available (i.e. on Windows), it will be set on the socket. This will prevent anyone else from binding to our host/port for the duration of the test.</source>
          <target state="translated">さらに、 &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; ソケットオプションが利用可能な場合（つまり、Windowsの場合）、ソケットに設定されます。これにより、テストの間、他のユーザーがホスト/ポートにバインドするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="3ce8bb697c96962555e6797937ae5e1bc918c228" translate="yes" xml:space="preserve">
          <source>Additionally, maximum character &lt;em&gt;width&lt;/em&gt; can be suggested. If a long object cannot be split, the specified width will be exceeded:</source>
          <target state="translated">さらに、最大文字&lt;em&gt;幅&lt;/em&gt;を提案できます。長いオブジェクトを分割できない場合、指定された幅を超えます：</target>
        </trans-unit>
        <trans-unit id="0aff5c616f0a7398b7b227fa0d75ea3310d2ca88" translate="yes" xml:space="preserve">
          <source>Additionally, mock provides a &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorator that handles patching module and class level attributes within the scope of a test, along with &lt;a href=&quot;#unittest.mock.sentinel&quot;&gt;&lt;code&gt;sentinel&lt;/code&gt;&lt;/a&gt; for creating unique objects. See the &lt;a href=&quot;#quick-guide&quot;&gt;quick guide&lt;/a&gt; for some examples of how to use &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さらに、mockは、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;モジュールとクラスレベルの属性をテストのスコープ内で処理するpatch（）デコレーターと、一意のオブジェクトを作成するための&lt;a href=&quot;#unittest.mock.sentinel&quot;&gt; &lt;code&gt;sentinel&lt;/code&gt; &lt;/a&gt;提供します。&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; の&lt;/a&gt;使用例については、&lt;a href=&quot;#quick-guide&quot;&gt;クイックガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b0851cbdca337e8a2d55a8b2492f4247983ece5b" translate="yes" xml:space="preserve">
          <source>Additionally, there are &lt;strong&gt;low-level&lt;/strong&gt; APIs for &lt;em&gt;library and framework developers&lt;/em&gt; to:</source>
          <target state="translated">さらに、&lt;em&gt;ライブラリおよびフレームワークの開発者&lt;/em&gt;が次のことを行うための&lt;strong&gt;低レベル&lt;/strong&gt; APIがあります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e8cd6b574233c309842bad2694624be2f0c8ecc" translate="yes" xml:space="preserve">
          <source>Additionally, this module provides a class &lt;a href=&quot;#poplib.POP3_SSL&quot;&gt;&lt;code&gt;POP3_SSL&lt;/code&gt;&lt;/a&gt;, which provides support for connecting to POP3 servers that use SSL as an underlying protocol layer.</source>
          <target state="translated">さらに、このモジュールはクラス&lt;a href=&quot;#poplib.POP3_SSL&quot;&gt; &lt;code&gt;POP3_SSL&lt;/code&gt; &lt;/a&gt;を提供します。これは、基礎となるプロトコル層としてSSLを使用するPOP3サーバーへの接続をサポートします。</target>
        </trans-unit>
        <trans-unit id="c981b21c3eb7058c60d166fb915b3ba17868c9bd" translate="yes" xml:space="preserve">
          <source>Address Formats</source>
          <target state="translated">アドレス形式</target>
        </trans-unit>
        <trans-unit id="53cce0631f5ba4546493e150cc5ef970434eef7f" translate="yes" xml:space="preserve">
          <source>Address already in use</source>
          <target state="translated">既に使用されているアドレス</target>
        </trans-unit>
        <trans-unit id="54d86dbe4cc1a680cd53fee9148dc51da43f4f6d" translate="yes" xml:space="preserve">
          <source>Address family not supported by protocol</source>
          <target state="translated">プロトコルでサポートされていないアドレスファミリ</target>
        </trans-unit>
        <trans-unit id="a1e16e75ab014f83bd0bb70f5aa70df54bdef59b" translate="yes" xml:space="preserve">
          <source>Address headers are one of the most complex structured header types. The &lt;code&gt;AddressHeader&lt;/code&gt; class provides a generic interface to any address header.</source>
          <target state="translated">アドレスヘッダーは、最も複雑な構造化ヘッダータイプの1つです。 &lt;code&gt;AddressHeader&lt;/code&gt; のクラスは、任意のアドレスヘッダの汎用インタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="d8b2f4f386c56bbed38a9626989886270423def9" translate="yes" xml:space="preserve">
          <source>Address objects</source>
          <target state="translated">アドレスオブジェクト</target>
        </trans-unit>
        <trans-unit id="e87e00a4637133fec5ee5c803edca11622b049fb" translate="yes" xml:space="preserve">
          <source>Address objects can be compared with the usual set of comparison operators. Some examples:</source>
          <target state="translated">アドレスオブジェクトは、通常の比較演算子のセットで比較することができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="c84db6312b397100947cc87ed8f2b180ca9d473a" translate="yes" xml:space="preserve">
          <source>Address objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">アドレスオブジェクトは、いくつかの演算子をサポートしています。特に明記されていない限り、演算子は互換性のあるオブジェクト間でのみ適用することができます(すなわち、IPv4とIPv4、IPv6とIPv6)。</target>
        </trans-unit>
        <trans-unit id="0105f2940c964aa9756c29f83e74bda0f90a5b32" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">メモリブロックのアドレス空間（ &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cfa96e7876c6aab98f33fc6360be994ef1aa3167" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt;). Read-only property.</source>
          <target state="translated">メモリブロックのアドレス空間（ &lt;code&gt;int&lt;/code&gt; ）。読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="8ed5201b3048cc904b8fa7061e9e3f310c0d8ee5" translate="yes" xml:space="preserve">
          <source>AddressHeader</source>
          <target state="translated">AddressHeader</target>
        </trans-unit>
        <trans-unit id="d4ebdece72b5d801675d16eca7e8e06688a7d640" translate="yes" xml:space="preserve">
          <source>Adds a blank line (indicating the end of the HTTP headers in the response) to the headers buffer and calls &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">空の行（応答のHTTPヘッダーの終わりを示す）をヘッダーバッファーに追加し、&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1f7acd6c47b0da85c7600f21a52f58ffbfd078f5" translate="yes" xml:space="preserve">
          <source>Adds a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack.</source>
          <target state="translated">コンテキストマネージャーの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドをコールバックスタックに追加します。</target>
        </trans-unit>
        <trans-unit id="9c5c71aac9de9bf5636184d5f42b68146a582a10" translate="yes" xml:space="preserve">
          <source>Adds a new tab to the notebook.</source>
          <target state="translated">ノートブックに新しいタブを追加します。</target>
        </trans-unit>
        <trans-unit id="dd9cdcb19b13e350658b98864b2b91b085b457fb" translate="yes" xml:space="preserve">
          <source>Adds a response header to the headers buffer and logs the accepted request. The HTTP response line is written to the internal buffer, followed by &lt;em&gt;Server&lt;/em&gt; and &lt;em&gt;Date&lt;/em&gt; headers. The values for these two headers are picked up from the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt;&lt;code&gt;version_string()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt;&lt;code&gt;date_time_string()&lt;/code&gt;&lt;/a&gt; methods, respectively. If the server does not intend to send any other headers using the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt; method, then &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt;&lt;code&gt;send_response()&lt;/code&gt;&lt;/a&gt; should be followed by an &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">ヘッダーバッファーに応答ヘッダーを追加し、受け入れた要求をログに記録します。HTTP応答行は内部バッファーに書き込まれ、その後に&lt;em&gt;サーバー&lt;/em&gt;ヘッダーと&lt;em&gt;日付&lt;/em&gt;ヘッダーが続き&lt;em&gt;ます&lt;/em&gt;。これら2つのヘッダーの値は、それぞれ&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt; &lt;code&gt;version_string()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt; &lt;code&gt;date_time_string()&lt;/code&gt; &lt;/a&gt;メソッドから取得されます。サーバが使用して、他のヘッダを送信する意思がない場合は&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;メソッドを、そして&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt; &lt;code&gt;send_response()&lt;/code&gt; &lt;/a&gt;が続くべきである&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;の呼び出し。</target>
        </trans-unit>
        <trans-unit id="c70a7a21a70e6fd37ae057e1ed13fa3776bf6066" translate="yes" xml:space="preserve">
          <source>Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">すべての標準のサイト固有のディレクトリをモジュール検索パスに追加します。この関数は、Pythonインタープリターが&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;フラグで開始されていない限り、このモジュールがインポートされるときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23f4846b019473167e5d95d7c18b067286943485" translate="yes" xml:space="preserve">
          <source>Adds or modifies an event</source>
          <target state="translated">イベントの追加または変更</target>
        </trans-unit>
        <trans-unit id="ba99f69318c5b2875afcc8e4c7d4361adb5ebefc" translate="yes" xml:space="preserve">
          <source>Adds text to the current element. &lt;em&gt;data&lt;/em&gt; is a string. This should be either a bytestring, or a Unicode string.</source>
          <target state="translated">現在の要素にテキストを追加します。&lt;em&gt;データ&lt;/em&gt;は文字列です。これは、バイト文字列またはUnicode文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="b7d3a401c5e2e8b07acd3f6878239513a252af73" translate="yes" xml:space="preserve">
          <source>Adds the HTTP header to an internal buffer which will be written to the output stream when either &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt; is invoked. &lt;em&gt;keyword&lt;/em&gt; should specify the header keyword, with &lt;em&gt;value&lt;/em&gt; specifying its value. Note that, after the send_header calls are done, &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; MUST BE called in order to complete the operation.</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに出力ストリームに書き込まれる内部バッファーにHTTPヘッダーを追加します。&lt;em&gt;キーワードを&lt;/em&gt;用いて、ヘッダのキーワードを指定しなければならない&lt;em&gt;値は&lt;/em&gt;、その値を指定します。send_header呼び出しが完了した後、操作を完了するために&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="277dcf73a9142261968c1b0d938f93b9fc4a5516" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;em&gt;subelement&lt;/em&gt; to the end of this element&amp;rsquo;s internal list of subelements. Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;subelement&lt;/em&gt; is not an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この要素のサブ要素の内部リストの末尾に要素&lt;em&gt;サブ要素&lt;/em&gt;を追加します。発生させ&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外を&lt;/a&gt;場合は&lt;em&gt;サブ要素が&lt;/em&gt;ない&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef1fbe96c8dbb8f7464127475dab7025e0bc99db" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this handler.</source>
          <target state="translated">指定されたフィルター&lt;em&gt;filter&lt;/em&gt;をこのハンドラーに追加します。</target>
        </trans-unit>
        <trans-unit id="d974f7ad089b197b45f9485d4aa7cf708a1848bf" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this logger.</source>
          <target state="translated">指定されたフィルター&lt;em&gt;filter&lt;/em&gt;をこのロガーに追加します。</target>
        </trans-unit>
        <trans-unit id="21e14a01ccb15fe568cac7d9b97974261ead478b" translate="yes" xml:space="preserve">
          <source>Adds the specified handler &lt;em&gt;hdlr&lt;/em&gt; to this logger.</source>
          <target state="translated">指定されたハンドラー&lt;em&gt;hdlr&lt;/em&gt;をこのロガーに追加します。</target>
        </trans-unit>
        <trans-unit id="397723ab2192f7ea42bdc7d4cb3c6961b4ccd5fe" translate="yes" xml:space="preserve">
          <source>Advanced API</source>
          <target state="translated">高度なAPI</target>
        </trans-unit>
        <trans-unit id="5fe095447c43964932a08f188d1a91498a6182f7" translate="yes" xml:space="preserve">
          <source>Advanced Tutorial</source>
          <target state="translated">上級チュートリアル</target>
        </trans-unit>
        <trans-unit id="24ca54306fd1d4616674769f3f7f6a1715604b03" translate="yes" xml:space="preserve">
          <source>Advanced usage: you can derive subclasses of &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; to customize the placeholder syntax, delimiter character, or the entire regular expression used to parse template strings. To do this, you can override these class attributes:</source>
          <target state="translated">高度な使用法：&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;サブクラスを派生させて、プレースホルダー構文、区切り文字、またはテンプレート文字列の解析に使用される正規表現全体をカスタマイズできます。これを行うには、次のクラス属性をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="251637d0b15caeee9ca6a8cb9ffecf846325c014" translate="yes" xml:space="preserve">
          <source>Advertise error</source>
          <target state="translated">広告エラー</target>
        </trans-unit>
        <trans-unit id="8d1b5c908485d5b8bf002b642c2265dccbb27a12" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;KEY_MOUSE&lt;/code&gt; to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt;. &lt;em&gt;id&lt;/em&gt; is an ID value used to distinguish multiple devices, and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;z&lt;/em&gt; are the event&amp;rsquo;s coordinates. (&lt;em&gt;z&lt;/em&gt; is currently unused.) &lt;em&gt;bstate&lt;/em&gt; is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where &lt;em&gt;n&lt;/em&gt; is the button number from 1 to 4: &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt;, &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt;, &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTON_SHIFT&lt;/code&gt;, &lt;code&gt;BUTTON_CTRL&lt;/code&gt;, &lt;code&gt;BUTTON_ALT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;KEY_MOUSE&lt;/code&gt; を返してマウスイベントを通知した後、このメソッドを呼び出して、5つのタプル &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt; として表されるキューに入れられたマウスイベントを取得する必要があります。&lt;em&gt;id&lt;/em&gt;は複数のデバイスを区別するために使用されるID値であり、&lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;z&lt;/em&gt;はイベントの座標です。 （&lt;em&gt;z&lt;/em&gt;は現在使用されていません。）&lt;em&gt;bstate&lt;/em&gt;は整数値であり、そのビットはイベントのタイプを示すために設定され、次の定数の1つ以上のビットごとのORになります。ここで、&lt;em&gt;n&lt;/em&gt;は1〜4のボタン番号です。 &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTON_SHIFT&lt;/code&gt; 、 &lt;code&gt;BUTTON_CTRL&lt;/code&gt; 、 &lt;code&gt;BUTTON_ALT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1cc6fee1dda0b92c90ec20582c20d1074e2cf23" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = attrgetter('name')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;b.name&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="83b61198fe148750b9221638b3689ca30af865a3" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name, b.date)&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;(b.name, b.date)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23c9e096c43f4c6ee6a95562136ca8d19e97177b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0de2cea705e050aae366d3a78eab3afcdcc07f88" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = itemgetter(2)&lt;/code&gt;, the call &lt;code&gt;f(r)&lt;/code&gt; returns &lt;code&gt;r[2]&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;f = itemgetter(2)&lt;/code&gt; 、コール &lt;code&gt;f(r)&lt;/code&gt; に戻り、 &lt;code&gt;r[2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6436d1d48a99a7252d57d6435ebc55f31f26397" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name()&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = methodcaller('name')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;b.name()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="587ef7cb9af6d3a5014a1ec9e1e10014d0bffe63" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 返す &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb0bfee9b281dfd1ff2707f547202a4fcb6731f6" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt;, the call &lt;code&gt;g(r)&lt;/code&gt; returns &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt; 、コール &lt;code&gt;g(r)&lt;/code&gt; 戻り &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e86cbdb1de283111f3b77a94db308e8228f025a" translate="yes" xml:space="preserve">
          <source>After a block-opening statement, the next line is indented by 4 spaces (in the Python Shell window by one tab). After certain keywords (break, return etc.) the next line is dedented. In leading indentation,</source>
          <target state="translated">ブロックオープン文の後、次の行は4つのスペースでインデントされます(Pythonシェルのウィンドウではタブ1つ分)。特定のキーワード (break,return など)の後は、次の行がインデントされます。先頭のインデントで</target>
        </trans-unit>
        <trans-unit id="734f3786cd172ab9f7f7c48f03100472da64a032" translate="yes" xml:space="preserve">
          <source>After all the tests have run the final &lt;code&gt;tearDownClass&lt;/code&gt; and &lt;code&gt;tearDownModule&lt;/code&gt; are run.</source>
          <target state="translated">すべてのテストが実行された後、最後の &lt;code&gt;tearDownClass&lt;/code&gt; と &lt;code&gt;tearDownModule&lt;/code&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="bed54ec095e148502b5574ea6f6832888058b755" translate="yes" xml:space="preserve">
          <source>After an unclosed parenthesis for a function, open a small window with function parameter hints. See &lt;a href=&quot;#calltips&quot;&gt;Calltips&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">関数の閉じられていない括弧の後に、関数パラメーターのヒントを含む小さなウィンドウを開きます。以下の編集とナビゲーションのセクションの&lt;a href=&quot;#calltips&quot;&gt;コールチップ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3e2a2afcb4d73c1dd2ce26d0c2f24d05cb3ef249" translate="yes" xml:space="preserve">
          <source>After binding (&lt;code&gt;CAN_RAW&lt;/code&gt;) or connecting (&lt;a href=&quot;#socket.CAN_BCM&quot;&gt;&lt;code&gt;CAN_BCM&lt;/code&gt;&lt;/a&gt;) the socket, you can use the &lt;a href=&quot;#socket.socket.send&quot;&gt;&lt;code&gt;socket.send()&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;socket.recv()&lt;/code&gt;&lt;/a&gt; operations (and their counterparts) on the socket object as usual.</source>
          <target state="translated">（結合後 &lt;code&gt;CAN_RAW&lt;/code&gt; を（）または接続&lt;a href=&quot;#socket.CAN_BCM&quot;&gt; &lt;code&gt;CAN_BCM&lt;/code&gt; &lt;/a&gt;）ソケットは、使用することができます&lt;a href=&quot;#socket.socket.send&quot;&gt; &lt;code&gt;socket.send()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;socket.recv()&lt;/code&gt; &lt;/a&gt;いつものようにソケットオブジェクトの操作（およびその対応します）。</target>
        </trans-unit>
        <trans-unit id="d038ff2ff4aca2174d2d681322cbe37a210d3e38" translate="yes" xml:space="preserve">
          <source>After calling this function, the handle is effectively invalidated, but the handle is not closed. You would call this function when you need the underlying Win32 handle to exist beyond the lifetime of the handle object.</source>
          <target state="translated">この関数を呼び出した後、ハンドルは事実上無効化されますが、ハンドルは閉じられません。この関数は、ハンドルオブジェクトの有効期間を超えて Win32 ハンドルが存在する必要がある場合に呼び出すことになります。</target>
        </trans-unit>
        <trans-unit id="a0df7e82f63c6ebd4a0d0051d037ed77926c952c" translate="yes" xml:space="preserve">
          <source>After object creation, treating the option name like a dictionary index</source>
          <target state="translated">オブジェクト作成後、オプション名を辞書インデックスのように扱う</target>
        </trans-unit>
        <trans-unit id="e022ab40c3a7bfffee8195f05bc3a6c276b589e7" translate="yes" xml:space="preserve">
          <source>After putting an object on an empty queue there may be an infinitesimal delay before the queue&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; method returns &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; can return without raising &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトを空のキューに置いた後、キューの&lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt; &lt;code&gt;empty()&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;を返し、&lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;を発生させずに戻ることができるようになるまで、わずかな遅延が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="8b8ff9fd8972c649bd1662cf6a9526d26eaa9bd5" translate="yes" xml:space="preserve">
          <source>After running the test, &lt;code&gt;events&lt;/code&gt; would contain &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt;.</source>
          <target state="translated">テストの実行後、 &lt;code&gt;events&lt;/code&gt; には &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6f4ff2a70a77d2b66658454222292a23e29549ff" translate="yes" xml:space="preserve">
          <source>After the raw stream has been detached, the buffer is in an unusable state.</source>
          <target state="translated">生のストリームが切り離された後、バッファは使用不可能な状態になっています。</target>
        </trans-unit>
        <trans-unit id="ee1af62b8aaabf1acd9896c452a131674a96b865" translate="yes" xml:space="preserve">
          <source>After the underlying buffer has been detached, the &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; is in an unusable state.</source>
          <target state="translated">基になるバッファーが切り離されると、&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt;は使用できない状態になります。</target>
        </trans-unit>
        <trans-unit id="d44733f3188a570411ead96cdda7b71f70b75499" translate="yes" xml:space="preserve">
          <source>After these path manipulations, an attempt is made to import a module named &lt;code&gt;sitecustomize&lt;/code&gt;, which can perform arbitrary site-specific customizations. It is typically created by a system administrator in the site-packages directory. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'sitecustomize'&lt;/code&gt;, it is silently ignored. If Python is started without output streams available, as with &lt;code&gt;pythonw.exe&lt;/code&gt; on Windows (which is used by default to start IDLE), attempted output from &lt;code&gt;sitecustomize&lt;/code&gt; is ignored. Any other exception causes a silent and perhaps mysterious failure of the process.</source>
          <target state="translated">これらのパス操作の後で、任意のサイト固有のカスタマイズを実行できる &lt;code&gt;sitecustomize&lt;/code&gt; という名前のモジュールをインポートする試みが行われます。通常、システム管理者がsite-packagesディレクトリに作成します。このインポートが&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの例外で失敗し、例外の &lt;code&gt;name&lt;/code&gt; 属性が &lt;code&gt;'sitecustomize'&lt;/code&gt; に等しい場合、黙って無視されます。Windowsの &lt;code&gt;pythonw.exe&lt;/code&gt; （デフォルトでIDLEの起動に使用される）のように、出力ストリームなしでPythonを起動した場合、 &lt;code&gt;sitecustomize&lt;/code&gt; からの出力の試行は無視されます。その他の例外は、プロセスのサイレントでおそらく不可解な失敗を引き起こします。</target>
        </trans-unit>
        <trans-unit id="9330ca10edf31a8f07b7a3a7111df51eda1f975b" translate="yes" xml:space="preserve">
          <source>After this method has been called, any further operation on the view raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (except &lt;a href=&quot;#memoryview.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; itself which can be called multiple times):</source>
          <target state="translated">このメソッドが呼び出された後、ビューでさらに操作を行うと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生します&lt;/a&gt;（&lt;a href=&quot;#memoryview.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;自体は複数回呼び出すことができます）。</target>
        </trans-unit>
        <trans-unit id="b2768fea23cb25766dd541c907ce6b3b52be13d1" translate="yes" xml:space="preserve">
          <source>After this, an attempt is made to import a module named &lt;code&gt;usercustomize&lt;/code&gt;, which can perform arbitrary user-specific customizations, if &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt; is true. This file is intended to be created in the user site-packages directory (see below), which is part of &lt;code&gt;sys.path&lt;/code&gt; unless disabled by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'usercustomize'&lt;/code&gt;, it is silently ignored.</source>
          <target state="translated">この後、&lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt; &lt;code&gt;ENABLE_USER_SITE&lt;/code&gt; &lt;/a&gt;がtrueの場合、任意のユーザー固有のカスタマイズを実行できる &lt;code&gt;usercustomize&lt;/code&gt; という名前のモジュールをインポートしようとします。このファイルは、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; で&lt;/a&gt;無効にしない限り、 &lt;code&gt;sys.path&lt;/code&gt; の一部であるユーザーのサイトパッケージディレクトリ（下記参照）に作成することを目的としています。このインポートが&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの例外で失敗し、例外の &lt;code&gt;name&lt;/code&gt; 属性が &lt;code&gt;'usercustomize'&lt;/code&gt; に等しい場合、警告なしで無視されます。</target>
        </trans-unit>
        <trans-unit id="43f3883ceb8aa25073e4ce290428185982ec0665" translate="yes" xml:space="preserve">
          <source>Alert Descriptions from &lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt; and others. The &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS Alert Registry&lt;/a&gt; contains this list and references to the RFCs where their meaning is defined.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt;などのアラートの説明。&lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS警告レジストリは&lt;/a&gt;、その意味が定義されているRFCにこのリストや参照が含まれています。</target>
        </trans-unit>
        <trans-unit id="9c1dc0a32970d2316ea232558be6864f582c80f2" translate="yes" xml:space="preserve">
          <source>Algorithmically, &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; can handle frequent reordering operations better than &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This makes it suitable for tracking recent accesses (for example in an &lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRU cache&lt;/a&gt;).</source>
          <target state="translated">アルゴリズム的に、&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;よりも頻繁な並べ替え操作をより適切に処理できます。これにより、最近のアクセスの追跡（&lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRUキャッシュなど&lt;/a&gt;）に適しています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
