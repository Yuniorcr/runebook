<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="f1d67672f1befe30b1ea6b9c0e813f8ca041dc72" translate="yes" xml:space="preserve">
          <source>In most situations, however, there&amp;rsquo;s only one form control with a particular name in a form and then you expect and need only one value associated with this name. So you write a script containing for example this code:</source>
          <target state="translated">ただし、ほとんどの状況では、フォーム内に特定の名前を持つフォームコントロールが1つしかなく、この名前に関連付けられている値は1つだけ必要です。したがって、たとえば次のコードを含むスクリプトを記述します。</target>
        </trans-unit>
        <trans-unit id="183e56009447f48c5edb38c8e56a603f6df422c3" translate="yes" xml:space="preserve">
          <source>In most typical applications, &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will take care of formatting and printing any usage or error messages. However, several formatting methods are available:</source>
          <target state="translated">ほとんどの一般的なアプリケーションでは、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;が使用方法やエラーメッセージのフォーマットと出力を処理します。ただし、いくつかのフォーマット方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="b6110d599bf96dfc74514b0a56521412fa449261" translate="yes" xml:space="preserve">
          <source>In normal operation it should not be necessary to call this method explicitly. It is used to implement other methods and may be useful for testing private extensions.</source>
          <target state="translated">通常の運用では、このメソッドを明示的に呼び出す必要はないはずです。他のメソッドを実装するために使用され、プライベートな拡張機能をテストするのに便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="f8321d4dc57900cf19439382b3532766a68fb010" translate="yes" xml:space="preserve">
          <source>In normal operation it should not be necessary to call this method explicitly. It will be implicitly called by the &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; when necessary.</source>
          <target state="translated">通常の操作では、このメソッドを明示的に呼び出す必要はありません。必要に応じて、&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;によって暗黙的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a16e8babf22923c28939e3500c17a67bb3cff77f" translate="yes" xml:space="preserve">
          <source>In order for a class to define its own copy implementation, it can define special methods &lt;code&gt;__copy__()&lt;/code&gt; and &lt;code&gt;__deepcopy__()&lt;/code&gt;. The former is called to implement the shallow copy operation; no additional arguments are passed. The latter is called to implement the deep copy operation; it is passed one argument, the &lt;code&gt;memo&lt;/code&gt; dictionary. If the &lt;code&gt;__deepcopy__()&lt;/code&gt; implementation needs to make a deep copy of a component, it should call the &lt;a href=&quot;#copy.deepcopy&quot;&gt;&lt;code&gt;deepcopy()&lt;/code&gt;&lt;/a&gt; function with the component as first argument and the memo dictionary as second argument.</source>
          <target state="translated">クラスが独自のコピー実装を定義するために、特別なメソッド &lt;code&gt;__copy__()&lt;/code&gt; および &lt;code&gt;__deepcopy__()&lt;/code&gt; 定義できます。前者は、浅いコピー操作を実装するために呼び出されます。追加の引数は渡されません。後者は、ディープコピー操作を実装するために呼び出されます。 1つの引数、 &lt;code&gt;memo&lt;/code&gt; 辞書が渡されます。 &lt;code&gt;__deepcopy__()&lt;/code&gt; 実装でコンポーネントのディープコピーを作成する必要がある場合は、コンポーネントを最初の引数、メモディクショナリを2番目の引数として、&lt;a href=&quot;#copy.deepcopy&quot;&gt; &lt;code&gt;deepcopy()&lt;/code&gt; &lt;/a&gt;関数を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2e949fa3a8f8fff7c3917f737f8813ee6973dfb5" translate="yes" xml:space="preserve">
          <source>In order to correctly interoperate with the abstract base class machinery, the descriptor must identify itself as abstract using &lt;code&gt;__isabstractmethod__&lt;/code&gt;. In general, this attribute should be &lt;code&gt;True&lt;/code&gt; if any of the methods used to compose the descriptor are abstract. For example, Python&amp;rsquo;s built-in &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; does the equivalent of:</source>
          <target state="translated">抽象基本クラス機構と正しく相互運用するには、 &lt;code&gt;__isabstractmethod__&lt;/code&gt; を使用して記述子が自身を抽象として識別する必要があります。一般に、記述子の作成に使用されるメソッドのいずれかが抽象的である場合、この属性は &lt;code&gt;True&lt;/code&gt; である必要があります。たとえば、Pythonの組み込み&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt;は、以下と同等です。</target>
        </trans-unit>
        <trans-unit id="c467fc7d115d441ac819d2c9cc479eaeade84679" translate="yes" xml:space="preserve">
          <source>In order to find objects and their documentation, &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; imports the module(s) to be documented. Therefore, any code on module level will be executed on that occasion. Use an &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; guard to only execute code when a file is invoked as a script and not just imported.</source>
          <target state="translated">オブジェクトとそのドキュメントを見つけるために、&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;はドキュメント化されるモジュールをインポートします。したがって、モジュールレベルのコードはすべてそのときに実行されます。 &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; ガードを使用して、ファイルがスクリプトとして呼び出され、インポートされただけではない場合にのみコードを実行します。</target>
        </trans-unit>
        <trans-unit id="397d9ba9a94e1a39ad054c3d3560e0518f095dd9" translate="yes" xml:space="preserve">
          <source>In order to prepare your code for I18N, you need to look at all the strings in your files. Any string that needs to be translated should be marked by wrapping it in &lt;code&gt;_('...')&lt;/code&gt; &amp;mdash; that is, a call to the function &lt;code&gt;_()&lt;/code&gt;. For example:</source>
          <target state="translated">I18N用のコードを準備するには、ファイル内のすべての文字列を調べる必要があります。翻訳が必要な文字列はすべて、 &lt;code&gt;_('...')&lt;/code&gt; でラップしてマークする必要があります。つまり、関数 &lt;code&gt;_()&lt;/code&gt; を呼び出します。例えば：</target>
        </trans-unit>
        <trans-unit id="7a53010fccc6cd571ec768b9ab052d773d9305f6" translate="yes" xml:space="preserve">
          <source>In order to preserve backwards compatibility, enum values are also present in the &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; module in the form of constants. The enum name is equal to the constant name (i.e. &lt;code&gt;http.HTTPStatus.OK&lt;/code&gt; is also available as &lt;code&gt;http.client.OK&lt;/code&gt;).</source>
          <target state="translated">下位互換性を維持するために、列挙値は定数の形で&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;モジュールにも存在します。列挙名は定数名と等しい（すなわち &lt;code&gt;http.HTTPStatus.OK&lt;/code&gt; はまたとして入手可能である &lt;code&gt;http.client.OK&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="481a2a420e5dd7f44eee0da58267e4d5486f1e6a" translate="yes" xml:space="preserve">
          <source>In order to stop comparison from falling back to the default scheme of comparing object addresses, datetime comparison normally raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the other comparand isn&amp;rsquo;t also a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. However, &lt;code&gt;NotImplemented&lt;/code&gt; is returned instead if the other comparand has a &lt;code&gt;timetuple()&lt;/code&gt; attribute. This hook gives other kinds of date objects a chance at implementing mixed-type comparison. If not, when a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised unless the comparison is &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;. The latter cases return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">オブジェクトアドレスを比較するデフォルトのスキームにフォールバックする比較を停止するために、他の被比較数も&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトでない場合、通常、datetime比較は&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;を発生させます。ただし、他の &lt;code&gt;timetuple()&lt;/code&gt; 属性がある場合は、代わりに &lt;code&gt;NotImplemented&lt;/code&gt; が返されます。このフックは、他の種類の日付オブジェクトに、混合型の比較を実装する機会を与えます。そうでない場合、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトが別のタイプのオブジェクトと比較されると、比較が &lt;code&gt;==&lt;/code&gt; または &lt;code&gt;!=&lt;/code&gt; でない限り、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。後者の場合は、それぞれ&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="07c225cf30fe4108ef791e90675347d57b8d70e1" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;date1 &amp;lt; date2&lt;/code&gt; if and only if &lt;code&gt;date1.toordinal() &amp;lt;
date2.toordinal()&lt;/code&gt;. Date comparison raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the other comparand isn&amp;rsquo;t also a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object. However, &lt;code&gt;NotImplemented&lt;/code&gt; is returned instead if the other comparand has a &lt;code&gt;timetuple()&lt;/code&gt; attribute. This hook gives other kinds of date objects a chance at implementing mixed-type comparison. If not, when a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised unless the comparison is &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;. The latter cases return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">つまり、 &lt;code&gt;date1 &amp;lt; date2&lt;/code&gt; &lt;code&gt;date1.toordinal() &amp;lt; date2.toordinal()&lt;/code&gt; 場合に限り、date1 &amp;lt;date2になります。他の被比較数が&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;オブジェクトでもない場合、日付比較で&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。ただし、他の &lt;code&gt;timetuple()&lt;/code&gt; 属性がある場合は、代わりに &lt;code&gt;NotImplemented&lt;/code&gt; が返されます。このフックは、他の種類の日付オブジェクトに、混合型の比較を実装する機会を与えます。そうでない場合、&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;オブジェクトが別のタイプのオブジェクトと比較されると、比較が &lt;code&gt;==&lt;/code&gt; または &lt;code&gt;!=&lt;/code&gt; でない限り、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。後者の場合は、それぞれ&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="2c07f61ca6c800f6888e2710a82a85e90f50bcc3" translate="yes" xml:space="preserve">
          <source>In particular, &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; accepts exactly the same keyword arguments as &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特に、&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#textwrap.wrap&quot;&gt; &lt;code&gt;wrap()&lt;/code&gt; &lt;/a&gt;とまったく同じキーワード引数を受け入れます。</target>
        </trans-unit>
        <trans-unit id="1fa9bd11ecdf21c870d5be8de14f439777d27d8a" translate="yes" xml:space="preserve">
          <source>In particularly, &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; should be used in preference to the default pseudo-random number generator in the &lt;a href=&quot;random#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module, which is designed for modelling and simulation, not security or cryptography.</source>
          <target state="translated">特に、&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;は、セキュリティや暗号化ではなく、モデリングとシミュレーション用に設計された&lt;a href=&quot;random#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;モジュールのデフォルトの疑似乱数ジェネレータよりも優先して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bed46a3402b9eb2783c1eff866fc79b96a61f33e" translate="yes" xml:space="preserve">
          <source>In previous versions &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; did not start the manager&amp;rsquo;s server process if it was not already started.</source>
          <target state="translated">以前のバージョンでは、&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;はまだ開始されていない場合、マネージャーのサーバープロセスを開始しませんでした。</target>
        </trans-unit>
        <trans-unit id="24635c5fed7456cbfad369f24972f6f06dd072a4" translate="yes" xml:space="preserve">
          <source>In protocols 2 and newer, classes that implements the &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; method can dictate the values passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling. The method must return a pair &lt;code&gt;(args, kwargs)&lt;/code&gt; where &lt;em&gt;args&lt;/em&gt; is a tuple of positional arguments and &lt;em&gt;kwargs&lt;/em&gt; a dictionary of named arguments for constructing the object. Those will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">プロトコル2以降では、&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;メソッドを実装するクラスは、アンピックル時に__new __（）メソッドに渡される値を指示できます。このメソッドはペア &lt;code&gt;(args, kwargs)&lt;/code&gt; 返す必要があります。ここで、&lt;em&gt;args&lt;/em&gt;は位置引数のタプルであり、オブジェクトを構築するために名前付き引数の辞書を&lt;em&gt;kwargs&lt;/em&gt;します。これらはunpickle &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="6463b988a254956fa89396a7c22c32f2fa351eb6" translate="yes" xml:space="preserve">
          <source>In regular release builds, the default warning filter has the following entries (in order of precedence):</source>
          <target state="translated">通常のリリースビルドでは、デフォルトの警告フィルタには以下のエントリがあります (優先度の高い順)。</target>
        </trans-unit>
        <trans-unit id="197d3ed98970db4c06270429cf9d72971fdb552f" translate="yes" xml:space="preserve">
          <source>In server mode, a client certificate request is sent to the client. The client may either ignore the request or send a certificate in order perform TLS client cert authentication. If the client chooses to send a certificate, it is verified. Any verification error immediately aborts the TLS handshake.</source>
          <target state="translated">サーバモードでは、クライアント証明書要求がクライアントに送信される。クライアントは、要求を無視するか、TLS クライアント証明書認証を実行するために証明書を送信するかのいずれかを選択することができる。クライアントが証明書の送信を選択した場合、それは検証されます。検証エラーが発生した場合は、直ちに TLS ハンドシェイクを中止します。</target>
        </trans-unit>
        <trans-unit id="784d3051d9c6418372556580d85a0525b4b27c71" translate="yes" xml:space="preserve">
          <source>In server mode, if you want to authenticate your clients using the SSL layer (rather than using a higher-level authentication mechanism), you&amp;rsquo;ll also have to specify &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and similarly check the client certificate.</source>
          <target state="translated">サーバーモードで、（より高いレベルの認証メカニズムを使用するのではなく）SSL層を使用してクライアントを認証する場合は、&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;を指定し、同様にクライアント証明書を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7fcdfdefb8a40ad8a9c6f3c87a3f6215890319ef" translate="yes" xml:space="preserve">
          <source>In server mode, no certificate is requested from the client, so the client does not send any for client cert authentication.</source>
          <target state="translated">サーバ・モードでは、クライアントから証明書が要求されないため、クライアントはクライアント証明書認証のために証明書を送信しません。</target>
        </trans-unit>
        <trans-unit id="2aaa992863bbf78157aa977a683358ca504509cc" translate="yes" xml:space="preserve">
          <source>In short, those are: a conversion to &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.trunc&quot;&gt;&lt;code&gt;math.trunc()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.floor&quot;&gt;&lt;code&gt;math.floor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.ceil&quot;&gt;&lt;code&gt;math.ceil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#divmod&quot;&gt;&lt;code&gt;divmod()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">つまり、これらは&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;math#math.trunc&quot;&gt; &lt;code&gt;math.trunc()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;math#math.floor&quot;&gt; &lt;code&gt;math.floor()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;math#math.ceil&quot;&gt; &lt;code&gt;math.ceil()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#divmod&quot;&gt; &lt;code&gt;divmod()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31dcfc591206e9e4f3d38c565f3b33cf822b6daf" translate="yes" xml:space="preserve">
          <source>In single threaded environments, it is preferable to not use this context at all. Instead, simply create contexts explicitly as described below.</source>
          <target state="translated">シングルスレッド環境では、このコンテキストは全く使用しない方が望ましいです。その代わりに、以下のように明示的にコンテキストを作成するだけです。</target>
        </trans-unit>
        <trans-unit id="828ef2d26cdb8bf2d36789116eed3ec4cdddbe9d" translate="yes" xml:space="preserve">
          <source>In some audio formats, such as .WAV files, 16, 24 and 32 bit samples are signed, but 8 bit samples are unsigned. So when converting to 8 bit wide samples for these formats, you need to also add 128 to the result:</source>
          <target state="translated">.WAV ファイルのようないくつかのオーディオフォーマットでは、16、24、32 ビットのサンプルは符号付きですが、8 ビットのサンプルは符号なしです。そのため、これらのフォーマットで8ビット幅のサンプルに変換する場合は、結果に128を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="b38f289e088de73aef52f5145e4194895bf3fc55" translate="yes" xml:space="preserve">
          <source>In some cases, it is desirable not to parse an input source at once, but to feed chunks of the document as they get available. Note that the reader will normally not read the entire file, but read it in chunks as well; still &lt;code&gt;parse()&lt;/code&gt; won&amp;rsquo;t return until the entire document is processed. So these interfaces should be used if the blocking behaviour of &lt;code&gt;parse()&lt;/code&gt; is not desirable.</source>
          <target state="translated">場合によっては、入力ソースを一度に解析するのではなく、ドキュメントのチャンクが利用可能になったときにフィードすることが望ましい場合があります。リーダーは通常、ファイル全体を読み取るのではなく、チャンク単位で読み取ることに注意してください。それでも &lt;code&gt;parse()&lt;/code&gt; はドキュメント全体が処理されるまで戻りません。したがって、 &lt;code&gt;parse()&lt;/code&gt; のブロッキング動作が望ましくない場合は、これらのインターフェースを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d666daec390d8674c0e643958a689e1dd07bc25" translate="yes" xml:space="preserve">
          <source>In some cases, it may be appropriate to process part of a request synchronously, but to finish processing in a forked child depending on the request data. This can be implemented by using a synchronous server and doing an explicit fork in the request handler class &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">場合によっては、要求の一部を同期的に処理することは適切ですが、要求データに応じて分岐された子で処理を終了することもできます。これは、同期サーバーを使用し、要求ハンドラクラスの&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドで明示的なフォークを実行することで実装できます。</target>
        </trans-unit>
        <trans-unit id="f0c333efd73cd8e595b6e8b60656420e48337e96" translate="yes" xml:space="preserve">
          <source>In some cases, the existing tests may have been written using the &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module. If so, &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; provides a &lt;code&gt;DocTestSuite&lt;/code&gt; class that can automatically build &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; instances from the existing &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;-based tests.</source>
          <target state="translated">場合によっては、既存のテストは&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;モジュールを使用して記述されている可能性があります。もしそうなら、&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; のは、&lt;/a&gt;提供 &lt;code&gt;DocTestSuite&lt;/code&gt; の自動構築することができますクラス&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; インスタンスの&lt;/a&gt;既存のインスタンスを&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;ベースのテストを。</target>
        </trans-unit>
        <trans-unit id="13ca056dd65f97d35e7322d84682a7bdc64b0f33" translate="yes" xml:space="preserve">
          <source>In some contexts, the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module is used to transfer massive amounts of data. Therefore, it can be important to minimize the number of memory copies, to preserve performance and resource consumption. However, normal operation of the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, as it transforms a graph-like structure of objects into a sequential stream of bytes, intrinsically involves copying data to and from the pickle stream.</source>
          <target state="translated">一部のコンテキストでは、&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは大量のデータを転送するために使用されます。したがって、パフォーマンスとリソース消費を維持するために、メモリコピーの数を最小限に抑えることが重要になる場合があります。ただし、&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの通常の操作では、オブジェクトのグラフのような構造がバイトの順次ストリームに変換されるため、本質的に、ピクルストリームとの間でデータをコピーする必要があります。</target>
        </trans-unit>
        <trans-unit id="762bcb14ce3c58747a56f114dd90a102eeed2096" translate="yes" xml:space="preserve">
          <source>In string-type &lt;em&gt;repl&lt;/em&gt; arguments, in addition to the character escapes and backreferences described above, &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; will use the substring matched by the group named &lt;code&gt;name&lt;/code&gt;, as defined by the &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; syntax. &lt;code&gt;\g&amp;lt;number&amp;gt;&lt;/code&gt; uses the corresponding group number; &lt;code&gt;\g&amp;lt;2&amp;gt;&lt;/code&gt; is therefore equivalent to &lt;code&gt;\2&lt;/code&gt;, but isn&amp;rsquo;t ambiguous in a replacement such as &lt;code&gt;\g&amp;lt;2&amp;gt;0&lt;/code&gt;. &lt;code&gt;\20&lt;/code&gt; would be interpreted as a reference to group 20, not a reference to group 2 followed by the literal character &lt;code&gt;'0'&lt;/code&gt;. The backreference &lt;code&gt;\g&amp;lt;0&amp;gt;&lt;/code&gt; substitutes in the entire substring matched by the RE.</source>
          <target state="translated">文字列タイプの&lt;em&gt;repl&lt;/em&gt;引数では、上記の文字エスケープと後方参照に加えて、 &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; は &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; 構文で定義されているように、 &lt;code&gt;name&lt;/code&gt; という名前のグループに一致する部分文字列を使用します。 &lt;code&gt;\g&amp;lt;number&amp;gt;&lt;/code&gt; は対応するグループ番号を使用します。したがって、 &lt;code&gt;\g&amp;lt;2&amp;gt;&lt;/code&gt; は &lt;code&gt;\2&lt;/code&gt; と同等ですが、 &lt;code&gt;\g&amp;lt;2&amp;gt;0&lt;/code&gt; などの置換ではあいまいではありません。 &lt;code&gt;\20&lt;/code&gt; はグループ20への参照として解釈され、グループ2の後にリテラル文字 &lt;code&gt;'0'&lt;/code&gt; が続くものとして解釈されません。後方参照 &lt;code&gt;\g&amp;lt;0&amp;gt;&lt;/code&gt; は、REに一致する部分文字列全体を置き換えます。</target>
        </trans-unit>
        <trans-unit id="91032350df9be823abddd9974a0ded34862f00b1" translate="yes" xml:space="preserve">
          <source>In the Python DOM API, accessor functions are not required. If provided, they should take the form defined by the Python IDL mapping, but these methods are considered unnecessary since the attributes are accessible directly from Python. &amp;ldquo;Set&amp;rdquo; accessors should never be provided for &lt;code&gt;readonly&lt;/code&gt; attributes.</source>
          <target state="translated">Python DOM APIでは、アクセサ関数は必要ありません。指定する場合は、Python IDLマッピングで定義された形式にする必要がありますが、属性はPythonから直接アクセスできるため、これらのメソッドは不要と見なされます。「セット」アクセサは、 &lt;code&gt;readonly&lt;/code&gt; 属性に提供されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="4e4271bc7aa921a4604f70acbcc32e5e1ad1a872" translate="yes" xml:space="preserve">
          <source>In the Python use of certificates, a client or server can use a certificate to prove who they are. The other side of a network connection can also be required to produce a certificate, and that certificate can be validated to the satisfaction of the client or server that requires such validation. The connection attempt can be set to raise an exception if the validation fails. Validation is done automatically, by the underlying OpenSSL framework; the application need not concern itself with its mechanics. But the application does usually need to provide sets of certificates to allow this process to take place.</source>
          <target state="translated">Pythonでの証明書の使用では、クライアントやサーバは証明書を使用して自分が誰であるかを証明することができます。ネットワーク接続の反対側も証明書を生成することを要求することができ、その証明書は、そのような検証を要求するクライアントやサーバーが満足するように検証することができます。検証に失敗した場合に例外を発生させるように接続の試行を設定することができます。検証は、基礎となる OpenSSL フレームワークによって自動的に行われます。しかし、アプリケーションは通常、このプロセスが行われるように証明書のセットを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="54b6896bea707355902a22e27a3a48a322ff4f93" translate="yes" xml:space="preserve">
          <source>In the UTF-8 mode, the encoding is &lt;code&gt;utf-8&lt;/code&gt; on any platform.</source>
          <target state="translated">UTF-8モードでは、エンコーディングはどのプラットフォームでも &lt;code&gt;utf-8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cee2bffb2eb3a640bd33edd4c2273abf15d7944e" translate="yes" xml:space="preserve">
          <source>In the case of a &lt;em&gt;MandatoryRelease&lt;/em&gt; that has not yet occurred, &lt;em&gt;MandatoryRelease&lt;/em&gt; predicts the release in which the feature will become part of the language.</source>
          <target state="translated">以下の場合は&lt;em&gt;、MandatoryReleaseは&lt;/em&gt;まだ発生していない、&lt;em&gt;MandatoryReleaseはは&lt;/em&gt;機能が言語の一部となるリリースを予測します。</target>
        </trans-unit>
        <trans-unit id="b18036aece5d58aa31914b030641e2dd49980e5c" translate="yes" xml:space="preserve">
          <source>In the case of {}-formatting, you can specify formatting flags by placing them after the attribute name, separated from it with a colon. For example: a placeholder of &lt;code&gt;{msecs:03d}&lt;/code&gt; would format a millisecond value of &lt;code&gt;4&lt;/code&gt; as &lt;code&gt;004&lt;/code&gt;. Refer to the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; documentation for full details on the options available to you.</source>
          <target state="translated">{} -formattingの場合は、属性名の後にコロンで区切り、フォーマットフラグを指定できます。たとえば、プレースホルダーが &lt;code&gt;{msecs:03d}&lt;/code&gt; の場合、ミリ秒の値 &lt;code&gt;4&lt;/code&gt; は &lt;code&gt;004&lt;/code&gt; にフォーマットされます。使用可能なオプションの詳細については、&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4de630fdc03f685b1b1a89c3374aa3f0cc3e42c5" translate="yes" xml:space="preserve">
          <source>In the case where the metadata file listing files (RECORD or SOURCES.txt) is missing, &lt;code&gt;files()&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;. The caller may wish to wrap calls to &lt;code&gt;files()&lt;/code&gt; in &lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.always_iterable&quot;&gt;always_iterable&lt;/a&gt; or otherwise guard against this condition if the target distribution is not known to have the metadata present.</source>
          <target state="translated">メタデータファイルリストファイル（RECORDまたはSOURCES.txt）が見つからない場合、 &lt;code&gt;files()&lt;/code&gt; は &lt;code&gt;None&lt;/code&gt; を返します。呼び出し元は、 &lt;code&gt;files()&lt;/code&gt; への呼び出しを&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.always_iterable&quot;&gt;always_iterableで&lt;/a&gt;ラップするか、ターゲット配布にメタデータが存在することがわかっていない場合にこの条件を回避することができます。</target>
        </trans-unit>
        <trans-unit id="bc1e2dbd142a208749274bd7580c8ed640f3d885" translate="yes" xml:space="preserve">
          <source>In the default Task implementation, the name will be visible in the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; output of a task object.</source>
          <target state="translated">デフォルトのTask実装では、名前はタスクオブジェクトの&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;出力に表示されます。</target>
        </trans-unit>
        <trans-unit id="535fa5a6ec217819ca7ba659179db533e7a167c0" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; with &lt;em&gt;interpolation&lt;/em&gt; set to &lt;code&gt;BasicInterpolation()&lt;/code&gt; would resolve &lt;code&gt;%(home_dir)s&lt;/code&gt; to the value of &lt;code&gt;home_dir&lt;/code&gt; (&lt;code&gt;/Users&lt;/code&gt; in this case). &lt;code&gt;%(my_dir)s&lt;/code&gt; in effect would resolve to &lt;code&gt;/Users/lumberjack&lt;/code&gt;. All interpolations are done on demand so keys used in the chain of references do not have to be specified in any specific order in the configuration file.</source>
          <target state="translated">上記の例では、&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;と&lt;em&gt;補間&lt;/em&gt;にセット &lt;code&gt;BasicInterpolation()&lt;/code&gt; が解決なる &lt;code&gt;%(home_dir)s&lt;/code&gt; 値に &lt;code&gt;home_dir&lt;/code&gt; （ &lt;code&gt;/Users&lt;/code&gt; この場合）。有効な &lt;code&gt;%(my_dir)s&lt;/code&gt; は &lt;code&gt;/Users/lumberjack&lt;/code&gt; lumberjackに解決されます。すべての補間はオンデマンドで行われるため、参照のチェーンで使用されるキーを構成ファイルで特定の順序で指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6d863919b7beef0b7bffcfd48a2859d814cc5049" translate="yes" xml:space="preserve">
          <source>In the first approach, we read the data out of the fd&amp;rsquo;s buffer, and the byte values give you the signal numbers. This is simple, but in rare cases it can run into a problem: generally the fd will have a limited amount of buffer space, and if too many signals arrive too quickly, then the buffer may become full, and some signals may be lost. If you use this approach, then you should set &lt;code&gt;warn_on_full_buffer=True&lt;/code&gt;, which will at least cause a warning to be printed to stderr when signals are lost.</source>
          <target state="translated">最初のアプローチでは、fdのバッファーからデータを読み取り、バイト値からシグナル番号を取得します。これは簡単ですが、まれに問題が発生する可能性があります。通常、fdには限られた量のバッファスペースがあり、あまりに多くの信号があまりにも早く到着すると、バッファがいっぱいになり、一部の信号が失われる可能性があります。このアプローチを使用する場合は、 &lt;code&gt;warn_on_full_buffer=True&lt;/code&gt; を設定する必要があります。これにより、少なくとも信号が失われたときに警告がstderrに出力されます。</target>
        </trans-unit>
        <trans-unit id="b1f405b7b60dec7ef0ccbbabf3d071abe0435edb" translate="yes" xml:space="preserve">
          <source>In the following &lt;a href=&quot;https://docs.python.org/3.8/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py&quot;&gt;&lt;code&gt;tzinfo_examples.py&lt;/code&gt;&lt;/a&gt; file there are some examples of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; classes:</source>
          <target state="translated">次の&lt;a href=&quot;https://docs.python.org/3.8/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py&quot;&gt; &lt;code&gt;tzinfo_examples.py&lt;/code&gt; &lt;/a&gt;ファイルには、&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;クラスの例がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="2ff95d881b0899b985ba27eea20bbabb5d0f7f41" translate="yes" xml:space="preserve">
          <source>In the following documentation the argument list for functions is given. Methods, of course, have the additional first argument &lt;em&gt;self&lt;/em&gt; which is omitted here.</source>
          <target state="translated">次のドキュメントでは、関数の引数リストを示します。もちろん、メソッドには追加の最初の引数&lt;em&gt;selfが&lt;/em&gt;ありますが、ここでは省略されています。</target>
        </trans-unit>
        <trans-unit id="ccfb56fcc1d858991309ad5c738b0606a30bbfb4" translate="yes" xml:space="preserve">
          <source>In the following example we&amp;rsquo;re going to intentionally cause a &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; by returning a complex type object. The server code:</source>
          <target state="translated">次の例では、複合型オブジェクトを返すことにより、故意に&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;させます。サーバーコード：</target>
        </trans-unit>
        <trans-unit id="e2223ff4a598cefedbdd585097e57edaf62fd136" translate="yes" xml:space="preserve">
          <source>In the following example we&amp;rsquo;re going to intentionally cause a &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; by providing an invalid URI:</source>
          <target state="translated">次の例では、無効なURIを提供して&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;を意図的に発生させます。</target>
        </trans-unit>
        <trans-unit id="1b98fb6821e17d529d323fbb51fcfeba5d9f117e" translate="yes" xml:space="preserve">
          <source>In the following example, the data are rounded, so that each value represents the midpoint of data classes, e.g. 1 is the midpoint of the class 0.5&amp;ndash;1.5, 2 is the midpoint of 1.5&amp;ndash;2.5, 3 is the midpoint of 2.5&amp;ndash;3.5, etc. With the data given, the middle value falls somewhere in the class 3.5&amp;ndash;4.5, and interpolation is used to estimate it:</source>
          <target state="translated">次の例では、データは丸められているため、各値はデータクラスの中点を表します。たとえば、1はクラス0.5〜1.5の中点、2は1.5〜2.5の中点、3は2.5〜3.5の中点です。 、など。与えられたデータで、中央の値はクラス3.5〜4.5のどこかにあり、それを推定するために補間が使用されます。</target>
        </trans-unit>
        <trans-unit id="533603ba0650e5f7228aa22ac8ec4f95a8bd54f1" translate="yes" xml:space="preserve">
          <source>In the following example, we are sending a data-stream to the stdin of a CGI and reading the data it returns to us. Note that this example will only work when the Python installation supports SSL.</source>
          <target state="translated">次の例では、CGI の stdin にデータストリームを送信し、それが返すデータを読み込んでいます。この例は、Python のインストールが SSL をサポートしている場合にのみ動作することに注意してください。</target>
        </trans-unit>
        <trans-unit id="1fa008487812ea35726b9061adefa221aa756af2" translate="yes" xml:space="preserve">
          <source>In the following examples, we assume that the relevant functions have already been imported from the &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">次の例では、関連する関数が&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールからすでにインポートされていると想定しています。</target>
        </trans-unit>
        <trans-unit id="8f9fe91e9abf59bd1adbaa56c89770d56c827a8d" translate="yes" xml:space="preserve">
          <source>In the following, &lt;em&gt;events&lt;/em&gt; is a bitwise mask indicating which I/O events should be waited for on a given file object. It can be a combination of the modules constants below:</source>
          <target state="translated">以下の&lt;em&gt;イベント&lt;/em&gt;は、特定のファイルオブジェクトで待機する必要があるI / Oイベントを示すビット単位のマスクです。以下のモジュール定数を組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="7ed55c5626284f0ef492f74cae3ebfc7bd5bdeb3" translate="yes" xml:space="preserve">
          <source>In the following, the term &lt;em&gt;referent&lt;/em&gt; means the object which is referred to by a weak reference.</source>
          <target state="translated">以下では、「&lt;em&gt;参照先」&lt;/em&gt;という用語は、弱参照によって参照されるオブジェクトを意味します。</target>
        </trans-unit>
        <trans-unit id="26053a87fbd2fcc58b5429c7f78fea5394e32809" translate="yes" xml:space="preserve">
          <source>In the function &lt;code&gt;greeting&lt;/code&gt;, the argument &lt;code&gt;name&lt;/code&gt; is expected to be of type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and the return type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. Subtypes are accepted as arguments.</source>
          <target state="translated">関数 &lt;code&gt;greeting&lt;/code&gt; では、引数 &lt;code&gt;name&lt;/code&gt; は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;型であり、戻り型は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; である&lt;/a&gt;と想定されています。サブタイプは引数として受け入れられます。</target>
        </trans-unit>
        <trans-unit id="e8ac6b1e58da82a23a5cbc8050342436b8ca25b0" translate="yes" xml:space="preserve">
          <source>In the ideal case, the code will have a suitable test suite, and the test runner will take care of implicitly enabling all warnings when running tests (the test runner provided by the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module does this).</source>
          <target state="translated">理想的なケースでは、コードに適切なテストスイートがあり、テストランナーがテスト実行時にすべての警告を暗黙的に有効にします（&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;モジュールによって提供されるテストランナーがこれを行います）。</target>
        </trans-unit>
        <trans-unit id="eaf314b605ee1e93c7ef662a0fcaed6c7faecc98" translate="yes" xml:space="preserve">
          <source>In the next example (simple implementation of &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt;&lt;code&gt;shutil.rmtree()&lt;/code&gt;&lt;/a&gt;), walking the tree bottom-up is essential, &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t allow deleting a directory before the directory is empty:</source>
          <target state="translated">次の例では（の簡単な実装&lt;a href=&quot;shutil#shutil.rmtree&quot;&gt; &lt;code&gt;shutil.rmtree()&lt;/code&gt; &lt;/a&gt;）、木のボトムアップを歩くことは不可欠であり、&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt;、ディレクトリが空になる前に、ディレクトリを削除することはできません。</target>
        </trans-unit>
        <trans-unit id="274c72518f8a919afc6da55f424febbdf2ea74bb" translate="yes" xml:space="preserve">
          <source>In the next example, walking the tree bottom-up is essential: &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t allow deleting a directory before the directory is empty:</source>
          <target state="translated">次の例では、ツリーをボトムアップで歩くことが不可欠です&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt;では、ディレクトリが空になる前にディレクトリを削除できません。</target>
        </trans-unit>
        <trans-unit id="17c1ee7708d83a788fb54edf47914b0f5328b88f" translate="yes" xml:space="preserve">
          <source>In the option list above, &amp;ldquo;a set&amp;rdquo; refers to any collection or iterable of strings, no ordering is expected.</source>
          <target state="translated">上記のオプションリストでは、「セット」は任意のコレクションまたは反復可能な文字列を指し、順序付けは想定されていません。</target>
        </trans-unit>
        <trans-unit id="54385cf5bdff670b83f3d300aefcf33fbb344d3c" translate="yes" xml:space="preserve">
          <source>In the previous section, you learned to write following code anytime you expected a user to post more than one value under one name:</source>
          <target state="translated">前のセクションでは、1つの名前の下に複数の値を投稿する場合には、以下のようなコードを書くことを学びました。</target>
        </trans-unit>
        <trans-unit id="233a7a8805657d96bca6651321789f9af3a538c2" translate="yes" xml:space="preserve">
          <source>In the second approach, we use the wakeup fd &lt;em&gt;only&lt;/em&gt; for wakeups, and ignore the actual byte values. In this case, all we care about is whether the fd&amp;rsquo;s buffer is empty or non-empty; a full buffer doesn&amp;rsquo;t indicate a problem at all. If you use this approach, then you should set &lt;code&gt;warn_on_full_buffer=False&lt;/code&gt;, so that your users are not confused by spurious warning messages.</source>
          <target state="translated">2番目のアプローチでは、ウェイクアップに&lt;em&gt;のみ&lt;/em&gt;ウェイクアップfdを使用し、実際のバイト値を無視します。この場合、私たちが気にするのは、fdのバッファーが空か空でないかだけです。バッファがいっぱいになっても問題はありません。このアプローチを使用する場合は、 &lt;code&gt;warn_on_full_buffer=False&lt;/code&gt; を設定して、ユーザーが偽の警告メッセージで混乱しないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="89bc0401466a52c7fb4e1247c6f71a447d41beff" translate="yes" xml:space="preserve">
          <source>In the serializer, the &lt;em&gt;allow_nan&lt;/em&gt; parameter can be used to alter this behavior. In the deserializer, the &lt;em&gt;parse_constant&lt;/em&gt; parameter can be used to alter this behavior.</source>
          <target state="translated">シリアライザでは、&lt;em&gt;allow_nan&lt;/em&gt;パラメータを使用してこの動作を変更できます。デ&lt;em&gt;シリアライザー&lt;/em&gt;では、&lt;em&gt;parse_constant&lt;/em&gt;パラメーターを使用してこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="38626b257d0d2b41bc10b255929643d1d13e8835" translate="yes" xml:space="preserve">
          <source>In the simple case then, you need only add the following bit of code to the main driver file of your application:</source>
          <target state="translated">単純な場合は、以下のコードをアプリケーションのメインドライバファイルに追加するだけです。</target>
        </trans-unit>
        <trans-unit id="cf29865f18bcaf9638d0168c8132a6142805a764" translate="yes" xml:space="preserve">
          <source>In the table &lt;em&gt;s&lt;/em&gt; is an instance of a mutable sequence type, &lt;em&gt;t&lt;/em&gt; is any iterable object and &lt;em&gt;x&lt;/em&gt; is an arbitrary object that meets any type and value restrictions imposed by &lt;em&gt;s&lt;/em&gt; (for example, &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; only accepts integers that meet the value restriction &lt;code&gt;0 &amp;lt;= x &amp;lt;= 255&lt;/code&gt;).</source>
          <target state="translated">表で、&lt;em&gt;s&lt;/em&gt;は可変シーケンス型のインスタンス、&lt;em&gt;t&lt;/em&gt;は任意の反復可能なオブジェクト、&lt;em&gt;x&lt;/em&gt;は&lt;em&gt;s&lt;/em&gt;によって課される任意の型と値の制限を満たす任意のオブジェクトです（たとえば、&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;は値の制限 &lt;code&gt;0 &amp;lt;= x &amp;lt;= 255&lt;/code&gt; を満たす整数のみを受け入れますx &amp;lt;= 255）。</target>
        </trans-unit>
        <trans-unit id="bd508f1ee529ccf68344f530644e56df47707298" translate="yes" xml:space="preserve">
          <source>In the tree above, each cell &lt;em&gt;k&lt;/em&gt; is topping &lt;code&gt;2*k+1&lt;/code&gt; and &lt;code&gt;2*k+2&lt;/code&gt;. In a usual binary tournament we see in sports, each cell is the winner over the two cells it tops, and we can trace the winner down the tree to see all opponents s/he had. However, in many computer applications of such tournaments, we do not need to trace the history of a winner. To be more memory efficient, when a winner is promoted, we try to replace it by something else at a lower level, and the rule becomes that a cell and the two cells it tops contain three different items, but the top cell &amp;ldquo;wins&amp;rdquo; over the two topped cells.</source>
          <target state="translated">上のツリーでは、各セル&lt;em&gt;k&lt;/em&gt;は &lt;code&gt;2*k+1&lt;/code&gt; および &lt;code&gt;2*k+2&lt;/code&gt; を上回っています。私たちがスポーツで目にする通常のバイナリートーナメントでは、各セルが2つのセルの勝者となります。勝者をツリーでたどることで、彼/彼女が持っているすべての対戦相手を確認できます。ただし、そのようなトーナメントの多くのコンピューターアプリケーションでは、勝者の履歴を追跡する必要はありません。よりメモリ効率を高めるために、勝者が昇格した場合、それを下位レベルの何かに置き換えようとします。ルールは、セルとその上の2つのセルに3つの異なるアイテムが含まれているが、一番上のセルが「勝つ」というルールになります。上の2つのセルの上。</target>
        </trans-unit>
        <trans-unit id="1defc52a5fe9f0a43f30bd5d3e26fbc4e063c451" translate="yes" xml:space="preserve">
          <source>In the typical usage of a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method is invoked by a &lt;code&gt;TestRunner&lt;/code&gt; rather than by the end-user test harness.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;オブジェクトの一般的な使用方法では、&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドは、エンドユーザーのテストハーネスではなく、 &lt;code&gt;TestRunner&lt;/code&gt; によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5e430d29f738b72ec9b1e05af5395066734b68a2" translate="yes" xml:space="preserve">
          <source>In these tuples, &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt; are all integers and are meant to be passed to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;canonname&lt;/em&gt; will be a string representing the canonical name of the &lt;em&gt;host&lt;/em&gt; if &lt;code&gt;AI_CANONNAME&lt;/code&gt; is part of the &lt;em&gt;flags&lt;/em&gt; argument; else &lt;em&gt;canonname&lt;/em&gt; will be empty. &lt;em&gt;sockaddr&lt;/em&gt; is a tuple describing a socket address, whose format depends on the returned &lt;em&gt;family&lt;/em&gt; (a &lt;code&gt;(address, port)&lt;/code&gt; 2-tuple for &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;(address, port, flow info, scope id)&lt;/code&gt; 4-tuple for &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;), and is meant to be passed to the &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これらのタプルでは、&lt;em&gt;family&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、&lt;em&gt;proto&lt;/em&gt;はすべて整数であり、&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;関数に渡されることを意図しています。&lt;em&gt;canonname&lt;/em&gt;は、 &lt;code&gt;AI_CANONNAME&lt;/code&gt; が&lt;em&gt;フラグ&lt;/em&gt;引数の一部である場合、&lt;em&gt;ホストの&lt;/em&gt;正規名を表す文字列になります。そうでない場合、&lt;em&gt;canonname&lt;/em&gt;は空になります。&lt;em&gt;sockaddr&lt;/em&gt;は、ソケットアドレスを説明するタプルであり、その形式は、返される&lt;em&gt;ファミリに&lt;/em&gt;依存します（&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;(address, port)&lt;/code&gt; 2タプル、 &lt;code&gt;(address, port, flow info, scope id)&lt;/code&gt; a AF_INET6の 4タプル&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;）、および&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;socket.connect()&lt;/code&gt; &lt;/a&gt;メソッドに渡されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="4f03f8295d4401efbee1454b689f377054911af8" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;MyDict&lt;/code&gt; has a single parameter, &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">この場合、 &lt;code&gt;MyDict&lt;/code&gt; には単一のパラメーター &lt;code&gt;T&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="1cbbe287f089dc8f706ae99f0052a682074dcad2" translate="yes" xml:space="preserve">
          <source>In this case all warnings are caught and no errors are raised.</source>
          <target state="translated">この場合、すべての警告がキャッチされ、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="1c62940c22ee32d3fd980aa25414be64f0948aab" translate="yes" xml:space="preserve">
          <source>In this case if either warning was not raised, or some other warning was raised, &lt;a href=&quot;#test.support.check_warnings&quot;&gt;&lt;code&gt;check_warnings()&lt;/code&gt;&lt;/a&gt; would raise an error.</source>
          <target state="translated">この場合、いずれかの警告が発生しなかった場合、または他の警告が発生した場合、&lt;a href=&quot;#test.support.check_warnings&quot;&gt; &lt;code&gt;check_warnings()&lt;/code&gt; &lt;/a&gt;はエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="bb0757ca7b63d5e5a2bcaf0b7ed3ffc59abc635d" translate="yes" xml:space="preserve">
          <source>In this case no &lt;code&gt;*&lt;/code&gt; specifiers may occur in a format (since they require a sequential parameter list).</source>
          <target state="translated">この場合、形式で &lt;code&gt;*&lt;/code&gt; 指定子を使用することはできません（連続するパラメーターリストが必要なため）。</target>
        </trans-unit>
        <trans-unit id="c4457d16ba5e9b6c681760e973da7e71471b05ca" translate="yes" xml:space="preserve">
          <source>In this case, &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; will return &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; objects for &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;, but not for &lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">この場合、&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;i&lt;/code&gt; および &lt;code&gt;j&lt;/code&gt; の&lt;a href=&quot;#dataclasses.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;オブジェクトを返しますが、 &lt;code&gt;database&lt;/code&gt; は返しません。</target>
        </trans-unit>
        <trans-unit id="79e6ea472a32e4246827af3631820637ed0278c5" translate="yes" xml:space="preserve">
          <source>In this case, you are marking translatable strings with the function &lt;code&gt;N_()&lt;/code&gt;, which won&amp;rsquo;t conflict with any definition of &lt;code&gt;_()&lt;/code&gt;. However, you will need to teach your message extraction program to look for translatable strings marked with &lt;code&gt;N_()&lt;/code&gt;. &lt;strong&gt;xgettext&lt;/strong&gt;, &lt;strong&gt;pygettext&lt;/strong&gt;, &lt;code&gt;pybabel extract&lt;/code&gt;, and &lt;strong&gt;xpot&lt;/strong&gt; all support this through the use of the &lt;code&gt;-k&lt;/code&gt; command-line switch. The choice of &lt;code&gt;N_()&lt;/code&gt; here is totally arbitrary; it could have just as easily been &lt;code&gt;MarkThisStringForTranslation()&lt;/code&gt;.</source>
          <target state="translated">この場合、翻訳可能な文字列を関数 &lt;code&gt;N_()&lt;/code&gt; でマークしています。これは、 &lt;code&gt;_()&lt;/code&gt; の定義と競合しません。ただし、メッセージ抽出プログラムに &lt;code&gt;N_()&lt;/code&gt; でマークされた翻訳可能な文字列を探すように指示する必要があります。&lt;strong&gt;xgettext&lt;/strong&gt;、&lt;strong&gt;pygettext&lt;/strong&gt;、 &lt;code&gt;pybabel extract&lt;/code&gt; 、および&lt;strong&gt;xpotは&lt;/strong&gt;すべて、 &lt;code&gt;-k&lt;/code&gt; コマンドラインスイッチを使用してこれをサポートします。ここでの &lt;code&gt;N_()&lt;/code&gt; の選択は完全に任意です。 &lt;code&gt;MarkThisStringForTranslation()&lt;/code&gt; と同じくらい簡単にできたでしょう。</target>
        </trans-unit>
        <trans-unit id="08bfb79410a7dd7df492ec826030edd1454851bb" translate="yes" xml:space="preserve">
          <source>In this documentation the term &amp;ldquo;coroutine&amp;rdquo; can be used for two closely related concepts:</source>
          <target state="translated">このドキュメントでは、「コルーチン」という用語は、2つの密接に関連する概念に使用できます。</target>
        </trans-unit>
        <trans-unit id="bdbd41293f905fe5e804f0cde22491ea56d4aad3" translate="yes" xml:space="preserve">
          <source>In this example we monkey patch &lt;code&gt;method&lt;/code&gt; to return &lt;code&gt;sentinel.some_object&lt;/code&gt;:</source>
          <target state="translated">この例では、我々サルパッチでは &lt;code&gt;method&lt;/code&gt; 戻ります &lt;code&gt;sentinel.some_object&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0cb1f4c4966c211b894b9eddb03c77f1514eec4f" translate="yes" xml:space="preserve">
          <source>In this example, both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will be included in the added &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method, which will be defined as:</source>
          <target state="translated">この例では &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の両方が、次のように定義される追加の&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドに含まれます。</target>
        </trans-unit>
        <trans-unit id="5b3d5cd546b56dd82f8608e853a7baf739475096" translate="yes" xml:space="preserve">
          <source>In this example, the string &lt;code&gt;'writing a log message'&lt;/code&gt; is marked as a candidate for translation, while the strings &lt;code&gt;'mylog.txt'&lt;/code&gt; and &lt;code&gt;'w'&lt;/code&gt; are not.</source>
          <target state="translated">この例では、文字列 &lt;code&gt;'writing a log message'&lt;/code&gt; は翻訳の候補としてマークされていますが、文字列 &lt;code&gt;'mylog.txt'&lt;/code&gt; および &lt;code&gt;'w'&lt;/code&gt; はそうではありません。</target>
        </trans-unit>
        <trans-unit id="c7def4d1e263f8bcd184ca5ff886690b3b0a0295" translate="yes" xml:space="preserve">
          <source>In this example, the unpickler imports the &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt; function and then apply the string argument &amp;ldquo;echo hello world&amp;rdquo;. Although this example is inoffensive, it is not difficult to imagine one that could damage your system.</source>
          <target state="translated">この例では、unpicklerが&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;関数をインポートしてから、文字列引数「echo hello world」を適用します。この例は無害ですが、システムに損傷を与える可能性がある例を想像するのは難しくありません。</target>
        </trans-unit>
        <trans-unit id="e522fd7d7c94512496913a1631fcf4f5c248305d" translate="yes" xml:space="preserve">
          <source>In this example, we create a gzip&amp;rsquo;ed tar-file archive containing all files found in the &lt;code&gt;.ssh&lt;/code&gt; directory of the user:</source>
          <target state="translated">この例では、ユーザーの &lt;code&gt;.ssh&lt;/code&gt; ディレクトリにあるすべてのファイルを含むgzipされたtarファイルアーカイブを作成します。</target>
        </trans-unit>
        <trans-unit id="6ad2b90f1a4c574c3b7216fa3f340a8bbed08661" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ll use the following helper function to display match objects a little more gracefully:</source>
          <target state="translated">この例では、次のヘルパー関数を使用して、一致オブジェクトをもう少し上品に表示します。</target>
        </trans-unit>
        <trans-unit id="ba2da0e1a0b23d485c22fd691fbc6b825bea722c" translate="yes" xml:space="preserve">
          <source>In this module, shared memory refers to &amp;ldquo;System V style&amp;rdquo; shared memory blocks (though is not necessarily implemented explicitly as such) and does not refer to &amp;ldquo;distributed shared memory&amp;rdquo;. This style of shared memory permits distinct processes to potentially read and write to a common (or shared) region of volatile memory. Processes are conventionally limited to only have access to their own process memory space but shared memory permits the sharing of data between processes, avoiding the need to instead send messages between processes containing that data. Sharing data directly via memory can provide significant performance benefits compared to sharing data via disk or socket or other communications requiring the serialization/deserialization and copying of data.</source>
          <target state="translated">このモジュールでは、共有メモリは（System Vスタイルの）共有メモリブロックを指し（必ずしもそのように明示的に実装されている必要はありません）、「分散共有メモリ」を指しません。このスタイルの共有メモリにより、異なるプロセスが揮発性メモリの共通（または共有）領域を潜在的に読み書きできるようになります。プロセスは通常、独自のプロセスメモリ空間にのみアクセスできるように制限されていますが、共有メモリを使用すると、プロセス間でデータを共有できるため、代わりにそのデータを含むプロセス間でメッセージを送信する必要がなくなります。メモリを介してデータを直接共有すると、ディスクやソケット、またはデータのシリアル化/非シリアル化とコピーを必要とするその他の通信を介してデータを共有する場合に比べて、パフォーマンスが大幅に向上します。</target>
        </trans-unit>
        <trans-unit id="ec3672efb81510d5a09d403c05abc447f604c84f" translate="yes" xml:space="preserve">
          <source>In this section, &amp;ldquo;a becomes b&amp;rdquo; means that b can be used as a replacement for a.</source>
          <target state="translated">このセクションでは、「aがbになる」は、aの代わりにbを使用できることを意味します。</target>
        </trans-unit>
        <trans-unit id="21e480a14f4cd9a1149fed8cca6a4c7d111a42ea" translate="yes" xml:space="preserve">
          <source>In this section, &amp;lsquo;C&amp;rsquo; refers to the</source>
          <target state="translated">このセクションでは、「C」は</target>
        </trans-unit>
        <trans-unit id="876936e3c1b8574b0dd98372c0c2aa05d7cc3d86" translate="yes" xml:space="preserve">
          <source>In this section, we describe the general mechanisms available to you to define, customize, and control how class instances are pickled and unpickled.</source>
          <target state="translated">このセクションでは、クラスインスタンスがどのようにピクルスされ、どのようにアンピクルスされるかを定義、カスタマイズ、制御するために利用可能な一般的なメカニズムについて説明します。</target>
        </trans-unit>
        <trans-unit id="609a689db13972f91eaeffe399356954f6e29a03" translate="yes" xml:space="preserve">
          <source>In those examples, note that when an in-place method is called, the computation and assignment are performed in two separate steps. The in-place functions listed below only do the first step, calling the in-place method. The second step, assignment, is not handled.</source>
          <target state="translated">これらの例では、インプレース・メソッドが呼び出されると、計算と代入が 2 つの別々のステップで実行されることに注意してください。以下にリストされているインプレース関数は、最初のステップであるインプレース・メソッドの呼び出しのみを行います。2 番目のステップである代入は処理されません。</target>
        </trans-unit>
        <trans-unit id="f3e67f78459f05a24ed8968a34d4f51980839f13" translate="yes" xml:space="preserve">
          <source>In traditional Unix the field &lt;code&gt;pw_passwd&lt;/code&gt; usually contains a password encrypted with a DES derived algorithm (see module &lt;a href=&quot;crypt#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt;). However most modern unices use a so-called &lt;em&gt;shadow password&lt;/em&gt; system. On those unices the &lt;em&gt;pw_passwd&lt;/em&gt; field only contains an asterisk (&lt;code&gt;'*'&lt;/code&gt;) or the letter &lt;code&gt;'x'&lt;/code&gt; where the encrypted password is stored in a file &lt;code&gt;/etc/shadow&lt;/code&gt; which is not world readable. Whether the &lt;em&gt;pw_passwd&lt;/em&gt; field contains anything useful is system-dependent. If available, the &lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt; module should be used where access to the encrypted password is required.</source>
          <target state="translated">従来のUnixでは、フィールド &lt;code&gt;pw_passwd&lt;/code&gt; には通常、DES派生アルゴリズムで暗号化されたパスワードが含まれています（モジュール&lt;a href=&quot;crypt#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; を&lt;/a&gt;参照）。ただし、最近のほとんどのユニックスは、いわゆる&lt;em&gt;シャドウパスワード&lt;/em&gt;システムを使用してい&lt;em&gt;ます&lt;/em&gt;。これらの&lt;em&gt;ユニスで&lt;/em&gt;は、&lt;em&gt;pw_passwd&lt;/em&gt;フィールドにはアスタリスク（ &lt;code&gt;'*'&lt;/code&gt; ）または文字 &lt;code&gt;'x'&lt;/code&gt; のみが含まれており、暗号化されたパスワードは、ファイル &lt;code&gt;/etc/shadow&lt;/code&gt; に格納されており、&lt;em&gt;誰でも読み取る&lt;/em&gt;ことができません。&lt;em&gt;pw_passwd&lt;/em&gt;フィールドに役立つ情報が含まれているかどうかは、システムによって異なります。使用可能な場合は、暗号化されたパスワードへのアクセスが必要な場合に&lt;a href=&quot;spwd#module-spwd&quot;&gt; &lt;code&gt;spwd&lt;/code&gt; &lt;/a&gt;モジュールを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4db947ef6cd05225fe3e644d287ef1d201b7690c" translate="yes" xml:space="preserve">
          <source>In-memory binary streams are also available as &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">インメモリバイナリストリームは、&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;オブジェクトとしても利用できます。</target>
        </trans-unit>
        <trans-unit id="b6cfcf9ff1be78ddbf5f88cac85851468eeaa139" translate="yes" xml:space="preserve">
          <source>In-memory streams</source>
          <target state="translated">インメモリストリーム</target>
        </trans-unit>
        <trans-unit id="f1e0a688070a40f2e2db3ffb57db4a1558ede0ec" translate="yes" xml:space="preserve">
          <source>In-memory text streams are also available as &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">インメモリテキストストリームは、&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;オブジェクトとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="62f47cd6536074a736c1c116ad6886a50b7748af" translate="yes" xml:space="preserve">
          <source>In-place Operators</source>
          <target state="translated">場内のオペレーター</target>
        </trans-unit>
        <trans-unit id="8fde0e675981692ca7b1da663a1cf0845aae8f30" translate="yes" xml:space="preserve">
          <source>In-place operations are like binary operations, in that they remove TOS and TOS1, and push the result back on the stack, but the operation is done in-place when TOS1 supports it, and the resulting TOS may be (but does not have to be) the original TOS1.</source>
          <target state="translated">インプレース演算はバイナリ演算と似ていますが、TOSとTOS1を削除して結果をスタックに戻すという点ではバイナリ演算と似ていますが、演算はTOS1がサポートしている場合にインプレースで行われ、結果のTOSは元のTOS1であっても構いません(である必要はありません)。</target>
        </trans-unit>
        <trans-unit id="8af4b79f6c3a07f98f4ba1fb79d2c37561daffe3" translate="yes" xml:space="preserve">
          <source>Inability to resolve to an internal or external object.</source>
          <target state="translated">内部または外部のオブジェクトに解決できない。</target>
        </trans-unit>
        <trans-unit id="1a6c755eb982a2f54a4da7973c3f73c77717a36d" translate="yes" xml:space="preserve">
          <source>Incomplete Types</source>
          <target state="translated">不完全なタイプ</target>
        </trans-unit>
        <trans-unit id="e6fd210ecfa24de959ef25c81cb5be14a187e9d4" translate="yes" xml:space="preserve">
          <source>Increment the line number and end line number of each node in the tree starting at &lt;em&gt;node&lt;/em&gt; by &lt;em&gt;n&lt;/em&gt;. This is useful to &amp;ldquo;move code&amp;rdquo; to a different location in a file.</source>
          <target state="translated">始まるツリー内の各ノードの行番号と終了行番号をインクリメント&lt;em&gt;ノード&lt;/em&gt;によって&lt;em&gt;N&lt;/em&gt;。これは、ファイル内の別の場所に「コードを移動」するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fc380757d8f1313c5e79738a01b95f0245ea2bcd" translate="yes" xml:space="preserve">
          <source>Incremental (de)compression</source>
          <target state="translated">インクリメンタルデコンプレッション</target>
        </trans-unit>
        <trans-unit id="c0e4d91a0ac93c5179d6274198eca54354c0112e" translate="yes" xml:space="preserve">
          <source>Incremental Configuration</source>
          <target state="translated">インクリメンタル構成</target>
        </trans-unit>
        <trans-unit id="714de6e8dcb31cacd8f82e698735cc996d909c17" translate="yes" xml:space="preserve">
          <source>Incremental Encoding and Decoding</source>
          <target state="translated">インクリメンタルエンコードとデコード</target>
        </trans-unit>
        <trans-unit id="a70d136600a290d7d648bcefe4f894034d7a33c9" translate="yes" xml:space="preserve">
          <source>Incremental compression:</source>
          <target state="translated">インクリメンタル圧縮。</target>
        </trans-unit>
        <trans-unit id="a7f4a498ec26fd59fab8b07468072d9f25dbafa4" translate="yes" xml:space="preserve">
          <source>Incremental encoder and decoder classes or factory functions. These have to provide the interface defined by the base classes &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt;, respectively. Incremental codecs can maintain state.</source>
          <target state="translated">インクリメンタルエンコーダーとデコーダーのクラスまたはファクトリー関数。これらは、それぞれ基本クラス&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;によって定義されたインターフェースを提供する必要があります。インクリメンタルコーデックは状態を維持できます。</target>
        </trans-unit>
        <trans-unit id="cfc78b0aec9ec9307500e4e82c03e65603530f3f" translate="yes" xml:space="preserve">
          <source>IncrementalDecoder Objects</source>
          <target state="translated">IncrementalDecoder オブジェクト</target>
        </trans-unit>
        <trans-unit id="eda65be020f7ce434c41db14bb91b12c39b505b4" translate="yes" xml:space="preserve">
          <source>IncrementalEncoder Objects</source>
          <target state="translated">IncrementalEncoder オブジェクト</target>
        </trans-unit>
        <trans-unit id="4807b06d3e0ef5d4c1c771970fa1c0c8a1d5ba1f" translate="yes" xml:space="preserve">
          <source>IncrementalParser Objects</source>
          <target state="translated">インクリメンタルパーサオブジェクト</target>
        </trans-unit>
        <trans-unit id="f757e0a955188780b83c7c9c785807ad53aaa78c" translate="yes" xml:space="preserve">
          <source>Increments bytecode counter by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">バイトコードカウンターを&lt;em&gt;deltaだけ&lt;/em&gt;インクリメントします。</target>
        </trans-unit>
        <trans-unit id="9f38f8487043353879d3ca62212ab364189a37fc" translate="yes" xml:space="preserve">
          <source>Increments the progress bar&amp;rsquo;s value by &lt;em&gt;amount&lt;/em&gt;.</source>
          <target state="translated">プログレスバーの値を&lt;em&gt;量だけ増やし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bc9cdd48c3b4bc260e24e340e9220a7006377fb5" translate="yes" xml:space="preserve">
          <source>Indent Region</source>
          <target state="translated">インデント領域</target>
        </trans-unit>
        <trans-unit id="fb4844c6e4e3fdb04af9405295e30a7c41ae4efc" translate="yes" xml:space="preserve">
          <source>IndentationError</source>
          <target state="translated">IndentationError</target>
        </trans-unit>
        <trans-unit id="3cd6cb1c3ba0aa8ae172917a71df16fc02b82ac0" translate="yes" xml:space="preserve">
          <source>Independent of its category, each concrete stream object will also have various capabilities: it can be read-only, write-only, or read-write. It can also allow arbitrary random access (seeking forwards or backwards to any location), or only sequential access (for example in the case of a socket or pipe).</source>
          <target state="translated">具象ストリームオブジェクトは、そのカテゴリに関係なく、様々な機能を持っています:読み取り専用、書き込み専用、または読み書きが可能です。また、任意のランダムアクセス(任意の場所への前方または後方へのアクセス)や、シーケンシャルアクセス(例えば、ソケットやパイプの場合)のみを許可することもできます。</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="04f77b5a53e8914ea949c0d3dbe59ff927176c3a" translate="yes" xml:space="preserve">
          <source>Indexed Assignment</source>
          <target state="translated">インデックス化された課題</target>
        </trans-unit>
        <trans-unit id="181136c2e116ea448074c254b778be7e9dec6c9a" translate="yes" xml:space="preserve">
          <source>Indexed Deletion</source>
          <target state="translated">インデックス削除</target>
        </trans-unit>
        <trans-unit id="6dabd048a18ebfcff9a07def85323d4996693e98" translate="yes" xml:space="preserve">
          <source>Indexed databases of objects; uses &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトのインデックス付きデータベース。&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="6face659f95ee23785ce3d17089bd3d63183d57c" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete.</source>
          <target state="translated">以前にキューに入れていたタスクが完了したことを示します。</target>
        </trans-unit>
        <trans-unit id="9433ffdce775eecb1add8a4a73f1d9fde76ac24a" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete. Used by queue consumer threads. For each &lt;a href=&quot;#queue.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; used to fetch a task, a subsequent call to &lt;a href=&quot;#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; tells the queue that the processing on the task is complete.</source>
          <target state="translated">以前にエンキューされたタスクが完了したことを示します。キューコンシューマスレッドによって使用されます。タスクのフェッチに使用される&lt;a href=&quot;#queue.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;ごとに、後続の&lt;a href=&quot;#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; の&lt;/a&gt;呼び出しは、タスクの処理が完了したことをキューに通知します。</target>
        </trans-unit>
        <trans-unit id="ccfdc69dc0a7d14a2b1d58743e040b3b8aaf8ad5" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete. Used by queue consumers. For each &lt;a href=&quot;#multiprocessing.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; used to fetch a task, a subsequent call to &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; tells the queue that the processing on the task is complete.</source>
          <target state="translated">以前にエンキューされたタスクが完了したことを示します。キューコンシューマによって使用されます。タスクのフェッチに使用される&lt;a href=&quot;#multiprocessing.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;ごとに、後続の&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; の&lt;/a&gt;呼び出しは、タスクの処理が完了したことをキューに通知します。</target>
        </trans-unit>
        <trans-unit id="4ca6309605e634742c386580b3f395d337f036d3" translate="yes" xml:space="preserve">
          <source>Indicate that no more data will be put on this queue by the current process. The background thread will quit once it has flushed all buffered data to the pipe. This is called automatically when the queue is garbage collected.</source>
          <target state="translated">現在のプロセスがこれ以上のデータをこのキューに入れないことを示します。バックグラウンドスレッドは、すべてのバッファリングされたデータをパイプに流すと終了します。これは、キューがガベージコレクションされたときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="254811cd35f7a531bb479a6926167434a7f0d4ff" translate="yes" xml:space="preserve">
          <source>Indicate that the &lt;em&gt;num&lt;/em&gt; screen lines, starting at line &lt;em&gt;beg&lt;/em&gt;, are corrupted and should be completely redrawn on the next &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">行&lt;em&gt;beg&lt;/em&gt;から始まる&lt;em&gt;num&lt;/em&gt;画面行が破損しており、次の&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;呼び出しで完全に再描画する必要があることを示します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f187f4b63c4e285d79b6d0cf7c7d659b0be99d5" translate="yes" xml:space="preserve">
          <source>Indicates if a message of severity &lt;em&gt;level&lt;/em&gt; would be processed by this logger. This method checks first the module-level level set by &lt;code&gt;logging.disable(level)&lt;/code&gt; and then the logger&amp;rsquo;s effective level as determined by &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt;&lt;code&gt;getEffectiveLevel()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">重大度&lt;em&gt;レベルの&lt;/em&gt;メッセージがこのロガーによって処理されるかどうかを示します。このメソッドは、最初に &lt;code&gt;logging.disable(level)&lt;/code&gt; によって設定されたモジュールレベルのレベルをチェックし、次に&lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt; &lt;code&gt;getEffectiveLevel()&lt;/code&gt; &lt;/a&gt;によって決定されたロガーの有効レベルをチェックします。</target>
        </trans-unit>
        <trans-unit id="c5c853728e2e1fe3705b4dcef5fcbee47c970151" translate="yes" xml:space="preserve">
          <source>Indicates that an application on 64-bit Windows should operate on the 32-bit registry view.</source>
          <target state="translated">64ビットWindows上のアプリケーションが32ビットレジストリビューで動作することを示します。</target>
        </trans-unit>
        <trans-unit id="be2a690bd039486d70a78d040e16e00e5454af4b" translate="yes" xml:space="preserve">
          <source>Indicates that an application on 64-bit Windows should operate on the 64-bit registry view.</source>
          <target state="translated">64ビットWindows上のアプリケーションが64ビットレジストリビューで動作することを示します。</target>
        </trans-unit>
        <trans-unit id="44029812f3a615dab4b941a3d7aa5ae966773df5" translate="yes" xml:space="preserve">
          <source>Indicates that an operation was requested that does not make sense. If not trapped, returns &lt;code&gt;NaN&lt;/code&gt;. Possible causes include:</source>
          <target state="translated">意味のない操作が要求されたことを示します。トラップされない場合は、 &lt;code&gt;NaN&lt;/code&gt; を返します。考えられる原因は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4e5e3976df705a424101261da27cd2fde9d3de10" translate="yes" xml:space="preserve">
          <source>Indicates that rounding occurred and the result is not exact.</source>
          <target state="translated">丸めが発生し、結果が正確でないことを示します。</target>
        </trans-unit>
        <trans-unit id="cc981c0e44e076ce06474425971fe7b0ad7144fe" translate="yes" xml:space="preserve">
          <source>Indicates the effective level for this logger. If a value other than &lt;code&gt;NOTSET&lt;/code&gt; has been set using &lt;a href=&quot;#logging.Logger.setLevel&quot;&gt;&lt;code&gt;setLevel()&lt;/code&gt;&lt;/a&gt;, it is returned. Otherwise, the hierarchy is traversed towards the root until a value other than &lt;code&gt;NOTSET&lt;/code&gt; is found, and that value is returned. The value returned is an integer, typically one of &lt;code&gt;logging.DEBUG&lt;/code&gt;, &lt;code&gt;logging.INFO&lt;/code&gt; etc.</source>
          <target state="translated">このロガーの有効レベルを示します。 &lt;code&gt;NOTSET&lt;/code&gt; 以外の値が&lt;a href=&quot;#logging.Logger.setLevel&quot;&gt; &lt;code&gt;setLevel()&lt;/code&gt; &lt;/a&gt;を使用して設定されている場合は、その値が返されます。それ以外の場合、 &lt;code&gt;NOTSET&lt;/code&gt; 以外の値が見つかり、その値が返されるまで、階層はルートに向かってトラバースされます。返される値は整数で、通常は &lt;code&gt;logging.DEBUG&lt;/code&gt; 、 &lt;code&gt;logging.INFO&lt;/code&gt; などのいずれかです。</target>
        </trans-unit>
        <trans-unit id="c05b1808b79cd233f656fe2bcfce9be7819d7036" translate="yes" xml:space="preserve">
          <source>Indicates the exponent is larger than &lt;code&gt;Emax&lt;/code&gt; after rounding has occurred. If not trapped, the result depends on the rounding mode, either pulling inward to the largest representable finite number or rounding outward to &lt;code&gt;Infinity&lt;/code&gt;. In either case, &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt; are also signaled.</source>
          <target state="translated">丸めが行われた後、指数が &lt;code&gt;Emax&lt;/code&gt; よりも大きいことを示します。トラップされない場合、結果は丸めモードに依存し、表現可能な最大の有限数に内向きに引っ張るか、または &lt;code&gt;Infinity&lt;/code&gt; 外向きに丸めます。どちらの場合も、&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt;も通知されます。</target>
        </trans-unit>
        <trans-unit id="4f77f7a5be2f4f6bec024a7ca688eadb9d8cde39" translate="yes" xml:space="preserve">
          <source>Indicates the fastest compression method (less compression).</source>
          <target state="translated">最速の圧縮方法(圧縮量が少ない)を示します。</target>
        </trans-unit>
        <trans-unit id="d526feb8426100dd5e8960080eb37e1f6c7c0e18" translate="yes" xml:space="preserve">
          <source>Indicates the format that the module uses. Version 0 is the historical format, version 1 shares interned strings and version 2 uses a binary format for floating point numbers. Version 3 adds support for object instancing and recursion. The current version is 4.</source>
          <target state="translated">モジュールが使用するフォーマットを示します。バージョン 0 は歴史的なフォーマットで、バージョン 1 は内部の文字列を共有し、バージョン 2 は浮動小数点数のためのバイナリフォーマットを使用します。バージョン3では、オブジェクトのインスタンス化と再帰のサポートが追加されています。現在のバージョンは 4 です。</target>
        </trans-unit>
        <trans-unit id="f9f6bc8bf59e204af2bcdfb956cb28921fb1424b" translate="yes" xml:space="preserve">
          <source>Indicates the slowest compression method (best compression).</source>
          <target state="translated">最も遅い圧縮方法(最適圧縮)を示す。</target>
        </trans-unit>
        <trans-unit id="aac4c15b0b527f0bc39db2750782e41d6353de23" translate="yes" xml:space="preserve">
          <source>Indicates unpack completion. Raises an &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; exception if all of the data has not been unpacked.</source>
          <target state="translated">開梱完了を示します。すべてのデータがアンパックされていない場合は、&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="a7b874949185225675d995e483ef8e34af9b6cac" translate="yes" xml:space="preserve">
          <source>Indicates when to change to and back from DST. The format of the start and end dates are one of the following:</source>
          <target state="translated">DSTへの切り替え時期と、DSTからの切り替え時期を示します。開始日と終了日の形式は以下のいずれかです。</target>
        </trans-unit>
        <trans-unit id="9f62777df7523c5650cedcd6ae329dd3027c6d33" translate="yes" xml:space="preserve">
          <source>Indicates whether the current platform and implementation provides a symlink attack resistant version of &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt;. Currently this is only true for platforms supporting fd-based directory access functions.</source>
          <target state="translated">現在のプラットフォームと実装が&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; の&lt;/a&gt;シンボリックリンク耐性バージョンを提供するかどうかを示します。現在、これはfdベースのディレクトリアクセス機能をサポートするプラットフォームにのみ当てはまります。</target>
        </trans-unit>
        <trans-unit id="3de1857c33236705a23bac0cbecb919c2388633f" translate="yes" xml:space="preserve">
          <source>Indicates whether the named &lt;em&gt;section&lt;/em&gt; is present in the configuration. The &lt;em&gt;default section&lt;/em&gt; is not acknowledged.</source>
          <target state="translated">名前付き&lt;em&gt;セクション&lt;/em&gt;が構成に存在するかどうかを示します。&lt;em&gt;デフォルトのセクションでは&lt;/em&gt;認められていません。</target>
        </trans-unit>
        <trans-unit id="74f019ba984a0205ae5ca7d205233a0d659108ee" translate="yes" xml:space="preserve">
          <source>Individual flags should have values that are powers of two (1, 2, 4, 8, &amp;hellip;), while combinations of flags won&amp;rsquo;t:</source>
          <target state="translated">個々のフラグの値は2の累乗（1、2、4、8、&amp;hellip;）である必要がありますが、フラグの組み合わせでは次のことはできません。</target>
        </trans-unit>
        <trans-unit id="bb56100c551a80a406351b1238fb04cd7a795a80" translate="yes" xml:space="preserve">
          <source>Individual traps are set using the dictionary in the &lt;code&gt;traps&lt;/code&gt; field of a context:</source>
          <target state="translated">個々のトラップは、コンテキストの &lt;code&gt;traps&lt;/code&gt; フィールドの辞書を使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="7d7a2f3db28391fcf21d52da3f6b53e0db11323d" translate="yes" xml:space="preserve">
          <source>Individual warnings filters are specified as a sequence of fields separated by colons:</source>
          <target state="translated">個々の警告フィルタは、コロンで区切られたフィールドのシーケンスとして指定されます。</target>
        </trans-unit>
        <trans-unit id="11d6c70d3b61eb2adec653bae13969c8702afd21" translate="yes" xml:space="preserve">
          <source>Infinite and NaN Number Values</source>
          <target state="translated">無限とNaN数の値</target>
        </trans-unit>
        <trans-unit id="fdae9d30d05df13f4736716cf3012faf5a343e86" translate="yes" xml:space="preserve">
          <source>Infinite and NaN number values are accepted and output;</source>
          <target state="translated">無限、NaN数の値を受け付けて出力します。</target>
        </trans-unit>
        <trans-unit id="208f6a4e901648e152bff0d37fcf84f2558c7fa3" translate="yes" xml:space="preserve">
          <source>Infinities can be constructed directly with: &lt;code&gt;Decimal('Infinity')&lt;/code&gt;. Also, they can arise from dividing by zero when the &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt; signal is not trapped. Likewise, when the &lt;a href=&quot;#decimal.Overflow&quot;&gt;&lt;code&gt;Overflow&lt;/code&gt;&lt;/a&gt; signal is not trapped, infinity can result from rounding beyond the limits of the largest representable number.</source>
          <target state="translated">&lt;code&gt;Decimal('Infinity')&lt;/code&gt; 直接作成できます。また、&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;信号がトラップされていないときに、ゼロで除算することで発生する場合もあります。同様に、&lt;a href=&quot;#decimal.Overflow&quot;&gt; &lt;code&gt;Overflow&lt;/code&gt; &lt;/a&gt;信号がトラップされない場合、表現可能な最大数の制限を超えて四捨五入すると、無限大が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ed5b789236efcc14059ac13c746c6bf63a446511" translate="yes" xml:space="preserve">
          <source>Info-ZIP Home Page</source>
          <target state="translated">Info-ZIPホームページ</target>
        </trans-unit>
        <trans-unit id="f1a9ffafc271a884fe1c56d1e91026a9afac1d59" translate="yes" xml:space="preserve">
          <source>Information about how the &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module can be used to replace these modules and functions can be found in the following sections.</source>
          <target state="translated">&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールを使用してこれらのモジュールと機能を置き換える方法については、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="73dc9ae5bb811ec4a81b13ac14f9d0600c74bdc0" translate="yes" xml:space="preserve">
          <source>Information about the Info-ZIP project&amp;rsquo;s ZIP archive programs and development libraries.</source>
          <target state="translated">Info-ZIPプロジェクトのZIPアーカイブプログラムと開発ライブラリに関する情報。</target>
        </trans-unit>
        <trans-unit id="5dca2a23bec2c3f3823dba848b63caa3ddd34f46" translate="yes" xml:space="preserve">
          <source>Information about the declarations needed to process a document.</source>
          <target state="translated">文書を処理するために必要な申告書に関する情報。</target>
        </trans-unit>
        <trans-unit id="37721dc7ffd07b44f936ed4938598a4206ad258c" translate="yes" xml:space="preserve">
          <source>Information about the notations and entities declared by a document (including the external subset if the parser uses it and can provide the information) is available from a &lt;code&gt;DocumentType&lt;/code&gt; object. The &lt;code&gt;DocumentType&lt;/code&gt; for a document is available from the &lt;code&gt;Document&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;doctype&lt;/code&gt; attribute; if there is no &lt;code&gt;DOCTYPE&lt;/code&gt; declaration for the document, the document&amp;rsquo;s &lt;code&gt;doctype&lt;/code&gt; attribute will be set to &lt;code&gt;None&lt;/code&gt; instead of an instance of this interface.</source>
          <target state="translated">ドキュメントによって宣言された表記とエンティティに関する情報（パーサーがそれを使用して情報を提供できる場合は外部サブセットを含む）は、 &lt;code&gt;DocumentType&lt;/code&gt; オブジェクトから取得できます。 &lt;code&gt;DocumentType&lt;/code&gt; の文書のためには、より入手可能である &lt;code&gt;Document&lt;/code&gt; オブジェクトの &lt;code&gt;doctype&lt;/code&gt; 属性。ドキュメントの &lt;code&gt;DOCTYPE&lt;/code&gt; 宣言がない場合、ドキュメントの &lt;code&gt;doctype&lt;/code&gt; 属性は、このインターフェイスのインスタンスではなく、 &lt;code&gt;None&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="cce32b3d49301f675170423df0e3a5fe42a9f458" translate="yes" xml:space="preserve">
          <source>Information about the version of the zlib library in use is available through the following constants:</source>
          <target state="translated">使用中の zlib ライブラリのバージョンに関する情報は、以下の定数で確認できます。</target>
        </trans-unit>
        <trans-unit id="3dc195259320a72e072f4ede32b54adf6cc49ee6" translate="yes" xml:space="preserve">
          <source>Informs the logging system to perform an orderly shutdown by flushing and closing all handlers. This should be called at application exit and no further use of the logging system should be made after this call.</source>
          <target state="translated">ロギングシステムに、すべてのハンドラをフラッシュして閉じることで、秩序あるシャットダウンを実行するように通知します。これはアプリケーションの終了時に呼び出されるべきで、この呼び出しの後にロギングシステムを使用してはいけません。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="8c3b7e7bdfb6a623a8eb23a0493ea3c67706b89d" translate="yes" xml:space="preserve">
          <source>Inheritance of File Descriptors</source>
          <target state="translated">ファイルディスクリプタの継承</target>
        </trans-unit>
        <trans-unit id="6bce323c70ebeda273b76b4deb2d56162be0c2e0" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;popitem&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;setdefault&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;メソッドと &lt;code&gt;pop&lt;/code&gt; 、 &lt;code&gt;popitem&lt;/code&gt; 、 &lt;code&gt;clear&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、および &lt;code&gt;setdefault&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06211f7ed37f2fb2fd3d0b096255e56986486d8f" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">継承された&lt;a href=&quot;#collections.abc.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;メソッド</target>
        </trans-unit>
        <trans-unit id="6c8ee095532c52fa04b5b2f4774ee70078537885" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;append&lt;/code&gt;, &lt;code&gt;reverse&lt;/code&gt;, &lt;code&gt;extend&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;__iadd__&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#collections.abc.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;メソッドと &lt;code&gt;append&lt;/code&gt; 、 &lt;code&gt;reverse&lt;/code&gt; 、 &lt;code&gt;extend&lt;/code&gt; 、 &lt;code&gt;pop&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、および &lt;code&gt;__iadd__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d51fda0d61054bbf60003067c334dea455e6a456" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;__ior__&lt;/code&gt;, &lt;code&gt;__iand__&lt;/code&gt;, &lt;code&gt;__ixor__&lt;/code&gt;, and &lt;code&gt;__isub__&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;メソッドおよび &lt;code&gt;clear&lt;/code&gt; 、 &lt;code&gt;pop&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;__ior__&lt;/code&gt; 、 &lt;code&gt;__iand__&lt;/code&gt; 、 &lt;code&gt;__ixor__&lt;/code&gt; 、および &lt;code&gt;__isub__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="379c6401d036c1fd4201479a5a98fa61950fb477" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;encoding&lt;/code&gt;, &lt;code&gt;errors&lt;/code&gt;, and &lt;code&gt;newlines&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;メソッド、 &lt;code&gt;encoding&lt;/code&gt; 、 &lt;code&gt;errors&lt;/code&gt; 、および &lt;code&gt;newlines&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f9245eee96edcd8825a2046422c07072497cf0f" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;readall&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;メソッド、 &lt;code&gt;read&lt;/code&gt; 、および &lt;code&gt;readall&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a95bfb8966052c1a0ceee8247e352fac2cbbb068" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;readinto&lt;/code&gt;, and &lt;code&gt;readinto1&lt;/code&gt;</source>
          <target state="translated">継承された&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;メソッド、 &lt;code&gt;readinto&lt;/code&gt; 、および &lt;code&gt;readinto1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2f86a0622771a4fe382df1bdcb5afbbe667c715" translate="yes" xml:space="preserve">
          <source>Inherits</source>
          <target state="translated">Inherits</target>
        </trans-unit>
        <trans-unit id="b22e7705af8c8d03aae22d1b8adde6a0eccc1637" translate="yes" xml:space="preserve">
          <source>Inherits from</source>
          <target state="translated">を継承しています。</target>
        </trans-unit>
        <trans-unit id="2bc75738f31d4cad0d4af9bafd60101443b8a470" translate="yes" xml:space="preserve">
          <source>Init file</source>
          <target state="translated">イニット・ファイル</target>
        </trans-unit>
        <trans-unit id="a84f9ff878eec42e40bd18840ce1e8b26a925aef" translate="yes" xml:space="preserve">
          <source>Init-only variables</source>
          <target state="translated">イニット・オンリー変数</target>
        </trans-unit>
        <trans-unit id="f5d6a89f24c042aeeed4c674d462173e914e969f" translate="yes" xml:space="preserve">
          <source>Init-only variables without default values, if any exist, must be specified on the call to &lt;a href=&quot;#dataclasses.replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; so that they can be passed to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__post_init__()&lt;/code&gt;.</source>
          <target state="translated">デフォルト値のないinit-only変数が存在する場合は、それらを&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;__post_init__()&lt;/code&gt; 渡すことができるように&lt;a href=&quot;#dataclasses.replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; の&lt;/a&gt;呼び出しで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ae7812ad31389ab36e054e9b5c81ee4355c0c33" translate="yes" xml:space="preserve">
          <source>Initial turtle heading</source>
          <target state="translated">イニシャルタートルヘディング</target>
        </trans-unit>
        <trans-unit id="9c053c5a31de248a3fe3887d73e022ca74699147" translate="yes" xml:space="preserve">
          <source>Initialize curses and call another callable object, &lt;em&gt;func&lt;/em&gt;, which should be the rest of your curses-using application. If the application raises an exception, this function will restore the terminal to a sane state before re-raising the exception and generating a traceback. The callable object &lt;em&gt;func&lt;/em&gt; is then passed the main window &amp;lsquo;stdscr&amp;rsquo; as its first argument, followed by any other arguments passed to &lt;code&gt;wrapper()&lt;/code&gt;. Before calling &lt;em&gt;func&lt;/em&gt;, &lt;code&gt;wrapper()&lt;/code&gt; turns on cbreak mode, turns off echo, enables the terminal keypad, and initializes colors if the terminal has color support. On exit (whether normally or by exception) it restores cooked mode, turns on echo, and disables the terminal keypad.</source>
          <target state="translated">cursesを初期化して、cursesを使用するアプリケーションの残りの部分である別の呼び出し可能オブジェクト&lt;em&gt;funcを&lt;/em&gt;呼び出します。アプリケーションで例外が発生した場合、この関数は、例外を再発生させてトレースバックを生成する前に、端末を正常な状態に復元します。呼び出し可能なオブジェクト&lt;em&gt;funcに&lt;/em&gt;は、最初の引数としてメインウィンドウ「stdscr」が渡され、その後に &lt;code&gt;wrapper()&lt;/code&gt; に渡される他の引数が続きます。&lt;em&gt;funcを&lt;/em&gt;呼び出す前に、 &lt;code&gt;wrapper()&lt;/code&gt; はcbreakモードをオンにし、エコーをオフにし、端末のキーパッドを有効にし、端末が色をサポートしている場合は色を初期化します。終了時に（通常か例外かにかかわらず）、クックドモードに戻り、エコーをオンにし、端末のキーパッドを無効にします。</target>
        </trans-unit>
        <trans-unit id="3c39102c3fa06222a5c163727b0377eb39a67e1f" translate="yes" xml:space="preserve">
          <source>Initialize the internal data structures. If given, &lt;em&gt;files&lt;/em&gt; must be a sequence of file names which should be used to augment the default type map. If omitted, the file names to use are taken from &lt;a href=&quot;#mimetypes.knownfiles&quot;&gt;&lt;code&gt;knownfiles&lt;/code&gt;&lt;/a&gt;; on Windows, the current registry settings are loaded. Each file named in &lt;em&gt;files&lt;/em&gt; or &lt;a href=&quot;#mimetypes.knownfiles&quot;&gt;&lt;code&gt;knownfiles&lt;/code&gt;&lt;/a&gt; takes precedence over those named before it. Calling &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt; repeatedly is allowed.</source>
          <target state="translated">内部データ構造を初期化します。指定する場合、&lt;em&gt;ファイル&lt;/em&gt;は、デフォルトのタイプマップを拡張するために使用する一連のファイル名である必要があります。省略した場合、使用するファイル名は&lt;a href=&quot;#mimetypes.knownfiles&quot;&gt; &lt;code&gt;knownfiles&lt;/code&gt; &lt;/a&gt;から取得されます。Windowsでは、現在のレジストリ設定がロードされます。&lt;em&gt;files&lt;/em&gt;または&lt;a href=&quot;#mimetypes.knownfiles&quot;&gt; &lt;code&gt;knownfiles&lt;/code&gt; で&lt;/a&gt;指定された各ファイルは、その前に指定された&lt;em&gt;ファイル&lt;/em&gt;よりも優先され&lt;em&gt;ます&lt;/em&gt;。繰り返し&lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt;を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="67a777e10b60c9589ca15590b09a5cec97aaa843" translate="yes" xml:space="preserve">
          <source>Initialize the library. Return a &lt;a href=&quot;#curses-window-objects&quot;&gt;window&lt;/a&gt; object which represents the whole screen.</source>
          <target state="translated">ライブラリを初期化します。画面全体を表す&lt;a href=&quot;#curses-window-objects&quot;&gt;ウィンドウ&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="48428a849fbd7ccb672616c8d11dd86f3867404a" translate="yes" xml:space="preserve">
          <source>Initialize the random number generator.</source>
          <target state="translated">乱数発生器を初期化します。</target>
        </trans-unit>
        <trans-unit id="70995d6f7eecb673c201a63dd47d29c6584b9166" translate="yes" xml:space="preserve">
          <source>Initialize the terminal. &lt;em&gt;term&lt;/em&gt; is a string giving the terminal name, or &lt;code&gt;None&lt;/code&gt;; if omitted or &lt;code&gt;None&lt;/code&gt;, the value of the &lt;code id=&quot;index-1&quot;&gt;TERM&lt;/code&gt; environment variable will be used. &lt;em&gt;fd&lt;/em&gt; is the file descriptor to which any initialization sequences will be sent; if not supplied or &lt;code&gt;-1&lt;/code&gt;, the file descriptor for &lt;code&gt;sys.stdout&lt;/code&gt; will be used.</source>
          <target state="translated">端末を初期化します。&lt;em&gt;term&lt;/em&gt;は、端末名を表す文字列、または &lt;code&gt;None&lt;/code&gt; です。省略するか &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code id=&quot;index-1&quot;&gt;TERM&lt;/code&gt; 環境変数の値が使用されます。&lt;em&gt;fd&lt;/em&gt;は、初期化シーケンスが送信されるファイル記述子です。指定しないか &lt;code&gt;-1&lt;/code&gt; の場合、 &lt;code&gt;sys.stdout&lt;/code&gt; のファイル記述子が使用されます。</target>
        </trans-unit>
        <trans-unit id="ab79211166494a5373743e60ba9599daf58a2af2" translate="yes" xml:space="preserve">
          <source>Initializers of the correct type can also be specified:</source>
          <target state="translated">正しい型のイニシャライザを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="3cc9f180e9eb479c565d2e3c4fd6ce05ca9e580e" translate="yes" xml:space="preserve">
          <source>Initializes a thread lock which can be used to serialize access to underlying I/O functionality which may not be threadsafe.</source>
          <target state="translated">スレッドセーフではないかもしれない基礎となるI/O機能へのアクセスをシリアライズするために使用できるスレッドロックを初期化します。</target>
        </trans-unit>
        <trans-unit id="3852a908d7c934410ea309c7ea1ea46af8743103" translate="yes" xml:space="preserve">
          <source>Initializes instance of &lt;a href=&quot;#difflib.HtmlDiff&quot;&gt;&lt;code&gt;HtmlDiff&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#difflib.HtmlDiff&quot;&gt; &lt;code&gt;HtmlDiff&lt;/code&gt; の&lt;/a&gt;インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="f5885aef6f5096d972360ad2af443e94000e495a" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; instance by setting its level, setting the list of filters to the empty list and creating a lock (using &lt;a href=&quot;#logging.Handler.createLock&quot;&gt;&lt;code&gt;createLock()&lt;/code&gt;&lt;/a&gt;) for serializing access to an I/O mechanism.</source>
          <target state="translated">レベルを設定し、フィルターのリストを空のリストに設定し、I / Oメカニズムへのアクセスをシリアル化するために&lt;a href=&quot;#logging.Handler.createLock&quot;&gt; &lt;code&gt;createLock()&lt;/code&gt; &lt;/a&gt;を使用して）ロックを作成して、&lt;a href=&quot;#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt;インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="891e93a281cdc0ae8bd4cb4966bc1555092cc9eb" translate="yes" xml:space="preserve">
          <source>Initializes the given module object in accordance with &lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 489&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 489&lt;/strong&gt;&lt;/a&gt;に従って、指定されたモジュールオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="76391f6bbc3769470e5c6904d1885bcf07a8f838" translate="yes" xml:space="preserve">
          <source>Initializes the handler with a buffer of the specified capacity. Here, &lt;em&gt;capacity&lt;/em&gt; means the number of logging records buffered.</source>
          <target state="translated">指定された容量のバッファでハンドラを初期化します。ここで、&lt;em&gt;容量と&lt;/em&gt;は、バッファリングされたロギングレコードの数を意味します。</target>
        </trans-unit>
        <trans-unit id="6a4659852d66e1b08bbacb99cd059b9b5779e858" translate="yes" xml:space="preserve">
          <source>Initially &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; defined Python static type system as using &lt;em&gt;nominal subtyping&lt;/em&gt;. This means that a class &lt;code&gt;A&lt;/code&gt; is allowed where a class &lt;code&gt;B&lt;/code&gt; is expected if and only if &lt;code&gt;A&lt;/code&gt; is a subclass of &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;は当初、Python静的型システムを&lt;em&gt;名目上のサブタイプ&lt;/em&gt;を使用するものとして定義していました。クラスことをこれは意味 &lt;code&gt;A&lt;/code&gt; がクラスここで許可されている &lt;code&gt;B&lt;/code&gt; が予想される場合と場合にのみ、 &lt;code&gt;A&lt;/code&gt; はのサブクラスである &lt;code&gt;B&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="651e55be975986e7fd15535125aa6f9af6b714d3" translate="yes" xml:space="preserve">
          <source>Initially, when a program is started, the locale is the &lt;code&gt;C&lt;/code&gt; locale, no matter what the user&amp;rsquo;s preferred locale is. There is one exception: the &lt;a href=&quot;#locale.LC_CTYPE&quot;&gt;&lt;code&gt;LC_CTYPE&lt;/code&gt;&lt;/a&gt; category is changed at startup to set the current locale encoding to the user&amp;rsquo;s preferred locale encoding. The program must explicitly say that it wants the user&amp;rsquo;s preferred locale settings for other categories by calling &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt;.</source>
          <target state="translated">最初は、プログラムが開始されたときのロケールは、ユーザーの優先ロケールに関係なく、 &lt;code&gt;C&lt;/code&gt; ロケールです。例外が1つあります&lt;a href=&quot;#locale.LC_CTYPE&quot;&gt; &lt;code&gt;LC_CTYPE&lt;/code&gt; &lt;/a&gt;カテゴリが起動時に変更され、現在のロケールエンコーディングがユーザーの優先ロケールエンコーディングに設定されます。プログラムは &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 呼び出して、他のカテゴリに対するユーザーの優先ロケール設定が必要であることを明示的に示す必要があります。</target>
        </trans-unit>
        <trans-unit id="b6d8ad6283ed79c07a911360e0d9b48d60fca9b3" translate="yes" xml:space="preserve">
          <source>Initiate a transfer over the data connection. If the transfer is active, send an &lt;code&gt;EPRT&lt;/code&gt; or &lt;code&gt;PORT&lt;/code&gt; command and the transfer command specified by &lt;em&gt;cmd&lt;/em&gt;, and accept the connection. If the server is passive, send an &lt;code&gt;EPSV&lt;/code&gt; or &lt;code&gt;PASV&lt;/code&gt; command, connect to it, and start the transfer command. Either way, return the socket for the connection.</source>
          <target state="translated">データ接続を介して転送を開始します。転送がアクティブな場合は、 &lt;code&gt;EPRT&lt;/code&gt; または &lt;code&gt;PORT&lt;/code&gt; コマンドと&lt;em&gt;cmd&lt;/em&gt;で指定された転送コマンドを送信し、接続を受け入れます。サーバーがパッシブの場合は、 &lt;code&gt;EPSV&lt;/code&gt; または &lt;code&gt;PASV&lt;/code&gt; コマンドを送信して接続し、転送コマンドを開始します。どちらの方法でも、接続用のソケットを返します。</target>
        </trans-unit>
        <trans-unit id="a3b934f82fa9691663fe5cc49e6c91ec415ce86a" translate="yes" xml:space="preserve">
          <source>Inode number.</source>
          <target state="translated">ノード番号。</target>
        </trans-unit>
        <trans-unit id="61f3e06ef66f729eb248fc28dbd015725fbd26d3" translate="yes" xml:space="preserve">
          <source>Inode protection mode.</source>
          <target state="translated">ノード保護モードです。</target>
        </trans-unit>
        <trans-unit id="abc398c151cedbf682a4e32b5fe1f87a91547da5" translate="yes" xml:space="preserve">
          <source>Input methods</source>
          <target state="translated">入力方法</target>
        </trans-unit>
        <trans-unit id="3bac6667a1606f6aae5b9d31130c86a61ea3e529" translate="yes" xml:space="preserve">
          <source>Input parameter which defaults to the integer zero.</source>
          <target state="translated">デフォルトは整数のゼロである入力パラメータ。</target>
        </trans-unit>
        <trans-unit id="f0dadaeaa1a0521f244cb0c7817109df239c4e4a" translate="yes" xml:space="preserve">
          <source>Input/ouput</source>
          <target state="translated">Input/ouput</target>
        </trans-unit>
        <trans-unit id="cfb6ac42c15bfc315aef836b57bb90c22f4f147f" translate="yes" xml:space="preserve">
          <source>InputSource Objects</source>
          <target state="translated">入力ソースオブジェクト</target>
        </trans-unit>
        <trans-unit id="98cceba3103286deb746764afbe409454e752550" translate="yes" xml:space="preserve">
          <source>Inputs as in &lt;a href=&quot;#turtle.pencolor&quot;&gt;&lt;code&gt;pencolor()&lt;/code&gt;&lt;/a&gt;, set both, fillcolor and pencolor, to the given value.</source>
          <target state="translated">&lt;a href=&quot;#turtle.pencolor&quot;&gt; &lt;code&gt;pencolor()&lt;/code&gt; の&lt;/a&gt;ように入力し、fillcolorとpencolorの両方を指定した値に設定します。</target>
        </trans-unit>
        <trans-unit id="95802daab3a23990338179f72248350c1434cf39" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>
        </trans-unit>
        <trans-unit id="5c6157626eaa443a7d46529cadb0898d243cf4bf" translate="yes" xml:space="preserve">
          <source>Insert ## in front of selected lines.</source>
          <target state="translated">選択した行の前に#を挿入します。</target>
        </trans-unit>
        <trans-unit id="771d3a8e81fd09fb95d718f0e07e3c3ed54b1cb1" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;nlines&lt;/em&gt; lines into the specified window above the current line. The &lt;em&gt;nlines&lt;/em&gt; bottom lines are lost. For negative &lt;em&gt;nlines&lt;/em&gt;, delete &lt;em&gt;nlines&lt;/em&gt; lines starting with the one under the cursor, and move the remaining lines up. The bottom &lt;em&gt;nlines&lt;/em&gt; lines are cleared. The current cursor position remains the same.</source>
          <target state="translated">&lt;em&gt;nlines&lt;/em&gt;行を指定されたウィンドウの現在の行の上に挿入し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;nlines行&lt;/em&gt;下の行が失われます。負の&lt;em&gt;nlinesの&lt;/em&gt;場合、カーソルの下の行から始まる&lt;em&gt;nlines&lt;/em&gt;行を削除し、残りの行を上に移動します。下の&lt;em&gt;nlines&lt;/em&gt;行がクリアされます。現在のカーソル位置は変わりません。</target>
        </trans-unit>
        <trans-unit id="9ab25aba32579e4cbe82e3445dbc2750c5f19e2d" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; in sorted order. This is equivalent to &lt;code&gt;a.insert(bisect.bisect_left(a, x, lo, hi), x)&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted. Keep in mind that the O(log n) search is dominated by the slow O(n) insertion step.</source>
          <target state="translated">挿入は、&lt;em&gt;xは&lt;/em&gt;でソートされた順序で。これは、&lt;em&gt;a&lt;/em&gt;がすでにソートされて&lt;em&gt;いる&lt;/em&gt;と仮定し&lt;em&gt;た場合の&lt;/em&gt; &lt;code&gt;a.insert(bisect.bisect_left(a, x, lo, hi), x)&lt;/code&gt; と同等です。O（log n）検索は、低速のO（n）挿入ステップによって支配されることに注意してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ffe19f9b53fcc062222865d04ee695208ba7423" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;x&lt;/em&gt; into the deque at position &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;を両端キューの位置&lt;em&gt;iに&lt;/em&gt;挿入します。</target>
        </trans-unit>
        <trans-unit id="e69d0858508dfc3e6620fa59f50ef0662785e9c6" translate="yes" xml:space="preserve">
          <source>Insert CGI variables for the current request into the &lt;code&gt;environ&lt;/code&gt; attribute.</source>
          <target state="translated">現在のリクエストのCGI変数を &lt;code&gt;environ&lt;/code&gt; 属性に挿入します。</target>
        </trans-unit>
        <trans-unit id="11cf289408f544e7431d78ef915fdb066ede3d6a" translate="yes" xml:space="preserve">
          <source>Insert a blank line at cursor location.</source>
          <target state="translated">カーソル位置に空行を挿入します。</target>
        </trans-unit>
        <trans-unit id="428b27b44b5679a5100cbb0f2b51ce75dd8a5bf2" translate="yes" xml:space="preserve">
          <source>Insert a blank line under the cursor. All following lines are moved down by one line.</source>
          <target state="translated">カーソルの下に空行を挿入します。次の行はすべて1行分下に移動します。</target>
        </trans-unit>
        <trans-unit id="8cc41d420c2a48fb3dbe04ee4c88fa790360f745" translate="yes" xml:space="preserve">
          <source>Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to &lt;em&gt;n&lt;/em&gt; characters. If &lt;em&gt;n&lt;/em&gt; is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt;, if specified).</source>
          <target state="translated">カーソルの下の文字の前に、&lt;em&gt;n&lt;/em&gt;行までの文字列（行に収まるだけの文字）を挿入します。場合&lt;em&gt;、nは&lt;/em&gt;ゼロまたは負であり、全体の文字列が挿入されています。カーソルの右側にあるすべての文字が右に移動し、行の右端の文字が失われます。カーソルの位置は変わりません（指定されている場合は、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;xに&lt;/em&gt;移動した後）。</target>
        </trans-unit>
        <trans-unit id="52ef5c0b09949330d13e4bb951c2c108148e5ec6" translate="yes" xml:space="preserve">
          <source>Insert a character string (as many characters as will fit on the line) before the character under the cursor. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt;, if specified).</source>
          <target state="translated">カーソルの下の文字の前に文字列（行に収まるだけの文字数）を挿入します。カーソルの右側にあるすべての文字が右に移動し、行の右端の文字が失われます。カーソルの位置は変わりません（指定されている場合は、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;xに&lt;/em&gt;移動した後）。</target>
        </trans-unit>
        <trans-unit id="2cd230c1b957b61fbeafaadd6ef3bd7966d963f4" translate="yes" xml:space="preserve">
          <source>Insert a new child node before an existing child. It must be the case that &lt;em&gt;refChild&lt;/em&gt; is a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;newChild&lt;/em&gt; is returned. If &lt;em&gt;refChild&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, it inserts &lt;em&gt;newChild&lt;/em&gt; at the end of the children&amp;rsquo;s list.</source>
          <target state="translated">既存の子の前に新しい子ノードを挿入します。&lt;em&gt;refChild&lt;/em&gt;がこのノードの子である必要があります。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;newChild&lt;/em&gt;が返されます。&lt;em&gt;refChild&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、子リストの最後に&lt;em&gt;newChild&lt;/em&gt;を挿入し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dbbded73e99c71141ac74230b61b365295b11341" translate="yes" xml:space="preserve">
          <source>Insert a new item with value &lt;em&gt;x&lt;/em&gt; in the array before position &lt;em&gt;i&lt;/em&gt;. Negative values are treated as being relative to the end of the array.</source>
          <target state="translated">位置&lt;em&gt;iの&lt;/em&gt;前の配列に値&lt;em&gt;xの&lt;/em&gt;新しいアイテムを挿入します。負の値は、配列の末尾を基準にして扱われます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6442b4677754abf24013415cfc0b02328c37bf8d" translate="yes" xml:space="preserve">
          <source>Insert a simple entry into the list of &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter specifications&lt;/a&gt;. The meaning of the function parameters is as for &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, but regular expressions are not needed as the filter inserted always matches any message in any module as long as the category and line number match.</source>
          <target state="translated">&lt;a href=&quot;#warning-filter&quot;&gt;警告フィルター仕様の&lt;/a&gt;リストに単純なエントリーを挿入します。関数パラメーターの意味は&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; の&lt;/a&gt;場合と同じですが、挿入されたフィルターは、カテゴリーと行番号が一致する限り、モジュール内のメッセージに常に一致するため、正規表現は必要ありません。</target>
        </trans-unit>
        <trans-unit id="be8c8abeab9182b5ad4c0936ac5747b095eb532b" translate="yes" xml:space="preserve">
          <source>Insert an &lt;em&gt;ms&lt;/em&gt; millisecond pause in output.</source>
          <target state="translated">&lt;em&gt;ms&lt;/em&gt;ミリ秒のポーズを出力に挿入します。</target>
        </trans-unit>
        <trans-unit id="73267e5ac5110513448a2a6d6f16738aaf106dd8" translate="yes" xml:space="preserve">
          <source>Insert an entry into the list of &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter specifications&lt;/a&gt;. The entry is inserted at the front by default; if &lt;em&gt;append&lt;/em&gt; is true, it is inserted at the end. This checks the types of the arguments, compiles the &lt;em&gt;message&lt;/em&gt; and &lt;em&gt;module&lt;/em&gt; regular expressions, and inserts them as a tuple in the list of warnings filters. Entries closer to the front of the list override entries later in the list, if both match a particular warning. Omitted arguments default to a value that matches everything.</source>
          <target state="translated">&lt;a href=&quot;#warning-filter&quot;&gt;警告フィルター仕様の&lt;/a&gt;リストにエントリーを挿入します。エントリはデフォルトで前面に挿入されます。&lt;em&gt;append&lt;/em&gt;がtrueの場合、最後に挿入されます。これにより、引数のタイプがチェックされ、&lt;em&gt;メッセージ&lt;/em&gt;と&lt;em&gt;モジュールの&lt;/em&gt;正規表現がコンパイルされ、警告フィルターのリストにタプルとして挿入されます。リストの先頭に近いエントリは、両方が特定の警告に一致する場合、リストの後のエントリを上書きします。省略された引数は、デフォルトですべてに一致する値になります。</target>
        </trans-unit>
        <trans-unit id="ff80a5974b23d77a5c2b2ad834261e49b5ed7b09" translate="yes" xml:space="preserve">
          <source>Insert char or enter insert mode</source>
          <target state="translated">文字を挿入するか、挿入モードに入ります。</target>
        </trans-unit>
        <trans-unit id="e1b4dd9343d0aec1500078fcc20dfa87ecdaec8c" translate="yes" xml:space="preserve">
          <source>Insert contents of the system-wide clipboard into the current window.</source>
          <target state="translated">システム全体のクリップボードの内容を現在のウィンドウに挿入します。</target>
        </trans-unit>
        <trans-unit id="1d9d9fcb3881a1a7b2f39fbd44148815f8ffb775" translate="yes" xml:space="preserve">
          <source>Insert line</source>
          <target state="translated">行の挿入</target>
        </trans-unit>
        <trans-unit id="85b1c3bfc9615f38c45334ce27a2c3874f427470" translate="yes" xml:space="preserve">
          <source>Insert text into the line buffer at the cursor position. This calls &lt;code&gt;rl_insert_text()&lt;/code&gt; in the underlying library, but ignores the return value.</source>
          <target state="translated">ラインバッファーのカーソル位置にテキストを挿入します。これは、基礎となるライブラリの &lt;code&gt;rl_insert_text()&lt;/code&gt; を呼び出しますが、戻り値を無視します。</target>
        </trans-unit>
        <trans-unit id="321a83365ddb728f137f24e4d0374b111b7a89d6" translate="yes" xml:space="preserve">
          <source>Inserts &lt;em&gt;subelement&lt;/em&gt; at the given position in this element. Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;subelement&lt;/em&gt; is not an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この要素の指定された位置に&lt;em&gt;サブ要素&lt;/em&gt;を挿入します。発生させ&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外を&lt;/a&gt;場合は&lt;em&gt;サブ要素が&lt;/em&gt;ない&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07136851031cb8faca3df628c368a5d3f07c5e9a" translate="yes" xml:space="preserve">
          <source>Inserts a pane at the specified position.</source>
          <target state="translated">指定した位置にペインを挿入します。</target>
        </trans-unit>
        <trans-unit id="603a69de2ef615fc4774dc5a531b0478d24bd0ba" translate="yes" xml:space="preserve">
          <source>Install a timer that calls &lt;em&gt;fun&lt;/em&gt; after &lt;em&gt;t&lt;/em&gt; milliseconds.</source>
          <target state="translated">&lt;em&gt;t&lt;/em&gt;ミリ秒後に&lt;em&gt;fun&lt;/em&gt;を呼び出すタイマーをインストールします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d804377ba7463dd5b6eaba5ccaaad14a63c4069" translate="yes" xml:space="preserve">
          <source>Install all of your application&amp;rsquo;s dependencies into the &lt;code&gt;myapp&lt;/code&gt; directory, using pip:</source>
          <target state="translated">pipを使用して、アプリケーションのすべての依存関係を &lt;code&gt;myapp&lt;/code&gt; ディレクトリにインストールします。</target>
        </trans-unit>
        <trans-unit id="520b157afbe331621bce1a360a6f018e0e187fbb" translate="yes" xml:space="preserve">
          <source>Install an &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instance as the default global opener. Installing an opener is only necessary if you want urlopen to use that opener; otherwise, simply call &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;OpenerDirector.open()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The code does not check for a real &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, and any class with the appropriate interface will work.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;インスタンスをデフォルトのグローバルオープナーとしてインストールします。オープナーのインストールは、urlopenでそのオープナーを使用する場合にのみ必要です。それ以外の場合は、単に&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;OpenerDirector.open()&lt;/code&gt; を&lt;/a&gt;呼び出します。コードは実際の&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; を&lt;/a&gt;チェックせず、適切なインターフェイスを持つクラスが機能します。</target>
        </trans-unit>
        <trans-unit id="455b086ac3298a91870a87090996554bb11b3083" translate="yes" xml:space="preserve">
          <source>Install the control-c handler. When a &lt;code&gt;signal.SIGINT&lt;/code&gt; is received (usually in response to the user pressing control-c) all registered results have &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; called.</source>
          <target state="translated">control-cハンドラーをインストールします。場合 &lt;code&gt;signal.SIGINT&lt;/code&gt; は（通常制御-Cを押してユーザに応答して）受信されたすべての登録結果を有する&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="9d9844ff0d9d22475c61112c01b5f0c916b24483" translate="yes" xml:space="preserve">
          <source>Installation paths</source>
          <target state="translated">インストールパス</target>
        </trans-unit>
        <trans-unit id="e23f8bdbda721b9cbed1f844f7307a95d9b58116" translate="yes" xml:space="preserve">
          <source>Installing Python Modules</source>
          <target state="translated">Pythonモジュールのインストール</target>
        </trans-unit>
        <trans-unit id="a5aa044edf2a4b23b0600882b63f3573a49708ee" translate="yes" xml:space="preserve">
          <source>Installing Python Modules (Legacy version)</source>
          <target state="translated">Pythonモジュールのインストール(レガシー版</target>
        </trans-unit>
        <trans-unit id="71e27cbe55c7ee739cd8deca3e2c0f21cd96ea3e" translate="yes" xml:space="preserve">
          <source>Installing your CGI script on a Unix system</source>
          <target state="translated">Unix システムに CGI スクリプトをインストールする</target>
        </trans-unit>
        <trans-unit id="c1d91ffedb22549df648586a28db755e96527174" translate="yes" xml:space="preserve">
          <source>Installs activation scripts appropriate to the platform into the virtual environment.</source>
          <target state="translated">プラットフォームに適したアクティベーションスクリプトを仮想環境にインストールします。</target>
        </trans-unit>
        <trans-unit id="02d9da332f931b3a6a11cc4f1b01fd46bbfd85c7" translate="yes" xml:space="preserve">
          <source>Instance attributes (read-only):</source>
          <target state="translated">インスタンス属性(読み取り専用)。</target>
        </trans-unit>
        <trans-unit id="cef505a4b9b67a0b31ca83b3b269c5533fa33c8d" translate="yes" xml:space="preserve">
          <source>Instance method</source>
          <target state="translated">インスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="7a3c19110538625e1e983c1581301c5d59f09ead" translate="yes" xml:space="preserve">
          <source>Instance methods:</source>
          <target state="translated">インスタンスメソッドです。</target>
        </trans-unit>
        <trans-unit id="f5e5a85bed7028b78978acbd1aaddcd815f1c067" translate="yes" xml:space="preserve">
          <source>Instance of the &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; class intended to be shared. If no customization of the &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; is needed, this instance can be used instead of repeatedly creating new instances.</source>
          <target state="translated">共有する予定の&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;クラスのインスタンス。&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;のカスタマイズが不要な場合は、新しいインスタンスを繰り返し作成する代わりに、このインスタンスを使用できます。</target>
        </trans-unit>
        <trans-unit id="66006b01de7b00fd125d534c85307c7025d31754" translate="yes" xml:space="preserve">
          <source>Instances are a context manager that raises &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if the specified exception type is raised. Any keyword arguments are treated as attribute/value pairs to be compared against any exception raised within the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only if all pairs match properly against attributes on the exception is &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; raised.</source>
          <target state="translated">インスタンスは、指定された例外タイプが発生した場合に&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;を発生させるコンテキストマネージャです。キーワード引数は属性と値のペアとして扱われ、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメント内で発生した例外と比較されます。すべてのペアが例外の属性と適切に一致する場合にのみ、&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="7c702b9ba47b1a29abe7f9b14424131410786fc9" translate="yes" xml:space="preserve">
          <source>Instances are created in the usual way, by calling the class:</source>
          <target state="translated">インスタンスは通常の方法で、クラスを呼び出すことで作成されます。</target>
        </trans-unit>
        <trans-unit id="e36624384482780c99f8cf1e80e08d4dbffcccda" translate="yes" xml:space="preserve">
          <source>Instances are replaced with an appropriate value for Enum members.</source>
          <target state="translated">インスタンスは、Enumメンバーの適切な値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="977046f0ab67d4d0e4e35706464d8171ca16252f" translate="yes" xml:space="preserve">
          <source>Instances have a single attribute:</source>
          <target state="translated">インスタンスは1つの属性を持っています。</target>
        </trans-unit>
        <trans-unit id="af4676b1bcc4624e7da45d7a5ff8eacd0bf3c33c" translate="yes" xml:space="preserve">
          <source>Instances have one method in addition to those of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">インスタンスには、&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;オブジェクトのメソッドに加えて1つのメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="9356878128c51826b54b444b3b3d1f7304b466d9" translate="yes" xml:space="preserve">
          <source>Instances have the following methods and attributes:</source>
          <target state="translated">インスタンスは以下のメソッドと属性を持っています。</target>
        </trans-unit>
        <trans-unit id="4836c2b7b89edcfc83e32a7e01ec4c9ebbb5e79a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; subclasses have some public instance variables:</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスには、いくつかのパブリックインスタンス変数があります。</target>
        </trans-unit>
        <trans-unit id="e0fbdb8f7a773261c049a9a5c3586d5acb9eee33" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; raise this exception on failure to load cookies from a file. &lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt;&lt;code&gt;LoadError&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt; &lt;code&gt;FileCookieJar&lt;/code&gt; の&lt;/a&gt;インスタンスは、ファイルからCookieを読み込めなかった場合にこの例外を発生させます。&lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt; &lt;code&gt;LoadError&lt;/code&gt; は&lt;/a&gt;のサブクラスである&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c3af14ce90e18c0cd86060643d0a376c7566d62" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; have public instance variables:</source>
          <target state="translated">&lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; の&lt;/a&gt;インスタンスには、パブリックインスタンス変数があります。</target>
        </trans-unit>
        <trans-unit id="56e3aee8ff0d6c01108a6a06292032304f1239fb" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#poplib.POP3_SSL&quot;&gt;&lt;code&gt;POP3_SSL&lt;/code&gt;&lt;/a&gt; have no additional methods. The interface of this subclass is identical to its parent.</source>
          <target state="translated">&lt;a href=&quot;#poplib.POP3_SSL&quot;&gt; &lt;code&gt;POP3_SSL&lt;/code&gt; の&lt;/a&gt;インスタンスには、追加のメソッドはありません。このサブクラスのインターフェースは、その親と同じです。</target>
        </trans-unit>
        <trans-unit id="6a270da5a938701cf4bfb5b00e63f7b889296e57" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; provide the following operations:</source>
          <target state="translated">&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; の&lt;/a&gt;インスタンスは以下の操作を提供します：</target>
        </trans-unit>
        <trans-unit id="99ef98d14b1f3f5f16c5b4358f8ece80d4b0bb22" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; are compared to instances of &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; based on their members. For example, &lt;code&gt;set('abc') == frozenset('abc')&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; and so does &lt;code&gt;set('abc') in set([frozenset('abc')])&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;インスタンスは、メンバーに基づいて&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; の&lt;/a&gt;インスタンスと比較されます。たとえば、 &lt;code&gt;set('abc') == frozenset('abc')&lt;/code&gt; は &lt;code&gt;True&lt;/code&gt; を返し &lt;code&gt;set('abc') in set([frozenset('abc')])&lt;/code&gt; set（ 'abc'）も返します。</target>
        </trans-unit>
        <trans-unit id="5bad8405386be273c519f37d5de7d1af43fd2371" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; subclasses have some public instance variables which either control lexical analysis or can be used for debugging:</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスには、字句解析を制御するか、デバッグに使用できるいくつかのパブリックインスタンス変数があります。</target>
        </trans-unit>
        <trans-unit id="3a114067119bf39dea4018ea438842b0e1df5bc4" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; must be created using the &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; の&lt;/a&gt;インスタンスは、&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;メソッドを使用して作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6232c7c11311e2dbaabeb35f7f01aef1268d5f26" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; support addition, subtraction, multiplication and division by a constant. These operations are used for translation and scaling. For example:</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; の&lt;/a&gt;インスタンスは、定数による加算、減算、乗算、および除算をサポートします。これらの操作は、変換とスケーリングに使用されます。例えば：</target>
        </trans-unit>
        <trans-unit id="e4fca6b7030888ac58e9781d764d833f2fa42ad1" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#xml.sax.xmlreader.IncrementalParser&quot;&gt;&lt;code&gt;IncrementalParser&lt;/code&gt;&lt;/a&gt; offer the following additional methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.IncrementalParser&quot;&gt; &lt;code&gt;IncrementalParser&lt;/code&gt; の&lt;/a&gt;インスタンスは、以下の追加メソッドを提供します：</target>
        </trans-unit>
        <trans-unit id="c9c13ace643e3c6e869ce828dec5a9ec44914c1b" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#xml.sax.xmlreader.Locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt; provide these methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.Locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; の&lt;/a&gt;インスタンスは、次のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="804f8454e9538af6b77807d86e343f3fb23e2b60" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ast.expr&lt;/code&gt; and &lt;code&gt;ast.stmt&lt;/code&gt; subclasses have &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt; attributes. The &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ast.AST.end_lineno&quot;&gt;&lt;code&gt;end_lineno&lt;/code&gt;&lt;/a&gt; are the first and last line numbers of source text span (1-indexed so the first line is line 1) and the &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ast.AST.end_col_offset&quot;&gt;&lt;code&gt;end_col_offset&lt;/code&gt;&lt;/a&gt; are the corresponding UTF-8 byte offsets of the first and last tokens that generated the node. The UTF-8 offset is recorded because the parser uses UTF-8 internally.</source>
          <target state="translated">&lt;code&gt;ast.expr&lt;/code&gt; および &lt;code&gt;ast.stmt&lt;/code&gt; サブクラスのインスタンスには、&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;属性があります。&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ast.AST.end_lineno&quot;&gt; &lt;code&gt;end_lineno&lt;/code&gt; は、&lt;/a&gt;ソーステキストスパン（最初の行は行1であるので、1インデックス）との最初と最後の行番号であり&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ast.AST.end_col_offset&quot;&gt; &lt;code&gt;end_col_offset&lt;/code&gt; &lt;/a&gt;ノードを生成した最初と最後のトークンのUTF-8バイトのオフセットに対応しています。パーサーは内部でUTF-8を使用するため、UTF-8オフセットが記録されます。</target>
        </trans-unit>
        <trans-unit id="5d95f68c80ce0e510ee590b3846279063b4a2aa5" translate="yes" xml:space="preserve">
          <source>Instances of Action (or return value of any callable to the &lt;code&gt;action&lt;/code&gt; parameter) should have attributes &amp;ldquo;dest&amp;rdquo;, &amp;ldquo;option_strings&amp;rdquo;, &amp;ldquo;default&amp;rdquo;, &amp;ldquo;type&amp;rdquo;, &amp;ldquo;required&amp;rdquo;, &amp;ldquo;help&amp;rdquo;, etc. defined. The easiest way to ensure these attributes are defined is to call &lt;code&gt;Action.__init__&lt;/code&gt;.</source>
          <target state="translated">アクションのインスタンス（または &lt;code&gt;action&lt;/code&gt; パラメータへの呼び出し可能なものの戻り値）には、「dest」、「option_strings」、「default」、「type」、「required」、「help」などの属性が定義されている必要があります。これらの属性が定義されていることを確認する最も簡単な方法は、 &lt;code&gt;Action.__init__&lt;/code&gt; を呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="8d188b0cbbecd67a4203389ad78cd336997dc157" translate="yes" xml:space="preserve">
          <source>Instances of a class cannot be ordered with respect to other instances of the same class, or other types of object, unless the class defines enough of the methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; (in general, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; are sufficient, if you want the conventional meanings of the comparison operators).</source>
          <target state="translated">クラスが十分なメソッド&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;（一般に、比較演算子の従来の意味が必要な場合は、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;および__eq __（）で十分です）。</target>
        </trans-unit>
        <trans-unit id="6b5dcf1058b351c38261d04ca320dda4b3f25f2d" translate="yes" xml:space="preserve">
          <source>Instances of class &lt;code&gt;_Feature&lt;/code&gt; have two corresponding methods, &lt;code&gt;getOptionalRelease()&lt;/code&gt; and &lt;code&gt;getMandatoryRelease()&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;_Feature&lt;/code&gt; のインスタンスには、2つの対応するメソッド、 &lt;code&gt;getOptionalRelease()&lt;/code&gt; および &lt;code&gt;getMandatoryRelease()&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="5e6c634a0edffb9d61a7365311bea34ffe79ec57" translate="yes" xml:space="preserve">
          <source>Instances of foreign functions are also C compatible data types; they represent C function pointers.</source>
          <target state="translated">外部関数のインスタンスもC互換のデータ型であり、Cの関数ポインタを表します。</target>
        </trans-unit>
        <trans-unit id="a8afbcc19adfe2bbe9b22c2815e4299724822e37" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; class have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;クラスのインスタンスには次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="3a9546d42fe8710c49b46e747a53a869881a8867" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class represent the logical test units in the &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; universe. This class is intended to be used as a base class, with specific tests being implemented by concrete subclasses. This class implements the interface needed by the test runner to allow it to drive the tests, and methods that the test code can use to check for and report various kinds of failure.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;ユニバースの論理テストユニットを表します。このクラスは、具体的なサブクラスによって特定のテストが実装される、基本クラスとして使用することを目的としています。このクラスは、テストランナーがテストを実行できるようにするために必要なインターフェイスと、テストコードがさまざまな種類のエラーをチェックして報告するために使用できるメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="c68784d7b74127503c1abd5f3c46123eaca45a23" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; class are returned by the &lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt;&lt;code&gt;getinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt;&lt;code&gt;infolist()&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects. Each object stores information about a single member of the ZIP archive.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt; &lt;code&gt;getinfo()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt; &lt;code&gt;infolist()&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。各オブジェクトには、ZIPアーカイブの1つのメンバーに関する情報が格納されます。</target>
        </trans-unit>
        <trans-unit id="7bcb1ef59d54b0ecd47451fa339ebb50def36131" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;DatagramTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt; event loop method.</source>
          <target state="translated">&lt;em&gt;DatagramTransport&lt;/em&gt;クラスのインスタンスは、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;イベントループメソッドから返されます。</target>
        </trans-unit>
        <trans-unit id="586088455e5044d9a461dfedd040a8e305fa706e" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;ReadTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt; event loop method and are also used by subprocess-related methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンス&lt;em&gt;ReadTransportの&lt;/em&gt;クラスから返される&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;イベントループ法等サブプロセス関連の方法によっても使用される&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c1f936b1157bd672393e5f1fcb46b2dc8e3cf90" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;SubprocessTransport&lt;/em&gt; class are returned from event loop methods &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンス&lt;em&gt;SubprocessTransportの&lt;/em&gt;クラスは、イベントループメソッドから返される&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67256cc8f2e8e404f6172497df055c8737b58bdb" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;Transport&lt;/em&gt; class are returned from or used by event loop methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">&lt;em&gt;Transport&lt;/em&gt;クラスのインスタンスは、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt; &lt;code&gt;loop.sendfile()&lt;/code&gt; &lt;/a&gt;などのイベントループメソッドから返されるか、イベントメソッドによって使用されます。</target>
        </trans-unit>
        <trans-unit id="b5fb2b433087bffe30f4818f8930283b1d33a135" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;WriteTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; event loop method and are also used by subprocess-related methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンス&lt;em&gt;WriteTransportの&lt;/em&gt;クラスから返される&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;イベントループ法等サブプロセス関連の方法によっても使用される&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cbaede1df11dc6a6a6c405d9432098c3bd45c5c" translate="yes" xml:space="preserve">
          <source>Instances of these classes have no public methods. Functions exported by the shared library can be accessed as attributes or by index. Please note that accessing the function through an attribute caches the result and therefore accessing it repeatedly returns the same object each time. On the other hand, accessing it through an index returns a new object each time:</source>
          <target state="translated">これらのクラスのインスタンスにはパブリック・メソッドはありません。共有ライブラリによってエクスポートされた関数は、属性として、またはインデックスによってアクセスすることができます。アトリビュートを使って関数にアクセスすると、結果がキャッシュされるため、毎回同じオブジェクトが返されることに注意してください。一方、インデックスからアクセスすると、毎回新しいオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="1a4d2d21f791021b6819e5841a2fccc5056ea44a" translate="yes" xml:space="preserve">
          <source>Instances of this class behave like &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt; instances, except that the Python GIL is &lt;em&gt;not&lt;/em&gt; released during the function call, and after the function execution the Python error flag is checked. If the error flag is set, a Python exception is raised.</source>
          <target state="translated">このクラスのインスタンスは&lt;a href=&quot;#ctypes.CDLL&quot;&gt; &lt;code&gt;CDLL&lt;/code&gt; &lt;/a&gt;インスタンスのように動作しますが、関数の呼び出し中にPython GILが解放され&lt;em&gt;ず&lt;/em&gt;、関数の実行後にPythonエラーフラグがチェックされる点が異なります。エラーフラグが設定されている場合、Python例外が発生します。</target>
        </trans-unit>
        <trans-unit id="d0b4eb84d866c4aa98cf000e08ff3a6c3d081018" translate="yes" xml:space="preserve">
          <source>Instances of this class can be used as both a context manager:</source>
          <target state="translated">このクラスのインスタンスは、コンテキストマネージャとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="f609df77c7087014c66efc5131badef500e89bea" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to &lt;a href=&quot;#codeop.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the difference is that if the instance compiles program text containing a &lt;code&gt;__future__&lt;/code&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="translated">このクラスのインスタンスには、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#codeop.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;__（）メソッドのシグニチャーがcompile_command（）と同じです。違いは、インスタンスが &lt;code&gt;__future__&lt;/code&gt; ステートメントを含むプログラムテキストをコンパイルする場合、インスタンスはそのステートメントを有効にして、後続のすべてのプログラムテキストを「記憶」してコンパイルすることです。</target>
        </trans-unit>
        <trans-unit id="925a0c7a76a57e11d3f263578f0021165d4947c0" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to the built-in function &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;, but with the difference that if the instance compiles program text containing a &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="translated">このクラスのインスタンスには、組み込み関数&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;とシグネチャが同じ&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドがありますが、インスタンスが&lt;a href=&quot;__future__#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;ステートメントを含むプログラムテキストをコンパイルする場合、インスタンスは、発効中の声明。</target>
        </trans-unit>
        <trans-unit id="3cea02a40f1382d313c478a7d347bf77afc22680" translate="yes" xml:space="preserve">
          <source>Instances of this class have attributes &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; for easier access to the details. &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the exception instance returns only the message.</source>
          <target state="translated">このクラスのインスタンスには、詳細に簡単にアクセスできるように、 &lt;code&gt;filename&lt;/code&gt; 、 &lt;code&gt;lineno&lt;/code&gt; 、 &lt;code&gt;offset&lt;/code&gt; 、および &lt;code&gt;text&lt;/code&gt; 属性があります。例外インスタンスの&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;はメッセージのみを返します。</target>
        </trans-unit>
        <trans-unit id="e9552998fad2e04265127b613f40d80668c89fe3" translate="yes" xml:space="preserve">
          <source>Instances of this class represent loaded shared libraries. Functions in these libraries use the standard C calling convention, and are assumed to return &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">このクラスのインスタンスは、ロードされた共有ライブラリを表します。これらのライブラリの関数は標準のC呼び出し規約を使用し、 &lt;code&gt;int&lt;/code&gt; を返すと想定されています。</target>
        </trans-unit>
        <trans-unit id="1092250393de1231514a87858fe06d28af28725a" translate="yes" xml:space="preserve">
          <source>Instant User&amp;rsquo;s Manual</source>
          <target state="translated">インスタントユーザーマニュアル</target>
        </trans-unit>
        <trans-unit id="574cb265821ad17477fe1f76be69bb3a65511224" translate="yes" xml:space="preserve">
          <source>Instantiate a socket from data obtained from the &lt;a href=&quot;#socket.socket.share&quot;&gt;&lt;code&gt;socket.share()&lt;/code&gt;&lt;/a&gt; method. The socket is assumed to be in blocking mode.</source>
          <target state="translated">&lt;a href=&quot;#socket.socket.share&quot;&gt; &lt;code&gt;socket.share()&lt;/code&gt; &lt;/a&gt;メソッドから取得したデータからソケットをインスタンス化します。ソケットはブロッキングモードであると見なされます。</target>
        </trans-unit>
        <trans-unit id="6cc2c38c57dd41a65fc68bb18ba93a896f33546b" translate="yes" xml:space="preserve">
          <source>Instantiate the bytes object &lt;em&gt;str&lt;/em&gt; with the supplied parameters, where &lt;em&gt;str&lt;/em&gt; should be a parameterized string obtained from the terminfo database. E.g. &lt;code&gt;tparm(tigetstr(&quot;cup&quot;), 5, 3)&lt;/code&gt; could result in &lt;code&gt;b'\033[6;4H'&lt;/code&gt;, the exact result depending on terminal type.</source>
          <target state="translated">バイト・オブジェクト・インスタンス&lt;em&gt;STR&lt;/em&gt;供給されたパラメータと&lt;em&gt;strは&lt;/em&gt; terminfoデータベースから得られたパラメータ化された文字列であるべきです。たとえば、 &lt;code&gt;tparm(tigetstr(&quot;cup&quot;), 5, 3)&lt;/code&gt; は &lt;code&gt;b'\033[6;4H'&lt;/code&gt; になる可能性があり、正確な結果は端末のタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="be1f69e0247ba6c30dc81d6522ec5b9dfbbb54e4" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;autospec=True&lt;/code&gt; you can pass &lt;code&gt;autospec=some_object&lt;/code&gt; to use an arbitrary object as the spec instead of the one being replaced.</source>
          <target state="translated">&lt;code&gt;autospec=True&lt;/code&gt; の代わりに、autospec = &lt;code&gt;autospec=some_object&lt;/code&gt; を渡して、置き換えられるオブジェクトの代わりに任意のオブジェクトを仕様として使用できます。</target>
        </trans-unit>
        <trans-unit id="c5c2e9f6e6835a11ba9448dc7766ab78368e93af" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;parser.readfp(fp)&lt;/code&gt; use &lt;code&gt;parser.read_file(readline_generator(fp))&lt;/code&gt;.</source>
          <target state="translated">代わりの &lt;code&gt;parser.readfp(fp)&lt;/code&gt; の使用 &lt;code&gt;parser.read_file(readline_generator(fp))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3335f1cb058452ae970d6a5f6d030ab421d2b7a5" translate="yes" xml:space="preserve">
          <source>Instead of passing &lt;code&gt;True&lt;/code&gt; as the value for the punctuation_chars parameter, you can pass a string with specific characters, which will be used to determine which characters constitute punctuation. For example:</source>
          <target state="translated">punctuation_charsパラメータの値として &lt;code&gt;True&lt;/code&gt; を渡す代わりに、句読点を構成する文字を決定するために使用される特定の文字を含む文字列を渡すことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="bfe94486b315d1f59be6456fc99c6885002b55bd" translate="yes" xml:space="preserve">
          <source>Instead of printing the output at the end of the profile run, you can save the results to a file by specifying a filename to the &lt;code&gt;run()&lt;/code&gt; function:</source>
          <target state="translated">プロファイルの実行の最後に出力を印刷する代わりに、 &lt;code&gt;run()&lt;/code&gt; 関数にファイル名を指定することにより、結果をファイルに保存できます。</target>
        </trans-unit>
        <trans-unit id="6962965673ba6e30d7da60e2b13234969e6aa223" translate="yes" xml:space="preserve">
          <source>Instead of reading the profile data from a file, a &lt;code&gt;cProfile.Profile&lt;/code&gt; or &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;profile.Profile&lt;/code&gt;&lt;/a&gt; object can be used as the profile data source.</source>
          <target state="translated">ファイルからプロファイルデータを読み取る代わりに、 &lt;code&gt;cProfile.Profile&lt;/code&gt; または&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;profile.Profile&lt;/code&gt; &lt;/a&gt;オブジェクトをプロファイルデータソースとして使用できます。</target>
        </trans-unit>
        <trans-unit id="84f3292cd4df9827802ae460d7bf0d817b1c06d4" translate="yes" xml:space="preserve">
          <source>Instead one should protect the &amp;ldquo;entry point&amp;rdquo; of the program by using &lt;code&gt;if
__name__ == '__main__':&lt;/code&gt; as follows:</source>
          <target state="translated">代わりに、次のように &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; を使用して、プログラムの「エントリポイント」を保護する必要があります。</target>
        </trans-unit>
        <trans-unit id="96d5f6e166357195ec9d7a25ec7a7cc3761d5193" translate="yes" xml:space="preserve">
          <source>Instead, it is better to search a list of precomputed keys to find the index of the record in question:</source>
          <target state="translated">その代わり、事前に計算されたキーのリストを検索して、問題のレコードのインデックスを見つける方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="c0c218a2e12a68573c0a6efe87b144bd67b29216" translate="yes" xml:space="preserve">
          <source>Instead, use the DB-API&amp;rsquo;s parameter substitution. Put &lt;code&gt;?&lt;/code&gt; as a placeholder wherever you want to use a value, and then provide a tuple of values as the second argument to the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. (Other database modules may use a different placeholder, such as &lt;code&gt;%s&lt;/code&gt; or &lt;code&gt;:1&lt;/code&gt;.) For example:</source>
          <target state="translated">代わりに、DB-APIのパラメーター置換を使用してください。置く &lt;code&gt;?&lt;/code&gt; 値を使用する場所のプレースホルダーとして、カーソルの&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;メソッドの2番目の引数として値のタプルを提供します。（他のデータベースモジュールは、 &lt;code&gt;%s&lt;/code&gt; や &lt;code&gt;:1&lt;/code&gt; などの異なるプレースホルダーを使用する場合があります。）例：</target>
        </trans-unit>
        <trans-unit id="c639969c05d984ea055d9d4f757063936b210288" translate="yes" xml:space="preserve">
          <source>Instructions for non-Unix systems will vary; check your HTTP server&amp;rsquo;s documentation (it will usually have a section on CGI scripts).</source>
          <target state="translated">非UNIXシステムの場合の手順は異なります。HTTPサーバーのドキュメントを確認してください（通常、CGIスクリプトに関するセクションがあります）。</target>
        </trans-unit>
        <trans-unit id="1442021d1e6e277098afc29be0d45b6f7adc68dc" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; to perform no special processing of quote characters.</source>
          <target state="translated">引用文字の特別な処理を実行しないように&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;に指示します。</target>
        </trans-unit>
        <trans-unit id="047e505fbfb736e9c1925bb8f8dfaa7c490f8277" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to never quote fields. When the current &lt;em&gt;delimiter&lt;/em&gt; occurs in output data it is preceded by the current &lt;em&gt;escapechar&lt;/em&gt; character. If &lt;em&gt;escapechar&lt;/em&gt; is not set, the writer will raise &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; if any characters that require escaping are encountered.</source>
          <target state="translated">フィールドを引用しないように&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;オブジェクトに指示します。現在の&lt;em&gt;区切り文字&lt;/em&gt;が出力データで発生すると、現在の&lt;em&gt;エスケープ&lt;/em&gt;文字が前に置かれます。&lt;em&gt;escapechar&lt;/em&gt;が設定されていない場合、エスケープが必要な文字が&lt;a href=&quot;#csv.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;されると、ライターはエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="1b10705ce857dbeced06f0e80b06d1258b1c3559" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to only quote those fields which contain special characters such as &lt;em&gt;delimiter&lt;/em&gt;, &lt;em&gt;quotechar&lt;/em&gt; or any of the characters in &lt;em&gt;lineterminator&lt;/em&gt;.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;のみなどの特殊文字含まれているそれらのフィールドを引用するオブジェクトを&lt;em&gt;区切り&lt;/em&gt;、&lt;em&gt;quotechar&lt;/em&gt;かの文字のいずれかの&lt;em&gt;lineterminatorを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a28899561f1860e0cebbdf8e6feef81d417287ee" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to quote all fields.</source>
          <target state="translated">すべてのフィールドを引用するよう&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;オブジェクトに指示します。</target>
        </trans-unit>
        <trans-unit id="0e13df308f51e63d2ca55d3485fd8b7d669b80d7" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to quote all non-numeric fields.</source>
          <target state="translated">すべての非数値フィールドを引用するように&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;オブジェクトに指示します。</target>
        </trans-unit>
        <trans-unit id="68a9f1416c044b9eb3ae50c77e7087fc5bdcfec6" translate="yes" xml:space="preserve">
          <source>Instructs the reader to convert all non-quoted fields to type &lt;em&gt;float&lt;/em&gt;.</source>
          <target state="translated">引用符で囲まれていないすべてのフィールドを&lt;em&gt;float&lt;/em&gt;型に変換するようリーダーに指示します。</target>
        </trans-unit>
        <trans-unit id="9f9ac0fbc7f32aa66d8b0df0a6752da89865807f" translate="yes" xml:space="preserve">
          <source>IntEnum</source>
          <target state="translated">IntEnum</target>
        </trans-unit>
        <trans-unit id="a7dcebc39b9a6200e72e040ddb4b56fbab680190" translate="yes" xml:space="preserve">
          <source>IntFlag</source>
          <target state="translated">IntFlag</target>
        </trans-unit>
        <trans-unit id="32597b26633647b2d319add4525291d5919eb5f2" translate="yes" xml:space="preserve">
          <source>Integer expiry date in seconds since epoch, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. See also the &lt;a href=&quot;#http.cookiejar.Cookie.is_expired&quot;&gt;&lt;code&gt;is_expired()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">エポックからの秒単位の整数有効期限日、または&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#http.cookiejar.Cookie.is_expired&quot;&gt; &lt;code&gt;is_expired()&lt;/code&gt; &lt;/a&gt;メソッドもご覧ください。</target>
        </trans-unit>
        <trans-unit id="370fb883669c7c619884fcfa764167a7b1ba29d8" translate="yes" xml:space="preserve">
          <source>Integer or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. Netscape cookies have &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; 0. &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies have a &lt;code&gt;version&lt;/code&gt; cookie-attribute of 1. However, note that &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; may &amp;lsquo;downgrade&amp;rsquo; RFC 2109 cookies to Netscape cookies, in which case &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; is 0.</source>
          <target state="translated">整数または&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。Netscapeクッキーは持っている&lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 0 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 2109枚の&lt;/strong&gt;&lt;/a&gt;クッキーを持っている &lt;code&gt;version&lt;/code&gt; こと、しかし、ノートを1のクッキー属性を&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; が&lt;/a&gt;ケースれるNetscapeクッキーに「ダウングレード」RFC 2109枚のクッキー月&lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 0です。</target>
        </trans-unit>
        <trans-unit id="b2586bd79fe20fc085091ee4c039323ab91a2931" translate="yes" xml:space="preserve">
          <source>Integer specifying the handle of the Python DLL.</source>
          <target state="translated">Python DLLのハンドルを指定する整数。</target>
        </trans-unit>
        <trans-unit id="4be890d08d451686a7899dac00d8db91fbaa5012" translate="yes" xml:space="preserve">
          <source>Integer value to control debugging output. The initialize value is taken from the module variable &lt;code&gt;Debug&lt;/code&gt;. Values greater than three trace each command.</source>
          <target state="translated">デバッグ出力を制御するための整数値。初期化値は、モジュール変数 &lt;code&gt;Debug&lt;/code&gt; から取得されます。3より大きい値は、各コマンドをトレースします。</target>
        </trans-unit>
        <trans-unit id="0af14c05371406c3bfd30e44309da86d10408fca" translate="yes" xml:space="preserve">
          <source>Integers can be added to or subtracted from address objects. Some examples:</source>
          <target state="translated">整数は、アドレスオブジェクトに足したり引いたりすることができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="d6ab8a868612d7d4c1a82a75ee51d447ac3ad36d" translate="yes" xml:space="preserve">
          <source>Integration with the warnings module</source>
          <target state="translated">警告モジュールとの統合</target>
        </trans-unit>
        <trans-unit id="542505ecbda45c153abc5ccd78db35ec4f174034" translate="yes" xml:space="preserve">
          <source>Interact with process:</source>
          <target state="translated">プロセスとの相互作用。</target>
        </trans-unit>
        <trans-unit id="a7b5cc2308bf821e6cd84802cf3b9067390dca9f" translate="yes" xml:space="preserve">
          <source>Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. Wait for process to terminate. The optional &lt;em&gt;input&lt;/em&gt; argument should be data to be sent to the child process, or &lt;code&gt;None&lt;/code&gt;, if no data should be sent to the child. If streams were opened in text mode, &lt;em&gt;input&lt;/em&gt; must be a string. Otherwise, it must be bytes.</source>
          <target state="translated">プロセスとの対話：stdinにデータを送信します。ファイルの終わりに達するまで、stdoutおよびstderrからデータを読み取ります。プロセスが終了するのを待ちます。オプションの&lt;em&gt;入力&lt;/em&gt;引数は、子プロセスに送信するデータか、子にデータを送信しない場合は &lt;code&gt;None&lt;/code&gt; にする必要があります。ストリームがテキストモードで開かれた場合、&lt;em&gt;入力&lt;/em&gt;は文字列でなければなりません。それ以外の場合は、バイトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c32c2296489969b7635662c3bc8e006192df7595" translate="yes" xml:space="preserve">
          <source>Interacting with Subprocesses</source>
          <target state="translated">サブプロセスとの相互作用</target>
        </trans-unit>
        <trans-unit id="0fa8e4485c2202467e61698e8d5ba21575b8a864" translate="yes" xml:space="preserve">
          <source>Interaction function, emulates a very dumb Telnet client.</source>
          <target state="translated">インタラクション機能は、非常に間抜けなTelnetクライアントをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="ecb2b41b88adb0386e2e88e0cb9c56f459a0f7eb" translate="yes" xml:space="preserve">
          <source>Interactive Console Objects</source>
          <target state="translated">インタラクティブ コンソール オブジェクト</target>
        </trans-unit>
        <trans-unit id="3cfa87a88446a39b489c704cac79d06af1b86206" translate="yes" xml:space="preserve">
          <source>Interactive Interpreter Objects</source>
          <target state="translated">インタラクティブインタプリタオブジェクト</target>
        </trans-unit>
        <trans-unit id="2cadb5b7ff0248d2b78142447a263943598198ad" translate="yes" xml:space="preserve">
          <source>Interesting examples</source>
          <target state="translated">おもしろい例</target>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="translated">Interface</target>
        </trans-unit>
        <trans-unit id="8f852726c2cf35cbc0da9c364c92d16e46188ec0" translate="yes" xml:space="preserve">
          <source>Interface for a sequence of nodes.</source>
          <target state="translated">一連のノードのためのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="1c4db4b0abc2834a17fec9e2358468e1c7283350" translate="yes" xml:space="preserve">
          <source>Interface for associating a SAX event with a document location. A locator object will return valid results only during calls to DocumentHandler methods; at any other time, the results are unpredictable. If information is not available, methods may return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">SAXイベントをドキュメントの場所に関連付けるためのインターフェース。ロケーターオブジェクトは、DocumentHandlerメソッドの呼び出し中にのみ有効な結果を返します。それ以外の場合、結果は予測できません。情報が利用できない場合、メソッドは &lt;code&gt;None&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="5aa34ab8218f9e4e220f7344dabd8786a5fdb30e" translate="yes" xml:space="preserve">
          <source>Interface objects</source>
          <target state="translated">インターフェースオブジェクト</target>
        </trans-unit>
        <trans-unit id="8815c1714243ec8fd3c5703aaa179285d61a547d" translate="yes" xml:space="preserve">
          <source>Interface objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">インターフェースオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ&lt;/a&gt;可能なので、辞書のキーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="f2972dba464e3ec39c3f8d844bc8f4665db76466" translate="yes" xml:space="preserve">
          <source>Interface objects can be compared with the usual set of logical operators.</source>
          <target state="translated">インターフェースオブジェクトは、通常の論理演算子のセットと比較することができます。</target>
        </trans-unit>
        <trans-unit id="5af8df7a7a4069a4a7e8da32faa2198a5bc0ef82" translate="yes" xml:space="preserve">
          <source>Interface objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">インタフェースオブジェクトは、いくつかの演算子をサポートしています。特に明記されていない限り、演算子は互換性のあるオブジェクト間でのみ適用することができます(例えば、IPv4とIPv4、IPv6とIPv6)。</target>
        </trans-unit>
        <trans-unit id="009aeb4117871f36b8d07dbea81e88efde3f84c2" translate="yes" xml:space="preserve">
          <source>Interface representing a bidirectional transport, such as a TCP connection.</source>
          <target state="translated">TCP 接続などの双方向トランスポートを表すインタフェース。</target>
        </trans-unit>
        <trans-unit id="bae0f7875489c70ff870e51bf1acd5af5cd84f7f" translate="yes" xml:space="preserve">
          <source>Interface summary:</source>
          <target state="translated">インターフェースの概要。</target>
        </trans-unit>
        <trans-unit id="0d7c663f31a9f2ac91921862b41886ab434c27c9" translate="yes" xml:space="preserve">
          <source>Interface to the scheduler</source>
          <target state="translated">スケジューラとのインタフェース</target>
        </trans-unit>
        <trans-unit id="e3596470b1be1228bdbe04e547e2ae1f770f41b2" translate="yes" xml:space="preserve">
          <source>Interface to the underlying implementation.</source>
          <target state="translated">基盤となる実装へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="fb0b9bed2c76a555927ef2712dd54850772edaa0" translate="yes" xml:space="preserve">
          <source>Interface used by the parser to present error and warning messages to the application. The methods of this object control whether errors are immediately converted to exceptions or are handled in some other way.</source>
          <target state="translated">パーサがアプリケーションにエラーや警告メッセージを表示するために使用するインターフェースです。このオブジェクトのメソッドは、エラーがすぐに例外に変換されるか、他の方法で処理されるかを制御します。</target>
        </trans-unit>
        <trans-unit id="7e3a30fb53d88d0640de6d5babfe7057584ac5ad" translate="yes" xml:space="preserve">
          <source>Interfaces are accessed through instance objects. Applications should not instantiate the classes themselves; they should use the creator functions available on the &lt;code&gt;Document&lt;/code&gt; object. Derived interfaces support all operations (and attributes) from the base interfaces, plus any new operations.</source>
          <target state="translated">インターフェイスはインスタンスオブジェクトを介してアクセスされます。アプリケーションはクラス自体をインスタンス化しないでください。 &lt;code&gt;Document&lt;/code&gt; オブジェクトで使用可能なクリエーター関数を使用する必要があります。派生インターフェースは、基本インターフェースからのすべての操作（および属性）に加えて、すべての新しい操作をサポートします。</target>
        </trans-unit>
        <trans-unit id="70e0c022e8ef3548815e6ce09157b2f9fed238ce" translate="yes" xml:space="preserve">
          <source>Intermixed parsing</source>
          <target state="translated">混在解析</target>
        </trans-unit>
        <trans-unit id="9881c711f8b7d79a62e6a62f87a03b1baa3849a7" translate="yes" xml:space="preserve">
          <source>Internal Objects</source>
          <target state="translated">内部オブジェクト</target>
        </trans-unit>
        <trans-unit id="a047b417e339277c6847b0fd6036b5d0c0ae1549" translate="yes" xml:space="preserve">
          <source>Internal attributes.</source>
          <target state="translated">内部属性です。</target>
        </trans-unit>
        <trans-unit id="8846061f5d538bb327da6a9444390ad20122717a" translate="yes" xml:space="preserve">
          <source>Internally, function creates a &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; with protocol &lt;em&gt;ssl_version&lt;/em&gt; and &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; set to &lt;em&gt;cert_reqs&lt;/em&gt;. If parameters &lt;em&gt;keyfile&lt;/em&gt;, &lt;em&gt;certfile&lt;/em&gt;, &lt;em&gt;ca_certs&lt;/em&gt; or &lt;em&gt;ciphers&lt;/em&gt; are set, then the values are passed to &lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt;&lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内部的には、関数が作成されます&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; の&lt;/a&gt;プロトコルで&lt;em&gt;SSL_VERSION&lt;/em&gt;と&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; &lt;/a&gt;に設定&lt;em&gt;cert_reqs&lt;/em&gt;。パラメータがあれば&lt;em&gt;キーファイル&lt;/em&gt;、&lt;em&gt;certfileに&lt;/em&gt;、&lt;em&gt;ca_certs&lt;/em&gt;または&lt;em&gt;暗号が&lt;/em&gt;設定され、その後、値が渡される&lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt; &lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="580ada3f664fbd8faa4d39879e7b77c24136608a" translate="yes" xml:space="preserve">
          <source>Internally, those three types of queues use locks to temporarily block competing threads; however, they are not designed to handle reentrancy within a thread.</source>
          <target state="translated">内部的には、これら 3 つのタイプのキューは、競合するスレッドを一時的にブロックするためにロックを使用します;しかしながら、それらはスレッド内での再入室を扱うように設計されていません。</target>
        </trans-unit>
        <trans-unit id="0acc2a482d5d44565ff4ebc0b9139b2dc39c506b" translate="yes" xml:space="preserve">
          <source>International currency symbol.</source>
          <target state="translated">国際通貨記号。</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="54c981b9e80576e421c708ac83d965bd9c4c3152" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) refers to the operation by which a program is made aware of multiple languages. Localization (L10N) refers to the adaptation of your program, once internationalized, to the local language and cultural habits. In order to provide multilingual messages for your Python programs, you need to take the following steps:</source>
          <target state="translated">国際化 (I18N)は、プログラムが複数の言語を認識できるようにする操作を指します。ローカライゼーション(L10N)とは、国際化されたプログラムをローカルの言語や文化習慣に適応させることです。Pythonプログラムに多言語メッセージを提供するためには、以下の手順を踏む必要があります。</target>
        </trans-unit>
        <trans-unit id="75170006f623fbe183bf840cf6119bbd14972198" translate="yes" xml:space="preserve">
          <source>Internationalization services. The locale setting affects the interpretation of many format specifiers in &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">国際化サービス。ロケール設定は、&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;の多くのフォーマット指定子の解釈に影響します。</target>
        </trans-unit>
        <trans-unit id="230139ad0ce1adb0b931fe547c69c78a03a243e2" translate="yes" xml:space="preserve">
          <source>Internationalizing your programs and modules</source>
          <target state="translated">プログラムとモジュールの国際化</target>
        </trans-unit>
        <trans-unit id="d790826b4ae3ed725698ee4ed89c70a28abd95d5" translate="yes" xml:space="preserve">
          <source>Interned strings are not immortal; you must keep a reference to the return value of &lt;a href=&quot;#sys.intern&quot;&gt;&lt;code&gt;intern()&lt;/code&gt;&lt;/a&gt; around to benefit from it.</source>
          <target state="translated">インターンされた文字列は不滅ではありません。その恩恵を受けるには、&lt;a href=&quot;#sys.intern&quot;&gt; &lt;code&gt;intern()&lt;/code&gt; の&lt;/a&gt;戻り値への参照を保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="66c06c11d179e39c42e5e800f99b57865822cf68" translate="yes" xml:space="preserve">
          <source>Internet</source>
          <target state="translated">Internet</target>
        </trans-unit>
        <trans-unit id="8f1678405b5bf8f7b3c9be250ba0b2b4566bc2af" translate="yes" xml:space="preserve">
          <source>Internet Data</source>
          <target state="translated">インターネットデータ</target>
        </trans-unit>
        <trans-unit id="c1aebf7c813f788884574a6f7046f553aa035ab6" translate="yes" xml:space="preserve">
          <source>Internet Data Handling</source>
          <target state="translated">インターネットデータ処理</target>
        </trans-unit>
        <trans-unit id="efedd1f6d18388871beb5b8937b0af027d8bf044" translate="yes" xml:space="preserve">
          <source>Internet Protocols and Support</source>
          <target state="translated">インターネットプロトコルとサポート</target>
        </trans-unit>
        <trans-unit id="57c33a7c8b9764293298d03366937218c60d2a49" translate="yes" xml:space="preserve">
          <source>Interpolation behaviour may be customized by providing a custom handler through the &lt;em&gt;interpolation&lt;/em&gt; argument. &lt;code&gt;None&lt;/code&gt; can be used to turn off interpolation completely, &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; provides a more advanced variant inspired by &lt;code&gt;zc.buildout&lt;/code&gt;. More on the subject in the &lt;a href=&quot;#interpolation-of-values&quot;&gt;dedicated documentation section&lt;/a&gt;.</source>
          <target state="translated">補間動作が通過カスタムハンドラを提供することで、カスタマイズすることができる&lt;em&gt;補間&lt;/em&gt;引数。補間を完全にオフにするために使用できるものはあり &lt;code&gt;None&lt;/code&gt; &lt;code&gt;zc.buildout&lt;/code&gt; &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; は、zc.buildoutに触発されたより高度なバリアントを提供します。この件に関する詳細は、&lt;a href=&quot;#interpolation-of-values&quot;&gt;専用のドキュメントセクションを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="1f615e3d514dcbd13ad91a79d1d845b1973ce635" translate="yes" xml:space="preserve">
          <source>Interpolation behaviour may be customized by providing a custom handler through the &lt;em&gt;interpolation&lt;/em&gt; argument. &lt;code&gt;None&lt;/code&gt; can be used to turn off interpolation completely, &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; provides a more advanced variant inspired by &lt;code&gt;zc.buildout&lt;/code&gt;. More on the subject in the &lt;a href=&quot;#interpolation-of-values&quot;&gt;dedicated documentation section&lt;/a&gt;. &lt;a href=&quot;#configparser.RawConfigParser&quot;&gt;&lt;code&gt;RawConfigParser&lt;/code&gt;&lt;/a&gt; has a default value of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">補間動作が通過カスタムハンドラを提供することで、カスタマイズすることができる&lt;em&gt;補間&lt;/em&gt;引数。補間を完全にオフにするために使用できるものはあり &lt;code&gt;None&lt;/code&gt; &lt;code&gt;zc.buildout&lt;/code&gt; &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; は、zc.buildoutに触発されたより高度なバリアントを提供します。この件に関する詳細は、&lt;a href=&quot;#interpolation-of-values&quot;&gt;専用のドキュメントセクションを&lt;/a&gt;ご覧ください。&lt;a href=&quot;#configparser.RawConfigParser&quot;&gt; &lt;code&gt;RawConfigParser&lt;/code&gt; &lt;/a&gt;のデフォルト値は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bd2b15bb1774a577513ecc617124a7b368669881" translate="yes" xml:space="preserve">
          <source>Interpolation of values</source>
          <target state="translated">値の補間</target>
        </trans-unit>
        <trans-unit id="d568ce51e6576d8c0979772561e24281b364cfad" translate="yes" xml:space="preserve">
          <source>Interpret the argument as though it had been typed in response to the prompt. This may be overridden, but should not normally need to be; see the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; methods for useful execution hooks. The return value is a flag indicating whether interpretation of commands by the interpreter should stop. If there is a &lt;code&gt;do_*()&lt;/code&gt; method for the command &lt;em&gt;str&lt;/em&gt;, the return value of that method is returned, otherwise the return value from the &lt;a href=&quot;#cmd.Cmd.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt; method is returned.</source>
          <target state="translated">プロンプトに応答して入力されたかのように引数を解釈します。これはオーバーライドできますが、通常は必要ありません。有用な実行フックについては、&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。戻り値は、インタープリターによるコマンドの解釈を停止するかどうかを示すフラグです。ある場合は &lt;code&gt;do_*()&lt;/code&gt; コマンドのための方法&lt;em&gt;strが&lt;/em&gt;、そのメソッドの戻り値は、それ以外の戻り値は、返される&lt;a href=&quot;#cmd.Cmd.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt;メソッドが返されます。</target>
        </trans-unit>
        <trans-unit id="8d3c148819e9e54cd74c9c94b3ef056e575eee05" translate="yes" xml:space="preserve">
          <source>Interpreters</source>
          <target state="translated">Interpreters</target>
        </trans-unit>
        <trans-unit id="46d6db31f6f2547122e3f17c21631f666601ba12" translate="yes" xml:space="preserve">
          <source>Interrupt Execution</source>
          <target state="translated">割り込み実行</target>
        </trans-unit>
        <trans-unit id="8815302accf46070d40572381df17ae0b24087f8" translate="yes" xml:space="preserve">
          <source>Interrupted system call should be restarted</source>
          <target state="translated">割り込みが発生したシステムコールを再起動する必要があります</target>
        </trans-unit>
        <trans-unit id="b06a3395105be1465d6b1697af03d4431eac6c71" translate="yes" xml:space="preserve">
          <source>Interrupted system call.</source>
          <target state="translated">システムコールが中断されました。</target>
        </trans-unit>
        <trans-unit id="09dc03559a67ff5107d10fad944393ea3f877c07" translate="yes" xml:space="preserve">
          <source>InterruptedError</source>
          <target state="translated">InterruptedError</target>
        </trans-unit>
        <trans-unit id="0943ef2ada12e3e7dc287b50717ddb75bc6da8ed" translate="yes" xml:space="preserve">
          <source>Interruption</source>
          <target state="translated">Interruption</target>
        </trans-unit>
        <trans-unit id="4e36c74154decbcc22ec9de613c329458fb47795" translate="yes" xml:space="preserve">
          <source>Interruption during the decompression, such as pressing control-C or killing the decompression process may result in incomplete decompression of the archive.</source>
          <target state="translated">解凍中にcontrol-Cを押したり、解凍プロセスを終了させたりするなどの中断は、アーカイブの不完全な解凍を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="42c071214f97d5c4afff6973aa5aa8c312d9737c" translate="yes" xml:space="preserve">
          <source>Intro from the Apache HTTP Server documentation</source>
          <target state="translated">Apache HTTP サーバのドキュメントからの紹介</target>
        </trans-unit>
        <trans-unit id="74f37218ef8634d6f18ddbe27efca22ced57c811" translate="yes" xml:space="preserve">
          <source>Introduced the &lt;code&gt;__prepare__&lt;/code&gt; namespace hook</source>
          <target state="translated">&lt;code&gt;__prepare__&lt;/code&gt; 名前空間フックが導入されました</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="12b2799a6c697d71c79a7458b9ff32a936f76a1a" translate="yes" xml:space="preserve">
          <source>Introduction to the profilers</source>
          <target state="translated">プロファイラーの紹介</target>
        </trans-unit>
        <trans-unit id="0047e79057a6dadcd1958b908f6296f6079753b9" translate="yes" xml:space="preserve">
          <source>Introspecting callables with the Signature object</source>
          <target state="translated">Signature オブジェクトを使ったコールアブルの導入</target>
        </trans-unit>
        <trans-unit id="b3b4d20d3dfe4ef78d0bf43a93aa7f57bae176c5" translate="yes" xml:space="preserve">
          <source>Introspection</source>
          <target state="translated">Introspection</target>
        </trans-unit>
        <trans-unit id="45ff4427a9f1fb0c18cbcdf6b26d6a2d22f2df2f" translate="yes" xml:space="preserve">
          <source>Invalid argument</source>
          <target state="translated">無効な引数</target>
        </trans-unit>
        <trans-unit id="f8d3e8e47ede7d1e1d63b90adac4163f137f5fbd" translate="yes" xml:space="preserve">
          <source>Invalid arguments</source>
          <target state="translated">無効な引数</target>
        </trans-unit>
        <trans-unit id="0659862d18cc2aab0d2c79d54ece0b588cefda81" translate="yes" xml:space="preserve">
          <source>Invalid exchange</source>
          <target state="translated">無効な交換</target>
        </trans-unit>
        <trans-unit id="b7ebb17aae68fc96bde7bec88689e59f80c276a6" translate="yes" xml:space="preserve">
          <source>Invalid internal state of &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; の&lt;/a&gt;内部状態が無効です。</target>
        </trans-unit>
        <trans-unit id="e5a79f3df5c8af3ba8a7813c333e1a6a9466a6b5" translate="yes" xml:space="preserve">
          <source>Invalid request code</source>
          <target state="translated">無効なリクエストコード</target>
        </trans-unit>
        <trans-unit id="921238b4baa4c7c3a24c3d63e0e9afc770fd916a" translate="yes" xml:space="preserve">
          <source>Invalid request descriptor</source>
          <target state="translated">無効な要求記述子</target>
        </trans-unit>
        <trans-unit id="ac9eda2543c0cdfa22d49b3ce87554f9fa67c95e" translate="yes" xml:space="preserve">
          <source>Invalid request: descriptor not open</source>
          <target state="translated">無効な要求:ディスクリプタがオープンされていません。</target>
        </trans-unit>
        <trans-unit id="6684b6eeddecb3f9f1296f418af07f2108c4ba7a" translate="yes" xml:space="preserve">
          <source>Invalid slot</source>
          <target state="translated">無効なスロット</target>
        </trans-unit>
        <trans-unit id="ac39f10f2b107f4005a05fd5034e22c350ce91cd" translate="yes" xml:space="preserve">
          <source>Invalidate the internal caches of finders stored at &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt;. If a finder implements &lt;code&gt;invalidate_caches()&lt;/code&gt; then it will be called to perform the invalidation. This function should be called if any modules are created/installed while your program is running to guarantee all finders will notice the new module&amp;rsquo;s existence.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; に&lt;/a&gt;保存されているファインダーの内部キャッシュを無効にします。ファインダーが &lt;code&gt;invalidate_caches()&lt;/code&gt; を実装している場合は、無効化を実行するために呼び出されます。プログラムの実行中にモジュールが作成またはインストールされた場合、この関数を呼び出して、すべてのファインダーが新しいモジュールの存在に気付くようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="ba67563ea1b90363b3f3e36d5c60e13c4df6670d" translate="yes" xml:space="preserve">
          <source>Invert all the digits in &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;xの&lt;/em&gt;すべての桁を反転します。</target>
        </trans-unit>
        <trans-unit id="fd084280a98a8cc9427a473124b409ada9c6b2a3" translate="yes" xml:space="preserve">
          <source>Invisible or blank mode</source>
          <target state="translated">不可視またはブランクモード</target>
        </trans-unit>
        <trans-unit id="3bf010a72c53420609032016c83dfcf503ce6948" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt; on the current path. Accepts the same arguments as &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のパスで&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;ZipFile.open()&lt;/code&gt; &lt;/a&gt;を呼び出します。&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;ZipFile.open()&lt;/code&gt; &lt;/a&gt;と同じ引数を受け入れます。</target>
        </trans-unit>
        <trans-unit id="423894e2a4eefe4fc84b32affe9b7e263601406b" translate="yes" xml:space="preserve">
          <source>Invoke a callback &lt;em&gt;after&lt;/em&gt; the given time.</source>
          <target state="translated">指定された時間の&lt;em&gt;後&lt;/em&gt;にコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="6d5c67cd19bdfed187292858862c10f228bb5045" translate="yes" xml:space="preserve">
          <source>Invoke a callback &lt;em&gt;at&lt;/em&gt; the given time.</source>
          <target state="translated">指定された時間にコールバック&lt;em&gt;を&lt;/em&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="76c3be08bb7afa5e12d91ae6bbae4d9ceb1bf847" translate="yes" xml:space="preserve">
          <source>Invoke a callback soon.</source>
          <target state="translated">すぐにコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="02465213be1ac7e5af0e05eec89ae1f987088775" translate="yes" xml:space="preserve">
          <source>Invoke the built-in help system. (This function is intended for interactive use.) If no argument is given, the interactive help system starts on the interpreter console. If the argument is a string, then the string is looked up as the name of a module, function, class, method, keyword, or documentation topic, and a help page is printed on the console. If the argument is any other kind of object, a help page on the object is generated.</source>
          <target state="translated">組み込みのヘルプシステムを起動します。(この関数は対話型の使用を意図しています。)引数が与えられない場合、対話型のヘルプシステムがインタープリタコンソール上で起動します。引数が文字列の場合、その文字列はモジュール、関数、クラス、メソッド、キーワード、ドキュメントトピックの名前として検索され、コンソールにヘルプページが表示されます。引数が他の種類のオブジェクトの場合は、そのオブジェクトのヘルプページが生成されます。</target>
        </trans-unit>
        <trans-unit id="6844b46c8699594aabdbedb9cb340a297a5875b2" translate="yes" xml:space="preserve">
          <source>Invoked as a script, the &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module is a statistics browser for reading and examining profile dumps. It has a simple line-oriented interface (implemented using &lt;a href=&quot;cmd#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt;) and interactive help.</source>
          <target state="translated">スクリプトとして呼び出された&lt;a href=&quot;#module-pstats&quot;&gt; &lt;code&gt;pstats&lt;/code&gt; &lt;/a&gt;モジュールは、プロファイルダンプを読み取って調べるための統計ブラウザです。シンプルなライン指向のインターフェース（&lt;a href=&quot;cmd#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/a&gt;を使用して実装）とインタラクティブなヘルプがあります。</target>
        </trans-unit>
        <trans-unit id="726a8b660b71615a82f862249de26d56cd18e129" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;True&lt;/code&gt; if the stream is closed.</source>
          <target state="translated">ストリームが閉じている場合は &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d82b06adf1a876d702b6a3905d8d56b51827e40e" translate="yes" xml:space="preserve">
          <source>Is a directory</source>
          <target state="translated">ディレクトリは</target>
        </trans-unit>
        <trans-unit id="b9271431abbe409f3af4140e02d0f15a9328cd88" translate="yes" xml:space="preserve">
          <source>Is a generic constructor that takes the string &lt;em&gt;name&lt;/em&gt; of the desired algorithm as its first parameter. It also exists to allow access to the above listed hashes as well as any other algorithms that your OpenSSL library may offer. The named constructors are much faster than &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt; and should be preferred.</source>
          <target state="translated">目的のアルゴリズムの文字列&lt;em&gt;名&lt;/em&gt;を最初のパラメーターとして取る汎用コンストラクターです。上記のハッシュやOpenSSLライブラリが提供する他のアルゴリズムへのアクセスを許可するためにも存在します。名前付きコンストラクタは&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;よりもはるかに高速であり、推奨されます。</target>
        </trans-unit>
        <trans-unit id="0bf5e0f29c754cc24aba94217c9a03a8d1bd88d7" translate="yes" xml:space="preserve">
          <source>Is a named type file</source>
          <target state="translated">名前付きタイプのファイルですか?</target>
        </trans-unit>
        <trans-unit id="bee2b08fdf889353624d0f8c23e090efd5200001" translate="yes" xml:space="preserve">
          <source>Is called after the &lt;code&gt;end()&lt;/code&gt; callback of an element that declared a namespace prefix mapping, with the name of the &lt;em&gt;prefix&lt;/em&gt; that went out of scope.</source>
          <target state="translated">名前空間プレフィックスマッピングを宣言した要素の &lt;code&gt;end()&lt;/code&gt; コールバックの後に呼び出され、スコープ外になった&lt;em&gt;プレフィックス&lt;/em&gt;の名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="30d2df16b87401fece6e95883b5b9ea7ed5ee83b" translate="yes" xml:space="preserve">
          <source>Is called whenever the parser encounters a new namespace declaration, before the &lt;code&gt;start()&lt;/code&gt; callback for the opening element that defines it. &lt;em&gt;prefix&lt;/em&gt; is &lt;code&gt;''&lt;/code&gt; for the default namespace and the declared namespace prefix name otherwise. &lt;em&gt;uri&lt;/em&gt; is the namespace URI.</source>
          <target state="translated">パーサーが新しい名前空間宣言に遭遇するたびに、それを定義する開始要素の &lt;code&gt;start()&lt;/code&gt; コールバックの前に呼び出されます。デフォルトのネームスペースの&lt;em&gt;プレフィックス&lt;/em&gt;は &lt;code&gt;''&lt;/code&gt; 、それ以外の場合は宣言されたネームスペースプレフィックス名です。&lt;em&gt;uri&lt;/em&gt;は名前空間URIです。</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">と同等です。</target>
        </trans-unit>
        <trans-unit id="faccc474f96ec465b21b84d73c34160d716e3f91" translate="yes" xml:space="preserve">
          <source>Is raised by &lt;a href=&quot;#tarfile.TarInfo.frombuf&quot;&gt;&lt;code&gt;TarInfo.frombuf()&lt;/code&gt;&lt;/a&gt; if the buffer it gets is invalid.</source>
          <target state="translated">取得したバッファーが無効な場合、&lt;a href=&quot;#tarfile.TarInfo.frombuf&quot;&gt; &lt;code&gt;TarInfo.frombuf()&lt;/code&gt; &lt;/a&gt;によって発生します。</target>
        </trans-unit>
        <trans-unit id="18a7000c3669054a5c3429b5bca7b29f3a62b417" translate="yes" xml:space="preserve">
          <source>Is raised for &lt;em&gt;non-fatal&lt;/em&gt; errors when using &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;TarFile.extract()&lt;/code&gt;&lt;/a&gt;, but only if &lt;code&gt;TarFile.errorlevel&lt;/code&gt;&lt;code&gt;== 2&lt;/code&gt;.</source>
          <target state="translated">以下のために提起された&lt;em&gt;致命的で&lt;/em&gt;使用する場合のエラー&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;TarFile.extract()&lt;/code&gt; &lt;/a&gt;が、唯一の場合 &lt;code&gt;TarFile.errorlevel&lt;/code&gt; &lt;code&gt;== 2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18715da6dd78d77038e6918bcd213c664251a25c" translate="yes" xml:space="preserve">
          <source>Is raised for the limitations that are typical for stream-like &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">ストリームのような&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトに典型的な制限のために発生します。</target>
        </trans-unit>
        <trans-unit id="b4dfe73679ab1a5e17ff73652a8048ca83d1123c" translate="yes" xml:space="preserve">
          <source>Is raised when a compression method is not supported or when the data cannot be decoded properly.</source>
          <target state="translated">圧縮方法がサポートされていない場合や、データが正しくデコードできない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="3c229c84cdb83be81adf3d14e2f27db1ff9323b8" translate="yes" xml:space="preserve">
          <source>Is raised when a tar archive is opened, that either cannot be handled by the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module or is somehow invalid.</source>
          <target state="translated">tarアーカイブが開かれたときに発生し、&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールで処理できないか、何らかの理由で無効です。</target>
        </trans-unit>
        <trans-unit id="0d9f275d0e44d3c8f374404212109840194aa96b" translate="yes" xml:space="preserve">
          <source>Is the specified record to be logged? Returns zero for no, nonzero for yes. If deemed appropriate, the record may be modified in-place by this method.</source>
          <target state="translated">指定したレコードがログに記録されますか?no の場合はゼロを、yes の場合はゼロ以外を返します。適切であると判断された場合は、このメソッドを使用してレコードを変更することができます。</target>
        </trans-unit>
        <trans-unit id="b8d1927814fec93e6de191ddf4a54f49e0a8a5f4" translate="yes" xml:space="preserve">
          <source>IsADirectoryError</source>
          <target state="translated">IsADirectoryError</target>
        </trans-unit>
        <trans-unit id="5aaeb6752e0a30b5836a9fdc9113966711e2d7a5" translate="yes" xml:space="preserve">
          <source>Issue a warning, or maybe ignore it or raise an exception. The &lt;em&gt;category&lt;/em&gt; argument, if given, must be a &lt;a href=&quot;#warning-categories&quot;&gt;warning category class&lt;/a&gt;; it defaults to &lt;a href=&quot;exceptions#UserWarning&quot;&gt;&lt;code&gt;UserWarning&lt;/code&gt;&lt;/a&gt;. Alternatively, &lt;em&gt;message&lt;/em&gt; can be a &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; instance, in which case &lt;em&gt;category&lt;/em&gt; will be ignored and &lt;code&gt;message.__class__&lt;/code&gt; will be used. In this case, the message text will be &lt;code&gt;str(message)&lt;/code&gt;. This function raises an exception if the particular warning issued is changed into an error by the &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter&lt;/a&gt;. The &lt;em&gt;stacklevel&lt;/em&gt; argument can be used by wrapper functions written in Python, like this:</source>
          <target state="translated">警告を出すか、無視するか、例外を発生させます。&lt;em&gt;カテゴリ&lt;/em&gt;引数は、与えられた場合には、でなければならない&lt;a href=&quot;#warning-categories&quot;&gt;警告カテゴリクラス&lt;/a&gt;。デフォルトは&lt;a href=&quot;exceptions#UserWarning&quot;&gt; &lt;code&gt;UserWarning&lt;/code&gt; &lt;/a&gt;です。または、&lt;em&gt;メッセージ&lt;/em&gt;を&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;インスタンスにすることもできます。その場合、&lt;em&gt;カテゴリ&lt;/em&gt;は無視され、 &lt;code&gt;message.__class__&lt;/code&gt; が使用されます。この場合、メッセージテキストは &lt;code&gt;str(message)&lt;/code&gt; になります。この関数は、発行された特定の警告が&lt;a href=&quot;#warning-filter&quot;&gt;警告フィルター&lt;/a&gt;によってエラーに変更された場合に例外を発生させます。&lt;em&gt;stacklevel&lt;/em&gt;引数は次のように、Pythonで書かれたラッパー関数で使用することができます。</target>
        </trans-unit>
        <trans-unit id="2acc379f1d9efba7c573cb292f79779105a94baa" translate="yes" xml:space="preserve">
          <source>Issue an &lt;code&gt;SMTP&lt;/code&gt;&lt;code&gt;AUTH&lt;/code&gt; command for the specified authentication &lt;em&gt;mechanism&lt;/em&gt;, and handle the challenge response via &lt;em&gt;authobject&lt;/em&gt;.</source>
          <target state="translated">指定された認証&lt;em&gt;メカニズム&lt;/em&gt;に対して &lt;code&gt;SMTP&lt;/code&gt; &lt;code&gt;AUTH&lt;/code&gt; コマンドを発行し、&lt;em&gt;authobject&lt;/em&gt;を介してチャレンジ応答を&lt;em&gt;処理し&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131d53be7d06b29d352aeb037a9507988702c57d" translate="yes" xml:space="preserve">
          <source>Issue with file descriptors</source>
          <target state="translated">ファイルディスクリプタに関する問題</target>
        </trans-unit>
        <trans-unit id="e46c8a5eede1acdf3c821975f3ebca0b3fba6963" translate="yes" xml:space="preserve">
          <source>It also defines names for some object types that are used by the standard Python interpreter, but not exposed as builtins like &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; are.</source>
          <target state="translated">また、標準のPythonインタープリターで使用されているが、&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;ような組み込みとしては公開されていないオブジェクトタイプの名前も定義しています。</target>
        </trans-unit>
        <trans-unit id="03d0fa505bb145a8b508318b5166e2f593fc8b4f" translate="yes" xml:space="preserve">
          <source>It also has children nodes over which we can iterate:</source>
          <target state="translated">また、反復処理が可能な子ノードも持っています。</target>
        </trans-unit>
        <trans-unit id="ba93dd24e6158dc460f6e66524c0fca4f667b666" translate="yes" xml:space="preserve">
          <source>It also looks for &lt;code&gt;*.pkg&lt;/code&gt; files beginning where &lt;code&gt;*&lt;/code&gt; matches the &lt;em&gt;name&lt;/em&gt; argument. This feature is similar to &lt;code&gt;*.pth&lt;/code&gt; files (see the &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module for more information), except that it doesn&amp;rsquo;t special-case lines starting with &lt;code&gt;import&lt;/code&gt;. A &lt;code&gt;*.pkg&lt;/code&gt; file is trusted at face value: apart from checking for duplicates, all entries found in a &lt;code&gt;*.pkg&lt;/code&gt; file are added to the path, regardless of whether they exist on the filesystem. (This is a feature.)</source>
          <target state="translated">また、 &lt;code&gt;*&lt;/code&gt; が&lt;em&gt;name&lt;/em&gt;引数と一致する場所から始まる &lt;code&gt;*.pkg&lt;/code&gt; ファイルも検索します。この機能は &lt;code&gt;*.pth&lt;/code&gt; ファイル（詳細については、&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;モジュールを参照）に似ていますが、 &lt;code&gt;import&lt;/code&gt; で始まる特殊な行がない点が異なります。 &lt;code&gt;*.pkg&lt;/code&gt; ファイルを額面で信頼されている。離れて重複のチェックから、すべてのエントリが中に見出さ &lt;code&gt;*.pkg&lt;/code&gt; 関係なくファイルシステム上に存在するかどうかの、パスに追加されているファイル。（これは機能です。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac049eee8e098efbf97dcda725fb4ce89501bd33" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ne__&quot;&gt;&lt;code&gt;__ne__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">また、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ne__&quot;&gt; &lt;code&gt;__ne__()&lt;/code&gt; &lt;/a&gt;メソッドを介して特定のPythonの組み込み演算子をサポートします。</target>
        </trans-unit>
        <trans-unit id="b08324cda6eda4c504aa9a823d617b47aa532d2d" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through rich comparison and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">また、豊富な比較と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、Pythonの特定の組み込み演算子をサポートします。</target>
        </trans-unit>
        <trans-unit id="1186ed492c366eaa388b29b3083c0e6d09f9e556" translate="yes" xml:space="preserve">
          <source>It also understands &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, and &lt;code&gt;-Infinity&lt;/code&gt; as their corresponding &lt;code&gt;float&lt;/code&gt; values, which is outside the JSON spec.</source>
          <target state="translated">また、 &lt;code&gt;NaN&lt;/code&gt; 、 &lt;code&gt;Infinity&lt;/code&gt; 、および &lt;code&gt;-Infinity&lt;/code&gt; を、JSON仕様の範囲外の対応する &lt;code&gt;float&lt;/code&gt; 値として認識します。</target>
        </trans-unit>
        <trans-unit id="aec1493a57b4d7fa45bea1b3298210ad9be4bf5b" translate="yes" xml:space="preserve">
          <source>It can also be used to restore the actual files to known working file objects in case they have been overwritten with a broken object. However, the preferred way to do this is to explicitly save the previous stream before replacing it, and restore the saved object.</source>
          <target state="translated">また、壊れたオブジェクトで上書きされた場合に、実際のファイルを既知の作業ファイルオブジェクトに復元することもできます。しかし、これを行うための好ましい方法は、前のストリームを置き換える前に明示的に保存し、保存されたオブジェクトを復元することです。</target>
        </trans-unit>
        <trans-unit id="60f3acc604f0bf942399f638a855b169564bcc7f" translate="yes" xml:space="preserve">
          <source>It defines a &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; abstract base class, along with several concrete implementations (&lt;a href=&quot;#selectors.KqueueSelector&quot;&gt;&lt;code&gt;KqueueSelector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#selectors.EpollSelector&quot;&gt;&lt;code&gt;EpollSelector&lt;/code&gt;&lt;/a&gt;&amp;hellip;), that can be used to wait for I/O readiness notification on multiple file objects. In the following, &amp;ldquo;file object&amp;rdquo; refers to any object with a &lt;code&gt;fileno()&lt;/code&gt; method, or a raw file descriptor. See &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#selectors.BaseSelector&quot;&gt; &lt;code&gt;BaseSelector&lt;/code&gt; &lt;/a&gt;抽象基本クラスと、複数のファイルオブジェクトのI / O準備通知を待機するために使用できるいくつかの具体的な実装（&lt;a href=&quot;#selectors.KqueueSelector&quot;&gt; &lt;code&gt;KqueueSelector&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#selectors.EpollSelector&quot;&gt; &lt;code&gt;EpollSelector&lt;/code&gt; &lt;/a&gt; &amp;hellip;）を定義します。以下では、「ファイルオブジェクト」は、 &lt;code&gt;fileno()&lt;/code&gt; メソッドを持つオブジェクト、または生のファイル記述子を指します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a86490549662868112f136678359ce261e7fbf4a" translate="yes" xml:space="preserve">
          <source>It defines the following items:</source>
          <target state="translated">以下の項目を定義しています。</target>
        </trans-unit>
        <trans-unit id="86cf8e626a8b6c0e4daf5e5c5001af4e595a1aaf" translate="yes" xml:space="preserve">
          <source>It detects the encoding from the presence of a UTF-8 BOM or an encoding cookie as specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 263&lt;/strong&gt;&lt;/a&gt;. If both a BOM and a cookie are present, but disagree, a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; will be raised. Note that if the BOM is found, &lt;code&gt;'utf-8-sig'&lt;/code&gt; will be returned as an encoding.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 263で&lt;/strong&gt;&lt;/a&gt;指定されているように、UTF-8 BOMまたはエンコーディングCookieの存在からエンコーディングを検出します。BOMとCookieの両方が存在するが一致しない場合、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;が発生します。BOMが見つかった場合、 &lt;code&gt;'utf-8-sig'&lt;/code&gt; として'utf-8-sig'が返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9a6d7e8dc33830431ce4274e88f610528d52ec30" translate="yes" xml:space="preserve">
          <source>It extends the existing &lt;em&gt;ustar&lt;/em&gt; format with extra headers for information that cannot be stored otherwise. There are two flavours of pax headers: Extended headers only affect the subsequent file header, global headers are valid for the complete archive and affect all following files. All the data in a pax header is encoded in &lt;em&gt;UTF-8&lt;/em&gt; for portability reasons.</source>
          <target state="translated">これは、既存の&lt;em&gt;ustar&lt;/em&gt;フォーマットを拡張して、他の方法では保存できない情報の追加ヘッダーを追加します。paxヘッダーには2つの種類があります。拡張ヘッダーは後続のファイルヘッダーにのみ影響します。グローバルヘッダーはアーカイブ全体で有効で、後続のすべてのファイルに影響します。移植性の理由から、paxヘッダーのすべてのデータは&lt;em&gt;UTF-8&lt;/em&gt;でエンコードされています。</target>
        </trans-unit>
        <trans-unit id="3ffd7e38afe55390aae7754992e18f89ae1644e1" translate="yes" xml:space="preserve">
          <source>It has no other methods besides the ones inherited from &lt;code&gt;ttk.Widget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttk.Widget&lt;/code&gt; から継承されたメソッド以外にはメソッドはありません。</target>
        </trans-unit>
        <trans-unit id="0951e90496403cdeaa51c98298faafd64552fecb" translate="yes" xml:space="preserve">
          <source>It has one attribute, &lt;code&gt;data&lt;/code&gt;, that can be used to retrieve the Python bytes object stored in it.</source>
          <target state="translated">そこに格納されているPythonバイトオブジェクトを取得するために使用できる1つの属性 &lt;code&gt;data&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="3780db06a7fc7e80db01f0dc24e060618d78221a" translate="yes" xml:space="preserve">
          <source>It has one attribute, &lt;code&gt;data&lt;/code&gt;, which can be used to retrieve the int value of the UID. &lt;code&gt;data&lt;/code&gt; must be in the range &lt;code&gt;0 &amp;lt;= data &amp;lt; 2**64&lt;/code&gt;.</source>
          <target state="translated">これには &lt;code&gt;data&lt;/code&gt; という 1つの属性があり、これを使用してUIDのint値を取得できます。 &lt;code&gt;data&lt;/code&gt; は &lt;code&gt;0 &amp;lt;= data &amp;lt; 2**64&lt;/code&gt; の範囲でなければなりません。</target>
        </trans-unit>
        <trans-unit id="23306eadb9dad4ad03f07be8c0a83f188ab18bb4" translate="yes" xml:space="preserve">
          <source>It is a simplified &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; type, very close to a locked &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、ロックされた&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;に非常に近い、単純化された&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;タイプです。</target>
        </trans-unit>
        <trans-unit id="5ae066ca641a4bc8990133345ec5ed5570fe1167" translate="yes" xml:space="preserve">
          <source>It is advisable to use the &lt;a href=&quot;#nntplib.decode_header&quot;&gt;&lt;code&gt;decode_header()&lt;/code&gt;&lt;/a&gt; function on header values when they may contain non-ASCII characters:</source>
          <target state="translated">ASCII以外の文字が含まれている可能性がある場合は、ヘッダー値に&lt;a href=&quot;#nntplib.decode_header&quot;&gt; &lt;code&gt;decode_header()&lt;/code&gt; &lt;/a&gt;関数を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="753d5be67d0389392a814b65b9ab13072b3bc426" translate="yes" xml:space="preserve">
          <source>It is allowable for many weak references to be constructed for the same object. Callbacks registered for each weak reference will be called from the most recently registered callback to the oldest registered callback.</source>
          <target state="translated">同じオブジェクトに対して多くの弱い参照を構築することができます。各弱参照に登録されたコールバックは、最も最近登録されたコールバックから最も古いコールバックまで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c594fee7fb081acf751161f581d98f6ddeb8a51f" translate="yes" xml:space="preserve">
          <source>It is also legal to pass strings as parameters; these should be keys in &lt;code&gt;sys.modules&lt;/code&gt;. Each associated module will be scanned by &lt;code&gt;unittest.TestLoader.loadTestsFromModule()&lt;/code&gt;. This is usually seen in the following &lt;code&gt;test_main()&lt;/code&gt; function:</source>
          <target state="translated">文字列をパラメータとして渡すこともできます。これらは &lt;code&gt;sys.modules&lt;/code&gt; のキーである必要があります。関連する各モジュールは、 &lt;code&gt;unittest.TestLoader.loadTestsFromModule()&lt;/code&gt; によってスキャンされます。これは通常、次の &lt;code&gt;test_main()&lt;/code&gt; 関数で見られます。</target>
        </trans-unit>
        <trans-unit id="9198580629b375ecb6cd20a7e7294c4ca6e5fd99" translate="yes" xml:space="preserve">
          <source>It is also possible to achieve the same result without using the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; approach.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャの&lt;/a&gt;アプローチを使用せずに同じ結果を達成することも可能です。</target>
        </trans-unit>
        <trans-unit id="a1255f8f5c1717c7558bffa794a4d3503ba88bf1" translate="yes" xml:space="preserve">
          <source>It is also possible to check the production of exceptions, warnings, and log messages using the following methods:</source>
          <target state="translated">また、以下の方法で例外や警告、ログメッセージの生成を確認することも可能です。</target>
        </trans-unit>
        <trans-unit id="bfda1e856e7a541fee3a382fde7564093efe53b2" translate="yes" xml:space="preserve">
          <source>It is also possible to create temporary directories; see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">一時ディレクトリを作成することもできます。&lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="6422bf6800c39267f0e3ec0b62764a762df242b2" translate="yes" xml:space="preserve">
          <source>It is also possible to name the combinations:</source>
          <target state="translated">組み合わせの名前をつけることも可能です。</target>
        </trans-unit>
        <trans-unit id="798d456bd66adc337600fb619c61f4bd509b080b" translate="yes" xml:space="preserve">
          <source>It is also possible to stop all patches which have been started by using &lt;a href=&quot;#unittest.mock.patch.stopall&quot;&gt;&lt;code&gt;patch.stopall()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.stopall&quot;&gt; &lt;code&gt;patch.stopall()&lt;/code&gt; &lt;/a&gt;を使用して、開始されたすべてのパッチを停止することもできます。</target>
        </trans-unit>
        <trans-unit id="ecc27f258f5c82cae432552d9efba051f52376ec" translate="yes" xml:space="preserve">
          <source>It is also possible to use a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; as a file for both reading and writing. For strings &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in text mode. &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in binary mode. Both provide full read-write capabilities with random access.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-likeオブジェクト&lt;/a&gt;を、読み取りと書き込みの両方のファイルとして使用することもできます。文字列の場合、&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;はテキストモードで開かれたファイルのように使用できます。&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;は、バイナリモードで開かれたファイルのように使用できます。どちらもランダムアクセスを備えた完全な読み書き機能を提供します。</target>
        </trans-unit>
        <trans-unit id="58451ee77d03223f613fe1da224a8696f7ed0741" translate="yes" xml:space="preserve">
          <source>It is also possible to use indexes different from 0, but you must know what you&amp;rsquo;re doing, just as in C: You can access or change arbitrary memory locations. Generally you only use this feature if you receive a pointer from a C function, and you &lt;em&gt;know&lt;/em&gt; that the pointer actually points to an array instead of a single item.</source>
          <target state="translated">0以外のインデックスを使用することも可能ですが、Cの場合と同様に、何をしているのかを知っている必要があります。任意のメモリ位置にアクセスまたは変更できます。通常、この機能は、C関数からポインターを受け取り、そのポインターが実際には単一の項目ではなく配列を指していることが&lt;em&gt;わかっ&lt;/em&gt;ている場合にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="7f8863324723aab745603c612674ad8820136acc" translate="yes" xml:space="preserve">
          <source>It is an error for &lt;code&gt;changes&lt;/code&gt; to contain any fields that are defined as having &lt;code&gt;init=False&lt;/code&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in this case.</source>
          <target state="translated">&lt;code&gt;init=False&lt;/code&gt; として定義されているフィールドを &lt;code&gt;changes&lt;/code&gt; に含めると、エラーになります。A &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、この場合に発生します。</target>
        </trans-unit>
        <trans-unit id="c40beea80b192f98b4ef0d6e82a60946f7b0973f" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;em&gt;buffer_callback&lt;/em&gt; is not None and &lt;em&gt;protocol&lt;/em&gt; is None or smaller than 5.</source>
          <target state="translated">&lt;em&gt;buffer_callback&lt;/em&gt;がNoneでなく、&lt;em&gt;プロトコル&lt;/em&gt;がNoneまたは5より小さい場合はエラーになり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="400a0f3110c595609b6c3b419668f8a9a2d9e88b" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;em&gt;themename&lt;/em&gt; already exists. If &lt;em&gt;parent&lt;/em&gt; is specified, the new theme will inherit styles, elements and layouts from the parent theme. If &lt;em&gt;settings&lt;/em&gt; are present they are expected to have the same syntax used for &lt;a href=&quot;#tkinter.ttk.Style.theme_settings&quot;&gt;&lt;code&gt;theme_settings()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;テーマ名が&lt;/em&gt;すでに存在する場合はエラーになります。場合は&lt;em&gt;、親が&lt;/em&gt;指定されている、新しいテーマが親テーマのスタイル、要素やレイアウトを継承します。&lt;em&gt;設定&lt;/em&gt;が存在する場合、&lt;a href=&quot;#tkinter.ttk.Style.theme_settings&quot;&gt; &lt;code&gt;theme_settings()&lt;/code&gt; に&lt;/a&gt;使用されるものと同じ構文を持つことが期待されます。</target>
        </trans-unit>
        <trans-unit id="3cc9474ae763da1597037edc834b029615b066bd" translate="yes" xml:space="preserve">
          <source>It is an error to specify tuples for both &lt;em&gt;times&lt;/em&gt; and &lt;em&gt;ns&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;時間&lt;/em&gt;と&lt;em&gt;nsの&lt;/em&gt;両方にタプルを指定すると、エラーになります。</target>
        </trans-unit>
        <trans-unit id="4b49de4f66d59503ff78e81f00969dd43035654c" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; is a sequence. Items of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; that are not strings referring to existing directories are ignored. Unicode items on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; that cause errors when used as filenames may cause this function to raise an exception (in line with &lt;a href=&quot;os.path#os.path.isdir&quot;&gt;&lt;code&gt;os.path.isdir()&lt;/code&gt;&lt;/a&gt; behavior).</source>
          <target state="translated">&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;はシーケンスであると想定されています。既存のディレクトリを参照する文字列ではない&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; の&lt;/a&gt;項目は無視されます。ファイル名として使用するとエラーが発生する&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; の&lt;/a&gt; Unicodeアイテムにより、この関数で例外が発生する可能性があります（&lt;a href=&quot;os.path#os.path.isdir&quot;&gt; &lt;code&gt;os.path.isdir()&lt;/code&gt; の&lt;/a&gt;動作に合わせて）。</target>
        </trans-unit>
        <trans-unit id="0198f7955aa686bfda71617994f6d44009f39351" translate="yes" xml:space="preserve">
          <source>It is difficult to provide complete flexibility for incremental configuration. For example, because objects such as filters and formatters are anonymous, once a configuration is set up, it is not possible to refer to such anonymous objects when augmenting a configuration.</source>
          <target state="translated">インクリメンタルな設定に完全な柔軟性を持たせることは困難です。例えば、フィルタやフォーマッタのようなオブジェクトは匿名であるため、一度設定を行うと、設定を拡張する際にそのような匿名オブジェクトを参照することができません。</target>
        </trans-unit>
        <trans-unit id="0b8d428b0665acaca4a8a5c4e599c5757fb9e58f" translate="yes" xml:space="preserve">
          <source>It is for historical reasons that &lt;em&gt;dirname&lt;/em&gt; is named as such rather than &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;dirname&lt;/em&gt;が&lt;em&gt;path&lt;/em&gt;ではなく、そのように命名されているのは歴史的な理由によるものです。</target>
        </trans-unit>
        <trans-unit id="8aa1103190ac27a640efe27d8f90def24b585ee7" translate="yes" xml:space="preserve">
          <source>It is generally a bad idea to call &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; in some library routine, since as a side effect it affects the entire program. Saving and restoring it is almost as bad: it is expensive and affects other threads that happen to run before the settings have been restored.</source>
          <target state="translated">副作用としてプログラム全体に影響を与えるため、いくつかのライブラリルーチンで&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;を呼び出すのは一般に悪い考えです。それを保存して復元することは、ほぼ同じくらい悪いことです。コストが高く、設定が復元される前に実行される他のスレッドに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="99fa0df2b3316d6bf82c33997b4364c06d01242a" translate="yes" xml:space="preserve">
          <source>It is generally not very useful to reload built-in or dynamically loaded modules. Reloading &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; and other key modules is not recommended. In many cases extension modules are not designed to be initialized more than once, and may fail in arbitrary ways when reloaded.</source>
          <target state="translated">一般に、組み込みモジュールまたは動的にロードされるモジュールを再ロードすることはあまり役に立ちません。&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;およびその他の主要なモジュールをリロードすることはお勧めしません。多くの場合、拡張モジュールは複数回初期化されるようには設計されておらず、再ロード時に任意の方法で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="fb0ca349a42e3b12e5d41231c5073aad2d937d17" translate="yes" xml:space="preserve">
          <source>It is illegal to move an item under one of its descendants. If &lt;em&gt;index&lt;/em&gt; is less than or equal to zero, &lt;em&gt;item&lt;/em&gt; is moved to the beginning; if greater than or equal to the number of children, it is moved to the end. If &lt;em&gt;item&lt;/em&gt; was detached it is reattached.</source>
          <target state="translated">子孫の下にアイテムを移動することは違法です。&lt;em&gt;インデックス&lt;/em&gt;がゼロ以下の場合、&lt;em&gt;アイテム&lt;/em&gt;は先頭に移動します。子の数以上の場合は、最後に移動します。場合は&lt;em&gt;アイテムが&lt;/em&gt;切り離されたことを再付着されます。</target>
        </trans-unit>
        <trans-unit id="95714223e048e09765010a9f06704454985fe259" translate="yes" xml:space="preserve">
          <source>It is important to ensure that &lt;em&gt;func&lt;/em&gt;, &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; do not own any references to &lt;em&gt;obj&lt;/em&gt;, either directly or indirectly, since otherwise &lt;em&gt;obj&lt;/em&gt; will never be garbage collected. In particular, &lt;em&gt;func&lt;/em&gt; should not be a bound method of &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt;、&lt;em&gt;args&lt;/em&gt;、および&lt;em&gt;kwargs&lt;/em&gt;が直接または間接的に&lt;em&gt;obj&lt;/em&gt;への参照を所有しないようにすることが重要です。それ以外の場合、&lt;em&gt;obj&lt;/em&gt;はガベージコレクションされません。特に、&lt;em&gt;func&lt;/em&gt;は&lt;em&gt;objの&lt;/em&gt;バインドされたメソッドであってはなりません。</target>
        </trans-unit>
        <trans-unit id="cb8f43a85dd413c6cde8de7ffa05ec877b1e553b" translate="yes" xml:space="preserve">
          <source>It is important to note that modules in the &lt;a href=&quot;#module-xml&quot;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt; package require that there be at least one SAX-compliant XML parser available. The Expat parser is included with Python, so the &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module will always be available.</source>
          <target state="translated">&lt;a href=&quot;#module-xml&quot;&gt; &lt;code&gt;xml&lt;/code&gt; &lt;/a&gt;パッケージのモジュールでは、少なくとも1つのSAX準拠のXMLパーサーが使用可能である必要があることに注意することが重要です。ExpatパーサーはPythonに含まれているため、&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;モジュールは常に使用可能です。</target>
        </trans-unit>
        <trans-unit id="95c82506febe72f22188b7f00df4e1ec93e22d7a" translate="yes" xml:space="preserve">
          <source>It is important to note that most regular expression operations are available as module-level functions and methods on &lt;a href=&quot;#re-objects&quot;&gt;compiled regular expressions&lt;/a&gt;. The functions are shortcuts that don&amp;rsquo;t require you to compile a regex object first, but miss some fine-tuning parameters.</source>
          <target state="translated">ほとんどの正規表現操作は、&lt;a href=&quot;#re-objects&quot;&gt;コンパイルされた正規表現で&lt;/a&gt;モジュールレベルの関数とメソッドとして使用できることに注意してください。関数はショートカットであり、最初に正規表現オブジェクトをコンパイルする必要はありませんが、いくつかの微調整パラメーターがありません。</target>
        </trans-unit>
        <trans-unit id="624e6ff33f7bfbc731179c57fb95772ca83eb019" translate="yes" xml:space="preserve">
          <source>It is limited to 100 frames and 100 threads.</source>
          <target state="translated">100コマ、100スレッドに限定されています。</target>
        </trans-unit>
        <trans-unit id="4093ccc8e1fc34ca326724ab26e7be0883220a09" translate="yes" xml:space="preserve">
          <source>It is meant to be used for functions that may accept any kind of string without allowing different kinds of strings to mix. For example:</source>
          <target state="translated">これは、異なる種類の文字列を混在させることなく、任意の種類の文字列を受け入れることができる関数に使用することを意味します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0cb324071c8468030d58c64739521f9f962b39e8" translate="yes" xml:space="preserve">
          <source>It is not necessary to call &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; to change a key. Registry changes are flushed to disk by the registry using its lazy flusher. Registry changes are also flushed to disk at system shutdown. Unlike &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; method returns only when all the data has been written to the registry. An application should only call &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; if it requires absolute certainty that registry changes are on disk.</source>
          <target state="translated">キーを変更するために&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;を呼び出す必要はありません。レジストリの変更は、レイジーフラッシャーを使用してレジストリによってディスクにフラッシュされます。レジストリの変更は、システムのシャットダウン時にもディスクにフラッシュされます。&lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;メソッドは、すべてのデータがレジストリに書き込まれた場合にのみ戻ります。レジストリの変更がディスク上にあることが確実に必要な場合にのみ、アプリケーションは&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="cda47d8387a594b66517d4092e4e115ad892fbe9" translate="yes" xml:space="preserve">
          <source>It is not possible to change the encoding or newline if some data has already been read from the stream. On the other hand, changing encoding after write is possible.</source>
          <target state="translated">すでにストリームからデータが読み込まれている場合は、エンコーディングや改行を変更することはできません。一方、書き込み後にエンコーディングを変更することは可能です。</target>
        </trans-unit>
        <trans-unit id="d740e3156e0552c31a2af22e49ad436d6f79d68d" translate="yes" xml:space="preserve">
          <source>It is not possible to create truly immutable Python objects. However, by passing &lt;code&gt;frozen=True&lt;/code&gt; to the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator you can emulate immutability. In that case, dataclasses will add &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; methods to the class. These methods will raise a &lt;a href=&quot;#dataclasses.FrozenInstanceError&quot;&gt;&lt;code&gt;FrozenInstanceError&lt;/code&gt;&lt;/a&gt; when invoked.</source>
          <target state="translated">真に不変のPythonオブジェクトを作成することはできません。ただし、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;frozen=True&lt;/code&gt; をdataclass（）デコレーターに渡すことで、不変性をエミュレートできます。その場合、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt;メソッドをクラスに追加します。これらのメソッドを呼び出すと、&lt;a href=&quot;#dataclasses.FrozenInstanceError&quot;&gt; &lt;code&gt;FrozenInstanceError&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="55c8b8a4e69ed2aef84c5a02c66e3da2e510e6b7" translate="yes" xml:space="preserve">
          <source>It is not possible to interrupt the &lt;code&gt;acquire()&lt;/code&gt; method on a lock &amp;mdash; the &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception will happen after the lock has been acquired.</source>
          <target state="translated">ロックの &lt;code&gt;acquire()&lt;/code&gt; メソッドを中断することはできません&amp;mdash; ロックが取得された後で、&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="24ff4ffa82b2b892ee254ff767fd50df824c9ec4" translate="yes" xml:space="preserve">
          <source>It is not recommended to instantiate &lt;em&gt;StreamReader&lt;/em&gt; objects directly; use &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;em&gt;StreamReader&lt;/em&gt;オブジェクトを直接インスタンス化することはお勧めしません。使用&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;の代わりに。</target>
        </trans-unit>
        <trans-unit id="9c8eb1dc59babd5bb45a6542412c6c2dbef60bec" translate="yes" xml:space="preserve">
          <source>It is not recommended to instantiate &lt;em&gt;StreamWriter&lt;/em&gt; objects directly; use &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;em&gt;StreamWriter&lt;/em&gt;オブジェクトを直接インスタンス化することはお勧めしません。使用&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;の代わりに。</target>
        </trans-unit>
        <trans-unit id="f7c86d9042354a4a12010ffbf2e6c79a46e63619" translate="yes" xml:space="preserve">
          <source>It is occasionally desirable to catch exceptions from an &lt;code&gt;__enter__&lt;/code&gt; method implementation, &lt;em&gt;without&lt;/em&gt; inadvertently catching exceptions from the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement body or the context manager&amp;rsquo;s &lt;code&gt;__exit__&lt;/code&gt; method. By using &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; the steps in the context management protocol can be separated slightly in order to allow this:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメント本体またはコンテキストマネージャーの &lt;code&gt;__exit__&lt;/code&gt; メソッドからの例外&lt;em&gt;を&lt;/em&gt;誤ってキャッチする&lt;em&gt;ことなく&lt;/em&gt;、 &lt;code&gt;__enter__&lt;/code&gt; メソッド実装からの例外をキャッチすることが望ましい場合があります。&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;を使用することで、これを可能にするために、コンテキスト管理プロトコルのステップをわずかに分離できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17abe925d75df3e6434e095da340d7b3d585efbb" translate="yes" xml:space="preserve">
          <source>It is possible (but not likely) that the parser stops parsing with a successful outcome before reaching the end of the source; in this case, trailing symbols may be ignored instead of causing an error. For example, a backslash followed by two newlines may be followed by arbitrary garbage. This will be fixed once the API for the parser is better.</source>
          <target state="translated">ソースの最後に到達する前に解析が成功した場合、パーサが解析を停止することがあります(可能性は低いですが)。例えば、バックスラッシュの後に 2 つの改行が続くと、任意のガベージが続くことがあります。これはパーサーのAPIが改善されれば修正されます。</target>
        </trans-unit>
        <trans-unit id="c6d4dc91e3e444d1207eacfb1b8c9b7d64f669d0" translate="yes" xml:space="preserve">
          <source>It is possible that you want to use a different prefix for your tests. You can inform the patchers of the different prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;:</source>
          <target state="translated">テストに別の接頭辞を使用したい場合があります。 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; を設定することで、異なる接頭辞をパッチャーに通知できます。</target>
        </trans-unit>
        <trans-unit id="b78bc02a5d38d5ce034759672aa988ab58493d7c" translate="yes" xml:space="preserve">
          <source>It is possible to assign a callable Python object that is not a ctypes type, in this case the function is assumed to return a C &lt;code&gt;int&lt;/code&gt;, and the callable will be called with this integer, allowing further processing or error checking. Using this is deprecated, for more flexible post processing or error checking use a ctypes data type as &lt;a href=&quot;#ctypes._FuncPtr.restype&quot;&gt;&lt;code&gt;restype&lt;/code&gt;&lt;/a&gt; and assign a callable to the &lt;a href=&quot;#ctypes._FuncPtr.errcheck&quot;&gt;&lt;code&gt;errcheck&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">ctypes型ではない呼び出し可能なPythonオブジェクトを割り当てることが可能です。この場合、関数はCの &lt;code&gt;int&lt;/code&gt; を返すと想定され、呼び出し可能なオブジェクトはこの整数で呼び出され、さらなる処理またはエラーチェックが可能になります。これを使用することは非推奨です。より柔軟な後処理またはエラーチェックのために、ctypesデータ型を&lt;a href=&quot;#ctypes._FuncPtr.restype&quot;&gt; &lt;code&gt;restype&lt;/code&gt; &lt;/a&gt;として使用し、呼び出し可能オブジェクトを&lt;a href=&quot;#ctypes._FuncPtr.errcheck&quot;&gt; &lt;code&gt;errcheck&lt;/code&gt; &lt;/a&gt;属性に割り当てます。</target>
        </trans-unit>
        <trans-unit id="a0369df82e65498d9a61cbbea72fb5715a7cfcd6" translate="yes" xml:space="preserve">
          <source>It is possible to construct malicious pickle data which will &lt;strong&gt;execute arbitrary code during unpickling&lt;/strong&gt;. Never unpickle data that could have come from an untrusted source, or that could have been tampered with.</source>
          <target state="translated">&lt;strong&gt;unpickle中に任意のコード&lt;/strong&gt;を&lt;strong&gt;実行する&lt;/strong&gt;悪意のあるpickleデータを構築することが可能です。信頼できないソースからのデータや改ざんされた可能性のあるデータを抽出しないでください。</target>
        </trans-unit>
        <trans-unit id="6ffefb08180256f54248ce087946347d3dc7ebe6" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter when loading a database with a sufficiently large/complex entry due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">PythonのASTコンパイラのスタック深度の制限により、十分に大きい/複雑なエントリを持つデータベースをロードすると、Pythonインタープリタがクラッシュする可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e9b153eb1d2d572d629baf0a1dcd8a08f67d846" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter with a sufficiently large/complex string due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">PythonのASTコンパイラのスタック深度の制限により、Pythonインタプリタが十分に大きく複雑な文字列でクラッシュする可能性があります。</target>
        </trans-unit>
        <trans-unit id="667abe8e68a549284d45ff70fd062fc2cf5fac92" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter with a sufficiently large/complex string when compiling to an AST object due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">PythonのASTコンパイラのスタック深度の制限により、ASTオブジェクトにコンパイルするときに、十分に大きい/複雑な文字列でPythonインタープリタをクラッシュさせる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3f5b20068a1b037beccc1359b62759b16ab15b78" translate="yes" xml:space="preserve">
          <source>It is possible to create shared objects using shared memory which can be inherited by child processes.</source>
          <target state="translated">子プロセスが継承できる共有メモリを使って、共有オブジェクトを作成することができます。</target>
        </trans-unit>
        <trans-unit id="9c5f47167a007557bb807d93cb531c2ebd09d5d5" translate="yes" xml:space="preserve">
          <source>It is possible to create structures and unions containing bit fields. Bit fields are only possible for integer fields, the bit width is specified as the third item in the &lt;code&gt;_fields_&lt;/code&gt; tuples:</source>
          <target state="translated">ビットフィールドを含む構造体と共用体を作成することが可能です。ビットフィールドは整数フィールドでのみ使用でき、ビット幅は &lt;code&gt;_fields_&lt;/code&gt; タプルの3番目の項目として指定されます。</target>
        </trans-unit>
        <trans-unit id="db8a275af694f0dd377aeb7a61522ec616a0f705" translate="yes" xml:space="preserve">
          <source>It is possible to declare the return type of a callable without specifying the call signature by substituting a literal ellipsis for the list of arguments in the type hint: &lt;code&gt;Callable[..., ReturnType]&lt;/code&gt;.</source>
          <target state="translated">型ヒントの引数のリストをリテラルの省略記号で置き換えることにより、呼び出しシグネチャを指定せずに呼び出し可能オブジェクトの戻り型を宣言することができます： &lt;code&gt;Callable[..., ReturnType]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66dbfac9c9ecbf0f3ba234b858bf45197be29989" translate="yes" xml:space="preserve">
          <source>It is possible to define sub-subclasses of structure types, they inherit the fields of the base class plus the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; defined in the sub-subclass, if any.</source>
          <target state="translated">構造タイプのサブサブクラスを定義することは可能であり、それらは基本クラスのフィールドと、サブサブクラスで定義された&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; (存在&lt;/a&gt;する場合）を継承します。</target>
        </trans-unit>
        <trans-unit id="52e02a5e8d810a438d07f3c505bb28740bdb60d9" translate="yes" xml:space="preserve">
          <source>It is possible to define sub-subclasses of structures, they inherit the fields of the base class. If the subclass definition has a separate &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; variable, the fields specified in this are appended to the fields of the base class.</source>
          <target state="translated">構造のサブサブクラスを定義することが可能であり、それらは基本クラスのフィールドを継承します。サブクラス定義に別個の&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;変数がある場合、これで指定されたフィールドは、基本クラスのフィールドに追加されます。</target>
        </trans-unit>
        <trans-unit id="479dec54822844d5952dff407e0c75c4abf7dfbc" translate="yes" xml:space="preserve">
          <source>It is possible to define the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable &lt;em&gt;after&lt;/em&gt; the class statement that defines the Structure subclass, this allows creating data types that directly or indirectly reference themselves:</source>
          <target state="translated">構造サブクラスを定義するクラスステートメントの&lt;em&gt;後に&lt;/em&gt;&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;クラス変数を定義することが可能です。これにより、直接または間接的に自分自身を参照するデータ型を作成できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41dc430c996cb5dba1d5b954f315a11cad50c234" translate="yes" xml:space="preserve">
          <source>It is possible to modify how Enum members are pickled/unpickled by defining &lt;a href=&quot;pickle#object.__reduce_ex__&quot;&gt;&lt;code&gt;__reduce_ex__()&lt;/code&gt;&lt;/a&gt; in the enumeration class.</source>
          <target state="translated">列挙型クラスで&lt;a href=&quot;pickle#object.__reduce_ex__&quot;&gt; &lt;code&gt;__reduce_ex__()&lt;/code&gt; &lt;/a&gt;定義することにより、Enumメンバーがピクルされる/ピクルされない方法を変更できます。</target>
        </trans-unit>
        <trans-unit id="5c6a93b23d9d0ef75736ca0a792ff0ce4b6aa42c" translate="yes" xml:space="preserve">
          <source>It is possible to provide a setup statement that is executed only once at the beginning:</source>
          <target state="translated">最初に一度だけ実行される設定文を提供することが可能です。</target>
        </trans-unit>
        <trans-unit id="4aaa2207bb2559e1c452bea74e3b02c4226e1a08" translate="yes" xml:space="preserve">
          <source>It is possible to run a manager server on one machine and have clients use it from other machines (assuming that the firewalls involved allow it).</source>
          <target state="translated">1台のマシンでマネージャーサーバーを実行し、他のマシンからクライアントに使用させることが可能です(関係するファイアウォールが許可していることを前提としています)。</target>
        </trans-unit>
        <trans-unit id="57b2132f9f4ecae5672296c54e7165dcd43d470b" translate="yes" xml:space="preserve">
          <source>It is possible to specify the required argument types of functions exported from DLLs by setting the &lt;code&gt;argtypes&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;argtypes&lt;/code&gt; 属性を設定することにより、DLLからエクスポートされた関数の必須の引数タイプを指定できます。</target>
        </trans-unit>
        <trans-unit id="870efee18a65f0470db8320acfa65e0397dea3dc" translate="yes" xml:space="preserve">
          <source>It is preferred that tests that use the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module follow a few guidelines. One is to name the test module by starting it with &lt;code&gt;test_&lt;/code&gt; and end it with the name of the module being tested. The test methods in the test module should start with &lt;code&gt;test_&lt;/code&gt; and end with a description of what the method is testing. This is needed so that the methods are recognized by the test driver as test methods. Also, no documentation string for the method should be included. A comment (such as &lt;code&gt;# Tests function returns only True or False&lt;/code&gt;) should be used to provide documentation for test methods. This is done because documentation strings get printed out if they exist and thus what test is being run is not stated.</source>
          <target state="translated">&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;モジュールを使用するテストは、いくつかのガイドラインに従うことが推奨されます。 1つは、 &lt;code&gt;test_&lt;/code&gt; で開始してテストモジュールに名前を付け、テストするモジュールの名前で終了することです。テストモジュールのテストメソッドは、 &lt;code&gt;test_&lt;/code&gt; で始まり、メソッドがテストする対象の説明で終わる必要があります。これは、メソッドがテストドライバーによってテストメソッドとして認識されるために必要です。また、メソッドの説明文字列は含めないでください。コメント（ &lt;code&gt;# Tests function returns only True or False&lt;/code&gt; など）を使用して、テストメソッドのドキュメントを提供する必要があります。これが行われるのは、ドキュメント文字列が存在する場合はそれが出力され、実行されているテストが記述されていないためです。</target>
        </trans-unit>
        <trans-unit id="4437dd782d3aa5f4d33ce55912438ab2de9ddb49" translate="yes" xml:space="preserve">
          <source>It is probably best to stick to using queues or pipes for communication between processes rather than using the lower level synchronization primitives.</source>
          <target state="translated">低レベルの同期プリミティブを使うよりも、プロセス間の通信にキューやパイプを使う方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="3513dd531e92db2dd18418ab9200aa8630263c69" translate="yes" xml:space="preserve">
          <source>It is recommended that you use TestCase implementations to group tests together according to the features they test. &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; provides a mechanism for this: the &lt;em&gt;test suite&lt;/em&gt;, represented by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; class. In most cases, calling &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; will do the right thing and collect all the module&amp;rsquo;s test cases for you and execute them.</source>
          <target state="translated">TestCase実装を使用して、テストする機能に従ってテストをグループ化することをお勧めします。&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;は、このためのメカニズムを提供します：&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;クラスによって表される&lt;em&gt;テストスイート&lt;/em&gt;。ほとんどの場合、&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;を呼び出すと正しい動作が行われ、モジュールのすべてのテストケースが収集されて実行されます。</target>
        </trans-unit>
        <trans-unit id="7ee962c8bcd7baffe9ba130a3118c335c829f4d0" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt;&lt;code&gt;addCleanup()&lt;/code&gt;&lt;/a&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; then you can call &lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt;&lt;code&gt;doCleanups()&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt; &lt;code&gt;addCleanup()&lt;/code&gt; &lt;/a&gt;によって追加されたすべてのクリーンアップ関数を呼び出す必要があります。&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;前&lt;/em&gt;に呼び出すクリーンアップ関数が必要な場合は、&lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt; &lt;code&gt;doCleanups()&lt;/code&gt; を&lt;/a&gt;自分で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="66da881a51744abc2d365ae7a19e8866de644b04" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;code&gt;addCleanupClass()&lt;/code&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; then you can call &lt;code&gt;doCleanupsClass()&lt;/code&gt; yourself.</source>
          <target state="translated">&lt;code&gt;addCleanupClass()&lt;/code&gt; によって追加されたすべてのクリーンアップ関数の呼び出しを担当します。&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;前&lt;/em&gt;にクリーンアップ関数を呼び出す必要がある場合は、 &lt;code&gt;doCleanupsClass()&lt;/code&gt; を自分で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="44bfa96d5424e117886453b18001094b089f64bd" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;code&gt;addCleanupModule()&lt;/code&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;code&gt;tearDownModule()&lt;/code&gt; then you can call &lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt;&lt;code&gt;doModuleCleanups()&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="translated">&lt;code&gt;addCleanupModule()&lt;/code&gt; によって追加されたすべてのクリーンアップ関数の呼び出しを担当します。 &lt;code&gt;tearDownModule()&lt;/code&gt; の&lt;em&gt;前&lt;/em&gt;にクリーンアップ関数を呼び出す必要がある場合は、&lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt; &lt;code&gt;doModuleCleanups()&lt;/code&gt; を&lt;/a&gt;自分で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="40d076e54c14795bf1009ae955624fb9ee075980" translate="yes" xml:space="preserve">
          <source>It is set for &lt;code&gt;SELECT&lt;/code&gt; statements without any matching rows as well.</source>
          <target state="translated">一致する行がない &lt;code&gt;SELECT&lt;/code&gt; ステートメントにも設定されます。</target>
        </trans-unit>
        <trans-unit id="e4892c14dd8e03e95f7b9a46c2b927e82c3de81e" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t change the bytecode counter nor raise an exception. Used for implementing &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt;に似ていますが、バイトコードカウンターを変更したり、例外を発生させたりしません。&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ブロックで&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;を実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="42d9754d1dda336bfe25a9c6e63c2992d8307a7e" translate="yes" xml:space="preserve">
          <source>It is straightforward to create an ordered dictionary variant that remembers the order the keys were &lt;em&gt;last&lt;/em&gt; inserted. If a new entry overwrites an existing entry, the original insertion position is changed and moved to the end:</source>
          <target state="translated">キーが&lt;em&gt;最後に&lt;/em&gt;挿入された順序を記憶する順序付けられた辞書のバリアントを作成することは簡単です。新しいエントリが既存のエントリを上書きする場合、元の挿入位置が変更され、末尾に移動します。</target>
        </trans-unit>
        <trans-unit id="b290678be018032e40bcd30baa36d13bcef66f17" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;シェルインジェクションの&lt;/a&gt;脆弱性を回避するために、すべての空白と特殊文字が適切に引用符で囲まれるようにするのは、アプリケーションの責任です。&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;関数は、適切にシェルコマンドを構築するために使用されようとしている文字列に空白や特殊文字をエスケープするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="83308bc4ef3c9f055207277d114b19f86e753316" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special shell characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;シェルインジェクションの&lt;/a&gt;脆弱性を回避するために、すべての空白と特殊文字が適切に引用符で囲まれるようにするのは、アプリケーションの責任です。&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;関数は、適切にシェルコマンドを構築するために使用されようとしている文字列内の空白や特殊なシェル文字をエスケープするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ba77524bde6cf6c11d179f96eb65e17908025854" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;Ellipsis&lt;/code&gt; or &lt;code&gt;...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ellipsis&lt;/code&gt; または &lt;code&gt;...&lt;/code&gt; と書かれています。</target>
        </trans-unit>
        <trans-unit id="5c82f78122d7edace8ca573121d93f7a6333cafc" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; と書かれています。</target>
        </trans-unit>
        <trans-unit id="6a8ce0b24fe78f15c89a4a9c4becf84652288522" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;NotImplemented&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NotImplemented&lt;/code&gt; と書かれています。</target>
        </trans-unit>
        <trans-unit id="841555ab84a821d8592d3ba16982eb976c179de0" translate="yes" xml:space="preserve">
          <source>It makes it clear that the &lt;code&gt;cm&lt;/code&gt; applies to the whole function, rather than just a piece of it (and saving an indentation level is nice, too).</source>
          <target state="translated">これは、 &lt;code&gt;cm&lt;/code&gt; が関数の一部ではなく関数全体に適用されることを明確にします（インデントレベルを保存することもいいです）。</target>
        </trans-unit>
        <trans-unit id="cceaba8129fdd9cb6ff7d523e835d1be2a3900bb" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;code&gt;SIGFPE&lt;/code&gt; or &lt;code&gt;SIGSEGV&lt;/code&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">Cコードの無効な操作が原因で発生する &lt;code&gt;SIGFPE&lt;/code&gt; や &lt;code&gt;SIGSEGV&lt;/code&gt; などの同期エラーをキャッチしても意味がありません。PythonはシグナルハンドラーからCコードに戻ります。Cコードは同じシグナルを再度発生させる可能性が高く、明らかにPythonがハングします。Python 3.3以降では、&lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt;モジュールを使用して同期エラーを報告できます。</target>
        </trans-unit>
        <trans-unit id="38e76705e1c36e7060b372d7e192caca143da51c" translate="yes" xml:space="preserve">
          <source>It may also be useful to have an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; assign attributes to an already existing object, rather than a new &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object. This can be achieved by specifying the &lt;code&gt;namespace=&lt;/code&gt; keyword argument:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;で、新しい&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;オブジェクトではなく、既存のオブジェクトに属性を割り当てることも役立ちます。これは、 &lt;code&gt;namespace=&lt;/code&gt; キーワード引数を指定することで実現できます。</target>
        </trans-unit>
        <trans-unit id="fba1d56f7a7c046d3fc4bbe63e3336e206c6db2d" translate="yes" xml:space="preserve">
          <source>It may be preferable to simply create the barrier with a sensible &lt;em&gt;timeout&lt;/em&gt; value to automatically guard against one of the threads going awry.</source>
          <target state="translated">スレッドの1つが失敗するのを自動的に防ぐために、適切な&lt;em&gt;タイムアウト&lt;/em&gt;値を持つバリアを単に作成することが望ましい場合があります。</target>
        </trans-unit>
        <trans-unit id="ed6a077b4756775b9b29b2ea1e03ac9d700dfd8e" translate="yes" xml:space="preserve">
          <source>It must be called at most once per thread object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate thread of control.</source>
          <target state="translated">スレッドオブジェクトごとに最大で1回呼び出す必要があります。オブジェクトの&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが別の制御スレッドで呼び出されるようにします。</target>
        </trans-unit>
        <trans-unit id="daad8dfada880cb31549425a5ec3431b9222657b" translate="yes" xml:space="preserve">
          <source>It returns bytes, encoded using the &lt;a href=&quot;token#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; token, which is the first token sequence output by &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;. If there is no encoding token in the input, it returns a str instead.</source>
          <target state="translated">これは、&lt;a href=&quot;token#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt;トークンを使用してエンコードされたバイトを返します。これは、&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;によって出力される最初のトークンシーケンスです。入力にエンコーディングトークンがない場合は、代わりにstrを返します。</target>
        </trans-unit>
        <trans-unit id="a8e3c74f6ede201d039fbecf6218111d0e334740" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">すべてのジャンプが許可されるわけではないことに注意してください。たとえば、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;ループの途中や、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;節の外にジャンプすることはできません。</target>
        </trans-unit>
        <trans-unit id="d00162c40ad44bcc91c01b39dbf4174206720406" translate="yes" xml:space="preserve">
          <source>It should not be used to indicate that an operator or method is not meant to be supported at all &amp;ndash; in that case either leave the operator / method undefined or, if a subclass, set it to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">演算子またはメソッドがまったくサポートされていないことを示すために使用しないでください。その場合、演算子/メソッドを未定義のままにするか、サブクラスの場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;に設定します。</target>
        </trans-unit>
        <trans-unit id="7ded5b6e9599dd1f5438c1647424ab89dfd2b577" translate="yes" xml:space="preserve">
          <source>It should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="726e6dfbe6b42488d80277b74ab1981ea0eb48c8" translate="yes" xml:space="preserve">
          <source>It starts by constructing up to four directories from a head and a tail part. For the head part, it uses &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt;; empty heads are skipped. For the tail part, it uses the empty string and then &lt;code&gt;lib/site-packages&lt;/code&gt; (on Windows) or &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; (on Unix and Macintosh). For each of the distinct head-tail combinations, it sees if it refers to an existing directory, and if so, adds it to &lt;code&gt;sys.path&lt;/code&gt; and also inspects the newly added path for configuration files.</source>
          <target state="translated">最初に、先頭と末尾の部分から最大4つのディレクトリを作成します。先頭部分には、 &lt;code&gt;sys.prefix&lt;/code&gt; と &lt;code&gt;sys.exec_prefix&lt;/code&gt; を使用します。空のヘッドはスキップされます。末尾部分では、空の文字列を使用し、次に &lt;code&gt;lib/site-packages&lt;/code&gt; （Windowsの場合）または &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; （UnixおよびMacintoshの場合）を使用します。個別のヘッドテールの組み合わせごとに、既存のディレクトリを参照しているかどうかを確認し、参照している場合はそれを &lt;code&gt;sys.path&lt;/code&gt; に追加し、新しく追加されたパスで構成ファイルを調べます。</target>
        </trans-unit>
        <trans-unit id="60e34e8fb6e7795d3b1478935c49f2271750a6ed" translate="yes" xml:space="preserve">
          <source>It supports mapping access by column name and index, iteration, representation, equality testing and &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">列名とインデックス、反復、表現、等価テスト、および&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;によるマッピングアクセスをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8ef92e73f369396214e54307628eb69b792a4bbe" translate="yes" xml:space="preserve">
          <source>It tries to keep the merits of the old turtle module and to be (nearly) 100% compatible with it. This means in the first place to enable the learning programmer to use all the commands, classes and methods interactively when using the module from within IDLE run with the &lt;code&gt;-n&lt;/code&gt; switch.</source>
          <target state="translated">古いturtleモジュールのメリットを維持し、（ほぼ）100％互換性があるようにします。これは、そもそも、IDLE内から &lt;code&gt;-n&lt;/code&gt; スイッチを指定して実行するモジュールを使用するときに、学習プログラマーがすべてのコマンド、クラス、およびメソッドをインタラクティブに使用できるようにすることを意味します。</target>
        </trans-unit>
        <trans-unit id="5596437c51c08dd529f0316d43b2b71c787f8abe" translate="yes" xml:space="preserve">
          <source>It uses core algorithm from &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt; cipher designed by &lt;em&gt;Daniel J. Bernstein&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Daniel J. Bernsteinが&lt;/em&gt;設計した&lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt;暗号のコアアルゴリズムを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3aba2968f744adcc41a20aa7e792d5ccd239a3f" translate="yes" xml:space="preserve">
          <source>It will also ignore the module name used in Python 3 doctest reports. Hence both of these variations will work with the flag specified, regardless of whether the test is run under Python 2.7 or Python 3.2 (or later versions):</source>
          <target state="translated">また、Python 3のdoctestレポートで使用されるモジュール名も無視されます。Python 2.7、Python 3.2 (またはそれ以降のバージョン)のどちらでテストが実行されても、これらのバリエーションは指定されたフラグで動作します。</target>
        </trans-unit>
        <trans-unit id="66a19358efe30907a9def33ebebbf43009608227" translate="yes" xml:space="preserve">
          <source>It will be called to process server continuation responses; the &lt;em&gt;response&lt;/em&gt; argument it is passed will be &lt;code&gt;bytes&lt;/code&gt;. It should return &lt;code&gt;bytes&lt;/code&gt;&lt;em&gt;data&lt;/em&gt; that will be base64 encoded and sent to the server. It should return &lt;code&gt;None&lt;/code&gt; if the client abort response &lt;code&gt;*&lt;/code&gt; should be sent instead.</source>
          <target state="translated">サーバー継続応答を処理するために呼び出されます。&lt;em&gt;応答&lt;/em&gt;それが渡された引数になります &lt;code&gt;bytes&lt;/code&gt; 。これは、base64でエンコードされてサーバーに送信される &lt;code&gt;bytes&lt;/code&gt; &lt;em&gt;データ&lt;/em&gt;を返す必要があります。代わりにクライアントのアボート応答 &lt;code&gt;*&lt;/code&gt; を送信する必要がある場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6b1ff9842d9447462c9c388a1d83d9a69c4059c5" translate="yes" xml:space="preserve">
          <source>It will call readline a maximum of twice, and return the encoding used (as a string) and a list of any lines (not decoded from bytes) it has read in.</source>
          <target state="translated">最大2回まで readline を呼び出し、使用したエンコーディング (文字列)と、読み込んだ行 (バイトからデコードされていない行)のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e412de0ab51fcff0e7d659b968642619518d0a22" translate="yes" xml:space="preserve">
          <source>It works reliably even when the asyncio event loop is run in a non-main OS thread.</source>
          <target state="translated">メインOS以外のスレッドでasyncioイベントループを実行した場合でも確実に動作します。</target>
        </trans-unit>
        <trans-unit id="318fb7d25f2176c7734d91b6446e33df1e3f8f6a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to roll your own skipping decorators by making a decorator that calls &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt; on the test when it wants it to be skipped. This decorator skips the test unless the passed object has a certain attribute:</source>
          <target state="translated">&lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;したいときにテストでskip（）を呼び出すデコレーターを作成することで、独自のスキップデコレーターをロールするのは簡単です。このデコレータは、渡されたオブジェクトに特定の属性がない限り、テストをスキップします。</target>
        </trans-unit>
        <trans-unit id="cf33e52507dbef8f4d67e44c287b62148de7d34c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to parse empty strings, even if quoted.</source>
          <target state="translated">引用符で囲まれている場合でも、空の文字列を解析することはできません。</target>
        </trans-unit>
        <trans-unit id="e071ef257a84829dddd1b2021f2e352991af9cff" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to loop over every key in the database using this method and the &lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt;&lt;code&gt;nextkey()&lt;/code&gt;&lt;/a&gt; method. The traversal is ordered by &lt;code&gt;gdbm&lt;/code&gt;&amp;rsquo;s internal hash values, and won&amp;rsquo;t be sorted by the key values. This method returns the starting key.</source>
          <target state="translated">このメソッドと&lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt; &lt;code&gt;nextkey()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、データベース内のすべてのキーをループすることができます。トラバーサルは &lt;code&gt;gdbm&lt;/code&gt; の内部ハッシュ値によって順序付けされ、キー値によってソートされません。このメソッドは開始キーを返します。</target>
        </trans-unit>
        <trans-unit id="79cf85d9f5bddaece698e10c86a31d6561698206" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to calculate mean and standard deviation from the result vector and report these. However, this is not very useful. In a typical case, the lowest value gives a lower bound for how fast your machine can run the given code snippet; higher values in the result vector are typically not caused by variability in Python&amp;rsquo;s speed, but by other processes interfering with your timing accuracy. So the &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; of the result is probably the only number you should be interested in. After that, you should look at the entire vector and apply common sense rather than statistics.</source>
          <target state="translated">結果ベクトルから平均と標準偏差を計算して報告するのは魅力的です。ただし、これはあまり役に立ちません。典型的なケースでは、最低値は、マシンが特定のコードスニペットを実行できる速度の下限を示します。結果ベクトルの値が高くなるのは、通常、Pythonの速度の変動が原因ではなく、タイミングの精度を妨げている他のプロセスが原因です。したがって、結果の&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;がおそらく関心のある唯一の数値です。その後、ベクトル全体を調べ、統計ではなく常識を適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f0b5c2cece26ef74815cda706410d529a21bd417" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s very helpful to use this feature during script development. The reports produced by &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; provide information that can save you a lot of time in tracking down bugs. You can always remove the &lt;code&gt;cgitb&lt;/code&gt; line later when you have tested your script and are confident that it works correctly.</source>
          <target state="translated">スクリプト開発中にこの機能を使用すると非常に役立ちます。&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;によって作成されたレポートは、バグの追跡に多くの時間を節約できる情報を提供します。スクリプトをテストし、スクリプトが正しく機能することを確認したら、いつでも &lt;code&gt;cgitb&lt;/code&gt; 行を削除できます。</target>
        </trans-unit>
        <trans-unit id="22c515398dd54e978c320c9deb0d0268d495ea20" translate="yes" xml:space="preserve">
          <source>Italic mode</source>
          <target state="translated">イタリック体</target>
        </trans-unit>
        <trans-unit id="5cbdcd93f424472e328e1a57f47a17f48c00f33b" translate="yes" xml:space="preserve">
          <source>Item Options</source>
          <target state="translated">アイテムオプション</target>
        </trans-unit>
        <trans-unit id="6202f13083abbb77f81ad8a1985547e0eaade10c" translate="yes" xml:space="preserve">
          <source>Item&amp;rsquo;s option values may be displayed in a different order than the order in which they are stored.</source>
          <target state="translated">アイテムのオプション値は、格納されている順序とは異なる順序で表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="814115a7a4ce068e1e313aab07088369d6491578" translate="yes" xml:space="preserve">
          <source>Iterating over a message object tree is fairly easy with the &lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt;&lt;code&gt;Message.walk&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#module-email.iterators&quot;&gt;&lt;code&gt;email.iterators&lt;/code&gt;&lt;/a&gt; module provides some useful higher level iterations over message object trees.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt; &lt;code&gt;Message.walk&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、メッセージオブジェクトツリーの繰り返し処理はかなり簡単です。&lt;a href=&quot;#module-email.iterators&quot;&gt; &lt;code&gt;email.iterators&lt;/code&gt; の&lt;/a&gt;モジュールは、メッセージオブジェクトツリーの上にいくつかの有用な高レベルの反復を提供します。</target>
        </trans-unit>
        <trans-unit id="dc41d23f9c2b8b34eed362c2d5a66ec1341fc2fe" translate="yes" xml:space="preserve">
          <source>Iterating over the members of an enum does not provide the aliases:</source>
          <target state="translated">列挙型のメンバを繰り返し処理してもエイリアスは提供されません。</target>
        </trans-unit>
        <trans-unit id="09a13476ca8a54e634b1c965592cc50659e1d997" translate="yes" xml:space="preserve">
          <source>Iterating views while adding or deleting entries in the dictionary may raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; or fail to iterate over all entries.</source>
          <target state="translated">辞書のエントリを追加または削除しながらビューを反復すると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生する&lt;/a&gt;か、すべてのエントリの反復に失敗する場合があります。</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="c8de7b3a4ba4a49d433b993cb2d78885338309d1" translate="yes" xml:space="preserve">
          <source>Iteratively unpack from the buffer &lt;em&gt;buffer&lt;/em&gt; according to the format string &lt;em&gt;format&lt;/em&gt;. This function returns an iterator which will read equally-sized chunks from the buffer until all its contents have been consumed. The buffer&amp;rsquo;s size in bytes must be a multiple of the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォーマット文字列&lt;em&gt;format&lt;/em&gt;に従って、バッファ&lt;em&gt;buffer&lt;/em&gt;から繰り返しアンパックし&lt;em&gt;ます&lt;/em&gt;。この関数は、すべてのコンテンツが消費されるまで、バッファーから同じサイズのチャンクを読み取るイテレーターを返します。バッファのサイズ（バイト単位&lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt;、calcsize（）で反映されるように、フォーマットで必要なサイズの倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="4bf9de45ad47d7c5378d6a6b4878a23abb027cf7" translate="yes" xml:space="preserve">
          <source>Iterator Types</source>
          <target state="translated">イテレータの型</target>
        </trans-unit>
        <trans-unit id="46761e79cfdea0019d907a53f45846a1ee9a6345" translate="yes" xml:space="preserve">
          <source>Itertool functions</source>
          <target state="translated">イターツール関数</target>
        </trans-unit>
        <trans-unit id="6e54a0513216ff9ab3f49477b340232097393b29" translate="yes" xml:space="preserve">
          <source>Itertools Recipes</source>
          <target state="translated">Itertools レシピ</target>
        </trans-unit>
        <trans-unit id="dc3bdbc56788fad2aa8a182d78a9cdd53617a14d" translate="yes" xml:space="preserve">
          <source>Its file,line position.</source>
          <target state="translated">そのファイル、行の位置。</target>
        </trans-unit>
        <trans-unit id="715aa3328be5ee249a0969744b5351374ea7673e" translate="yes" xml:space="preserve">
          <source>Its methods create and return &lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;Proxy Objects&lt;/a&gt; for a number of commonly used data types to be synchronized across processes. This notably includes shared lists and dictionaries.</source>
          <target state="translated">そのメソッドは、プロセス間で同期される一般的に使用される多くのデータ型の&lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;プロキシオブジェクト&lt;/a&gt;を作成して返します。これには特に、共有リストと辞書が含まれます。</target>
        </trans-unit>
        <trans-unit id="2fff28012a7534f73380035c0ede53d295420a3b" translate="yes" xml:space="preserve">
          <source>JPEG data in JFIF or Exif formats</source>
          <target state="translated">JFIF または Exif 形式の JPEG 日付</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="e73d3511fce24ebc291cfc1a0bf8fb3055e4b3c0" translate="yes" xml:space="preserve">
          <source>JSON is a subset of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2. The JSON produced by this module&amp;rsquo;s default settings (in particular, the default &lt;em&gt;separators&lt;/em&gt; value) is also a subset of YAML 1.0 and 1.1. This module can thus also be used as a YAML serializer.</source>
          <target state="translated">JSONは&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2のサブセットです。このモジュールのデフォルト設定（特に、デフォルトの&lt;em&gt;セパレーター&lt;/em&gt;値）によって生成されるJSON も、YAML 1.0および1.1のサブセットです。したがって、このモジュールはYAMLシリアライザーとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="74477a71066c32a03e3b5e0f372cb2d16bb5ab67" translate="yes" xml:space="preserve">
          <source>JSON is a text serialization format (it outputs unicode text, although most of the time it is then encoded to &lt;code&gt;utf-8&lt;/code&gt;), while pickle is a binary serialization format;</source>
          <target state="translated">JSONはテキストのシリアル化形式（Unicodeテキストを出力しますが、ほとんどの場合 &lt;code&gt;utf-8&lt;/code&gt; にエンコードされます）ですが、pickleはバイナリのシリアル化形式です。</target>
        </trans-unit>
        <trans-unit id="88798c723bcb212288a6869233d3bcfab4c6e224" translate="yes" xml:space="preserve">
          <source>JSON is human-readable, while pickle is not;</source>
          <target state="translated">JSONは人間が読めるのに対し、ピクルスは読めない。</target>
        </trans-unit>
        <trans-unit id="26dcb3da6e496d8fa3c185868f494af19a08c8d6" translate="yes" xml:space="preserve">
          <source>JSON is interoperable and widely used outside of the Python ecosystem, while pickle is Python-specific;</source>
          <target state="translated">JSONは相互運用性があり、Pythonエコシステムの外で広く使われていますが、PickleはPythonに特化しています。</target>
        </trans-unit>
        <trans-unit id="b58d3fed6d6262143493b847936ace0c088070e9" translate="yes" xml:space="preserve">
          <source>JSON, by default, can only represent a subset of the Python built-in types, and no custom classes; pickle can represent an extremely large number of Python types (many of them automatically, by clever usage of Python&amp;rsquo;s introspection facilities; complex cases can be tackled by implementing &lt;a href=&quot;#pickle-inst&quot;&gt;specific object APIs&lt;/a&gt;);</source>
          <target state="translated">デフォルトでは、JSONはPython組み込み型のサブセットのみを表すことができ、カスタムクラスは表すことができません。pickleは非常に多数のPython型を表すことができます（その多くは自動的に、Pythonのイントロスペクション機能を巧みに使用することで、&lt;a href=&quot;#pickle-inst&quot;&gt;特定のオブジェクトAPIを&lt;/a&gt;実装することで複雑なケースに取り組むことができます）。</target>
        </trans-unit>
        <trans-unit id="3c157bbba1c3c6dd4684d9e17bd5cbdd293fa040" translate="yes" xml:space="preserve">
          <source>James Henstridge</source>
          <target state="translated">ジェームズ・ヘンストリッジ</target>
        </trans-unit>
        <trans-unit id="aae47823aad5375bf33ac2c5178d07c30af7b55d" translate="yes" xml:space="preserve">
          <source>January 1 of year 1 is called day number 1, January 2 of year 1 is called day number 2, and so on. &lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="translated">1年目の1月1日は1日目と呼ばれ、1年目の1月2日は2日目と呼ばれます。&lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="db10f36d9223f6e5b2b87cbc94ecdb4f6367b21d" translate="yes" xml:space="preserve">
          <source>Japanese, Korean, Simplified Chinese, Western Europe, Greek</source>
          <target state="translated">日本語、韓国語、中国語(簡体字)、西欧、ギリシャ語</target>
        </trans-unit>
        <trans-unit id="da19e6ace2ea93a2694470984913cc9be9f8a78a" translate="yes" xml:space="preserve">
          <source>Java Platform</source>
          <target state="translated">ジャバプラットフォーム</target>
        </trans-unit>
        <trans-unit id="24e07b1280211517893038a57e2fa614b51c83cb" translate="yes" xml:space="preserve">
          <source>Join a &lt;em&gt;thread&lt;/em&gt; within &lt;em&gt;timeout&lt;/em&gt;. Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if thread is still alive after &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">&lt;em&gt;タイムアウト&lt;/em&gt;内で&lt;em&gt;スレッドに&lt;/em&gt;参加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;タイムアウト&lt;/em&gt;秒後にスレッドがまだ生きている場合は、&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; を発生させ&lt;/a&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ec87f8fcd9ef64d26787f07fb5fc64981fb9d0" translate="yes" xml:space="preserve">
          <source>Join adjacent text nodes so that all stretches of text are stored as single &lt;code&gt;Text&lt;/code&gt; instances. This simplifies processing text from a DOM tree for many applications.</source>
          <target state="translated">隣接するテキストノードを結合して、テキストのすべてのストレッチが単一の &lt;code&gt;Text&lt;/code&gt; インスタンスとして格納されるようにします。これにより、多くのアプリケーションでDOMツリーからのテキストの処理が簡単になります。</target>
        </trans-unit>
        <trans-unit id="60f2e868ffb015b783bfe34cd024cda4ded92d88" translate="yes" xml:space="preserve">
          <source>Join one or more path components intelligently. The return value is the concatenation of &lt;em&gt;path&lt;/em&gt; and any members of &lt;em&gt;*paths&lt;/em&gt; with exactly one directory separator (&lt;code&gt;os.sep&lt;/code&gt;) following each non-empty part except the last, meaning that the result will only end in a separator if the last part is empty. If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</source>
          <target state="translated">1つ以上のパスコンポーネントをインテリジェントに結合します。戻り値は、&lt;em&gt;パス&lt;/em&gt;と&lt;em&gt;* pathsの&lt;/em&gt;メンバーを連結したもので、最後以外の空でない各部分の後にディレクトリセパレータ（ &lt;code&gt;os.sep&lt;/code&gt; ）が1つだけ続くため、最後の部分が空の場合、結果はセパレータでのみ終了します。 。コンポーネントが絶対パスの場合、以前のすべてのコンポーネントは破棄され、結合は絶対パスコンポーネントから続行されます。</target>
        </trans-unit>
        <trans-unit id="eaf8550cd527a4aa5bcd750c5566f8a76a8a1f3f" translate="yes" xml:space="preserve">
          <source>Join the background thread. This can only be used after &lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; has been called. It blocks until the background thread exits, ensuring that all data in the buffer has been flushed to the pipe.</source>
          <target state="translated">バックグラウンドスレッドに参加します。これは、&lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;が呼び出された後にのみ使用できます。バックグラウンドスレッドが終了するまでブロックし、バッファー内のすべてのデータがパイプにフラッシュされたことを確認します。</target>
        </trans-unit>
        <trans-unit id="fffc9a5e23a3f1b2ccacd3e4adf7ea7865062fbf" translate="yes" xml:space="preserve">
          <source>Joining processes that use queues</source>
          <target state="translated">キューを使用するプロセスの結合</target>
        </trans-unit>
        <trans-unit id="80c8c7d106ea49237f4b6ea2c4ae9879166d4287" translate="yes" xml:space="preserve">
          <source>Joining zombie processes</source>
          <target state="translated">ゾンビプロセスの結合</target>
        </trans-unit>
        <trans-unit id="e3d34ba51db462866353060a6c3f2d483d8c7643" translate="yes" xml:space="preserve">
          <source>Juan David Ib&amp;aacute;&amp;ntilde;ez Palomar</source>
          <target state="translated">フアン・デイビッド・イバニェス・パロマー</target>
        </trans-unit>
        <trans-unit id="e51d02293aa68e17eecb8aa544b483cf96c6fa49" translate="yes" xml:space="preserve">
          <source>Just returns 10, as this is Decimal, :)</source>
          <target state="translated">10進数なので10を返すだけです。)</target>
        </trans-unit>
        <trans-unit id="4f1fddc4dabd32f2e61ca9f91e0ca2bb68fd646f" translate="yes" xml:space="preserve">
          <source>Just returns self, this method is only to comply with the Decimal Specification.</source>
          <target state="translated">self を返すだけで、このメソッドは Decimal 仕様に準拠しています。</target>
        </trans-unit>
        <trans-unit id="47d7416fd642efd47199c18f79129bbd51455d2c" translate="yes" xml:space="preserve">
          <source>KEY_DC</source>
          <target state="translated">KEY_DC</target>
        </trans-unit>
        <trans-unit id="033f3bd76e9037ed2eacdf745e1f381ae09e1e6e" translate="yes" xml:space="preserve">
          <source>KEY_END</source>
          <target state="translated">KEY_END</target>
        </trans-unit>
        <trans-unit id="e8b0bdc4a205564ace3e67b5d2590e9a7b3ebe0f" translate="yes" xml:space="preserve">
          <source>KEY_HOME</source>
          <target state="translated">KEY_HOME</target>
        </trans-unit>
        <trans-unit id="1ed0f4c565cdf40018aa6d1a7f2dffe8a57d07b7" translate="yes" xml:space="preserve">
          <source>KEY_IC</source>
          <target state="translated">KEY_IC</target>
        </trans-unit>
        <trans-unit id="f9606cdd29d726a1efc9306cd6515a746d5e9de8" translate="yes" xml:space="preserve">
          <source>KEY_NPAGE</source>
          <target state="translated">KEY_NPAGE</target>
        </trans-unit>
        <trans-unit id="817be3fc68df61d26f925ae492d47665d4ff3127" translate="yes" xml:space="preserve">
          <source>KEY_PPAGE</source>
          <target state="translated">KEY_PPAGE</target>
        </trans-unit>
        <trans-unit id="580b34c07a9b803a5f68c0e7990ba58269a92490" translate="yes" xml:space="preserve">
          <source>Kahan, W: Branch cuts for complex elementary functions; or, Much ado about nothing&amp;rsquo;s sign bit. In Iserles, A., and Powell, M. (eds.), The state of the art in numerical analysis. Clarendon Press (1987) pp165&amp;ndash;211.</source>
          <target state="translated">カハン、W：複雑な初等関数の分岐カット。または、何もない兆候について大騒ぎ。Iserles、A.およびPowell、M.（編）、数値解析における最新技術。Clarendon Press（1987）pp165&amp;ndash;211。</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="24a946a3338502270c212fb158dbe6bb77ee0309" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; マッピングのデータベースを保持します。</target>
        </trans-unit>
        <trans-unit id="37bfb81baa66440423c45f18f727362864a6cfce" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings. A realm of &lt;code&gt;None&lt;/code&gt; is considered a catch-all realm, which is searched if no other realm fits.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; マッピングのデータベースを保持します。 &lt;code&gt;None&lt;/code&gt; のレルムはキャッチオールレルムと見なされ、他のレルムが適合しない場合に検索されます。</target>
        </trans-unit>
        <trans-unit id="03de4413ffacf22791c546e17121674eadf9916d" translate="yes" xml:space="preserve">
          <source>Keep in mind that if the node you&amp;rsquo;re operating on has child nodes you must either transform the child nodes yourself or call the &lt;code&gt;generic_visit()&lt;/code&gt; method for the node first.</source>
          <target state="translated">操作しているノードに子ノードがある場合は、子ノードを自分で変換するか、最初にノードの &lt;code&gt;generic_visit()&lt;/code&gt; メソッドを呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c563af2eb52c22befb802b194ed5fde24ca2d3a7" translate="yes" xml:space="preserve">
          <source>Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays doesn&amp;rsquo;t &lt;em&gt;copy&lt;/em&gt; the sub-object, instead it retrieves a wrapper object accessing the root-object&amp;rsquo;s underlying buffer.</source>
          <target state="translated">構造、ユニオン、配列からサブオブジェクトを取得しても、サブオブジェクトは&lt;em&gt;コピー&lt;/em&gt;されず、ルートオブジェクトの基になるバッファにアクセスするラッパーオブジェクトが取得されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4298e303439a440ab55bf7bbf886c709ae66ef29" translate="yes" xml:space="preserve">
          <source>Keeping references to frame objects, as found in the first element of the frame records these functions return, can cause your program to create reference cycles. Once a reference cycle has been created, the lifespan of all objects which can be accessed from the objects which form the cycle can become much longer even if Python&amp;rsquo;s optional cycle detector is enabled. If such cycles must be created, it is important to ensure they are explicitly broken to avoid the delayed destruction of objects and increased memory consumption which occurs.</source>
          <target state="translated">これらの関数が返すフレームレコードの最初の要素にあるように、フレームオブジェクトへの参照を保持すると、プログラムが参照サイクルを作成する可能性があります。参照サイクルが作成されると、Pythonのオプションのサイクル検出器が有効になっていても、サイクルを形成するオブジェクトからアクセスできるすべてのオブジェクトの寿命が非常に長くなる可能性があります。そのようなサイクルを作成する必要がある場合、オブジェクトの破壊の遅延や発生するメモリ消費の増加を回避するために、それらのサイクルを明示的に破壊することを確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="52a345e99e64b9ca6f928d5687177a892525371b" translate="yes" xml:space="preserve">
          <source>Kent Beck&amp;rsquo;s original paper on testing frameworks using the pattern shared by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; が&lt;/a&gt;共有するパターンを使用したフレームワークのテストに関するKent Beckの最初の論文。</target>
        </trans-unit>
        <trans-unit id="7267bbd8e2137364d4939e2071439e42d40f32fb" translate="yes" xml:space="preserve">
          <source>Kevent Objects</source>
          <target state="translated">Kevent オブジェクト</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dbab391d4ec83ba2f4394be31de35a61669a5996" translate="yes" xml:space="preserve">
          <source>Key and values are always stored as bytes. This means that when strings are used they are implicitly converted to the default encoding before being stored.</source>
          <target state="translated">キーと値は常にバイトとして格納されます。つまり、文字列を使用する場合は、暗黙のうちにデフォルトのエンコーディングに変換されてから保存されるということです。</target>
        </trans-unit>
        <trans-unit id="2f019ec46ab9548a295fae40fb32bbf280932bb8" translate="yes" xml:space="preserve">
          <source>Key bindings</source>
          <target state="translated">キーバインディング</target>
        </trans-unit>
        <trans-unit id="f0cc3ad4ee33d02515db5713788523cd4cf74945" translate="yes" xml:space="preserve">
          <source>Key constant</source>
          <target state="translated">キー定数</target>
        </trans-unit>
        <trans-unit id="6bbbfa7e022b93aaca86b7e55f8cf9f9e9f25683" translate="yes" xml:space="preserve">
          <source>Key derivation</source>
          <target state="translated">キーの導出</target>
        </trans-unit>
        <trans-unit id="4c6694a69ad0f467a3eb48c707287ff83fc7df0b" translate="yes" xml:space="preserve">
          <source>Key derivation and key stretching algorithms are designed for secure password hashing. Naive algorithms such as &lt;code&gt;sha1(password)&lt;/code&gt; are not resistant against brute-force attacks. A good password hashing function must be tunable, slow, and include a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;.</source>
          <target state="translated">キーの導出およびキーストレッチアルゴリズムは、安全なパスワードハッシュ用に設計されています。 &lt;code&gt;sha1(password)&lt;/code&gt; などの単純なアルゴリズムは、総当たり攻撃に対して耐性がありません。適切なパスワードハッシュ関数は、調整可能で低速であり、&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;を含む必要があります。</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="99214c71e9133c70244f001bb7de7d4fe414b3a5" translate="yes" xml:space="preserve">
          <source>KeyboardInterrupt</source>
          <target state="translated">KeyboardInterrupt</target>
        </trans-unit>
        <trans-unit id="aba6df4879209d36e1a5a7eb8f2829348bfc1607" translate="yes" xml:space="preserve">
          <source>Keycap</source>
          <target state="translated">Keycap</target>
        </trans-unit>
        <trans-unit id="f431dd90bf1296fd6be5fc2fecca2fe9d70abb5f" translate="yes" xml:space="preserve">
          <source>Keyed hashing</source>
          <target state="translated">キー付きハッシュ</target>
        </trans-unit>
        <trans-unit id="914eeba5ce4ce3c00e9428b28f9ccf6cf0cce211" translate="yes" xml:space="preserve">
          <source>Keyed hashing can be used for authentication as a faster and simpler replacement for &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;Hash-based message authentication code&lt;/a&gt; (HMAC). BLAKE2 can be securely used in prefix-MAC mode thanks to the indifferentiability property inherited from BLAKE.</source>
          <target state="translated">キー付きハッシュは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;ハッシュベースのメッセージ認証コード&lt;/a&gt;（HMAC）のより高速でシンプルな代替として、認証に使用できます。BLAKEは、BLAKEから継承された微分不能プロパティのおかげで、プレフィックスMACモードで安全に使用できます。</target>
        </trans-unit>
        <trans-unit id="a9548bb855e07b59b91626cc17d69c771e2e87b2" translate="yes" xml:space="preserve">
          <source>Keys and values are iterated over in insertion order. This allows the creation of &lt;code&gt;(value, key)&lt;/code&gt; pairs using &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt;. Another way to create the same list is &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt;.</source>
          <target state="translated">キーと値は挿入順に繰り返されます。これは、作成可能 &lt;code&gt;(value, key)&lt;/code&gt; 使用してペア&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt; 。同じリストを作成する別の方法は、 &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c300864ed75026c1eb88a7a83759898d09c397b8" translate="yes" xml:space="preserve">
          <source>Keys are referred to by integer constants with names starting with &lt;code&gt;KEY_&lt;/code&gt;. The exact keycaps available are system dependent.</source>
          <target state="translated">キーは、名前が &lt;code&gt;KEY_&lt;/code&gt; で始まる整数定数によって参照されます。利用できる正確なキー配列はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="228f5d286dcdd48b2fc18dd8734bb35bc953ff86" translate="yes" xml:space="preserve">
          <source>Keys in key/value pairs of JSON are always of the type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. When a dictionary is converted into JSON, all the keys of the dictionary are coerced to strings. As a result of this, if a dictionary is converted into JSON and then back into a dictionary, the dictionary may not equal the original one. That is, &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; if x has non-string keys.</source>
          <target state="translated">JSONのキー/値ペアのキーは常に&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;型です。辞書がJSONに変換されると、辞書のすべてのキーが文字列に強制変換されます。この結果、ディクショナリがJSONに変換されてからディクショナリに戻されると、ディクショナリは元のディクショナリと一致しない場合があります。つまり、xに文字列以外のキーがある場合、 &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="439a459f8af4300a3a5b519bbed313651ca1e4c1" translate="yes" xml:space="preserve">
          <source>Keys views are set-like since their entries are unique and hashable. If all values are hashable, so that &lt;code&gt;(key, value)&lt;/code&gt; pairs are unique and hashable, then the items view is also set-like. (Values views are not treated as set-like since the entries are generally not unique.) For set-like views, all of the operations defined for the abstract base class &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt;&lt;code&gt;collections.abc.Set&lt;/code&gt;&lt;/a&gt; are available (for example, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, or &lt;code&gt;^&lt;/code&gt;).</source>
          <target state="translated">キービューは、エントリが一意でハッシュ可能であるため、セットに似ています。すべての値がハッシュ可能で、 &lt;code&gt;(key, value)&lt;/code&gt; ペアが一意でハッシュ可能である場合、アイテムビューもセットのようになります。（エントリは一般に一意ではないため、値ビューはセットのようなものとして扱われません。）セットのようなビューの場合、抽象基本クラス&lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt; &lt;code&gt;collections.abc.Set&lt;/code&gt; &lt;/a&gt;に対して定義されたすべての操作が使用できます（たとえば、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、または &lt;code&gt;^&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="72035afe680b44899ee30976fd5b486a93144c83" translate="yes" xml:space="preserve">
          <source>Keystroke</source>
          <target state="translated">Keystroke</target>
        </trans-unit>
        <trans-unit id="a0256d5e54265d1b99c70a9f07e115e966a973da" translate="yes" xml:space="preserve">
          <source>Keywords can be used in the &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; call to set values in the dictionary:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;呼び出しでキーワードを使用して、辞書に値を設定できます。</target>
        </trans-unit>
        <trans-unit id="b473142e64b2d483a80088f0192d814677f79849" translate="yes" xml:space="preserve">
          <source>Kill the child.</source>
          <target state="translated">子供を殺す。</target>
        </trans-unit>
        <trans-unit id="dfb8d10a715be56498bf3463ceb602e0c5f6cdfd" translate="yes" xml:space="preserve">
          <source>Kill the subprocess and close all pipes.</source>
          <target state="translated">サブプロセスを停止し、すべてのパイプを閉じます。</target>
        </trans-unit>
        <trans-unit id="bcef2d72d27a3ff305fd835a27596403d70aa65a" translate="yes" xml:space="preserve">
          <source>Kill the subprocess by calling the &lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してサブプロセスを強制終了します。</target>
        </trans-unit>
        <trans-unit id="5eea27376f6c77dd4e7d334cd247a3c6708d22ec" translate="yes" xml:space="preserve">
          <source>Kill the subprocess.</source>
          <target state="translated">サブプロセスを停止します。</target>
        </trans-unit>
        <trans-unit id="9f19c6828b717749bb8b678b96baba09b9afe4b9" translate="yes" xml:space="preserve">
          <source>Kills the child. On Posix OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">子供を殺します。Posix OSでは、この関数はSIGKILLを子に送信します。Windowsでは、&lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="6f4d7efd09292b580160cf054a1eb415aa098b83" translate="yes" xml:space="preserve">
          <source>Kqueue Objects</source>
          <target state="translated">Kqueue オブジェクト</target>
        </trans-unit>
        <trans-unit id="1ae87da77ec3d4df1eb9c1cc7937078e8fd86235" translate="yes" xml:space="preserve">
          <source>L-System</source>
          <target state="translated">L-System</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="8f692914bc66ead997b8bc1788f89a45c63f1006" translate="yes" xml:space="preserve">
          <source>LIFO Queue</source>
          <target state="translated">LIFO キュー</target>
        </trans-unit>
        <trans-unit id="e0ac7d929c8c9064651f3a5b472a916a78c16845" translate="yes" xml:space="preserve">
          <source>LOG_ALERT</source>
          <target state="translated">LOG_ALERT</target>
        </trans-unit>
        <trans-unit id="00a42081f87dfdb7c8750d2dc99a1c5a47afe15c" translate="yes" xml:space="preserve">
          <source>LOG_AUTH</source>
          <target state="translated">LOG_AUTH</target>
        </trans-unit>
        <trans-unit id="b059e128bbbf4abbc726cbc5b3dc15823fa1d3b0" translate="yes" xml:space="preserve">
          <source>LOG_AUTHPRIV</source>
          <target state="translated">LOG_AUTHPRIV</target>
        </trans-unit>
        <trans-unit id="3ea8e1cd8bec535a6b614c37476a25af434a2a64" translate="yes" xml:space="preserve">
          <source>LOG_CRIT</source>
          <target state="translated">LOG_CRIT</target>
        </trans-unit>
        <trans-unit id="e14c128e15575171dccf2a786c6c56cfe90aabfb" translate="yes" xml:space="preserve">
          <source>LOG_CRON</source>
          <target state="translated">LOG_CRON</target>
        </trans-unit>
        <trans-unit id="2db1ea382ae920e08017868d8ca7dc74f1e87577" translate="yes" xml:space="preserve">
          <source>LOG_DAEMON</source>
          <target state="translated">LOG_DAEMON</target>
        </trans-unit>
        <trans-unit id="e9132069aa3cd9868136c9eab4c9121997cd9261" translate="yes" xml:space="preserve">
          <source>LOG_DEBUG</source>
          <target state="translated">LOG_DEBUG</target>
        </trans-unit>
        <trans-unit id="5cbc989f5f6b54b988f6cf238d1dfcafddfe5df0" translate="yes" xml:space="preserve">
          <source>LOG_EMERG</source>
          <target state="translated">LOG_EMERG</target>
        </trans-unit>
        <trans-unit id="c25ebb67e3f524ee4cfb9f242122b115231b2969" translate="yes" xml:space="preserve">
          <source>LOG_ERR</source>
          <target state="translated">LOG_ERR</target>
        </trans-unit>
        <trans-unit id="7076f8e47c7f564a083cced7437884fc3de9c20e" translate="yes" xml:space="preserve">
          <source>LOG_FTP</source>
          <target state="translated">LOG_FTP</target>
        </trans-unit>
        <trans-unit id="508d693347703c9b1449225c00b44e2e84f15cce" translate="yes" xml:space="preserve">
          <source>LOG_INFO</source>
          <target state="translated">LOG_INFO</target>
        </trans-unit>
        <trans-unit id="147a80a7b7486a934d7581b0f33986ae6651bd87" translate="yes" xml:space="preserve">
          <source>LOG_KERN</source>
          <target state="translated">LOG_KERN</target>
        </trans-unit>
        <trans-unit id="4bf6ef93839f6872c9f92acc4f4b838c163bdc96" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL0</source>
          <target state="translated">LOG_LOCAL0</target>
        </trans-unit>
        <trans-unit id="1d85977d2d454e9c3494e61168702f4cbecf12c8" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL1</source>
          <target state="translated">LOG_LOCAL1</target>
        </trans-unit>
        <trans-unit id="e587b1ef1b9f3479ac96923decd64231690910bb" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL2</source>
          <target state="translated">LOG_LOCAL2</target>
        </trans-unit>
        <trans-unit id="ae76a49e2672fc55b235abad25133bc1cc0b3ad5" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL3</source>
          <target state="translated">LOG_LOCAL3</target>
        </trans-unit>
        <trans-unit id="a46daeebb6f0fc83ba853556f660485fc6464822" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL4</source>
          <target state="translated">LOG_LOCAL4</target>
        </trans-unit>
        <trans-unit id="f1df950575fc4b0c0074a0abb00861a8e08a3ed6" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL5</source>
          <target state="translated">LOG_LOCAL5</target>
        </trans-unit>
        <trans-unit id="a5d06673189a0f5f9d67757287d862777d523941" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL6</source>
          <target state="translated">LOG_LOCAL6</target>
        </trans-unit>
        <trans-unit id="f51ad7929d644389ddc043e95d9d787a20eb0f61" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL7</source>
          <target state="translated">LOG_LOCAL7</target>
        </trans-unit>
        <trans-unit id="1ca5af74225a0e933cda1a23779b6b9b7534a5c0" translate="yes" xml:space="preserve">
          <source>LOG_LPR</source>
          <target state="translated">LOG_LPR</target>
        </trans-unit>
        <trans-unit id="3266bdf7a824a1128c05ff0a6eacbb163573bfdb" translate="yes" xml:space="preserve">
          <source>LOG_MAIL</source>
          <target state="translated">LOG_MAIL</target>
        </trans-unit>
        <trans-unit id="f460581d8a89631890f08c7c200582c071d9f348" translate="yes" xml:space="preserve">
          <source>LOG_NEWS</source>
          <target state="translated">LOG_NEWS</target>
        </trans-unit>
        <trans-unit id="fd9c5faaf23df86fefa8b46f512c8f9f2f910ea4" translate="yes" xml:space="preserve">
          <source>LOG_NOTICE</source>
          <target state="translated">LOG_NOTICE</target>
        </trans-unit>
        <trans-unit id="00b0b0f7b44d7be30d92b1245948b1df8d49d79b" translate="yes" xml:space="preserve">
          <source>LOG_SYSLOG</source>
          <target state="translated">LOG_SYSLOG</target>
        </trans-unit>
        <trans-unit id="cf326c7cb4d0b7bd59e5815a628a819974d8b6a6" translate="yes" xml:space="preserve">
          <source>LOG_USER</source>
          <target state="translated">LOG_USER</target>
        </trans-unit>
        <trans-unit id="b69a6c99cd1a6e6314b53f763c30ba82bc041bc6" translate="yes" xml:space="preserve">
          <source>LOG_UUCP</source>
          <target state="translated">LOG_UUCP</target>
        </trans-unit>
        <trans-unit id="d0479a4f305480aef0fe90fae83a03f4865e7fd9" translate="yes" xml:space="preserve">
          <source>LOG_WARNING</source>
          <target state="translated">LOG_WARNING</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="011416c82c132a4f52517e4bbdc2375314f6f840" translate="yes" xml:space="preserve">
          <source>Label Options</source>
          <target state="translated">ラベルオプション</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">大容量ファイル対応</target>
        </trans-unit>
        <trans-unit id="314cf2f01043a4a7510f794394e0b8c96cda1587" translate="yes" xml:space="preserve">
          <source>Large file support is enabled in Python when the size of an &lt;code&gt;off_t&lt;/code&gt; is larger than a &lt;code&gt;long&lt;/code&gt; and the &lt;code&gt;long long&lt;/code&gt; is at least as large as an &lt;code&gt;off_t&lt;/code&gt;. It may be necessary to configure and compile Python with certain compiler flags to enable this mode. For example, it is enabled by default with recent versions of Irix, but with Solaris 2.6 and 2.7 you need to do something like:</source>
          <target state="translated">サイズ場合、大きなファイルのサポートは、Pythonで有効になっている &lt;code&gt;off_t&lt;/code&gt; ではがより大きい &lt;code&gt;long&lt;/code&gt; と &lt;code&gt;long long&lt;/code&gt; 少なくとも同じ大きさとしてある &lt;code&gt;off_t&lt;/code&gt; では。このモードを有効にするには、特定のコンパイラフラグを使用してPythonを構成およびコンパイルする必要がある場合があります。たとえば、最近のバージョンのIrixではデフォルトで有効になっていますが、Solaris 2.6および2.7では次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="b4101486e371d681731851bb447c9aa495b0e247" translate="yes" xml:space="preserve">
          <source>Later, calling &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will return an object with two attributes, &lt;code&gt;integers&lt;/code&gt; and &lt;code&gt;accumulate&lt;/code&gt;. The &lt;code&gt;integers&lt;/code&gt; attribute will be a list of one or more ints, and the &lt;code&gt;accumulate&lt;/code&gt; attribute will be either the &lt;a href=&quot;functions#sum&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; function, if &lt;code&gt;--sum&lt;/code&gt; was specified at the command line, or the &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; function if it was not.</source>
          <target state="translated">後で&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;を呼び出すと、 &lt;code&gt;integers&lt;/code&gt; と &lt;code&gt;accumulate&lt;/code&gt; 2つの属性を持つオブジェクトが返されます。 &lt;code&gt;integers&lt;/code&gt; 属性は、一つ以上のintのリストとなり、 &lt;code&gt;accumulate&lt;/code&gt; 属性のいずれかになります&lt;a href=&quot;functions#sum&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;場合、機能 &lt;code&gt;--sum&lt;/code&gt; は、コマンドライン、またはで指定された&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;それがなかった場合の機能。</target>
        </trans-unit>
        <trans-unit id="220d5efc8654e9aa0bf6695beee6bfe664735911" translate="yes" xml:space="preserve">
          <source>Latin-1 encoding with &lt;code&gt;\uXXXX&lt;/code&gt; and &lt;code&gt;\UXXXXXXXX&lt;/code&gt; for other code points. Existing backslashes are not escaped in any way. It is used in the Python pickle protocol.</source>
          <target state="translated">他のコードポイントの &lt;code&gt;\uXXXX&lt;/code&gt; および &lt;code&gt;\UXXXXXXXX&lt;/code&gt; を使用したLatin-1エンコーディング。既存のバックスラッシュは決してエスケープされません。Python pickleプロトコルで使用されます。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="5304207bb67ab38f044a44e136564dadeaba0897" translate="yes" xml:space="preserve">
          <source>Leave cbreak mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">cbreakモードを終了します。行バッファリングを使用して、通常の「クックド」モードに戻ります。</target>
        </trans-unit>
        <trans-unit id="9b35aee8d3da8fd183e13a370b032dec769e9344" translate="yes" xml:space="preserve">
          <source>Leave echo mode. Echoing of input characters is turned off.</source>
          <target state="translated">エコーモードを解除します。入力文字のエコーをオフにします。</target>
        </trans-unit>
        <trans-unit id="f604f6318f737fd0cd2341f0f6cdfab969737efb" translate="yes" xml:space="preserve">
          <source>Leave newline mode. Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of &lt;code&gt;addch('\n')&lt;/code&gt;, which always does the equivalent of return and line feed on the virtual screen). With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.</source>
          <target state="translated">改行モードを終了します。入力時の改行から改行への変換を無効にし、出力時の改行から改行/改行への低レベルの変換を無効にします（ただし、これは &lt;code&gt;addch('\n')&lt;/code&gt; の動作を変更せず、常に改行と改行に相当します）仮想画面上）。平行移動をオフにすると、cursesは垂直方向の動きを少し速くすることがあります。また、入力時にReturnキーを検出することもできます。</target>
        </trans-unit>
        <trans-unit id="df80f393f0c1283bf1c2011a3966c84e42251e69" translate="yes" xml:space="preserve">
          <source>Leave raw mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">rawモードのままにします。行バッファリングを使用して、通常の「クックド」モードに戻ります。</target>
        </trans-unit>
        <trans-unit id="494064e70529e54389ad678d759801779c5c72df" translate="yes" xml:space="preserve">
          <source>Left Shift</source>
          <target state="translated">左シフト</target>
        </trans-unit>
        <trans-unit id="fa2ddfd65f207446dfb5c03f954efaeb99e51fad" translate="yes" xml:space="preserve">
          <source>Left highlight</source>
          <target state="translated">左のハイライト</target>
        </trans-unit>
        <trans-unit id="7459e2ff70b4a74b12b3b42dcc8898f1325c4607" translate="yes" xml:space="preserve">
          <source>Left side</source>
          <target state="translated">左側</target>
        </trans-unit>
        <trans-unit id="4f21b710206cb813c042db5adab0dd62ed395300" translate="yes" xml:space="preserve">
          <source>Left-arrow</source>
          <target state="translated">Left-arrow</target>
        </trans-unit>
        <trans-unit id="fe4e2dded8cbb24225a5077d86ac26e1a4e77daa" translate="yes" xml:space="preserve">
          <source>Legacy API Examples</source>
          <target state="translated">レガシー API の例</target>
        </trans-unit>
        <trans-unit id="f9e9858ae5963ad7d5dac67bab79e2781ada4b1d" translate="yes" xml:space="preserve">
          <source>Legacy API:</source>
          <target state="translated">レガシーAPI。</target>
        </trans-unit>
        <trans-unit id="e874dde2b7bd15782fc71bda63adbb0435cd8ff4" translate="yes" xml:space="preserve">
          <source>Legacy Shell Invocation Functions</source>
          <target state="translated">レガシーシェル呼び出し関数</target>
        </trans-unit>
        <trans-unit id="97830814b9202ba41e9b45589de2504e635919fe" translate="yes" xml:space="preserve">
          <source>Legacy interface</source>
          <target state="translated">レガシーインターフェース</target>
        </trans-unit>
        <trans-unit id="f3f33501b9f5989df40734cc741026886ffb8ebc" translate="yes" xml:space="preserve">
          <source>Legacy variant of the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It has interpolation disabled by default and allows for non-string section names, option names, and values via its unsafe &lt;code&gt;add_section&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, as well as the legacy &lt;code&gt;defaults=&lt;/code&gt; keyword argument handling.</source>
          <target state="translated">&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; の&lt;/a&gt;レガシーバリアント。デフォルトでは無効になっている補間があり、安全でない &lt;code&gt;add_section&lt;/code&gt; と &lt;code&gt;set&lt;/code&gt; メソッド、および従来の &lt;code&gt;defaults=&lt;/code&gt; キーワード引数処理を介して、文字列以外のセクション名、オプション名、値を許可します。</target>
        </trans-unit>
        <trans-unit id="66133ee14edcb4e3bbb34ddd9f2cd0c81d9a82cf" translate="yes" xml:space="preserve">
          <source>Legal values are points of the compass: &lt;code&gt;&quot;n&quot;&lt;/code&gt;, &lt;code&gt;&quot;ne&quot;&lt;/code&gt;, &lt;code&gt;&quot;e&quot;&lt;/code&gt;, &lt;code&gt;&quot;se&quot;&lt;/code&gt;, &lt;code&gt;&quot;s&quot;&lt;/code&gt;, &lt;code&gt;&quot;sw&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;nw&quot;&lt;/code&gt;, and also &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="translated">有効な値は、コンパスのポイントです： &lt;code&gt;&quot;n&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ne&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;e&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;se&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;sw&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;nw&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;center&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="905f604fb13f295392bda39869104e2dd79e9fb2" translate="yes" xml:space="preserve">
          <source>Legal values are the strings: &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;center&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;fill&quot;&lt;/code&gt;.</source>
          <target state="translated">有効な値は、文字列 &lt;code&gt;&quot;left&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;center&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;right&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;fill&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eb67484bf01ce5ec849415f285da75abc22265be" translate="yes" xml:space="preserve">
          <source>Legal values are: &lt;code&gt;'left'&lt;/code&gt;, &lt;code&gt;'right'&lt;/code&gt;, &lt;code&gt;'top'&lt;/code&gt;, &lt;code&gt;'bottom'&lt;/code&gt;.</source>
          <target state="translated">有効な値は、 &lt;code&gt;'left'&lt;/code&gt; 、 &lt;code&gt;'right'&lt;/code&gt; 、 &lt;code&gt;'top'&lt;/code&gt; 、 &lt;code&gt;'bottom'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="18beaa17df62904395685f10cb89a3d8e9391154" translate="yes" xml:space="preserve">
          <source>Legal values: &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'y'&lt;/code&gt;, &lt;code&gt;'both'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;.</source>
          <target state="translated">有効な値： &lt;code&gt;'x'&lt;/code&gt; 、 &lt;code&gt;'y'&lt;/code&gt; 、 &lt;code&gt;'both'&lt;/code&gt; 、 &lt;code&gt;'none'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="d45a6f38f95efbaf3f9f3b999e990d1c6f2db236" translate="yes" xml:space="preserve">
          <source>Length modifier (optional).</source>
          <target state="translated">長さ修飾子(オプション)。</target>
        </trans-unit>
        <trans-unit id="180a1018d9273fb3a58e3f201de1ac8a5b80b58d" translate="yes" xml:space="preserve">
          <source>Length of the network prefix, in bits.</source>
          <target state="translated">ネットワーク・プレフィックスの長さ (ビット単位)。</target>
        </trans-unit>
        <trans-unit id="2c777c5db20151b1efdf932bcbcfebad8c2efc68" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume we initialize a table as in the example given above:</source>
          <target state="translated">上記の例のようにテーブルを初期化するとします。</target>
        </trans-unit>
        <trans-unit id="6b2e260007a1afb18b8a8c65668c11667d2da6f9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go back to the &lt;code&gt;Point&lt;/code&gt; class. We stored the x and y coordinates separated via semicolons as strings in SQLite.</source>
          <target state="translated">&lt;code&gt;Point&lt;/code&gt; クラスに戻りましょう。SQLiteでは、セミコロンで区切られたx座標とy座標を文字列として保存しました。</target>
        </trans-unit>
        <trans-unit id="cbaa1370b8e486f03058ade144aaa5ce766835fc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s modify the above example and run two &lt;code&gt;say_after&lt;/code&gt; coroutines &lt;em&gt;concurrently&lt;/em&gt;:</source>
          <target state="translated">上記の例を変更して、2つの &lt;code&gt;say_after&lt;/code&gt; コルーチンを&lt;em&gt;同時に&lt;/em&gt;実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="a4e1bbd9caa78a7f8e196d6165ef1a43653ca2ce" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to add one to each country&amp;rsquo;s rank, and add an &lt;code&gt;updated&lt;/code&gt; attribute to the rank element:</source>
          <target state="translated">各国のランクに1を追加し、rank要素に &lt;code&gt;updated&lt;/code&gt; 属性を追加するとします。</target>
        </trans-unit>
        <trans-unit id="78596e300b339fafdb3e77e4a728b5374ceee9c7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you wanted to get the version string for a package you&amp;rsquo;ve installed using &lt;code&gt;pip&lt;/code&gt;. We start by creating a virtual environment and installing something into it:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; を使用してインストールしたパッケージのバージョン文字列を取得したいとします。まず、仮想環境を作成し、そこに何かをインストールします。</target>
        </trans-unit>
        <trans-unit id="d5ae7ea3899f66437fb7e1aa7d7675f030894483" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say your module is called &amp;ldquo;spam&amp;rdquo; and the module&amp;rsquo;s various natural language translation &lt;code&gt;.mo&lt;/code&gt; files reside in &lt;code&gt;/usr/share/locale&lt;/code&gt; in GNU &lt;strong&gt;gettext&lt;/strong&gt; format. Here&amp;rsquo;s what you would put at the top of your module:</source>
          <target state="translated">モジュールが「スパム」と呼ばれ、モジュールのさまざまな自然言語翻訳 &lt;code&gt;.mo&lt;/code&gt; ファイルがGNU &lt;strong&gt;gettext&lt;/strong&gt;形式で &lt;code&gt;/usr/share/locale&lt;/code&gt; にあるとします。モジュールの上部に配置するものは次のとおりです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04863fa8b8b6c7cb4b82a58c35cc416cac590f6a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a very basic configuration file that looks like this:</source>
          <target state="translated">次のような非常に基本的な構成ファイルを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="5ecd68b4c43876be669cbe3592b08b9f4742b506" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. We create two instances of &lt;code&gt;cell&lt;/code&gt;, and let them point to each other, and finally follow the pointer chain a few times:</source>
          <target state="translated">試してみよう。 &lt;code&gt;cell&lt;/code&gt; の 2つのインスタンスを作成し、それらを互いにポイントさせて、最後にポインターチェーンを数回たどります。</target>
        </trans-unit>
        <trans-unit id="22165bce4fbe52f349dc3381930ba2ac63b3a5cb" translate="yes" xml:space="preserve">
          <source>Letting your object adapt itself</source>
          <target state="translated">オブジェクトを適応させる</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="6460ec4ddfef711100217c8f9826fd70701f2f56" translate="yes" xml:space="preserve">
          <source>Level 2 halted</source>
          <target state="translated">レベル2停止</target>
        </trans-unit>
        <trans-unit id="60e40c81795763b2a8e72d44e5ad0f9199edc4bb" translate="yes" xml:space="preserve">
          <source>Level 2 not synchronized</source>
          <target state="translated">レベル2が同期していない</target>
        </trans-unit>
        <trans-unit id="345040e0c10ed0376f2b7122fc4d53bc220369de" translate="yes" xml:space="preserve">
          <source>Level 3 halted</source>
          <target state="translated">レベル3停止</target>
        </trans-unit>
        <trans-unit id="d42164449cc05890457a5e7c44effb895c6def14" translate="yes" xml:space="preserve">
          <source>Level 3 reset</source>
          <target state="translated">レベル3リセット</target>
        </trans-unit>
        <trans-unit id="d7e796b80646b51566de3ce1d4e141f4e53a4ec8" translate="yes" xml:space="preserve">
          <source>Levels are internally integers (as they need to be compared in the logging logic). This function is used to convert between an integer level and the level name displayed in the formatted log output by means of the &lt;code&gt;%(levelname)s&lt;/code&gt; format specifier (see &lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord attributes&lt;/a&gt;).</source>
          <target state="translated">レベルは内部的には整数です（ロギングロジックで比較する必要があるため）。この関数は、 &lt;code&gt;%(levelname)s&lt;/code&gt; 形式指定子を使用して、整数レベルとフォーマットされたログ出力に表示されるレベル名の間で変換するために使用されます（&lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord属性を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2d6380feb8c38ce90806082088bb8c2c55e37b83" translate="yes" xml:space="preserve">
          <source>Lexical scanner for Python source code.</source>
          <target state="translated">Pythonソースコード用のレキシカルスキャナ。</target>
        </trans-unit>
        <trans-unit id="392b455093b9fc95f72712c44846e250fe613928" translate="yes" xml:space="preserve">
          <source>LibreSSL &amp;gt;= 2.6.1 no longer supports NPN. The methods &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt;&lt;/a&gt; are not available.</source>
          <target state="translated">LibreSSL&amp;gt; = 2.6.1はNPNをサポートしなくなりました。&lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt; &lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt; &lt;/a&gt;メソッドは使用できません。</target>
        </trans-unit>
        <trans-unit id="091cd70ef41f8240bd7c6a2fadb08e949b8160af" translate="yes" xml:space="preserve">
          <source>LibreSSL is a fork of OpenSSL 1.0.1. The ssl module has limited support for LibreSSL. Some features are not available when the ssl module is compiled with LibreSSL.</source>
          <target state="translated">LibreSSL は OpenSSL 1.0.1 のフォークです。ssl モジュールは LibreSSL のサポートが限られています。ssl モジュールが LibreSSL でコンパイルされている場合、一部の機能は利用できません。</target>
        </trans-unit>
        <trans-unit id="8509e2f82d3801c911e6a35b8391debf72767e0a" translate="yes" xml:space="preserve">
          <source>LibreSSL support</source>
          <target state="translated">FreeSSL サポート</target>
        </trans-unit>
        <trans-unit id="d0454f8c64fa3e4e75abdf2e0c77b01474c4f39a" translate="yes" xml:space="preserve">
          <source>Licensed under the PSF License.</source>
          <target state="translated">PSFライセンスを取得。</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="b7f9700444d85258af9741b1a784bb114500ccb1" translate="yes" xml:space="preserve">
          <source>Lifts second and third stack item one position up, moves top down to position three.</source>
          <target state="translated">2 番目と 3 番目のスタックアイテムを 1 つ上の位置に持ち上げ、トップダウンして 3 番目の位置に移動します。</target>
        </trans-unit>
        <trans-unit id="128b57bf19d7494cf2406f4c9ad03a774a89db95" translate="yes" xml:space="preserve">
          <source>Lifts second, third and forth stack items one position up, moves top down to position four.</source>
          <target state="translated">2 番目、3 番目、4 番目のスタックアイテムを 1 つ上の位置に持ち上げ、トップダウンして 4 番目の位置に移動します。</target>
        </trans-unit>
        <trans-unit id="769c851ff34e416533a93e1c54c044431fc336ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt;, except that the header of the audio file is not updated.</source>
          <target state="translated">オーディオファイルのヘッダーが更新されないことを除いて、&lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; &lt;/a&gt;と同様です。</target>
        </trans-unit>
        <trans-unit id="5fba8ee1e116abbedfbf12ff32b815bda67a39bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence is not found.</source>
          <target state="translated">&lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;に似ていますが、サブシーケンスが見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="18e9f70e3e0c024db75f15d3f7632da5d6ffb708" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#bytes.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;em&gt;サブ&lt;/em&gt;シーケンス&lt;em&gt;sub&lt;/em&gt;が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を送出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4630498d706bd9a3292cd5d7227b98132b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#curses.window.erase&quot;&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/a&gt;, but also cause the whole window to be repainted upon next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.erase&quot;&gt; &lt;code&gt;erase()&lt;/code&gt; &lt;/a&gt;と同様ですが、次に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出したときにウィンドウ全体が再描画されます。</target>
        </trans-unit>
        <trans-unit id="b526a2ea540c4c9b052eb050e52db56633e28e9c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity can be set with the &lt;code&gt;-v&lt;/code&gt; command-line switch or with the optional keyword argument &lt;em&gt;verbose&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;の詳細度は &lt;code&gt;-v&lt;/code&gt; コマンドラインスイッチまたはオプションのキーワード引数&lt;em&gt;verbose&lt;/em&gt;で設定できます。</target>
        </trans-unit>
        <trans-unit id="c342450b7fbacddc0eb255ffe6a69e6f64b16e54" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, if a combination of &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; members results in no flags being set, the boolean evaluation is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;メンバーの組み合わせによってフラグが設定されない場合、ブール値の評価は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="a363ed4c02cbe749a71b8d13e6dc4264d840b400" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;, but returns a tuple of the data connection and the expected size of the data. If the expected size could not be computed, &lt;code&gt;None&lt;/code&gt; will be returned as the expected size. &lt;em&gt;cmd&lt;/em&gt; and &lt;em&gt;rest&lt;/em&gt; means the same thing as in &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;と似ていますが、データ接続のタプルと予想されるデータのサイズを返します。予想サイズを計算できなかった場合、予想サイズとして &lt;code&gt;None&lt;/code&gt; が返されます。&lt;em&gt;cmd&lt;/em&gt;と&lt;em&gt;rest&lt;/em&gt;は&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="fed2080b9205761ae5ca1cb77a5a3913089b3943" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but consider plural forms. If a translation is found, apply the plural formula to &lt;em&gt;n&lt;/em&gt;, and return the resulting message (some languages have more than two plural forms). If no translation is found, return &lt;em&gt;singular&lt;/em&gt; if &lt;em&gt;n&lt;/em&gt; is 1; return &lt;em&gt;plural&lt;/em&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;に似ていますが、複数形を検討してください。翻訳が見つかった場合、&lt;em&gt;n&lt;/em&gt;に複数の公式を適用し、結果のメッセージを返します（一部の言語には複数の複数形があります）。翻訳が見つからない場合、&lt;em&gt;n&lt;/em&gt;が1であれば&lt;em&gt;単数を&lt;/em&gt;返します。それ以外の場合は&lt;em&gt;複数を&lt;/em&gt;返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58099ee55f530af16bd98fd8c56efead48c30f96" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;に似ていますが、指定された&lt;em&gt;ドメイン&lt;/em&gt;でメッセージを検索します。</target>
        </trans-unit>
        <trans-unit id="0cc1846db165a1893d5de2a35351debcae960593" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;が、指定されたメッセージを探し&lt;em&gt;ドメイン&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="68113eaaf87f00b3b1aab0ac0cfe07087577d9b5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.hash.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hashlib.hash.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む2倍の長さの文字列オブジェクトとして返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="f6c8b81ebf600e9993da2ea7be87e2a91a7b9a0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.shake.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hashlib.shake.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む2倍の長さの文字列オブジェクトとして返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="459945a9891e20c8dab70ede4f27fdf482e29c75" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hmac.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string twice the length containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hmac.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む長さの2倍の文字列として返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d34ceda7fd93b02c772dcafa4d07c2be2558ca4c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, multiple reads may be issued to the underlying raw stream, unless the latter is interactive.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; の&lt;/a&gt;ように、後者がインタラクティブでない限り、基になるrawストリームに対して複数の読み取りが発行される場合があります。</target>
        </trans-unit>
        <trans-unit id="d6711f9956856aade671cd7cf16a76fd76e19023" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.chmod&quot;&gt;&lt;code&gt;Path.chmod()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, the symbolic link&amp;rsquo;s mode is changed rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.chmod&quot;&gt; &lt;code&gt;Path.chmod()&lt;/code&gt; &lt;/a&gt;と似ていますが、パスがシンボリックリンクを指している場合、シンボリックリンクのモードは、ターゲットのモードではなく変更されます。</target>
        </trans-unit>
        <trans-unit id="c80f0d44ded10dcee28c34bbfff9e27a30074634" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, return the symbolic link&amp;rsquo;s information rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.stat&quot;&gt; &lt;code&gt;Path.stat()&lt;/code&gt; &lt;/a&gt;と似ていますが、パスがシンボリックリンクを指している場合、ターゲットではなくシンボリックリンクの情報を返します。</target>
        </trans-unit>
        <trans-unit id="76a03d0f714bbde9a8aae83d5eb4974b1956cc4b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;CHECKED_HASH&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content. However, Python will at runtime assume the &lt;code&gt;.pyc&lt;/code&gt; file is up to date and not validate the &lt;code&gt;.pyc&lt;/code&gt; against the source file at all.</source>
          <target state="translated">&lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;CHECKED_HASH&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;.pyc&lt;/code&gt; ファイルにはソースファイルコンテンツのハッシュが含まれます。しかし、実行時にPythonの意志が前提と &lt;code&gt;.pyc&lt;/code&gt; ファイルが最新ではなく、検証され &lt;code&gt;.pyc&lt;/code&gt; ファイルを、すべてのソースファイルに対して。</target>
        </trans-unit>
        <trans-unit id="a425706908190a3e1f79c502de35dede3098f552" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding decoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#quopri.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;と同様ですが、ソース&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を受け入れ、対応するデコードされた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="54098cdee562ba9f230b42f10f40d70cf45edbf7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. By default, it sends a &lt;code&gt;False&lt;/code&gt; value to &lt;em&gt;quotetabs&lt;/em&gt; parameter of the &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;と同様ですが、ソース&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を受け入れ、対応するエンコードされた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を返します。デフォルトでは、&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;関数の&lt;em&gt;quotetabs&lt;/em&gt;パラメーターに &lt;code&gt;False&lt;/code&gt; 値を送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b01d2bf404c98230b8ffd33055a42cf110e8594d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#signal.sigwaitinfo&quot;&gt;&lt;code&gt;sigwaitinfo()&lt;/code&gt;&lt;/a&gt;, but takes an additional &lt;em&gt;timeout&lt;/em&gt; argument specifying a timeout. If &lt;em&gt;timeout&lt;/em&gt; is specified as &lt;code&gt;0&lt;/code&gt;, a poll is performed. Returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if a timeout occurs.</source>
          <target state="translated">&lt;a href=&quot;#signal.sigwaitinfo&quot;&gt; &lt;code&gt;sigwaitinfo()&lt;/code&gt; &lt;/a&gt;に似ていますが、&lt;em&gt;タイムアウトを&lt;/em&gt;指定する追加の&lt;em&gt;タイムアウト&lt;/em&gt;引数を取ります。場合は&lt;em&gt;、タイムアウトを&lt;/em&gt;として指定されている &lt;code&gt;0&lt;/code&gt; 、投票が行われます。タイムアウトが発生した場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="9b428dc227aecdac34a941af1b4c9e314010ceaa" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; except it is the lowest supported version or &lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt;&lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;SSLContext.maximum_version&lt;/code&gt; &lt;/a&gt;それは最低のサポートされているバージョンまたはある除い&lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt; &lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="034005e547ceeaab4b84301bb039ff5010f896a4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring is not found.</source>
          <target state="translated">&lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;に似ていますが、部分文字列が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="fffbdca90984707f8b141e5ee4a5c9e6f40bdf60" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#str.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; に&lt;/a&gt;似ていますが、部分文字列&lt;em&gt;sub&lt;/em&gt;が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を送出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2116b8fb57e3a35c142acd106bb28c5cbe992968" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, except that if placeholders are missing from &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt;, instead of raising a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception, the original placeholder will appear in the resulting string intact. Also, unlike with &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, any other appearances of the &lt;code&gt;$&lt;/code&gt; will simply return &lt;code&gt;$&lt;/code&gt; instead of raising &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;replace &lt;/em&gt;&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;em&gt;マッピング&lt;/em&gt;と&lt;em&gt;kwds&lt;/em&gt;にプレースホルダーがない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外を発生させる代わりに、元のプレースホルダーが結果の文字列にそのまま表示されます。また、とは異なり&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;のいずれかの他の出演 &lt;code&gt;$&lt;/code&gt; は単純に戻ります &lt;code&gt;$&lt;/code&gt; を高めるのではなく、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff608d7698e75a8850f2bbedb753f4de4a82170d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt;&lt;code&gt;getstatusoutput()&lt;/code&gt;&lt;/a&gt;, except the exit code is ignored and the return value is a string containing the command&amp;rsquo;s output. Example:</source>
          <target state="translated">&lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt; &lt;code&gt;getstatusoutput()&lt;/code&gt; &lt;/a&gt;と同様ですが、終了コードは無視され、戻り値はコマンドの出力を含む文字列になります。例：</target>
        </trans-unit>
        <trans-unit id="09325b0b81777f3949622af36b1caae2105c533a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; but converts to local time. If &lt;em&gt;secs&lt;/em&gt; is not provided or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the current time as returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; is used. The dst flag is set to &lt;code&gt;1&lt;/code&gt; when DST applies to the given time.</source>
          <target state="translated">&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; に&lt;/a&gt;似ていますが、現地時間に変換されます。場合&lt;em&gt;秒が&lt;/em&gt;設けられていない、またはされていない&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、によって返される現在時刻&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;使用されます。DSTが指定された時間に適用されると、dstフラグが &lt;code&gt;1&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="e80bfe37b04d21e1316c6e6f6ac9868e0d1c6f93" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;, the &lt;em&gt;readline&lt;/em&gt; argument is a callable returning a single line of input. However, &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt; expects &lt;em&gt;readline&lt;/em&gt; to return a str object rather than bytes.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;と同様に、&lt;em&gt;readline&lt;/em&gt;引数は、1行の入力を返す呼び出し可能オブジェクトです。ただし、&lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;readline&lt;/em&gt;がバイトではなくstrオブジェクトを返すことを期待しています。</target>
        </trans-unit>
        <trans-unit id="1e25dc1f7a41401d6d2742977c0ec0eb4a4dab04" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the string representation of the raised exception. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;と同様ですが、発生した例外の文字列&lt;em&gt;表現で正規表現が&lt;/em&gt;一致するかどうかもテストします。&lt;em&gt;regex&lt;/em&gt;は、正規表現オブジェクトまたは&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;での使用に適した正規表現を含む文字列です。例：</target>
        </trans-unit>
        <trans-unit id="88c91522876cdaf737cb13dc3682f59d6bfc40fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the message of the triggered warning. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt;と同様ですが、トリガーされた警告のメッセージで&lt;em&gt;正規表現が&lt;/em&gt;一致することもテストします。&lt;em&gt;regex&lt;/em&gt;は、正規表現オブジェクトまたは&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;での使用に適した正規表現を含む文字列です。例：</target>
        </trans-unit>
        <trans-unit id="71a6e3160e25bc7af2abbb4914c6e0c300c2d496" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object rather than a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, and does not perform string-to-bytes encoding.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;に似ていますが、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れ、文字列からバイトへのエンコードを実行しません。</target>
        </trans-unit>
        <trans-unit id="33be7d39b7d017d814cc31038c4a163e3894971c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces by plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;と同様ですが、URLに移動するクエリ文字列を作成するときにHTMLフォームの値を引用するために必要なように、スペースをプラス記号で置き換えます。&lt;em&gt;safeに&lt;/em&gt;含まれていない限り、元の文字列のプラス記号はエスケープされ&lt;em&gt;ます&lt;/em&gt;。また、 &lt;code&gt;'/'&lt;/code&gt; の&lt;em&gt;安全な&lt;/em&gt;デフォルトもありません。</target>
        </trans-unit>
        <trans-unit id="775c6c98d7b915a29eecf32e7d3a27905fc4598c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs by spaces, as required for unquoting HTML form values.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;と同様ですが、HTMLフォーム値の引用を解除するために必要に応じて、プラス記号をスペースで置き換えます。</target>
        </trans-unit>
        <trans-unit id="f1cf5e7750804a8602426bc1702f1b0873f828cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; defines a set of events that are generated by an analysis of socket conditions after a &lt;code&gt;select()&lt;/code&gt; call. Once the polling loop has been started the &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s methods are called by the event-processing framework with no action on the part of the programmer.</source>
          <target state="translated">&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;select()&lt;/code&gt; 呼び出し後のソケット条件の分析によって生成される一連のイベントを定義します。&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;が開始されると、async_chatオブジェクトのメソッドがイベント処理フレームワークによって呼び出され、プログラマーは何もする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ccba539e91e292f5838b503000ab1e741be5ca28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; except that the elements of the &lt;em&gt;iterable&lt;/em&gt; are expected to be iterables that are unpacked as arguments.</source>
          <target state="translated">&lt;em&gt;イテラブル&lt;/em&gt;の要素が引数としてアンパックされたイテラブルであることが期待されることを除いて、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;と同様です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="779b5a441a3fe2beee9d18262802a4b2251c9ae8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, this function must be invoked in the main thread.</source>
          <target state="translated">&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;と同様に、この関数はメインスレッドで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4567b33a2aaefbaca856883085dae36ad2796c3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;connect(address)&lt;/code&gt;, but return an error indicator instead of raising an exception for errors returned by the C-level &lt;code&gt;connect()&lt;/code&gt; call (other problems, such as &amp;ldquo;host not found,&amp;rdquo; can still raise exceptions). The error indicator is &lt;code&gt;0&lt;/code&gt; if the operation succeeded, otherwise the value of the &lt;code&gt;errno&lt;/code&gt; variable. This is useful to support, for example, asynchronous connects.</source>
          <target state="translated">&lt;code&gt;connect(address)&lt;/code&gt; に似ていますが、Cレベルの &lt;code&gt;connect()&lt;/code&gt; 呼び出しによって返されたエラーに対して例外を発生させる代わりにエラーインジケーターを返します（「ホストが見つかりません」などの他の問題でも例外が発生する可能性があります）。操作が成功した場合、エラーインジケータは &lt;code&gt;0&lt;/code&gt; です。それ以外の場合は、 &lt;code&gt;errno&lt;/code&gt; 変数の値です。これは、非同期接続などをサポートするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="6e4099930d90cd8e644b9d1a35ce1781b7e55be5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;formatdate&lt;/code&gt;, but the input is a &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. If it is a naive datetime, it is assumed to be &amp;ldquo;UTC with no information about the source timezone&amp;rdquo;, and the conventional &lt;code&gt;-0000&lt;/code&gt; is used for the timezone. If it is an aware &lt;code&gt;datetime&lt;/code&gt;, then the numeric timezone offset is used. If it is an aware timezone with offset zero, then &lt;em&gt;usegmt&lt;/em&gt; may be set to &lt;code&gt;True&lt;/code&gt;, in which case the string &lt;code&gt;GMT&lt;/code&gt; is used instead of the numeric timezone offset. This provides a way to generate standards conformant HTTP date headers.</source>
          <target state="translated">同じように &lt;code&gt;formatdate&lt;/code&gt; が、入力された&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス。ナイーブな日時の場合、「ソースタイムゾーンに関する情報のないUTC」と &lt;code&gt;-0000&lt;/code&gt; 、タイムゾーンには従来の-0000が使用されます。認識されている &lt;code&gt;datetime&lt;/code&gt; の場合、数値のタイムゾーンオフセットが使用されます。オフセットがゼロの対応タイムゾーンの場合、&lt;em&gt;usegmt&lt;/em&gt;を &lt;code&gt;True&lt;/code&gt; に設定できます。この場合、数値のタイムゾーンオフセットの代わりに文字列 &lt;code&gt;GMT&lt;/code&gt; が使用されます。これは、標準に準拠したHTTP日付ヘッダーを生成する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="e9a1056335b6d3c9144b41d21fddbcb8e38867e3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;max(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">&lt;code&gt;max(self, other)&lt;/code&gt; と同様ですが、コンテキストの丸めルールが返される前に適用され、 &lt;code&gt;NaN&lt;/code&gt; 値が通知されるか無視されるか（コンテキストと、それらが通知か非通知かによって異なります）。</target>
        </trans-unit>
        <trans-unit id="117f781381f825f29b7d7c7a130438f9e5b689da" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;min(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">&lt;code&gt;min(self, other)&lt;/code&gt; 似ていますが、コンテキストの丸めルールが返される前に適用され、 &lt;code&gt;NaN&lt;/code&gt; 値が通知されるか無視されるか（コンテキストと、それらが通知か非通知かによって異なります）。</target>
        </trans-unit>
        <trans-unit id="7679621dea96b42673a5ec004c0be808374679d1" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes the current Gregorian calendar extended in both directions; like a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes there are exactly 3600*24 seconds in every day.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;オブジェクトと同様に、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;は現在のグレゴリオ暦を両方向に拡張したものと見なします。&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトと同様に、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;は毎日正確に3600 * 24秒であると想定しています。</target>
        </trans-unit>
        <trans-unit id="10db946781916518b11ce546b2af0588ae19c249" translate="yes" xml:space="preserve">
          <source>Like all decorators, it is also possible to call &lt;code&gt;staticmethod&lt;/code&gt; as a regular function and do something with its result. This is needed in some cases where you need a reference to a function from a class body and you want to avoid the automatic transformation to instance method. For these cases, use this idiom:</source>
          <target state="translated">すべてのデコレータと同様に、 &lt;code&gt;staticmethod&lt;/code&gt; を通常の関数として呼び出し、その結果を使用することもできます。これは、クラス本体から関数への参照が必要で、インスタンスメソッドへの自動変換を避けたい場合に必要です。これらのケースでは、次のイディオムを使用します。</target>
        </trans-unit>
        <trans-unit id="870a5dd7d5496171ef6a3e2aaab1057264f79b83" translate="yes" xml:space="preserve">
          <source>Like function objects, bound method objects support getting arbitrary attributes. However, since method attributes are actually stored on the underlying function object (&lt;code&gt;meth.__func__&lt;/code&gt;), setting method attributes on bound methods is disallowed. Attempting to set an attribute on a method results in an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; being raised. In order to set a method attribute, you need to explicitly set it on the underlying function object:</source>
          <target state="translated">関数オブジェクトと同様に、バインドされたメソッドオブジェクトは任意の属性の取得をサポートします。ただし、メソッド属性は実際には基本となる関数オブジェクト（ &lt;code&gt;meth.__func__&lt;/code&gt; ）に格納されるため、バインドされたメソッドにメソッド属性を設定することはできません。メソッドに属性を設定しようとすると、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生します。メソッド属性を設定するには、基礎となる関数オブジェクトに明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1583a91516920ea6d292abedef0a0d4133d1f95d" translate="yes" xml:space="preserve">
          <source>Like other collections, sets support &lt;code&gt;x in set&lt;/code&gt;, &lt;code&gt;len(set)&lt;/code&gt;, and &lt;code&gt;for x in
set&lt;/code&gt;. Being an unordered collection, sets do not record element position or order of insertion. Accordingly, sets do not support indexing, slicing, or other sequence-like behavior.</source>
          <target state="translated">他のコレクションと同様に、セットは &lt;code&gt;x in set&lt;/code&gt; 、 &lt;code&gt;len(set)&lt;/code&gt; 、および &lt;code&gt;for x in set&lt;/code&gt; setをサポートします。順序のないコレクションであるため、セットは要素の位置や挿入の順序を記録しません。したがって、セットは、インデックス付け、スライス、またはその他のシーケンスのような動作をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="619848ebfcfc900a4a75f4e75c5ae31dd1e46688" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#pdbcommand-p&quot;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/a&gt; command, except the value of the expression is pretty-printed using the &lt;a href=&quot;pprint#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#pdbcommand-p&quot;&gt; &lt;code&gt;p&lt;/code&gt; &lt;/a&gt;コマンドと同様ですが、式の値は&lt;a href=&quot;pprint#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;モジュールを使用してきれいに出力されます。</target>
        </trans-unit>
        <trans-unit id="7f637d2b0e3d0bc308b91dbb540751ed9989d02f" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; function automatically assigns its target to the current thread.</source>
          <target state="translated">同様に、&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;関数はターゲットを現在のスレッドに自動的に割り当てます。</target>
        </trans-unit>
        <trans-unit id="16f0b939506acc96b15c52be3f403f4c577d5555" translate="yes" xml:space="preserve">
          <source>Limit on the number of characters in the representation of the string. Note that the &amp;ldquo;normal&amp;rdquo; representation of the string is used as the character source: if escape sequences are needed in the representation, these may be mangled when the representation is shortened. The default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">文字列の表現における文字数の制限。文字列の「通常の」表現が文字ソースとして使用されていることに注意してください。表現でエスケープシーケンスが必要な場合、表現が短くなるとエスケープシーケンスが破損する場合があります。デフォルトは &lt;code&gt;30&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="e0da5f32d1b078b4674313813ea6b1be4783c1f3" translate="yes" xml:space="preserve">
          <source>Limits on the number of entries represented for the named object type. The default is &lt;code&gt;4&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt;&lt;code&gt;maxdict&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;5&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt;&lt;code&gt;maxarray&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;6&lt;/code&gt; for the others.</source>
          <target state="translated">名前付きオブジェクトタイプで表されるエントリ数の制限。デフォルトは &lt;code&gt;4&lt;/code&gt; 用&lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt; &lt;code&gt;maxdict&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;5&lt;/code&gt; ため&lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt; &lt;code&gt;maxarray&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;6&lt;/code&gt; 他人のために。</target>
        </trans-unit>
        <trans-unit id="5cba8dfc960db4abee81cde524f36a4c3a10d9d1" translate="yes" xml:space="preserve">
          <source>Line 5 and 6 correspond to the arguments of the method &lt;code&gt;Screen.screensize()&lt;/code&gt;.</source>
          <target state="translated">5行目と6行目は、 &lt;code&gt;Screen.screensize()&lt;/code&gt; メソッドの引数に対応しています。</target>
        </trans-unit>
        <trans-unit id="2abd199292d800fa3a80bd3c37bdfccc94f580e6" translate="yes" xml:space="preserve">
          <source>Line Feed</source>
          <target state="translated">ラインフィード</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">ラインセパレータ</target>
        </trans-unit>
        <trans-unit id="2e24c77fd923a41a63ac5dc6de543f323222cd3c" translate="yes" xml:space="preserve">
          <source>Line Tabulation</source>
          <target state="translated">ライン集計</target>
        </trans-unit>
        <trans-unit id="b6aab80f18f5fed0b9153b69b8095064354fb00e" translate="yes" xml:space="preserve">
          <source>Line buffer</source>
          <target state="translated">ラインバッファ</target>
        </trans-unit>
        <trans-unit id="4f23e2d073d67acea8f123b42f84af035e27248d" translate="yes" xml:space="preserve">
          <source>Line feed</source>
          <target state="translated">ラインフィード</target>
        </trans-unit>
        <trans-unit id="562aae5d9e971e10b07ca699f4f04a970c307d4c" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;) of the filter. If &lt;em&gt;lineno&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the filter matches any line number.</source>
          <target state="translated">フィルターの行番号（ &lt;code&gt;int&lt;/code&gt; ）。場合&lt;em&gt;LINENOは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、フィルタは、任意の行番号と一致します。</target>
        </trans-unit>
        <trans-unit id="aeb38dd24a3a71da272f1f779d0387791de3d81e" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">行番号（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2ff2293358a32428ec942d4555635cc880cd4d12" translate="yes" xml:space="preserve">
          <source>Line number at which an error occurred.</source>
          <target state="translated">エラーが発生した行番号。</target>
        </trans-unit>
        <trans-unit id="b4da991f94a24c99137fffe4424265997efd6ed0" translate="yes" xml:space="preserve">
          <source>Line number on which the error was detected. The first line is numbered &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">エラーが検出された行番号。最初の行の番号は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="69f2575cae166f7e141a5f9bfed26ae7b3477899" translate="yes" xml:space="preserve">
          <source>Line-endings are implemented using the codec&amp;rsquo;s &lt;a href=&quot;#codecs.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method and are included in the list entries if &lt;em&gt;keepends&lt;/em&gt; is true.</source>
          <target state="translated">&lt;em&gt;行末&lt;/em&gt;はコーデックの&lt;a href=&quot;#codecs.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;メソッドを使用して実装され、&lt;em&gt;keepends&lt;/em&gt;がtrueの場合はリストエントリに含まれます。</target>
        </trans-unit>
        <trans-unit id="302f1117893400c611682ce09d6a46e296f097b2" translate="yes" xml:space="preserve">
          <source>Lines are returned with any newlines intact, which means that the last line in a file may not have one.</source>
          <target state="translated">行は、ファイルの最後の行に改行がない場合があることを意味します。</target>
        </trans-unit>
        <trans-unit id="cf75ffeff8d12fdd995dd6674c85fc5ee7a38554" translate="yes" xml:space="preserve">
          <source>Lines are separated by calling &lt;code&gt;text.splitlines(True)&lt;/code&gt;.</source>
          <target state="translated">行は、 &lt;code&gt;text.splitlines(True)&lt;/code&gt; を呼び出すことによって区切られます。</target>
        </trans-unit>
        <trans-unit id="b6185854ec82c5419438640c3884931bbe6dbd4b" translate="yes" xml:space="preserve">
          <source>Lines beginning with &amp;lsquo;&lt;code&gt;?&lt;/code&gt;&amp;rsquo; attempt to guide the eye to intraline differences, and were not present in either input sequence. These lines can be confusing if the sequences contain tab characters.</source>
          <target state="translated">' &lt;code&gt;?&lt;/code&gt; で始まる行 'イントララインの違いに目を向けようとしましたが、どちらの入力シーケンスにも存在しませんでした。シーケンスにタブ文字が含まれている場合、これらの行は混乱する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1119cda9075f6ea9b6d77bc2c527e01b0505ac69" translate="yes" xml:space="preserve">
          <source>Lines containing only whitespace are ignored in the input and normalized to a single newline character in the output.</source>
          <target state="translated">空白のみを含む行は入力では無視され、出力では改行 1 文字に正規化されます。</target>
        </trans-unit>
        <trans-unit id="8f51211d5882b7b1d7f5bacb8c562304994eec22" translate="yes" xml:space="preserve">
          <source>Link has been severed</source>
          <target state="translated">リンクが切れました</target>
        </trans-unit>
        <trans-unit id="2e5686329f75b06ffaef20d4254ffaa821209705" translate="yes" xml:space="preserve">
          <source>Link number out of range</source>
          <target state="translated">リンク番号が範囲外</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="0a2eda05e77dfe3f8ca694538c7808e144972c9f" translate="yes" xml:space="preserve">
          <source>Linux extended attributes</source>
          <target state="translated">リナックス拡張属性</target>
        </trans-unit>
        <trans-unit id="65238285b798b8c333fd4b7618bf5f86a3d5d9d0" translate="yes" xml:space="preserve">
          <source>Linux-only support for TIPC is available using the &lt;code&gt;AF_TIPC&lt;/code&gt; address family. TIPC is an open, non-IP based networked protocol designed for use in clustered computer environments. Addresses are represented by a tuple, and the fields depend on the address type. The general tuple form is &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt;, where:</source>
          <target state="translated">LinuxのみのTIPCのサポートは、 &lt;code&gt;AF_TIPC&lt;/code&gt; アドレスファミリを使用して利用できます。 TIPCは、クラスター化されたコンピューター環境で使用するために設計された、IPベースではないオープンなネットワークプロトコルです。アドレスはタプルで表され、フィールドはアドレスのタイプによって異なります。一般的なタプルの形式は &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt; 。ここで、</target>
        </trans-unit>
        <trans-unit id="6756f8fa45c66ce66565b44aeff373a153af3d17" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">&lt;code&gt;MLSD&lt;/code&gt; コマンド（&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;）を使用して、標準化された形式でディレクトリを一覧表示し&lt;strong&gt;ます&lt;/strong&gt;。場合は&lt;em&gt;、パスが&lt;/em&gt;省略されている現在のディレクトリが仮定されます。&lt;em&gt;facts&lt;/em&gt;は、必要な情報のタイプを表す文字列のリストです（例： &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ）。パスで見つかったすべてのファイルに対して2つの要素のタプルを生成するジェネレーターオブジェクトを返します。最初の要素はファイル名、2番目の要素はファイル名に関する事実を含む辞書です。このディクショナリのコンテンツは、&lt;em&gt;facts&lt;/em&gt;引数によって制限される可能性がありますが、サーバーは、要求されたすべてのファクトを返すことが保証されていません。</target>
        </trans-unit>
        <trans-unit id="12fba910c861b6473d219e30cab4ab0ddbb8c795" translate="yes" xml:space="preserve">
          <source>List all source code for the current function or frame. Interesting lines are marked as for &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の関数またはフレームのすべてのソースコードをリストします。興味深い行は&lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;ようにマークされます。</target>
        </trans-unit>
        <trans-unit id="d70266b0617125a334eb682496c42690e2f3d04c" translate="yes" xml:space="preserve">
          <source>List files in a tarfile.</source>
          <target state="translated">tarファイル内のファイルを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="5c622661583046960e0bb8731c1346ad7495dcc3" translate="yes" xml:space="preserve">
          <source>List files in a zipfile.</source>
          <target state="translated">zipファイル内のファイルを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="fa6a27ccedf9df11c9e8acab0ae9e0767d6f65fc" translate="yes" xml:space="preserve">
          <source>List mailbox names in &lt;em&gt;directory&lt;/em&gt; matching &lt;em&gt;pattern&lt;/em&gt;. &lt;em&gt;directory&lt;/em&gt; defaults to the top-level mail folder, and &lt;em&gt;pattern&lt;/em&gt; defaults to match anything. Returned data contains a list of &lt;code&gt;LIST&lt;/code&gt; responses.</source>
          <target state="translated">&lt;em&gt;ディレクトリ&lt;/em&gt;一致&lt;em&gt;パターンの&lt;/em&gt;メールボックス名を一覧表示します。&lt;em&gt;ディレクトリは&lt;/em&gt;デフォルトで最上位のメールフォルダになり、&lt;em&gt;パターンは&lt;/em&gt;デフォルトですべてに一致します。返されるデータには、 &lt;code&gt;LIST&lt;/code&gt; 応答のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="800331fecdd25e9674ace0cfb84a1e1381cf18b8" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; objects the server is listening on.</source>
          <target state="translated">サーバーがリッスンしている&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="4bbdd0f3d0f330c45f8c92c42b67ed3353e81dd6" translate="yes" xml:space="preserve">
          <source>List of Unix shell-style wildcard test name patterns that test methods have to match to be included in test suites (see &lt;code&gt;-v&lt;/code&gt; option).</source>
          <target state="translated">テストスイートに含めるためにテストメソッドが一致する必要があるUnixシェルスタイルのワイルドカードテスト名パターンのリスト（ &lt;code&gt;-v&lt;/code&gt; オプションを参照）。</target>
        </trans-unit>
        <trans-unit id="57db87f824923c6a6e85c41dda54ae743e739bdc" translate="yes" xml:space="preserve">
          <source>List of all features.</source>
          <target state="translated">全機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="da2bc44930e06125e26f0c874633811a8e00c51a" translate="yes" xml:space="preserve">
          <source>List of all known property names.</source>
          <target state="translated">既知の全物件名のリスト。</target>
        </trans-unit>
        <trans-unit id="faa04fad93c99ece21b96a05b9ce1aa911971898" translate="yes" xml:space="preserve">
          <source>List of directories ignored by &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">デフォルトで&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;によって無視されるディレクトリのリスト。</target>
        </trans-unit>
        <trans-unit id="c9d8bdccc79a7bea28f18186c6779f053049d3e4" translate="yes" xml:space="preserve">
          <source>List of modes (most common values) of discrete or nomimal data.</source>
          <target state="translated">離散または公称データのモード(最も一般的な値)のリスト。</target>
        </trans-unit>
        <trans-unit id="2a6187ce53594c8b41f9b2648356dcd783d1eb99" translate="yes" xml:space="preserve">
          <source>List of strings for where to find submodules, if a package (&lt;code&gt;None&lt;/code&gt; otherwise).</source>
          <target state="translated">パッケージの場合、サブモジュールを検索する場所の文字列のリスト（それ以外の場合は &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f7e2b9e05ac716cd69cc94c5137d7e7daf29a300" translate="yes" xml:space="preserve">
          <source>List of supported TLS channel binding types. Strings in this list can be used as arguments to &lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt;&lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サポートされるTLSチャネルバインディングタイプのリスト。このリストの文字&lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt; &lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt; &lt;/a&gt;、SSLSocket.get_channel_binding（）の引数として使用できます。</target>
        </trans-unit>
        <trans-unit id="cfd0c4da7e055fb85f316a12860955e2e611d96f" translate="yes" xml:space="preserve">
          <source>List of type map file names commonly installed. These files are typically named &lt;code&gt;mime.types&lt;/code&gt; and are installed in different locations by different packages.</source>
          <target state="translated">一般的にインストールされるタイプマップファイル名のリスト。これらのファイルは通常、 &lt;code&gt;mime.types&lt;/code&gt; という名前で、さまざまなパッケージによってさまざまな場所にインストールされます。</target>
        </trans-unit>
        <trans-unit id="252590ef4c3c27b7d91456da231c614540d98ed0" translate="yes" xml:space="preserve">
          <source>List source code for the current file. Without arguments, list 11 lines around the current line or continue the previous listing. With &lt;code&gt;.&lt;/code&gt; as argument, list 11 lines around the current line. With one argument, list 11 lines around at that line. With two arguments, list the given range; if the second argument is less than the first, it is interpreted as a count.</source>
          <target state="translated">現在のファイルのソースコードをリストします。引数なしで、現在の行の周りの11行をリストするか、前のリストを続行します。と &lt;code&gt;.&lt;/code&gt; 引数として、現在の行の周りの11行をリストします。1つの引数で、その行の周りに11行をリストします。2つの引数を使用して、指定された範囲をリストします。2番目の引数が最初の引数より小さい場合、それはカウントとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="b76073e5ceffc46ca02895c2b2a65a33093b7119" translate="yes" xml:space="preserve">
          <source>List subscribed mailbox names in directory matching pattern. &lt;em&gt;directory&lt;/em&gt; defaults to the top level directory and &lt;em&gt;pattern&lt;/em&gt; defaults to match any mailbox. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">サブスクライブしたメールボックス名をディレクトリマッチングパターンにリストします。&lt;em&gt;ディレクトリは&lt;/em&gt;デフォルトで最上位のディレクトリになり、&lt;em&gt;パターンは&lt;/em&gt;デフォルトですべてのメールボックスに一致します。返されるデータは、メッセージパーツのエンベロープとデータのタプルです。</target>
        </trans-unit>
        <trans-unit id="14794f6edf5dd70913a0dc13a15f54d846587e12" translate="yes" xml:space="preserve">
          <source>Listen for connections made to the socket. The &lt;em&gt;backlog&lt;/em&gt; argument specifies the maximum number of queued connections and should be at least 1; the maximum value is system-dependent (usually 5).</source>
          <target state="translated">ソケットへの接続をリッスンします。&lt;em&gt;バックログ&lt;/em&gt;引数は、キューに入れられた接続の最大数を指定し、少なくとも1であるべきです。最大値はシステムに依存します（通常は5）。</target>
        </trans-unit>
        <trans-unit id="59788472d65c6cb0cdf054e71f5b32c462ddafe5" translate="yes" xml:space="preserve">
          <source>Listener objects have the following read-only properties:</source>
          <target state="translated">リスナー・オブジェクトは、以下の読み取り専用のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="7ca23c866857250c984c4db4e11455584d8f239e" translate="yes" xml:space="preserve">
          <source>Listeners and Clients</source>
          <target state="translated">聞き手とクライアント</target>
        </trans-unit>
        <trans-unit id="98711f268cb1239cc73201ecb0f34f28471e2e46" translate="yes" xml:space="preserve">
          <source>Listing Python source files in this directory tree:</source>
          <target state="translated">このディレクトリツリーにある Python のソースファイルをリストアップします。</target>
        </trans-unit>
        <trans-unit id="78d2fd98237accde24de6f88a6a1f729f5aa17b3" translate="yes" xml:space="preserve">
          <source>Listing subdirectories:</source>
          <target state="translated">サブディレクトリをリストアップします。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="d704786c02f4fcaf4a2e891ff8e18bad45ac10fd" translate="yes" xml:space="preserve">
          <source>Lists are mutable sequences, typically used to store collections of homogeneous items (where the precise degree of similarity will vary by application).</source>
          <target state="translated">リストは突然変異可能な配列で、一般的には同種のアイテムのコレクションを格納するために使用されます(正確な類似度はアプリケーションによって異なります)。</target>
        </trans-unit>
        <trans-unit id="c32ca8f5ba63672fe4a8182a4b217ecc9b9eb14c" translate="yes" xml:space="preserve">
          <source>Lists implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; and &lt;a href=&quot;#typesseq-mutable&quot;&gt;mutable&lt;/a&gt; sequence operations. Lists also provide the following additional method:</source>
          <target state="translated">リストは、すべての&lt;a href=&quot;#typesseq-common&quot;&gt;一般的&lt;/a&gt;で&lt;a href=&quot;#typesseq-mutable&quot;&gt;変更可能な&lt;/a&gt;シーケンス操作を実装しています。リストには、次の追加メソッドも用意されています。</target>
        </trans-unit>
        <trans-unit id="fc6230b3f52b454e7bfc16f6d295dbd8a3f5614d" translate="yes" xml:space="preserve">
          <source>Lists may be constructed in several ways:</source>
          <target state="translated">リストはいくつかの方法で構築することができます。</target>
        </trans-unit>
        <trans-unit id="c4b615b7707ee69f129d6b1543d98fed8ea5861c" translate="yes" xml:space="preserve">
          <source>Lists the names of all open windows; select one to bring it to the foreground (deiconifying it if necessary).</source>
          <target state="translated">開いているすべてのウィンドウの名前をリストアップします。</target>
        </trans-unit>
        <trans-unit id="2b17c112445a7674729b2ac41ba9f07dc0cb6826" translate="yes" xml:space="preserve">
          <source>Load MIME information from a file named &lt;em&gt;filename&lt;/em&gt;. This uses &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; to parse the file.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;からMIME情報をロードし&lt;em&gt;ます&lt;/em&gt;。これは、&lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;を使用してファイルを解析します。</target>
        </trans-unit>
        <trans-unit id="792824da62ac18b629f8e6b4e61bfdae14c5fd20" translate="yes" xml:space="preserve">
          <source>Load MIME type information from an open file &lt;em&gt;fp&lt;/em&gt;. The file must have the format of the standard &lt;code&gt;mime.types&lt;/code&gt; files.</source>
          <target state="translated">開いているファイル&lt;em&gt;fp&lt;/em&gt;からMIMEタイプ情報をロードします。ファイルは、標準の &lt;code&gt;mime.types&lt;/code&gt; ファイルの形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="0fd53188415ccfe79d44d4578cf2a8334a3d823f" translate="yes" xml:space="preserve">
          <source>Load MIME type information from the Windows registry.</source>
          <target state="translated">Windows レジストリから MIME タイプ情報を読み込みます。</target>
        </trans-unit>
        <trans-unit id="d2ab95731c56b9a24f873b538755b0e5ea0d2829" translate="yes" xml:space="preserve">
          <source>Load a plist from a bytes object. See &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">バイトオブジェクトからplistをロードします。キーワード引数の説明については、&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b08eb074a7b195edaa59eaed1cf5e8727d68fee" translate="yes" xml:space="preserve">
          <source>Load a private key and the corresponding certificate. The &lt;em&gt;certfile&lt;/em&gt; string must be the path to a single file in PEM format containing the certificate as well as any number of CA certificates needed to establish the certificate&amp;rsquo;s authenticity. The &lt;em&gt;keyfile&lt;/em&gt; string, if present, must point to a file containing the private key in. Otherwise the private key will be taken from &lt;em&gt;certfile&lt;/em&gt; as well. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information on how the certificate is stored in the &lt;em&gt;certfile&lt;/em&gt;.</source>
          <target state="translated">秘密鍵と対応する証明書をロードします。&lt;em&gt;certfileには&lt;/em&gt;文字列は、証明書などの証明書の信頼性を確立するために必要なCA証明書の任意の数を含むPEM形式の単一ファイルへのパスでなければなりません。&lt;em&gt;キーファイル&lt;/em&gt;の文字列は、存在する場合、秘密鍵を含むファイルを指さなければならない。そうでなければ、秘密鍵から取得されます&lt;em&gt;certfileに&lt;/em&gt;同様。証明書が&lt;em&gt;certfileに&lt;/em&gt;格納される方法の詳細については、&lt;a href=&quot;#ssl-certificates&quot;&gt;証明書&lt;/a&gt;の説明を参照して&lt;em&gt;ください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c0df7eb62baff888bf529433e660c5a399082980" translate="yes" xml:space="preserve">
          <source>Load a readline history file, and append it to the history list. The default filename is &lt;code&gt;~/.history&lt;/code&gt;. This calls &lt;code&gt;read_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">readline履歴ファイルをロードして、履歴リストに追加します。デフォルトのファイル名は &lt;code&gt;~/.history&lt;/code&gt; です。これは、基礎となるライブラリの &lt;code&gt;read_history()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f58087190f63144704a753ee6b80f3cc73b183c" translate="yes" xml:space="preserve">
          <source>Load a set of &amp;ldquo;certification authority&amp;rdquo; (CA) certificates used to validate other peers&amp;rsquo; certificates when &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is other than &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. At least one of &lt;em&gt;cafile&lt;/em&gt; or &lt;em&gt;capath&lt;/em&gt; must be specified.</source>
          <target state="translated">ときに、他のピアの証明書を検証するために使用される「認証局」（CA）証明書のセットロード&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; が&lt;/a&gt;以外で&lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; を&lt;/a&gt;。&lt;em&gt;cafile&lt;/em&gt;または&lt;em&gt;capathの&lt;/em&gt;少なくとも1つを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6425be74b314ff59dd5ac88cdafe03db1813ef76" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from a filesystem path defined when building the OpenSSL library. Unfortunately, there&amp;rsquo;s no easy way to know whether this method succeeds: no error is returned if no certificates are to be found. When the OpenSSL library is provided as part of the operating system, though, it is likely to be configured properly.</source>
          <target state="translated">OpenSSLライブラリの構築時に定義されたファイルシステムパスから、デフォルトの「認証局」（CA）証明書のセットをロードします。残念ながら、このメソッドが成功したかどうかを確認する簡単な方法はありません。証明書が見つからない場合でもエラーは返されません。ただし、OpenSSLライブラリがオペレーティングシステムの一部として提供されている場合は、適切に構成されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="b124fe19c645c5969eaba65d28b149a48d7f5bc8" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from default locations. On Windows it loads CA certs from the &lt;code&gt;CA&lt;/code&gt; and &lt;code&gt;ROOT&lt;/code&gt; system stores. On other systems it calls &lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt;. In the future the method may load CA certificates from other locations, too.</source>
          <target state="translated">デフォルトの場所からデフォルトの「認証局」（CA）証明書のセットをロードします。Windowsでは、 &lt;code&gt;CA&lt;/code&gt; および &lt;code&gt;ROOT&lt;/code&gt; システムストアからCA証明書をロードします。他のシステムでは、&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt; &lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt; を&lt;/a&gt;呼び出します。今後、このメソッドは他の場所からもCA証明書をロードする可能性があります。</target>
        </trans-unit>
        <trans-unit id="792f87e11df87af3501d49b8d196fb913af1e572" translate="yes" xml:space="preserve">
          <source>Load a shared library into the process and return it. This method always returns a new instance of the library.</source>
          <target state="translated">共有ライブラリをプロセスにロードして返します。このメソッドは常にライブラリの新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="c3ea81eee343a4d2df989dde2d08b3714fcbfd81" translate="yes" xml:space="preserve">
          <source>Load a snapshot from a file.</source>
          <target state="translated">ファイルからスナップショットをロードします。</target>
        </trans-unit>
        <trans-unit id="1c7f519dc3373f6a0d8fc97719f2948be78a3852" translate="yes" xml:space="preserve">
          <source>Load configuration from any object that provides a dict-like &lt;code&gt;items()&lt;/code&gt; method. Keys are section names, values are dictionaries with keys and values that should be present in the section. If the used dictionary type preserves order, sections and their keys will be added in order. Values are automatically converted to strings.</source>
          <target state="translated">dictのような &lt;code&gt;items()&lt;/code&gt; メソッドを提供するオブジェクトから設定をロードします。キーはセクション名、値はセクションに存在する必要があるキーと値を含む辞書です。使用される辞書タイプが順序を維持する場合、セクションとそのキーが順番に追加されます。値は自動的に文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="609771080ece00742363664de393857bf53c63b0" translate="yes" xml:space="preserve">
          <source>Load cookies from a file.</source>
          <target state="translated">ファイルからクッキーを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d415a74437b2a8fde46291994b8fb27e74daafc0" translate="yes" xml:space="preserve">
          <source>Load the key generation parameters for Diffie-Hellman (DH) key exchange. Using DH key exchange improves forward secrecy at the expense of computational resources (both on the server and on the client). The &lt;em&gt;dhfile&lt;/em&gt; parameter should be the path to a file containing DH parameters in PEM format.</source>
          <target state="translated">Diffie-Hellman（DH）鍵交換の鍵生成パラメーターをロードします。DH鍵交換を使用すると、（サーバーとクライアントの両方の）計算リソースを犠牲にして、前方秘匿性が向上します。&lt;em&gt;dhfileの&lt;/em&gt;パラメータは、PEM形式のDHパラメータを含むファイルへのパスであるべきです。</target>
        </trans-unit>
        <trans-unit id="48d42fbf167299e3dd1e195e2e77c87b6142971f" translate="yes" xml:space="preserve">
          <source>Load the module specified by &lt;em&gt;fullname&lt;/em&gt;. &lt;em&gt;fullname&lt;/em&gt; must be the fully qualified (dotted) module name. It returns the imported module, or raises &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if it wasn&amp;rsquo;t found.</source>
          <target state="translated">&lt;em&gt;fullnameで&lt;/em&gt;指定されたモジュールをロードします。&lt;em&gt;fullname&lt;/em&gt;は完全修飾（ドット）モジュール名でなければなりません。インポートされたモジュールを&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; &lt;/a&gt;か、見つからなかった場合はZipImportErrorを送出します。</target>
        </trans-unit>
        <trans-unit id="a3b67eabfacc63af222593625d5483dccb09f499" translate="yes" xml:space="preserve">
          <source>Load the type map given in the file &lt;em&gt;filename&lt;/em&gt;, if it exists. The type map is returned as a dictionary mapping filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;), to strings of the form &lt;code&gt;'type/subtype'&lt;/code&gt;. If the file &lt;em&gt;filename&lt;/em&gt; does not exist or cannot be read, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">ファイル&lt;em&gt;filename&lt;/em&gt;で指定された型マップが存在する場合は、それをロードします。タイプマップは、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含む、ファイル名拡張子を &lt;code&gt;'type/subtype'&lt;/code&gt; 形式の文字列にマッピングする辞書として返されます。ファイル&lt;em&gt;filename&lt;/em&gt;が存在しないか、読み取ることができない場合は、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e5f23b0ce31d15663c44713bcd66b9c0b09a0934" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">ロード可能な拡張機能はデフォルトで無効になっています。&lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c47f6edd5e2c7e153595d9012f90395b664fad9" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">ロード可能な拡張機能はデフォルトで無効になっています。&lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e571b5d989d6291a8883f0e57e8a8c8f1bd18e89" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading are expected to provide a method called &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; which returns an object implementing this ABC&amp;rsquo;s interface. If the module specified by fullname is not a package, this method should return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. An object compatible with this ABC should only be returned when the specified module is a package.</source>
          <target state="translated">リソースの読み取りをサポートするローダーは、このABCのインターフェースを実装するオブジェクトを返す &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; と呼ばれるメソッドを提供することが期待されています。fullnameで指定されたモジュールがパッケージでない場合、このメソッドは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。このABCと互換性のあるオブジェクトは、指定されたモジュールがパッケージの場合にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="378ce4564cfc961412915083fc6fe3d3a3ac4043" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading should implement a &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; method as specified by &lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt;&lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リソースの読み取りをサポートするローダーは、&lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt; &lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt; で&lt;/a&gt;指定されている &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a57f41eadfd6d867f90958cecb3a4047f1a4c3d" translate="yes" xml:space="preserve">
          <source>Loading a library through any of these objects raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.dlopen&lt;/code&gt; with string argument &lt;code&gt;name&lt;/code&gt;, the name used to load the library.</source>
          <target state="translated">これらのオブジェクトのいずれかを介してライブラリをロードすると、ライブラリのロードに使用される &lt;code&gt;name&lt;/code&gt; 文字列引数nameを使用して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;ctypes.dlopen&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="6157b16025e97d941d88dc209da06d6279f10e6e" translate="yes" xml:space="preserve">
          <source>Loading and running tests</source>
          <target state="translated">テストの読み込みと実行</target>
        </trans-unit>
        <trans-unit id="0f19a79e96a975070aa13b1f20b3d2bdd4d9dc24" translate="yes" xml:space="preserve">
          <source>Loading dynamic link libraries</source>
          <target state="translated">ダイナミックリンクライブラリの読み込み</target>
        </trans-unit>
        <trans-unit id="d59529dbda456f2b5d95ed314e6b490be68e48e9" translate="yes" xml:space="preserve">
          <source>Loading shared libraries</source>
          <target state="translated">共有ライブラリの読み込み</target>
        </trans-unit>
        <trans-unit id="b90fef70cb5c4d40f44b0f88151132cf53bf667b" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from TOS object. TOS is popped and method and TOS are pushed when interpreter can call unbound method directly. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and method is pushed (method is bound method or something else).</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; という名前のメソッドをTOSオブジェクトからロードします。TOSがポップされ、インタプリタが非バインドメソッドを直接呼び出すことができる場合、メソッドとTOSがプッシュされます。TOSは、&lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt;によって最初の引数（ &lt;code&gt;self&lt;/code&gt; ）として使用されます。それ以外の場合は、 &lt;code&gt;NULL&lt;/code&gt; でメソッドがプッシュされます（メソッドはバインドされたメソッドなど）。</target>
        </trans-unit>
        <trans-unit id="d27df2a4a2d21c1753293f40979140c7e27016e1" translate="yes" xml:space="preserve">
          <source>Loads all symbols not starting with &lt;code&gt;'_'&lt;/code&gt; directly from the module TOS to the local namespace. The module is popped after loading all names. This opcode implements &lt;code&gt;from module import *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'_'&lt;/code&gt; で始まらないすべてのシンボルをモジュールTOSからローカル名前空間に直接ロードします。すべての名前をロードした後、モジュールがポップされます。このオペコードは &lt;code&gt;from module import *&lt;/code&gt; 実装されます。</target>
        </trans-unit>
        <trans-unit id="a73db01bcd9bbe68ec1dd85d66ba7ce5f2794388" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">この要素ツリーに外部XMLセクションをロードします。&lt;em&gt;source&lt;/em&gt;はファイル名または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;です。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。セクションルート要素を返します。</target>
        </trans-unit>
        <trans-unit id="1f8a05fa121c3dfddca1eb9b12000164796d7f86" translate="yes" xml:space="preserve">
          <source>Loads the attribute &lt;code&gt;co_names[namei]&lt;/code&gt; from the module found in TOS. The resulting object is pushed onto the stack, to be subsequently stored by a &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; instruction.</source>
          <target state="translated">TOSにあるモジュールから属性 &lt;code&gt;co_names[namei]&lt;/code&gt; ロードします。結果のオブジェクトはスタックにプッシュされ、その後&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;命令によって格納されます。</target>
        </trans-unit>
        <trans-unit id="9b348168c8362df88f869811fab229492225da54" translate="yes" xml:space="preserve">
          <source>Loads the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Pushes a reference to the object the cell contains on the stack.</source>
          <target state="translated">セルのスロット&lt;em&gt;i&lt;/em&gt;に含まれるセルをロードし、変数ストレージを解放します。セルに含まれるオブジェクトへの参照をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="07317685209bae8dc29b1177be533689623566aa" translate="yes" xml:space="preserve">
          <source>Loads the global named &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; という名前のグローバルをスタックにロードします。</target>
        </trans-unit>
        <trans-unit id="5e4196f78acb5e15163031bb305c6c69a7881387" translate="yes" xml:space="preserve">
          <source>Local currency symbol.</source>
          <target state="translated">現地通貨記号。</target>
        </trans-unit>
        <trans-unit id="52009a3ea27db65f1cc4de20822dd34262e8738c" translate="yes" xml:space="preserve">
          <source>Local processes can also access that queue, using the code from above on the client to access it remotely:</source>
          <target state="translated">ローカルプロセスは、クライアント上の上記のコードを使用してリモートでそのキューにアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="3e985f42b4f2cb4a242c933c6cd4f71c10094544" translate="yes" xml:space="preserve">
          <source>Locale category for formatting numbers. The functions &lt;a href=&quot;#locale.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atoi&quot;&gt;&lt;code&gt;atoi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atof&quot;&gt;&lt;code&gt;atof()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected by that category. All other numeric formatting operations are not affected.</source>
          <target state="translated">数値をフォーマットするためのロケールカテゴリ。&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールの関数&lt;a href=&quot;#locale.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#locale.atoi&quot;&gt; &lt;code&gt;atoi()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#locale.atof&quot;&gt; &lt;code&gt;atof()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#locale.str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;は、そのカテゴリーの影響を受けます。他のすべての数値フォーマット操作は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="e89698268d6ca826988ca2828f9a33ea91d9b28a" translate="yes" xml:space="preserve">
          <source>Locale category for formatting of monetary values. The available options are available from the &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通貨値の書式設定のためのロケールカテゴリ。利用可能なオプションは、&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt;関数から利用できます。</target>
        </trans-unit>
        <trans-unit id="04a64c4c278c2187092935ce39d2099f68cb48c8" translate="yes" xml:space="preserve">
          <source>Locale category for message display. Python currently does not support application specific locale-aware messages. Messages displayed by the operating system, like those returned by &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt; might be affected by this category.</source>
          <target state="translated">メッセージ表示のロケールカテゴリ。Pythonは現在、アプリケーション固有のロケール対応メッセージをサポートしていません。&lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; &lt;/a&gt;によって返されるメッセージなど、オペレーティングシステムによって表示されるメッセージは、このカテゴリの影響を受ける可能性があります。</target>
        </trans-unit>
        <trans-unit id="ddd49d042ef959ad8740ad1439b50170f4a67803" translate="yes" xml:space="preserve">
          <source>Locale category for sorting strings. The functions &lt;a href=&quot;#locale.strcoll&quot;&gt;&lt;code&gt;strcoll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.strxfrm&quot;&gt;&lt;code&gt;strxfrm()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected.</source>
          <target state="translated">文字列をソートするためのロケールカテゴリ。機能&lt;a href=&quot;#locale.strcoll&quot;&gt; &lt;code&gt;strcoll()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#locale.strxfrm&quot;&gt; &lt;code&gt;strxfrm()&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールが影響を受けます。</target>
        </trans-unit>
        <trans-unit id="cbbf73bf0b11794a60e800b47ab121a2dee00b07" translate="yes" xml:space="preserve">
          <source>Locale category for the character type functions. Depending on the settings of this category, the functions of module &lt;a href=&quot;string#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; dealing with case change their behaviour.</source>
          <target state="translated">文字タイプ関数のロケールカテゴリ。このカテゴリの設定に応じて、大文字と小文字を扱うモジュール&lt;a href=&quot;string#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;の関数はその動作を変更します。</target>
        </trans-unit>
        <trans-unit id="b3402d90af0a871f59ee54dff6e494f7c57e091c" translate="yes" xml:space="preserve">
          <source>Locale category for the formatting of time. The function &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; follows these conventions.</source>
          <target state="translated">時間の書式設定のためのロケールカテゴリ。関数&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;は、これらの規則に従います。</target>
        </trans-unit>
        <trans-unit id="73b793f3c64332c43debe3f45fccfa2080cec4a8" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated month name.</source>
          <target state="translated">ロケールの省略された月名。</target>
        </trans-unit>
        <trans-unit id="c9afac89d2e328ab0ed56be9db5cfa0260851bff" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated weekday name.</source>
          <target state="translated">ロケールの省略された曜日名。</target>
        </trans-unit>
        <trans-unit id="46905c93036f1fc91beab4f6536669f4aa997a97" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date and time representation.</source>
          <target state="translated">ロケールの適切な日付と時刻の表現。</target>
        </trans-unit>
        <trans-unit id="13dd4044599b17dfb922c37d1bc883f07809d332" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date representation.</source>
          <target state="translated">ロケールの適切な日付表現。</target>
        </trans-unit>
        <trans-unit id="36487e73126def0235c7c9de6ec2356b44418976" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate time representation.</source>
          <target state="translated">ロケールの適切な時間表現。</target>
        </trans-unit>
        <trans-unit id="f2fefc48256fa82bb994918d97f4d1273ceaaa82" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s equivalent of either AM or PM.</source>
          <target state="translated">AMまたはPMのいずれかに相当するロケール。</target>
        </trans-unit>
        <trans-unit id="6fd390382c5edc4503dc946a153a0cfc7197d046" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full month name.</source>
          <target state="translated">ロケールの完全な月名。</target>
        </trans-unit>
        <trans-unit id="07ec6fcd65ab62d1a5fc3d4b40fc1f0d429bee74" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full weekday name.</source>
          <target state="translated">ロケールの完全な曜日名。</target>
        </trans-unit>
        <trans-unit id="f1fb667e5d929e9a2ab0404441ece3a2b8b4ac94" translate="yes" xml:space="preserve">
          <source>Localizing your application</source>
          <target state="translated">アプリケーションのローカライズ</target>
        </trans-unit>
        <trans-unit id="7e70bb97fb52037a6fc3c4f3daae9b44f1e4190f" translate="yes" xml:space="preserve">
          <source>Localizing your module</source>
          <target state="translated">モジュールのローカライズ</target>
        </trans-unit>
        <trans-unit id="d2e95cdee60c00152032441855294fcdb5f25216" translate="yes" xml:space="preserve">
          <source>Locate the insertion point for &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; to maintain sorted order. The parameters &lt;em&gt;lo&lt;/em&gt; and &lt;em&gt;hi&lt;/em&gt; may be used to specify a subset of the list which should be considered; by default the entire list is used. If &lt;em&gt;x&lt;/em&gt; is already present in &lt;em&gt;a&lt;/em&gt;, the insertion point will be before (to the left of) any existing entries. The return value is suitable for use as the first parameter to &lt;code&gt;list.insert()&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted.</source>
          <target state="translated">ソートされた順序を維持するために&lt;em&gt;、&lt;/em&gt;&lt;em&gt;x&lt;/em&gt;の挿入ポイントを&lt;em&gt;aに配置&lt;/em&gt;します。パラメーター&lt;em&gt;lo&lt;/em&gt;と&lt;em&gt;hi&lt;/em&gt;を使用して、考慮すべきリストのサブセットを指定できます。デフォルトでは、リスト全体が使用されます。場合&lt;em&gt;、xが&lt;/em&gt;既に存在している、挿入ポイントは、既存のエントリ（の左側）の前であろう。戻り値は、&lt;em&gt;a&lt;/em&gt;がすでにソートされて&lt;em&gt;いる&lt;/em&gt;と想定して&lt;em&gt;、&lt;/em&gt; &lt;code&gt;list.insert()&lt;/code&gt; の最初のパラメーターとして使用するのに適しています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c21d4b6cbd99b64624c0ae81363ca97a7b37eac" translate="yes" xml:space="preserve">
          <source>Locates a bitmap file of the name &lt;code&gt;name.xpm&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method). By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the bitmap files in your application. When successful, it returns the complete pathname of the bitmap file, prefixed with the character &lt;code&gt;@&lt;/code&gt;. The returned value can be used to configure the &lt;code&gt;bitmap&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">&lt;code&gt;name.xpm&lt;/code&gt; または &lt;code&gt;name&lt;/code&gt; のビットマップファイルをビットマップディレクトリの1つに&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;メソッドを参照）。&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;を使用することにより、アプリケーションでビットマップファイルのパス名をハードコーディングすることを回避できます。成功すると、ビットマップファイルの完全なパス名を返し、先頭に文字 &lt;code&gt;@&lt;/code&gt; を付けます。戻り値を使用して、TkウィジェットとTixウィジェットの &lt;code&gt;bitmap&lt;/code&gt; オプションを構成できます。</target>
        </trans-unit>
        <trans-unit id="7a6c0b8acf24a16e33c0f64184c64947bcfef879" translate="yes" xml:space="preserve">
          <source>Locates an image file of the name &lt;code&gt;name.xpm&lt;/code&gt;, &lt;code&gt;name.xbm&lt;/code&gt; or &lt;code&gt;name.ppm&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method above). If more than one file with the same name (but different extensions) exist, then the image type is chosen according to the depth of the X display: xbm images are chosen on monochrome displays and color images are chosen on color displays. By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the image files in your application. When successful, this method returns the name of the newly created image, which can be used to configure the &lt;code&gt;image&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">&lt;code&gt;name.xpm&lt;/code&gt; 、 &lt;code&gt;name.xbm&lt;/code&gt; 、または &lt;code&gt;name.ppm&lt;/code&gt; という名前の画像ファイルをビットマップディレクトリの1つに&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;上記のtix_addbitmapdir（）メソッドを参照）。同じ名前（ただし拡張子が異なる）のファイルが複数存在する場合は、Xディスプレイの深度に応じてイメージタイプが選択されます。モノクロディスプレイではxbmイメージが選択され、カラーディスプレイではカラーイメージが選択されます。&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;を使用することにより、アプリケーションでイメージファイルのパス名をハードコーディングすることを回避できます。成功すると、このメソッドは新しく作成されたイメージの名前を返します。これを使用して、TkウィジェットとTixウィジェットの &lt;code&gt;image&lt;/code&gt; オプションを構成できます。</target>
        </trans-unit>
        <trans-unit id="f8b0e21f5b3f01d9c1a093dcc7aebc48a221cf7a" translate="yes" xml:space="preserve">
          <source>Locator Objects</source>
          <target state="translated">ロケータオブジェクト</target>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="5a9e42ea8ddb21d85da434d1d4df2d2f1efa57a3" translate="yes" xml:space="preserve">
          <source>Lock Objects</source>
          <target state="translated">オブジェクトのロック</target>
        </trans-unit>
        <trans-unit id="06f960cf76802c9e596f5a165b9c306033b8c337" translate="yes" xml:space="preserve">
          <source>Lock objects have the following methods:</source>
          <target state="translated">ロックオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="0222c4646a5cac92401d4d0c07f15b59f773661e" translate="yes" xml:space="preserve">
          <source>Lock part of a file based on file descriptor &lt;em&gt;fd&lt;/em&gt; from the C runtime. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on failure. The locked region of the file extends from the current file position for &lt;em&gt;nbytes&lt;/em&gt; bytes, and may continue beyond the end of the file. &lt;em&gt;mode&lt;/em&gt; must be one of the &lt;code&gt;LK_*&lt;/code&gt; constants listed below. Multiple regions in a file may be locked at the same time, but may not overlap. Adjacent regions are not merged; they must be unlocked individually.</source>
          <target state="translated">Cランタイムからのファイル記述子&lt;em&gt;fdに&lt;/em&gt;基づいてファイルの一部をロックします。発生させ&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のを&lt;/a&gt;失敗しました。ファイルのロックされた領域は、現在のファイル位置から&lt;em&gt;nbytes&lt;/em&gt;バイト拡張され、ファイルの終わりを超えて続く場合があります。&lt;em&gt;モード&lt;/em&gt;は、以下に示す &lt;code&gt;LK_*&lt;/code&gt; 定数のいずれかでなければなりません。ファイル内の複数の領域を同時にロックすることはできますが、重複することはできません。隣接するリージョンはマージされません。それらは個別にロック解除する必要があります。</target>
        </trans-unit>
        <trans-unit id="c528eeea30f8c7cdbf3dd9c943be567de116bc9e" translate="yes" xml:space="preserve">
          <source>Lock program segments into memory. The value of &lt;em&gt;op&lt;/em&gt; (defined in &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt;) determines which segments are locked.</source>
          <target state="translated">プログラムセグメントをメモリにロックします。&lt;em&gt;op&lt;/em&gt;の値（ &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt; で定義）は、ロックするセグメントを決定します。</target>
        </trans-unit>
        <trans-unit id="d14148792cb2e70e25dadd8e130df4def697650f" translate="yes" xml:space="preserve">
          <source>Locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">ロックは、&lt;a href=&quot;#with-locks&quot;&gt;コンテキスト管理プロトコル&lt;/a&gt;もサポートしています。</target>
        </trans-unit>
        <trans-unit id="e4911bad28d3fb7972d5e7251b010d8af4491853" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定されたバイトをロックします。バイトをロックできない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9271e320c4c74de58382f17a37df89d94c970942" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, the program immediately tries again after 1 second. If, after 10 attempts, the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定されたバイトをロックします。バイトをロックできない場合、プログラムは1秒後に直ちに再試行します。10回試行してもバイトをロックできない場合は、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="cf1602b3907bd203c789fd778d5036f56eb7eaa5" translate="yes" xml:space="preserve">
          <source>Log in as the given &lt;em&gt;user&lt;/em&gt;. The &lt;em&gt;passwd&lt;/em&gt; and &lt;em&gt;acct&lt;/em&gt; parameters are optional and default to the empty string. If no &lt;em&gt;user&lt;/em&gt; is specified, it defaults to &lt;code&gt;'anonymous'&lt;/code&gt;. If &lt;em&gt;user&lt;/em&gt; is &lt;code&gt;'anonymous'&lt;/code&gt;, the default &lt;em&gt;passwd&lt;/em&gt; is &lt;code&gt;'anonymous@'&lt;/code&gt;. This function should be called only once for each instance, after a connection has been established; it should not be called at all if a host and user were given when the instance was created. Most FTP commands are only allowed after the client has logged in. The &lt;em&gt;acct&lt;/em&gt; parameter supplies &amp;ldquo;accounting information&amp;rdquo;; few systems implement this.</source>
          <target state="translated">指定された&lt;em&gt;ユーザー&lt;/em&gt;としてログインし&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;passwdファイル&lt;/em&gt;および&lt;em&gt;acctの&lt;/em&gt;パラメータはオプションであり、空の文字列にデフォルトされています。&lt;em&gt;ユーザー&lt;/em&gt;が指定されていない場合、デフォルトで &lt;code&gt;'anonymous'&lt;/code&gt; になります。場合は&lt;em&gt;、ユーザが&lt;/em&gt;ある &lt;code&gt;'anonymous'&lt;/code&gt; 、デフォルトの&lt;em&gt;passwdが&lt;/em&gt;ある &lt;code&gt;'anonymous@'&lt;/code&gt; 。この関数は、接続が確立された後、インスタンスごとに1回だけ呼び出す必要があります。インスタンスの作成時にホストとユーザーが指定されている場合は、呼び出さないでください。ほとんどのFTPコマンドは、クライアントがログインした後でのみ許可されます&lt;em&gt;。acct&lt;/em&gt;パラメータは「アカウンティング情報」を提供します。これを実装するシステムはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="492759de42716d33cbac9e1b9827c65dd042298c" translate="yes" xml:space="preserve">
          <source>Log in on an SMTP server that requires authentication. The arguments are the username and the password to authenticate with. If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first. This method will return normally if the authentication was successful, or may raise the following exceptions:</source>
          <target state="translated">認証が必要なSMTPサーバーにログインします。引数は、認証に使用するユーザー名とパスワードです。このセッションに以前の &lt;code&gt;EHLO&lt;/code&gt; または &lt;code&gt;HELO&lt;/code&gt; コマンドがない場合、このメソッドは最初にESMTP &lt;code&gt;EHLO&lt;/code&gt; を試行します。このメソッドは、認証が成功した場合は正常に戻るか、次の例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d77829d521e5852593ca42255d86ed2e7f8595be" translate="yes" xml:space="preserve">
          <source>Log normal distribution. If you take the natural logarithm of this distribution, you&amp;rsquo;ll get a normal distribution with mean &lt;em&gt;mu&lt;/em&gt; and standard deviation &lt;em&gt;sigma&lt;/em&gt;. &lt;em&gt;mu&lt;/em&gt; can have any value, and &lt;em&gt;sigma&lt;/em&gt; must be greater than zero.</source>
          <target state="translated">ログ正規分布。この分布の自然対数を取ると、平均&lt;em&gt;mu&lt;/em&gt;および標準偏差&lt;em&gt;sigmaの&lt;/em&gt;正規分布が得られます。&lt;em&gt;muに&lt;/em&gt;は任意の値を指定でき、&lt;em&gt;シグマ&lt;/em&gt;はゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="ec346ba8e376063f18c76a6a36fb7ed2f33b4610" translate="yes" xml:space="preserve">
          <source>Log options:</source>
          <target state="translated">ログオプション。</target>
        </trans-unit>
        <trans-unit id="e403e316611e44a9d6be336eddc9b9eb85594a3c" translate="yes" xml:space="preserve">
          <source>Log the &lt;em&gt;exc_info&lt;/em&gt; tuple in the server log. &lt;em&gt;exc_info&lt;/em&gt; is a &lt;code&gt;(type, value,
traceback)&lt;/code&gt; tuple. The default implementation simply writes the traceback to the request&amp;rsquo;s &lt;code&gt;wsgi.errors&lt;/code&gt; stream and flushes it. Subclasses can override this method to change the format or retarget the output, mail the traceback to an administrator, or whatever other action may be deemed suitable.</source>
          <target state="translated">ログ&lt;em&gt;exc_info&lt;/em&gt;サーバログでタプルを。&lt;em&gt;exc_info&lt;/em&gt;は &lt;code&gt;(type, value, traceback)&lt;/code&gt; タプルです。デフォルトの実装では、トレースバックをリクエストの &lt;code&gt;wsgi.errors&lt;/code&gt; ストリームに書き込み、フラッシュするだけです。サブクラスは、このメソッドをオーバーライドして、形式を変更したり、出力のターゲットを変更したり、トレースバックを管理者にメールで送信したり、その他の適切と思われるアクションを実行したりできます。</target>
        </trans-unit>
        <trans-unit id="dc4e6d3876ad4a8a803d61a2a77cd5334fce93af" translate="yes" xml:space="preserve">
          <source>LogRecord Objects</source>
          <target state="translated">ログレコードオブジェクト</target>
        </trans-unit>
        <trans-unit id="ccb5e46040b27f71ccff505e9a6e009e5d62de5b" translate="yes" xml:space="preserve">
          <source>LogRecord attributes</source>
          <target state="translated">ログレコード属性</target>
        </trans-unit>
        <trans-unit id="fbead21275199ebeec83dafe0173b0929df9cb34" translate="yes" xml:space="preserve">
          <source>Logger Objects</source>
          <target state="translated">ロガーオブジェクト</target>
        </trans-unit>
        <trans-unit id="b5fc3005221abc4dacb66646e66e5f0b75230d22" translate="yes" xml:space="preserve">
          <source>LoggerAdapter Objects</source>
          <target state="translated">LoggerAdapter オブジェクト</target>
        </trans-unit>
        <trans-unit id="15832f53aca8e4c130be5e20c44213f1a721a48e" translate="yes" xml:space="preserve">
          <source>Loggers expose the interface that application code directly uses.</source>
          <target state="translated">ロガーは、アプリケーション コードが直接使用するインターフェイスを公開します。</target>
        </trans-unit>
        <trans-unit id="efa3718c7750545c2778f507e22c3d6f661d113d" translate="yes" xml:space="preserve">
          <source>Loggers have the following attributes and methods. Note that Loggers should &lt;em&gt;NEVER&lt;/em&gt; be instantiated directly, but always through the module-level function &lt;code&gt;logging.getLogger(name)&lt;/code&gt;. Multiple calls to &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;getLogger()&lt;/code&gt;&lt;/a&gt; with the same name will always return a reference to the same Logger object.</source>
          <target state="translated">ロガーには、次の属性とメソッドがあります。ロガーがなければならないことに注意してください&lt;em&gt;絶対&lt;/em&gt;モジュールレベル関数を介して直接、常にインスタンス化されないこと &lt;code&gt;logging.getLogger(name)&lt;/code&gt; 。同じ名前で&lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;getLogger()&lt;/code&gt; &lt;/a&gt;を複数回呼び出すと、常に同じLoggerオブジェクトへの参照が返されます。</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="718fbafd7688e11a4939390c7cefcf0e84b52cd7" translate="yes" xml:space="preserve">
          <source>Logging Cookbook</source>
          <target state="translated">ロギングクックブック</target>
        </trans-unit>
        <trans-unit id="1fbc43bf18b2478288c7467471047ecb56ddfd53" translate="yes" xml:space="preserve">
          <source>Logging Levels</source>
          <target state="translated">ロギングレベル</target>
        </trans-unit>
        <trans-unit id="1b01df6b50483f653377a29c09e0331101f1c193" translate="yes" xml:space="preserve">
          <source>Logging options of subsequent &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; calls can be set by calling &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; with no arguments if the log is not currently open.</source>
          <target state="translated">後続の&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;呼び出しのロギングオプションは、&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; を&lt;/a&gt;呼び出すことで設定できます。ログが現在開いていない場合、&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;は引数なしで&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f2c3bb3b5b0e703c74d0f552f84bc84df36cf3d0" translate="yes" xml:space="preserve">
          <source>Logical operands</source>
          <target state="translated">論理オペランド</target>
        </trans-unit>
        <trans-unit id="a5da835bb3de6e8855950138a28dea23921e5aaa" translate="yes" xml:space="preserve">
          <source>Logical operators</source>
          <target state="translated">論理演算子</target>
        </trans-unit>
        <trans-unit id="68ee364c110a032900740118e24926681c70b88f" translate="yes" xml:space="preserve">
          <source>Login name</source>
          <target state="translated">ログイン名</target>
        </trans-unit>
        <trans-unit id="4793b19c165be78b5755bf851fe44408b3928735" translate="yes" xml:space="preserve">
          <source>Logs a message with integer level &lt;em&gt;level&lt;/em&gt; on this logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">整数レベル&lt;em&gt;levelの&lt;/em&gt;メッセージをこのロガーに記録します。その他の引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="568da12654cb50668fd7df8728fdffeea5db8e4f" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;CRITICAL&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="13c90355ef29e3a334c5bf4bf41ddcfe4ea3bd96" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;CRITICAL&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="36f562459e6b0a68f0056bc85b76d0713156dd98" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on the root logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">レベル &lt;code&gt;DEBUG&lt;/code&gt; のメッセージをルートロガーに記録します。&lt;em&gt;MSGは、&lt;/em&gt;メッセージの書式文字列であり、&lt;em&gt;argsが&lt;/em&gt;にマージされた引数である&lt;em&gt;MSG&lt;/em&gt;オペレータの書式文字列を使用して。（これは、フォーマット文字列でキーワードを1つの辞書引数と一緒に使用できることを意味することに注意してください。）</target>
        </trans-unit>
        <trans-unit id="5a4c1194427cd766c51025f3e34a599a0511d4b3" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">レベルが &lt;code&gt;DEBUG&lt;/code&gt; のメッセージをこのロガーに記録します。&lt;em&gt;MSGは、&lt;/em&gt;メッセージの書式文字列であり、&lt;em&gt;argsが&lt;/em&gt;にマージされた引数である&lt;em&gt;MSG&lt;/em&gt;オペレータの書式文字列を使用して。（これは、フォーマット文字列でキーワードを1つの辞書引数と一緒に使用できることを意味することに注意してください。）</target>
        </trans-unit>
        <trans-unit id="f28267fec34519242b4f0b061529a74d9fd484db" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;ERROR&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="063c8e0d066708dfaf5ffe371aa8fb8c4cc02f3c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This function should only be called from an exception handler.</source>
          <target state="translated">レベル &lt;code&gt;ERROR&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。例外情報がログメッセージに追加されます。この関数は、例外ハンドラーからのみ呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6423ebbe3708cdc9d0f73b8e0a2a041b8f7201cd" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベルが &lt;code&gt;ERROR&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="88872c80d5ab754d614298ef5b916093cae7f7b7" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This method should only be called from an exception handler.</source>
          <target state="translated">レベルが &lt;code&gt;ERROR&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。例外情報がログメッセージに追加されます。このメソッドは、例外ハンドラーからのみ呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d0dc5301e94745236f4d358120d631126efcea6a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;INFO&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="581dd2f78c21b5e17b02fc079ab480e252bfcc1d" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;INFO&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="4f2f699842300d31569b0cd131e0992c77e4125c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ルートロガーにレベル &lt;code&gt;WARNING&lt;/code&gt; のメッセージを記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="ff4a3eae062ed036b2645240bea04e5509ea296a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベルが &lt;code&gt;WARNING&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="2899f8a5fde47519ab2a228961dc0b080847aeb5" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;em&gt;level&lt;/em&gt; on the root logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル&lt;em&gt;levelの&lt;/em&gt;メッセージをルートロガーに記録します。その他の引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="e88c984feb01158e83ba8164af3f59c55939f49a" translate="yes" xml:space="preserve">
          <source>Logs an accepted (successful) request. &lt;em&gt;code&lt;/em&gt; should specify the numeric HTTP code associated with the response. If a size of the response is available, then it should be passed as the &lt;em&gt;size&lt;/em&gt; parameter.</source>
          <target state="translated">受け入れられた（成功した）要求をログに記録します。&lt;em&gt;code&lt;/em&gt;は、応答に関連付けられた数値HTTP &lt;em&gt;コード&lt;/em&gt;を指定する必要があります。応答のサイズが利用可能な場合は、それを&lt;em&gt;サイズ&lt;/em&gt;パラメータとして渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="4c6dd21f141766e9553b34ec63e21d85a3b49703" translate="yes" xml:space="preserve">
          <source>Logs an arbitrary message to &lt;code&gt;sys.stderr&lt;/code&gt;. This is typically overridden to create custom error logging mechanisms. The &lt;em&gt;format&lt;/em&gt; argument is a standard printf-style format string, where the additional arguments to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt; are applied as inputs to the formatting. The client ip address and current date and time are prefixed to every message logged.</source>
          <target state="translated">任意のメッセージを &lt;code&gt;sys.stderr&lt;/code&gt; に記録します。これは通常、カスタムエラーロギングメカニズムを作成するためにオーバーライドされます。&lt;em&gt;フォーマット&lt;/em&gt;引数は標準のprintfスタイルのフォーマット文字列に追加の引数である&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;フォーマットへの入力として適用されます。ログに記録されるすべてのメッセージには、クライアントのIPアドレスと現在の日時がプレフィックスとして付加されます。</target>
        </trans-unit>
        <trans-unit id="e90924ba66bc7d377e31aed21afb101cba9a37c3" translate="yes" xml:space="preserve">
          <source>Logs an error when a request cannot be fulfilled. By default, it passes the message to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt;, so it takes the same arguments (&lt;em&gt;format&lt;/em&gt; and additional values).</source>
          <target state="translated">リクエストを処理できない場合にエラーをログに記録します。デフォルトでは、メッセージを&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;に渡すため、同じ引数（&lt;em&gt;フォーマット&lt;/em&gt;と追加の値）を取ります。</target>
        </trans-unit>
        <trans-unit id="f8ac632028735d423f992df756452f653d52c9aa" translate="yes" xml:space="preserve">
          <source>Look on the current line. with the cursor, and the line above for a filename and line number. If found, open the file if not already open, and show the line. Use this to view source lines referenced in an exception traceback and lines found by Find in Files. Also available in the context menu of the Shell window and Output windows.</source>
          <target state="translated">カーソルで現在の行を見て、上の行でファイル名と行番号を探します。見つかった場合は、まだ開いていない場合はファイルを開き、その行を表示します。例外トレースバックで参照されているソース行や、Find in Filesで見つかった行を表示する場合に使用します。シェルウィンドウや出力ウィンドウのコンテキストメニューからも利用できます。</target>
        </trans-unit>
        <trans-unit id="830541a609e4aebb4ca0ddc42697347ba279e0a5" translate="yes" xml:space="preserve">
          <source>Look up a handler function based on the &lt;code&gt;mimetype&lt;/code&gt; of &lt;em&gt;msg&lt;/em&gt; (see next paragraph), call it, passing through all arguments, and return the result of the call. The expectation is that the handler will extract the payload from &lt;em&gt;msg&lt;/em&gt; and return an object that encodes information about the extracted data.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt;の &lt;code&gt;mimetype&lt;/code&gt; （次の段落を参照）に基づいてハンドラー関数を検索し、それを呼び出し、すべての引数を渡して、呼び出しの結果を返します。ハンドラーが&lt;em&gt;msg&lt;/em&gt;からペイロードを抽出し、抽出されたデータに関する情報をエンコードするオブジェクトを返すことが期待されています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02580224a4c7c76c987379f2bada22e0530b5592" translate="yes" xml:space="preserve">
          <source>Look up character by name. If a character with the given name is found, return the corresponding character. If not found, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">名前で文字を検索します。指定された名前の文字が見つかった場合、対応する文字を返します。見つからない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ab30e49eb23103b13863785d8c5f988a831d12c9" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id and &lt;em&gt;context&lt;/em&gt;, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">見上げて&lt;em&gt;コンテキスト&lt;/em&gt;と&lt;em&gt;メッセージ&lt;/em&gt;カタログのidをし、Unicode文字列として、対応するメッセージ文字列を返します。カタログに&lt;em&gt;メッセージ&lt;/em&gt; IDと&lt;em&gt;コンテキスト&lt;/em&gt;のエントリがなく、フォールバックが設定されている場合、ルックアップはフォールバックの&lt;a href=&quot;#gettext.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合は、&lt;em&gt;メッセージ&lt;/em&gt; IDが返されます。</target>
        </trans-unit>
        <trans-unit id="cb02656c464ac3ccae9eccf0e89b321d6923bdd6" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">見上げ&lt;em&gt;たメッセージ&lt;/em&gt;カタログにIDをし、Unicode文字列として、対応するメッセージ文字列を返します。カタログに&lt;em&gt;メッセージ&lt;/em&gt; ID のエントリがなく、フォールバックが設定されている場合、ルックアップはフォールバックの&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合は、&lt;em&gt;メッセージ&lt;/em&gt; IDが返されます。</target>
        </trans-unit>
        <trans-unit id="e3a556474e1ed457b70864b01a7298696a2ec2dd" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">指定されたエンコーディングのコーデックを&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;、そのStreamReaderクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="9d4ddc4438742263e3d5627291450220ce8cb31b" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">指定されたエンコーディングのコーデックを&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;、そのStreamWriterクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="c84e896663516d28c7c27bb365ae80312c5e169f" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its decoder function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのデコーダ関数を返します。</target>
        </trans-unit>
        <trans-unit id="eb641b1a229c64cd02ce2ebfc05ae8a7c13b0596" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its encoder function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのエンコーダ関数を返します。</target>
        </trans-unit>
        <trans-unit id="3655c5a141ca4acde5ad365207e8691d73d266bf" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental decoder class or factory function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのインクリメンタルデコーダクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="6cc163fdbcd56d75ce77c6d6d85dc890d18b4429" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental encoder class or factory function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのインクリメンタルエンコーダクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="78b595ac3ee12e89b27df3b7a98465df00426911" translate="yes" xml:space="preserve">
          <source>Looks up the codec info in the Python codec registry and returns a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object as defined below.</source>
          <target state="translated">Pythonコーデックレジストリでコーデック情報を&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;、以下に定義されているCodecInfoオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="cf82cd9963518dc21fb6c641a8de40d76056d5d3" translate="yes" xml:space="preserve">
          <source>Lookup &lt;em&gt;name&lt;/em&gt; in the table and return a &lt;a href=&quot;#symtable.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">テーブル内の&lt;em&gt;名前&lt;/em&gt;を検索し、&lt;a href=&quot;#symtable.Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="f4485ea3acbc6dbce3acdb006f3d986acb5ab231" translate="yes" xml:space="preserve">
          <source>LookupError</source>
          <target state="translated">LookupError</target>
        </trans-unit>
        <trans-unit id="630ea782b7785663fd9d4f73dba3d3c77a23c0bd" translate="yes" xml:space="preserve">
          <source>Lookups search the underlying mappings successively until a key is found. In contrast, writes, updates, and deletions only operate on the first mapping.</source>
          <target state="translated">ルックアップは、キーが見つかるまで基本的なマッピングを連続して検索します。対照的に、書き込み、更新、削除は最初のマッピングに対してのみ動作します。</target>
        </trans-unit>
        <trans-unit id="153299db674345d8f2ca5d3d4f9e8e37247d6bf3" translate="yes" xml:space="preserve">
          <source>Loop over the format_string and return an iterable of tuples (&lt;em&gt;literal_text&lt;/em&gt;, &lt;em&gt;field_name&lt;/em&gt;, &lt;em&gt;format_spec&lt;/em&gt;, &lt;em&gt;conversion&lt;/em&gt;). This is used by &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; to break the string into either literal text, or replacement fields.</source>
          <target state="translated">format_stringをループして、タプルの反復可能&lt;em&gt;オブジェクトを返し&lt;/em&gt;ます（&lt;em&gt;literal_text&lt;/em&gt;、&lt;em&gt;field_name&lt;/em&gt;、&lt;em&gt;format_spec&lt;/em&gt;、&lt;em&gt;conversion&lt;/em&gt;）。これは、文字列をリテラルテキストまたは置換フィールドに分割するために&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="817f983a7edb7dba44fd8f3324b46953d7169631" translate="yes" xml:space="preserve">
          <source>Low highlight</source>
          <target state="translated">ローハイライト</target>
        </trans-unit>
        <trans-unit id="127b603a1ef011bb89cc88a210069e24596383d1" translate="yes" xml:space="preserve">
          <source>Low level interface to kevent</source>
          <target state="translated">keventへの低レベルインターフェース</target>
        </trans-unit>
        <trans-unit id="2eb47f09ef951de4242da56b37e0a0774375475b" translate="yes" xml:space="preserve">
          <source>Low median of data.</source>
          <target state="translated">データの中央値が低い</target>
        </trans-unit>
        <trans-unit id="8780223be91d8d1f6aff0eae226f7e6a9f597e78" translate="yes" xml:space="preserve">
          <source>Low-level API Index</source>
          <target state="translated">低レベルAPIインデックス</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">低レベルAPI</target>
        </trans-unit>
        <trans-unit id="8b09ad35d513c57449768a8b41dddbe56fe84f67" translate="yes" xml:space="preserve">
          <source>Low-level I/O multiplexing module.</source>
          <target state="translated">低レベルI/O多重化モジュール。</target>
        </trans-unit>
        <trans-unit id="598bc2f6658057b428f7e2f3e606eae47ac8e6d8" translate="yes" xml:space="preserve">
          <source>Low-level methods corresponding to the standard SMTP/ESMTP commands &lt;code&gt;HELP&lt;/code&gt;, &lt;code&gt;RSET&lt;/code&gt;, &lt;code&gt;NOOP&lt;/code&gt;, &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;RCPT&lt;/code&gt;, and &lt;code&gt;DATA&lt;/code&gt; are also supported. Normally these do not need to be called directly, so they are not documented here. For details, consult the module code.</source>
          <target state="translated">標準のSMTP / ESMTPコマンド &lt;code&gt;HELP&lt;/code&gt; 、 &lt;code&gt;RSET&lt;/code&gt; 、 &lt;code&gt;NOOP&lt;/code&gt; 、 &lt;code&gt;MAIL&lt;/code&gt; 、 &lt;code&gt;RCPT&lt;/code&gt; 、および &lt;code&gt;DATA&lt;/code&gt; に対応する低レベルのメソッドもサポートされています。通常、これらを直接呼び出す必要はないため、ここでは説明しません。詳細については、モジュールコードを参照してください。</target>
        </trans-unit>
        <trans-unit id="26766bff9d94e6567e710b2fea4f1511b662ea0d" translate="yes" xml:space="preserve">
          <source>Low-level terminal control interface.</source>
          <target state="translated">低レベル端末制御インターフェース。</target>
        </trans-unit>
        <trans-unit id="3037eb1a5f56e2da85ac8efecced594163214b23" translate="yes" xml:space="preserve">
          <source>Low-level time related functions.</source>
          <target state="translated">低レベルの時間関連機能。</target>
        </trans-unit>
        <trans-unit id="d9dd367f9bd9200fa80c2b2e15b69f5c2fd12a8e" translate="yes" xml:space="preserve">
          <source>Low-level transport abstraction over subprocesses. Returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">サブプロセス上の低レベルのトランスポート抽象化。&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;によって返されます：</target>
        </trans-unit>
        <trans-unit id="173e5fb322f03059e57865273bd7201fd7a87b77" translate="yes" xml:space="preserve">
          <source>Lower left of keypad</source>
          <target state="translated">キーパッドの左下</target>
        </trans-unit>
        <trans-unit id="1122f5f9b82dc0f050f315c32b632f532a7d070a" translate="yes" xml:space="preserve">
          <source>Lower right of keypad</source>
          <target state="translated">キーパッドの右下</target>
        </trans-unit>
        <trans-unit id="30c535ddb40e2b13bc291a7dfa8a8275334e95e7" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">小文字のASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; バイト値です。大文字のASCII文字は、シーケンス &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。</target>
        </trans-unit>
        <trans-unit id="50b863a5a287224249b5146b1cb8597ee4786665" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. All other byte values are uncased.</source>
          <target state="translated">小文字のASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; バイト値です。大文字のASCII文字は、シーケンス &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。他のすべてのバイト値は大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="2d097e417a0011309b9e3799cef284519c47f119" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation Vol. 8, No. 1, January pp.3&amp;ndash;30 1998.</source>
          <target state="translated">M.松本と西村、「メルセンヌツイスター：623次元の等分布均一疑似乱数ジェネレーター」、ACM Transactions on Modeling and Computer Simulation Vol。8、No。1、1月pp.3&amp;ndash;30 1998。</target>
        </trans-unit>
        <trans-unit id="f9326dba9c79149b2bfa04e09a817e946200edd7" translate="yes" xml:space="preserve">
          <source>MADV_* Constants</source>
          <target state="translated">MADV_*定数</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="83f776c9895fa9933e9c8f01b0f9175fe4aba8f4" translate="yes" xml:space="preserve">
          <source>MH &amp;amp; nmh: Email for Users &amp;amp; Programmers</source>
          <target state="translated">MH＆nmh：ユーザーとプログラマー向けのメール</target>
        </trans-unit>
        <trans-unit id="bfb78b95660e8a4437c74324bc0e18e512f5e11a" translate="yes" xml:space="preserve">
          <source>MH is a directory-based mailbox format invented for the MH Message Handling System, a mail user agent. Each message in an MH mailbox resides in its own file. An MH mailbox may contain other MH mailboxes (called &lt;em&gt;folders&lt;/em&gt;) in addition to messages. Folders may be nested indefinitely. MH mailboxes also support &lt;em&gt;sequences&lt;/em&gt;, which are named lists used to logically group messages without moving them to sub-folders. Sequences are defined in a file called &lt;code&gt;.mh_sequences&lt;/code&gt; in each folder.</source>
          <target state="translated">MHは、メールユーザーエージェントであるMHメッセージ処理システム用に考案されたディレクトリベースのメールボックスフォーマットです。 MHメールボックス内の各メッセージは、独自のファイルに存在します。 MHメールボックスには、メッセージに加えて、他のMHメールボックス（&lt;em&gt;フォルダー&lt;/em&gt;と呼ばれる）を含めることができます。フォルダは無期限にネストできます。 MHメールボックスは、&lt;em&gt;シーケンス&lt;/em&gt;もサポートし&lt;em&gt;ます&lt;/em&gt;。これは、メッセージをサブフォルダーに移動せずにメッセージを論理的にグループ化するために使用される名前付きリストです。シーケンスは、各フォルダーの &lt;code&gt;.mh_sequences&lt;/code&gt; というファイルで定義されます。</target>
        </trans-unit>
        <trans-unit id="9c05b8eba754105622f4f66f9c667c959eac038c" translate="yes" xml:space="preserve">
          <source>MH messages do not support marks or flags in the traditional sense, but they do support sequences, which are logical groupings of arbitrary messages. Some mail reading programs (although not the standard &lt;strong&gt;mh&lt;/strong&gt; and &lt;strong&gt;nmh&lt;/strong&gt;) use sequences in much the same way flags are used with other formats, as follows:</source>
          <target state="translated">MHメッセージは、従来の意味でのマークまたはフラグをサポートしていませんが、任意のメッセージの論理グループであるシーケンスをサポートしています。一部のメール読み取りプログラム（標準の&lt;strong&gt;mh&lt;/strong&gt;および&lt;strong&gt;nmhで&lt;/strong&gt;はありません）は、次のように、フラグが他の形式で使用されるのとほぼ同じ方法でシーケンスを使用します。</target>
        </trans-unit>
        <trans-unit id="65da9389c1a77e41f94256ff46e83b4558f0d2c0" translate="yes" xml:space="preserve">
          <source>MIME headers all start with the prefix &amp;lsquo;Content-&amp;lsquo;. Each specific header has a certain value, described under the class for that header. Some can also take a list of supplemental parameters, which have a common format. This class serves as a base for all the MIME headers that take parameters.</source>
          <target state="translated">MIMEヘッダーはすべて、プレフィックス 'Content-'で始まります。特定の各ヘッダーには特定の値があり、そのヘッダーのクラスで説明されています。いくつかはまた、共通のフォーマットを持つ補足パラメーターのリストを取ることもできます。このクラスは、パラメーターを受け取るすべてのMIMEヘッダーのベースとして機能します。</target>
        </trans-unit>
        <trans-unit id="e780567389e1a67ac39a9aa3a2da100125cc437a" translate="yes" xml:space="preserve">
          <source>MIMEVersionHeader</source>
          <target state="translated">MIMEVersionHeader</target>
        </trans-unit>
        <trans-unit id="ac2781a30c636477d2571979c4dc8ae62e55b4a1" translate="yes" xml:space="preserve">
          <source>MMDF</source>
          <target state="translated">MMDF</target>
        </trans-unit>
        <trans-unit id="66116c893240b072c88886bdaaa797c52d0bc63e" translate="yes" xml:space="preserve">
          <source>MMDF is a single-file mailbox format invented for the Multichannel Memorandum Distribution Facility, a mail transfer agent. Each message is in the same form as an mbox message but is bracketed before and after by lines containing four Control-A (&lt;code&gt;'\001'&lt;/code&gt;) characters. As with the mbox format, the beginning of each message is indicated by a line whose first five characters are &amp;ldquo;From &amp;ldquo;, but additional occurrences of &amp;ldquo;From &amp;rdquo; are not transformed to &amp;ldquo;&amp;gt;From &amp;rdquo; when storing messages because the extra message separator lines prevent mistaking such occurrences for the starts of subsequent messages.</source>
          <target state="translated">MMDFは、メール転送エージェントであるMultichannel Memorandum Distribution Facilityのために考案された単一ファイルのメールボックス形式です。各メッセージはmboxメッセージと同じ形式ですが、4つのControl-A（ &lt;code&gt;'\001'&lt;/code&gt; ）文字を含む行の前後に括弧で囲まれます。 mbox形式と同様に、各メッセージの先頭は最初の5文字が「From」である行で示されますが、追加の「From」は、メッセージを格納するときに「&amp;gt; From」に変換されません。そのような発生を後続のメッセージの開始と間違える。</target>
        </trans-unit>
        <trans-unit id="5481121da443813ed3ac24e7900056c8bc0a3492" translate="yes" xml:space="preserve">
          <source>MS Windows</source>
          <target state="translated">エムエスウィンドウズ</target>
        </trans-unit>
        <trans-unit id="7603491c0dcf610a151e7e878f3e66902074b1e1" translate="yes" xml:space="preserve">
          <source>MS Windows Specific Services</source>
          <target state="translated">エムエスウィンドウズ特有のサービス</target>
        </trans-unit>
        <trans-unit id="6f96f1c42882c7292e1fca57e1b53cd688b380b1" translate="yes" xml:space="preserve">
          <source>Mac OS Platform</source>
          <target state="translated">マックオーエスプラットフォーム</target>
        </trans-unit>
        <trans-unit id="7bd9422fbcc45a81bb4afd061a341076dea802f9" translate="yes" xml:space="preserve">
          <source>Mac OS X can return:</source>
          <target state="translated">Mac OS Xは戻ることができます。</target>
        </trans-unit>
        <trans-unit id="2ff28b996370a24ecb0833ef2246817e7ffb3e42" translate="yes" xml:space="preserve">
          <source>Machine is not on the network</source>
          <target state="translated">マシンがネットワーク上にない</target>
        </trans-unit>
        <trans-unit id="bf55ab1cf5927f19f45290600b680716e5e32f16" translate="yes" xml:space="preserve">
          <source>Magenta (purplish red)</source>
          <target state="translated">マゼンタ(紫がかった赤</target>
        </trans-unit>
        <trans-unit id="32c97d0530e5003fff0bec696fd2fde110dbea71" translate="yes" xml:space="preserve">
          <source>Magic Mock</source>
          <target state="translated">マジックモック</target>
        </trans-unit>
        <trans-unit id="ba97bef2f5190237815682cb5c24de6d99b343b8" translate="yes" xml:space="preserve">
          <source>Magic methods &lt;em&gt;should&lt;/em&gt; be looked up on the class rather than the instance. Different versions of Python are inconsistent about applying this rule. The supported protocol methods should work with all supported versions of Python.</source>
          <target state="translated">マジックメソッド&lt;em&gt;は&lt;/em&gt;、インスタンスではなくクラスで検索する&lt;em&gt;必要&lt;/em&gt;があります。Pythonのバージョンが異なると、このルールの適用に一貫性がなくなります。サポートされているプロトコルメソッドは、サポートされているすべてのバージョンのPythonで動作します。</target>
        </trans-unit>
        <trans-unit id="b04bd0c1375cb0c437085dcd22b5d776344cd11e" translate="yes" xml:space="preserve">
          <source>Magic methods that are supported but not setup by default in &lt;code&gt;MagicMock&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; でサポートされているがデフォルトでは設定されていないマジックメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9a1c07f78b75414a75fc974ca16b8c197d751801" translate="yes" xml:space="preserve">
          <source>MagicMock and magic method support</source>
          <target state="translated">MagicMockとマジックメソッドに対応</target>
        </trans-unit>
        <trans-unit id="528cb2c5c793842fe4f6bbd5e875eb9ace62e872" translate="yes" xml:space="preserve">
          <source>Mailbox objects</source>
          <target state="translated">メールボックスオブジェクト</target>
        </trans-unit>
        <trans-unit id="86634cd900d76e4a94c7afdeafd4189dde9eb547" translate="yes" xml:space="preserve">
          <source>Mailcap files are used to configure how MIME-aware applications such as mail readers and Web browsers react to files with different MIME types. (The name &amp;ldquo;mailcap&amp;rdquo; is derived from the phrase &amp;ldquo;mail capability&amp;rdquo;.) For example, a mailcap file might contain a line like &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt;. Then, if the user encounters an email message or Web document with the MIME type &lt;em&gt;video/mpeg&lt;/em&gt;, &lt;code&gt;%s&lt;/code&gt; will be replaced by a filename (usually one belonging to a temporary file) and the &lt;strong&gt;xmpeg&lt;/strong&gt; program can be automatically started to view the file.</source>
          <target state="translated">Mailcapファイルは、メールリーダーやWebブラウザなどのMIME対応アプリケーションが、さまざまなMIMEタイプのファイルにどのように反応するかを設定するために使用されます。 （「mailcap」という名前は、「メール機能」というフレーズに由来します。）たとえば、mailcapファイルには、 &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt; ような行が含まれる場合があります。 xmpeg％s。次に、ユーザーがMIMEタイプが&lt;em&gt;video / mpegの&lt;/em&gt;電子メールメッセージまたはWebドキュメントを&lt;em&gt;見つけた&lt;/em&gt;場合、 &lt;code&gt;%s&lt;/code&gt; はファイル名（通常は一時ファイルに属するもの）に置き換えられ、&lt;strong&gt;xmpeg&lt;/strong&gt;プログラムを自動的に起動してファイルを表示できます。</target>
        </trans-unit>
        <trans-unit id="451a9be697ddead11775c85e4cdec2e8e1e7fccf" translate="yes" xml:space="preserve">
          <source>Maildir is a directory-based mailbox format invented for the qmail mail transfer agent and now widely supported by other programs. Messages in a Maildir mailbox are stored in separate files within a common directory structure. This design allows Maildir mailboxes to be accessed and modified by multiple unrelated programs without data corruption, so file locking is unnecessary.</source>
          <target state="translated">Maildir は qmail メール転送エージェントのために考案されたディレクトリベースのメールボックス形式で、現在では他のプログラムでも広くサポートされています。Maildir メールボックス内のメッセージは、共通のディレクトリ構造の中で別々のファイルに保存されます。この設計により、Maildir メールボックスはデータが破損することなく複数の無関係なプログラムからアクセスしたり変更したりすることができるので、ファイルロックは不要です。</target>
        </trans-unit>
        <trans-unit id="b40e5216a6cda56e75561046f7fd7ba0f11c7e63" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes contain three subdirectories, namely: &lt;code&gt;tmp&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, and &lt;code&gt;cur&lt;/code&gt;. Messages are created momentarily in the &lt;code&gt;tmp&lt;/code&gt; subdirectory and then moved to the &lt;code&gt;new&lt;/code&gt; subdirectory to finalize delivery. A mail user agent may subsequently move the message to the &lt;code&gt;cur&lt;/code&gt; subdirectory and store information about the state of the message in a special &amp;ldquo;info&amp;rdquo; section appended to its file name.</source>
          <target state="translated">Maildirメールボックスには、 &lt;code&gt;tmp&lt;/code&gt; 、 &lt;code&gt;new&lt;/code&gt; 、および &lt;code&gt;cur&lt;/code&gt; の 3つのサブディレクトリが含まれています。メッセージは一時的に &lt;code&gt;tmp&lt;/code&gt; サブディレクトリに作成され、配信を完了するために &lt;code&gt;new&lt;/code&gt; サブディレクトリに移動されます。メールユーザーエージェントは、その後、メッセージを &lt;code&gt;cur&lt;/code&gt; サブディレクトリに移動し、メッセージの状態に関する情報を、ファイル名に付加された特別な「情報」セクションに格納します。</target>
        </trans-unit>
        <trans-unit id="71f497ebb214b9ce15eb874a873e5a71df6ed9c7" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes do not support (or require) locking, so these methods do nothing.</source>
          <target state="translated">Maildir のメールボックスはロックをサポートしていない (または必要としている)ので、これらの方法は何もしません。</target>
        </trans-unit>
        <trans-unit id="cc72f9949f161493c90aa33b348af41b8717a0cf" translate="yes" xml:space="preserve">
          <source>MailmanProxy Objects</source>
          <target state="translated">MailmanProxy オブジェクト</target>
        </trans-unit>
        <trans-unit id="e4e1dbd94f7dcdd2adca3669f8c832e535d92107" translate="yes" xml:space="preserve">
          <source>Main module explicit relative imports</source>
          <target state="translated">メインモジュール 明示的な相対輸入</target>
        </trans-unit>
        <trans-unit id="a63ee5a0ffd4ee7e4f1505d1af22daf8da80898f" translate="yes" xml:space="preserve">
          <source>Main options</source>
          <target state="translated">主なオプション</target>
        </trans-unit>
        <trans-unit id="29c2fbf90a10af24cbd4c4648db9d6379273181c" translate="yes" xml:space="preserve">
          <source>Mainly because of backwards compatibility concerns, &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; provides also a legacy API with explicit &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt; methods. While there are valid use cases for the methods outlined below, mapping protocol access is preferred for new projects. The legacy API is at times more advanced, low-level and downright counterintuitive.</source>
          <target state="translated">主に下位互換性の問題があるため、&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;は明示的な &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; メソッドを備えたレガシーAPIも提供します。以下に概説する方法には有効な使用例がありますが、新しいプロジェクトではマッピングプロトコルアクセスが推奨されます。レガシーAPIは、より高度で低レベルであり、まったく直感的でない場合があります。</target>
        </trans-unit>
        <trans-unit id="4823e55cd98dad58bd2be122640b91ad2d5ed814" translate="yes" xml:space="preserve">
          <source>Major cross-platform (Windows, Mac OS X, Unix-like) GUI toolkits are available for Python:</source>
          <target state="translated">主要なクロスプラットフォーム(Windows、Mac OS X、Unixライク)のGUIツールキットがPythonで利用できます。</target>
        </trans-unit>
        <trans-unit id="79d238209c2cada151fcd2a72d589d9730730983" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt; and case-insensitive matching dependent on the current locale. This flag can be used only with bytes patterns. The use of this flag is discouraged as the locale mechanism is very unreliable, it only handles one &amp;ldquo;culture&amp;rdquo; at a time, and it only works with 8-bit locales. Unicode matching is already enabled by default in Python 3 for Unicode (str) patterns, and it is able to handle different locales/languages. Corresponds to the inline flag &lt;code&gt;(?L)&lt;/code&gt;.</source>
          <target state="translated">メイク &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\W&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\B&lt;/code&gt; と現在のロケールに依存して、大文字と小文字を区別しないマッチング。このフラグは、バイトパターンでのみ使用できます。ロケールのメカニズムは非常に信頼性が低く、一度に1つの「カルチャー」しか処理せず、8ビットのロケールでのみ機能するため、このフラグの使用はお勧めできません。 Python 3では、Unicode（str）パターンのUnicodeマッチングがデフォルトですでに有効になっており、さまざまなロケール/言語を処理できます。インラインフラグ &lt;code&gt;(?L)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="4094168c6f13dde8d4a1402e6d2e892f00c22016" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt; and &lt;code&gt;\S&lt;/code&gt; perform ASCII-only matching instead of full Unicode matching. This is only meaningful for Unicode patterns, and is ignored for byte patterns. Corresponds to the inline flag &lt;code&gt;(?a)&lt;/code&gt;.</source>
          <target state="translated">メイク &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\W&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\B&lt;/code&gt; 、 &lt;code&gt;\d&lt;/code&gt; 、 &lt;code&gt;\D&lt;/code&gt; 、 &lt;code&gt;\s&lt;/code&gt; および &lt;code&gt;\S&lt;/code&gt; ASCIIのみの完全なUnicodeマッチングの代わりに一致行います。これはUnicodeパターンでのみ意味があり、バイトパターンでは無視されます。インラインフラグ &lt;code&gt;(?a)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="2859945e3ed955c0801940559aa8f2fa3e430461" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlCondition&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;ControlCondition&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="e78f1ddb4700c5c26bc5d606246d4a1ea1478dca" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlEvent&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;ControlEvent&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="22e44c261988ea1b3403fdf3cfd43ae89d29b9c4" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;EventMapping&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;EventMapping&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="4968d67864606429422562e4bfe072750713dd88" translate="yes" xml:space="preserve">
          <source>Make an iterator returning elements from the iterable and saving a copy of each. When the iterable is exhausted, return elements from the saved copy. Repeats indefinitely. Roughly equivalent to:</source>
          <target state="translated">イテレート可能な要素を返し、それぞれのコピーを保存するイテレータを作成します。イテレータブルが尽きたら、保存したコピーから要素を返す。無限に繰り返す。大まかにはこれと同等。</target>
        </trans-unit>
        <trans-unit id="a9ae1a5a9224338d48d85639bd5fbf1307db3d17" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables.</source>
          <target state="translated">各イテレータの要素を集約するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="4ecc79480f8b7a91f54bcaea359c899bb7d5a944" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with &lt;em&gt;fillvalue&lt;/em&gt;. Iteration continues until the longest iterable is exhausted. Roughly equivalent to:</source>
          <target state="translated">各イテラブルの要素を集約するイテレータを作成します。&lt;em&gt;イテラブルの&lt;/em&gt;長さが不均一である場合、欠損値は&lt;em&gt;fillvalueで&lt;/em&gt;埋められます。反復は、最も長い反復可能変数がなくなるまで続きます。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="f6d54f93918e62244f26c512e7a161b6bca8eb5a" translate="yes" xml:space="preserve">
          <source>Make an iterator that computes the function using arguments obtained from the iterable. Used instead of &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; when argument parameters are already grouped in tuples from a single iterable (the data has been &amp;ldquo;pre-zipped&amp;rdquo;). The difference between &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#itertools.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt; parallels the distinction between &lt;code&gt;function(a,b)&lt;/code&gt; and &lt;code&gt;function(*c)&lt;/code&gt;. Roughly equivalent to:</source>
          <target state="translated">イテラブルから取得した引数を使用して関数を計算するイテレータを作成します。引数パラメーターが単一の反復可能オブジェクトからのタプルに既にグループ化されている場合（データが「事前圧縮」されている&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;、map（）の代わりに使用されます。&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#itertools.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt;の違いは、 &lt;code&gt;function(a,b)&lt;/code&gt; と &lt;code&gt;function(*c)&lt;/code&gt; の違いに対応しています。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="8c96615ae41b720b59370f4efd4451ca2077afbf" translate="yes" xml:space="preserve">
          <source>Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element. Note, the iterator does not produce &lt;em&gt;any&lt;/em&gt; output until the predicate first becomes false, so it may have a lengthy start-up time. Roughly equivalent to:</source>
          <target state="translated">述語が真である限り、反復可能要素から要素を削除するイテレータを作成します。その後、すべての要素を返します。イテレータは、述語が最初にfalseになるまで出力を生成しないため&lt;em&gt;、&lt;/em&gt;起動時間が長くなる可能性があることに注意してください。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="892281d3f769ea7deb689777f71449bced9b383a" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from &lt;em&gt;data&lt;/em&gt; returning only those that have a corresponding element in &lt;em&gt;selectors&lt;/em&gt; that evaluates to &lt;code&gt;True&lt;/code&gt;. Stops when either the &lt;em&gt;data&lt;/em&gt; or &lt;em&gt;selectors&lt;/em&gt; iterables has been exhausted. Roughly equivalent to:</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; に評価される&lt;em&gt;セレクターに&lt;/em&gt;対応する要素を持つ要素のみを返す&lt;em&gt;データ&lt;/em&gt;から要素をフィルターするイテレータを&lt;em&gt;作成&lt;/em&gt;します。&lt;em&gt;データ&lt;/em&gt;または&lt;em&gt;セレクターの&lt;/em&gt;イテラブルのいずれかがなくなったときに停止します。次とほぼ同等：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffb72f4d4622e4e02475b473a321a110e46112f1" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from iterable returning only those for which the predicate is &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;predicate&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return the items that are false. Roughly equivalent to:</source>
          <target state="translated">述語が &lt;code&gt;False&lt;/code&gt; である要素のみを返す反復可能要素から要素をフィルタリングするイテレータを作成します。&lt;em&gt;述語&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、falseのアイテムを返します。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="a957feb62063c86973f86240f6f0031887c5e9cb" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns &lt;em&gt;object&lt;/em&gt; over and over again. Runs indefinitely unless the &lt;em&gt;times&lt;/em&gt; argument is specified. Used as argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; for invariant parameters to the called function. Also used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to create an invariant part of a tuple record.</source>
          <target state="translated">&lt;em&gt;オブジェクトを&lt;/em&gt;繰り返し返すイテレータを作成します。&lt;em&gt;times&lt;/em&gt;引数が指定されていない限り、無期限に実行されます。呼び出された関数への不変パラメーターの&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;への引数として使用されます。また、&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;と共に使用して、タプルレコードの不変部分を作成します。</target>
        </trans-unit>
        <trans-unit id="5b008cc279ea80916bda0cbd332d0aa7ba0556ec" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns accumulated sums, or accumulated results of other binary functions (specified via the optional &lt;em&gt;func&lt;/em&gt; argument).</source>
          <target state="translated">累積合計、または他のバイナリ関数（オプションの&lt;em&gt;func&lt;/em&gt;引数で指定）の累積結果を返すイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="9f714338584f0b2134e7468a019823beae5537be" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns consecutive keys and groups from the &lt;em&gt;iterable&lt;/em&gt;. The &lt;em&gt;key&lt;/em&gt; is a function computing a key value for each element. If not specified or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;key&lt;/em&gt; defaults to an identity function and returns the element unchanged. Generally, the iterable needs to already be sorted on the same key function.</source>
          <target state="translated">&lt;em&gt;iterable&lt;/em&gt;から連続したキーとグループを返すイテレータを作成します。&lt;em&gt;キーは、&lt;/em&gt;各要素のキー値を計算する関数です。指定されていないか &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;keyは&lt;/em&gt;デフォルトで単位関数になり、変更されていない要素を返します。一般的に、イテラブルは同じキー関数ですでにソートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="59c6932f4ea38a9adb405d00c88d62c4ce199417" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted. Used for treating consecutive sequences as a single sequence. Roughly equivalent to:</source>
          <target state="translated">最初のイテレータブルがなくなるまで、最初のイテレータブルから要素を返し、次のイテレータブルに進み、すべてのイテレータブルがなくなるまでイテレータを作成します。連続したシーケンスを1つのシーケンスとして扱うために使用します。大まかにはこれと同等です。</target>
        </trans-unit>
        <trans-unit id="db17bd2fa6e28e684f31b9a14e54b77456d66135" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the iterable as long as the predicate is true. Roughly equivalent to:</source>
          <target state="translated">述語が真である限り、反復可能な要素を返すイテレータを作成します。大まかにはこれと同等。</target>
        </trans-unit>
        <trans-unit id="0843933413e67d1e5cac3980b5f29ff765b66dc1" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns evenly spaced values starting with number &lt;em&gt;start&lt;/em&gt;. Often used as an argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; to generate consecutive data points. Also, used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to add sequence numbers. Roughly equivalent to:</source>
          <target state="translated">数値&lt;em&gt;startで&lt;/em&gt;始まる等間隔の値を返すイテレータを作成します。多くの場合、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; の&lt;/a&gt;引数として使用され、連続するデータポイントを生成します。また、&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;と共に使用してシーケンス番号を追加します。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="4994f0ea994acf88c67fba065692eb6b5778a17e" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns selected elements from the iterable. If &lt;em&gt;start&lt;/em&gt; is non-zero, then elements from the iterable are skipped until start is reached. Afterward, elements are returned consecutively unless &lt;em&gt;step&lt;/em&gt; is set higher than one which results in items being skipped. If &lt;em&gt;stop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then iteration continues until the iterator is exhausted, if at all; otherwise, it stops at the specified position. Unlike regular slicing, &lt;a href=&quot;#itertools.islice&quot;&gt;&lt;code&gt;islice()&lt;/code&gt;&lt;/a&gt; does not support negative values for &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, or &lt;em&gt;step&lt;/em&gt;. Can be used to extract related fields from data where the internal structure has been flattened (for example, a multi-line report may list a name field on every third line). Roughly equivalent to:</source>
          <target state="translated">イテラブルから選択された要素を返すイテレータを作成します。場合&lt;em&gt;startが&lt;/em&gt;ゼロでスタートが到達するまで、その後のiterableの要素はスキップされます。その後、&lt;em&gt;step&lt;/em&gt;が1より高く設定されて項目がスキップされる場合を除き、要素は連続して返されます。&lt;em&gt;stop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、イテレータがなくなるまで反復が続行されます。それ以外の場合は、指定された位置で停止します。通常のスライスとは異なり、&lt;a href=&quot;#itertools.islice&quot;&gt; &lt;code&gt;islice()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;start&lt;/em&gt;、&lt;em&gt;stop&lt;/em&gt;、または&lt;em&gt;stepの&lt;/em&gt;負の値をサポートしていません&lt;em&gt;&lt;/em&gt;。内部構造がフラット化されているデータから関連フィールドを抽出するために使用できます（たとえば、複数行のレポートでは、3行ごとに名前フィールドがリストされる場合があります）。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="617ef530212f8cbf0f6f805993299c48051459de" translate="yes" xml:space="preserve">
          <source>Make sure &lt;em&gt;nframes&lt;/em&gt; is correct, and close the file if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;. This method is called upon object collection. It will raise an exception if the output stream is not seekable and &lt;em&gt;nframes&lt;/em&gt; does not match the number of frames actually written.</source>
          <target state="translated">&lt;em&gt;nframes&lt;/em&gt;が正しいことを確認し、ファイルが&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;によって開かれた場合はファイルを閉じます。このメソッドは、オブジェクトの収集時に呼び出されます。出力ストリームがシークできず、&lt;em&gt;nframes&lt;/em&gt;が実際に書き込まれたフレームの数と一致しない場合は、例外が発生し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c69a4de6caa709ef6bb8a12e9677e657aca1ef6b" translate="yes" xml:space="preserve">
          <source>Make sure all possible values are tested including invalid ones. This makes sure that not only all valid values are acceptable but also that improper values are handled correctly.</source>
          <target state="translated">無効な値も含めて、すべての可能な値がテストされていることを確認してください。これにより、すべての有効な値が許容されるだけでなく、不適切な値が正しく処理されることを確認します。</target>
        </trans-unit>
        <trans-unit id="a627b5bf841e1ea88d28165d37b866a0870f3704" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">スクリプトが読み取りまたは書き込みを行う必要のあるファイルは、それぞれ「その他」によって読み取り可能または書き込み可能であることを確認してください。それらのモードは、読み取り可能の場合は &lt;code&gt;0o666&lt;/code&gt; 、書き込み可能の場合は &lt;code&gt;0o644&lt;/code&gt; である必要があります。これは、セキュリティ上の理由から、HTTPサーバーは特別な権限なしでユーザー「nobody」としてスクリプトを実行するためです。誰でも読み取り（書き込み、実行）できるファイルのみを読み取り（書き込み、実行）できます。実行時の現在のディレクトリも異なり（通常はサーバーのcgi-binディレクトリです）、環境変数のセットも、ログイン時に取得するものとは異なります。特に、シェルの検索パスを考慮しないでください実行可能ファイル（ &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ）またはPythonモジュール検索パス（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;）を興味深いものに設定する場合。</target>
        </trans-unit>
        <trans-unit id="5de2f6daf567300ef46271ec132a2987bda55e91" translate="yes" xml:space="preserve">
          <source>Make sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).</source>
          <target state="translated">メインモジュールが、意図しない副作用(新しいプロセスの開始など)を引き起こすことなく、新しいPythonインタプリタから安全にインポートできることを確認してください。</target>
        </trans-unit>
        <trans-unit id="9731ad27072d870a7da69ae18e9bb36d5c3dbee3" translate="yes" xml:space="preserve">
          <source>Make sure that your script is readable and executable by &amp;ldquo;others&amp;rdquo;; the Unix file mode should be &lt;code&gt;0o755&lt;/code&gt; octal (use &lt;code&gt;chmod 0755 filename&lt;/code&gt;). Make sure that the first line of the script contains &lt;code&gt;#!&lt;/code&gt; starting in column 1 followed by the pathname of the Python interpreter, for instance:</source>
          <target state="translated">スクリプトが「他の人」から読み取り可能かつ実行可能であることを確認してください。Unixファイルモードは8進数で &lt;code&gt;0o755&lt;/code&gt; にする必要があります（ &lt;code&gt;chmod 0755 filename&lt;/code&gt; を使用）。スクリプトの最初の行に &lt;code&gt;#!&lt;/code&gt; が含まれていることを確認してください。列1から始まり、その後にPythonインタープリターのパス名が続きます。たとえば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="b965c16ca041ae1288bd1a67be9784d3d10d7ad4" translate="yes" xml:space="preserve">
          <source>Make sure the Python interpreter exists and is executable by &amp;ldquo;others&amp;rdquo;.</source>
          <target state="translated">Pythonインタープリターが存在し、「その他」が実行できることを確認してください。</target>
        </trans-unit>
        <trans-unit id="cbab57598b799819458d4a0023b9d15232b16ecd" translate="yes" xml:space="preserve">
          <source>Make sure to clean up after your tests (such as close and remove all temporary files).</source>
          <target state="translated">テストの後には必ずクリーンアップを行ってください(一時ファイルを閉じたり、すべての一時ファイルを削除したりしてください)。</target>
        </trans-unit>
        <trans-unit id="c886a4dcc067f50183f6d9e536df375c4dda88c4" translate="yes" xml:space="preserve">
          <source>Make sure you keep references to &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; objects as long as they are used from C code. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t, and if you don&amp;rsquo;t, they may be garbage collected, crashing your program when a callback is made.</source>
          <target state="translated">Cコードから使用されている限り、&lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt;オブジェクトへの参照を保持するようにしてください。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;はそうしません。もしそうしなければ、それらはガベージコレクションされ、コールバックが行われたときにプログラムがクラッシュする可能性があります。</target>
        </trans-unit>
        <trans-unit id="6d98adddef5c8372a92668121d843f7b67ce4928" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;'.'&lt;/code&gt; special character match any character at all, including a newline; without this flag, &lt;code&gt;'.'&lt;/code&gt; will match anything &lt;em&gt;except&lt;/em&gt; a newline. Corresponds to the inline flag &lt;code&gt;(?s)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'.'&lt;/code&gt; を作る 特殊文字は、改行を含むすべての文字に一致します。このフラグなし、 &lt;code&gt;'.'&lt;/code&gt; 改行&lt;em&gt;以外のすべてに&lt;/em&gt;一致します。インラインフラグ &lt;code&gt;(?s)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="1821d7bf0229ac06606d233650d7f9a8ac16a46b" translate="yes" xml:space="preserve">
          <source>Make the path absolute, resolving any symlinks. A new path object is returned:</source>
          <target state="translated">パスを絶対パスにし、シンボリックリンクを解決します。新しいパスオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="bb60557d6278b81f58c0e2a368efe17839683f2c" translate="yes" xml:space="preserve">
          <source>Make the turtle invisible. It&amp;rsquo;s a good idea to do this while you&amp;rsquo;re in the middle of doing some complex drawing, because hiding the turtle speeds up the drawing observably.</source>
          <target state="translated">カメを見えなくします。亀を非表示にすると描画速度が著しく向上するため、複雑な描画を行っている最中にこれを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8425653f95186dae7b16793ba9c5e6c775aa6fa7" translate="yes" xml:space="preserve">
          <source>Make the turtle visible.</source>
          <target state="translated">亀を見えるようにする。</target>
        </trans-unit>
        <trans-unit id="2b104edc6adc907e507b80dfe4df5940691e17d0" translate="yes" xml:space="preserve">
          <source>Make this feature the current feature of &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt;. New components are automatically added to the default feature, unless a feature is explicitly specified.</source>
          <target state="translated">この機能を&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt;の現在の機能にします。機能が明示的に指定されていない限り、新しいコンポーネントはデフォルトの機能に自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="817dde39e08bc70031f6cc0c99bde032f0727edc" translate="yes" xml:space="preserve">
          <source>Make this path a symbolic link to &lt;em&gt;target&lt;/em&gt;. Under Windows, &lt;em&gt;target_is_directory&lt;/em&gt; must be true (default &lt;code&gt;False&lt;/code&gt;) if the link&amp;rsquo;s target is a directory. Under POSIX, &lt;em&gt;target_is_directory&lt;/em&gt;&amp;rsquo;s value is ignored.</source>
          <target state="translated">このパスを&lt;em&gt;target&lt;/em&gt;へのシンボリックリンクにします。Windowsでは、リンクのターゲットがディレクトリの場合、&lt;em&gt;target_is_directory&lt;/em&gt;はtrue（デフォルトは &lt;code&gt;False&lt;/code&gt; ）でなければなりません。POSIXでは、&lt;em&gt;target_is_directory&lt;/em&gt;の値は無視されます。</target>
        </trans-unit>
        <trans-unit id="0589ca0705dbb10c03f08251a6b8ad92b9066e42" translate="yes" xml:space="preserve">
          <source>Makes a normal distribution instance with &lt;em&gt;mu&lt;/em&gt; and &lt;em&gt;sigma&lt;/em&gt; parameters estimated from the &lt;em&gt;data&lt;/em&gt; using &lt;a href=&quot;#statistics.fmean&quot;&gt;&lt;code&gt;fmean()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#statistics.stdev&quot;&gt;&lt;code&gt;stdev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#statistics.fmean&quot;&gt; &lt;code&gt;fmean()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#statistics.stdev&quot;&gt; &lt;code&gt;stdev()&lt;/code&gt; &lt;/a&gt;を使用して&lt;em&gt;データ&lt;/em&gt;から推定された&lt;em&gt;mu&lt;/em&gt;および&lt;em&gt;sigma&lt;/em&gt;パラメーターで正規分布インスタンスを&lt;em&gt;作成&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="74478c83d77f7f9d3b16b8e25a30c78af412de6d" translate="yes" xml:space="preserve">
          <source>Making a Phonebook</source>
          <target state="translated">電話帳の作成</target>
        </trans-unit>
        <trans-unit id="5c927175b3add69e1fe7dc7bfe7e29837fc73c90" translate="yes" xml:space="preserve">
          <source>Making a Windows executable</source>
          <target state="translated">Windows実行ファイルの作成</target>
        </trans-unit>
        <trans-unit id="855506ce6753b0d9a5b09ffd99dfc10fa3696ea0" translate="yes" xml:space="preserve">
          <source>Manager Widgets</source>
          <target state="translated">マネージャーウィジェット</target>
        </trans-unit>
        <trans-unit id="2a361c4c32a8b1dcdd56014985b930dd04f772a1" translate="yes" xml:space="preserve">
          <source>Manager processes will be shutdown as soon as they are garbage collected or their parent process exits. The manager classes are defined in the &lt;a href=&quot;#module-multiprocessing.managers&quot;&gt;&lt;code&gt;multiprocessing.managers&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">マネージャープロセスは、ガベージコレクションされるか、親プロセスが終了するとすぐにシャットダウンされます。managerクラスは&lt;a href=&quot;#module-multiprocessing.managers&quot;&gt; &lt;code&gt;multiprocessing.managers&lt;/code&gt; &lt;/a&gt;モジュールで定義されています：</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="146be58ae4c0ee3d8c972415be0e7c22bae315f6" translate="yes" xml:space="preserve">
          <source>Managers provide a way to create data which can be shared between different processes, including sharing over a network between processes running on different machines. A manager object controls a server process which manages &lt;em&gt;shared objects&lt;/em&gt;. Other processes can access the shared objects by using proxies.</source>
          <target state="translated">マネージャーは、異なるマシンで実行されているプロセス間でネットワークを介して共有するなど、異なるプロセス間で共有できるデータを作成する方法を提供します。マネージャオブジェクトは、&lt;em&gt;共有オブジェクト&lt;/em&gt;を管理するサーバープロセスを制御します。他のプロセスは、プロキシを使用して共有オブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9da4dac0b16742ede0cd08c5d71857dc8b235645" translate="yes" xml:space="preserve">
          <source>Manual Context Management</source>
          <target state="translated">マニュアルコンテキスト管理</target>
        </trans-unit>
        <trans-unit id="5be972ee604abf1abcdd9643e605d5e6677470aa" translate="yes" xml:space="preserve">
          <source>Manual settings</source>
          <target state="translated">手動設定</target>
        </trans-unit>
        <trans-unit id="343daa0eb5e43f021e62c3c8801d5b10743a76d4" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Linux documentation, are also defined in the socket module.</source>
          <target state="translated">これらの形式の多くの定数はLinuxのドキュメントに記載されていますが、 socketモジュールでも定義されています。</target>
        </trans-unit>
        <trans-unit id="c9a81759bd6fd007d62861d3fabb2bd9fbcb88bd" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Unix documentation on sockets and/or the IP protocol, are also defined in the socket module. They are generally used in arguments to the &lt;code&gt;setsockopt()&lt;/code&gt; and &lt;code&gt;getsockopt()&lt;/code&gt; methods of socket objects. In most cases, only those symbols that are defined in the Unix header files are defined; for a few symbols, default values are provided.</source>
          <target state="translated">ソケットやIPプロトコルに関するUnixのドキュメントに記載されているこれらの形式の多くの定数も、ソケットモジュールで定義されています。これらは通常、ソケットオブジェクトの &lt;code&gt;setsockopt()&lt;/code&gt; および &lt;code&gt;getsockopt()&lt;/code&gt; メソッドの引数で使用されます。ほとんどの場合、Unixヘッダーファイルで定義されているシンボルのみが定義されます。いくつかのシンボルについては、デフォルト値が提供されています。</target>
        </trans-unit>
        <trans-unit id="510dd560760442cac504a2b167911b6a0ab8aa23" translate="yes" xml:space="preserve">
          <source>Many non-threadsafe asyncio APIs (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt;&lt;code&gt;loop.call_at()&lt;/code&gt;&lt;/a&gt; methods) raise an exception if they are called from a wrong thread.</source>
          <target state="translated">スレッドセーフでないasyncio API（&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt; &lt;code&gt;loop.call_at()&lt;/code&gt; &lt;/a&gt;メソッドなど）の多くは、間違ったスレッドから呼び出された場合に例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="815297a48147fd3991e217e62ae1a5520c0cbce5" translate="yes" xml:space="preserve">
          <source>Many of the above classes also have a &lt;code&gt;Unique&lt;/code&gt; variant (for example, &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt;). The only difference is that in the &lt;code&gt;Unique&lt;/code&gt; variant, &lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt;&lt;code&gt;max_count&lt;/code&gt;&lt;/a&gt; is set to 1.</source>
          <target state="translated">上記のクラスの多くには、 &lt;code&gt;Unique&lt;/code&gt; バリアントもあります（たとえば、 &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt; ）。唯一の違いは、 &lt;code&gt;Unique&lt;/code&gt; バリアントでは&lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt; &lt;code&gt;max_count&lt;/code&gt; &lt;/a&gt;が1に設定されていることです。</target>
        </trans-unit>
        <trans-unit id="2163dea9d3d8731a332014be1542cdabce604244" translate="yes" xml:space="preserve">
          <source>Many of the character sets support the same languages. They vary in individual characters (e.g. whether the EURO SIGN is supported or not), and in the assignment of characters to code positions. For the European languages in particular, the following variants typically exist:</source>
          <target state="translated">多 く のキ ャ ラ ク タ セ ッ ト は同 じ 言語に対応 し てい ます。それらは、個々のキ ャ ラ ク タ (例:EURO SIGN に対応しているか否か)や、 コ ー ド 位置へのキ ャ ラ ク タ の割 り 当て方が異な り ます。特に欧州の言語では、以下のようなバリエーションが一般的に存在します。</target>
        </trans-unit>
        <trans-unit id="30ccfa60e5e5281ef43935b1343f2bf376660936" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">次のメソッドの多くは、オプションのキーワードのみの引数&lt;em&gt;ファイルを&lt;/em&gt;取り&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;file&lt;/em&gt;引数を指定する場合は、バイナリ書き込み用に開かれた&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;か、書き込み先のディスク上のファイルの名前のいずれかである必要があります。次に、メソッドはサーバーから返されたデータ（応答行と終了ドットを除く）をファイルに書き込みます。メソッドが通常返す行、タプル、またはオブジェクトのリストは空になります。</target>
        </trans-unit>
        <trans-unit id="ffa4bc0d6f566c5f847060ae6ead4557c906984b" translate="yes" xml:space="preserve">
          <source>Many of the not-very-useful (private to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; rather than the thing being mocked) underscore and double underscore prefixed attributes have been filtered from the result of calling &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. If you dislike this behaviour you can switch it off by setting the module level switch &lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">（にプライベート-非常に-有用ではない多くの&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;事が嘲笑されるのではなく）、アンダースコア、ダブルアンダースコアの接頭辞の属性が呼び出しの結果から除外されている&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;。この動作が&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt; &lt;code&gt;FILTER_DIR&lt;/code&gt; &lt;/a&gt;ない場合は、モジュールレベルのスイッチFILTER_DIRを設定することで、この動作をオフにできます。</target>
        </trans-unit>
        <trans-unit id="d9a47225407eea7973acc57a86154fda62e2e8ed" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">多くのオペレーションには「インプレース」バージョンがあります。以下に示すのは、通常の構文よりもインプレース演算子へのプリミティブなアクセスを提供する関数です。たとえば、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;ステートメント&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; は &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; と同等です。別の言い方をすると、 &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; は複合ステートメント &lt;code&gt;z = x; z += y&lt;/code&gt; と同等です。z + = y。</target>
        </trans-unit>
        <trans-unit id="0775e95d12acf1c76496fc0019dec4ccce66e92a" translate="yes" xml:space="preserve">
          <source>Many other operations also produce lists, including the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; built-in.</source>
          <target state="translated">その他の多くの操作でも、&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;組み込みを含むリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="3892486ba2ca4c1adde5de5ad35763a15238b251" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the &lt;code&gt;svn&lt;/code&gt; program can invoke sub-commands like &lt;code&gt;svn
checkout&lt;/code&gt;, &lt;code&gt;svn update&lt;/code&gt;, and &lt;code&gt;svn commit&lt;/code&gt;. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; supports the creation of such sub-commands with the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method is normally called with no arguments and returns a special action object. This object has a single method, &lt;code&gt;add_parser()&lt;/code&gt;, which takes a command name and any &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor arguments, and returns an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object that can be modified as usual.</source>
          <target state="translated">多くのプログラムは機能をいくつかのサブコマンドに分割します。たとえば、 &lt;code&gt;svn&lt;/code&gt; プログラムは &lt;code&gt;svn checkout&lt;/code&gt; 、 &lt;code&gt;svn update&lt;/code&gt; 、および &lt;code&gt;svn commit&lt;/code&gt; のようなサブコマンドを呼び出すことができます。この方法で機能を分割することは、プログラムがさまざまな種類のコマンドライン引数を必要とするいくつかの異なる機能を実行する場合に特に良い考えです。&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドを使用したこのようなサブコマンドの作成をサポートしています。&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドは、通常、引数なし戻る特別アクション・オブジェクトと呼ばれます。このオブジェクトには &lt;code&gt;add_parser()&lt;/code&gt; という単一のメソッドがあり、コマンド名と任意の&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;コンストラクターの引数。通常どおり変更できる&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="842c3a3980d59e2ccc8a6587608bb5e288adaa34" translate="yes" xml:space="preserve">
          <source>Many sites disable SMTP &lt;code&gt;VRFY&lt;/code&gt; in order to foil spammers.</source>
          <target state="translated">多くのサイトでは、スパマーを &lt;code&gt;VRFY&lt;/code&gt; ためにSMTP VRFYを無効にしています。</target>
        </trans-unit>
        <trans-unit id="84d090f9a4b10c8e70604e91d362e68e7d1715a8" translate="yes" xml:space="preserve">
          <source>Map character sets to their email properties.</source>
          <target state="translated">文字セットを電子メールのプロパティにマップします。</target>
        </trans-unit>
        <trans-unit id="7c158793b0576eb0e99170737dcf651e9b593ba3" translate="yes" xml:space="preserve">
          <source>Mapping Basic Tk into Tkinter</source>
          <target state="translated">基本的なTkをTkinterにマッピング</target>
        </trans-unit>
        <trans-unit id="29b99d5bba5dcab3d3f32602bec9b94930d68f31" translate="yes" xml:space="preserve">
          <source>Mapping Operators to Functions</source>
          <target state="translated">演算子から関数へのマッピング</target>
        </trans-unit>
        <trans-unit id="18d3adef974e9e8a9c707b5522d4ceef6e880500" translate="yes" xml:space="preserve">
          <source>Mapping Protocol Access</source>
          <target state="translated">マッピングプロトコルアクセス</target>
        </trans-unit>
        <trans-unit id="ebd82d89b582db2203963681055d49cb2fdde5e8" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; &lt;code&gt;dict&lt;/code&gt;</source>
          <target state="translated">マッピングタイプ&amp;mdash; &lt;code&gt;dict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5781654b4505c67ba0da3a9924958b822ec242bc" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; dict</source>
          <target state="translated">マッピングタイプ&amp;mdash; dict</target>
        </trans-unit>
        <trans-unit id="0bf0ef93e58f3620e84487a6484aef9dbeeb1def" translate="yes" xml:space="preserve">
          <source>Mapping class that references keys weakly. Entries in the dictionary will be discarded when there is no longer a strong reference to the key. This can be used to associate additional data with an object owned by other parts of an application without adding attributes to those objects. This can be especially useful with objects that override attribute accesses.</source>
          <target state="translated">キーを弱く参照するマッピングクラス。辞書内のエントリは、キーへの強い参照がなくなったときに破棄されます。これは、それらのオブジェクトに属性を追加することなく、アプリケーションの他の部分が所有するオブジェクトに追加のデータを関連付けるために使用することができます。これは、属性アクセスをオーバーライドするオブジェクトで特に便利です。</target>
        </trans-unit>
        <trans-unit id="d7046eea20884db0b40984559cdb957133a9a851" translate="yes" xml:space="preserve">
          <source>Mapping class that references values weakly. Entries in the dictionary will be discarded when no strong reference to the value exists any more.</source>
          <target state="translated">値を弱く参照するマッピングクラス。辞書内のエントリは、値への強い参照がこれ以上存在しない場合に破棄されます。</target>
        </trans-unit>
        <trans-unit id="15922488c98b6104b02093ae02b8e9a1520e3912" translate="yes" xml:space="preserve">
          <source>Mapping key (optional), consisting of a parenthesised sequence of characters (for example, &lt;code&gt;(somename)&lt;/code&gt;).</source>
          <target state="translated">括弧で囲まれた一連の文字で構成されるマッピングキー（オプション）（たとえば、 &lt;code&gt;(somename)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ffbd3fab4e4bbef4f2e2b4baa2dbf3d3454ab70b" translate="yes" xml:space="preserve">
          <source>Mapping protocol access is a generic name for functionality that enables using custom objects as if they were dictionaries. In case of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;, the mapping interface implementation is using the &lt;code&gt;parser['section']['option']&lt;/code&gt; notation.</source>
          <target state="translated">マッピングプロトコルアクセスは、カスタムオブジェクトを辞書のように使用できるようにする機能の総称です。&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; の&lt;/a&gt;場合、マッピングインターフェイスの実装は、 &lt;code&gt;parser['section']['option']&lt;/code&gt; 表記を使用しています。</target>
        </trans-unit>
        <trans-unit id="fc5f87a388e33c8327e76fb56366eadca8297613" translate="yes" xml:space="preserve">
          <source>Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; to the equivalent syslog names, and all other level names to &amp;lsquo;warning&amp;rsquo;.</source>
          <target state="translated">ログレベル名をsyslog優先度名にマップします。カスタムレベルを使用している場合、またはデフォルトのアルゴリズムがニーズに適していない場合は、これをオーバーライドする必要がある場合があります。デフォルトのアルゴリズムは、 &lt;code&gt;DEBUG&lt;/code&gt; 、 &lt;code&gt;INFO&lt;/code&gt; 、 &lt;code&gt;WARNING&lt;/code&gt; 、 &lt;code&gt;ERROR&lt;/code&gt; 、および &lt;code&gt;CRITICAL&lt;/code&gt; を同等のsyslog名にマップし、他のすべてのレベル名を「警告」にマップします。</target>
        </trans-unit>
        <trans-unit id="76ccf4240d86fc261192b90e86fb8e3d610a0808" translate="yes" xml:space="preserve">
          <source>Marc-Andr&amp;eacute; Lemburg</source>
          <target state="translated">マルクアンドレレンブルク</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="78b4b0fca0a8558cdba8df445fed06a9f493ddd2" translate="yes" xml:space="preserve">
          <source>Mark a protocol class as a runtime protocol.</source>
          <target state="translated">プロトコルクラスをランタイムプロトコルとしてマークします。</target>
        </trans-unit>
        <trans-unit id="bdc16c3d4446aea587c961d5bd660311653c4972" translate="yes" xml:space="preserve">
          <source>Mark all lines in the window as unchanged since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウ内のすべての行を、最後に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出してから変更されていないものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="b902da44d0895caa8231cc9e0384c86417f1ce22" translate="yes" xml:space="preserve">
          <source>Mark for refresh but wait. This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen. To accomplish that, call &lt;a href=&quot;#curses.doupdate&quot;&gt;&lt;code&gt;doupdate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">更新のマークを付けますが、お待ちください。この関数は、ウィンドウの望ましい状態を表すデータ構造を更新しますが、物理画面の更新を強制しません。これを行うには、&lt;a href=&quot;#curses.doupdate&quot;&gt; &lt;code&gt;doupdate()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="e559ee62a3983226dcbd83616d76d03181ae0a0b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set an exception.</source>
          <target state="translated">未来を&lt;em&gt;完了&lt;/em&gt;としてマークし、例外を設定します。</target>
        </trans-unit>
        <trans-unit id="645ca0c18193b0ded87798fc215d9dd6ea2d332b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set its result.</source>
          <target state="translated">未来を&lt;em&gt;完了&lt;/em&gt;としてマークし、その結果を設定します。</target>
        </trans-unit>
        <trans-unit id="a99df56423ec62f1dfba367c986811c41a5f6a69" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as disabled.</source>
          <target state="translated">ブレークポイントを無効にします。</target>
        </trans-unit>
        <trans-unit id="e3cef4076875b3fcfd897d8fd8f8b835f2539450" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as enabled.</source>
          <target state="translated">ブレークポイントを有効にします。</target>
        </trans-unit>
        <trans-unit id="ef57eb325f600134e0961a71843953dac27f2aa5" translate="yes" xml:space="preserve">
          <source>Mark the socket closed. The underlying system resource (e.g. a file descriptor) is also closed when all file objects from &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; are closed. Once that happens, all future operations on the socket object will fail. The remote end will receive no more data (after queued data is flushed).</source>
          <target state="translated">ソケットに閉じたマークを付けます。&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;からのすべてのファイルオブジェクトが閉じられると、基礎となるシステムリソース（ファイル記述子など）も閉じられます。これが発生すると、ソケットオブジェクトに対する以降のすべての操作は失敗します。リモートエンドはこれ以上データを受信しません（キューに入れられたデータがフラッシュされた後）。</target>
        </trans-unit>
        <trans-unit id="91570de3be09b7c281d418e67e319eb7eac4ceb0" translate="yes" xml:space="preserve">
          <source>Mark the test as an expected failure. If the test fails it will be considered a success. If the test passes, it will be considered a failure.</source>
          <target state="translated">テストを失敗の可能性があるものとしてマークします。テストが失敗した場合は成功とみなされます。テストが合格した場合は、失敗とみなされます。</target>
        </trans-unit>
        <trans-unit id="fb33120620b42e4c6568086b4548bf56c1a0ef93" translate="yes" xml:space="preserve">
          <source>Marked as important</source>
          <target state="translated">重要なものとしてマークされている</target>
        </trans-unit>
        <trans-unit id="07e5aae18cb637acd22f163aa224ab431ff10cb0" translate="yes" xml:space="preserve">
          <source>Marked for subsequent deletion</source>
          <target state="translated">その後の削除のためにマークされています。</target>
        </trans-unit>
        <trans-unit id="4e44d1a49ab6471526e55a08a843c13a0050773d" translate="yes" xml:space="preserve">
          <source>Martin von L&amp;ouml;wis</source>
          <target state="translated">マーティンフォンロイス</target>
        </trans-unit>
        <trans-unit id="3a6db205066d4b1bbdc6724346fcfa1af498ef02" translate="yes" xml:space="preserve">
          <source>Mask for file owner permissions.</source>
          <target state="translated">ファイルの所有者権限のマスク。</target>
        </trans-unit>
        <trans-unit id="b5fc0001fa738ddce48f31c45c0d3794679d1545" translate="yes" xml:space="preserve">
          <source>Mask for group permissions.</source>
          <target state="translated">グループ権限のマスク。</target>
        </trans-unit>
        <trans-unit id="450210d9790fb16d1dbe9733f4212fbc9774479d" translate="yes" xml:space="preserve">
          <source>Mask for permissions for others (not in group).</source>
          <target state="translated">他の人の許可を得るためのマスク(グループ内ではない)。</target>
        </trans-unit>
        <trans-unit id="0826b4ceb6778b296bb3f36f65361f0cb844377a" translate="yes" xml:space="preserve">
          <source>Match &lt;em&gt;test&lt;/em&gt; to patterns set in &lt;a href=&quot;#test.support.set_match_tests&quot;&gt;&lt;code&gt;set_match_tests()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#test.support.set_match_tests&quot;&gt; &lt;code&gt;set_match_tests()&lt;/code&gt; で&lt;/a&gt;設定されたパターンに&lt;em&gt;テスト&lt;/em&gt;を一致させます。</target>
        </trans-unit>
        <trans-unit id="bb305e9c61f18de73442b09968fd63313bd41a06" translate="yes" xml:space="preserve">
          <source>Match Objects</source>
          <target state="translated">マッチオブジェクト</target>
        </trans-unit>
        <trans-unit id="93224cb05b372360e7ead31f8491156ed05f4cc5" translate="yes" xml:space="preserve">
          <source>Match objects always have a boolean value of &lt;code&gt;True&lt;/code&gt;. Since &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;None&lt;/code&gt; when there is no match, you can test whether there was a match with a simple &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">一致オブジェクトのブール値は常に &lt;code&gt;True&lt;/code&gt; です。以来&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;の戻り &lt;code&gt;None&lt;/code&gt; 一致しないとき、あなたはマッチがシンプルであったかどうかをテストすることができ &lt;code&gt;if&lt;/code&gt; の文：</target>
        </trans-unit>
        <trans-unit id="c7d3fdaa1b461ec568f838ede0d4a6626d22e9f8" translate="yes" xml:space="preserve">
          <source>Match objects support the following methods and attributes:</source>
          <target state="translated">マッチオブジェクトは以下のメソッドと属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="949fae956dd5c3ab00023592a8026f4d3f8d83a0" translate="yes" xml:space="preserve">
          <source>Match this path against the provided glob-style pattern. Return &lt;code&gt;True&lt;/code&gt; if matching is successful, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">このパスを、提供されたglobスタイルのパターンと照合します。マッチングが成功した場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="179f5245f2bff101b819b11ca265a7859b9b8741" translate="yes" xml:space="preserve">
          <source>Matches Unicode whitespace characters (which includes &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;, and also many other characters, for example the non-breaking spaces mandated by typography rules in many languages). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; is matched.</source>
          <target state="translated">Unicodeの空白文字（ &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 、およびその他の多くの文字（たとえば、多くの言語のタイポグラフィルールで義務付けられている改行しないスペース）も含む）に一致します。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; が一致します。</target>
        </trans-unit>
        <trans-unit id="6d38947cd9f594564bec8a24b3a93f3632f7ac2c" translate="yes" xml:space="preserve">
          <source>Matches Unicode word characters; this includes most characters that can be part of a word in any language, as well as numbers and the underscore. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; is matched.</source>
          <target state="translated">Unicode単語文字に一致します。これには、任意の言語で単語の一部になる可能性のあるほとんどの文字、数字、およびアンダースコアが含まれます。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; のみが一致します。</target>
        </trans-unit>
        <trans-unit id="a02ff78bb9f573d06ae9b31f950bd8ca71d47da4" translate="yes" xml:space="preserve">
          <source>Matches any Unicode decimal digit (that is, any character in Unicode character category [Nd]). This includes &lt;code&gt;[0-9]&lt;/code&gt;, and also many other digit characters. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used only &lt;code&gt;[0-9]&lt;/code&gt; is matched.</source>
          <target state="translated">すべてのUnicode 10進数（つまり、Unicode文字カテゴリ[Nd]の任意の文字）に一致します。これには &lt;code&gt;[0-9]&lt;/code&gt; 、およびその他の多くの数字文字が含まれます。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、 &lt;code&gt;[0-9]&lt;/code&gt; のみが一致します。</target>
        </trans-unit>
        <trans-unit id="6faa8f9895eeaa59ee824b76c6784280c5d25e28" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a decimal digit. This is the opposite of &lt;code&gt;\d&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^0-9]&lt;/code&gt;.</source>
          <target state="translated">10進数ではない任意の文字に一致します。これは &lt;code&gt;\d&lt;/code&gt; の逆です。場合は&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これは相当になり &lt;code&gt;[^0-9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="506ee12774fd4c8b11b499d0991f2faec4d49031" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a whitespace character. This is the opposite of &lt;code&gt;\s&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">空白文字以外の任意の文字に一致します。これは &lt;code&gt;\s&lt;/code&gt; 逆です。場合&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これが等価となる &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb667e499cd951fea4ed70cad16b482c6b171c37" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a word character. This is the opposite of &lt;code&gt;\w&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters which are neither alphanumeric in the current locale nor the underscore.</source>
          <target state="translated">単語文字ではない任意の文字に一致します。これは &lt;code&gt;\w&lt;/code&gt; の逆です。場合&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これは等価となる &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt; 。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、現在のロケールで英数字でもアンダースコアでもない文字に一致します。</target>
        </trans-unit>
        <trans-unit id="d684d6a5303e5b104e9d7e1feebac2fca2e629fd" translate="yes" xml:space="preserve">
          <source>Matches any decimal digit; this is equivalent to &lt;code&gt;[0-9]&lt;/code&gt;.</source>
          <target state="translated">10進数と一致します。これは &lt;code&gt;[0-9]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1ec81b9258c564d40fd0ace5573c147f0fc89717" translate="yes" xml:space="preserve">
          <source>Matches characters considered alphanumeric in the ASCII character set; this is equivalent to &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters considered alphanumeric in the current locale and the underscore.</source>
          <target state="translated">ASCII文字セットで英数字と見なされる文字に一致します。これは &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; と同等です。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、現在のロケールとアンダースコアで英数字と見なされる文字に一致します。</target>
        </trans-unit>
        <trans-unit id="79e224040ee5cddbfb21a4d52e1d10cdcc916f03" translate="yes" xml:space="preserve">
          <source>Matches characters considered whitespace in the ASCII character set; this is equivalent to &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">ASCII文字セットで空白と見なされる文字に一致します。これは &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="a5760ea3990de7a6de7c5094a464f1ee8146a643" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; doesn&amp;rsquo;t match next. This is a &lt;em&gt;negative lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; が次に一致しない場合に一致します。これは&lt;em&gt;否定先読み表明&lt;/em&gt;です。たとえば、 &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; は、後に &lt;code&gt;'Asimov'&lt;/code&gt; が&lt;em&gt;ない&lt;/em&gt;場合にのみ &lt;code&gt;'Isaac '&lt;/code&gt; と一致します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="645a3b740373b49f15f59d4fb0d89acad2b7e416" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; matches next, but doesn&amp;rsquo;t consume any of the string. This is called a &lt;em&gt;lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; が次に一致する場合に一致しますが、文字列を消費しません。これは&lt;em&gt;先読みアサーション&lt;/em&gt;と呼ばれます。たとえば、 &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; は、後に &lt;code&gt;'Asimov'&lt;/code&gt; が続く場合にのみ、 &lt;code&gt;'Isaac '&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="9841ece5b3fb751e15c8bcf3e454136a92d6ad87" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is not preceded by a match for &lt;code&gt;...&lt;/code&gt;. This is called a &lt;em&gt;negative lookbehind assertion&lt;/em&gt;. Similar to positive lookbehind assertions, the contained pattern must only match strings of some fixed length. Patterns which start with negative lookbehind assertions may match at the beginning of the string being searched.</source>
          <target state="translated">文字列の現在の位置の前に &lt;code&gt;...&lt;/code&gt; の一致がない場合に一致します。これは&lt;em&gt;否定後読みアサーション&lt;/em&gt;と呼ばれます。ポジティブ後読みアサーションと同様に、含まれるパターンは、一定の長さの文字列とのみ一致する必要があります。否定後読みアサーションで始まるパターンは、検索される文字列の先頭で一致する場合があります。</target>
        </trans-unit>
        <trans-unit id="47ac2333577ba84b6d03fe92bd867d24bbd26ed7" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is preceded by a match for &lt;code&gt;...&lt;/code&gt; that ends at the current position. This is called a &lt;em&gt;positive lookbehind assertion&lt;/em&gt;. &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; will find a match in &lt;code&gt;'abcdef'&lt;/code&gt;, since the lookbehind will back up 3 characters and check if the contained pattern matches. The contained pattern must only match strings of some fixed length, meaning that &lt;code&gt;abc&lt;/code&gt; or &lt;code&gt;a|b&lt;/code&gt; are allowed, but &lt;code&gt;a*&lt;/code&gt; and &lt;code&gt;a{3,4}&lt;/code&gt; are not. Note that patterns which start with positive lookbehind assertions will not match at the beginning of the string being searched; you will most likely want to use the &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; function rather than the &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">文字列の現在の位置の前に、現在の位置で終了する &lt;code&gt;...&lt;/code&gt; の一致がある場合に一致します。これは&lt;em&gt;ポジティブ後読みアサーション&lt;/em&gt;と呼ばれます。 &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; は &lt;code&gt;'abcdef'&lt;/code&gt; で一致を検索します。後読みは3文字バックアップし、含まれているパターンが一致するかどうかを確認するためです。含まれるパターンは、一定の固定長の文字列にのみ一致する必要があります。つまり、 &lt;code&gt;abc&lt;/code&gt; または &lt;code&gt;a|b&lt;/code&gt; は許可されますが &lt;code&gt;a*&lt;/code&gt; および &lt;code&gt;a{3,4}&lt;/code&gt; は許可されません。肯定後読みアサーションで始まるパターンは、検索される文字列の先頭では一致しないことに注意してください。ほとんどの場合、&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;を使用します&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;関数ではなく関数：</target>
        </trans-unit>
        <trans-unit id="8552016e487b5c84ddf4be20f70b50e5f4e56d47" translate="yes" xml:space="preserve">
          <source>Matches only at the end of the string.</source>
          <target state="translated">文字列の最後にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="de268deff53557a1f18b43b0cc932e4c34479169" translate="yes" xml:space="preserve">
          <source>Matches only at the start of the string.</source>
          <target state="translated">文字列の先頭にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="c08d22497155abd5fe50f74938140c4799fbcef4" translate="yes" xml:space="preserve">
          <source>Matches the contents of the group of the same number. Groups are numbered starting from 1. For example, &lt;code&gt;(.+) \1&lt;/code&gt; matches &lt;code&gt;'the the'&lt;/code&gt; or &lt;code&gt;'55 55'&lt;/code&gt;, but not &lt;code&gt;'thethe'&lt;/code&gt; (note the space after the group). This special sequence can only be used to match one of the first 99 groups. If the first digit of &lt;em&gt;number&lt;/em&gt; is 0, or &lt;em&gt;number&lt;/em&gt; is 3 octal digits long, it will not be interpreted as a group match, but as the character with octal value &lt;em&gt;number&lt;/em&gt;. Inside the &lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt; of a character class, all numeric escapes are treated as characters.</source>
          <target state="translated">同じ番号のグループの内容に一致します。グループには1から番号が付けられます。たとえば、 &lt;code&gt;(.+) \1&lt;/code&gt; &lt;code&gt;'the the'&lt;/code&gt; または &lt;code&gt;'55 55'&lt;/code&gt; と一致しますが、 &lt;code&gt;'thethe'&lt;/code&gt; ません（グループの後のスペースに注意してください）。この特別なシーケンスは、最初の99グループの1つに一致するためにのみ使用できます。&lt;em&gt;number&lt;/em&gt;の最初の桁が0であるか、または&lt;em&gt;number&lt;/em&gt;が3桁の8進数である場合、それはグループ一致として解釈されず、8進値&lt;em&gt;numberを&lt;/em&gt;持つ文字として解釈されます。文字クラスの &lt;code&gt;'['&lt;/code&gt; と &lt;code&gt;']'&lt;/code&gt; では、すべての数値エスケープが文字として扱われます。</target>
        </trans-unit>
        <trans-unit id="2eb5aca7d251d2a0725128c63c23538a7b27cad2" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of word characters. Note that formally, &lt;code&gt;\b&lt;/code&gt; is defined as the boundary between a &lt;code&gt;\w&lt;/code&gt; and a &lt;code&gt;\W&lt;/code&gt; character (or vice versa), or between &lt;code&gt;\w&lt;/code&gt; and the beginning/end of the string. This means that &lt;code&gt;r'\bfoo\b'&lt;/code&gt; matches &lt;code&gt;'foo'&lt;/code&gt;, &lt;code&gt;'foo.'&lt;/code&gt;, &lt;code&gt;'(foo)'&lt;/code&gt;, &lt;code&gt;'bar foo baz'&lt;/code&gt; but not &lt;code&gt;'foobar'&lt;/code&gt; or &lt;code&gt;'foo3'&lt;/code&gt;.</source>
          <target state="translated">空の文字列に一致しますが、単語の最初または最後のみです。単語は一連の単語文字として定義されます。正式には、 &lt;code&gt;\b&lt;/code&gt; は &lt;code&gt;\w&lt;/code&gt; と &lt;code&gt;\W&lt;/code&gt; 文字の間（またはその逆）、または &lt;code&gt;\w&lt;/code&gt; と文字列の先頭/末尾の間の境界として定義されていることに注意してください。これは、 &lt;code&gt;r'\bfoo\b'&lt;/code&gt; &lt;code&gt;'foo'&lt;/code&gt; 、 &lt;code&gt;'foo.'&lt;/code&gt; 一致することを意味します。、 &lt;code&gt;'(foo)'&lt;/code&gt; 、 &lt;code&gt;'bar foo baz'&lt;/code&gt; ですが、 &lt;code&gt;'foobar'&lt;/code&gt; または &lt;code&gt;'foo3'&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="c04099b042264b3596a7797564409e8942492883" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only when it is &lt;em&gt;not&lt;/em&gt; at the beginning or end of a word. This means that &lt;code&gt;r'py\B'&lt;/code&gt; matches &lt;code&gt;'python'&lt;/code&gt;, &lt;code&gt;'py3'&lt;/code&gt;, &lt;code&gt;'py2'&lt;/code&gt;, but not &lt;code&gt;'py'&lt;/code&gt;, &lt;code&gt;'py.'&lt;/code&gt;, or &lt;code&gt;'py!'&lt;/code&gt;. &lt;code&gt;\B&lt;/code&gt; is just the opposite of &lt;code&gt;\b&lt;/code&gt;, so word characters in Unicode patterns are Unicode alphanumerics or the underscore, although this can be changed by using the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag. Word boundaries are determined by the current locale if the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used.</source>
          <target state="translated">空の文字列に一致しますが、単語の先頭または末尾に&lt;em&gt;ない&lt;/em&gt;場合のみです。つまり、 &lt;code&gt;r'py\B'&lt;/code&gt; &lt;code&gt;'python'&lt;/code&gt; 、 &lt;code&gt;'py3'&lt;/code&gt; 、 &lt;code&gt;'py2'&lt;/code&gt; と一致しますが、 &lt;code&gt;'py'&lt;/code&gt; 、 &lt;code&gt;'py.'&lt;/code&gt; 一致しません。、または &lt;code&gt;'py!'&lt;/code&gt; 。 &lt;code&gt;\B&lt;/code&gt; は &lt;code&gt;\b&lt;/code&gt; ちょうど反対なので、Unicodeパターンの単語文字はUnicode英数字またはアンダースコアですが、&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグを使用して変更できます。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、単語の境界は現在のロケールによって決定されます。</target>
        </trans-unit>
        <trans-unit id="8ce88cc650b7fe8f97b845a2321d7c2b877f1d7c" translate="yes" xml:space="preserve">
          <source>Matches the end of the string or just before the newline at the end of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches before a newline. &lt;code&gt;foo&lt;/code&gt; matches both &amp;lsquo;foo&amp;rsquo; and &amp;lsquo;foobar&amp;rsquo;, while the regular expression &lt;code&gt;foo$&lt;/code&gt; matches only &amp;lsquo;foo&amp;rsquo;. More interestingly, searching for &lt;code&gt;foo.$&lt;/code&gt; in &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; matches &amp;lsquo;foo2&amp;rsquo; normally, but &amp;lsquo;foo1&amp;rsquo; in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode; searching for a single &lt;code&gt;$&lt;/code&gt; in &lt;code&gt;'foo\n'&lt;/code&gt; will find two (empty) matches: one just before the newline, and one at the end of the string.</source>
          <target state="translated">文字列の末尾または文字列の末尾の改行の直前に一致します&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モードでは、改行の前にも一致します。 &lt;code&gt;foo&lt;/code&gt; は「foo」と「foobar」の両方に一致しますが、正規表現 &lt;code&gt;foo$&lt;/code&gt; は「foo」のみに一致します。さらに興味深いことに、探し &lt;code&gt;foo.$&lt;/code&gt; で &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; マッチ「foo2は」通常、しかしで「foo1は」&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モード。 &lt;code&gt;'foo\n'&lt;/code&gt; で単一の &lt;code&gt;$&lt;/code&gt; を検索すると、2つの（空の）一致が見つかります。1つは改行の直前、もう1つは文字列の末尾です。</target>
        </trans-unit>
        <trans-unit id="2f40daaf0bea10cd0df0f8186bdb340e8b731567" translate="yes" xml:space="preserve">
          <source>Matches whatever regular expression is inside the parentheses, and indicates the start and end of a group; the contents of a group can be retrieved after a match has been performed, and can be matched later in the string with the &lt;code&gt;\number&lt;/code&gt; special sequence, described below. To match the literals &lt;code&gt;'('&lt;/code&gt; or &lt;code&gt;')'&lt;/code&gt;, use &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;, or enclose them inside a character class: &lt;code&gt;[(]&lt;/code&gt;, &lt;code&gt;[)]&lt;/code&gt;.</source>
          <target state="translated">括弧内の正規表現に一致し、グループの開始と終了を示します。グループの内容は、一致の実行後に取得でき、後で説明する &lt;code&gt;\number&lt;/code&gt; 特殊シーケンスを使用して文字列内で後で一致させることができます。リテラル &lt;code&gt;'('&lt;/code&gt; または &lt;code&gt;')'&lt;/code&gt; を一致させるには、 &lt;code&gt;\(&lt;/code&gt; または &lt;code&gt;\)&lt;/code&gt; を使用するか、文字クラス &lt;code&gt;[(]&lt;/code&gt; 、 &lt;code&gt;[)]&lt;/code&gt; で囲みます。</target>
        </trans-unit>
        <trans-unit id="4b4c6577035e177562eb7b5ddae73d04f12d9983" translate="yes" xml:space="preserve">
          <source>Math argument out of domain of func</source>
          <target state="translated">funcのドメイン外の数学引数</target>
        </trans-unit>
        <trans-unit id="10aa065593dbf60ae5f473eae4958b71572dc4ff" translate="yes" xml:space="preserve">
          <source>Math result not representable</source>
          <target state="translated">数学の結果を表現できない</target>
        </trans-unit>
        <trans-unit id="50d207959d02b2a34b183cd7d25f1e0c68bf9ddb" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication</source>
          <target state="translated">行列の乗算</target>
        </trans-unit>
        <trans-unit id="e6d0832e2740dd4bc270c8fb3b3635030afe668d" translate="yes" xml:space="preserve">
          <source>Maximum digest size that the hash function can output.</source>
          <target state="translated">ハッシュ関数が出力できる最大のダイジェストサイズ。</target>
        </trans-unit>
        <trans-unit id="8b4aa5d3e601b7665580a557fd7d301ef9dff186" translate="yes" xml:space="preserve">
          <source>Maximum key size.</source>
          <target state="translated">最大キーサイズ。</target>
        </trans-unit>
        <trans-unit id="014ad729ec1a3537d14c4c998116e97cae28939e" translate="yes" xml:space="preserve">
          <source>Maximum key value</source>
          <target state="translated">最大キー値</target>
        </trans-unit>
        <trans-unit id="fa26260fb5c11969aae03fca4bf169c742f8d389" translate="yes" xml:space="preserve">
          <source>Maximum number of characters in the representation for an integer. Digits are dropped from the middle. The default is &lt;code&gt;40&lt;/code&gt;.</source>
          <target state="translated">整数表現の最大文字数。数字は真ん中から落とされます。デフォルトは &lt;code&gt;40&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f05dad23c52cc0273d437ffe0b4a8a5b8a0e80ef" translate="yes" xml:space="preserve">
          <source>Maximum number of days between changes</source>
          <target state="translated">変更間隔の最大日数</target>
        </trans-unit>
        <trans-unit id="16b74af98dc16ddf608395028b518cb175ab18cd" translate="yes" xml:space="preserve">
          <source>Maximum number of frames stored in the traceback of &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;traces&lt;/code&gt;&lt;/a&gt;: result of the &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; when the snapshot was taken.</source>
          <target state="translated">トレースバックに格納されているフレームの最大数&lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;traces&lt;/code&gt; &lt;/a&gt;：結果&lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt;スナップショットが取られました。</target>
        </trans-unit>
        <trans-unit id="3750177b2f369715ab06bcee508f2caa6b2a6f98" translate="yes" xml:space="preserve">
          <source>Maximum size of a deque or &lt;code&gt;None&lt;/code&gt; if unbounded.</source>
          <target state="translated">デックの最大サイズ、または制限が &lt;code&gt;None&lt;/code&gt; 場合はNone。</target>
        </trans-unit>
        <trans-unit id="edc09d71b5252f3ee59a839aac0b3a820b72242c" translate="yes" xml:space="preserve">
          <source>May be set to &amp;ldquo;normal&amp;rdquo; or &amp;ldquo;disabled&amp;rdquo; to control the &amp;ldquo;disabled&amp;rdquo; state bit. This is a write-only option: setting it changes the widget state, but the &lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt;&lt;code&gt;Widget.state()&lt;/code&gt;&lt;/a&gt; method does not affect this option.</source>
          <target state="translated">「通常」または「無効」に設定して、「無効」状態ビットを制御できます。これは書き込み専用オプションです。設定するとウィジェットの状態が変更されますが、&lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt; &lt;code&gt;Widget.state()&lt;/code&gt; &lt;/a&gt;メソッドはこのオプションに影響しません。</target>
        </trans-unit>
        <trans-unit id="44a80b227c8f186870813bca412da9ebe084f150" translate="yes" xml:space="preserve">
          <source>May be used to specify a custom widget style.</source>
          <target state="translated">カスタムウィジェットのスタイルを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="31c4d73c6f4d4e4fbb6fe638e8af4924410068ed" translate="yes" xml:space="preserve">
          <source>May raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上げることができる&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="16093585733797b25f46218a91e9a1ef038fedd8" translate="yes" xml:space="preserve">
          <source>Measures of spread</source>
          <target state="translated">普及対策</target>
        </trans-unit>
        <trans-unit id="b628e9468e6b5c28d9838c0202c4f602cfb4f6b1" translate="yes" xml:space="preserve">
          <source>Measures the agreement between two normal probability distributions. Returns a value between 0.0 and 1.0 giving &lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;the overlapping area for the two probability density functions&lt;/a&gt;.</source>
          <target state="translated">2つの正規確率分布間の一致を測定します。&lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;2つの確率密度関数の重複領域&lt;/a&gt;を示す 0.0〜1.0の値を返します。</target>
        </trans-unit>
        <trans-unit id="2898c2eb7b2e66e1c44ea89bdae559774210425b" translate="yes" xml:space="preserve">
          <source>Median (middle value) of data.</source>
          <target state="translated">データの中央値(中間値)。</target>
        </trans-unit>
        <trans-unit id="b6a8553e4cbb05abe2fbc605e92f832712ef5d58" translate="yes" xml:space="preserve">
          <source>Median, or 50th percentile, of grouped data.</source>
          <target state="translated">グループ化されたデータの中央値、または50パーセンタイル。</target>
        </trans-unit>
        <trans-unit id="47c80fcea8456971f1641f17561f060ec99c498a" translate="yes" xml:space="preserve">
          <source>Member values can be anything: &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.. If the exact value is unimportant you may use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; instances and an appropriate value will be chosen for you. Care must be taken if you mix &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; with other values.</source>
          <target state="translated">メンバーの値は何でもかまいません：&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;など。正確な値が重要でない場合は、&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;インスタンスを使用でき、適切な値が選択されます。&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;と他の値を混合する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="f10615a852f71e51e70484e62589e76d80a6cbee" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;呼び出しをタプルとして&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd0eafe15e6e45f2a4f843e0333ccf3a417c5e3c" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;呼び出しをタプルとして&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ba39158a8386393f5da73f9deb9c5f902a6dd693" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;呼び出しをタプルとして&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5d52065f33aba0940b046e017d4e1dcd357c9062" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">母集団のメンバーは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ&lt;/a&gt;可能である必要も、一意である必要もありません。母集団にリピートが含まれている場合、各オカレンスはサンプルの可能な選択です。</target>
        </trans-unit>
        <trans-unit id="1e0dfc18cc7a4d06e7cad57a7f6fafa7090ff04a" translate="yes" xml:space="preserve">
          <source>Memory BIO Support</source>
          <target state="translated">メモリBIOサポート</target>
        </trans-unit>
        <trans-unit id="e80f9fe1d0c17d864aa78913d1c28ea30f56c51b" translate="yes" xml:space="preserve">
          <source>Memory Views</source>
          <target state="translated">メモリの表示</target>
        </trans-unit>
        <trans-unit id="f72fc48377945075aece3d0f77f039dde8e3ab08" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">メモリマップファイルオブジェクトは、&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;両方のように動作します。&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;が期待されるほとんどの場所でmmapオブジェクトを使用できます。たとえば、&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;モジュールを使用して、メモリマップファイルを検索できます。 &lt;code&gt;obj[index] = 97&lt;/code&gt; 実行して1バイトを変更するか、スライスに割り当てることでサブシーケンスを変更することもできます： &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; 。また、現在のファイル位置からデータを読み書きしたり、ファイルを介して別の位置に &lt;code&gt;seek()&lt;/code&gt; したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="05dce2bca4952d4d30be9caea65daf4119c522a0" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects support the following methods:</source>
          <target state="translated">メモリマップされたファイルオブジェクトは、以下のメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ccdfc54c3dfcff33f3b84cd29c470c9f9dd72513" translate="yes" xml:space="preserve">
          <source>MemoryError</source>
          <target state="translated">MemoryError</target>
        </trans-unit>
        <trans-unit id="042180098555538da1846becefee4991e4e008c7" translate="yes" xml:space="preserve">
          <source>MemoryHandler</source>
          <target state="translated">MemoryHandler</target>
        </trans-unit>
        <trans-unit id="3a9d4b4b179ca00907fee8d914427c890923e689" translate="yes" xml:space="preserve">
          <source>Menu indexes (menu.invoke(), menu.entryconfig(), etc.)</source>
          <target state="translated">メニューインデックス (menu.invoke()、menu.entryconfig()など)</target>
        </trans-unit>
        <trans-unit id="e7c3800e31ff2e7695b9f5bed95a6de6715dca44" translate="yes" xml:space="preserve">
          <source>Menus</source>
          <target state="translated">Menus</target>
        </trans-unit>
        <trans-unit id="cc82aa47255cb19590a5531d1e61e840f195f669" translate="yes" xml:space="preserve">
          <source>Merge in data from another &lt;a href=&quot;#trace.CoverageResults&quot;&gt;&lt;code&gt;CoverageResults&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">別の&lt;a href=&quot;#trace.CoverageResults&quot;&gt; &lt;code&gt;CoverageResults&lt;/code&gt; &lt;/a&gt;オブジェクトのデータをマージします。</target>
        </trans-unit>
        <trans-unit id="fc96ea9dd703090ebbbff6f4d36c249d4f4d2c14" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">複数のソート済み入力を単一のソート済み出力にマージします（たとえば、複数のログファイルのタイムスタンプ付きのエントリをマージします）。ソートされた値の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;反復子&lt;/a&gt;を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
